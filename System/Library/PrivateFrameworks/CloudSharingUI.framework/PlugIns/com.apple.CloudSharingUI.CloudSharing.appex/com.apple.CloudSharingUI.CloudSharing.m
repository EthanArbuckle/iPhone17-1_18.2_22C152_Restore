void sub_1000064C0(uint64_t a1)
{
  id v1;
  uint64_t vars8;

  v1 = [*(id *)(a1 + 32) addressView];
  [v1 becomeFirstResponder];
}

void sub_1000067B8(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) addressView];
  [v1 becomeFirstResponder];
}

void sub_100006B1C(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) addressView];
  [v1 becomeFirstResponder];
}

void sub_100006BB4(id a1)
{
  id v3 = objc_alloc_init((Class)CNContactStoreConfiguration);
  [v3 setIncludeIncludeManagedAppleIDs:1];
  id v1 = [objc_alloc((Class)CNContactStore) initWithConfiguration:v3];
  v2 = (void *)qword_10010F0D0;
  qword_10010F0D0 = (uint64_t)v1;

  [(id)qword_10010F0D0 requestAccessForEntityType:0 completionHandler:&stru_1000FEFA8];
}

id sub_100006CB8(void *a1, void *a2, void *a3, int a4, int a5)
{
  id v9 = a1;
  unint64_t v10 = a2;
  unint64_t v11 = a3;
  v12 = +[CNMonogrammer descriptorForRequiredKeysIncludingImage:1];
  v28[0] = v12;
  v13 = +[CNContactFormatter descriptorForRequiredKeysForStyle:0];
  v28[1] = v13;
  v28[2] = CNContactEmailAddressesKey;
  v28[3] = CNContactPhoneNumbersKey;
  v14 = +[CNContactViewController descriptorForRequiredKeys];
  v28[4] = v14;
  v15 = +[NSArray arrayWithObjects:v28 count:5];

  v16 = 0;
  id v17 = 0;
  if (v10 && a4)
  {
    v18 = +[CNContact predicateForContactsMatchingEmailAddress:v10];
    id v27 = 0;
    v19 = [v9 unifiedContactsMatchingPredicate:v18 keysToFetch:v15 error:&v27];
    id v17 = v27;
    v16 = [v19 firstObject];
  }
  if (v16 || !a5)
  {
LABEL_11:
    if (v16) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v10 | v11)
  {
    if (v11)
    {
      id v20 = (id)v11;
    }
    else
    {
      id v20 = +[CNPhoneNumber phoneNumberWithStringValue:v10];
    }
    v21 = v20;
    v22 = +[CNContact predicateForContactsMatchingPhoneNumber:v20];
    id v26 = v17;
    v23 = [v9 unifiedContactsMatchingPredicate:v22 keysToFetch:v15 error:&v26];
    id v24 = v26;

    v16 = [v23 firstObject];

    id v17 = v24;
    goto LABEL_11;
  }
LABEL_12:
  v16 = +[CNContact contactWithDisplayName:0 emailOrPhoneNumber:v10];
LABEL_13:

  return v16;
}

id sub_100007174(uint64_t a1)
{
  return _[*(id *)(a1 + 32) updateSearchResults:*(void *)(a1 + 40) changes:*(void *)(a1 + 48)];
}

void sub_100007244(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 72) count];
  id v3 = *(void **)(a1 + 32);
  if (v2)
  {
    v4 = [v3 searchResultTable];
    double v5 = 1.0;
  }
  else
  {
    v6 = [v3 addressView];
    v7 = [v6 text];
    id v8 = [v7 length];

    if (v8) {
      return;
    }
    v4 = [*(id *)(a1 + 32) searchResultTable];
    double v5 = 0.0;
  }
  id v9 = v4;
  [v4 setAlpha:v5];
}

void sub_1000083E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100008404(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  v6 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v8 = [WeakRetained presentingViewController];
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_100008508;
  v10[3] = &unk_1000FEFF8;
  objc_copyWeak(&v12, v6);
  char v13 = a2;
  id v9 = v5;
  id v11 = v9;
  [v8 dismissViewControllerAnimated:1 completion:v10];

  objc_destroyWeak(&v12);
}

void sub_1000084F4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100008508(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v2 = [WeakRetained completion];

  if (v2)
  {
    id v3 = [WeakRetained completion];
    v3[2](v3, *(unsigned __int8 *)(a1 + 48), *(void *)(a1 + 32));
  }
}

void sub_100008710(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_fault_impl(a1, a2, OS_LOG_TYPE_FAULT, a4, &a9, 0xCu);
}

id cdui_default_log()
{
  if (qword_10010F0E0 != -1) {
    dispatch_once(&qword_10010F0E0, &stru_1000FF040);
  }
  v0 = (void *)qword_10010F0E8;

  return v0;
}

void sub_100008B9C(id a1)
{
  qword_10010F0E8 = (uint64_t)os_log_create("com.apple.CloudDocsUI", "default");

  _objc_release_x1();
}

uint64_t sub_100008FCC(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = a2;
  v4 = [v2 existingRecipients];
  id v5 = [v3 address];

  uint64_t v6 = [v4 containsObject:v5] ^ 1;
  return v6;
}

void sub_100009268(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 40) copy];
  uint64_t v4 = *(void *)(a1 + 32);
  id v5 = *(void **)(v4 + 48);
  *(void *)(v4 + 48) = v3;

  uint64_t v6 = +[NSMutableArray arrayWithCapacity:](NSMutableArray, "arrayWithCapacity:", [*(id *)(a1 + 40) count]);
  v7 = +[CNMonogrammer descriptorForRequiredKeysIncludingImage:1];
  v17[0] = v7;
  id v8 = +[CNContactFormatter descriptorForRequiredKeysForStyle:0];
  v17[1] = v8;
  v17[2] = CNContactEmailAddressesKey;
  uint64_t v9 = +[NSArray arrayWithObjects:v17 count:3];

  uint64_t v10 = *(void *)(a1 + 32);
  id v11 = *(void **)(v10 + 48);
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  v14[2] = sub_100009428;
  v14[3] = &unk_1000FF090;
  v14[4] = v10;
  id v15 = v9;
  id v16 = v6;
  id v12 = v6;
  id v13 = v9;
  [v11 enumerateObjectsUsingBlock:v14];
  [*(id *)(a1 + 32) processUpdate:v12 changedObjects:0];
}

void sub_100009428(uint64_t a1, void *a2)
{
  id v8 = a2;
  if (([v8 isGroup] & 1) == 0)
  {
    id v3 = *(void **)(*(void *)(a1 + 32) + 16);
    uint64_t v4 = [v8 contact];
    id v5 = [v4 identifier];
    uint64_t v6 = [v3 unifiedContactWithIdentifier:v5 keysToFetch:*(void *)(a1 + 40) error:0];

    if (v6) {
      [v8 setContact:v6];
    }
    v7 = objc_opt_new();
    [v7 setComposeRecipient:v8];
    [*(id *)(a1 + 48) addObject:v7];
  }
}

id sub_100009810(double a1, double a2)
{
  id v5 = (objc_class *)type metadata accessor for _UIPreferredContentSizeRelayingNavigationController();
  v16.receiver = v2;
  v16.super_class = v5;
  objc_msgSendSuper2(&v16, "preferredContentSize");
  double v7 = v6;
  double v9 = v8;
  v15.receiver = v2;
  v15.super_class = v5;
  objc_msgSendSuper2(&v15, "setPreferredContentSize:", a1, a2);
  id result = [v2 preferredContentSize];
  if (v7 != v12 || v9 != v11)
  {
    v14 = *(void (**)(char *, _UNKNOWN **))&v2[OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing51_UIPreferredContentSizeRelayingNavigationController_preferredContentSizeDidChangeHandler];
    if (v14)
    {
      swift_retain();
      v14(v2, &off_1000FF948);
      return (id)sub_100013344((uint64_t)v14);
    }
  }
  return result;
}

id sub_100009ADC()
{
  return sub_100009E38(type metadata accessor for _UIPreferredContentSizeRelayingNavigationController);
}

uint64_t type metadata accessor for _UIPreferredContentSizeRelayingNavigationController()
{
  return self;
}

id sub_100009B2C(uint64_t a1, uint64_t a2, void *a3)
{
  type metadata accessor for _UIPreferredContentSizeRelayingNavigationController();
  id v6 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  double v7 = v3;
  id v8 = [v6 init];
  *(void *)&v7[OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing28_UIViewServiceViewController_containedNavController] = v8;
  double v9 = (char *)v8;

  if (a2)
  {
    NSString v10 = sub_1000C7400();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v10 = 0;
  }
  v17.receiver = v7;
  v17.super_class = (Class)type metadata accessor for _UIViewServiceViewController();
  id v11 = objc_msgSendSuper2(&v17, "initWithNibName:bundle:", v10, a3);

  uint64_t v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v13 = (void (**)(void *))&v9[OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing51_UIPreferredContentSizeRelayingNavigationController_preferredContentSizeDidChangeHandler];
  uint64_t v14 = *(void *)&v9[OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing51_UIPreferredContentSizeRelayingNavigationController_preferredContentSizeDidChangeHandler];
  void *v13 = sub_10001333C;
  v13[1] = (void (*)(void *))v12;
  id v15 = v11;
  swift_retain();
  sub_100013344(v14);

  swift_release();
  return v15;
}

void sub_100009C74(void *a1)
{
  swift_beginAccess();
  Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v3 = Strong;
    [a1 preferredContentSize];
    objc_msgSend(v3, "setPreferredContentSize:");
  }
}

id sub_100009E20()
{
  return sub_100009E38(type metadata accessor for _UIViewServiceViewController);
}

id sub_100009E38(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, "dealloc");
}

uint64_t type metadata accessor for _UIViewServiceViewController()
{
  return self;
}

id sub_100009F2C(uint64_t a1, uint64_t a2, void *a3)
{
  ObjectType = (objc_class *)swift_getObjectType();
  double v7 = &v3[OBJC_IVAR___CloudSharingViewController_itemUTI];
  void *v7 = 0;
  v7[1] = 0;
  id v8 = &v3[OBJC_IVAR___CloudSharingViewController_appName];
  *id v8 = 0;
  v8[1] = 0;
  v3[OBJC_IVAR___CloudSharingViewController_isFolderSharing] = 0;
  double v9 = &v3[OBJC_IVAR___CloudSharingViewController_explicitOrURLName];
  *double v9 = 0;
  v9[1] = 0;
  NSString v10 = &v3[OBJC_IVAR___CloudSharingViewController_ckClientRootFolderName];
  *NSString v10 = 0;
  v10[1] = 0;
  id v11 = &v3[OBJC_IVAR___CloudSharingViewController_ckClientFolderSubitemName];
  *id v11 = 0;
  v11[1] = 0;
  *(void *)&v3[OBJC_IVAR___CloudSharingViewController_appBundleSubscriber] = 0;
  type metadata accessor for CKShareModel();
  swift_allocObject();
  uint64_t v12 = v3;
  uint64_t v13 = sub_1000853EC();
  type metadata accessor for OptionsModel();
  swift_allocObject();
  uint64_t v14 = sub_10001CB20(v13);
  type metadata accessor for SharingModel();
  swift_allocObject();
  *(void *)&v12[OBJC_IVAR___CloudSharingViewController_model] = sub_10005375C((uint64_t)v14);

  if (a2)
  {
    NSString v15 = sub_1000C7400();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v15 = 0;
  }
  v18.receiver = v12;
  v18.super_class = ObjectType;
  id v16 = objc_msgSendSuper2(&v18, "initWithNibName:bundle:", v15, a3);

  return v16;
}

uint64_t sub_10000A0D8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t (*a5)(uint64_t, uint64_t, void *))
{
  if (a3)
  {
    uint64_t v7 = sub_1000C7440();
    uint64_t v9 = v8;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v9 = 0;
  }
  id v10 = a4;
  return a5(v7, v9, a4);
}

uint64_t sub_10000A1F4()
{
  if ([v0 _remoteViewControllerProxy])
  {
    sub_1000C7880();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v3, 0, sizeof(v3));
  }
  sub_100012898((uint64_t)v3, (uint64_t)v4, (uint64_t *)&unk_10010D400);
  if (v5)
  {
    sub_100012854((uint64_t *)&unk_10010AFB0);
    if (swift_dynamicCast()) {
      return v2;
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_10001326C((uint64_t)v4, (uint64_t *)&unk_10010D400);
    return 0;
  }
}

void sub_10000A370()
{
  v9.receiver = v0;
  v9.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v9, "viewDidLoad");
  id v1 = [v0 view];
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = [self systemGroupedBackgroundColor];
    [v2 setBackgroundColor:v3];

    uint64_t v4 = *(void *)&v0[OBJC_IVAR___CloudSharingViewController_model];
    *(void *)(v4 + 48) = sub_10001236C(&qword_10010B030, v5, (void (*)(uint64_t))type metadata accessor for CloudSharingViewController);
    swift_unknownObjectWeakAssign();
    id v6 = v0;
    swift_retain();
    sub_1000C68A0();
    swift_release();

    *(void *)(swift_allocObject() + 16) = v6;
    id v7 = objc_allocWithZone((Class)sub_100012854(&qword_10010B038));
    v6;
    uint64_t v8 = (void *)sub_1000C6D40();
    sub_10000A54C(v8);
    sub_10006B03C();
  }
  else
  {
    __break(1u);
  }
}

void sub_10000A54C(void *a1)
{
  uint64_t v2 = v1;
  id v4 = [a1 view];
  if (!v4) {
    goto LABEL_17;
  }
  id v40 = v4;
  [v1 addChildViewController:a1];
  id v5 = [v1 view];
  if (!v5)
  {
    __break(1u);
    goto LABEL_12;
  }
  id v6 = v5;
  [v5 bounds];
  double v8 = v7;
  double v10 = v9;
  double v12 = v11;
  double v14 = v13;

  objc_msgSend(v40, "setFrame:", v8, v10, v12, v14);
  id v15 = [v2 view];
  if (!v15)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  id v16 = v15;
  [v15 addSubview:v40];

  [v40 setTranslatesAutoresizingMaskIntoConstraints:0];
  sub_100012854(&qword_10010BD50);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1000CAB80;
  id v18 = [v2 view];
  if (!v18)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v19 = v18;
  id v20 = [v18 leadingAnchor];

  id v21 = [v40 leadingAnchor];
  id v22 = [v20 constraintEqualToAnchor:v21];

  *(void *)(v17 + 32) = v22;
  id v23 = [v2 view];
  if (!v23)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  id v24 = v23;
  id v25 = [v23 trailingAnchor];

  id v26 = [v40 trailingAnchor];
  id v27 = [v25 constraintEqualToAnchor:v26];

  *(void *)(v17 + 40) = v27;
  id v28 = [v2 view];
  if (!v28)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v29 = v28;
  id v30 = [v28 topAnchor];

  id v31 = [v40 topAnchor];
  id v32 = [v30 constraintEqualToAnchor:v31];

  *(void *)(v17 + 48) = v32;
  id v33 = [v2 view];
  if (!v33)
  {
LABEL_16:
    __break(1u);
LABEL_17:
    sub_1000C7980();
    __break(1u);
    return;
  }
  v34 = v33;
  v35 = self;
  id v36 = [v34 bottomAnchor];

  id v37 = [v40 bottomAnchor];
  id v38 = [v36 constraintEqualToAnchor:v37];

  *(void *)(v17 + 56) = v38;
  sub_1000C7550();
  sub_1000132C8(0, &qword_10010B050);
  Class isa = sub_1000C7530().super.isa;
  swift_bridgeObjectRelease();
  [v35 activateConstraints:isa];

  [a1 didMoveToParentViewController:v2];
}

void *sub_10000A9D0(char a1)
{
  v11.receiver = v1;
  v11.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v11, "viewWillAppear:", a1 & 1);
  unint64_t v3 = sub_10000B4D8();
  if (v4)
  {
    uint64_t v5 = v3;
    uint64_t v6 = v4;
  }
  else
  {
    id v7 = [v1 _hostApplicationBundleIdentifier];
    if (v7)
    {
      double v8 = v7;
      uint64_t v5 = sub_1000C7440();
      uint64_t v6 = v9;
    }
    else
    {
      uint64_t v5 = 0;
      uint64_t v6 = 0;
    }
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000C67F0();
  id result = (void *)sub_10000A1F4();
  if (result)
  {
    objc_msgSend(result, "_requestContentSize:", 375.0, 636.0, v5, v6);
    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

id sub_10000AB50()
{
  ObjectType = (objc_class *)swift_getObjectType();
  sub_10000AB98();
  v3.receiver = v0;
  v3.super_class = ObjectType;
  return objc_msgSendSuper2(&v3, "dealloc");
}

uint64_t sub_10000AB98()
{
  uint64_t v0 = sub_100012854((uint64_t *)&unk_10010BDD0);
  uint64_t v1 = __chkstk_darwin(v0 - 8);
  v39 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v35 - v4;
  uint64_t v6 = __chkstk_darwin(v3);
  v42 = (char *)&v35 - v7;
  uint64_t v8 = __chkstk_darwin(v6);
  id v40 = (char *)&v35 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v41 = (uint64_t)&v35 - v11;
  __chkstk_darwin(v10);
  double v13 = (char *)&v35 - v12;
  uint64_t v14 = sub_1000C6530();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  id v38 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v19 = (char *)&v35 - v18;
  swift_getKeyPath();
  swift_getKeyPath();
  char v44 = 0;
  swift_retain();
  sub_1000C67F0();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  id v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v20(v13, 1, v14) == 1) {
    return sub_10001326C((uint64_t)v13, (uint64_t *)&unk_10010BDD0);
  }
  id v37 = v5;
  id v36 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  v36(v19, v13, v14);
  BOOL v22 = sub_1000C6500();
  v43 = v19;
  sub_1000C64C0(v23);
  id v25 = v24;
  id v26 = objc_msgSend(v24, "br_physicalURL");

  if (v26)
  {
    id v27 = v40;
    sub_1000C64F0();

    uint64_t v28 = (uint64_t)v27;
    v29 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56);
    v29(v28, 0, 1, v14);
  }
  else
  {
    v29 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56);
    uint64_t v28 = (uint64_t)v40;
    v29((uint64_t)v40, 1, 1, v14);
  }
  uint64_t v30 = v41;
  sub_100012898(v28, v41, (uint64_t *)&unk_10010BDD0);
  if (v22) {
    sub_1000C64E0();
  }
  if (v20((char *)v30, 1, v14) == 1)
  {
    sub_10001326C(v30, (uint64_t *)&unk_10010BDD0);
  }
  else
  {
    id v31 = v38;
    v36(v38, (char *)v30, v14);
    sub_1000C64E0();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v31, v14);
  }
  uint64_t v32 = (uint64_t)v37;
  uint64_t v33 = (uint64_t)v39;
  sub_1000C64E0();
  uint64_t v34 = (uint64_t)v42;
  v29((uint64_t)v42, 1, 1, v14);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000128FC(v34, v33);
  swift_retain();
  sub_1000C67F0();
  sub_100060DBC(v32);
  sub_10001326C(v34, (uint64_t *)&unk_10010BDD0);
  sub_10001326C(v32, (uint64_t *)&unk_10010BDD0);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v43, v14);
}

uint64_t sub_10000B248()
{
  uint64_t v1 = sub_100012854((uint64_t *)&unk_10010AFF0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_1000C6690();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  uint64_t v10 = &v13[-v9];
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  if (v13[15] == 9)
  {
    uint64_t v0 = *(void *)(v0 + OBJC_IVAR___CloudSharingViewController_itemUTI + 8);
    if (v0)
    {
      swift_bridgeObjectRetain();
      sub_1000C66A0();
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
      {
        sub_10001326C((uint64_t)v3, (uint64_t *)&unk_10010AFF0);
        LOBYTE(v0) = 0;
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v5 + 32))(v10, v3, v4);
        sub_1000C6650();
        LOBYTE(v0) = sub_1000C6670();
        uint64_t v11 = *(void (**)(unsigned char *, uint64_t))(v5 + 8);
        v11(v8, v4);
        v11(v10, v4);
      }
    }
  }
  else if (*(void *)(v0 + OBJC_IVAR___CloudSharingViewController_ckClientRootFolderName + 8))
  {
    LOBYTE(v0) = *(void *)(v0 + OBJC_IVAR___CloudSharingViewController_ckClientFolderSubitemName + 8) == 0;
  }
  else
  {
    LOBYTE(v0) = 0;
  }
  return v0 & 1;
}

unint64_t sub_10000B4D8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  if (v3)
  {
    sub_1000C77E0();
    sub_1000132C8(0, (unint64_t *)&qword_10010B028);
    sub_1000C7740();
    swift_bridgeObjectRelease();
    if (v4)
    {
      if (v3 == (void *)0x7365676170 && v4 == 0xE500000000000000 || (sub_1000C7A50() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        unint64_t v0 = 0x6C7070612E6D6F63;
      }
      else if (v3 == (void *)0x737265626D756ELL && v4 == 0xE700000000000000 || (sub_1000C7A50() & 1) != 0)
      {
        unint64_t v0 = 0xD000000000000011;
        swift_bridgeObjectRelease();
      }
      else
      {
        if (v3 == (void *)7955819 && v4 == 0xE300000000000000)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          char v2 = sub_1000C7A50();
          swift_bridgeObjectRelease();
          if ((v2 & 1) == 0)
          {
            unint64_t v0 = 0;
            goto LABEL_13;
          }
        }
        unint64_t v0 = 0xD000000000000011;
      }
    }
    else
    {
      unint64_t v0 = 0;
    }
LABEL_13:

    return v0;
  }
  return 0;
}

uint64_t sub_10000B740()
{
  v1[3] = v0;
  v1[4] = sub_1000C75D0();
  v1[5] = sub_1000C75C0();
  char v2 = (void *)swift_task_alloc();
  v1[6] = v2;
  void *v2 = v1;
  v2[1] = sub_10000B7F0;
  return sub_10000BAF8();
}

uint64_t sub_10000B7F0(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 56) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v7 = sub_1000C7590();
    uint64_t v9 = v8;
    uint64_t v10 = sub_10000BA94;
  }
  else
  {
    *(void *)(v6 + 64) = a2;
    *(void *)(v6 + 72) = a1;
    uint64_t v7 = sub_1000C7590();
    uint64_t v9 = v11;
    uint64_t v10 = sub_10000B97C;
  }
  return _swift_task_switch(v10, v7, v9);
}

uint64_t sub_10000B97C()
{
  uint64_t v1 = (void *)v0[8];
  uint64_t v2 = (void *)v0[9];
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  v0[2] = v2;
  swift_retain();
  id v3 = v2;
  sub_1000C67F0();
  swift_retain();
  id v4 = v1;
  sub_100083E94(v1, 0);

  swift_release();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_10000BA94()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10000BAF8()
{
  v1[4] = v0;
  v1[5] = sub_1000C75D0();
  v1[6] = sub_1000C75C0();
  uint64_t v3 = sub_1000C7590();
  v1[7] = v3;
  v1[8] = v2;
  return _swift_task_switch(sub_10000BB94, v3, v2);
}

uint64_t sub_10000BB94()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = sub_1000C75C0();
  v0[9] = v2;
  uint64_t v3 = swift_task_alloc();
  v0[10] = v3;
  *(void *)(v3 + 16) = v1;
  id v4 = (void *)swift_task_alloc();
  v0[11] = v4;
  uint64_t v5 = sub_100012854(&qword_10010AFD0);
  void *v4 = v0;
  v4[1] = sub_10000BCA8;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 2, v2, &protocol witness table for MainActor, 0xD000000000000021, 0x80000001000D3900, sub_100012974, v3, v5);
}

uint64_t sub_10000BCA8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 56);
    uint64_t v4 = *(void *)(v2 + 64);
    uint64_t v5 = sub_10000BE34;
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    uint64_t v3 = *(void *)(v2 + 56);
    uint64_t v4 = *(void *)(v2 + 64);
    uint64_t v5 = sub_10000BDCC;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_10000BDCC()
{
  swift_release();
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v3(v1, v2);
}

uint64_t sub_10000BE34()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_10000BEAC(uint64_t a1)
{
  uint64_t v2 = sub_100012854(&qword_10010AFD8);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2);
  uint64_t v5 = sub_10000A1F4();
  if (v5)
  {
    uint64_t v6 = (void *)v5;
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
    unint64_t v7 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    uint64_t v8 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v8 + v7, (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
    aBlock[4] = sub_100012988;
    aBlock[5] = v8;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10000C140;
    aBlock[3] = &unk_1000FF990;
    uint64_t v9 = _Block_copy(aBlock);
    swift_release();
    [v6 _requestSavedShareWithCompletion:v9];
    swift_unknownObjectRelease();
    _Block_release(v9);
  }
}

uint64_t sub_10000C068(void *a1, void *a2)
{
  if (a1 && a2)
  {
    id v3 = a1;
    id v4 = a2;
    sub_100012854(&qword_10010AFD8);
    return sub_1000C75B0();
  }
  else
  {
    sub_100012A24();
    swift_allocError();
    *(void *)uint64_t v6 = 0xD000000000000021;
    *(void *)(v6 + 8) = 0x80000001000D3900;
    *(_OWORD *)(v6 + 16) = xmmword_1000CAB90;
    *(void *)(v6 + 32) = 0x80000001000D3960;
    *(unsigned char *)(v6 + 40) = 10;
    sub_100012854(&qword_10010AFD8);
    return sub_1000C75A0();
  }
}

void sub_10000C140(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

void sub_10000C1E8(uint64_t a1, uint64_t a2, void *a3, const char *a4, uint64_t a5)
{
  id v27 = a4;
  uint64_t v10 = sub_1000C66D0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (uint64_t *)&v5[*a3];
  uint64_t *v14 = a1;
  v14[1] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1000C66B0();
  uint64_t v15 = v5;
  uint64_t v16 = sub_1000C66C0();
  os_log_type_t v17 = sub_1000C7690();
  if (!os_log_type_enabled(v16, v17))
  {

    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    goto LABEL_5;
  }
  os_log_t v22 = v16;
  uint64_t v23 = v11;
  uint64_t v24 = v10;
  uint64_t v25 = a5;
  uint64_t v26 = a1;
  uint64_t v18 = (uint8_t *)swift_slowAlloc();
  uint64_t v29 = swift_slowAlloc();
  *(_DWORD *)uint64_t v18 = 136315138;
  unint64_t v19 = v14[1];
  if (v19)
  {
    uint64_t v20 = *v14;
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_1000720D0(v20, v19, &v29);
    sub_1000C7850();

    swift_bridgeObjectRelease();
    os_log_t v21 = v22;
    _os_log_impl((void *)&_mh_execute_header, v22, v17, v27, v18, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v23 + 8))(v13, v24);
    a1 = v26;
LABEL_5:
    swift_bridgeObjectRetain();
    swift_retain();
    sub_100012E3C(a1, a2);
    swift_release();
    swift_bridgeObjectRelease();
    return;
  }

  __break(1u);
}

uint64_t sub_10000C49C(void *a1, uint64_t a2, uint64_t a3, void *a4, const char *a5, uint64_t a6)
{
  if (a3)
  {
    uint64_t v10 = sub_1000C7440();
    uint64_t v12 = v11;
  }
  else
  {
    uint64_t v10 = 0;
    uint64_t v12 = 0;
  }
  id v13 = a1;
  sub_10000C1E8(v10, v12, a4, a5, a6);

  return swift_bridgeObjectRelease();
}

uint64_t sub_10000C580(void *a1)
{
  uint64_t v79 = sub_1000C6370();
  uint64_t v78 = *(void *)(v79 - 8);
  uint64_t v2 = __chkstk_darwin(v79);
  uint64_t v76 = (uint64_t)&v69 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v69 - v4;
  uint64_t v6 = sub_100012854((uint64_t *)&unk_10010BDD0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v72 = (uint64_t)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v83 = (uint64_t)&v69 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  v84 = (char *)&v69 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  v82 = (char *)&v69 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  os_log_type_t v17 = (char *)&v69 - v16;
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = (char *)&v69 - v19;
  __chkstk_darwin(v18);
  uint64_t v85 = (uint64_t)&v69 - v21;
  uint64_t v22 = sub_1000C6530();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v69 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v69 - v27;
  id v29 = [a1 url];
  sub_1000C64F0();

  BOOL v81 = sub_1000C6500();
  BOOL v30 = sub_1000C6500();
  sub_1000C64C0(v31);
  uint64_t v33 = v32;
  id v34 = objc_msgSend(v32, "br_physicalURL");

  if (v34)
  {
    sub_1000C64F0();

    uint64_t v35 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v23 + 56);
    id v36 = v20;
    uint64_t v37 = 0;
  }
  else
  {
    uint64_t v35 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v23 + 56);
    id v36 = v20;
    uint64_t v37 = 1;
  }
  v74 = v35;
  v35((uint64_t)v36, v37, 1, v22);
  uint64_t v38 = (uint64_t)v20;
  uint64_t v39 = v85;
  sub_100012898(v38, v85, (uint64_t *)&unk_10010BDD0);
  uint64_t v40 = v78;
  if (v30) {
    sub_1000C64E0();
  }
  sub_1000128FC(v39, (uint64_t)v17);
  uint64_t v41 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
  uint64_t v71 = v23 + 48;
  v70 = v41;
  if (v41((uint64_t)v17, 1, v22) == 1)
  {
    sub_10001326C((uint64_t)v17, (uint64_t *)&unk_10010BDD0);
    BOOL v75 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v26, v17, v22);
    BOOL v75 = sub_1000C6500();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v26, v22);
  }
  uint64_t v77 = v23;
  uint64_t v86 = v22;
  sub_100012854((uint64_t *)&unk_10010B000);
  uint64_t inited = swift_initStackObject();
  long long v73 = xmmword_1000CABA0;
  *(_OWORD *)(inited + 16) = xmmword_1000CABA0;
  *(void *)(inited + 32) = NSURLLocalizedNameKey;
  v43 = NSURLLocalizedNameKey;
  char v44 = sub_100072F30(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy();
  URL.evictionSafeResourceValues(forKeys:)((uint64_t)v44, (uint64_t)v5);
  swift_bridgeObjectRelease();
  uint64_t v45 = sub_1000C6330();
  uint64_t v47 = v46;
  v48 = *(void (**)(char *, uint64_t))(v40 + 8);
  v49 = v5;
  uint64_t v50 = v79;
  v48(v49, v79);
  uint64_t v51 = v80;
  v52 = (uint64_t *)(v80 + OBJC_IVAR___CloudSharingViewController_explicitOrURLName);
  uint64_t *v52 = v45;
  v52[1] = v47;
  swift_bridgeObjectRelease();
  uint64_t v53 = swift_initStackObject();
  *(_OWORD *)(v53 + 16) = v73;
  *(void *)(v53 + 32) = NSURLTypeIdentifierKey;
  v54 = NSURLTypeIdentifierKey;
  v55 = sub_100072F30(v53);
  swift_setDeallocating();
  swift_arrayDestroy();
  uint64_t v56 = v76;
  URL.evictionSafeResourceValues(forKeys:)((uint64_t)v55, v76);
  swift_bridgeObjectRelease();
  uint64_t v57 = sub_1000C6340();
  uint64_t v59 = v58;
  v48((char *)v56, v50);
  v60 = (uint64_t *)(v51 + OBJC_IVAR___CloudSharingViewController_itemUTI);
  uint64_t *v60 = v57;
  v60[1] = v59;
  swift_bridgeObjectRelease();
  uint64_t v61 = v77;
  uint64_t v62 = (uint64_t)v82;
  uint64_t v63 = v86;
  (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v82, v28, v86);
  v74(v62, 0, 1, v63);
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v64 = (uint64_t)v84;
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000128FC(v62, v83);
  swift_retain();
  sub_1000C67F0();
  sub_100060DBC(v64);
  sub_10001326C(v62, (uint64_t *)&unk_10010BDD0);
  sub_10001326C(v64, (uint64_t *)&unk_10010BDD0);
  swift_getKeyPath();
  swift_getKeyPath();
  LOBYTE(v87) = 1;
  swift_retain();
  sub_1000C67F0();
  uint64_t v65 = v85;
  if (v75)
  {
    uint64_t v66 = v72;
    sub_1000128FC(v85, v72);
    uint64_t v67 = v86;
    if (v70(v66, 1, v86) == 1)
    {
      sub_10001326C(v66, (uint64_t *)&unk_10010BDD0);
    }
    else
    {
      sub_1000C64E0();
      (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v66, v67);
    }
  }
  sub_10001326C(v65, (uint64_t *)&unk_10010BDD0);
  if (v81) {
    sub_1000C64E0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v28, v86);
}

uint64_t sub_10000CFB4(void *a1, void *a2)
{
  uint64_t v3 = v2;
  swift_retain();
  sub_100083E94(a2, 0);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000C67F0();
  if (a1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v20 = (uint64_t)a1;
    id v6 = a1;
    swift_retain();
    sub_1000C67F0();
    id v7 = v6;
    sub_1000C77C0();
    uint64_t v8 = sub_1000C77F0();

    swift_bridgeObjectRelease();
    if (v8)
    {
      sub_100012854(&qword_10010BEA0);
      if (swift_dynamicCast())
      {
        id v9 = objc_allocWithZone((Class)UIImage);
        sub_100012AF4(v20, v21);
        Class isa = sub_1000C6540().super.isa;
        id v11 = [v9 initWithData:isa];
        sub_100012A9C(v20, v21);

        if (v11)
        {
          swift_getKeyPath();
          swift_getKeyPath();
          swift_retain();
          sub_1000C67F0();
        }
        sub_100012A9C(v20, v21);
      }
    }
    id v12 = v7;
    sub_1000C77D0();
    uint64_t v13 = sub_1000C77F0();

    swift_bridgeObjectRelease();
    if (v13)
    {
      self;
      if (swift_dynamicCastObjCClass())
      {
        uint64_t v14 = sub_1000C7440();
        uint64_t v16 = v15;
        swift_unknownObjectRelease();

        os_log_type_t v17 = (uint64_t *)(v3 + OBJC_IVAR___CloudSharingViewController_explicitOrURLName);
        *os_log_type_t v17 = v14;
        v17[1] = v16;
        swift_bridgeObjectRelease();
        goto LABEL_12;
      }
      swift_unknownObjectRelease();
    }
  }
LABEL_12:
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000C67F0();
  char v18 = sub_10000B248() & 1;
  *(unsigned char *)(v3 + OBJC_IVAR___CloudSharingViewController_isFolderSharing) = v18;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000C67F0();
  return sub_10004E1A8();
}

uint64_t sub_10000D374(uint64_t a1)
{
  uint64_t v2 = sub_1000C66D0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v22 = a1;
  swift_retain();
  sub_1000C67F0();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  if (v22)
  {
    if ((v22 & 2) == 0)
    {
      unint64_t v7 = v22 & 4;
      if ((v22 & 4) != 0) {
        uint64_t v8 = 3;
      }
      else {
        uint64_t v8 = 2;
      }
      uint64_t v6 = 1;
      if ((v22 & 8) == 0) {
        goto LABEL_16;
      }
      goto LABEL_17;
    }
    uint64_t v6 = 3;
  }
  else if ((v22 & 2) != 0)
  {
    uint64_t v6 = 2;
  }
  else
  {
    uint64_t v6 = 0;
  }
  unint64_t v7 = v22 & 4;
  if ((v22 & 4) != 0) {
    uint64_t v8 = 3;
  }
  else {
    uint64_t v8 = 2;
  }
  if ((v22 & 8) == 0) {
LABEL_16:
  }
    uint64_t v8 = v7 >> 2;
LABEL_17:
  id v9 = [objc_allocWithZone((Class)CKAllowedSharingOptions) initWithAllowedParticipantPermissionOptions:v8 allowedParticipantAccessOptions:v6];
  sub_1000C66B0();
  id v10 = v9;
  id v11 = sub_1000C66C0();
  os_log_type_t v12 = sub_1000C7690();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136315394;
    uint64_t v20 = v2;
    uint64_t v14 = sub_100089C00();
    uint64_t v21 = sub_1000720D0(v14, v15, &v22);
    sub_1000C7850();

    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2080;
    uint64_t v16 = sub_100089D38();
    uint64_t v21 = sub_1000720D0(v16, v17, &v22);
    sub_1000C7850();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "_setAvailablePermissions options-- access: %s, permission: %s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v20);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

uint64_t sub_10000D734(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v14 = sub_1000C6690();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  unint64_t v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a4)
  {
    char v18 = (void *)(v7 + OBJC_IVAR___CloudSharingViewController_explicitOrURLName);
    void *v18 = a3;
    v18[1] = a4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  if (a6)
  {
    uint64_t v19 = (void *)(v7 + OBJC_IVAR___CloudSharingViewController_itemUTI);
    void *v19 = a5;
    v19[1] = a6;
    swift_bridgeObjectRetain();
  }
  else
  {
    sub_1000C6660();
    uint64_t v20 = sub_1000C65C0();
    uint64_t v22 = v21;
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    uint64_t v23 = (uint64_t *)(v7 + OBJC_IVAR___CloudSharingViewController_itemUTI);
    uint64_t *v23 = v20;
    v23[1] = v22;
  }
  swift_bridgeObjectRelease();
  if (a2 >> 60 != 15)
  {
    id v24 = objc_allocWithZone((Class)UIImage);
    sub_100012AF4(a1, a2);
    Class isa = sub_1000C6540().super.isa;
    id v26 = [v24 initWithData:isa];

    swift_getKeyPath();
    swift_getKeyPath();
    id v29 = v26;
    swift_retain();
    sub_1000C67F0();
    sub_100012A88(a1, a2);
  }
  swift_getKeyPath();
  swift_getKeyPath();
  char v32 = 1;
  swift_retain();
  sub_1000C67F0();
  swift_getKeyPath();
  swift_getKeyPath();
  char v31 = 1;
  swift_retain();
  sub_1000C67F0();
  char v27 = sub_10000B248() & 1;
  *(unsigned char *)(v7 + OBJC_IVAR___CloudSharingViewController_isFolderSharing) = v27;
  swift_getKeyPath();
  swift_getKeyPath();
  char v30 = v27;
  swift_retain();
  sub_1000C67F0();
  return sub_10004E1A8();
}

uint64_t sub_10000DE68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3) {
    sub_1000C7440();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_1000C67F0();
}

uint64_t sub_10000DF20()
{
  return sub_1000C67F0();
}

uint64_t type metadata accessor for CloudSharingViewController()
{
  return self;
}

void type metadata accessor for MFMailComposeResult(uint64_t a1)
{
}

void type metadata accessor for ActivityType(uint64_t a1)
{
}

void type metadata accessor for URLResourceKey(uint64_t a1)
{
}

uint64_t sub_10000E000@<X0>(uint64_t *a1@<X8>)
{
  swift_getObjectType();
  uint64_t result = sub_1000C6790();
  *a1 = result;
  return result;
}

uint64_t sub_10000E040()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  uint64_t result = sub_10000A1F4();
  if (result)
  {
    uint64_t v1 = (void *)result;
    if (v4 == 9
      || (swift_getKeyPath(),
          swift_getKeyPath(),
          swift_retain(),
          sub_1000C67E0(),
          swift_release(),
          swift_release(),
          swift_release(),
          !v3))
    {
      id v2 = 0;
    }
    else
    {
      id v2 = [v3 _copyWithoutPersonalInfo];
    }
    [v1 _shareDidChange:v2];

    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_10000E170(uint64_t a1, unsigned __int8 a2)
{
  int v2 = a2;
  sub_10000AB98();
  if (v2 == 3)
  {
    id v3 = (void *)sub_10000A1F4();
    if (v3)
    {
      [v3 _shareWasMadePrivate];
      swift_unknownObjectRelease();
    }
  }
  uint64_t result = sub_10000A1F4();
  if (result)
  {
    uint64_t v5 = (void *)result;
    uint64_t v6 = (void *)sub_1000C6480();
    [v5 _dismissViewControllerWithError:v6];

    return swift_unknownObjectRelease();
  }
  return result;
}

id sub_10000E21C()
{
  uint64_t v1 = sub_1000C66D0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v3);
  uint64_t v7 = __chkstk_darwin(v6);
  id v9 = (char *)&v61 - v8;
  uint64_t v10 = __chkstk_darwin(v7);
  os_log_type_t v12 = (char *)&v61 - v11;
  __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v61 - v14;
  if (*(unsigned char *)(v0 + OBJC_IVAR___CloudSharingViewController_isFolderSharing) == 1)
  {
    sub_1000C66B0();
    uint64_t v16 = sub_1000C66C0();
    os_log_type_t v17 = sub_1000C7690();
    if (os_log_type_enabled(v16, v17))
    {
      char v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v18 = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "iOS: using folder icon for folder sharing appIcon", v18, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v2 + 8))(v15, v1);
    NSString v19 = sub_1000C7400();
    id v20 = [self imageNamed:v19];

    return v20;
  }
  uint64_t v68 = v13;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  unint64_t v21 = v72;
  if (!v72)
  {
    sub_1000C66B0();
    uint64_t v41 = sub_1000C66C0();
    os_log_type_t v42 = sub_1000C7690();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v43 = 0;
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "iOS appIcon returning nil because appBundleID is nil", v43, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
    return 0;
  }
  uint64_t v22 = (uint64_t)v71;
  id v73 = 0;
  id v23 = objc_allocWithZone((Class)ISIcon);
  swift_bridgeObjectRetain();
  uint64_t v64 = v22;
  NSString v24 = sub_1000C7400();
  swift_bridgeObjectRelease();
  id v25 = [v23 initWithBundleIdentifier:v24];

  id v26 = [self mainScreen];
  [v26 scale];
  double v28 = v27;

  id v29 = objc_msgSend(objc_allocWithZone((Class)ISImageDescriptor), "initWithSize:scale:", 128.0, 128.0, v28);
  id v30 = [v25 imageForDescriptor:v29];
  id v66 = v25;
  uint64_t v67 = v2;
  id v65 = v29;
  if (!v30)
  {
    id v44 = 0;
    uint64_t v45 = v68;
LABEL_23:
    sub_1000C66B0();
    id v54 = v44;
    swift_bridgeObjectRetain();
    id v55 = v54;
    uint64_t v56 = sub_1000C66C0();
    os_log_type_t v57 = sub_1000C7690();
    if (os_log_type_enabled(v56, v57))
    {
      unint64_t v63 = v1;
      uint64_t v58 = swift_slowAlloc();
      uint64_t v59 = (void *)swift_slowAlloc();
      id v62 = (id)swift_slowAlloc();
      id v71 = v62;
      *(_DWORD *)uint64_t v58 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v69 = sub_1000720D0(v64, v21, (uint64_t *)&v71);
      sub_1000C7850();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v58 + 12) = 2112;
      if (v44)
      {
        uint64_t v69 = (uint64_t)v55;
        id v60 = v55;
      }
      else
      {
        uint64_t v69 = 0;
      }
      sub_1000C7850();
      *uint64_t v59 = v44;

      _os_log_impl((void *)&_mh_execute_header, v56, v57, "iOS appIcon: appBundleID: %s, icon: %@", (uint8_t *)v58, 0x16u);
      sub_100012854((uint64_t *)&unk_10010B1E0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, unint64_t))(v67 + 8))(v68, v63);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v45, v1);
    }
    swift_beginAccess();
    return v73;
  }
  unint64_t v63 = v21;
  id v71 = v30;
  id v31 = v30;
  unsigned int v32 = [v31 placeholder];
  id v33 = v31;
  id v62 = v31;
  if (v32)
  {
    id v34 = [v25 prepareImageForDescriptor:v29];
    uint64_t v35 = v31;
    if (v34)
    {
      id v36 = v34;

      id v71 = v36;
      uint64_t v35 = v36;
    }
    sub_1000C66B0();
    uint64_t v37 = v35;
    uint64_t v38 = sub_1000C66C0();
    os_log_type_t v39 = sub_1000C7690();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v40 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v40 = 67109120;
      LODWORD(v70) = [v37 placeholder];
      sub_1000C7850();

      _os_log_impl((void *)&_mh_execute_header, v38, v39, "iOS appIcon placeholder;  did prepareImage(forDescriptor:), is still placeHolder: %{BOOL}d",
        v40,
        8u);
      swift_slowDealloc();
    }
    else
    {

      uint64_t v38 = v37;
    }

    (*(void (**)(char *, uint64_t))(v67 + 8))(v12, v1);
    id v33 = v71;
    id v25 = v66;
  }
  sub_1000C66B0();
  uint64_t v46 = v33;
  uint64_t v47 = sub_1000C66C0();
  os_log_type_t v48 = sub_1000C7690();
  if (os_log_type_enabled(v47, v48))
  {
    v49 = (uint8_t *)swift_slowAlloc();
    uint64_t v61 = (void *)swift_slowAlloc();
    *(_DWORD *)v49 = 138412290;
    v70 = v46;
    uint64_t v50 = v46;
    sub_1000C7850();
    *uint64_t v61 = v46;

    _os_log_impl((void *)&_mh_execute_header, v47, v48, "iOS appIcon image: %@", v49, 0xCu);
    sub_100012854((uint64_t *)&unk_10010B1E0);
    swift_arrayDestroy();
    swift_slowDealloc();
    id v25 = v66;
    swift_slowDealloc();
  }
  else
  {

    uint64_t v47 = v46;
  }
  uint64_t v45 = v68;

  uint64_t v2 = v67;
  (*(void (**)(char *, uint64_t))(v67 + 8))(v9, v1);
  swift_beginAccess();
  id v51 = v71;
  id result = [v71 CGImage];
  unint64_t v21 = v63;
  if (result)
  {
    uint64_t v53 = result;
    id v44 = [objc_allocWithZone((Class)UIImage) initWithCGImage:result];

    id v73 = v44;
    goto LABEL_23;
  }
  __break(1u);
  return result;
}

uint64_t sub_10000EBAC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  uint64_t result = swift_release();
  if (v7 == 9)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1000C67E0();
    swift_release();
    uint64_t result = swift_release();
    if (!v6)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      sub_1000C67E0();
      swift_release();
      swift_release();
      swift_release();
      if (v5)
      {
        if ([v5 publicPermission] == (id)1)
        {
          id v2 = [v5 participants];
          sub_1000132C8(0, (unint64_t *)&unk_10010B070);
          unint64_t v3 = sub_1000C7540();

          if (v3 >> 62)
          {
            swift_bridgeObjectRetain();
            sub_1000C7990();

            swift_bridgeObjectRelease_n();
          }
          else
          {
            swift_bridgeObjectRelease();
          }
        }
        else
        {
        }
      }
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      sub_1000C67F0();
      char v4 = sub_10000B248() & 1;
      *(unsigned char *)(v0 + OBJC_IVAR___CloudSharingViewController_isFolderSharing) = v4;
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      sub_1000C67F0();
      return sub_10004E1A8();
    }
  }
  return result;
}

void *sub_10000EE50()
{
  uint64_t v1 = sub_100012854(&qword_10010B770);
  __chkstk_darwin(v1 - 8);
  unint64_t v3 = (char *)v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100012854((uint64_t *)&unk_10010BDD0);
  uint64_t v5 = __chkstk_darwin(v4);
  char v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = (char *)v28 - v9;
  __chkstk_darwin(v8);
  os_log_type_t v12 = (char *)v28 - v11;
  uint64_t v13 = *(void *)(v0 + OBJC_IVAR___CloudSharingViewController_model);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  uint64_t v14 = swift_release();
  if ((v32 & 0xFE) == 8)
  {
    id v30 = v3;
    v28[1] = OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__rootFolderURL;
    __chkstk_darwin(v14);
    uint64_t v29 = v0;
    v28[-2] = v4;
    unint64_t v15 = sub_1000131C4();
    v28[-1] = v15;
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    v28[-2] = v4;
    v28[-1] = v15;
    swift_getKeyPath();
    swift_retain();
    sub_1000C67E0();
    swift_release();
    swift_release();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1000C67E0();
    swift_release();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1000128FC((uint64_t)v12, (uint64_t)v7);
    swift_retain();
    sub_1000C67F0();
    sub_100060DBC((uint64_t)v10);
    sub_10001326C((uint64_t)v12, (uint64_t *)&unk_10010BDD0);
    sub_10001326C((uint64_t)v10, (uint64_t *)&unk_10010BDD0);
    uint64_t v17 = sub_1000C6530();
    char v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
    v18(v12, 1, 1, v17);
    sub_1000128FC((uint64_t)v12, (uint64_t)v10);
    swift_retain();
    sub_1000108C0((uint64_t)v10);
    swift_release();
    sub_10001326C((uint64_t)v12, (uint64_t *)&unk_10010BDD0);
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v31 = 0;
    swift_retain_n();
    sub_1000C67F0();
    v18(v12, 1, 1, v17);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1000128FC((uint64_t)v12, (uint64_t)v10);
    swift_retain();
    sub_1000C67F0();
    sub_10001326C((uint64_t)v12, (uint64_t *)&unk_10010BDD0);
    swift_release();
    uint64_t v19 = v29;
    id v20 = (void *)(v29 + OBJC_IVAR___CloudSharingViewController_ckClientFolderSubitemName);
    *id v20 = 0;
    v20[1] = 0;
    swift_bridgeObjectRelease();
    unint64_t v21 = (void *)(v19 + OBJC_IVAR___CloudSharingViewController_ckClientRootFolderName);
    void *v21 = 0;
    v21[1] = 0;
    swift_bridgeObjectRelease();
    uint64_t v22 = (uint64_t)v30;
    sub_1000C75E0();
    uint64_t v23 = sub_1000C7600();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v22, 0, 1, v23);
    sub_1000C75D0();
    swift_retain();
    uint64_t v24 = sub_1000C75C0();
    id v25 = (void *)swift_allocObject();
    v25[2] = v24;
    v25[3] = &protocol witness table for MainActor;
    v25[4] = v13;
    sub_1000BD2A0(v22, (uint64_t)&unk_10010B1F0, (uint64_t)v25);
    return (void *)swift_release();
  }
  else
  {
    sub_10000AB98();
    double v27 = (void *)sub_10000A1F4();
    if (v27)
    {
      [v27 _cloudSharingControllerDidActivateShowSharedFolder];
      swift_unknownObjectRelease();
    }
    uint64_t result = (void *)sub_10000A1F4();
    if (result)
    {
      [result _dismissViewControllerWithError:0];
      return (void *)swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_10000F3C4(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  if (sub_10000A1F4())
  {
    uint64_t v8 = (void *)swift_dynamicCastObjCProtocolConditional();
    if (v8)
    {
      uint64_t v9 = v8;
      if (objc_msgSend(v8, "respondsToSelector:", "_cloudSharingControllerDidActivateAddPeopleWithRemoteSourceX:y:width:height:", &OBJC_PROTOCOL____TtP37com_apple_CloudSharingUI_CloudSharing39_UIShareInvitationViewControllerHostSPI_))
      {
        v16.origin.x = a1;
        v16.origin.y = a2;
        v16.size.width = a3;
        v16.size.height = a4;
        double MinX = CGRectGetMinX(v16);
        v17.origin.x = a1;
        v17.origin.y = a2;
        v17.size.width = a3;
        v17.size.height = a4;
        double MinY = CGRectGetMinY(v17);
        v18.origin.x = a1;
        v18.origin.y = a2;
        v18.size.width = a3;
        v18.size.height = a4;
        double Width = CGRectGetWidth(v18);
        v19.origin.x = a1;
        v19.origin.y = a2;
        v19.size.width = a3;
        v19.size.height = a4;
        [v9 _cloudSharingControllerDidActivateAddPeopleWithRemoteSourceX:MinX y:MinY width:Width height:CGRectGetHeight(v19)];
        goto LABEL_10;
      }
    }
    swift_unknownObjectRelease();
  }
  if (sub_10000A1F4())
  {
    uint64_t v13 = (void *)swift_dynamicCastObjCProtocolConditional();
    uint64_t v14 = (uint64_t)v13;
    if (!v13)
    {
LABEL_13:
      swift_unknownObjectRelease();
      return v14;
    }
    if (([v13 respondsToSelector:"_cloudSharingControllerDidActivateShowActivityController"] & 1) == 0)
    {
      uint64_t v14 = 0;
      goto LABEL_13;
    }
    [(id)v14 _cloudSharingControllerDidActivateShowActivityController];
LABEL_10:
    uint64_t v14 = 1;
    goto LABEL_13;
  }
  return 0;
}

uint64_t sub_10000F560()
{
  uint64_t v1 = sub_1000C6370();
  uint64_t v41 = *(void *)(v1 - 8);
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v40 = (uint64_t)v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v34 - v4;
  uint64_t v6 = sub_100012854((uint64_t *)&unk_10010BDD0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000C6530();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  os_log_type_t v12 = (char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_10001326C((uint64_t)v8, (uint64_t *)&unk_10010BDD0);
  }
  else
  {
    uint64_t v37 = v0;
    uint64_t v38 = v1;
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    uint64_t v39 = v9;
    v13(v12, v8, v9);
    uint64_t v36 = sub_100012854((uint64_t *)&unk_10010B000);
    uint64_t inited = swift_initStackObject();
    long long v35 = xmmword_1000CABA0;
    *(_OWORD *)(inited + 16) = xmmword_1000CABA0;
    *(void *)(inited + 32) = NSURLLocalizedNameKey;
    unint64_t v15 = NSURLLocalizedNameKey;
    CGRect v16 = sub_100072F30(inited);
    swift_setDeallocating();
    type metadata accessor for URLResourceKey(0);
    v34[1] = v17;
    swift_arrayDestroy();
    URL.evictionSafeResourceValues(forKeys:)((uint64_t)v16, (uint64_t)v5);
    swift_bridgeObjectRelease();
    uint64_t v18 = sub_1000C6330();
    uint64_t v20 = v19;
    uint64_t v21 = v38;
    uint64_t v41 = *(void *)(v41 + 8);
    ((void (*)(char *, uint64_t))v41)(v5, v38);
    uint64_t v22 = v37;
    uint64_t v23 = (uint64_t *)(v37 + OBJC_IVAR___CloudSharingViewController_explicitOrURLName);
    uint64_t *v23 = v18;
    v23[1] = v20;
    swift_bridgeObjectRelease();
    uint64_t v24 = swift_initStackObject();
    *(_OWORD *)(v24 + 16) = v35;
    *(void *)(v24 + 32) = NSURLTypeIdentifierKey;
    id v25 = NSURLTypeIdentifierKey;
    id v26 = sub_100072F30(v24);
    swift_setDeallocating();
    swift_arrayDestroy();
    uint64_t v27 = v40;
    URL.evictionSafeResourceValues(forKeys:)((uint64_t)v26, v40);
    swift_bridgeObjectRelease();
    uint64_t v28 = sub_1000C6340();
    uint64_t v30 = v29;
    ((void (*)(uint64_t, uint64_t))v41)(v27, v21);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v39);
    uint64_t v31 = (uint64_t *)(v22 + OBJC_IVAR___CloudSharingViewController_itemUTI);
    *uint64_t v31 = v28;
    v31[1] = v30;
    swift_bridgeObjectRelease();
    uint64_t v0 = v22;
  }
  char v32 = sub_10000B248() & 1;
  *(unsigned char *)(v0 + OBJC_IVAR___CloudSharingViewController_isFolderSharing) = v32;
  swift_getKeyPath();
  swift_getKeyPath();
  LOBYTE(v42) = v32;
  swift_retain();
  sub_1000C67F0();
  return sub_10004E1A8();
}

void sub_10000FAF4(uint64_t a1)
{
  uint64_t v3 = sub_1000C66D0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = sub_100012854((uint64_t *)&unk_10010BDD0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000C6530();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)v19 - v12;
  __chkstk_darwin(v11);
  uint64_t v20 = (char *)v19 - v14;
  sub_1000128FC(a1, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_10001326C((uint64_t)v7, (uint64_t *)&unk_10010BDD0);
    id v15 = 0;
    if (!sub_10000A1F4()) {
      goto LABEL_9;
    }
  }
  else
  {
    v19[2] = v4;
    v19[3] = v3;
    v19[4] = v1;
    CGRect v16 = v20;
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v20, v7, v8);
    sub_1000132C8(0, (unint64_t *)&unk_10010B040);
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v13, v16, v8);
    id v15 = sub_1000100B0((uint64_t)v13, 0);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v20, v8);
    if (!sub_10000A1F4())
    {
LABEL_9:

      return;
    }
  }
  uint64_t v21 = &OBJC_PROTOCOL____TtP37com_apple_CloudSharingUI_CloudSharing39_UIShareInvitationViewControllerHostSPI_;
  uint64_t v17 = (void *)swift_dynamicCastObjCProtocolConditional();
  if (!v17)
  {
LABEL_8:
    swift_unknownObjectRelease();
    goto LABEL_9;
  }
  uint64_t v18 = v17;
  if ([v17 respondsToSelector:"_cloudSharingControllerDidUpdateRootFolderURL:"])
  {
    [v18 _cloudSharingControllerDidUpdateRootFolderURL:v15];
    goto LABEL_8;
  }

  swift_unknownObjectRelease();
}

id sub_1000100B0(uint64_t a1, char a2)
{
  sub_1000C64C0(__stack_chk_guard);
  uint64_t v5 = v4;
  id v14 = 0;
  id v6 = [(id)swift_getObjCClassFromMetadata() wrapperWithURL:v4 readonly:a2 & 1 error:&v14];

  id v7 = v14;
  if (v6)
  {
    uint64_t v8 = sub_1000C6530();
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
    id v10 = v7;
    v9(a1, v8);
  }
  else
  {
    id v11 = v14;
    sub_1000C6490();

    swift_willThrow();
    uint64_t v12 = sub_1000C6530();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(a1, v12);
  }
  return v6;
}

uint64_t sub_100010210(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  _OWORD v3[2] = a1;
  uint64_t v4 = sub_1000C66D0();
  v3[5] = v4;
  v3[6] = *(void *)(v4 - 8);
  v3[7] = swift_task_alloc();
  v3[8] = sub_1000C75D0();
  v3[9] = sub_1000C75C0();
  uint64_t v6 = sub_1000C7590();
  v3[10] = v6;
  v3[11] = v5;
  return _swift_task_switch(sub_10001030C, v6, v5);
}

uint64_t sub_10001030C()
{
  uint64_t v1 = v0[4];
  id v2 = [self alertControllerWithParticipant:v0[2] highlight:v0[3] preferredStyle:1];
  v0[12] = v2;
  uint64_t v3 = sub_1000C75C0();
  v0[13] = v3;
  uint64_t v4 = swift_task_alloc();
  v0[14] = v4;
  *(void *)(v4 + 16) = v1;
  *(void *)(v4 + 24) = v2;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[15] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_10001044C;
  return withCheckedContinuation<A>(isolation:function:_:)(v5, v3, &protocol witness table for MainActor, 0xD000000000000034, 0x80000001000D3B70, sub_100013CE8, v4, (char *)&type metadata for () + 8);
}

uint64_t sub_10001044C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 88);
  uint64_t v3 = *(void *)(v1 + 80);
  return _swift_task_switch(sub_1000105AC, v3, v2);
}

uint64_t sub_1000105AC()
{
  swift_release();
  sub_1000C66B0();
  uint64_t v1 = sub_1000C66C0();
  os_log_type_t v2 = sub_1000C7690();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "askToRemoveFromMessagesConversation just presented alert", v3, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = *(void *)(v0 + 48);
  uint64_t v4 = *(void *)(v0 + 56);
  uint64_t v6 = *(void *)(v0 + 40);

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

void sub_1000106BC(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_100012854(&qword_10010B208);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  unint64_t v9 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v10 + v9, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  aBlock[4] = sub_100013D88;
  aBlock[5] = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000BCEA4;
  aBlock[3] = &unk_1000FFCD0;
  id v11 = _Block_copy(aBlock);
  swift_release();
  [a2 presentViewController:a3 animated:0 completion:v11];
  _Block_release(v11);
}

uint64_t sub_100010870@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_100010884()
{
  return sub_1000114AC();
}

uint64_t sub_100010898@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_1000108AC()
{
  return sub_1000114AC();
}

uint64_t sub_1000108C0(uint64_t a1)
{
  os_log_type_t v2 = v1;
  uint64_t v4 = sub_1000C6530();
  uint64_t v42 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v41 = &v39[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100012854(&qword_10010B058);
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  unint64_t v9 = &v39[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_100012854((uint64_t *)&unk_10010BDD0);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v45 = &v39[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = __chkstk_darwin(v11);
  id v44 = &v39[-v14];
  uint64_t v15 = __chkstk_darwin(v13);
  v43 = &v39[-v16];
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = &v39[-v18];
  uint64_t v49 = v17;
  unint64_t v20 = sub_1000131C4();
  unint64_t v50 = v20;
  swift_getKeyPath();
  uint64_t v47 = v10;
  unint64_t v48 = v20;
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  uint64_t v21 = (uint64_t)&v9[*(int *)(v7 + 56)];
  sub_1000128FC((uint64_t)v19, (uint64_t)v9);
  uint64_t v46 = a1;
  sub_1000128FC(a1, v21);
  uint64_t v22 = v42;
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v42 + 48);
  if (v23((uint64_t)v9, 1, v4) == 1)
  {
    int v24 = v23(v21, 1, v4);
    if (v24 == 1) {
      id v25 = (uint64_t *)&unk_10010BDD0;
    }
    else {
      id v25 = &qword_10010B058;
    }
    if (v24 == 1) {
      char v26 = -1;
    }
    else {
      char v26 = 0;
    }
  }
  else
  {
    sub_1000128FC((uint64_t)v9, (uint64_t)v43);
    if (v23(v21, 1, v4) == 1)
    {
      (*(void (**)(unsigned char *, uint64_t))(v22 + 8))(v43, v4);
      char v26 = 0;
      id v25 = &qword_10010B058;
    }
    else
    {
      uint64_t v27 = v41;
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v22 + 32))(v41, v21, v4);
      sub_10001236C(&qword_10010D030, 255, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v28 = v43;
      int v40 = sub_1000C73F0();
      uint64_t v29 = *(void (**)(unsigned char *, uint64_t))(v22 + 8);
      v29(v27, v4);
      uint64_t v30 = v28;
      char v26 = v40;
      v29(v30, v4);
      id v25 = (uint64_t *)&unk_10010BDD0;
    }
  }
  sub_10001326C((uint64_t)v9, v25);
  sub_10001326C((uint64_t)v19, (uint64_t *)&unk_10010BDD0);
  uint64_t v31 = v46;
  char v32 = v44;
  uint64_t v33 = sub_1000128FC(v46, (uint64_t)v44);
  __chkstk_darwin(v33);
  uint64_t KeyPath = swift_getKeyPath();
  __chkstk_darwin(KeyPath);
  swift_getKeyPath();
  sub_1000128FC((uint64_t)v32, (uint64_t)v45);
  swift_retain();
  sub_1000C67F0();
  sub_10001326C((uint64_t)v32, (uint64_t *)&unk_10010BDD0);
  uint64_t v35 = *v2;
  if ((v26 & 1) == 0)
  {
    uint64_t v36 = *(void (**)(uint64_t))((char *)v2 + *(void *)(v35 + 104));
    if (v36)
    {
      uint64_t v37 = swift_retain();
      v36(v37);
      sub_100013344((uint64_t)v36);
      return sub_10001326C(v31, (uint64_t *)&unk_10010BDD0);
    }
  }
  if (*(uint64_t *)((char *)v2 + *(void *)(v35 + 104))) {
    return sub_10001326C(v31, (uint64_t *)&unk_10010BDD0);
  }
  uint64_t result = sub_1000C7980();
  __break(1u);
  return result;
}

uint64_t sub_100010E28@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_100010EA8()
{
  return sub_1000C67F0();
}

uint64_t sub_100010F1C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();

  return swift_release();
}

uint64_t sub_100010F98(uint64_t a1)
{
  uint64_t v2 = sub_100012854((uint64_t *)&unk_10010BDD0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v3);
  uint64_t v8 = (char *)&v12 - v7;
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v12 - v9;
  sub_1000128FC(a1, (uint64_t)&v12 - v9);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000128FC((uint64_t)v10, (uint64_t)v5);
  swift_retain();
  sub_1000C67F0();
  sub_100060DBC((uint64_t)v8);
  sub_10001326C((uint64_t)v10, (uint64_t *)&unk_10010BDD0);
  return sub_10001326C((uint64_t)v8, (uint64_t *)&unk_10010BDD0);
}

uint64_t sub_10001112C@<X0>(void *a1@<X8>)
{
  return sub_100011168(a1);
}

uint64_t sub_100011140(void **a1)
{
  return sub_1000111F8(a1);
}

uint64_t sub_100011154@<X0>(void *a1@<X8>)
{
  return sub_100011168(a1);
}

uint64_t sub_100011168@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1000111E4(void **a1)
{
  return sub_1000111F8(a1);
}

uint64_t sub_1000111F8(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = v1;
  swift_retain();
  return sub_1000C67F0();
}

uint64_t sub_10001126C@<X0>(void *a1@<X8>)
{
  return sub_1000112D0(a1);
}

uint64_t sub_100011280()
{
  return sub_100011360();
}

uint64_t sub_100011294@<X0>(void *a1@<X8>)
{
  return sub_1000112D0(a1);
}

uint64_t sub_1000112A8()
{
  return sub_100011360();
}

uint64_t sub_1000112BC@<X0>(void *a1@<X8>)
{
  return sub_1000112D0(a1);
}

uint64_t sub_1000112D0@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_10001134C()
{
  return sub_100011360();
}

uint64_t sub_100011360()
{
  return sub_1000C67F0();
}

uint64_t sub_1000113E0@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_1000113F4()
{
  return sub_1000114AC();
}

uint64_t sub_100011408@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_10001141C@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_100011498()
{
  return sub_1000114AC();
}

uint64_t sub_1000114AC()
{
  return sub_1000C67F0();
}

uint64_t sub_10001151C@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_10001159C()
{
  return sub_1000C67F0();
}

uint64_t sub_100011618()
{
  return swift_release();
}

uint64_t sub_1000116B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a4 + a3 - 16);
  uint64_t v5 = *(void *)(a4 + a3 - 8);
  uint64_t v6 = *(void *)(v4 - 8);
  uint64_t v7 = __chkstk_darwin(a1);
  uint64_t v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)v14 - v10;
  uint64_t v12 = *(void (**)(char *))(v6 + 16);
  v12((char *)v14 - v10);
  v14[2] = v4;
  v14[3] = v5;
  swift_getKeyPath();
  v14[0] = v4;
  v14[1] = v5;
  swift_getKeyPath();
  ((void (*)(char *, char *, uint64_t))v12)(v9, v11, v4);
  swift_retain();
  sub_1000C67F0();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v4);
}

uint64_t sub_10001182C(uint64_t a1, uint64_t a2)
{
  return sub_1000126E4(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

uint64_t sub_100011858(uint64_t a1, id *a2)
{
  uint64_t result = sub_1000C7420();
  *a2 = 0;
  return result;
}

uint64_t sub_1000118D0(uint64_t a1, id *a2)
{
  char v3 = sub_1000C7430();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_100011950@<X0>(void *a1@<X8>)
{
  sub_1000C7440();
  NSString v2 = sub_1000C7400();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_100011998@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000C7440();
  *a1 = result;
  a1[1] = v3;
  return result;
}

id sub_1000119C4()
{
  return *v0;
}

uint64_t sub_1000119CC@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_1000119D4(uint64_t a1)
{
  uint64_t v2 = sub_10001236C(&qword_10010B0E8, 255, type metadata accessor for BRError);

  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_100011A44(uint64_t a1)
{
  uint64_t v2 = sub_10001236C(&qword_10010B0E8, 255, type metadata accessor for BRError);

  return Error<>._code.getter(a1, v2);
}

uint64_t sub_100011AB8(uint64_t a1)
{
  uint64_t v2 = sub_10001236C(&qword_10010B120, 255, type metadata accessor for BRError);

  return _BridgedStoredNSError._getEmbeddedNSError()(a1, v2);
}

uint64_t sub_100011B28(uint64_t a1)
{
  uint64_t v2 = sub_10001236C(&qword_10010B128, 255, type metadata accessor for CKError);

  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_100011B98(uint64_t a1)
{
  uint64_t v2 = sub_10001236C(&qword_10010B128, 255, type metadata accessor for CKError);

  return Error<>._code.getter(a1, v2);
}

uint64_t sub_100011C08(uint64_t a1)
{
  uint64_t v2 = sub_10001236C(&qword_10010D2E0, 255, type metadata accessor for CKError);

  return _BridgedStoredNSError._getEmbeddedNSError()(a1, v2);
}

void *sub_100011C78@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_100011C88(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_100011C98()
{
  uint64_t v0 = sub_1000C7440();
  uint64_t v2 = v1;
  if (v0 == sub_1000C7440() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_1000C7A50();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_100011D24()
{
  return sub_1000C7440();
}

uint64_t sub_100011D34()
{
  sub_10001236C(&qword_10010B120, 255, type metadata accessor for BRError);

  return sub_1000C6470();
}

uint64_t sub_100011DA4(uint64_t a1)
{
  uint64_t v2 = sub_10001236C(&qword_10010B120, 255, type metadata accessor for BRError);

  return _BridgedStoredNSError.errorUserInfo.getter(a1, v2);
}

uint64_t sub_100011E14(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_10001236C(&qword_10010B120, 255, type metadata accessor for BRError);
  id v5 = a1;

  return _BridgedStoredNSError.init(_bridgedNSError:)(v5, a2, v4);
}

uint64_t sub_100011EA8()
{
  id v1 = *v0;
  uint64_t v2 = sub_1000C7810();

  return v2;
}

uint64_t sub_100011EE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001236C(&qword_10010B120, 255, type metadata accessor for BRError);

  return _BridgedStoredNSError.hash(into:)(a1, a2, v4);
}

uint64_t sub_100011F64()
{
  return sub_1000C7440();
}

uint64_t sub_100011F74()
{
  sub_10001236C(&qword_10010D2E0, 255, type metadata accessor for CKError);

  return sub_1000C6470();
}

uint64_t sub_100011FE4(uint64_t a1)
{
  uint64_t v2 = sub_10001236C(&qword_10010D2E0, 255, type metadata accessor for CKError);

  return _BridgedStoredNSError.errorUserInfo.getter(a1, v2);
}

uint64_t sub_100012054(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_10001236C(&qword_10010D2E0, 255, type metadata accessor for CKError);
  id v5 = a1;

  return _BridgedStoredNSError.init(_bridgedNSError:)(v5, a2, v4);
}

uint64_t sub_1000120E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001236C(&qword_10010D2E0, 255, type metadata accessor for CKError);

  return _BridgedStoredNSError.hash(into:)(a1, a2, v4);
}

Swift::Int sub_100012168()
{
  return sub_1000C7B30();
}

uint64_t sub_1000121C8@<X0>(void *a1@<X8>)
{
  NSString v2 = sub_1000C7400();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_100012210(uint64_t a1)
{
  uint64_t v2 = sub_10001236C(&qword_10010AF38, 255, type metadata accessor for URLResourceKey);
  uint64_t v3 = sub_10001236C((unint64_t *)&unk_10010AF40, 255, type metadata accessor for URLResourceKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1000122D4()
{
  return sub_10001236C(&qword_10010AEF0, 255, type metadata accessor for URLResourceKey);
}

uint64_t sub_100012320()
{
  return sub_10001236C(&qword_10010AEF8, 255, type metadata accessor for URLResourceKey);
}

uint64_t sub_10001236C(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000123B4()
{
  return sub_10001236C(&qword_10010AF00, 255, type metadata accessor for URLResourceKey);
}

uint64_t sub_100012400(uint64_t a1)
{
  uint64_t v2 = sub_10001236C(&qword_10010AF28, 255, type metadata accessor for ActivityType);
  uint64_t v3 = sub_10001236C(&qword_10010AF30, 255, type metadata accessor for ActivityType);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1000124C4()
{
  return sub_10001236C(&qword_10010AF08, 255, type metadata accessor for ActivityType);
}

uint64_t sub_100012510()
{
  return sub_10001236C(&qword_10010AF10, 255, type metadata accessor for ActivityType);
}

uint64_t sub_10001255C()
{
  return sub_10001236C(&qword_10010AF18, 255, type metadata accessor for ActivityType);
}

uint64_t sub_1000125A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10001236C(&qword_10010B120, 255, type metadata accessor for BRError);

  return static _BridgedStoredNSError.== infix(_:_:)(a1, a2, a3, v6);
}

BOOL sub_100012630(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_100012644(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10001236C(&qword_10010D2E0, 255, type metadata accessor for CKError);

  return static _BridgedStoredNSError.== infix(_:_:)(a1, a2, a3, v6);
}

uint64_t sub_1000126CC(uint64_t a1, uint64_t a2)
{
  return sub_1000126E4(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_1000126E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_1000C7440();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_100012728()
{
  sub_1000C7440();
  sub_1000C7480();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10001277C()
{
  sub_1000C7440();
  sub_1000C7B10();
  sub_1000C7480();
  Swift::Int v0 = sub_1000C7B30();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1000127F0(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_10001236C(&qword_10010AF20, a2, (void (*)(uint64_t))type metadata accessor for CloudSharingViewController);
  *(void *)(a1 + 8) = result;
  return result;
}

void *sub_100012848()
{
  return &protocol witness table for ObservableObjectPublisher;
}

uint64_t sub_100012854(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_100012898(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100012854(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000128FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100012854((uint64_t *)&unk_10010BDD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_100012974(uint64_t a1)
{
}

uint64_t sub_10001297C()
{
  return sub_100013CFC(&qword_10010AFD8);
}

uint64_t sub_100012988(void *a1, void *a2)
{
  sub_100012854(&qword_10010AFD8);

  return sub_10000C068(a1, a2);
}

uint64_t sub_100012A0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100012A1C()
{
  return swift_release();
}

unint64_t sub_100012A24()
{
  unint64_t result = qword_10010AFE0;
  if (!qword_10010AFE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010AFE0);
  }
  return result;
}

uint64_t sub_100012A88(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_100012A9C(a1, a2);
  }
  return a1;
}

uint64_t sub_100012A9C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t sub_100012AF4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

void sub_100012B4C()
{
  id v1 = &v0[OBJC_IVAR___CloudSharingViewController_itemUTI];
  *id v1 = 0;
  v1[1] = 0;
  uint64_t v2 = &v0[OBJC_IVAR___CloudSharingViewController_appName];
  void *v2 = 0;
  v2[1] = 0;
  v0[OBJC_IVAR___CloudSharingViewController_isFolderSharing] = 0;
  uint64_t v3 = &v0[OBJC_IVAR___CloudSharingViewController_explicitOrURLName];
  *uint64_t v3 = 0;
  v3[1] = 0;
  uint64_t v4 = &v0[OBJC_IVAR___CloudSharingViewController_ckClientRootFolderName];
  void *v4 = 0;
  v4[1] = 0;
  uint64_t v5 = &v0[OBJC_IVAR___CloudSharingViewController_ckClientFolderSubitemName];
  *uint64_t v5 = 0;
  v5[1] = 0;
  *(void *)&v0[OBJC_IVAR___CloudSharingViewController_appBundleSubscriber] = 0;

  sub_1000C7980();
  __break(1u);
}

uint64_t sub_100012C14()
{
  id v0 = [self interfaceWithProtocol:&OBJC_PROTOCOL____UIShareInvitationViewController];
  id v1 = (NSString *)sub_1000C7400();
  Class v2 = NSClassFromString(v1);

  if (!v2) {
    return (uint64_t)v0;
  }
  uint64_t ObjCClassMetadata = swift_getObjCClassMetadata();
  sub_100012854(&qword_10010BDE0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1000CABB0;
  *(void *)(v4 + 56) = swift_getMetatypeMetadata();
  *(void *)(v4 + 32) = ObjCClassMetadata;
  uint64_t v5 = sub_1000132C8(0, &qword_10010B080);
  *(void *)(v4 + 88) = sub_100012854(&qword_10010B088);
  *(void *)(v4 + 64) = v5;
  uint64_t v6 = sub_1000132C8(0, &qword_10010B090);
  *(void *)(v4 + 120) = sub_100012854(&qword_10010B098);
  *(void *)(v4 + 96) = v6;
  id v7 = objc_allocWithZone((Class)NSSet);
  Class isa = sub_1000C7530().super.isa;
  swift_bridgeObjectRelease();
  [v7 initWithArray:isa];

  uint64_t result = sub_1000C7640();
  __break(1u);
  return result;
}

uint64_t sub_100012E3C(uint64_t a1, uint64_t a2)
{
  sub_100012854(&qword_10010CBB0);
  sub_1000130BC();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  uint64_t v5 = swift_release();
  char v6 = a2 == 0;
  if (v13)
  {
    if (a2)
    {
      if (v12 == a1 && v13 == a2) {
        char v6 = 1;
      }
      else {
        char v6 = sub_1000C7A50();
      }
    }
    else
    {
      char v6 = 0;
    }
    uint64_t v5 = swift_bridgeObjectRelease();
  }
  __chkstk_darwin(v5);
  uint64_t KeyPath = swift_getKeyPath();
  __chkstk_darwin(KeyPath);
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t result = sub_1000C67F0();
  uint64_t v9 = *v2;
  if ((v6 & 1) != 0 || (uint64_t v10 = *(void (**)(uint64_t))((char *)v2 + *(void *)(v9 + 104))) == 0)
  {
    if (!*(uint64_t *)((char *)v2 + *(void *)(v9 + 104)))
    {
      uint64_t result = sub_1000C7980();
      __break(1u);
    }
  }
  else
  {
    uint64_t v11 = swift_retain();
    v10(v11);
    return sub_100013344((uint64_t)v10);
  }
  return result;
}

uint64_t sub_1000130A4()
{
  return 16;
}

__n128 sub_1000130B0(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

unint64_t sub_1000130BC()
{
  unint64_t result = qword_10010B020;
  if (!qword_10010B020)
  {
    sub_100013128(&qword_10010CBB0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010B020);
  }
  return result;
}

uint64_t sub_100013128(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_100013178()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000131B0()
{
  return swift_retain();
}

unint64_t sub_1000131C4()
{
  unint64_t result = qword_10010B060;
  if (!qword_10010B060)
  {
    sub_100013128((uint64_t *)&unk_10010BDD0);
    sub_10001236C(&qword_10010D030, 255, (void (*)(uint64_t))&type metadata accessor for URL);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010B060);
  }
  return result;
}

uint64_t sub_10001326C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_100012854(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000132C8(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_100013304()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10001333C(void *a1)
{
}

uint64_t sub_100013344(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

void type metadata accessor for BRError(uint64_t a1)
{
}

void type metadata accessor for CKError(uint64_t a1)
{
}

__n128 initializeWithTake for NameAndEmailView(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_10001338C(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1000133AC(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

void type metadata accessor for CheckingType(uint64_t a1)
{
}

void type metadata accessor for MessageComposeResult(uint64_t a1)
{
}

uint64_t sub_100013410()
{
  return sub_10001236C(&qword_10010B0C8, 255, type metadata accessor for CKError);
}

uint64_t sub_10001345C()
{
  return sub_10001236C(&qword_10010B0D0, 255, type metadata accessor for CKError);
}

uint64_t sub_1000134A8()
{
  return sub_10001236C(&qword_10010B0D8, 255, type metadata accessor for BRError);
}

uint64_t sub_1000134F4()
{
  return sub_10001236C(&qword_10010B0E0, 255, type metadata accessor for BRError);
}

uint64_t sub_100013540()
{
  return sub_10001236C(&qword_10010B0E8, 255, type metadata accessor for BRError);
}

uint64_t sub_10001358C()
{
  return sub_10001236C(&qword_10010B0F0, 255, type metadata accessor for BRError);
}

uint64_t sub_1000135D8()
{
  return sub_10001236C(&qword_10010B0F8, 255, type metadata accessor for BRError);
}

uint64_t sub_100013624()
{
  return sub_10001236C(&qword_10010B100, 255, _s3__C4CodeOMa_0);
}

void _s3__C4CodeOMa_0(uint64_t a1)
{
}

uint64_t sub_100013684()
{
  return sub_10001236C(&qword_10010B108, 255, _s3__C4CodeOMa_0);
}

unint64_t sub_1000136D4()
{
  unint64_t result = qword_10010B110;
  if (!qword_10010B110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010B110);
  }
  return result;
}

uint64_t sub_100013728()
{
  return sub_10001236C(&qword_10010B118, 255, _s3__C4CodeOMa_0);
}

uint64_t sub_100013774()
{
  return sub_10001236C(&qword_10010B120, 255, type metadata accessor for BRError);
}

uint64_t sub_1000137C0()
{
  return sub_10001236C(&qword_10010B128, 255, type metadata accessor for CKError);
}

uint64_t sub_10001380C()
{
  return sub_10001236C(&qword_10010B130, 255, type metadata accessor for CKError);
}

uint64_t sub_100013858()
{
  return sub_10001236C(&qword_10010B138, 255, type metadata accessor for CKError);
}

uint64_t sub_1000138A4()
{
  return sub_10001236C(&qword_10010B140, 255, type metadata accessor for Code);
}

void type metadata accessor for Code(uint64_t a1)
{
}

uint64_t sub_100013904()
{
  return sub_10001236C(&qword_10010B148, 255, type metadata accessor for Code);
}

uint64_t sub_100013950()
{
  return sub_10001236C((unint64_t *)&unk_10010B150, 255, type metadata accessor for Code);
}

uint64_t sub_10001399C()
{
  return sub_10001236C(&qword_10010D2E0, 255, type metadata accessor for CKError);
}

void type metadata accessor for ParticipantRole(uint64_t a1)
{
}

uint64_t initializeBufferWithCopyOfBuffer for AttachmentData(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 sub_100013A30(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_100013A3C(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_100013A5C(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
}

uint64_t sub_100013AA4()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100013AE4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  id v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_100013B98;
  return sub_1000A26C4(a1, v4, v5, v6);
}

uint64_t sub_100013B98()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  id v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

void sub_100013CA0(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

void sub_100013CE8(uint64_t a1)
{
  sub_1000106BC(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100013CF0()
{
  return sub_100013CFC(&qword_10010B208);
}

uint64_t sub_100013CFC(uint64_t *a1)
{
  uint64_t v2 = sub_100012854(a1);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v6 = v5 + *(void *)(v3 + 64);
  uint64_t v7 = v4 | 7;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);

  return _swift_deallocObject(v1, v6, v7);
}

uint64_t sub_100013D88()
{
  return sub_1000C75B0();
}

uint64_t sub_100013E1C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing19ActivitiesModelData__activeService;
  uint64_t v2 = sub_100012854(&qword_10010B458);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_100013EC0()
{
  return type metadata accessor for ActivitiesModelData();
}

uint64_t type metadata accessor for ActivitiesModelData()
{
  uint64_t result = qword_10010B3C0;
  if (!qword_10010B3C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100013F14()
{
  sub_100013FA4();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_100013FA4()
{
  if (!qword_10010B3D0)
  {
    type metadata accessor for ActivityType(255);
    unint64_t v0 = sub_1000C6800();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10010B3D0);
    }
  }
}

unint64_t sub_100013FFC(uint64_t a1)
{
  unint64_t result = sub_100014024();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100014024()
{
  unint64_t result = qword_10010B450;
  if (!qword_10010B450)
  {
    type metadata accessor for ActivitiesModelData();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010B450);
  }
  return result;
}

uint64_t sub_10001407C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000C6790();
  *a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for CloudDocsOperations()
{
  return &type metadata for CloudDocsOperations;
}

void sub_1000140DC()
{
  id v0 = [objc_allocWithZone((Class)NSOperationQueue) init];
  [v0 setQualityOfService:25];
  NSString v1 = sub_1000C7400();
  [v0 setName:v1];

  qword_10010B460 = (uint64_t)v0;
}

uint64_t sub_100014164(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[5] = a2;
  v3[6] = a3;
  v3[4] = a1;
  return _swift_task_switch(sub_100014188, 0, 0);
}

uint64_t sub_100014188()
{
  NSString v1 = (int8x16_t *)swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  v1[1] = vextq_s8(*(int8x16_t *)(v0 + 40), *(int8x16_t *)(v0 + 40), 8uLL);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v2;
  uint64_t v3 = sub_100012854(&qword_10010B480);
  void *v2 = v0;
  v2[1] = sub_100014290;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0xD00000000000002BLL, 0x80000001000D3D00, sub_100019FB0, v1, v3);
}

uint64_t sub_100014290()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_1000143A8, 0, 0);
}

uint64_t sub_1000143A8()
{
  *(_OWORD *)*(void *)(v0 + 32) = *(_OWORD *)(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000143CC(uint64_t a1, uint64_t a2)
{
  v2[93] = a2;
  v2[87] = a1;
  v2[94] = sub_100012854(&qword_10010B4B0);
  v2[95] = swift_task_alloc();
  v2[96] = swift_task_alloc();
  return _swift_task_switch(sub_100014478, 0, 0);
}

uint64_t sub_100014478()
{
  uint64_t v1 = *(void *)(v0 + 752);
  uint64_t v2 = *(void *)(v0 + 744);
  *(_DWORD *)(v0 + 800) = *(_DWORD *)(v1 + 48);
  *(_DWORD *)(v0 + 804) = *(_DWORD *)(v1 + 64);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 776) = v3;
  *(void *)(v3 + 16) = v2;
  swift_asyncLet_begin();
  uint64_t v4 = *(void *)(v0 + 768);
  return _swift_asyncLet_get(v0 + 16, v4, sub_10001454C, v0 + 656);
}

uint64_t sub_10001454C()
{
  return _swift_task_switch(sub_100014568, 0, 0);
}

uint64_t sub_100014568()
{
  uint64_t v1 = *(int *)(v0 + 804);
  uint64_t v2 = *(void ***)(v0 + 768);
  uint64_t v3 = *(void *)(v0 + 696);
  uint64_t v4 = (uint64_t)v2 + *(int *)(v0 + 800);
  uint64_t v5 = *(void *)(v0 + 760) + *(int *)(*(void *)(v0 + 752) + 48);
  uint64_t v6 = *v2;
  *(void *)(v0 + 784) = *v2;
  sub_10001A740(v4, v5, (uint64_t *)&unk_10010BDD0);
  uint64_t v7 = *(void **)((char *)v2 + v1);
  *(void *)(v0 + 792) = v7;
  sub_10001A178(v5, v3);
  id v8 = v7;
  id v9 = v6;
  uint64_t v10 = *(void *)(v0 + 768);
  return _swift_asyncLet_finish(v0 + 16, v10, sub_100014644, v0 + 704);
}

uint64_t sub_100014644()
{
  return _swift_task_switch(sub_100014660, 0, 0);
}

uint64_t sub_100014660()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  uint64_t v2 = v0[99];
  uint64_t v3 = v0[98];
  return v1(v3, v2);
}

uint64_t sub_1000146E0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  uint64_t v3 = sub_100012854(&qword_10010B4B0);
  *(void *)(v2 + 32) = v3;
  *(void *)(v2 + 40) = swift_task_alloc();
  *(_DWORD *)(v2 + 64) = *(_DWORD *)(v3 + 48);
  *(_DWORD *)(v2 + 68) = *(_DWORD *)(v3 + 64);
  return _swift_task_switch(sub_100014790, 0, 0);
}

uint64_t sub_100014790()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = swift_task_alloc();
  v0[6] = v2;
  *(void *)(v2 + 16) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[7] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100014878;
  uint64_t v5 = v0[4];
  uint64_t v4 = v0[5];
  return withCheckedContinuation<A>(isolation:function:_:)(v4, 0, 0, 0xD000000000000026, 0x80000001000D3D90, sub_10001A470, v2, v5);
}

uint64_t sub_100014878()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_100014990, 0, 0);
}

uint64_t sub_100014990()
{
  uint64_t v1 = *(int *)(v0 + 68);
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(uint64_t **)(v0 + 40);
  uint64_t v4 = *(void **)(v0 + 16);
  uint64_t v5 = *v3;
  uint64_t v6 = *(uint64_t *)((char *)v3 + *(int *)(v2 + 64));
  sub_10001A178((uint64_t)v3 + *(int *)(v2 + 48), (uint64_t)v4 + *(int *)(v0 + 64));
  void *v4 = v5;
  *(void *)((char *)v4 + v1) = v6;
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_100014A34(uint64_t a1, uint64_t a2)
{
  v2[101] = a2;
  v2[95] = a1;
  uint64_t v3 = sub_1000C6530();
  v2[107] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[108] = v4;
  v2[109] = *(void *)(v4 + 64);
  v2[110] = swift_task_alloc();
  return _swift_task_switch(sub_100014B00, 0, 0);
}

uint64_t sub_100014B00()
{
  uint64_t v1 = v0[110];
  uint64_t v2 = v0[108];
  uint64_t v3 = v0[107];
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 16))(v1, v0[101], v3);
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = swift_allocObject();
  v0[111] = v5;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v2 + 32))(v5 + v4, v1, v3);
  swift_retain();
  sub_100013128(&qword_10010B528);
  swift_asyncLet_begin();
  return _swift_asyncLet_get(v0 + 2, v0 + 87, sub_100014C3C, v0 + 82);
}

uint64_t sub_100014C3C()
{
  return _swift_task_switch(sub_100014C58, 0, 0);
}

uint64_t sub_100014C58()
{
  uint64_t v1 = (void *)v0[87];
  uint64_t v2 = v0[88];
  uint64_t v3 = v0[89];
  uint64_t v4 = v0[90];
  v0[112] = v4;
  uint64_t v5 = v0[91];
  v0[113] = v5;
  uint64_t v6 = (void *)v0[94];
  v0[114] = v6;
  if (v6 || !v1)
  {
    id v9 = v6;
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_100014EE0;
    uint64_t v11 = v0 + 2;
    uint64_t v12 = v0 + 87;
    uint64_t v13 = v0 + 96;
    goto LABEL_11;
  }
  if (v3)
  {
    if (v5)
    {
      id v7 = v1;
      swift_bridgeObjectRetain_n();
      id v8 = v7;
      swift_bridgeObjectRetain();
      v21._object = (void *)0x80000001000D3E70;
      v21._countAndFlagsBits = 0xD000000000000017;
      LOBYTE(v7) = sub_1000C74F0(v21);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v7)
      {
        uint64_t v4 = v2;
        uint64_t v5 = v3;
      }
      goto LABEL_10;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  id v14 = v1;
LABEL_10:
  v0[116] = v5;
  v0[115] = v4;
  id v15 = [self localizedStringFromPersonNameComponents:v1 style:2 options:0];
  uint64_t v16 = sub_1000C7440();
  uint64_t v18 = v17;

  v0[117] = v16;
  v0[118] = v18;
  uint64_t v10 = sub_100014E20;
  uint64_t v11 = v0 + 2;
  uint64_t v12 = v0 + 87;
  uint64_t v13 = v0 + 102;
LABEL_11:
  return _swift_asyncLet_finish(v11, v12, v10, v13);
}

uint64_t sub_100014E20()
{
  return _swift_task_switch(sub_100014E3C, 0, 0);
}

uint64_t sub_100014E3C()
{
  long long v5 = *(_OWORD *)(v0 + 920);
  long long v6 = *(_OWORD *)(v0 + 936);
  uint64_t v1 = *(void *)(v0 + 912);
  uint64_t v2 = *(void *)(v0 + 760);
  swift_release_n();
  swift_task_dealloc();
  *(_OWORD *)uint64_t v2 = v6;
  *(_OWORD *)(v2 + 16) = v5;
  *(void *)(v2 + 32) = v1;
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_100014EE0()
{
  return _swift_task_switch(sub_100014EFC, 0, 0);
}

uint64_t sub_100014EFC()
{
  long long v5 = *(_OWORD *)(v0 + 896);
  uint64_t v1 = *(void *)(v0 + 912);
  uint64_t v2 = *(void *)(v0 + 760);
  swift_release_n();
  swift_task_dealloc();
  *(void *)uint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  *(_OWORD *)(v2 + 16) = v5;
  *(void *)(v2 + 32) = v1;
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_100014F94(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 80) = a1;
  *(void *)(v2 + 88) = a2;
  return _swift_task_switch(sub_100014FB4, 0, 0);
}

uint64_t sub_100014FB4()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = swift_task_alloc();
  v0[12] = v2;
  *(void *)(v2 + 16) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[13] = v3;
  uint64_t v4 = sub_100012854(&qword_10010B528);
  *uint64_t v3 = v0;
  v3[1] = sub_1000150B8;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 2, 0, 0, 0xD00000000000003ALL, 0x80000001000D3E90, sub_10001A890, v2, v4);
}

uint64_t sub_1000150B8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_1000151D0, 0, 0);
}

uint64_t sub_1000151D0()
{
  uint64_t v1 = *(_OWORD **)(v0 + 80);
  long long v2 = *(_OWORD *)(v0 + 32);
  long long v3 = *(_OWORD *)(v0 + 48);
  long long v4 = *(_OWORD *)(v0 + 64);
  *uint64_t v1 = *(_OWORD *)(v0 + 16);
  v1[1] = v2;
  v1[2] = v3;
  v1[3] = v4;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000151FC(uint64_t a1)
{
  *(void *)(v1 + 728) = a1;
  return _swift_task_switch(sub_10001521C, 0, 0);
}

uint64_t sub_10001521C()
{
  sub_100013128(&qword_10010B4E8);
  swift_asyncLet_begin();
  return _swift_asyncLet_get(v0 + 16, v0 + 696, sub_1000152CC, v0 + 656);
}

uint64_t sub_1000152CC()
{
  return _swift_task_switch(sub_1000152E8, 0, 0);
}

uint64_t sub_1000152E8()
{
  uint64_t v1 = (void *)v0[87];
  v0[92] = v0[88];
  v0[93] = v0[89];
  uint64_t v2 = (void *)v0[90];
  v0[94] = v2;
  if (v2) {
    BOOL v3 = 1;
  }
  else {
    BOOL v3 = v1 == 0;
  }
  if (v3)
  {
    id v4 = v2;
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_100015474;
  }
  else
  {
    long long v5 = self;
    swift_bridgeObjectRetain();
    id v6 = v1;
    id v7 = [v5 localizedStringFromPersonNameComponents:v6 style:2 options:0];
    uint64_t v8 = sub_1000C7440();
    uint64_t v10 = v9;

    v0[95] = v8;
    v0[96] = v10;
    uint64_t v11 = sub_100015424;
  }
  return _swift_asyncLet_finish(v0 + 2, v0 + 87, v11, v0 + 82);
}

uint64_t sub_100015424()
{
  return _swift_task_switch(sub_100015440, 0, 0);
}

uint64_t sub_100015440()
{
  uint64_t v1 = *(void *)(v0 + 768);
  uint64_t v2 = *(void *)(v0 + 752);
  uint64_t v3 = *(void *)(v0 + 728);
  long long v4 = *(_OWORD *)(v0 + 736);
  *(void *)uint64_t v3 = *(void *)(v0 + 760);
  *(void *)(v3 + 8) = v1;
  *(_OWORD *)(v3 + 16) = v4;
  *(void *)(v3 + 32) = v2;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100015474()
{
  return _swift_task_switch(sub_100015490, 0, 0);
}

uint64_t sub_100015490()
{
  uint64_t v1 = *(void *)(v0 + 752);
  uint64_t v2 = *(void *)(v0 + 728);
  long long v3 = *(_OWORD *)(v0 + 736);
  *(void *)uint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  *(_OWORD *)(v2 + 16) = v3;
  *(void *)(v2 + 32) = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000154BC(uint64_t a1)
{
  *(void *)(v1 + 48) = a1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 56) = v2;
  uint64_t v3 = sub_100012854(&qword_10010B4F0);
  void *v2 = v1;
  v2[1] = sub_1000155A4;
  return withCheckedContinuation<A>(isolation:function:_:)(v1 + 16, 0, 0, 0xD000000000000030, 0x80000001000D3DF0, sub_100018E70, 0, v3);
}

uint64_t sub_1000155A4()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1000156A0, 0, 0);
}

uint64_t sub_1000156A0()
{
  uint64_t v1 = *(_OWORD **)(v0 + 48);
  long long v2 = *(_OWORD *)(v0 + 32);
  *uint64_t v1 = *(_OWORD *)(v0 + 16);
  v1[1] = v2;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000156C4(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  uint64_t v3 = sub_100012854(&qword_10010B498);
  *(void *)(v2 + 32) = v3;
  *(void *)(v2 + 40) = swift_task_alloc();
  *(_DWORD *)(v2 + 64) = *(_DWORD *)(v3 + 48);
  return _swift_task_switch(sub_10001576C, 0, 0);
}

uint64_t sub_10001576C()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = swift_task_alloc();
  v0[6] = v2;
  *(void *)(v2 + 16) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[7] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100015854;
  uint64_t v5 = v0[4];
  uint64_t v4 = v0[5];
  return withCheckedContinuation<A>(isolation:function:_:)(v4, 0, 0, 0xD00000000000001FLL, 0x80000001000D3D50, sub_10001A2D0, v2, v5);
}

uint64_t sub_100015854()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_10001596C, 0, 0);
}

uint64_t sub_10001596C()
{
  uint64_t v1 = *(int *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(*(void *)(v0 + 40) + *(int *)(*(void *)(v0 + 32) + 48));
  sub_10001A178(*(void *)(v0 + 40), v2);
  *(void *)(v2 + v1) = v3;
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1000159FC(uint64_t a1, char a2)
{
  *(unsigned char *)(v2 + 1712) = a2;
  *(void *)(v2 + 1384) = a1;
  uint64_t v3 = sub_1000C66D0();
  *(void *)(v2 + 1432) = v3;
  *(void *)(v2 + 1480) = *(void *)(v3 - 8);
  *(void *)(v2 + 1528) = swift_task_alloc();
  *(void *)(v2 + 1576) = swift_task_alloc();
  uint64_t v4 = sub_1000C6530();
  *(void *)(v2 + 1624) = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  *(void *)(v2 + 1632) = v5;
  *(void *)(v2 + 1640) = *(void *)(v5 + 64);
  *(void *)(v2 + 1648) = swift_task_alloc();
  *(void *)(v2 + 1656) = swift_task_alloc();
  return _swift_task_switch(sub_100015B44, 0, 0);
}

uint64_t sub_100015B44()
{
  uint64_t v1 = *(void *)(v0 + 1656);
  uint64_t v2 = *(void *)(v0 + 1632);
  uint64_t v3 = *(void *)(v0 + 1624);
  char v4 = *(unsigned char *)(v0 + 1712);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  v5(v1, *(void *)(v0 + 1384), v3);
  unint64_t v6 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v7 = swift_allocObject();
  *(void *)(v0 + 1664) = v7;
  uint64_t v22 = *(void (**)(unint64_t, uint64_t, uint64_t))(v2 + 32);
  v22(v7 + v6, v1, v3);
  swift_retain();
  swift_asyncLet_begin();
  if (v4)
  {
    *(_OWORD *)(v0 + 1688) = 0u;
    uint64_t v8 = v0 + 16;
  }
  else
  {
    uint64_t v20 = v5;
    unint64_t v21 = v6;
    sub_1000C66B0();
    uint64_t v9 = sub_1000C66C0();
    os_log_type_t v10 = sub_1000C7690();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "isForcedFolderSharing is false, so call doBRSharingRunCleanFolder", v11, 2u);
      swift_slowDealloc();
    }
    uint64_t v12 = *(void *)(v0 + 1648);
    uint64_t v13 = *(void *)(v0 + 1624);
    uint64_t v14 = *(void *)(v0 + 1576);
    uint64_t v15 = *(void *)(v0 + 1480);
    uint64_t v16 = *(void *)(v0 + 1432);
    uint64_t v17 = *(void *)(v0 + 1384);

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
    v20(v12, v17, v13);
    uint64_t v18 = swift_allocObject();
    *(void *)(v0 + 1672) = v18;
    v22(v18 + v21, v12, v13);
    swift_retain();
    swift_asyncLet_begin();
    uint64_t v8 = v0 + 656;
  }
  return _swift_asyncLet_get_throwing(v8);
}

uint64_t sub_100015DF4(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 1680) = v2;
  if (v2)
  {
    uint64_t v4 = v3 + 1344;
    uint64_t v5 = sub_100015FEC;
  }
  else
  {
    uint64_t v4 = v3 + 1488;
    uint64_t v5 = sub_100015E30;
  }
  return _swift_asyncLet_finish(v3 + 656, a2, v5, v4);
}

uint64_t sub_100015E30()
{
  return _swift_task_switch(sub_100015E4C, 0, 0);
}

uint64_t sub_100015E4C()
{
  swift_release();
  v0[212] = v0[209];
  v0[211] = &unk_10010B558;
  return _swift_asyncLet_get_throwing(v0 + 2);
}

uint64_t sub_100015ED8(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 1704) = v2;
  if (v2)
  {
    uint64_t v4 = v3 + 1584;
    uint64_t v5 = sub_100016334;
  }
  else
  {
    uint64_t v4 = v3 + 1440;
    uint64_t v5 = sub_100015F14;
  }
  return _swift_asyncLet_finish(v3 + 16, a2, v5, v4);
}

uint64_t sub_100015F14()
{
  return _swift_task_switch(sub_100015F30, 0, 0);
}

uint64_t sub_100015F30()
{
  uint64_t v1 = *(void *)(v0 + 1688);
  swift_release_n();
  sub_100013344(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100015FEC()
{
  return _swift_task_switch(sub_100016008, 0, 0);
}

uint64_t sub_100016008()
{
  swift_release();
  return _swift_asyncLet_finish(v0 + 16, v1, sub_100016078, v0 + 1392);
}

uint64_t sub_100016078()
{
  return _swift_task_switch(sub_100016094, 0, 0);
}

uint64_t sub_100016094()
{
  swift_release();
  sub_1000C66B0();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = sub_1000C66C0();
  os_log_type_t v2 = sub_1000C7670();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138412290;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    v0[167] = v5;
    sub_1000C7850();
    void *v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "runFolderSharingPrepOperations clean or prep error: %@", v3, 0xCu);
    sub_100012854((uint64_t *)&unk_10010B1E0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v6 = v0[191];
  uint64_t v7 = v0[185];
  uint64_t v8 = v0[179];

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  uint64_t v9 = sub_1000C6480();
  sub_100012A24();
  swift_allocError();
  *(void *)uint64_t v10 = 0xD000000000000041;
  *(void *)(v10 + 8) = 0x80000001000D3F30;
  *(void *)(v10 + 24) = 0;
  *(void *)(v10 + 32) = 0;
  *(void *)(v10 + 16) = v9;
  *(unsigned char *)(v10 + 40) = 3;
  swift_willThrow();
  swift_errorRelease();
  swift_release();
  sub_100013344((uint64_t)&unk_10010B558);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_100016334()
{
  return _swift_task_switch(sub_100016350, 0, 0);
}

uint64_t sub_100016350()
{
  uint64_t v13 = v0[211];
  swift_release();
  sub_1000C66B0();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = sub_1000C66C0();
  os_log_type_t v2 = sub_1000C7670();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138412290;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    v0[167] = v5;
    sub_1000C7850();
    void *v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "runFolderSharingPrepOperations clean or prep error: %@", v3, 0xCu);
    sub_100012854((uint64_t *)&unk_10010B1E0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v6 = v0[191];
  uint64_t v7 = v0[185];
  uint64_t v8 = v0[179];

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  uint64_t v9 = sub_1000C6480();
  sub_100012A24();
  swift_allocError();
  *(void *)uint64_t v10 = 0xD000000000000041;
  *(void *)(v10 + 8) = 0x80000001000D3F30;
  *(void *)(v10 + 24) = 0;
  *(void *)(v10 + 32) = 0;
  *(void *)(v10 + 16) = v9;
  *(unsigned char *)(v10 + 40) = 3;
  swift_willThrow();
  swift_errorRelease();
  swift_release();
  sub_100013344(v13);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_1000165E0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a2;
  return _swift_task_switch(sub_100016600, 0, 0);
}

uint64_t sub_100016600()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = swift_task_alloc();
  v0[3] = v2;
  *(void *)(v2 + 16) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[4] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1000166EC;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)();
}

uint64_t sub_1000166EC()
{
  *(void *)(*(void *)v1 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_10001AE98;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_10001AEB8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100016808(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a2;
  return _swift_task_switch(sub_100016828, 0, 0);
}

uint64_t sub_100016828()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = swift_task_alloc();
  v0[3] = v2;
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = 1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[4] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100016918;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)();
}

uint64_t sub_100016918()
{
  *(void *)(*(void *)v1 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100016A4C;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_100016A34;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100016A34()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100016A4C()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_100016AB0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v35 = a1;
  uint64_t v36 = sub_100012854(&qword_10010B470);
  uint64_t v34 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v32 = v5;
  uint64_t v33 = &v29[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_1000C6530();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  uint64_t v9 = &v29[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_100012854((uint64_t *)&unk_10010BDD0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = &v29[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  BOOL v30 = sub_1000C6500();
  uint64_t v13 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v31 = a2;
  v13(v12, a2, v6);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v7 + 56))(v12, 0, 1, v6);
  LODWORD(a2) = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6);
  id v15 = a3;
  uint64_t v16 = 0;
  if (a2 != 1)
  {
    sub_1000C64C0(v14);
    uint64_t v16 = v17;
    (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v12, v6);
  }
  id v18 = [objc_allocWithZone((Class)BRShareUnshareOperation) initWithShare:v15 fileURL:v16];

  if (v18)
  {
    [v18 setQualityOfService:25];
    v13(&v29[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)], v31, v6);
    uint64_t v20 = v33;
    uint64_t v19 = v34;
    uint64_t v21 = v36;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v34 + 16))(v33, v35, v36);
    unint64_t v22 = (*(unsigned __int8 *)(v7 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    unint64_t v23 = (v8 + *(unsigned __int8 *)(v19 + 80) + v22) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
    uint64_t v24 = swift_allocObject();
    *(unsigned char *)(v24 + 16) = v30;
    (*(void (**)(unint64_t, unsigned char *, uint64_t))(v7 + 32))(v24 + v22, v9, v6);
    (*(void (**)(unint64_t, unsigned char *, uint64_t))(v19 + 32))(v24 + v23, v20, v21);
    aBlock[4] = sub_100019F94;
    aBlock[5] = v24;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100016F40;
    aBlock[3] = &unk_1000FFD80;
    id v25 = _Block_copy(aBlock);
    swift_release();
    [v18 setUnshareCompletionBlock:v25];
    _Block_release(v25);
    if (qword_10010ACC0 != -1) {
      swift_once();
    }
    [(id)qword_10010B460 addOperation:v18];
  }
  else
  {
    sub_1000C7440();
    id v26 = objc_allocWithZone((Class)NSError);
    NSString v27 = sub_1000C7400();
    swift_bridgeObjectRelease();
    id v28 = [v26 initWithDomain:v27 code:80 userInfo:0];

    aBlock[0] = v28;
    sub_1000C75A0();
  }
}

void sub_100016F40(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

void sub_100016FAC(uint64_t a1, uint64_t a2)
{
  uint64_t v31 = a1;
  uint64_t v32 = sub_100012854(&qword_10010B470);
  uint64_t v30 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v29 = v3;
  id v4 = &v26[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_1000C6530();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v28 = v7;
  uint64_t v8 = &v26[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_100012854((uint64_t *)&unk_10010BDD0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = &v26[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  BOOL v27 = sub_1000C6500();
  uint64_t v12 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v6 + 16);
  v12(v11, a2, v5);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v6 + 56))(v11, 0, 1, v5);
  uint64_t v14 = 0;
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5) != 1)
  {
    sub_1000C64C0(v13);
    uint64_t v14 = v15;
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v11, v5);
  }
  id v16 = [objc_allocWithZone((Class)BRSharePrepFolderForSharing) initWithURL:v14];

  if (v16)
  {
    [v16 setQualityOfService:25];
    v12(v8, a2, v5);
    uint64_t v17 = v30;
    uint64_t v18 = v32;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v30 + 16))(v4, v31, v32);
    unint64_t v19 = (*(unsigned __int8 *)(v6 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    unint64_t v20 = (v28 + *(unsigned __int8 *)(v17 + 80) + v19) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    uint64_t v21 = swift_allocObject();
    *(unsigned char *)(v21 + 16) = v27;
    (*(void (**)(unint64_t, unsigned char *, uint64_t))(v6 + 32))(v21 + v19, v8, v5);
    (*(void (**)(unint64_t, unsigned char *, uint64_t))(v17 + 32))(v21 + v20, v4, v18);
    aBlock[4] = sub_100019F94;
    aBlock[5] = v21;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100016F40;
    aBlock[3] = &unk_100100028;
    unint64_t v22 = _Block_copy(aBlock);
    swift_release();
    [v16 setPrepFolderSharingCompletionBlock:v22];
    _Block_release(v22);
    if (qword_10010ACC0 != -1) {
      swift_once();
    }
    [(id)qword_10010B460 addOperation:v16];
  }
  else
  {
    sub_1000C7440();
    id v23 = objc_allocWithZone((Class)NSError);
    NSString v24 = sub_1000C7400();
    swift_bridgeObjectRelease();
    id v25 = [v23 initWithDomain:v24 code:80 userInfo:0];

    aBlock[0] = v25;
    sub_1000C75A0();
  }
}

void sub_100017430(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v33 = a3;
  uint64_t v34 = a1;
  uint64_t v35 = sub_100012854(&qword_10010B470);
  uint64_t v32 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v31 = v4;
  uint64_t v5 = &v28[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_1000C6530();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v30 = v8;
  uint64_t v9 = &v28[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_100012854((uint64_t *)&unk_10010BDD0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = &v28[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  BOOL v29 = sub_1000C6500();
  uint64_t v13 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v7 + 16);
  v13(v12, a2, v6);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v7 + 56))(v12, 0, 1, v6);
  id v15 = 0;
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6) != 1)
  {
    sub_1000C64C0(v14);
    id v15 = v16;
    (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v12, v6);
  }
  id v17 = objc_allocWithZone((Class)BRShareProcessSubitems);
  id v18 = [v17 initWithURL:v15 processType:v33];

  if (v18)
  {
    [v18 setQualityOfService:25];
    [v18 setMaxSharedSubitemsBeforeFailure:4];
    v13(v9, a2, v6);
    uint64_t v19 = v32;
    uint64_t v20 = v35;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v32 + 16))(v5, v34, v35);
    unint64_t v21 = (*(unsigned __int8 *)(v7 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    unint64_t v22 = (v30 + *(unsigned __int8 *)(v19 + 80) + v21) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
    uint64_t v23 = swift_allocObject();
    *(unsigned char *)(v23 + 16) = v29;
    (*(void (**)(unint64_t, unsigned char *, uint64_t))(v7 + 32))(v23 + v21, v9, v6);
    (*(void (**)(unint64_t, unsigned char *, uint64_t))(v19 + 32))(v23 + v22, v5, v20);
    aBlock[4] = sub_100019F94;
    aBlock[5] = v23;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100016F40;
    aBlock[3] = &unk_1000FFFD8;
    NSString v24 = _Block_copy(aBlock);
    swift_release();
    [v18 setProcessSubitemsCompletionBlock:v24];
    _Block_release(v24);
    if (qword_10010ACC0 != -1) {
      swift_once();
    }
    [(id)qword_10010B460 addOperation:v18];
  }
  else
  {
    sub_1000C7440();
    id v25 = objc_allocWithZone((Class)NSError);
    NSString v26 = sub_1000C7400();
    swift_bridgeObjectRelease();
    id v27 = [v25 initWithDomain:v26 code:80 userInfo:0];

    aBlock[0] = v27;
    sub_1000C75A0();
  }
}

uint64_t sub_1000178CC(uint64_t a1, char a2)
{
  if (a2) {
    sub_1000C64E0();
  }
  if (a1)
  {
    swift_errorRetain();
    sub_100012854(&qword_10010B470);
    return sub_1000C75A0();
  }
  else
  {
    sub_100012854(&qword_10010B470);
    return sub_1000C75B0();
  }
}

void sub_100017954(uint64_t a1, uint64_t a2, void *a3)
{
  id v38 = a3;
  uint64_t v39 = a1;
  uint64_t v40 = sub_100012854(&qword_10010B488);
  uint64_t v4 = *(void *)(v40 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v40);
  uint64_t v37 = &v33[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100012854((uint64_t *)&unk_10010BDD0);
  uint64_t v35 = *(void *)(v6 - 8);
  uint64_t v7 = *(void *)(v35 + 64);
  uint64_t v8 = __chkstk_darwin(v6 - 8);
  uint64_t v36 = &v33[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = &v33[-v10];
  __chkstk_darwin(v9);
  uint64_t v13 = &v33[-v12];
  sub_10001A740(a2, (uint64_t)&v33[-v12], (uint64_t *)&unk_10010BDD0);
  uint64_t v14 = sub_1000C6530();
  uint64_t v15 = *(void *)(v14 - 8);
  id v16 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v15 + 48);
  if (v16(v13, 1, v14) == 1)
  {
    sub_10001326C((uint64_t)v13, (uint64_t *)&unk_10010BDD0);
    BOOL v34 = 0;
  }
  else
  {
    BOOL v34 = sub_1000C6500();
    (*(void (**)(unsigned char *, uint64_t))(v15 + 8))(v13, v14);
  }
  sub_10001A740(a2, (uint64_t)v11, (uint64_t *)&unk_10010BDD0);
  unsigned int v17 = v16(v11, 1, v14);
  id v19 = v38;
  if (v17 == 1)
  {
    uint64_t v20 = 0;
  }
  else
  {
    sub_1000C64C0(v18);
    uint64_t v20 = v21;
    (*(void (**)(unsigned char *, uint64_t))(v15 + 8))(v11, v14);
  }
  id v22 = [objc_allocWithZone((Class)BRShareSaveOperation) initWithShare:v19 fileURL:v20];

  if (v22)
  {
    [v22 setQualityOfService:25];
    uint64_t v23 = v36;
    sub_10001A740(a2, (uint64_t)v36, (uint64_t *)&unk_10010BDD0);
    NSString v24 = v37;
    uint64_t v25 = v40;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v4 + 16))(v37, v39, v40);
    unint64_t v26 = (*(unsigned __int8 *)(v35 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
    unint64_t v27 = (v7 + *(unsigned __int8 *)(v4 + 80) + v26) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v28 = swift_allocObject();
    *(unsigned char *)(v28 + 16) = v34;
    sub_10001A178((uint64_t)v23, v28 + v26);
    (*(void (**)(unint64_t, unsigned char *, uint64_t))(v4 + 32))(v28 + v27, v24, v25);
    uint64_t v45 = sub_10001A1E0;
    uint64_t v46 = v28;
    aBlock = _NSConcreteStackBlock;
    uint64_t v42 = 1107296256;
    v43 = sub_100017FA4;
    id v44 = &unk_1000FFDD0;
    BOOL v29 = _Block_copy(&aBlock);
    swift_release();
    [v22 setShareSaveCompletionBlock:v29];
    _Block_release(v29);
    if (qword_10010ACC0 != -1) {
      swift_once();
    }
    [(id)qword_10010B460 addOperation:v22];
  }
  else
  {
    sub_1000C7440();
    id v30 = objc_allocWithZone((Class)NSError);
    NSString v31 = sub_1000C7400();
    swift_bridgeObjectRelease();
    id v32 = [v30 initWithDomain:v31 code:80 userInfo:0];

    aBlock = 0;
    uint64_t v42 = (uint64_t)v32;
    sub_1000C75B0();
  }
}

uint64_t sub_100017E34(void *a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v8 = sub_100012854((uint64_t *)&unk_10010BDD0);
  __chkstk_darwin(v8 - 8);
  unint64_t v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v11 = (char *)v17 - v10;
  if (a3)
  {
    sub_10001A740(a4, (uint64_t)v17 - v10, (uint64_t *)&unk_10010BDD0);
    uint64_t v12 = sub_1000C6530();
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) != 1)
    {
      sub_1000C64E0();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v11, v12);
      if (a2) {
        goto LABEL_5;
      }
LABEL_7:
      uint64_t v14 = 0;
      goto LABEL_8;
    }
    sub_10001326C((uint64_t)v11, (uint64_t *)&unk_10010BDD0);
  }
  if (!a2) {
    goto LABEL_7;
  }
LABEL_5:
  uint64_t v14 = sub_1000C6480();
LABEL_8:
  v17[0] = a1;
  v17[1] = v14;
  id v15 = a1;
  sub_100012854(&qword_10010B488);
  return sub_1000C75B0();
}

void sub_100017FA4(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

void sub_100018030(uint64_t a1, uint64_t a2)
{
  uint64_t v44 = a1;
  uint64_t v45 = sub_100012854(&qword_10010B4C8);
  uint64_t v43 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  uint64_t v41 = v3;
  uint64_t v42 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000C6530();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  uint64_t v39 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_100012854(&qword_10010B4B0);
  __chkstk_darwin(v37);
  uint64_t v36 = (uint64_t *)((char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_100012854((uint64_t *)&unk_10010BDD0);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v35 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v34 - v11;
  BOOL v38 = sub_1000C6500();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v40 = a2;
  v13(v12, a2, v4);
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  v14(v12, 0, 1, v4);
  id v16 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v12, 1, v4) != 1)
  {
    sub_1000C64C0(v15);
    id v16 = v17;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v12, v4);
  }
  id v18 = [objc_allocWithZone((Class)BRShareCopyOperation) initWithURL:v16];

  if (v18)
  {
    [v18 setQualityOfService:25];
    id v19 = v39;
    v13(v39, v40, v4);
    unint64_t v21 = v42;
    uint64_t v20 = v43;
    uint64_t v22 = v45;
    (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v42, v44, v45);
    unint64_t v23 = (*(unsigned __int8 *)(v5 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    unint64_t v24 = (v6 + *(unsigned __int8 *)(v20 + 80) + v23) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    uint64_t v25 = swift_allocObject();
    *(unsigned char *)(v25 + 16) = v38;
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v25 + v23, v19, v4);
    (*(void (**)(unint64_t, char *, uint64_t))(v20 + 32))(v25 + v24, v21, v22);
    aBlock[4] = sub_10001A484;
    aBlock[5] = v25;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000186BC;
    aBlock[3] = &unk_1000FFE70;
    unint64_t v26 = _Block_copy(aBlock);
    swift_release();
    [v18 setRootShareCopyCompletionBlock:v26];
    _Block_release(v26);
    if (qword_10010ACC0 != -1) {
      swift_once();
    }
    [(id)qword_10010B460 addOperation:v18];
  }
  else
  {
    uint64_t v27 = (uint64_t)v35;
    v14(v35, 1, 1, v4);
    sub_1000C7440();
    id v28 = objc_allocWithZone((Class)NSError);
    NSString v29 = sub_1000C7400();
    swift_bridgeObjectRelease();
    id v30 = [v28 initWithDomain:v29 code:80 userInfo:0];

    NSString v31 = v36;
    uint64_t v32 = (uint64_t)v36 + *(int *)(v37 + 48);
    uint64_t v33 = *(int *)(v37 + 64);
    *uint64_t v36 = 0;
    sub_10001A178(v27, v32);
    *(void *)((char *)v31 + v33) = v30;
    sub_1000C75B0();
  }
}

uint64_t sub_10001855C(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v8 = sub_100012854(&qword_10010B4B0);
  __chkstk_darwin(v8);
  uint64_t v10 = (uint64_t *)((char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_100012854((uint64_t *)&unk_10010BDD0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a4) {
    sub_1000C64E0();
  }
  sub_10001A740(a2, (uint64_t)v13, (uint64_t *)&unk_10010BDD0);
  if (a3) {
    uint64_t v14 = sub_1000C6480();
  }
  else {
    uint64_t v14 = 0;
  }
  uint64_t v15 = (uint64_t)v10 + *(int *)(v8 + 48);
  uint64_t v16 = *(int *)(v8 + 64);
  *uint64_t v10 = a1;
  sub_10001A178((uint64_t)v13, v15);
  *(void *)((char *)v10 + v16) = v14;
  id v17 = a1;
  sub_100012854(&qword_10010B4C8);
  return sub_1000C75B0();
}

uint64_t sub_1000186BC(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v8 = sub_100012854((uint64_t *)&unk_10010BDD0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void (**)(void *, char *, void *))(a1 + 32);
  if (a3)
  {
    sub_1000C64F0();
    uint64_t v12 = sub_1000C6530();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v10, 0, 1, v12);
  }
  else
  {
    uint64_t v13 = sub_1000C6530();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v10, 1, 1, v13);
  }
  swift_retain();
  id v14 = a2;
  id v15 = a4;
  v11(a2, v10, a4);

  swift_release();
  return sub_10001326C((uint64_t)v10, (uint64_t *)&unk_10010BDD0);
}

void sub_100018824(uint64_t a1, uint64_t a2)
{
  uint64_t v20 = a1;
  uint64_t v3 = sub_100012854(&qword_10010B530);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3);
  uint64_t v6 = sub_1000C6530();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  uint64_t v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  BOOL v19 = sub_1000C6500();
  sub_1000C64C0(v10);
  unint64_t v21 = v11;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  uint64_t v12 = v3;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v4 + 16))(&v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)], v20, v3);
  unint64_t v13 = (*(unsigned __int8 *)(v7 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v14 = (v8 + *(unsigned __int8 *)(v4 + 80) + v13) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v15 = swift_allocObject();
  *(unsigned char *)(v15 + 16) = v19;
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v7 + 32))(v15 + v13, v9, v6);
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v4 + 32))(v15 + v14, &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)], v12);
  aBlock[4] = sub_10001A8A4;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100018C78;
  aBlock[3] = &unk_1000FFF38;
  uint64_t v16 = _Block_copy(aBlock);
  swift_release();
  uint64_t v17 = v21;
  BRSharingCopyCurrentUserNameAndDisplayHandleForURL();
  _Block_release(v16);
}

uint64_t sub_100018AC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t v23 = a4;
  uint64_t v24 = a6;
  uint64_t v15 = sub_100012854(&qword_10010B508);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a9) {
    sub_1000C64E0();
  }
  sub_10001A740(a1, (uint64_t)v17, &qword_10010B508);
  uint64_t v18 = sub_1000C6400();
  uint64_t v19 = *(void *)(v18 - 8);
  Class v20 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) != 1)
  {
    Class v20 = sub_1000C63D0();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v18);
  }
  if (a8) {
    uint64_t v21 = sub_1000C6480();
  }
  else {
    uint64_t v21 = 0;
  }
  Class v25 = v20;
  uint64_t v26 = a2;
  uint64_t v27 = a3;
  uint64_t v28 = v23;
  uint64_t v29 = a5;
  uint64_t v30 = v24;
  uint64_t v31 = a7;
  uint64_t v32 = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100012854(&qword_10010B530);
  return sub_1000C75B0();
}

uint64_t sub_100018C78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v12 = sub_100012854(&qword_10010B508);
  __chkstk_darwin(v12 - 8);
  unint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1000C63E0();
    uint64_t v15 = sub_1000C6400();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 0, 1, v15);
  }
  else
  {
    uint64_t v16 = sub_1000C6400();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v14, 1, 1, v16);
  }
  if (a3)
  {
    uint64_t v17 = sub_1000C7440();
    a3 = v18;
    if (a4) {
      goto LABEL_6;
    }
LABEL_9:
    uint64_t v19 = 0;
    if (a5) {
      goto LABEL_7;
    }
LABEL_10:
    uint64_t v21 = 0;
    goto LABEL_11;
  }
  uint64_t v17 = 0;
  if (!a4) {
    goto LABEL_9;
  }
LABEL_6:
  uint64_t v19 = sub_1000C7440();
  a4 = v20;
  if (!a5) {
    goto LABEL_10;
  }
LABEL_7:
  uint64_t v21 = sub_1000C7440();
  a5 = v22;
LABEL_11:
  swift_retain();
  id v23 = a6;
  v26(v14, v17, a3, v19, a4, v21, a5, a6);
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_10001326C((uint64_t)v14, &qword_10010B508);
}

void sub_100018E70(uint64_t a1)
{
  uint64_t v2 = sub_100012854(&qword_10010B4F8);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2);
  sub_1000132C8(0, (unint64_t *)&qword_10010B500);
  uint64_t v5 = (void *)sub_1000C76D0();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v7 + v6, (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  aBlock[4] = sub_10001A6A4;
  aBlock[5] = v7;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000191A4;
  aBlock[3] = &unk_1000FFEC0;
  uint64_t v8 = _Block_copy(aBlock);
  swift_release();
  BRSharingCopyCurrentUserNameAndDisplayHandle();
  _Block_release(v8);
}

uint64_t sub_100019034(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_100012854(&qword_10010B508);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001A740(a1, (uint64_t)v10, &qword_10010B508);
  uint64_t v11 = sub_1000C6400();
  uint64_t v12 = *(void *)(v11 - 8);
  Class v13 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
  {
    Class v13 = sub_1000C63D0();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
  }
  if (a4) {
    uint64_t v14 = sub_1000C6480();
  }
  else {
    uint64_t v14 = 0;
  }
  v16[0] = v13;
  v16[1] = a2;
  v16[2] = a3;
  v16[3] = v14;
  swift_bridgeObjectRetain();
  sub_100012854(&qword_10010B4F8);
  return sub_1000C75B0();
}

uint64_t sub_1000191A4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8 = sub_100012854(&qword_10010B508);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1000C63E0();
    uint64_t v12 = sub_1000C6400();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v10, 0, 1, v12);
  }
  else
  {
    uint64_t v13 = sub_1000C6400();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v10, 1, 1, v13);
  }
  if (a3)
  {
    uint64_t v14 = sub_1000C7440();
    a3 = v15;
  }
  else
  {
    uint64_t v14 = 0;
  }
  swift_retain();
  id v16 = a4;
  v11(v10, v14, a3, a4);
  swift_release();

  swift_bridgeObjectRelease();
  return sub_10001326C((uint64_t)v10, &qword_10010B508);
}

void sub_100019324(uint64_t a1, uint64_t a2)
{
  uint64_t v57 = a1;
  uint64_t v58 = sub_100012854(&qword_10010B4A0);
  uint64_t v56 = *(void *)(v58 - 8);
  __chkstk_darwin(v58);
  uint64_t v54 = v3;
  id v55 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000C6530();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v52 = v6;
  uint64_t v53 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100012854(&qword_10010B498);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100012854((uint64_t *)&unk_10010BDD0);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v46 - v14;
  BOOL v51 = sub_1000C6500();
  sub_1000C64C0(v16);
  uint64_t v18 = v17;
  aBlock[0] = 0;
  id v19 = objc_msgSend(v17, "br_typeIdentifierWithError:", aBlock);

  id v20 = aBlock[0];
  if (v19)
  {
    uint64_t v46 = v7;
    uint64_t v47 = v13;
    unint64_t v48 = v9;
    uint64_t v50 = sub_1000C7440();
    id v21 = v20;

    uint64_t v49 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v49(v15, a2, v4);
    uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v22(v15, 0, 1, v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v15, 1, v4) == 1)
    {
      uint64_t v24 = 0;
    }
    else
    {
      sub_1000C64C0(v23);
      uint64_t v24 = v28;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v15, v4);
    }
    id v29 = objc_allocWithZone((Class)BRShareCopyShareURLOperation);
    NSString v30 = sub_1000C7400();
    swift_bridgeObjectRelease();
    id v31 = [v29 initWithFileURL:v24 documentType:v30];

    if (v31)
    {
      [v31 setQualityOfService:25];
      uint64_t v32 = v53;
      v49(v53, a2, v4);
      uint64_t v34 = v55;
      uint64_t v33 = v56;
      uint64_t v35 = v58;
      (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v55, v57, v58);
      unint64_t v36 = (*(unsigned __int8 *)(v5 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      unint64_t v37 = (v52 + *(unsigned __int8 *)(v33 + 80) + v36) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
      BOOL v38 = (unsigned char *)swift_allocObject();
      v38[16] = v51;
      (*(void (**)(unsigned char *, char *, uint64_t))(v5 + 32))(&v38[v36], v32, v4);
      (*(void (**)(unsigned char *, char *, uint64_t))(v33 + 32))(&v38[v37], v34, v35);
      aBlock[4] = sub_10001A2E4;
      aBlock[5] = v38;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = (id)1107296256;
      aBlock[2] = sub_100019AC4;
      aBlock[3] = &unk_1000FFE20;
      uint64_t v39 = _Block_copy(aBlock);
      swift_release();
      [v31 setCopyShareURLCompletionBlock:v39];
      _Block_release(v39);
      if (qword_10010ACC0 != -1) {
        swift_once();
      }
      [(id)qword_10010B460 addOperation:v31];
    }
    else
    {
      uint64_t v40 = (uint64_t)v47;
      v22(v47, 1, 1, v4);
      sub_1000C7440();
      id v41 = objc_allocWithZone((Class)NSError);
      NSString v42 = sub_1000C7400();
      swift_bridgeObjectRelease();
      id v43 = [v41 initWithDomain:v42 code:80 userInfo:0];

      uint64_t v44 = *(int *)(v46 + 48);
      uint64_t v45 = (uint64_t)v48;
      sub_10001A178(v40, (uint64_t)v48);
      *(void *)(v45 + v44) = v43;
      sub_1000C75B0();
    }
  }
  else
  {
    id v25 = aBlock[0];
    sub_1000C6490();

    swift_willThrow();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v13, 1, 1, v4);
    uint64_t v26 = sub_1000C6480();
    uint64_t v27 = *(int *)(v7 + 48);
    sub_10001A178((uint64_t)v13, (uint64_t)v9);
    *(void *)&v9[v27] = v26;
    sub_1000C75B0();
    swift_errorRelease();
  }
}

uint64_t sub_10001997C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6 = sub_100012854(&qword_10010B498);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100012854((uint64_t *)&unk_10010BDD0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3) {
    sub_1000C64E0();
  }
  sub_10001A740(a1, (uint64_t)v11, (uint64_t *)&unk_10010BDD0);
  if (a2) {
    uint64_t v12 = sub_1000C6480();
  }
  else {
    uint64_t v12 = 0;
  }
  uint64_t v13 = *(int *)(v6 + 48);
  sub_10001A178((uint64_t)v11, (uint64_t)v8);
  *(void *)&v8[v13] = v12;
  sub_100012854(&qword_10010B4A0);
  return sub_1000C75B0();
}

uint64_t sub_100019AC4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = sub_100012854((uint64_t *)&unk_10010BDD0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void (**)(char *, void *))(a1 + 32);
  if (a2)
  {
    sub_1000C64F0();
    uint64_t v10 = sub_1000C6530();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 0, 1, v10);
  }
  else
  {
    uint64_t v11 = sub_1000C6530();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v8, 1, 1, v11);
  }
  swift_retain();
  id v12 = a3;
  v9(v8, a3);
  swift_release();

  return sub_10001326C((uint64_t)v8, (uint64_t *)&unk_10010BDD0);
}

uint64_t sub_100019C0C(uint64_t a1)
{
  uint64_t v2 = sub_100012854((uint64_t *)&unk_10010BDD0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000C6530();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v4, a1, v5);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  uint64_t v8 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
  {
    sub_1000C64C0(v7);
    uint64_t v8 = v9;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  }
  id v10 = [self accountDescriptorForURL:v8 mustBeLoggedIn:1];

  if (!v10) {
    return 0;
  }
  id v11 = [v10 accountIdentifier];
  if (!v11)
  {

    return 0;
  }
  id v12 = v11;
  uint64_t v13 = sub_1000C7440();

  return v13;
}

uint64_t sub_100019DC8()
{
  uint64_t v0 = self;
  if (![v0 mightHaveDataSeparatedAccountDescriptor]) {
    return 0;
  }
  id v1 = [v0 allLoggedInAccountDescriptors];
  if (!v1) {
    return 0;
  }
  sub_1000132C8(0, &qword_10010B468);
  unint64_t v2 = sub_1000C7540();

  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_5;
    }
LABEL_20:
    swift_bridgeObjectRelease_n();
    return 0;
  }
LABEL_19:
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1000C7990();
  if (!v3) {
    goto LABEL_20;
  }
LABEL_5:
  for (uint64_t i = 4; ; ++i)
  {
    if ((v2 & 0xC000000000000001) != 0) {
      id v5 = (id)sub_1000C78F0();
    }
    else {
      id v5 = *(id *)(v2 + 8 * i);
    }
    uint64_t v6 = v5;
    uint64_t v7 = i - 3;
    if (__OFADD__(i - 4, 1))
    {
      __break(1u);
      goto LABEL_19;
    }
    if ([v5 isDataSeparated]) {
      break;
    }

    if (v7 == v3)
    {
      swift_bridgeObjectRelease_n();
      return 0;
    }
  }
  swift_bridgeObjectRelease_n();
  id v9 = [v6 accountIdentifier];

  if (!v9) {
    return 0;
  }
  uint64_t v8 = sub_1000C7440();

  return v8;
}

uint64_t sub_100019F88()
{
  return sub_10001AD24(&qword_10010B470);
}

uint64_t sub_100019F98(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100019FA8()
{
  return swift_release();
}

void sub_100019FB0(uint64_t a1)
{
  sub_100017954(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_100019FB8()
{
  uint64_t v1 = *(void *)(sub_100012854((uint64_t *)&unk_10010BDD0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 17) & ~v2;
  uint64_t v13 = *(void *)(v1 + 64);
  uint64_t v4 = sub_100012854(&qword_10010B488);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = sub_1000C6530();
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v0 + v3, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v0 + v3, v8);
  }
  uint64_t v10 = (v3 + v13 + v6) & ~v6;
  uint64_t v11 = v10 + v7;
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v10, v4);

  return _swift_deallocObject(v0, v11, v2 | v6 | 7);
}

uint64_t sub_10001A178(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100012854((uint64_t *)&unk_10010BDD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10001A1E0(void *a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_100012854((uint64_t *)&unk_10010BDD0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  sub_100012854(&qword_10010B488);
  char v7 = *(unsigned char *)(v2 + 16);

  return sub_100017E34(a1, a2, v7, v2 + v6);
}

void sub_10001A2D0(uint64_t a1)
{
  sub_100019324(a1, *(void *)(v1 + 16));
}

uint64_t sub_10001A2D8()
{
  return sub_10001AD24(&qword_10010B4A0);
}

uint64_t sub_10001A2E4(uint64_t a1, uint64_t a2)
{
  sub_1000C6530();
  sub_100012854(&qword_10010B4A0);
  char v5 = *(unsigned char *)(v2 + 16);

  return sub_10001997C(a1, a2, v5);
}

uint64_t sub_10001A3D0(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  char v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *char v5 = v2;
  v5[1] = sub_10001AE78;
  return sub_1000146E0(a1, v4);
}

void sub_10001A470(uint64_t a1)
{
  sub_100018030(a1, *(void *)(v1 + 16));
}

uint64_t sub_10001A478()
{
  return sub_10001AD24(&qword_10010B4C8);
}

uint64_t sub_10001A484(void *a1, uint64_t a2, uint64_t a3)
{
  sub_1000C6530();
  sub_100012854(&qword_10010B4C8);
  char v7 = *(unsigned char *)(v3 + 16);

  return sub_10001855C(a1, a2, a3, v7);
}

uint64_t sub_10001A578(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10001AE78;
  return sub_1000154BC(a1);
}

uint64_t sub_10001A610()
{
  uint64_t v1 = sub_100012854(&qword_10010B4F8);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10001A6A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_100012854(&qword_10010B4F8);

  return sub_100019034(a1, a2, a3, a4);
}

uint64_t sub_10001A740(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100012854(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10001A7A8(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1000C6530() - 8);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  void *v6 = v2;
  v6[1] = sub_10001AE78;
  v6[10] = a1;
  v6[11] = v5;
  return _swift_task_switch(sub_100014FB4, 0, 0);
}

void sub_10001A890(uint64_t a1)
{
  sub_100018824(a1, *(void *)(v1 + 16));
}

uint64_t sub_10001A898()
{
  return sub_10001AD24(&qword_10010B530);
}

uint64_t sub_10001A8A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1000C6530();
  sub_100012854(&qword_10010B530);
  return sub_100018AC0(a1, a2, a3, a4, a5, a6, a7, a8, *(unsigned char *)(v8 + 16));
}

uint64_t sub_10001A9D8()
{
  uint64_t v2 = *(void *)(sub_1000C6530() - 8);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_10001AE78;
  v4[2] = v3;
  return _swift_task_switch(sub_100016600, 0, 0);
}

uint64_t sub_10001AABC()
{
  uint64_t v1 = sub_1000C6530();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10001AB4C()
{
  uint64_t v2 = *(void *)(sub_1000C6530() - 8);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_100013B98;
  v4[2] = v3;
  return _swift_task_switch(sub_100016828, 0, 0);
}

void sub_10001AC2C(uint64_t a1)
{
  sub_100017430(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10001AC34()
{
  return sub_10001AD24(&qword_10010B470);
}

uint64_t sub_10001AC40(uint64_t a1)
{
  sub_1000C6530();
  sub_100012854(&qword_10010B470);
  return sub_1000178CC(a1, *(unsigned char *)(v1 + 16));
}

void sub_10001AD10(uint64_t a1)
{
  sub_100016FAC(a1, *(void *)(v1 + 16));
}

uint64_t sub_10001AD18()
{
  return sub_10001AD24(&qword_10010B470);
}

uint64_t sub_10001AD24(uint64_t *a1)
{
  uint64_t v3 = sub_1000C6530();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = (v5 + 17) & ~v5;
  uint64_t v7 = *(void *)(v4 + 64);
  uint64_t v8 = sub_100012854(a1);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = (v6 + v7 + v10) & ~v10;
  uint64_t v12 = v11 + *(void *)(v9 + 64);
  uint64_t v13 = v5 | v10 | 7;
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1 + v6, v3);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v1 + v11, v8);

  return _swift_deallocObject(v1, v12, v13);
}

uint64_t sub_10001AEBC()
{
  return sub_10001AEE4();
}

uint64_t sub_10001AED0()
{
  return sub_10001AEE4();
}

uint64_t sub_10001AEE4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10001AF50()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10001AFC4()
{
  return sub_10001AEE4();
}

uint64_t sub_10001AFD8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10001B04C()
{
  return sub_10001AEE4();
}

uint64_t sub_10001B060()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10001B0D4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  uint64_t result = v3;
  uint64_t v1 = *(void *)(v3 + 16);
  if (!v1)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (*(unsigned char *)(v3 + 32) != 1)
  {
    if (v1 != 1)
    {
      uint64_t v2 = 0;
      goto LABEL_7;
    }
    goto LABEL_9;
  }
  if (v1 != 1)
  {
    uint64_t v2 = *(unsigned __int8 *)(v3 + 33);
LABEL_7:
    swift_bridgeObjectRelease();
    return v2;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_10001B18C(char a1, uint64_t a2, char a3, char a4)
{
  *(unsigned char *)(v5 + 142) = a4;
  *(unsigned char *)(v5 + 141) = a3;
  *(void *)(v5 + 40) = a2;
  *(void *)(v5 + 48) = v4;
  *(unsigned char *)(v5 + 140) = a1;
  uint64_t v6 = sub_1000C66D0();
  *(void *)(v5 + 56) = v6;
  *(void *)(v5 + 64) = *(void *)(v6 - 8);
  *(void *)(v5 + 72) = swift_task_alloc();
  sub_1000C75D0();
  *(void *)(v5 + 80) = sub_1000C75C0();
  uint64_t v8 = sub_1000C7590();
  *(void *)(v5 + 88) = v8;
  *(void *)(v5 + 96) = v7;
  return _swift_task_switch(sub_10001B28C, v8, v7);
}

uint64_t sub_10001B28C()
{
  uint64_t v36 = v0;
  int v1 = *(unsigned __int8 *)(v0 + 140);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  if (*(unsigned __int8 *)(v0 + 136) == v1) {
    goto LABEL_6;
  }
  char v2 = *(unsigned char *)(v0 + 140);
  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 138) = v2;
  swift_retain();
  sub_1000C67F0();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v3 = *(void **)(v0 + 16);
  *(void *)(v0 + 104) = v3;
  if (!v3) {
    goto LABEL_6;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  if ((*(unsigned char *)(v0 + 137) & 1) == 0)
  {
    swift_release();

    goto LABEL_7;
  }
  swift_retain();
  id v4 = v3;
  sub_100084324(v3);
  unsigned __int8 v6 = v5;

  swift_release();
  sub_1000C66B0();
  uint64_t v7 = sub_1000C66C0();
  os_log_type_t v8 = sub_1000C7690();
  if (os_log_type_enabled(v7, v8))
  {
    os_log_type_t type = v8;
    uint64_t v9 = *(char *)(v0 + 140);
    uint64_t v10 = swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    uint64_t v11 = *(void *)&aNone_2[8 * v9];
    *(_DWORD *)uint64_t v10 = 136315906;
    *(void *)(v0 + 32) = sub_1000720D0(v11, qword_1000CC048[v9], &v35);
    sub_1000C7850();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2080;
    uint64_t v12 = (char)v6;
    uint64_t v30 = *(void *)(v0 + 64);
    uint64_t v31 = *(void *)(v0 + 56);
    uint64_t v32 = *(void *)(v0 + 72);
    unsigned __int8 v13 = v6;
    int v14 = *(unsigned __int8 *)(v0 + 142);
    id v34 = v4;
    int v15 = *(unsigned __int8 *)(v0 + 141);
    *(void *)(v0 + 24) = sub_1000720D0(*(void *)&aNone_2[v12 * 8], qword_1000CC048[v12], &v35);
    sub_1000C7850();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 22) = 1024;
    *(_DWORD *)(v0 + 132) = v14;
    unsigned __int8 v6 = v13;
    sub_1000C7850();
    *(_WORD *)(v10 + 28) = 1024;
    *(_DWORD *)(v0 + 128) = v15;
    id v4 = v34;
    sub_1000C7850();
    _os_log_impl((void *)&_mh_execute_header, v7, type, "changeReadWritePermission newPermission: %s, oldSharePermission: %s,\nupdateExistingParticipants: %{BOOL}d, saveShare: %{BOOL}d", (uint8_t *)v10, 0x22u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v32, v31);
  }
  else
  {
    uint64_t v19 = *(void *)(v0 + 64);
    uint64_t v18 = *(void *)(v0 + 72);
    uint64_t v20 = *(void *)(v0 + 56);

    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  }
  if (*(unsigned __int8 *)(v0 + 140) == v6)
  {
LABEL_38:

LABEL_6:
    swift_release();
LABEL_7:
    swift_task_dealloc();
    id v16 = *(uint64_t (**)(void))(v0 + 8);
    return v16();
  }
  uint64_t v21 = 1;
  int v22 = 0;
  switch(*(unsigned char *)(v0 + 140))
  {
    case 1:
      int v22 = 0;
      uint64_t v21 = 3;
      goto LABEL_16;
    case 2:
      int v22 = 1;
      uint64_t v21 = 2;
      goto LABEL_16;
    case 3:
      return sub_1000C7980();
    default:
LABEL_16:
      swift_getKeyPath();
      swift_getKeyPath();
      sub_1000C67E0();
      swift_release();
      swift_release();
      if (*(unsigned char *)(v0 + 139) == 1) {
        [v4 setPublicPermission:v21];
      }
      if (*(unsigned char *)(v0 + 142) != 1 || [v4 publicPermission] != (id)1) {
        goto LABEL_34;
      }
      id v23 = [v4 participants];
      sub_1000132C8(0, (unint64_t *)&unk_10010B070);
      unint64_t v24 = sub_1000C7540();

      if (v24 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v25 = sub_1000C7990();
        swift_bridgeObjectRelease();
        if (!v25) {
          goto LABEL_33;
        }
      }
      else
      {
        uint64_t v25 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v25) {
          goto LABEL_33;
        }
      }
      if (v25 < 1)
      {
        __break(1u);
        JUMPOUT(0x10001B9FCLL);
      }
      for (uint64_t i = 0; i != v25; ++i)
      {
        if ((v24 & 0xC000000000000001) != 0) {
          id v27 = (id)sub_1000C78F0();
        }
        else {
          id v27 = *(id *)(v24 + 8 * i + 32);
        }
        uint64_t v28 = v27;
        if ([v27 role] != (id)1)
        {
          [v28 setPermission:v21];
          if (v22) {
            [v28 setRole:3];
          }
        }
      }
LABEL_33:
      swift_bridgeObjectRelease();
LABEL_34:
      if (*(unsigned char *)(v0 + 141) != 1) {
        goto LABEL_38;
      }
      id v29 = (void *)swift_task_alloc();
      *(void *)(v0 + 112) = v29;
      void *v29 = v0;
      v29[1] = sub_10001BA0C;
      uint64_t result = sub_10004E7B4(1);
      break;
  }
  return result;
}

uint64_t sub_10001BA0C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 120) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 96);
  uint64_t v4 = *(void *)(v2 + 88);
  if (v0) {
    unsigned __int8 v5 = sub_10001BBBC;
  }
  else {
    unsigned __int8 v5 = sub_10001BB48;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10001BB48()
{
  int v1 = *(void **)(v0 + 104);
  swift_release();

  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10001BBBC()
{
  int v1 = *(void **)(v0 + 104);
  swift_release();

  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10001BC30(char a1, uint64_t a2, char a3)
{
  *(unsigned char *)(v4 + 187) = a3;
  *(void *)(v4 + 88) = a2;
  *(void *)(v4 + 96) = v3;
  *(unsigned char *)(v4 + 186) = a1;
  uint64_t v5 = sub_1000C66D0();
  *(void *)(v4 + 104) = v5;
  *(void *)(v4 + 112) = *(void *)(v5 - 8);
  *(void *)(v4 + 120) = swift_task_alloc();
  sub_1000C75D0();
  *(void *)(v4 + 128) = sub_1000C75C0();
  uint64_t v7 = sub_1000C7590();
  *(void *)(v4 + 136) = v7;
  *(void *)(v4 + 144) = v6;
  return _swift_task_switch(sub_10001BD2C, v7, v6);
}

uint64_t sub_10001BD2C()
{
  uint64_t v33 = v0;
  int v1 = *(unsigned __int8 *)(v0 + 186);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  if (*(unsigned __int8 *)(v0 + 180) != v1)
  {
    char v2 = *(unsigned char *)(v0 + 186);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1000C67E0();
    swift_release();
    swift_release();
    uint64_t v3 = *(char *)(v0 + 184);
    swift_getKeyPath();
    swift_getKeyPath();
    *(unsigned char *)(v0 + 183) = v2;
    swift_retain();
    sub_1000C67F0();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1000C67E0();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v4 = *(void **)(v0 + 56);
    *(void *)(v0 + 152) = v4;
    if (v4)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      sub_1000C67E0();
      swift_release();
      swift_release();
      swift_release();
      if ((*(unsigned char *)(v0 + 182) & 1) == 0)
      {
        swift_release();

        goto LABEL_7;
      }
      uint64_t v30 = v3;
      int v5 = *(unsigned __int8 *)(v0 + 186);
      uint64_t v6 = (char *)[v4 publicPermission];
      if (v5 == 2)
      {
        uint64_t v7 = 1;
      }
      else
      {
        swift_getKeyPath();
        swift_getKeyPath();
        sub_1000C67E0();
        swift_release();
        swift_release();
        if (*(unsigned char *)(v0 + 181) != 3)
        {
          swift_getKeyPath();
          swift_getKeyPath();
          sub_1000C67E0();
          swift_release();
          swift_release();
          uint64_t v7 = 1;
          switch(*(unsigned char *)(v0 + 185))
          {
            case 1:
              break;
            case 2:
              uint64_t v7 = 2;
              goto LABEL_13;
            case 3:
              return sub_1000C7980();
            default:
              goto LABEL_13;
          }
        }
        uint64_t v7 = 3;
      }
LABEL_13:
      uint64_t v10 = (id *)(v0 + 72);
      *(void *)(v0 + 72) = v7;
      sub_1000C66B0();
      uint64_t v11 = sub_1000C66C0();
      os_log_type_t v12 = sub_1000C7690();
      if (os_log_type_enabled(v11, v12))
      {
        os_log_type_t v27 = v12;
        uint64_t v28 = v7;
        log = v11;
        uint64_t v13 = *(char *)(v0 + 186);
        uint64_t v14 = swift_slowAlloc();
        uint64_t v32 = swift_slowAlloc();
        uint64_t v15 = *(void *)&aNone_3[8 * v13];
        *(_DWORD *)uint64_t v14 = 136316162;
        *(void *)(v0 + 80) = sub_1000720D0(v15, *(void *)&aPublicmPrivate[8 * v13 + 16], &v32);
        sub_1000C7850();
        swift_bridgeObjectRelease();
        *(_WORD *)(v14 + 12) = 2080;
        *(void *)(v0 + 64) = sub_1000720D0(*(void *)&aNone_3[8 * v30], *(void *)&aPublicmPrivate[8 * v30 + 16], &v32);
        sub_1000C7850();
        swift_bridgeObjectRelease();
        *(_WORD *)(v14 + 22) = 2080;
        if ((unint64_t)(v6 - 1) > 2) {
          return sub_1000C7980();
        }
        *(void *)(v0 + 48) = sub_1000720D0(*(void *)&aNone_4[8 * (void)(v6 - 1)], *(void *)&aReadonlReadwri[8 * (void)(v6 - 1) + 16], &v32);
        sub_1000C7850();
        swift_bridgeObjectRelease();
        uint64_t v16 = 8 * v28 - 8;
        uint64_t v17 = *(void *)&aNone_4[v16];
        unint64_t v18 = *(void *)&aReadonlReadwri[v16 + 16];
        *(_WORD *)(v14 + 32) = 2080;
        uint64_t v19 = *(void *)(v0 + 112);
        uint64_t v31 = *(void *)(v0 + 120);
        uint64_t v20 = *(void *)(v0 + 104);
        int v21 = *(unsigned __int8 *)(v0 + 187);
        *(void *)(v0 + 40) = sub_1000720D0(v17, v18, &v32);
        sub_1000C7850();
        swift_bridgeObjectRelease();
        *(_WORD *)(v14 + 42) = 1024;
        *(_DWORD *)(v0 + 176) = v21;
        sub_1000C7850();
        _os_log_impl((void *)&_mh_execute_header, log, v27, "changeAccessSetting 4 newAccess: %s, oldAccess: %s oldSharePermission: %s,\nnewSharePermission: %s, saveShare: %{BOOL}d", (uint8_t *)v14, 0x30u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v31, v20);
        uint64_t v10 = (id *)(v0 + 72);
      }
      else
      {
        uint64_t v23 = *(void *)(v0 + 112);
        uint64_t v22 = *(void *)(v0 + 120);
        uint64_t v24 = *(void *)(v0 + 104);

        (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
      }
      swift_beginAccess();
      if (*v10 != v6)
      {
        int v25 = *(unsigned __int8 *)(v0 + 187);
        objc_msgSend(v4, "setPublicPermission:");
        if (v25 == 1)
        {
          uint64_t v26 = (void *)swift_task_alloc();
          *(void *)(v0 + 160) = v26;
          *uint64_t v26 = v0;
          v26[1] = sub_10001C4AC;
          return sub_10004E7B4(1);
        }
      }
    }
  }
  swift_release();
LABEL_7:
  swift_task_dealloc();
  os_log_type_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_10001C4AC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 168) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 144);
  uint64_t v4 = *(void *)(v2 + 136);
  if (v0) {
    int v5 = sub_10001C65C;
  }
  else {
    int v5 = sub_10001C5E8;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10001C5E8()
{
  int v1 = *(void **)(v0 + 152);
  swift_release();

  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10001C65C()
{
  int v1 = *(void **)(v0 + 152);
  swift_release();

  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

NSObject *sub_10001C6D0(uint64_t a1)
{
  uint64_t v2 = sub_1000C66D0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  int v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  BOOL v6 = sub_1000817E0(v24, a1);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v6)
  {
    sub_1000C66B0();
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    os_log_type_t v8 = sub_1000C66C0();
    os_log_type_t v9 = sub_1000C7690();
    if (!os_log_type_enabled(v8, v9))
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
LABEL_23:
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      swift_getKeyPath();
      swift_getKeyPath();
      BOOL v24 = a1;
      swift_bridgeObjectRetain();
      swift_retain();
      return sub_1000C67F0();
    }
    uint64_t v10 = swift_slowAlloc();
    uint64_t result = swift_slowAlloc();
    BOOL v24 = (BOOL)result;
    *(_DWORD *)uint64_t v10 = 136315394;
    uint64_t v11 = *(void *)(a1 + 16);
    if (!v11)
    {
      __break(1u);
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    int v12 = *(unsigned __int8 *)(a1 + 32);
    v22[1] = result;
    if (v12 == 1)
    {
      if (v11 == 1)
      {
LABEL_29:
        __break(1u);
        goto LABEL_30;
      }
      if (*(unsigned char *)(a1 + 33))
      {
        uint64_t v13 = 7237422;
        unint64_t v14 = 0xE300000000000000;
        goto LABEL_13;
      }
    }
    else
    {
      if (v11 == 1)
      {
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
        goto LABEL_29;
      }
      if (v12 == *(unsigned __int8 *)(a1 + 33))
      {
        uint64_t v13 = 1717989166;
        unint64_t v14 = 0xE400000000000000;
LABEL_13:
        uint64_t v23 = sub_1000720D0(v13, v14, (uint64_t *)&v24);
        sub_1000C7850();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v10 + 12) = 2080;
        swift_getKeyPath();
        swift_getKeyPath();
        sub_1000C67E0();
        swift_release();
        swift_release();
        uint64_t result = v23;
        uint64_t v15 = *(void *)(v23 + 16);
        if (v15)
        {
          int v16 = *(unsigned __int8 *)(v23 + 32);
          v22[0] = v8;
          if (v16 == 1)
          {
            if (v15 != 1)
            {
              if (*(unsigned char *)(v23 + 33))
              {
                os_log_type_t v17 = v9;
                uint64_t v18 = 7237422;
                unint64_t v19 = 0xE300000000000000;
LABEL_22:
                swift_bridgeObjectRelease();
                uint64_t v23 = sub_1000720D0(v18, v19, (uint64_t *)&v24);
                sub_1000C7850();
                swift_release_n();
                swift_bridgeObjectRelease();
                os_log_type_t v20 = v17;
                os_log_t v21 = v22[0];
                _os_log_impl((void *)&_mh_execute_header, v22[0], v20, "changeNewParticipantsCanBeCoOwners 4 newState: %s, oldState: %s", (uint8_t *)v10, 0x16u);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_slowDealloc();

                goto LABEL_23;
              }
LABEL_20:
              os_log_type_t v17 = v9;
              unint64_t v19 = 0xE600000000000000;
              uint64_t v18 = 0x646578696D2ELL;
              goto LABEL_22;
            }
LABEL_30:
            __break(1u);
            return result;
          }
          if (v15 != 1)
          {
            if (v16 == *(unsigned __int8 *)(v23 + 33))
            {
              os_log_type_t v17 = v9;
              uint64_t v18 = 1717989166;
              unint64_t v19 = 0xE400000000000000;
              goto LABEL_22;
            }
            goto LABEL_20;
          }
          goto LABEL_28;
        }
        goto LABEL_26;
      }
    }
    unint64_t v14 = 0xE600000000000000;
    uint64_t v13 = 0x646578696D2ELL;
    goto LABEL_13;
  }
  return result;
}

void *sub_10001CB20(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v83 = *v1;
  uint64_t v84 = a1;
  uint64_t v3 = sub_100012854((uint64_t *)&unk_10010C3B0);
  uint64_t v75 = *(void *)(v3 - 8);
  uint64_t v76 = v3;
  __chkstk_darwin();
  v74 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100012854(&qword_10010B6B8);
  uint64_t v78 = *(void *)(v5 - 8);
  uint64_t v79 = v5;
  __chkstk_darwin();
  uint64_t v77 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100012854(&qword_10010B6C0);
  uint64_t v81 = *(void *)(v7 - 8);
  uint64_t v82 = v7;
  __chkstk_darwin();
  uint64_t v80 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100012854((uint64_t *)&unk_10010BBD0);
  __chkstk_darwin();
  id v73 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_100012854(&qword_10010CFA0);
  uint64_t v59 = *(void *)(v60 - 8);
  __chkstk_darwin();
  uint64_t v69 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100012854((uint64_t *)&unk_10010CF50);
  uint64_t v71 = *(void *)(v11 - 8);
  uint64_t v72 = v11;
  __chkstk_darwin();
  v70 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = (void *)sub_100012854(&qword_10010BCE0);
  uint64_t v67 = (void (**)(void, void, void))*(v68 - 1);
  __chkstk_darwin();
  id v66 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_100012854((uint64_t *)&unk_10010C490);
  uint64_t v64 = *(void *)(v65 - 8);
  __chkstk_darwin();
  unint64_t v63 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v62 = sub_100012854(&qword_10010BB60);
  uint64_t v15 = *(void *)(v62 - 8);
  __chkstk_darwin();
  os_log_type_t v17 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100012854((uint64_t *)&unk_10010BD00);
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin();
  os_log_t v21 = (char *)&v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100012854((uint64_t *)&unk_10010D0D0);
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin();
  int v25 = (char *)&v58 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = (char *)v2 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12OptionsModel__readWritePermission;
  LOBYTE(v86) = 1;
  sub_1000C67B0();
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v26, v25, v22);
  os_log_type_t v27 = (char *)v2 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12OptionsModel__sharingMode;
  LOBYTE(v86) = 0;
  sub_1000C67B0();
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v27, v21, v18);
  uint64_t v28 = (char *)v2 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12OptionsModel__allowCoOwnersEditing;
  LOBYTE(v86) = 0;
  sub_1000C67B0();
  id v29 = *(void (**)(char *, char *, unint64_t))(v15 + 32);
  unint64_t v30 = v62;
  v29(v28, v17, v62);
  uint64_t v31 = (char *)v2 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12OptionsModel__newParticipantsCanBeCoOwners;
  uint64_t v86 = &off_1000FF210;
  uint64_t v32 = v63;
  sub_1000C67B0();
  (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v31, v32, v65);
  uint64_t v33 = (char *)v2
      + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12OptionsModel__participantsAreAlwaysCoOwners;
  LOBYTE(v86) = 0;
  sub_1000C67B0();
  v29(v33, v17, v30);
  uint64_t v34 = (char *)v2
      + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12OptionsModel__currentUserCanInvitePublisher;
  LOBYTE(v86) = 2;
  sub_100012854((uint64_t *)&unk_10010B5F8);
  uint64_t v35 = v66;
  sub_1000C67B0();
  ((void (**)(char *, char *, void *))v67)[4](v34, v35, v68);
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && sub_1000C7990()) {
    uint64_t v36 = (void *)sub_100072C7C((unint64_t)_swiftEmptyArrayStorage);
  }
  else {
    uint64_t v36 = &_swiftEmptySetSingleton;
  }
  uint64_t v37 = v60;
  uint64_t v38 = v59;
  uint64_t v61 = v2;
  uint64_t v68 = (void *)((char *)v2 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12OptionsModel_store);
  *uint64_t v68 = v36;
  uint64_t v39 = v84;
  *(void *)((char *)v2 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12OptionsModel_ckShareModel) = v84;
  swift_beginAccess();
  uint64_t v85 = 15;
  swift_retain();
  sub_1000C67B0();
  swift_endAccess();
  swift_beginAccess();
  sub_100012854((uint64_t *)&unk_10010BC90);
  uint64_t v40 = v69;
  sub_1000C67C0();
  swift_endAccess();
  uint64_t v67 = (void (**)(void, void, void))self;
  uint64_t v86 = (_UNKNOWN **)[v67 mainRunLoop];
  uint64_t v65 = sub_1000C7820();
  uint64_t v41 = *(void *)(v65 - 8);
  uint64_t v64 = *(void *)(v41 + 56);
  id v66 = (char *)(v41 + 56);
  uint64_t v42 = (uint64_t)v73;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v64)(v73, 1, 1, v65);
  unint64_t v63 = (char *)sub_1000132C8(0, (unint64_t *)&qword_10010C4E0);
  sub_10001E454(&qword_10010D0A0, &qword_10010CFA0);
  unint64_t v62 = sub_10001E278();
  id v43 = v70;
  sub_1000C6850();
  sub_10001E2E0(v42);

  (*(void (**)(char *, uint64_t))(v38 + 8))(v40, v37);
  uint64_t v44 = swift_allocObject();
  uint64_t v45 = v61;
  swift_weakInit();
  uint64_t v46 = swift_allocObject();
  *(void *)(v46 + 16) = v44;
  *(void *)(v46 + 24) = v39;
  sub_10001E454(&qword_10010D120, (uint64_t *)&unk_10010CF50);
  swift_retain();
  uint64_t v47 = v72;
  sub_1000C6870();
  swift_release();
  (*(void (**)(char *, uint64_t))(v71 + 8))(v43, v47);
  swift_beginAccess();
  sub_1000C6760();
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  sub_100012854((uint64_t *)&unk_10010C500);
  unint64_t v48 = v74;
  sub_1000C67C0();
  swift_endAccess();
  sub_10001E454((unint64_t *)&unk_10010D1C0, (uint64_t *)&unk_10010C3B0);
  sub_10001E3C0();
  uint64_t v50 = v76;
  uint64_t v49 = v77;
  sub_1000C6860();
  (*(void (**)(char *, uint64_t))(v75 + 8))(v48, v50);
  uint64_t v86 = (_UNKNOWN **)[v67 mainRunLoop];
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v64)(v42, 1, 1, v65);
  sub_10001E454(&qword_10010D200, &qword_10010B6B8);
  uint64_t v51 = v79;
  uint64_t v52 = v80;
  sub_1000C6850();
  sub_10001E2E0(v42);

  (*(void (**)(char *, uint64_t))(v78 + 8))(v49, v51);
  uint64_t v53 = swift_allocObject();
  swift_weakInit();
  uint64_t v54 = swift_allocObject();
  uint64_t v55 = v83;
  *(void *)(v54 + 16) = v53;
  *(void *)(v54 + 24) = v55;
  sub_10001E454(&qword_10010B6C8, &qword_10010B6C0);
  uint64_t v56 = v82;
  sub_1000C6870();
  swift_release();
  (*(void (**)(char *, uint64_t))(v81 + 8))(v52, v56);
  swift_beginAccess();
  sub_1000C6760();
  swift_endAccess();
  swift_release();
  swift_release();
  return v45;
}

void sub_10001D82C(void **a1)
{
  int v1 = *a1;
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    if (v1)
    {
      id v2 = v1;
      [v2 publicPermission];
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      sub_1000C67F0();
      id v3 = v2;
      sub_100084324(v1);

      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      sub_1000C67F0();
      id v4 = [v3 currentUserParticipant];
      if (v4)
      {
        uint64_t v5 = v4;
        [v4 role];
        sub_1000C7730();
        sub_1000132C8(0, &qword_10010B6D0);
        id v6 = [v3 owner];
        sub_1000C7800();

        swift_getKeyPath();
        swift_getKeyPath();
        sub_1000C67F0();

        return;
      }
    }
    swift_release();
  }
}

uint64_t sub_10001DA34(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1000C67E0();
    swift_release();
    swift_release();
    char v3 = sub_10001DBB0(v4, v1);
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1000C67F0();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1000C67E0();
    swift_release();
    swift_release();
    sub_10001DC5C(v3, v1);
    swift_getKeyPath();
    swift_getKeyPath();
    return sub_1000C67F0();
  }
  return result;
}

uint64_t sub_10001DBB0(unsigned __int8 a1, uint64_t a2)
{
  int v2 = a1;
  uint64_t v3 = a2 & 0xC;
  uint64_t result = (a2 >> 3) & 1;
  while (2)
  {
    switch(v2)
    {
      case 1:
        int v2 = 2;
        if ((a2 & 8) == 0) {
          continue;
        }
        break;
      case 2:
        int v2 = 1;
        if (v3 == 8) {
          continue;
        }
        uint64_t result = (a2 >> 1) & 2;
        break;
      case 3:
        if (v3 != 12) {
          goto LABEL_9;
        }
        uint64_t result = 3;
        break;
      default:
        if (a2)
        {
LABEL_9:
          if ((a2 & 8) != 0)
          {
            BOOL v5 = v2 == 1;
            int v2 = 1;
            if (!v5) {
              continue;
            }
          }
          else
          {
            BOOL v5 = v2 == 2;
            int v2 = 2;
            if (!v5) {
              continue;
            }
          }
        }
        uint64_t result = 0;
        break;
    }
    return result;
  }
}

uint64_t sub_10001DC5C(char a1, uint64_t a2)
{
  if ((a2 & 2) != 0) {
    char v3 = 2;
  }
  else {
    char v3 = 1;
  }
  if ((a2 & 1u) <= (a2 == 0)) {
    uint64_t result = a2 == 0;
  }
  else {
    uint64_t result = a2 & 1;
  }
  do
  {
    while (a1)
    {
      if (a1 == 1)
      {
        a1 = 2;
        if ((a2 & 3) != 2) {
          return result;
        }
      }
      else
      {
        a1 = 1;
        if (a2 == 0 || (a2 & 2) != 0) {
          return 2;
        }
      }
    }
    a1 = v3;
  }
  while (a2);
  return 0;
}

uint64_t sub_10001DCD0()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12OptionsModel__readWritePermission;
  uint64_t v2 = sub_100012854((uint64_t *)&unk_10010D0D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12OptionsModel__sharingMode;
  uint64_t v4 = sub_100012854((uint64_t *)&unk_10010BD00);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12OptionsModel__sharingOptionsAllowed;
  uint64_t v6 = sub_100012854((uint64_t *)&unk_10010C500);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12OptionsModel__allowCoOwnersEditing;
  uint64_t v8 = sub_100012854(&qword_10010BB60);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  v9(v7, v8);
  uint64_t v10 = v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12OptionsModel__newParticipantsCanBeCoOwners;
  uint64_t v11 = sub_100012854((uint64_t *)&unk_10010C490);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  v9(v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12OptionsModel__participantsAreAlwaysCoOwners, v8);
  uint64_t v12 = v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12OptionsModel__currentUserCanInvitePublisher;
  uint64_t v13 = sub_100012854(&qword_10010BCE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_10001DF2C()
{
  return type metadata accessor for OptionsModel();
}

uint64_t type metadata accessor for OptionsModel()
{
  uint64_t result = qword_10010B5C8;
  if (!qword_10010B5C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10001DF80()
{
  sub_10001E1A4(319, &qword_10010B5D8);
  if (v0 <= 0x3F)
  {
    sub_10001E1A4(319, &qword_10010B5E0);
    if (v1 <= 0x3F)
    {
      sub_10001E1A4(319, &qword_10010CB90);
      if (v2 <= 0x3F)
      {
        sub_10001E1A4(319, (unint64_t *)&qword_10010B9B0);
        if (v3 <= 0x3F)
        {
          sub_10001E1A4(319, &qword_10010B5E8);
          if (v4 <= 0x3F)
          {
            sub_10001E1EC();
            if (v5 <= 0x3F) {
              swift_updateClassMetadata2();
            }
          }
        }
      }
    }
  }
}

void sub_10001E1A4(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_1000C6800();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

void sub_10001E1EC()
{
  if (!qword_10010B5F0)
  {
    sub_100013128((uint64_t *)&unk_10010B5F8);
    unint64_t v0 = sub_1000C6800();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10010B5F0);
    }
  }
}

unint64_t sub_10001E278()
{
  unint64_t result = qword_10010C4F0;
  if (!qword_10010C4F0)
  {
    sub_1000132C8(255, (unint64_t *)&qword_10010C4E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010C4F0);
  }
  return result;
}

uint64_t sub_10001E2E0(uint64_t a1)
{
  uint64_t v2 = sub_100012854((uint64_t *)&unk_10010BBD0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10001E340()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10001E378()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_10001E3B8(void **a1)
{
}

unint64_t sub_10001E3C0()
{
  unint64_t result = qword_10010C510;
  if (!qword_10010C510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010C510);
  }
  return result;
}

uint64_t sub_10001E414()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10001E44C(uint64_t *a1)
{
  return sub_10001DA34(a1);
}

uint64_t sub_10001E454(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100013128(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10001E4B0(char a1)
{
  if (a1 == 8) {
    return 0x6E776F6E6B6E752ELL;
  }
  if (a1 == 9) {
    return 0x6E656D75636F642ELL;
  }
  sub_1000C78D0(19);
  swift_bridgeObjectRelease();
  uint64_t v3 = 8 * a1;
  v4._countAndFlagsBits = *(void *)&aUnspeciNotes[v3];
  v4._object = *(void **)&aFied[v3];
  sub_1000C74B0(v4);
  swift_bridgeObjectRelease();
  v5._countAndFlagsBits = 41;
  v5._object = (void *)0xE100000000000000;
  sub_1000C74B0(v5);
  return 0xD000000000000010;
}

uint64_t sub_10001E5A0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = sub_100012854(&qword_10010B4B0);
  *(void *)(v2 + 24) = v4;
  *(void *)(v2 + 32) = swift_task_alloc();
  *(void *)(v2 + 40) = swift_task_alloc();
  *(void *)(v2 + 48) = swift_task_alloc();
  uint64_t v5 = swift_task_alloc();
  *(void *)(v2 + 56) = v5;
  uint64_t v6 = *(int *)(v4 + 48);
  *(_DWORD *)(v2 + 88) = v6;
  uint64_t v7 = v5 + v6;
  *(_DWORD *)(v2 + 92) = *(_DWORD *)(v4 + 64);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 64) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_10001E6C0;
  return sub_1000143CC(v7, a2);
}

uint64_t sub_10001E6C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 72) = a1;
  *(void *)(v3 + 80) = a2;
  swift_task_dealloc();
  return _swift_task_switch(sub_10001E7C0, 0, 0);
}

uint64_t sub_10001E7C0()
{
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v3 = *(int *)(v0 + 92);
  uint64_t v5 = *(void **)(v0 + 48);
  uint64_t v4 = *(void **)(v0 + 56);
  uint64_t v6 = *(void *)(v0 + 24);
  uint64_t v7 = (uint64_t)v4 + *(int *)(v0 + 88);
  void *v4 = v1;
  *(void *)((char *)v4 + v3) = v2;
  uint64_t v8 = (uint64_t)v5 + *(int *)(v6 + 48);
  uint64_t v9 = *(int *)(v6 + 64);
  *uint64_t v5 = v1;
  sub_1000128FC(v7, v8);
  *(void *)((char *)v5 + v9) = v2;
  if (v2)
  {
    uint64_t v10 = *(void **)(v0 + 80);
    uint64_t v11 = *(void *)(v0 + 56);
    id v12 = v10;
    sub_10001326C(v8, (uint64_t *)&unk_10010BDD0);
    sub_100012A24();
    swift_allocError();
    *(void *)uint64_t v13 = 0xD000000000000010;
    *(void *)(v13 + 8) = 0x80000001000D4400;
    *(void *)(v13 + 24) = 0;
    *(void *)(v13 + 32) = 0;
    *(void *)(v13 + 16) = v10;
    *(unsigned char *)(v13 + 40) = 5;
    swift_willThrow();
    sub_10001326C(v11, &qword_10010B4B0);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
    return v14();
  }
  else
  {
    uint64_t v16 = *(void **)(v0 + 72);
    os_log_type_t v17 = *(void ***)(v0 + 56);
    uint64_t v30 = *(int *)(v0 + 92);
    uint64_t v19 = *(void *)(v0 + 32);
    uint64_t v18 = *(void **)(v0 + 40);
    uint64_t v21 = *(void *)(v0 + 16);
    uint64_t v20 = *(void *)(v0 + 24);
    uint64_t v22 = (uint64_t)v17 + *(int *)(v0 + 88);
    id v23 = v16;
    sub_10001326C(v8, (uint64_t *)&unk_10010BDD0);
    uint64_t v24 = (uint64_t)v18 + *(int *)(v20 + 48);
    uint64_t v25 = *(int *)(v20 + 64);
    void *v18 = v16;
    sub_1000128FC(v22, v24);
    *(void *)((char *)v18 + v25) = 0;
    uint64_t v26 = v19 + *(int *)(v20 + 48);
    os_log_type_t v27 = *v17;
    sub_10001A178(v22, v26);

    sub_10001A178(v26, v21);
    sub_10001326C(v24, (uint64_t *)&unk_10010BDD0);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v28 = *(uint64_t (**)(uint64_t))(v0 + 8);
    uint64_t v29 = *(void *)(v0 + 72);
    return v28(v29);
  }
}

void (*sub_10001EA1C(void (**a1)(id *a1), unint64_t a2, uint64_t a3))(void *a1)
{
  uint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_10001EACC(v6, a2, a3);
  return sub_10001EA84;
}

void sub_10001EA84(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

void (*sub_10001EACC(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)sub_1000C78F0();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return sub_10001EB4C;
  }
  __break(1u);
  return result;
}

void sub_10001EB4C(id *a1)
{
}

uint64_t sub_10001EB54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6)
{
  *(unsigned char *)(v6 + 49) = a6;
  *(unsigned char *)(v6 + 48) = a5;
  *(void *)(v6 + 32) = a3;
  *(void *)(v6 + 40) = a4;
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  return _swift_task_switch(sub_10001EB80, 0, 0);
}

uint64_t sub_10001EB80()
{
  unint64_t v1 = *(void *)(v0 + 16);
  if (v1 >> 62) {
    goto LABEL_36;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  for (uint64_t i = swift_bridgeObjectRetain(); v2; uint64_t i = *(void *)(v0 + 16))
  {
    uint64_t v4 = 0;
    uint64_t v19 = (const mach_header_64 *)((unint64_t)*(unsigned __int8 *)(v0 + 36) << 32);
    unint64_t v5 = v1 & 0xC000000000000001;
    uint64_t v6 = i + 32;
    uint64_t v7 = *(void *)(v0 + 40);
    p_name = (char **)(&stru_100107FF8 + 8);
    while (1)
    {
      id v10 = v5 ? (id)sub_1000C78F0() : *(id *)(v6 + 8 * v4);
      unint64_t v1 = (unint64_t)v10;
      uint64_t v11 = v4 + 1;
      if (__OFADD__(v4, 1)) {
        break;
      }
      if (*(unsigned char *)(v0 + 49) == 1 && objc_msgSend(v10, p_name[470]) != (id)1)
      {
        uint64_t v12 = 1;
        switch(*(unsigned char *)(v0 + 36))
        {
          case 1:
            uint64_t v12 = 3;
            goto LABEL_16;
          case 2:
            uint64_t v12 = 2;
            goto LABEL_16;
          case 3:
            return sub_1000C7980();
          default:
LABEL_16:
            [(id)v1 setPermission:v12];
            uint64_t v13 = *(void *)(v7 + 16);
            if (!v13) {
              goto LABEL_33;
            }
            if (*(unsigned char *)(v7 + 32) != 1)
            {
              if (v13 == 1) {
                goto LABEL_34;
              }
LABEL_26:
              if (*(unsigned char *)(v0 + 48)) {
                goto LABEL_4;
              }
              goto LABEL_27;
            }
            if (v13 == 1) {
              goto LABEL_35;
            }
            if (*(unsigned char *)(v7 + 33) != 1 || v19 != &_mh_execute_header) {
              goto LABEL_26;
            }
            if (objc_msgSend((id)v1, p_name[470]) == (id)3
              || (v14 = *(unsigned char *)(v0 + 48), v18 = [(id)v1 role], uint64_t v15 = sub_1000C7730(), (v14 & 1) != 0)
              || v18 == (id)v15)
            {
LABEL_4:
              uint64_t v9 = sub_1000C7730();
              goto LABEL_5;
            }
LABEL_27:
            uint64_t v9 = 3;
LABEL_5:
            [(id)v1 setRole:v9];
            p_name = &stru_100107FF8.name;
            break;
        }
      }
      [*(id *)(v0 + 24) addParticipant:v1];

      ++v4;
      if (v11 == v2) {
        goto LABEL_28;
      }
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1000C7990();
  }
LABEL_28:
  swift_bridgeObjectRelease();
  uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
  return v16();
}

uint64_t sub_10001EE58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  *(unsigned char *)(v6 + 1036) = a6;
  *(void *)(v6 + 864) = a5;
  *(void *)(v6 + 856) = a4;
  *(void *)(v6 + 848) = a3;
  *(void *)(v6 + 840) = a2;
  *(void *)(v6 + 832) = a1;
  *(void *)(v6 + 872) = sub_100012854((uint64_t *)&unk_10010BDD0);
  *(void *)(v6 + 880) = swift_task_alloc();
  *(void *)(v6 + 888) = swift_task_alloc();
  *(void *)(v6 + 896) = swift_task_alloc();
  uint64_t v7 = sub_1000C66D0();
  *(void *)(v6 + 904) = v7;
  *(void *)(v6 + 912) = *(void *)(v7 - 8);
  *(void *)(v6 + 920) = swift_task_alloc();
  *(void *)(v6 + 928) = swift_task_alloc();
  *(void *)(v6 + 936) = swift_task_alloc();
  *(void *)(v6 + 944) = swift_task_alloc();
  *(void *)(v6 + 952) = swift_task_alloc();
  return _swift_task_switch(sub_10001EFB0, 0, 0);
}

uint64_t sub_10001EFB0()
{
  uint64_t v70 = v0;
  unint64_t v1 = *(void **)(v0 + 840);
  uint64_t v2 = (NSString *)sub_1000C7400();
  SEL v3 = NSSelectorFromString(v2);

  if ([v1 respondsToSelector:v3]) {
    unsigned int v4 = objc_msgSend(*(id *)(v0 + 840), "br_isCloudDocsShare");
  }
  else {
    unsigned int v4 = 0;
  }
  sub_1000C66B0();
  swift_bridgeObjectRetain_n();
  unint64_t v5 = sub_1000C66C0();
  os_log_type_t v6 = sub_1000C7690();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = *(void *)(v0 + 952);
  uint64_t v9 = *(void *)(v0 + 912);
  uint64_t v10 = *(void *)(v0 + 904);
  if (v7)
  {
    uint64_t v66 = *(void *)(v0 + 904);
    char v11 = *(unsigned char *)(v0 + 857);
    uint64_t v12 = swift_slowAlloc();
    uint64_t v69 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136315394;
    uint64_t v13 = sub_10001E4B0(v11);
    *(void *)(v0 + 824) = sub_1000720D0(v13, v14, &v69);
    sub_1000C7850();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v12 + 12) = 1024;
    *(_DWORD *)(v0 + 1032) = v4;
    sub_1000C7850();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "saveShare attr.sharingType: %s, isCloudDocsShare: %{BOOL}d", (uint8_t *)v12, 0x12u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
    v15(v8, v66);
  }
  else
  {
    swift_bridgeObjectRelease_n();

    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
    v15(v8, v10);
  }
  *(void *)(v0 + 960) = v15;
  if ((*(void *)(v0 + 856) & 0xFE00) == 0x800) {
    char v16 = 1;
  }
  else {
    char v16 = v4;
  }
  if (v16)
  {
    uint64_t v17 = *(void *)(v0 + 896);
    id v18 = *(void **)(v0 + 840);
    uint64_t v19 = *(void *)(v0 + 832);
    sub_1000C66B0();
    sub_1000128FC(v19, v17);
    id v20 = v18;
    uint64_t v21 = sub_1000C66C0();
    os_log_type_t v22 = sub_1000C7690();
    BOOL v23 = os_log_type_enabled(v21, v22);
    uint64_t v24 = *(void *)(v0 + 928);
    uint64_t v25 = *(void *)(v0 + 904);
    uint64_t v26 = *(void *)(v0 + 896);
    if (v23)
    {
      uint64_t v68 = *(void *)(v0 + 928);
      uint64_t v27 = *(void *)(v0 + 888);
      uint64_t v28 = *(void **)(v0 + 840);
      uint64_t v63 = *(void *)(v0 + 904);
      uint64_t v29 = swift_slowAlloc();
      unint64_t v62 = (void *)swift_slowAlloc();
      uint64_t v69 = swift_slowAlloc();
      *(_DWORD *)uint64_t v29 = 136315394;
      sub_1000128FC(v26, v27);
      uint64_t v30 = sub_1000C7450();
      *(void *)(v0 + 776) = sub_1000720D0(v30, v31, &v69);
      sub_1000C7850();
      swift_bridgeObjectRelease();
      sub_10001326C(v26, (uint64_t *)&unk_10010BDD0);
      *(_WORD *)(v29 + 12) = 2112;
      *(void *)(v0 + 784) = v28;
      id v32 = v28;
      sub_1000C7850();
      *unint64_t v62 = v28;

      _os_log_impl((void *)&_mh_execute_header, v21, v22, "saveShare performing CloudDocs (fileURL) operation \"%s\" -- %@", (uint8_t *)v29, 0x16u);
      sub_100012854((uint64_t *)&unk_10010B1E0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v15(v68, v63);
    }
    else
    {
      uint64_t v42 = *(void **)(v0 + 840);
      sub_10001326C(*(void *)(v0 + 896), (uint64_t *)&unk_10010BDD0);

      v15(v24, v25);
    }
    id v43 = (int8x16_t *)swift_task_alloc();
    *(void *)(v0 + 1008) = v43;
    v43[1] = vextq_s8(*(int8x16_t *)(v0 + 832), *(int8x16_t *)(v0 + 832), 8uLL);
    sub_100013128(&qword_10010B480);
    swift_asyncLet_begin();
    return _swift_asyncLet_get(v0 + 16, v0 + 696, sub_10001FD04, v0 + 656);
  }
  else
  {
    uint64_t v33 = *(void **)(v0 + 840);
    type metadata accessor for CloudKitOperations();
    uint64_t v34 = (void *)swift_allocObject();
    *(void *)(v0 + 968) = v34;
    void v34[2] = 0xD000000000000021;
    v34[3] = 0x80000001000D4270;
    v34[4] = 0xD000000000000016;
    v34[5] = 0x80000001000D42A0;
    v34[6] = 0xD00000000000001DLL;
    v34[7] = 0x80000001000D42C0;
    *(void *)(v0 + 712) = 0;
    *(void *)(v0 + 720) = 0;
    sub_100012854(&qword_10010CBB0);
    sub_1000C67B0();
    sub_1000C66B0();
    id v35 = v33;
    uint64_t v36 = sub_1000C66C0();
    os_log_type_t v37 = sub_1000C7690();
    BOOL v38 = os_log_type_enabled(v36, v37);
    uint64_t v39 = *(void **)(v0 + 840);
    if (v38)
    {
      uint64_t v40 = (uint8_t *)swift_slowAlloc();
      uint64_t v64 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v40 = 138412290;
      *(void *)(v0 + 816) = v39;
      id v41 = v39;
      sub_1000C7850();
      *uint64_t v64 = v39;

      _os_log_impl((void *)&_mh_execute_header, v36, v37, "saveShare performing CloudKit operation %@", v40, 0xCu);
      sub_100012854((uint64_t *)&unk_10010B1E0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      uint64_t v36 = *(NSObject **)(v0 + 840);
    }
    uint64_t v44 = *(void *)(v0 + 944);
    uint64_t v45 = *(void *)(v0 + 912);
    uint64_t v46 = *(void *)(v0 + 904);
    uint64_t v47 = *(void *)(v0 + 848);

    *(void *)(v0 + 976) = (v45 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    uint64_t v48 = ((uint64_t (*)(uint64_t, uint64_t))v15)(v44, v46);
    if (v47)
    {
      char v67 = *(unsigned char *)(v0 + 1036);
      uint64_t v65 = *(void *)(v0 + 864);
      uint64_t v56 = *(void *)(v0 + 856);
      uint64_t v57 = *(void *)(v0 + 848);
      uint64_t v58 = *(void *)(v0 + 840);
      uint64_t v59 = swift_task_alloc();
      *(void *)(v0 + 984) = v59;
      *(void *)(v59 + 16) = v34;
      *(void *)(v59 + 24) = v58;
      *(_WORD *)(v59 + 32) = v56;
      *(unsigned char *)(v59 + 34) = BYTE2(v56);
      *(unsigned char *)(v59 + 35) = BYTE3(v56);
      *(unsigned char *)(v59 + 36) = BYTE4(v56);
      *(unsigned char *)(v59 + 37) = BYTE5(v56) & 1;
      *(unsigned char *)(v59 + 38) = BYTE6(v56) & 1;
      *(void *)(v59 + 40) = v65;
      *(unsigned char *)(v59 + 48) = v67;
      *(void *)(v59 + 56) = v57;
      uint64_t v60 = (void *)swift_task_alloc();
      *(void *)(v0 + 992) = v60;
      unint64_t v55 = sub_100020FE8();
      void *v60 = v0;
      v60[1] = sub_10001F838;
      unint64_t v51 = 0xD000000000000029;
      unint64_t v52 = 0x80000001000D43B0;
      uint64_t v53 = sub_100020FA0;
      uint64_t v48 = v0 + 800;
      uint64_t v49 = 0;
      uint64_t v50 = 0;
      uint64_t v54 = v59;
    }
    else
    {
      __break(1u);
    }
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v48, v49, v50, v51, v52, v53, v54, v55);
  }
}

uint64_t sub_10001F838()
{
  *(void *)(*(void *)v1 + 1000) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_10001F954;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_10001FACC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10001F954()
{
  uint64_t v1 = *(void *)(v0 + 968);
  swift_task_dealloc();
  swift_setDeallocating();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = v1 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing18CloudKitOperations__ckSourceAppBundleID;
  uint64_t v3 = sub_100012854(&qword_10010B6F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_deallocClassInstance();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_10001FACC()
{
  uint64_t v1 = *(void **)(v0 + 840);
  uint64_t v2 = *(void *)(v0 + 800);
  sub_1000C66B0();
  id v3 = v1;
  uint64_t v4 = sub_1000C66C0();
  os_log_type_t v5 = sub_1000C7690();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = *(void **)(v0 + 840);
    BOOL v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)BOOL v7 = 138412290;
    *(void *)(v0 + 808) = v6;
    id v9 = v6;
    sub_1000C7850();
    *uint64_t v8 = v6;

    _os_log_impl((void *)&_mh_execute_header, v4, v5, "saveShare completed CloudKit operation %@", v7, 0xCu);
    sub_100012854((uint64_t *)&unk_10010B1E0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v10 = *(void **)(v0 + 840);
  }
  swift_release();

  (*(void (**)(void, void))(v0 + 960))(*(void *)(v0 + 936), *(void *)(v0 + 904));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v11 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v11(v2);
}

uint64_t sub_10001FD04()
{
  uint64_t v1 = (void *)v0[87];
  v0[127] = v1;
  uint64_t v2 = (void *)v0[88];
  v0[128] = v2;
  id v3 = v2;
  id v4 = v1;
  return _swift_asyncLet_finish(v0 + 2, v0 + 87, sub_10001FD94, v0 + 92);
}

uint64_t sub_10001FD94()
{
  return _swift_task_switch(sub_10001FDB0, 0, 0);
}

uint64_t sub_10001FDB0()
{
  unint64_t v31 = v0;
  uint64_t v1 = v0[110];
  uint64_t v2 = (void *)v0[105];
  uint64_t v3 = v0[104];
  swift_task_dealloc();
  sub_1000C66B0();
  sub_1000128FC(v3, v1);
  id v4 = v2;
  os_log_type_t v5 = sub_1000C66C0();
  os_log_type_t v6 = sub_1000C7690();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v28 = v0[115];
    uint64_t v29 = (void (*)(uint64_t, uint64_t))v0[120];
    uint64_t v27 = v0[113];
    uint64_t v7 = v0[111];
    uint64_t v8 = v0[110];
    id v9 = (void *)v0[105];
    uint64_t v10 = swift_slowAlloc();
    char v11 = (void *)swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315394;
    sub_1000128FC(v8, v7);
    uint64_t v12 = sub_1000C7450();
    v0[99] = sub_1000720D0(v12, v13, &v30);
    sub_1000C7850();
    swift_bridgeObjectRelease();
    sub_10001326C(v8, (uint64_t *)&unk_10010BDD0);
    *(_WORD *)(v10 + 12) = 2112;
    v0[91] = v9;
    id v14 = v9;
    sub_1000C7850();
    *char v11 = v9;

    _os_log_impl((void *)&_mh_execute_header, v5, v6, "saveShare completed CloudDocs (fileURL) operation \"%s\" -- %@", (uint8_t *)v10, 0x16u);
    sub_100012854((uint64_t *)&unk_10010B1E0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v29(v28, v27);
  }
  else
  {
    uint64_t v15 = (void (*)(uint64_t, uint64_t))v0[120];
    uint64_t v16 = v0[115];
    uint64_t v17 = v0[113];
    id v18 = (void *)v0[105];
    sub_10001326C(v0[110], (uint64_t *)&unk_10010BDD0);

    v15(v16, v17);
  }
  uint64_t v19 = (void *)v0[128];
  id v20 = (void *)v0[127];
  if (v19)
  {
    sub_100012A24();
    swift_allocError();
    *(void *)uint64_t v21 = 0xD000000000000032;
    *(void *)(v21 + 8) = 0x80000001000D4340;
    *(void *)(v21 + 24) = 0;
    *(void *)(v21 + 32) = 0;
    *(void *)(v21 + 16) = v19;
    *(unsigned char *)(v21 + 40) = 4;
    id v22 = v19;
    swift_willThrow();

LABEL_6:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    BOOL v23 = (uint64_t (*)(void))v0[1];
    return v23();
  }
  if (!v20)
  {
    sub_100012A24();
    swift_allocError();
    *(void *)uint64_t v26 = 0xD000000000000032;
    *(void *)(v26 + 8) = 0x80000001000D4340;
    *(_OWORD *)(v26 + 16) = xmmword_1000CC0D0;
    *(void *)(v26 + 32) = 0x80000001000D4380;
    *(unsigned char *)(v26 + 40) = 11;
    swift_willThrow();
    goto LABEL_6;
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v25 = (uint64_t (*)(void *))v0[1];
  return v25(v20);
}

uint64_t sub_100020260(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[7] = a3;
  v4[8] = a4;
  v4[5] = a1;
  v4[6] = a2;
  uint64_t v5 = sub_1000C66D0();
  v4[9] = v5;
  v4[10] = *(void *)(v5 - 8);
  v4[11] = swift_task_alloc();
  sub_100012854((uint64_t *)&unk_10010BDD0);
  v4[12] = swift_task_alloc();
  uint64_t v6 = sub_1000C6530();
  v4[13] = v6;
  v4[14] = *(void *)(v6 - 8);
  v4[15] = swift_task_alloc();
  return _swift_task_switch(sub_1000203B0, 0, 0);
}

uint64_t sub_1000203B0()
{
  if ((*(void *)(v0 + 64) & 0xFE00) != 0x800)
  {
    uint64_t v7 = *(void *)(v0 + 56);
    type metadata accessor for CloudKitOperations();
    uint64_t v8 = (void *)swift_allocObject();
    *(void *)(v0 + 16) = 0;
    *(void *)(v0 + 128) = v8;
    v8[2] = 0xD000000000000021;
    v8[3] = 0x80000001000D4270;
    v8[4] = 0xD000000000000016;
    v8[5] = 0x80000001000D42A0;
    v8[6] = 0xD00000000000001DLL;
    v8[7] = 0x80000001000D42C0;
    *(void *)(v0 + 24) = 0;
    sub_100012854(&qword_10010CBB0);
    id v9 = (void *)sub_1000C67B0();
    if (!v7)
    {
      __break(1u);
      return withCheckedThrowingContinuation<A>(isolation:function:_:)(v9, v10, v11, v12, v13, v14, v15, v16);
    }
    char v17 = *(unsigned char *)(v0 + 69);
    uint64_t v19 = *(void *)(v0 + 48);
    uint64_t v18 = *(void *)(v0 + 56);
    uint64_t v20 = swift_task_alloc();
    *(void *)(v0 + 136) = v20;
    *(void *)(v20 + 16) = v8;
    *(void *)(v20 + 24) = v19;
    *(unsigned char *)(v20 + 32) = v17 & 1;
    *(void *)(v20 + 40) = v18;
    uint64_t v21 = (void *)swift_task_alloc();
    *(void *)(v0 + 144) = v21;
    void *v21 = v0;
    v21[1] = sub_100020758;
    unint64_t v12 = 0xD000000000000030;
    unint64_t v13 = 0x80000001000D42E0;
    uint64_t v16 = (char *)&type metadata for Bool;
    id v14 = sub_100020EE4;
    id v9 = (void *)(v0 + 184);
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v15 = v20;
LABEL_9:
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v9, v10, v11, v12, v13, v14, v15, v16);
  }
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 96);
  sub_1000128FC(*(void *)(v0 + 40), v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) != 1)
  {
    uint64_t v22 = *(void *)(v0 + 120);
    uint64_t v23 = *(void *)(v0 + 48);
    (*(void (**)(uint64_t, void, void))(*(void *)(v0 + 112) + 32))(v22, *(void *)(v0 + 96), *(void *)(v0 + 104));
    uint64_t v24 = swift_task_alloc();
    *(void *)(v0 + 160) = v24;
    *(void *)(v24 + 16) = v22;
    *(void *)(v24 + 24) = v23;
    id v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 168) = v9;
    *id v9 = v0;
    v9[1] = sub_100020AB0;
    unint64_t v12 = 0xD00000000000001ELL;
    uint64_t v16 = (char *)&type metadata for () + 8;
    unint64_t v13 = 0x80000001000D4250;
    id v14 = sub_100020EDC;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v15 = v24;
    goto LABEL_9;
  }
  sub_10001326C(*(void *)(v0 + 96), (uint64_t *)&unk_10010BDD0);
  sub_100012A24();
  swift_allocError();
  *(void *)uint64_t v4 = 0xD000000000000034;
  *(void *)(v4 + 8) = 0x80000001000D41E0;
  *(_OWORD *)(v4 + 16) = xmmword_1000CC0E0;
  *(void *)(v4 + 32) = 0x80000001000D4220;
  *(unsigned char *)(v4 + 40) = 11;
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_100020758()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_10002098C;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_100020874;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100020874()
{
  uint64_t v1 = *(void *)(v0 + 128);
  swift_setDeallocating();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = v1 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing18CloudKitOperations__ckSourceAppBundleID;
  uint64_t v3 = sub_100012854(&qword_10010B6F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_deallocClassInstance();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_10002098C()
{
  uint64_t v1 = *(void *)(v0 + 128);
  swift_task_dealloc();
  swift_setDeallocating();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = v1 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing18CloudKitOperations__ckSourceAppBundleID;
  uint64_t v3 = sub_100012854(&qword_10010B6F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_deallocClassInstance();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_100020AB0()
{
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100020C5C;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_100020BCC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100020BCC()
{
  (*(void (**)(void, void))(v0[14] + 8))(v0[15], v0[13]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_100020C5C()
{
  swift_task_dealloc();
  sub_1000C66B0();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = sub_1000C66C0();
  os_log_type_t v2 = sub_1000C7670();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138412290;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    v0[4] = v5;
    sub_1000C7850();
    void *v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "stopSharing failed with error: %@", v3, 0xCu);
    sub_100012854((uint64_t *)&unk_10010B1E0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v7 = v0[14];
  uint64_t v6 = v0[15];
  uint64_t v8 = v0[13];
  (*(void (**)(void, void))(v0[10] + 8))(v0[11], v0[9]);
  uint64_t v9 = sub_1000C6480();
  sub_100012A24();
  swift_allocError();
  *(void *)uint64_t v10 = 0xD000000000000034;
  *(void *)(v10 + 8) = 0x80000001000D41E0;
  *(void *)(v10 + 24) = 0;
  *(void *)(v10 + 32) = 0;
  *(void *)(v10 + 16) = v9;
  *(unsigned char *)(v10 + 40) = 8;
  swift_willThrow();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

void sub_100020EDC(uint64_t a1)
{
  sub_100016AB0(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_100020EE4(uint64_t a1)
{
  return sub_100045900(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(unsigned char *)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_100020EF4(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  void *v6 = v2;
  v6[1] = sub_100013B98;
  return sub_100014164(a1, v5, v4);
}

uint64_t sub_100020FA0(uint64_t a1)
{
  uint64_t v2 = 0x10000000000;
  if (!*(unsigned char *)(v1 + 37)) {
    uint64_t v2 = 0;
  }
  uint64_t v3 = 0x1000000000000;
  if (!*(unsigned char *)(v1 + 38)) {
    uint64_t v3 = 0;
  }
  return sub_1000453B8(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(unsigned int *)(v1 + 32) | ((unint64_t)*(unsigned __int8 *)(v1 + 36) << 32) | v2 | v3, *(void *)(v1 + 40), *(unsigned __int8 *)(v1 + 48), *(void **)(v1 + 56));
}

unint64_t sub_100020FE8()
{
  unint64_t result = qword_10010B028;
  if (!qword_10010B028)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10010B028);
  }
  return result;
}

uint64_t sub_10002123C(void *a1, uint64_t a2, uint64_t a3, void *aBlock, void *a5)
{
  v5[2] = a1;
  v5[3] = a5;
  v5[4] = _Block_copy(aBlock);
  if (a2)
  {
    a2 = sub_1000C7440();
    uint64_t v11 = v10;
    v5[5] = v10;
    if (!a3) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  uint64_t v11 = 0;
  v5[5] = 0;
  if (a3) {
LABEL_3:
  }
    a3 = sub_1000C7540();
LABEL_4:
  v5[6] = a3;
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_10010B798 + dword_10010B798);
  a5;
  id v12 = a1;
  uint64_t v13 = (void *)swift_task_alloc();
  v5[7] = v13;
  void *v13 = v5;
  v13[1] = sub_100021374;
  return v15(a2, v11, a3);
}

uint64_t sub_100021374(char a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 32);
  uint64_t v5 = *(void **)(*v1 + 24);
  uint64_t v6 = *(void **)(*v1 + 16);
  uint64_t v7 = *v1;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v4)
  {
    uint64_t v8 = *(void (***)(void, void))(v3 + 32);
    v8[2](v8, a1 & 1);
    _Block_release(v8);
  }
  uint64_t v9 = *(uint64_t (**)(void))(v7 + 8);
  return v9();
}

id sub_100021558()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ComposeMailView.Coordinator(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10002163C()
{
  return type metadata accessor for ComposeMailView.Coordinator(0);
}

uint64_t type metadata accessor for ComposeMailView.Coordinator(uint64_t a1)
{
  return sub_100023528(a1, (uint64_t *)&unk_10010B758);
}

void sub_100021664()
{
  sub_100021708();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_100021708()
{
  if (!qword_10010B768)
  {
    sub_1000C6B00();
    unint64_t v0 = sub_1000C72E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10010B768);
    }
  }
}

uint64_t destroy for ComposeMailData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ComposeMailData(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ComposeMailData(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for AttachmentData(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ComposeMailData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ComposeMailData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ComposeMailData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ComposeMailData()
{
  return &type metadata for ComposeMailData;
}

uint64_t sub_1000219CC()
{
  _Block_release(*(const void **)(v0 + 40));

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100021A24()
{
  unint64_t v2 = (void *)v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = (void *)v0[5];
  uint64_t v6 = (void *)v0[6];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  void *v7 = v1;
  v7[1] = sub_100013B98;
  uint64_t v8 = (uint64_t (*)(void *, uint64_t, uint64_t, void *, void *))((char *)&dword_10010B778 + dword_10010B778);
  return v8(v2, v3, v4, v5, v6);
}

id sub_100021AEC()
{
  uint64_t v1 = sub_100012854((uint64_t *)&unk_10010D410);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000606CC((uint64_t)v3);
  uint64_t v4 = type metadata accessor for ComposeMailView(0);
  uint64_t v5 = (long long *)(v0 + *(int *)(v4 + 20));
  uint64_t v6 = *((void *)v5 + 2);
  uint64_t v7 = *((void *)v5 + 3);
  uint64_t v8 = *((void *)v5 + 6);
  uint64_t v9 = *((void *)v5 + 7);
  long long v26 = *v5;
  uint64_t v27 = v6;
  uint64_t v28 = v7;
  long long v29 = v5[2];
  uint64_t v30 = v8;
  uint64_t v31 = v9;
  sub_100012854((uint64_t *)&unk_10010B7A0);
  sub_1000C72B0();
  long long v23 = v33;
  long long v24 = v32;
  long long v22 = v34;
  uint64_t v10 = v35;
  uint64_t v11 = v36;
  id v12 = (uint64_t *)(v0 + *(int *)(v4 + 24));
  uint64_t v13 = *v12;
  uint64_t v14 = v12[1];
  uint64_t v15 = (objc_class *)type metadata accessor for ComposeMailView.Coordinator(0);
  uint64_t v16 = (char *)objc_allocWithZone(v15);
  sub_10002274C((uint64_t)v3, (uint64_t)&v16[OBJC_IVAR____TtCV37com_apple_CloudSharingUI_CloudSharing15ComposeMailView11Coordinator__presentation]);
  char v17 = &v16[OBJC_IVAR____TtCV37com_apple_CloudSharingUI_CloudSharing15ComposeMailView11Coordinator__data];
  long long v18 = v23;
  *(_OWORD *)char v17 = v24;
  *((_OWORD *)v17 + 1) = v18;
  *((_OWORD *)v17 + 2) = v22;
  *((void *)v17 + 6) = v10;
  *((void *)v17 + 7) = v11;
  uint64_t v19 = (uint64_t *)&v16[OBJC_IVAR____TtCV37com_apple_CloudSharingUI_CloudSharing15ComposeMailView11Coordinator_callback];
  uint64_t *v19 = v13;
  v19[1] = v14;
  sub_1000236E0(v13);
  v25.receiver = v16;
  v25.super_class = v15;
  id v20 = objc_msgSendSuper2(&v25, "init");
  sub_10001326C((uint64_t)v3, (uint64_t *)&unk_10010D410);
  return v20;
}

id sub_100021C90()
{
  id v11 = [objc_allocWithZone((Class)MFMailComposeViewController) init];
  sub_100012854((uint64_t *)&unk_10010B870);
  sub_1000C6E80();
  [v11 setMailComposeDelegate:v12];

  type metadata accessor for ComposeMailView(0);
  sub_100012854((uint64_t *)&unk_10010B7A0);
  sub_1000C7280();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  NSString v0 = sub_1000C7400();
  swift_bridgeObjectRelease();
  [v11 setSubject:v0];

  sub_1000C7280();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v13)
  {
    v1.super.Class isa = sub_1000C7530().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v1.super.Class isa = 0;
  }
  [v11 setToRecipients:v1.super.isa];

  sub_1000C7280();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  NSString v2 = sub_1000C7400();
  swift_bridgeObjectRelease();
  [v11 setMessageBody:v2 isHTML:0];

  sub_1000C7280();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v14)
  {
    uint64_t v3 = *(void *)(v14 + 16);
    if (v3)
    {
      swift_bridgeObjectRetain();
      uint64_t v4 = v14 + 72;
      do
      {
        uint64_t v5 = *(void *)(v4 - 40);
        unint64_t v6 = *(void *)(v4 - 32);
        sub_100012AF4(v5, v6);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        Class isa = sub_1000C6540().super.isa;
        NSString v8 = sub_1000C7400();
        NSString v9 = sub_1000C7400();
        [v11 addAttachmentData:isa mimeType:v8 fileName:v9];

        sub_100012A9C(v5, v6);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v4 += 48;
        --v3;
      }
      while (v3);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  [v11 accessibilityElementDidLoseFocus];
  return v11;
}

id sub_100022024@<X0>(void *a1@<X8>)
{
  id result = sub_100021AEC();
  *a1 = result;
  return result;
}

uint64_t sub_10002204C()
{
  return sub_1000C6E10();
}

uint64_t sub_100022088(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10002369C(&qword_10010B868);

  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100022108(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10002369C(&qword_10010B868);

  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100022188()
{
  return sub_1000C7070();
}

void sub_1000221A4()
{
}

uint64_t sub_1000221EC()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = (int *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_10001AE78;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_10010EEA0 + dword_10010EEA0);
  return v6(v2, v3, v4);
}

uint64_t sub_1000222B0()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1000222F0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_10001AE78;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_10010EEB0 + dword_10010EEB0);
  return v8(a1, v4, v5, v6);
}

uint64_t sub_1000223BC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1000C6B00();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = sub_100012854((uint64_t *)&unk_10010D410);
  uint64_t v7 = __chkstk_darwin(v6);
  NSString v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  id v11 = (char *)&v14 - v10;
  id v12 = *(void (**)(uint64_t, uint64_t))(v2
                                                + OBJC_IVAR____TtCV37com_apple_CloudSharingUI_CloudSharing15ComposeMailView11Coordinator_callback);
  if (a2)
  {
    if (v12)
    {
      swift_errorRetain();
      v12(a2, 1);
      swift_errorRelease();
    }
  }
  else if (v12)
  {
    v12(a1, 0);
  }
  sub_10002274C(v2 + OBJC_IVAR____TtCV37com_apple_CloudSharingUI_CloudSharing15ComposeMailView11Coordinator__presentation, (uint64_t)v9);
  sub_1000C72B0();
  sub_10001326C((uint64_t)v9, (uint64_t *)&unk_10010D410);
  sub_1000C7280();
  sub_1000C6AF0();
  sub_1000C7290();
  return sub_10001326C((uint64_t)v11, (uint64_t *)&unk_10010D410);
}

uint64_t sub_100022580(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[18] = a3;
  v4[19] = v3;
  v4[16] = a1;
  v4[17] = a2;
  return _swift_task_switch(sub_1000225A4, 0, 0);
}

uint64_t sub_1000225A4()
{
  uint64_t v1 = *(void *)(v0 + 152)
     + OBJC_IVAR____TtCV37com_apple_CloudSharingUI_CloudSharing15ComposeMailView11Coordinator__data;
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = *(void *)(v1 + 48);
  uint64_t v5 = *(void *)(v1 + 56);
  long long v6 = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)v1;
  uint64_t v7 = *(void *)(v0 + 136);
  *(void *)(v0 + 32) = v2;
  *(void *)(v0 + 40) = v3;
  *(_OWORD *)(v0 + 48) = v6;
  *(void *)(v0 + 64) = v4;
  *(void *)(v0 + 72) = v5;
  sub_100012854((uint64_t *)&unk_10010B7A0);
  sub_1000C7280();
  uint64_t v25 = *(void *)(v0 + 80);
  uint64_t v24 = *(void *)(v0 + 88);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v7)
  {
    uint64_t v10 = *(void *)(v0 + 136);
    uint64_t v9 = *(void *)(v0 + 144);
    uint64_t v23 = *(void *)(v0 + 128);
    uint64_t v11 = *(void *)(v1 + 16);
    uint64_t v12 = *(void *)(v1 + 24);
    uint64_t v13 = *(void *)(v1 + 48);
    uint64_t v14 = *(void *)(v1 + 56);
    long long v15 = *(_OWORD *)(v1 + 32);
    *(_OWORD *)(v0 + 16) = *(_OWORD *)v1;
    *(void *)(v0 + 32) = v11;
    *(void *)(v0 + 40) = v12;
    *(_OWORD *)(v0 + 48) = v15;
    *(void *)(v0 + 64) = v13;
    *(void *)(v0 + 72) = v14;
    swift_bridgeObjectRetain();
    sub_1000C7280();
    uint64_t v16 = *(void *)(v0 + 120);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v17 = *(void *)(v1 + 16);
    uint64_t v18 = *(void *)(v1 + 24);
    uint64_t v19 = *(void *)(v1 + 48);
    uint64_t v20 = *(void *)(v1 + 56);
    long long v21 = *(_OWORD *)(v1 + 32);
    *(_OWORD *)(v0 + 16) = *(_OWORD *)v1;
    *(void *)(v0 + 32) = v17;
    *(void *)(v0 + 40) = v18;
    *(_OWORD *)(v0 + 48) = v21;
    *(void *)(v0 + 64) = v19;
    *(void *)(v0 + 72) = v20;
    *(void *)(v0 + 80) = v25;
    *(void *)(v0 + 88) = v24;
    *(void *)(v0 + 96) = v9;
    *(void *)(v0 + 104) = v23;
    *(void *)(v0 + 112) = v10;
    *(void *)(v0 + 120) = v16;
    swift_bridgeObjectRetain();
    sub_1000C7290();
    long long v22 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v22(1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10002274C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100012854((uint64_t *)&unk_10010D410);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t destroy for AttachmentData(uint64_t a1)
{
  sub_100012A9C(*(void *)a1, *(void *)(a1 + 8));
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t *initializeWithCopy for AttachmentData(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_100012AF4(*a2, v5);
  *a1 = v4;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  a1[4] = v7;
  a1[5] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for AttachmentData(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_100012AF4(*a2, v5);
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_100012A9C(v6, v7);
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t *assignWithTake for AttachmentData(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  unint64_t v5 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_100012A9C(v4, v5);
  uint64_t v6 = *(void *)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 40);
  a1[4] = *(void *)(a2 + 32);
  a1[5] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AttachmentData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AttachmentData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AttachmentData()
{
  return &type metadata for AttachmentData;
}

uint64_t *sub_1000229E8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_100012854(&qword_10010B7B0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      a1[1] = a2[1];
      swift_retain();
      swift_retain();
      uint64_t v8 = *(int *)(sub_100012854((uint64_t *)&unk_10010D410) + 32);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_1000C6B00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = *(int *)(a3 + 20);
    uint64_t v14 = *(int *)(a3 + 24);
    long long v15 = (uint64_t *)((char *)a1 + v13);
    uint64_t v16 = (uint64_t *)((char *)a2 + v13);
    uint64_t v17 = v16[1];
    void *v15 = *v16;
    v15[1] = v17;
    uint64_t v18 = v16[3];
    v15[2] = v16[2];
    v15[3] = v18;
    uint64_t v19 = v16[5];
    v15[4] = v16[4];
    v15[5] = v19;
    uint64_t v20 = v16[7];
    v15[6] = v16[6];
    v15[7] = v20;
    long long v21 = (uint64_t *)((char *)a1 + v14);
    long long v22 = (uint64_t *)((char *)a2 + v14);
    uint64_t v23 = *v22;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v23)
    {
      uint64_t v24 = v22[1];
      void *v21 = v23;
      v21[1] = v24;
      swift_retain();
    }
    else
    {
      *(_OWORD *)long long v21 = *(_OWORD *)v22;
    }
  }
  return a1;
}

uint64_t sub_100022BB8(uint64_t a1, uint64_t a2)
{
  sub_100012854(&qword_10010B7B0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    swift_release();
    uint64_t v5 = a1 + *(int *)(sub_100012854((uint64_t *)&unk_10010D410) + 32);
    uint64_t v6 = sub_1000C6B00();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + *(int *)(a2 + 24)))
  {
    return swift_release();
  }
  return result;
}

void *sub_100022CD0(void *a1, void *a2, uint64_t a3)
{
  sub_100012854(&qword_10010B7B0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *a1 = *a2;
  if (EnumCaseMultiPayload == 1)
  {
    a1[1] = a2[1];
    swift_retain();
    swift_retain();
    uint64_t v7 = *(int *)(sub_100012854((uint64_t *)&unk_10010D410) + 32);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1000C6B00();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = (void *)((char *)a1 + v11);
  uint64_t v14 = (void *)((char *)a2 + v11);
  uint64_t v15 = v14[1];
  void *v13 = *v14;
  v13[1] = v15;
  uint64_t v16 = v14[3];
  v13[2] = v14[2];
  v13[3] = v16;
  uint64_t v17 = v14[5];
  v13[4] = v14[4];
  v13[5] = v17;
  uint64_t v18 = v14[7];
  v13[6] = v14[6];
  v13[7] = v18;
  uint64_t v19 = (void *)((char *)a1 + v12);
  uint64_t v20 = (void *)((char *)a2 + v12);
  uint64_t v21 = *v20;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v21)
  {
    uint64_t v22 = v20[1];
    void *v19 = v21;
    v19[1] = v22;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  }
  return a1;
}

void *sub_100022E50(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10001326C((uint64_t)a1, &qword_10010B7B0);
    sub_100012854(&qword_10010B7B0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      a1[1] = a2[1];
      swift_retain();
      swift_retain();
      uint64_t v7 = *(int *)(sub_100012854((uint64_t *)&unk_10010D410) + 32);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = sub_1000C6B00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  *(void *)((char *)a1 + v11) = *(void *)((char *)a2 + v11);
  swift_retain();
  swift_release();
  v12[1] = v13[1];
  swift_retain();
  swift_release();
  v12[2] = v13[2];
  v12[3] = v13[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12[4] = v13[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12[5] = v13[5];
  v12[6] = v13[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12[7] = v13[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = *(int *)(a3 + 24);
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  uint64_t v17 = *(void *)((char *)a1 + v14);
  uint64_t v18 = *v16;
  if (!v17)
  {
    if (v18)
    {
      uint64_t v20 = v16[1];
      void *v15 = v18;
      v15[1] = v20;
      swift_retain();
      return a1;
    }
LABEL_12:
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
    return a1;
  }
  if (!v18)
  {
    swift_release();
    goto LABEL_12;
  }
  uint64_t v19 = v16[1];
  void *v15 = v18;
  v15[1] = v19;
  swift_retain();
  swift_release();
  return a1;
}

void *sub_100023060(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_100012854(&qword_10010B7B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(sub_100012854((uint64_t *)&unk_10010D410) + 32);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1000C6B00();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = (_OWORD *)((char *)a1 + v12);
  uint64_t v15 = (_OWORD *)((char *)a2 + v12);
  long long v16 = v15[1];
  _OWORD *v14 = *v15;
  v14[1] = v16;
  long long v17 = v15[3];
  v14[2] = v15[2];
  v14[3] = v17;
  uint64_t v18 = (void *)((char *)a1 + v13);
  uint64_t v19 = (void *)((char *)a2 + v13);
  uint64_t v20 = *v19;
  if (*v19)
  {
    uint64_t v21 = v19[1];
    void *v18 = v20;
    v18[1] = v21;
  }
  else
  {
    *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  }
  return a1;
}

void *sub_100023190(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10001326C((uint64_t)a1, &qword_10010B7B0);
    uint64_t v6 = sub_100012854(&qword_10010B7B0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      uint64_t v8 = *(int *)(sub_100012854((uint64_t *)&unk_10010D410) + 32);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_1000C6B00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  *(void *)((char *)a1 + v12) = *(void *)((char *)a2 + v12);
  swift_release();
  v13[1] = v14[1];
  swift_release();
  uint64_t v15 = v14[3];
  v13[2] = v14[2];
  v13[3] = v15;
  swift_bridgeObjectRelease();
  v13[4] = v14[4];
  swift_bridgeObjectRelease();
  uint64_t v16 = v14[6];
  v13[5] = v14[5];
  v13[6] = v16;
  swift_bridgeObjectRelease();
  v13[7] = v14[7];
  swift_bridgeObjectRelease();
  uint64_t v17 = *(int *)(a3 + 24);
  uint64_t v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (void *)((char *)a2 + v17);
  uint64_t v20 = *(void *)((char *)a1 + v17);
  uint64_t v21 = *v19;
  if (!v20)
  {
    if (v21)
    {
      uint64_t v23 = v19[1];
      void *v18 = v21;
      v18[1] = v23;
      return a1;
    }
LABEL_11:
    *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
    return a1;
  }
  if (!v21)
  {
    swift_release();
    goto LABEL_11;
  }
  uint64_t v22 = v19[1];
  void *v18 = v21;
  v18[1] = v22;
  swift_release();
  return a1;
}

uint64_t sub_100023354(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100023368);
}

uint64_t sub_100023368(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100012854(&qword_10010B7B8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_100023430(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100023444);
}

uint64_t sub_100023444(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100012854(&qword_10010B7B8);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for ComposeMailView(uint64_t a1)
{
  return sub_100023528(a1, (uint64_t *)&unk_10010B818);
}

uint64_t sub_100023528(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100023560()
{
  sub_100023600();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_100023600()
{
  if (!qword_10010B828)
  {
    sub_100013128((uint64_t *)&unk_10010D410);
    unint64_t v0 = sub_1000C6950();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10010B828);
    }
  }
}

uint64_t sub_10002365C()
{
  return sub_10002369C(&qword_10010B860);
}

void *sub_100023690()
{
  return &protocol witness table for Never;
}

uint64_t sub_10002369C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for ComposeMailView(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000236E0(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

void sub_1000236F4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if (a6 <= 0xDu)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v7 = a3;
  }
}

uint64_t destroy for SharingError(uint64_t a1)
{
  return sub_10002376C(*(void *)a1, *(void *)(a1 + 8), *(void **)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
}

uint64_t sub_10002376C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if (a6 <= 0xDu)
  {
    swift_bridgeObjectRelease();

    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for SharingError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void **)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  unsigned __int8 v8 = *(unsigned char *)(a2 + 40);
  sub_1000236F4(*(void *)a2, v4, v5, v6, v7, v8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 40) = v8;
  return a1;
}

uint64_t assignWithCopy for SharingError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void **)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  unsigned __int8 v8 = *(unsigned char *)(a2 + 40);
  sub_1000236F4(*(void *)a2, v4, v5, v6, v7, v8);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = *(void **)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  uint64_t v13 = *(void *)(a1 + 32);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  unsigned __int8 v14 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v8;
  sub_10002376C(v9, v10, v11, v12, v13, v14);
  return a1;
}

__n128 initializeWithTake for SharingError(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for SharingError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 32);
  char v4 = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void **)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  long long v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(void *)(a1 + 32) = v3;
  unsigned __int8 v11 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v4;
  sub_10002376C(v5, v7, v6, v8, v9, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for SharingError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF3 && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 243);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 <= 0xD) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SharingError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF2)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)__n128 result = a2 - 243;
    if (a3 >= 0xF3) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF3) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 40) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1000239C4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 40);
}

uint64_t sub_1000239CC(uint64_t result, char a2)
{
  *(unsigned char *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for SharingError()
{
  return &type metadata for SharingError;
}

uint64_t sub_1000239F0(uint64_t a1)
{
  swift_willThrow();
  id v3 = v1;
  sub_100012854((uint64_t *)&unk_10010B010);
  type metadata accessor for BRError(0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_7:
    swift_errorRelease();
    type metadata accessor for CKError(0);
    id v13 = v3;
    if (swift_dynamicCast())
    {
      sub_10002414C(&qword_10010D2E0, type metadata accessor for CKError);
      sub_1000C6450();

      swift_errorRelease();
      if (v18 == a1) {
        return 1;
      }
    }
    else
    {
      swift_errorRelease();
    }
    return 0;
  }
  sub_10002414C(&qword_10010B120, type metadata accessor for BRError);
  sub_1000C6450();
  if (v18 != 17)
  {

    goto LABEL_7;
  }
  id v4 = v19;
  uint64_t v5 = (void *)sub_1000C6480();

  id v6 = [v5 underlyingErrors];
  uint64_t v7 = sub_1000C7540();

  uint64_t v8 = *(void *)(v7 + 16);
  if (!v8)
  {
    swift_bridgeObjectRelease();

LABEL_19:
    uint64_t v12 = 0;
    goto LABEL_20;
  }
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v9 = (void *)sub_1000C6480();
  char v10 = sub_1000239F0(a1);

  uint64_t result = swift_errorRelease();
  if (v10)
  {
LABEL_5:

    swift_bridgeObjectRelease_n();
    uint64_t v12 = 1;
LABEL_20:
    swift_errorRelease();
    return v12;
  }
  if (v8 == 1)
  {
LABEL_18:

    swift_bridgeObjectRelease_n();
    goto LABEL_19;
  }
  uint64_t v14 = 5;
  while (1)
  {
    uint64_t v15 = v14 - 3;
    if (__OFADD__(v14 - 4, 1)) {
      break;
    }
    swift_errorRetain();
    uint64_t v16 = (void *)sub_1000C6480();
    char v17 = sub_1000239F0(a1);

    uint64_t result = swift_errorRelease();
    if (v17) {
      goto LABEL_5;
    }
    ++v14;
    if (v15 == v8) {
      goto LABEL_18;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100023CCC(id a1)
{
  swift_willThrow();
  id v3 = v1;
  sub_100012854((uint64_t *)&unk_10010B010);
  type metadata accessor for BRError(0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_12:
    swift_errorRelease();
    type metadata accessor for CKError(0);
    id v16 = v3;
    if (swift_dynamicCast())
    {
      sub_10002414C(&qword_10010D2E0, type metadata accessor for CKError);
      sub_1000C6450();
      if (v36 == CKErrorCodeForUnderlyingErrorCode())
      {
        id v4 = v37;
        char v17 = (void *)sub_1000C6480();

        id v18 = [v17 underlyingErrors];
        uint64_t v19 = sub_1000C7540();

        uint64_t v20 = *(void *)(v19 + 16);
        if (v20)
        {
          swift_bridgeObjectRetain();
          swift_errorRetain();
          uint64_t v21 = (void *)sub_1000C6480();
          char v22 = sub_100023CCC(a1);

          uint64_t result = swift_errorRelease();
          if ((v22 & 1) == 0)
          {
            if (v20 != 1)
            {
              uint64_t v32 = 5;
              while (1)
              {
                uint64_t v33 = v32 - 3;
                if (__OFADD__(v32 - 4, 1)) {
                  goto LABEL_35;
                }
                swift_errorRetain();
                long long v34 = (void *)sub_1000C6480();
                char v35 = sub_100023CCC(a1);

                uint64_t result = swift_errorRelease();
                if (v35) {
                  goto LABEL_16;
                }
                ++v32;
                if (v33 == v20) {
                  goto LABEL_30;
                }
              }
            }
            goto LABEL_30;
          }
LABEL_16:

          swift_bridgeObjectRelease_n();
          uint64_t v23 = 1;
LABEL_32:
          swift_errorRelease();
          return v23;
        }
LABEL_23:
        swift_bridgeObjectRelease();

LABEL_31:
        uint64_t v23 = 0;
        goto LABEL_32;
      }
    }
    swift_errorRelease();
    id v24 = v16;
    id v25 = [v24 domain];
    uint64_t v26 = sub_1000C7440();
    uint64_t v28 = v27;

    if (v26 == sub_1000C7440() && v28 == v29)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v30 = sub_1000C7A50();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v30 & 1) == 0)
      {

        return 0;
      }
    }
    id v31 = [v24 code];

    return v31 == a1;
  }
  sub_10002414C(&qword_10010B120, type metadata accessor for BRError);
  sub_1000C6450();
  if (v36 != 17)
  {

    goto LABEL_12;
  }
  id v4 = v37;
  uint64_t v5 = (void *)sub_1000C6480();

  id v6 = [v5 underlyingErrors];
  uint64_t v7 = sub_1000C7540();

  uint64_t v8 = *(void *)(v7 + 16);
  if (!v8) {
    goto LABEL_23;
  }
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v9 = (void *)sub_1000C6480();
  char v10 = sub_100023CCC(a1);

  uint64_t result = swift_errorRelease();
  if (v10) {
    goto LABEL_16;
  }
  if (v8 == 1)
  {
LABEL_30:

    swift_bridgeObjectRelease_n();
    goto LABEL_31;
  }
  uint64_t v12 = 5;
  while (1)
  {
    uint64_t v13 = v12 - 3;
    if (__OFADD__(v12 - 4, 1)) {
      break;
    }
    swift_errorRetain();
    uint64_t v14 = (void *)sub_1000C6480();
    char v15 = sub_100023CCC(a1);

    uint64_t result = swift_errorRelease();
    if (v15) {
      goto LABEL_16;
    }
    ++v12;
    if (v13 == v8) {
      goto LABEL_30;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_10002414C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

__n128 initializeWithTake for ErrorMessage(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for NSErrorContext()
{
  return &type metadata for NSErrorContext;
}

uint64_t _s37com_apple_CloudSharingUI_CloudSharing12ErrorMessageVwxx_0(uint64_t a1)
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s37com_apple_CloudSharingUI_CloudSharing12ErrorMessageVwcp_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v5 = (void *)a2[2];
  uint64_t v4 = a2[3];
  a1[2] = v5;
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  id v6 = v5;
  swift_bridgeObjectRetain();
  return a1;
}

void *_s37com_apple_CloudSharingUI_CloudSharing12ErrorMessageVwca_0(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a1[2];
  uint64_t v5 = (void *)a2[2];
  a1[2] = v5;
  id v6 = v5;

  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s37com_apple_CloudSharingUI_CloudSharing12ErrorMessageVwta_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s37com_apple_CloudSharingUI_CloudSharing12ErrorMessageVwet_0(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_10002438C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ErrorMessage()
{
  return &type metadata for ErrorMessage;
}

void sub_1000243E4()
{
  qword_100115350 = 0x4042800000000000;
}

uint64_t sub_1000243F8()
{
  return sub_100024420();
}

uint64_t sub_10002440C()
{
  return sub_100024420();
}

uint64_t sub_100024420()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10002448C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_100024500()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();

  return swift_release();
}

uint64_t sub_100024578()
{
  return sub_10001AEE4();
}

uint64_t sub_10002458C()
{
  return sub_10001AEE4();
}

uint64_t sub_1000245A0()
{
  return sub_10001AEE4();
}

uint64_t sub_1000245B4()
{
  return sub_100024704();
}

uint64_t sub_1000245C8()
{
  return sub_100024704();
}

uint64_t sub_1000245DC()
{
  return sub_10001AEE4();
}

uint64_t sub_1000245F0()
{
  return sub_100024704();
}

uint64_t sub_100024604()
{
  return sub_10001AEE4();
}

uint64_t sub_100024618()
{
  return sub_10001AEE4();
}

uint64_t sub_10002462C()
{
  return sub_10001AEE4();
}

uint64_t sub_100024640()
{
  return sub_10001AEE4();
}

uint64_t sub_100024654()
{
  return sub_10001AEE4();
}

uint64_t sub_100024668()
{
  return sub_10001AEE4();
}

uint64_t sub_10002467C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1000246F0()
{
  return sub_100024704();
}

uint64_t sub_100024704()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_100024770()
{
  return sub_10001AEE4();
}

uint64_t *sub_100024784(uint64_t a1)
{
  unint64_t v2 = v1;
  uint64_t v289 = a1;
  uint64_t v263 = *v1;
  uint64_t v248 = sub_100012854(&qword_10010BB88);
  uint64_t v247 = *(void *)(v248 - 8);
  __chkstk_darwin(v248);
  v246 = (char *)v204 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v251 = sub_100012854((uint64_t *)&unk_10010BB90);
  uint64_t v250 = *(void *)(v251 - 8);
  __chkstk_darwin(v251);
  v249 = (char *)v204 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v236 = sub_100012854((uint64_t *)&unk_10010CF60);
  uint64_t v235 = *(void *)(v236 - 8);
  __chkstk_darwin(v236);
  v234 = (char *)v204 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v242 = sub_100012854(&qword_10010BBA0);
  __chkstk_darwin(v242);
  v239 = (char *)v204 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v233 = sub_100012854(&qword_10010BBA8);
  uint64_t v232 = *(void *)(v233 - 8);
  __chkstk_darwin(v233);
  v230 = (char *)v204 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v237 = sub_100012854(&qword_10010BBB0);
  __chkstk_darwin(v237);
  v262 = (char *)v204 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v241 = sub_100012854(&qword_10010BBB8);
  uint64_t v240 = *(void *)(v241 - 8);
  __chkstk_darwin(v241);
  v238 = (char *)v204 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v245 = sub_100012854(&qword_10010BBC0);
  uint64_t v244 = *(void *)(v245 - 8);
  __chkstk_darwin(v245);
  v243 = (char *)v204 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v229 = sub_100012854(&qword_10010BBC8);
  uint64_t v228 = *(void *)(v229 - 8);
  __chkstk_darwin(v229);
  v227 = (char *)v204 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100012854((uint64_t *)&unk_10010BBD0);
  __chkstk_darwin(v12 - 8);
  v274 = (char *)v204 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v217 = sub_100012854(&qword_10010CF00);
  uint64_t v216 = *(void *)(v217 - 8);
  __chkstk_darwin(v217);
  v215 = (char *)v204 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v219 = sub_100012854(&qword_10010BBE0);
  __chkstk_darwin(v219);
  v218 = (char *)v204 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v222 = sub_100012854(&qword_10010BBE8);
  uint64_t v221 = *(void *)(v222 - 8);
  __chkstk_darwin(v222);
  v220 = (char *)v204 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v225 = sub_100012854((uint64_t *)&unk_10010BBF0);
  uint64_t v224 = *(void *)(v225 - 8);
  __chkstk_darwin(v225);
  v223 = (char *)v204 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v260 = sub_100012854(&qword_10010CFA0);
  uint64_t v214 = *(void *)(v260 - 8);
  __chkstk_darwin(v260);
  v259 = (char *)v204 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v209 = sub_100012854((uint64_t *)&unk_10010BC00);
  uint64_t v207 = *(void *)(v209 - 8);
  __chkstk_darwin(v209);
  v205 = (char *)v204 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v210 = sub_100012854((uint64_t *)&unk_10010C400);
  uint64_t v208 = *(void *)(v210 - 8);
  __chkstk_darwin(v210);
  v206 = (char *)v204 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v213 = sub_100012854((uint64_t *)&unk_10010BC10);
  uint64_t v212 = *(void *)(v213 - 8);
  __chkstk_darwin(v213);
  v211 = (char *)v204 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v288 = sub_100012854((uint64_t *)&unk_10010C3F0);
  uint64_t v287 = *(void *)(v288 - 8);
  uint64_t v22 = __chkstk_darwin(v288);
  v226 = (char *)v204 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v22);
  v279 = (char *)v204 - v25;
  __chkstk_darwin(v24);
  v261 = (char *)v204 - v26;
  uint64_t v283 = sub_100012854(&qword_10010BC20);
  uint64_t v278 = *(void *)(v283 - 8);
  uint64_t v27 = __chkstk_darwin(v283);
  v231 = (char *)v204 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v273 = (char *)v204 - v29;
  uint64_t v272 = sub_100012854(&qword_10010BC28);
  uint64_t v277 = *(void *)(v272 - 8);
  uint64_t v30 = __chkstk_darwin(v272);
  v269 = (char *)v204 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v258 = (char *)v204 - v32;
  uint64_t v271 = sub_100012854(&qword_10010BC30);
  uint64_t v276 = *(void *)(v271 - 8);
  __chkstk_darwin(v271);
  v270 = (char *)v204 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v285 = sub_100012854((uint64_t *)&unk_10010BB70);
  v284 = *(void (**)(char *, uint64_t))(v285 - 8);
  __chkstk_darwin(v285);
  v282 = (char *)v204 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v281 = sub_100012854(&qword_10010CB70);
  uint64_t v35 = __chkstk_darwin(v281);
  uint64_t v275 = (uint64_t)v204 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  v268 = (char *)v204 - v37;
  v267 = (void *)sub_100012854(&qword_10010BB68);
  v266 = (void *)*(v267 - 1);
  __chkstk_darwin(v267);
  v265 = (char *)v204 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v290 = sub_100012854(&qword_10010BB60);
  uint64_t v264 = *(void *)(v290 - 8);
  __chkstk_darwin(v290);
  uint64_t v40 = (char *)v204 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v257 = sub_100012854(&qword_10010BB58);
  uint64_t v41 = *(void *)(v257 - 8);
  __chkstk_darwin(v257);
  id v43 = (char *)v204 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_100012854(&qword_10010BB50);
  uint64_t v45 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  uint64_t v47 = (char *)v204 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1[3] = (uint64_t)&_swiftEmptySetSingleton;
  v280 = v1 + 3;
  *((unsigned char *)v1 + 32) = 0;
  uint64_t v48 = (uint64_t)v1 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing15PeopleViewModel__requesters;
  v293 = _swiftEmptyArrayStorage;
  sub_100012854(&qword_10010B998);
  sub_1000C67B0();
  uint64_t v49 = *(void (**)(uint64_t, char *, uint64_t))(v45 + 32);
  v49(v48, v47, v44);
  uint64_t v50 = (uint64_t)v2 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing15PeopleViewModel__participants;
  v293 = _swiftEmptyArrayStorage;
  sub_1000C67B0();
  v49(v50, v47, v44);
  uint64_t v51 = (uint64_t)v2 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing15PeopleViewModel__currentUser;
  v293 = 0;
  sub_100012854(&qword_10010B9A8);
  sub_1000C67B0();
  (*(void (**)(uint64_t, char *, uint64_t))(v41 + 32))(v51, v43, v257);
  uint64_t v52 = (uint64_t)v2 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing15PeopleViewModel__highlightChanges;
  LOBYTE(v293) = 0;
  sub_1000C67B0();
  uint64_t v53 = *(void (**)(uint64_t, char *, uint64_t))(v264 + 32);
  uint64_t v54 = v290;
  v53(v52, v40, v290);
  uint64_t v55 = (uint64_t)v2 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing15PeopleViewModel__hideAlerts;
  LOBYTE(v293) = 0;
  sub_1000C67B0();
  v53(v55, v40, v54);
  uint64_t v56 = (uint64_t)v2 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing15PeopleViewModel__hideAlertsOptions;
  LOBYTE(v293) = 1;
  uint64_t v57 = v265;
  sub_1000C67B0();
  uint64_t v58 = (void (*)(uint64_t, char *, void *))v266[4];
  uint64_t v59 = v267;
  v58(v56, v57, v267);
  uint64_t v60 = (uint64_t)v2 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing15PeopleViewModel__highlightChangesOptions;
  LOBYTE(v293) = 1;
  sub_1000C67B0();
  v58(v60, v57, v59);
  uint64_t v61 = (uint64_t)v2 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing15PeopleViewModel__showingAlert;
  uint64_t v62 = type metadata accessor for AlertViewModel(0);
  uint64_t v63 = (uint64_t)v268;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v268, 1, 1, v62);
  sub_10001A740(v63, v275, &qword_10010CB70);
  uint64_t v64 = v282;
  sub_1000C67B0();
  sub_10001326C(v63, &qword_10010CB70);
  (*((void (**)(uint64_t, char *, uint64_t))v284 + 4))(v61, v64, v285);
  uint64_t v65 = (uint64_t)v2 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing15PeopleViewModel__showingAlertBool;
  LOBYTE(v293) = 0;
  sub_1000C67B0();
  v53(v65, v40, v54);
  uint64_t v66 = (uint64_t)v2 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing15PeopleViewModel__shouldShowLoading;
  LOBYTE(v293) = 0;
  sub_1000C67B0();
  v53(v66, v40, v54);
  uint64_t v67 = (uint64_t)v2
      + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing15PeopleViewModel__shouldShowFolderShareHeader;
  LOBYTE(v293) = 0;
  sub_1000C67B0();
  v53(v67, v40, v54);
  uint64_t v68 = (uint64_t)v2
      + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing15PeopleViewModel__shouldShowOpenRootSharedFolder;
  LOBYTE(v293) = 0;
  sub_1000C67B0();
  v53(v68, v40, v54);
  uint64_t v69 = (uint64_t)v2 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing15PeopleViewModel__shouldShowCopyLink;
  LOBYTE(v293) = 0;
  sub_1000C67B0();
  v53(v69, v40, v54);
  uint64_t v70 = (uint64_t)v2 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing15PeopleViewModel__shouldShowSendLink;
  LOBYTE(v293) = 0;
  sub_1000C67B0();
  v53(v70, v40, v54);
  uint64_t v71 = (uint64_t)v2
      + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing15PeopleViewModel__shouldShowPermissionAndRemovalSectionInMenu;
  LOBYTE(v293) = 0;
  sub_1000C67B0();
  v53(v71, v40, v54);
  uint64_t v72 = OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing15PeopleViewModel_highlightCenter;
  *(uint64_t *)((char *)v2 + v72) = (uint64_t)[objc_allocWithZone((Class)SWHighlightCenter) init];
  *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing15PeopleViewModel_fetchedContacts) = 0;
  v2[2] = v289;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000C67E0();
  swift_release();
  swift_release();
  id v73 = v293;
  swift_beginAccess();
  v291 = v73;
  sub_1000132C8(0, (unint64_t *)&unk_10010B9E0);
  sub_1000C67B0();
  swift_endAccess();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  v74 = v293;
  uint64_t v75 = v294;
  swift_beginAccess();
  v291 = v74;
  uint64_t v292 = v75;
  sub_1000C67B0();
  swift_endAccess();
  sub_100012854(&qword_10010BC38);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1000CABB0;
  *(unsigned char *)(inited + 32) = 0;
  uint64_t v77 = self;
  uint64_t v78 = (objc_class *)[v77 mainBundle];
  v201._countAndFlagsBits = 0x80000001000D48C0;
  v295._object = (void *)0x80000001000D48A0;
  v295._countAndFlagsBits = 0xD000000000000010;
  v298.value._countAndFlagsBits = 0;
  v298.value._object = 0;
  v79.super.Class isa = v78;
  v301._countAndFlagsBits = 0;
  v301._object = (void *)0xE000000000000000;
  uint64_t v80 = sub_1000C6320(v295, v298, v79, v301, v201);
  uint64_t v82 = v81;

  *(void *)(inited + 40) = v80;
  *(void *)(inited + 48) = v82;
  *(unsigned char *)(inited + 56) = 1;
  uint64_t v83 = (objc_class *)[v77 mainBundle];
  v202._countAndFlagsBits = 0x80000001000D48E0;
  v296._countAndFlagsBits = 0x6C6E6F2077656956;
  v296._object = (void *)0xE900000000000079;
  v299.value._countAndFlagsBits = 0;
  v299.value._object = 0;
  v84.super.Class isa = v83;
  v302._countAndFlagsBits = 0;
  v302._object = (void *)0xE000000000000000;
  uint64_t v85 = sub_1000C6320(v296, v299, v84, v302, v202);
  uint64_t v87 = v86;

  *(void *)(inited + 64) = v85;
  *(void *)(inited + 72) = v87;
  *(unsigned char *)(inited + 80) = 2;
  v88 = (objc_class *)[v77 mainBundle];
  v203._countAndFlagsBits = 0x80000001000D4900;
  v297._countAndFlagsBits = 0x61635F646578694DLL;
  v297._object = (void *)0xEF657469766E496ELL;
  v300.value._countAndFlagsBits = 0;
  v300.value._object = 0;
  v89.super.Class isa = v88;
  v303._countAndFlagsBits = 0x646578694DLL;
  v303._object = (void *)0xE500000000000000;
  uint64_t v90 = sub_1000C6320(v297, v300, v89, v303, v203);
  uint64_t v92 = v91;

  *(void *)(inited + 88) = v90;
  *(void *)(inited + 96) = v92;
  unint64_t v93 = sub_1000739A0(inited);
  swift_setDeallocating();
  sub_100012854(&qword_10010BC40);
  swift_arrayDestroy();
  *(uint64_t *)((char *)v2
             + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing15PeopleViewModel_permissionLocalizedStrings) = v93;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  v94 = v293;
  uint64_t v95 = v294;
  v96 = (void (*)(char *, uint64_t))((char *)v2
                                             + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing15PeopleViewModel__sectionTitleForAuxiliaryToggles);
  swift_beginAccess();
  v291 = v94;
  uint64_t v292 = v95;
  v284 = v96;
  sub_1000C67B0();
  swift_endAccess();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  v97 = v293;
  uint64_t v98 = v294;
  uint64_t v99 = (uint64_t)v2 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing15PeopleViewModel__primaryToggleTitle;
  swift_beginAccess();
  v291 = v97;
  uint64_t v292 = v98;
  uint64_t v285 = v99;
  sub_1000C67B0();
  swift_endAccess();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  LOBYTE(v97) = (_BYTE)v293;
  uint64_t v100 = (uint64_t)v2 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing15PeopleViewModel__primaryToggleState;
  swift_beginAccess();
  LOBYTE(v291) = (_BYTE)v97;
  uint64_t v257 = v100;
  sub_1000C67B0();
  swift_endAccess();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  v101 = v293;
  uint64_t v102 = v294;
  uint64_t v103 = (uint64_t)v2 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing15PeopleViewModel__secondaryToggleTitle;
  swift_beginAccess();
  v291 = v101;
  uint64_t v292 = v102;
  v204[1] = v103;
  sub_1000C67B0();
  swift_endAccess();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  LOBYTE(v101) = (_BYTE)v293;
  uint64_t v104 = (uint64_t)v2 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing15PeopleViewModel__secondaryToggleState;
  swift_beginAccess();
  LOBYTE(v291) = (_BYTE)v101;
  v204[2] = v104;
  sub_1000C67B0();
  swift_endAccess();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  char v105 = (char)v293;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  LODWORD(v90) = v293;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  char v106 = 0;
  if (v90 == 2) {
    char v106 = v105 & (v293 ^ 1);
  }
  swift_beginAccess();
  LOBYTE(v291) = v106;
  sub_1000C67B0();
  swift_endAccess();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  char v107 = (char)v293;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  char v108 = v107 & ~(_BYTE)v293;
  v286 = v2;
  swift_beginAccess();
  LOBYTE(v291) = v108 & 1;
  sub_1000C67B0();
  swift_endAccess();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  BOOL v109 = v293 - 6 < 0xFFFFFFFC;
  v204[0] = (char *)v2 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing15PeopleViewModel__savingInProgress;
  swift_beginAccess();
  LOBYTE(v291) = v109;
  sub_1000C67B0();
  swift_endAccess();
  swift_beginAccess();
  uint64_t v110 = sub_100012854(&qword_10010CEB0);
  v111 = v258;
  uint64_t v112 = v110;
  sub_1000C67C0();
  swift_endAccess();
  v265 = (char *)&protocol conformance descriptor for Published<A>.Publisher;
  v267 = (void *)sub_10001E454(&qword_10010BC48, &qword_10010BC28);
  v113 = v270;
  uint64_t v114 = v272;
  sub_1000C6860();
  uint64_t v115 = v277;
  uint64_t v116 = v277 + 8;
  v117 = *(void (**)(char *, uint64_t))(v277 + 8);
  v117(v111, v114);
  swift_beginAccess();
  sub_1000C67C0();
  swift_endAccess();
  v266 = &protocol conformance descriptor for Publishers.RemoveDuplicates<A>;
  v268 = (char *)sub_10001E454((unint64_t *)&unk_10010BC50, &qword_10010BC30);
  uint64_t v118 = v271;
  sub_1000C6880();
  v119 = *(void (**)(char *, uint64_t))(v276 + 8);
  v276 += 8;
  v253 = v119;
  v119(v113, v118);
  v120 = *(void (**)(char *, char *, uint64_t))(v115 + 16);
  uint64_t v277 = v115 + 16;
  v252 = v120;
  v120(v269, v111, v114);
  swift_beginAccess();
  sub_1000C67D0();
  swift_endAccess();
  v117(v111, v114);
  swift_beginAccess();
  sub_1000C67C0();
  swift_endAccess();
  sub_1000C6860();
  v117(v111, v114);
  v255 = v117;
  uint64_t v256 = v116;
  swift_beginAccess();
  uint64_t v254 = v112;
  sub_1000C67C0();
  swift_endAccess();
  sub_1000C6880();
  v253(v113, v118);
  v252(v269, v111, v114);
  swift_beginAccess();
  sub_1000C67D0();
  swift_endAccess();
  v117(v111, v114);
  swift_beginAccess();
  v121 = v261;
  sub_1000C67C0();
  swift_endAccess();
  uint64_t v285 = sub_10001E454((unint64_t *)&unk_10010C4C0, (uint64_t *)&unk_10010C3F0);
  v122 = v273;
  uint64_t v123 = v288;
  sub_1000C6860();
  uint64_t v124 = v287;
  uint64_t v125 = v287 + 8;
  v126 = *(void (**)(char *, uint64_t))(v287 + 8);
  v126(v121, v123);
  v284 = v126;
  uint64_t v281 = v125;
  swift_beginAccess();
  sub_1000C67C0();
  swift_endAccess();
  uint64_t v275 = sub_10001E454((unint64_t *)&unk_10010BC60, &qword_10010BC20);
  uint64_t v127 = v283;
  sub_1000C6880();
  uint64_t v264 = *(void *)(v278 + 8);
  v278 += 8;
  ((void (*)(char *, uint64_t))v264)(v122, v127);
  v282 = *(char **)(v124 + 16);
  uint64_t v287 = v124 + 16;
  uint64_t v128 = v288;
  ((void (*)(char *, char *, uint64_t))v282)(v279, v121, v288);
  swift_beginAccess();
  sub_1000C67D0();
  swift_endAccess();
  v126(v121, v128);
  swift_beginAccess();
  v129 = v111;
  sub_1000C67C0();
  swift_endAccess();
  v130 = v270;
  uint64_t v131 = v272;
  sub_1000C6860();
  v132 = v255;
  v255(v129, v131);
  swift_beginAccess();
  sub_1000C67C0();
  swift_endAccess();
  uint64_t v133 = v271;
  sub_1000C6880();
  v253(v130, v133);
  v252(v269, v129, v131);
  swift_beginAccess();
  sub_1000C67D0();
  swift_endAccess();
  v132(v129, v131);
  swift_beginAccess();
  sub_1000C67C0();
  swift_endAccess();
  v134 = v273;
  uint64_t v135 = v288;
  sub_1000C6860();
  v136 = v284;
  v284(v121, v135);
  swift_beginAccess();
  sub_1000C67C0();
  swift_endAccess();
  uint64_t v137 = v283;
  sub_1000C6880();
  ((void (*)(char *, uint64_t))v264)(v134, v137);
  ((void (*)(char *, char *, uint64_t))v282)(v279, v121, v135);
  swift_beginAccess();
  sub_1000C67D0();
  swift_endAccess();
  v136(v121, v135);
  swift_beginAccess();
  sub_1000C67C0();
  swift_endAccess();
  sub_1000C6860();
  v136(v121, v135);
  swift_retain();
  uint64_t v138 = v283;
  sub_1000C6870();
  swift_release();
  v139 = v134;
  ((void (*)(char *, uint64_t))v264)(v134, v138);
  swift_beginAccess();
  sub_1000C6760();
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  sub_1000C67C0();
  swift_endAccess();
  uint64_t v140 = v288;
  sub_1000C6860();
  v141 = v284;
  v284(v121, v140);
  swift_retain();
  sub_1000C6870();
  swift_release();
  ((void (*)(char *, uint64_t))v264)(v139, v138);
  swift_beginAccess();
  sub_1000C6760();
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  sub_100012854((uint64_t *)&unk_10010CE70);
  v142 = v205;
  sub_1000C67C0();
  swift_endAccess();
  sub_10001E454(&qword_10010BC70, (uint64_t *)&unk_10010BC00);
  sub_100033FD0();
  v143 = v206;
  uint64_t v144 = v209;
  sub_1000C6860();
  (*(void (**)(char *, uint64_t))(v207 + 8))(v142, v144);
  sub_10001E454(&qword_10010BC80, (uint64_t *)&unk_10010C400);
  v145 = v211;
  uint64_t v146 = v210;
  sub_1000C6820();
  (*(void (**)(char *, uint64_t))(v208 + 8))(v143, v146);
  swift_beginAccess();
  sub_1000C67C0();
  swift_endAccess();
  sub_10001E454(&qword_10010BC88, (uint64_t *)&unk_10010BC10);
  uint64_t v147 = v213;
  sub_1000C6880();
  (*(void (**)(char *, uint64_t))(v212 + 8))(v145, v147);
  uint64_t v148 = v288;
  ((void (*)(char *, char *, uint64_t))v282)(v279, v121, v288);
  swift_beginAccess();
  sub_1000C67D0();
  swift_endAccess();
  v141(v121, v148);
  swift_beginAccess();
  swift_retain();
  uint64_t v264 = sub_100012854((uint64_t *)&unk_10010BC90);
  v149 = v259;
  sub_1000C67C0();
  swift_endAccess();
  swift_release();
  swift_allocObject();
  swift_weakInit();
  uint64_t v257 = sub_10001E454(&qword_10010D0A0, &qword_10010CFA0);
  uint64_t v150 = v260;
  sub_1000C6870();
  swift_release();
  (*(void (**)(char *, uint64_t))(v214 + 8))(v149, v150);
  swift_beginAccess();
  sub_1000C6760();
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  sub_100012854(&qword_10010BB80);
  v151 = v215;
  sub_1000C67C0();
  swift_endAccess();
  sub_10001E454(&qword_10010BCA0, &qword_10010CF00);
  sub_100034064(&qword_10010BCA8, (unint64_t *)&unk_10010B9E0);
  uint64_t v152 = v217;
  sub_1000C6860();
  (*(void (**)(char *, uint64_t))(v216 + 8))(v151, v152);
  swift_beginAccess();
  v153 = v258;
  sub_1000C67C0();
  swift_endAccess();
  uint64_t v154 = v272;
  sub_1000C6860();
  v255(v153, v154);
  sub_10001E454((unint64_t *)&unk_10010BCB0, &qword_10010BBE0);
  v155 = v220;
  sub_1000C66E0();
  v270 = (char *)self;
  v293 = [v270 mainRunLoop];
  uint64_t v277 = sub_1000C7820();
  uint64_t v156 = *(void *)(v277 - 8);
  uint64_t v276 = *(void *)(v156 + 56);
  uint64_t v278 = v156 + 56;
  uint64_t v157 = (uint64_t)v274;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v276)(v274, 1, 1, v277);
  uint64_t v272 = sub_1000132C8(0, (unint64_t *)&qword_10010C4E0);
  v267 = &protocol conformance descriptor for Publishers.CombineLatest<A, B>;
  sub_10001E454((unint64_t *)&unk_10010BCC0, &qword_10010BBE8);
  uint64_t v271 = sub_100034064((unint64_t *)&qword_10010C4F0, (unint64_t *)&qword_10010C4E0);
  v158 = v223;
  uint64_t v159 = v222;
  sub_1000C6850();
  sub_10001326C(v157, (uint64_t *)&unk_10010BBD0);

  (*(void (**)(char *, uint64_t))(v221 + 8))(v155, v159);
  uint64_t v160 = swift_allocObject();
  swift_weakInit();
  uint64_t v161 = swift_allocObject();
  *(void *)(v161 + 16) = sub_1000340A8;
  *(void *)(v161 + 24) = v160;
  v269 = (char *)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>;
  sub_10001E454(&qword_10010BCD0, (uint64_t *)&unk_10010BBF0);
  uint64_t v162 = v225;
  sub_1000C6870();
  swift_release();
  (*(void (**)(char *, uint64_t))(v224 + 8))(v158, v162);
  swift_beginAccess();
  sub_1000C6760();
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  v163 = v261;
  sub_1000C67C0();
  swift_endAccess();
  swift_beginAccess();
  v164 = v279;
  sub_1000C67C0();
  swift_endAccess();
  uint64_t v165 = v288;
  sub_1000C6880();
  v166 = v284;
  v284(v163, v165);
  v167 = v226;
  ((void (*)(char *, char *, uint64_t))v282)(v226, v164, v165);
  swift_beginAccess();
  sub_1000C67D0();
  swift_endAccess();
  v166(v164, v165);
  v168 = (char *)(v289 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__isFolderSubshare);
  swift_beginAccess();
  sub_1000C67C0();
  swift_endAccess();
  swift_beginAccess();
  sub_1000C67C0();
  swift_endAccess();
  sub_1000C6880();
  v169 = v163;
  v170 = v163;
  v171 = v284;
  v284(v169, v165);
  ((void (*)(char *, char *, uint64_t))v282)(v167, v164, v165);
  swift_beginAccess();
  sub_1000C67D0();
  swift_endAccess();
  v171(v164, v165);
  v268 = v168;
  swift_beginAccess();
  sub_1000C67C0();
  swift_endAccess();
  v172 = v227;
  sub_1000C6830();
  v171(v170, v165);
  v173 = v171;
  swift_beginAccess();
  sub_1000C67C0();
  swift_endAccess();
  sub_10001E454(&qword_10010BCD8, &qword_10010BBC8);
  uint64_t v174 = v229;
  sub_1000C6880();
  (*(void (**)(char *, uint64_t))(v228 + 8))(v172, v174);
  ((void (*)(char *, char *, uint64_t))v282)(v164, v170, v165);
  swift_beginAccess();
  sub_1000C67D0();
  swift_endAccess();
  v173(v170, v165);
  swift_beginAccess();
  swift_retain();
  sub_100012854(&qword_10010BCE0);
  v175 = v230;
  sub_1000C67C0();
  swift_endAccess();
  swift_release();
  sub_10001E454(&qword_10010BCE8, &qword_10010BBA8);
  sub_10003411C();
  uint64_t v176 = v233;
  sub_1000C6860();
  (*(void (**)(char *, uint64_t))(v232 + 8))(v175, v176);
  swift_beginAccess();
  swift_retain();
  sub_100012854((uint64_t *)&unk_10010BD00);
  v177 = v234;
  sub_1000C67C0();
  swift_endAccess();
  swift_release();
  sub_10001E454((unint64_t *)&unk_10010D0F0, (uint64_t *)&unk_10010CF60);
  sub_100034188();
  uint64_t v178 = v236;
  sub_1000C6860();
  (*(void (**)(char *, uint64_t))(v235 + 8))(v177, v178);
  swift_beginAccess();
  sub_1000C67C0();
  swift_endAccess();
  uint64_t v179 = v288;
  sub_1000C6860();
  v284(v170, v179);
  swift_beginAccess();
  swift_retain();
  sub_1000C67C0();
  swift_endAccess();
  swift_release();
  sub_10001E454(&qword_10010BD18, &qword_10010BBB0);
  sub_10001E454(&qword_10010BD20, &qword_10010BBA0);
  v180 = v238;
  sub_1000C6720();
  v293 = [v270 mainRunLoop];
  uint64_t v181 = (uint64_t)v274;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v276)(v274, 1, 1, v277);
  sub_10001E454(&qword_10010BD28, &qword_10010BBB8);
  v182 = v243;
  uint64_t v183 = v241;
  sub_1000C6850();
  sub_10001326C(v181, (uint64_t *)&unk_10010BBD0);

  (*(void (**)(char *, uint64_t))(v240 + 8))(v180, v183);
  uint64_t v184 = swift_allocObject();
  swift_weakInit();
  uint64_t v185 = swift_allocObject();
  uint64_t v186 = v263;
  *(void *)(v185 + 16) = v184;
  *(void *)(v185 + 24) = v186;
  uint64_t v187 = swift_allocObject();
  *(void *)(v187 + 16) = sub_100034214;
  *(void *)(v187 + 24) = v185;
  sub_10001E454(&qword_10010BD30, &qword_10010BBC0);
  uint64_t v188 = v245;
  sub_1000C6870();
  swift_release();
  (*(void (**)(char *, uint64_t))(v244 + 8))(v182, v188);
  swift_beginAccess();
  sub_1000C6760();
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  swift_retain();
  sub_1000C67C0();
  swift_endAccess();
  swift_release();
  sub_1000C6860();
  v189 = v284;
  v284(v170, v179);
  swift_beginAccess();
  sub_1000C67C0();
  swift_endAccess();
  sub_1000C6860();
  v189(v170, v179);
  v190 = v246;
  sub_1000C66E0();
  v293 = [v270 mainRunLoop];
  uint64_t v191 = (uint64_t)v274;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v276)(v274, 1, 1, v277);
  sub_10001E454(&qword_10010BD38, &qword_10010BB88);
  v192 = v249;
  uint64_t v193 = v248;
  sub_1000C6850();
  sub_10001326C(v191, (uint64_t *)&unk_10010BBD0);

  (*(void (**)(char *, uint64_t))(v247 + 8))(v190, v193);
  uint64_t v194 = swift_allocObject();
  v195 = v286;
  swift_weakInit();
  uint64_t v196 = swift_allocObject();
  uint64_t v197 = v263;
  *(void *)(v196 + 16) = v194;
  *(void *)(v196 + 24) = v197;
  uint64_t v198 = swift_allocObject();
  *(void *)(v198 + 16) = sub_100034254;
  *(void *)(v198 + 24) = v196;
  sub_10001E454((unint64_t *)&unk_10010BD40, (uint64_t *)&unk_10010BB90);
  uint64_t v199 = v251;
  sub_1000C6870();
  swift_release();
  (*(void (**)(char *, uint64_t))(v250 + 8))(v192, v199);
  swift_beginAccess();
  sub_1000C6760();
  swift_endAccess();
  swift_release();
  swift_release();
  return v195;
}

uint64_t sub_1000282E4(unsigned __int8 *a1, uint64_t a2, SEL *a3, const char *a4)
{
  uint64_t v7 = sub_1000C66D0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *a1;
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v12 = (void *)sub_10000A1F4();
    if (v12)
    {
      objc_msgSend(v12, *a3, v11);
      swift_unknownObjectRelease();
    }
    return swift_unknownObjectRelease();
  }
  else
  {
    sub_1000C66B0();
    uint64_t v13 = sub_1000C66C0();
    os_log_type_t v14 = sub_1000C7670();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, a4, v15, 2u);
      swift_slowDealloc();
    }

    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
}

unsigned __int8 *sub_10002849C@<X0>(unsigned __int8 *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result - 6 < 0xFFFFFFFC;
  return result;
}

void sub_1000284B4(void **a1)
{
  uint64_t v1 = *a1;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = Strong;
    if (v1)
    {
      id v4 = v1;
      id v5 = [v4 participants];
      sub_1000132C8(0, (unint64_t *)&unk_10010B070);
      unint64_t v6 = sub_1000C7540();

      *(void *)(v3 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing15PeopleViewModel_fetchedContacts) = sub_10002869C(v6);
      swift_bridgeObjectRelease();
      if ((v6 & 0x8000000000000000) != 0 || (v6 & 0x4000000000000000) != 0)
      {
        swift_retain();
        unint64_t v11 = swift_bridgeObjectRetain();
        uint64_t v7 = (uint64_t)sub_10003354C(v11);
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
        swift_retain();
        swift_bridgeObjectRetain();
      }
      uint64_t v12 = (void *)v7;
      swift_retain();
      sub_100035EC0((uint64_t *)&v12);
      swift_bridgeObjectRelease();
      swift_release();
      unint64_t v8 = (unint64_t)v12;
      id v9 = v4;
      uint64_t v10 = sub_1000361E4(v8, v3, v9);
      swift_release();
      swift_release();

      swift_getKeyPath();
      swift_getKeyPath();
      uint64_t v12 = v10;
      swift_retain();
      sub_1000C67F0();
      swift_release();
    }
    else
    {
      swift_release();
    }
  }
}

uint64_t sub_10002869C(unint64_t a1)
{
  unint64_t v146 = a1;
  uint64_t v1 = sub_1000C66D0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (uint64_t)v129 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v3);
  uint64_t v8 = (uint64_t)v129 - v7;
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v131 = (char *)v129 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  v130 = (char *)v129 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)v129 - v14;
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)v129 - v16;
  sub_1000C66B0();
  uint64_t v18 = sub_1000C66C0();
  os_log_type_t v19 = sub_1000C7690();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v20 = 0;
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "fetchContactsForParticipants: started", v20, 2u);
    swift_slowDealloc();
  }

  uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  uint64_t v132 = v1;
  uint64_t v135 = v2 + 8;
  v134 = v21;
  v21((uint64_t)v17, v1);
  sub_100012854(&qword_10010BD50);
  *(double *)&uint64_t v22 = COERCE_DOUBLE(swift_allocObject());
  *(_OWORD *)(v22 + 16) = xmmword_1000CC370;
  id v23 = [objc_allocWithZone((Class)CNAvatarViewController) init];
  id v24 = [v23 descriptorForRequiredKeys];

  *(void *)(v22 + 32) = v24;
  v154[0] = (id)v22;
  sub_1000C7550();
  double v153 = COERCE_DOUBLE(&_swiftEmptyDictionarySingleton);
  unint64_t v25 = v146;
  unint64_t v26 = v146 >> 62;
  if (v146 >> 62) {
    goto LABEL_129;
  }
  Swift::Int v27 = *(void *)((v146 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_5:
  sub_100012854(&qword_10010BDA8);
  Swift::Int v145 = v27;
  sub_1000C73C0(v27);
  uint64_t v28 = self;
  swift_retain();
  sub_1000348C8(v25);
  swift_release();
  Class isa = sub_1000C7530().super.isa;
  swift_bridgeObjectRelease();
  id v133 = [v28 predicateForContactsMatchingHandleStrings:isa];

  double Current = CFAbsoluteTimeGetCurrent();
  if (qword_10010ACD0 != -1) {
    swift_once();
  }
  uint64_t v31 = (void *)qword_100115358;
  if (!qword_100115358) {
    goto LABEL_133;
  }
  sub_100012854((uint64_t *)&unk_10010BDB0);
  Class v32 = sub_1000C7530().super.isa;
  swift_bridgeObjectRelease();
  *(double *)uint64_t v154 = 0.0;
  double v33 = COERCE_DOUBLE([v31 unifiedContactsMatchingPredicate:v133 keysToFetch:v32 error:v154]);

  double v34 = *(double *)v154;
  if (v33 == 0.0)
  {
    id v41 = v154[0];
    sub_1000C6490();

    swift_willThrow();
    sub_1000C66B0();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v42 = sub_1000C66C0();
    os_log_type_t v43 = sub_1000C7670();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v44 = (uint8_t *)swift_slowAlloc();
      uint64_t v45 = (double *)swift_slowAlloc();
      *(_DWORD *)uint64_t v44 = 138412290;
      swift_errorRetain();
      double v46 = COERCE_DOUBLE(_swift_stdlib_bridgeErrorToNSError());
      *(double *)uint64_t v154 = v46;
      sub_1000C7850();
      *uint64_t v45 = v46;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v42, v43, "fetchContactsForParticipants: Unexpected error: %@", v44, 0xCu);
      sub_100012854((uint64_t *)&unk_10010B1E0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
    uint64_t v119 = v132;
    v134(v8, v132);
    double v120 = v153;
    sub_1000C66B0();
    uint64_t v125 = sub_1000C66C0();
    os_log_type_t v126 = sub_1000C7690();
    if (os_log_type_enabled(v125, v126))
    {
      uint64_t v127 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v127 = 0;
      _os_log_impl((void *)&_mh_execute_header, v125, v126, "fetchContactsForParticipants: finished", v127, 2u);
      swift_slowDealloc();
    }

    uint64_t v124 = (char *)v5;
    goto LABEL_122;
  }
  sub_1000132C8(0, (unint64_t *)&qword_10010BDC0);
  unint64_t v25 = sub_1000C7540();
  id v35 = *(id *)&v34;

  double v36 = CFAbsoluteTimeGetCurrent();
  sub_1000C66B0();
  swift_bridgeObjectRetain_n();
  uint64_t v37 = sub_1000C66C0();
  LOBYTE(v33) = sub_1000C7690();
  BOOL v38 = os_log_type_enabled(v37, LOBYTE(v33));
  unint64_t v39 = v25 >> 62;
  uint64_t v149 = v25;
  unint64_t v140 = v25 >> 62;
  if (!v38)
  {

    swift_bridgeObjectRelease_n();
    uint64_t v8 = v145;
    goto LABEL_16;
  }
  unint64_t v25 = swift_slowAlloc();
  *(_DWORD *)unint64_t v25 = 134218240;
  *(double *)uint64_t v154 = v36 - Current;
  sub_1000C7850();
  *(_WORD *)(v25 + 12) = 2048;
  uint64_t v8 = v145;
  if (v39) {
    goto LABEL_131;
  }
  double v40 = *(double *)((v149 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    swift_bridgeObjectRelease();
    *(double *)uint64_t v154 = v40;
    sub_1000C7850();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v37, LOBYTE(v33), "fetchContactsForParticipants: unifiedContacts(matching:...) took: %f, total contacts found: %ld", (uint8_t *)v25, 0x16u);
    swift_slowDealloc();

LABEL_16:
    v134((uint64_t)v15, v132);
    if (v26)
    {
      swift_bridgeObjectRetain();
      uint64_t v48 = sub_1000C7990();
    }
    else
    {
      uint64_t v47 = *(void *)((v146 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      uint64_t v48 = v47;
    }
    unint64_t v49 = v140;
    unint64_t v26 = v149;
    if (!v48)
    {
LABEL_112:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1000C66B0();
      double v115 = v153;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v116 = sub_1000C66C0();
      os_log_type_t v117 = sub_1000C7690();
      if (os_log_type_enabled(v116, v117))
      {
        uint64_t v118 = swift_slowAlloc();
        *(_DWORD *)uint64_t v118 = 134218240;
        v154[0] = *(id *)(*(void *)&v115 + 16);
        sub_1000C7850();
        swift_bridgeObjectRelease();
        *(_WORD *)(v118 + 12) = 2048;
        v154[0] = (id)v8;
        sub_1000C7850();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v116, v117, "fetchContactsForParticipants: new contacts fetched: %ld for %ld participants", (uint8_t *)v118, 0x16u);
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      uint64_t v119 = v132;
      v134((uint64_t)v130, v132);
      swift_beginAccess();
      double v120 = v153;
      sub_1000C66B0();
      v121 = sub_1000C66C0();
      os_log_type_t v122 = sub_1000C7690();
      if (os_log_type_enabled(v121, v122))
      {
        uint64_t v123 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v123 = 0;
        _os_log_impl((void *)&_mh_execute_header, v121, v122, "fetchContactsForParticipants: finished", v123, 2u);
        swift_slowDealloc();
      }

      uint64_t v124 = v131;
LABEL_122:
      v134((uint64_t)v124, v119);
      return *(void *)&v120;
    }
    unint64_t v50 = 0;
    unint64_t v142 = v146 & 0xC000000000000001;
    uint64_t v137 = v146 & 0xFFFFFFFFFFFFFF8;
    unint64_t v136 = v146 + 32;
    uint64_t v51 = v149 & 0xFFFFFFFFFFFFFF8;
    uint64_t v139 = v149 & 0xFFFFFFFFFFFFFF8;
    if (v149 < 0) {
      uint64_t v51 = v149;
    }
    v129[1] = v51;
    unint64_t v143 = v149 & 0xC000000000000001;
    uint64_t v138 = v149 + 32;
    uint64_t v141 = v48;
    while (1)
    {
      if (v142)
      {
        uint64_t v52 = (char *)sub_1000C78F0();
      }
      else
      {
        if (v50 >= *(void *)(v137 + 16)) {
          goto LABEL_127;
        }
        uint64_t v52 = (char *)*(id *)(v136 + 8 * v50);
      }
      uint64_t v15 = v52;
      BOOL v53 = __OFADD__(v50++, 1);
      if (v53) {
        goto LABEL_125;
      }
      uint64_t v54 = sub_1000343E0(v52);
      if (!v55)
      {

        goto LABEL_24;
      }
      unint64_t v56 = v54;
      uint64_t v57 = v55;
      if (v49)
      {
        swift_bridgeObjectRetain();
        unint64_t v25 = sub_1000C7990();
      }
      else
      {
        unint64_t v25 = *(void *)(v139 + 16);
        swift_bridgeObjectRetain();
      }
      unint64_t v144 = v50;
      v151 = v15;
      unint64_t v147 = v25;
      if (!v25) {
        break;
      }
      uint64_t v58 = 0;
      while (1)
      {
        if (v143) {
          id v59 = (id)sub_1000C78F0();
        }
        else {
          id v59 = *(id *)(v138 + 8 * v58);
        }
        uint64_t v60 = v59;
        BOOL v53 = __OFADD__(v58, 1);
        uint64_t v61 = v58 + 1;
        if (v53) {
          goto LABEL_126;
        }
        uint64_t v148 = v61;
        unint64_t v25 = (unint64_t)[v59 emailAddresses];
        sub_100012854((uint64_t *)&unk_10010BD80);
        uint64_t v62 = sub_1000C7540();

        id v150 = v60;
        if ((unint64_t)v62 >> 62) {
          break;
        }
        uint64_t v63 = *(void *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v63) {
          goto LABEL_42;
        }
LABEL_35:
        swift_bridgeObjectRelease_n();

        unint64_t v25 = v147;
        uint64_t v58 = v148;
        uint64_t v8 = v145;
        unint64_t v26 = v149;
        uint64_t v15 = v151;
        if (v148 == v147) {
          goto LABEL_59;
        }
      }
      if (v62 < 0) {
        unint64_t v25 = v62;
      }
      else {
        unint64_t v25 = v62 & 0xFFFFFFFFFFFFFF8;
      }
      swift_bridgeObjectRetain_n();
      uint64_t v63 = sub_1000C7990();
      swift_bridgeObjectRelease();
      if (!v63) {
        goto LABEL_35;
      }
LABEL_42:
      unint64_t v152 = v62 & 0xC000000000000001;
      uint64_t v8 = 4;
      while (1)
      {
        unint64_t v26 = v8 - 4;
        if (v152) {
          uint64_t v64 = (char *)sub_1000C78F0();
        }
        else {
          uint64_t v64 = (char *)*(id *)(v62 + 8 * v8);
        }
        uint64_t v15 = v64;
        uint64_t v65 = v8 - 3;
        if (__OFADD__(v26, 1))
        {
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          swift_bridgeObjectRetain();
          Swift::Int v27 = sub_1000C7990();
          swift_bridgeObjectRelease();
          goto LABEL_5;
        }
        unint64_t v25 = v56;
        uint64_t v66 = v57;
        id v67 = [v64 value];
        uint64_t v5 = sub_1000C7440();
        uint64_t v69 = v68;

        uint64_t v57 = v66;
        if (v5 == v25 && v66 == v69) {
          break;
        }
        unint64_t v56 = v25;
        uint64_t v5 = sub_1000C7A50();
        swift_bridgeObjectRelease();
        if (v5) {
          goto LABEL_63;
        }

        ++v8;
        if (v65 == v63) {
          goto LABEL_35;
        }
      }
      swift_bridgeObjectRelease();
LABEL_63:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v26 = v149;
      swift_bridgeObjectRelease();

      id v78 = v150;
      swift_bridgeObjectRelease();
      NSBundle v79 = v151;
      unint64_t v25 = sub_1000C7700();
      uint64_t v81 = v80;
      id v82 = v78;
      double v83 = v153;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      double v153 = -0.0;
      *(double *)uint64_t v154 = v83;
      sub_100032F3C((uint64_t)v82, v25, v81, isUniquelyReferenced_nonNull_native);
      double v153 = *(double *)v154;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v8 = v145;
LABEL_109:
      unint64_t v49 = v140;
      unint64_t v50 = v144;
LABEL_24:
      if (v50 == v141) {
        goto LABEL_112;
      }
    }
LABEL_59:
    swift_bridgeObjectRelease();
    id v71 = objc_allocWithZone((Class)CNPhoneNumber);
    NSString v72 = sub_1000C7400();
    swift_bridgeObjectRelease();
    id v73 = [v71 initWithStringValue:v72];

    id v74 = [v73 formattedInternationalStringValue];
    if (!v74)
    {

      goto LABEL_109;
    }
    uint64_t v75 = sub_1000C7440();
    unint64_t v152 = v76;

    if (!v25) {
      goto LABEL_88;
    }
    swift_bridgeObjectRetain();
    uint64_t v77 = 0;
    while (2)
    {
      if (v143)
      {
        id v85 = (id)sub_1000C78F0();
        BOOL v53 = __OFADD__(v77, 1);
        uint64_t v86 = v77 + 1;
        if (v53) {
          goto LABEL_128;
        }
      }
      else
      {
        id v85 = *(id *)(v138 + 8 * v77);
        BOOL v53 = __OFADD__(v77, 1);
        uint64_t v86 = v77 + 1;
        if (v53) {
          goto LABEL_128;
        }
      }
      uint64_t v148 = v86;
      id v150 = v85;
      id v87 = [v85 phoneNumbers];
      sub_100012854((uint64_t *)&unk_10010BD80);
      unint64_t v26 = sub_1000C7540();

      if (!(v26 >> 62))
      {
        uint64_t v15 = *(char **)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v15) {
          goto LABEL_72;
        }
LABEL_64:
        swift_bridgeObjectRelease_n();

        uint64_t v77 = v148;
        uint64_t v8 = v145;
        unint64_t v26 = v149;
        uint64_t v15 = v151;
        if (v148 != v147) {
          continue;
        }
        swift_bridgeObjectRelease();
LABEL_88:
        swift_bridgeObjectRelease();
        unint64_t v26 = sub_1000C7700();
        uint64_t v37 = v96;
LABEL_96:
        swift_bridgeObjectRetain();
        unint64_t v25 = sub_100072728(v26, (uint64_t)v37);
        char v107 = v106;
        swift_bridgeObjectRelease();
        if (v107)
        {
          double v108 = v153;
          char v109 = swift_isUniquelyReferenced_nonNull_native();
          *(double *)uint64_t v154 = v108;
          unint64_t v26 = v149;
          if ((v109 & 1) == 0)
          {
            sub_1000331EC();
            double v108 = *(double *)v154;
          }
          swift_bridgeObjectRelease();
          uint64_t v110 = *(void **)(*(void *)(*(void *)&v108 + 56) + 8 * v25);
          sub_100032D64(v25, *(uint64_t *)&v108);
          double v153 = v108;

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_109;
        }

LABEL_108:
        swift_bridgeObjectRelease();
        unint64_t v26 = v149;
        goto LABEL_109;
      }
      break;
    }
    swift_bridgeObjectRetain_n();
    uint64_t v15 = (char *)sub_1000C7990();
    swift_bridgeObjectRelease();
    if (!v15) {
      goto LABEL_64;
    }
LABEL_72:
    uint64_t v8 = 4;
    while (2)
    {
      if ((v26 & 0xC000000000000001) != 0) {
        id v88 = (id)sub_1000C78F0();
      }
      else {
        id v88 = *(id *)(v26 + 8 * v8);
      }
      unint64_t v25 = (unint64_t)v88;
      NSBundle v89 = (char *)(v8 - 3);
      if (__OFADD__(v8 - 4, 1)) {
        goto LABEL_124;
      }
      id v90 = [v88 value];
      id v91 = [v90 formattedInternationalStringValue];

      if (!v91)
      {
LABEL_73:

        ++v8;
        if (v89 == v15) {
          goto LABEL_64;
        }
        continue;
      }
      break;
    }
    uint64_t v5 = sub_1000C7440();
    uint64_t v93 = v92;

    if (v5 != v75 || v93 != v152)
    {
      char v95 = sub_1000C7A50();
      swift_bridgeObjectRelease();
      if (v95) {
        goto LABEL_90;
      }
      goto LABEL_73;
    }
    swift_bridgeObjectRelease();
LABEL_90:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    uint64_t v15 = v151;
    unint64_t v26 = sub_1000C7700();
    uint64_t v37 = v97;
    if (!v150)
    {
      uint64_t v8 = v145;
      goto LABEL_96;
    }
    id v98 = v150;
    double v33 = v153;
    *(double *)&uint64_t v8 = COERCE_DOUBLE(swift_isUniquelyReferenced_nonNull_native());
    double v153 = -0.0;
    *(double *)uint64_t v154 = v33;
    unint64_t v25 = sub_100072728(v26, (uint64_t)v37);
    uint64_t v100 = *(void *)(*(void *)&v33 + 16);
    BOOL v101 = (v99 & 1) == 0;
    uint64_t v102 = v100 + v101;
    if (!__OFADD__(v100, v101)) {
      break;
    }
    __break(1u);
LABEL_131:
    swift_bridgeObjectRetain();
    double v40 = COERCE_DOUBLE(sub_1000C7990());
    swift_bridgeObjectRelease();
  }
  char v103 = v99;
  if (*(void *)(*(void *)&v33 + 24) >= v102)
  {
    if ((v8 & 1) == 0) {
      sub_1000331EC();
    }
LABEL_103:
    uint64_t v8 = v145;
    uint64_t v5 = (uint64_t)v154[0];
    if (v103)
    {
      uint64_t v111 = *((void *)v154[0] + 7);
      v25 *= 8;

      *(void *)(v111 + v25) = v98;
LABEL_107:
      double v153 = *(double *)&v5;

      swift_bridgeObjectRelease();
      goto LABEL_108;
    }
    *((void *)v154[0] + (v25 >> 6) + 8) |= 1 << v25;
    uint64_t v112 = (unint64_t *)(*(void *)(v5 + 48) + 16 * v25);
    *uint64_t v112 = v26;
    v112[1] = (unint64_t)v37;
    *(void *)(*(void *)(v5 + 56) + 8 * v25) = v98;
    uint64_t v113 = *(void *)(v5 + 16);
    BOOL v53 = __OFADD__(v113, 1);
    uint64_t v114 = v113 + 1;
    if (!v53)
    {
      *(void *)(v5 + 16) = v114;
      swift_bridgeObjectRetain();
      goto LABEL_107;
    }
    __break(1u);
LABEL_133:
    __break(1u);
  }
  sub_100032724(v102, v8);
  unint64_t v104 = sub_100072728(v26, (uint64_t)v37);
  if ((v103 & 1) == (v105 & 1))
  {
    unint64_t v25 = v104;
    goto LABEL_103;
  }
  uint64_t result = sub_1000C7A80();
  __break(1u);
  return result;
}

void sub_10002999C(id *a1@<X0>, void *a2@<X2>, uint64_t *a3@<X8>)
{
  id v5 = *a1;
  id v6 = [*a1 permission];
  if ((unint64_t)v6 >= 4)
  {
    sub_1000C7980();
    __break(1u);
  }
  else
  {
    char v7 = (char)v6;
    id v8 = [v5 userIdentity];
    id v9 = [v8 lookupInfo];

    uint64_t v52 = a2;
    if (v9 && (id v10 = [v9 emailAddress], v9, v10))
    {
      uint64_t v54 = sub_1000C7440();
      unint64_t v51 = v11;
    }
    else
    {
      uint64_t v54 = 0;
      unint64_t v51 = 0xE000000000000000;
    }
    char v12 = 8 * v7;
    id v13 = [v5 userIdentity];
    id v14 = [v13 lookupInfo];

    uint64_t v15 = a3;
    if (v14 && (id v16 = [v14 phoneNumber], v14, v16))
    {
      uint64_t v17 = sub_1000C7440();
      unint64_t v19 = v18;
    }
    else
    {
      uint64_t v17 = 0;
      unint64_t v19 = 0xE000000000000000;
    }
    unsigned int v50 = 0x10303u >> v12;
    id v20 = [v5 userIdentity];
    id v21 = [v20 userRecordID];

    if (v21)
    {
      id v22 = [v21 recordName];

      uint64_t v23 = sub_1000C7440();
      id v21 = v24;
    }
    else
    {
      uint64_t v23 = 0;
    }
    id v25 = sub_100029DD0(v23, (uint64_t)v21);
    swift_bridgeObjectRelease();
    id v26 = sub_100029F54(v5, 1);
    Swift::Int v27 = sub_10002A024();
    unint64_t v46 = v19;
    uint64_t v47 = v17;
    uint64_t v28 = sub_10002A0B8(v5, v54, v51, v17, v19);
    uint64_t v48 = v29;
    uint64_t v49 = v28;
    uint64_t v30 = sub_100035F6C(v5, (uint64_t)[v52 publicPermission], 0);
    uint64_t v44 = v31;
    uint64_t v45 = v30;
    uint64_t v32 = sub_1000C7700();
    uint64_t v42 = v33;
    uint64_t v43 = v32;
    id v34 = v25;
    id v35 = [v5 role];
    unsigned __int8 v36 = v35 == (id)sub_1000C7730();
    id v53 = v27;
    id v37 = v26;
    LOBYTE(v35) = sub_10003AE4C((unint64_t)[v5 role]);
    unsigned __int8 v38 = [v5 isCurrentUser];
    unsigned __int8 v39 = [v5 isOrgAdminUser];
    type metadata accessor for PersonRowViewModel();
    swift_allocObject();
    *((void *)&v41 + 1) = v46;
    *(void *)&long long v41 = v47;
    uint64_t v40 = sub_10003AF50(v43, v42, v49, v48, v45, v44, 0, 0xE000000000000000, v34, v41, v54, v51, v50, v36, (uint64_t)v37, (uint64_t)v27, v35, v38, v39,
            0);

    if ([v5 isCurrentUser])
    {
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      swift_retain();
      sub_1000C67F0();
    }

    uint64_t *v15 = v40;
  }
}

id sub_100029DD0(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_beginAccess();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1000C67E0();
    swift_release();
    swift_release();
    swift_release();
    if (*(void *)(v11 + 16) && (unint64_t v4 = sub_100072728(a1, a2), (v5 & 1) != 0)) {
      id v6 = *(id *)(*(void *)(v11 + 56) + 8 * v4);
    }
    else {
      id v6 = 0;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v7 = [v6 participantColor];
    if (!v7) {
      id v7 = [self clearColor];
    }
    id v8 = v7;

    return v8;
  }
  else
  {
    id v10 = [self clearColor];
    return v10;
  }
}

id sub_100029F54(void *a1, char a2)
{
  uint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing15PeopleViewModel_fetchedContacts);
  if (v5)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1000C7700();
    if (*(void *)(v5 + 16))
    {
      unint64_t v8 = sub_100072728(v6, v7);
      if (v9)
      {
        id v10 = *(id *)(*(void *)(v5 + 56) + 8 * v8);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v10;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return sub_100034A3C(a1, a2 & 1);
}

void *sub_10002A024()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing15PeopleViewModel_fetchedContacts);
  if (!v1) {
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1000C7700();
  if (*(void *)(v1 + 16) && (unint64_t v4 = sub_100072728(v2, v3), (v5 & 1) != 0))
  {
    uint64_t v6 = *(void **)(*(void *)(v1 + 56) + 8 * v4);
    id v7 = v6;
  }
  else
  {
    uint64_t v6 = 0;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_10002A0B8(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v43 = a4;
  unint64_t v42 = a5;
  uint64_t v8 = sub_100012854(&qword_10010B508);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000C6400();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v42 - v16;
  id v44 = [objc_allocWithZone((Class)NSPersonNameComponentsFormatter) init];
  id v18 = [a1 userIdentity];
  id v19 = [v18 nameComponents];

  if (v19)
  {
    sub_1000C63E0();

    id v20 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v20(v10, v15, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
    {
      v20(v17, v10, v11);
      Class v21 = sub_1000C63D0();
      id v22 = [v44 stringFromPersonNameComponents:v21];

      uint64_t v23 = sub_1000C7440();
      unint64_t v25 = v24;

      (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
      goto LABEL_6;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
  }
  sub_10001326C((uint64_t)v10, &qword_10010B508);
  uint64_t v23 = 0;
  unint64_t v25 = 0xE000000000000000;
LABEL_6:
  uint64_t v26 = HIBYTE(v25) & 0xF;
  if ((v25 & 0x2000000000000000) == 0) {
    uint64_t v26 = v23 & 0xFFFFFFFFFFFFLL;
  }
  if (!v26)
  {
    swift_bridgeObjectRelease();
    id v27 = sub_100029F54(a1, 0);
    id v28 = [self stringFromContact:v27 style:0];
    if (v28)
    {
      uint64_t v29 = v28;
      uint64_t v23 = sub_1000C7440();
      unint64_t v25 = v30;
    }
    else
    {

      uint64_t v23 = 0;
      unint64_t v25 = 0xE000000000000000;
    }
  }
  uint64_t v31 = HIBYTE(v25) & 0xF;
  if ((v25 & 0x2000000000000000) == 0) {
    uint64_t v31 = v23 & 0xFFFFFFFFFFFFLL;
  }
  if (!v31)
  {
    uint64_t v32 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0) {
      uint64_t v32 = a2 & 0xFFFFFFFFFFFFLL;
    }
    if (v32) {
      goto LABEL_21;
    }
    a3 = v42;
    a2 = v43;
    uint64_t v33 = HIBYTE(v42) & 0xF;
    if ((v42 & 0x2000000000000000) == 0) {
      uint64_t v33 = v43 & 0xFFFFFFFFFFFFLL;
    }
    if (v33)
    {
LABEL_21:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      uint64_t v23 = a2;
      unint64_t v25 = a3;
    }
  }
  if (!objc_msgSend(a1, "isOrgAdminUser", v42, v43))
  {
    if ([a1 role] == (id)1)
    {
      id v34 = (objc_class *)[self mainBundle];
      v41._countAndFlagsBits = 0x80000001000D4AC0;
      v35._countAndFlagsBits = 0x656E774F28204025;
      v35._object = (void *)0xEA00000000002972;
      v36.value._countAndFlagsBits = 0;
      v36.value._object = 0;
      v37.super.Class isa = v34;
      v38._countAndFlagsBits = 0;
      v38._object = (void *)0xE000000000000000;
LABEL_27:
      sub_1000C6320(v35, v36, v37, v38, v41);

      sub_100012854((uint64_t *)&unk_10010BD70);
      uint64_t v39 = swift_allocObject();
      *(_OWORD *)(v39 + 16) = xmmword_1000CABA0;
      *(void *)(v39 + 56) = &type metadata for String;
      *(void *)(v39 + 64) = sub_100036368();
      *(void *)(v39 + 32) = v23;
      *(void *)(v39 + 40) = v25;
      uint64_t v23 = sub_1000C7410();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_28;
    }
    if ([a1 isCurrentUser])
    {
      id v34 = (objc_class *)[self mainBundle];
      v41._countAndFlagsBits = 0x80000001000D4AA0;
      v35._countAndFlagsBits = 0x29654D28204025;
      v35._object = (void *)0xE700000000000000;
      v36.value._countAndFlagsBits = 0;
      v36.value._object = 0;
      v37.super.Class isa = v34;
      v38._countAndFlagsBits = 0;
      v38._object = (void *)0xE000000000000000;
      goto LABEL_27;
    }
  }
LABEL_28:

  return v23;
}

uint64_t sub_10002A5F8(void *a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    id v3 = a1;
    swift_retain();
    sub_1000C67F0();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_bridgeObjectRetain();
    return sub_1000C67F0();
  }
  return result;
}

unsigned char *sub_10002A6E4@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = (*result & 1) == 0;
  return result;
}

void sub_10002A6F8(unsigned __int8 a1, uint64_t a2, int a3, void *a4)
{
  uint64_t v8 = sub_1000C66D0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    int v12 = a1;
    sub_1000C66B0();
    uint64_t v13 = sub_1000C66C0();
    os_log_type_t v14 = sub_1000C7690();
    BOOL v15 = os_log_type_enabled(v13, v14);
    uint64_t v37 = a2;
    if (v15)
    {
      uint64_t v16 = swift_slowAlloc();
      Swift::String v35 = a4;
      uint64_t v17 = v16;
      uint64_t v18 = swift_slowAlloc();
      int v36 = v12;
      uint64_t v39 = v18;
      uint64_t v19 = 8 * (char)a2;
      uint64_t v20 = *(void *)&aNone_5[v19];
      *(_DWORD *)uint64_t v17 = 136315650;
      unint64_t v21 = *(void *)&aPublicmPrivate_0[v19 + 16];
      int v34 = a3;
      uint64_t v38 = sub_1000720D0(v20, v21, &v39);
      sub_1000C7850();
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 12) = 1024;
      LODWORD(v38) = v36 & 1;
      sub_1000C7850();
      *(_WORD *)(v17 + 18) = 1024;
      LOBYTE(a3) = v34;
      LODWORD(v38) = v34 & 1;
      sub_1000C7850();
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "PeopleViewModel Combine3: sharingMode: %s, currentUserCanInvite: %{BOOL}d, isFolderSubshare: %{BOOL}d", (uint8_t *)v17, 0x18u);
      swift_arrayDestroy();
      int v12 = v36;
      swift_slowDealloc();
      a4 = v35;
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    char v22 = 0;
    if (v12 == 2)
    {
      char v24 = v37;
    }
    else
    {
      char v23 = a3;
      char v24 = v37;
      if (v37 == 2) {
        char v22 = v12 & (v23 ^ 1);
      }
    }
    swift_getKeyPath();
    swift_getKeyPath();
    LOBYTE(v39) = v22 & 1;
    swift_retain();
    sub_1000C67F0();
    if (v24 == 1) {
      char v25 = sub_1000C5DE0() ^ 1;
    }
    else {
      char v25 = 0;
    }
    swift_getKeyPath();
    swift_getKeyPath();
    LOBYTE(v39) = v25 & 1;
    swift_retain();
    sub_1000C67F0();
    if (a4)
    {
      id v26 = a4;
      id v27 = v26;
      if (v24 == 1) {
        goto LABEL_17;
      }
      char v28 = v24;
      id v29 = [v26 participants];
      sub_1000132C8(0, (unint64_t *)&unk_10010B070);
      unint64_t v30 = sub_1000C7540();

      if (v30 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v31 = sub_1000C7990();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v31 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      char v32 = v31 > 1;
      if (v31 >= 2 && v28 != 2) {
LABEL_17:
      }
        char v32 = sub_1000C5DE0();
      swift_getKeyPath();
      swift_getKeyPath();
      LOBYTE(v39) = v32 & 1;
      swift_retain();
      sub_1000C67F0();
      swift_release();
    }
    else
    {
      swift_getKeyPath();
      swift_getKeyPath();
      LOBYTE(v39) = 0;
      sub_1000C67F0();
    }
  }
}

uint64_t sub_10002ABA8()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    return sub_1000C67F0();
  }
  return result;
}

uint64_t sub_10002AC40(void **a1, void **a2)
{
  uint64_t v2 = *a1;
  id v3 = *a2;
  sub_1000132C8(0, &qword_10010B6D0);
  if (sub_1000C7800())
  {
    LOBYTE(v4) = 0;
    return v4 & 1;
  }
  unsigned int v5 = [v2 isOrgAdminUser];
  if (v5 != [v3 isOrgAdminUser])
  {
    LOBYTE(v4) = [v2 isOrgAdminUser];
    return v4 & 1;
  }
  unsigned int v50 = v3;
  swift_beginAccess();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000C67E0();
  swift_release();
  swift_release();
  uint64_t v6 = &selRef_setOtherAddressesAlreadyChosen_;
  if (v49)
  {
    id v7 = [v49 currentUserParticipant];
    if (v7)
    {
      uint64_t v8 = v7;
      sub_1000132C8(0, (unint64_t *)&unk_10010B070);
      id v9 = v2;
      id v10 = v8;
      int v4 = sub_1000C7800();
      swift_release();

      uint64_t v6 = &selRef_setOtherAddressesAlreadyChosen_;
      goto LABEL_11;
    }
    swift_release();
  }
  else
  {
    swift_release();
  }
  int v4 = 0;
LABEL_11:
  uint64_t v11 = v50;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000C67E0();
  swift_release();
  swift_release();
  if (!v49)
  {
    swift_release();
    if ((v4 & 1) == 0) {
      goto LABEL_18;
    }
LABEL_16:
    LOBYTE(v4) = 1;
    return v4 & 1;
  }
  id v12 = [v49 v6[196]];
  if (!v12)
  {
    swift_release();

    if ((v4 & 1) == 0) {
      goto LABEL_18;
    }
    goto LABEL_16;
  }
  uint64_t v13 = v12;
  sub_1000132C8(0, (unint64_t *)&unk_10010B070);
  id v14 = v50;
  id v15 = v13;
  int v16 = sub_1000C7800();
  swift_release();

  uint64_t v11 = v50;
  if ((v4 ^ v16)) {
    return v4 & 1;
  }
LABEL_18:
  int v4 = [v2 role] == (id)1;
  if (v4 == ([v11 role] != (id)1)) {
    return v4 & 1;
  }
  int v4 = [v2 acceptanceStatus] != (id)1;
  if (v4 == ([v11 acceptanceStatus] == (id)1)) {
    return v4 & 1;
  }
  id v17 = [v2 userIdentity];
  id v18 = [v17 lookupInfo];

  if (v18 && (id v19 = [v18 phoneNumber], v18, v19))
  {

    uint64_t v20 = sub_10002A024();
    BOOL v21 = v20 == 0;
  }
  else
  {
    BOOL v21 = 0;
  }
  id v22 = [v11 userIdentity];
  id v23 = [v22 lookupInfo];

  if (v23)
  {
    id v24 = [v23 phoneNumber];

    if (v24)
    {

      char v25 = sub_10002A024();
      if (!v25)
      {
        if (!v21)
        {
          LOBYTE(v4) = 1;
          return v4 & 1;
        }
        goto LABEL_31;
      }
    }
  }
  if (v21)
  {
    LOBYTE(v4) = 0;
    return v4 & 1;
  }
LABEL_31:
  id v26 = [v2 userIdentity];
  id v27 = [v26 lookupInfo];

  if (v27)
  {
    id v28 = [v27 emailAddress];

    if (v28)
    {
      id v27 = (id)sub_1000C7440();
      unint64_t v30 = v29;

      goto LABEL_36;
    }
    id v27 = 0;
  }
  unint64_t v30 = 0xE000000000000000;
LABEL_36:
  id v31 = [v2 userIdentity];
  id v32 = [v31 lookupInfo];

  if (v32)
  {
    id v33 = [v32 phoneNumber];

    if (v33)
    {
      id v32 = (id)sub_1000C7440();
      unint64_t v35 = v34;
    }
    else
    {
      id v32 = 0;
      unint64_t v35 = 0xE000000000000000;
    }
    uint64_t v11 = v50;
  }
  else
  {
    unint64_t v35 = 0xE000000000000000;
  }
  sub_10002A0B8(v2, (uint64_t)v27, v30, (uint64_t)v32, v35);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v36 = [v11 userIdentity];
  id v37 = [v36 lookupInfo];

  if (!v37) {
    goto LABEL_46;
  }
  id v38 = [v37 emailAddress];

  if (!v38)
  {
    id v37 = 0;
LABEL_46:
    unint64_t v40 = 0xE000000000000000;
    goto LABEL_47;
  }
  id v37 = (id)sub_1000C7440();
  unint64_t v40 = v39;

LABEL_47:
  id v41 = [v11 userIdentity];
  id v42 = [v41 lookupInfo];

  if (v42)
  {
    id v43 = [v42 phoneNumber];

    if (v43)
    {
      uint64_t v44 = sub_1000C7440();
      unint64_t v46 = v45;
    }
    else
    {
      uint64_t v44 = 0;
      unint64_t v46 = 0xE000000000000000;
    }
  }
  else
  {
    uint64_t v44 = 0;
    unint64_t v46 = 0xE000000000000000;
  }
  sub_10002A0B8(v50, (uint64_t)v37, v40, v44, v46);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000363CC();
  uint64_t v47 = sub_1000C7870();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LOBYTE(v4) = v47 == -1;
  return v4 & 1;
}

uint64_t sub_10002B35C(uint64_t a1)
{
  v2[55] = a1;
  v2[56] = v1;
  sub_100012854(&qword_10010B508);
  v2[57] = swift_task_alloc();
  uint64_t v3 = sub_1000C6400();
  v2[58] = v3;
  v2[59] = *(void *)(v3 - 8);
  v2[60] = swift_task_alloc();
  v2[61] = swift_task_alloc();
  uint64_t v4 = sub_1000C6530();
  v2[62] = v4;
  v2[63] = *(void *)(v4 - 8);
  v2[64] = swift_task_alloc();
  v2[65] = swift_task_alloc();
  uint64_t v5 = sub_1000C66D0();
  v2[66] = v5;
  v2[67] = *(void *)(v5 - 8);
  v2[68] = swift_task_alloc();
  v2[69] = swift_task_alloc();
  v2[70] = swift_task_alloc();
  v2[71] = swift_task_alloc();
  v2[72] = swift_task_alloc();
  v2[73] = swift_task_alloc();
  v2[74] = swift_task_alloc();
  v2[75] = swift_task_alloc();
  v2[76] = swift_task_alloc();
  v2[77] = swift_task_alloc();
  v2[78] = sub_100012854((uint64_t *)&unk_10010BDD0);
  v2[79] = swift_task_alloc();
  v2[80] = swift_task_alloc();
  v2[81] = swift_task_alloc();
  v2[82] = swift_task_alloc();
  sub_100012854(&qword_10010B770);
  v2[83] = swift_task_alloc();
  sub_100012854(&qword_10010CB70);
  v2[84] = swift_task_alloc();
  v2[85] = swift_task_alloc();
  v2[86] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for AlertViewModelButton(0);
  v2[87] = v6;
  v2[88] = *(void *)(v6 - 8);
  v2[89] = swift_task_alloc();
  v2[90] = swift_task_alloc();
  v2[91] = swift_task_alloc();
  v2[92] = swift_task_alloc();
  sub_100012854(&qword_10010BE10);
  v2[93] = swift_task_alloc();
  v2[94] = sub_1000C75D0();
  v2[95] = sub_1000C75C0();
  uint64_t v8 = sub_1000C7590();
  v2[96] = v8;
  v2[97] = v7;
  return _swift_task_switch(sub_10002B75C, v8, v7);
}

uint64_t sub_10002B75C()
{
  uint64_t v136 = v0;
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + 440);
  uint64_t v3 = *(void *)(v2 + 16);
  uint64_t v4 = *(void *)(v2 + 24);
  uint64_t v5 = (void *)(*(void *)(v0 + 448) + 16);
  swift_beginAccess();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v6 = *(void **)(v0 + 400);
  if (!v6) {
    goto LABEL_8;
  }
  id v7 = [*(id *)(v0 + 400) participants];
  sub_1000132C8(0, (unint64_t *)&unk_10010B070);
  unint64_t v8 = sub_1000C7540();

  swift_bridgeObjectRetain();
  id v9 = sub_100033DBC(v8, v3, v4);
  *(void *)(v0 + 784) = v9;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  if (!v9)
  {
LABEL_8:
    swift_release();
    goto LABEL_9;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v10 = *(void **)(v0 + 384);
  *(void *)(v0 + 792) = v10;
  if (!v10)
  {
    swift_release();

    goto LABEL_9;
  }
  id v11 = [v10 participants];
  unint64_t v12 = sub_1000C7540();

  if (v12 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1000C7990();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v14 = *(void *)(v0 + 440);
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(v14 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing18PersonRowViewModel_isMe) == 1)
  {
    v129 = v10;
    uint64_t v15 = *(void *)(v1 + 744);
    uint64_t v16 = *(void *)(v1 + 728);
    uint64_t v117 = *(void *)(v1 + 736);
    uint64_t v119 = *(void *)(v1 + 704);
    id v17 = *(int **)(v1 + 696);
    uint64_t v18 = *(void *)(v1 + 688);
    uint64_t v122 = *(void *)(v1 + 680);
    swift_release();
    sub_1000C6D00();
    uint64_t v19 = sub_1000C6FF0();
    uint64_t v132 = v1;
    uint64_t v21 = v20;
    char v112 = v22;
    uint64_t v24 = v23;
    sub_1000C6910();
    uint64_t v25 = sub_1000C6930();
    uint64_t v114 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56);
    v114(v15, 0, 1, v25);
    uint64_t v127 = v9;
    uint64_t v26 = swift_allocObject();
    swift_weakInit();
    swift_retain();
    sub_1000C6560();
    uint64_t v27 = v16 + v17[5];
    *(void *)uint64_t v27 = v19;
    *(void *)(v27 + 8) = v21;
    uint64_t v1 = v132;
    *(unsigned char *)(v27 + 16) = v112 & 1;
    *(void *)(v27 + 24) = v24;
    sub_100012898(v15, v16 + v17[6], &qword_10010BE10);
    swift_release();
    id v28 = (uint64_t (**)())(v16 + v17[7]);
    *id v28 = sub_1000371DC;
    v28[1] = (uint64_t (*)())v26;
    sub_1000C6D00();
    uint64_t v29 = sub_1000C6FF0();
    uint64_t v31 = v30;
    char v33 = v32;
    uint64_t v35 = v34;
    uint64_t v36 = v117 + v17[6];
    sub_1000C6920();
    v114(v36, 0, 1, v25);
    sub_1000C6560();
    uint64_t v37 = v117 + v17[5];
    *(void *)uint64_t v37 = v29;
    *(void *)(v37 + 8) = v31;
    *(unsigned char *)(v37 + 16) = v33 & 1;
    *(void *)(v37 + 24) = v35;
    id v38 = (void *)(v117 + v17[7]);
    *id v38 = 0;
    v38[1] = 0;
    uint64_t v116 = sub_10002ECF4();
    uint64_t v40 = v39;
    uint64_t v41 = sub_10002F284();
    uint64_t v43 = v42;
    sub_100012854(&qword_10010BE18);
    uint64_t v44 = *(void *)(v119 + 72);
    unint64_t v45 = (*(unsigned __int8 *)(v119 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v119 + 80);
    uint64_t v46 = swift_allocObject();
    *(_OWORD *)(v46 + 16) = xmmword_1000CC380;
    uint64_t v47 = v46 + v45;
    sub_100036FC4(v16, v47);
    sub_100036FC4(v117, v47 + v44);
    sub_1000C6560();
    uint64_t v48 = (int *)type metadata accessor for AlertViewModel(0);
    id v49 = (uint64_t *)(v18 + v48[5]);
    uint64_t *v49 = v116;
    v49[1] = v40;
    unsigned int v50 = (uint64_t *)(v18 + v48[6]);
    *unsigned int v50 = v41;
    v50[1] = v43;
    *(void *)(v18 + v48[7]) = v46;
    (*(void (**)(uint64_t, void, uint64_t, int *))(*((void *)v48 - 1) + 56))(v18, 0, 1, v48);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_10001A740(v18, v122, &qword_10010CB70);
    swift_retain();
    sub_1000C67F0();
    sub_10001326C(v18, &qword_10010CB70);
    swift_getKeyPath();
    swift_getKeyPath();
    *(unsigned char *)(v132 + 123) = 1;
    swift_retain();
    sub_1000C67F0();

    sub_100037028(v117);
    sub_100037028(v16);
LABEL_9:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v51 = *(uint64_t (**)(void))(v1 + 8);
    return v51();
  }
  if (v13 <= 2)
  {
    uint64_t v53 = *(void *)(v1 + 744);
    uint64_t v54 = *(void *)(v1 + 712);
    uint64_t v55 = *(int **)(v1 + 696);
    uint64_t v125 = *(void *)(v1 + 688);
    uint64_t v123 = *(void *)(v1 + 704);
    uint64_t v124 = *(void *)(v1 + 672);
    uint64_t v118 = *(void *)(v1 + 720);
    double v120 = *(void **)(v1 + 440);
    swift_release();
    sub_1000C6D00();
    uint64_t v128 = v9;
    uint64_t v56 = sub_1000C6FF0();
    uint64_t v133 = v1;
    uint64_t v58 = v57;
    char v60 = v59;
    uint64_t v62 = v61;
    sub_1000C6910();
    v130 = v10;
    uint64_t v63 = sub_1000C6930();
    uint64_t v113 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56);
    v113(v53, 0, 1, v63);
    uint64_t v64 = swift_allocObject();
    swift_weakInit();
    swift_retain();
    sub_1000C6560();
    uint64_t v65 = v54 + v55[5];
    *(void *)uint64_t v65 = v56;
    *(void *)(v65 + 8) = v58;
    uint64_t v1 = v133;
    *(unsigned char *)(v65 + 16) = v60 & 1;
    *(void *)(v65 + 24) = v62;
    sub_100012898(v53, v54 + v55[6], &qword_10010BE10);
    swift_release();
    uint64_t v66 = (uint64_t (**)())(v54 + v55[7]);
    *uint64_t v66 = sub_100036FBC;
    v66[1] = (uint64_t (*)())v64;
    sub_1000C6D00();
    LOWORD(v111._object) = 256;
    uint64_t v67 = sub_1000C6FF0();
    uint64_t v69 = v68;
    LOBYTE(v56) = v70;
    uint64_t v72 = v71;
    uint64_t v73 = v118 + v55[6];
    sub_1000C6920();
    v113(v73, 0, 1, v63);
    sub_1000C6560();
    uint64_t v74 = v118 + v55[5];
    *(void *)uint64_t v74 = v67;
    *(void *)(v74 + 8) = v69;
    *(unsigned char *)(v74 + 16) = v56 & 1;
    *(void *)(v74 + 24) = v72;
    uint64_t v75 = (void *)(v118 + v55[7]);
    *uint64_t v75 = 0;
    v75[1] = 0;
    uint64_t v121 = sub_10002FB80(v120);
    uint64_t v115 = v76;
    uint64_t v77 = (objc_class *)objc_msgSend(self, "mainBundle", 0);
    v138._countAndFlagsBits = 0xD000000000000038;
    v111._countAndFlagsBits = 0xED00006567617373;
    v138._object = (void *)0x80000001000D4B70;
    v139.value._countAndFlagsBits = 0;
    v139.value._object = 0;
    v78.super.Class isa = v77;
    v140._countAndFlagsBits = 0;
    v140._object = (void *)0xE000000000000000;
    uint64_t v79 = sub_1000C6320(v138, v139, v78, v140, v111);
    uint64_t v81 = v80;

    sub_100012854(&qword_10010BE18);
    uint64_t v82 = *(void *)(v123 + 72);
    unint64_t v83 = (*(unsigned __int8 *)(v123 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v123 + 80);
    uint64_t v84 = swift_allocObject();
    *(_OWORD *)(v84 + 16) = xmmword_1000CC380;
    sub_100036FC4(v54, v84 + v83);
    sub_100036FC4(v118, v84 + v83 + v82);
    sub_1000C6560();
    id v85 = (int *)type metadata accessor for AlertViewModel(0);
    uint64_t v86 = (uint64_t *)(v124 + v85[5]);
    *uint64_t v86 = v121;
    v86[1] = v115;
    id v87 = (uint64_t *)(v124 + v85[6]);
    *id v87 = v79;
    v87[1] = v81;
    *(void *)(v124 + v85[7]) = v84;
    (*(void (**)(uint64_t, void, uint64_t, int *))(*((void *)v85 - 1) + 56))(v124, 0, 1, v85);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_10001A740(v124, v125, &qword_10010CB70);
    swift_retain();
    sub_1000C67F0();
    sub_10001326C(v124, &qword_10010CB70);
    swift_getKeyPath();
    swift_getKeyPath();
    *(unsigned char *)(v133 + 122) = 1;
    swift_retain();
    sub_1000C67F0();

    sub_100037028(v118);
    sub_100037028(v54);
    goto LABEL_9;
  }
  swift_retain();
  sub_1000509C4(v9);
  swift_release();
  uint64_t v88 = *(void *)(v1 + 664);
  uint64_t v89 = *(void *)(v1 + 656);
  uint64_t v90 = *(void *)(v1 + 648);
  uint64_t v91 = *(void *)(v1 + 448);
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v92 = (void *)v1;
  *(unsigned char *)(v1 + 121) = 1;
  swift_retain();
  uint64_t v93 = (void *)v1;
  sub_1000C67F0();
  uint64_t v94 = sub_1000C7600();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v94 - 8) + 56))(v88, 1, 1, v94);
  swift_retain();
  uint64_t v95 = sub_1000C75C0();
  v96 = (void *)swift_allocObject();
  v96[2] = v95;
  v96[3] = &protocol witness table for MainActor;
  v96[4] = v91;
  sub_1000BD118(v88, (uint64_t)&unk_10010BE28, (uint64_t)v96);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  sub_1000C66B0();
  sub_10001A740(v89, v90, (uint64_t *)&unk_10010BDD0);
  v97 = sub_1000C66C0();
  os_log_type_t v98 = sub_1000C7690();
  BOOL v99 = os_log_type_enabled(v97, v98);
  uint64_t v100 = *(void *)(v1 + 648);
  if (v99)
  {
    uint64_t v101 = *(void *)(v1 + 640);
    uint64_t v134 = *(void *)(v1 + 616);
    uint64_t v126 = *(void *)(v1 + 536);
    uint64_t v131 = *(void *)(v1 + 528);
    uint64_t v102 = (uint8_t *)swift_slowAlloc();
    v135[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v102 = 136315138;
    sub_10001A740(v100, v101, (uint64_t *)&unk_10010BDD0);
    uint64_t v103 = sub_1000C7450();
    v92[52] = sub_1000720D0(v103, v104, v135);
    sub_1000C7850();
    swift_bridgeObjectRelease();
    sub_10001326C(v100, (uint64_t *)&unk_10010BDD0);
    _os_log_impl((void *)&_mh_execute_header, v97, v98, "askToRemoveFromMessagesConversation: Fetching sharing URL for file URL: %s", v102, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v93 = v92;
    swift_slowDealloc();

    char v105 = *(void (**)(uint64_t, uint64_t))(v126 + 8);
    v105(v134, v131);
  }
  else
  {
    uint64_t v106 = *(void *)(v1 + 616);
    uint64_t v107 = *(void *)(v1 + 536);
    uint64_t v108 = *(void *)(v1 + 528);
    sub_10001326C(v100, (uint64_t *)&unk_10010BDD0);

    char v105 = *(void (**)(uint64_t, uint64_t))(v107 + 8);
    v105(v106, v108);
  }
  v93[100] = v105;
  v93[101] = *v5;
  swift_retain();
  char v109 = (void *)swift_task_alloc();
  v93[102] = v109;
  *char v109 = v93;
  v109[1] = sub_10002CC0C;
  uint64_t v110 = v93[82];
  return sub_100050CBC(v110);
}

uint64_t sub_10002CC0C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 824) = v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v3 = *(void *)(v2 + 776);
  uint64_t v4 = *(void *)(v2 + 768);
  if (v0) {
    uint64_t v5 = sub_10002E2F0;
  }
  else {
    uint64_t v5 = sub_10002CD60;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10002CD60()
{
  char v105 = v0;
  uint64_t v1 = v0[79];
  uint64_t v2 = v0[62];
  uint64_t v3 = v0[63];
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2);
  uint64_t v5 = v0[79];
  if (v4 == 1)
  {
    swift_release();
    sub_10001326C(v5, (uint64_t *)&unk_10010BDD0);
    sub_1000C66B0();
    uint64_t v6 = sub_1000C66C0();
    os_log_type_t v7 = sub_1000C7670();
    if (os_log_type_enabled(v6, v7))
    {
      unint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "askToRemoveFromMessagesConversation: model missing share url", v8, 2u);
      swift_slowDealloc();
    }
    id v9 = (void (*)(uint64_t, uint64_t))v0[100];
    uint64_t v10 = (void *)v0[99];
    id v11 = (void *)v0[98];
    uint64_t v12 = v0[82];
    uint64_t v13 = v0[71];
    uint64_t v14 = v0[66];

    v9(v13, v14);
LABEL_14:
    sub_10001326C(v12, (uint64_t *)&unk_10010BDD0);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v41 = (uint64_t (*)(void))v0[1];
    return v41();
  }
  uint64_t v15 = (void *)v0[98];
  (*(void (**)(void, void, void))(v0[63] + 32))(v0[65], v0[79], v0[62]);
  id v16 = [v15 userIdentity];
  id v17 = [v16 nameComponents];

  if (!v17)
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(v0[59] + 56))(v0[57], 1, 1, v0[58]);
    goto LABEL_11;
  }
  uint64_t v19 = v0[59];
  uint64_t v18 = v0[60];
  uint64_t v21 = v0[57];
  uint64_t v20 = v0[58];
  sub_1000C63E0();

  char v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32);
  v22(v21, v18, v20);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v19 + 56))(v21, 0, 1, v20);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v21, 1, v20) == 1)
  {
LABEL_11:
    uint64_t v31 = v0[57];
    swift_release();
    sub_10001326C(v31, &qword_10010B508);
    sub_1000C66B0();
    char v32 = sub_1000C66C0();
    os_log_type_t v33 = sub_1000C7670();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v34 = 0;
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "askToRemoveFromMessagesConversation: participant missing name components", v34, 2u);
      swift_slowDealloc();
    }
    uint64_t v35 = (void *)v0[99];
    uint64_t v36 = (void *)v0[98];
    uint64_t v12 = v0[82];
    uint64_t v37 = v0[72];
    uint64_t v38 = v0[66];
    uint64_t v97 = v0[65];
    uint64_t v100 = (void (*)(uint64_t, uint64_t))v0[100];
    uint64_t v39 = v0[62];
    uint64_t v40 = v0[63];

    v100(v37, v38);
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v97, v39);
    goto LABEL_14;
  }
  uint64_t v23 = (void *)v0[98];
  v22(v0[61], v0[57], v0[58]);
  uint64_t v24 = self;
  Class v25 = sub_1000C63D0();
  id v26 = [v24 localizedStringFromPersonNameComponents:v25 style:0 options:0];

  sub_1000C7440();
  id v27 = [v23 userIdentity];
  id v28 = [v27 lookupInfo];
  v0[104] = v28;

  if (!v28)
  {
    swift_release();
    swift_bridgeObjectRelease();
    sub_1000C66B0();
    uint64_t v43 = sub_1000C66C0();
    os_log_type_t v44 = sub_1000C7670();
    if (os_log_type_enabled(v43, v44))
    {
      unint64_t v45 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v45 = 0;
      _os_log_impl((void *)&_mh_execute_header, v43, v44, "askToRemoveFromMessagesConversation: user identity missing lookup info", v45, 2u);
      swift_slowDealloc();
    }
    uint64_t v46 = (void *)v0[99];
    uint64_t v47 = (void *)v0[98];
    uint64_t v48 = v0[82];
    uint64_t v49 = v0[73];
    uint64_t v50 = v0[66];
    uint64_t v101 = v0[65];
    unint64_t v51 = v43;
    uint64_t v52 = v0[63];
    uint64_t v94 = (void (*)(uint64_t, uint64_t))v0[100];
    uint64_t v98 = v0[62];
    uint64_t v92 = v0[61];
    uint64_t v54 = v0[58];
    uint64_t v53 = v0[59];

    v94(v49, v50);
    uint64_t v55 = v54;
    uint64_t v12 = v48;
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v92, v55);
    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v101, v98);
    goto LABEL_14;
  }
  id v29 = [v28 emailAddress];
  if (v29)
  {

    id v30 = [v28 emailAddress];
  }
  else
  {
    id v30 = [v28 phoneNumber];
  }
  id v56 = v30;
  if (!v56)
  {
    swift_release();
    swift_bridgeObjectRelease();
    sub_1000C66B0();
    uint64_t v76 = sub_1000C66C0();
    os_log_type_t v77 = sub_1000C7670();
    if (os_log_type_enabled(v76, v77))
    {
      NSBundle v78 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)NSBundle v78 = 0;
      _os_log_impl((void *)&_mh_execute_header, v76, v77, "askToRemoveFromMessagesConversation: lookup info missing email and phone number", v78, 2u);
      swift_slowDealloc();
    }
    v96 = (void (*)(uint64_t, uint64_t))v0[100];
    uint64_t v79 = (void *)v0[99];
    uint64_t v80 = (void *)v0[98];
    uint64_t v81 = v0[82];
    uint64_t v91 = v0[74];
    uint64_t v82 = v0[66];
    uint64_t v83 = v0[63];
    uint64_t v99 = v0[62];
    uint64_t v103 = v0[65];
    uint64_t v93 = v0[61];
    uint64_t v84 = v0[59];
    uint64_t v90 = v0[58];

    uint64_t v12 = v81;
    v96(v91, v82);
    (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v93, v90);
    (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v103, v99);
    goto LABEL_14;
  }
  uint64_t v102 = v0[65];
  uint64_t v57 = v0[63];
  uint64_t v58 = v0[64];
  uint64_t v59 = v0[62];
  sub_1000C7440();

  id v60 = objc_allocWithZone((Class)_SWPerson);
  NSString v61 = sub_1000C7400();
  swift_bridgeObjectRelease();
  NSString v62 = sub_1000C7400();
  swift_bridgeObjectRelease();
  v0[105] = [v60 initWithHandle:v61 identity:0 displayName:v62 thumbnailImageData:0];

  sub_1000C66B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 16))(v58, v102, v59);
  uint64_t v63 = sub_1000C66C0();
  os_log_type_t v64 = sub_1000C7690();
  BOOL v65 = os_log_type_enabled(v63, v64);
  uint64_t v66 = (void (*)(uint64_t, uint64_t))v0[100];
  uint64_t v67 = v0[76];
  uint64_t v68 = v0[66];
  uint64_t v70 = v0[63];
  uint64_t v69 = v0[64];
  uint64_t v71 = v0[62];
  if (v65)
  {
    uint64_t v95 = (void (*)(uint64_t, uint64_t))v0[100];
    uint64_t v72 = (uint8_t *)swift_slowAlloc();
    uint64_t v104 = swift_slowAlloc();
    *(_DWORD *)uint64_t v72 = 136315138;
    sub_100037144();
    uint64_t v73 = sub_1000C7A20();
    v0[51] = sub_1000720D0(v73, v74, &v104);
    sub_1000C7850();
    swift_bridgeObjectRelease();
    uint64_t v75 = *(void (**)(uint64_t, uint64_t))(v70 + 8);
    v75(v69, v71);
    _os_log_impl((void *)&_mh_execute_header, v63, v64, "askToRemoveFromMessagesConversation: Fetching highlight for %s", v72, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v95(v67, v68);
  }
  else
  {
    uint64_t v75 = *(void (**)(uint64_t, uint64_t))(v70 + 8);
    v75(v0[64], v0[62]);

    v66(v67, v68);
  }
  v0[106] = v75;
  id v85 = (NSURL *)v0[56];
  uint64_t v86 = *(Class *)((char *)&v85->super.isa
                 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing15PeopleViewModel_highlightCenter);
  sub_1000C64C0(v85);
  uint64_t v88 = v87;
  v0[107] = v87;
  v0[2] = v0;
  v0[7] = v0 + 46;
  v0[3] = sub_10002D950;
  uint64_t v89 = swift_continuation_init();
  v0[34] = _NSConcreteStackBlock;
  v0[35] = 0x40000000;
  v0[36] = sub_10002FCAC;
  v0[37] = &unk_100100558;
  v0[38] = v89;
  [v86 getCollaborationHighlightForURL:v88 completionHandler:v0 + 34];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_10002D950()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 864) = v2;
  uint64_t v3 = *(void *)(v1 + 776);
  uint64_t v4 = *(void *)(v1 + 768);
  if (v2) {
    uint64_t v5 = sub_10002E6F4;
  }
  else {
    uint64_t v5 = sub_10002DA80;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10002DA80()
{
  uint64_t v1 = *(void **)(v0 + 856);
  uint64_t v2 = *(void **)(v0 + 840);
  uint64_t v3 = *(void **)(v0 + 368);
  *(void *)(v0 + 872) = v3;

  sub_1000C66B0();
  id v4 = v2;
  id v5 = v3;
  id v6 = v4;
  id v7 = v5;
  unint64_t v8 = sub_1000C66C0();
  os_log_type_t v9 = sub_1000C7690();
  if (os_log_type_enabled(v8, v9))
  {
    os_log_type_t v32 = v9;
    uint64_t v10 = *(void **)(v0 + 840);
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 138412546;
    *(void *)(v0 + 392) = v10;
    uint64_t v13 = v7;
    id v14 = v10;
    sub_1000C7850();
    void *v12 = v10;

    *(_WORD *)(v11 + 12) = 2112;
    *(void *)(v0 + 344) = v13;
    id v15 = v13;
    id v7 = v13;
    sub_1000C7850();
    v12[1] = v13;

    _os_log_impl((void *)&_mh_execute_header, v8, v32, "askToRemoveFromMessagesConversation: Person: %@ Highlight: %@", (uint8_t *)v11, 0x16u);
    sub_100012854((uint64_t *)&unk_10010B1E0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    unint64_t v8 = *(NSObject **)(v0 + 840);
  }
  id v16 = *(void (**)(uint64_t, uint64_t))(v0 + 800);
  uint64_t v17 = *(void *)(v0 + 600);
  uint64_t v18 = *(void *)(v0 + 528);

  v16(v17, v18);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  *(void *)(v0 + 880) = Strong;
  if (Strong)
  {
    uint64_t v20 = (void *)swift_task_alloc();
    *(void *)(v0 + 888) = v20;
    *uint64_t v20 = v0;
    v20[1] = sub_10002DF44;
    uint64_t v21 = *(void *)(v0 + 840);
    return sub_100010210(v21, (uint64_t)v7);
  }
  else
  {
    uint64_t v23 = *(void **)(v0 + 840);
    uint64_t v24 = *(void **)(v0 + 832);
    Class v25 = *(void **)(v0 + 792);
    id v26 = *(void **)(v0 + 784);
    swift_release();

    id v27 = *(void (**)(uint64_t, uint64_t))(v0 + 848);
    uint64_t v28 = *(void *)(v0 + 656);
    uint64_t v29 = *(void *)(v0 + 520);
    uint64_t v30 = *(void *)(v0 + 496);
    (*(void (**)(void, void))(*(void *)(v0 + 472) + 8))(*(void *)(v0 + 488), *(void *)(v0 + 464));
    v27(v29, v30);
    sub_10001326C(v28, (uint64_t *)&unk_10010BDD0);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v31 = *(uint64_t (**)(void))(v0 + 8);
    return v31();
  }
}

uint64_t sub_10002DF44()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  uint64_t v2 = *(void *)(v1 + 776);
  uint64_t v3 = *(void *)(v1 + 768);
  return _swift_task_switch(sub_10002E088, v3, v2);
}

uint64_t sub_10002E088()
{
  uint64_t v1 = (void *)v0[109];
  uint64_t v2 = (void *)v0[105];
  uint64_t v3 = (void *)v0[104];
  id v4 = (void *)v0[99];
  uint64_t v5 = (void *)v0[98];
  swift_release();

  id v6 = (void (*)(uint64_t, uint64_t))v0[106];
  uint64_t v7 = v0[82];
  uint64_t v8 = v0[65];
  uint64_t v9 = v0[62];
  (*(void (**)(void, void))(v0[59] + 8))(v0[61], v0[58]);
  v6(v8, v9);
  sub_10001326C(v7, (uint64_t *)&unk_10010BDD0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_10002E2F0()
{
  uint64_t v20 = v0;
  uint64_t v1 = *(void *)(v0 + 656);
  swift_release();
  sub_10001326C(v1, (uint64_t *)&unk_10010BDD0);
  uint64_t v2 = *(void *)(v0 + 824);
  sub_1000C66B0();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v3 = sub_1000C66C0();
  os_log_type_t v4 = sub_1000C7670();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v0 + 800);
    id v14 = *(void **)(v0 + 784);
    id v15 = *(void **)(v0 + 792);
    uint64_t v17 = *(void *)(v0 + 544);
    uint64_t v16 = *(void *)(v0 + 528);
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    *(void *)(v0 + 352) = v2;
    swift_errorRetain();
    sub_100012854((uint64_t *)&unk_10010B010);
    uint64_t v6 = sub_1000C7450();
    *(void *)(v0 + 360) = sub_1000720D0(v6, v7, &v19);
    sub_1000C7850();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "askToRemoveFromMessagesConversation: Unexpected error: %s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    v18(v17, v16);
  }
  else
  {
    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v0 + 800);
    uint64_t v9 = *(void **)(v0 + 784);
    uint64_t v10 = *(void *)(v0 + 544);
    uint64_t v11 = *(void *)(v0 + 528);

    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();

    v8(v10, v11);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_10002E6F4()
{
  uint64_t v29 = v0;
  uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v0 + 848);
  id v26 = *(void **)(v0 + 856);
  uint64_t v1 = *(void **)(v0 + 840);
  uint64_t v2 = *(void **)(v0 + 832);
  uint64_t v22 = *(void *)(v0 + 656);
  uint64_t v3 = *(void *)(v0 + 520);
  uint64_t v4 = *(void *)(v0 + 496);
  uint64_t v5 = *(void *)(v0 + 488);
  uint64_t v7 = *(void *)(v0 + 464);
  uint64_t v6 = *(void *)(v0 + 472);
  swift_release();
  swift_willThrow();

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  v24(v3, v4);
  sub_10001326C(v22, (uint64_t *)&unk_10010BDD0);

  uint64_t v8 = *(void *)(v0 + 864);
  sub_1000C66B0();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v9 = sub_1000C66C0();
  os_log_type_t v10 = sub_1000C7670();
  if (os_log_type_enabled(v9, v10))
  {
    id v27 = *(void (**)(uint64_t, uint64_t))(v0 + 800);
    uint64_t v20 = *(void **)(v0 + 784);
    uint64_t v21 = *(void **)(v0 + 792);
    uint64_t v25 = *(void *)(v0 + 544);
    uint64_t v23 = *(void *)(v0 + 528);
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315138;
    *(void *)(v0 + 352) = v8;
    swift_errorRetain();
    sub_100012854((uint64_t *)&unk_10010B010);
    uint64_t v12 = sub_1000C7450();
    *(void *)(v0 + 360) = sub_1000720D0(v12, v13, &v28);
    sub_1000C7850();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "askToRemoveFromMessagesConversation: Unexpected error: %s", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    v27(v25, v23);
  }
  else
  {
    id v14 = *(void (**)(uint64_t, uint64_t))(v0 + 800);
    id v15 = *(void **)(v0 + 784);
    uint64_t v16 = *(void *)(v0 + 544);
    uint64_t v17 = *(void *)(v0 + 528);

    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();

    v14(v16, v17);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
  return v18();
}

uint64_t sub_10002EB74()
{
  uint64_t v0 = sub_100012854(&qword_10010B770);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = &v9[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v4 = result;
    swift_beginAccess();
    uint64_t v5 = *(void *)(v4 + 16);
    uint64_t v6 = sub_1000C7600();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v2, 1, 1, v6);
    sub_1000C75D0();
    swift_retain_n();
    swift_retain();
    uint64_t v7 = sub_1000C75C0();
    uint64_t v8 = (void *)swift_allocObject();
    v8[2] = v7;
    v8[3] = &protocol witness table for MainActor;
    v8[4] = v5;
    v8[5] = v4;
    sub_1000BD118((uint64_t)v2, (uint64_t)&unk_10010BEB0, (uint64_t)v8);
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_10002ECF4()
{
  sub_100012854((uint64_t *)&unk_10010C5E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1000CC3A0;
  *(unsigned char *)(inited + 32) = 7;
  uint64_t v1 = self;
  uint64_t v2 = (objc_class *)[v1 mainBundle];
  v65._countAndFlagsBits = 0xD00000000000003ELL;
  v55._countAndFlagsBits = 0x80000001000D5360;
  v65._object = (void *)0x80000001000D5320;
  v75.value._countAndFlagsBits = 0;
  v75.value._object = 0;
  v3.super.Class isa = v2;
  v85._countAndFlagsBits = 0;
  v85._object = (void *)0xE000000000000000;
  uint64_t v4 = sub_1000C6320(v65, v75, v3, v85, v55);
  uint64_t v6 = v5;

  *(void *)(inited + 40) = v4;
  *(void *)(inited + 48) = v6;
  *(unsigned char *)(inited + 56) = 8;
  uint64_t v7 = (objc_class *)[v1 mainBundle];
  v56._countAndFlagsBits = 0x80000001000D53D0;
  v66._countAndFlagsBits = 0xD00000000000003ALL;
  v66._object = (void *)0x80000001000D5390;
  v76.value._countAndFlagsBits = 0;
  v76.value._object = 0;
  v8.super.Class isa = v7;
  v86._countAndFlagsBits = 0;
  v86._object = (void *)0xE000000000000000;
  uint64_t v9 = sub_1000C6320(v66, v76, v8, v86, v56);
  uint64_t v11 = v10;

  *(void *)(inited + 64) = v9;
  *(void *)(inited + 72) = v11;
  *(unsigned char *)(inited + 80) = 9;
  uint64_t v12 = (objc_class *)[v1 mainBundle];
  v67._countAndFlagsBits = 0xD00000000000003FLL;
  v57._countAndFlagsBits = 0x80000001000D5450;
  v67._object = (void *)0x80000001000D5410;
  v77.value._countAndFlagsBits = 0;
  v77.value._object = 0;
  v13.super.Class isa = v12;
  v87._countAndFlagsBits = 0;
  v87._object = (void *)0xE000000000000000;
  uint64_t v14 = sub_1000C6320(v67, v77, v13, v87, v57);
  uint64_t v16 = v15;

  *(void *)(inited + 88) = v14;
  *(void *)(inited + 96) = v16;
  *(unsigned char *)(inited + 104) = 10;
  uint64_t v17 = (objc_class *)[v1 mainBundle];
  v68._countAndFlagsBits = 0xD000000000000044;
  v58._countAndFlagsBits = 0x80000001000D54E0;
  v68._object = (void *)0x80000001000D5490;
  v78.value._countAndFlagsBits = 0;
  v78.value._object = 0;
  v18.super.Class isa = v17;
  v88._countAndFlagsBits = 0;
  v88._object = (void *)0xE000000000000000;
  uint64_t v19 = sub_1000C6320(v68, v78, v18, v88, v58);
  uint64_t v21 = v20;

  *(void *)(inited + 112) = v19;
  *(void *)(inited + 120) = v21;
  *(unsigned char *)(inited + 128) = 11;
  uint64_t v22 = (objc_class *)[v1 mainBundle];
  v59._countAndFlagsBits = 0x80000001000D5570;
  v69._object = (void *)0x80000001000D5520;
  v69._countAndFlagsBits = 0xD000000000000040;
  v79.value._countAndFlagsBits = 0;
  v79.value._object = 0;
  v23.super.Class isa = v22;
  v89._countAndFlagsBits = 0;
  v89._object = (void *)0xE000000000000000;
  uint64_t v24 = sub_1000C6320(v69, v79, v23, v89, v59);
  uint64_t v26 = v25;

  *(void *)(inited + 136) = v24;
  *(void *)(inited + 144) = v26;
  *(unsigned char *)(inited + 152) = 0;
  id v27 = (objc_class *)[v1 mainBundle];
  v60._countAndFlagsBits = 0x80000001000D53D0;
  v70._countAndFlagsBits = 0xD00000000000003ALL;
  v70._object = (void *)0x80000001000D5390;
  v80.value._countAndFlagsBits = 0;
  v80.value._object = 0;
  v28.super.Class isa = v27;
  v90._countAndFlagsBits = 0;
  v90._object = (void *)0xE000000000000000;
  uint64_t v29 = sub_1000C6320(v70, v80, v28, v90, v60);
  uint64_t v31 = v30;

  *(void *)(inited + 160) = v29;
  *(void *)(inited + 168) = v31;
  *(unsigned char *)(inited + 176) = 1;
  os_log_type_t v32 = (objc_class *)[v1 mainBundle];
  v71._countAndFlagsBits = 0xD00000000000003CLL;
  v61._countAndFlagsBits = 0x80000001000D55F0;
  v71._object = (void *)0x80000001000D55B0;
  v81.value._countAndFlagsBits = 0;
  v81.value._object = 0;
  v33.super.Class isa = v32;
  v91._countAndFlagsBits = 0;
  v91._object = (void *)0xE000000000000000;
  uint64_t v34 = sub_1000C6320(v71, v81, v33, v91, v61);
  uint64_t v36 = v35;

  *(void *)(inited + 184) = v34;
  *(void *)(inited + 192) = v36;
  *(unsigned char *)(inited + 200) = 2;
  uint64_t v37 = (objc_class *)[v1 mainBundle];
  v62._countAndFlagsBits = 0x80000001000D5670;
  v72._object = (void *)0x80000001000D5630;
  v72._countAndFlagsBits = 0xD00000000000003FLL;
  v82.value._countAndFlagsBits = 0;
  v82.value._object = 0;
  v38.super.Class isa = v37;
  v92._countAndFlagsBits = 0;
  v92._object = (void *)0xE000000000000000;
  uint64_t v39 = sub_1000C6320(v72, v82, v38, v92, v62);
  uint64_t v41 = v40;

  *(void *)(inited + 208) = v39;
  *(void *)(inited + 216) = v41;
  *(unsigned char *)(inited + 224) = 3;
  uint64_t v42 = (objc_class *)[v1 mainBundle];
  v63._countAndFlagsBits = 0x80000001000D5700;
  v73._object = (void *)0x80000001000D56B0;
  v73._countAndFlagsBits = 0xD000000000000040;
  v83.value._countAndFlagsBits = 0;
  v83.value._object = 0;
  v43.super.Class isa = v42;
  v93._countAndFlagsBits = 0;
  v93._object = (void *)0xE000000000000000;
  uint64_t v44 = sub_1000C6320(v73, v83, v43, v93, v63);
  uint64_t v46 = v45;

  *(void *)(inited + 232) = v44;
  *(void *)(inited + 240) = v46;
  *(unsigned char *)(inited + 248) = 13;
  uint64_t v47 = (objc_class *)[v1 mainBundle];
  v74._countAndFlagsBits = 0xD000000000000029;
  v64._countAndFlagsBits = 0x80000001000D5770;
  v74._object = (void *)0x80000001000D5740;
  v84.value._countAndFlagsBits = 0;
  v84.value._object = 0;
  v48.super.Class isa = v47;
  v94._countAndFlagsBits = 0;
  v94._object = (void *)0xE000000000000000;
  uint64_t v49 = sub_1000C6320(v74, v84, v48, v94, v64);
  uint64_t v51 = v50;

  *(void *)(inited + 256) = v49;
  *(void *)(inited + 264) = v51;
  unint64_t v52 = sub_10004E6A4(inited);
  swift_beginAccess();
  swift_retain();
  uint64_t v53 = sub_10003B628(v52);
  swift_release();
  swift_bridgeObjectRelease();
  return v53;
}

uint64_t sub_10002F284()
{
  uint64_t v0 = self;
  uint64_t v1 = (objc_class *)[v0 mainBundle];
  v76._countAndFlagsBits = 0xD00000000000001FLL;
  v62._countAndFlagsBits = 0x80000001000D4C50;
  v76._object = (void *)0x80000001000D4C30;
  v87.value._countAndFlagsBits = 0;
  v87.value._object = 0;
  v2.super.Class isa = v1;
  v98._countAndFlagsBits = 0;
  v98._object = (void *)0xE000000000000000;
  uint64_t v3 = sub_1000C6320(v76, v87, v2, v98, v62);
  uint64_t v5 = v4;

  swift_beginAccess();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  if (v74)
  {
    id v6 = (id)v74;
    sub_1000C77D0();
    uint64_t v7 = sub_1000C77F0();

    swift_bridgeObjectRelease();
    if (v7 && (sub_100012854(&qword_10010BEA0), (swift_dynamicCast() & 1) != 0))
    {
      uint64_t v8 = HIBYTE(v75) & 0xF;
      if ((v75 & 0x2000000000000000) == 0) {
        uint64_t v8 = v74 & 0xFFFFFFFFFFFFLL;
      }
      if (v8)
      {
        swift_bridgeObjectRelease();
        uint64_t v9 = (objc_class *)[v0 mainBundle];
        v63._countAndFlagsBits = 0x80000001000D52E0;
        v77._object = (void *)0x80000001000D52B0;
        v77._countAndFlagsBits = 0x1000000000000023;
        v88.value._countAndFlagsBits = 0;
        v88.value._object = 0;
        v10.super.Class isa = v9;
        v99._countAndFlagsBits = 0;
        v99._object = (void *)0xE000000000000000;
        sub_1000C6320(v77, v88, v10, v99, v63);

        sub_100012854((uint64_t *)&unk_10010BD70);
        uint64_t v11 = swift_allocObject();
        *(_OWORD *)(v11 + 16) = xmmword_1000CABA0;
        *(void *)(v11 + 56) = &type metadata for String;
        *(void *)(v11 + 64) = sub_100036368();
        *(void *)(v11 + 32) = v74;
        *(void *)(v11 + 40) = v75;
        uint64_t v72 = sub_1000C7410();
        uint64_t v73 = v12;
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v72 = v3;
        uint64_t v73 = v5;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v72 = v3;
      uint64_t v73 = v5;
    }
    sub_100012854((uint64_t *)&unk_10010C5E0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1000CC3A0;
    *(unsigned char *)(inited + 32) = 7;
    uint64_t v15 = (objc_class *)[v0 mainBundle];
    v63._countAndFlagsBits = 0x80000001000D4D10;
    v78._object = (void *)0x80000001000D4CB0;
    v78._countAndFlagsBits = 0xD000000000000056;
    v89.value._countAndFlagsBits = 0;
    v89.value._object = 0;
    v16.super.Class isa = v15;
    v100._countAndFlagsBits = 0;
    v100._object = (void *)0xE000000000000000;
    uint64_t v17 = sub_1000C6320(v78, v89, v16, v100, v63);
    uint64_t v19 = v18;

    *(void *)(inited + 40) = v17;
    *(void *)(inited + 48) = v19;
    *(unsigned char *)(inited + 56) = 8;
    uint64_t v20 = (objc_class *)[v0 mainBundle];
    v79._countAndFlagsBits = 0xD00000000000006FLL;
    v64._countAndFlagsBits = 0x80000001000D4DC0;
    v79._object = (void *)0x80000001000D4D50;
    v90.value._countAndFlagsBits = 0;
    v90.value._object = 0;
    v21.super.Class isa = v20;
    v101._countAndFlagsBits = 0;
    v101._object = (void *)0xE000000000000000;
    uint64_t v22 = sub_1000C6320(v79, v90, v21, v101, v64);
    uint64_t v24 = v23;

    *(void *)(inited + 64) = v22;
    *(void *)(inited + 72) = v24;
    *(unsigned char *)(inited + 80) = 9;
    uint64_t v25 = (objc_class *)[v0 mainBundle];
    v65._countAndFlagsBits = 0x80000001000D4E60;
    v80._object = (void *)0x80000001000D4E00;
    v80._countAndFlagsBits = 0xD000000000000056;
    v91.value._countAndFlagsBits = 0;
    v91.value._object = 0;
    v26.super.Class isa = v25;
    v102._countAndFlagsBits = 0;
    v102._object = (void *)0xE000000000000000;
    uint64_t v27 = sub_1000C6320(v80, v91, v26, v102, v65);
    uint64_t v29 = v28;

    *(void *)(inited + 88) = v27;
    *(void *)(inited + 96) = v29;
    *(unsigned char *)(inited + 104) = 10;
    uint64_t v30 = (objc_class *)[v0 mainBundle];
    v81._countAndFlagsBits = 0xD000000000000055;
    v66._countAndFlagsBits = 0x80000001000D4F00;
    v81._object = (void *)0x80000001000D4EA0;
    v92.value._countAndFlagsBits = 0;
    v92.value._object = 0;
    v31.super.Class isa = v30;
    v103._countAndFlagsBits = 0;
    v103._object = (void *)0xE000000000000000;
    uint64_t v32 = sub_1000C6320(v81, v92, v31, v103, v66);
    uint64_t v34 = v33;

    *(void *)(inited + 112) = v32;
    *(void *)(inited + 120) = v34;
    *(unsigned char *)(inited + 128) = 11;
    uint64_t v35 = (objc_class *)[v0 mainBundle];
    v82._countAndFlagsBits = 0xD000000000000058;
    v67._countAndFlagsBits = 0x80000001000D4FA0;
    v82._object = (void *)0x80000001000D4F40;
    v93.value._countAndFlagsBits = 0;
    v93.value._object = 0;
    v36.super.Class isa = v35;
    v104._countAndFlagsBits = 0;
    v104._object = (void *)0xE000000000000000;
    uint64_t v37 = sub_1000C6320(v82, v93, v36, v104, v67);
    uint64_t v39 = v38;

    *(void *)(inited + 136) = v37;
    *(void *)(inited + 144) = v39;
    *(unsigned char *)(inited + 152) = 0;
    uint64_t v40 = (objc_class *)[v0 mainBundle];
    v83._countAndFlagsBits = 0xD00000000000006ALL;
    v68._countAndFlagsBits = 0x80000001000D5050;
    v83._object = (void *)0x80000001000D4FE0;
    v94.value._countAndFlagsBits = 0;
    v94.value._object = 0;
    v41.super.Class isa = v40;
    v105._countAndFlagsBits = 0;
    v105._object = (void *)0xE000000000000000;
    uint64_t v42 = sub_1000C6320(v83, v94, v41, v105, v68);
    uint64_t v44 = v43;

    *(void *)(inited + 160) = v42;
    *(void *)(inited + 168) = v44;
    *(unsigned char *)(inited + 176) = 1;
    uint64_t v45 = (objc_class *)[v0 mainBundle];
    v84._countAndFlagsBits = 0xD00000000000006ELL;
    v69._countAndFlagsBits = 0x80000001000D5100;
    v84._object = (void *)0x80000001000D5090;
    v95.value._countAndFlagsBits = 0;
    v95.value._object = 0;
    v46.super.Class isa = v45;
    v106._countAndFlagsBits = 0;
    v106._object = (void *)0xE000000000000000;
    uint64_t v47 = sub_1000C6320(v84, v95, v46, v106, v69);
    uint64_t v49 = v48;

    *(void *)(inited + 184) = v47;
    *(void *)(inited + 192) = v49;
    *(unsigned char *)(inited + 200) = 2;
    uint64_t v50 = (objc_class *)[v0 mainBundle];
    v85._countAndFlagsBits = 0xD000000000000074;
    v70._countAndFlagsBits = 0x80000001000D51B0;
    v85._object = (void *)0x80000001000D5130;
    v96.value._countAndFlagsBits = 0;
    v96.value._object = 0;
    v51.super.Class isa = v50;
    v107._countAndFlagsBits = 0;
    v107._object = (void *)0xE000000000000000;
    uint64_t v52 = sub_1000C6320(v85, v96, v51, v107, v70);
    uint64_t v54 = v53;

    *(void *)(inited + 208) = v52;
    *(void *)(inited + 216) = v54;
    *(unsigned char *)(inited + 224) = 3;
    Swift::String v55 = (objc_class *)[v0 mainBundle];
    v86._countAndFlagsBits = 0xD000000000000076;
    v71._countAndFlagsBits = 0x80000001000D5270;
    v86._object = (void *)0x80000001000D51F0;
    v97.value._countAndFlagsBits = 0;
    v97.value._object = 0;
    v56.super.Class isa = v55;
    v108._countAndFlagsBits = 0;
    v108._object = (void *)0xE000000000000000;
    uint64_t v57 = sub_1000C6320(v86, v97, v56, v108, v71);
    uint64_t v59 = v58;

    *(void *)(inited + 232) = v57;
    *(void *)(inited + 240) = v59;
    *(unsigned char *)(inited + 248) = 13;
    *(void *)(inited + 256) = v72;
    *(void *)(inited + 264) = v73;
    unint64_t v60 = sub_10004E6A4(inited);
    swift_retain();
    uint64_t v13 = sub_10003B628(v60);
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v13;
}

uint64_t sub_10002F9E8()
{
  uint64_t v0 = sub_100012854(&qword_10010B770);
  __chkstk_darwin(v0 - 8);
  NSBundle v2 = &v8[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v4 = result;
    swift_getKeyPath();
    swift_getKeyPath();
    v8[7] = 1;
    swift_retain();
    sub_1000C67F0();
    uint64_t v5 = sub_1000C7600();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v2, 1, 1, v5);
    sub_1000C75D0();
    swift_retain();
    uint64_t v6 = sub_1000C75C0();
    uint64_t v7 = (void *)swift_allocObject();
    v7[2] = v6;
    v7[3] = &protocol witness table for MainActor;
    v7[4] = v4;
    sub_1000BD118((uint64_t)v2, (uint64_t)&unk_10010BEB8, (uint64_t)v7);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_10002FB80(void *a1)
{
  uint64_t v1 = sub_1000307E4(a1);
  uint64_t v3 = v2;
  uint64_t v4 = (objc_class *)[self mainBundle];
  v9._countAndFlagsBits = 0x80000001000D57C0;
  v10._object = (void *)0x80000001000D57A0;
  v10._countAndFlagsBits = 0x1000000000000010;
  v11.value._countAndFlagsBits = 0;
  v11.value._object = 0;
  v5.super.Class isa = v4;
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  sub_1000C6320(v10, v11, v5, v12, v9);

  sub_100012854((uint64_t *)&unk_10010BD70);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1000CABA0;
  *(void *)(v6 + 56) = &type metadata for String;
  *(void *)(v6 + 64) = sub_100036368();
  *(void *)(v6 + 32) = v1;
  *(void *)(v6 + 40) = v3;
  uint64_t v7 = sub_1000C7410();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_10002FCAC(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_100012854((uint64_t *)&unk_10010B010);
    uint64_t v5 = swift_allocError();
    void *v6 = a3;
    id v7 = a3;
    a1 = v3;
    a2 = (void *)v5;
    return _swift_continuation_throwingResumeWithError(a1, a2);
  }
  if (!a2)
  {
    __break(1u);
    return _swift_continuation_throwingResumeWithError(a1, a2);
  }
  **(void **)(*(void *)(v3 + 64) + 40) = a2;
  id v8 = a2;

  return swift_continuation_throwingResume();
}

void sub_10002FD6C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_100012854(&qword_10010B770);
  __chkstk_darwin(v8 - 8);
  Swift::String v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  id v11 = v20;
  if (v20)
  {
    if ([v20 publicPermission] != (id)1) {
      goto LABEL_7;
    }
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1000C67E0();
    swift_release();
    swift_release();
    swift_release();
    id v12 = v20;
    if (!v20) {
      goto LABEL_7;
    }
    id v13 = [v20 participants];
    sub_1000132C8(0, (unint64_t *)&unk_10010B070);
    unint64_t v14 = sub_1000C7540();

    swift_bridgeObjectRetain();
    uint64_t v15 = sub_100033DBC(v14, a1, a2);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    if (v15)
    {
      if ((id)(3 - a3) == [v15 permission])
      {
      }
      else
      {
        objc_msgSend(v15, "setPermission:");
        if (a3 == 1) {
          [v15 setRole:3];
        }
        swift_getKeyPath();
        swift_getKeyPath();
        LOBYTE(v20) = 1;
        swift_retain();
        sub_1000C67F0();
        uint64_t v16 = sub_1000C7600();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v10, 1, 1, v16);
        sub_1000C75D0();
        swift_retain();
        uint64_t v17 = sub_1000C75C0();
        uint64_t v18 = (void *)swift_allocObject();
        v18[2] = v17;
        v18[3] = &protocol witness table for MainActor;
        v18[4] = v4;
        sub_1000BD118((uint64_t)v10, (uint64_t)&unk_10010BEC8, (uint64_t)v18);

        swift_release();
      }
    }
    else
    {
LABEL_7:
    }
  }
}

void sub_1000300D4(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_100012854(&qword_10010B770);
  __chkstk_darwin(v8 - 8);
  Swift::String v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  id v11 = v22;
  if (v22)
  {
    if ([v22 publicPermission] != (id)1) {
      goto LABEL_8;
    }
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1000C67E0();
    swift_release();
    swift_release();
    swift_release();
    id v12 = v22;
    if (!v22) {
      goto LABEL_8;
    }
    id v13 = [v22 participants];
    sub_1000132C8(0, (unint64_t *)&unk_10010B070);
    unint64_t v14 = sub_1000C7540();

    swift_bridgeObjectRetain();
    uint64_t v15 = sub_100033DBC(v14, a1, a2);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    if (v15)
    {
      if ([v15 role] == (id)1) {
        goto LABEL_7;
      }
      id v16 = [v15 role];
      if (((v16 != (id)sub_1000C7730()) ^ a3)) {
        goto LABEL_7;
      }
      if (a3)
      {
        if ([v15 permission] != (id)3)
        {
LABEL_7:

          return;
        }
        uint64_t v17 = sub_1000C7730();
      }
      else
      {
        uint64_t v17 = 3;
      }
      [v15 setRole:v17];
      swift_getKeyPath();
      swift_getKeyPath();
      LOBYTE(v22) = 1;
      swift_retain();
      sub_1000C67F0();
      uint64_t v18 = sub_1000C7600();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v10, 1, 1, v18);
      sub_1000C75D0();
      swift_retain();
      uint64_t v19 = sub_1000C75C0();
      id v20 = (void *)swift_allocObject();
      v20[2] = v19;
      v20[3] = &protocol witness table for MainActor;
      v20[4] = v4;
      sub_1000BD118((uint64_t)v10, (uint64_t)&unk_10010BEC0, (uint64_t)v20);

      swift_release();
    }
    else
    {
LABEL_8:
    }
  }
}

uint64_t sub_100030464(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[15] = a5;
  v5[16] = sub_1000C75D0();
  v5[17] = sub_1000C75C0();
  uint64_t v6 = (void *)swift_task_alloc();
  v5[18] = v6;
  void *v6 = v5;
  v6[1] = sub_100030514;
  return sub_100051988();
}

uint64_t sub_100030514()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  uint64_t v3 = sub_1000C7590();
  if (v0) {
    uint64_t v4 = sub_1000306D4;
  }
  else {
    uint64_t v4 = sub_100030670;
  }
  return _swift_task_switch(v4, v3, v2);
}

uint64_t sub_100030670()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000306D4()
{
  uint64_t v1 = v0[19];
  swift_release();
  v0[14] = v1;
  swift_errorRetain();
  sub_100012854((uint64_t *)&unk_10010B010);
  if (swift_dynamicCast())
  {
    swift_errorRelease();
    sub_1000364AC((uint64_t)(v0 + 8), (uint64_t)(v0 + 2));
    sub_100036648((uint64_t)(v0 + 2));
    sub_10003719C((uint64_t)(v0 + 2), (void (*)(void, void, void, void, void, void))sub_10002376C);
  }
  swift_errorRelease();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_1000307E4(void *a1)
{
  swift_beginAccess();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  if (!v17) {
    return 0;
  }
  uint64_t v2 = sub_100036510(a1);
  id v3 = [v17 currentUserParticipant];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = sub_1000C7700();
    uint64_t v7 = v6;

    if (v5 == a1[2] && v7 == a1[3]) {
      char v8 = 1;
    }
    else {
      char v8 = sub_1000C7A50();
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    char v8 = 0;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  if (v17 == 1 && (v8 & 1) == 0)
  {
    id v10 = [objc_allocWithZone((Class)CNContactFormatter) init];
    id v11 = [v10 stringFromContact:*(void *)((char *)a1+ OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing18PersonRowViewModel_contact)];
    if (v11)
    {
      id v12 = v11;
      uint64_t v13 = sub_1000C7440();
      unint64_t v15 = v14;

      uint64_t v16 = HIBYTE(v15) & 0xF;
      if ((v15 & 0x2000000000000000) == 0) {
        uint64_t v16 = v13 & 0xFFFFFFFFFFFFLL;
      }
      if (v16)
      {
        swift_bridgeObjectRelease();
        return v13;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    else
    {
    }
  }
  else
  {
  }
  return v2;
}

uint64_t sub_100030A40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[18] = a4;
  sub_1000C75D0();
  v4[19] = sub_1000C75C0();
  uint64_t v6 = sub_1000C7590();
  v4[20] = v6;
  v4[21] = v5;
  return _swift_task_switch(sub_100030AD8, v6, v5);
}

uint64_t sub_100030AD8()
{
  uint64_t v1 = v0[18];
  swift_beginAccess();
  v0[22] = *(void *)(v1 + 16);
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[23] = v2;
  void *v2 = v0;
  v2[1] = sub_100030B94;
  return sub_10004E7B4(1);
}

uint64_t sub_100030B94()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 192) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 160);
    uint64_t v4 = *(void *)(v2 + 168);
    uint64_t v5 = sub_1000373FC;
  }
  else
  {
    swift_release();
    uint64_t v3 = *(void *)(v2 + 160);
    uint64_t v4 = *(void *)(v2 + 168);
    uint64_t v5 = sub_1000373EC;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100030CB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[18] = a4;
  sub_1000C75D0();
  v4[19] = sub_1000C75C0();
  uint64_t v6 = sub_1000C7590();
  v4[20] = v6;
  v4[21] = v5;
  return _swift_task_switch(sub_100030D48, v6, v5);
}

uint64_t sub_100030D48()
{
  uint64_t v1 = v0[18];
  swift_beginAccess();
  v0[22] = *(void *)(v1 + 16);
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[23] = v2;
  void *v2 = v0;
  v2[1] = sub_100030E00;
  return sub_100051988();
}

uint64_t sub_100030E00()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 192) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 160);
    uint64_t v4 = *(void *)(v2 + 168);
    uint64_t v5 = sub_100030FCC;
  }
  else
  {
    swift_release();
    uint64_t v3 = *(void *)(v2 + 160);
    uint64_t v4 = *(void *)(v2 + 168);
    uint64_t v5 = sub_100030F1C;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100030F1C()
{
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 58) = 0;
  swift_retain();
  sub_1000C67F0();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100030FCC()
{
  uint64_t v1 = *(void *)(v0 + 192);
  swift_release();
  swift_release();
  *(void *)(v0 + 136) = v1;
  swift_errorRetain();
  sub_100012854((uint64_t *)&unk_10010B010);
  if (swift_dynamicCast())
  {
    swift_errorRelease();
    sub_1000364AC(v0 + 64, v0 + 16);
    swift_getKeyPath();
    swift_getKeyPath();
    *(unsigned char *)(v0 + 57) = 0;
    swift_retain();
    sub_1000C67F0();
    sub_100036648(v0 + 16);
    sub_10003719C(v0 + 16, (void (*)(void, void, void, void, void, void))sub_10002376C);
  }
  swift_errorRelease();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

void *sub_100031138()
{
  uint64_t v0 = sub_1000C66D0();
  uint64_t v44 = *(void (***)(char *, void))(v0 - 8);
  uint64_t v45 = v0;
  uint64_t v1 = __chkstk_darwin(v0);
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v42 - v3;
  __chkstk_darwin(v2);
  uint64_t v43 = (char *)&v42 - v5;
  uint64_t v6 = sub_100012854((uint64_t *)&unk_10010BDD0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000C6530();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
  {
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v13(v12, v8, v9);
    sub_100012854(&qword_10010BDE0);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1000CABA0;
    *(void *)(v14 + 56) = v9;
    unint64_t v15 = sub_100036448((uint64_t *)(v14 + 32));
    v13((char *)v15, v12, v9);
    return (void *)v14;
  }
  sub_10001326C((uint64_t)v8, (uint64_t *)&unk_10010BDD0);
  swift_retain();
  uint64_t v16 = (objc_class *)sub_1000392E8();
  swift_release();
  uint64_t v17 = (void (**)(char *, void))[objc_allocWithZone((Class)NSItemProvider) init];
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v18 = v47[0];
  if (v47[0])
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1000C67E0();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v42 = (objc_class *)v18;
    if (v47[0])
    {
      if ((v47[0] & 2) == 0)
      {
        unint64_t v20 = v47[0] & 4;
        if ((v47[0] & 4) != 0) {
          uint64_t v21 = 3;
        }
        else {
          uint64_t v21 = 2;
        }
        uint64_t v19 = 1;
LABEL_18:
        NSBundle v26 = v43;
        uint64_t v25 = v44;
        if ((v47[0] & 8) != 0) {
          goto LABEL_27;
        }
        goto LABEL_26;
      }
      uint64_t v19 = 3;
    }
    else
    {
      if ((v47[0] & 2) == 0)
      {
        uint64_t v19 = 0;
        unint64_t v20 = v47[0] & 4;
        if ((v47[0] & 4) != 0) {
          uint64_t v21 = 3;
        }
        else {
          uint64_t v21 = 2;
        }
        goto LABEL_18;
      }
      uint64_t v19 = 2;
    }
    NSBundle v26 = v43;
    uint64_t v25 = v44;
    unint64_t v20 = v47[0] & 4;
    if ((v47[0] & 4) != 0) {
      uint64_t v21 = 3;
    }
    else {
      uint64_t v21 = 2;
    }
    if ((v47[0] & 8) != 0) {
      goto LABEL_27;
    }
LABEL_26:
    uint64_t v21 = v20 >> 2;
LABEL_27:
    id v27 = [objc_allocWithZone((Class)CKAllowedSharingOptions) initWithAllowedParticipantPermissionOptions:v21 allowedParticipantAccessOptions:v19];
    sub_1000C66B0();
    id v28 = v27;
    uint64_t v29 = sub_1000C66C0();
    os_log_type_t v30 = sub_1000C7690();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = swift_slowAlloc();
      uint64_t v44 = v17;
      uint64_t v32 = v31;
      v47[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v32 = 136315394;
      uint64_t v33 = sub_100089C00();
      uint64_t v46 = sub_1000720D0(v33, v34, v47);
      sub_1000C7850();

      swift_bridgeObjectRelease();
      *(_WORD *)(v32 + 12) = 2080;
      uint64_t v35 = sub_100089D38();
      uint64_t v46 = sub_1000720D0(v35, v36, v47);
      sub_1000C7850();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "itemsToShareForAddPeople creating item provider options-- access: %s, permission: %s", (uint8_t *)v32, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v17 = v44;
      swift_slowDealloc();

      v25[1](v43, v45);
    }
    else
    {

      v25[1](v26, v45);
    }
    uint64_t v37 = v42;
    v38.super.super.Class isa = v42;
    v39.super.Class isa = v16;
    v40.super.Class isa = (Class)v28;
    sub_1000C76A0(v38, v39, v40);
    sub_100012854(&qword_10010BDE0);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1000CABA0;
    *(void *)(v14 + 56) = sub_1000132C8(0, &qword_10010BDE8);
    *(void *)(v14 + 32) = v17;

    return (void *)v14;
  }
  sub_1000C66B0();
  id v22 = sub_1000C66C0();
  os_log_type_t v23 = sub_1000C7670();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v24 = 0;
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "itemsToShareForAddPeople: ckShare is nil for CloudKit share", v24, 2u);
    swift_slowDealloc();
  }

  v44[1](v4, v45);
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1000319B8()
{
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing15PeopleViewModel__requesters;
  uint64_t v2 = sub_100012854(&qword_10010BB50);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing15PeopleViewModel__participants, v2);
  uint64_t v4 = v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing15PeopleViewModel__currentUser;
  uint64_t v5 = sub_100012854(&qword_10010BB58);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing15PeopleViewModel__highlightChanges;
  uint64_t v7 = sub_100012854(&qword_10010BB60);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  v8(v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing15PeopleViewModel__hideAlerts, v7);
  uint64_t v9 = v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing15PeopleViewModel__hideAlertsOptions;
  uint64_t v10 = sub_100012854(&qword_10010BB68);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
  v11(v9, v10);
  v11(v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing15PeopleViewModel__highlightChangesOptions, v10);
  uint64_t v12 = v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing15PeopleViewModel__showingAlert;
  uint64_t v13 = sub_100012854((uint64_t *)&unk_10010BB70);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  v8(v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing15PeopleViewModel__showingAlertBool, v7);
  v8(v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing15PeopleViewModel__shouldShowLoading, v7);
  v8(v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing15PeopleViewModel__shouldShowFolderShareHeader, v7);
  uint64_t v14 = v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing15PeopleViewModel__sectionTitleForAuxiliaryToggles;
  uint64_t v15 = sub_100012854(&qword_10010CEB0);
  uint64_t v16 = *(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8);
  v16(v14, v15);
  v16(v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing15PeopleViewModel__primaryToggleTitle, v15);
  v8(v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing15PeopleViewModel__primaryToggleState, v7);
  v16(v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing15PeopleViewModel__secondaryToggleTitle, v15);
  v8(v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing15PeopleViewModel__secondaryToggleState, v7);
  v8(v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing15PeopleViewModel__shouldShowAddPeople, v7);
  v8(v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing15PeopleViewModel__shouldShowOpenRootSharedFolder, v7);
  v8(v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing15PeopleViewModel__shouldShowCopyLink, v7);
  v8(v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing15PeopleViewModel__shouldShowSendLink, v7);
  v8(v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing15PeopleViewModel__shouldShowStopSharing, v7);
  v8(v0+ OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing15PeopleViewModel__shouldShowPermissionAndRemovalSectionInMenu, v7);
  uint64_t v17 = v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing15PeopleViewModel__itemThumbnail;
  uint64_t v18 = sub_100012854(&qword_10010BB80);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  v16(v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing15PeopleViewModel__itemTitle, v15);
  v8(v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing15PeopleViewModel__savingInProgress, v7);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_100031E30()
{
  sub_1000319B8();

  return swift_deallocClassInstance();
}

uint64_t sub_100031E88()
{
  return type metadata accessor for PeopleViewModel();
}

uint64_t type metadata accessor for PeopleViewModel()
{
  uint64_t result = qword_10010B980;
  if (!qword_10010B980) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100031EDC()
{
  sub_1000321A0(319, &qword_10010B990, &qword_10010B998);
  if (v0 <= 0x3F)
  {
    sub_1000321A0(319, &qword_10010B9A0, &qword_10010B9A8);
    if (v1 <= 0x3F)
    {
      sub_10001E1A4(319, (unint64_t *)&qword_10010B9B0);
      if (v2 <= 0x3F)
      {
        sub_10001E1A4(319, &qword_10010B9B8);
        if (v3 <= 0x3F)
        {
          sub_1000321A0(319, (unint64_t *)&unk_10010B9C0, &qword_10010CB70);
          if (v4 <= 0x3F)
          {
            sub_10001E1A4(319, &qword_10010B9D0);
            if (v5 <= 0x3F)
            {
              sub_1000321F0();
              if (v6 <= 0x3F) {
                swift_updateClassMetadata2();
              }
            }
          }
        }
      }
    }
  }
}

void sub_1000321A0(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  if (!*a2)
  {
    sub_100013128(a3);
    unint64_t v4 = sub_1000C6800();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1000321F0()
{
  if (!qword_10010B9D8)
  {
    sub_1000132C8(255, (unint64_t *)&unk_10010B9E0);
    unint64_t v0 = sub_1000C6800();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10010B9D8);
    }
  }
}

id sub_100032258()
{
  id result = (id)TCPContactStore();
  qword_100115358 = (uint64_t)result;
  return result;
}

uint64_t sub_100032290@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_100032310(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = v1;
  swift_retain();
  return sub_1000C67F0();
}

uint64_t sub_100032388@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_100032408()
{
  return sub_1000C67F0();
}

uint64_t sub_10003248C@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_1000324A0()
{
  return sub_1000114AC();
}

uint64_t sub_1000324B4@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_1000324C8()
{
  return sub_1000114AC();
}

uint64_t sub_1000324DC@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_10003255C()
{
  return sub_1000C67F0();
}

uint64_t sub_1000325D8@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_100032658()
{
  return sub_1000C67F0();
}

uint64_t sub_1000326D4@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_1000326E8()
{
  return sub_1000114AC();
}

uint64_t sub_1000326FC@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_100032710()
{
  return sub_1000114AC();
}

uint64_t sub_100032724(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100012854(&qword_10010BDC8);
  char v38 = a2;
  uint64_t v6 = sub_1000C79B0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36) {
      break;
    }
    id v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v37 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v36) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v37 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void **)(*(void *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v33 = v32;
    }
    sub_1000C7B10();
    sub_1000C7480();
    uint64_t result = sub_1000C7B30();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    void *v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  id v22 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_100032A34(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100012854(&qword_10010BDF8);
  char v37 = a2;
  uint64_t v6 = sub_1000C79B0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    id v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    char v29 = *(unsigned char *)(*(void *)(v5 + 48) + v20);
    uint64_t v30 = (uint64_t *)(*(void *)(v5 + 56) + 16 * v20);
    uint64_t v31 = *v30;
    uint64_t v32 = v30[1];
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_1000C7B10();
    sub_1000C7480();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1000C7B30();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    *(unsigned char *)(*(void *)(v7 + 48) + v17) = v29;
    uint64_t v18 = (void *)(*(void *)(v7 + 56) + 16 * v17);
    void *v18 = v31;
    v18[1] = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  id v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

unint64_t sub_100032D64(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_1000C78B0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1000C7B10();
        swift_bridgeObjectRetain();
        sub_1000C7480();
        Swift::Int v9 = sub_1000C7B30();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          int64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            _OWORD *v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          unint64_t v15 = (void *)(v14 + 8 * v3);
          unint64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            void *v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *unint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_100032F3C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_100072728(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1000331EC();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];

      *(void *)(v19 + 8 * v12) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_100032724(v15, a4 & 1);
  unint64_t v20 = sub_100072728(a2, a3);
  if ((v16 & 1) != (v21 & 1))
  {
LABEL_17:
    sub_1000C7A80();
    __break(1u);
    return;
  }
  unint64_t v12 = v20;
  uint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  uint64_t v22 = (uint64_t *)(v18[6] + 16 * v12);
  uint64_t *v22 = a2;
  v22[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v23 = v18[2];
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18[2] = v25;

  swift_bridgeObjectRetain();
}

uint64_t sub_1000330AC(uint64_t a1, uint64_t a2, char a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1000727A0(a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1000333A0();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = (void *)(v18[7] + 16 * v12);
      uint64_t result = swift_bridgeObjectRelease();
      void *v19 = a1;
      v19[1] = a2;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(unsigned char *)(v18[6] + v12) = a3;
    char v21 = (void *)(v18[7] + 16 * v12);
    void *v21 = a1;
    v21[1] = a2;
    uint64_t v22 = v18[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (!v23)
    {
      v18[2] = v24;
      return result;
    }
    goto LABEL_14;
  }
  sub_100032A34(result, a4 & 1);
  uint64_t result = sub_1000727A0(a3);
  if ((v16 & 1) == (v20 & 1))
  {
    unint64_t v12 = result;
    uint64_t v18 = (void *)*v5;
    if (v16) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_1000C7A80();
  __break(1u);
  return result;
}

id sub_1000331EC()
{
  uint64_t v1 = v0;
  sub_100012854(&qword_10010BDC8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1000C79A0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    char v20 = *(void **)(*(void *)(v2 + 56) + v19);
    char v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = v20;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1000333A0()
{
  uint64_t v1 = v0;
  sub_100012854(&qword_10010BDF8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1000C79A0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = (uint64_t *)(*(void *)(v2 + 56) + 16 * v15);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    uint64_t v19 = (void *)(*(void *)(v4 + 56) + 16 * v15);
    void *v19 = v18;
    v19[1] = v17;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_10003354C(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_10;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  while (1)
  {
    if (v2 <= 0)
    {
      uint64_t v3 = _swiftEmptyArrayStorage;
    }
    else
    {
      sub_100012854(&qword_10010BD50);
      uint64_t v3 = (void *)swift_allocObject();
      int64_t v4 = j__malloc_size(v3);
      uint64_t v5 = v4 - 32;
      if (v4 < 32) {
        uint64_t v5 = v4 - 25;
      }
      _OWORD v3[2] = v2;
      v3[3] = (2 * (v5 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_100033B74((unint64_t)(v3 + 4), v2, v1);
    unint64_t v1 = v6;
    swift_bridgeObjectRelease();
    if (v1 == v2) {
      break;
    }
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1000C7990();
    swift_bridgeObjectRelease();
    if (!v2) {
      return _swiftEmptyArrayStorage;
    }
  }
  return v3;
}

uint64_t sub_100033644(void **__src, void **a2, unint64_t a3, void **__dst)
{
  int64_t v4 = __dst;
  unint64_t v6 = a2;
  unint64_t v7 = __src;
  int64_t v8 = (char *)a2 - (char *)__src;
  int64_t v9 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v9 = (char *)a2 - (char *)__src;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 3;
  uint64_t v44 = __src;
  uint64_t v43 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[v13] <= __dst) {
        memmove(__dst, a2, 8 * v13);
      }
      int64_t v24 = &v4[v13];
      uint64_t v42 = v24;
      uint64_t v44 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        uint64_t v25 = (void **)(a3 - 8);
        unint64_t v26 = v6;
        char v37 = v4;
        char v38 = v7;
        while (1)
        {
          unint64_t v27 = (unint64_t)v24;
          uint64_t v28 = v24 - 1;
          NSBundle v41 = *(v24 - 1);
          char v29 = *--v26;
          CKAllowedSharingOptions v40 = v29;
          uint64_t v30 = v41;
          id v31 = v29;
          char v32 = sub_10002AC40(&v41, &v40);
          if (v39) {
            break;
          }
          char v33 = v32;
          uint64_t v39 = 0;
          uint64_t v34 = v25 + 1;

          if (v33)
          {
            if (v34 != v6 || v25 >= v6) {
              *uint64_t v25 = *v26;
            }
            uint64_t v44 = v26;
            int64_t v35 = v37;
            int64_t v24 = (void **)v27;
            if (v26 <= v38) {
              goto LABEL_48;
            }
          }
          else
          {
            uint64_t v42 = v28;
            if ((unint64_t)v34 < v27 || (unint64_t)v25 >= v27 || v34 != (void **)v27) {
              *uint64_t v25 = *v28;
            }
            unint64_t v26 = v6;
            int64_t v24 = v28;
            int64_t v35 = v37;
            if (v6 <= v38) {
              goto LABEL_48;
            }
          }
          --v25;
          unint64_t v6 = v26;
          if (v24 <= v35) {
            goto LABEL_48;
          }
        }
      }
      goto LABEL_48;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[v10] <= __dst) {
      memmove(__dst, __src, 8 * v10);
    }
    unint64_t v14 = &v4[v10];
    uint64_t v42 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      while (1)
      {
        unint64_t v15 = v7;
        NSBundle v41 = *v6;
        uint64_t v16 = v4;
        CKAllowedSharingOptions v40 = *v4;
        uint64_t v17 = v40;
        uint64_t v18 = v41;
        id v19 = v17;
        char v20 = sub_10002AC40(&v41, &v40);
        if (v39) {
          break;
        }
        char v21 = v20;

        if (v21)
        {
          int64_t v22 = v6 + 1;
          unint64_t v23 = v15;
          if (v15 < v6 || v15 >= v22 || v15 != v6) {
            void *v15 = *v6;
          }
          int64_t v4 = v16;
        }
        else
        {
          unint64_t v23 = v15;
          if (v15 != v16) {
            void *v15 = *v16;
          }
          int64_t v4 = v16 + 1;
          uint64_t v43 = v16 + 1;
          int64_t v22 = v6;
        }
        uint64_t v39 = 0;
        unint64_t v7 = v23 + 1;
        uint64_t v44 = v7;
        if (v4 < v14)
        {
          unint64_t v6 = v22;
          if ((unint64_t)v22 < a3) {
            continue;
          }
        }
        goto LABEL_48;
      }
    }
LABEL_48:
    sub_100033AA4((void **)&v44, (const void **)&v43, &v42);
    swift_release();
    return 1;
  }
  swift_release();
  uint64_t result = sub_1000C79D0();
  __break(1u);
  return result;
}

char *sub_1000339A8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100012854((uint64_t *)&unk_10010BD90);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_100033AA4(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 7;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -8)
  {
    uint64_t result = (char *)sub_1000C79D0();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
    {
      return (char *)memmove(result, v3, 8 * v7);
    }
  }
  return result;
}

char *sub_100033B60(uint64_t a1)
{
  return sub_1000339A8(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_100033B74(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1000C7990();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1000C7990();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_10001E454((unint64_t *)&unk_10010BD60, &qword_10010BD58);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_100012854(&qword_10010BD58);
          uint64_t v12 = sub_10001EA1C(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1000132C8(0, (unint64_t *)&unk_10010B070);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1000C79D0();
  __break(1u);
  return result;
}

uint64_t sub_100033DA8(uint64_t a1)
{
  return specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(a1 + 16), 0, a1);
}

void *sub_100033DBC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; uint64_t v6 = sub_1000C7990())
  {
    uint64_t v7 = 4;
    while (1)
    {
      id v8 = (a1 & 0xC000000000000001) != 0 ? (id)sub_1000C78F0() : *(id *)(a1 + 8 * v7);
      uint64_t v9 = v8;
      uint64_t v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1)) {
        break;
      }
      if (sub_1000C7700() == a2 && v11 == a3)
      {
        swift_bridgeObjectRelease();
LABEL_14:
        swift_bridgeObjectRelease();
        return v9;
      }
      char v12 = sub_1000C7A50();
      swift_bridgeObjectRelease();
      if (v12) {
        goto LABEL_14;
      }

      ++v7;
      if (v10 == v6) {
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
LABEL_17:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_100033F78(unsigned __int8 *a1)
{
  return sub_1000282E4(a1, v1, (SEL *)&selRef__cloudSharingControllerDidModifyPrimarySwitch_, "Trying to update primary switch without an extension controller");
}

uint64_t sub_100033FA4(unsigned __int8 *a1)
{
  return sub_1000282E4(a1, v1, (SEL *)&selRef__cloudSharingControllerDidModifySecondarySwitch_, "Trying to update secondary switch without an extension controller");
}

unint64_t sub_100033FD0()
{
  unint64_t result = qword_10010BC78;
  if (!qword_10010BC78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010BC78);
  }
  return result;
}

uint64_t sub_100034024()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10003405C(void **a1)
{
}

uint64_t sub_100034064(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000132C8(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000340A8(void *a1)
{
  return sub_10002A5F8(a1);
}

uint64_t sub_1000340B0()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000340E8(void *a1)
{
  return (*(uint64_t (**)(void, void, void))(v1 + 16))(*a1, a1[1], a1[2]);
}

unint64_t sub_10003411C()
{
  unint64_t result = qword_10010BCF0;
  if (!qword_10010BCF0)
  {
    sub_100013128((uint64_t *)&unk_10010B5F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010BCF0);
  }
  return result;
}

unint64_t sub_100034188()
{
  unint64_t result = qword_10010BD10;
  if (!qword_10010BD10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010BD10);
  }
  return result;
}

uint64_t sub_1000341DC()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_100034214(unsigned __int8 a1, uint64_t a2, int a3, void *a4)
{
}

uint64_t sub_10003421C(unsigned __int8 *a1)
{
  return (*(uint64_t (**)(void, void, void, void))(v1 + 16))(*a1, a1[1], a1[2], *((void *)a1 + 1));
}

uint64_t sub_100034254()
{
  return sub_10002ABA8();
}

uint64_t sub_10003425C(unsigned __int8 *a1)
{
  return (*(uint64_t (**)(void, void))(v1 + 16))(*a1, a1[1]);
}

uint64_t sub_100034290@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_1000342B8()
{
  return sub_1000114AC();
}

uint64_t sub_1000342E0@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_100034308()
{
  return sub_1000114AC();
}

uint64_t sub_100034330@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_100034358()
{
  return sub_1000114AC();
}

uint64_t sub_100034380@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_1000343A8()
{
  return sub_1000114AC();
}

uint64_t sub_1000343E0(void *a1)
{
  uint64_t v2 = sub_1000C66D0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  id v8 = (char *)&v33 - v7;
  id v9 = [a1 userIdentity];
  id v10 = [v9 lookupInfo];
  if (!v10)
  {

    return 0;
  }
  uint64_t v11 = v10;
  uint64_t v36 = v3;
  id v12 = [v10 emailAddress];
  if (v12)
  {
    uint64_t v13 = v12;
    uint64_t v14 = sub_1000C7440();
    unint64_t v16 = v15;
  }
  else
  {
    uint64_t v14 = 0;
    unint64_t v16 = 0;
  }
  id v17 = [v11 phoneNumber];
  if (v17)
  {
    uint64_t v18 = v17;
    uint64_t v19 = sub_1000C7440();
    unint64_t v21 = v20;

    if (!v16) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v19 = 0;
    unint64_t v21 = 0;
    if (!v16)
    {
LABEL_8:
      if (!v21) {
        goto LABEL_24;
      }
      goto LABEL_17;
    }
  }
  uint64_t v22 = HIBYTE(v16) & 0xF;
  if ((v16 & 0x2000000000000000) == 0) {
    uint64_t v22 = v14 & 0xFFFFFFFFFFFFLL;
  }
  if (v22)
  {
    swift_bridgeObjectRelease();
    sub_1000C66B0();
    swift_bridgeObjectRetain_n();
    unint64_t v23 = sub_1000C66C0();
    os_log_type_t v24 = sub_1000C7690();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v35 = v2;
      unint64_t v26 = (uint8_t *)v25;
      uint64_t v38 = swift_slowAlloc();
      *(_DWORD *)unint64_t v26 = 136315138;
      uint64_t v34 = v26 + 4;
      swift_bridgeObjectRetain();
      uint64_t v37 = sub_1000720D0(v14, v16, &v38);
      sub_1000C7850();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "handleForParticipant: participant email: %s", v26, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v36 + 8))(v8, v35);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v8, v2);
    }
    return v14;
  }
  swift_bridgeObjectRelease();
  if (!v21)
  {
LABEL_24:

    return 0;
  }
LABEL_17:
  uint64_t v27 = HIBYTE(v21) & 0xF;
  if ((v21 & 0x2000000000000000) == 0) {
    uint64_t v27 = v19 & 0xFFFFFFFFFFFFLL;
  }
  if (!v27)
  {
    swift_bridgeObjectRelease();
    goto LABEL_24;
  }
  sub_1000C66B0();
  swift_bridgeObjectRetain_n();
  uint64_t v28 = sub_1000C66C0();
  os_log_type_t v29 = sub_1000C7690();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    uint64_t v35 = v2;
    uint64_t v38 = v31;
    *(_DWORD *)uint64_t v30 = 136315138;
    uint64_t v34 = v30 + 4;
    swift_bridgeObjectRetain();
    uint64_t v37 = sub_1000720D0(v19, v21, &v38);
    sub_1000C7850();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "handleForParticipant: participant phone number: %s", v30, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v36 + 8))(v6, v35);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v6, v2);
  }
  return v19;
}

void *sub_1000348C8(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = sub_1000C7990())
  {
    uint64_t v3 = _swiftEmptyArrayStorage;
    uint64_t v4 = 4;
    uint64_t v15 = v2;
    while (1)
    {
      id v6 = (a1 & 0xC000000000000001) != 0 ? (id)sub_1000C78F0() : *(id *)(a1 + 8 * v4);
      uint64_t v7 = v6;
      uint64_t v8 = v4 - 3;
      if (__OFADD__(v4 - 4, 1)) {
        break;
      }
      uint64_t v9 = sub_1000343E0(v6);
      uint64_t v11 = v10;

      if (v11)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v3 = sub_1000B70D8(0, v3[2] + 1, 1, v3);
        }
        unint64_t v13 = v3[2];
        unint64_t v12 = v3[3];
        if (v13 >= v12 >> 1) {
          uint64_t v3 = sub_1000B70D8((void *)(v12 > 1), v13 + 1, 1, v3);
        }
        _OWORD v3[2] = v13 + 1;
        uint64_t v5 = &v3[2 * v13];
        v5[4] = v9;
        v5[5] = v11;
        uint64_t v2 = v15;
      }
      ++v4;
      if (v8 == v2) {
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
  uint64_t v3 = _swiftEmptyArrayStorage;
LABEL_18:
  swift_bridgeObjectRelease();
  return v3;
}

id sub_100034A3C(void *a1, int a2)
{
  uint64_t v4 = sub_1000C6400();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v96 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100012854(&qword_10010B508);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  Swift::String v104 = (char *)&v96 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  Swift::String v103 = (char *)&v96 - v12;
  __chkstk_darwin(v11);
  uint64_t v108 = (uint64_t)&v96 - v13;
  uint64_t v100 = sub_1000C66D0();
  uint64_t v14 = *(void *)(v100 - 8);
  __chkstk_darwin(v100);
  unint64_t v16 = (char *)&v96 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v17 = [a1 userIdentity];
  id v18 = [v17 lookupInfo];
  uint64_t v19 = v18;
  uint64_t v101 = v5;
  id v102 = v17;
  int v106 = a2;
  uint64_t v105 = v4;
  Swift::String_optional v96 = v7;
  if (v18)
  {
    id v20 = [v18 emailAddress];
    if (v20)
    {
      unint64_t v21 = v20;
      uint64_t v107 = sub_1000C7440();
      unint64_t v23 = v22;
    }
    else
    {
      uint64_t v107 = 0;
      unint64_t v23 = 0;
    }
    id v24 = objc_msgSend(v19, "phoneNumber", v96);
    if (v24)
    {
      uint64_t v25 = v24;
      uint64_t v97 = sub_1000C7440();
      uint64_t v98 = v26;
    }
    else
    {
      uint64_t v97 = 0;
      uint64_t v98 = 0;
    }
  }
  else
  {
    uint64_t v97 = 0;
    uint64_t v98 = 0;
    uint64_t v107 = 0;
    unint64_t v23 = 0;
  }
  sub_1000C66B0();
  swift_bridgeObjectRetain_n();
  uint64_t v27 = sub_1000C66C0();
  os_log_type_t v28 = sub_1000C7690();
  BOOL v29 = os_log_type_enabled(v27, v28);
  id v99 = v19;
  if (v29)
  {
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    uint64_t v110 = v23;
    uint64_t v111 = v31;
    *(_DWORD *)uint64_t v30 = 136315138;
    uint64_t v109 = v107;
    swift_bridgeObjectRetain();
    sub_100012854(&qword_10010CBB0);
    uint64_t v32 = sub_1000C7450();
    uint64_t v109 = sub_1000720D0(v32, v33, &v111);
    sub_1000C7850();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "createContactFromParticipant: Creating contact for participant email: %s", v30, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v100);
  id v34 = [objc_allocWithZone((Class)CNMutableContact) init];
  uint64_t v35 = v98;
  if (v23)
  {
    sub_1000C7440();
    swift_bridgeObjectRetain();
    NSString v36 = sub_1000C7400();
    swift_bridgeObjectRelease();
    id v37 = objc_allocWithZone((Class)CNLabeledValue);
    NSString v38 = sub_1000C7400();
    swift_bridgeObjectRelease();
    id v39 = [v37 initWithLabel:v38 value:v36];

    sub_100012854(&qword_10010BD50);
    uint64_t v40 = swift_allocObject();
    *(_OWORD *)(v40 + 16) = xmmword_1000CC370;
    *(void *)(v40 + 32) = v39;
    uint64_t v109 = v40;
    sub_1000C7550();
    id v41 = v39;
    sub_100012854((uint64_t *)&unk_10010BD80);
    Class isa = sub_1000C7530().super.isa;
    swift_bridgeObjectRelease();
    [v34 setEmailAddresses:isa];
  }
  if (v35)
  {
    id v43 = objc_allocWithZone((Class)CNPhoneNumber);
    NSString v44 = sub_1000C7400();
    swift_bridgeObjectRelease();
    id v45 = [v43 initWithStringValue:v44];

    sub_1000C7440();
    id v46 = objc_allocWithZone((Class)CNLabeledValue);
    id v47 = v45;
    NSString v48 = sub_1000C7400();
    swift_bridgeObjectRelease();
    id v49 = [v46 initWithLabel:v48 value:v47];

    sub_100012854(&qword_10010BD50);
    uint64_t v50 = swift_allocObject();
    *(_OWORD *)(v50 + 16) = xmmword_1000CC370;
    *(void *)(v50 + 32) = v49;
    uint64_t v109 = v50;
    sub_1000C7550();
    id v51 = v49;
    sub_100012854((uint64_t *)&unk_10010BD80);
    Class v52 = sub_1000C7530().super.isa;
    swift_bridgeObjectRelease();
    [v34 setPhoneNumbers:v52];
  }
  id v53 = v102;
  id v54 = objc_msgSend(v102, "nameComponents", v96, v97);
  if (v54)
  {
    Swift::String v55 = v54;
    NSBundle v56 = v103;
    sub_1000C63E0();

    uint64_t v57 = 0;
    uint64_t v58 = v23;
    char v59 = v106;
    uint64_t v60 = (uint64_t)v104;
    uint64_t v61 = v105;
  }
  else
  {
    uint64_t v57 = 1;
    uint64_t v58 = v23;
    char v59 = v106;
    uint64_t v60 = (uint64_t)v104;
    uint64_t v61 = v105;
    NSBundle v56 = v103;
  }
  uint64_t v62 = v101;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v101 + 56))(v56, v57, 1, v61);
  uint64_t v63 = (uint64_t)v56;
  uint64_t v64 = v108;
  sub_100012898(v63, v108, &qword_10010B508);
  sub_10001A740(v64, v60, &qword_10010B508);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48))(v60, 1, v61) == 1)
  {
    sub_10001326C(v60, &qword_10010B508);
    if ((v59 & 1) == 0) {
      goto LABEL_32;
    }
  }
  else
  {
    Swift::String v65 = *(void (**)(char *, uint64_t, uint64_t))(v62 + 32);
    Swift::String v104 = v58;
    Swift::String v66 = v96;
    v65(v96, v60, v61);
    sub_1000C63B0();
    NSString v67 = sub_1000C7400();
    swift_bridgeObjectRelease();
    [v34 setNamePrefix:v67];

    sub_1000C6380();
    NSString v68 = sub_1000C7400();
    swift_bridgeObjectRelease();
    [v34 setGivenName:v68];

    sub_1000C63A0();
    NSString v69 = sub_1000C7400();
    swift_bridgeObjectRelease();
    [v34 setMiddleName:v69];

    sub_1000C6390();
    NSString v70 = sub_1000C7400();
    swift_bridgeObjectRelease();
    [v34 setFamilyName:v70];

    sub_1000C63C0();
    NSString v71 = sub_1000C7400();
    swift_bridgeObjectRelease();
    [v34 setNameSuffix:v71];

    sub_1000C63F0();
    NSString v72 = sub_1000C7400();
    swift_bridgeObjectRelease();
    [v34 setNickname:v72];

    uint64_t v73 = v66;
    uint64_t v58 = v104;
    (*(void (**)(char *, uint64_t))(v62 + 8))(v73, v61);
    if ((v59 & 1) == 0)
    {
LABEL_32:
      sub_10001326C(v108, &qword_10010B508);
      swift_bridgeObjectRelease();
LABEL_33:

      return v34;
    }
  }
  id v74 = [v34 givenName];
  uint64_t v75 = sub_1000C7440();
  unint64_t v77 = v76;

  swift_bridgeObjectRelease();
  uint64_t v78 = HIBYTE(v77) & 0xF;
  if ((v77 & 0x2000000000000000) == 0) {
    uint64_t v78 = v75 & 0xFFFFFFFFFFFFLL;
  }
  if (v78) {
    goto LABEL_32;
  }
  id v79 = [v34 middleName];
  uint64_t v80 = sub_1000C7440();
  unint64_t v82 = v81;

  swift_bridgeObjectRelease();
  uint64_t v83 = HIBYTE(v82) & 0xF;
  if ((v82 & 0x2000000000000000) == 0) {
    uint64_t v83 = v80 & 0xFFFFFFFFFFFFLL;
  }
  if (v83) {
    goto LABEL_32;
  }
  id v84 = [v34 familyName];
  uint64_t v85 = sub_1000C7440();
  unint64_t v87 = v86;

  swift_bridgeObjectRelease();
  uint64_t v88 = HIBYTE(v87) & 0xF;
  if ((v87 & 0x2000000000000000) == 0) {
    uint64_t v88 = v85 & 0xFFFFFFFFFFFFLL;
  }
  if (v88) {
    goto LABEL_32;
  }
  if (!v58)
  {
    sub_10001326C(v108, &qword_10010B508);
    goto LABEL_33;
  }
  NSString v90 = sub_1000C7400();
  id v91 = [v90 rangeOfComposedCharacterSequenceAtIndex:0];
  uint64_t v93 = v92;

  NSString v94 = sub_1000C7400();
  swift_bridgeObjectRelease();
  NSString v95 = objc_msgSend(v94, "substringWithRange:", v91, v93);

  if (!v95)
  {
    sub_1000C7440();
    NSString v95 = sub_1000C7400();
    swift_bridgeObjectRelease();
  }
  [v34 setGivenName:v95];

  sub_10001326C(v108, &qword_10010B508);
  return v34;
}

void sub_100035524(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v5 = a3;
    uint64_t v6 = a1;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 8 * a3 - 8;
LABEL_4:
    uint64_t v9 = *(void **)(v7 + 8 * v5);
    uint64_t v17 = v8;
    while (1)
    {
      uint64_t v19 = v9;
      id v18 = *(void **)v8;
      uint64_t v10 = v18;
      id v11 = v9;
      id v12 = v10;
      char v13 = sub_10002AC40(&v19, &v18);

      if (v4) {
        break;
      }
      if (v13)
      {
        if (!v7)
        {
          __break(1u);
          return;
        }
        uint64_t v14 = *(void **)v8;
        uint64_t v9 = *(void **)(v8 + 8);
        *(void *)uint64_t v8 = v9;
        *(void *)(v8 + 8) = v14;
        v8 -= 8;
        if (v5 != ++v6) {
          continue;
        }
      }
      ++v5;
      uint64_t v8 = v17 + 8;
      uint64_t v6 = a1;
      if (v5 != a2) {
        goto LABEL_4;
      }
      return;
    }
  }
}

uint64_t sub_100035620(uint64_t *a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = a1[1];
  swift_retain_n();
  Swift::Int v5 = sub_1000C7A10(v4);
  if (v5 >= v4)
  {
    if (v4 < 0) {
      goto LABEL_141;
    }
    if (v4)
    {
      swift_retain();
      sub_100035524(0, v4, 1, a1);
    }
    return swift_release_n();
  }
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 < -1) {
    goto LABEL_150;
  }
  Swift::Int v113 = v5;
  uint64_t v111 = a1;
  if (v4 < 2)
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
    uint64_t v130 = (uint64_t)_swiftEmptyArrayStorage;
    __dst = (void **)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v4 != 1)
    {
      unint64_t v37 = _swiftEmptyArrayStorage[2];
      goto LABEL_105;
    }
  }
  else
  {
    uint64_t v7 = v6 >> 1;
    sub_1000132C8(0, (unint64_t *)&unk_10010B070);
    uint64_t v8 = sub_1000C7570();
    *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) = v7;
    __dst = (void **)((v8 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v130 = v8;
  }
  Swift::Int v11 = 0;
  uint64_t v12 = *a1;
  uint64_t v112 = *a1 + 16;
  uint64_t v110 = *a1 - 8;
  uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v116 = v4;
  uint64_t v118 = *a1;
  while (1)
  {
    Swift::Int v13 = v11;
    Swift::Int v14 = v11 + 1;
    if (v11 + 1 < v4)
    {
      uint64_t v15 = *(void **)(v12 + 8 * v14);
      uint64_t v128 = *(void **)(v12 + 8 * v11);
      unint64_t v16 = v128;
      v129 = v15;
      id v17 = v15;
      id v18 = v16;
      int v19 = sub_10002AC40(&v129, &v128);
      if (v2)
      {
        swift_bridgeObjectRelease();

LABEL_119:
        *(void *)((v130 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
        sub_1000C7550();
        swift_release_n();
        return swift_bridgeObjectRelease();
      }
      int v20 = v19;

      Swift::Int v21 = v13;
      Swift::Int v22 = v13 + 2;
      Swift::Int v120 = v21;
      if (v22 < v4)
      {
        __src = v10;
        unint64_t v23 = (void **)(v112 + 8 * v21);
        while (1)
        {
          id v24 = *v23;
          uint64_t v128 = *(v23 - 1);
          uint64_t v25 = v128;
          v129 = v24;
          id v26 = v24;
          id v27 = v25;
          int v28 = sub_10002AC40(&v129, &v128);

          if ((v20 ^ v28)) {
            break;
          }
          ++v23;
          if (v4 == ++v22)
          {
            Swift::Int v22 = v4;
            break;
          }
        }
        uint64_t v10 = __src;
        uint64_t v12 = v118;
      }
      Swift::Int v14 = v22;
      if (v20)
      {
        Swift::Int v13 = v120;
        if (v14 < v120) {
          goto LABEL_145;
        }
        if (v120 < v14)
        {
          BOOL v29 = (uint64_t *)(v110 + 8 * v14);
          Swift::Int v30 = v14;
          Swift::Int v31 = v120;
          uint64_t v32 = (uint64_t *)(v12 + 8 * v120);
          do
          {
            if (v31 != --v30)
            {
              if (!v12) {
                goto LABEL_148;
              }
              uint64_t v33 = *v32;
              *uint64_t v32 = *v29;
              uint64_t *v29 = v33;
            }
            ++v31;
            --v29;
            ++v32;
          }
          while (v31 < v30);
        }
      }
      else
      {
        Swift::Int v13 = v120;
      }
    }
    if (v14 >= v4) {
      goto LABEL_41;
    }
    if (__OFSUB__(v14, v13)) {
      goto LABEL_142;
    }
    if (v14 - v13 >= v113)
    {
LABEL_41:
      if (v14 < v13) {
        goto LABEL_140;
      }
      goto LABEL_42;
    }
    if (__OFADD__(v13, v113)) {
      goto LABEL_143;
    }
    Swift::Int v34 = v13 + v113 >= v4 ? v4 : v13 + v113;
    if (v34 < v13) {
      break;
    }
    if (v14 == v34) {
      goto LABEL_41;
    }
    Swift::Int v122 = v13;
    __srcb = v10;
    unint64_t v87 = v2;
    uint64_t v88 = v110 + 8 * v14;
    Swift::Int v115 = v34;
    do
    {
      Swift::String_optional v89 = *(void **)(v12 + 8 * v14);
      Swift::Int v90 = v13;
      uint64_t v117 = v88;
      while (1)
      {
        Swift::Int v91 = v14;
        uint64_t v128 = *(void **)v88;
        uint64_t v92 = v128;
        v129 = v89;
        id v93 = v89;
        id v94 = v92;
        char v95 = sub_10002AC40(&v129, &v128);
        if (v87)
        {
          swift_bridgeObjectRelease();

          goto LABEL_119;
        }
        char v96 = v95;

        if ((v96 & 1) == 0) {
          break;
        }
        if (!v12) {
          goto LABEL_147;
        }
        Swift::Int v14 = v91;
        uint64_t v97 = *(void **)v88;
        Swift::String_optional v89 = *(void **)(v88 + 8);
        *(void *)uint64_t v88 = v89;
        *(void *)(v88 + 8) = v97;
        v88 -= 8;
        if (v91 == ++v90) {
          goto LABEL_99;
        }
      }
      Swift::Int v14 = v91;
LABEL_99:
      ++v14;
      uint64_t v88 = v117 + 8;
      Swift::Int v13 = v122;
    }
    while (v14 != v115);
    Swift::Int v14 = v115;
    uint64_t v2 = 0;
    uint64_t v10 = __srcb;
    Swift::Int v4 = v116;
    if (v115 < v122) {
      goto LABEL_140;
    }
LABEL_42:
    Swift::Int v114 = v14;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v10 = sub_1000339A8(0, *((void *)v10 + 2) + 1, 1, v10);
    }
    unint64_t v36 = *((void *)v10 + 2);
    unint64_t v35 = *((void *)v10 + 3);
    unint64_t v37 = v36 + 1;
    __srca = v2;
    if (v36 >= v35 >> 1) {
      uint64_t v10 = sub_1000339A8((char *)(v35 > 1), v36 + 1, 1, v10);
    }
    *((void *)v10 + 2) = v37;
    NSString v38 = v10 + 32;
    id v39 = &v10[16 * v36 + 32];
    *(void *)id v39 = v13;
    *((void *)v39 + 1) = v114;
    if (v36)
    {
LABEL_47:
      unint64_t v40 = v37 - 1;
      if (v37 >= 4)
      {
        id v45 = &v38[16 * v37];
        uint64_t v46 = *((void *)v45 - 8);
        uint64_t v47 = *((void *)v45 - 7);
        BOOL v51 = __OFSUB__(v47, v46);
        uint64_t v48 = v47 - v46;
        if (v51) {
          goto LABEL_125;
        }
        uint64_t v50 = *((void *)v45 - 6);
        uint64_t v49 = *((void *)v45 - 5);
        BOOL v51 = __OFSUB__(v49, v50);
        uint64_t v43 = v49 - v50;
        char v44 = v51;
        if (v51) {
          goto LABEL_126;
        }
        unint64_t v52 = v37 - 2;
        id v53 = &v38[16 * v37 - 32];
        uint64_t v55 = *(void *)v53;
        uint64_t v54 = *((void *)v53 + 1);
        BOOL v51 = __OFSUB__(v54, v55);
        uint64_t v56 = v54 - v55;
        if (v51) {
          goto LABEL_128;
        }
        BOOL v51 = __OFADD__(v43, v56);
        uint64_t v57 = v43 + v56;
        if (v51) {
          goto LABEL_131;
        }
        if (v57 >= v48)
        {
          uint64_t v75 = &v38[16 * v40];
          uint64_t v77 = *(void *)v75;
          uint64_t v76 = *((void *)v75 + 1);
          BOOL v51 = __OFSUB__(v76, v77);
          uint64_t v78 = v76 - v77;
          if (v51) {
            goto LABEL_135;
          }
          BOOL v68 = v43 < v78;
        }
        else
        {
LABEL_60:
          if (v44) {
            goto LABEL_127;
          }
          unint64_t v52 = v37 - 2;
          uint64_t v58 = &v38[16 * v37 - 32];
          uint64_t v60 = *(void *)v58;
          uint64_t v59 = *((void *)v58 + 1);
          BOOL v61 = __OFSUB__(v59, v60);
          uint64_t v62 = v59 - v60;
          char v63 = v61;
          if (v61) {
            goto LABEL_130;
          }
          uint64_t v64 = &v38[16 * v40];
          uint64_t v66 = *(void *)v64;
          uint64_t v65 = *((void *)v64 + 1);
          BOOL v51 = __OFSUB__(v65, v66);
          uint64_t v67 = v65 - v66;
          if (v51) {
            goto LABEL_133;
          }
          if (__OFADD__(v62, v67)) {
            goto LABEL_134;
          }
          if (v62 + v67 < v43) {
            goto LABEL_72;
          }
          BOOL v68 = v43 < v67;
        }
        if (v68) {
          unint64_t v40 = v52;
        }
      }
      else
      {
        if (v37 == 3)
        {
          uint64_t v42 = *((void *)v10 + 4);
          uint64_t v41 = *((void *)v10 + 5);
          BOOL v51 = __OFSUB__(v41, v42);
          uint64_t v43 = v41 - v42;
          char v44 = v51;
          goto LABEL_60;
        }
        uint64_t v69 = *((void *)v10 + 4);
        uint64_t v70 = *((void *)v10 + 5);
        BOOL v51 = __OFSUB__(v70, v69);
        uint64_t v62 = v70 - v69;
        char v63 = v51;
LABEL_72:
        if (v63) {
          goto LABEL_129;
        }
        NSString v71 = &v38[16 * v40];
        uint64_t v73 = *(void *)v71;
        uint64_t v72 = *((void *)v71 + 1);
        BOOL v51 = __OFSUB__(v72, v73);
        uint64_t v74 = v72 - v73;
        if (v51) {
          goto LABEL_132;
        }
        if (v74 < v62) {
          goto LABEL_89;
        }
      }
      unint64_t v79 = v40 - 1;
      if (v40 - 1 >= v37)
      {
        __break(1u);
LABEL_122:
        __break(1u);
LABEL_123:
        __break(1u);
LABEL_124:
        __break(1u);
LABEL_125:
        __break(1u);
LABEL_126:
        __break(1u);
LABEL_127:
        __break(1u);
LABEL_128:
        __break(1u);
LABEL_129:
        __break(1u);
LABEL_130:
        __break(1u);
LABEL_131:
        __break(1u);
LABEL_132:
        __break(1u);
LABEL_133:
        __break(1u);
LABEL_134:
        __break(1u);
LABEL_135:
        __break(1u);
LABEL_136:
        __break(1u);
LABEL_137:
        __break(1u);
LABEL_138:
        __break(1u);
LABEL_139:
        __break(1u);
LABEL_140:
        __break(1u);
LABEL_141:
        __break(1u);
LABEL_142:
        __break(1u);
LABEL_143:
        __break(1u);
        break;
      }
      if (!v12) {
        goto LABEL_146;
      }
      uint64_t v80 = &v38[16 * v79];
      uint64_t v81 = *(void *)v80;
      unint64_t v82 = v40;
      uint64_t v83 = &v38[16 * v40];
      uint64_t v84 = *((void *)v83 + 1);
      uint64_t v85 = (void **)(v12 + 8 * *(void *)v80);
      uint64_t v121 = (void **)(v12 + 8 * *(void *)v83);
      swift_retain();
      sub_100033644(v85, v121, v12 + 8 * v84, __dst);
      if (__srca) {
        goto LABEL_118;
      }
      if (v84 < v81) {
        goto LABEL_122;
      }
      if (v82 > *((void *)v10 + 2)) {
        goto LABEL_123;
      }
      *(void *)uint64_t v80 = v81;
      NSString v38 = v10 + 32;
      *(void *)&v10[16 * v79 + 40] = v84;
      unint64_t v86 = *((void *)v10 + 2);
      if (v82 >= v86) {
        goto LABEL_124;
      }
      unint64_t v37 = v86 - 1;
      memmove(v83, v83 + 16, 16 * (v86 - 1 - v82));
      *((void *)v10 + 2) = v86 - 1;
      Swift::Int v4 = v116;
      uint64_t v12 = v118;
      if (v86 <= 2) {
        goto LABEL_89;
      }
      goto LABEL_47;
    }
    unint64_t v37 = 1;
LABEL_89:
    Swift::Int v11 = v114;
    uint64_t v2 = __srca;
    if (v114 >= v4)
    {
LABEL_105:
      if (v37 >= 2)
      {
        uint64_t v98 = *v111;
        uint64_t v123 = *v111;
        do
        {
          unint64_t v99 = v37 - 2;
          if (v37 < 2) {
            goto LABEL_136;
          }
          if (!v98) {
            goto LABEL_149;
          }
          uint64_t v100 = v10;
          uint64_t v101 = v10 + 32;
          uint64_t v102 = *(void *)&v10[16 * v99 + 32];
          uint64_t v103 = *(void *)&v101[16 * v37 - 8];
          __srcc = (void **)(v98 + 8 * v102);
          Swift::String v104 = (void **)(v98 + 8 * *(void *)&v101[16 * v37 - 16]);
          unint64_t v105 = v98 + 8 * v103;
          swift_retain();
          sub_100033644(__srcc, v104, v105, __dst);
          if (v2) {
            break;
          }
          if (v103 < v102) {
            goto LABEL_137;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v100 = sub_100033B60((uint64_t)v100);
          }
          if (v99 >= *((void *)v100 + 2)) {
            goto LABEL_138;
          }
          int v106 = v100;
          uint64_t v107 = v100 + 32;
          uint64_t v108 = &v100[16 * v99 + 32];
          *(void *)uint64_t v108 = v102;
          *((void *)v108 + 1) = v103;
          unint64_t v109 = *((void *)v100 + 2);
          if (v37 > v109) {
            goto LABEL_139;
          }
          uint64_t v10 = v106;
          memmove(&v107[16 * v37 - 16], &v107[16 * v37], 16 * (v109 - v37));
          *((void *)v10 + 2) = v109 - 1;
          unint64_t v37 = v109 - 1;
          uint64_t v98 = v123;
        }
        while (v109 > 2);
      }
LABEL_118:
      swift_bridgeObjectRelease();
      goto LABEL_119;
    }
  }
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  swift_release_n();
  __break(1u);
LABEL_147:
  swift_release_n();
  __break(1u);
LABEL_148:
  swift_release_n();
  __break(1u);
LABEL_149:
  swift_release_n();
  __break(1u);
LABEL_150:
  swift_release_n();
  uint64_t result = sub_1000C7970();
  __break(1u);
  return result;
}

uint64_t sub_100035EC0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  swift_retain_n();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v2 = sub_100033DA8(v2);
    *a1 = v2;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  swift_retain();
  sub_100035620(v6);
  swift_release();
  sub_1000C7920();
  return swift_release_n();
}

uint64_t sub_100035F6C(void *a1, uint64_t a2, char a3)
{
  if ([a1 isOrgAdminUser])
  {
    uint64_t v6 = (objc_class *)[self mainBundle];
    v7._countAndFlagsBits = 0xD000000000000011;
    v19._countAndFlagsBits = 0x80000001000D4A70;
    v7._object = (void *)0x80000001000D4A50;
LABEL_5:
    v9.value._countAndFlagsBits = 0;
    v9.value._object = 0;
    v10.super.Class isa = v6;
    v11._countAndFlagsBits = 0;
    v11._object = (void *)0xE000000000000000;
LABEL_6:
    uint64_t v12 = sub_1000C6320(v7, v9, v10, v11, v19);

    return v12;
  }
  id v8 = [a1 acceptanceStatus];
  if (v8 == (id)1)
  {
    uint64_t v6 = (objc_class *)[self mainBundle];
    v19._countAndFlagsBits = 0x80000001000D4A30;
    v7._countAndFlagsBits = 0x64657469766E49;
    v7._object = (void *)0xE700000000000000;
    goto LABEL_5;
  }
  id v14 = v8;
  if ([a1 role] == (id)4)
  {
    if (v14 != (id)2 || (a3 & 1) != 0 || a2 != 2) {
      return 0;
    }
LABEL_24:
    uint64_t v6 = (objc_class *)[self mainBundle];
    v19._countAndFlagsBits = 0x80000001000D49F0;
    v7._countAndFlagsBits = 0x6C6E6F2077656956;
    v7._object = (void *)0xE900000000000079;
    v9.value._countAndFlagsBits = 0;
    v9.value._object = 0;
    v10.super.Class isa = v6;
    v11._countAndFlagsBits = 0;
    v11._object = (void *)0xE000000000000000;
    goto LABEL_6;
  }
  if ([a1 role] == (id)3)
  {
    if (v14 != (id)2) {
      return 0;
    }
    goto LABEL_23;
  }
  id v17 = [a1 role];
  uint64_t v18 = sub_1000C7730();
  uint64_t v12 = 0;
  if (v14 == (id)2 && v17 == (id)v18)
  {
LABEL_23:
    if ([a1 permission] == (id)2) {
      goto LABEL_24;
    }
    return 0;
  }
  return v12;
}

void *sub_1000361E4(unint64_t a1, uint64_t a2, void *a3)
{
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t result = _swiftEmptyArrayStorage;
    if (!v5) {
      break;
    }
    Swift::Int v13 = _swiftEmptyArrayStorage;
    uint64_t result = (void *)sub_1000C7930();
    if (v5 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v7 = 0;
    while (v5 != v7)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v8 = (id)sub_1000C78F0();
      }
      else {
        id v8 = *(id *)(a1 + 8 * v7 + 32);
      }
      Swift::String_optional v9 = v8;
      id v11 = v8;
      sub_10002999C(&v11, a3, &v12);

      if (v3) {
        return (void *)swift_release();
      }
      ++v7;
      sub_1000C7910();
      sub_1000C7940();
      sub_1000C7950();
      sub_1000C7920();
      if (v5 == v7) {
        return v13;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1000C7990();
    swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_100036368()
{
  unint64_t result = qword_10010D3B0;
  if (!qword_10010D3B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010D3B0);
  }
  return result;
}

unint64_t sub_1000363CC()
{
  unint64_t result = qword_10010BDA0;
  if (!qword_10010BDA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010BDA0);
  }
  return result;
}

uint64_t *sub_100036448(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_1000364AC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100036510(void *a1)
{
  if (!*(void *)((char *)a1
                  + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing18PersonRowViewModel_existingContact))
    goto LABEL_6;
  uint64_t v1 = a1[4];
  unint64_t v2 = a1[5];
  uint64_t v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0) {
    uint64_t v3 = v1 & 0xFFFFFFFFFFFFLL;
  }
  if (v3)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
LABEL_6:
    uint64_t v1 = a1[13];
    unint64_t v4 = a1[14];
    uint64_t v5 = v4 & 0x2000000000000000;
    uint64_t v6 = HIBYTE(v4) & 0xF;
    uint64_t v7 = v1 & 0xFFFFFFFFFFFFLL;
    if ((v4 & 0x2000000000000000) != 0) {
      uint64_t v8 = HIBYTE(v4) & 0xF;
    }
    else {
      uint64_t v8 = v1 & 0xFFFFFFFFFFFFLL;
    }
    if (!v8)
    {
      uint64_t v1 = a1[11];
      unint64_t v9 = a1[12];
      uint64_t v5 = v9 & 0x2000000000000000;
      uint64_t v6 = HIBYTE(v9) & 0xF;
      uint64_t v7 = v1 & 0xFFFFFFFFFFFFLL;
    }
    swift_bridgeObjectRetain();
    if (v5) {
      uint64_t v10 = v6;
    }
    else {
      uint64_t v10 = v7;
    }
    if (!v10)
    {
      swift_bridgeObjectRelease();
      id v11 = (objc_class *)[self mainBundle];
      v14._countAndFlagsBits = 0x80000001000D57F0;
      v15._countAndFlagsBits = 0x206E776F6E6B6E55;
      v15._object = (void *)0xEC00000072657355;
      v16.value._countAndFlagsBits = 0;
      v16.value._object = 0;
      v12.super.Class isa = v11;
      v17._countAndFlagsBits = 0;
      v17._object = (void *)0xE000000000000000;
      uint64_t v1 = sub_1000C6320(v15, v16, v12, v17, v14);
    }
  }
  return v1;
}

void sub_100036648(uint64_t a1)
{
  uint64_t v2 = sub_1000C66D0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v70 = v2;
  uint64_t v71 = v3;
  uint64_t v4 = __chkstk_darwin(v2);
  BOOL v68 = (char *)v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)v67 - v7;
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v69 = (char *)v67 - v10;
  __chkstk_darwin(v9);
  NSBundle v12 = (char *)v67 - v11;
  sub_1000C7440();
  id v13 = objc_allocWithZone((Class)NSError);
  NSString v14 = sub_1000C7400();
  swift_bridgeObjectRelease();
  id v15 = [v13 initWithDomain:v14 code:1 userInfo:0];

  HIBYTE(v77[1]) = -18;
  id v78 = v15;
  strcpy((char *)v77, "internal error");
  sub_1000364AC(a1, (uint64_t)v79);
  if (v83 != 4)
  {
    if (v83 == 11)
    {
      uint64_t v21 = v81;
      if (v82)
      {
        unint64_t v22 = v82;
      }
      else
      {
        uint64_t v21 = 0x6C616E7265746E69;
        unint64_t v22 = 0xEE00726F72726520;
      }
      v77[0] = v21;
      v77[1] = v22;
      swift_bridgeObjectRetain();
      goto LABEL_13;
    }
    if (v83 != 8) {
      goto LABEL_13;
    }
  }
  Swift::String_optional v16 = v80;

  if (!v16)
  {
    __break(1u);
    return;
  }
  id v78 = v16;
  id v17 = v16;
  id v18 = [v17 underlyingErrors];
  sub_100012854((uint64_t *)&unk_10010B010);
  uint64_t v19 = sub_1000C7540();

  if (*(void *)(v19 + 16))
  {
    swift_errorRetain();
    swift_bridgeObjectRelease();
    int v20 = (void *)sub_1000C6480();
    swift_errorRelease();

    id v78 = v20;
    id v17 = v20;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v75 = 0x203A726F727265;
  unint64_t v76 = 0xE700000000000000;
  id v15 = v17;
  id v23 = [v15 description];
  uint64_t v24 = sub_1000C7440();
  id v26 = v25;

  v84._countAndFlagsBits = v24;
  v84._object = v26;
  sub_1000C74B0(v84);

  swift_bridgeObjectRelease();
  v77[0] = v75;
  v77[1] = v76;
LABEL_13:
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v28 = Strong;
    sub_1000C66B0();
    id v29 = v15;
    Swift::Int v30 = sub_1000C66C0();
    os_log_type_t v31 = sub_1000C7670();
    BOOL v32 = os_log_type_enabled(v30, v31);
    v67[1] = v28;
    if (v32)
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      v74[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v33 = 136315138;
      BOOL v68 = (char *)(v33 + 4);
      id v34 = v29;
      id v35 = [v34 description];
      uint64_t v36 = sub_1000C7440();
      unint64_t v38 = v37;

      v72[0] = sub_1000720D0(v36, v38, v74);
      sub_1000C7850();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "Handling final error: %s", v33, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v48 = v70;
    uint64_t v49 = *(void (**)(char *, uint64_t))(v71 + 8);
    v49(v12, v70);
    uint64_t v50 = v69;
    sub_1000C66B0();
    BOOL v51 = sub_1000C66C0();
    os_log_type_t v52 = sub_1000C7670();
    if (os_log_type_enabled(v51, v52))
    {
      id v53 = (uint8_t *)swift_slowAlloc();
      v74[0] = swift_slowAlloc();
      *(_DWORD *)id v53 = 136315138;
      swift_beginAccess();
      uint64_t v54 = v77[0];
      unint64_t v55 = v77[1];
      swift_bridgeObjectRetain();
      uint64_t v73 = sub_1000720D0(v54, v55, v74);
      sub_1000C7850();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v51, v52, "Handling final error message: %s", v53, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v56 = v69;
    }
    else
    {

      uint64_t v56 = v50;
    }
    v49(v56, v48);
    swift_beginAccess();
    id v57 = v78;
    sub_10000E170((uint64_t)v57, 1u);
    swift_unknownObjectRelease();
  }
  else
  {
    sub_1000C66B0();
    id v39 = v15;
    unint64_t v40 = sub_1000C66C0();
    os_log_type_t v41 = sub_1000C7670();
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v42 = (uint8_t *)swift_slowAlloc();
      v74[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v42 = 136315138;
      uint64_t v69 = (char *)(v42 + 4);
      id v43 = v39;
      id v44 = [v43 description];
      uint64_t v45 = sub_1000C7440();
      unint64_t v47 = v46;

      v72[0] = sub_1000720D0(v45, v47, v74);
      sub_1000C7850();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v40, v41, "Unable to handle final error: %s", v42, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v58 = v70;
    uint64_t v59 = *(void (**)(char *, uint64_t))(v71 + 8);
    v59(v8, v70);
    uint64_t v60 = v68;
    sub_1000C66B0();
    BOOL v61 = sub_1000C66C0();
    os_log_type_t v62 = sub_1000C7670();
    if (os_log_type_enabled(v61, v62))
    {
      char v63 = (uint8_t *)swift_slowAlloc();
      v72[0] = swift_slowAlloc();
      *(_DWORD *)char v63 = 136315138;
      swift_beginAccess();
      uint64_t v64 = v77[0];
      unint64_t v65 = v77[1];
      swift_bridgeObjectRetain();
      uint64_t v73 = sub_1000720D0(v64, v65, v72);
      sub_1000C7850();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v61, v62, "Unable to handle final error message: %s", v63, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v66 = v68;
    }
    else
    {

      uint64_t v66 = v60;
    }
    v59(v66, v58);
  }
  swift_bridgeObjectRelease();
}

uint64_t sub_100036FBC()
{
  return sub_10002F9E8();
}

uint64_t sub_100036FC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AlertViewModelButton(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100037028(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AlertViewModelButton(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100037088(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_10001AE78;
  return sub_100030A40(a1, v4, v5, v6);
}

unint64_t sub_100037144()
{
  unint64_t result = qword_10010BE30;
  if (!qword_10010BE30)
  {
    sub_1000C6530();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010BE30);
  }
  return result;
}

uint64_t sub_10003719C(uint64_t a1, void (*a2)(void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_1000371DC()
{
  return sub_10002EB74();
}

uint64_t sub_1000371E4()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10003722C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_10001AE78;
  return sub_100030464(a1, v4, v5, v7, v6);
}

uint64_t sub_1000372F0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_100013B98;
  return sub_100030CB0(a1, v4, v5, v6);
}

uint64_t sub_1000373AC()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

ValueMetadata *type metadata accessor for AvatarView()
{
  return &type metadata for AvatarView;
}

unint64_t sub_100037414()
{
  unint64_t result = qword_10010BED0;
  if (!qword_10010BED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010BED0);
  }
  return result;
}

id sub_100037468(uint64_t a1, void *a2)
{
  id v3 = [objc_allocWithZone((Class)CNAvatarViewController) init];
  sub_100012854(&qword_10010BD50);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1000CC370;
  *(void *)(v4 + 32) = a2;
  sub_1000C7550();
  sub_100037680();
  id v5 = a2;
  Class isa = sub_1000C7530().super.isa;
  swift_bridgeObjectRelease();
  [v3 setContacts:isa];

  return v3;
}

id sub_100037530(uint64_t a1)
{
  return sub_100037468(a1, *v1);
}

uint64_t sub_10003753C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_10003762C();

  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_1000375A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_10003762C();

  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_100037604()
{
}

unint64_t sub_10003762C()
{
  unint64_t result = qword_10010BED8;
  if (!qword_10010BED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010BED8);
  }
  return result;
}

unint64_t sub_100037680()
{
  unint64_t result = qword_10010BDC0;
  if (!qword_10010BDC0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10010BDC0);
  }
  return result;
}

uint64_t destroy for GlobalPermissionPickerView(void *a1)
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  if (a1[4]) {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  if (a1[10]) {
    swift_release();
  }
  swift_bridgeObjectRelease();
  if (a1[14]) {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  if (a1[27]) {
    swift_release();
  }
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for GlobalPermissionPickerView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  unint64_t v6 = (_OWORD *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  if (v5)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = v5;
    *(void *)(a1 + 40) = v7;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *v6;
  }
  uint64_t v8 = *(void *)(a2 + 80);
  uint64_t v9 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  if (v8)
  {
    uint64_t v10 = *(void *)(a2 + 88);
    *(void *)(a1 + 80) = v8;
    *(void *)(a1 + 88) = v10;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  }
  uint64_t v11 = *(void *)(a2 + 112);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  swift_bridgeObjectRetain();
  if (v11)
  {
    uint64_t v12 = *(void *)(a2 + 120);
    *(void *)(a1 + 112) = v11;
    *(void *)(a1 + 120) = v12;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  }
  uint64_t v13 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v13;
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  uint64_t v14 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v14;
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  uint64_t v15 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v15;
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  uint64_t v20 = *(void *)(a2 + 216);
  uint64_t v16 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v16;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  if (v20)
  {
    uint64_t v17 = *(void *)(a2 + 224);
    *(void *)(a1 + 216) = v20;
    *(void *)(a1 + 224) = v17;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  }
  uint64_t v18 = *(void *)(a2 + 240);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = v18;
  *(unsigned char *)(a1 + 248) = *(unsigned char *)(a2 + 248);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for GlobalPermissionPickerView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  uint64_t v4 = *(void *)(a1 + 32);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 32);
  if (v4)
  {
    if (v5)
    {
      uint64_t v6 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = v5;
      *(void *)(a1 + 40) = v6;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v5)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = v5;
    *(void *)(a1 + 40) = v7;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
LABEL_8:
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_release();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_retain();
  swift_release();
  uint64_t v8 = *(void *)(a1 + 80);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v9 = *(void *)(a2 + 80);
  if (v8)
  {
    if (v9)
    {
      uint64_t v10 = *(void *)(a2 + 88);
      *(void *)(a1 + 80) = v9;
      *(void *)(a1 + 88) = v10;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v9)
  {
    uint64_t v11 = *(void *)(a2 + 88);
    *(void *)(a1 + 80) = v9;
    *(void *)(a1 + 88) = v11;
    swift_retain();
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
LABEL_15:
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a1 + 112);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  uint64_t v13 = *(void *)(a2 + 112);
  if (v12)
  {
    if (v13)
    {
      uint64_t v14 = *(void *)(a2 + 120);
      *(void *)(a1 + 112) = v13;
      *(void *)(a1 + 120) = v14;
      swift_retain();
      swift_release();
      goto LABEL_22;
    }
    swift_release();
  }
  else if (v13)
  {
    uint64_t v15 = *(void *)(a2 + 120);
    *(void *)(a1 + 112) = v13;
    *(void *)(a1 + 120) = v15;
    swift_retain();
    goto LABEL_22;
  }
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
LABEL_22:
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_retain();
  swift_release();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_retain();
  swift_release();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_retain();
  swift_release();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  swift_retain();
  swift_release();
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  swift_retain();
  swift_release();
  uint64_t v16 = *(void *)(a2 + 216);
  if (!*(void *)(a1 + 216))
  {
    if (v16)
    {
      uint64_t v18 = *(void *)(a2 + 224);
      *(void *)(a1 + 216) = v16;
      *(void *)(a1 + 224) = v18;
      swift_retain();
      goto LABEL_29;
    }
LABEL_28:
    *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
    goto LABEL_29;
  }
  if (!v16)
  {
    swift_release();
    goto LABEL_28;
  }
  uint64_t v17 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = v16;
  *(void *)(a1 + 224) = v17;
  swift_retain();
  swift_release();
LABEL_29:
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  swift_retain();
  swift_release();
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 248) = *(unsigned char *)(a2 + 248);
  return a1;
}

__n128 initializeWithTake for GlobalPermissionPickerView(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v5 = a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  long long v8 = a2[8];
  long long v9 = a2[9];
  long long v10 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v10;
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  __n128 result = (__n128)a2[12];
  long long v12 = a2[13];
  long long v13 = a2[14];
  *(_OWORD *)(a1 + 233) = *(long long *)((char *)a2 + 233);
  *(_OWORD *)(a1 + 208) = v12;
  *(_OWORD *)(a1 + 224) = v13;
  *(__n128 *)(a1 + 192) = result;
  return result;
}

uint64_t assignWithTake for GlobalPermissionPickerView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a1 + 32);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  if (v5)
  {
    if (v4)
    {
      uint64_t v6 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = v4;
      *(void *)(a1 + 40) = v6;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = v4;
    *(void *)(a1 + 40) = v7;
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
LABEL_8:
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_release();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_release();
  uint64_t v8 = *(void *)(a2 + 80);
  uint64_t v9 = *(void *)(a1 + 80);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  if (v9)
  {
    if (v8)
    {
      uint64_t v10 = *(void *)(a2 + 88);
      *(void *)(a1 + 80) = v8;
      *(void *)(a1 + 88) = v10;
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v8)
  {
    uint64_t v11 = *(void *)(a2 + 88);
    *(void *)(a1 + 80) = v8;
    *(void *)(a1 + 88) = v11;
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
LABEL_15:
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 112);
  uint64_t v13 = *(void *)(a1 + 112);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  if (v13)
  {
    if (v12)
    {
      uint64_t v14 = *(void *)(a2 + 120);
      *(void *)(a1 + 112) = v12;
      *(void *)(a1 + 120) = v14;
      swift_release();
      goto LABEL_22;
    }
    swift_release();
  }
  else if (v12)
  {
    uint64_t v15 = *(void *)(a2 + 120);
    *(void *)(a1 + 112) = v12;
    *(void *)(a1 + 120) = v15;
    goto LABEL_22;
  }
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
LABEL_22:
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_release();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_release();
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_release();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_release();
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_release();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_release();
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  swift_release();
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  swift_release();
  uint64_t v16 = *(void *)(a2 + 216);
  if (!*(void *)(a1 + 216))
  {
    if (v16)
    {
      uint64_t v18 = *(void *)(a2 + 224);
      *(void *)(a1 + 216) = v16;
      *(void *)(a1 + 224) = v18;
      goto LABEL_29;
    }
LABEL_28:
    *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
    goto LABEL_29;
  }
  if (!v16)
  {
    swift_release();
    goto LABEL_28;
  }
  uint64_t v17 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = v16;
  *(void *)(a1 + 224) = v17;
  swift_release();
LABEL_29:
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  swift_release();
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  swift_release();
  *(unsigned char *)(a1 + 248) = *(unsigned char *)(a2 + 248);
  return a1;
}

uint64_t getEnumTagSinglePayload for GlobalPermissionPickerView(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 249)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GlobalPermissionPickerView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 248) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 249) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 249) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GlobalPermissionPickerView()
{
  return &type metadata for GlobalPermissionPickerView;
}

uint64_t sub_1000380D8()
{
  return swift_getOpaqueTypeConformance2();
}

void *sub_1000380F4@<X0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v4 = sub_100012854(&qword_10010BF00);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v55 = (uint64_t)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v49 - v7;
  uint64_t v9 = *a1;
  long long v84 = *(_OWORD *)(a1 + 1);
  LOBYTE(v85) = *((unsigned char *)a1 + 24);
  uint64_t v54 = v9;
  swift_bridgeObjectRetain();
  sub_100012854(&qword_10010BF08);
  sub_1000C72B0();
  uint64_t v57 = *((void *)&v100 + 1);
  uint64_t v58 = v100;
  int v56 = v101;
  uint64_t v10 = a1[4];
  uint64_t v11 = a1[5];
  uint64_t v12 = a1[6];
  long long v84 = *(_OWORD *)(a1 + 7);
  LOBYTE(v85) = *((unsigned char *)a1 + 72);
  uint64_t v81 = v12;
  swift_bridgeObjectRetain();
  uint64_t v82 = v11;
  uint64_t v83 = v10;
  sub_1000236E0(v10);
  sub_100012854(&qword_10010BF10);
  sub_1000C72B0();
  uint64_t v52 = *((void *)&v100 + 1);
  uint64_t v53 = v100;
  uint64_t v13 = a1[10];
  uint64_t v14 = a1[11];
  uint64_t v15 = a1[12];
  int v16 = *((unsigned __int8 *)a1 + 104);
  int v74 = v101;
  int v75 = v16;
  uint64_t v17 = a1[14];
  uint64_t v18 = a1[15];
  long long v84 = *(_OWORD *)(a1 + 29);
  LOBYTE(v85) = *((unsigned char *)a1 + 248);
  uint64_t v76 = v15;
  swift_bridgeObjectRetain();
  uint64_t v79 = v13;
  uint64_t v77 = v14;
  sub_1000236E0(v13);
  uint64_t v80 = v17;
  uint64_t v78 = v18;
  sub_1000236E0(v17);
  sub_100012854(&qword_10010BF18);
  sub_1000C72B0();
  uint64_t v72 = *((void *)&v100 + 1);
  uint64_t v73 = v100;
  int v71 = v101;
  long long v84 = *((_OWORD *)a1 + 8);
  LOBYTE(v85) = *((unsigned char *)a1 + 144);
  sub_1000C72B0();
  uint64_t v69 = *((void *)&v100 + 1);
  uint64_t v70 = v100;
  int v68 = v101;
  long long v84 = *(_OWORD *)(a1 + 19);
  LOBYTE(v85) = *((unsigned char *)a1 + 168);
  sub_1000C72B0();
  uint64_t v66 = *((void *)&v100 + 1);
  uint64_t v67 = v100;
  int v65 = v101;
  long long v84 = *((_OWORD *)a1 + 11);
  LOBYTE(v85) = *((unsigned char *)a1 + 192);
  sub_1000C72B0();
  uint64_t v63 = *((void *)&v100 + 1);
  uint64_t v64 = v100;
  int v62 = v101;
  type metadata accessor for SharingModel();
  sub_100038DD8();
  uint64_t v19 = sub_1000C6B30();
  uint64_t v59 = v20;
  LOBYTE(v84) = 1;
  sub_1000C71E0();
  int v60 = v100;
  uint64_t v61 = *((void *)&v100 + 1);
  long long v21 = *(_OWORD *)(a1 + 27);
  long long v100 = *(_OWORD *)(a1 + 25);
  long long v101 = v21;
  sub_100012854(&qword_10010BF28);
  sub_1000C7280();
  uint64_t v22 = v84;
  if ((void)v84)
  {
    uint64_t v23 = *((void *)&v84 + 1);
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = v22;
    *(void *)(v24 + 24) = v23;
    uint64_t v25 = sub_1000C5DE0();
    if ((v25 & 1) == 0)
    {
      __chkstk_darwin(v25);
      *(&v49 - 2) = (uint64_t)sub_1000391EC;
      *(&v49 - 1) = v24;
      sub_100012854(&qword_10010BF40);
      sub_10001E454(&qword_10010BF48, &qword_10010BF40);
      sub_1000C7310();
      swift_release();
      uint64_t v27 = sub_100012854(&qword_10010BF30);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v8, 0, 1, v27);
      goto LABEL_6;
    }
    swift_release();
  }
  uint64_t v26 = sub_100012854(&qword_10010BF30);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v8, 1, 1, v26);
LABEL_6:
  uint64_t v28 = v55;
  sub_100038E30((uint64_t)v8, v55);
  DWORD1(v94) = *(_DWORD *)&v142[3];
  *(_DWORD *)((char *)&v94 + 1) = *(_DWORD *)v142;
  HIDWORD(v95) = *(_DWORD *)&v141[3];
  *(_DWORD *)((char *)&v95 + 9) = *(_DWORD *)v141;
  DWORD1(v97) = *(_DWORD *)&v140[3];
  *(_DWORD *)((char *)&v97 + 1) = *(_DWORD *)v140;
  HIDWORD(v98) = *(_DWORD *)&v139[3];
  *(_DWORD *)((char *)&v98 + 9) = *(_DWORD *)v139;
  DWORD1(v99) = *(_DWORD *)&v138[3];
  *(_DWORD *)((char *)&v99 + 1) = *(_DWORD *)v138;
  *(_DWORD *)((char *)&v86 + 9) = v145[0];
  HIDWORD(v86) = *(_DWORD *)((char *)v145 + 3);
  HIDWORD(v89) = *(_DWORD *)&v144[3];
  *(_DWORD *)((char *)&v89 + 9) = *(_DWORD *)v144;
  *(_DWORD *)((char *)&v91 + 9) = *(_DWORD *)v143;
  HIDWORD(v91) = *(_DWORD *)&v143[3];
  *(void *)&long long v84 = v19;
  *((void *)&v84 + 1) = v59;
  uint64_t v29 = v54;
  uint64_t v50 = v8;
  uint64_t v51 = v19;
  uint64_t v31 = v57;
  uint64_t v30 = v58;
  *(void *)&long long v85 = v54;
  *((void *)&v85 + 1) = v58;
  *(void *)&long long v86 = v57;
  char v32 = v56;
  BYTE8(v86) = v56;
  *(void *)&long long v87 = v83;
  *((void *)&v87 + 1) = v82;
  uint64_t v33 = v52;
  uint64_t v34 = v53;
  *(void *)&long long v88 = v81;
  *((void *)&v88 + 1) = v53;
  *(void *)&long long v89 = v52;
  BYTE8(v89) = v74;
  *(void *)&long long v90 = v79;
  *((void *)&v90 + 1) = v77;
  *(void *)&long long v91 = v76;
  BYTE8(v91) = v75;
  *(void *)&long long v92 = v80;
  *((void *)&v92 + 1) = v78;
  *(void *)&long long v93 = v73;
  *((void *)&v93 + 1) = v72;
  LOBYTE(v94) = v71;
  *((void *)&v94 + 1) = v70;
  *(void *)&long long v95 = v69;
  BYTE8(v95) = v68;
  *(void *)&long long v96 = v67;
  *((void *)&v96 + 1) = v66;
  LOBYTE(v97) = v65;
  *((void *)&v97 + 1) = v64;
  *(void *)&long long v98 = v63;
  BYTE8(v98) = v62;
  LOBYTE(v99) = v60;
  *((void *)&v99 + 1) = v61;
  long long v35 = v84;
  long long v36 = v85;
  long long v37 = v87;
  a2[2] = v86;
  a2[3] = v37;
  *a2 = v35;
  a2[1] = v36;
  long long v38 = v88;
  long long v39 = v89;
  long long v40 = v91;
  a2[6] = v90;
  a2[7] = v40;
  a2[4] = v38;
  a2[5] = v39;
  long long v41 = v92;
  long long v42 = v93;
  long long v43 = v95;
  a2[10] = v94;
  a2[11] = v43;
  a2[8] = v41;
  a2[9] = v42;
  long long v44 = v96;
  long long v45 = v97;
  long long v46 = v99;
  a2[14] = v98;
  a2[15] = v46;
  a2[12] = v44;
  a2[13] = v45;
  uint64_t v47 = sub_100012854(&qword_10010BF38);
  sub_100038E30(v28, (uint64_t)a2 + *(int *)(v47 + 48));
  sub_100038E98(&v84);
  sub_100038FF4((uint64_t)v50);
  sub_100038FF4(v28);
  *(void *)&long long v100 = v51;
  *((void *)&v100 + 1) = v59;
  *(void *)&long long v101 = v29;
  *((void *)&v101 + 1) = v30;
  uint64_t v102 = v31;
  char v103 = v32;
  *(_DWORD *)Swift::String v104 = v145[0];
  *(_DWORD *)&v104[3] = *(_DWORD *)((char *)v145 + 3);
  uint64_t v105 = v83;
  uint64_t v106 = v82;
  uint64_t v107 = v81;
  uint64_t v108 = v34;
  uint64_t v109 = v33;
  char v110 = v74;
  *(_DWORD *)&v111[3] = *(_DWORD *)&v144[3];
  *(_DWORD *)uint64_t v111 = *(_DWORD *)v144;
  uint64_t v112 = v79;
  uint64_t v113 = v77;
  uint64_t v114 = v76;
  char v115 = v75;
  *(_DWORD *)Swift::Int v116 = *(_DWORD *)v143;
  *(_DWORD *)&v116[3] = *(_DWORD *)&v143[3];
  uint64_t v117 = v80;
  uint64_t v118 = v78;
  uint64_t v119 = v73;
  uint64_t v120 = v72;
  char v121 = v71;
  *(_DWORD *)&v122[3] = *(_DWORD *)&v142[3];
  *(_DWORD *)Swift::Int v122 = *(_DWORD *)v142;
  uint64_t v123 = v70;
  uint64_t v124 = v69;
  char v125 = v68;
  *(_DWORD *)&v126[3] = *(_DWORD *)&v141[3];
  *(_DWORD *)uint64_t v126 = *(_DWORD *)v141;
  uint64_t v127 = v67;
  uint64_t v128 = v66;
  char v129 = v65;
  *(_DWORD *)&v130[3] = *(_DWORD *)&v140[3];
  *(_DWORD *)uint64_t v130 = *(_DWORD *)v140;
  uint64_t v131 = v64;
  uint64_t v132 = v63;
  char v133 = v62;
  *(_DWORD *)&v134[3] = *(_DWORD *)&v139[3];
  *(_DWORD *)uint64_t v134 = *(_DWORD *)v139;
  char v135 = v60;
  *(_DWORD *)&v136[3] = *(_DWORD *)&v138[3];
  *(_DWORD *)uint64_t v136 = *(_DWORD *)v138;
  uint64_t v137 = v61;
  return sub_100039054(&v100);
}

uint64_t sub_1000388A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100012854(&qword_10010BE10);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000C6930();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  swift_retain();
  sub_100012854(&qword_10010BF50);
  sub_10001E454(&qword_10010BF58, &qword_10010BF50);
  return sub_1000C7220();
}

__n128 sub_100038A04@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000C6CF0();
  sub_100038A78((uint64_t)&v10);
  uint64_t v3 = v10;
  char v4 = v11;
  char v5 = v13;
  uint64_t v6 = v14;
  uint64_t v7 = v15;
  char v8 = v16;
  __n128 result = v12;
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  *(void *)(a1 + 24) = v3;
  *(unsigned char *)(a1 + 32) = v4;
  *(__n128 *)(a1 + 40) = result;
  *(unsigned char *)(a1 + 56) = v5;
  *(void *)(a1 + 64) = v6;
  *(void *)(a1 + 72) = v7;
  *(unsigned char *)(a1 + 80) = v8;
  return result;
}

uint64_t sub_100038A78@<X0>(uint64_t a1@<X8>)
{
  sub_1000C6D00();
  uint64_t v2 = sub_1000C6FF0();
  uint64_t v4 = v3;
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
  char v6 = v5 & 1;
  *(void *)(a1 + 16) = v2;
  *(void *)(a1 + 24) = v3;
  *(unsigned char *)(a1 + 32) = v5 & 1;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = 0;
  *(unsigned char *)(a1 + 56) = 1;
  sub_100039224(v2, v3, v5 & 1);
  swift_bridgeObjectRetain();
  sub_100039234(v2, v4, v6);

  return swift_bridgeObjectRelease();
}

uint64_t sub_100038B58()
{
  uint64_t v1 = sub_1000C6DA0();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100012854(&qword_10010BEE0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v9 = v0[13];
  unsigned char v18[12] = v0[12];
  v18[13] = v9;
  v19[0] = v0[14];
  *(_OWORD *)((char *)v19 + 9) = *(_OWORD *)((char *)v0 + 233);
  long long v10 = v0[9];
  v18[8] = v0[8];
  v18[9] = v10;
  long long v11 = v0[11];
  v18[10] = v0[10];
  v18[11] = v11;
  long long v12 = v0[5];
  v18[4] = v0[4];
  v18[5] = v12;
  long long v13 = v0[7];
  v18[6] = v0[6];
  v18[7] = v13;
  long long v14 = v0[1];
  v18[0] = *v0;
  v18[1] = v14;
  long long v15 = v0[3];
  v18[2] = v0[2];
  v18[3] = v15;
  void v17[2] = v18;
  sub_100012854(&qword_10010BEE8);
  sub_10001E454(&qword_10010BEF0, &qword_10010BEE8);
  sub_1000C6F90();
  sub_1000C6D90();
  sub_10001E454(&qword_10010BEF8, &qword_10010BEE0);
  sub_1000C7110();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void *sub_100038DD0@<X0>(_OWORD *a1@<X8>)
{
  return sub_1000380F4(*(uint64_t **)(v1 + 16), a1);
}

unint64_t sub_100038DD8()
{
  unint64_t result = qword_10010BF20;
  if (!qword_10010BF20)
  {
    type metadata accessor for SharingModel();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010BF20);
  }
  return result;
}

uint64_t sub_100038E30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100012854(&qword_10010BF00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void *sub_100038E98(void *a1)
{
  uint64_t v2 = a1[6];
  uint64_t v3 = a1[12];
  uint64_t v5 = a1[16];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1000236E0(v2);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1000236E0(v3);
  swift_bridgeObjectRetain();
  sub_1000236E0(v5);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_100038FF4(uint64_t a1)
{
  uint64_t v2 = sub_100012854(&qword_10010BF00);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_100039054(void *a1)
{
  uint64_t v2 = a1[6];
  uint64_t v3 = a1[12];
  uint64_t v5 = a1[16];
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_100013344(v2);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_100013344(v3);
  swift_bridgeObjectRelease();
  sub_100013344(v5);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_1000391B4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000391EC()
{
  return sub_10003F974(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1000391F4()
{
  return sub_1000388A0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1000391FC()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100039224(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_100039234(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_100039244()
{
  return swift_getOpaqueTypeConformance2();
}

_WORD *sub_1000392E8()
{
  uint64_t v1 = sub_1000C66D0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v96 = v1;
  uint64_t v97 = v2;
  uint64_t v3 = __chkstk_darwin(v1);
  long long v94 = (char *)&v87 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  long long v92 = (char *)&v87 - v6;
  uint64_t v7 = __chkstk_darwin(v5);
  long long v93 = (char *)&v87 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  long long v11 = (uint8_t *)&v87 - v10;
  uint64_t v12 = __chkstk_darwin(v9);
  long long v14 = (void (*)(char *, uint64_t))((char *)&v87 - v13);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v87 - v16;
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = (char *)&v87 - v19;
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v87 - v21;
  uint64_t v95 = v0;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  uint64_t KeyPath = v101;
  if (v101) {
    return KeyPath;
  }
  long long v90 = v14;
  long long v91 = v20;
  long long v88 = v11;
  id v89 = v17;
  BOOL v100 = 1;
  sub_1000C66B0();
  uint64_t v24 = sub_1000C66C0();
  os_log_type_t v25 = sub_1000C7690();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v26 = 0;
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "configuredContainer needsBundleIDOverride initially true", v26, 2u);
    swift_slowDealloc();
  }

  uint64_t v28 = v97 + 8;
  uint64_t v27 = *(void (**)(char *, uint64_t))(v97 + 8);
  uint64_t v29 = v22;
  uint64_t v30 = v96;
  v27(v29, v96);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v31 = v101;
  if (v101)
  {
    char v32 = v91;
    sub_1000C66B0();
    uint64_t KeyPath = v31;
    uint64_t v33 = sub_1000C66C0();
    os_log_type_t v34 = sub_1000C7690();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = swift_slowAlloc();
      id v89 = KeyPath;
      long long v36 = (uint8_t *)v35;
      long long v101 = (_WORD *)swift_slowAlloc();
      *(_DWORD *)long long v36 = 136315138;
      long long v88 = v36 + 4;
      id v37 = v89;
      uint64_t v97 = v28;
      long long v90 = v27;
      id v38 = v37;
      id v39 = [v37 description];
      uint64_t v40 = sub_1000C7440();
      unint64_t v42 = v41;

      char v103 = (_WORD *)sub_1000720D0(v40, v42, (uint64_t *)&v101);
      sub_1000C7850();

      uint64_t v27 = v90;
      uint64_t v28 = v97;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "configuredContainer using setupInfo: %s", v36, 0xCu);
      swift_arrayDestroy();
      uint64_t v30 = v96;
      swift_slowDealloc();
      uint64_t KeyPath = v89;
      swift_slowDealloc();

      long long v43 = v91;
    }
    else
    {

      long long v43 = v32;
    }
    v27(v43, v30);
    uint64_t v50 = v98;
    id v51 = [KeyPath containerOptions];
    id v52 = [v51 applicationBundleIdentifierOverrideForContainerAccess];

    if (v52) {
    BOOL v100 = v52 == 0;
    }
  }
  else
  {
    swift_getKeyPath();
    uint64_t KeyPath = (_WORD *)swift_getKeyPath();
    swift_retain();
    sub_1000C67E0();
    swift_release();
    swift_release();
    swift_release();
    long long v44 = v101;
    if (v101)
    {
      uint64_t v45 = v28;
      uint64_t KeyPath = v89;
      sub_1000C66B0();
      long long v46 = v44;
      uint64_t v47 = sub_1000C66C0();
      os_log_type_t v48 = sub_1000C7690();
      if (os_log_type_enabled(v47, v48))
      {
        uint64_t v49 = (uint8_t *)swift_slowAlloc();
        long long v91 = (char *)swift_slowAlloc();
        uint64_t v97 = v45;
        long long v90 = v27;
        *(_DWORD *)uint64_t v49 = 138412290;
        long long v101 = v46;
        long long v46 = v46;
        uint64_t v30 = v96;
        uint64_t v45 = v97;
        sub_1000C7850();
        *(void *)long long v91 = v44;

        _os_log_impl((void *)&_mh_execute_header, v47, v48, "configuredContainer with id: %@", v49, 0xCu);
        sub_100012854((uint64_t *)&unk_10010B1E0);
        uint64_t v27 = v90;
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t KeyPath = v89;
        swift_slowDealloc();
      }
      else
      {

        uint64_t v47 = v46;
      }
      uint64_t v50 = v98;

      v27((char *)KeyPath, v30);
      uint64_t v28 = v45;
    }
    else
    {
      swift_getKeyPath();
      swift_getKeyPath();
      sub_1000C67E0();
      swift_release();
      swift_release();
      if (v101 != 9)
      {
        int v62 = (char *)v90;
        sub_1000C66B0();
        uint64_t v63 = sub_1000C66C0();
        os_log_type_t v64 = sub_1000C7670();
        if (os_log_type_enabled(v63, v64))
        {
          uint64_t KeyPath = (_WORD *)swift_slowAlloc();
          *uint64_t KeyPath = 0;
          _os_log_impl((void *)&_mh_execute_header, v63, v64, "configuredContainer throwing as it can't build a container", (uint8_t *)KeyPath, 2u);
          swift_slowDealloc();
        }

        v27(v62, v30);
        unint64_t v65 = 0xD000000000000019;
        unint64_t v66 = 0x80000001000D5840;
        goto LABEL_40;
      }
      sub_1000C7440();
      sub_1000C7460();
      uint64_t KeyPath = v53;
      swift_retain();
      swift_bridgeObjectRelease();
      id v54 = objc_allocWithZone((Class)CKContainerID);
      NSString v55 = sub_1000C7400();
      swift_bridgeObjectRelease();
      id v56 = [v54 initWithContainerIdentifier:v55 environment:1];

      sub_100083E94(v56, 0);
      swift_release();

      uint64_t v57 = v88;
      sub_1000C66B0();
      swift_retain_n();
      uint64_t v58 = sub_1000C66C0();
      os_log_type_t v59 = sub_1000C7690();
      if (os_log_type_enabled(v58, v59))
      {
        long long v90 = v27;
        uint64_t v97 = v28;
        int v60 = (uint8_t *)swift_slowAlloc();
        uint64_t KeyPath = (_WORD *)swift_slowAlloc();
        *(_DWORD *)int v60 = 138412290;
        swift_getKeyPath();
        swift_getKeyPath();
        swift_retain();
        sub_1000C67E0();
        swift_release();
        swift_release();
        swift_release();
        uint64_t v61 = (uint64_t)v101;
        if (!v101) {
          long long v101 = 0;
        }
        sub_1000C7850();
        uint64_t v28 = v97;
        uint64_t v27 = v90;
        *(void *)uint64_t KeyPath = v61;
        swift_release_n();
        _os_log_impl((void *)&_mh_execute_header, v58, v59, "configuredContainer with containerID: %@", v60, 0xCu);
        sub_100012854((uint64_t *)&unk_10010B1E0);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v57 = v88;
      }
      else
      {

        swift_release_n();
      }
      uint64_t v30 = v96;
      v27((char *)v57, v96);
      uint64_t v50 = v98;
    }
  }
  swift_retain();
  sub_100084924();
  swift_release();
  if (v50) {
    return KeyPath;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  uint64_t KeyPath = v101;
  if (!v101)
  {
LABEL_36:
    uint64_t KeyPath = v94;
    sub_1000C66B0();
    swift_retain_n();
    uint64_t v80 = sub_1000C66C0();
    os_log_type_t v81 = sub_1000C7690();
    if (os_log_type_enabled(v80, v81))
    {
      uint64_t v97 = v28;
      long long v90 = v27;
      uint64_t v82 = (uint8_t *)swift_slowAlloc();
      uint64_t KeyPath = (_WORD *)swift_slowAlloc();
      char v103 = KeyPath;
      *(_DWORD *)uint64_t v82 = 136315138;
      swift_getKeyPath();
      swift_getKeyPath();
      sub_1000C67E0();
      swift_release();
      swift_release();
      sub_100012854(&qword_10010CBB0);
      uint64_t v83 = sub_1000C7450();
      long long v101 = (_WORD *)sub_1000720D0(v83, v84, (uint64_t *)&v103);
      sub_1000C7850();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v80, v81, "configuredContainer throwing as it doesn't have a container or nil sourceAppBundleID: %s", v82, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v90(v94, v96);
    }
    else
    {

      swift_release_n();
      v27((char *)KeyPath, v30);
    }
    unint64_t v66 = 0x80000001000D5860;
    unint64_t v65 = 0xD000000000000033;
LABEL_40:
    sub_100012A24();
    swift_allocError();
    *(void *)uint64_t v85 = 0xD000000000000015;
    *(void *)(v85 + 8) = 0x80000001000D5820;
    *(void *)(v85 + 16) = 0;
    *(void *)(v85 + 24) = v65;
    *(void *)(v85 + 32) = v66;
    *(unsigned char *)(v85 + 40) = 10;
    swift_willThrow();
    return KeyPath;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  unint64_t v67 = v102;
  if (!v102)
  {

    goto LABEL_36;
  }
  long long v90 = v27;
  uint64_t v97 = v28;
  uint64_t v68 = (uint64_t)v101;
  uint64_t v69 = v93;
  sub_1000C66B0();
  BOOL v70 = v100;
  int v71 = sub_1000C66C0();
  os_log_type_t v72 = sub_1000C7690();
  if (os_log_type_enabled(v71, v72))
  {
    uint64_t v73 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v73 = 67109120;
    LODWORD(v101) = v70;
    sub_1000C7850();
    _os_log_impl((void *)&_mh_execute_header, v71, v72, "configuredContainer about to return container, needsBundleIDOverride: %{BOOL}d", v73, 8u);
    uint64_t v69 = v93;
    swift_slowDealloc();
  }

  v90(v69, v96);
  swift_beginAccess();
  if (v100)
  {
    id v74 = [KeyPath options];
    NSString v75 = sub_1000C7400();
    [v74 setApplicationBundleIdentifierOverride:v75];

    uint64_t v76 = v92;
    sub_1000C66B0();
    swift_bridgeObjectRetain();
    uint64_t v77 = sub_1000C66C0();
    os_log_type_t v78 = sub_1000C7690();
    if (os_log_type_enabled(v77, v78))
    {
      uint64_t v79 = (uint8_t *)swift_slowAlloc();
      char v103 = (_WORD *)swift_slowAlloc();
      *(_DWORD *)uint64_t v79 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v99 = sub_1000720D0(v68, v67, (uint64_t *)&v103);
      sub_1000C7850();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v77, v78, "configuredContainer options applicationBundleIDOverride set to: %s", v79, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v90(v92, v96);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      v90(v76, v96);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return KeyPath;
}

double sub_10003A2D4@<D0>(_OWORD *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_10003A354()
{
  return sub_1000C67F0();
}

uint64_t sub_10003A3D8@<X0>(void *a1@<X8>)
{
  return sub_100011168(a1);
}

uint64_t sub_10003A3EC(void **a1)
{
  return sub_1000111F8(a1);
}

uint64_t sub_10003A400@<X0>(void *a1@<X8>)
{
  return sub_100011168(a1);
}

uint64_t sub_10003A414(void **a1)
{
  return sub_1000111F8(a1);
}

uint64_t sub_10003A428@<X0>(void *a1@<X8>)
{
  return sub_100011168(a1);
}

uint64_t sub_10003A43C(void **a1)
{
  return sub_1000111F8(a1);
}

uint64_t sub_10003A450@<X0>(void *a1@<X8>)
{
  return sub_100011168(a1);
}

uint64_t sub_10003A478(void **a1)
{
  return sub_1000111F8(a1);
}

uint64_t sub_10003A4A0@<X0>(void *a1@<X8>)
{
  return sub_100011168(a1);
}

uint64_t sub_10003A4C8(void **a1)
{
  return sub_1000111F8(a1);
}

uint64_t sub_10003A4F0@<X0>(void *a1@<X8>)
{
  return sub_100011168(a1);
}

uint64_t sub_10003A518(void **a1)
{
  return sub_1000111F8(a1);
}

uint64_t sub_10003A550()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10003A5C4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10003A638()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing18PersonRowViewModel__selectedPermission;
  uint64_t v2 = sub_100012854(&qword_10010C0B8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing18PersonRowViewModel__allowInviting;
  uint64_t v4 = sub_100012854(&qword_10010BB60);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return v0;
}

uint64_t sub_10003A740()
{
  sub_10003A638();

  return swift_deallocClassInstance();
}

uint64_t sub_10003A798()
{
  return type metadata accessor for PersonRowViewModel();
}

uint64_t type metadata accessor for PersonRowViewModel()
{
  uint64_t result = qword_10010BF98;
  if (!qword_10010BF98) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10003A7EC()
{
  sub_10003A900();
  if (v0 <= 0x3F)
  {
    sub_10003A95C();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_10003A900()
{
  if (!qword_10010BFA8)
  {
    sub_100013128((uint64_t *)&unk_10010BFB0);
    unint64_t v0 = sub_1000C6800();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10010BFA8);
    }
  }
}

void sub_10003A95C()
{
  if (!qword_10010B9B0)
  {
    unint64_t v0 = sub_1000C6800();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10010B9B0);
    }
  }
}

unsigned char *initializeBufferWithCopyOfBuffer for SharePermission(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for SharePermission(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for PersonRole(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10003AB1CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

uint64_t sub_10003AB44(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_10003AB4C(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for PersonRole()
{
  return &type metadata for PersonRole;
}

void *sub_10003AB64()
{
  return &protocol witness table for Int;
}

uint64_t sub_10003AB70@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 24);
  *a1 = *(void *)(*(void *)v1 + 16);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

BOOL sub_10003AB80(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

unint64_t sub_10003AB94@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_10003B5E8(*a1);
  *a2 = result;
  return result;
}

void sub_10003ABC0(void *a1@<X8>)
{
  *a1 = *v1;
}

void sub_10003ABCC(void *a1@<X8>)
{
  *a1 = &off_1000FF238;
}

Swift::Int sub_10003ABDC()
{
  Swift::UInt v1 = *v0;
  sub_1000C7B10();
  sub_1000C7B20(v1);
  return sub_1000C7B30();
}

void sub_10003AC24()
{
  sub_1000C7B20(*v0);
}

Swift::Int sub_10003AC50()
{
  Swift::UInt v1 = *v0;
  sub_1000C7B10();
  sub_1000C7B20(v1);
  return sub_1000C7B30();
}

unint64_t sub_10003AC98()
{
  unint64_t result = qword_10010C0A0;
  if (!qword_10010C0A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010C0A0);
  }
  return result;
}

unint64_t sub_10003ACF0()
{
  unint64_t result = qword_10010C0A8;
  if (!qword_10010C0A8)
  {
    sub_100013128(&qword_10010C0B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010C0A8);
  }
  return result;
}

void *sub_10003AD4C()
{
  return &protocol witness table for String;
}

uint64_t sub_10003AD58@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_10003ADD8()
{
  return sub_1000C67F0();
}

unint64_t sub_10003AE4C(unint64_t a1)
{
  if (a1 < 5 && ((0x1Bu >> a1) & 1) != 0) {
    return 0x302000004uLL >> (8 * a1);
  }
  if (sub_1000C7730() == a1) {
    return 1;
  }
  sub_1000C78D0(35);
  v2._object = (void *)0x80000001000D59B0;
  v2._countAndFlagsBits = 0xD000000000000021;
  sub_1000C74B0(v2);
  type metadata accessor for ParticipantRole(0);
  sub_1000C7960();
  unint64_t result = sub_1000C7980();
  __break(1u);
  return result;
}

uint64_t sub_10003AF50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, long long a10, uint64_t a11, uint64_t a12, unsigned __int8 a13, unsigned __int8 a14, uint64_t a15, uint64_t a16, unsigned __int8 a17, unsigned __int8 a18, unsigned __int8 a19, unsigned __int8 a20)
{
  uint64_t v41 = a7;
  uint64_t v42 = a8;
  uint64_t v39 = a5;
  uint64_t v40 = a6;
  uint64_t v37 = a3;
  uint64_t v38 = a4;
  int v49 = a19;
  int v50 = a20;
  int v47 = a17;
  int v48 = a18;
  uint64_t v45 = a15;
  uint64_t v46 = a16;
  int v43 = a13;
  int v44 = a14;
  uint64_t v36 = a12;
  long long v35 = a10;
  uint64_t v23 = sub_100012854(&qword_10010C0B8);
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v35 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = v20 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing18PersonRowViewModel__selectedPermission;
  char v52 = 3;
  sub_100012854((uint64_t *)&unk_10010BFB0);
  sub_1000C67B0();
  (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v27, v26, v23);
  *(void *)(v20 + 16) = a1;
  *(void *)(v20 + 24) = a2;
  uint64_t v28 = v38;
  *(void *)(v20 + 32) = v37;
  *(void *)(v20 + 40) = v28;
  uint64_t v29 = v40;
  *(void *)(v20 + 48) = v39;
  *(void *)(v20 + 56) = v29;
  uint64_t v30 = v42;
  *(void *)(v20 + 64) = v41;
  *(void *)(v20 + 72) = v30;
  *(void *)(v20 + 80) = a9;
  *(_OWORD *)(v20 + 88) = v35;
  uint64_t v31 = v36;
  *(void *)(v20 + 104) = a11;
  *(void *)(v20 + 112) = v31;
  swift_beginAccess();
  char v32 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
  id v33 = a9;
  v32(v27, v23);
  char v51 = v43;
  sub_1000C67B0();
  swift_endAccess();
  swift_beginAccess();
  char v51 = v44;
  sub_1000C67B0();
  swift_endAccess();
  *(void *)(v20 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing18PersonRowViewModel_contact) = v45;
  *(void *)(v20 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing18PersonRowViewModel_existingContact) = v46;
  *(unsigned char *)(v20 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing18PersonRowViewModel_role) = v47;
  *(unsigned char *)(v20 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing18PersonRowViewModel_isMe) = v48;
  *(unsigned char *)(v20 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing18PersonRowViewModel_isOrgAdmin) = v49;
  *(unsigned char *)(v20 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing18PersonRowViewModel_isRequester) = v50;
  return v20;
}

uint64_t sub_10003B1F0(void *a1)
{
  if (*((unsigned char *)a1 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing18PersonRowViewModel_isOrgAdmin)) {
    return 0;
  }
  int v3 = *((unsigned __int8 *)a1 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing18PersonRowViewModel_isMe);
  int v4 = *((unsigned __int8 *)a1 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing18PersonRowViewModel_role);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  if (v31)
  {
    int v5 = *(unsigned __int8 *)(v31 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing18PersonRowViewModel_role);
    swift_release();
    BOOL v6 = v5 == 0;
  }
  else
  {
    BOOL v6 = 0;
  }
  swift_beginAccess();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  BOOL v29 = v30 != 3 && v6 && v30 == 0;
  uint64_t v7 = *(void *)((char *)a1
                 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing18PersonRowViewModel_existingContact);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  if (v30 != 1)
  {
    int v27 = v4;
    BOOL v26 = v6;
    int v28 = v3;
    uint64_t v8 = a1[13];
    unint64_t v9 = a1[14];
    uint64_t v10 = v9 & 0x2000000000000000;
    uint64_t v11 = HIBYTE(v9) & 0xF;
    uint64_t v12 = v8 & 0xFFFFFFFFFFFFLL;
    if ((v9 & 0x2000000000000000) != 0) {
      uint64_t v13 = HIBYTE(v9) & 0xF;
    }
    else {
      uint64_t v13 = v8 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v14 = v8 & 0xFFFFFFFFFFFFLL;
    uint64_t v15 = HIBYTE(v9) & 0xF;
    uint64_t v16 = v9 & 0x2000000000000000;
    if (!v13)
    {
      unint64_t v17 = a1[12];
      uint64_t v16 = v17 & 0x2000000000000000;
      uint64_t v15 = HIBYTE(v17) & 0xF;
      uint64_t v14 = a1[11] & 0xFFFFFFFFFFFFLL;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (v16) {
      uint64_t v18 = v15;
    }
    else {
      uint64_t v18 = v14;
    }
    if (v18 | v7) {
      return 1;
    }
    if (v28)
    {
      int v19 = v27;
      if (v30) {
        return 0;
      }
    }
    else
    {
      if (!v13)
      {
        unint64_t v22 = a1[12];
        uint64_t v10 = v22 & 0x2000000000000000;
        uint64_t v11 = HIBYTE(v22) & 0xF;
        uint64_t v12 = a1[11] & 0xFFFFFFFFFFFFLL;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v10) {
        uint64_t v23 = v11;
      }
      else {
        uint64_t v23 = v12;
      }
      BOOL v24 = v23 == 0;
      uint64_t result = v23 != 0;
      char v25 = v30;
      if (!v24) {
        char v25 = 1;
      }
      if (v25) {
        return result;
      }
      int v19 = v27;
      if (v27 && v29) {
        return 1;
      }
    }
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1000C67E0();
    swift_release();
    swift_release();
    swift_release();
    if ((v30 & 8) != 0)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      sub_1000C67E0();
      swift_release();
      swift_release();
      swift_release();
    }
    if (v19) {
      int v20 = 1;
    }
    else {
      int v20 = v28;
    }
    return (v26 & v20 & 1) != 0;
  }
  if (v4 && v3 == 1)
  {
    if (!v7) {
      return v30 ^ 1u;
    }
    return 1;
  }
  uint64_t result = 0;
  if (v4) {
    char v21 = v3;
  }
  else {
    char v21 = 1;
  }
  if (v7 && (v21 & 1) != 0) {
    return 1;
  }
  return result;
}

unint64_t sub_10003B5E8(unint64_t result)
{
  if (result >= 4) {
    return 4;
  }
  return result;
}

uint64_t sub_10003B628(uint64_t a1)
{
  uint64_t v2 = sub_100012854((uint64_t *)&unk_10010BDD0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  int v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v30 - v6;
  uint64_t v8 = sub_1000C6530();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  switch(v31)
  {
    case 1:
      goto LABEL_17;
    case 2:
      if (!*(void *)(a1 + 16)) {
        goto LABEL_5;
      }
      char v12 = 8;
      goto LABEL_4;
    case 3:
      if (!*(void *)(a1 + 16)) {
        goto LABEL_5;
      }
      char v12 = 9;
      goto LABEL_4;
    case 4:
      if (!*(void *)(a1 + 16)) {
        goto LABEL_5;
      }
      char v12 = 10;
      goto LABEL_4;
    case 5:
      if (!*(void *)(a1 + 16)) {
        goto LABEL_5;
      }
      char v12 = 11;
      goto LABEL_4;
    case 9:
      swift_getKeyPath();
      swift_getKeyPath();
      sub_1000C67E0();
      swift_release();
      swift_release();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
        swift_getKeyPath();
        swift_getKeyPath();
        swift_retain();
        sub_1000C67E0();
        swift_release();
        swift_release();
        swift_release();
        int v20 = v30;
        unint64_t v21 = sub_10009D40C(v11, v30);
        uint64_t v23 = v22;

        (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v5, v11, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v5, 0, 1, v8);
        LOBYTE(v20) = sub_10009DD3C(v21, v23, (uint64_t)v5);
        swift_bridgeObjectRelease();
        sub_10001326C((uint64_t)v5, (uint64_t *)&unk_10010BDD0);
        switch((char)v20)
        {
          case 1:
            if (!*(void *)(a1 + 16)) {
              goto LABEL_58;
            }
            char v24 = 1;
            goto LABEL_52;
          case 2:
            if (!*(void *)(a1 + 16)) {
              goto LABEL_58;
            }
            char v24 = 2;
            goto LABEL_52;
          case 3:
            if (!*(void *)(a1 + 16)) {
              goto LABEL_58;
            }
            char v24 = 3;
            goto LABEL_52;
          case 4:
            if (!*(void *)(a1 + 16)) {
              goto LABEL_58;
            }
            char v24 = 4;
            goto LABEL_52;
          case 5:
            if (!*(void *)(a1 + 16)) {
              goto LABEL_58;
            }
            char v24 = 5;
            goto LABEL_52;
          case 6:
            if (!*(void *)(a1 + 16)) {
              goto LABEL_58;
            }
            char v24 = 6;
            goto LABEL_52;
          case 7:
            if (!*(void *)(a1 + 16)) {
              goto LABEL_58;
            }
            char v24 = 7;
            goto LABEL_52;
          case 8:
            if (!*(void *)(a1 + 16)) {
              goto LABEL_58;
            }
            char v24 = 8;
            goto LABEL_52;
          case 9:
            if (!*(void *)(a1 + 16)) {
              goto LABEL_58;
            }
            char v24 = 9;
            goto LABEL_52;
          case 10:
            if (!*(void *)(a1 + 16)) {
              goto LABEL_58;
            }
            char v24 = 10;
            goto LABEL_52;
          case 11:
            if (!*(void *)(a1 + 16)) {
              goto LABEL_58;
            }
            char v24 = 11;
            goto LABEL_52;
          case 12:
            if (!*(void *)(a1 + 16)) {
              goto LABEL_58;
            }
            char v24 = 12;
            goto LABEL_52;
          case 13:
            if (!*(void *)(a1 + 16)) {
              goto LABEL_58;
            }
            unint64_t v25 = sub_1000727A0(13);
            if (v28) {
              goto LABEL_53;
            }
            BOOL v29 = *(void (**)(char *, uint64_t))(v9 + 8);
            v9 += 8;
            v29(v11, v8);
            if (*(void *)(a1 + 16)) {
              goto LABEL_6;
            }
            __break(1u);
LABEL_58:
            (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
            goto LABEL_5;
          default:
            if (!*(void *)(a1 + 16)) {
              goto LABEL_58;
            }
            char v24 = 0;
LABEL_52:
            unint64_t v25 = sub_1000727A0(v24);
            if ((v26 & 1) == 0) {
              goto LABEL_58;
            }
LABEL_53:
            uint64_t v16 = *(void *)(*(void *)(a1 + 56) + 16 * v25);
            int v27 = *(void (**)(char *, uint64_t))(v9 + 8);
            swift_bridgeObjectRetain();
            v27(v11, v8);
            return v16;
        }
      }
      sub_10001326C((uint64_t)v7, (uint64_t *)&unk_10010BDD0);
      if (!*(void *)(a1 + 16)) {
        goto LABEL_61;
      }
      unint64_t v13 = sub_1000727A0(1);
      if (v18) {
        goto LABEL_7;
      }
      if (!*(void *)(a1 + 16)) {
        goto LABEL_61;
      }
      unint64_t v13 = sub_1000727A0(13);
      if (v19) {
        goto LABEL_7;
      }
      __break(1u);
LABEL_17:
      if (*(void *)(a1 + 16))
      {
        char v12 = 7;
LABEL_4:
        unint64_t v13 = sub_1000727A0(v12);
        if (v14) {
          goto LABEL_7;
        }
      }
LABEL_5:
      if (!*(void *)(a1 + 16)) {
        goto LABEL_60;
      }
LABEL_6:
      unint64_t v13 = sub_1000727A0(13);
      if ((v15 & 1) == 0)
      {
        __break(1u);
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
        JUMPOUT(0x10003BB80);
      }
LABEL_7:
      uint64_t v16 = *(void *)(*(void *)(a1 + 56) + 16 * v13);
      swift_bridgeObjectRetain();
      return v16;
    default:
      if (!*(void *)(a1 + 16)) {
        goto LABEL_5;
      }
      char v12 = 13;
      goto LABEL_4;
  }
}

uint64_t sub_10003BBE0(char a1)
{
  if (a1)
  {
    if (a1 != 1)
    {
      Swift::UInt v1 = (objc_class *)[self mainBundle];
      v8._countAndFlagsBits = 0x80000001000D6860;
      v2._object = (void *)0x80000001000D6840;
      v2._countAndFlagsBits = 0xD000000000000010;
      v3.value._countAndFlagsBits = 0;
      v3.value._object = 0;
      v4.super.Class isa = v1;
      v5._countAndFlagsBits = 0x646578694DLL;
      v5._object = (void *)0xE500000000000000;
      goto LABEL_7;
    }
    Swift::UInt v1 = (objc_class *)[self mainBundle];
    v8._countAndFlagsBits = 0x80000001000D48E0;
    v2._countAndFlagsBits = 0x6C6E6F2077656956;
    v2._object = (void *)0xE900000000000079;
  }
  else
  {
    Swift::UInt v1 = (objc_class *)[self mainBundle];
    v8._countAndFlagsBits = 0x80000001000D48C0;
    v2._object = (void *)0x80000001000D48A0;
    v2._countAndFlagsBits = 0xD000000000000010;
  }
  v3.value._countAndFlagsBits = 0;
  v3.value._object = 0;
  v4.super.Class isa = v1;
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
LABEL_7:
  uint64_t v6 = sub_1000C6320(v2, v3, v4, v5, v8);

  return v6;
}

uint64_t *sub_10003BD88@<X0>(uint64_t *result@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v2 = *result;
  if ((unint64_t)*result >= 3) {
    LOBYTE(v2) = 3;
  }
  *a2 = v2;
  return result;
}

void sub_10003BDA0(void *a1@<X8>)
{
  *a1 = &off_1000FF260;
}

uint64_t sub_10003BDB8(char a1)
{
  uint64_t v2 = (objc_class *)[self mainBundle];
  if (a1)
  {
    v3._object = (void *)0x80000001000D68A0;
    v7._countAndFlagsBits = 0x80000001000D68A0;
    v3._countAndFlagsBits = 0xD000000000000014;
  }
  else
  {
    v3._countAndFlagsBits = 0xD000000000000016;
    v3._object = (void *)0x80000001000D68C0;
    v7._countAndFlagsBits = 0x80000001000D68C0;
  }
  v8.value._countAndFlagsBits = 0;
  v8.value._object = 0;
  v4.super.Class isa = v2;
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  uint64_t v5 = sub_1000C6320(v3, v8, v4, v9, v7);

  return v5;
}

BOOL sub_10003BE9C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void *sub_10003BEB4@<X0>(void *result@<X0>, char *a2@<X8>)
{
  if (*result == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (*result) {
    char v3 = v2;
  }
  else {
    char v3 = 0;
  }
  *a2 = v3;
  return result;
}

void sub_10003BED4(void *a1@<X8>)
{
  *a1 = &off_1000FF288;
}

uint64_t sub_10003BEE4(char a1)
{
  if (a1)
  {
    if (a1 != 1)
    {
      Swift::UInt v1 = (objc_class *)[self mainBundle];
      v8._countAndFlagsBits = 0x80000001000D4900;
      v2._countAndFlagsBits = 0x61635F646578694DLL;
      v2._object = (void *)0xEF657469766E496ELL;
      v3.value._countAndFlagsBits = 0;
      v3.value._object = 0;
      v4.super.Class isa = v1;
      v5._countAndFlagsBits = 0x646578694DLL;
      v5._object = (void *)0xE500000000000000;
      goto LABEL_7;
    }
    Swift::UInt v1 = (objc_class *)[self mainBundle];
    v2._countAndFlagsBits = 0xD000000000000017;
    v8._countAndFlagsBits = 0x80000001000D67D0;
    v2._object = (void *)0x80000001000D67B0;
  }
  else
  {
    Swift::UInt v1 = (objc_class *)[self mainBundle];
    v8._countAndFlagsBits = 0x80000001000D6820;
    v2._object = (void *)0x80000001000D6800;
    v2._countAndFlagsBits = 0xD000000000000015;
  }
  v3.value._countAndFlagsBits = 0;
  v3.value._object = 0;
  v4.super.Class isa = v1;
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
LABEL_7:
  uint64_t v6 = sub_1000C6320(v2, v3, v4, v5, v8);

  return v6;
}

void sub_10003C090(void *a1@<X8>)
{
  *a1 = &off_1000FF2B0;
}

uint64_t sub_10003C0A0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();

  return swift_release();
}

uint64_t sub_10003C118()
{
  return sub_10001AEE4();
}

uint64_t sub_10003C12C()
{
  return sub_100024420();
}

uint64_t sub_10003C140()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10003C1B4@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_10003C234(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_100012854(&qword_10010B770);
  __chkstk_darwin(v6 - 8);
  Swift::String v8 = &v63[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_100012854(&qword_10010CB70);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v69 = &v63[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  unint64_t v13 = &v63[-v12];
  char v14 = (int *)type metadata accessor for AlertViewModelButton(0);
  uint64_t v68 = *((void *)v14 - 1);
  uint64_t v15 = __chkstk_darwin(v14);
  unint64_t v17 = &v63[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15);
  char v19 = &v63[-v18];
  uint64_t v20 = sub_100012854(&qword_10010BE10);
  __chkstk_darwin(v20 - 8);
  uint64_t v22 = &v63[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  char v23 = *a1;
  if ((*a1 & 1) != 0
    || (swift_getKeyPath(), swift_getKeyPath(), sub_1000C67E0(), swift_release(), swift_release(), v71 != 1))
  {
    sub_1000C75E0();
    uint64_t v59 = sub_1000C7600();
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v8, 0, 1, v59);
    sub_1000C75D0();
    swift_retain();
    uint64_t v60 = sub_1000C75C0();
    uint64_t v61 = swift_allocObject();
    *(void *)(v61 + 16) = v60;
    *(void *)(v61 + 24) = &protocol witness table for MainActor;
    *(void *)(v61 + 32) = a4;
    *(unsigned char *)(v61 + 40) = v23;
    sub_1000BD2A0((uint64_t)v8, (uint64_t)&unk_10010C600, v61);
    return swift_release();
  }
  else
  {
    sub_1000C6D00();
    uint64_t v24 = sub_1000C6FF0();
    uint64_t v26 = v25;
    int v64 = v27;
    uint64_t v29 = v28;
    uint64_t v66 = sub_1000C6930();
    uint64_t v30 = *(void *)(v66 - 8);
    unint64_t v65 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v30 + 56);
    uint64_t v67 = v30 + 56;
    v65(v22, 1, 1, v66);
    uint64_t v31 = swift_allocObject();
    swift_weakInit();
    swift_retain();
    sub_1000C6560();
    char v32 = &v17[v14[5]];
    *(void *)char v32 = v24;
    *((void *)v32 + 1) = v26;
    v32[16] = v64 & 1;
    *((void *)v32 + 3) = v29;
    sub_1000450E8((uint64_t)v22, (uint64_t)&v17[v14[6]]);
    swift_release();
    id v33 = (uint64_t (**)())&v17[v14[7]];
    *id v33 = sub_1000450E0;
    v33[1] = (uint64_t (*)())v31;
    sub_1000C6D00();
    LOWORD(v62._object) = 256;
    uint64_t v34 = sub_1000C6FF0();
    uint64_t v36 = v35;
    char v38 = v37;
    uint64_t v40 = v39;
    uint64_t v41 = &v19[v14[6]];
    sub_1000C6920();
    v65(v41, 0, 1, v66);
    sub_1000C6560();
    uint64_t v42 = &v19[v14[5]];
    *(void *)uint64_t v42 = v34;
    *((void *)v42 + 1) = v36;
    v42[16] = v38 & 1;
    *((void *)v42 + 3) = v40;
    int v43 = &v19[v14[7]];
    void *v43 = 0;
    v43[1] = 0;
    int v44 = (objc_class *)[self mainBundle];
    v62._countAndFlagsBits = 0x80000001000D63E0;
    v72._object = (void *)0x80000001000D63C0;
    v72._countAndFlagsBits = 0xD000000000000016;
    v73.value._countAndFlagsBits = 0;
    v73.value._object = 0;
    v45.super.Class isa = v44;
    v74._countAndFlagsBits = 0;
    v74._object = (void *)0xE000000000000000;
    uint64_t v67 = sub_1000C6320(v72, v73, v45, v74, v62);
    uint64_t v47 = v46;

    uint64_t v48 = sub_10003CEB0();
    uint64_t v50 = v49;
    sub_100012854(&qword_10010BE18);
    uint64_t v51 = *(void *)(v68 + 72);
    unint64_t v52 = (*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80);
    uint64_t v53 = swift_allocObject();
    *(_OWORD *)(v53 + 16) = xmmword_1000CC380;
    uint64_t v54 = v53 + v52;
    sub_100036FC4((uint64_t)v17, v54);
    sub_100036FC4((uint64_t)v19, v54 + v51);
    sub_1000C6560();
    NSString v55 = (int *)type metadata accessor for AlertViewModel(0);
    id v56 = (uint64_t *)&v13[v55[5]];
    *id v56 = v67;
    v56[1] = v47;
    uint64_t v57 = (uint64_t *)&v13[v55[6]];
    *uint64_t v57 = v48;
    v57[1] = v50;
    *(void *)&v13[v55[7]] = v53;
    (*(void (**)(unsigned char *, void, uint64_t, int *))(*((void *)v55 - 1) + 56))(v13, 0, 1, v55);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_100044994((uint64_t)v13, (uint64_t)v69);
    swift_retain();
    sub_1000C67F0();
    sub_10001326C((uint64_t)v13, &qword_10010CB70);
    swift_getKeyPath();
    swift_getKeyPath();
    char v70 = 1;
    swift_retain();
    sub_1000C67F0();
    sub_100037028((uint64_t)v19);
    return sub_100037028((uint64_t)v17);
  }
}

uint64_t sub_10003C8F8()
{
  uint64_t v0 = sub_100012854(&qword_10010B770);
  __chkstk_darwin(v0 - 8);
  Swift::String v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v4 = result;
    sub_1000C75E0();
    uint64_t v5 = sub_1000C7600();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v2, 0, 1, v5);
    sub_1000C75D0();
    swift_retain();
    uint64_t v6 = sub_1000C75C0();
    uint64_t v7 = (void *)swift_allocObject();
    v7[2] = v6;
    v7[3] = &protocol witness table for MainActor;
    v7[4] = v4;
    sub_1000BD2A0((uint64_t)v2, (uint64_t)&unk_10010C610, (uint64_t)v7);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_10003CA4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  v4[3] = sub_1000C75D0();
  v4[4] = sub_1000C75C0();
  uint64_t v6 = sub_1000C7590();
  v4[5] = v6;
  v4[6] = v5;
  return _swift_task_switch(sub_10003CAE8, v6, v5);
}

uint64_t sub_10003CAE8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 104) = 0;
  swift_retain();
  sub_1000C67F0();
  *(void *)(v0 + 56) = sub_1000C75C0();
  uint64_t v2 = sub_1000C7590();
  *(void *)(v0 + 64) = v2;
  *(void *)(v0 + 72) = v1;
  return _swift_task_switch(sub_10003CBC8, v2, v1);
}

uint64_t sub_10003CBC8()
{
  uint64_t v1 = *(void *)(v0[2] + 16);
  v0[10] = *(void *)(v1 + 16);
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[11] = v2;
  void *v2 = v0;
  v2[1] = sub_10003CC88;
  return sub_10001BC30(2, v1, 1);
}

uint64_t sub_10003CC88()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 64);
    uint64_t v4 = *(void *)(v2 + 72);
    uint64_t v5 = sub_10003CE08;
  }
  else
  {
    swift_release();
    uint64_t v3 = *(void *)(v2 + 64);
    uint64_t v4 = *(void *)(v2 + 72);
    uint64_t v5 = sub_10003CDA4;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_10003CDA4()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 48);
  return _swift_task_switch(sub_100045268, v1, v2);
}

uint64_t sub_10003CE08()
{
  uint64_t v1 = v0[12];
  swift_release();
  swift_release();
  sub_10003DD74(v1, 0xD000000000000019, 0x80000001000D6790);
  swift_errorRelease();
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[6];
  return _swift_task_switch(sub_100045268, v2, v3);
}

uint64_t sub_10003CEB0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  if (LOBYTE(v12._object) == 9)
  {
    unint64_t v0 = sub_10003FC04();
    uint64_t v1 = sub_10003B628(v0);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1000C67E0();
    swift_release();
    swift_release();
    swift_release();
    if (v12._object
      && (sub_1000C77D0(), uint64_t v2 = sub_1000C77F0(), swift_bridgeObjectRelease(), v12._object, v2)
      && (sub_100012854(&qword_10010BEA0), swift_dynamicCast()))
    {
      unint64_t object = (unint64_t)v12._object;
      unint64_t v3 = v13;
    }
    else
    {
      unint64_t object = 0;
      unint64_t v3 = 0xE000000000000000;
    }
    uint64_t v5 = HIBYTE(v3) & 0xF;
    if ((v3 & 0x2000000000000000) == 0) {
      uint64_t v5 = object & 0xFFFFFFFFFFFFLL;
    }
    if (v5)
    {
      uint64_t v6 = (objc_class *)[self mainBundle];
      v12._countAndFlagsBits = 0x80000001000D6450;
      v14._unint64_t object = (void *)0x80000001000D6410;
      v14._countAndFlagsBits = 0x100000000000003ELL;
      v16.value._countAndFlagsBits = 0;
      v16.value._unint64_t object = 0;
      v7.super.Class isa = v6;
      v18._countAndFlagsBits = 0;
      v18._unint64_t object = (void *)0xE000000000000000;
      sub_1000C6320(v14, v16, v7, v18, v12);

      sub_100012854((uint64_t *)&unk_10010BD70);
      uint64_t v8 = swift_allocObject();
      *(_OWORD *)(v8 + 16) = xmmword_1000CABA0;
      *(void *)(v8 + 56) = &type metadata for String;
      *(void *)(v8 + 64) = sub_100036368();
      *(void *)(v8 + 32) = object;
      *(void *)(v8 + 40) = v3;
      uint64_t v1 = sub_1000C7410();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v9 = (objc_class *)[self mainBundle];
      v15._countAndFlagsBits = 0xD000000000000032;
      v12._countAndFlagsBits = 0x80000001000D6450;
      v15._unint64_t object = (void *)0x80000001000D6490;
      v17.value._countAndFlagsBits = 0;
      v17.value._unint64_t object = 0;
      v10.super.Class isa = v9;
      v19._countAndFlagsBits = 0;
      v19._unint64_t object = (void *)0xE000000000000000;
      uint64_t v1 = sub_1000C6320(v15, v17, v10, v19, v12);
    }
  }
  return v1;
}

uint64_t sub_10003D1A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(unsigned char *)(v5 + 105) = a5;
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = sub_1000C75D0();
  *(void *)(v5 + 32) = sub_1000C75C0();
  uint64_t v7 = sub_1000C7590();
  *(void *)(v5 + 40) = v7;
  *(void *)(v5 + 48) = v6;
  return _swift_task_switch(sub_10003D248, v7, v6);
}

uint64_t sub_10003D248()
{
  char v1 = *(unsigned char *)(v0 + 105) & 1;
  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 104) = v1;
  swift_retain();
  sub_1000C67F0();
  *(void *)(v0 + 56) = sub_1000C75C0();
  uint64_t v3 = sub_1000C7590();
  *(void *)(v0 + 64) = v3;
  *(void *)(v0 + 72) = v2;
  return _swift_task_switch(sub_10003D330, v3, v2);
}

uint64_t sub_10003D330()
{
  char v1 = *(unsigned char *)(v0 + 105);
  uint64_t v2 = *(void *)(*(void *)(v0 + 16) + 16);
  *(void *)(v0 + 80) = *(void *)(v2 + 16);
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10003D400;
  if (v1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  return sub_10001BC30(v4, v2, 1);
}

uint64_t sub_10003D400()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 64);
    uint64_t v4 = *(void *)(v2 + 72);
    uint64_t v5 = sub_10003D580;
  }
  else
  {
    swift_release();
    uint64_t v3 = *(void *)(v2 + 64);
    uint64_t v4 = *(void *)(v2 + 72);
    uint64_t v5 = sub_10003D51C;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_10003D51C()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 48);
  return _swift_task_switch(sub_10003D628, v1, v2);
}

uint64_t sub_10003D580()
{
  uint64_t v1 = v0[12];
  swift_release();
  swift_release();
  sub_10003DD74(v1, 0xD000000000000019, 0x80000001000D6790);
  swift_errorRelease();
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[6];
  return _swift_task_switch(sub_10003D628, v2, v3);
}

uint64_t sub_10003D628()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10003D688()
{
  return sub_10001AEE4();
}

uint64_t sub_10003D69C()
{
  return sub_100024420();
}

uint64_t sub_10003D6B0()
{
  return sub_10001AEE4();
}

uint64_t sub_10003D6C4()
{
  return sub_100024420();
}

uint64_t sub_10003D6D8()
{
  return sub_10001AEE4();
}

uint64_t sub_10003D6EC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10003D760()
{
  return sub_10001AEE4();
}

uint64_t (*sub_10003D774())()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  if (!v2) {
    return 0;
  }
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = v2;
  *(void *)(v0 + 24) = v3;
  return sub_100045260;
}

uint64_t sub_10003D82C()
{
  return sub_10001AEE4();
}

unsigned char *sub_10003D840@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = 2 - *result;
  return result;
}

unsigned char *sub_10003D854@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = 0x2010003u >> (8 * *result);
  return result;
}

uint64_t sub_10003D870@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t result = sub_10003FB80(v2);
  *a1 = result;
  return result;
}

uint64_t sub_10003D8A0(char a1, char a2, char a3, char a4, uint64_t a5, uint64_t a6)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  char v12 = a4 & 0xFE;
  swift_getKeyPath();
  swift_getKeyPath();
  if (a2 & 1) != 0 && (a3)
  {
    if ((a4 & 0xFE) == 2)
    {
      swift_retain();
      sub_1000C67F0();
      if (a2 & 1) != 0 || (a1)
      {
LABEL_10:
        swift_retain();
        char v14 = 0;
        unint64_t v13 = sub_100044ED0;
        uint64_t v16 = a6;
        goto LABEL_14;
      }
    }
    else
    {
      swift_retain();
      sub_1000C67F0();
    }
    unint64_t v13 = 0;
    uint64_t v16 = 0;
    char v14 = 1;
    goto LABEL_14;
  }
  swift_retain();
  sub_1000C67F0();
  unint64_t v13 = 0;
  char v14 = 1;
  if (v12 != 2)
  {
    uint64_t v16 = 0;
    goto LABEL_14;
  }
  char v15 = a2 | a1;
  uint64_t v16 = 0;
  if (v15) {
    goto LABEL_10;
  }
LABEL_14:
  swift_getKeyPath();
  swift_getKeyPath();
  if ((v14 & 1) == 0)
  {
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = v13;
    *(void *)(v17 + 24) = v16;
  }
  return sub_1000C67F0();
}

uint64_t sub_10003DAA0()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1000C67F0();
    swift_getKeyPath();
    swift_getKeyPath();
    return sub_1000C67F0();
  }
  return result;
}

uint64_t sub_10003DC28(char a1, char a2, unsigned __int8 a3, char a4)
{
  swift_beginAccess();
  if (!swift_weakLoadStrong()) {
    return 0;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000C67F0();
  uint64_t v8 = sub_10003FE98(a1 & 1, a2, a3, a4 & 1);
  swift_release();
  return v8;
}

void *sub_10003DD30@<X0>(void *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *(void *)(*result + 16) > 1uLL
     || *(void *)(result[1] + 16) >= 2uLL
     || *(void *)(result[2] + 16) > 1uLL;
  return result;
}

void sub_10003DD74(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v40 = (char *)a2;
  uint64_t v41 = sub_1000C66D0();
  uint64_t v5 = *(char **)(v41 - 8);
  uint64_t v6 = __chkstk_darwin(v41);
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  NSBundle v10 = (char *)&v38 - v9;
  sub_1000C7440();
  id v11 = objc_allocWithZone((Class)NSError);
  NSString v12 = sub_1000C7400();
  swift_bridgeObjectRelease();
  id v13 = [v11 initWithDomain:v12 code:1 userInfo:0];

  uint64_t v47 = a1;
  id v48 = v13;
  swift_errorRetain();
  sub_100012854((uint64_t *)&unk_10010B010);
  if (swift_dynamicCast())
  {
    char v14 = v43;
    if (v46 == 4)
    {

      if (!v14)
      {
        __break(1u);
        return;
      }
      id v48 = v14;
      id v15 = v14;
      id v16 = [v15 underlyingErrors];
      uint64_t v17 = sub_1000C7540();

      if (*(void *)(v17 + 16))
      {
        uint64_t v39 = v8;
        swift_errorRetain();
        swift_bridgeObjectRelease();
        id v13 = (id)sub_1000C6480();
        uint64_t v8 = v39;
        swift_errorRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        id v48 = v13;
      }
      else
      {
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        id v13 = v15;
      }
    }
    else
    {
      sub_10002376C(v42[0], v42[1], v43, v44, v45, v46);
    }
  }
  swift_errorRelease();
  if (swift_unknownObjectWeakLoadStrong())
  {
    sub_1000C66B0();
    swift_bridgeObjectRetain_n();
    id v18 = v13;
    Swift::String v19 = sub_1000C66C0();
    os_log_type_t v20 = sub_1000C7670();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      v42[0] = v38;
      *(_DWORD *)uint64_t v21 = 136315394;
      uint64_t v39 = v5;
      swift_bridgeObjectRetain();
      uint64_t v47 = sub_1000720D0((uint64_t)v40, a3, v42);
      sub_1000C7850();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v21 + 12) = 2080;
      id v22 = v18;
      id v23 = [v22 description];
      uint64_t v24 = sub_1000C7440();
      uint64_t v40 = v10;
      uint64_t v25 = v24;
      unint64_t v27 = v26;

      uint64_t v47 = sub_1000720D0(v25, v27, v42);
      sub_1000C7850();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "%s; exiting with final error %s", (uint8_t *)v21, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*((void (**)(char *, uint64_t))v39 + 1))(v40, v41);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*((void (**)(char *, uint64_t))v5 + 1))(v10, v41);
    }
    swift_beginAccess();
    id v37 = v48;
    sub_10000E170((uint64_t)v37, 1u);
    swift_unknownObjectRelease();
  }
  else
  {
    sub_1000C66B0();
    swift_bridgeObjectRetain_n();
    id v28 = v13;
    uint64_t v29 = sub_1000C66C0();
    os_log_type_t v30 = sub_1000C7670();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      v42[0] = v38;
      *(_DWORD *)uint64_t v31 = 136315394;
      uint64_t v39 = v5;
      swift_bridgeObjectRetain();
      uint64_t v47 = sub_1000720D0((uint64_t)v40, a3, v42);
      sub_1000C7850();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v31 + 12) = 2080;
      id v32 = v28;
      id v33 = [v32 description];
      uint64_t v34 = sub_1000C7440();
      unint64_t v36 = v35;

      uint64_t v47 = sub_1000720D0(v34, v36, v42);
      sub_1000C7850();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "%s; unable to exit with final error %s",
        (uint8_t *)v31,
        0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*((void (**)(char *, uint64_t))v39 + 1))(v8, v41);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      (*((void (**)(char *, uint64_t))v5 + 1))(v8, v41);
    }
  }
}

uint64_t sub_10003E430(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a5;
  *(unsigned char *)(v5 + 64) = a4;
  sub_1000C75D0();
  *(void *)(v5 + 24) = sub_1000C75C0();
  uint64_t v7 = sub_1000C7590();
  *(void *)(v5 + 32) = v7;
  *(void *)(v5 + 40) = v6;
  return _swift_task_switch(sub_10003E4CC, v7, v6);
}

uint64_t sub_10003E4CC()
{
  char v1 = *(unsigned char *)(v0 + 64) == 0;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v2;
  void *v2 = v0;
  v2[1] = sub_10003E570;
  return sub_100052938(v1);
}

uint64_t sub_10003E570()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 56) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 40);
  uint64_t v4 = *(void *)(v2 + 32);
  if (v0) {
    uint64_t v5 = sub_10003E70C;
  }
  else {
    uint64_t v5 = sub_10003E6AC;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10003E6AC()
{
  swift_release();
  char v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10003E70C()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_release();
  sub_10003DD74(v1, 0xD000000000000029, 0x80000001000D6390);
  swift_errorRelease();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10003E798(uint64_t a1)
{
  uint64_t v2 = sub_100012854(&qword_10010B770);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000C75E0();
  uint64_t v5 = sub_1000C7600();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 0, 1, v5);
  sub_1000C75D0();
  swift_retain();
  uint64_t v6 = sub_1000C75C0();
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = v6;
  v7[3] = &protocol witness table for MainActor;
  v7[4] = a1;
  sub_1000BD2A0((uint64_t)v4, (uint64_t)&unk_10010C5D8, (uint64_t)v7);
  return swift_release();
}

uint64_t sub_10003E8B8()
{
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing25GlobalPermissionViewModel__showingAlert;
  uint64_t v2 = sub_100012854((uint64_t *)&unk_10010BB70);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing25GlobalPermissionViewModel__showingAlertBool;
  uint64_t v4 = sub_100012854(&qword_10010BB60);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(v3, v4);
  uint64_t v6 = v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing25GlobalPermissionViewModel__whoCanAccessPermissions;
  uint64_t v7 = sub_100012854(&qword_10010C2F8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = v0
     + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing25GlobalPermissionViewModel__whoCanAccessPermissionSelected;
  uint64_t v9 = sub_100012854(&qword_10010C300);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  uint64_t v10 = v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing25GlobalPermissionViewModel__readWritePermissions;
  uint64_t v11 = sub_100012854(&qword_10010C308);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  uint64_t v12 = v0
      + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing25GlobalPermissionViewModel__readWritePermissionSelected;
  uint64_t v13 = sub_100012854(&qword_10010C310);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  uint64_t v14 = v0
      + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing25GlobalPermissionViewModel__whoCanAddPeoplePermissions;
  uint64_t v15 = sub_100012854(&qword_10010C318);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  uint64_t v16 = v0
      + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing25GlobalPermissionViewModel__whoCanAddPeoplePermissionSelected;
  uint64_t v17 = sub_100012854((uint64_t *)&unk_10010C320);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
  v5(v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing25GlobalPermissionViewModel__anyoneCanAddPeople, v4);
  uint64_t v18 = v0
      + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing25GlobalPermissionViewModel__localizedPermissionSummary;
  uint64_t v19 = sub_100012854(&qword_10010CEB0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
  v5(v0+ OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing25GlobalPermissionViewModel__shouldShowSharingOptionsView, v4);
  uint64_t v20 = v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing25GlobalPermissionViewModel__didTapCopyLink;
  uint64_t v21 = sub_100012854(&qword_10010C330);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
  v5(v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing25GlobalPermissionViewModel__savingInProgress, v4);
  return v0;
}

uint64_t sub_10003EC20()
{
  sub_10003E8B8();

  return swift_deallocClassInstance();
}

uint64_t sub_10003EC78()
{
  return type metadata accessor for GlobalPermissionViewModel();
}

uint64_t type metadata accessor for GlobalPermissionViewModel()
{
  uint64_t result = qword_10010C150;
  if (!qword_10010C150) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10003ECCC()
{
  sub_1000321A0(319, (unint64_t *)&unk_10010B9C0, &qword_10010CB70);
  if (v0 <= 0x3F)
  {
    sub_10001E1A4(319, (unint64_t *)&qword_10010B9B0);
    if (v1 <= 0x3F)
    {
      sub_1000321A0(319, &qword_10010C168, &qword_10010C170);
      if (v2 <= 0x3F)
      {
        sub_10001E1A4(319, &qword_10010C178);
        if (v3 <= 0x3F)
        {
          sub_1000321A0(319, (unint64_t *)&qword_10010C180, &qword_10010C188);
          if (v4 <= 0x3F)
          {
            sub_10001E1A4(319, &qword_10010C190);
            if (v5 <= 0x3F)
            {
              sub_1000321A0(319, &qword_10010C198, &qword_10010C1A0);
              if (v6 <= 0x3F)
              {
                sub_10001E1A4(319, (unint64_t *)&unk_10010C1A8);
                if (v7 <= 0x3F)
                {
                  sub_10001E1A4(319, &qword_10010B9D0);
                  if (v8 <= 0x3F)
                  {
                    sub_1000321A0(319, &qword_10010C1B8, (uint64_t *)&unk_10010C1C0);
                    if (v9 <= 0x3F) {
                      swift_updateClassMetadata2();
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

ValueMetadata *type metadata accessor for GlobalPermissionViewModel.WhoCanAddPeople()
{
  return &type metadata for GlobalPermissionViewModel.WhoCanAddPeople;
}

uint64_t getEnumTagSinglePayload for NetworkStatus(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for GlobalPermissionViewModel.WhoCanAccess(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10003F1A4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_10003F1CC(unsigned char *result, char a2)
{
  *uint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for GlobalPermissionViewModel.WhoCanAccess()
{
  return &type metadata for GlobalPermissionViewModel.WhoCanAccess;
}

uint64_t getEnumTagSinglePayload for SharingMode(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s37com_apple_CloudSharingUI_CloudSharing25GlobalPermissionViewModelC15WhoCanAddPeopleOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10003F344);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GlobalPermissionViewModel.CanMakeChangesOrViewOnly()
{
  return &type metadata for GlobalPermissionViewModel.CanMakeChangesOrViewOnly;
}

uint64_t sub_10003F37C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10003F5D0(a1, a2, a3, (uint64_t (*)(void))sub_10003F3A8, (uint64_t (*)(void))sub_10003F3FC);
}

unint64_t sub_10003F3A8()
{
  unint64_t result = qword_10010C2B0;
  if (!qword_10010C2B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010C2B0);
  }
  return result;
}

unint64_t sub_10003F3FC()
{
  unint64_t result = qword_10010C2B8;
  if (!qword_10010C2B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010C2B8);
  }
  return result;
}

uint64_t sub_10003F454()
{
  return sub_10001E454(&qword_10010C2C0, &qword_10010C188);
}

uint64_t sub_10003F490(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10003F5D0(a1, a2, a3, (uint64_t (*)(void))sub_10003F4BC, (uint64_t (*)(void))sub_10003F510);
}

unint64_t sub_10003F4BC()
{
  unint64_t result = qword_10010C2C8;
  if (!qword_10010C2C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010C2C8);
  }
  return result;
}

unint64_t sub_10003F510()
{
  unint64_t result = qword_10010C2D0;
  if (!qword_10010C2D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010C2D0);
  }
  return result;
}

uint64_t sub_10003F568()
{
  return sub_10001E454(&qword_10010C2D8, &qword_10010C170);
}

uint64_t sub_10003F5A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10003F5D0(a1, a2, a3, (uint64_t (*)(void))sub_10003F60C, (uint64_t (*)(void))sub_10003F660);
}

uint64_t sub_10003F5D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  *(void *)(a1 + 8) = a4();
  uint64_t result = a5();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_10003F60C()
{
  unint64_t result = qword_10010C2E0;
  if (!qword_10010C2E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010C2E0);
  }
  return result;
}

unint64_t sub_10003F660()
{
  unint64_t result = qword_10010C2E8;
  if (!qword_10010C2E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010C2E8);
  }
  return result;
}

uint64_t sub_10003F6B8()
{
  return sub_10001E454(&qword_10010C2F0, &qword_10010C1A0);
}

uint64_t sub_10003F6F4@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_10003F774()
{
  return sub_1000C67F0();
}

double sub_10003F7E8@<D0>(_OWORD *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_10003F868(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  if (*a1)
  {
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v1;
    *(void *)(v3 + 24) = v2;
    unsigned int v4 = sub_100044F94;
  }
  else
  {
    unsigned int v4 = 0;
    uint64_t v3 = 0;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  if (v1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v4;
    *(void *)(v5 + 24) = v3;
  }
  sub_1000236E0(v1);
  swift_retain();
  return sub_1000C67F0();
}

uint64_t sub_10003F974(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_10003F99C@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_10003FA1C()
{
  return sub_1000C67F0();
}

uint64_t sub_10003FA90@<X0>(void *a1@<X8>)
{
  return sub_100011168(a1);
}

uint64_t sub_10003FAA4()
{
  return sub_10003FB08();
}

uint64_t sub_10003FAB8@<X0>(void *a1@<X8>)
{
  return sub_100011168(a1);
}

uint64_t sub_10003FACC()
{
  return sub_10003FB08();
}

uint64_t sub_10003FAE0@<X0>(void *a1@<X8>)
{
  return sub_100011168(a1);
}

uint64_t sub_10003FAF4()
{
  return sub_10003FB08();
}

uint64_t sub_10003FB08()
{
  return sub_1000C67F0();
}

uint64_t sub_10003FB80(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  if (!v1)
  {
    __break(1u);
    goto LABEL_13;
  }
  int v2 = *(unsigned __int8 *)(result + 32);
  if (v2 == 1)
  {
    if (v1 != 1)
    {
      if (*(unsigned char *)(result + 33) == 1)
      {
        swift_bridgeObjectRelease();
        return 0;
      }
      int v3 = 0;
      goto LABEL_9;
    }
LABEL_14:
    __break(1u);
    return result;
  }
  if (v1 == 1)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  int v3 = *(unsigned __int8 *)(result + 33);
LABEL_9:
  swift_bridgeObjectRelease();
  if (v2 != v3) {
    return 2;
  }
  else {
    return 1;
  }
}

unint64_t sub_10003FC04()
{
  sub_100012854((uint64_t *)&unk_10010C5E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1000CD6C0;
  *(unsigned char *)(inited + 32) = 0;
  uint64_t v1 = self;
  int v2 = (objc_class *)[v1 mainBundle];
  v33._countAndFlagsBits = 0xD000000000000072;
  v28._countAndFlagsBits = 0x80000001000D6550;
  v33._unint64_t object = (void *)0x80000001000D64D0;
  v38.value._countAndFlagsBits = 0;
  v38.value._unint64_t object = 0;
  v3.super.Class isa = v2;
  v43._countAndFlagsBits = 0;
  v43._unint64_t object = (void *)0xE000000000000000;
  uint64_t v4 = sub_1000C6320(v33, v38, v3, v43, v28);
  uint64_t v6 = v5;

  *(void *)(inited + 40) = v4;
  *(void *)(inited + 48) = v6;
  *(unsigned char *)(inited + 56) = 1;
  BOOL v7 = (objc_class *)[v1 mainBundle];
  v34._countAndFlagsBits = 0xD00000000000006DLL;
  v29._countAndFlagsBits = 0x80000001000D6550;
  v34._unint64_t object = (void *)0x80000001000D65C0;
  v39.value._countAndFlagsBits = 0;
  v39.value._unint64_t object = 0;
  v8.super.Class isa = v7;
  v44._countAndFlagsBits = 0;
  v44._unint64_t object = (void *)0xE000000000000000;
  uint64_t v9 = sub_1000C6320(v34, v39, v8, v44, v29);
  uint64_t v11 = v10;

  *(void *)(inited + 64) = v9;
  *(void *)(inited + 72) = v11;
  *(unsigned char *)(inited + 80) = 2;
  uint64_t v12 = (objc_class *)[v1 mainBundle];
  v35._countAndFlagsBits = 0xD000000000000070;
  v30._countAndFlagsBits = 0x80000001000D6550;
  v35._unint64_t object = (void *)0x80000001000D6630;
  v40.value._countAndFlagsBits = 0;
  v40.value._unint64_t object = 0;
  v13.super.Class isa = v12;
  v45._countAndFlagsBits = 0;
  v45._unint64_t object = (void *)0xE000000000000000;
  uint64_t v14 = sub_1000C6320(v35, v40, v13, v45, v30);
  uint64_t v16 = v15;

  *(void *)(inited + 88) = v14;
  *(void *)(inited + 96) = v16;
  *(unsigned char *)(inited + 104) = 3;
  uint64_t v17 = (objc_class *)[v1 mainBundle];
  v36._countAndFlagsBits = 0xD000000000000071;
  v31._countAndFlagsBits = 0x80000001000D6550;
  v36._unint64_t object = (void *)0x80000001000D66B0;
  v41.value._countAndFlagsBits = 0;
  v41.value._unint64_t object = 0;
  v18.super.Class isa = v17;
  v46._countAndFlagsBits = 0;
  v46._unint64_t object = (void *)0xE000000000000000;
  uint64_t v19 = sub_1000C6320(v36, v41, v18, v46, v31);
  uint64_t v21 = v20;

  *(void *)(inited + 112) = v19;
  *(void *)(inited + 120) = v21;
  *(unsigned char *)(inited + 128) = 13;
  id v22 = (objc_class *)[v1 mainBundle];
  v37._countAndFlagsBits = 0xD000000000000059;
  v32._countAndFlagsBits = 0x80000001000D6550;
  v37._unint64_t object = (void *)0x80000001000D6730;
  v42.value._countAndFlagsBits = 0;
  v42.value._unint64_t object = 0;
  v23.super.Class isa = v22;
  v47._countAndFlagsBits = 0;
  v47._unint64_t object = (void *)0xE000000000000000;
  uint64_t v24 = sub_1000C6320(v37, v42, v23, v47, v32);
  uint64_t v26 = v25;

  *(void *)(inited + 136) = v24;
  *(void *)(inited + 144) = v26;
  return sub_10004E6A4(inited);
}

uint64_t sub_10003FE98(char a1, char a2, unsigned __int8 a3, char a4)
{
  if (a1)
  {
    if (a2)
    {
      if (a2 == 1)
      {
        uint64_t v4 = (objc_class *)[self mainBundle];
        v5._countAndFlagsBits = 0xD00000000000001ELL;
        v66._countAndFlagsBits = 0x80000001000D5B90;
        v5._unint64_t object = (void *)0x80000001000D5B70;
        v7.value._countAndFlagsBits = 0;
        v7.value._unint64_t object = 0;
        v8.super.Class isa = v4;
        v9._countAndFlagsBits = 0;
        v9._unint64_t object = (void *)0xE000000000000000;
LABEL_27:
        uint64_t v11 = sub_1000C6320(v5, v7, v8, v9, v66);

        return v11;
      }
      return 0;
    }
    uint64_t v4 = (objc_class *)[self mainBundle];
    v5._countAndFlagsBits = 0xD000000000000026;
    v66._countAndFlagsBits = 0x80000001000D5BE0;
    uint64_t v6 = "Anyone with the link can make changes.";
LABEL_26:
    v5._unint64_t object = (void *)((unint64_t)(v6 - 32) | 0x8000000000000000);
    v7.value._countAndFlagsBits = 0;
    v7.value._unint64_t object = 0;
    v8.super.Class isa = v4;
    v9._countAndFlagsBits = 0;
    v9._unint64_t object = (void *)0xE000000000000000;
    goto LABEL_27;
  }
  if (a2)
  {
    if (a2 == 1)
    {
      uint64_t v4 = (objc_class *)[self mainBundle];
      v5._countAndFlagsBits = 0xD00000000000001DLL;
      v66._countAndFlagsBits = 0x80000001000D5D40;
      uint64_t v6 = "Invited people can view only.";
    }
    else
    {
      unsigned int v10 = a3;
      uint64_t v4 = (objc_class *)[self mainBundle];
      if (v10 > 1)
      {
        v5._countAndFlagsBits = 0xD000000000000023;
        v66._countAndFlagsBits = 0x80000001000D5C30;
        uint64_t v6 = "Some invited people can add others.";
      }
      else
      {
        v5._countAndFlagsBits = 0xD000000000000034;
        v66._countAndFlagsBits = 0x80000001000D5CD0;
        uint64_t v6 = "Some invited people can make changes and add others.";
      }
    }
    goto LABEL_26;
  }
  if (!a3)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1000C67E0();
    swift_release();
    swift_release();
    if ((v76 & 0xFE) == 8 || (v76 | 4) != 7)
    {
      uint64_t v4 = (objc_class *)[self mainBundle];
      v5._countAndFlagsBits = 0xD000000000000032;
      v66._countAndFlagsBits = 0x80000001000D6270;
      uint64_t v6 = "People you invite can make changes and add others.";
    }
    else
    {
      uint64_t v4 = (objc_class *)[self mainBundle];
      v5._countAndFlagsBits = 0xD000000000000021;
      v66._countAndFlagsBits = 0x80000001000D6310;
      uint64_t v6 = "People you invite can add others.";
    }
    goto LABEL_26;
  }
  if (a3 != 1)
  {
    uint64_t v4 = (objc_class *)[self mainBundle];
    v5._countAndFlagsBits = 0xD00000000000002FLL;
    v66._countAndFlagsBits = 0x80000001000D5DB0;
    uint64_t v6 = "Invited people can make changes and add others.";
    goto LABEL_26;
  }
  if (a4)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1000C67E0();
    swift_release();
    swift_release();
    if ((v76 & 0xFE) == 8 || (v76 | 4) != 7)
    {
      uint64_t v4 = (objc_class *)[self mainBundle];
      v5._countAndFlagsBits = 0xD000000000000023;
      v66._countAndFlagsBits = 0x80000001000D6110;
      uint64_t v6 = "People you invite can make changes.";
    }
    else
    {
      uint64_t v4 = (objc_class *)[self mainBundle];
      v5._countAndFlagsBits = 0xD000000000000023;
      v66._countAndFlagsBits = 0x80000001000D61B0;
      uint64_t v6 = "Only people you invite have access.";
    }
    goto LABEL_26;
  }
  sub_100012854((uint64_t *)&unk_10010C5E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1000CC3A0;
  *(unsigned char *)(inited + 32) = 7;
  NSBundle v13 = self;
  uint64_t v14 = (objc_class *)[v13 mainBundle];
  v66._countAndFlagsBits = 0x80000001000D5E90;
  v77._unint64_t object = (void *)0x80000001000D5E50;
  v77._countAndFlagsBits = 0xD000000000000030;
  v87.value._countAndFlagsBits = 0;
  v87.value._unint64_t object = 0;
  v15.super.Class isa = v14;
  v97._countAndFlagsBits = 0;
  v97._unint64_t object = (void *)0xE000000000000000;
  uint64_t v16 = sub_1000C6320(v77, v87, v15, v97, v66);
  uint64_t v18 = v17;

  *(void *)(inited + 40) = v16;
  *(void *)(inited + 48) = v18;
  *(unsigned char *)(inited + 56) = 8;
  uint64_t v19 = (objc_class *)[v13 mainBundle];
  v78._countAndFlagsBits = 0xD000000000000039;
  v67._countAndFlagsBits = 0x80000001000D5E90;
  v78._unint64_t object = (void *)0x80000001000D5EE0;
  v88.value._countAndFlagsBits = 0;
  v88.value._unint64_t object = 0;
  v20.super.Class isa = v19;
  v98._countAndFlagsBits = 0;
  v98._unint64_t object = (void *)0xE000000000000000;
  uint64_t v21 = sub_1000C6320(v78, v88, v20, v98, v67);
  uint64_t v23 = v22;

  *(void *)(inited + 64) = v21;
  *(void *)(inited + 72) = v23;
  *(unsigned char *)(inited + 80) = 9;
  uint64_t v24 = (objc_class *)[v13 mainBundle];
  v68._countAndFlagsBits = 0x80000001000D5E90;
  v79._unint64_t object = (void *)0x80000001000D5F20;
  v79._countAndFlagsBits = 0xD000000000000030;
  v89.value._countAndFlagsBits = 0;
  v89.value._unint64_t object = 0;
  v25.super.Class isa = v24;
  v99._countAndFlagsBits = 0;
  v99._unint64_t object = (void *)0xE000000000000000;
  uint64_t v26 = sub_1000C6320(v79, v89, v25, v99, v68);
  uint64_t v28 = v27;

  *(void *)(inited + 88) = v26;
  *(void *)(inited + 96) = v28;
  *(unsigned char *)(inited + 104) = 10;
  Swift::String v29 = (objc_class *)[v13 mainBundle];
  v80._countAndFlagsBits = 0xD000000000000035;
  v69._countAndFlagsBits = 0x80000001000D5E90;
  v80._unint64_t object = (void *)0x80000001000D5F60;
  v90.value._countAndFlagsBits = 0;
  v90.value._unint64_t object = 0;
  v30.super.Class isa = v29;
  v100._countAndFlagsBits = 0;
  v100._unint64_t object = (void *)0xE000000000000000;
  uint64_t v31 = sub_1000C6320(v80, v90, v30, v100, v69);
  uint64_t v33 = v32;

  *(void *)(inited + 112) = v31;
  *(void *)(inited + 120) = v33;
  *(unsigned char *)(inited + 128) = 11;
  Swift::String v34 = (objc_class *)[v13 mainBundle];
  v81._countAndFlagsBits = 0xD000000000000031;
  v70._countAndFlagsBits = 0x80000001000D5E90;
  v81._unint64_t object = (void *)0x80000001000D5FA0;
  v91.value._countAndFlagsBits = 0;
  v91.value._unint64_t object = 0;
  v35.super.Class isa = v34;
  v101._countAndFlagsBits = 0;
  v101._unint64_t object = (void *)0xE000000000000000;
  uint64_t v36 = sub_1000C6320(v81, v91, v35, v101, v70);
  uint64_t v38 = v37;

  *(void *)(inited + 136) = v36;
  *(void *)(inited + 144) = v38;
  *(unsigned char *)(inited + 152) = 0;
  Swift::String_optional v39 = (objc_class *)[v13 mainBundle];
  v71._countAndFlagsBits = 0x80000001000D5E90;
  v82._countAndFlagsBits = 0xD000000000000039;
  v82._unint64_t object = (void *)0x80000001000D5EE0;
  v92.value._countAndFlagsBits = 0;
  v92.value._unint64_t object = 0;
  v40.super.Class isa = v39;
  v102._countAndFlagsBits = 0;
  v102._unint64_t object = (void *)0xE000000000000000;
  uint64_t v41 = sub_1000C6320(v82, v92, v40, v102, v71);
  uint64_t v43 = v42;

  *(void *)(inited + 160) = v41;
  *(void *)(inited + 168) = v43;
  *(unsigned char *)(inited + 176) = 1;
  Swift::String v44 = (objc_class *)[v13 mainBundle];
  v83._countAndFlagsBits = 0xD000000000000034;
  v72._countAndFlagsBits = 0x80000001000D5E90;
  v83._unint64_t object = (void *)0x80000001000D5FE0;
  v93.value._countAndFlagsBits = 0;
  v93.value._unint64_t object = 0;
  v45.super.Class isa = v44;
  v103._countAndFlagsBits = 0;
  v103._unint64_t object = (void *)0xE000000000000000;
  uint64_t v46 = sub_1000C6320(v83, v93, v45, v103, v72);
  uint64_t v48 = v47;

  *(void *)(inited + 184) = v46;
  *(void *)(inited + 192) = v48;
  *(unsigned char *)(inited + 200) = 2;
  uint64_t v49 = (objc_class *)[v13 mainBundle];
  v84._countAndFlagsBits = 0xD000000000000037;
  v73._countAndFlagsBits = 0x80000001000D5E90;
  v84._unint64_t object = (void *)0x80000001000D6020;
  v94.value._countAndFlagsBits = 0;
  v94.value._unint64_t object = 0;
  v50.super.Class isa = v49;
  v104._countAndFlagsBits = 0;
  v104._unint64_t object = (void *)0xE000000000000000;
  uint64_t v51 = sub_1000C6320(v84, v94, v50, v104, v73);
  uint64_t v53 = v52;

  *(void *)(inited + 208) = v51;
  *(void *)(inited + 216) = v53;
  *(unsigned char *)(inited + 224) = 3;
  uint64_t v54 = (objc_class *)[v13 mainBundle];
  v85._countAndFlagsBits = 0xD000000000000038;
  v74._countAndFlagsBits = 0x80000001000D5E90;
  v85._unint64_t object = (void *)0x80000001000D6060;
  v95.value._countAndFlagsBits = 0;
  v95.value._unint64_t object = 0;
  v55.super.Class isa = v54;
  v105._countAndFlagsBits = 0;
  v105._unint64_t object = (void *)0xE000000000000000;
  uint64_t v56 = sub_1000C6320(v85, v95, v55, v105, v74);
  uint64_t v58 = v57;

  *(void *)(inited + 232) = v56;
  *(void *)(inited + 240) = v58;
  *(unsigned char *)(inited + 248) = 13;
  uint64_t v59 = (objc_class *)[v13 mainBundle];
  v75._countAndFlagsBits = 0x80000001000D5E90;
  v86._unint64_t object = (void *)0x80000001000D60A0;
  v86._countAndFlagsBits = 0xD000000000000030;
  v96.value._countAndFlagsBits = 0;
  v96.value._unint64_t object = 0;
  v60.super.Class isa = v59;
  v106._countAndFlagsBits = 0;
  v106._unint64_t object = (void *)0xE000000000000000;
  uint64_t v61 = sub_1000C6320(v86, v96, v60, v106, v75);
  uint64_t v63 = v62;

  *(void *)(inited + 256) = v61;
  *(void *)(inited + 264) = v63;
  unint64_t v64 = sub_10004E6A4(inited);
  uint64_t v11 = sub_10003B628(v64);
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1000407F0(uint64_t a1)
{
  uint64_t v359 = a1;
  uint64_t v353 = *v1;
  uint64_t v316 = sub_100012854(&qword_10010C338);
  uint64_t v315 = *(void *)(v316 - 8);
  __chkstk_darwin(v316);
  v314 = (char *)v228 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100012854(&qword_10010C340);
  __chkstk_darwin(v3);
  Swift::String v5 = (char *)v228 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v303 = sub_100012854(&qword_10010C348);
  uint64_t v302 = *(void *)(v303 - 8);
  __chkstk_darwin(v303);
  Swift::String v301 = (char *)v228 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v313 = sub_100012854(&qword_10010C350);
  __chkstk_darwin(v313);
  v310 = (char *)v228 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v300 = sub_100012854(&qword_10010C358);
  uint64_t v299 = *(void *)(v300 - 8);
  __chkstk_darwin(v300);
  Swift::String_optional v298 = (char *)v228 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v306 = sub_100012854(&qword_10010C360);
  __chkstk_darwin(v306);
  v304 = (char *)v228 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v308 = sub_100012854(&qword_10010C368);
  uint64_t v307 = *(void *)(v308 - 8);
  __chkstk_darwin(v308);
  v305 = (char *)v228 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v312 = sub_100012854((uint64_t *)&unk_10010C370);
  uint64_t v311 = *(void *)(v312 - 8);
  __chkstk_darwin(v312);
  v309 = (char *)v228 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v297 = sub_100012854(&qword_10010BC28);
  uint64_t v296 = *(void *)(v297 - 8);
  uint64_t v12 = __chkstk_darwin(v297);
  uint64_t v294 = (char *)v228 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  Swift::String v295 = (char *)v228 - v14;
  uint64_t v286 = sub_100012854(&qword_10010C380);
  __chkstk_darwin(v286);
  uint64_t v283 = (char *)v228 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v282 = sub_100012854(&qword_10010C388);
  __chkstk_darwin(v282);
  uint64_t v281 = (char *)v228 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v280 = sub_100012854(&qword_10010C390);
  __chkstk_darwin(v280);
  v279 = (char *)v228 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v287 = sub_100012854(&qword_10010C398);
  uint64_t v285 = *(void *)(v287 - 8);
  __chkstk_darwin(v287);
  v284 = (char *)v228 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v290 = sub_100012854(&qword_10010C3A0);
  uint64_t v289 = *(void *)(v290 - 8);
  __chkstk_darwin(v290);
  uint64_t v288 = (char *)v228 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v293 = sub_100012854(&qword_10010C3A8);
  uint64_t v292 = *(void *)(v293 - 8);
  __chkstk_darwin(v293);
  v291 = (char *)v228 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v270 = sub_100012854((uint64_t *)&unk_10010C3B0);
  uint64_t v269 = *(void *)(v270 - 8);
  __chkstk_darwin(v270);
  v268 = (char *)v228 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v272 = sub_100012854(&qword_10010B6B8);
  __chkstk_darwin(v272);
  uint64_t v271 = (char *)v228 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v275 = sub_100012854(&qword_10010C3C0);
  uint64_t v274 = *(void *)(v275 - 8);
  __chkstk_darwin(v275);
  v273 = (char *)v228 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v278 = sub_100012854(&qword_10010C3C8);
  uint64_t v277 = *(void *)(v278 - 8);
  __chkstk_darwin(v278);
  uint64_t v276 = (char *)v228 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_100012854((uint64_t *)&unk_10010BBD0);
  __chkstk_darwin(v25 - 8);
  v342 = (char *)v228 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v338 = sub_100012854((uint64_t *)&unk_10010CFC0);
  uint64_t v349 = *(void *)(v338 - 8);
  __chkstk_darwin(v338);
  v336 = (char *)v228 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v339 = sub_100012854((uint64_t *)&unk_10010C3D0);
  __chkstk_darwin(v339);
  v337 = (char *)v228 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v351 = sub_100012854(&qword_10010BC20);
  uint64_t v29 = __chkstk_darwin(v351);
  v328 = (char *)v228 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __chkstk_darwin(v29);
  v348 = (char *)v228 - v32;
  __chkstk_darwin(v31);
  v354 = (char *)v228 - v33;
  v321 = (void *)sub_100012854(&qword_10010C3E0);
  uint64_t v264 = *(v321 - 1);
  __chkstk_darwin(v321);
  uint64_t v263 = (char *)v228 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v267 = sub_100012854(&qword_10010C3E8);
  uint64_t v266 = *(void *)(v267 - 8);
  __chkstk_darwin(v267);
  v265 = (char *)v228 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_100012854((uint64_t *)&unk_10010C3F0);
  uint64_t v357 = *(void *)(v36 - 8);
  uint64_t v358 = v36;
  uint64_t v37 = __chkstk_darwin(v36);
  v343 = (char *)v228 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  v352 = (char *)v228 - v39;
  unint64_t v322 = sub_100012854((uint64_t *)&unk_10010BC00);
  uint64_t v320 = *(void *)(v322 - 8);
  __chkstk_darwin(v322);
  v258 = (char *)v228 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v324 = (void *)sub_100012854((uint64_t *)&unk_10010C400);
  unint64_t v323 = *(v324 - 1);
  __chkstk_darwin(v324);
  v319 = (char *)v228 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v327 = sub_100012854((uint64_t *)&unk_10010BC10);
  uint64_t v326 = *(void *)(v327 - 8);
  __chkstk_darwin(v327);
  v325 = (char *)v228 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v341 = sub_100012854(&qword_10010C410);
  uint64_t v350 = *(void *)(v341 - 8);
  uint64_t v43 = __chkstk_darwin(v341);
  uint64_t v257 = (char *)v228 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v43);
  v340 = (char *)v228 - v45;
  uint64_t v251 = sub_100012854(&qword_10010C418);
  unint64_t v250 = *(void *)(v251 - 8);
  __chkstk_darwin(v251);
  uint64_t v248 = (char *)v228 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v253 = sub_100012854(&qword_10010C420);
  uint64_t v252 = *(void *)(v253 - 8);
  __chkstk_darwin(v253);
  v249 = (char *)v228 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v256 = (void *)sub_100012854(&qword_10010C428);
  uint64_t v255 = *(v256 - 1);
  __chkstk_darwin(v256);
  uint64_t v254 = (char *)v228 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v335 = sub_100012854((uint64_t *)&unk_10010C430);
  uint64_t v347 = *(void *)(v335 - 8);
  uint64_t v49 = __chkstk_darwin(v335);
  uint64_t v247 = (char *)v228 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v49);
  v334 = (char *)v228 - v51;
  uint64_t v240 = sub_100012854((uint64_t *)&unk_10010CF70);
  uint64_t v239 = *(void *)(v240 - 8);
  __chkstk_darwin(v240);
  uint64_t v237 = (char *)v228 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v242 = sub_100012854(&qword_10010C440);
  uint64_t v241 = *(void *)(v242 - 8);
  __chkstk_darwin(v242);
  v238 = (char *)v228 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v245 = sub_100012854(&qword_10010C448);
  uint64_t v244 = *(void *)(v245 - 8);
  __chkstk_darwin(v245);
  v243 = (char *)v228 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v333 = sub_100012854(&qword_10010C450);
  uint64_t v346 = *(void *)(v333 - 8);
  uint64_t v55 = __chkstk_darwin(v333);
  uint64_t v236 = (char *)v228 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v55);
  v332 = (char *)v228 - v57;
  v355 = (void *)sub_100012854((uint64_t *)&unk_10010CF60);
  uint64_t v231 = *(v355 - 1);
  __chkstk_darwin(v355);
  uint64_t v229 = (char *)v228 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  v345 = (void *)sub_100012854(&qword_10010BBA0);
  uint64_t v232 = *(v345 - 1);
  __chkstk_darwin(v345);
  v230 = (char *)v228 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v235 = sub_100012854(&qword_10010C458);
  uint64_t v234 = *(void *)(v235 - 8);
  __chkstk_darwin(v235);
  uint64_t v233 = (char *)v228 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  v344 = (void *)sub_100012854(&qword_10010C330);
  uint64_t v330 = *(v344 - 1);
  __chkstk_darwin(v344);
  uint64_t v62 = (char *)v228 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v356 = sub_100012854(&qword_10010BB60);
  uint64_t v63 = *(void *)(v356 - 8);
  __chkstk_darwin(v356);
  unint64_t v65 = (char *)v228 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v329 = sub_100012854((uint64_t *)&unk_10010BB70);
  uint64_t v66 = *(void *)(v329 - 8);
  __chkstk_darwin(v329);
  Swift::String v68 = (char *)v228 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_100012854(&qword_10010CB70);
  uint64_t v70 = __chkstk_darwin(v69);
  Swift::String v72 = (char *)v228 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v70);
  Swift::String v74 = (char *)v228 - v73;
  uint64_t v318 = v3;
  v317 = v5;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && sub_1000C7990()) {
    Swift::String v75 = (void *)sub_100072C7C((unint64_t)_swiftEmptyArrayStorage);
  }
  else {
    Swift::String v75 = &_swiftEmptySetSingleton;
  }
  uint64_t v76 = v360;
  uint64_t v77 = v360;
  *(void *)(v360 + 24) = v75;
  uint64_t v331 = v77 + 24;
  uint64_t v78 = v76 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing25GlobalPermissionViewModel__showingAlert;
  uint64_t v79 = type metadata accessor for AlertViewModel(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 56))(v74, 1, 1, v79);
  sub_100044994((uint64_t)v74, (uint64_t)v72);
  sub_1000C67B0();
  sub_10001326C((uint64_t)v74, &qword_10010CB70);
  (*(void (**)(uint64_t, char *, uint64_t))(v66 + 32))(v78, v68, v329);
  uint64_t v80 = v76 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing25GlobalPermissionViewModel__showingAlertBool;
  LOBYTE(v363) = 0;
  sub_1000C67B0();
  (*(void (**)(uint64_t, char *, uint64_t))(v63 + 32))(v80, v65, v356);
  uint64_t v81 = v76 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing25GlobalPermissionViewModel__didTapCopyLink;
  id v363 = 0;
  uint64_t v364 = 0;
  sub_100012854((uint64_t *)&unk_10010C1C0);
  sub_1000C67B0();
  (*(void (**)(uint64_t, char *, void *))(v330 + 32))(v81, v62, v344);
  *(void *)(v76 + 16) = v359;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  swift_retain();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  int v82 = v363;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  LOBYTE(v81) = (_BYTE)v363;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  LODWORD(v80) = v363;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  if ((v82 & v80 & ((~(_BYTE)v81 & 3) == 0)) != 0) {
    Swift::String v83 = &off_1000FF300;
  }
  else {
    Swift::String v83 = _swiftEmptyArrayStorage;
  }
  if ((v363 & 0xFE) == 2) {
    Swift::String v84 = (_UNKNOWN **)v83;
  }
  else {
    Swift::String v84 = &off_1000FF2D8;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  int v85 = v363;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  char v86 = (char)v363;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  int v87 = v363;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  if ((v85 & v87 & ((~v86 & 0xC) == 0)) != 0) {
    Swift::String_optional v88 = &off_1000FF350;
  }
  else {
    Swift::String_optional v88 = _swiftEmptyArrayStorage;
  }
  if ((v363 & 0xFE) == 2) {
    Swift::String_optional v89 = (_UNKNOWN **)v88;
  }
  else {
    Swift::String_optional v89 = &off_1000FF328;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  int v90 = v363;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  int v91 = v363;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  BOOL v92 = (v363 & 0xFE) == 2;
  int v93 = v90 & v91;
  char v94 = v90 & v91 & v92;
  if ((v93 & v92) != 0) {
    Swift::String_optional v95 = &off_1000FF378;
  }
  else {
    Swift::String_optional v95 = _swiftEmptyArrayStorage;
  }
  uint64_t v96 = v76
      + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing25GlobalPermissionViewModel__whoCanAccessPermissions;
  swift_beginAccess();
  v361 = v84;
  swift_bridgeObjectRetain();
  sub_100012854(&qword_10010C170);
  uint64_t v259 = v96;
  sub_1000C67B0();
  swift_endAccess();
  uint64_t v97 = v76 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing25GlobalPermissionViewModel__readWritePermissions;
  swift_beginAccess();
  v361 = v89;
  swift_bridgeObjectRetain();
  sub_100012854(&qword_10010C188);
  uint64_t v260 = v97;
  sub_1000C67B0();
  swift_endAccess();
  uint64_t v98 = v76
      + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing25GlobalPermissionViewModel__whoCanAddPeoplePermissions;
  swift_beginAccess();
  v361 = v95;
  swift_bridgeObjectRetain();
  sub_100012854(&qword_10010C1A0);
  uint64_t v261 = v98;
  sub_1000C67B0();
  swift_endAccess();
  if ((unint64_t)v84[2] < 2 && (unint64_t)v89[2] <= 1)
  {
    if (v94) {
      Swift::String v100 = &off_1000FF378;
    }
    else {
      Swift::String v100 = _swiftEmptyArrayStorage;
    }
    uint64_t v101 = v100[2];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    BOOL v99 = v101 > 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    BOOL v99 = 1;
  }
  swift_bridgeObjectRelease();
  uint64_t v262 = v360
       + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing25GlobalPermissionViewModel__shouldShowSharingOptionsView;
  uint64_t v102 = v360;
  swift_beginAccess();
  LOBYTE(v361) = v99;
  sub_1000C67B0();
  swift_endAccess();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  BOOL v103 = v363 - 6 < 0xFFFFFFFC;
  v228[0] = v102 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing25GlobalPermissionViewModel__savingInProgress;
  swift_beginAccess();
  LOBYTE(v361) = v103;
  sub_1000C67B0();
  swift_endAccess();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  char v104 = v363 & 1;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  unsigned int v105 = 0x2010000u >> (8 * (_BYTE)v363);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  unsigned __int8 v106 = sub_10003FB80((uint64_t)v363);
  if (v106 == 3) {
    unsigned __int8 v107 = 1;
  }
  else {
    unsigned __int8 v107 = v106;
  }
  uint64_t v108 = v102
       + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing25GlobalPermissionViewModel__whoCanAccessPermissionSelected;
  swift_beginAccess();
  LOBYTE(v361) = v104;
  sub_1000C67B0();
  swift_endAccess();
  uint64_t v330 = v102
       + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing25GlobalPermissionViewModel__readWritePermissionSelected;
  swift_beginAccess();
  LOBYTE(v361) = v105;
  sub_1000C67B0();
  swift_endAccess();
  uint64_t v329 = v102
       + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing25GlobalPermissionViewModel__whoCanAddPeoplePermissionSelected;
  swift_beginAccess();
  LOBYTE(v361) = v107;
  sub_1000C67B0();
  swift_endAccess();
  swift_beginAccess();
  LOBYTE(v361) = v107 == 0;
  sub_1000C67B0();
  swift_endAccess();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v109 = sub_10003FE98(v104, v105, v107, (char)v363);
  uint64_t v111 = v110;
  uint64_t v246 = v102
       + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing25GlobalPermissionViewModel__localizedPermissionSummary;
  swift_beginAccess();
  v361 = (void *)v109;
  uint64_t v362 = v111;
  sub_1000C67B0();
  swift_endAccess();
  swift_beginAccess();
  swift_retain();
  sub_100012854((uint64_t *)&unk_10010BD00);
  uint64_t v112 = v229;
  sub_1000C67C0();
  swift_endAccess();
  swift_release();
  sub_10001E454((unint64_t *)&unk_10010D0F0, (uint64_t *)&unk_10010CF60);
  sub_100034188();
  uint64_t v113 = v230;
  uint64_t v114 = v355;
  sub_1000C6860();
  (*(void (**)(char *, void *))(v231 + 8))(v112, v114);
  sub_10001E454(&qword_10010BD20, &qword_10010BBA0);
  char v115 = v233;
  Swift::Int v116 = v345;
  sub_1000C6820();
  (*(void (**)(char *, void *))(v232 + 8))(v113, v116);
  swift_beginAccess();
  uint64_t v117 = sub_100012854(&qword_10010C300);
  uint64_t v118 = v332;
  uint64_t v232 = v117;
  uint64_t v119 = v108;
  sub_1000C67C0();
  swift_endAccess();
  v345 = &protocol conformance descriptor for Publishers.CompactMap<A, B>;
  sub_10001E454((unint64_t *)&unk_10010C460, &qword_10010C458);
  uint64_t v120 = v118;
  uint64_t v121 = v235;
  sub_1000C6880();
  (*(void (**)(char *, uint64_t))(v234 + 8))(v115, v121);
  uint64_t v122 = v346;
  uint64_t v123 = v118;
  uint64_t v124 = v333;
  (*(void (**)(char *, char *, uint64_t))(v346 + 16))(v236, v123, v333);
  v228[1] = v119;
  swift_beginAccess();
  sub_1000C67D0();
  swift_endAccess();
  char v125 = *(char **)(v122 + 8);
  uint64_t v346 = v122 + 8;
  uint64_t v236 = v125;
  ((void (*)(char *, uint64_t))v125)(v120, v124);
  swift_beginAccess();
  swift_retain();
  sub_100012854((uint64_t *)&unk_10010D0D0);
  uint64_t v126 = v237;
  sub_1000C67C0();
  swift_endAccess();
  swift_release();
  sub_10001E454((unint64_t *)&unk_10010C470, (uint64_t *)&unk_10010CF70);
  sub_100044A44();
  uint64_t v127 = v238;
  uint64_t v128 = v240;
  sub_1000C6860();
  (*(void (**)(char *, uint64_t))(v239 + 8))(v126, v128);
  v355 = &protocol conformance descriptor for Publishers.RemoveDuplicates<A>;
  sub_10001E454(&qword_10010C480, &qword_10010C440);
  char v129 = v243;
  uint64_t v130 = v242;
  sub_1000C6820();
  (*(void (**)(char *, uint64_t))(v241 + 8))(v127, v130);
  swift_beginAccess();
  uint64_t v131 = sub_100012854(&qword_10010C310);
  uint64_t v132 = v334;
  uint64_t v242 = v131;
  sub_1000C67C0();
  swift_endAccess();
  sub_10001E454(&qword_10010C488, &qword_10010C448);
  uint64_t v133 = v245;
  sub_1000C6880();
  (*(void (**)(char *, uint64_t))(v244 + 8))(v129, v133);
  uint64_t v134 = v347;
  uint64_t v135 = v335;
  (*(void (**)(char *, char *, uint64_t))(v347 + 16))(v247, v132, v335);
  swift_beginAccess();
  sub_1000C67D0();
  swift_endAccess();
  uint64_t v136 = *(char **)(v134 + 8);
  uint64_t v347 = v134 + 8;
  uint64_t v247 = v136;
  ((void (*)(char *, uint64_t))v136)(v132, v135);
  swift_beginAccess();
  swift_retain();
  sub_100012854((uint64_t *)&unk_10010C490);
  uint64_t v137 = v248;
  sub_1000C67C0();
  swift_endAccess();
  swift_release();
  sub_10001E454((unint64_t *)&unk_10010D100, &qword_10010C418);
  sub_100044A98();
  Swift::String v138 = v249;
  uint64_t v139 = v251;
  sub_1000C6860();
  (*(void (**)(char *, uint64_t))(v250 + 8))(v137, v139);
  sub_10001E454(&qword_10010C4A8, &qword_10010C420);
  Swift::String v140 = v254;
  uint64_t v141 = v253;
  sub_1000C6820();
  (*(void (**)(char *, uint64_t))(v252 + 8))(v138, v141);
  swift_beginAccess();
  uint64_t v142 = sub_100012854((uint64_t *)&unk_10010C320);
  unint64_t v143 = v340;
  uint64_t v253 = v142;
  sub_1000C67C0();
  swift_endAccess();
  sub_10001E454((unint64_t *)&unk_10010C4B0, &qword_10010C428);
  unint64_t v144 = v256;
  sub_1000C6880();
  (*(void (**)(char *, void *))(v255 + 8))(v140, v144);
  uint64_t v145 = v350;
  uint64_t v146 = v341;
  (*(void (**)(char *, char *, uint64_t))(v350 + 16))(v257, v143, v341);
  swift_beginAccess();
  sub_1000C67D0();
  swift_endAccess();
  unint64_t v147 = *(void **)(v145 + 8);
  uint64_t v350 = v145 + 8;
  uint64_t v256 = v147;
  ((void (*)(char *, uint64_t))v147)(v143, v146);
  swift_beginAccess();
  sub_100012854((uint64_t *)&unk_10010CE70);
  uint64_t v148 = v258;
  sub_1000C67C0();
  swift_endAccess();
  v344 = &protocol conformance descriptor for Published<A>.Publisher;
  sub_10001E454(&qword_10010BC70, (uint64_t *)&unk_10010BC00);
  sub_100033FD0();
  uint64_t v149 = v319;
  unint64_t v150 = v322;
  sub_1000C6860();
  (*(void (**)(char *, unint64_t))(v320 + 8))(v148, v150);
  sub_10001E454(&qword_10010BC80, (uint64_t *)&unk_10010C400);
  v151 = v325;
  unint64_t v152 = v324;
  sub_1000C6820();
  (*(void (**)(char *, void *))(v323 + 8))(v149, v152);
  swift_beginAccess();
  double v153 = v352;
  sub_1000C67C0();
  swift_endAccess();
  sub_10001E454(&qword_10010BC88, (uint64_t *)&unk_10010BC10);
  uint64_t v154 = v327;
  sub_1000C6880();
  (*(void (**)(char *, uint64_t))(v326 + 8))(v151, v154);
  uint64_t v155 = v357;
  uint64_t v156 = *(char **)(v357 + 16);
  uint64_t v257 = (char *)(v357 + 16);
  v258 = v156;
  uint64_t v157 = v358;
  ((void (*)(char *, char *, uint64_t))v156)(v343, v153, v358);
  swift_beginAccess();
  sub_1000C67D0();
  swift_endAccess();
  v158 = *(void (**)(char *, uint64_t))(v155 + 8);
  v158(v153, v157);
  uint64_t v159 = v359;
  swift_beginAccess();
  swift_retain();
  sub_1000C67C0();
  swift_endAccess();
  swift_release();
  uint64_t v160 = sub_10001E454((unint64_t *)&unk_10010C4C0, (uint64_t *)&unk_10010C3F0);
  uint64_t v161 = v153;
  sub_1000C6860();
  v158(v153, v157);
  swift_beginAccess();
  swift_retain();
  sub_1000C67C0();
  swift_endAccess();
  swift_release();
  v319 = (char *)v160;
  sub_1000C6860();
  v345 = v158;
  v158(v153, v157);
  uint64_t v357 = v155 + 8;
  uint64_t v255 = v159 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__isShareRoot;
  swift_beginAccess();
  sub_1000C67C0();
  swift_endAccess();
  sub_1000C6860();
  v158(v153, v157);
  uint64_t v162 = v159;
  uint64_t v252 = v159 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__executionMode;
  swift_beginAccess();
  uint64_t v254 = (char *)sub_100012854(&qword_10010CE40);
  v163 = v336;
  sub_1000C67C0();
  swift_endAccess();
  uint64_t v251 = sub_10001E454((unint64_t *)&unk_10010C4D0, (uint64_t *)&unk_10010CFC0);
  unint64_t v250 = sub_100044AEC();
  uint64_t v164 = v338;
  sub_1000C6860();
  uint64_t v165 = *(char **)(v349 + 8);
  v349 += 8;
  v249 = v165;
  ((void (*)(char *, uint64_t))v165)(v163, v164);
  uint64_t v166 = sub_10001E454((unint64_t *)&unk_10010BC60, &qword_10010BC20);
  uint64_t v248 = (char *)sub_10001E454((unint64_t *)&unk_10010D080, (uint64_t *)&unk_10010C3D0);
  uint64_t v320 = v166;
  v167 = v263;
  sub_1000C6720();
  v328 = (char *)self;
  id v363 = [v328 mainRunLoop];
  uint64_t v326 = sub_1000C7820();
  uint64_t v168 = *(void *)(v326 - 8);
  v325 = *(char **)(v168 + 56);
  uint64_t v327 = v168 + 56;
  uint64_t v169 = (uint64_t)v342;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v325)(v342, 1, 1, v326);
  unint64_t v323 = sub_100044B40();
  v324 = &protocol conformance descriptor for Publishers.CombineLatest4<A, B, C, D>;
  sub_10001E454(&qword_10010C4E8, &qword_10010C3E0);
  unint64_t v322 = sub_10001E278();
  v170 = v265;
  v171 = v321;
  sub_1000C6850();
  sub_10001326C(v169, (uint64_t *)&unk_10010BBD0);

  (*(void (**)(char *, void *))(v264 + 8))(v167, v171);
  uint64_t v172 = swift_allocObject();
  swift_weakInit();
  v173 = (void *)swift_allocObject();
  v173[2] = v172;
  v173[3] = v162;
  v173[4] = v353;
  uint64_t v174 = swift_allocObject();
  *(void *)(v174 + 16) = sub_100044BBC;
  *(void *)(v174 + 24) = v173;
  v321 = &protocol conformance descriptor for Publishers.ReceiveOn<A, B>;
  sub_10001E454(&qword_10010C4F8, &qword_10010C3E8);
  swift_retain();
  uint64_t v175 = v267;
  sub_1000C6870();
  swift_release();
  (*(void (**)(char *, uint64_t))(v266 + 8))(v170, v175);
  swift_beginAccess();
  sub_1000C6760();
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  swift_retain();
  sub_1000C67C0();
  swift_endAccess();
  swift_release();
  uint64_t v176 = v358;
  sub_1000C6860();
  v177 = (void (*)(char *, uint64_t))v345;
  ((void (*)(char *, uint64_t))v345)(v161, v176);
  swift_beginAccess();
  swift_retain();
  sub_100012854((uint64_t *)&unk_10010C500);
  uint64_t v178 = v268;
  sub_1000C67C0();
  swift_endAccess();
  swift_release();
  sub_10001E454((unint64_t *)&unk_10010D1C0, (uint64_t *)&unk_10010C3B0);
  sub_10001E3C0();
  uint64_t v179 = v270;
  sub_1000C6860();
  (*(void (**)(char *, uint64_t))(v269 + 8))(v178, v179);
  swift_beginAccess();
  v180 = v161;
  sub_1000C67C0();
  swift_endAccess();
  uint64_t v181 = v358;
  sub_1000C6860();
  v177(v180, v181);
  swift_beginAccess();
  v182 = v336;
  sub_1000C67C0();
  swift_endAccess();
  uint64_t v183 = v338;
  sub_1000C6860();
  ((void (*)(char *, uint64_t))v249)(v182, v183);
  sub_10001E454(&qword_10010D200, &qword_10010B6B8);
  uint64_t v184 = v273;
  sub_1000C6720();
  id v363 = [v328 mainRunLoop];
  uint64_t v185 = (uint64_t)v342;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v325)(v342, 1, 1, v326);
  sub_10001E454(&qword_10010C520, &qword_10010C3C0);
  uint64_t v186 = v276;
  uint64_t v187 = v275;
  sub_1000C6850();
  sub_10001326C(v185, (uint64_t *)&unk_10010BBD0);

  (*(void (**)(char *, uint64_t))(v274 + 8))(v184, v187);
  uint64_t v188 = swift_allocObject();
  swift_weakInit();
  uint64_t v189 = swift_allocObject();
  uint64_t v190 = v353;
  *(void *)(v189 + 16) = v188;
  *(void *)(v189 + 24) = v190;
  uint64_t v191 = swift_allocObject();
  *(void *)(v191 + 16) = sub_100044C3C;
  *(void *)(v191 + 24) = v189;
  sub_10001E454(&qword_10010C528, &qword_10010C3C8);
  uint64_t v192 = v278;
  sub_1000C6870();
  swift_release();
  (*(void (**)(char *, uint64_t))(v277 + 8))(v186, v192);
  swift_beginAccess();
  sub_1000C6760();
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  uint64_t v193 = v332;
  sub_1000C67C0();
  swift_endAccess();
  sub_10001E454(&qword_10010C530, &qword_10010C450);
  sub_10003F4BC();
  uint64_t v194 = v333;
  sub_1000C6860();
  ((void (*)(char *, uint64_t))v236)(v193, v194);
  swift_beginAccess();
  v195 = v334;
  sub_1000C67C0();
  swift_endAccess();
  sub_10001E454(&qword_10010C538, (uint64_t *)&unk_10010C430);
  sub_10003F3A8();
  uint64_t v196 = v335;
  sub_1000C6860();
  ((void (*)(char *, uint64_t))v247)(v195, v196);
  swift_beginAccess();
  uint64_t v197 = v340;
  sub_1000C67C0();
  swift_endAccess();
  sub_10001E454(&qword_10010C540, &qword_10010C410);
  sub_10003F60C();
  uint64_t v198 = v341;
  sub_1000C6860();
  ((void (*)(char *, uint64_t))v256)(v197, v198);
  uint64_t v199 = v359;
  swift_beginAccess();
  swift_retain();
  v200 = v352;
  sub_1000C67C0();
  swift_endAccess();
  swift_release();
  uint64_t v201 = v358;
  sub_1000C6860();
  ((void (*)(char *, uint64_t))v345)(v200, v201);
  sub_10001E454(&qword_10010C548, &qword_10010C390);
  sub_10001E454(&qword_10010C550, &qword_10010C388);
  sub_10001E454(&qword_10010C558, &qword_10010C380);
  Swift::String v202 = v284;
  sub_1000C6720();
  id v363 = [v328 mainRunLoop];
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v325)(v185, 1, 1, v326);
  sub_10001E454(&qword_10010C560, &qword_10010C398);
  Swift::String v203 = v288;
  uint64_t v204 = v287;
  sub_1000C6850();
  sub_10001326C(v185, (uint64_t *)&unk_10010BBD0);

  (*(void (**)(char *, uint64_t))(v285 + 8))(v202, v204);
  uint64_t v205 = swift_allocObject();
  uint64_t v206 = v360;
  swift_weakInit();
  uint64_t v207 = (void *)swift_allocObject();
  v207[2] = v205;
  v207[3] = v199;
  v207[4] = v353;
  uint64_t v208 = swift_allocObject();
  *(void *)(v208 + 16) = sub_100044CC4;
  *(void *)(v208 + 24) = v207;
  sub_10001E454(&qword_10010C568, &qword_10010C3A0);
  swift_retain();
  uint64_t v209 = v291;
  uint64_t v210 = v290;
  sub_1000C6830();
  swift_release();
  (*(void (**)(char *, uint64_t))(v289 + 8))(v203, v210);
  swift_beginAccess();
  sub_100012854(&qword_10010CEB0);
  v211 = v295;
  sub_1000C67C0();
  swift_endAccess();
  sub_10001E454(&qword_10010C570, &qword_10010C3A8);
  uint64_t v212 = v293;
  sub_1000C6880();
  (*(void (**)(char *, uint64_t))(v292 + 8))(v209, v212);
  uint64_t v213 = v296;
  uint64_t v214 = v297;
  (*(void (**)(char *, char *, uint64_t))(v296 + 16))(v294, v211, v297);
  swift_beginAccess();
  sub_1000C67D0();
  swift_endAccess();
  (*(void (**)(char *, uint64_t))(v213 + 8))(v211, v214);
  swift_beginAccess();
  sub_100012854(&qword_10010C2F8);
  v215 = v298;
  sub_1000C67C0();
  swift_endAccess();
  sub_10001E454(&qword_10010C578, &qword_10010C358);
  sub_100044D18(&qword_10010C580, &qword_10010C170, (void (*)(void))sub_10003F4BC);
  uint64_t v216 = v300;
  sub_1000C6860();
  (*(void (**)(char *, uint64_t))(v299 + 8))(v215, v216);
  swift_beginAccess();
  sub_100012854(&qword_10010C308);
  uint64_t v217 = v301;
  sub_1000C67C0();
  swift_endAccess();
  sub_10001E454(&qword_10010C588, &qword_10010C348);
  sub_100044D18(&qword_10010C590, &qword_10010C188, (void (*)(void))sub_10003F3A8);
  uint64_t v218 = v303;
  sub_1000C6860();
  (*(void (**)(char *, uint64_t))(v302 + 8))(v217, v218);
  swift_beginAccess();
  sub_100012854(&qword_10010C318);
  uint64_t v219 = v314;
  sub_1000C67C0();
  swift_endAccess();
  sub_10001E454(&qword_10010C598, &qword_10010C338);
  sub_100044D18(&qword_10010C5A0, &qword_10010C1A0, (void (*)(void))sub_10003F60C);
  uint64_t v220 = v316;
  sub_1000C6860();
  (*(void (**)(char *, uint64_t))(v315 + 8))(v219, v220);
  sub_10001E454(&qword_10010C5A8, &qword_10010C360);
  sub_10001E454(&qword_10010C5B0, &qword_10010C350);
  sub_10001E454(&qword_10010C5B8, &qword_10010C340);
  uint64_t v221 = v305;
  sub_1000C6700();
  sub_10001E454(&qword_10010C5C0, &qword_10010C368);
  uint64_t v222 = v309;
  uint64_t v223 = v308;
  sub_1000C6830();
  (*(void (**)(char *, uint64_t))(v307 + 8))(v221, v223);
  swift_beginAccess();
  uint64_t v224 = v352;
  sub_1000C67C0();
  swift_endAccess();
  sub_10001E454((unint64_t *)&unk_10010C5C8, (uint64_t *)&unk_10010C370);
  uint64_t v225 = v312;
  sub_1000C6880();
  (*(void (**)(char *, uint64_t))(v311 + 8))(v222, v225);
  uint64_t v226 = v358;
  ((void (*)(char *, char *, uint64_t))v258)(v343, v224, v358);
  swift_beginAccess();
  sub_1000C67D0();
  swift_endAccess();
  ((void (*)(char *, uint64_t))v345)(v224, v226);
  return v206;
}

uint64_t sub_100044994(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100012854(&qword_10010CB70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_100044A44()
{
  unint64_t result = qword_10010D0E0;
  if (!qword_10010D0E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010D0E0);
  }
  return result;
}

unint64_t sub_100044A98()
{
  unint64_t result = qword_10010C4A0;
  if (!qword_10010C4A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010C4A0);
  }
  return result;
}

unint64_t sub_100044AEC()
{
  unint64_t result = qword_10010D070;
  if (!qword_10010D070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010D070);
  }
  return result;
}

unint64_t sub_100044B40()
{
  unint64_t result = qword_10010C4E0;
  if (!qword_10010C4E0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10010C4E0);
  }
  return result;
}

uint64_t sub_100044B80()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100044BBC(char a1, char a2, char a3, char a4)
{
  return sub_10003D8A0(a1, a2, a3, a4, *(void *)(v4 + 16), *(void *)(v4 + 24));
}

uint64_t sub_100044BC8(unsigned __int8 *a1)
{
  return (*(uint64_t (**)(void, void, void, void))(v1 + 16))(*a1, a1[1], a1[2], a1[3]);
}

uint64_t sub_100044C04()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100044C3C()
{
  return sub_10003DAA0();
}

uint64_t sub_100044C44(unsigned __int8 *a1)
{
  return (*(uint64_t (**)(void, void, void, void))(v1 + 16))(*a1, *((void *)a1 + 1), a1[16], a1[17]);
}

uint64_t sub_100044C84()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100044CC4(char a1, char a2, unsigned __int8 a3, char a4)
{
  return sub_10003DC28(a1 & 1, a2, a3, a4);
}

uint64_t sub_100044CD4@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void, void, void))(v2 + 16))(*a1, a1[1], a1[2], a1[3]);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_100044D18(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100013128(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100044D98@<X0>(void *a1@<X8>)
{
  return sub_100011168(a1);
}

uint64_t sub_100044DC0()
{
  return sub_10003FB08();
}

uint64_t sub_100044DE8@<X0>(void *a1@<X8>)
{
  return sub_100011168(a1);
}

uint64_t sub_100044E10()
{
  return sub_10003FB08();
}

uint64_t sub_100044E38@<X0>(void *a1@<X8>)
{
  return sub_100011168(a1);
}

uint64_t sub_100044E60()
{
  return sub_10003FB08();
}

uint64_t sub_100044E90()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100044EC8()
{
  return sub_1000BD44C(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_100044ED0()
{
  return sub_10003E798(v0);
}

uint64_t sub_100044ED8()
{
  return sub_100045158(40);
}

uint64_t sub_100044EE0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_100013B98;
  return sub_1000689D4(a1, v4, v5, v6);
}

uint64_t sub_100044F94()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_10004500C()
{
  return sub_100045158(41);
}

uint64_t sub_100045014(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  char v7 = *(unsigned char *)(v1 + 40);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_10001AE78;
  return sub_10003D1A8(a1, v4, v5, v6, v7);
}

uint64_t sub_1000450E0()
{
  return sub_10003C8F8();
}

uint64_t sub_1000450E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100012854(&qword_10010BE10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100045150()
{
  return sub_100045158(40);
}

uint64_t sub_100045158(uint64_t a1)
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v1, a1, 7);
}

uint64_t sub_1000451A4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  char v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_10001AE78;
  return sub_10003CA4C(a1, v4, v5, v6);
}

uint64_t sub_100045294(uint64_t a1, char a2, uint64_t a3, void (*a4)(void, void *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (a2)
  {
    swift_errorRetain();
    uint64_t v14 = (void *)sub_1000C6480();
    a4(0, v14);

    return sub_100047238(a1, 1);
  }
  else
  {
    swift_beginAccess();
    if (*(void *)(a3 + 16) || (swift_beginAccess(), *(void *)(a6 + 16)))
    {
      swift_errorRetain();
      uint64_t v11 = (void *)sub_1000C6480();
      a4(0, v11);

      return swift_errorRelease();
    }
    else
    {
      return ((uint64_t (*)(uint64_t, void))a4)(a7, 0);
    }
  }
}

uint64_t sub_1000453B8(uint64_t a1, uint64_t a2, void *a3, unint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v10 = (a4 >> 40) & 1;
  uint64_t v11 = sub_100012854(&qword_10010C770);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v11);
  unint64_t v14 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v15 + v14, (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  sub_100046AD4(a3, v10, a7, (uint64_t)sub_100047250, v15);
  return swift_release();
}

uint64_t sub_100045514(void *a1, void *a2)
{
  if (!a1 || a2)
  {
    sub_100012A24();
    swift_allocError();
    *(void *)uint64_t v5 = 0xD000000000000029;
    *(void *)(v5 + 8) = 0x80000001000D43B0;
    *(void *)(v5 + 24) = 0;
    *(void *)(v5 + 32) = 0;
    *(void *)(v5 + 16) = a2;
    *(unsigned char *)(v5 + 40) = 4;
    id v6 = a2;
    sub_100012854(&qword_10010C770);
    return sub_1000C75A0();
  }
  else
  {
    id v3 = a1;
    sub_100012854(&qword_10010C770);
    return sub_1000C75B0();
  }
}

void sub_1000455D4(uint64_t a1, void *a2, char a3, void (*a4)(id, id, void *, id))
{
  if (a3)
  {
    swift_errorRetain();
    id v7 = (id)sub_1000C6480();
    a4(0, 0, 0, v7);
  }
  else
  {
    id v8 = a2;
    id v9 = [v8 share];
    id v7 = [v8 containerID];
    id v10 = v8;
    a4(v9, v7, a2, 0);
    sub_100047AF8(a2, 0);
  }

  sub_100047AF8(a2, a3 & 1);
}

uint64_t sub_1000456D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_100012854(&qword_10010C798);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
  unint64_t v10 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v11 + v10, (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  sub_100046CE0(a3, a4, (uint64_t)sub_100047A18, v11);
  return swift_release();
}

uint64_t sub_10004581C(void *a1, void *a2, void *a3, void *a4)
{
  if (a1 && a2 && a3 && !a4)
  {
    id v7 = a1;
    id v8 = a2;
    id v9 = a3;
    sub_100012854(&qword_10010C798);
    return sub_1000C75B0();
  }
  else
  {
    sub_100012A24();
    swift_allocError();
    *(void *)uint64_t v11 = 0xD00000000000002DLL;
    *(void *)(v11 + 8) = 0x80000001000D69C0;
    *(void *)(v11 + 24) = 0;
    *(void *)(v11 + 32) = 0;
    *(void *)(v11 + 16) = a4;
    *(unsigned char *)(v11 + 40) = 5;
    id v12 = a4;
    sub_100012854(&qword_10010C798);
    return sub_1000C75A0();
  }
}

uint64_t sub_100045900(uint64_t a1, uint64_t a2, void *a3, char a4, void *a5)
{
  uint64_t v9 = sub_100012854(&qword_10010C760);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v13 + v12, (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  sub_100046F38(a3, a4, a5, (uint64_t)sub_100046924, v13);
  return swift_release();
}

uint64_t sub_100045A5C(void *a1)
{
  if (a1)
  {
    sub_100012A24();
    swift_allocError();
    *(void *)uint64_t v2 = 0xD000000000000030;
    *(void *)(v2 + 8) = 0x80000001000D42E0;
    *(void *)(v2 + 24) = 0;
    *(void *)(v2 + 32) = 0;
    *(void *)(v2 + 16) = a1;
    *(unsigned char *)(v2 + 40) = 8;
    id v3 = a1;
    sub_100012854(&qword_10010C760);
    return sub_1000C75A0();
  }
  else
  {
    sub_100012854(&qword_10010C760);
    return sub_1000C75B0();
  }
}

uint64_t sub_100045B18(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    swift_beginAccess();
    *(void *)(a4 + 16) = a2;
    swift_errorRetain();
    return swift_errorRelease();
  }
  return result;
}

uint64_t sub_100045B80(uint64_t a1, char a2, uint64_t a3, void (*a4)(void), uint64_t a5, uint64_t a6)
{
  if (a2)
  {
    swift_errorRetain();
    unint64_t v12 = (void *)sub_1000C6480();
    a4();

    return sub_100047238(a1, 1);
  }
  else
  {
    swift_beginAccess();
    if (*(void *)(a3 + 16) || (swift_beginAccess(), *(void *)(a6 + 16)))
    {
      swift_errorRetain();
      uint64_t v9 = (void *)sub_1000C6480();
      a4();

      return swift_errorRelease();
    }
    else
    {
      return ((uint64_t (*)(void))a4)(0);
    }
  }
}

uint64_t sub_100045C8C(uint64_t a1, uint64_t a2)
{
  v2[16] = a1;
  v2[17] = a2;
  uint64_t v3 = sub_1000C66D0();
  v2[18] = v3;
  v2[19] = *(void *)(v3 - 8);
  v2[20] = swift_task_alloc();
  v2[21] = sub_100012854(&qword_10010C790);
  v2[22] = swift_task_alloc();
  v2[23] = swift_task_alloc();
  return _swift_task_switch(sub_100045D90, 0, 0);
}

uint64_t sub_100045D90()
{
  uint64_t v1 = v0[23];
  uint64_t v2 = (void *)v0[17];
  v0[2] = v0;
  v0[7] = v1;
  v0[3] = sub_100045E8C;
  uint64_t v3 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_100046998;
  v0[13] = &unk_100100D00;
  v0[14] = v3;
  [v2 fetchFullNameAndFormattedUsernameOfAccountWithCompletionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_100045E8C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 192) = v2;
  if (v2)
  {
    uint64_t v3 = sub_10004621C;
  }
  else
  {
    *(_DWORD *)(v1 + 200) = *(_DWORD *)(*(void *)(v1 + 168) + 48);
    uint64_t v3 = sub_100045FA8;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_100045FA8()
{
  uint64_t v22 = v0;
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v3 = *(void *)(v0 + 176);
  uint64_t v2 = *(void *)(v0 + 184);
  uint64_t v4 = (uint64_t *)(v2 + *(int *)(v0 + 200));
  uint64_t v5 = sub_1000C6400();
  id v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32);
  v6(v3, v2, v5);
  uint64_t v7 = *v4;
  unint64_t v8 = v4[1];
  uint64_t v20 = v7;
  v6(v1, v3, v5);
  sub_1000C66B0();
  swift_bridgeObjectRetain_n();
  uint64_t v9 = sub_1000C66C0();
  os_log_type_t v10 = sub_1000C7690();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = *(void *)(v0 + 152);
    uint64_t v18 = *(void *)(v0 + 144);
    uint64_t v19 = *(void *)(v0 + 160);
    unint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    *(_DWORD *)unint64_t v12 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 120) = sub_1000720D0(v20, v8, &v21);
    sub_1000C7850();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Username: %s", v12, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v19, v18);
  }
  else
  {
    uint64_t v13 = *(void *)(v0 + 152);
    uint64_t v14 = *(void *)(v0 + 160);
    uint64_t v15 = *(void *)(v0 + 144);
    swift_bridgeObjectRelease_n();

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v14, v15);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = *(uint64_t (**)(uint64_t, unint64_t))(v0 + 8);
  return v16(v20, v8);
}

uint64_t sub_10004621C()
{
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000462B0(uint64_t a1)
{
  v1[15] = a1;
  v1[16] = sub_100012854(&qword_10010C790);
  v1[17] = swift_task_alloc();
  v1[18] = swift_task_alloc();
  return _swift_task_switch(sub_100046358, 0, 0);
}

uint64_t sub_100046358()
{
  uint64_t v1 = v0[18];
  uint64_t v2 = (void *)v0[15];
  v0[2] = v0;
  v0[7] = v1;
  v0[3] = sub_100046454;
  uint64_t v3 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_100046998;
  v0[13] = &unk_100100CE8;
  v0[14] = v3;
  [v2 fetchFullNameAndPrimaryEmailOnAccountWithCompletionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_100046454()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 152) = v2;
  if (v2)
  {
    uint64_t v3 = sub_10004668C;
  }
  else
  {
    *(_DWORD *)(v1 + 160) = *(_DWORD *)(*(void *)(v1 + 128) + 48);
    uint64_t v3 = sub_100046570;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_100046570()
{
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v2 = *(void *)(v0 + 144);
  uint64_t v3 = (uint64_t *)(v2 + *(int *)(v0 + 160));
  uint64_t v4 = (void *)(v1 + *(int *)(*(void *)(v0 + 128) + 48));
  uint64_t v5 = sub_1000C6400();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v1, v2, v5);
  uint64_t v7 = *v3;
  uint64_t v8 = v3[1];
  void *v4 = v7;
  v4[1] = v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v9(v7, v8);
}

uint64_t sub_10004668C()
{
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10004670C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing18CloudKitOperations__ckSourceAppBundleID;
  uint64_t v2 = sub_100012854(&qword_10010B6F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_1000467C8()
{
  return type metadata accessor for CloudKitOperations();
}

uint64_t type metadata accessor for CloudKitOperations()
{
  uint64_t result = qword_10010C650;
  if (!qword_10010C650) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10004681C()
{
  sub_1000468BC();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1000468BC()
{
  if (!qword_10010C660)
  {
    sub_100013128(&qword_10010CBB0);
    unint64_t v0 = sub_1000C6800();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10010C660);
    }
  }
}

uint64_t sub_100046918()
{
  return sub_100013CFC(&qword_10010C760);
}

uint64_t sub_100046924(void *a1)
{
  sub_100012854(&qword_10010C760);

  return sub_100045A5C(a1);
}

uint64_t sub_100046998(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6 = sub_100012854(&qword_10010C790);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(a1 + 32);
  if (a4)
  {
    sub_100012854((uint64_t *)&unk_10010B010);
    uint64_t v10 = swift_allocError();
    *uint64_t v11 = a4;
    id v12 = a4;
    return _swift_continuation_throwingResumeWithError(v9, v10);
  }
  else
  {
    sub_1000C63E0();
    uint64_t v13 = (uint64_t *)&v8[*(int *)(v6 + 48)];
    uint64_t *v13 = sub_1000C7440();
    v13[1] = v14;
    sub_1000479A4((uint64_t)v8, *(void *)(*(void *)(v9 + 64) + 40));
    return swift_continuation_throwingResume();
  }
}

void sub_100046AD4(void *a1, char a2, void *a3, uint64_t a4, uint64_t a5)
{
  sub_100047148();
  sub_100012854(&qword_10010BD50);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1000CC370;
  *(void *)(v10 + 32) = a1;
  uint64_t v19 = (void *)v10;
  sub_1000C7550();
  id v11 = a1;
  v21.value._rawValue = v19;
  v21.is_nil = 0;
  v12.super.super.super.super.Class isa = sub_1000C7760(v21, v22).super.super.super.super.isa;
  [(objc_class *)v12.super.super.super.super.isa setQualityOfService:25];
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 0;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = 0;
  swift_retain();
  sub_1000C7770();
  swift_retain();
  sub_1000C7780();
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = v13;
  v15[3] = a4;
  v15[4] = a5;
  v15[5] = v14;
  v15[6] = v11;
  id v16 = v11;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1000C7750();
  uint64_t v17 = &selRef_privateCloudDatabase;
  if ((a2 & 1) == 0) {
    uint64_t v17 = &selRef_sharedCloudDatabase;
  }
  id v18 = [a3 *v17];
  [v18 addOperation:v12.super.super.super.super.isa];

  swift_release();
  swift_release();
}

void sub_100046CE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2)
  {
    id v18 = [objc_allocWithZone((Class)CKContainer) initWithContainerSetupInfo:a2];
  }
  else
  {
    id v7 = objc_allocWithZone((Class)CKContainerID);
    NSString v8 = sub_1000C7400();
    id v9 = [v7 initWithContainerIdentifier:v8 environment:1];

    id v18 = [objc_allocWithZone((Class)CKContainer) initWithContainerID:v9];
  }
  sub_100012854(&qword_10010C7A0);
  uint64_t v10 = sub_1000C6530();
  uint64_t v11 = *(void *)(v10 - 8);
  unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1000CABA0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v11 + 16))(v13 + v12, a1, v10);
  id v14 = objc_allocWithZone((Class)CKFetchShareMetadataOperation);
  Class isa = sub_1000C7530().super.isa;
  swift_bridgeObjectRelease();
  id v16 = [v14 initWithShareURLs:isa];

  [v16 setShouldFetchRootRecord:0];
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a3;
  *(void *)(v17 + 24) = a4;
  swift_retain();
  sub_1000C77B0();
  [v18 addOperation:v16];
}

void sub_100046F38(void *a1, char a2, void *a3, uint64_t a4, uint64_t a5)
{
  sub_100047148();
  sub_100012854(&qword_10010BD50);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1000CC370;
  *(void *)(v10 + 32) = [a1 recordID];
  sub_1000C7550();
  v18.is_nil = v10;
  v18.value._rawValue = _swiftEmptyArrayStorage;
  v11.super.super.super.super.Class isa = sub_1000C7760(v18, v19).super.super.super.super.isa;
  [(objc_class *)v11.super.super.super.super.isa setQualityOfService:25];
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = 0;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 0;
  swift_retain();
  sub_1000C7770();
  swift_retain();
  sub_1000C7780();
  id v14 = (void *)swift_allocObject();
  v14[2] = v12;
  v14[3] = a4;
  void v14[4] = a5;
  void v14[5] = v13;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1000C7750();
  uint64_t v15 = &selRef_privateCloudDatabase;
  if ((a2 & 1) == 0) {
    uint64_t v15 = &selRef_sharedCloudDatabase;
  }
  id v16 = [a3 *v15];
  [v16 addOperation:v11.super.super.super.super.isa];

  swift_release();
  swift_release();
}

unint64_t sub_100047148()
{
  unint64_t result = qword_10010C768;
  if (!qword_10010C768)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10010C768);
  }
  return result;
}

uint64_t sub_100047188()
{
  swift_errorRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000471C0(uint64_t a1, uint64_t a2, char a3)
{
  return sub_100045B18(a1, a2, a3 & 1, v3);
}

uint64_t sub_1000471E0()
{
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100047228(uint64_t a1, char a2)
{
  return sub_100045B80(a1, a2 & 1, *(void *)(v2 + 16), *(void (**)(void))(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_100047238(uint64_t a1, char a2)
{
  if (a2) {
    return swift_errorRelease();
  }
  return result;
}

uint64_t sub_100047244()
{
  return sub_100013CFC(&qword_10010C770);
}

uint64_t sub_100047250(void *a1, void *a2)
{
  sub_100012854(&qword_10010C770);

  return sub_100045514(a1, a2);
}

uint64_t sub_1000472D4()
{
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100047324(uint64_t a1, char a2)
{
  return sub_100045294(a1, a2 & 1, *(void *)(v2 + 16), *(void (**)(void, void *))(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48));
}

uint64_t sub_100047338(uint64_t a1)
{
  v1[6] = a1;
  uint64_t v3 = sub_1000C6400();
  v1[7] = v3;
  v1[8] = *(void *)(v3 - 8);
  uint64_t v4 = swift_task_alloc();
  v1[9] = v4;
  v1[10] = swift_task_alloc();
  uint64_t v5 = (void *)swift_task_alloc();
  v1[11] = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_100047450;
  return sub_100045C8C(v4, a1);
}

uint64_t sub_100047450(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  v4[2] = v3;
  v4[3] = a1;
  v4[4] = a2;
  v4[5] = v2;
  v4[12] = a2;
  v4[13] = v2;
  swift_task_dealloc();
  if (v2) {
    uint64_t v5 = sub_1000478B4;
  }
  else {
    uint64_t v5 = sub_10004756C;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_10004756C()
{
  (*(void (**)(void, void, void))(v0[8] + 32))(v0[10], v0[9], v0[7]);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[14] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100047618;
  uint64_t v2 = v0[6];
  return sub_1000462B0(v2);
}

uint64_t sub_100047618(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void **)v3;
  *(void *)(*(void *)v3 + 120) = v2;
  swift_task_dealloc();
  if (v2)
  {
    swift_bridgeObjectRelease();
    uint64_t v7 = sub_100047920;
  }
  else
  {
    uint64_t v8 = v6[3];
    v6[16] = a2;
    v6[17] = a1;
    v6[18] = v8;
    uint64_t v7 = sub_10004775C;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_10004775C()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[18];
  uint64_t v3 = v0[16];
  uint64_t v4 = v0[12];
  uint64_t v5 = v0[10];
  uint64_t v6 = v0[7];
  uint64_t v7 = v0[8];
  v17._unint64_t object = (void *)0x80000001000D3E70;
  v17._countAndFlagsBits = 0xD000000000000017;
  if (sub_1000C74F0(v17))
  {
    uint64_t v1 = v2;
    uint64_t v3 = v4;
  }
  swift_bridgeObjectRelease();
  uint64_t v8 = self;
  Class v9 = sub_1000C63D0();
  id v10 = [v8 localizedStringFromPersonNameComponents:v9 style:2 options:0];

  uint64_t v11 = sub_1000C7440();
  uint64_t v13 = v12;

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  id v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v0[1];
  return v14(v11, v13, v1, v3);
}

uint64_t sub_1000478B4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100047920()
{
  (*(void (**)(void, void))(v0[8] + 8))(v0[10], v0[7]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1000479A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100012854(&qword_10010C790);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100047A0C()
{
  return sub_100013CFC(&qword_10010C798);
}

uint64_t sub_100047A18(void *a1, void *a2, void *a3, void *a4)
{
  sub_100012854(&qword_10010C798);

  return sub_10004581C(a1, a2, a3, a4);
}

uint64_t sub_100047AB4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_100047AEC(uint64_t a1, void *a2, char a3)
{
  sub_1000455D4(a1, a2, a3 & 1, *(void (**)(id, id, void *, id))(v3 + 16));
}

void sub_100047AF8(void *a1, char a2)
{
  if (a2) {
    swift_errorRelease();
  }
  else {
}
  }

uint64_t *sub_100047B08(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_100012854(&qword_10010C7A8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1000C6A00();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    id v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = *(void *)v11;
    uint64_t v13 = *((void *)v11 + 1);
    char v14 = v11[16];
    sub_100047E74();
    *(void *)id v10 = v12;
    *((void *)v10 + 1) = v13;
    v10[16] = v14;
    uint64_t v15 = a3[6];
    uint64_t v16 = a3[7];
    Swift::String v17 = (char *)a1 + v15;
    Swift::OpaquePointer_optional v18 = (char *)a2 + v15;
    *Swift::String v17 = *v18;
    *((void *)v17 + 1) = *((void *)v18 + 1);
    Swift::OpaquePointer_optional v19 = (uint64_t *)((char *)a1 + v16);
    uint64_t v20 = (uint64_t *)((char *)a2 + v16);
    swift_retain();
    sub_100012854(&qword_10010C7B0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = sub_1000C6DC0();
      uint64_t v22 = *(void *)(v21 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      {
        uint64_t v23 = sub_100012854((uint64_t *)&unk_10010D3A0);
        memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v22 + 16))(v19, v20, v21);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
      }
    }
    else
    {
      void *v19 = *v20;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v24 = a3[8];
    uint64_t v25 = (uint64_t *)((char *)a1 + v24);
    uint64_t v26 = (uint64_t *)((char *)a2 + v24);
    sub_100012854(&qword_10010B7B0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *uint64_t v25 = *v26;
    if (EnumCaseMultiPayload == 1)
    {
      v25[1] = v26[1];
      swift_retain();
      swift_retain();
      uint64_t v28 = *(int *)(sub_100012854((uint64_t *)&unk_10010D410) + 32);
      uint64_t v29 = (char *)v25 + v28;
      uint64_t v30 = (char *)v26 + v28;
      uint64_t v31 = sub_1000C6B00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100047E74()
{
  return swift_retain();
}

uint64_t sub_100047E7C(uint64_t a1, uint64_t a2)
{
  sub_100012854(&qword_10010C7A8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_1000C6A00();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  sub_10004809C();
  swift_release();
  uint64_t v5 = a1 + *(int *)(a2 + 28);
  sub_100012854(&qword_10010C7B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1000C6DC0();
    uint64_t v7 = *(void *)(v6 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v8 = a1 + *(int *)(a2 + 32);
  sub_100012854(&qword_10010B7B0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t result = swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    swift_release();
    uint64_t v11 = v8 + *(int *)(sub_100012854((uint64_t *)&unk_10010D410) + 32);
    uint64_t v12 = sub_1000C6B00();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);
    return v13(v11, v12);
  }
  return result;
}

uint64_t sub_10004809C()
{
  return swift_release();
}

void *sub_1000480A4(void *a1, void *a2, int *a3)
{
  sub_100012854(&qword_10010C7A8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1000C6A00();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)v9;
  uint64_t v11 = *((void *)v9 + 1);
  char v12 = v9[16];
  sub_100047E74();
  *(void *)uint64_t v8 = v10;
  *((void *)v8 + 1) = v11;
  v8[16] = v12;
  uint64_t v13 = a3[6];
  uint64_t v14 = a3[7];
  uint64_t v15 = (char *)a1 + v13;
  uint64_t v16 = (char *)a2 + v13;
  char *v15 = *v16;
  *((void *)v15 + 1) = *((void *)v16 + 1);
  Swift::String v17 = (void *)((char *)a1 + v14);
  Swift::OpaquePointer_optional v18 = (void *)((char *)a2 + v14);
  swift_retain();
  sub_100012854(&qword_10010C7B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v19 = sub_1000C6DC0();
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      uint64_t v21 = sub_100012854((uint64_t *)&unk_10010D3A0);
      memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
  }
  else
  {
    *Swift::String v17 = *v18;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v22 = a3[8];
  uint64_t v23 = (void *)((char *)a1 + v22);
  uint64_t v24 = (void *)((char *)a2 + v22);
  sub_100012854(&qword_10010B7B0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  void *v23 = *v24;
  if (EnumCaseMultiPayload == 1)
  {
    v23[1] = v24[1];
    swift_retain();
    swift_retain();
    uint64_t v26 = *(int *)(sub_100012854((uint64_t *)&unk_10010D410) + 32);
    uint64_t v27 = (char *)v23 + v26;
    uint64_t v28 = (char *)v24 + v26;
    uint64_t v29 = sub_1000C6B00();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
  }
  else
  {
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_1000483B8(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10001326C((uint64_t)a1, &qword_10010C7A8);
    sub_100012854(&qword_10010C7A8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1000C6A00();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)v9;
  uint64_t v11 = *((void *)v9 + 1);
  char v12 = v9[16];
  sub_100047E74();
  *(void *)uint64_t v8 = v10;
  *((void *)v8 + 1) = v11;
  v8[16] = v12;
  sub_10004809C();
  uint64_t v13 = a3[6];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  char *v14 = *v15;
  *((void *)v14 + 1) = *((void *)v15 + 1);
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v16 = a3[7];
    Swift::String v17 = (void *)((char *)a1 + v16);
    Swift::OpaquePointer_optional v18 = (void *)((char *)a2 + v16);
    sub_10001326C((uint64_t)a1 + v16, &qword_10010C7B0);
    sub_100012854(&qword_10010C7B0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = sub_1000C6DC0();
      uint64_t v20 = *(void *)(v19 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
      {
        uint64_t v21 = sub_100012854((uint64_t *)&unk_10010D3A0);
        memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v20 + 16))(v17, v18, v19);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      }
    }
    else
    {
      *Swift::String v17 = *v18;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v22 = a3[8];
    uint64_t v23 = (void *)((char *)a1 + v22);
    uint64_t v24 = (void *)((char *)a2 + v22);
    sub_10001326C((uint64_t)a1 + v22, &qword_10010B7B0);
    sub_100012854(&qword_10010B7B0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    void *v23 = *v24;
    if (EnumCaseMultiPayload == 1)
    {
      v23[1] = v24[1];
      swift_retain();
      swift_retain();
      uint64_t v26 = *(int *)(sub_100012854((uint64_t *)&unk_10010D410) + 32);
      uint64_t v27 = (char *)v23 + v26;
      uint64_t v28 = (char *)v24 + v26;
      uint64_t v29 = sub_1000C6B00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_100048728(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_100012854(&qword_10010C7A8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1000C6A00();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  uint64_t v10 = &a1[v8];
  uint64_t v11 = &a2[v8];
  *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
  long long v12 = *(_OWORD *)&a2[v9];
  v10[16] = v11[16];
  *(_OWORD *)&a1[v9] = v12;
  uint64_t v13 = a3[7];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = sub_100012854(&qword_10010C7B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = sub_1000C6DC0();
    uint64_t v18 = *(void *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v15, 1, v17))
    {
      uint64_t v19 = sub_100012854((uint64_t *)&unk_10010D3A0);
      memcpy(v14, v15, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v14, v15, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v14, 0, 1, v17);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  uint64_t v20 = a3[8];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  uint64_t v23 = sub_100012854(&qword_10010B7B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v24 = *((void *)v22 + 1);
    *(void *)uint64_t v21 = *(void *)v22;
    *((void *)v21 + 1) = v24;
    uint64_t v25 = *(int *)(sub_100012854((uint64_t *)&unk_10010D410) + 32);
    uint64_t v26 = &v21[v25];
    uint64_t v27 = &v22[v25];
    uint64_t v28 = sub_1000C6B00();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  return a1;
}

char *sub_100048A28(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10001326C((uint64_t)a1, &qword_10010C7A8);
    uint64_t v6 = sub_100012854(&qword_10010C7A8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1000C6A00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  char v11 = v10[16];
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  v9[16] = v11;
  sub_10004809C();
  uint64_t v12 = a3[6];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  char *v13 = *v14;
  *((void *)v13 + 1) = *((void *)v14 + 1);
  swift_release();
  if (a1 != a2)
  {
    uint64_t v15 = a3[7];
    uint64_t v16 = &a1[v15];
    uint64_t v17 = &a2[v15];
    sub_10001326C((uint64_t)&a1[v15], &qword_10010C7B0);
    uint64_t v18 = sub_100012854(&qword_10010C7B0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = sub_1000C6DC0();
      uint64_t v20 = *(void *)(v19 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v17, 1, v19))
      {
        uint64_t v21 = sub_100012854((uint64_t *)&unk_10010D3A0);
        memcpy(v16, v17, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v16, v17, v19);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v16, 0, 1, v19);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
    uint64_t v22 = a3[8];
    uint64_t v23 = &a1[v22];
    uint64_t v24 = &a2[v22];
    sub_10001326C((uint64_t)&a1[v22], &qword_10010B7B0);
    uint64_t v25 = sub_100012854(&qword_10010B7B0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v26 = *((void *)v24 + 1);
      *(void *)uint64_t v23 = *(void *)v24;
      *((void *)v23 + 1) = v26;
      uint64_t v27 = *(int *)(sub_100012854((uint64_t *)&unk_10010D410) + 32);
      uint64_t v28 = &v23[v27];
      uint64_t v29 = &v24[v27];
      uint64_t v30 = sub_1000C6B00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100048D90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100048DA4);
}

uint64_t sub_100048DA4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100012854(&qword_10010C7B8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_11:
    return v9(v10, a2, v8);
  }
  if (a2 == 2147483646)
  {
    unint64_t v11 = *(void *)(a1 + a3[6] + 8);
    if (v11 >= 0xFFFFFFFF) {
      LODWORD(v11) = -1;
    }
    int v12 = v11 - 1;
    if (v12 < 0) {
      int v12 = -1;
    }
    return (v12 + 1);
  }
  else
  {
    uint64_t v14 = sub_100012854(&qword_10010C7C0);
    uint64_t v15 = *(void *)(v14 - 8);
    if (*(_DWORD *)(v15 + 84) == a2)
    {
      uint64_t v8 = v14;
      uint64_t v10 = a1 + a3[7];
      uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
      goto LABEL_11;
    }
    uint64_t v16 = sub_100012854(&qword_10010B7B8);
    uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
    uint64_t v18 = v16;
    uint64_t v19 = a1 + a3[8];
    return v17(v19, a2, v18);
  }
}

uint64_t sub_100048F40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100048F54);
}

uint64_t sub_100048F54(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = sub_100012854(&qword_10010C7B8);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_7:
    return v11(v12, a2, a2, v10);
  }
  if (a3 == 2147483646)
  {
    *(void *)(a1 + a4[6] + 8) = a2;
    return result;
  }
  uint64_t v13 = sub_100012854(&qword_10010C7C0);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + a4[7];
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_7;
  }
  uint64_t v15 = sub_100012854(&qword_10010B7B8);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v17 = v15;
  uint64_t v18 = a1 + a4[8];

  return v16(v18, a2, a2, v17);
}

uint64_t type metadata accessor for PersonInfoView()
{
  uint64_t result = qword_10010C820;
  if (!qword_10010C820) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100049130()
{
  sub_100049268();
  if (v0 <= 0x3F)
  {
    sub_1000492C0(319, (unint64_t *)&qword_10010C838, (uint64_t *)&unk_10010D3A0);
    if (v1 <= 0x3F)
    {
      sub_1000492C0(319, (unint64_t *)&qword_10010B828, (uint64_t *)&unk_10010D410);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_100049268()
{
  if (!qword_10010C830)
  {
    sub_1000C6A00();
    unint64_t v0 = sub_1000C6950();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10010C830);
    }
  }
}

void sub_1000492C0(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  if (!*a2)
  {
    sub_100013128(a3);
    unint64_t v4 = sub_1000C6950();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_100049310()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10004932C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v108 = a1;
  uint64_t v109 = sub_100012854(&qword_10010C878);
  uint64_t v94 = *(void *)(v109 - 8);
  uint64_t v2 = __chkstk_darwin(v109);
  BOOL v92 = (char *)&v86 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  int v93 = (char *)&v86 - v4;
  uint64_t v105 = sub_100012854(&qword_10010C880);
  __chkstk_darwin(v105);
  unsigned __int8 v107 = (char *)&v86 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000C6CE0();
  uint64_t v102 = *(void *)(v6 - 8);
  uint64_t v103 = v6;
  __chkstk_darwin(v6);
  Swift::String v100 = (char *)&v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = sub_100012854(&qword_10010C888);
  uint64_t v88 = *(void *)(v104 - 8);
  __chkstk_darwin(v104);
  Swift::String_optional v95 = (char *)&v86 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = sub_100012854(&qword_10010C890);
  uint64_t v90 = *(void *)(v106 - 8);
  uint64_t v9 = __chkstk_darwin(v106);
  int v87 = (char *)&v86 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  Swift::String_optional v89 = (char *)&v86 - v11;
  uint64_t v99 = sub_1000C6DC0();
  uint64_t v98 = *(void *)(v99 - 8);
  __chkstk_darwin(v99);
  char v86 = (char *)&v86 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100012854(&qword_10010C898);
  uint64_t v14 = v13 - 8;
  __chkstk_darwin(v13);
  uint64_t v97 = (char *)&v86 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100012854((uint64_t *)&unk_10010D3A0);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v91 = (uint64_t)&v86 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v86 - v20;
  __chkstk_darwin(v19);
  uint64_t v96 = (char *)&v86 - v22;
  uint64_t v110 = sub_100012854(&qword_10010C8A0);
  uint64_t v101 = *(void *)(v110 - 8);
  __chkstk_darwin(v110);
  uint64_t v24 = (char *)&v86 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = self;
  uint64_t v26 = (objc_class *)[v25 mainBundle];
  v84._countAndFlagsBits = 0x80000001000D69F0;
  v119._countAndFlagsBits = 0x4D2065766F6D6552;
  v119._unint64_t object = (void *)0xE900000000000065;
  v121.value._countAndFlagsBits = 0;
  v121.value._unint64_t object = 0;
  v27.super.Class isa = v26;
  v123._countAndFlagsBits = 0;
  v123._unint64_t object = (void *)0xE000000000000000;
  uint64_t v28 = sub_1000C6320(v119, v121, v27, v123, v84);
  uint64_t v30 = v29;

  uint64_t v31 = (objc_class *)[v25 mainBundle];
  v85._countAndFlagsBits = 0x80000001000D6A20;
  v120._countAndFlagsBits = 0x412065766F6D6552;
  v120._unint64_t object = (void *)0xED00007373656363;
  v122.value._countAndFlagsBits = 0;
  v122.value._unint64_t object = 0;
  v32.super.Class isa = v31;
  v124._countAndFlagsBits = 0;
  v124._unint64_t object = (void *)0xE000000000000000;
  uint64_t v33 = sub_1000C6320(v120, v122, v32, v124, v85);
  uint64_t v35 = v34;

  uint64_t v112 = v1;
  uint64_t v113 = v28;
  uint64_t v114 = v30;
  uint64_t v115 = v33;
  uint64_t v36 = v98;
  uint64_t v116 = v35;
  sub_100012854(&qword_10010C8A8);
  sub_10001E454(&qword_10010C8B0, &qword_10010C8A8);
  uint64_t v111 = v24;
  uint64_t v37 = v99;
  sub_1000C6F90();
  uint64_t v38 = (uint64_t)v97;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v39 = (uint64_t)v96;
  type metadata accessor for PersonInfoView();
  sub_1000606F8(v39);
  (*(void (**)(char *, void, uint64_t))(v36 + 104))(v21, enum case for UserInterfaceSizeClass.regular(_:), v37);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v21, 0, 1, v37);
  uint64_t v40 = v38 + *(int *)(v14 + 56);
  sub_10001A740(v39, v38, (uint64_t *)&unk_10010D3A0);
  sub_10001A740((uint64_t)v21, v40, (uint64_t *)&unk_10010D3A0);
  uint64_t v41 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48);
  if (v41(v38, 1, v37) != 1)
  {
    uint64_t v44 = v91;
    sub_10001A740(v38, v91, (uint64_t *)&unk_10010D3A0);
    if (v41(v40, 1, v37) != 1)
    {
      uint64_t v45 = v86;
      (*(void (**)(char *, uint64_t, uint64_t))(v36 + 32))(v86, v40, v37);
      sub_10004D244(&qword_10010C8C0, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
      char v46 = sub_1000C73F0();
      uint64_t v47 = *(void (**)(char *, uint64_t))(v36 + 8);
      v47(v45, v37);
      sub_10001326C((uint64_t)v21, (uint64_t *)&unk_10010D3A0);
      sub_10001326C(v39, (uint64_t *)&unk_10010D3A0);
      v47((char *)v44, v37);
      sub_10001326C(v38, (uint64_t *)&unk_10010D3A0);
      uint64_t v43 = v110;
      if (v46) {
        goto LABEL_8;
      }
LABEL_9:
      sub_1000C6D00();
      uint64_t v66 = sub_1000C6FF0();
      uint64_t v68 = v67;
      char v70 = v69 & 1;
      uint64_t v71 = v102;
      uint64_t v72 = v43;
      uint64_t v73 = v100;
      uint64_t v74 = v103;
      (*(void (**)(char *, void, uint64_t))(v102 + 104))(v100, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v103);
      uint64_t v99 = sub_10001E454(&qword_10010C8B8, &qword_10010C8A0);
      Swift::String v75 = v92;
      sub_1000C7080();
      sub_100039234(v66, v68, v70);
      swift_bridgeObjectRelease();
      uint64_t v76 = v73;
      uint64_t v62 = v72;
      (*(void (**)(char *, uint64_t))(v71 + 8))(v76, v74);
      uint64_t v77 = v94;
      uint64_t v78 = v93;
      uint64_t v79 = v109;
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v93, v75, v109);
      (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v107, v78, v79);
      swift_storeEnumTagMultiPayload();
      uint64_t v117 = v72;
      uint64_t v80 = v99;
      uint64_t v118 = v99;
      uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
      uint64_t v117 = v104;
      uint64_t v118 = OpaqueTypeConformance2;
      swift_getOpaqueTypeConformance2();
      uint64_t v117 = v62;
      uint64_t v118 = v80;
      swift_getOpaqueTypeConformance2();
      sub_1000C6D50();
      int v82 = v78;
      uint64_t v61 = v111;
      (*(void (**)(char *, uint64_t))(v77 + 8))(v82, v79);
      return (*(uint64_t (**)(char *, uint64_t))(v101 + 8))(v61, v62);
    }
    sub_10001326C((uint64_t)v21, (uint64_t *)&unk_10010D3A0);
    sub_10001326C(v39, (uint64_t *)&unk_10010D3A0);
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v44, v37);
    uint64_t v43 = v110;
LABEL_6:
    sub_10001326C(v38, &qword_10010C898);
    goto LABEL_9;
  }
  sub_10001326C((uint64_t)v21, (uint64_t *)&unk_10010D3A0);
  sub_10001326C(v39, (uint64_t *)&unk_10010D3A0);
  unsigned int v42 = v41(v40, 1, v37);
  uint64_t v43 = v110;
  if (v42 != 1) {
    goto LABEL_6;
  }
  sub_10001326C(v38, (uint64_t *)&unk_10010D3A0);
LABEL_8:
  sub_1000C6EA0();
  uint64_t v48 = sub_10001E454(&qword_10010C8B8, &qword_10010C8A0);
  uint64_t v99 = v48;
  sub_1000C7060();
  sub_1000C6D00();
  uint64_t v49 = sub_1000C6FF0();
  uint64_t v51 = v50;
  char v53 = v52 & 1;
  uint64_t v54 = v102;
  uint64_t v55 = v103;
  uint64_t v56 = v100;
  (*(void (**)(char *, void, uint64_t))(v102 + 104))(v100, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v103);
  uint64_t v117 = v110;
  uint64_t v118 = v48;
  uint64_t v98 = swift_getOpaqueTypeConformance2();
  uint64_t v57 = v87;
  uint64_t v58 = v104;
  uint64_t v59 = v95;
  sub_1000C7080();
  sub_100039234(v49, v51, v53);
  swift_bridgeObjectRelease();
  uint64_t v60 = v55;
  uint64_t v62 = v110;
  uint64_t v61 = v111;
  (*(void (**)(char *, uint64_t))(v54 + 8))(v56, v60);
  (*(void (**)(char *, uint64_t))(v88 + 8))(v59, v58);
  uint64_t v63 = v90;
  uint64_t v64 = v89;
  uint64_t v65 = v106;
  (*(void (**)(char *, char *, uint64_t))(v90 + 32))(v89, v57, v106);
  (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v107, v64, v65);
  swift_storeEnumTagMultiPayload();
  uint64_t v117 = v58;
  uint64_t v118 = v98;
  swift_getOpaqueTypeConformance2();
  uint64_t v117 = v62;
  uint64_t v118 = v99;
  swift_getOpaqueTypeConformance2();
  sub_1000C6D50();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v64, v65);
  return (*(uint64_t (**)(char *, uint64_t))(v101 + 8))(v61, v62);
}

uint64_t sub_10004A128@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v76 = a4;
  uint64_t v77 = a5;
  uint64_t v74 = a2;
  uint64_t v75 = a3;
  uint64_t v84 = a6;
  uint64_t v7 = sub_100012854(&qword_10010C8C8);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v83 = (uint64_t)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  int v82 = (uint64_t (*)(uint64_t))((char *)&v73 - v10);
  uint64_t v11 = type metadata accessor for PersonInfoView();
  uint64_t v99 = *(void *)(v11 - 8);
  uint64_t v12 = *(void *)(v99 + 64);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v78 = (uint64_t (*)(uint64_t))((char *)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v98 = (uint64_t)&v73 - v15;
  __chkstk_darwin(v14);
  uint64_t v97 = (uint64_t)&v73 - v16;
  uint64_t v17 = sub_100012854(&qword_10010C8D0);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v108 = (char *)&v73 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v73 - v22;
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v73 - v24;
  uint64_t v187 = 0;
  char v188 = 0;
  uint64_t v111 = a1;
  sub_100012854(&qword_10010C8D8);
  sub_10001E454(&qword_10010C8E0, &qword_10010C8D8);
  sub_1000C7300();
  uint64_t v109 = v18;
  uint64_t v110 = v17;
  uint64_t v26 = *(void (**)(void, void, void))(v18 + 32);
  unsigned __int8 v107 = v25;
  v26(v25, v23, v17);
  LOBYTE(v129) = 1;
  sub_1000C72D0();
  uint64_t v105 = v185;
  uint64_t v106 = v184;
  int v104 = v186;
  uint64_t v73 = v11;
  uint64_t v27 = a1;
  type metadata accessor for PersonInfoViewModel();
  sub_10004D244(&qword_10010C8E8, (void (*)(uint64_t))type metadata accessor for PersonInfoViewModel);
  sub_1000C6960();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v103 = v129;
  sub_1000C6970();
  swift_getKeyPath();
  sub_1000C6A80();
  swift_release();
  swift_release();
  uint64_t v101 = v182;
  uint64_t v102 = v181;
  int v100 = v183;
  uint64_t v28 = v97;
  sub_10004D018(a1, v97);
  unint64_t v29 = (*(unsigned __int8 *)(v99 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v99 + 80);
  uint64_t v99 = swift_allocObject();
  sub_10004D080(v28, v99 + v29);
  uint64_t v30 = v27;
  uint64_t v31 = v27;
  uint64_t v32 = v98;
  sub_10004D018(v30, v98);
  uint64_t v81 = swift_allocObject();
  sub_10004D080(v32, v81 + v29);
  sub_1000C6970();
  swift_getKeyPath();
  sub_1000C6A80();
  swift_release();
  swift_release();
  uint64_t v79 = v179;
  uint64_t v80 = v178;
  LODWORD(v98) = v180;
  LOBYTE(v129) = 1;
  sub_1000C72D0();
  uint64_t v96 = v176;
  uint64_t v97 = v175;
  int v95 = v177;
  sub_1000C6970();
  swift_getKeyPath();
  sub_1000C6A80();
  swift_release();
  swift_release();
  uint64_t v93 = v173;
  uint64_t v94 = v172;
  int v92 = v174;
  sub_1000C6970();
  swift_getKeyPath();
  sub_1000C6A80();
  swift_release();
  swift_release();
  uint64_t v33 = v129;
  uint64_t v34 = v130;
  uint64_t v35 = v131;
  swift_getKeyPath();
  *(void *)&long long v112 = v33;
  *((void *)&v112 + 1) = v34;
  *(void *)&long long v113 = v35;
  sub_100012854(&qword_10010C8F0);
  sub_1000C72A0();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v90 = v170;
  uint64_t v91 = v169;
  int v89 = v171;
  type metadata accessor for SharingModel();
  sub_10004D244((unint64_t *)&qword_10010BF20, (void (*)(uint64_t))type metadata accessor for SharingModel);
  uint64_t v36 = v31;
  uint64_t v37 = sub_1000C6B30();
  uint64_t v85 = v38;
  uint64_t v86 = v37;
  LOBYTE(v190[0]) = 1;
  uint64_t v39 = (uint64_t)v78;
  sub_1000C71E0();
  int v87 = v112;
  uint64_t v88 = *((void *)&v112 + 1);
  sub_1000C6960();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  LODWORD(v33) = v129;
  sub_10004D018(v36, v39);
  if (v33 == 1)
  {
    uint64_t v40 = sub_10004D37C(v39);
  }
  else
  {
    sub_1000C6960();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1000C67E0();
    swift_release();
    swift_release();
    swift_release();
    int v41 = v129;
    uint64_t v40 = sub_10004D37C(v39);
    if (v41 != 1)
    {
      uint64_t v46 = sub_100012854(&qword_10010C8F8);
      uint64_t v44 = (uint64_t)v82;
      (*(void (**)(uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v82, 1, 1, v46);
      goto LABEL_6;
    }
  }
  __chkstk_darwin(v40);
  uint64_t v42 = v74;
  *(&v73 - 6) = v36;
  *(&v73 - 5) = v42;
  uint64_t v43 = v76;
  *(&v73 - 4) = v75;
  *(&v73 - 3) = v43;
  *(&v73 - 2) = v77;
  sub_100012854(&qword_10010C908);
  sub_10004D408();
  uint64_t v44 = (uint64_t)v82;
  sub_1000C7310();
  uint64_t v45 = sub_100012854(&qword_10010C8F8);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v44, 0, 1, v45);
LABEL_6:
  uint64_t v47 = v108;
  uint64_t v48 = *(void (**)(void, void, void))(v109 + 16);
  uint64_t v49 = v110;
  v48(v108, v107, v110);
  uint64_t v50 = v83;
  sub_10001A740(v44, v83, &qword_10010C8C8);
  uint64_t v51 = v84;
  v48(v84, v47, v49);
  uint64_t v52 = sub_100012854(&qword_10010C900);
  uint64_t v53 = *(int *)(v52 + 48);
  *(void *)&long long v112 = v86;
  *((void *)&v112 + 1) = v85;
  *(void *)&long long v113 = _swiftEmptyArrayStorage;
  *((void *)&v113 + 1) = v106;
  *(void *)&long long v114 = v105;
  BYTE8(v114) = v104;
  *(_DWORD *)((char *)&v114 + 9) = v184;
  HIDWORD(v114) = *(_DWORD *)((char *)&v184 + 3);
  uint64_t v115 = 0;
  uint64_t v116 = 0;
  *(void *)&long long v117 = v103;
  *((void *)&v117 + 1) = v102;
  *(void *)&long long v118 = v101;
  BYTE8(v118) = v100;
  HIDWORD(v118) = *(_DWORD *)((char *)&v181 + 3);
  *(_DWORD *)((char *)&v118 + 9) = v181;
  uint64_t v54 = v44;
  int v82 = sub_10004D0E4;
  *(void *)&long long v119 = sub_10004D0E4;
  *((void *)&v119 + 1) = v99;
  *(void *)&long long v120 = _swiftEmptyArrayStorage;
  BYTE8(v120) = 0;
  *(_DWORD *)((char *)&v120 + 9) = v178;
  HIDWORD(v120) = *(_DWORD *)((char *)&v178 + 3);
  uint64_t v78 = sub_10004D100;
  *(_DWORD *)((char *)&v123 + 1) = v175;
  DWORD1(v123) = *(_DWORD *)((char *)&v175 + 3);
  HIDWORD(v124) = *(_DWORD *)((char *)&v172 + 3);
  *(_DWORD *)((char *)&v124 + 9) = v172;
  DWORD1(v126) = *(_DWORD *)((char *)&v169 + 3);
  *(_DWORD *)((char *)&v126 + 1) = v169;
  HIDWORD(v127) = *(_DWORD *)((char *)v190 + 3);
  *(_DWORD *)((char *)&v127 + 9) = v190[0];
  DWORD1(v128) = *(_DWORD *)&v189[3];
  *(_DWORD *)((char *)&v128 + 1) = *(_DWORD *)v189;
  uint64_t v55 = v80;
  uint64_t v56 = v81;
  *(void *)&long long v121 = sub_10004D100;
  *((void *)&v121 + 1) = v81;
  uint64_t v57 = v79;
  *(void *)&long long v122 = v80;
  *((void *)&v122 + 1) = v79;
  LOBYTE(v123) = v98;
  *((void *)&v123 + 1) = v97;
  *(void *)&long long v124 = v96;
  BYTE8(v124) = v95;
  *(void *)&long long v125 = v94;
  *((void *)&v125 + 1) = v93;
  LOBYTE(v126) = v92;
  *((void *)&v126 + 1) = v91;
  *(void *)&long long v127 = v90;
  BYTE8(v127) = v89;
  LOBYTE(v128) = v87;
  *((void *)&v128 + 1) = v88;
  long long v58 = v120;
  long long v59 = v121;
  long long v60 = v122;
  long long v61 = v123;
  long long v62 = v124;
  long long v63 = v125;
  long long v64 = v126;
  long long v65 = v127;
  long long v66 = v128;
  uint64_t v67 = (_OWORD *)(v51 + v53);
  void v67[2] = v114;
  v67[3] = 0u;
  long long v68 = v113;
  *uint64_t v67 = v112;
  v67[1] = v68;
  v67[6] = v119;
  v67[7] = v58;
  long long v69 = v118;
  v67[4] = v117;
  v67[5] = v69;
  v67[10] = v61;
  v67[11] = v62;
  v67[8] = v59;
  v67[9] = v60;
  v67[14] = v65;
  v67[15] = v66;
  v67[12] = v63;
  v67[13] = v64;
  sub_10001A740(v50, v51 + *(int *)(v52 + 64), &qword_10010C8C8);
  sub_100038E98(&v112);
  sub_10001326C(v54, &qword_10010C8C8);
  uint64_t v70 = v110;
  uint64_t v71 = *(void (**)(void, void))(v109 + 8);
  v71(v107, v110);
  sub_10001326C(v50, &qword_10010C8C8);
  uint64_t v129 = v86;
  uint64_t v130 = v85;
  uint64_t v131 = _swiftEmptyArrayStorage;
  uint64_t v132 = v106;
  uint64_t v133 = v105;
  char v134 = v104;
  *(_DWORD *)uint64_t v135 = v184;
  *(_DWORD *)&v135[3] = *(_DWORD *)((char *)&v184 + 3);
  uint64_t v137 = 0;
  uint64_t v136 = 0;
  uint64_t v138 = v103;
  uint64_t v139 = v102;
  uint64_t v140 = v101;
  char v141 = v100;
  *(_DWORD *)&v142[3] = *(_DWORD *)((char *)&v181 + 3);
  *(_DWORD *)uint64_t v142 = v181;
  unint64_t v143 = v82;
  uint64_t v144 = v99;
  uint64_t v145 = _swiftEmptyArrayStorage;
  char v146 = 0;
  *(_DWORD *)unint64_t v147 = v178;
  *(_DWORD *)&v147[3] = *(_DWORD *)((char *)&v178 + 3);
  uint64_t v148 = v78;
  uint64_t v149 = v56;
  uint64_t v150 = v55;
  uint64_t v151 = v57;
  char v152 = v98;
  *(_DWORD *)&v153[3] = *(_DWORD *)((char *)&v175 + 3);
  *(_DWORD *)double v153 = v175;
  uint64_t v154 = v97;
  uint64_t v155 = v96;
  char v156 = v95;
  *(_DWORD *)&v157[3] = *(_DWORD *)((char *)&v172 + 3);
  *(_DWORD *)uint64_t v157 = v172;
  uint64_t v158 = v94;
  uint64_t v159 = v93;
  char v160 = v92;
  *(_DWORD *)&v161[3] = *(_DWORD *)((char *)&v169 + 3);
  *(_DWORD *)uint64_t v161 = v169;
  uint64_t v162 = v91;
  uint64_t v163 = v90;
  char v164 = v89;
  *(_DWORD *)&v165[3] = *(_DWORD *)((char *)v190 + 3);
  *(_DWORD *)uint64_t v165 = v190[0];
  char v166 = v87;
  *(_DWORD *)&v167[3] = *(_DWORD *)&v189[3];
  *(_DWORD *)v167 = *(_DWORD *)v189;
  uint64_t v168 = v88;
  sub_100039054(&v129);
  return ((uint64_t (*)(char *, uint64_t))v71)(v108, v70);
}

uint64_t sub_10004AE74@<X0>(void *a1@<X8>)
{
  uint64_t v49 = sub_1000C6CF0();
  sub_10004B484(__src);
  uint64_t v35 = *(void *)&__src[0];
  uint64_t v47 = *(void *)&__src[1];
  uint64_t v48 = *((void *)&__src[0] + 1);
  uint64_t v45 = *(void *)&__src[2];
  uint64_t v46 = *((void *)&__src[1] + 1);
  uint64_t v43 = *(void *)&__src[3];
  uint64_t v44 = *((void *)&__src[2] + 1);
  uint64_t v41 = *(void *)&__src[4];
  uint64_t v42 = *((void *)&__src[3] + 1);
  uint64_t v37 = *((void *)&__src[5] + 1);
  uint64_t v38 = *(void *)&__src[5];
  uint64_t v40 = *((void *)&__src[6] + 1);
  v86[152] = 1;
  char v36 = BYTE8(__src[4]);
  v86[144] = BYTE8(__src[4]);
  char v39 = __src[6];
  v86[136] = __src[6];
  type metadata accessor for PersonInfoView();
  type metadata accessor for PersonInfoViewModel();
  sub_10004D244(&qword_10010C8E8, (void (*)(uint64_t))type metadata accessor for PersonInfoViewModel);
  uint64_t v1 = sub_1000C6960();
  uint64_t v2 = *(void *)(v1 + 72);
  unint64_t v3 = *(void *)(v1 + 80);
  swift_release();
  uint64_t v4 = HIBYTE(v3) & 0xF;
  if ((v3 & 0x2000000000000000) == 0) {
    uint64_t v4 = v2 & 0xFFFFFFFFFFFFLL;
  }
  if (v4)
  {
    uint64_t v32 = sub_1000C6D30();
    sub_10004BAC0((uint64_t)__src);
    long long v5 = __src[0];
    char v6 = __src[1];
    long long v31 = *(_OWORD *)((char *)&__src[1] + 8);
    uint64_t v7 = *((void *)&__src[2] + 1);
    char v8 = __src[3];
    uint64_t v9 = *((void *)&__src[3] + 1);
    char v10 = sub_1000C6EE0();
    sub_1000C6940();
    LOBYTE(v66[0]) = 1;
    LOBYTE(v52) = v6;
    v85[0] = v8;
    v65[0] = 0;
    __src[0] = (unint64_t)v32;
    LOBYTE(__src[1]) = 1;
    *(_OWORD *)((char *)&__src[1] + 8) = v5;
    BYTE8(__src[2]) = v6;
    __src[3] = v31;
    *(void *)&__src[4] = v7;
    BYTE8(__src[4]) = v8;
    *(void *)&__src[5] = v9;
    BYTE8(__src[5]) = v10;
    *(void *)&__src[6] = v11;
    *((void *)&__src[6] + 1) = v12;
    *(void *)&__src[7] = v13;
    *((void *)&__src[7] + 1) = v14;
    LOBYTE(__src[8]) = 0;
    nullsub_2(__src);
  }
  else
  {
    sub_10004DF04((uint64_t)__src);
  }
  sub_100012898((uint64_t)__src, (uint64_t)v86, &qword_10010C948);
  uint64_t v15 = sub_1000C6960();
  uint64_t v16 = *(void *)(v15 + 88);
  unint64_t v17 = *(void *)(v15 + 96);
  swift_release();
  uint64_t v18 = HIBYTE(v17) & 0xF;
  if ((v17 & 0x2000000000000000) == 0) {
    uint64_t v18 = v16 & 0xFFFFFFFFFFFFLL;
  }
  if (v18)
  {
    uint64_t v19 = sub_1000C6D30();
    sub_10004BD28((uint64_t)__src);
    long long v20 = __src[0];
    char v21 = __src[1];
    long long v33 = *(_OWORD *)((char *)&__src[1] + 8);
    uint64_t v22 = *((void *)&__src[2] + 1);
    char v23 = __src[3];
    uint64_t v24 = *((void *)&__src[3] + 1);
    char v25 = sub_1000C6EE0();
    sub_1000C6940();
    LOBYTE(v66[0]) = 1;
    LOBYTE(v52) = v21;
    v65[0] = v23;
    v64[0] = 0;
    __src[0] = (unint64_t)v19;
    LOBYTE(__src[1]) = 1;
    *(_OWORD *)((char *)&__src[1] + 8) = v20;
    BYTE8(__src[2]) = v21;
    __src[3] = v33;
    *(void *)&__src[4] = v22;
    BYTE8(__src[4]) = v23;
    *(void *)&__src[5] = v24;
    BYTE8(__src[5]) = v25;
    *(void *)&__src[6] = v26;
    *((void *)&__src[6] + 1) = v27;
    *(void *)&__src[7] = v28;
    *((void *)&__src[7] + 1) = v29;
    LOBYTE(__src[8]) = 0;
    nullsub_2(__src);
  }
  else
  {
    sub_10004DF04((uint64_t)__src);
  }
  sub_100012898((uint64_t)__src, (uint64_t)v85, &qword_10010C948);
  sub_100012898((uint64_t)v86, (uint64_t)v51, &qword_10010C948);
  sub_100012898((uint64_t)v85, (uint64_t)v50, &qword_10010C948);
  long long v52 = (unint64_t)v49;
  LOBYTE(v53) = 1;
  *(_DWORD *)((char *)&v53 + 1) = v89[0];
  DWORD1(v53) = *(_DWORD *)((char *)v89 + 3);
  *((void *)&v53 + 1) = v35;
  *(void *)&long long v54 = v48;
  *((void *)&v54 + 1) = v47;
  *(void *)&long long v55 = v46;
  *((void *)&v55 + 1) = v45;
  *(void *)&long long v56 = v44;
  *((void *)&v56 + 1) = v43;
  *(void *)&long long v57 = v42;
  *((void *)&v57 + 1) = v41;
  LOBYTE(v58) = v36;
  DWORD1(v58) = *(_DWORD *)&v88[3];
  *(_DWORD *)((char *)&v58 + 1) = *(_DWORD *)v88;
  *((void *)&v58 + 1) = v38;
  *(void *)&long long v59 = v37;
  BYTE8(v59) = v39;
  *(_DWORD *)((char *)&v59 + 9) = *(_DWORD *)v87;
  HIDWORD(v59) = *(_DWORD *)&v87[3];
  uint64_t v60 = v40;
  sub_100012898((uint64_t)v51, (uint64_t)v61, &qword_10010C948);
  sub_100012898((uint64_t)v50, (uint64_t)v62, &qword_10010C948);
  __src[6] = v58;
  __src[7] = v59;
  *(void *)&__src[8] = v60;
  __src[2] = v54;
  __src[3] = v55;
  __src[4] = v56;
  __src[5] = v57;
  __src[0] = v52;
  __src[1] = v53;
  sub_100012898((uint64_t)v61, (uint64_t)&__src[8] + 8, &qword_10010C948);
  sub_100012898((uint64_t)v62, (uint64_t)&__src[17], &qword_10010C948);
  memcpy(a1, __src, 0x191uLL);
  sub_100012898((uint64_t)v50, (uint64_t)v64, &qword_10010C948);
  sub_10004DBA8((uint64_t)&v52);
  sub_10004DD28((uint64_t)v61, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10004DCA4);
  sub_10004DD28((uint64_t)v62, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10004DCA4);
  sub_10004DD28((uint64_t)v64, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10004DD94);
  sub_100012898((uint64_t)v51, (uint64_t)v65, &qword_10010C948);
  sub_10004DD28((uint64_t)v65, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10004DD94);
  v66[0] = v49;
  v66[1] = 0;
  char v67 = 1;
  *(_DWORD *)long long v68 = v89[0];
  *(_DWORD *)&v68[3] = *(_DWORD *)((char *)v89 + 3);
  uint64_t v69 = v35;
  uint64_t v70 = v48;
  uint64_t v71 = v47;
  uint64_t v72 = v46;
  uint64_t v73 = v45;
  uint64_t v74 = v44;
  uint64_t v75 = v43;
  uint64_t v76 = v42;
  uint64_t v77 = v41;
  char v78 = v36;
  *(_DWORD *)&v79[3] = *(_DWORD *)&v88[3];
  *(_DWORD *)uint64_t v79 = *(_DWORD *)v88;
  uint64_t v80 = v38;
  uint64_t v81 = v37;
  char v82 = v39;
  *(_DWORD *)uint64_t v83 = *(_DWORD *)v87;
  *(_DWORD *)&v83[3] = *(_DWORD *)&v87[3];
  uint64_t v84 = v40;
  return sub_10004DE18((uint64_t)v66);
}

void sub_10004B484(void *a1@<X8>)
{
  uint64_t v40 = a1;
  uint64_t v1 = sub_1000C71B0();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for PersonInfoView();
  uint64_t v5 = type metadata accessor for PersonInfoViewModel();
  uint64_t v6 = sub_10004D244(&qword_10010C8E8, (void (*)(uint64_t))type metadata accessor for PersonInfoViewModel);
  uint64_t v42 = v5;
  uint64_t v41 = v6;
  uint64_t v7 = *(void **)(sub_1000C6960() + 104);
  id v8 = v7;
  swift_release();
  if (v7)
  {
    uint64_t v9 = qword_10010ACC8;
    id v10 = v8;
    if (v9 != -1) {
      swift_once();
    }
    sub_1000C7330();
    sub_1000C69F0();
    uint64_t v45 = (uint64_t)v7;
    long long v46 = xmmword_1000CE270;
    uint64_t v47 = v63;
    uint64_t v48 = v64;
    uint64_t v49 = v65;
    uint64_t v50 = v66;
    long long v51 = v67;
    char v52 = 0;
    sub_100012854(&qword_10010C950);
    sub_100012854(&qword_10010C958);
    sub_10004DF58(&qword_10010C960, &qword_10010C950, (void (*)(void))sub_10004DF28);
    sub_10004DF58(&qword_10010C978, &qword_10010C958, (void (*)(void))sub_10004DFD4);
    sub_1000C6D50();
  }
  else
  {
    sub_1000C71A0();
    (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for Image.ResizingMode.stretch(_:), v1);
    uint64_t v11 = sub_1000C71D0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    uint64_t v12 = sub_1000C7170();
    uint64_t KeyPath = swift_getKeyPath();
    if (qword_10010ACC8 != -1) {
      swift_once();
    }
    sub_1000C7330();
    sub_1000C69F0();
    uint64_t v45 = v11;
    *(void *)&long long v46 = KeyPath;
    *((void *)&v46 + 1) = v12;
    uint64_t v47 = v63;
    uint64_t v48 = v64;
    uint64_t v49 = v65;
    uint64_t v50 = v66;
    long long v51 = v67;
    char v52 = 1;
    sub_100012854(&qword_10010C950);
    sub_100012854(&qword_10010C958);
    sub_10004DF58(&qword_10010C960, &qword_10010C950, (void (*)(void))sub_10004DF28);
    sub_10004DF58(&qword_10010C978, &qword_10010C958, (void (*)(void))sub_10004DFD4);
    sub_1000C6D50();
  }
  uint64_t v14 = v53;
  uint64_t v15 = v54;
  uint64_t v16 = v56;
  uint64_t v43 = v55;
  uint64_t v17 = v58;
  uint64_t v44 = v57;
  uint64_t v18 = v59;
  uint64_t v19 = v60;
  uint64_t v39 = v61;
  char v20 = v62;
  uint64_t v21 = sub_1000C6960();
  char v23 = *(void **)(v21 + 56);
  uint64_t v22 = *(void *)(v21 + 64);
  swift_bridgeObjectRetain();
  swift_release();
  long long v53 = v23;
  uint64_t v54 = v22;
  sub_1000363CC();
  uint64_t v24 = sub_1000C7000();
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  LOBYTE(v53) = v20;
  char v29 = v20;
  char v31 = v30 & 1;
  uint64_t v32 = v40;
  *uint64_t v40 = v14;
  v32[1] = v15;
  uint64_t v33 = v43;
  v32[2] = v43;
  v32[3] = v16;
  uint64_t v34 = v33;
  uint64_t v43 = v33;
  uint64_t v35 = v16;
  uint64_t v38 = v16;
  uint64_t v36 = v44;
  v32[4] = v44;
  v32[5] = v17;
  uint64_t v44 = v36;
  v32[6] = v18;
  v32[7] = v19;
  uint64_t v37 = v39;
  v32[8] = v39;
  *((unsigned char *)v32 + 72) = v29;
  v32[10] = v24;
  v32[11] = v25;
  *((unsigned char *)v32 + 96) = v31;
  v32[13] = v28;
  sub_10004DC2C(v14, v15, v34, v35, v36, v17, v18, v19, v37, v29);
  sub_100039224(v24, v26, v31);
  swift_bridgeObjectRetain();
  sub_100039234(v24, v26, v31);
  swift_bridgeObjectRelease();
  sub_10004DE9C(v14, v15, v43, v38, v44, v17, v18, v19, v37, (char)v53);
}

uint64_t sub_10004BAC0@<X0>(uint64_t a1@<X8>)
{
  sub_1000C6D00();
  uint64_t v2 = sub_1000C6FF0();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  sub_1000C6F80();
  uint64_t v7 = sub_1000C6FE0();
  uint64_t v9 = v8;
  char v11 = v10;
  swift_release();
  char v12 = v11 & 1;
  sub_100039234(v2, v4, v6);
  swift_bridgeObjectRelease();
  sub_1000C7120();
  uint64_t v13 = sub_1000C6FB0();
  uint64_t v15 = v14;
  char v17 = v16;
  uint64_t v19 = v18;
  swift_release();
  sub_100039234(v7, v9, v12);
  swift_bridgeObjectRelease();
  type metadata accessor for PersonInfoView();
  type metadata accessor for PersonInfoViewModel();
  sub_10004D244(&qword_10010C8E8, (void (*)(uint64_t))type metadata accessor for PersonInfoViewModel);
  sub_1000C6960();
  swift_bridgeObjectRetain();
  swift_release();
  sub_1000363CC();
  uint64_t v20 = sub_1000C7000();
  uint64_t v22 = v21;
  LOBYTE(v9) = v23 & 1;
  *(void *)a1 = v13;
  *(void *)(a1 + 8) = v15;
  *(unsigned char *)(a1 + 16) = v17 & 1;
  *(void *)(a1 + 24) = v19;
  *(void *)(a1 + 32) = v20;
  *(void *)(a1 + 40) = v21;
  *(unsigned char *)(a1 + 48) = v23 & 1;
  *(void *)(a1 + 56) = v24;
  sub_100039224(v13, v15, v17 & 1);
  swift_bridgeObjectRetain();
  sub_100039224(v20, v22, v9);
  swift_bridgeObjectRetain();
  sub_100039234(v20, v22, v9);
  swift_bridgeObjectRelease();
  sub_100039234(v13, v15, v17 & 1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10004BD28@<X0>(uint64_t a1@<X8>)
{
  sub_1000C6D00();
  uint64_t v2 = sub_1000C6FF0();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  sub_1000C6F80();
  uint64_t v7 = sub_1000C6FE0();
  uint64_t v9 = v8;
  char v11 = v10;
  swift_release();
  char v12 = v11 & 1;
  sub_100039234(v2, v4, v6);
  swift_bridgeObjectRelease();
  sub_1000C7120();
  uint64_t v13 = sub_1000C6FB0();
  uint64_t v15 = v14;
  char v17 = v16;
  uint64_t v19 = v18;
  swift_release();
  sub_100039234(v7, v9, v12);
  swift_bridgeObjectRelease();
  type metadata accessor for PersonInfoView();
  type metadata accessor for PersonInfoViewModel();
  sub_10004D244(&qword_10010C8E8, (void (*)(uint64_t))type metadata accessor for PersonInfoViewModel);
  sub_1000C6960();
  swift_bridgeObjectRetain();
  swift_release();
  sub_1000363CC();
  uint64_t v20 = sub_1000C7000();
  uint64_t v22 = v21;
  LOBYTE(v9) = v23 & 1;
  *(void *)a1 = v13;
  *(void *)(a1 + 8) = v15;
  *(unsigned char *)(a1 + 16) = v17 & 1;
  *(void *)(a1 + 24) = v19;
  *(void *)(a1 + 32) = v20;
  *(void *)(a1 + 40) = v21;
  *(unsigned char *)(a1 + 48) = v23 & 1;
  *(void *)(a1 + 56) = v24;
  sub_100039224(v13, v15, v17 & 1);
  swift_bridgeObjectRetain();
  sub_100039224(v20, v22, v9);
  swift_bridgeObjectRetain();
  sub_100039234(v20, v22, v9);
  swift_bridgeObjectRelease();
  sub_100039234(v13, v15, v17 & 1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10004BF90@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_10004C010()
{
  return sub_1000C67F0();
}

uint64_t sub_10004C084(unsigned __int8 a1)
{
  type metadata accessor for PersonInfoView();
  type metadata accessor for PersonInfoViewModel();
  sub_10004D244(&qword_10010C8E8, (void (*)(uint64_t))type metadata accessor for PersonInfoViewModel);
  uint64_t v2 = sub_1000C6960();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000C67F0();
  sub_10002FD6C(*(void *)(v2 + 40), *(void *)(v2 + 48), a1);
  return swift_release();
}

uint64_t sub_10004C18C(char a1)
{
  type metadata accessor for PersonInfoView();
  type metadata accessor for PersonInfoViewModel();
  sub_10004D244(&qword_10010C8E8, (void (*)(uint64_t))type metadata accessor for PersonInfoViewModel);
  uint64_t v2 = sub_1000C6960();
  swift_beginAccess();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000C67F0();
  sub_1000300D4(*(void *)(v2 + 40), *(void *)(v2 + 48), a1 == 0);
  return swift_release();
}

uint64_t sub_10004C2B4@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_10004C2C8()
{
  return sub_1000114AC();
}

uint64_t sub_10004C2DC@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_10004C2F0()
{
  return sub_1000114AC();
}

uint64_t sub_10004C304@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v42 = a4;
  uint64_t v43 = a5;
  uint64_t v40 = a2;
  uint64_t v41 = a3;
  uint64_t v44 = a6;
  uint64_t v7 = type metadata accessor for PersonInfoView();
  uint64_t v8 = *(void *)(v7 - 8);
  v39[1] = v7 - 8;
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t v10 = __chkstk_darwin(v7 - 8);
  char v11 = (char *)v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v39 - v12;
  uint64_t v14 = sub_100012854(&qword_10010BE10);
  __chkstk_darwin(v14 - 8);
  char v16 = (char *)v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100012854(&qword_10010C920);
  uint64_t v18 = (int *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000C6910();
  uint64_t v21 = sub_1000C6930();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v16, 0, 1, v21);
  v39[0] = a1;
  sub_10004D018(a1, (uint64_t)v13);
  unint64_t v22 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v23 = swift_allocObject();
  sub_10004D080((uint64_t)v13, v23 + v22);
  sub_10004D018(a1, (uint64_t)v11);
  unint64_t v24 = (v22 + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v25 = swift_allocObject();
  sub_10004D080((uint64_t)v11, v25 + v22);
  uint64_t v26 = (void *)(v25 + v24);
  uint64_t v27 = v41;
  *uint64_t v26 = v40;
  v26[1] = v27;
  uint64_t v28 = (void *)(v25 + ((v24 + 23) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v29 = v43;
  *uint64_t v28 = v42;
  v28[1] = v29;
  sub_100012898((uint64_t)v16, (uint64_t)v20, &qword_10010BE10);
  char v30 = &v20[v18[11]];
  *(void *)char v30 = &unk_10010C940;
  *((void *)v30 + 1) = v23;
  char v31 = (double (**)@<D0>(uint64_t@<X8>))&v20[v18[12]];
  *char v31 = sub_10004DAD8;
  v31[1] = (double (*)@<D0>(uint64_t@<X8>))v25;
  uint64_t v32 = &v20[v18[13]];
  char v45 = 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000C71E0();
  uint64_t v33 = v47;
  *uint64_t v32 = v46;
  *((void *)v32 + 1) = v33;
  type metadata accessor for PersonInfoViewModel();
  sub_10004D244(&qword_10010C8E8, (void (*)(uint64_t))type metadata accessor for PersonInfoViewModel);
  sub_1000C6960();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  LOBYTE(v27) = v46;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v35 = swift_allocObject();
  *(unsigned char *)(v35 + 16) = v27;
  uint64_t v36 = v44;
  sub_10001A740((uint64_t)v20, v44, &qword_10010C920);
  uint64_t v37 = (uint64_t *)(v36 + *(int *)(sub_100012854(&qword_10010C908) + 36));
  *uint64_t v37 = KeyPath;
  v37[1] = (uint64_t)sub_10004DBA0;
  v37[2] = v35;
  return sub_10001326C((uint64_t)v20, &qword_10010C920);
}

uint64_t sub_10004C734(uint64_t a1)
{
  v1[5] = a1;
  sub_1000C6B00();
  v1[6] = swift_task_alloc();
  v1[7] = sub_100012854((uint64_t *)&unk_10010D410);
  v1[8] = swift_task_alloc();
  v1[9] = sub_1000C75D0();
  v1[10] = sub_1000C75C0();
  uint64_t v3 = sub_1000C7590();
  v1[11] = v3;
  v1[12] = v2;
  return _swift_task_switch(sub_10004C830, v3, v2);
}

uint64_t sub_10004C830()
{
  v0[13] = type metadata accessor for PersonInfoView();
  type metadata accessor for PersonInfoViewModel();
  sub_10004D244(&qword_10010C8E8, (void (*)(uint64_t))type metadata accessor for PersonInfoViewModel);
  v0[14] = sub_1000C6960();
  v0[15] = sub_1000C75C0();
  uint64_t v2 = sub_1000C7590();
  v0[16] = v2;
  v0[17] = v1;
  return _swift_task_switch(sub_10004C948, v2, v1);
}

uint64_t sub_10004C948()
{
  uint64_t v1 = v0[14];
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 16);
  v0[18] = v2;
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[19] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10004CA10;
  return sub_10002B35C(v2);
}

uint64_t sub_10004CA10()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 136);
  uint64_t v3 = *(void *)(v1 + 128);
  return _swift_task_switch(sub_10004CB54, v3, v2);
}

uint64_t sub_10004CB54()
{
  swift_release();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v2 = *(void *)(v0 + 96);
  return _swift_task_switch(sub_10004CBC0, v1, v2);
}

uint64_t sub_10004CBC0()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_release();
  sub_1000606CC(v1);
  sub_1000C7280();
  sub_1000C6AF0();
  sub_1000C7290();
  sub_10001326C(v1, (uint64_t *)&unk_10010D410);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

__n128 sub_10004CC94@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000C6CF0();
  sub_10004CD48((uint64_t)&v10);
  uint64_t v3 = v10;
  char v4 = v11;
  char v5 = v13;
  uint64_t v6 = v14;
  uint64_t v7 = v15;
  char v8 = v16;
  __n128 result = v12;
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  *(void *)(a1 + 24) = v3;
  *(unsigned char *)(a1 + 32) = v4;
  *(__n128 *)(a1 + 40) = result;
  *(unsigned char *)(a1 + 56) = v5;
  *(void *)(a1 + 64) = v6;
  *(void *)(a1 + 72) = v7;
  *(unsigned char *)(a1 + 80) = v8;
  return result;
}

uint64_t sub_10004CD48@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for PersonInfoView();
  type metadata accessor for PersonInfoViewModel();
  sub_10004D244(&qword_10010C8E8, (void (*)(uint64_t))type metadata accessor for PersonInfoViewModel);
  sub_1000C6960();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRetain();
  sub_1000363CC();
  uint64_t v2 = sub_1000C7000();
  uint64_t v4 = v3;
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
  char v6 = v5 & 1;
  *(void *)(a1 + 16) = v2;
  *(void *)(a1 + 24) = v3;
  *(unsigned char *)(a1 + 32) = v5 & 1;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = 0;
  *(unsigned char *)(a1 + 56) = 1;
  sub_100039224(v2, v3, v5 & 1);
  swift_bridgeObjectRetain();
  sub_100039234(v2, v4, v6);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10004CEEC()
{
  return sub_10004D3F0((uint64_t (*)(void, void, void, void, void))sub_10004A128);
}

uint64_t sub_10004CF04@<X0>(void *a1@<X8>)
{
  return sub_10004AE74(a1);
}

uint64_t sub_10004CF0C@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_10004CF90()
{
  return sub_1000C67F0();
}

uint64_t sub_10004D018(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PersonInfoView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10004D080(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PersonInfoView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10004D0E4(uint64_t a1)
{
  return sub_10004D118(a1, (uint64_t (*)(uint64_t, uint64_t))sub_10004C084);
}

uint64_t sub_10004D100(uint64_t a1)
{
  return sub_10004D118(a1, (uint64_t (*)(uint64_t, uint64_t))sub_10004C18C);
}

uint64_t sub_10004D118(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(type metadata accessor for PersonInfoView() - 8);
  uint64_t v5 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return a2(a1, v5);
}

uint64_t sub_10004D19C@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_10004D1C4()
{
  return sub_1000114AC();
}

uint64_t sub_10004D1F4@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_10004D21C()
{
  return sub_1000114AC();
}

uint64_t sub_10004D244(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10004D28C@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_10004D2A0@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_10004D2C8()
{
  return sub_1000114AC();
}

uint64_t sub_10004D2DC()
{
  return sub_1000114AC();
}

uint64_t sub_10004D304@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_10004D318@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_10004D340()
{
  return sub_1000114AC();
}

uint64_t sub_10004D354()
{
  return sub_1000114AC();
}

uint64_t sub_10004D37C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PersonInfoView();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10004D3D8()
{
  return sub_10004D3F0((uint64_t (*)(void, void, void, void, void))sub_10004C304);
}

uint64_t sub_10004D3F0(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6]);
}

unint64_t sub_10004D408()
{
  unint64_t result = qword_10010C910;
  if (!qword_10010C910)
  {
    sub_100013128(&qword_10010C908);
    sub_10001E454(&qword_10010C918, &qword_10010C920);
    sub_10001E454((unint64_t *)&qword_10010C928, &qword_10010C930);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010C910);
  }
  return result;
}

uint64_t sub_10004D4D0()
{
  uint64_t v1 = type metadata accessor for PersonInfoView();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v5 = v0 + v3;
  sub_100012854(&qword_10010C7A8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1000C6A00();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  }
  else
  {
    swift_release();
  }
  sub_10004809C();
  swift_release();
  uint64_t v7 = v5 + *(int *)(v1 + 28);
  sub_100012854(&qword_10010C7B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_1000C6DC0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v10 = v5 + *(int *)(v1 + 32);
  sub_100012854(&qword_10010B7B0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    swift_release();
    uint64_t v12 = v10 + *(int *)(sub_100012854((uint64_t *)&unk_10010D410) + 32);
    uint64_t v13 = sub_1000C6B00();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_10004D754()
{
  uint64_t v2 = *(void *)(type metadata accessor for PersonInfoView() - 8);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_100013B98;
  return sub_10004C734(v3);
}

uint64_t sub_10004D820()
{
  uint64_t v1 = type metadata accessor for PersonInfoView();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v5 = v0 + v3;
  sub_100012854(&qword_10010C7A8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1000C6A00();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  }
  else
  {
    swift_release();
  }
  sub_10004809C();
  swift_release();
  uint64_t v7 = v5 + *(int *)(v1 + 28);
  sub_100012854(&qword_10010C7B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_1000C6DC0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v10 = v5 + *(int *)(v1 + 32);
  sub_100012854(&qword_10010B7B0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    swift_release();
    uint64_t v12 = v10 + *(int *)(sub_100012854((uint64_t *)&unk_10010D410) + 32);
    uint64_t v13 = sub_1000C6B00();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, ((((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16, v2 | 7);
}

double sub_10004DAD8@<D0>(uint64_t a1@<X8>)
{
  type metadata accessor for PersonInfoView();

  *(void *)&double result = sub_10004CC94(a1).n128_u64[0];
  return result;
}

uint64_t sub_10004DB90()
{
  return _swift_deallocObject(v0, 17, 7);
}

unsigned char *sub_10004DBA0(unsigned char *a1)
{
  return sub_1000B3C50(a1, *(unsigned char *)(v1 + 16));
}

uint64_t sub_10004DBA8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 104);
  uint64_t v3 = *(void *)(a1 + 112);
  char v4 = *(unsigned char *)(a1 + 120);
  sub_10004DC2C(*(void **)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(unsigned char *)(a1 + 96));
  sub_100039224(v2, v3, v4);
  swift_bridgeObjectRetain();
  return a1;
}

id sub_10004DC2C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  if (a10)
  {
    swift_retain();
    swift_retain();
    return (id)swift_retain();
  }
  else
  {
    return a1;
  }
}

uint64_t sub_10004DCA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  if (a7)
  {
    sub_100039224(a4, a5, a6 & 1);
    swift_bridgeObjectRetain();
    sub_100039224(a8, a9, a10 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_10004DD28(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 128);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), v4);
  return a1;
}

uint64_t sub_10004DD94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  if (a7)
  {
    sub_100039234(a4, a5, a6 & 1);
    swift_bridgeObjectRelease();
    sub_100039234(a8, a9, a10 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10004DE18(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 104);
  uint64_t v3 = *(void *)(a1 + 112);
  char v4 = *(unsigned char *)(a1 + 120);
  sub_10004DE9C(*(void **)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(unsigned char *)(a1 + 96));
  sub_100039234(v2, v3, v4);
  swift_bridgeObjectRelease();
  return a1;
}

void sub_10004DE9C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  if (a10)
  {
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
  }
}

double sub_10004DF04(uint64_t a1)
{
  *(unsigned char *)(a1 + 128) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t sub_10004DF28()
{
  return sub_10004DF58(&qword_10010C968, &qword_10010C970, (void (*)(void))sub_100037414);
}

uint64_t sub_10004DF58(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100013128(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10004DFD4()
{
  unint64_t result = qword_10010C980;
  if (!qword_10010C980)
  {
    sub_100013128(&qword_10010C988);
    sub_10001E454(&qword_10010C990, &qword_10010C998);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010C980);
  }
  return result;
}

unint64_t sub_10004E078()
{
  unint64_t result = qword_10010C9A0;
  if (!qword_10010C9A0)
  {
    sub_100013128(&qword_10010C9A8);
    sub_100013128(&qword_10010C888);
    sub_100013128(&qword_10010C8A0);
    sub_10001E454(&qword_10010C8B8, &qword_10010C8A0);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010C9A0);
  }
  return result;
}

uint64_t sub_10004E1A8()
{
  uint64_t v0 = sub_1000C66D0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectRelease();
  if (!Strong)
  {
    sub_1000C66B0();
    uint64_t v5 = sub_1000C66C0();
    os_log_type_t v6 = sub_1000C7690();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "ext computed property--extensionController is nil--will assert", v7, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (!result)
  {
    __break(1u);
    return result;
  }
  uint64_t v9 = (uint64_t *)(result + OBJC_IVAR___CloudSharingViewController_ckClientFolderSubitemName);
  uint64_t v10 = *(void *)(result + OBJC_IVAR___CloudSharingViewController_ckClientFolderSubitemName + 8);
  if (v10
    || (uint64_t v9 = (uint64_t *)(result + OBJC_IVAR___CloudSharingViewController_ckClientRootFolderName),
        (uint64_t v10 = *(void *)(result + OBJC_IVAR___CloudSharingViewController_ckClientRootFolderName + 8)) != 0))
  {
    uint64_t v11 = *v9;
    swift_bridgeObjectRetain();
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v11 = *(void *)(result + OBJC_IVAR___CloudSharingViewController_explicitOrURLName);
    uint64_t v10 = *(void *)(result + OBJC_IVAR___CloudSharingViewController_explicitOrURLName + 8);
    swift_bridgeObjectRetain();
    uint64_t result = swift_unknownObjectRelease();
    if (!v10) {
      return result;
    }
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  if (v14 == v11 && v15 == v10) {
    return swift_bridgeObjectRelease_n();
  }
  char v13 = sub_1000C7A50();
  swift_bridgeObjectRelease();
  if (v13) {
    return swift_bridgeObjectRelease();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v14 = v11;
  uint64_t v15 = v10;
  swift_retain();
  return sub_1000C67F0();
}

uint64_t sub_10004E450()
{
  return sub_100060C84();
}

uint64_t sub_10004E464()
{
  return sub_10001AEE4();
}

uint64_t sub_10004E478()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10004E4EC()
{
  return sub_100024704();
}

uint64_t sub_10004E500()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10004E574()
{
  return sub_10001AEE4();
}

unint64_t sub_10004E588(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100012854(&qword_10010D350);
  uint64_t v2 = (void *)sub_1000C79C0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  char v4 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 2);
    uint64_t v6 = (uint64_t)*(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    id v8 = v7;
    unint64_t result = sub_100072728(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v11 = v5;
    v11[1] = v6;
    *(void *)(v2[7] + 8 * result) = v8;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10004E6A4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100012854(&qword_10010BDF8);
  uint64_t v2 = (void *)sub_1000C79C0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  char v4 = (void *)(a1 + 48);
  while (1)
  {
    char v5 = *((unsigned char *)v4 - 16);
    uint64_t v7 = *(v4 - 1);
    uint64_t v6 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1000727A0(v5);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v2[6] + result) = v5;
    char v10 = (void *)(v2[7] + 16 * result);
    *char v10 = v7;
    v10[1] = v6;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_10004E7B4(char a1)
{
  *(void *)(v2 + 184) = v1;
  *(unsigned char *)(v2 + 105) = a1;
  sub_100012854(&qword_10010CB70);
  *(void *)(v2 + 192) = swift_task_alloc();
  *(void *)(v2 + 200) = swift_task_alloc();
  *(void *)(v2 + 208) = swift_task_alloc();
  sub_100012854(&qword_10010BE10);
  *(void *)(v2 + 216) = swift_task_alloc();
  uint64_t v3 = type metadata accessor for AlertViewModelButton(0);
  *(void *)(v2 + 224) = v3;
  *(void *)(v2 + 232) = *(void *)(v3 - 8);
  *(void *)(v2 + 240) = swift_task_alloc();
  *(void *)(v2 + 248) = swift_task_alloc();
  uint64_t v4 = sub_1000C66D0();
  *(void *)(v2 + 256) = v4;
  *(void *)(v2 + 264) = *(void *)(v4 - 8);
  *(void *)(v2 + 272) = swift_task_alloc();
  *(void *)(v2 + 280) = swift_task_alloc();
  *(void *)(v2 + 288) = swift_task_alloc();
  *(void *)(v2 + 296) = swift_task_alloc();
  *(void *)(v2 + 304) = swift_task_alloc();
  *(void *)(v2 + 312) = swift_task_alloc();
  *(void *)(v2 + 320) = swift_task_alloc();
  sub_100012854(&qword_10010B770);
  *(void *)(v2 + 328) = swift_task_alloc();
  *(void *)(v2 + 336) = sub_1000C75D0();
  *(void *)(v2 + 344) = sub_1000C75C0();
  uint64_t v6 = sub_1000C7590();
  *(void *)(v2 + 352) = v6;
  *(void *)(v2 + 360) = v5;
  return _swift_task_switch(sub_10004EA14, v6, v5);
}

uint64_t sub_10004EA14()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  if ((*(unsigned char *)(v0 + 57) & 1) != 0
    || (swift_getKeyPath(),
        swift_getKeyPath(),
        sub_1000C67E0(),
        swift_release(),
        swift_release(),
        *(unsigned __int8 *)(v0 + 62) - 2 > 3))
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    char v9 = *(uint64_t (**)(void))(v0 + 8);
    return v9();
  }
  else
  {
    uint64_t v1 = *(void *)(v0 + 328);
    uint64_t v2 = *(void *)(v0 + 184);
    sub_1000C75E0();
    uint64_t v3 = sub_1000C7600();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v1, 0, 1, v3);
    swift_retain();
    uint64_t v4 = sub_1000C75C0();
    uint64_t v5 = (void *)swift_allocObject();
    v5[2] = v4;
    v5[3] = &protocol witness table for MainActor;
    v5[4] = v2;
    uint64_t v6 = sub_1000BD118(v1, (uint64_t)&unk_10010D3F0, (uint64_t)v5);
    *(void *)(v0 + 368) = v6;
    swift_getKeyPath();
    swift_getKeyPath();
    *(unsigned char *)(v0 + 61) = 0;
    swift_retain();
    sub_1000C67F0();
    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 376) = v7;
    uint64_t v8 = sub_100012854((uint64_t *)&unk_10010B010);
    *(void *)(v0 + 384) = v8;
    void *v7 = v0;
    v7[1] = sub_10004ED78;
    return Task.value.getter(v8, v6, (char *)&type metadata for () + 8, v8, &protocol self-conformance witness table for Error);
  }
}

uint64_t sub_10004ED78()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 392) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 360);
  uint64_t v4 = *(void *)(v2 + 352);
  if (v0) {
    uint64_t v5 = sub_10004F028;
  }
  else {
    uint64_t v5 = sub_10004EEB4;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10004EEB4()
{
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 63) = 2;
  swift_retain();
  sub_1000C67F0();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10004F028()
{
  uint64_t v161 = v0;
  *(void *)(v0 + 144) = *(void *)(v0 + 392);
  swift_errorRetain();
  if (swift_dynamicCast())
  {
    swift_errorRelease();
    uint64_t v1 = *(void *)(v0 + 16);
    uint64_t v2 = *(void *)(v0 + 24);
    *(void *)(v0 + 400) = v1;
    *(void *)(v0 + 408) = v2;
    uint64_t v4 = *(void **)(v0 + 32);
    uint64_t v3 = *(void *)(v0 + 40);
    *(void *)(v0 + 416) = v4;
    *(void *)(v0 + 424) = v3;
    uint64_t v5 = *(void *)(v0 + 48);
    *(void *)(v0 + 432) = v5;
    int v158 = *(unsigned __int8 *)(v0 + 56);
    swift_getKeyPath();
    swift_getKeyPath();
    *(unsigned char *)(v0 + 60) = 2;
    swift_retain();
    int v6 = v158;
    uint64_t v7 = v1;
    sub_1000C67F0();
    sub_1000C66B0();
    sub_1000236F4(v1, v2, v4, v3, v5, v158);
    uint64_t v8 = v5;
    sub_1000236F4(v1, v2, v4, v3, v5, v158);
    char v9 = sub_1000C66C0();
    os_log_type_t type = sub_1000C7670();
    BOOL v10 = os_log_type_enabled(v9, type);
    uint64_t v154 = v5;
    uint64_t v155 = *(void *)(v0 + 320);
    uint64_t v11 = *(void *)(v0 + 264);
    uint64_t v12 = *(void *)(v0 + 256);
    if (v10)
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v160 = swift_slowAlloc();
      buf = v13;
      *(_DWORD *)uint64_t v13 = 136315138;
      *(void *)(v0 + 64) = v7;
      *(void *)(v0 + 72) = v2;
      *(void *)(v0 + 80) = v4;
      *(void *)(v0 + 88) = v3;
      *(void *)(v0 + 96) = v8;
      *(unsigned char *)(v0 + 104) = v158;
      sub_1000236F4(v7, v2, v4, v3, v8, v158);
      uint64_t v14 = sub_1000C7450();
      *(void *)(v0 + 152) = sub_1000720D0(v14, v15, &v160);
      sub_1000C7850();
      int v6 = v158;
      swift_bridgeObjectRelease();
      sub_10002376C(v7, v2, v4, v3, v8, v158);
      sub_10002376C(v7, v2, v4, v3, v8, v158);
      _os_log_impl((void *)&_mh_execute_header, v9, type, "saveShareAndReportErrors error: %s", buf, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      char v16 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
      uint64_t result = v16(v155, v12);
      uint64_t v18 = v2;
      uint64_t v19 = v4;
      uint64_t v20 = v3;
      uint64_t v21 = v154;
    }
    else
    {
      sub_10002376C(v7, v2, v4, v3, v8, v158);
      sub_10002376C(v7, v2, v4, v3, v8, v158);

      char v16 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
      uint64_t result = v16(v155, v12);
      uint64_t v18 = v2;
      uint64_t v19 = v4;
      uint64_t v20 = v3;
      uint64_t v21 = v8;
    }
    *(void *)(v0 + 440) = v16;
    if (v6 != 4)
    {
      swift_release();
LABEL_34:
      sub_100012A24();
      swift_allocError();
      *(void *)uint64_t v92 = v7;
      *(void *)(v92 + 8) = v18;
      *(void *)(v92 + 16) = v19;
      *(void *)(v92 + 24) = v20;
      *(void *)(v92 + 32) = v21;
      *(unsigned char *)(v92 + 40) = v6;
      sub_1000236F4(v7, v18, v19, v20, v21, v6);
      swift_willThrow();
      swift_release();
      uint64_t v93 = v7;
      uint64_t v94 = v18;
      int v95 = v19;
      uint64_t v96 = v20;
      uint64_t v97 = v21;
      unsigned __int8 v98 = v6;
LABEL_35:
      sub_10002376C(v93, v94, v95, v96, v97, v98);
      goto LABEL_36;
    }
    if (!v19)
    {
      __break(1u);
      return result;
    }
    sub_1000236F4(v7, v18, v19, v20, v21, 4u);
    id v22 = v19;
    char v23 = sub_1000239F0(22);

    if (v23)
    {
      uint64_t v149 = v20;
      char v156 = v19;
      uint64_t v24 = v18;
      uint64_t v25 = v7;
      sub_1000C66B0();
      uint64_t v26 = sub_1000C66C0();
      os_log_type_t v27 = sub_1000C7670();
      if (os_log_type_enabled(v26, v27))
      {
        uint64_t v28 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v28 = 0;
        _os_log_impl((void *)&_mh_execute_header, v26, v27, "saveShareAndReportErrors got batchRequestFailed, will retry once", v28, 2u);
        swift_slowDealloc();
      }
      uint64_t v29 = *(void *)(v0 + 312);
      uint64_t v30 = *(void *)(v0 + 256);
      uint64_t v31 = *(void *)(v0 + 264);
      int v32 = *(unsigned __int8 *)(v0 + 105);

      *(void *)(v0 + 448) = (v31 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      v16(v29, v30);
      if (v32 == 1)
      {
        uint64_t v33 = (void *)swift_task_alloc();
        *(void *)(v0 + 456) = v33;
        *uint64_t v33 = v0;
        v33[1] = sub_100050454;
        return sub_10004E7B4(0);
      }

      uint64_t v18 = v24;
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v21 = v154;
      swift_bridgeObjectRelease();
      uint64_t v7 = v25;
      uint64_t v19 = v156;
      uint64_t v20 = v149;
      goto LABEL_33;
    }
    swift_release();
    id v34 = v22;
    char v35 = sub_1000239F0(14);

    if (v35)
    {
      uint64_t v159 = v34;
      os_log_t log = (os_log_t)v7;
      uint64_t v150 = v20;
      uint64_t v157 = v19;
      uint64_t v147 = v18;
      uint64_t v36 = (_OWORD *)(v0 + 112);
      sub_1000C66B0();
      uint64_t v37 = sub_1000C66C0();
      os_log_type_t v38 = sub_1000C7670();
      if (os_log_type_enabled(v37, v38))
      {
        uint64_t v39 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v39 = 0;
        _os_log_impl((void *)&_mh_execute_header, v37, v38, "saveShareAndReportErrors got oplock error, will update share and show alert", v39, 2u);
        swift_slowDealloc();
      }
      uint64_t v40 = *(void *)(v0 + 304);
      uint64_t v41 = *(void *)(v0 + 256);

      v16(v40, v41);
      id v42 = [v159 userInfo];
      uint64_t v43 = sub_1000C73B0();

      uint64_t v44 = sub_1000C7440();
      if (*(void *)(v43 + 16) && (unint64_t v46 = sub_100072728(v44, v45), (v47 & 1) != 0))
      {
        sub_100075E70(*(void *)(v43 + 56) + 32 * v46, (uint64_t)v36);
      }
      else
      {
        *uint64_t v36 = 0u;
        *(_OWORD *)(v0 + 128) = 0u;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(v0 + 136))
      {
        sub_1000132C8(0, (unint64_t *)&qword_10010B028);
        if (swift_dynamicCast())
        {
          uint64_t v86 = *(void **)(v0 + 176);
          sub_1000C66B0();
          id v87 = v86;
          uint64_t v88 = sub_1000C66C0();
          os_log_type_t v89 = sub_1000C7660();
          uint64_t v139 = v0;
          if (os_log_type_enabled(v88, v89))
          {
            uint64_t v90 = (uint8_t *)swift_slowAlloc();
            bufb = (uint8_t *)swift_slowAlloc();
            *(_DWORD *)uint64_t v90 = 138412290;
            *(void *)(v0 + 160) = v87;
            id v91 = v87;
            sub_1000C7850();
            *(void *)bufb = v87;

            _os_log_impl((void *)&_mh_execute_header, v88, v89, "saveShareAndReportErrors oplock error server's updated share: %@", v90, 0xCu);
            sub_100012854((uint64_t *)&unk_10010B1E0);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
          }
          uint64_t v70 = *(void *)(v0 + 248);
          unsigned __int8 v107 = *(int **)(v0 + 224);
          uint64_t v108 = *(void *)(v0 + 208);
          uint64_t v109 = *(void *)(v0 + 216);
          uint64_t v142 = *(void *)(v0 + 232);
          bufc = *(uint8_t **)(v0 + 200);
          v16(*(void *)(v0 + 296), *(void *)(v0 + 256));
          swift_getKeyPath();
          swift_getKeyPath();
          *(void *)(v0 + 168) = v87;
          id typeb = v87;
          swift_retain();
          sub_1000C67F0();
          sub_1000C6D00();
          LOWORD(v137._object) = 256;
          uint64_t v110 = sub_1000C6FF0();
          uint64_t v112 = v111;
          char v114 = v113;
          uint64_t v116 = v115;
          uint64_t v117 = sub_1000C6930();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v117 - 8) + 56))(v109, 1, 1, v117);
          uint64_t v118 = swift_allocObject();
          swift_weakInit();
          sub_1000C6560();
          uint64_t v119 = v70 + v107[5];
          *(void *)uint64_t v119 = v110;
          *(void *)(v119 + 8) = v112;
          *(unsigned char *)(v119 + 16) = v114 & 1;
          *(void *)(v119 + 24) = v116;
          sub_100012898(v109, v70 + v107[6], &qword_10010BE10);
          long long v120 = (uint64_t (**)())(v70 + v107[7]);
          *long long v120 = sub_1000760C8;
          v120[1] = (uint64_t (*)())v118;
          long long v121 = self;
          long long v122 = (objc_class *)objc_msgSend(v121, "mainBundle", 0);
          v137._countAndFlagsBits = 0x80000001000D7710;
          v164._unint64_t object = (void *)0x80000001000D76F0;
          v164._countAndFlagsBits = 0x1000000000000019;
          v167.value._countAndFlagsBits = 0;
          v167.value._unint64_t object = 0;
          v123.super.Class isa = v122;
          v170._countAndFlagsBits = 0;
          v170._unint64_t object = (void *)0xE000000000000000;
          uint64_t v124 = sub_1000C6320(v164, v167, v123, v170, v137);
          uint64_t v126 = v125;

          long long v127 = (objc_class *)[v121 mainBundle];
          v138._countAndFlagsBits = 0x80000001000D7760;
          v165._unint64_t object = (void *)0x80000001000D7740;
          v165._countAndFlagsBits = 0xD000000000000011;
          v168.value._countAndFlagsBits = 0;
          v168.value._unint64_t object = 0;
          v128.super.Class isa = v127;
          v171._countAndFlagsBits = 0;
          v171._unint64_t object = (void *)0xE000000000000000;
          uint64_t v129 = sub_1000C6320(v165, v168, v128, v171, v138);
          uint64_t v131 = v130;

          sub_100012854(&qword_10010BE18);
          unint64_t v132 = (*(unsigned __int8 *)(v142 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v142 + 80);
          uint64_t v133 = swift_allocObject();
          *(_OWORD *)(v133 + 16) = xmmword_1000CABA0;
          sub_100036FC4(v70, v133 + v132);
          sub_1000C6560();
          char v134 = (int *)type metadata accessor for AlertViewModel(0);
          uint64_t v135 = (uint64_t *)(v108 + v134[5]);
          *uint64_t v135 = v124;
          v135[1] = v126;
          uint64_t v136 = (uint64_t *)(v108 + v134[6]);
          *uint64_t v136 = v129;
          v136[1] = v131;
          uint64_t v85 = v139;
          *(void *)(v108 + v134[7]) = v133;
          (*(void (**)(uint64_t, void, uint64_t, int *))(*((void *)v134 - 1) + 56))(v108, 0, 1, v134);
          swift_getKeyPath();
          swift_getKeyPath();
          sub_10001A740(v108, (uint64_t)bufc, &qword_10010CB70);
          swift_retain();
          sub_1000C67F0();
          sub_10001326C(v108, &qword_10010CB70);
          swift_getKeyPath();
          swift_getKeyPath();
          *(unsigned char *)(v139 + 59) = 1;
          swift_retain();
          sub_1000C67F0();
          swift_release();

          goto LABEL_46;
        }
      }
      else
      {
        sub_10001326C((uint64_t)v36, (uint64_t *)&unk_10010D400);
      }
      sub_1000C66B0();
      int v100 = sub_1000C66C0();
      os_log_type_t v101 = sub_1000C7660();
      if (os_log_type_enabled(v100, v101))
      {
        uint64_t v102 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v102 = 0;
        _os_log_impl((void *)&_mh_execute_header, v100, v101, "saveShareAndReportErrors userInfo has no CKRecordChangedErrorServerRecordKey, so rethrow oplock", v102, 2u);
        swift_slowDealloc();
      }
      uint64_t v103 = *(void *)(v0 + 288);
      uint64_t v104 = *(void *)(v0 + 256);

      v16(v103, v104);
      sub_100012A24();
      swift_allocError();
      *(void *)uint64_t v105 = log;
      *(void *)(v105 + 8) = v18;
      *(void *)(v105 + 16) = v19;
      *(void *)(v105 + 24) = v20;
      *(void *)(v105 + 32) = v154;
      *(unsigned char *)(v105 + 40) = 4;
      swift_bridgeObjectRetain();
      id v106 = v159;
      swift_bridgeObjectRetain();
      swift_willThrow();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v93 = (uint64_t)log;
      uint64_t v94 = v18;
      int v95 = v19;
      uint64_t v96 = v20;
      uint64_t v97 = v154;
      unsigned __int8 v98 = 4;
      goto LABEL_35;
    }
    id v48 = v34;
    char v49 = sub_100023CCC((id)0x7DB);

    if ((v49 & 1) == 0)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_33:
      LOBYTE(v6) = v158;
      goto LABEL_34;
    }
    uint64_t v159 = v34;
    os_log_t log = (os_log_t)v7;
    uint64_t v150 = v20;
    uint64_t v157 = v19;
    uint64_t v147 = v18;
    sub_1000C66B0();
    uint64_t v50 = sub_1000C66C0();
    os_log_type_t v51 = sub_1000C7660();
    if (os_log_type_enabled(v50, v51))
    {
      char v52 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v52 = 0;
      _os_log_impl((void *)&_mh_execute_header, v50, v51, "saveShareAndReportErrors got rejected login error", v52, 2u);
      swift_slowDealloc();
    }
    uint64_t v53 = *(void *)(v0 + 280);
    uint64_t v54 = *(void *)(v0 + 256);
    uint64_t v55 = v0;
    uint64_t v56 = *(uint8_t **)(v0 + 232);
    uint64_t v57 = *(void *)(v0 + 240);
    uint64_t v58 = *(int **)(v0 + 224);
    uint64_t v141 = *(void *)(v55 + 216);
    uint64_t typea = *(void *)(v55 + 208);
    uint64_t v59 = *(void *)(v55 + 192);
    bufa = v56;

    v16(v53, v54);
    sub_1000C6D00();
    LOWORD(v137._object) = 256;
    uint64_t v60 = sub_1000C6FF0();
    uint64_t v62 = v61;
    char v64 = v63;
    uint64_t v140 = v65;
    uint64_t v66 = sub_1000C6930();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56))(v141, 1, 1, v66);
    uint64_t v67 = swift_allocObject();
    swift_weakInit();
    swift_retain();
    sub_1000C6560();
    uint64_t v68 = v57 + v58[5];
    *(void *)uint64_t v68 = v60;
    *(void *)(v68 + 8) = v62;
    *(unsigned char *)(v68 + 16) = v64 & 1;
    *(void *)(v68 + 24) = v140;
    sub_100012898(v141, v57 + v58[6], &qword_10010BE10);
    swift_release();
    uint64_t v69 = (uint64_t (**)())(v57 + v58[7]);
    *uint64_t v69 = sub_1000760C0;
    v69[1] = (uint64_t (*)())v67;
    uint64_t v70 = v57;
    uint64_t v71 = (objc_class *)objc_msgSend(self, "mainBundle", 0);
    v137._countAndFlagsBits = 0x80000001000D76A0;
    v163._countAndFlagsBits = 0x6E67695320746F4ELL;
    v163._unint64_t object = (void *)0xED00006E49206465;
    v166.value._countAndFlagsBits = 0;
    v166.value._unint64_t object = 0;
    v72.super.Class isa = v71;
    v169._countAndFlagsBits = 0;
    v169._unint64_t object = (void *)0xE000000000000000;
    uint64_t v73 = sub_1000C6320(v163, v166, v72, v169, v137);
    uint64_t v75 = v74;

    unint64_t v76 = sub_100073AB0();
    uint64_t v77 = sub_10003B628(v76);
    uint64_t v79 = v78;
    swift_bridgeObjectRelease();
    sub_100012854(&qword_10010BE18);
    unint64_t v80 = (bufa[80] + 32) & ~(unint64_t)bufa[80];
    uint64_t v81 = swift_allocObject();
    *(_OWORD *)(v81 + 16) = xmmword_1000CABA0;
    sub_100036FC4(v57, v81 + v80);
    sub_1000C6560();
    char v82 = (int *)type metadata accessor for AlertViewModel(0);
    uint64_t v83 = (uint64_t *)(v59 + v82[5]);
    *uint64_t v83 = v73;
    v83[1] = v75;
    uint64_t v84 = (uint64_t *)(v59 + v82[6]);
    uint64_t *v84 = v77;
    v84[1] = v79;
    uint64_t v85 = v55;
    *(void *)(v59 + v82[7]) = v81;
    (*(void (**)(uint64_t, void, uint64_t, int *))(*((void *)v82 - 1) + 56))(v59, 0, 1, v82);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_10001A740(v59, typea, &qword_10010CB70);
    swift_retain();
    sub_1000C67F0();
    sub_10001326C(v59, &qword_10010CB70);
    swift_getKeyPath();
    swift_getKeyPath();
    *(unsigned char *)(v55 + 58) = 1;
    swift_retain();
    sub_1000C67F0();
    swift_release();
LABEL_46:

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10002376C((uint64_t)log, v147, v157, v150, v154, 4u);
    sub_100037028(v70);
    swift_errorRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v99 = *(uint64_t (**)(void))(v85 + 8);
    goto LABEL_37;
  }
  swift_release();
  swift_release();
LABEL_36:
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v99 = *(uint64_t (**)(void))(v0 + 8);
LABEL_37:
  return v99();
}

uint64_t sub_100050454()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 464) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 360);
  uint64_t v4 = *(void *)(v2 + 352);
  if (v0) {
    uint64_t v5 = sub_1000506FC;
  }
  else {
    uint64_t v5 = sub_100050590;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100050590()
{
  uint64_t v1 = v0[53];
  uint64_t v2 = v0[54];
  uint64_t v4 = v0[51];
  uint64_t v3 = (void *)v0[52];
  uint64_t v5 = v0[50];
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10002376C(v5, v4, v3, v1, v2, 4u);
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_1000506FC()
{
  swift_release();
  sub_1000C66B0();
  uint64_t v1 = sub_1000C66C0();
  os_log_type_t v2 = sub_1000C7670();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "saveShareAndReportErrors retry failed, so rethrow batchRequestFailed", v3, 2u);
    swift_slowDealloc();
  }
  uint64_t v4 = v1;
  uint64_t v5 = (void (*)(uint64_t, uint64_t))v0[55];
  uint64_t v6 = v0[54];
  uint64_t v8 = v0[51];
  uint64_t v7 = (void *)v0[52];
  uint64_t v13 = v0[50];
  uint64_t v14 = v0[53];
  uint64_t v9 = v0[34];
  uint64_t v10 = v0[32];

  v5(v9, v10);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_10002376C(v13, v8, v7, v14, v6, 4u);
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_100050910()
{
  return sub_100024704();
}

uint64_t sub_100050924()
{
  return sub_100024704();
}

uint64_t sub_100050938()
{
  return sub_100024704();
}

uint64_t sub_10005094C()
{
  return sub_10001AEE4();
}

uint64_t sub_100050960()
{
  return sub_100024704();
}

uint64_t sub_100050974()
{
  return sub_10001AEE4();
}

uint64_t sub_100050988()
{
  return sub_10001AEE4();
}

uint64_t sub_10005099C()
{
  return sub_10001AEE4();
}

uint64_t sub_1000509B0()
{
  return sub_100024420();
}

void sub_1000509C4(void *a1)
{
  uint64_t v3 = sub_1000C66D0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v7 = v20;
  if (v20)
  {
    sub_1000C66B0();
    uint64_t v8 = a1;
    uint64_t v9 = sub_1000C66C0();
    os_log_type_t v10 = sub_1000C7690();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v19 = v1;
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = (void *)swift_slowAlloc();
      char v16 = v11;
      uint64_t v17 = v4;
      *(_DWORD *)uint64_t v11 = 138412290;
      uint64_t v18 = v3;
      uint64_t v20 = v8;
      uint64_t v12 = v8;
      uint64_t v4 = v17;
      uint64_t v3 = v18;
      sub_1000C7850();
      void *v15 = v8;

      _os_log_impl((void *)&_mh_execute_header, v9, v10, "removingParticipantFromShare: %@", v16, 0xCu);
      sub_100012854((uint64_t *)&unk_10010B1E0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      uint64_t v9 = v8;
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    [v7 removeParticipant:v8];
  }
  else
  {
    sub_100012A24();
    swift_allocError();
    *(void *)uint64_t v13 = 0xD00000000000001DLL;
    *(void *)(v13 + 8) = 0x80000001000D7F30;
    *(_OWORD *)(v13 + 16) = xmmword_1000CE5A0;
    *(void *)(v13 + 32) = 0x80000001000D7F50;
    *(unsigned char *)(v13 + 40) = 11;
    swift_willThrow();
  }
}

uint64_t sub_100050CBC(uint64_t a1)
{
  v2[94] = v1;
  v2[93] = a1;
  v2[95] = sub_100012854(&qword_10010B498);
  v2[96] = swift_task_alloc();
  v2[97] = swift_task_alloc();
  v2[98] = swift_task_alloc();
  v2[99] = swift_task_alloc();
  v2[100] = swift_task_alloc();
  sub_100012854((uint64_t *)&unk_10010BDD0);
  v2[101] = swift_task_alloc();
  v2[102] = swift_task_alloc();
  v2[103] = swift_task_alloc();
  v2[104] = swift_task_alloc();
  uint64_t v3 = sub_1000C6530();
  v2[105] = v3;
  v2[106] = *(void *)(v3 - 8);
  v2[107] = swift_task_alloc();
  v2[108] = swift_task_alloc();
  v2[109] = swift_task_alloc();
  sub_1000C75D0();
  v2[110] = sub_1000C75C0();
  uint64_t v5 = sub_1000C7590();
  v2[111] = v5;
  v2[112] = v4;
  return _swift_task_switch(sub_100050E94, v5, v4);
}

uint64_t sub_100050E94()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  if ((*(unsigned char *)(v0 + 944) & 0xFE) != 8)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1000C67E0();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v1 = *(void **)(v0 + 696);
    if (v1)
    {
      id v2 = [*(id *)(v0 + 696) URL];
      if (v2)
      {
        uint64_t v3 = v2;
        uint64_t v4 = *(void *)(v0 + 864);
        uint64_t v5 = *(void *)(v0 + 848);
        uint64_t v6 = *(void *)(v0 + 840);
        uint64_t v7 = *(void *)(v0 + 832);
        sub_1000C64F0();

        uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32);
        v8(v7, v4, v6);
        uint64_t v9 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56);
        v9(v7, 0, 1, v6);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v7, 1, v6) != 1)
        {
          uint64_t v10 = *(void *)(v0 + 872);
          char v23 = v8;
          uint64_t v11 = *(void *)(v0 + 848);
          uint64_t v12 = *(void *)(v0 + 840);
          uint64_t v13 = *(void *)(v0 + 832);
          uint64_t v24 = *(void *)(v0 + 824);
          uint64_t v25 = *(void *)(v0 + 816);
          swift_release();
          v23(v10, v13, v12);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v24, v10, v12);
          v9(v24, 0, 1, v12);
          swift_getKeyPath();
          swift_getKeyPath();
          sub_10001A740(v24, v25, (uint64_t *)&unk_10010BDD0);
          swift_retain_n();
          sub_1000C67F0();
          sub_10001326C(v24, (uint64_t *)&unk_10010BDD0);

          swift_release();
          (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
LABEL_10:
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
          return v20();
        }
      }
      else
      {
        (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 848) + 56))(*(void *)(v0 + 832), 1, 1, *(void *)(v0 + 840));
      }
      uint64_t v14 = *(void *)(v0 + 832);

      sub_10001326C(v14, (uint64_t *)&unk_10010BDD0);
    }
  }
  uint64_t v15 = *(void *)(v0 + 848);
  uint64_t v16 = *(void *)(v0 + 840);
  uint64_t v17 = *(void *)(v0 + 808);
  sub_10001A740(*(void *)(v0 + 744), v17, (uint64_t *)&unk_10010BDD0);
  uint64_t v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  *(void *)(v0 + 904) = v18;
  *(void *)(v0 + 912) = (v15 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (v18(v17, 1, v16) == 1)
  {
    uint64_t v19 = *(void *)(v0 + 808);
    swift_release();
    sub_10001326C(v19, (uint64_t *)&unk_10010BDD0);
    goto LABEL_10;
  }
  uint64_t v22 = *(void *)(v0 + 760);
  (*(void (**)(void, void, void))(*(void *)(v0 + 848) + 32))(*(void *)(v0 + 856), *(void *)(v0 + 808), *(void *)(v0 + 840));
  *(_DWORD *)(v0 + 936) = *(_DWORD *)(v22 + 48);
  return _swift_task_switch(sub_100051348, 0, 0);
}

uint64_t sub_100051348()
{
  uint64_t v1 = *(void *)(v0 + 856);
  *(_DWORD *)(v0 + 940) = *(_DWORD *)(*(void *)(v0 + 760) + 48);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 920) = v2;
  *(void *)(v2 + 16) = v1;
  swift_asyncLet_begin();
  uint64_t v3 = *(void *)(v0 + 792);
  return _swift_asyncLet_get(v0 + 16, v3, sub_100051414, v0 + 656);
}

uint64_t sub_100051414()
{
  return _swift_task_switch(sub_100051430, 0, 0);
}

uint64_t sub_100051430()
{
  uint64_t v1 = *(int *)(v0 + 940);
  uint64_t v2 = *(void *)(v0 + 800);
  uint64_t v3 = *(void *)(v0 + 792);
  uint64_t v4 = *(void *)(v0 + 784);
  sub_10001A740(v3, v4, (uint64_t *)&unk_10010BDD0);
  uint64_t v5 = *(void **)(v3 + v1);
  *(void *)(v0 + 928) = v5;
  sub_100012898(v4, v2, (uint64_t *)&unk_10010BDD0);
  id v6 = v5;
  uint64_t v7 = *(void *)(v0 + 792);
  return _swift_asyncLet_finish(v0 + 16, v7, sub_1000514F8, v0 + 704);
}

uint64_t sub_1000514F8()
{
  return _swift_task_switch(sub_100051514, 0, 0);
}

uint64_t sub_100051514()
{
  swift_task_dealloc();
  uint64_t v1 = *(void *)(v0 + 896);
  uint64_t v2 = *(void *)(v0 + 888);
  return _swift_task_switch(sub_10005157C, v2, v1);
}

uint64_t sub_10005157C()
{
  uint64_t v1 = *(void *)(v0 + 928);
  uint64_t v2 = *(int *)(v0 + 936);
  uint64_t v3 = *(void *)(v0 + 800);
  uint64_t v4 = *(void *)(v0 + 776);
  uint64_t v5 = *(void *)(v0 + 760);
  swift_release();
  *(void *)(v3 + v2) = v1;
  uint64_t v6 = *(int *)(v5 + 48);
  sub_10001A740(v3, v4, (uint64_t *)&unk_10010BDD0);
  *(void *)(v4 + v6) = v1;
  if (v1)
  {
    uint64_t v7 = *(void **)(v0 + 928);
    uint64_t v8 = *(void *)(v0 + 856);
    uint64_t v9 = *(void *)(v0 + 848);
    uint64_t v10 = *(void *)(v0 + 840);
    uint64_t v11 = *(void *)(v0 + 800);
    uint64_t v12 = *(void *)(v0 + 776);
    id v13 = v7;
    sub_10001326C(v12, (uint64_t *)&unk_10010BDD0);
    sub_100012A24();
    swift_allocError();
    *(void *)uint64_t v14 = 0xD00000000000001CLL;
    *(void *)(v14 + 8) = 0x80000001000D7150;
    *(void *)(v14 + 24) = 0;
    *(void *)(v14 + 32) = 0;
    *(void *)(v14 + 16) = v7;
    *(unsigned char *)(v14 + 40) = 7;
    swift_willThrow();
    sub_10001326C(v11, &qword_10010B498);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 904);
    uint64_t v17 = *(void *)(v0 + 840);
    uint64_t v18 = *(void *)(v0 + 800);
    uint64_t v19 = *(void *)(v0 + 768);
    uint64_t v20 = *(void *)(v0 + 760);
    sub_10001326C(*(void *)(v0 + 776), (uint64_t *)&unk_10010BDD0);
    uint64_t v21 = *(int *)(v20 + 48);
    sub_10001A740(v18, v19, (uint64_t *)&unk_10010BDD0);
    *(void *)(v19 + v21) = 0;
    uint64_t result = v16(v19, 1, v17);
    if (result == 1)
    {
      __break(1u);
      return result;
    }
    uint64_t v23 = *(void *)(v0 + 848);
    uint64_t v24 = *(void *)(v0 + 840);
    uint64_t v25 = *(void *)(v0 + 824);
    uint64_t v26 = *(void *)(v0 + 816);
    uint64_t v29 = *(void *)(v0 + 800);
    uint64_t v30 = *(void *)(v0 + 856);
    uint64_t v27 = *(void *)(v0 + 768);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v25, v27, v24);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v23 + 56))(v25, 0, 1, v24);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_10001A740(v25, v26, (uint64_t *)&unk_10010BDD0);
    swift_retain_n();
    sub_1000C67F0();
    sub_10001326C(v25, (uint64_t *)&unk_10010BDD0);
    swift_release();
    sub_10001326C(v29, &qword_10010B498);
    uint64_t v28 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
    v28(v30, v24);
    v28(v27, v24);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v15();
}

uint64_t sub_100051988()
{
  v1[6] = v0;
  uint64_t v2 = sub_1000C66D0();
  v1[7] = v2;
  v1[8] = *(void *)(v2 - 8);
  v1[9] = swift_task_alloc();
  v1[10] = swift_task_alloc();
  sub_100012854((uint64_t *)&unk_10010BDD0);
  v1[11] = swift_task_alloc();
  v1[12] = swift_task_alloc();
  v1[13] = swift_task_alloc();
  sub_1000C75D0();
  v1[14] = sub_1000C75C0();
  uint64_t v4 = sub_1000C7590();
  v1[15] = v4;
  v1[16] = v3;
  return _swift_task_switch(sub_100051AD8, v4, v3);
}

uint64_t sub_100051AD8()
{
  uint64_t v24 = v0;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  *(void *)(v0 + 136) = Strong;
  if (Strong)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    *(unsigned char *)(v0 + 189) = 2;
    swift_retain();
    sub_1000C67F0();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1000C67E0();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v2 = *(void *)(v0 + 16);
    *(void *)(v0 + 144) = v2;
    if (v2)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      sub_1000C67E0();
      swift_release();
      swift_release();
      swift_getKeyPath();
      swift_getKeyPath();
      sub_1000C67E0();
      swift_release();
      swift_release();
      swift_getKeyPath();
      swift_getKeyPath();
      sub_1000C67E0();
      swift_release();
      swift_release();
      if ((*(unsigned char *)(v0 + 194) & 0xFE) == 8) {
        uint64_t v3 = 0;
      }
      else {
        uint64_t v3 = sub_1000392E8();
      }
      *(void *)(v0 + 152) = v3;
      unint64_t v17 = sub_1000B86F0();
      *(void *)(v0 + 160) = v18;
      uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10010B6E8 + dword_10010B6E8);
      uint64_t v19 = (void *)swift_task_alloc();
      *(void *)(v0 + 168) = v19;
      void *v19 = v0;
      v19[1] = sub_1000520D8;
      uint64_t v20 = *(void *)(v0 + 104);
      return v22(v20, v2, (uint64_t)v3, v17 & 0x101FFFFFFFFFFLL);
    }
    swift_release();
    sub_100012A24();
    uint64_t v5 = swift_allocError();
    *(_OWORD *)uint64_t v6 = xmmword_1000CE5B0;
    *(_OWORD *)(v6 + 16) = xmmword_1000CE5C0;
    *(void *)(v6 + 32) = 0x80000001000D6F10;
    *(unsigned char *)(v6 + 40) = 11;
    swift_willThrow();
    swift_unknownObjectRelease();
    swift_getKeyPath();
    swift_getKeyPath();
    *(unsigned char *)(v0 + 190) = 0;
    swift_retain();
    sub_1000C67F0();
    sub_1000C66B0();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v7 = sub_1000C66C0();
    uint64_t v8 = sub_1000C7670();
    BOOL v9 = os_log_type_enabled(v7, (os_log_type_t)v8);
    uint64_t v10 = *(void *)(v0 + 64);
    uint64_t v11 = *(void *)(v0 + 72);
    uint64_t v12 = *(void *)(v0 + 56);
    if (v9)
    {
      uint64_t v21 = *(void *)(v0 + 72);
      id v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      *(_DWORD *)id v13 = 136315138;
      *(void *)(v0 + 32) = v5;
      swift_errorRetain();
      sub_100012854((uint64_t *)&unk_10010B010);
      uint64_t v14 = sub_1000C7450();
      *(void *)(v0 + 40) = sub_1000720D0(v14, v15, &v23);
      sub_1000C7850();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v7, (os_log_type_t)v8, "stopSharing error: %s", v13, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v21, v12);
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();

      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v11, v12);
    }
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v4();
}

uint64_t sub_1000520D8()
{
  uint64_t v2 = *v1;
  (*v1)[22] = v0;
  swift_task_dealloc();
  uint64_t v3 = (void *)v2[19];
  sub_10001326C(v2[13], (uint64_t *)&unk_10010BDD0);
  swift_bridgeObjectRelease();

  uint64_t v4 = v2[16];
  uint64_t v5 = v2[15];
  if (v0) {
    uint64_t v6 = sub_100052660;
  }
  else {
    uint64_t v6 = sub_100052270;
  }
  return _swift_task_switch(v6, v5, v4);
}

uint64_t sub_100052270()
{
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v1 = *(void *)(v0 + 96);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  *(void *)(v0 + 24) = 0;
  swift_retain_n();
  sub_1000C67F0();
  uint64_t v3 = sub_1000C6530();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v1, 1, 1, v3);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10001A740(v1, v2, (uint64_t *)&unk_10010BDD0);
  swift_retain();
  sub_1000C67F0();
  sub_10001326C(v1, (uint64_t *)&unk_10010BDD0);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 192) = 0;
  swift_retain();
  sub_1000C67F0();
  sub_1000C66B0();
  swift_retain_n();
  uint64_t v4 = sub_1000C66C0();
  os_log_type_t v5 = sub_1000C7690();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 67109120;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1000C67E0();
    swift_release();
    swift_release();
    char v7 = *(unsigned char *)(v0 + 193);
    swift_release();
    *(_DWORD *)(v0 + 184) = (v7 & 0xFE) != 8;
    sub_1000C7850();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "stopSharing succeeded. Is CloudKit Sharing: %{BOOL}d", v6, 8u);
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
  }

  (*(void (**)(void, void))(*(void *)(v0 + 64) + 8))(*(void *)(v0 + 80), *(void *)(v0 + 56));
  sub_10000AB98();
  uint64_t v8 = (void *)sub_10000A1F4();
  if (v8)
  {
    [v8 _shareWasMadePrivate];
    swift_unknownObjectRelease();
  }
  BOOL v9 = (void *)sub_10000A1F4();
  uint64_t v10 = *(void **)(v0 + 144);
  if (v9)
  {
    [v9 _dismissViewControllerWithError:0];
    swift_unknownObjectRelease();

    swift_unknownObjectRelease();
  }
  else
  {
    swift_unknownObjectRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_100052660()
{
  uint64_t v18 = v0;
  uint64_t v1 = *(void **)(v0 + 144);
  swift_release();
  swift_unknownObjectRelease();

  uint64_t v2 = *(void *)(v0 + 176);
  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 190) = 0;
  swift_retain();
  sub_1000C67F0();
  sub_1000C66B0();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v3 = sub_1000C66C0();
  os_log_type_t v4 = sub_1000C7670();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v14 = *(void *)(v0 + 64);
    uint64_t v15 = *(void *)(v0 + 56);
    uint64_t v16 = *(void *)(v0 + 72);
    os_log_type_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v5 = 136315138;
    uint64_t v17 = v6;
    *(void *)(v0 + 32) = v2;
    swift_errorRetain();
    sub_100012854((uint64_t *)&unk_10010B010);
    uint64_t v7 = sub_1000C7450();
    *(void *)(v0 + 40) = sub_1000720D0(v7, v8, &v17);
    sub_1000C7850();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "stopSharing error: %s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v16, v15);
  }
  else
  {
    uint64_t v10 = *(void *)(v0 + 64);
    uint64_t v9 = *(void *)(v0 + 72);
    uint64_t v11 = *(void *)(v0 + 56);
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  }
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_100052924()
{
  return sub_10001AEE4();
}

uint64_t sub_100052938(char a1)
{
  *(void *)(v2 + 40) = v1;
  *(unsigned char *)(v2 + 169) = a1;
  uint64_t v3 = sub_1000C66D0();
  *(void *)(v2 + 48) = v3;
  *(void *)(v2 + 56) = *(void *)(v3 - 8);
  *(void *)(v2 + 64) = swift_task_alloc();
  sub_100012854(&qword_10010B770);
  *(void *)(v2 + 72) = swift_task_alloc();
  *(void *)(v2 + 80) = sub_1000C75D0();
  *(void *)(v2 + 88) = sub_1000C75C0();
  uint64_t v5 = sub_1000C7590();
  *(void *)(v2 + 96) = v5;
  *(void *)(v2 + 104) = v4;
  return _swift_task_switch(sub_100052A64, v5, v4);
}

uint64_t sub_100052A64()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  if (*(unsigned char *)(v0 + 168) == 1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1000C67E0();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v1 = *(void **)(v0 + 16);
    *(void *)(v0 + 112) = v1;
    if (v1)
    {
      if (*(unsigned char *)(v0 + 169) == 1) {
        uint64_t v28 = sub_1000C7730();
      }
      else {
        uint64_t v28 = 3;
      }
      id v4 = [v1 participants];
      sub_1000132C8(0, (unint64_t *)&unk_10010B070);
      unint64_t v5 = sub_1000C7540();

      if (v5 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v11 = sub_1000C7990();
        uint64_t v6 = swift_bridgeObjectRelease();
        if (v11)
        {
LABEL_11:
          if (v11 < 1)
          {
            __break(1u);
            goto LABEL_43;
          }
          for (uint64_t i = 0; i != v11; ++i)
          {
            if ((v5 & 0xC000000000000001) != 0) {
              id v13 = (id)sub_1000C78F0();
            }
            else {
              id v13 = *(id *)(v5 + 8 * i + 32);
            }
            uint64_t v14 = v13;
            if ([v13 role] == (id)1 || (id)v28 == objc_msgSend(v14, "role"))
            {
            }
            else
            {
              sub_1000C7910();
              sub_1000C7940();
              sub_1000C7950();
              sub_1000C7920();
            }
          }
          swift_bridgeObjectRelease();
          if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
            goto LABEL_37;
          }
LABEL_25:
          if (((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) == 0)
          {
            uint64_t v15 = _swiftEmptyArrayStorage[2];
            if (!v15)
            {
LABEL_38:
              swift_release();
LABEL_39:
              uint64_t v20 = *(void *)(v0 + 72);
              uint64_t v21 = *(void *)(v0 + 40);
              sub_1000C75E0();
              uint64_t v22 = sub_1000C7600();
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v20, 0, 1, v22);
              swift_retain();
              uint64_t v23 = sub_1000C75C0();
              uint64_t v24 = (void *)swift_allocObject();
              v24[2] = v23;
              v24[3] = &protocol witness table for MainActor;
              v24[4] = v21;
              v24[5] = _swiftEmptyArrayStorage;
              uint64_t v25 = sub_1000BD118(v20, (uint64_t)&unk_10010D3D0, (uint64_t)v24);
              *(void *)(v0 + 120) = v25;
              uint64_t v26 = (void *)swift_task_alloc();
              *(void *)(v0 + 128) = v26;
              uint64_t v6 = sub_100012854((uint64_t *)&unk_10010B010);
              *(void *)(v0 + 136) = v6;
              *uint64_t v26 = v0;
              v26[1] = sub_100052FA8;
              unint64_t v8 = (char *)&type metadata for () + 8;
              uint64_t v10 = &protocol self-conformance witness table for Error;
              uint64_t v7 = v25;
              uint64_t v9 = v6;
              return Task.value.getter(v6, v7, v8, v9, v10);
            }
            goto LABEL_27;
          }
LABEL_37:
          swift_bridgeObjectRetain();
          uint64_t v15 = sub_1000C7990();
          swift_release();
          if (!v15) {
            goto LABEL_38;
          }
LABEL_27:
          uint64_t v27 = v0;
          uint64_t v6 = sub_1000C7930();
          if ((v15 & 0x8000000000000000) == 0)
          {
            uint64_t v16 = 0;
            do
            {
              if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0) {
                id v17 = (id)sub_1000C78F0();
              }
              else {
                id v17 = (id)_swiftEmptyArrayStorage[v16 + 4];
              }
              uint64_t v18 = v17;
              if (objc_msgSend(v17, "permission", v27) == (id)3) {
                uint64_t v19 = v28;
              }
              else {
                uint64_t v19 = 3;
              }
              ++v16;
              [v18 setRole:v19];
              sub_1000C7910();
              sub_1000C7940();
              sub_1000C7950();
              sub_1000C7920();
            }
            while (v15 != v16);
            swift_release();
            uint64_t v0 = v27;
            goto LABEL_39;
          }
LABEL_43:
          __break(1u);
          return Task.value.getter(v6, v7, v8, v9, v10);
        }
      }
      else
      {
        uint64_t v11 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v11) {
          goto LABEL_11;
        }
      }
      swift_bridgeObjectRelease();
      if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
        goto LABEL_37;
      }
      goto LABEL_25;
    }
  }
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100052FA8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 144) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 104);
  uint64_t v4 = *(void *)(v2 + 96);
  if (v0) {
    unint64_t v5 = sub_100053338;
  }
  else {
    unint64_t v5 = sub_1000530E4;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1000530E4()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 152) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100053178;
  return sub_10004E7B4(1);
}

uint64_t sub_100053178()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 160) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 104);
  uint64_t v4 = *(void *)(v2 + 96);
  if (v0) {
    unint64_t v5 = sub_100053590;
  }
  else {
    unint64_t v5 = sub_1000532B4;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1000532B4()
{
  uint64_t v1 = *(void **)(v0 + 112);
  swift_release();
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100053338()
{
  uint64_t v18 = v0;
  swift_release();
  sub_1000C66B0();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = sub_1000C66C0();
  os_log_type_t v2 = sub_1000C7670();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[18];
    uint64_t v14 = v0[7];
    uint64_t v15 = v0[6];
    uint64_t v16 = v0[8];
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    uint64_t v17 = v5;
    v0[3] = v3;
    swift_errorRetain();
    uint64_t v6 = sub_1000C7450();
    v0[4] = sub_1000720D0(v6, v7, &v17);
    sub_1000C7850();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "applyAllowAnyoneToInviteAndSaveShareOnChange addOrUpdate error: %s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v16, v15);
  }
  else
  {
    uint64_t v9 = v0[7];
    uint64_t v8 = v0[8];
    uint64_t v10 = v0[6];
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  uint64_t v11 = (void *)v0[14];
  swift_willThrow();

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_100053590()
{
  uint64_t v1 = *(void **)(v0 + 112);
  swift_release();

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

BOOL sub_10005361C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  if (!v3) {
    return 0;
  }

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  if (!v2) {
    return 0;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  return v1 != 0;
}

uint64_t sub_10005375C(uint64_t a1)
{
  uint64_t v422 = *v1;
  uint64_t v444 = sub_100012854(&qword_10010CEC8);
  uint64_t v443 = *(void *)(v444 - 8);
  __chkstk_darwin(v444);
  v442 = (char *)&v304 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v447 = sub_100012854(&qword_10010CED0);
  uint64_t v446 = *(void *)(v447 - 8);
  __chkstk_darwin(v447);
  v445 = (char *)&v304 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v450 = sub_100012854(&qword_10010CED8);
  uint64_t v449 = *(void *)(v450 - 8);
  __chkstk_darwin(v450);
  v448 = (char *)&v304 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v436 = sub_100012854(&qword_10010CEE0);
  uint64_t v435 = *(void *)(v436 - 8);
  __chkstk_darwin(v436);
  v433 = (char *)&v304 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v437 = sub_100012854(&qword_10010CEE8);
  __chkstk_darwin(v437);
  v434 = (char *)&v304 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v441 = sub_100012854((uint64_t *)&unk_10010C3B0);
  uint64_t v438 = *(void *)(v441 - 8);
  uint64_t v8 = __chkstk_darwin(v441);
  v439 = (char *)&v304 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v440 = (char *)&v304 - v10;
  uint64_t v427 = sub_100012854(&qword_10010B6B8);
  __chkstk_darwin(v427);
  v425 = (char *)&v304 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v429 = sub_100012854(&qword_10010CEF0);
  uint64_t v428 = *(void *)(v429 - 8);
  __chkstk_darwin(v429);
  v426 = (char *)&v304 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v432 = sub_100012854(&qword_10010CEF8);
  uint64_t v431 = *(void *)(v432 - 8);
  __chkstk_darwin(v432);
  v430 = (char *)&v304 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v424 = sub_100012854(&qword_10010CF00);
  uint64_t v423 = *(void *)(v424 - 8);
  uint64_t v14 = __chkstk_darwin(v424);
  v420 = (char *)&v304 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v421 = (char *)&v304 - v16;
  uint64_t v417 = sub_100012854(&qword_10010CF08);
  uint64_t v415 = *(void *)(v417 - 8);
  __chkstk_darwin(v417);
  v414 = (char *)&v304 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v409 = sub_100012854(&qword_10010CF10);
  uint64_t v408 = *(void *)(v409 - 8);
  __chkstk_darwin(v409);
  v406 = (char *)&v304 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v410 = sub_100012854(&qword_10010CF18);
  uint64_t v19 = __chkstk_darwin(v410);
  v407 = (char *)&v304 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v405 = (char *)&v304 - v21;
  uint64_t v413 = sub_100012854(&qword_10010CF20);
  uint64_t v412 = *(void *)(v413 - 8);
  __chkstk_darwin(v413);
  v411 = (char *)&v304 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v419 = sub_100012854((uint64_t *)&unk_10010CF28);
  uint64_t v418 = *(void *)(v419 - 8);
  __chkstk_darwin(v419);
  v416 = (char *)&v304 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v404 = sub_100012854((uint64_t *)&unk_10010BC00);
  uint64_t v403 = *(void *)(v404 - 8);
  __chkstk_darwin(v404);
  v402 = (char *)&v304 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v401 = sub_100012854(&qword_10010CF38);
  uint64_t v400 = *(void *)(v401 - 8);
  __chkstk_darwin(v401);
  v399 = (char *)&v304 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v398 = sub_100012854(&qword_10010CF40);
  uint64_t v397 = *(void *)(v398 - 8);
  __chkstk_darwin(v398);
  v396 = (char *)&v304 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v395 = sub_100012854(&qword_10010CF48);
  uint64_t v394 = *(void *)(v395 - 8);
  __chkstk_darwin(v395);
  v393 = (char *)&v304 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v392 = sub_100012854((uint64_t *)&unk_10010CF50);
  uint64_t v391 = *(void *)(v392 - 8);
  __chkstk_darwin(v392);
  v390 = (char *)&v304 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v389 = sub_100012854(&qword_10010C420);
  uint64_t v388 = *(void *)(v389 - 8);
  __chkstk_darwin(v389);
  v387 = (char *)&v304 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v375 = sub_100012854((uint64_t *)&unk_10010CF60);
  uint64_t v374 = *(void *)(v375 - 8);
  __chkstk_darwin(v375);
  v373 = (char *)&v304 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v383 = sub_100012854(&qword_10010BBA0);
  uint64_t v382 = *(void *)(v383 - 8);
  __chkstk_darwin(v383);
  v381 = (char *)&v304 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v370 = sub_100012854((uint64_t *)&unk_10010CF70);
  uint64_t v369 = *(void *)(v370 - 8);
  __chkstk_darwin(v370);
  v367 = (char *)&v304 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v378 = sub_100012854(&qword_10010C440);
  uint64_t v377 = *(void *)(v378 - 8);
  __chkstk_darwin(v378);
  v376 = (char *)&v304 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v372 = sub_100012854(&qword_10010CF80);
  uint64_t v371 = *(void *)(v372 - 8);
  __chkstk_darwin(v372);
  v466 = (char *)&v304 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v379 = sub_100012854(&qword_10010CF88);
  __chkstk_darwin(v379);
  v380 = (char *)&v304 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v386 = sub_100012854((uint64_t *)&unk_10010CF90);
  uint64_t v385 = *(void *)(v386 - 8);
  __chkstk_darwin(v386);
  v384 = (char *)&v304 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v465 = sub_100012854(&qword_10010C418);
  uint64_t v368 = *(void *)(v465 - 8);
  uint64_t v37 = __chkstk_darwin(v465);
  v365 = (char *)&v304 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  v366 = (char *)&v304 - v39;
  uint64_t v488 = sub_100012854(&qword_10010CFA0);
  uint64_t v467 = *(void *)(v488 - 8);
  __chkstk_darwin(v488);
  v487 = (char *)&v304 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v360 = sub_100012854(&qword_10010CFA8);
  uint64_t v359 = *(void *)(v360 - 8);
  __chkstk_darwin(v360);
  uint64_t v358 = (char *)&v304 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v363 = sub_100012854((uint64_t *)&unk_10010CFB0);
  uint64_t v362 = *(void *)(v363 - 8);
  __chkstk_darwin(v363);
  v361 = (char *)&v304 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_100012854((uint64_t *)&unk_10010BBD0);
  __chkstk_darwin(v43 - 8);
  v502 = (char *)&v304 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v483 = sub_100012854((uint64_t *)&unk_10010CFC0);
  uint64_t v497 = *(void *)(v483 - 8);
  __chkstk_darwin(v483);
  uint64_t v364 = (char *)&v304 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v463 = sub_100012854((uint64_t *)&unk_10010C3D0);
  uint64_t v462 = *(void *)(v463 - 8);
  __chkstk_darwin(v463);
  v461 = (char *)&v304 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v455 = sub_100012854(&qword_10010CFD0);
  uint64_t v356 = *(void (***)(char *, uint64_t))(v455 - 8);
  __chkstk_darwin(v455);
  v355 = (char *)&v304 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v485 = sub_100012854(&qword_10010CFD8);
  uint64_t v498 = *(void *)(v485 - 8);
  uint64_t v48 = __chkstk_darwin(v485);
  v479 = (char *)&v304 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v48);
  v484 = (char *)&v304 - v50;
  uint64_t v51 = sub_100012854((uint64_t *)&unk_10010C3F0);
  uint64_t v490 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  v472 = (char *)&v304 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v475 = sub_100012854(&qword_10010BC20);
  __chkstk_darwin(v475);
  v491 = (char *)&v304 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v353 = (void *)sub_100012854(&qword_10010CFE0);
  uint64_t v352 = *(v353 - 1);
  __chkstk_darwin(v353);
  uint64_t v350 = (char *)&v304 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v478 = sub_100012854(&qword_10010CFE8);
  uint64_t v55 = __chkstk_darwin(v478);
  v457 = (char *)&v304 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v55);
  v451 = (void (*)(char *, uint64_t))((char *)&v304 - v57);
  uint64_t v470 = sub_100012854(&qword_10010CFF0);
  uint64_t v489 = *(void *)(v470 - 8);
  __chkstk_darwin(v470);
  v469 = (char *)&v304 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v471 = sub_100012854(&qword_10010CFF8);
  __chkstk_darwin(v471);
  v499 = (char *)&v304 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v454 = sub_100012854(&qword_10010D000);
  unint64_t v452 = *(void *)(v454 - 8);
  __chkstk_darwin(v454);
  v354 = (char *)&v304 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  v477 = (void (*)(void))sub_100012854(&qword_10010D008);
  v456 = (void (**)(char *, void (*)(void)))*((void *)v477 - 1);
  __chkstk_darwin(v477);
  v453 = (char *)&v304 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  v480 = (void *)sub_100012854(&qword_10010CEC0);
  uint64_t v351 = *(v480 - 1);
  __chkstk_darwin(v480);
  uint64_t v349 = (char *)&v304 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v348 = sub_100012854(&qword_10010CEB8);
  uint64_t v347 = *(void (**)(char *, uint64_t))(v348 - 8);
  __chkstk_darwin(v348);
  v344 = (char *)&v304 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v346 = sub_100012854(&qword_10010CEB0);
  v345 = *(void (**)(uint64_t, char *, uint64_t))(v346 - 8);
  __chkstk_darwin(v346);
  v343 = (char *)&v304 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v468 = sub_100012854(&qword_10010CEA8);
  uint64_t v342 = *(void *)(v468 - 8);
  __chkstk_darwin(v468);
  uint64_t v341 = (char *)&v304 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v476 = sub_100012854(&qword_10010BB80);
  uint64_t v340 = *(void *)(v476 - 8);
  __chkstk_darwin(v476);
  uint64_t v339 = (char *)&v304 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  v494 = (void *)sub_100012854(&qword_10010B6F0);
  uint64_t v357 = *(v494 - 1);
  __chkstk_darwin(v494);
  uint64_t v338 = (char *)&v304 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v486 = sub_100012854(&qword_10010CEA0);
  uint64_t v337 = *(void *)(v486 - 8);
  __chkstk_darwin(v486);
  v336 = (char *)&v304 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v335 = sub_100012854(&qword_10010CE98);
  uint64_t v334 = *(void *)(v335 - 8);
  __chkstk_darwin(v335);
  uint64_t v333 = (char *)&v304 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v474 = sub_100012854((uint64_t *)&unk_10010C500);
  uint64_t v332 = *(void *)(v474 - 8);
  __chkstk_darwin(v474);
  uint64_t v331 = (char *)&v304 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v328 = sub_100012854((uint64_t *)&unk_10010CE88);
  uint64_t v327 = *(void *)(v328 - 8);
  __chkstk_darwin(v328);
  uint64_t v326 = (char *)&v304 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v459 = sub_100012854(&qword_10010CE80);
  uint64_t v325 = *(void *)(v459 - 8);
  __chkstk_darwin(v459);
  v324 = (char *)&v304 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0);
  v492 = (void *)sub_100012854((uint64_t *)&unk_10010BDD0);
  uint64_t v73 = __chkstk_darwin(v492);
  uint64_t v323 = (uint64_t)&v304 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = __chkstk_darwin(v73);
  uint64_t v330 = (uint64_t)&v304 - v76;
  __chkstk_darwin(v75);
  uint64_t v329 = (char *)&v304 - v77;
  uint64_t v322 = sub_100012854((uint64_t *)&unk_10010BB70);
  uint64_t v321 = *(void *)(v322 - 8);
  __chkstk_darwin(v322);
  uint64_t v320 = (char *)&v304 - ((v78 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v319 = sub_100012854(&qword_10010CB70);
  uint64_t v79 = __chkstk_darwin(v319);
  uint64_t v318 = (uint64_t)&v304 - ((v80 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v79);
  v317 = (char *)&v304 - v81;
  uint64_t v464 = sub_100012854((uint64_t *)&unk_10010CE70);
  uint64_t v316 = *(void *)(v464 - 8);
  __chkstk_darwin(v464);
  uint64_t v315 = (char *)&v304 - ((v82 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v460 = sub_100012854(&qword_10010CE68);
  uint64_t v314 = *(void *)(v460 - 8);
  __chkstk_darwin(v460);
  uint64_t v313 = (char *)&v304 - ((v83 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v458 = sub_100012854(&qword_10010CE60);
  uint64_t v312 = *(void *)(v458 - 8);
  __chkstk_darwin(v458);
  uint64_t v311 = (char *)&v304 - ((v84 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v310 = sub_100012854(&qword_10010CE58);
  uint64_t v309 = *(void *)(v310 - 8);
  __chkstk_darwin(v310);
  uint64_t v308 = (char *)&v304 - ((v85 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v307 = sub_100012854(&qword_10010CE50);
  uint64_t v306 = *(void *)(v307 - 8);
  __chkstk_darwin(v307);
  id v87 = (char *)&v304 - ((v86 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v496 = sub_100012854(&qword_10010CE48);
  uint64_t v88 = *(void *)(v496 - 8);
  __chkstk_darwin(v496);
  uint64_t v90 = (char *)&v304 - ((v89 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v481 = sub_100012854(&qword_10010CE40);
  uint64_t v91 = *(void *)(v481 - 8);
  __chkstk_darwin(v481);
  uint64_t v93 = (char *)&v304 - ((v92 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_100012854(&qword_10010BB60);
  uint64_t v95 = *(void *)(v94 - 8);
  __chkstk_darwin(v94);
  uint64_t v97 = (char *)&v304 - ((v96 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v504 = a1;
  uint64_t v473 = v51;
  v305 = v87;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && sub_1000C7990()) {
    unsigned __int8 v98 = (void *)sub_100072C7C((unint64_t)_swiftEmptyArrayStorage);
  }
  else {
    unsigned __int8 v98 = &_swiftEmptySetSingleton;
  }
  uint64_t v99 = v500;
  uint64_t v100 = v500;
  *(void *)(v500 + 32) = v98;
  uint64_t v495 = v100 + 32;
  *(void *)(v99 + 48) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v99 + 56) = swift_getKeyPath();
  *(unsigned char *)(v99 + 64) = 0;
  uint64_t v101 = v99 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__isDelegateInitialized;
  LOBYTE(v505) = 0;
  sub_1000C67B0();
  v482 = *(void (**)(uint64_t, char *, uint64_t))(v95 + 32);
  v503 = (void *)(v95 + 32);
  v501 = (void (*)(void, void))v94;
  v482(v101, v97, v94);
  uint64_t v102 = v99 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__executionMode;
  LOBYTE(v505) = 0;
  sub_1000C67B0();
  (*(void (**)(uint64_t, char *, uint64_t))(v91 + 32))(v102, v93, v481);
  uint64_t v103 = v99 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__sharingType;
  LOBYTE(v505) = 8;
  sub_1000C67B0();
  (*(void (**)(uint64_t, char *, uint64_t))(v88 + 32))(v103, v90, v496);
  uint64_t v104 = v99 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__sharingStage;
  LOBYTE(v505) = 0;
  uint64_t v105 = v305;
  sub_1000C67B0();
  (*(void (**)(uint64_t, char *, uint64_t))(v306 + 32))(v104, v105, v307);
  uint64_t v106 = v99 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__addedAddresses;
  unint64_t v505 = (unint64_t)_swiftEmptyArrayStorage;
  sub_100012854(&qword_10010CB48);
  unsigned __int8 v107 = v308;
  sub_1000C67B0();
  (*(void (**)(uint64_t, char *, uint64_t))(v309 + 32))(v106, v107, v310);
  uint64_t v108 = v99 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__createOrLoadStage;
  LOBYTE(v505) = 0;
  uint64_t v109 = v311;
  sub_1000C67B0();
  (*(void (**)(uint64_t, char *, uint64_t))(v312 + 32))(v108, v109, v458);
  uint64_t v110 = v99 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__addingAddressesStage;
  LOBYTE(v505) = 0;
  uint64_t v111 = v313;
  sub_1000C67B0();
  (*(void (**)(uint64_t, char *, uint64_t))(v314 + 32))(v110, v111, v460);
  uint64_t v112 = v99 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__savingStage;
  LOBYTE(v505) = 2;
  char v113 = v315;
  sub_1000C67B0();
  (*(void (**)(uint64_t, char *, uint64_t))(v316 + 32))(v112, v113, v464);
  uint64_t v114 = v99 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__alertNowShowing;
  uint64_t v115 = type metadata accessor for AlertViewModel(0);
  uint64_t v116 = (uint64_t)v317;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v115 - 8) + 56))(v317, 1, 1, v115);
  sub_10001A740(v116, v318, &qword_10010CB70);
  uint64_t v117 = v320;
  sub_1000C67B0();
  sub_10001326C(v116, &qword_10010CB70);
  (*(void (**)(uint64_t, char *, uint64_t))(v321 + 32))(v114, v117, v322);
  uint64_t v118 = v99 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__isShowingAlert;
  LOBYTE(v505) = 0;
  v493 = v97;
  sub_1000C67B0();
  uint64_t v119 = v501;
  long long v120 = v482;
  v482(v118, v97, (uint64_t)v501);
  uint64_t v121 = v99 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__isFolderShare;
  LOBYTE(v505) = 0;
  sub_1000C67B0();
  v120(v121, v97, (uint64_t)v119);
  uint64_t v319 = OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__rootFolderURL;
  uint64_t v321 = sub_1000C6530();
  uint64_t v122 = *(void *)(v321 - 8);
  uint64_t v320 = *(char **)(v122 + 56);
  uint64_t v322 = v122 + 56;
  uint64_t v123 = (uint64_t)v329;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v320)(v329, 1, 1, v321);
  sub_100012854(&qword_10010D010);
  uint64_t v124 = swift_allocObject();
  uint64_t v125 = (void *)(v124 + *(void *)(*(void *)v124 + 104));
  *uint64_t v125 = 0;
  v125[1] = 0;
  uint64_t v126 = v330;
  sub_10001A740(v123, v330, (uint64_t *)&unk_10010BDD0);
  swift_beginAccess();
  sub_10001A740(v126, v323, (uint64_t *)&unk_10010BDD0);
  sub_1000C67B0();
  sub_10001326C(v126, (uint64_t *)&unk_10010BDD0);
  swift_endAccess();
  sub_10001326C(v123, (uint64_t *)&unk_10010BDD0);
  *(void *)(v99 + v319) = v124;
  uint64_t v127 = v99 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__isFolderSubshare;
  LOBYTE(v505) = 0;
  NSBundle v128 = v493;
  sub_1000C67B0();
  v120(v127, v128, (uint64_t)v119);
  uint64_t v129 = v120;
  uint64_t v130 = OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__rootFolderTitle;
  sub_100012854(&qword_10010D018);
  uint64_t v131 = swift_allocObject();
  unint64_t v132 = (void *)(v131 + *(void *)(*(void *)v131 + 104));
  *unint64_t v132 = 0;
  v132[1] = 0;
  swift_beginAccess();
  id v509 = 0;
  uint64_t v510 = 0;
  uint64_t v133 = sub_100012854(&qword_10010CBB0);
  sub_1000C67B0();
  swift_endAccess();
  *(void *)(v99 + v130) = v131;
  uint64_t v134 = OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__ckFolderSubitemName;
  uint64_t v135 = swift_allocObject();
  uint64_t v136 = (void *)(v135 + *(void *)(*(void *)v135 + 104));
  *uint64_t v136 = 0;
  v136[1] = 0;
  swift_beginAccess();
  id v509 = 0;
  uint64_t v510 = 0;
  uint64_t v323 = v133;
  sub_1000C67B0();
  swift_endAccess();
  *(void *)(v99 + v134) = v135;
  uint64_t v137 = v99 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__folderSharingStage;
  LOBYTE(v505) = 4;
  sub_100012854(&qword_10010CB80);
  Swift::String v138 = v324;
  sub_1000C67B0();
  (*(void (**)(uint64_t, char *, uint64_t))(v325 + 32))(v137, v138, v459);
  uint64_t v139 = v99 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__shareSaveStatus;
  LOBYTE(v505) = 0;
  uint64_t v140 = v326;
  sub_1000C67B0();
  (*(void (**)(uint64_t, char *, uint64_t))(v327 + 32))(v139, v140, v328);
  uint64_t v141 = (void *)(v99 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel_lastServicesData);
  *uint64_t v141 = 0;
  v141[1] = 0;
  uint64_t v142 = v99 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__sharingOptionsAllowedFromSPI;
  unint64_t v505 = 15;
  unint64_t v143 = v331;
  sub_1000C67B0();
  (*(void (**)(uint64_t, char *, uint64_t))(v332 + 32))(v142, v143, v474);
  uint64_t v144 = v99 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__yourNameAndEmail;
  unint64_t v505 = 0;
  unint64_t v506 = 0xE000000000000000;
  uint64_t v507 = 0;
  unint64_t v508 = 0xE000000000000000;
  sub_100012854(&qword_10010CBA0);
  uint64_t v145 = v333;
  sub_1000C67B0();
  (*(void (**)(uint64_t, char *, uint64_t))(v334 + 32))(v144, v145, v335);
  uint64_t v146 = v99 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__sharedFileOrFolderURL;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v320)(v123, 1, 1, v321);
  sub_10001A740(v123, v126, (uint64_t *)&unk_10010BDD0);
  uint64_t v147 = v336;
  sub_1000C67B0();
  sub_10001326C(v123, (uint64_t *)&unk_10010BDD0);
  (*(void (**)(uint64_t, char *, uint64_t))(v337 + 32))(v146, v147, v486);
  *(unsigned char *)(v99
           + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel_shouldStopAccessingSharedFileOrFolderURL) = 0;
  uint64_t v148 = v99 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__itemUTI;
  unint64_t v505 = 0;
  unint64_t v506 = 0;
  uint64_t v149 = v338;
  sub_1000C67B0();
  v492 = *(void **)(v357 + 32);
  ((void (*)(uint64_t, char *, void *))v492)(v148, v149, v494);
  uint64_t v150 = v99 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__isShareRoot;
  LOBYTE(v505) = 1;
  uint64_t v151 = v493;
  sub_1000C67B0();
  v129(v150, v151, (uint64_t)v501);
  uint64_t v152 = v99 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__thumbnail;
  unint64_t v505 = (unint64_t)[objc_allocWithZone((Class)UIImage) init];
  uint64_t v357 = sub_1000132C8(0, (unint64_t *)&unk_10010B9E0);
  double v153 = v339;
  sub_1000C67B0();
  (*(void (**)(uint64_t, char *, uint64_t))(v340 + 32))(v152, v153, v476);
  uint64_t v154 = v99 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__thumbnailFromCloudKitSPI;
  unint64_t v505 = 0;
  sub_100012854((uint64_t *)&unk_10010CBC0);
  uint64_t v155 = v341;
  sub_1000C67B0();
  char v156 = *(void (**)(uint64_t, char *, uint64_t))(v342 + 32);
  uint64_t v157 = v468;
  v156(v154, v155, v468);
  uint64_t v158 = v99 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__thumbnailFromDocumentSPI;
  unint64_t v505 = 0;
  sub_1000C67B0();
  v156(v158, v155, v157);
  uint64_t v159 = v99 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__itemTitle;
  unint64_t v505 = 0;
  unint64_t v506 = 0xE000000000000000;
  uint64_t v160 = v343;
  sub_1000C67B0();
  uint64_t v161 = (void (*)(uint64_t, char *, uint64_t))*((void *)v345 + 4);
  uint64_t v162 = v346;
  v161(v159, v160, v346);
  uint64_t v163 = v99 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__sourceAppBundleID;
  unint64_t v505 = 0;
  unint64_t v506 = 0;
  sub_1000C67B0();
  ((void (*)(uint64_t, char *, void *))v492)(v163, v149, v494);
  uint64_t v164 = v99 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__sectionTitleForAuxiliaryToggles;
  unint64_t v505 = 0;
  unint64_t v506 = 0xE000000000000000;
  sub_1000C67B0();
  v161(v164, v160, v162);
  uint64_t v165 = v99 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__primaryCheckboxTitle;
  unint64_t v505 = 0;
  unint64_t v506 = 0xE000000000000000;
  sub_1000C67B0();
  v161(v165, v160, v162);
  v345 = v161;
  uint64_t v166 = v99 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__secondaryCheckboxTitle;
  unint64_t v505 = 0;
  unint64_t v506 = 0xE000000000000000;
  sub_1000C67B0();
  v161(v166, v160, v162);
  uint64_t v167 = v99 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__primaryCheckboxState;
  LOBYTE(v505) = 0;
  Swift::String_optional v168 = v493;
  sub_1000C67B0();
  Swift::String v169 = v501;
  Swift::String v170 = v482;
  v482(v167, v168, (uint64_t)v501);
  uint64_t v171 = v99 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__secondaryCheckboxState;
  LOBYTE(v505) = 0;
  sub_1000C67B0();
  v170(v171, v168, (uint64_t)v169);
  uint64_t v172 = v99 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__ckContainerIdentifier;
  unint64_t v505 = (unint64_t)[objc_allocWithZone((Class)CKContainerID) init];
  sub_1000132C8(0, &qword_10010CBD8);
  uint64_t v173 = v344;
  sub_1000C67B0();
  (*((void (**)(uint64_t, char *, unint64_t))v347 + 4))(v172, v173, v348);
  uint64_t v174 = v99 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__helpAnchor;
  unint64_t v505 = 0;
  unint64_t v506 = 0xE000000000000000;
  sub_1000C67B0();
  v345(v174, v160, v162);
  uint64_t v175 = v99 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__participantDetails;
  unint64_t v505 = sub_10004E588((uint64_t)_swiftEmptyArrayStorage);
  sub_100012854((uint64_t *)&unk_10010CBE8);
  uint64_t v176 = v349;
  sub_1000C67B0();
  (*(void (**)(uint64_t, char *, void *))(v351 + 32))(v175, v176, v480);
  uint64_t v177 = OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel_networkMonitor;
  type metadata accessor for NetworkMonitor();
  swift_allocObject();
  uint64_t v178 = v99;
  *(void *)(v99 + v177) = sub_10008E474(0);
  *(void *)(v99 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel_ckMetadata) = 0;
  uint64_t v179 = v504;
  *(void *)(v99 + 16) = v504;
  *(void *)(v99 + 24) = *(void *)(v179
                                    + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12OptionsModel_ckShareModel);
  swift_weakAssign();
  uint64_t v351 = v99 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__sharedFileOrFolderURL;
  swift_beginAccess();
  swift_retain();
  swift_retain();
  unsigned __int8 v180 = v469;
  sub_1000C67C0();
  swift_endAccess();
  v503 = &protocol conformance descriptor for Published<A>.Publisher;
  uint64_t v349 = (char *)sub_10001E454((unint64_t *)&unk_10010D020, &qword_10010CFF0);
  unint64_t v348 = sub_1000131C4();
  uint64_t v181 = v470;
  sub_1000C6860();
  uint64_t v182 = *(void (**)(char *, uint64_t))(v489 + 8);
  v489 += 8;
  uint64_t v347 = v182;
  v182(v180, v181);
  swift_beginAccess();
  unsigned __int8 v183 = v350;
  sub_1000C67C0();
  swift_endAccess();
  sub_10001E454(&qword_10010D038, &qword_10010CFE0);
  sub_1000130BC();
  uint64_t v184 = v353;
  sub_1000C6860();
  uint64_t v185 = *(void (**)(char *, void *))(v352 + 8);
  v185(v183, v184);
  swift_beginAccess();
  sub_1000C67C0();
  swift_endAccess();
  sub_1000C6860();
  v185(v183, v184);
  swift_beginAccess();
  unsigned __int8 v186 = v472;
  sub_1000C67C0();
  swift_endAccess();
  uint64_t v346 = sub_10001E454((unint64_t *)&unk_10010C4C0, (uint64_t *)&unk_10010C3F0);
  uint64_t v187 = v473;
  sub_1000C6860();
  char v188 = *(void (**)(uint64_t, char *, uint64_t))(v490 + 8);
  v490 += 8;
  v345 = v188;
  ((void (*)(char *, uint64_t))v188)(v186, v187);
  uint64_t v350 = (char *)sub_10001E454(&qword_10010D040, &qword_10010CFF8);
  sub_10001E454((unint64_t *)&unk_10010D048, &qword_10010CFE8);
  v482 = (void (*)(uint64_t, char *, uint64_t))&protocol conformance descriptor for Publishers.RemoveDuplicates<A>;
  uint64_t v352 = sub_10001E454((unint64_t *)&unk_10010BC60, &qword_10010BC20);
  uint64_t v189 = v354;
  sub_1000C6720();
  uint64_t v190 = swift_allocObject();
  *(void *)(v190 + 16) = sub_100074490;
  *(void *)(v190 + 24) = v178;
  uint64_t v353 = &protocol conformance descriptor for Publishers.CombineLatest4<A, B, C, D>;
  sub_10001E454(&qword_10010D058, &qword_10010D000);
  swift_retain();
  uint64_t v191 = v453;
  uint64_t v192 = v454;
  sub_1000C6830();
  swift_release();
  (*(void (**)(char *, uint64_t))(v452 + 8))(v189, v192);
  uint64_t v193 = v178 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__sharingType;
  swift_beginAccess();
  uint64_t v194 = v484;
  sub_1000C67C0();
  swift_endAccess();
  v457 = (char *)&protocol conformance descriptor for Publishers.Map<A, B>;
  sub_10001E454((unint64_t *)&unk_10010D060, &qword_10010D008);
  v195 = v477;
  sub_1000C6880();
  v456[1](v191, v195);
  uint64_t v196 = v498;
  uint64_t v197 = v485;
  (*(void (**)(char *, char *, uint64_t))(v498 + 16))(v479, v194, v485);
  uint64_t v454 = v193;
  swift_beginAccess();
  sub_1000C67D0();
  swift_endAccess();
  uint64_t v198 = *(void (***)(char *, void (*)(void)))(v196 + 8);
  uint64_t v498 = v196 + 8;
  v456 = v198;
  ((void (*)(char *, uint64_t))v198)(v194, v197);
  uint64_t v199 = (char *)(v178 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__executionMode);
  swift_beginAccess();
  v200 = v364;
  sub_1000C67C0();
  swift_endAccess();
  v453 = (char *)sub_10001E454((unint64_t *)&unk_10010C4D0, (uint64_t *)&unk_10010CFC0);
  unint64_t v452 = sub_100044AEC();
  uint64_t v201 = v461;
  uint64_t v202 = v483;
  sub_1000C6860();
  Swift::String v203 = *(void (**)(char *, uint64_t))(v497 + 8);
  v497 += 8;
  v451 = v203;
  v203(v200, v202);
  v494 = self;
  unint64_t v505 = (unint64_t)[v494 mainRunLoop];
  v492 = (void *)sub_1000C7820();
  uint64_t v204 = *(v492 - 1);
  v477 = *(void (**)(void))(v204 + 56);
  v493 = (char *)(v204 + 56);
  uint64_t v205 = (uint64_t)v502;
  v477();
  v479 = (char *)sub_1000132C8(0, (unint64_t *)&qword_10010C4E0);
  v344 = (char *)sub_10001E454((unint64_t *)&unk_10010D080, (uint64_t *)&unk_10010C3D0);
  uint64_t v478 = sub_100034064((unint64_t *)&qword_10010C4F0, (unint64_t *)&qword_10010C4E0);
  uint64_t v206 = v355;
  uint64_t v207 = v463;
  sub_1000C6850();
  sub_10001326C(v205, (uint64_t *)&unk_10010BBD0);

  (*(void (**)(char *, uint64_t))(v462 + 8))(v201, v207);
  v480 = &protocol conformance descriptor for Publishers.ReceiveOn<A, B>;
  sub_10001E454((unint64_t *)&unk_10010D090, &qword_10010CFD0);
  swift_retain();
  uint64_t v208 = v455;
  sub_1000C6870();
  swift_release();
  v356[1](v206, v208);
  swift_beginAccess();
  sub_1000C6760();
  swift_endAccess();
  swift_release();
  v354 = v199;
  swift_beginAccess();
  sub_1000C67C0();
  swift_endAccess();
  uint64_t v209 = v483;
  sub_1000C6860();
  v451(v200, v209);
  swift_beginAccess();
  swift_retain();
  uint64_t v455 = sub_100012854((uint64_t *)&unk_10010BC90);
  sub_1000C67C0();
  swift_endAccess();
  swift_release();
  v355 = (char *)sub_10001E454(&qword_10010D0A0, &qword_10010CFA0);
  uint64_t v210 = v358;
  sub_1000C66E0();
  uint64_t v211 = swift_allocObject();
  swift_weakInit();
  uint64_t v212 = swift_allocObject();
  *(void *)(v212 + 16) = sub_10007457C;
  *(void *)(v212 + 24) = v211;
  uint64_t v356 = (void (**)(char *, uint64_t))&protocol conformance descriptor for Publishers.CombineLatest<A, B>;
  sub_10001E454((unint64_t *)&unk_10010D0A8, &qword_10010CFA8);
  uint64_t v213 = v361;
  uint64_t v214 = v360;
  sub_1000C6830();
  swift_release();
  (*(void (**)(char *, uint64_t))(v359 + 8))(v210, v214);
  swift_beginAccess();
  swift_retain();
  uint64_t v215 = sub_100012854((uint64_t *)&unk_10010C490);
  uint64_t v216 = v366;
  uint64_t v360 = v215;
  sub_1000C67C0();
  swift_endAccess();
  sub_10001E454(&qword_10010D0B8, (uint64_t *)&unk_10010CFB0);
  uint64_t v217 = v363;
  sub_1000C6880();
  (*(void (**)(char *, uint64_t))(v362 + 8))(v213, v217);
  uint64_t v218 = v368;
  uint64_t v219 = v465;
  (*(void (**)(char *, char *, uint64_t))(v368 + 16))(v365, v216, v465);
  swift_beginAccess();
  sub_1000C67D0();
  swift_endAccess();
  uint64_t v368 = *(void *)(v218 + 8);
  ((void (*)(char *, uint64_t))v368)(v216, v219);
  swift_release();
  swift_beginAccess();
  sub_1000C67C0();
  swift_endAccess();
  uint64_t v220 = v483;
  sub_1000C6860();
  v451(v200, v220);
  swift_beginAccess();
  uint64_t v221 = v484;
  sub_1000C67C0();
  swift_endAccess();
  uint64_t v497 = sub_10001E454(&qword_10010D0C0, &qword_10010CFD8);
  sub_1000745BC();
  uint64_t v222 = v485;
  sub_1000C6860();
  ((void (*)(char *, uint64_t))v456)(v221, v222);
  swift_beginAccess();
  swift_retain();
  uint64_t v223 = v487;
  sub_1000C67C0();
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  sub_100012854((uint64_t *)&unk_10010D0D0);
  uint64_t v224 = v367;
  sub_1000C67C0();
  swift_endAccess();
  sub_10001E454((unint64_t *)&unk_10010C470, (uint64_t *)&unk_10010CF70);
  sub_100044A44();
  uint64_t v225 = v376;
  uint64_t v226 = v370;
  sub_1000C6860();
  (*(void (**)(char *, uint64_t))(v369 + 8))(v224, v226);
  swift_beginAccess();
  sub_100012854((uint64_t *)&unk_10010BD00);
  v227 = v373;
  sub_1000C67C0();
  swift_endAccess();
  sub_10001E454((unint64_t *)&unk_10010D0F0, (uint64_t *)&unk_10010CF60);
  sub_100034188();
  uint64_t v228 = v381;
  uint64_t v229 = v375;
  sub_1000C6860();
  (*(void (**)(char *, uint64_t))(v374 + 8))(v227, v229);
  swift_beginAccess();
  swift_retain();
  sub_1000C67C0();
  swift_endAccess();
  swift_release();
  sub_10001E454((unint64_t *)&unk_10010D100, &qword_10010C418);
  sub_100044A98();
  v230 = v387;
  uint64_t v231 = v465;
  sub_1000C6860();
  ((void (*)(char *, uint64_t))v368)(v216, v231);
  uint64_t v232 = (uint64_t)v380;
  (*(void (**)(char *, char *, uint64_t))(v462 + 32))(v380, v461, v463);
  uint64_t v233 = (int *)v379;
  (*(void (**)(uint64_t, char *, uint64_t))(v371 + 32))(v232 + *(int *)(v379 + 116), v466, v372);
  (*(void (**)(uint64_t, char *, uint64_t))(v467 + 32))(v232 + v233[30], v223, v488);
  (*(void (**)(uint64_t, char *, uint64_t))(v377 + 32))(v232 + v233[31], v225, v378);
  (*(void (**)(uint64_t, char *, uint64_t))(v382 + 32))(v232 + v233[32], v228, v383);
  (*(void (**)(uint64_t, char *, uint64_t))(v388 + 32))(v232 + v233[33], v230, v389);
  unint64_t v505 = (unint64_t)[v494 mainRunLoop];
  uint64_t v234 = (uint64_t)v502;
  uint64_t v235 = v477;
  ((void (*)(char *, uint64_t, uint64_t, void *))v477)(v502, 1, 1, v492);
  sub_10001E454(&qword_10010D110, &qword_10010CF88);
  uint64_t v236 = v384;
  sub_1000C6850();
  sub_10001326C(v234, (uint64_t *)&unk_10010BBD0);

  sub_10001326C(v232, &qword_10010CF88);
  uint64_t v237 = swift_allocObject();
  swift_weakInit();
  uint64_t v238 = swift_allocObject();
  uint64_t v239 = v504;
  *(void *)(v238 + 16) = v237;
  *(void *)(v238 + 24) = v239;
  uint64_t v240 = swift_allocObject();
  *(void *)(v240 + 16) = sub_100074650;
  *(void *)(v240 + 24) = v238;
  sub_10001E454(&qword_10010D118, (uint64_t *)&unk_10010CF90);
  swift_retain();
  uint64_t v241 = v386;
  sub_1000C6870();
  swift_release();
  (*(void (**)(char *, uint64_t))(v385 + 8))(v236, v241);
  swift_beginAccess();
  sub_1000C6760();
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  swift_retain();
  uint64_t v242 = v487;
  sub_1000C67C0();
  swift_endAccess();
  swift_release();
  unint64_t v505 = (unint64_t)[v494 mainRunLoop];
  uint64_t v243 = (uint64_t)v502;
  ((void (*)(char *, uint64_t, uint64_t, void *))v235)(v502, 1, 1, v492);
  uint64_t v244 = v390;
  uint64_t v245 = v488;
  sub_1000C6850();
  sub_10001326C(v243, (uint64_t *)&unk_10010BBD0);

  (*(void (**)(char *, uint64_t))(v467 + 8))(v242, v245);
  swift_allocObject();
  swift_weakInit();
  sub_10001E454(&qword_10010D120, (uint64_t *)&unk_10010CF50);
  uint64_t v246 = v392;
  sub_1000C6870();
  swift_release();
  (*(void (**)(char *, uint64_t))(v391 + 8))(v244, v246);
  swift_beginAccess();
  sub_1000C6760();
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  uint64_t v247 = v484;
  sub_1000C67C0();
  swift_endAccess();
  swift_allocObject();
  swift_weakInit();
  uint64_t v248 = v485;
  sub_1000C6870();
  swift_release();
  ((void (*)(char *, uint64_t))v456)(v247, v248);
  swift_beginAccess();
  sub_1000C6760();
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  v249 = v393;
  sub_1000C67C0();
  swift_endAccess();
  swift_allocObject();
  swift_weakInit();
  sub_10001E454(&qword_10010D128, &qword_10010CF48);
  uint64_t v250 = v395;
  sub_1000C6870();
  swift_release();
  (*(void (**)(char *, uint64_t))(v394 + 8))(v249, v250);
  swift_beginAccess();
  sub_1000C6760();
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  uint64_t v251 = v396;
  sub_1000C67C0();
  swift_endAccess();
  uint64_t v252 = swift_allocObject();
  swift_weakInit();
  uint64_t v253 = swift_allocObject();
  *(void *)(v253 + 16) = sub_1000746B0;
  *(void *)(v253 + 24) = v252;
  sub_10001E454(&qword_10010D130, &qword_10010CF40);
  uint64_t v254 = v398;
  sub_1000C6870();
  swift_release();
  (*(void (**)(char *, uint64_t))(v397 + 8))(v251, v254);
  swift_beginAccess();
  sub_1000C6760();
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  uint64_t v255 = v399;
  sub_1000C67C0();
  swift_endAccess();
  uint64_t v256 = swift_allocObject();
  swift_weakInit();
  uint64_t v257 = swift_allocObject();
  *(void *)(v257 + 16) = sub_1000746E4;
  *(void *)(v257 + 24) = v256;
  sub_10001E454((unint64_t *)&unk_10010D138, &qword_10010CF38);
  uint64_t v258 = v401;
  sub_1000C6870();
  swift_release();
  (*(void (**)(char *, uint64_t))(v400 + 8))(v255, v258);
  swift_beginAccess();
  sub_1000C6760();
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  uint64_t v259 = v402;
  sub_1000C67C0();
  swift_endAccess();
  uint64_t v260 = swift_allocObject();
  swift_weakInit();
  uint64_t v261 = swift_allocObject();
  *(void *)(v261 + 16) = sub_100074718;
  *(void *)(v261 + 24) = v260;
  sub_10001E454(&qword_10010BC70, (uint64_t *)&unk_10010BC00);
  uint64_t v262 = v404;
  sub_1000C6870();
  swift_release();
  (*(void (**)(char *, uint64_t))(v403 + 8))(v259, v262);
  swift_beginAccess();
  sub_1000C6760();
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  uint64_t v263 = v469;
  sub_1000C67C0();
  swift_endAccess();
  uint64_t v264 = v470;
  sub_1000C6860();
  v347(v263, v264);
  swift_beginAccess();
  v265 = v472;
  sub_1000C67C0();
  swift_endAccess();
  uint64_t v266 = v473;
  sub_1000C6860();
  ((void (*)(char *, uint64_t))v345)(v265, v266);
  swift_beginAccess();
  uint64_t v267 = v406;
  sub_1000C67C0();
  swift_endAccess();
  sub_10001E454(&qword_10010D148, &qword_10010CF10);
  sub_10007474C();
  uint64_t v268 = v409;
  sub_1000C6860();
  uint64_t v269 = *(void (**)(char *, uint64_t))(v408 + 8);
  v269(v267, v268);
  swift_beginAccess();
  sub_1000C67C0();
  swift_endAccess();
  sub_1000C6860();
  v269(v267, v268);
  sub_10001E454(&qword_10010D160, &qword_10010CF18);
  uint64_t v270 = v411;
  sub_1000C6720();
  uint64_t v271 = swift_allocObject();
  swift_weakInit();
  uint64_t v272 = swift_allocObject();
  *(void *)(v272 + 16) = v271;
  *(int64x2_t *)(v272 + 24) = vdupq_n_s64(0x4060000000000000uLL);
  *(void *)(v272 + 40) = v422;
  uint64_t v273 = swift_allocObject();
  *(void *)(v273 + 16) = &unk_10010D170;
  *(void *)(v273 + 24) = v272;
  uint64_t v274 = swift_allocObject();
  *(void *)(v274 + 16) = &unk_10010D180;
  *(void *)(v274 + 24) = v273;
  swift_retain();
  sub_1000C6750();
  sub_100012854(&qword_10010D188);
  sub_10001E454(&qword_10010D190, &qword_10010CF20);
  sub_10001E454(&qword_10010D198, &qword_10010D188);
  uint64_t v275 = v414;
  uint64_t v276 = v413;
  uint64_t v277 = v270;
  sub_1000C6840();
  swift_release();
  sub_10001E454(&qword_10010D1A0, &qword_10010CF08);
  uint64_t v278 = v417;
  unint64_t v279 = sub_1000C6810();
  (*(void (**)(char *, uint64_t))(v415 + 8))(v275, v278);
  swift_release();
  (*(void (**)(char *, uint64_t))(v412 + 8))(v277, v276);
  unint64_t v505 = v279;
  id v509 = [v494 mainRunLoop];
  uint64_t v280 = (uint64_t)v502;
  ((void (*)(char *, uint64_t, uint64_t, void *))v477)(v502, 1, 1, v492);
  sub_100012854(&qword_10010D1A8);
  sub_10001E454(&qword_10010D1B0, &qword_10010D1A8);
  uint64_t v281 = v416;
  sub_1000C6850();
  sub_10001326C(v280, (uint64_t *)&unk_10010BBD0);

  swift_release();
  swift_beginAccess();
  uint64_t v282 = v421;
  sub_1000C67C0();
  swift_endAccess();
  sub_10001E454(&qword_10010D1B8, (uint64_t *)&unk_10010CF28);
  uint64_t v283 = v419;
  sub_1000C6880();
  (*(void (**)(char *, uint64_t))(v418 + 8))(v281, v283);
  uint64_t v284 = v423;
  uint64_t v285 = v424;
  (*(void (**)(char *, char *, uint64_t))(v423 + 16))(v420, v282, v424);
  swift_beginAccess();
  sub_1000C67D0();
  swift_endAccess();
  (*(void (**)(char *, uint64_t))(v284 + 8))(v282, v285);
  swift_beginAccess();
  uint64_t v286 = v440;
  sub_1000C67C0();
  swift_endAccess();
  sub_10001E454((unint64_t *)&unk_10010D1C0, (uint64_t *)&unk_10010C3B0);
  sub_10001E3C0();
  uint64_t v287 = v441;
  sub_1000C6860();
  uint64_t v288 = v438;
  v501 = *(void (**)(void, void))(v438 + 8);
  v501(v286, v287);
  swift_beginAccess();
  swift_retain();
  sub_100012854(&qword_10010D1D0);
  uint64_t v289 = v433;
  sub_1000C67C0();
  swift_endAccess();
  swift_release();
  sub_10001E454(&qword_10010D1D8, &qword_10010CEE0);
  sub_100074AD0();
  uint64_t v290 = v436;
  sub_1000C6860();
  (*(void (**)(char *, uint64_t))(v435 + 8))(v289, v290);
  sub_10001E454(&qword_10010D200, &qword_10010B6B8);
  sub_10001E454(&qword_10010D208, &qword_10010CEE8);
  v291 = v426;
  sub_1000C66E0();
  sub_10001E454(&qword_10010D210, &qword_10010CEF0);
  uint64_t v292 = v430;
  uint64_t v293 = v429;
  sub_1000C6830();
  (*(void (**)(char *, uint64_t))(v428 + 8))(v291, v293);
  swift_beginAccess();
  sub_1000C67C0();
  swift_endAccess();
  sub_10001E454(&qword_10010D218, &qword_10010CEF8);
  uint64_t v294 = v432;
  sub_1000C6880();
  (*(void (**)(char *, uint64_t))(v431 + 8))(v292, v294);
  (*(void (**)(char *, char *, uint64_t))(v288 + 16))(v439, v286, v287);
  swift_beginAccess();
  sub_1000C67D0();
  swift_endAccess();
  v501(v286, v287);
  uint64_t v295 = v500;
  swift_beginAccess();
  swift_retain();
  sub_100012854(&qword_10010D220);
  uint64_t v296 = v442;
  sub_1000C67C0();
  swift_endAccess();
  swift_release();
  sub_10001E454(&qword_10010D228, &qword_10010CEC8);
  sub_100074B70();
  uint64_t v297 = v445;
  uint64_t v298 = v444;
  sub_1000C6860();
  (*(void (**)(char *, uint64_t))(v443 + 8))(v296, v298);
  unint64_t v505 = (unint64_t)[v494 mainRunLoop];
  uint64_t v299 = (uint64_t)v502;
  ((void (*)(char *, uint64_t, uint64_t, void *))v477)(v502, 1, 1, v492);
  sub_10001E454(&qword_10010D238, &qword_10010CED0);
  uint64_t v300 = v448;
  uint64_t v301 = v447;
  sub_1000C6850();
  sub_10001326C(v299, (uint64_t *)&unk_10010BBD0);

  (*(void (**)(char *, uint64_t))(v446 + 8))(v297, v301);
  swift_allocObject();
  swift_weakInit();
  sub_10001E454(&qword_10010D240, &qword_10010CED8);
  uint64_t v302 = v450;
  sub_1000C6870();
  swift_release();
  (*(void (**)(char *, uint64_t))(v449 + 8))(v300, v302);
  swift_beginAccess();
  sub_1000C6760();
  swift_endAccess();
  swift_release();
  swift_release();
  return v295;
}

uint64_t sub_10005904C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, char a6)
{
  uint64_t v60 = a2;
  unint64_t v61 = a3;
  uint64_t v10 = sub_1000C66D0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v62 = v10;
  uint64_t v63 = v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v59 - v16;
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = (char *)&v59 - v19;
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v59 - v21;
  uint64_t v23 = sub_100012854((uint64_t *)&unk_10010BDD0);
  __chkstk_darwin(v23 - 8);
  unint64_t v25 = (v24 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v26 = (char *)&v59 - v25;
  if ((a6 & 1) == 0) {
    return 8;
  }
  if (!a5)
  {
    sub_10001A740(a1, (uint64_t)&v59 - v25, (uint64_t *)&unk_10010BDD0);
    uint64_t v41 = sub_1000C6530();
    int v42 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v41 - 8) + 48))(v26, 1, v41);
    sub_10001326C((uint64_t)v26, (uint64_t *)&unk_10010BDD0);
    if (v42 != 1) {
      return 9;
    }
    uint64_t v43 = sub_100059AA8();
    if ((v43 & 0xFE) != 8)
    {
      uint64_t v29 = v43;
      if (v43 > 7u || ((1 << v43) & 0xC1) == 0)
      {
        sub_1000C66B0();
        uint64_t v52 = sub_1000C66C0();
        os_log_type_t v53 = sub_1000C7690();
        if (os_log_type_enabled(v52, v53))
        {
          uint64_t v54 = (uint8_t *)swift_slowAlloc();
          v64[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v54 = 136315138;
          uint64_t v55 = sub_10009C86C(v29);
          uint64_t v65 = sub_1000720D0(v55, v56, v64);
          sub_1000C7850();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v52, v53, "Combine for sharingType specific CK sharingType: %s.", v54, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }

        (*(void (**)(char *, uint64_t))(v63 + 8))(v17, v62);
        return v29;
      }
    }
    sub_1000C66B0();
    uint64_t v44 = v61;
    swift_bridgeObjectRetain_n();
    uint64_t v45 = sub_1000C66C0();
    os_log_type_t v46 = sub_1000C7690();
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v47 = (uint8_t *)swift_slowAlloc();
      uint64_t v48 = swift_slowAlloc();
      v64[1] = v44;
      uint64_t v65 = v48;
      *(_DWORD *)uint64_t v47 = 136315138;
      uint64_t v49 = v60;
      v64[0] = v60;
      sub_100012854(&qword_10010CBB0);
      uint64_t v50 = sub_1000C7830();
      v64[0] = sub_1000720D0(v50, v51, &v65);
      sub_1000C7850();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v45, v46, "Combine for sharingType sourceAppBundleID: %s.", v47, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v63 + 8))(v14, v62);
      if (!v44) {
        return 0;
      }
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v63 + 8))(v14, v62);
      uint64_t v49 = v60;
      if (!v44) {
        return 0;
      }
    }
    if (v49 == 0x6C7070612E6D6F63 && v44 == 0xEF7365746F4E2E65
      || (sub_1000C7A50() & 1) != 0
      || v49 == 0xD000000000000015 && v44 == 0x80000001000D7380
      || (sub_1000C7A50() & 1) != 0)
    {
      return 1;
    }
    if (v49 == 0xD000000000000013 && v44 == 0x80000001000D7360 || (sub_1000C7A50() & 1) != 0) {
      return 3;
    }
    if (v49 == 0xD000000000000010 && v44 == 0x80000001000D7340
      || (sub_1000C7A50() & 1) != 0
      || v49 == 0xD000000000000016 && v44 == 0x80000001000D7320
      || (sub_1000C7A50() & 1) != 0)
    {
      return 4;
    }
    if (v49 == 0xD000000000000010 && v61 == 0x80000001000D7300
      || (sub_1000C7A50() & 1) != 0
      || v60 == 0xD000000000000012 && v61 == 0x80000001000D72E0
      || (sub_1000C7A50() & 1) != 0)
    {
      return 5;
    }
    uint64_t v57 = HIBYTE(v61) & 0xF;
    if ((v61 & 0x2000000000000000) == 0) {
      uint64_t v57 = v60 & 0xFFFFFFFFFFFFLL;
    }
    if (v57) {
      return 6;
    }
    return 0;
  }
  swift_bridgeObjectRetain();
  char v27 = sub_10009DD3C(a4, a5, a1);
  uint64_t v28 = sub_10009C7E0(v27);
  uint64_t v29 = v28;
  if ((v28 & 0xFE) != 8 && (v28 == 7 || !(_BYTE)v28) && v61)
  {
    uint64_t v30 = HIBYTE(v61) & 0xF;
    if ((v61 & 0x2000000000000000) == 0) {
      uint64_t v30 = v60 & 0xFFFFFFFFFFFFLL;
    }
    if (v30)
    {
      sub_1000C66B0();
      swift_bridgeObjectRetain();
      uint64_t v31 = sub_1000C66C0();
      os_log_type_t v32 = sub_1000C7690();
      if (os_log_type_enabled(v31, v32))
      {
        uint64_t v33 = swift_slowAlloc();
        v64[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v33 = 136315394;
        swift_bridgeObjectRetain();
        uint64_t v65 = sub_1000720D0(a4, a5, v64);
        sub_1000C7850();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v33 + 12) = 2080;
        uint64_t v34 = sub_10009C86C(v29);
        uint64_t v65 = sub_1000720D0(v34, v35, v64);
        sub_1000C7850();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v31, v32, "Combine for sharingType itemUTI: %s, sharingType: %s--return .other for unspecified.", (uint8_t *)v33, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      (*(void (**)(char *, uint64_t))(v63 + 8))(v22, v62);
      return 6;
    }
  }
  sub_1000C66B0();
  swift_bridgeObjectRetain();
  uint64_t v36 = sub_1000C66C0();
  os_log_type_t v37 = sub_1000C7690();
  if (os_log_type_enabled(v36, v37))
  {
    uint64_t v38 = swift_slowAlloc();
    v64[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v38 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v65 = sub_1000720D0(a4, a5, v64);
    sub_1000C7850();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v38 + 12) = 2080;
    uint64_t v39 = sub_10009C86C(v29);
    uint64_t v65 = sub_1000720D0(v39, v40, v64);
    sub_1000C7850();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v36, v37, "Combine for sharingType itemUTI: %s, sharingType: %s.", (uint8_t *)v38, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v63 + 8))(v20, v62);
  return v29;
}

uint64_t sub_100059AA8()
{
  uint64_t v0 = sub_1000C66D0();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v2);
  uint64_t v7 = (char *)&v31 - v6;
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v31 - v8;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  if (!v34[0])
  {
    sub_1000C66B0();
    uint64_t v26 = sub_1000C66C0();
    os_log_type_t v27 = sub_1000C7690();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v28 = 0;
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "ckSharingTypeFromShare on model--no CKShare yet so return .cloudKit(type: .other).", v28, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
    return 6;
  }
  uint64_t v10 = v34[0];
  sub_1000C77E0();
  uint64_t v11 = sub_1000C77F0();

  swift_bridgeObjectRelease();
  if (!v11 || (uint64_t v35 = v11, sub_100012854(&qword_10010BEA0), (swift_dynamicCast() & 1) == 0))
  {
    sub_1000C66B0();
    uint64_t v22 = sub_1000C66C0();
    os_log_type_t v23 = sub_1000C7690();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v24 = 0;
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "ckSharingTypeFromShare on model--couldn't get a string from CKShare.shareType so return .cloudKit(type: .other).", v24, 2u);
      swift_slowDealloc();
      unint64_t v25 = v10;
    }
    else
    {
      unint64_t v25 = v22;
      uint64_t v22 = v10;
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v7, v0);
    return 6;
  }
  unint64_t v12 = sub_10009CB84((uint64_t)v34[0], (uint64_t)v34[1]);
  uint64_t v14 = v13;
  swift_bridgeObjectRelease();
  sub_1000C66B0();
  swift_bridgeObjectRetain_n();
  uint64_t v15 = sub_1000C66C0();
  os_log_type_t v16 = sub_1000C7690();
  if (os_log_type_enabled(v15, v16))
  {
    unint64_t v33 = v12;
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    os_log_type_t v32 = (void *)swift_slowAlloc();
    v34[0] = v32;
    *(_DWORD *)uint64_t v17 = 136315138;
    uint64_t v31 = v17 + 4;
    char v18 = sub_10009E2A8(v33, v14);
    char v19 = sub_10009C7E0(v18);
    uint64_t v20 = sub_10009C86C(v19);
    uint64_t v35 = sub_1000720D0(v20, v21, (uint64_t *)v34);
    sub_1000C7850();
    swift_bridgeObjectRelease_n();
    unint64_t v12 = v33;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "ckSharingTypeFromShare on model--CKShare converts to: %s.", v17, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v1 + 8))(v9, v0);
  char v30 = sub_10009E2A8(v12, v14);
  swift_bridgeObjectRelease();

  return sub_10009C7E0(v30);
}

unsigned char *sub_100059F2C(unsigned char *result)
{
  if (*result == 1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    return (unsigned char *)sub_1000C67F0();
  }
  return result;
}

_UNKNOWN **sub_100059FAC(char a1, void *a2)
{
  swift_beginAccess();
  if (!swift_weakLoadStrong()) {
    return &off_1000FF508;
  }
  if (!a2)
  {
    swift_release();
    return &off_1000FF508;
  }
  char v22 = a1;
  id v4 = a2;
  id v5 = [v4 participants];
  sub_1000132C8(0, (unint64_t *)&unk_10010B070);
  unint64_t v6 = sub_1000C7540();

  id v7 = v4;
  swift_retain();
  sub_100084324(a2);
  uint64_t v23 = v8;
  swift_release();

  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = (_UNKNOWN **)sub_1000C7990();
    uint64_t v9 = (uint64_t)result;
  }
  else
  {
    uint64_t v9 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = (_UNKNOWN **)swift_bridgeObjectRetain();
  }
  if (v9)
  {
    if (v9 < 1)
    {
LABEL_52:
      __break(1u);
      __break(1u);
      return result;
    }
    for (uint64_t i = 0; i != v9; ++i)
    {
      if ((v6 & 0xC000000000000001) != 0) {
        id v12 = (id)sub_1000C78F0();
      }
      else {
        id v12 = *(id *)(v6 + 8 * i + 32);
      }
      uint64_t v13 = v12;
      if ([v12 role] != (id)1
        && (id v14 = [v13 role], v14 == (id)sub_1000C7730())
        && [v13 permission] == (id)3)
      {
        sub_1000C7910();
        sub_1000C7940();
        sub_1000C7950();
        sub_1000C7920();
      }
      else
      {
      }
    }
    swift_bridgeObjectRelease();
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_49;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_49;
    }
  }
  if (((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) == 0)
  {
    uint64_t v15 = _swiftEmptyArrayStorage[2];
    goto LABEL_24;
  }
LABEL_49:
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1000C7990();
  swift_release();
LABEL_24:
  swift_release();
  if (v9)
  {
    uint64_t v21 = v15;
    for (uint64_t j = 0; j != v9; ++j)
    {
      if ((v6 & 0xC000000000000001) != 0) {
        id v17 = (id)sub_1000C78F0();
      }
      else {
        id v17 = *(id *)(v6 + 8 * j + 32);
      }
      char v18 = v17;
      if (objc_msgSend(v17, "role", v21) == (id)1
        || (id v19 = [v18 role], v19 == (id)sub_1000C7730()) && objc_msgSend(v18, "permission") != (id)2)
      {
      }
      else
      {
        sub_1000C7910();
        sub_1000C7940();
        sub_1000C7950();
        sub_1000C7920();
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v15 = v21;
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_50;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_50;
    }
  }
  if (((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) == 0)
  {
    uint64_t v20 = _swiftEmptyArrayStorage[2];
    goto LABEL_40;
  }
LABEL_50:
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_1000C7990();
  swift_release();
LABEL_40:
  uint64_t result = (_UNKNOWN **)swift_release();
  if (__OFSUB__(v20, v23))
  {
    __break(1u);
    goto LABEL_52;
  }
  if (v15 <= 0)
  {
    swift_release();

    return &off_1000FF468;
  }
  else if (v20 - v23 < 1)
  {
    swift_release();

    return &off_1000FF4E0;
  }
  else
  {
    swift_release();

    if (v22 == 3) {
      return &off_1000FF490;
    }
    else {
      return &off_1000FF4B8;
    }
  }
}

uint64_t sub_10005A3E0(int a1, unsigned __int8 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = sub_1000C66D0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v34 - v14;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  if (!(_BYTE)a1) {
    return swift_release();
  }
  uint64_t v37 = a6;
  uint64_t v38 = v13;
  uint64_t v41 = v10;
  unsigned int v40 = (a2 < 0xAu) & (0x23Eu >> a2);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  int v17 = v42;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  int v18 = v42;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  if (v42 != 1) {
    goto LABEL_8;
  }
  if (a1 != 1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1000C67E0();
    swift_release();
    swift_release();
    swift_release();
    if (v42 != 1) {
      goto LABEL_8;
    }
  }
  if (v17 == 2 || (char v19 = v40, v18 != 2)) {
LABEL_8:
  }
    char v19 = 0;
  swift_getKeyPath();
  swift_getKeyPath();
  LOBYTE(v42) = v19;
  swift_retain();
  sub_1000C67F0();
  sub_1000C66B0();
  swift_retain_n();
  uint64_t v20 = sub_1000C66C0();
  os_log_type_t v21 = sub_1000C7690();
  BOOL v22 = os_log_type_enabled(v20, v21);
  int v39 = a1;
  if (v22)
  {
    BOOL v35 = v18 == 2;
    BOOL v36 = a1 == 1;
    uint64_t v23 = swift_slowAlloc();
    *(_DWORD *)uint64_t v23 = 67110144;
    LODWORD(v42) = v40;
    sub_1000C7850();
    *(_WORD *)(v23 + 8) = 1024;
    LODWORD(v42) = v17 == 2;
    sub_1000C7850();
    *(_WORD *)(v23 + 14) = 1024;
    LODWORD(v42) = v35;
    sub_1000C7850();
    *(_WORD *)(v23 + 20) = 1024;
    LODWORD(v42) = v36;
    sub_1000C7850();
    *(_WORD *)(v23 + 26) = 1024;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1000C67E0();
    swift_release();
    swift_release();
    swift_release();
    LODWORD(v42) = v42;
    sub_1000C7850();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "executionMode is set. appIsOKForCoOwners: %{BOOL}d, R/O: %{BOOL}d, private: %{BOOL}d, isPreShare: %{BOOL}d, allowCoOwnersEditing: %{BOOL}d", (uint8_t *)v23, 0x20u);
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v24 = *(void (**)(char *, uint64_t))(v41 + 8);
  v24(v15, v9);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  if ((v42 & 1) == 0)
  {
    sub_10001C6D0((uint64_t)&off_1000FF530);
    return swift_release();
  }
  if (v39 == 1) {
    return swift_release();
  }
  uint64_t v41 = v9;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000C67E0();
  swift_release();
  swift_release();
  id v25 = v42;
  if (!v42)
  {
    swift_release();
    return swift_release();
  }
  id v26 = [v42 participants];
  sub_1000132C8(0, (unint64_t *)&unk_10010B070);
  unint64_t v27 = sub_1000C7540();

  if (v27 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_1000C7990();
    swift_release();

    swift_bridgeObjectRelease_n();
    if (v33 > 1) {
      goto LABEL_17;
    }
    return swift_release();
  }
  uint64_t v28 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_release();
  swift_bridgeObjectRelease();

  if (v28 <= 1) {
    return swift_release();
  }
LABEL_17:
  sub_10001C6D0(v37);
  uint64_t v29 = v38;
  sub_1000C66B0();
  swift_retain();
  char v30 = sub_1000C66C0();
  os_log_type_t v31 = sub_1000C7690();
  if (os_log_type_enabled(v30, v31))
  {
    os_log_type_t v32 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v32 = 67109120;
    LOBYTE(v42) = sub_10001B0D4() & 1;
    LODWORD(v42) = v42;
    sub_1000C7850();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v30, v31, "Setting newParticipantsCanBeCoOwners from CKShare state: %{BOOL}d.", v32, 8u);
    swift_slowDealloc();
    swift_release();
  }
  else
  {

    swift_release();
    swift_release();
  }
  return ((uint64_t (*)(char *, uint64_t))v24)(v29, v41);
}

void sub_10005AB5C(void **a1)
{
  uint64_t v1 = *a1;
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    if (!v1)
    {
      swift_release();
      return;
    }
    id v2 = v1;
    sub_1000C77E0();
    uint64_t v3 = sub_1000C77F0();

    swift_bridgeObjectRelease();
    if (v3)
    {
      self;
      if (swift_dynamicCastObjCClass())
      {
        sub_1000C7440();
        swift_getKeyPath();
        swift_getKeyPath();
        sub_1000C67F0();
        swift_unknownObjectRelease();
LABEL_9:

        return;
      }
      swift_unknownObjectRelease();
    }
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1000C67F0();
    goto LABEL_9;
  }
}

uint64_t sub_10005ACA0(unsigned __int8 *a1)
{
  uint64_t v2 = sub_100012854(&qword_10010B770);
  __chkstk_darwin(v2 - 8);
  id v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v5 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (!Strong) {
      return swift_release();
    }
    uint64_t v8 = Strong;
    if (v5 == 8)
    {
LABEL_4:
      swift_release();
      return swift_unknownObjectRelease();
    }
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1000C67E0();
    swift_release();
    swift_release();
    if (HIBYTE(v13) == 8)
    {
      if ((v5 & 0xFE) != 8)
      {
LABEL_10:
        switch(v5)
        {
          case 7:
            goto LABEL_4;
          case 4:
LABEL_19:
            swift_getKeyPath();
            swift_getKeyPath();
            HIBYTE(v13) = 1;
            swift_retain();
            sub_1000C67F0();
            break;
          case 0:
            goto LABEL_4;
        }
      }
    }
    else
    {
      if (HIBYTE(v13) == 9)
      {
        switch(v5)
        {
          case 0:
          case 7:
          case 9:
            goto LABEL_4;
          case 4:
            goto LABEL_19;
          default:
            goto LABEL_20;
        }
      }
      if ((v5 & 0xFE) != 8)
      {
        if (HIBYTE(v13) == 7 || v5 == 7 || HIBYTE(v13) == v5) {
          goto LABEL_4;
        }
        goto LABEL_10;
      }
    }
LABEL_20:
    uint64_t v9 = *(void *)(v8 + OBJC_IVAR___CloudSharingViewController_model);
    sub_1000C75E0();
    uint64_t v10 = sub_1000C7600();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v4, 0, 1, v10);
    sub_1000C75D0();
    swift_retain();
    uint64_t v11 = sub_1000C75C0();
    uint64_t v12 = (void *)swift_allocObject();
    v12[2] = v11;
    v12[3] = &protocol witness table for MainActor;
    v12[4] = v9;
    sub_1000BD118((uint64_t)v4, (uint64_t)&unk_10010D318, (uint64_t)v12);
    swift_release();
    swift_unknownObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_10005AF94(unsigned char *a1)
{
  uint64_t v2 = sub_100012854(&qword_10010B770);
  uint64_t result = __chkstk_darwin(v2 - 8);
  int v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (*a1 == 2)
  {
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (result)
    {
      uint64_t v6 = result;
      swift_getKeyPath();
      swift_getKeyPath();
      sub_1000C67E0();
      swift_release();
      swift_release();
      if (v10[7] == 3)
      {
        sub_1000C75E0();
        uint64_t v7 = sub_1000C7600();
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 0, 1, v7);
        sub_1000C75D0();
        swift_retain();
        uint64_t v8 = sub_1000C75C0();
        uint64_t v9 = (void *)swift_allocObject();
        v9[2] = v8;
        v9[3] = &protocol witness table for MainActor;
        v9[4] = v6;
        sub_1000BD2A0((uint64_t)v5, (uint64_t)&unk_10010D310, (uint64_t)v9);
        swift_release();
      }
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_10005B148()
{
  return sub_10001AEE4();
}

uint64_t sub_10005B15C()
{
  v0[2] = sub_1000C75D0();
  v0[3] = sub_1000C75C0();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[4] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10005B20C;
  return sub_10005B348(1500);
}

uint64_t sub_10005B20C()
{
  swift_task_dealloc();
  uint64_t v1 = sub_1000C7590();
  return _swift_task_switch(sub_10003E6AC, v1, v0);
}

uint64_t sub_10005B348(uint64_t a1)
{
  v2[10] = a1;
  v2[11] = v1;
  uint64_t v3 = sub_1000C66D0();
  v2[12] = v3;
  v2[13] = *(void *)(v3 - 8);
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  sub_1000C75D0();
  v2[16] = sub_1000C75C0();
  uint64_t v5 = sub_1000C7590();
  v2[17] = v5;
  v2[18] = v4;
  return _swift_task_switch(sub_10005B44C, v5, v4);
}

uint64_t sub_10005B44C()
{
  uint64_t v1 = *(void *)(v0 + 80);
  if (v1 < 1)
  {
    __break(1u);
    JUMPOUT(0x10005B718);
  }
  *(void *)(v0 + 152) = BRCloudDocsErrorDomain;
  *(void *)(v0 + 160) = CKErrorDomain;
  *(void *)(v0 + 168) = v1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  switch(*(unsigned char *)(v0 + 61))
  {
    case 1:
      return _swift_task_switch(sub_10005B730, 0, 0);
    case 3:
      goto LABEL_4;
    case 4:
    case 5:
      goto LABEL_9;
    default:
      swift_getKeyPath();
      swift_getKeyPath();
      *(unsigned char *)(v0 + 63) = 3;
      swift_retain();
      sub_1000C67F0();
LABEL_4:
      swift_getKeyPath();
      swift_getKeyPath();
      sub_1000C67E0();
      swift_release();
      swift_release();
      int v2 = *(unsigned __int8 *)(v0 + 58);
      if (v2 == 4 || v2 == 2)
      {
        swift_getKeyPath();
        swift_getKeyPath();
        *(unsigned char *)(v0 + 57) = 1;
        swift_retain();
        sub_1000C67F0();
        uint64_t v3 = (void *)swift_task_alloc();
        *(void *)(v0 + 184) = v3;
        *uint64_t v3 = v0;
        v3[1] = sub_10005BBBC;
        return sub_10006137C();
      }
      else
      {
LABEL_9:
        swift_release();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
        return v5();
      }
  }
}

uint64_t sub_10005B730()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10005B7C8;
  return static Task<>.sleep(nanoseconds:)(1000000000);
}

uint64_t sub_10005B7C8()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    swift_errorRelease();
    uint64_t v3 = *(void *)(v2 + 136);
    uint64_t v4 = *(void *)(v2 + 144);
    uint64_t v5 = sub_1000760D0;
  }
  else
  {
    uint64_t v3 = *(void *)(v2 + 136);
    uint64_t v4 = *(void *)(v2 + 144);
    uint64_t v5 = sub_10005B8EC;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_10005B8EC()
{
  uint64_t v1 = *(void *)(v0 + 168);
  if (v1 == 1)
  {
LABEL_10:
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
  else
  {
    if (v1 < 2)
    {
      __break(1u);
      JUMPOUT(0x10005BBA4);
    }
    *(void *)(v0 + 168) = v1 - 1;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1000C67E0();
    swift_release();
    swift_release();
    switch(*(unsigned char *)(v0 + 61))
    {
      case 1:
        return _swift_task_switch(sub_10005B730, 0, 0);
      case 3:
        goto LABEL_5;
      case 4:
      case 5:
        goto LABEL_10;
      default:
        swift_getKeyPath();
        swift_getKeyPath();
        *(unsigned char *)(v0 + 63) = 3;
        swift_retain();
        sub_1000C67F0();
LABEL_5:
        swift_getKeyPath();
        swift_getKeyPath();
        sub_1000C67E0();
        swift_release();
        swift_release();
        int v2 = *(unsigned __int8 *)(v0 + 58);
        if (v2 != 4 && v2 != 2) {
          goto LABEL_10;
        }
        swift_getKeyPath();
        swift_getKeyPath();
        *(unsigned char *)(v0 + 57) = 1;
        swift_retain();
        sub_1000C67F0();
        uint64_t v3 = (void *)swift_task_alloc();
        *(void *)(v0 + 184) = v3;
        *uint64_t v3 = v0;
        v3[1] = sub_10005BBBC;
        uint64_t result = sub_10006137C();
        break;
    }
  }
  return result;
}

uint64_t sub_10005BBBC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 192) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 144);
  uint64_t v4 = *(void *)(v2 + 136);
  if (v0) {
    uint64_t v5 = sub_10005C014;
  }
  else {
    uint64_t v5 = sub_10005BCF8;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10005BCF8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 62) = 4;
  swift_retain();
  sub_1000C67F0();
  uint64_t v1 = *(void *)(v0 + 168);
  if (v1 == 1)
  {
LABEL_10:
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
  else
  {
    if (v1 < 2)
    {
      __break(1u);
      JUMPOUT(0x10005BFFCLL);
    }
    *(void *)(v0 + 168) = v1 - 1;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1000C67E0();
    swift_release();
    swift_release();
    switch(*(unsigned char *)(v0 + 61))
    {
      case 1:
        return _swift_task_switch(sub_10005B730, 0, 0);
      case 3:
        goto LABEL_5;
      case 4:
      case 5:
        goto LABEL_10;
      default:
        swift_getKeyPath();
        swift_getKeyPath();
        *(unsigned char *)(v0 + 63) = 3;
        swift_retain();
        sub_1000C67F0();
LABEL_5:
        swift_getKeyPath();
        swift_getKeyPath();
        sub_1000C67E0();
        swift_release();
        swift_release();
        int v2 = *(unsigned __int8 *)(v0 + 58);
        if (v2 != 4 && v2 != 2) {
          goto LABEL_10;
        }
        swift_getKeyPath();
        swift_getKeyPath();
        *(unsigned char *)(v0 + 57) = 1;
        swift_retain();
        sub_1000C67F0();
        uint64_t v3 = (void *)swift_task_alloc();
        *(void *)(v0 + 184) = v3;
        *uint64_t v3 = v0;
        v3[1] = sub_10005BBBC;
        uint64_t result = sub_10006137C();
        break;
    }
  }
  return result;
}

uint64_t sub_10005C014()
{
  uint64_t v55 = v0;
  *(void *)(v0 + 72) = *(void *)(v0 + 192);
  swift_errorRetain();
  sub_100012854((uint64_t *)&unk_10010B010);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_16;
  }
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  *(void *)(v0 + 200) = v1;
  *(void *)(v0 + 208) = v2;
  uint64_t v4 = *(void **)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  *(void *)(v0 + 216) = v4;
  *(void *)(v0 + 224) = v3;
  uint64_t v5 = *(void *)(v0 + 48);
  *(void *)(v0 + 232) = v5;
  int v6 = *(unsigned __int8 *)(v0 + 56);
  if (v6 != 1)
  {
    sub_10002376C(v1, v2, v4, v3, v5, v6);
LABEL_16:
    swift_getKeyPath();
    swift_getKeyPath();
    *(unsigned char *)(v0 + 59) = 5;
    swift_retain();
    sub_1000C67F0();
    sub_1000C7440();
    id v31 = objc_allocWithZone((Class)NSError);
    NSString v32 = sub_1000C7400();
    swift_bridgeObjectRelease();
    id v33 = [v31 initWithDomain:v32 code:1 userInfo:0];

    sub_1000C66B0();
    uint64_t v34 = sub_1000C66C0();
    os_log_type_t v35 = sub_1000C7670();
    if (os_log_type_enabled(v34, v35))
    {
      BOOL v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)BOOL v36 = 0;
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "tryToCreateShareIfNeeded unexpected error, returning CKError.internalError as best approximation", v36, 2u);
      swift_slowDealloc();
    }
    uint64_t v38 = *(void *)(v0 + 104);
    uint64_t v37 = *(void *)(v0 + 112);
    uint64_t v39 = *(void *)(v0 + 96);

    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v39);
    id v40 = v33;
    sub_100067284(1u, v33);

    swift_errorRelease();
    uint64_t v41 = *(void *)(v0 + 168);
    if (v41 == 1)
    {
LABEL_27:
      swift_release();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v45 = *(uint64_t (**)(void))(v0 + 8);
      return v45();
    }
    if (v41 >= 2)
    {
      *(void *)(v0 + 168) = v41 - 1;
      swift_getKeyPath();
      swift_getKeyPath();
      sub_1000C67E0();
      swift_release();
      swift_release();
      switch(*(unsigned char *)(v0 + 61))
      {
        case 1:
          uint64_t v15 = sub_10005B730;
          goto LABEL_31;
        case 3:
          break;
        case 4:
        case 5:
          goto LABEL_27;
        default:
          swift_getKeyPath();
          swift_getKeyPath();
          *(unsigned char *)(v0 + 63) = 3;
          swift_retain();
          sub_1000C67F0();
          break;
      }
      swift_getKeyPath();
      swift_getKeyPath();
      sub_1000C67E0();
      swift_release();
      swift_release();
      int v42 = *(unsigned __int8 *)(v0 + 58);
      if (v42 == 4 || v42 == 2)
      {
        swift_getKeyPath();
        swift_getKeyPath();
        *(unsigned char *)(v0 + 57) = 1;
        swift_retain();
        sub_1000C67F0();
        uint64_t v43 = (void *)swift_task_alloc();
        *(void *)(v0 + 184) = v43;
        void *v43 = v0;
        v43[1] = sub_10005BBBC;
        return sub_10006137C();
      }
      goto LABEL_27;
    }
    __break(1u);
LABEL_35:
    __break(1u);
    JUMPOUT(0x10005C86CLL);
  }
  uint64_t v51 = v3;
  uint64_t v52 = v1;
  if (!v4) {
    goto LABEL_35;
  }
  swift_bridgeObjectRetain();
  id v7 = v4;
  uint64_t v53 = v2;
  swift_bridgeObjectRetain();
  id v8 = [v7 domain];
  uint64_t v9 = sub_1000C7440();
  uint64_t v11 = v10;

  if (v9 == sub_1000C7440() && v11 == v12)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v13 = sub_1000C7A50();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v13 & 1) == 0)
    {

      goto LABEL_12;
    }
  }
  id v14 = [v7 code];

  if (v14 != (id)7)
  {
LABEL_12:
    swift_getKeyPath();
    swift_getKeyPath();
    *(unsigned char *)(v0 + 60) = 5;
    swift_retain();
    sub_1000C67F0();
    sub_1000C66B0();
    id v16 = v7;
    uint64_t v17 = v2;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    id v18 = v16;
    char v19 = sub_1000C66C0();
    os_log_type_t type = sub_1000C7670();
    BOOL v20 = os_log_type_enabled(v19, type);
    uint64_t v21 = *(void *)(v0 + 120);
    uint64_t v22 = *(void *)(v0 + 96);
    uint64_t v23 = *(void *)(v0 + 104);
    if (v20)
    {
      os_log_t log = v19;
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      uint64_t v54 = swift_slowAlloc();
      buf = v24;
      *(_DWORD *)uint64_t v24 = 136315138;
      id v25 = v18;
      uint64_t v47 = v22;
      id v26 = [v25 description];
      uint64_t v27 = sub_1000C7440();
      id v49 = v18;
      unint64_t v29 = v28;

      *(void *)(v0 + 64) = sub_1000720D0(v27, v29, &v54);
      sub_1000C7850();
      id v18 = v49;
      uint64_t v17 = v53;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();

      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, log, type, "tryToCreateShareIfNeeded not-in-iCloud error after retries: %s", buf, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v47);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      swift_bridgeObjectRelease_n();
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
    }
    id v30 = v18;
    sub_100067284(1u, v4);
    sub_10002376C(v52, v17, v4, v51, v5, 1u);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  uint64_t v15 = sub_10005C884;
LABEL_31:
  return _swift_task_switch(v15, 0, 0);
}

uint64_t sub_10005C884()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 240) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10005C91C;
  return static Task<>.sleep(nanoseconds:)(1000000000);
}

uint64_t sub_10005C91C()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    swift_errorRelease();
    uint64_t v3 = *(void *)(v2 + 136);
    uint64_t v4 = *(void *)(v2 + 144);
    uint64_t v5 = sub_1000760F8;
  }
  else
  {
    uint64_t v3 = *(void *)(v2 + 136);
    uint64_t v4 = *(void *)(v2 + 144);
    uint64_t v5 = sub_10005CA40;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_10005CA40()
{
  uint64_t v1 = *(void *)(v0 + 224);
  uint64_t v2 = *(void *)(v0 + 232);
  uint64_t v4 = *(void *)(v0 + 208);
  uint64_t v3 = *(void **)(v0 + 216);
  uint64_t v5 = *(void *)(v0 + 200);
  swift_errorRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_10002376C(v5, v4, v3, v1, v2, 1u);
  uint64_t v6 = *(void *)(v0 + 168);
  if (v6 == 1)
  {
LABEL_10:
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10();
  }
  else
  {
    if (v6 < 2)
    {
      __break(1u);
      JUMPOUT(0x10005CD38);
    }
    *(void *)(v0 + 168) = v6 - 1;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1000C67E0();
    swift_release();
    swift_release();
    switch(*(unsigned char *)(v0 + 61))
    {
      case 1:
        return _swift_task_switch(sub_10005B730, 0, 0);
      case 3:
        goto LABEL_5;
      case 4:
      case 5:
        goto LABEL_10;
      default:
        swift_getKeyPath();
        swift_getKeyPath();
        *(unsigned char *)(v0 + 63) = 3;
        swift_retain();
        sub_1000C67F0();
LABEL_5:
        swift_getKeyPath();
        swift_getKeyPath();
        sub_1000C67E0();
        swift_release();
        swift_release();
        int v7 = *(unsigned __int8 *)(v0 + 58);
        if (v7 != 4 && v7 != 2) {
          goto LABEL_10;
        }
        swift_getKeyPath();
        swift_getKeyPath();
        *(unsigned char *)(v0 + 57) = 1;
        swift_retain();
        sub_1000C67F0();
        id v8 = (void *)swift_task_alloc();
        *(void *)(v0 + 184) = v8;
        *id v8 = v0;
        v8[1] = sub_10005BBBC;
        uint64_t result = sub_10006137C();
        break;
    }
  }
  return result;
}

uint64_t sub_10005CD50(unsigned __int8 a1)
{
  int v1 = a1;
  uint64_t v2 = sub_100012854(&qword_10010B770);
  uint64_t result = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v1 == 4)
  {
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (result)
    {
      uint64_t v6 = result;
      swift_getKeyPath();
      swift_getKeyPath();
      sub_1000C67E0();
      swift_release();
      swift_release();
      if (HIBYTE(v13) == 1)
      {
        sub_1000C75E0();
        uint64_t v7 = sub_1000C7600();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 0, 1, v7);
        sub_1000C75D0();
        swift_retain();
        uint64_t v8 = sub_1000C75C0();
        uint64_t v9 = (void *)swift_allocObject();
        v9[2] = v8;
        v9[3] = &protocol witness table for MainActor;
        v9[4] = v6;
        uint64_t v10 = &unk_10010D300;
      }
      else
      {
        swift_getKeyPath();
        swift_getKeyPath();
        sub_1000C67E0();
        swift_release();
        swift_release();
        if (HIBYTE(v13) != 3) {
          return swift_release();
        }
        swift_getKeyPath();
        swift_getKeyPath();
        sub_1000C67E0();
        swift_release();
        swift_release();
        if (HIBYTE(v13) - 6 > 0xFFFFFFFB || (v13 & 0x100000000000000) != 0) {
          return swift_release();
        }
        sub_1000C75E0();
        uint64_t v11 = sub_1000C7600();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v5, 0, 1, v11);
        sub_1000C75D0();
        swift_retain();
        uint64_t v12 = sub_1000C75C0();
        uint64_t v9 = (void *)swift_allocObject();
        v9[2] = v12;
        v9[3] = &protocol witness table for MainActor;
        v9[4] = v6;
        uint64_t v10 = &unk_10010D2F0;
      }
      sub_1000BD2A0((uint64_t)v5, (uint64_t)v10, (uint64_t)v9);
      swift_release();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_10005D04C()
{
  return sub_10001AEE4();
}

uint64_t sub_10005D060()
{
  v0[2] = sub_1000C75D0();
  v0[3] = sub_1000C75C0();
  int v1 = (void *)swift_task_alloc();
  v0[4] = v1;
  *int v1 = v0;
  v1[1] = sub_10005D110;
  return sub_10005D24C(1);
}

uint64_t sub_10005D110()
{
  swift_task_dealloc();
  uint64_t v1 = sub_1000C7590();
  return _swift_task_switch(sub_100076100, v1, v0);
}

uint64_t sub_10005D24C(char a1)
{
  *(void *)(v2 + 96) = v1;
  *(unsigned char *)(v2 + 162) = a1;
  *(void *)(v2 + 104) = sub_1000C75D0();
  *(void *)(v2 + 112) = sub_1000C75C0();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 120) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_10005D304;
  return sub_10005B348(300);
}

uint64_t sub_10005D304()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v3 = sub_1000C7590();
  *(void *)(v1 + 128) = v3;
  *(void *)(v1 + 136) = v2;
  return _swift_task_switch(sub_10005D448, v3, v2);
}

uint64_t sub_10005D448()
{
  if ((*(unsigned char *)(v0 + 162) & 1) == 0)
  {
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    *(unsigned char *)(v0 + 59) = 3;
    swift_retain();
LABEL_7:
    sub_1000C67F0();
    goto LABEL_8;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  if (*(unsigned char *)(v0 + 63) != 4)
  {
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    *(unsigned char *)(v0 + 60) = 1;
    swift_retain();
    goto LABEL_7;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  if (*(unsigned char *)(v0 + 58) == 2)
  {
    swift_release();
LABEL_8:
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 57) = 1;
  swift_retain();
  sub_1000C67F0();
  swift_retain();
  char v3 = sub_10001B0D4();
  swift_release();
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v4;
  void *v4 = v0;
  v4[1] = sub_10005D6F0;
  return sub_1000630B8(v3 & 1);
}

uint64_t sub_10005D6F0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 152) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 136);
  uint64_t v4 = *(void *)(v2 + 128);
  if (v0) {
    uint64_t v5 = sub_10005D8E0;
  }
  else {
    uint64_t v5 = sub_10005D82C;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10005D82C()
{
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 161) = 2;
  swift_retain();
  sub_1000C67F0();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10005D8E0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + 152);
  swift_release();
  *(void *)(v0 + 88) = v2;
  uint64_t v3 = v0 + 88;
  swift_errorRetain();
  sub_100012854((uint64_t *)&unk_10010B010);
  if (swift_dynamicCast())
  {
    swift_errorRelease();
    uint64_t v4 = *(void *)(v0 + 24);
    uint64_t v23 = *(void *)(v0 + 16);
    uint64_t v6 = *(void **)(v0 + 32);
    uint64_t v5 = *(void *)(v0 + 40);
    uint64_t v7 = *(void *)(v0 + 48);
    int v8 = *(unsigned __int8 *)(v0 + 56);
    swift_getKeyPath();
    swift_getKeyPath();
    *(unsigned char *)(v0 + 160) = 4;
    swift_retain();
    uint64_t result = sub_1000C67F0();
    if (v8 == 10)
    {
      if (!v6)
      {
        __break(1u);
        return result;
      }
      swift_bridgeObjectRetain();
      id v10 = v6;
      swift_bridgeObjectRetain();
      sub_100067284(1u, v6);
      sub_10002376C(v23, v4, v6, v5, v7, 0xAu);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1000C7440();
      id v18 = objc_allocWithZone((Class)NSError);
      NSString v19 = sub_1000C7400();
      swift_bridgeObjectRelease();
      id v20 = [v18 initWithDomain:v19 code:46 userInfo:0];

      sub_100067284(2u, v20);
      sub_10002376C(v23, v4, v6, v5, v7, v8);
    }
  }
  else
  {
    uint64_t v11 = (void **)(v0 + 80);
    uint64_t v12 = *(void *)(v0 + 152);
    swift_errorRelease();
    *(void *)(v1 + 64) = v12;
    swift_errorRetain();
    type metadata accessor for CKError(0);
    if (swift_dynamicCast())
    {
      swift_errorRelease();
      uint64_t v13 = *v11;
      swift_getKeyPath();
      swift_getKeyPath();
      *(unsigned char *)(v3 - 26) = 4;
      swift_retain();
      sub_1000C67F0();
      sub_1000C7440();
      *(void *)(v3 - 16) = v13;
      sub_100074448(&qword_10010D2E0, type metadata accessor for CKError);
      uint64_t v14 = sub_1000C6470();
      id v15 = objc_allocWithZone((Class)NSError);
      NSString v16 = sub_1000C7400();
      swift_bridgeObjectRelease();
      id v17 = [v15 initWithDomain:v16 code:v14 userInfo:0];

      sub_100067284(1u, v17);
    }
    else
    {
      swift_errorRelease();
      swift_getKeyPath();
      swift_getKeyPath();
      *(unsigned char *)(v3 - 27) = 4;
      swift_retain();
      sub_1000C67F0();
      uint64_t v21 = (void *)sub_1000C6480();
      sub_100067284(2u, v21);
    }
  }
  swift_errorRelease();
  uint64_t v22 = *(uint64_t (**)(void))(v1 + 8);
  return v22();
}

uint64_t sub_10005DD18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  sub_1000C75D0();
  v4[3] = sub_1000C75C0();
  uint64_t v6 = sub_1000C7590();
  v4[4] = v6;
  v4[5] = v5;
  return _swift_task_switch(sub_10005DDB0, v6, v5);
}

uint64_t sub_10005DDB0()
{
  uint64_t v1 = (uint64_t *)(v0[2] + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel_lastServicesData);
  uint64_t v2 = *v1;
  v0[6] = *v1;
  uint64_t v3 = v1[1];
  swift_unknownObjectRetain();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[7] = v4;
  void *v4 = v0;
  v4[1] = sub_10005DE7C;
  return sub_10005DFC0(0, v2, v3);
}

uint64_t sub_10005DE7C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  uint64_t v2 = *(void *)(v1 + 40);
  uint64_t v3 = *(void *)(v1 + 32);
  return _swift_task_switch(sub_10003E6AC, v3, v2);
}

uint64_t sub_10005DFC0(char a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v4 + 80) = a3;
  *(void *)(v4 + 88) = v3;
  *(void *)(v4 + 72) = a2;
  *(unsigned char *)(v4 + 145) = a1;
  sub_1000C75D0();
  *(void *)(v4 + 96) = sub_1000C75C0();
  uint64_t v6 = sub_1000C7590();
  *(void *)(v4 + 104) = v6;
  *(void *)(v4 + 112) = v5;
  return _swift_task_switch(sub_10005E060, v6, v5);
}

uint64_t sub_10005E060()
{
  *(_OWORD *)(*(void *)(v0 + 88)
            + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel_lastServicesData) = *(_OWORD *)(v0 + 72);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10005E120;
  char v2 = *(unsigned char *)(v0 + 145);
  return sub_10005D24C(v2);
}

uint64_t sub_10005E120()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 112);
  uint64_t v3 = *(void *)(v1 + 104);
  return _swift_task_switch(sub_10005E240, v3, v2);
}

uint64_t sub_10005E240()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  if (*(unsigned char *)(v0 + 62) != 4) {
    goto LABEL_6;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  if (*(unsigned char *)(v0 + 57) != 3)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1000C67E0();
    swift_release();
    swift_release();
    if (*(unsigned char *)(v0 + 58) != 2)
    {
LABEL_6:
      char v1 = *(unsigned char *)(v0 + 145);
      swift_release();
      swift_getKeyPath();
      swift_getKeyPath();
      *(unsigned char *)(v0 + 61) = v1;
      swift_retain();
      sub_1000C67F0();
      goto LABEL_7;
    }
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  if (*(unsigned char *)(v0 + 59) == 3)
  {
    swift_release();
LABEL_7:
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
  char v4 = *(unsigned char *)(v0 + 145);
  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 60) = v4;
  swift_retain();
  sub_1000C67F0();
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_10005E520;
  return sub_100067C24();
}

uint64_t sub_10005E520()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 136) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 112);
  uint64_t v4 = *(void *)(v2 + 104);
  if (v0) {
    uint64_t v5 = sub_10005E70C;
  }
  else {
    uint64_t v5 = sub_10005E65C;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10005E65C()
{
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 144) = 3;
  swift_retain();
  sub_1000C67F0();
  char v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10005E70C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + 136);
  swift_release();
  *(void *)(v0 + 64) = v2;
  swift_errorRetain();
  sub_100012854((uint64_t *)&unk_10010B010);
  if (swift_dynamicCast())
  {
    swift_errorRelease();
    uint64_t v3 = *(void *)(v0 + 24);
    uint64_t v15 = *(void *)(v0 + 16);
    uint64_t v5 = *(void **)(v0 + 32);
    uint64_t v4 = *(void *)(v0 + 40);
    uint64_t v6 = *(void *)(v0 + 48);
    int v7 = *(unsigned __int8 *)(v0 + 56);
    swift_getKeyPath();
    swift_getKeyPath();
    *(unsigned char *)(v0 + 63) = 5;
    swift_retain();
    uint64_t result = sub_1000C67F0();
    if (v7 == 4)
    {
      if (!v5)
      {
        __break(1u);
        return result;
      }
      swift_bridgeObjectRetain();
      id v9 = v5;
      swift_bridgeObjectRetain();
      sub_100067284(5u, v5);
      sub_10002376C(v15, v3, v5, v4, v6, 4u);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1000C7440();
      id v11 = objc_allocWithZone((Class)NSError);
      NSString v12 = sub_1000C7400();
      swift_bridgeObjectRelease();
      id v13 = [v11 initWithDomain:v12 code:46 userInfo:0];

      sub_100067284(2u, v13);
      sub_10002376C(v15, v3, v5, v4, v6, v7);
    }
  }
  else
  {
    swift_errorRelease();
    id v10 = (void *)sub_1000C6480();
    sub_100067284(2u, v10);
  }
  swift_errorRelease();
  uint64_t v14 = *(uint64_t (**)(void))(v1 + 8);
  return v14();
}

uint64_t sub_10005E988(unsigned __int8 a1)
{
  int v1 = a1;
  uint64_t v2 = sub_100012854(&qword_10010B770);
  uint64_t result = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v1 == 2)
  {
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (result)
    {
      uint64_t v6 = result;
      swift_getKeyPath();
      swift_getKeyPath();
      sub_1000C67E0();
      swift_release();
      swift_release();
      if (HIBYTE(v11) - 2 >= 4)
      {
        char v7 = HIBYTE(v11) & 1;
        sub_1000C75E0();
        uint64_t v8 = sub_1000C7600();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v5, 0, 1, v8);
        sub_1000C75D0();
        swift_retain();
        uint64_t v9 = sub_1000C75C0();
        uint64_t v10 = swift_allocObject();
        *(void *)(v10 + 16) = v9;
        *(void *)(v10 + 24) = &protocol witness table for MainActor;
        *(void *)(v10 + 32) = v6;
        *(unsigned char *)(v10 + 40) = v7;
        sub_1000BD2A0((uint64_t)v5, (uint64_t)&unk_10010D2C0, v10);
        swift_release();
      }
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_10005EB44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(unsigned char *)(v5 + 64) = a5;
  *(void *)(v5 + 16) = a4;
  sub_1000C75D0();
  *(void *)(v5 + 24) = sub_1000C75C0();
  uint64_t v7 = sub_1000C7590();
  *(void *)(v5 + 32) = v7;
  *(void *)(v5 + 40) = v6;
  return _swift_task_switch(sub_10005EBE0, v7, v6);
}

uint64_t sub_10005EBE0()
{
  int v1 = (uint64_t *)(*(void *)(v0 + 16)
                 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel_lastServicesData);
  uint64_t v2 = *v1;
  *(void *)(v0 + 48) = *v1;
  uint64_t v3 = v1[1];
  swift_unknownObjectRetain();
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v4;
  void *v4 = v0;
  v4[1] = sub_10005DE7C;
  char v5 = *(unsigned char *)(v0 + 64);
  return sub_10005DFC0(v5, v2, v3);
}

uint64_t sub_10005ECB0(unsigned __int8 a1)
{
  int v1 = a1;
  uint64_t v2 = sub_100012854(&qword_10010B770);
  uint64_t result = __chkstk_darwin(v2 - 8);
  char v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v1 == 3)
  {
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (result)
    {
      uint64_t v6 = result;
      sub_1000C75E0();
      uint64_t v7 = sub_1000C7600();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 0, 1, v7);
      sub_1000C75D0();
      swift_retain();
      uint64_t v8 = sub_1000C75C0();
      uint64_t v9 = (void *)swift_allocObject();
      v9[2] = v8;
      v9[3] = &protocol witness table for MainActor;
      v9[4] = v6;
      sub_1000BD118((uint64_t)v5, (uint64_t)&unk_10010D2B0, (uint64_t)v9);
      swift_release();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_10005EE18(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6, double a7)
{
  *(double *)(v7 + 96) = a6;
  *(double *)(v7 + 104) = a7;
  *(void *)(v7 + 80) = a4;
  *(void *)(v7 + 88) = a5;
  *(unsigned char *)(v7 + 200) = a2;
  *(void *)(v7 + 64) = a1;
  *(void *)(v7 + 72) = a3;
  sub_100012854((uint64_t *)&unk_10010BDD0);
  *(void *)(v7 + 112) = swift_task_alloc();
  *(void *)(v7 + 120) = swift_task_alloc();
  uint64_t v8 = sub_1000C6530();
  *(void *)(v7 + 128) = v8;
  *(void *)(v7 + 136) = *(void *)(v8 - 8);
  *(void *)(v7 + 144) = swift_task_alloc();
  sub_1000C75D0();
  *(void *)(v7 + 152) = sub_1000C75C0();
  uint64_t v10 = sub_1000C7590();
  *(void *)(v7 + 160) = v10;
  *(void *)(v7 + 168) = v9;
  return _swift_task_switch(sub_10005EF58, v10, v9);
}

uint64_t sub_10005EF58()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 176) = Strong;
  if (!Strong)
  {
    swift_release();
    id v4 = [objc_allocWithZone((Class)UIImage) init];
LABEL_21:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v18 = *(uint64_t (**)(id))(v0 + 8);
    return v18(v4);
  }
  uint64_t v2 = *(void **)(v0 + 72);
  if (v2)
  {
    id v3 = v2;
    swift_release();
    id v4 = *(id *)(v0 + 72);
    goto LABEL_11;
  }
  if (*(unsigned char *)(v0 + 200) == 1)
  {
    swift_release();
    NSString v5 = sub_1000C7400();
    id v4 = [self imageNamed:v5];

    goto LABEL_11;
  }
  uint64_t v6 = *(void **)(v0 + 80);
  if (v6)
  {
    id v7 = v6;
    swift_release();
    id v4 = *(id *)(v0 + 80);
    goto LABEL_11;
  }
  uint64_t v8 = Strong;
  uint64_t v9 = *(void *)(v0 + 128);
  uint64_t v10 = *(void *)(v0 + 136);
  uint64_t v11 = *(void *)(v0 + 120);
  sub_10001A740(*(void *)(v0 + 64), v11, (uint64_t *)&unk_10010BDD0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v11, 1, v9) == 1)
  {
    uint64_t v12 = *(void *)(v0 + 120);
    swift_release();
    sub_10001326C(v12, (uint64_t *)&unk_10010BDD0);
    id v4 = 0;
    goto LABEL_11;
  }
  (*(void (**)(void, void, void))(*(void *)(v0 + 136) + 32))(*(void *)(v0 + 144), *(void *)(v0 + 120), *(void *)(v0 + 128));
  uint64_t v20 = *(void *)(v8 + 56);
  char v21 = *(unsigned char *)(v8 + 64);
  sub_100075180(v20, v21);
  double v22 = sub_1000609AC(v20, v21);
  sub_100074378(v20, v21);
  uint64_t v23 = swift_unknownObjectWeakLoadStrong();
  if (v23)
  {
    uint64_t v24 = *(void *)(v23 + OBJC_IVAR___CloudSharingViewController_itemUTI + 8);
    if (v24)
    {
      uint64_t v25 = *(void *)(v0 + 136);
      uint64_t v26 = *(void *)(v0 + 128);
      uint64_t v27 = *(void *)(v0 + 112);
      uint64_t v28 = *(void *)(v23 + OBJC_IVAR___CloudSharingViewController_itemUTI);
      (*(void (**)(uint64_t, void, uint64_t))(v25 + 16))(v27, *(void *)(v0 + 144), v26);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v25 + 56))(v27, 0, 1, v26);
      swift_bridgeObjectRetain();
      LOBYTE(v26) = sub_10009DD3C(v28, v24, v27);
      swift_bridgeObjectRelease();
      sub_10001326C(v27, (uint64_t *)&unk_10010BDD0);
      if (sub_10009C964(v26) == 0x7265646C6F66 && v29 == 0xE600000000000000)
      {
        swift_bridgeObjectRelease();
        goto LABEL_31;
      }
      char v30 = sub_1000C7A50();
      swift_bridgeObjectRelease();
      if (v30)
      {
LABEL_31:
        NSString v31 = sub_1000C7400();
        id v4 = [self imageNamed:v31];

        swift_unknownObjectRelease();
        if (v4)
        {
          (*(void (**)(void, void))(*(void *)(v0 + 136) + 8))(*(void *)(v0 + 144), *(void *)(v0 + 128));
          swift_release();
LABEL_11:
          sub_1000132C8(0, &qword_10010B6D0);
          swift_getKeyPath();
          swift_getKeyPath();
          sub_1000C67E0();
          swift_release();
          swift_release();
          id v13 = *(void **)(v0 + 40);
          if (qword_10010ACD8 != -1) {
            swift_once();
          }
          char v14 = sub_1000C7800();

          if (v14)
          {
            if (v4) {
              goto LABEL_20;
            }
          }
          else
          {
            swift_getKeyPath();
            swift_getKeyPath();
            sub_1000C67E0();
            swift_release();
            swift_release();
            uint64_t v15 = *(void **)(v0 + 48);
            id v16 = [objc_allocWithZone((Class)UIImage) init];
            char v17 = sub_1000C7800();

            if (v4) {
              goto LABEL_20;
            }
            if ((v17 & 1) == 0)
            {
              swift_getKeyPath();
              swift_getKeyPath();
              sub_1000C67E0();
              swift_release();
              swift_release();
              swift_release();
              id v4 = *(id *)(v0 + 56);
              goto LABEL_21;
            }
          }
          id v4 = (id)qword_10010C9B0;
LABEL_20:
          swift_release();
          goto LABEL_21;
        }
        goto LABEL_34;
      }
    }
    swift_unknownObjectRelease();
  }
LABEL_34:
  NSString v32 = (void *)swift_task_alloc();
  *(void *)(v0 + 184) = v32;
  *NSString v32 = v0;
  v32[1] = sub_10005F56C;
  uint64_t v33 = *(void *)(v0 + 144);
  double v34 = *(double *)(v0 + 96);
  double v35 = *(double *)(v0 + 104);
  return sub_10007518C(v33, v34, v35, v22);
}

uint64_t sub_10005F56C(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 192) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 168);
  uint64_t v4 = *(void *)(v2 + 160);
  return _swift_task_switch(sub_10005F694, v4, v3);
}

uint64_t sub_10005F694()
{
  uint64_t v1 = v0[18];
  uint64_t v2 = v0[16];
  uint64_t v3 = v0[17];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  id v4 = (id)v0[24];
  sub_1000132C8(0, &qword_10010B6D0);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  NSString v5 = (void *)v0[5];
  if (qword_10010ACD8 != -1) {
    swift_once();
  }
  char v6 = sub_1000C7800();

  if (v6)
  {
    if (v4) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  id v7 = (void *)v0[6];
  id v8 = [objc_allocWithZone((Class)UIImage) init];
  char v9 = sub_1000C7800();

  if (v4) {
    goto LABEL_10;
  }
  if (v9)
  {
LABEL_9:
    id v4 = (id)qword_10010C9B0;
LABEL_10:
    swift_release();
    goto LABEL_11;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  id v4 = (id)v0[7];
LABEL_11:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(id))v0[1];
  return v10(v4);
}

uint64_t sub_10005F914(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)(v3 + 16) = a1;
  char v6 = (int *)sub_100012854(&qword_10010D280);
  uint64_t v7 = *(unsigned __int8 *)(a2 + v6[12]);
  uint64_t v8 = *(void *)(a2 + v6[16]);
  uint64_t v9 = *(void *)(a2 + v6[20]);
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)a3 + *a3);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v10;
  *uint64_t v10 = v3;
  v10[1] = sub_10005FA34;
  return v12(a2, v7, v8, v9);
}

uint64_t sub_10005FA34(uint64_t a1)
{
  uint64_t v3 = *(void **)(*v1 + 16);
  uint64_t v6 = *v1;
  swift_task_dealloc();
  *uint64_t v3 = a1;
  id v4 = *(uint64_t (**)(void))(v6 + 8);
  return v4();
}

void sub_10005FB44(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v3 = (void *)a1[1];
  if (v3)
  {
    id v5 = [v3 containerOptions];
    unsigned int v6 = [v5 prefersHiddenAllowedSharingOptionsUI];

    if (v6) {
      uint64_t v4 = 0;
    }
  }
  *a2 = v4;
}

uint64_t sub_10005FBAC(char *a1)
{
  uint64_t v2 = sub_100012854(&qword_10010B770);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_100012854((uint64_t *)&unk_10010BDD0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  char v8 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1000C67E0();
    swift_release();
    swift_release();
    uint64_t v10 = sub_1000C6530();
    int v11 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v7, 1, v10);
    sub_10001326C((uint64_t)v7, (uint64_t *)&unk_10010BDD0);
    if (v11 == 1)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      sub_1000C67E0();
      swift_release();
      swift_release();
      BOOL v12 = (v18 & 0xFE) != 8;
      if (v8) {
        return swift_release();
      }
    }
    else
    {
      if (v8) {
        return swift_release();
      }
      BOOL v12 = 1;
    }
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1000C67E0();
    swift_release();
    swift_release();
    if (v18 == 2 && v12)
    {
      uint64_t v13 = sub_1000C7600();
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v4, 1, 1, v13);
      uint64_t v14 = swift_allocObject();
      swift_weakInit();
      sub_1000C75D0();
      swift_retain();
      uint64_t v15 = sub_1000C75C0();
      id v16 = (void *)swift_allocObject();
      v16[2] = v15;
      v16[3] = &protocol witness table for MainActor;
      void v16[4] = v14;
      swift_release();
      sub_1000BD2A0((uint64_t)v4, (uint64_t)&unk_10010D270, (uint64_t)v16);
      swift_release();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_10005FED4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[7] = a4;
  uint64_t v5 = sub_1000C66D0();
  v4[8] = v5;
  v4[9] = *(void *)(v5 - 8);
  v4[10] = swift_task_alloc();
  v4[11] = swift_task_alloc();
  v4[12] = sub_1000C75D0();
  v4[13] = sub_1000C75C0();
  uint64_t v7 = sub_1000C7590();
  v4[14] = v7;
  v4[15] = v6;
  return _swift_task_switch(sub_10005FFDC, v7, v6);
}

uint64_t sub_10005FFDC()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  v0[16] = Strong;
  if (Strong)
  {
    uint64_t v2 = swift_unknownObjectWeakLoadStrong();
    v0[17] = v2;
    if (v2)
    {
      sub_1000C66B0();
      uint64_t v3 = sub_1000C66C0();
      os_log_type_t v4 = sub_1000C7690();
      if (os_log_type_enabled(v3, v4))
      {
        uint64_t v5 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v5 = 0;
        _os_log_impl((void *)&_mh_execute_header, v3, v4, "Refetching share due to network change.", v5, 2u);
        swift_slowDealloc();
      }
      uint64_t v6 = v0[11];
      uint64_t v7 = v0[8];
      uint64_t v8 = v0[9];

      uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
      v0[18] = v9;
      v0[19] = (v8 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      v9(v6, v7);
      v0[20] = sub_1000C75C0();
      uint64_t v10 = (void *)swift_task_alloc();
      v0[21] = v10;
      *uint64_t v10 = v0;
      v10[1] = sub_1000601C8;
      return sub_100064590();
    }
    swift_release();
  }
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  BOOL v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_1000601C8()
{
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  uint64_t v3 = sub_1000C7590();
  if (v0) {
    os_log_type_t v4 = sub_10006040C;
  }
  else {
    os_log_type_t v4 = sub_100060324;
  }
  return _swift_task_switch(v4, v3, v2);
}

uint64_t sub_100060324()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 120);
  return _swift_task_switch(sub_100060388, v1, v2);
}

uint64_t sub_100060388()
{
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10006040C()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 120);
  return _swift_task_switch(sub_100060470, v1, v2);
}

uint64_t sub_100060470()
{
  char v17 = v0;
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  sub_1000C66B0();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = sub_1000C66C0();
  os_log_type_t v2 = sub_1000C7670();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[22];
    uint64_t v15 = (void (*)(uint64_t, uint64_t))v0[18];
    uint64_t v14 = v0[10];
    uint64_t v4 = v0[8];
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    uint64_t v16 = v6;
    v0[5] = v3;
    swift_errorRetain();
    sub_100012854((uint64_t *)&unk_10010B010);
    uint64_t v7 = sub_1000C7450();
    v0[6] = sub_1000720D0(v7, v8, &v16);
    sub_1000C7850();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Failed to refetch share for network change %s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    v15(v14, v4);
  }
  else
  {
    uint64_t v9 = (void (*)(uint64_t, uint64_t))v0[18];
    uint64_t v10 = v0[10];
    uint64_t v11 = v0[8];
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();

    v9(v10, v11);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  BOOL v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_1000606CC@<X0>(uint64_t a1@<X8>)
{
  return sub_100060724(&qword_10010B7B0, (uint64_t *)&unk_10010D410, 0xD000000000000019, 0x80000001000D7F10, a1);
}

uint64_t sub_1000606F8@<X0>(uint64_t a1@<X8>)
{
  return sub_100060724(&qword_10010C7B0, (uint64_t *)&unk_10010D3A0, 0xD000000000000020, 0x80000001000D7580, a1);
}

uint64_t sub_100060724@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v26 = a3;
  uint64_t v9 = v5;
  uint64_t v11 = sub_1000C6CD0();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100012854(a1);
  __chkstk_darwin(v15);
  char v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001A740(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload() == 1) {
    return sub_100012898((uint64_t)v17, a5, a2);
  }
  os_log_type_t v19 = sub_1000C7680();
  uint64_t v20 = sub_1000C6E90();
  if (os_log_type_enabled(v20, v19))
  {
    unint64_t v24 = a4;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v25 = a5;
    double v22 = (uint8_t *)v21;
    uint64_t v28 = swift_slowAlloc();
    *(_DWORD *)double v22 = 136315138;
    uint64_t v27 = sub_1000720D0(v26, v24, &v28);
    sub_1000C7850();
    _os_log_impl((void *)&_mh_execute_header, v20, v19, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v22, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_1000C6CC0();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

double sub_1000609AC(uint64_t a1, char a2)
{
  uint64_t v4 = sub_1000C6CD0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2) {
    return *(double *)&a1;
  }
  swift_retain();
  os_log_type_t v8 = sub_1000C7680();
  uint64_t v9 = sub_1000C6E90();
  os_log_type_t v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v13 = sub_1000720D0(0x74616F6C464743, 0xE700000000000000, &v14);
    sub_1000C7850();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_1000C6CC0();
  swift_getAtKeyPath();
  sub_100074378(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return *(double *)&v14;
}

uint64_t sub_100060BBC()
{
  return sub_10001AEE4();
}

uint64_t sub_100060BD0@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_100060BE4()
{
  return sub_1000114AC();
}

uint64_t sub_100060BF8()
{
  return sub_10001AEE4();
}

uint64_t sub_100060C0C()
{
  return sub_100024420();
}

uint64_t sub_100060C20@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_100060C34()
{
  return sub_1000114AC();
}

uint64_t sub_100060C48@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_100060C5C()
{
  return sub_1000114AC();
}

uint64_t sub_100060C70()
{
  return sub_100060C84();
}

uint64_t sub_100060C84()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();

  return swift_release();
}

uint64_t sub_100060CF4()
{
  return sub_10001AEE4();
}

uint64_t sub_100060D08()
{
  return sub_10001AEE4();
}

uint64_t sub_100060D1C()
{
  return sub_10001AEE4();
}

uint64_t sub_100060D30()
{
  return sub_10001AEE4();
}

uint64_t sub_100060D44()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_100060DBC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000C6530();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100012854((uint64_t *)&unk_10010BDD0);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v17 - v12;
  uint64_t v14 = OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel_shouldStopAccessingSharedFileOrFolderURL;
  if (*(unsigned char *)(v2
                + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel_shouldStopAccessingSharedFileOrFolderURL) == 1)
  {
    sub_10001A740(a1, (uint64_t)&v17 - v12, (uint64_t *)&unk_10010BDD0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v13, 1, v4) == 1)
    {
      sub_10001326C((uint64_t)v13, (uint64_t *)&unk_10010BDD0);
    }
    else
    {
      sub_1000C64E0();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v4);
    }
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v11, 1, v4))
  {
    uint64_t result = sub_10001326C((uint64_t)v11, (uint64_t *)&unk_10010BDD0);
    BOOL v16 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v11, v4);
    sub_10001326C((uint64_t)v11, (uint64_t *)&unk_10010BDD0);
    BOOL v16 = sub_1000C6500();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  *(unsigned char *)(v2 + v14) = v16;
  return result;
}

uint64_t sub_100061040()
{
  return sub_100024704();
}

double sub_100061054@<D0>(_OWORD *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_1000610D4()
{
  return sub_1000C67F0();
}

uint64_t sub_100061158@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1000611D8(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = v1;
  swift_retain();
  return sub_1000C67F0();
}

uint64_t sub_100061250()
{
  return sub_100024420();
}

uint64_t sub_100061264()
{
  return sub_100024420();
}

uint64_t sub_100061278@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_1000612F8()
{
  return sub_1000C67F0();
}

uint64_t sub_10006137C()
{
  v1[5] = v0;
  sub_100012854((uint64_t *)&unk_10010BDD0);
  v1[6] = swift_task_alloc();
  v1[7] = swift_task_alloc();
  v1[8] = swift_task_alloc();
  uint64_t v2 = sub_1000C6530();
  v1[9] = v2;
  v1[10] = *(void *)(v2 - 8);
  v1[11] = swift_task_alloc();
  uint64_t v3 = sub_1000C66D0();
  v1[12] = v3;
  v1[13] = *(void *)(v3 - 8);
  v1[14] = swift_task_alloc();
  sub_1000C75D0();
  v1[15] = sub_1000C75C0();
  uint64_t v4 = sub_1000C7590();
  v1[16] = v4;
  v1[17] = v5;
  return _swift_task_switch(sub_10006154C, v4, v5);
}

uint64_t sub_10006154C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 173) = 1;
  swift_retain();
  sub_1000C67F0();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  if ((*(unsigned char *)(v0 + 169) & 0xFE) == 8)
  {
    uint64_t v1 = *(void *)(v0 + 72);
    uint64_t v2 = *(void *)(v0 + 80);
    uint64_t v3 = *(void *)(v0 + 64);
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1000C67E0();
    swift_release();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
    {
      sub_10001326C(*(void *)(v0 + 64), (uint64_t *)&unk_10010BDD0);
      sub_100012A24();
      swift_allocError();
      *(void *)uint64_t v4 = 0xD000000000000016;
      *(void *)(v4 + 8) = 0x80000001000D7130;
      *(void *)(v4 + 24) = 0;
      *(void *)(v4 + 32) = 0;
      *(void *)(v4 + 16) = 0;
      *(unsigned char *)(v4 + 40) = 0;
      swift_willThrow();
      swift_getKeyPath();
      swift_getKeyPath();
      *(unsigned char *)(v0 + 168) = 0;
LABEL_4:
      swift_retain();
      sub_1000C67F0();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
LABEL_25:
      return v5();
    }
    (*(void (**)(void, void, void))(*(void *)(v0 + 80) + 32))(*(void *)(v0 + 88), *(void *)(v0 + 64), *(void *)(v0 + 72));
    sub_1000C64C0(v16);
    uint64_t v18 = v17;
    *(void *)(v0 + 32) = 0;
    id v19 = (id)BRSharingCreateShareForItemAtURL();

    if (v19)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      id v20 = v19;
      swift_retain();
      sub_1000C67E0();
      swift_release();
      swift_release();
      int v21 = *(unsigned __int8 *)(v0 + 172);
      swift_release();
      if (v21 == 1)
      {
        swift_getKeyPath();
        swift_getKeyPath();
        swift_retain();
        sub_1000C67E0();
        swift_release();
        swift_release();
        uint64_t v22 = 1;
        switch(*(unsigned char *)(v0 + 174))
        {
          case 1:
            uint64_t v22 = 3;
            goto LABEL_22;
          case 2:
            uint64_t v22 = 2;
            goto LABEL_22;
          case 3:
            return sub_1000C7980();
          default:
LABEL_22:
            swift_release();
            break;
        }
      }
      else
      {
        uint64_t v22 = 1;
      }
      [v20 setPublicPermission:v22];
      swift_getKeyPath();
      swift_getKeyPath();
      *(void *)(v0 + 16) = v19;
      swift_retain();
      sub_1000C67F0();
    }
    else
    {
      uint64_t v23 = *(void **)(v0 + 32);
      if (v23)
      {
        uint64_t v25 = *(void *)(v0 + 80);
        uint64_t v24 = *(void *)(v0 + 88);
        uint64_t v26 = *(void *)(v0 + 72);
        sub_100012A24();
        swift_allocError();
        *(_OWORD *)uint64_t v27 = xmmword_1000CE5D0;
        *(void *)(v27 + 24) = 0;
        *(void *)(v27 + 32) = 0;
        *(void *)(v27 + 16) = v23;
        *(unsigned char *)(v27 + 40) = 1;
        id v28 = v23;
        swift_willThrow();

        (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
        swift_getKeyPath();
        swift_getKeyPath();
        *(unsigned char *)(v0 + 171) = 0;
        goto LABEL_4;
      }
      uint64_t v29 = *(void *)(v0 + 72);
      uint64_t v30 = *(void *)(v0 + 80);
      uint64_t v32 = *(void *)(v0 + 48);
      uint64_t v31 = *(void *)(v0 + 56);
      swift_getKeyPath();
      swift_getKeyPath();
      *(void *)(v0 + 24) = 0;
      swift_retain_n();
      sub_1000C67F0();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 56))(v31, 1, 1, v29);
      swift_getKeyPath();
      swift_getKeyPath();
      sub_10001A740(v31, v32, (uint64_t *)&unk_10010BDD0);
      swift_retain();
      sub_1000C67F0();
      sub_10001326C(v31, (uint64_t *)&unk_10010BDD0);
      swift_release();
    }
    (*(void (**)(void, void))(*(void *)(v0 + 80) + 8))(*(void *)(v0 + 88), *(void *)(v0 + 72));
    swift_getKeyPath();
    swift_getKeyPath();
    *(unsigned char *)(v0 + 170) = 0;
    swift_retain();
    sub_1000C67F0();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_25;
  }
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectRelease();
  if (!Strong)
  {
    sub_1000C66B0();
    uint64_t v7 = sub_1000C66C0();
    os_log_type_t v8 = sub_1000C7690();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "ext computed property--extensionController is nil--will assert", v9, 2u);
      swift_slowDealloc();
    }
    uint64_t v11 = *(void *)(v0 + 104);
    uint64_t v10 = *(void *)(v0 + 112);
    uint64_t v12 = *(void *)(v0 + 96);

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  }
  uint64_t v13 = swift_unknownObjectWeakLoadStrong();
  *(void *)(v0 + 144) = v13;
  if (!v13)
  {
    __break(1u);
    JUMPOUT(0x100061DC4);
  }
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v0 + 152) = v14;
  void *v14 = v0;
  v14[1] = sub_100061DD4;
  return sub_10000B740();
}

uint64_t sub_100061DD4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 160) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 136);
  uint64_t v4 = *(void *)(v2 + 128);
  if (v0) {
    uint64_t v5 = sub_100062064;
  }
  else {
    uint64_t v5 = sub_100061F3C;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100061F3C()
{
  swift_release();
  swift_unknownObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 176) = 0;
  swift_retain();
  sub_1000C67F0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100062064()
{
  swift_release();
  swift_unknownObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 175) = 0;
  swift_retain();
  sub_1000C67F0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10006218C(uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v4 + 256) = a2;
  *(void *)(v4 + 264) = v3;
  *(unsigned char *)(v4 + 368) = a3;
  *(void *)(v4 + 248) = a1;
  uint64_t v5 = sub_1000C66D0();
  *(void *)(v4 + 272) = v5;
  *(void *)(v4 + 280) = *(void *)(v5 - 8);
  *(void *)(v4 + 288) = swift_task_alloc();
  sub_1000C75D0();
  *(void *)(v4 + 296) = sub_1000C75C0();
  uint64_t v7 = sub_1000C7590();
  *(void *)(v4 + 304) = v7;
  *(void *)(v4 + 312) = v6;
  return _swift_task_switch(sub_100062288, v7, v6);
}

uint64_t sub_100062288()
{
  if (*(unsigned char *)(v0 + 368))
  {
    uint64_t v6 = sub_1000392E8();
    *(void *)(v0 + 328) = v6;
    uint64_t v7 = v6;
    NSString v8 = sub_1000C7400();
    *(void *)(v0 + 352) = v8;
    *(void *)(v0 + 80) = v0;
    *(void *)(v0 + 120) = v0 + 240;
    *(void *)(v0 + 88) = sub_100062870;
    uint64_t v9 = swift_continuation_init();
    *(void *)(v0 + 184) = _NSConcreteStackBlock;
    *(void *)(v0 + 192) = 0x40000000;
    *(void *)(v0 + 200) = sub_100060BB8;
    *(void *)(v0 + 208) = &unk_100100E30;
    *(void *)(v0 + 216) = v9;
    [v7 fetchShareParticipantWithPhoneNumber:v8 completionHandler:v0 + 184];
    uint64_t v5 = v0 + 80;
  }
  else
  {
    uint64_t v1 = sub_1000392E8();
    *(void *)(v0 + 320) = v1;
    uint64_t v2 = v1;
    NSString v3 = sub_1000C7400();
    *(void *)(v0 + 336) = v3;
    *(void *)(v0 + 16) = v0;
    *(void *)(v0 + 56) = v0 + 232;
    *(void *)(v0 + 24) = sub_1000626B4;
    uint64_t v4 = swift_continuation_init();
    *(void *)(v0 + 144) = _NSConcreteStackBlock;
    *(void *)(v0 + 152) = 0x40000000;
    *(void *)(v0 + 160) = sub_100060BB8;
    *(void *)(v0 + 168) = &unk_100100E48;
    *(void *)(v0 + 176) = v4;
    [v2 fetchShareParticipantWithEmailAddress:v3 completionHandler:v0 + 144];
    uint64_t v5 = v0 + 16;
  }
  return _swift_continuation_await(v5);
}

uint64_t sub_1000626B4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 344) = v2;
  uint64_t v3 = *(void *)(v1 + 312);
  uint64_t v4 = *(void *)(v1 + 304);
  if (v2) {
    uint64_t v5 = sub_100062A2C;
  }
  else {
    uint64_t v5 = sub_1000627E4;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1000627E4()
{
  uint64_t v1 = (void *)v0[42];
  uint64_t v2 = (void *)v0[40];
  swift_release();
  uint64_t v3 = v0[29];

  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(uint64_t))v0[1];
  return v4(v3);
}

uint64_t sub_100062870()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 112);
  *(void *)(*v0 + 360) = v2;
  uint64_t v3 = *(void *)(v1 + 312);
  uint64_t v4 = *(void *)(v1 + 304);
  if (v2) {
    uint64_t v5 = sub_100062C88;
  }
  else {
    uint64_t v5 = sub_1000629A0;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1000629A0()
{
  uint64_t v1 = (void *)v0[44];
  uint64_t v2 = (void *)v0[41];
  swift_release();
  uint64_t v3 = v0[30];

  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(uint64_t))v0[1];
  return v4(v3);
}

uint64_t sub_100062A2C()
{
  uint64_t v1 = (void *)v0[42];
  uint64_t v2 = (void *)v0[40];
  swift_release();
  swift_willThrow();

  sub_1000C66B0();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v3 = sub_1000C66C0();
  os_log_type_t v4 = sub_1000C7670();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 138412290;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    v0[28] = v7;
    sub_1000C7850();
    void *v6 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "participant(withAddress) got CK error: %@", v5, 0xCu);
    sub_100012854((uint64_t *)&unk_10010B1E0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v9 = v0[35];
  uint64_t v8 = v0[36];
  uint64_t v10 = v0[34];

  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  uint64_t v11 = sub_1000C6480();
  sub_100012A24();
  swift_allocError();
  *(void *)uint64_t v12 = 0xD000000000000019;
  *(void *)(v12 + 8) = 0x80000001000D70A0;
  *(void *)(v12 + 24) = 0;
  *(void *)(v12 + 32) = 0;
  *(void *)(v12 + 16) = v11;
  *(unsigned char *)(v12 + 40) = 2;
  swift_willThrow();
  swift_errorRelease();
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_100062C88()
{
  uint64_t v1 = (void *)v0[44];
  uint64_t v2 = (void *)v0[41];
  swift_release();
  swift_willThrow();

  sub_1000C66B0();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v3 = sub_1000C66C0();
  os_log_type_t v4 = sub_1000C7670();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 138412290;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    v0[28] = v7;
    sub_1000C7850();
    void *v6 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "participant(withAddress) got CK error: %@", v5, 0xCu);
    sub_100012854((uint64_t *)&unk_10010B1E0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v9 = v0[35];
  uint64_t v8 = v0[36];
  uint64_t v10 = v0[34];

  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  uint64_t v11 = sub_1000C6480();
  sub_100012A24();
  swift_allocError();
  *(void *)uint64_t v12 = 0xD000000000000019;
  *(void *)(v12 + 8) = 0x80000001000D70A0;
  *(void *)(v12 + 24) = 0;
  *(void *)(v12 + 32) = 0;
  *(void *)(v12 + 16) = v11;
  *(unsigned char *)(v12 + 40) = 2;
  swift_willThrow();
  swift_errorRelease();
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_100062EE0(uint64_t a1, unsigned __int8 a2)
{
  if (sub_10005361C())
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1000C67E0();
    swift_release();
    swift_release();
    swift_release();
    if (v5) {
      goto LABEL_6;
    }
  }
  else
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1000C67E0();
    swift_release();
    swift_release();
    swift_release();
    if (v8) {
      goto LABEL_6;
    }
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  if (v7 != 1) {
    return 3;
  }
LABEL_6:
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  if ((v6 & 1) == 0 && (a2 & (a1 == 3)) == 0) {
    return 3;
  }
  return sub_1000C7730();
}

uint64_t sub_1000630B8(char a1)
{
  *(void *)(v2 + 56) = v1;
  *(unsigned char *)(v2 + 210) = a1;
  uint64_t v3 = sub_1000C66D0();
  *(void *)(v2 + 64) = v3;
  *(void *)(v2 + 72) = *(void *)(v3 - 8);
  *(void *)(v2 + 80) = swift_task_alloc();
  *(void *)(v2 + 88) = swift_task_alloc();
  sub_1000C75D0();
  *(void *)(v2 + 96) = sub_1000C75C0();
  uint64_t v5 = sub_1000C7590();
  *(void *)(v2 + 104) = v5;
  *(void *)(v2 + 112) = v4;
  return _swift_task_switch(sub_1000631C0, v5, v4);
}

uint64_t sub_1000631C0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = *(void **)(v0 + 16);
  if (!v1)
  {
    swift_release();
    sub_100012A24();
    swift_allocError();
    *(void *)uint64_t v10 = 0xD00000000000002CLL;
    *(void *)(v10 + 8) = 0x80000001000D6FF0;
    *(_OWORD *)(v10 + 16) = xmmword_1000CE5E0;
    *(void *)(v10 + 32) = 0x80000001000D7020;
    *(unsigned char *)(v10 + 40) = 11;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
LABEL_7:
    return v9();
  }

  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000C67E0();
  swift_release();
  swift_release();
  int v2 = *(unsigned __int8 *)(v0 + 209);
  swift_release();
  if (v2 == 1)
  {
    swift_release();
    sub_1000C66B0();
    uint64_t v3 = sub_1000C66C0();
    os_log_type_t v4 = sub_1000C7690();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "addParticipantsToShare, doing nothing as we have a public share", v5, 2u);
      swift_slowDealloc();
    }
    uint64_t v6 = *(void *)(v0 + 88);
    uint64_t v7 = *(void *)(v0 + 64);
    uint64_t v8 = *(void *)(v0 + 72);

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_7;
  }
  *(void *)(v0 + 32) = _swiftEmptyArrayStorage;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  uint64_t v12 = *(void *)(v0 + 40);
  *(void *)(v0 + 120) = v12;
  uint64_t v13 = *(void *)(v12 + 16);
  *(void *)(v0 + 128) = v13;
  if (v13)
  {
    *(void *)(v0 + 136) = 0;
    uint64_t v14 = *(void *)(v12 + 32);
    *(void *)(v0 + 144) = v14;
    uint64_t v15 = *(void *)(v12 + 40);
    *(void *)(v0 + 152) = v15;
    char v16 = *(unsigned char *)(v12 + 48);
    *(unsigned char *)(v0 + 211) = v16;
    sub_1000741E0();
    uint64_t v17 = (void *)swift_task_alloc();
    *(void *)(v0 + 160) = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_100063744;
    return sub_10006218C(v14, v15, v16);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1000C66B0();
    swift_retain_n();
    uint64_t v18 = sub_1000C66C0();
    os_log_type_t v19 = sub_1000C7690();
    if (os_log_type_enabled(v18, v19))
    {
      id v20 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)id v20 = 134217984;
      swift_getKeyPath();
      swift_getKeyPath();
      sub_1000C67E0();
      swift_release();
      swift_release();
      uint64_t v21 = *(void *)(*(void *)(v0 + 48) + 16);
      swift_bridgeObjectRelease();
      swift_release();
      *(void *)(v0 + 24) = v21;
      sub_1000C7850();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "addParticipantsToShare, adding %ld", v20, 0xCu);
      swift_slowDealloc();
    }
    else
    {
      swift_release_n();
    }

    (*(void (**)(void, void))(*(void *)(v0 + 72) + 8))(*(void *)(v0 + 80), *(void *)(v0 + 64));
    uint64_t v22 = *(void *)(v0 + 32);
    *(void *)(v0 + 184) = v22;
    uint64_t v23 = (void *)swift_task_alloc();
    *(void *)(v0 + 192) = v23;
    void *v23 = v0;
    v23[1] = sub_100063D24;
    return sub_100063FA8(v22, 1, 1);
  }
}

uint64_t sub_100063744(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[21] = a1;
  v3[22] = v1;
  swift_task_dealloc();
  sub_1000741E8();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = v3[13];
    uint64_t v5 = v3[14];
    uint64_t v6 = sub_100063EB4;
  }
  else
  {
    uint64_t v4 = v3[13];
    uint64_t v5 = v3[14];
    uint64_t v6 = sub_100063884;
  }
  return _swift_task_switch(v6, v4, v5);
}

uint64_t sub_100063884()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000C67E0();
  swift_release();
  swift_release();
  uint64_t v1 = 1;
  switch(*(unsigned char *)(v0 + 208))
  {
    case 1:
      uint64_t v1 = 3;
      goto LABEL_4;
    case 2:
      uint64_t v1 = 2;
      goto LABEL_4;
    case 3:
      return sub_1000C7980();
    default:
LABEL_4:
      int v2 = *(void **)(v0 + 168);
      unsigned __int8 v3 = *(unsigned char *)(v0 + 210);
      swift_release();
      [v2 setPermission:v1];
      objc_msgSend(v2, "setRole:", sub_100062EE0((uint64_t)objc_msgSend(v2, "permission"), v3));
      id v4 = v2;
      sub_1000C7520();
      if (*(void *)((*(void *)(v0 + 32) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v0 + 32) & 0xFFFFFFFFFFFFFF8)
                                                                                         + 0x18) >> 1)
        sub_1000C7560();
      uint64_t v5 = *(void **)(v0 + 168);
      uint64_t v6 = *(void *)(v0 + 128);
      uint64_t v7 = *(void *)(v0 + 136) + 1;
      sub_1000C7580();
      sub_1000C7550();

      if (v7 == v6)
      {
        swift_bridgeObjectRelease();
        sub_1000C66B0();
        swift_retain_n();
        uint64_t v8 = sub_1000C66C0();
        os_log_type_t v9 = sub_1000C7690();
        if (os_log_type_enabled(v8, v9))
        {
          uint64_t v10 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)uint64_t v10 = 134217984;
          swift_getKeyPath();
          swift_getKeyPath();
          sub_1000C67E0();
          swift_release();
          swift_release();
          uint64_t v11 = *(void *)(*(void *)(v0 + 48) + 16);
          swift_bridgeObjectRelease();
          swift_release();
          *(void *)(v0 + 24) = v11;
          sub_1000C7850();
          swift_release();
          _os_log_impl((void *)&_mh_execute_header, v8, v9, "addParticipantsToShare, adding %ld", v10, 0xCu);
          swift_slowDealloc();
        }
        else
        {
          swift_release_n();
        }

        (*(void (**)(void, void))(*(void *)(v0 + 72) + 8))(*(void *)(v0 + 80), *(void *)(v0 + 64));
        uint64_t v19 = *(void *)(v0 + 32);
        *(void *)(v0 + 184) = v19;
        id v20 = (void *)swift_task_alloc();
        *(void *)(v0 + 192) = v20;
        *id v20 = v0;
        v20[1] = sub_100063D24;
        return sub_100063FA8(v19, 1, 1);
      }
      else
      {
        uint64_t v12 = *(void *)(v0 + 136) + 1;
        *(void *)(v0 + 136) = v12;
        uint64_t v13 = *(void *)(v0 + 120) + 24 * v12;
        uint64_t v14 = *(void *)(v13 + 32);
        *(void *)(v0 + 144) = v14;
        uint64_t v15 = *(void *)(v13 + 40);
        *(void *)(v0 + 152) = v15;
        char v16 = *(unsigned char *)(v13 + 48);
        *(unsigned char *)(v0 + 211) = v16;
        sub_1000741E0();
        uint64_t v17 = (void *)swift_task_alloc();
        *(void *)(v0 + 160) = v17;
        *uint64_t v17 = v0;
        v17[1] = sub_100063744;
        return sub_10006218C(v14, v15, v16);
      }
  }
}

uint64_t sub_100063D24()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 200) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 104);
    uint64_t v4 = *(void *)(v2 + 112);
    uint64_t v5 = sub_100063F28;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v2 + 104);
    uint64_t v4 = *(void *)(v2 + 112);
    uint64_t v5 = sub_100063E40;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100063E40()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100063EB4()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100063F28()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100063FA8(uint64_t a1, char a2, char a3)
{
  *(unsigned char *)(v4 + 114) = a3;
  *(unsigned char *)(v4 + 113) = a2;
  *(void *)(v4 + 24) = a1;
  *(void *)(v4 + 32) = v3;
  uint64_t v5 = sub_1000C66D0();
  *(void *)(v4 + 40) = v5;
  *(void *)(v4 + 48) = *(void *)(v5 - 8);
  *(void *)(v4 + 56) = swift_task_alloc();
  sub_1000C75D0();
  *(void *)(v4 + 64) = sub_1000C75C0();
  uint64_t v7 = sub_1000C7590();
  *(void *)(v4 + 72) = v7;
  *(void *)(v4 + 80) = v6;
  return _swift_task_switch(sub_1000640A4, v7, v6);
}

uint64_t sub_1000640A4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = *(void **)(v0 + 16);
  *(void *)(v0 + 88) = v1;
  if (!v1)
  {
    swift_release();
    sub_100012A24();
    swift_allocError();
    *(void *)uint64_t v19 = 0xD000000000000034;
    *(void *)(v19 + 8) = 0x80000001000D7060;
    *(_OWORD *)(v19 + 16) = xmmword_1000CE5E0;
    *(void *)(v19 + 32) = 0x80000001000D7020;
    *(unsigned char *)(v19 + 40) = 11;
    swift_willThrow();
    swift_task_dealloc();
    uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
LABEL_11:
    return v9();
  }
  if (*(unsigned char *)(v0 + 113) == 1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1000C67E0();
    swift_release();
    swift_release();
    int v2 = *(unsigned __int8 *)(v0 + 112);
    swift_release();
    if (v2 == 1)
    {
      swift_release();
      sub_1000C66B0();
      uint64_t v3 = sub_1000C66C0();
      os_log_type_t v4 = sub_1000C7690();
      if (os_log_type_enabled(v3, v4))
      {
        uint64_t v5 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v5 = 0;
        _os_log_impl((void *)&_mh_execute_header, v3, v4, "addParticipantsToShare, doing nothing as we have a public share", v5, 2u);
        swift_slowDealloc();
      }
      uint64_t v7 = *(void *)(v0 + 48);
      uint64_t v6 = *(void *)(v0 + 56);
      uint64_t v8 = *(void *)(v0 + 40);

      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
      swift_task_dealloc();
      uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_11;
    }
  }
  unint64_t v10 = sub_1000B86F0();
  uint64_t v12 = v11;
  char v14 = v13;
  *(void *)(v0 + 96) = v11;
  id v20 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char, char))((char *)&dword_10010B708
                                                                               + dword_10010B708);
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v15;
  void *v15 = v0;
  v15[1] = sub_1000643D8;
  char v16 = *(unsigned char *)(v0 + 114);
  uint64_t v17 = *(void *)(v0 + 24);
  return v20(v17, (uint64_t)v1, v10 & 0x101FFFFFFFFFFLL, v12, v14 & 1, v16);
}

uint64_t sub_1000643D8()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 72);
  return _swift_task_switch(sub_10006451C, v3, v2);
}

uint64_t sub_10006451C()
{
  uint64_t v1 = *(void **)(v0 + 88);
  swift_release();

  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100064590()
{
  v1[5] = v0;
  uint64_t v2 = sub_1000C66D0();
  v1[6] = v2;
  v1[7] = *(void *)(v2 - 8);
  v1[8] = swift_task_alloc();
  sub_100012854((uint64_t *)&unk_10010BDD0);
  v1[9] = swift_task_alloc();
  v1[10] = swift_task_alloc();
  v1[11] = swift_task_alloc();
  v1[12] = swift_task_alloc();
  v1[13] = swift_task_alloc();
  v1[14] = swift_task_alloc();
  uint64_t v3 = sub_1000C6530();
  v1[15] = v3;
  v1[16] = *(void *)(v3 - 8);
  v1[17] = swift_task_alloc();
  v1[18] = swift_task_alloc();
  sub_1000C75D0();
  v1[19] = sub_1000C75C0();
  uint64_t v5 = sub_1000C7590();
  v1[20] = v5;
  v1[21] = v4;
  return _swift_task_switch(sub_100064760, v5, v4);
}

uint64_t sub_100064760()
{
  uint64_t v31 = v0;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  if ((*(unsigned char *)(v0 + 224) & 0xFE) != 8)
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_5;
  }
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v3 = *(void *)(v0 + 112);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  uint64_t v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  *(void *)(v0 + 176) = v4;
  *(void *)(v0 + 184) = (v2 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (v4(v3, 1, v1) == 1)
  {
    uint64_t v5 = *(void *)(v0 + 112);
    swift_release();
    sub_10001326C(v5, (uint64_t *)&unk_10010BDD0);
    sub_100012A24();
    swift_allocError();
    *(void *)uint64_t v6 = 0xD000000000000016;
    *(void *)(v6 + 8) = 0x80000001000D7130;
    *(void *)(v6 + 24) = 0;
    *(void *)(v6 + 32) = 0;
    *(void *)(v6 + 16) = 0;
    *(unsigned char *)(v6 + 40) = 0;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
LABEL_5:
    return v7();
  }
  uint64_t v10 = *(void *)(v0 + 136);
  uint64_t v9 = *(void *)(v0 + 144);
  uint64_t v11 = *(void *)(v0 + 120);
  uint64_t v12 = *(void *)(v0 + 128);
  (*(void (**)(uint64_t, void, uint64_t))(v12 + 32))(v9, *(void *)(v0 + 112), v11);
  sub_1000C66B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v10, v9, v11);
  char v13 = sub_1000C66C0();
  os_log_type_t v14 = sub_1000C7690();
  BOOL v15 = os_log_type_enabled(v13, v14);
  uint64_t v17 = *(void *)(v0 + 128);
  uint64_t v16 = *(void *)(v0 + 136);
  uint64_t v18 = *(void *)(v0 + 120);
  uint64_t v20 = *(void *)(v0 + 56);
  uint64_t v19 = *(void *)(v0 + 64);
  uint64_t v21 = *(void *)(v0 + 48);
  if (v15)
  {
    uint64_t v29 = *(void *)(v0 + 64);
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    *(_DWORD *)uint64_t v22 = 136315138;
    sub_100074448((unint64_t *)&qword_10010BE30, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v23 = sub_1000C7A20();
    *(void *)(v0 + 32) = sub_1000720D0(v23, v24, &v30);
    sub_1000C7850();
    swift_bridgeObjectRelease();
    uint64_t v25 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    v25(v16, v18);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Fetching share for URL: %s", v22, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v29, v21);
  }
  else
  {
    uint64_t v25 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    v25(*(void *)(v0 + 136), *(void *)(v0 + 120));

    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
  }
  *(void *)(v0 + 192) = v25;
  uint64_t v26 = (void *)swift_task_alloc();
  *(void *)(v0 + 200) = v26;
  *uint64_t v26 = v0;
  v26[1] = sub_100064C74;
  uint64_t v27 = *(void *)(v0 + 144);
  uint64_t v28 = *(void *)(v0 + 96);
  return sub_10001E5A0(v28, v27);
}

uint64_t sub_100064C74(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 208) = a1;
  *(void *)(v4 + 216) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 168);
  uint64_t v6 = *(void *)(v3 + 160);
  if (v1) {
    uint64_t v7 = sub_1000650DC;
  }
  else {
    uint64_t v7 = sub_100064DB8;
  }
  return _swift_task_switch(v7, v6, v5);
}

uint64_t sub_100064DB8()
{
  uint64_t v1 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 176);
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v4 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 104);
  uint64_t v5 = *(void *)(v0 + 88);
  swift_release();
  sub_100012898(v4, v3, (uint64_t *)&unk_10010BDD0);
  sub_10001A740(v3, v5, (uint64_t *)&unk_10010BDD0);
  if (v1(v5, 1, v2) == 1)
  {
    sub_10001326C(*(void *)(v0 + 88), (uint64_t *)&unk_10010BDD0);
    id v6 = *(id *)(v0 + 208);
  }
  else
  {
    uint64_t v7 = *(void *)(v0 + 88);
    id v8 = *(id *)(v0 + 208);
    sub_10001326C(v7, (uint64_t *)&unk_10010BDD0);
    id v6 = [objc_allocWithZone((Class)BRCKShareSubitem) initWithShare:v8];
  }
  uint64_t v9 = *(void *)(v0 + 72);
  uint64_t v10 = *(void *)(v0 + 80);
  sub_10001A740(*(void *)(v0 + 104), v10, (uint64_t *)&unk_10010BDD0);
  sub_10001A740(v10, v9, (uint64_t *)&unk_10010BDD0);
  swift_retain();
  sub_1000108C0(v9);
  swift_release();
  sub_10001326C(v10, (uint64_t *)&unk_10010BDD0);
  swift_getKeyPath();
  swift_getKeyPath();
  if (v6)
  {
    *(void *)(v0 + 24) = v6;
    swift_retain();
    sub_1000C67F0();
  }
  else
  {
    uint64_t v11 = *(void *)(v0 + 120);
    uint64_t v12 = *(void *)(v0 + 128);
    uint64_t v14 = *(void *)(v0 + 72);
    uint64_t v13 = *(void *)(v0 + 80);
    *(void *)(v0 + 16) = 0;
    swift_retain_n();
    sub_1000C67F0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v13, 1, 1, v11);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_10001A740(v13, v14, (uint64_t *)&unk_10010BDD0);
    swift_retain();
    sub_1000C67F0();
    sub_10001326C(v13, (uint64_t *)&unk_10010BDD0);
    swift_release();
  }
  BOOL v15 = *(void (**)(uint64_t, uint64_t))(v0 + 192);
  uint64_t v16 = *(void *)(v0 + 144);
  uint64_t v17 = *(void *)(v0 + 120);
  sub_10001326C(*(void *)(v0 + 104), (uint64_t *)&unk_10010BDD0);
  v15(v16, v17);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
  return v18();
}

uint64_t sub_1000650DC()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[24];
  uint64_t v2 = v0[18];
  uint64_t v3 = v0[15];
  swift_release();
  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1000651D8(uint64_t a1, uint64_t a2)
{
  v3[10] = a2;
  v3[11] = v2;
  v3[9] = a1;
  sub_1000C75D0();
  v3[12] = sub_1000C75C0();
  uint64_t v5 = sub_1000C7590();
  v3[13] = v5;
  v3[14] = v4;
  return _swift_task_switch(sub_100065274, v5, v4);
}

uint64_t sub_100065274()
{
  type metadata accessor for CloudKitOperations();
  uint64_t v1 = (void *)swift_allocObject();
  v0[15] = v1;
  v1[2] = 0xD000000000000021;
  v1[3] = 0x80000001000D4270;
  v1[4] = 0xD000000000000016;
  v1[5] = 0x80000001000D42A0;
  v1[6] = 0xD00000000000001DLL;
  v1[7] = 0x80000001000D42C0;
  v0[6] = 0;
  v0[5] = 0;
  sub_100012854(&qword_10010CBB0);
  sub_1000C67B0();
  return _swift_task_switch(sub_10006536C, 0, 0);
}

uint64_t sub_10006536C()
{
  uint64_t v1 = v0[15];
  uint64_t v3 = v0[9];
  uint64_t v2 = v0[10];
  uint64_t v4 = (void *)swift_task_alloc();
  v0[16] = v4;
  v4[2] = v1;
  v4[3] = v3;
  v4[4] = v2;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[17] = v5;
  uint64_t v6 = sub_100012854(&qword_10010D360);
  *uint64_t v5 = v0;
  v5[1] = sub_100065480;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 2, 0, 0, 0xD00000000000002DLL, 0x80000001000D69C0, sub_100075E0C, v4, v6);
}

uint64_t sub_100065480()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1000657EC;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_10006559C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10006559C()
{
  *(_OWORD *)(v0 + 152) = *(_OWORD *)(v0 + 16);
  *(void *)(v0 + 168) = *(void *)(v0 + 32);
  return _swift_task_switch(sub_1000655C4, *(void *)(v0 + 104), *(void *)(v0 + 112));
}

uint64_t sub_1000655C4()
{
  uint64_t v1 = v0[10];
  swift_release();
  if (v1)
  {
    uint64_t v2 = (void *)v0[10];
    swift_getKeyPath();
    swift_getKeyPath();
    v0[8] = v2;
    id v3 = v2;
    swift_retain();
    sub_1000C67F0();
  }
  else
  {
    uint64_t v4 = (void *)v0[20];
    swift_retain();
    id v5 = v4;
    sub_100083E94(v4, 0);

    swift_release();
  }
  uint64_t v7 = (void *)v0[20];
  uint64_t v6 = (void *)v0[21];
  uint64_t v8 = (void *)v0[19];
  uint64_t v9 = v0[15];
  uint64_t v10 = v0[11];
  uint64_t v11 = *(void **)(v10 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel_ckMetadata);
  *(void *)(v10 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel_ckMetadata) = v6;
  id v12 = v6;

  swift_getKeyPath();
  swift_getKeyPath();
  v0[7] = v8;
  swift_retain();
  id v13 = v8;
  sub_1000C67F0();

  swift_setDeallocating();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v14 = v9 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing18CloudKitOperations__ckSourceAppBundleID;
  uint64_t v15 = sub_100012854(&qword_10010B6F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  swift_deallocClassInstance();
  uint64_t v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

uint64_t sub_1000657EC()
{
  swift_task_dealloc();
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 112);
  return _swift_task_switch(sub_100065850, v1, v2);
}

uint64_t sub_100065850()
{
  uint64_t v1 = *(void *)(v0 + 120);
  swift_setDeallocating();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = v1 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing18CloudKitOperations__ckSourceAppBundleID;
  uint64_t v3 = sub_100012854(&qword_10010B6F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_deallocClassInstance();
  swift_release();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_100065960(uint64_t a1)
{
  v2[10] = a1;
  v2[11] = v1;
  uint64_t v3 = sub_1000C66D0();
  v2[12] = v3;
  v2[13] = *(void *)(v3 - 8);
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  sub_100012854((uint64_t *)&unk_10010BDD0);
  v2[16] = swift_task_alloc();
  sub_1000C75D0();
  v2[17] = sub_1000C75C0();
  uint64_t v5 = sub_1000C7590();
  v2[18] = v5;
  v2[19] = v4;
  return _swift_task_switch(sub_100065A94, v5, v4);
}

void sub_100065A94()
{
  uint64_t v1 = *(void *)(v0 + 80);
  if (v1 < 1)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  *(void *)(v0 + 160) = BRCloudDocsErrorDomain;
  *(void *)(v0 + 168) = v1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  if (*(unsigned char *)(v0 + 60) != 1) {
    goto LABEL_5;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  if (*(unsigned __int8 *)(v0 + 58) - 1 < 3)
  {
LABEL_12:
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(void (**)(void))(v0 + 8);
    v4();
    return;
  }
  if (*(unsigned char *)(v0 + 58))
  {
LABEL_5:
    uint64_t v2 = *(void *)(v0 + 168);
    if (v2 != 1)
    {
      while (1)
      {
        if (v2 < 2)
        {
          __break(1u);
          goto LABEL_20;
        }
        *(void *)(v0 + 168) = v2 - 1;
        swift_getKeyPath();
        swift_getKeyPath();
        sub_1000C67E0();
        swift_release();
        swift_release();
        if (*(unsigned char *)(v0 + 60) == 1)
        {
          swift_getKeyPath();
          swift_getKeyPath();
          sub_1000C67E0();
          swift_release();
          swift_release();
          int v3 = *(unsigned __int8 *)(v0 + 58);
          if (v3 != 4) {
            break;
          }
        }
        uint64_t v2 = *(void *)(v0 + 168);
        if (v2 == 1) {
          goto LABEL_12;
        }
      }
      if ((v3 - 1) >= 3) {
        goto LABEL_15;
      }
    }
    goto LABEL_12;
  }
LABEL_15:
  uint64_t v5 = *(void *)(v0 + 128);
  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 57) = 1;
  swift_retain();
  sub_1000C67F0();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  uint64_t v6 = sub_1000C6530();
  *(void *)(v0 + 176) = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  *(void *)(v0 + 184) = v7;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
LABEL_21:
    __break(1u);
    return;
  }
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 192) = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_100065E74;
  uint64_t v9 = *(void *)(v0 + 128);
  sub_1000159FC(v9, 0);
}

uint64_t sub_100065E74()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 200) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[18];
    uint64_t v4 = v2[19];
    uint64_t v5 = sub_1000662FC;
  }
  else
  {
    (*(void (**)(void, void))(v2[23] + 8))(v2[16], v2[22]);
    uint64_t v3 = v2[18];
    uint64_t v4 = v2[19];
    uint64_t v5 = sub_100065FA0;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100065FA0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 256) = 2;
  swift_retain();
  uint64_t result = sub_1000C67F0();
  uint64_t v2 = *(void *)(v0 + 168);
  if (v2 == 1)
  {
LABEL_8:
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  while (1)
  {
    if (v2 < 2)
    {
      __break(1u);
LABEL_16:
      __break(1u);
      return result;
    }
    *(void *)(v0 + 168) = v2 - 1;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1000C67E0();
    swift_release();
    uint64_t result = swift_release();
    if (*(unsigned char *)(v0 + 60))
    {
      swift_getKeyPath();
      swift_getKeyPath();
      sub_1000C67E0();
      swift_release();
      uint64_t result = swift_release();
      int v3 = *(unsigned __int8 *)(v0 + 58);
      if (v3 != 4) {
        break;
      }
    }
    uint64_t v2 = *(void *)(v0 + 168);
    if (v2 == 1) {
      goto LABEL_8;
    }
  }
  if ((v3 - 1) < 3) {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(v0 + 128);
  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 57) = 1;
  swift_retain();
  sub_1000C67F0();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  uint64_t v6 = sub_1000C6530();
  *(void *)(v0 + 176) = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  *(void *)(v0 + 184) = v7;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
  if (result == 1) {
    goto LABEL_16;
  }
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 192) = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_100065E74;
  uint64_t v9 = *(void *)(v0 + 128);
  return sub_1000159FC(v9, 0);
}

uint64_t sub_1000662FC()
{
  uint64_t v1 = *(void *)(v0 + 200);
  (*(void (**)(void, void))(*(void *)(v0 + 184) + 8))(*(void *)(v0 + 128), *(void *)(v0 + 176));
  *(void *)(v0 + 72) = v1;
  swift_errorRetain();
  sub_100012854((uint64_t *)&unk_10010B010);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_release();
    swift_errorRelease();
    sub_1000C66B0();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v14 = sub_1000C66C0();
    os_log_type_t v15 = sub_1000C7670();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 138412290;
      swift_errorRetain();
      uint64_t v18 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 64) = v18;
      sub_1000C7850();
      *uint64_t v17 = v18;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "prepFolderSharingIfNeeded folderSharingStage -> .failed, unexpected error: %@", v16, 0xCu);
      sub_100012854((uint64_t *)&unk_10010B1E0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }
    uint64_t v28 = *(void *)(v0 + 104);
    uint64_t v27 = *(void *)(v0 + 112);
    uint64_t v29 = *(void *)(v0 + 96);

    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v29);
    swift_getKeyPath();
    swift_getKeyPath();
    *(unsigned char *)(v0 + 59) = 3;
    swift_retain();
    sub_1000C67F0();
    goto LABEL_17;
  }
  swift_errorRelease();
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  *(void *)(v0 + 208) = v2;
  *(void *)(v0 + 216) = v3;
  uint64_t v5 = *(void **)(v0 + 32);
  uint64_t v4 = *(void *)(v0 + 40);
  *(void *)(v0 + 224) = v5;
  *(void *)(v0 + 232) = v4;
  uint64_t v6 = *(void *)(v0 + 48);
  *(void *)(v0 + 240) = v6;
  int v7 = *(unsigned __int8 *)(v0 + 56);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  if ((*(unsigned char *)(v0 + 61) & 0xFE) == 2)
  {
    swift_release();
    uint64_t v8 = v2;
    uint64_t v9 = v3;
    uint64_t v10 = v5;
    uint64_t v11 = v4;
    uint64_t v12 = v6;
    unsigned __int8 v13 = v7;
LABEL_16:
    sub_10002376C(v8, v9, v10, v11, v12, v13);
LABEL_17:
    swift_errorRelease();
LABEL_18:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v36 = *(uint64_t (**)(void))(v0 + 8);
    return v36();
  }
  uint64_t v52 = v6;
  uint64_t v53 = v2;
  if (v7 != 3)
  {
    unsigned __int8 v51 = v7;
    swift_release();
    sub_1000C66B0();
    uint64_t v30 = sub_1000C66C0();
    os_log_type_t v31 = sub_1000C7670();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v32 = 0;
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "prepFolderSharingIfNeeded unexpected error, folderSharingStage -> .failed", v32, 2u);
      swift_slowDealloc();
    }
    uint64_t v33 = *(void *)(v0 + 120);
    uint64_t v35 = *(void *)(v0 + 96);
    uint64_t v34 = *(void *)(v0 + 104);

    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v33, v35);
    swift_getKeyPath();
    swift_getKeyPath();
    *(unsigned char *)(v0 + 62) = 3;
    swift_retain();
    sub_1000C67F0();
    uint64_t v8 = v2;
    uint64_t v9 = v3;
    uint64_t v10 = v5;
    uint64_t v11 = v4;
    uint64_t v12 = v52;
    unsigned __int8 v13 = v51;
    goto LABEL_16;
  }
  uint64_t v19 = v3;
  if (v5)
  {
    uint64_t v20 = v3;
    uint64_t v21 = v4;
    sub_1000236F4(v53, v20, v5, v4, v6, 3u);
    id v50 = v5;
    id v22 = [v50 domain];
    uint64_t v23 = sub_1000C7440();
    uint64_t v25 = v24;

    if (v23 == sub_1000C7440() && v25 == v26)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v39 = sub_1000C7A50();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v39 & 1) == 0)
      {
        uint64_t v38 = v50;

        goto LABEL_30;
      }
    }
    uint64_t v38 = v50;
    id v40 = [v50 code];

    if (v40 == (id)7)
    {
      if (*(uint64_t *)(v0 + 168) <= 0)
      {
        swift_getKeyPath();
        swift_getKeyPath();
        *(unsigned char *)(v0 + 257) = 3;
        swift_retain();
        sub_1000C67F0();
        sub_1000C7440();
        id v41 = objc_allocWithZone((Class)NSError);
        NSString v42 = sub_1000C7400();
        swift_bridgeObjectRelease();
        id v43 = [v41 initWithDomain:v42 code:46 userInfo:0];

        sub_100067284(2u, v43);
      }
      swift_getKeyPath();
      swift_getKeyPath();
      *(unsigned char *)(v0 + 258) = 0;
      swift_retain();
      sub_1000C67F0();
      return _swift_task_switch(sub_100066D7C, 0, 0);
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v38 = 0;
    uint64_t v21 = v4;
  }
LABEL_30:
  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 63) = 3;
  swift_retain();
  sub_1000C67F0();
  sub_100067284(2u, v5);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_10002376C(v53, v19, v5, v21, v6, 3u);
  swift_errorRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 256) = 2;
  swift_retain();
  sub_1000C67F0();
  uint64_t v44 = *(void *)(v0 + 168);
  if (v44 == 1)
  {
LABEL_37:
    swift_release();
    goto LABEL_18;
  }
  while (1)
  {
    if (v44 < 2)
    {
      __break(1u);
LABEL_43:
      __break(1u);
      JUMPOUT(0x100066D6CLL);
    }
    *(void *)(v0 + 168) = v44 - 1;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1000C67E0();
    swift_release();
    swift_release();
    if (*(unsigned char *)(v0 + 60))
    {
      swift_getKeyPath();
      swift_getKeyPath();
      sub_1000C67E0();
      swift_release();
      swift_release();
      if (*(unsigned char *)(v0 + 58) != 4) {
        break;
      }
    }
    uint64_t v44 = *(void *)(v0 + 168);
    if (v44 == 1) {
      goto LABEL_37;
    }
  }
  switch(*(unsigned char *)(v0 + 58))
  {
    case 1:
    case 2:
    case 3:
      goto LABEL_37;
    default:
      uint64_t v45 = *(void *)(v0 + 128);
      swift_getKeyPath();
      swift_getKeyPath();
      *(unsigned char *)(v0 + 57) = 1;
      swift_retain();
      sub_1000C67F0();
      swift_getKeyPath();
      swift_getKeyPath();
      sub_1000C67E0();
      swift_release();
      swift_release();
      uint64_t v46 = sub_1000C6530();
      *(void *)(v0 + 176) = v46;
      uint64_t v47 = *(void *)(v46 - 8);
      *(void *)(v0 + 184) = v47;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46) == 1) {
        goto LABEL_43;
      }
      uint64_t v48 = (void *)swift_task_alloc();
      *(void *)(v0 + 192) = v48;
      *uint64_t v48 = v0;
      v48[1] = sub_100065E74;
      uint64_t v49 = *(void *)(v0 + 128);
      uint64_t result = sub_1000159FC(v49, 0);
      break;
  }
  return result;
}

uint64_t sub_100066D7C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 248) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100066E14;
  return static Task<>.sleep(nanoseconds:)(1000000000);
}

uint64_t sub_100066E14()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    swift_errorRelease();
    uint64_t v3 = *(void *)(v2 + 144);
    uint64_t v4 = *(void *)(v2 + 152);
    uint64_t v5 = sub_1000760FC;
  }
  else
  {
    uint64_t v3 = *(void *)(v2 + 144);
    uint64_t v4 = *(void *)(v2 + 152);
    uint64_t v5 = sub_100066F38;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100066F38()
{
  uint64_t v1 = *(void **)(v0 + 224);
  sub_10002376C(*(void *)(v0 + 208), *(void *)(v0 + 216), v1, *(void *)(v0 + 232), *(void *)(v0 + 240), 3u);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t result = swift_errorRelease();
  uint64_t v3 = *(void *)(v0 + 168);
  if (v3 == 1)
  {
LABEL_8:
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
  while (1)
  {
    if (v3 < 2)
    {
      __break(1u);
LABEL_16:
      __break(1u);
      return result;
    }
    *(void *)(v0 + 168) = v3 - 1;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1000C67E0();
    swift_release();
    uint64_t result = swift_release();
    if (*(unsigned char *)(v0 + 60))
    {
      swift_getKeyPath();
      swift_getKeyPath();
      sub_1000C67E0();
      swift_release();
      uint64_t result = swift_release();
      int v4 = *(unsigned __int8 *)(v0 + 58);
      if (v4 != 4) {
        break;
      }
    }
    uint64_t v3 = *(void *)(v0 + 168);
    if (v3 == 1) {
      goto LABEL_8;
    }
  }
  if ((v4 - 1) < 3) {
    goto LABEL_8;
  }
  uint64_t v6 = *(void *)(v0 + 128);
  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 57) = 1;
  swift_retain();
  sub_1000C67F0();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  uint64_t v7 = sub_1000C6530();
  *(void *)(v0 + 176) = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  *(void *)(v0 + 184) = v8;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
  if (result == 1) {
    goto LABEL_16;
  }
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 192) = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_100065E74;
  uint64_t v10 = *(void *)(v0 + 128);
  return sub_1000159FC(v10, 0);
}

void sub_100067284(unsigned __int8 a1, void *a2)
{
  uint64_t v3 = v2;
  int v5 = a1;
  uint64_t v6 = sub_1000C66D0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  unsigned __int8 v13 = (char *)&v79 - v12;
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v79 - v15;
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (char *)&v79 - v18;
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v79 - v20;
  if (v5 == 6)
  {
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectRelease();
    if (!Strong)
    {
      sub_1000C66B0();
      uint64_t v23 = sub_1000C66C0();
      os_log_type_t v24 = sub_1000C7690();
      if (os_log_type_enabled(v23, v24))
      {
        uint64_t v25 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v25 = 0;
        _os_log_impl((void *)&_mh_execute_header, v23, v24, "ext computed property--extensionController is nil--will assert", v25, 2u);
        swift_slowDealloc();
      }

      (*(void (**)(char *, uint64_t))(v7 + 8))(v21, v6);
    }
    if (swift_unknownObjectWeakLoadStrong())
    {
      sub_1000C7440();
      id v26 = objc_allocWithZone((Class)NSError);
      NSString v27 = sub_1000C7400();
      swift_bridgeObjectRelease();
      id v28 = [v26 initWithDomain:v27 code:3072 userInfo:0];

      sub_10000E170((uint64_t)v28, 0);
      swift_unknownObjectRelease();

      return;
    }
    __break(1u);
    goto LABEL_60;
  }
  if (a2)
  {
    uint64_t v86 = v3;
    id v29 = a2;
    sub_1000C66B0();
    uint64_t v30 = v29;
    os_log_type_t v31 = sub_1000C66C0();
    int v32 = sub_1000C7670();
    if (os_log_type_enabled(v31, (os_log_type_t)v32))
    {
      LODWORD(v80) = v32;
      os_log_t v82 = v31;
      uint64_t v83 = v30;
      uint64_t v84 = v7;
      uint64_t v85 = v6;
      uint64_t v33 = (_DWORD *)swift_slowAlloc();
      uint64_t v79 = swift_slowAlloc();
      uint64_t v88 = v79;
      uint64_t v81 = v33;
      *uint64_t v33 = 136315394;
      uint64_t v34 = sub_1000C7500();
      uint64_t v36 = v35;
      if ((0x80000001000D6EE0 & 0x2000000000000000) != 0) {
        unint64_t v37 = (0x80000001000D6EE0 & 0xF00000000000000) >> 54;
      }
      else {
        unint64_t v37 = 124;
      }
      if ((((unint64_t)"or" >> 61) & ((0x80000001000D6EE0 & 0xF00000000000000) >> 54 == 0)) != 0)
      {
LABEL_21:
        swift_bridgeObjectRelease();
        uint64_t v42 = 0;
        unint64_t v43 = 0xE000000000000000;
      }
      else
      {
        uint64_t v38 = v34;
        while (sub_1000C7500() != v38 || v39 != v36)
        {
          char v41 = sub_1000C7A50();
          swift_bridgeObjectRelease();
          if (v41) {
            goto LABEL_38;
          }
          if (v37 == (unint64_t)sub_1000C74A0() >> 14) {
            goto LABEL_21;
          }
        }
        swift_bridgeObjectRelease();
LABEL_38:
        swift_bridgeObjectRelease();
        sub_1000C7510();
        uint64_t v42 = sub_1000C7470();
        unint64_t v43 = v58;
        swift_bridgeObjectRelease();
      }
      uint64_t v59 = v81;
      uint64_t v87 = sub_1000720D0(v42, v43, &v88);
      sub_1000C7850();
      swift_bridgeObjectRelease();
      *((_WORD *)v59 + 6) = 2080;
      uint64_t v30 = v83;
      uint64_t v60 = v83;
      id v61 = [v60 description];
      uint64_t v62 = sub_1000C7440();
      unint64_t v64 = v63;

      uint64_t v87 = sub_1000720D0(v62, v64, &v88);
      sub_1000C7850();

      swift_bridgeObjectRelease();
      os_log_t v65 = v82;
      _os_log_impl((void *)&_mh_execute_header, v82, (os_log_type_t)v80, "%s cancelling via extension with error: %s", (uint8_t *)v59, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v7 = v84;
      uint64_t v6 = v85;
    }
    else
    {
    }
    uint64_t v66 = *(void (**)(char *, uint64_t))(v7 + 8);
    v66(v19, v6);
    uint64_t v67 = swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectRelease();
    if (!v67)
    {
      sub_1000C66B0();
      uint64_t v68 = sub_1000C66C0();
      os_log_type_t v69 = sub_1000C7690();
      if (os_log_type_enabled(v68, v69))
      {
        uint64_t v70 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v70 = 0;
        _os_log_impl((void *)&_mh_execute_header, v68, v69, "ext computed property--extensionController is nil--will assert", v70, 2u);
        swift_slowDealloc();
      }

      v66(v16, v6);
    }
    if (!swift_unknownObjectWeakLoadStrong())
    {
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
      return;
    }
    sub_10000E170((uint64_t)v30, 1u);
  }
  else
  {
    sub_1000C66B0();
    uint64_t v44 = sub_1000C66C0();
    int v45 = sub_1000C7690();
    if (os_log_type_enabled(v44, (os_log_type_t)v45))
    {
      LODWORD(v81) = v45;
      uint64_t v83 = v44;
      uint64_t v84 = v7;
      uint64_t v85 = v6;
      uint64_t v86 = v3;
      uint64_t v46 = swift_slowAlloc();
      uint64_t v80 = swift_slowAlloc();
      uint64_t v88 = v80;
      os_log_t v82 = v46;
      LODWORD(v46->isa) = 136315138;
      uint64_t v47 = sub_1000C7500();
      uint64_t v49 = v48;
      if ((0x80000001000D6EE0 & 0x2000000000000000) != 0) {
        unint64_t v50 = (0x80000001000D6EE0 & 0xF00000000000000) >> 54;
      }
      else {
        unint64_t v50 = 124;
      }
      if ((((unint64_t)"or" >> 61) & ((0x80000001000D6EE0 & 0xF00000000000000) >> 54 == 0)) != 0)
      {
LABEL_34:
        swift_bridgeObjectRelease();
        uint64_t v55 = 0;
        unint64_t v56 = 0xE000000000000000;
      }
      else
      {
        uint64_t v51 = v47;
        while (sub_1000C7500() != v51 || v52 != v49)
        {
          char v54 = sub_1000C7A50();
          swift_bridgeObjectRelease();
          if (v54) {
            goto LABEL_48;
          }
          if (v50 == (unint64_t)sub_1000C74A0() >> 14) {
            goto LABEL_34;
          }
        }
        swift_bridgeObjectRelease();
LABEL_48:
        swift_bridgeObjectRelease();
        sub_1000C7510();
        uint64_t v55 = sub_1000C7470();
        unint64_t v56 = v71;
        swift_bridgeObjectRelease();
      }
      uint64_t v72 = (uint8_t *)v82;
      uint64_t v87 = sub_1000720D0(v55, v56, &v88);
      sub_1000C7850();
      swift_bridgeObjectRelease();
      uint64_t v73 = v83;
      _os_log_impl((void *)&_mh_execute_header, v83, (os_log_type_t)v81, "%s dismissing via extension without error", v72, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v6 = v85;
      uint64_t v57 = *(void (**)(char *, uint64_t))(v84 + 8);
      v57(v13, v85);
    }
    else
    {

      uint64_t v57 = *(void (**)(char *, uint64_t))(v7 + 8);
      v57(v13, v6);
    }
    uint64_t v74 = swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectRelease();
    if (!v74)
    {
      sub_1000C66B0();
      uint64_t v75 = sub_1000C66C0();
      os_log_type_t v76 = sub_1000C7690();
      if (os_log_type_enabled(v75, v76))
      {
        uint64_t v77 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v77 = 0;
        _os_log_impl((void *)&_mh_execute_header, v75, v76, "ext computed property--extensionController is nil--will assert", v77, 2u);
        swift_slowDealloc();
      }

      v57(v10, v6);
    }
    if (!swift_unknownObjectWeakLoadStrong()) {
      goto LABEL_61;
    }
    sub_10000AB98();
    uint64_t v78 = (void *)sub_10000A1F4();
    if (v78)
    {
      [v78 _dismissViewControllerWithError:0];
      swift_unknownObjectRelease();
    }
  }
  swift_unknownObjectRelease();
}

uint64_t sub_100067C24()
{
  v1[8] = v0;
  uint64_t v2 = sub_1000C66D0();
  v1[9] = v2;
  v1[10] = *(void *)(v2 - 8);
  v1[11] = swift_task_alloc();
  v1[12] = swift_task_alloc();
  sub_100012854((uint64_t *)&unk_10010BDD0);
  v1[13] = swift_task_alloc();
  sub_1000C75D0();
  v1[14] = sub_1000C75C0();
  uint64_t v4 = sub_1000C7590();
  v1[15] = v4;
  v1[16] = v3;
  return _swift_task_switch(sub_100067D58, v4, v3);
}

uint64_t sub_100067D58()
{
  uint64_t v26 = v0;
  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 184) = 2;
  swift_retain();
  sub_1000C67F0();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 24);
  *(void *)(v0 + 136) = v1;
  if (v1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1000C67E0();
    swift_release();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1000C67E0();
    swift_release();
    swift_release();
    if ((*(unsigned char *)(v0 + 187) & 0xFE) == 8) {
      uint64_t v2 = 0;
    }
    else {
      uint64_t v2 = sub_1000392E8();
    }
    *(void *)(v0 + 144) = v2;
    unint64_t v16 = sub_1000B86F0();
    uint64_t v18 = v17;
    char v20 = v19;
    *(void *)(v0 + 152) = v17;
    os_log_type_t v24 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_10010B6F8
                                                                                    + dword_10010B6F8);
    uint64_t v21 = (void *)swift_task_alloc();
    *(void *)(v0 + 160) = v21;
    void *v21 = v0;
    v21[1] = sub_10006828C;
    uint64_t v22 = *(void *)(v0 + 104);
    return v24(v22, v1, (uint64_t)v2, v16 & 0x101FFFFFFFFFFLL, v18, v20 & 1);
  }
  else
  {
    swift_release();
    sub_100012A24();
    uint64_t v3 = swift_allocError();
    *(_OWORD *)uint64_t v4 = xmmword_1000CE5F0;
    *(_OWORD *)(v4 + 16) = xmmword_1000CE600;
    *(void *)(v4 + 32) = 0x80000001000D6FC0;
    *(unsigned char *)(v4 + 40) = 11;
    swift_willThrow();
    swift_getKeyPath();
    swift_getKeyPath();
    *(unsigned char *)(v0 + 186) = 0;
    swift_retain();
    sub_1000C67F0();
    sub_1000C66B0();
    swift_errorRetain();
    swift_errorRetain();
    int v5 = sub_1000C66C0();
    os_log_type_t v6 = sub_1000C7670();
    BOOL v7 = os_log_type_enabled(v5, v6);
    uint64_t v9 = *(void *)(v0 + 80);
    uint64_t v8 = *(void *)(v0 + 88);
    uint64_t v10 = *(void *)(v0 + 72);
    if (v7)
    {
      uint64_t v23 = *(void *)(v0 + 88);
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 136315138;
      *(void *)(v0 + 40) = v3;
      swift_errorRetain();
      sub_100012854((uint64_t *)&unk_10010B010);
      uint64_t v12 = sub_1000C7450();
      *(void *)(v0 + 48) = sub_1000720D0(v12, v13, &v25);
      sub_1000C7850();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "saveShare error: %s", v11, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v23, v10);
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();

      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    }
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
    return v14();
  }
}

uint64_t sub_10006828C(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  v4[21] = a1;
  v4[22] = v1;
  swift_task_dealloc();
  int v5 = (void *)v3[18];
  sub_10001326C(v3[13], (uint64_t *)&unk_10010BDD0);
  swift_bridgeObjectRelease();

  uint64_t v6 = v3[16];
  uint64_t v7 = v3[15];
  if (v1) {
    uint64_t v8 = sub_10006873C;
  }
  else {
    uint64_t v8 = sub_10006842C;
  }
  return _swift_task_switch(v8, v7, v6);
}

uint64_t sub_10006842C()
{
  uint64_t v22 = v0;
  uint64_t v1 = *(void **)(v0 + 168);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  *(void *)(v0 + 56) = v1;
  swift_retain();
  id v2 = v1;
  sub_1000C67F0();
  sub_1000C66B0();
  id v3 = v2;
  uint64_t v4 = sub_1000C66C0();
  os_log_type_t v5 = sub_1000C7690();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = *(void **)(v0 + 168);
    uint64_t v7 = *(void *)(v0 + 80);
    uint64_t v19 = *(void *)(v0 + 72);
    uint64_t v20 = *(void *)(v0 + 96);
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    *(void *)(v0 + 32) = [v6 rootRecordID];
    sub_100012854(&qword_10010CDF0);
    uint64_t v9 = sub_1000C7450();
    *(void *)(v0 + 16) = sub_1000720D0(v9, v10, &v21);
    sub_1000C7850();
    swift_bridgeObjectRelease();

    _os_log_impl((void *)&_mh_execute_header, v4, v5, "saveShare succeeded, rootRecordID: %s", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v20, v19);
  }
  else
  {
    uint64_t v11 = *(void **)(v0 + 168);
    uint64_t v12 = *(void *)(v0 + 96);
    uint64_t v13 = *(void *)(v0 + 72);
    uint64_t v14 = *(void *)(v0 + 80);

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  }
  if (swift_unknownObjectWeakLoadStrong())
  {
    sub_10000E040();
    swift_unknownObjectRelease();
  }
  uint64_t v15 = *(void **)(v0 + 168);
  unint64_t v16 = *(void **)(v0 + 136);
  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 185) = 3;
  swift_retain();
  sub_1000C67F0();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
  return v17();
}

uint64_t sub_10006873C()
{
  uint64_t v18 = v0;
  uint64_t v1 = *(void **)(v0 + 136);
  swift_release();

  uint64_t v2 = *(void *)(v0 + 176);
  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 186) = 0;
  swift_retain();
  sub_1000C67F0();
  sub_1000C66B0();
  swift_errorRetain();
  swift_errorRetain();
  id v3 = sub_1000C66C0();
  os_log_type_t v4 = sub_1000C7670();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = *(void *)(v0 + 80);
    uint64_t v15 = *(void *)(v0 + 72);
    uint64_t v16 = *(void *)(v0 + 88);
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315138;
    uint64_t v17 = v7;
    *(void *)(v0 + 40) = v2;
    swift_errorRetain();
    sub_100012854((uint64_t *)&unk_10010B010);
    uint64_t v8 = sub_1000C7450();
    *(void *)(v0 + 48) = sub_1000720D0(v8, v9, &v17);
    sub_1000C7850();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "saveShare error: %s", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v16, v15);
  }
  else
  {
    uint64_t v11 = *(void *)(v0 + 80);
    uint64_t v10 = *(void *)(v0 + 88);
    uint64_t v12 = *(void *)(v0 + 72);
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  }
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t sub_1000689D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  uint64_t v5 = sub_1000C66D0();
  v4[3] = v5;
  v4[4] = *(void *)(v5 - 8);
  v4[5] = swift_task_alloc();
  v4[6] = sub_1000C75D0();
  v4[7] = sub_1000C75C0();
  uint64_t v6 = (void *)swift_task_alloc();
  v4[8] = v6;
  void *v6 = v4;
  v6[1] = sub_100068AE0;
  return sub_100068D94();
}

uint64_t sub_100068AE0()
{
  swift_task_dealloc();
  uint64_t v1 = sub_1000C7590();
  return _swift_task_switch(sub_100068C1C, v1, v0);
}

uint64_t sub_100068C1C()
{
  swift_release();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectRelease();
  if (!Strong)
  {
    sub_1000C66B0();
    uint64_t v2 = sub_1000C66C0();
    os_log_type_t v3 = sub_1000C7690();
    if (os_log_type_enabled(v2, v3))
    {
      os_log_type_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "ext computed property--extensionController is nil--will assert", v4, 2u);
      swift_slowDealloc();
    }
    uint64_t v6 = v0[4];
    uint64_t v5 = v0[5];
    uint64_t v7 = v0[3];

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  }
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_10000AB98();
    unint64_t v9 = (void *)sub_10000A1F4();
    if (v9)
    {
      [v9 _dismissViewControllerWithError:0];
      swift_unknownObjectRelease();
    }
    swift_unknownObjectRelease();
    swift_task_dealloc();
    uint64_t v10 = (uint64_t (*)(void))v0[1];
    return v10();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100068D94()
{
  v1[4] = v0;
  uint64_t v2 = sub_1000C66D0();
  v1[5] = v2;
  v1[6] = *(void *)(v2 - 8);
  v1[7] = swift_task_alloc();
  uint64_t v3 = sub_1000C6530();
  v1[8] = v3;
  v1[9] = *(void *)(v3 - 8);
  v1[10] = swift_task_alloc();
  v1[11] = sub_100012854((uint64_t *)&unk_10010BDD0);
  v1[12] = swift_task_alloc();
  v1[13] = swift_task_alloc();
  v1[14] = swift_task_alloc();
  v1[15] = swift_task_alloc();
  v1[16] = swift_task_alloc();
  sub_1000C75D0();
  v1[17] = sub_1000C75C0();
  uint64_t v5 = sub_1000C7590();
  v1[18] = v5;
  v1[19] = v4;
  return _swift_task_switch(sub_100068F4C, v5, v4);
}

uint64_t sub_100068F4C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 160) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100069038;
  uint64_t v2 = *(void *)(v0 + 128);
  return sub_100050CBC(v2);
}

uint64_t sub_100069038()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 128);
  *(void *)(*v1 + 168) = v0;
  swift_task_dealloc();
  sub_10001326C(v3, (uint64_t *)&unk_10010BDD0);
  uint64_t v4 = *(void *)(v2 + 152);
  uint64_t v5 = *(void *)(v2 + 144);
  if (v0) {
    uint64_t v6 = sub_10006943C;
  }
  else {
    uint64_t v6 = sub_100069198;
  }
  return _swift_task_switch(v6, v5, v4);
}

uint64_t sub_100069198()
{
  swift_release();
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (v4(v1, 1, v2) == 1)
  {
    sub_10001326C(v0[15], (uint64_t *)&unk_10010BDD0);
  }
  else
  {
    uint64_t v5 = v0[13];
    uint64_t v6 = v0[14];
    uint64_t v8 = v0[9];
    uint64_t v7 = v0[10];
    uint64_t v9 = v0[8];
    (*(void (**)(uint64_t, void, uint64_t))(v8 + 32))(v7, v0[15], v9);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v6, v7, v9);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v9);
    id v10 = [self generalPasteboard];
    sub_10001A740(v6, v5, (uint64_t *)&unk_10010BDD0);
    if (v4(v5, 1, v9) == 1)
    {
      uint64_t v12 = 0;
    }
    else
    {
      uint64_t v13 = v0[13];
      uint64_t v14 = v0[8];
      uint64_t v15 = v0[9];
      sub_1000C64C0(v11);
      uint64_t v12 = v16;
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
    }
    uint64_t v17 = v0[14];
    uint64_t v19 = v0[9];
    uint64_t v18 = v0[10];
    uint64_t v20 = v0[8];
    [v10 setURL:v12];

    sub_10001326C(v17, (uint64_t *)&unk_10010BDD0);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v21 = (uint64_t (*)(void))v0[1];
  return v21();
}

uint64_t sub_10006943C()
{
  uint64_t v38 = v0;
  swift_release();
  sub_1000C66B0();
  swift_retain();
  swift_errorRetain();
  swift_retain();
  swift_errorRetain();
  uint64_t v1 = sub_1000C66C0();
  os_log_type_t v2 = sub_1000C7670();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v32 = v0[11];
    uint64_t v34 = v0[6];
    uint64_t v35 = v0[5];
    uint64_t v36 = v0[7];
    uint64_t v3 = swift_slowAlloc();
    uint64_t v33 = (void *)swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315394;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1000C67E0();
    swift_release();
    swift_release();
    uint64_t v4 = sub_1000C7450();
    v0[2] = sub_1000720D0(v4, v5, &v37);
    sub_1000C7850();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v3 + 12) = 2112;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    v0[3] = v6;
    sub_1000C7850();
    *uint64_t v33 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Failed to fetch sharing URL to copy to pasteboard %s: %@", (uint8_t *)v3, 0x16u);
    sub_100012854((uint64_t *)&unk_10010B1E0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v36, v35);
  }
  else
  {
    uint64_t v8 = v0[6];
    uint64_t v7 = v0[7];
    uint64_t v9 = v0[5];
    swift_errorRelease();
    swift_release_n();
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  }
  uint64_t v10 = v0[15];
  uint64_t v11 = v0[8];
  uint64_t v12 = v0[9];
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v13 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  if (v13(v10, 1, v11) == 1)
  {
    sub_10001326C(v0[15], (uint64_t *)&unk_10010BDD0);
  }
  else
  {
    uint64_t v14 = v0[13];
    uint64_t v15 = v0[14];
    uint64_t v17 = v0[9];
    uint64_t v16 = v0[10];
    uint64_t v18 = v0[8];
    (*(void (**)(uint64_t, void, uint64_t))(v17 + 32))(v16, v0[15], v18);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v15, v16, v18);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v18);
    id v19 = [self generalPasteboard];
    sub_10001A740(v15, v14, (uint64_t *)&unk_10010BDD0);
    if (v13(v14, 1, v18) == 1)
    {
      uint64_t v21 = 0;
    }
    else
    {
      uint64_t v22 = v0[13];
      uint64_t v23 = v0[8];
      uint64_t v24 = v0[9];
      sub_1000C64C0(v20);
      uint64_t v21 = v25;
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
    }
    uint64_t v26 = v0[14];
    uint64_t v28 = v0[9];
    uint64_t v27 = v0[10];
    uint64_t v29 = v0[8];
    objc_msgSend(v19, "setURL:", v21, v32);

    sub_10001326C(v26, (uint64_t *)&unk_10010BDD0);
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v29);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v30 = (uint64_t (*)(void))v0[1];
  return v30();
}

uint64_t sub_100069984()
{
  sub_100012854(&qword_10010CBB0);
  sub_1000130BC();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v0 = v8;
  if (v8)
  {
    uint64_t v1 = HIBYTE(v8) & 0xF;
    if ((v8 & 0x2000000000000000) == 0) {
      uint64_t v1 = v7 & 0xFFFFFFFFFFFFLL;
    }
    if (v1)
    {
      os_log_type_t v2 = (objc_class *)[self mainBundle];
      v6._countAndFlagsBits = 0x80000001000D7650;
      v9._unint64_t object = (void *)0x80000001000D7630;
      v9._countAndFlagsBits = 0xD000000000000011;
      v10.value._countAndFlagsBits = 0;
      v10.value._unint64_t object = 0;
      v3.super.Class isa = v2;
      v11._countAndFlagsBits = 0;
      v11._unint64_t object = (void *)0xE000000000000000;
      sub_1000C6320(v9, v10, v3, v11, v6);

      sub_100012854((uint64_t *)&unk_10010BD70);
      uint64_t v4 = swift_allocObject();
      *(_OWORD *)(v4 + 16) = xmmword_1000CABA0;
      *(void *)(v4 + 56) = &type metadata for String;
      *(void *)(v4 + 64) = sub_100036368();
      *(void *)(v4 + 32) = v7;
      *(void *)(v4 + 40) = v8;
      uint64_t v0 = sub_1000C7410();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return v0;
}

uint64_t sub_100069B64()
{
  uint64_t v0 = sub_100012854(&qword_10010B508);
  uint64_t v1 = __chkstk_darwin(v0 - 8);
  NSBundle v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  unint64_t v5 = (char *)&v23 - v4;
  uint64_t v6 = sub_1000C6400();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  Swift::String v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  id v10 = v24;
  if (!v24)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
LABEL_7:
    sub_10001326C((uint64_t)v5, &qword_10010B508);
    return 0;
  }
  id v11 = [v24 owner];

  id v12 = [v11 userIdentity];
  id v13 = [v12 nameComponents];

  if (v13)
  {
    sub_1000C63E0();

    uint64_t v14 = 0;
  }
  else
  {
    uint64_t v14 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v3, v14, 1, v6);
  sub_100012898((uint64_t)v3, (uint64_t)v5, &qword_10010B508);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1) {
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
  id v16 = [objc_allocWithZone((Class)NSPersonNameComponentsFormatter) init];
  Class v17 = sub_1000C63D0();
  id v18 = [v16 stringFromPersonNameComponents:v17];

  uint64_t v15 = sub_1000C7440();
  unint64_t v20 = v19;

  if ((v20 & 0x2000000000000000) != 0) {
    uint64_t v21 = HIBYTE(v20) & 0xF;
  }
  else {
    uint64_t v21 = v15 & 0xFFFFFFFFFFFFLL;
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (!v21)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v15;
}

uint64_t sub_100069EBC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  if (HIBYTE(v13._object) == 1)
  {
    uint64_t v0 = (objc_class *)[self mainBundle];
    v13._countAndFlagsBits = 0xEB00000000747865;
    v1._countAndFlagsBits = 0x6220646572616853;
    v1._unint64_t object = (void *)0xEC000000654D2079;
    v2.value._countAndFlagsBits = 0;
    v2.value._unint64_t object = 0;
    v3.super.Class isa = v0;
    v4._countAndFlagsBits = 0;
    v4._unint64_t object = (void *)0xE000000000000000;
LABEL_6:
    uint64_t v11 = sub_1000C6320(v1, v2, v3, v4, v13);

    return v11;
  }
  uint64_t v6 = sub_100069B64();
  if (!v5)
  {
    uint64_t v0 = (objc_class *)[self mainBundle];
    v13._countAndFlagsBits = 0x80000001000D75B0;
    v1._countAndFlagsBits = 0x646572616853;
    v1._unint64_t object = (void *)0xE600000000000000;
    v2.value._countAndFlagsBits = v6;
    v2.value._unint64_t object = 0;
    v3.super.Class isa = v0;
    v4._countAndFlagsBits = 0;
    v4._unint64_t object = (void *)0xE000000000000000;
    goto LABEL_6;
  }
  uint64_t v7 = v5;
  uint64_t v8 = (objc_class *)[self mainBundle];
  v13._countAndFlagsBits = 0x80000001000D75F0;
  v14._countAndFlagsBits = 0x6220646572616853;
  v14._unint64_t object = (void *)0xEC00000040252079;
  v15.value._countAndFlagsBits = 0;
  v15.value._unint64_t object = 0;
  v9.super.Class isa = v8;
  v16._countAndFlagsBits = 0;
  v16._unint64_t object = (void *)0xE000000000000000;
  sub_1000C6320(v14, v15, v9, v16, v13);

  sub_100012854((uint64_t *)&unk_10010BD70);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1000CABA0;
  *(void *)(v10 + 56) = &type metadata for String;
  *(void *)(v10 + 64) = sub_100036368();
  *(void *)(v10 + 32) = v6;
  *(void *)(v10 + 40) = v7;
  uint64_t v11 = sub_1000C7410();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_10006A144()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_100074350(v0 + 40);
  sub_100074378(*(void *)(v0 + 56), *(unsigned char *)(v0 + 64));
  uint64_t v1 = v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__isDelegateInitialized;
  uint64_t v2 = sub_100012854(&qword_10010BB60);
  NSBundle v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  uint64_t v4 = v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__executionMode;
  uint64_t v5 = sub_100012854(&qword_10010CE40);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__sharingType;
  uint64_t v7 = sub_100012854(&qword_10010CE48);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__sharingStage;
  uint64_t v9 = sub_100012854(&qword_10010CE50);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  uint64_t v10 = v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__addedAddresses;
  uint64_t v11 = sub_100012854(&qword_10010CE58);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  uint64_t v12 = v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__createOrLoadStage;
  uint64_t v13 = sub_100012854(&qword_10010CE60);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  uint64_t v14 = v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__addingAddressesStage;
  uint64_t v15 = sub_100012854(&qword_10010CE68);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  uint64_t v16 = v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__savingStage;
  uint64_t v17 = sub_100012854((uint64_t *)&unk_10010CE70);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
  uint64_t v18 = v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__alertNowShowing;
  uint64_t v19 = sub_100012854((uint64_t *)&unk_10010BB70);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
  v3(v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__isShowingAlert, v2);
  v3(v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__isFolderShare, v2);
  swift_release();
  v3(v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__isFolderSubshare, v2);
  swift_release();
  swift_release();
  uint64_t v20 = v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__folderSharingStage;
  uint64_t v21 = sub_100012854(&qword_10010CE80);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
  uint64_t v22 = v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__shareSaveStatus;
  uint64_t v23 = sub_100012854((uint64_t *)&unk_10010CE88);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v22, v23);
  swift_unknownObjectRelease();
  uint64_t v24 = v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__sharingOptionsAllowedFromSPI;
  uint64_t v25 = sub_100012854((uint64_t *)&unk_10010C500);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(v24, v25);
  uint64_t v26 = v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__yourNameAndEmail;
  uint64_t v27 = sub_100012854(&qword_10010CE98);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v26, v27);
  uint64_t v28 = v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__sharedFileOrFolderURL;
  uint64_t v29 = sub_100012854(&qword_10010CEA0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8))(v28, v29);
  uint64_t v30 = v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__itemUTI;
  uint64_t v31 = sub_100012854(&qword_10010B6F0);
  uint64_t v32 = *(void (**)(uint64_t, uint64_t))(*(void *)(v31 - 8) + 8);
  v32(v30, v31);
  v3(v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__isShareRoot, v2);
  uint64_t v33 = v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__thumbnail;
  uint64_t v34 = sub_100012854(&qword_10010BB80);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v34 - 8) + 8))(v33, v34);
  uint64_t v35 = v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__thumbnailFromCloudKitSPI;
  uint64_t v36 = sub_100012854(&qword_10010CEA8);
  uint64_t v37 = *(void (**)(uint64_t, uint64_t))(*(void *)(v36 - 8) + 8);
  v37(v35, v36);
  v37(v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__thumbnailFromDocumentSPI, v36);
  uint64_t v38 = v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__itemTitle;
  uint64_t v39 = sub_100012854(&qword_10010CEB0);
  id v40 = *(void (**)(uint64_t, uint64_t))(*(void *)(v39 - 8) + 8);
  v40(v38, v39);
  v32(v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__sourceAppBundleID, v31);
  v40(v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__sectionTitleForAuxiliaryToggles, v39);
  v40(v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__primaryCheckboxTitle, v39);
  v40(v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__secondaryCheckboxTitle, v39);
  v3(v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__primaryCheckboxState, v2);
  v3(v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__secondaryCheckboxState, v2);
  uint64_t v41 = v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__ckContainerIdentifier;
  uint64_t v42 = sub_100012854(&qword_10010CEB8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v42 - 8) + 8))(v41, v42);
  v40(v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__helpAnchor, v39);
  uint64_t v43 = v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__participantDetails;
  uint64_t v44 = sub_100012854(&qword_10010CEC0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v44 - 8) + 8))(v43, v44);
  swift_release();

  return v0;
}

uint64_t sub_10006A920()
{
  sub_10006A144();

  return swift_deallocClassInstance();
}

void sub_10006A978()
{
  NSString v0 = sub_1000C7400();
  id v1 = [self imageNamed:v0];

  if (!v1) {
    id v1 = [objc_allocWithZone((Class)UIImage) init];
  }
  qword_10010C9B0 = (uint64_t)v1;
}

uint64_t sub_10006AA0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = sub_1000C75D0();
  v5[3] = sub_1000C75C0();
  uint64_t v7 = (void *)swift_task_alloc();
  v5[4] = v7;
  void *v7 = v5;
  v7[1] = sub_10006AAD0;
  return sub_100063FA8(a5, 1, 0);
}

uint64_t sub_10006AAD0()
{
  *(void *)(*(void *)v1 + 40) = v0;
  swift_task_dealloc();
  uint64_t v3 = sub_1000C7590();
  if (v0) {
    uint64_t v4 = sub_1000760F4;
  }
  else {
    uint64_t v4 = sub_100076104;
  }
  return _swift_task_switch(v4, v3, v2);
}

uint64_t sub_10006AC2C()
{
  v0[2] = sub_1000C75D0();
  v0[3] = sub_1000C75C0();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[4] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10006ACD8;
  return sub_100067C24();
}

uint64_t sub_10006ACD8()
{
  *(void *)(*(void *)v1 + 40) = v0;
  swift_task_dealloc();
  uint64_t v3 = sub_1000C7590();
  if (v0) {
    uint64_t v4 = sub_10006AE98;
  }
  else {
    uint64_t v4 = sub_10006AE34;
  }
  return _swift_task_switch(v4, v3, v2);
}

uint64_t sub_10006AE34()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10006AE98()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10006AEFC()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    return sub_1000C67F0();
  }
  return result;
}

uint64_t sub_10006AF7C()
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1000C67F0();
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100067284(6u, 0);
    return swift_release();
  }
  return result;
}

uint64_t sub_10006B03C()
{
  uint64_t v1 = (uint64_t *)(*(void *)(v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__rootFolderURL)
                 + *(void *)(**(void **)(v0
                                           + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__rootFolderURL)
                             + 104));
  uint64_t v2 = *v1;
  *uint64_t v1 = (uint64_t)sub_1000743DC;
  v1[1] = v0;
  swift_retain();
  sub_100013344(v2);
  uint64_t v3 = (uint64_t *)(*(void *)(v0
                             + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__rootFolderTitle)
                 + *(void *)(**(void **)(v0
                                           + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__rootFolderTitle)
                             + 104));
  uint64_t v4 = *v3;
  *uint64_t v3 = (uint64_t)sub_1000743E0;
  v3[1] = v0;
  swift_retain();
  sub_100013344(v4);
  uint64_t v5 = (uint64_t *)(*(void *)(v0
                             + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__ckFolderSubitemName)
                 + *(void *)(**(void **)(v0
                                           + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__ckFolderSubitemName)
                             + 104));
  uint64_t v6 = *v5;
  *uint64_t v5 = (uint64_t)sub_1000743E0;
  v5[1] = v0;
  swift_retain();

  return sub_100013344(v6);
}

uint64_t sub_10006B15C(uint64_t a1)
{
  v2[13] = a1;
  v2[14] = v1;
  uint64_t v3 = sub_1000C66D0();
  v2[15] = v3;
  v2[16] = *(void *)(v3 - 8);
  v2[17] = swift_task_alloc();
  sub_100012854((uint64_t *)&unk_10010BDD0);
  v2[18] = swift_task_alloc();
  sub_1000C75D0();
  v2[19] = sub_1000C75C0();
  uint64_t v5 = sub_1000C7590();
  v2[20] = v5;
  v2[21] = v4;
  return _swift_task_switch(sub_10006B280, v5, v4);
}

uint64_t sub_10006B280()
{
  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 58) = 2;
  swift_retain();
  sub_1000C67F0();
  *(void *)(v0 + 176) = BRCloudDocsErrorDomain;
  *(unsigned char *)(v0 + 234) = 0;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  if (*(unsigned char *)(v0 + 63) == 1)
  {
    uint64_t v1 = (void *)swift_task_alloc();
    *(void *)(v0 + 184) = v1;
    *uint64_t v1 = v0;
    v1[1] = sub_10006B688;
    return sub_10006137C();
  }
  else
  {
    swift_getKeyPath();
    swift_getKeyPath();
    *(unsigned char *)(v0 + 57) = 0;
    swift_retain();
    sub_1000C67F0();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1000C67E0();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v3 = *(void **)(v0 + 88);
    if (v3)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      sub_1000C67E0();
      swift_release();
      swift_release();
      int v4 = *(unsigned __int8 *)(v0 + 232);
      swift_release();
      if (v4 == 1)
      {
        swift_getKeyPath();
        swift_getKeyPath();
        swift_retain();
        sub_1000C67E0();
        swift_release();
        swift_release();
        uint64_t v5 = 1;
        switch(*(unsigned char *)(v0 + 233))
        {
          case 1:
            uint64_t v5 = 3;
            goto LABEL_11;
          case 2:
            uint64_t v5 = 2;
            goto LABEL_11;
          case 3:
            return sub_1000C7980();
          default:
LABEL_11:
            swift_release();
            break;
        }
      }
      else
      {
        uint64_t v5 = 1;
      }
      [v3 setPublicPermission:v5];
    }
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 200) = v6;
    void *v6 = v0;
    v6[1] = sub_10006BAA0;
    return sub_100067C24();
  }
}

uint64_t sub_10006B688()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 192) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 168);
  uint64_t v4 = *(void *)(v2 + 160);
  if (v0) {
    uint64_t v5 = sub_10006C3B8;
  }
  else {
    uint64_t v5 = sub_10006B7C4;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10006B7C4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 57) = 0;
  swift_retain();
  sub_1000C67F0();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = *(void **)(v0 + 88);
  if (v1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1000C67E0();
    swift_release();
    swift_release();
    int v2 = *(unsigned __int8 *)(v0 + 232);
    swift_release();
    if (v2 == 1)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      sub_1000C67E0();
      swift_release();
      swift_release();
      uint64_t v3 = 1;
      switch(*(unsigned char *)(v0 + 233))
      {
        case 1:
          uint64_t v3 = 3;
          goto LABEL_7;
        case 2:
          uint64_t v3 = 2;
          goto LABEL_7;
        case 3:
          return sub_1000C7980();
        default:
LABEL_7:
          swift_release();
          break;
      }
    }
    else
    {
      uint64_t v3 = 1;
    }
    [v1 setPublicPermission:v3];
  }
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 200) = v4;
  void *v4 = v0;
  v4[1] = sub_10006BAA0;
  return sub_100067C24();
}

uint64_t sub_10006BAA0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 208) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 168);
  uint64_t v4 = *(void *)(v2 + 160);
  if (v0) {
    uint64_t v5 = sub_10006CFDC;
  }
  else {
    uint64_t v5 = sub_10006BBDC;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10006BBDC()
{
  char v1 = *(unsigned char *)(v0 + 234);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  int v2 = *(unsigned __int8 *)(v0 + 60);
  if (v2 == 4) {
    BOOL v3 = v1;
  }
  else {
    BOOL v3 = v2 != 2;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  if (*(unsigned char *)(v0 + 61) == 9)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1000C67E0();
    swift_release();
    swift_release();
    uint64_t v4 = *(void **)(v0 + 72);
    swift_release();
    if (!v4) {
      goto LABEL_8;
    }

    if (v3)
    {
      BOOL v3 = 1;
LABEL_8:
      *(unsigned char *)(v0 + 234) = v3;
      swift_getKeyPath();
      swift_getKeyPath();
      sub_1000C67E0();
      swift_release();
      swift_release();
      if (*(unsigned char *)(v0 + 63) == 1)
      {
        uint64_t v5 = (void *)swift_task_alloc();
        *(void *)(v0 + 184) = v5;
        *uint64_t v5 = v0;
        v5[1] = sub_10006B688;
        return sub_10006137C();
      }
      else
      {
        swift_getKeyPath();
        swift_getKeyPath();
        *(unsigned char *)(v0 + 57) = 0;
        swift_retain();
        sub_1000C67F0();
        swift_getKeyPath();
        swift_getKeyPath();
        swift_retain();
        sub_1000C67E0();
        swift_release();
        swift_release();
        swift_release();
        uint64_t v9 = *(void **)(v0 + 88);
        if (v9)
        {
          swift_getKeyPath();
          swift_getKeyPath();
          swift_retain();
          sub_1000C67E0();
          swift_release();
          swift_release();
          int v10 = *(unsigned __int8 *)(v0 + 232);
          swift_release();
          if (v10 == 1)
          {
            swift_getKeyPath();
            swift_getKeyPath();
            swift_retain();
            sub_1000C67E0();
            swift_release();
            swift_release();
            uint64_t v11 = 1;
            switch(*(unsigned char *)(v0 + 233))
            {
              case 1:
                uint64_t v11 = 3;
                goto LABEL_21;
              case 2:
                uint64_t v11 = 2;
                goto LABEL_21;
              case 3:
                return sub_1000C7980();
              default:
LABEL_21:
                swift_release();
                break;
            }
          }
          else
          {
            uint64_t v11 = 1;
          }
          [v9 setPublicPermission:v11];
        }
        uint64_t v12 = (void *)swift_task_alloc();
        *(void *)(v0 + 200) = v12;
        void *v12 = v0;
        v12[1] = sub_10006BAA0;
        return sub_100067C24();
      }
    }
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 216) = v7;
  void *v7 = v0;
  v7[1] = sub_10006C17C;
  uint64_t v8 = *(void *)(v0 + 144);
  return sub_100050CBC(v8);
}

uint64_t sub_10006C17C()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 144);
  *(void *)(*v1 + 224) = v0;
  swift_task_dealloc();
  sub_10001326C(v3, (uint64_t *)&unk_10010BDD0);
  uint64_t v4 = *(void *)(v2 + 168);
  uint64_t v5 = *(void *)(v2 + 160);
  if (v0) {
    uint64_t v6 = sub_10006DC00;
  }
  else {
    uint64_t v6 = sub_10006C2DC;
  }
  return _swift_task_switch(v6, v5, v4);
}

uint64_t sub_10006C2DC()
{
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 62) = 4;
  swift_retain();
  sub_1000C67F0();
  uint64_t v1 = *(void *)(v0 + 104);
  swift_task_dealloc();
  swift_task_dealloc();
  *(void *)(v1 + 32) = 0;
  *(_OWORD *)uint64_t v1 = 0u;
  *(_OWORD *)(v1 + 16) = 0u;
  *(unsigned char *)(v1 + 40) = -1;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10006C3B8()
{
  uint64_t v55 = v0;
  uint64_t v1 = *(void *)(v0 + 192);
  *(void *)(v0 + 96) = v1;
  swift_errorRetain();
  sub_100012854((uint64_t *)&unk_10010B010);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_release();
    swift_errorRelease();
    sub_1000C66B0();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v12 = sub_1000C66C0();
    os_log_type_t v13 = sub_1000C7670();
    BOOL v14 = os_log_type_enabled(v12, v13);
    uint64_t v16 = *(void *)(v0 + 128);
    uint64_t v15 = *(void *)(v0 + 136);
    uint64_t v17 = *(void *)(v0 + 120);
    if (v14)
    {
      uint64_t v53 = *(void *)(v0 + 136);
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v54 = swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 136315138;
      *(void *)(v0 + 80) = v1;
      swift_errorRetain();
      sub_100012854((uint64_t *)&unk_10010B010);
      uint64_t v19 = sub_1000C7450();
      *(void *)(v0 + 64) = sub_1000720D0(v19, v20, &v54);
      sub_1000C7850();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "iOSPrepareToShare error: %s", v18, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v53, v17);
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();

      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    }
    uint64_t v3 = 0xD000000000000013;
    swift_errorRelease();
    uint64_t v4 = 0;
    uint64_t v21 = 0xD000000000000017;
    unint64_t v22 = 0x80000001000D7110;
    uint64_t v2 = 0x80000001000D70F0;
    LOBYTE(v5) = 11;
    goto LABEL_44;
  }
  swift_errorRelease();
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v4 = *(void **)(v0 + 32);
  uint64_t v51 = *(void *)(v0 + 40);
  uint64_t v52 = *(void *)(v0 + 48);
  int v5 = *(unsigned __int8 *)(v0 + 56);
  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 59) = 5;
  swift_retain();
  sub_1000C67F0();
  if (v5 != 4)
  {
    if (v5 == 1)
    {
      if (v4)
      {
        swift_bridgeObjectRetain();
        id v6 = v4;
        swift_bridgeObjectRetain();
        id v7 = [v6 domain];
        uint64_t v8 = sub_1000C7440();
        uint64_t v10 = v9;

        if (v8 == sub_1000C7440() && v10 == v11)
        {
          swift_bridgeObjectRelease_n();
        }
        else
        {
          char v29 = sub_1000C7A50();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v29 & 1) == 0)
          {

            uint64_t v31 = v52;
            uint64_t v32 = v51;
LABEL_25:
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            LOBYTE(v5) = 1;
            sub_10002376C(v3, v2, v4, v32, v31, 1u);
            swift_errorRelease();
            uint64_t v21 = 0;
            unint64_t v22 = 0;
            uint64_t v2 = 0x80000001000D70F0;
            uint64_t v3 = 0xD000000000000013;
            goto LABEL_44;
          }
        }
        id v30 = [v6 code];

        uint64_t v31 = v52;
        uint64_t v32 = v51;
        if (v30 == (id)7)
        {
          sub_10002376C(v3, v2, v4, v51, v52, 1u);
LABEL_28:
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          goto LABEL_29;
        }
        goto LABEL_25;
      }
      __break(1u);
LABEL_60:
      __break(1u);
      JUMPOUT(0x10006CFCCLL);
    }
    swift_release();
    swift_errorRelease();
    unint64_t v22 = v52;
    uint64_t v21 = v51;
LABEL_44:
    uint64_t v45 = *(void *)(v0 + 104);
    swift_task_dealloc();
    swift_task_dealloc();
    *(void *)uint64_t v45 = v3;
    *(void *)(v45 + 8) = v2;
    *(void *)(v45 + 16) = v4;
    *(void *)(v45 + 24) = v21;
    *(void *)(v45 + 32) = v22;
    *(unsigned char *)(v45 + 40) = v5;
    uint64_t v46 = *(uint64_t (**)(void))(v0 + 8);
    return v46();
  }
  if (!v4) {
    goto LABEL_60;
  }
  swift_bridgeObjectRetain();
  id v23 = v4;
  swift_bridgeObjectRetain();
  id v24 = [v23 domain];
  uint64_t v25 = sub_1000C7440();
  uint64_t v27 = v26;

  if (v25 == sub_1000C7440() && v27 == v28)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v33 = sub_1000C7A50();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v33 & 1) == 0)
    {

      uint64_t v21 = v51;
      goto LABEL_27;
    }
  }
  id v34 = [v23 code];

  uint64_t v21 = v51;
  if (v34 != (id)7)
  {
LABEL_27:
    uint64_t v35 = self;
    id v6 = v23;
    uint64_t v36 = (void *)sub_1000C6480();
    LOBYTE(v35) = [(id)v35 shouldRetryShareSaveOnError:v36];

    unint64_t v22 = v52;
    sub_10002376C(v3, v2, v4, v21, v52, 4u);

    if (v35) {
      goto LABEL_28;
    }
    swift_release();
    swift_errorRelease();
    LOBYTE(v5) = 4;
    goto LABEL_44;
  }
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_10002376C(v3, v2, v4, v51, v52, 4u);
LABEL_29:
  swift_errorRelease();
  char v37 = *(unsigned char *)(v0 + 234);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  int v38 = *(unsigned __int8 *)(v0 + 60);
  if (v38 == 4) {
    BOOL v39 = v37;
  }
  else {
    BOOL v39 = v38 != 2;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  if (*(unsigned char *)(v0 + 61) == 9)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1000C67E0();
    swift_release();
    swift_release();
    id v40 = *(void **)(v0 + 72);
    swift_release();
    if (!v40) {
      goto LABEL_36;
    }

    if (v39)
    {
      BOOL v39 = 1;
LABEL_36:
      *(unsigned char *)(v0 + 234) = v39;
      swift_getKeyPath();
      swift_getKeyPath();
      sub_1000C67E0();
      swift_release();
      swift_release();
      if (*(unsigned char *)(v0 + 63) == 1)
      {
        uint64_t v41 = (void *)swift_task_alloc();
        *(void *)(v0 + 184) = v41;
        *uint64_t v41 = v0;
        v41[1] = sub_10006B688;
        return sub_10006137C();
      }
      else
      {
        swift_getKeyPath();
        swift_getKeyPath();
        *(unsigned char *)(v0 + 57) = 0;
        swift_retain();
        sub_1000C67F0();
        swift_getKeyPath();
        swift_getKeyPath();
        swift_retain();
        sub_1000C67E0();
        swift_release();
        swift_release();
        swift_release();
        uint64_t v47 = *(void **)(v0 + 88);
        if (v47)
        {
          swift_getKeyPath();
          swift_getKeyPath();
          swift_retain();
          sub_1000C67E0();
          swift_release();
          swift_release();
          int v48 = *(unsigned __int8 *)(v0 + 232);
          swift_release();
          if (v48 == 1)
          {
            swift_getKeyPath();
            swift_getKeyPath();
            swift_retain();
            sub_1000C67E0();
            swift_release();
            swift_release();
            uint64_t v49 = 1;
            switch(*(unsigned char *)(v0 + 233))
            {
              case 1:
                uint64_t v49 = 3;
                goto LABEL_53;
              case 2:
                uint64_t v49 = 2;
                goto LABEL_53;
              case 3:
                return sub_1000C7980();
              default:
LABEL_53:
                swift_release();
                break;
            }
          }
          else
          {
            uint64_t v49 = 1;
          }
          [v47 setPublicPermission:v49];
        }
        unint64_t v50 = (void *)swift_task_alloc();
        *(void *)(v0 + 200) = v50;
        *unint64_t v50 = v0;
        v50[1] = sub_10006BAA0;
        return sub_100067C24();
      }
    }
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  uint64_t v43 = (void *)swift_task_alloc();
  *(void *)(v0 + 216) = v43;
  void *v43 = v0;
  v43[1] = sub_10006C17C;
  uint64_t v44 = *(void *)(v0 + 144);
  return sub_100050CBC(v44);
}

uint64_t sub_10006CFDC()
{
  uint64_t v55 = v0;
  uint64_t v1 = *(void *)(v0 + 208);
  *(void *)(v0 + 96) = v1;
  swift_errorRetain();
  sub_100012854((uint64_t *)&unk_10010B010);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_release();
    swift_errorRelease();
    sub_1000C66B0();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v12 = sub_1000C66C0();
    os_log_type_t v13 = sub_1000C7670();
    BOOL v14 = os_log_type_enabled(v12, v13);
    uint64_t v16 = *(void *)(v0 + 128);
    uint64_t v15 = *(void *)(v0 + 136);
    uint64_t v17 = *(void *)(v0 + 120);
    if (v14)
    {
      uint64_t v53 = *(void *)(v0 + 136);
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v54 = swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 136315138;
      *(void *)(v0 + 80) = v1;
      swift_errorRetain();
      sub_100012854((uint64_t *)&unk_10010B010);
      uint64_t v19 = sub_1000C7450();
      *(void *)(v0 + 64) = sub_1000720D0(v19, v20, &v54);
      sub_1000C7850();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "iOSPrepareToShare error: %s", v18, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v53, v17);
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();

      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    }
    uint64_t v3 = 0xD000000000000013;
    swift_errorRelease();
    uint64_t v4 = 0;
    uint64_t v21 = 0xD000000000000017;
    unint64_t v22 = 0x80000001000D7110;
    uint64_t v2 = 0x80000001000D70F0;
    LOBYTE(v5) = 11;
    goto LABEL_44;
  }
  swift_errorRelease();
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v4 = *(void **)(v0 + 32);
  uint64_t v51 = *(void *)(v0 + 40);
  uint64_t v52 = *(void *)(v0 + 48);
  int v5 = *(unsigned __int8 *)(v0 + 56);
  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 59) = 5;
  swift_retain();
  sub_1000C67F0();
  if (v5 != 4)
  {
    if (v5 == 1)
    {
      if (v4)
      {
        swift_bridgeObjectRetain();
        id v6 = v4;
        swift_bridgeObjectRetain();
        id v7 = [v6 domain];
        uint64_t v8 = sub_1000C7440();
        uint64_t v10 = v9;

        if (v8 == sub_1000C7440() && v10 == v11)
        {
          swift_bridgeObjectRelease_n();
        }
        else
        {
          char v29 = sub_1000C7A50();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v29 & 1) == 0)
          {

            uint64_t v31 = v52;
            uint64_t v32 = v51;
LABEL_25:
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            LOBYTE(v5) = 1;
            sub_10002376C(v3, v2, v4, v32, v31, 1u);
            swift_errorRelease();
            uint64_t v21 = 0;
            unint64_t v22 = 0;
            uint64_t v2 = 0x80000001000D70F0;
            uint64_t v3 = 0xD000000000000013;
            goto LABEL_44;
          }
        }
        id v30 = [v6 code];

        uint64_t v31 = v52;
        uint64_t v32 = v51;
        if (v30 == (id)7)
        {
          sub_10002376C(v3, v2, v4, v51, v52, 1u);
LABEL_28:
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          goto LABEL_29;
        }
        goto LABEL_25;
      }
      __break(1u);
LABEL_60:
      __break(1u);
      JUMPOUT(0x10006DBF0);
    }
    swift_release();
    swift_errorRelease();
    unint64_t v22 = v52;
    uint64_t v21 = v51;
LABEL_44:
    uint64_t v45 = *(void *)(v0 + 104);
    swift_task_dealloc();
    swift_task_dealloc();
    *(void *)uint64_t v45 = v3;
    *(void *)(v45 + 8) = v2;
    *(void *)(v45 + 16) = v4;
    *(void *)(v45 + 24) = v21;
    *(void *)(v45 + 32) = v22;
    *(unsigned char *)(v45 + 40) = v5;
    uint64_t v46 = *(uint64_t (**)(void))(v0 + 8);
    return v46();
  }
  if (!v4) {
    goto LABEL_60;
  }
  swift_bridgeObjectRetain();
  id v23 = v4;
  swift_bridgeObjectRetain();
  id v24 = [v23 domain];
  uint64_t v25 = sub_1000C7440();
  uint64_t v27 = v26;

  if (v25 == sub_1000C7440() && v27 == v28)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v33 = sub_1000C7A50();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v33 & 1) == 0)
    {

      uint64_t v21 = v51;
      goto LABEL_27;
    }
  }
  id v34 = [v23 code];

  uint64_t v21 = v51;
  if (v34 != (id)7)
  {
LABEL_27:
    uint64_t v35 = self;
    id v6 = v23;
    uint64_t v36 = (void *)sub_1000C6480();
    LOBYTE(v35) = [(id)v35 shouldRetryShareSaveOnError:v36];

    unint64_t v22 = v52;
    sub_10002376C(v3, v2, v4, v21, v52, 4u);

    if (v35) {
      goto LABEL_28;
    }
    swift_release();
    swift_errorRelease();
    LOBYTE(v5) = 4;
    goto LABEL_44;
  }
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_10002376C(v3, v2, v4, v51, v52, 4u);
LABEL_29:
  swift_errorRelease();
  char v37 = *(unsigned char *)(v0 + 234);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  int v38 = *(unsigned __int8 *)(v0 + 60);
  if (v38 == 4) {
    BOOL v39 = v37;
  }
  else {
    BOOL v39 = v38 != 2;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  if (*(unsigned char *)(v0 + 61) == 9)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1000C67E0();
    swift_release();
    swift_release();
    id v40 = *(void **)(v0 + 72);
    swift_release();
    if (!v40) {
      goto LABEL_36;
    }

    if (v39)
    {
      BOOL v39 = 1;
LABEL_36:
      *(unsigned char *)(v0 + 234) = v39;
      swift_getKeyPath();
      swift_getKeyPath();
      sub_1000C67E0();
      swift_release();
      swift_release();
      if (*(unsigned char *)(v0 + 63) == 1)
      {
        uint64_t v41 = (void *)swift_task_alloc();
        *(void *)(v0 + 184) = v41;
        *uint64_t v41 = v0;
        v41[1] = sub_10006B688;
        return sub_10006137C();
      }
      else
      {
        swift_getKeyPath();
        swift_getKeyPath();
        *(unsigned char *)(v0 + 57) = 0;
        swift_retain();
        sub_1000C67F0();
        swift_getKeyPath();
        swift_getKeyPath();
        swift_retain();
        sub_1000C67E0();
        swift_release();
        swift_release();
        swift_release();
        uint64_t v47 = *(void **)(v0 + 88);
        if (v47)
        {
          swift_getKeyPath();
          swift_getKeyPath();
          swift_retain();
          sub_1000C67E0();
          swift_release();
          swift_release();
          int v48 = *(unsigned __int8 *)(v0 + 232);
          swift_release();
          if (v48 == 1)
          {
            swift_getKeyPath();
            swift_getKeyPath();
            swift_retain();
            sub_1000C67E0();
            swift_release();
            swift_release();
            uint64_t v49 = 1;
            switch(*(unsigned char *)(v0 + 233))
            {
              case 1:
                uint64_t v49 = 3;
                goto LABEL_53;
              case 2:
                uint64_t v49 = 2;
                goto LABEL_53;
              case 3:
                return sub_1000C7980();
              default:
LABEL_53:
                swift_release();
                break;
            }
          }
          else
          {
            uint64_t v49 = 1;
          }
          [v47 setPublicPermission:v49];
        }
        unint64_t v50 = (void *)swift_task_alloc();
        *(void *)(v0 + 200) = v50;
        *unint64_t v50 = v0;
        v50[1] = sub_10006BAA0;
        return sub_100067C24();
      }
    }
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  uint64_t v43 = (void *)swift_task_alloc();
  *(void *)(v0 + 216) = v43;
  void *v43 = v0;
  v43[1] = sub_10006C17C;
  uint64_t v44 = *(void *)(v0 + 144);
  return sub_100050CBC(v44);
}

uint64_t sub_10006DC00()
{
  uint64_t v18 = v0;
  swift_release();
  uint64_t v1 = v0[28];
  sub_1000C66B0();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = sub_1000C66C0();
  os_log_type_t v3 = sub_1000C7670();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[16];
    uint64_t v15 = v0[15];
    uint64_t v16 = v0[17];
    int v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    *(_DWORD *)int v5 = 136315138;
    uint64_t v17 = v6;
    v0[10] = v1;
    swift_errorRetain();
    sub_100012854((uint64_t *)&unk_10010B010);
    uint64_t v7 = sub_1000C7450();
    v0[8] = sub_1000720D0(v7, v8, &v17);
    sub_1000C7850();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "iOSPrepareToShare error: %s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v16, v15);
  }
  else
  {
    uint64_t v10 = v0[16];
    uint64_t v9 = v0[17];
    uint64_t v11 = v0[15];
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  }
  swift_errorRelease();
  uint64_t v12 = v0[13];
  swift_task_dealloc();
  swift_task_dealloc();
  *(void *)uint64_t v12 = 0xD000000000000013;
  *(void *)(v12 + 8) = 0x80000001000D70F0;
  *(_OWORD *)(v12 + 16) = xmmword_1000CE610;
  *(void *)(v12 + 32) = 0x80000001000D7110;
  *(unsigned char *)(v12 + 40) = 11;
  os_log_type_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_10006DE7C()
{
  v1[12] = v0;
  sub_1000C75D0();
  v1[13] = sub_1000C75C0();
  uint64_t v3 = sub_1000C7590();
  v1[14] = v3;
  v1[15] = v2;
  return _swift_task_switch(sub_10006DF14, v3, v2);
}

uint64_t sub_10006DF14()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  char v1 = *(unsigned char *)(v0 + 57) & 1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v2;
  void *v2 = v0;
  v2[1] = sub_10006E014;
  return sub_1000630B8(v1);
}

uint64_t sub_10006E014()
{
  uint64_t v2 = (void *)*v1;
  v2[17] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[14];
    uint64_t v4 = v2[15];
    return _swift_task_switch(sub_10006E318, v3, v4);
  }
  else
  {
    uint64_t v5 = (void *)swift_task_alloc();
    v2[18] = v5;
    *uint64_t v5 = v2;
    v5[1] = sub_10006E17C;
    return sub_100067C24();
  }
}

uint64_t sub_10006E17C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 152) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 120);
  uint64_t v4 = *(void *)(v2 + 112);
  if (v0) {
    uint64_t v5 = sub_10006E578;
  }
  else {
    uint64_t v5 = sub_10006E2B8;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10006E2B8()
{
  swift_release();
  char v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_10006E318()
{
  id v1 = (id)v0[17];
  v0[10] = v1;
  swift_errorRetain();
  sub_100012854((uint64_t *)&unk_10010B010);
  if (!swift_dynamicCast()) {
    goto LABEL_6;
  }
  uint64_t v2 = (void *)v0[4];
  int v3 = *((unsigned __int8 *)v0 + 56);
  sub_1000C7440();
  id v1 = objc_allocWithZone((Class)NSError);
  NSString v4 = sub_1000C7400();
  swift_bridgeObjectRelease();
  uint64_t v0 = [v1 initWithDomain:v4 code:12 userInfo:0];

  if (v3 != 4)
  {
    if (v3 != 1)
    {
LABEL_9:
      sub_1000C78D0(20);
      swift_bridgeObjectRelease();
      id v5 = [v0 description];
      uint64_t v6 = sub_1000C7440();
      unint64_t v8 = v7;

      v10._countAndFlagsBits = v6;
      v10._unint64_t object = v8;
      sub_1000C74B0(v10);
      swift_bridgeObjectRelease();

      goto LABEL_10;
    }

    if (!v2)
    {
      __break(1u);
LABEL_6:
      swift_errorRelease();
      sub_1000C78D0(28);
      v0[8] = 0;
      v0[9] = 0xE000000000000000;
      v9._countAndFlagsBits = 0xD00000000000001ALL;
      v9._unint64_t object = (void *)0x80000001000D6F80;
      sub_1000C74B0(v9);
      v0[11] = v1;
      sub_1000C7960();
LABEL_10:
      sub_1000C7980();
      return;
    }
LABEL_8:
    uint64_t v0 = v2;
    goto LABEL_9;
  }

  if (v2) {
    goto LABEL_8;
  }
  __break(1u);
}

void sub_10006E578()
{
  id v1 = (id)v0[19];
  v0[10] = v1;
  swift_errorRetain();
  sub_100012854((uint64_t *)&unk_10010B010);
  if (!swift_dynamicCast()) {
    goto LABEL_6;
  }
  uint64_t v2 = (void *)v0[4];
  int v3 = *((unsigned __int8 *)v0 + 56);
  sub_1000C7440();
  id v1 = objc_allocWithZone((Class)NSError);
  NSString v4 = sub_1000C7400();
  swift_bridgeObjectRelease();
  uint64_t v0 = [v1 initWithDomain:v4 code:12 userInfo:0];

  if (v3 != 4)
  {
    if (v3 != 1)
    {
LABEL_9:
      sub_1000C78D0(20);
      swift_bridgeObjectRelease();
      id v5 = [v0 description];
      uint64_t v6 = sub_1000C7440();
      unint64_t v8 = v7;

      v10._countAndFlagsBits = v6;
      v10._unint64_t object = v8;
      sub_1000C74B0(v10);
      swift_bridgeObjectRelease();

      goto LABEL_10;
    }

    if (!v2)
    {
      __break(1u);
LABEL_6:
      swift_errorRelease();
      sub_1000C78D0(28);
      v0[8] = 0;
      v0[9] = 0xE000000000000000;
      v9._countAndFlagsBits = 0xD00000000000001ALL;
      v9._unint64_t object = (void *)0x80000001000D6F80;
      sub_1000C74B0(v9);
      v0[11] = v1;
      sub_1000C7960();
LABEL_10:
      sub_1000C7980();
      return;
    }
LABEL_8:
    uint64_t v0 = v2;
    goto LABEL_9;
  }

  if (v2) {
    goto LABEL_8;
  }
  __break(1u);
}

uint64_t sub_10006E7D8()
{
  v1[20] = v0;
  sub_100012854((uint64_t *)&unk_10010BDD0);
  v1[21] = swift_task_alloc();
  uint64_t v2 = sub_1000C6530();
  v1[22] = v2;
  v1[23] = *(void *)(v2 - 8);
  v1[24] = swift_task_alloc();
  sub_1000C75D0();
  v1[25] = sub_1000C75C0();
  uint64_t v4 = sub_1000C7590();
  v1[26] = v4;
  v1[27] = v3;
  return _swift_task_switch(sub_10006E8FC, v4, v3);
}

uint64_t sub_10006E8FC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v1 = *(void *)(v0 + 120);
  if ((*(void *)(v0 + 96) || *(void *)(v0 + 104) != 0xE000000000000000) && (sub_1000C7A50() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  if (!v2 && v1 == 0xE000000000000000)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  char v3 = sub_1000C7A50();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v3 & 1) == 0)
  {
LABEL_13:
    swift_release();
    goto LABEL_14;
  }
LABEL_8:
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  if ((*(unsigned char *)(v0 + 384) & 0xFE) == 8)
  {
    uint64_t v4 = *(void *)(v0 + 176);
    uint64_t v5 = *(void *)(v0 + 184);
    uint64_t v6 = *(void *)(v0 + 168);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1000C67E0();
    swift_release();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4) == 1)
    {
      uint64_t v7 = *(void *)(v0 + 168);
      swift_release();
      sub_10001326C(v7, (uint64_t *)&unk_10010BDD0);
LABEL_14:
      swift_task_dealloc();
      swift_task_dealloc();
      Swift::String v9 = *(uint64_t (**)(void))(v0 + 8);
      return v9();
    }
    (*(void (**)(void, void, void))(*(void *)(v0 + 184) + 32))(*(void *)(v0 + 192), *(void *)(v0 + 168), *(void *)(v0 + 176));
    uint64_t v11 = (void *)swift_task_alloc();
    *(void *)(v0 + 280) = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_10006F0A0;
    uint64_t v12 = *(void *)(v0 + 192);
    return sub_100014A34(v0 + 16, v12);
  }
  else
  {
    unint64_t v8 = sub_1000392E8();
    *(void *)(v0 + 224) = v8;
    uint64_t v13 = (uint64_t)v8;
    uint64_t v15 = (uint64_t (*)(uint64_t))((char *)&dword_10010C778 + dword_10010C778);
    BOOL v14 = (void *)swift_task_alloc();
    *(void *)(v0 + 232) = v14;
    void *v14 = v0;
    v14[1] = sub_10006ED1C;
    return v15(v13);
  }
}

uint64_t sub_10006ED1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = *v5;
  *(void *)(*v5 + 240) = v4;
  swift_task_dealloc();
  if (v4)
  {
    uint64_t v11 = *(void *)(v10 + 208);
    uint64_t v12 = *(void *)(v10 + 216);
    uint64_t v13 = sub_10006EFF8;
  }
  else
  {

    *(void *)(v10 + 248) = a4;
    *(void *)(v10 + 256) = a3;
    *(void *)(v10 + 264) = a2;
    *(void *)(v10 + 272) = a1;
    uint64_t v11 = *(void *)(v10 + 208);
    uint64_t v12 = *(void *)(v10 + 216);
    uint64_t v13 = sub_10006EE6C;
  }
  return _swift_task_switch(v13, v11, v12);
}

uint64_t sub_10006EE6C()
{
  swift_release();
  uint64_t v1 = v0[33];
  uint64_t v2 = v0[31];
  if (v1) {
    BOOL v3 = v2 == 0;
  }
  else {
    BOOL v3 = 1;
  }
  if (v3)
  {
    sub_100012A24();
    swift_allocError();
    *(void *)uint64_t v4 = 0xD000000000000016;
    *(void *)(v4 + 8) = 0x80000001000D7230;
    *(void *)(v4 + 24) = 0;
    *(void *)(v4 + 32) = 0;
    *(void *)(v4 + 16) = 0;
    *(unsigned char *)(v4 + 40) = 6;
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = v0[32];
    uint64_t v6 = v0[34];
    swift_getKeyPath();
    swift_getKeyPath();
    v0[16] = v6;
    v0[17] = v1;
    v0[18] = v5;
    v0[19] = v2;
    swift_retain();
    sub_1000C67F0();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_10006EFF8()
{
  *(void *)(v0 + 328) = *(void *)(v0 + 240);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 336) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10006F420;
  return sub_1000151FC(v0 + 56);
}

uint64_t sub_10006F0A0()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void **)v0;
  long long v3 = *(_OWORD *)(*(void *)v0 + 32);
  *((_OWORD *)v2 + 18) = *((_OWORD *)v2 + 1);
  *((_OWORD *)v2 + 19) = v3;
  v2[40] = v1[6];
  swift_task_dealloc();
  uint64_t v4 = v1[27];
  uint64_t v5 = v1[26];
  return _swift_task_switch(sub_10006F1DC, v5, v4);
}

uint64_t sub_10006F1DC()
{
  uint64_t v1 = v0[40];
  swift_release();
  if (v1)
  {
    uint64_t v2 = (void *)v0[40];
    uint64_t v4 = v0[23];
    uint64_t v3 = v0[24];
    uint64_t v5 = v0[22];
    sub_100012A24();
    swift_allocError();
    *(void *)uint64_t v6 = 0xD000000000000016;
    *(void *)(v6 + 8) = 0x80000001000D7230;
    *(void *)(v6 + 24) = 0;
    *(void *)(v6 + 32) = 0;
    *(void *)(v6 + 16) = v2;
    *(unsigned char *)(v6 + 40) = 6;
    id v7 = v2;
    swift_willThrow();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  else
  {
    (*(void (**)(void, void))(v0[23] + 8))(v0[24], v0[22]);
    uint64_t v8 = v0[39];
    uint64_t v9 = v0[37];
    if (v9) {
      BOOL v10 = v8 == 0;
    }
    else {
      BOOL v10 = 1;
    }
    if (!v10)
    {
      uint64_t v12 = v0[36];
      uint64_t v13 = v0[38];
      swift_getKeyPath();
      swift_getKeyPath();
      v0[16] = v12;
      v0[17] = v9;
      v0[18] = v13;
      v0[19] = v8;
      swift_retain();
      sub_1000C67F0();
      swift_task_dealloc();
      swift_task_dealloc();
      BOOL v14 = (uint64_t (*)(void))v0[1];
      goto LABEL_10;
    }
    sub_100012A24();
    swift_allocError();
    *(void *)uint64_t v11 = 0xD000000000000016;
    *(void *)(v11 + 8) = 0x80000001000D7230;
    *(void *)(v11 + 24) = 0;
    *(void *)(v11 + 32) = 0;
    *(void *)(v11 + 16) = 0;
    *(unsigned char *)(v11 + 40) = 6;
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  BOOL v14 = (uint64_t (*)(void))v0[1];
LABEL_10:
  return v14();
}

uint64_t sub_10006F420()
{
  uint64_t v1 = (void *)*v0;
  uint64_t v2 = (void *)*v0;
  *(_OWORD *)(v2 + 43) = *(_OWORD *)(v2 + 7);
  *(_OWORD *)(v2 + 45) = *(_OWORD *)(v2 + 9);
  v2[47] = v1[11];
  swift_task_dealloc();
  uint64_t v3 = v1[27];
  uint64_t v4 = v1[26];
  return _swift_task_switch(sub_10006F56C, v4, v3);
}

uint64_t sub_10006F56C()
{
  uint64_t v1 = v0[47];
  swift_release();
  if (v1)
  {
    uint64_t v2 = (void *)v0[47];
    sub_100012A24();
    swift_allocError();
    *(void *)uint64_t v3 = 0xD000000000000016;
    *(void *)(v3 + 8) = 0x80000001000D7230;
    *(void *)(v3 + 24) = 0;
    *(void *)(v3 + 32) = 0;
    *(void *)(v3 + 16) = v2;
    *(unsigned char *)(v3 + 40) = 6;
    id v4 = v2;
    swift_willThrow();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    uint64_t v5 = v0[46];
    uint64_t v6 = v0[44];
    if (v6) {
      BOOL v7 = v5 == 0;
    }
    else {
      BOOL v7 = 1;
    }
    if (!v7)
    {
      uint64_t v9 = v0[43];
      uint64_t v10 = v0[45];
      swift_getKeyPath();
      swift_getKeyPath();
      v0[16] = v9;
      v0[17] = v6;
      v0[18] = v10;
      v0[19] = v5;
      swift_retain();
      sub_1000C67F0();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v11 = (uint64_t (*)(void))v0[1];
      goto LABEL_10;
    }
    sub_100012A24();
    swift_allocError();
    *(void *)uint64_t v8 = 0xD000000000000016;
    *(void *)(v8 + 8) = 0x80000001000D7230;
    *(void *)(v8 + 24) = 0;
    *(void *)(v8 + 32) = 0;
    *(void *)(v8 + 16) = 0;
    *(unsigned char *)(v8 + 40) = 6;
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
LABEL_10:
  return v11();
}

uint64_t sub_10006F78C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[10] = a4;
  uint64_t v5 = sub_1000C66D0();
  v4[11] = v5;
  v4[12] = *(void *)(v5 - 8);
  v4[13] = swift_task_alloc();
  sub_100012854((uint64_t *)&unk_10010BDD0);
  v4[14] = swift_task_alloc();
  sub_1000C75D0();
  v4[15] = sub_1000C75C0();
  uint64_t v7 = sub_1000C7590();
  v4[16] = v7;
  v4[17] = v6;
  return _swift_task_switch(sub_10006F8B0, v7, v6);
}

uint64_t sub_10006F8B0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10006F99C;
  uint64_t v2 = *(void *)(v0 + 112);
  return sub_100050CBC(v2);
}

uint64_t sub_10006F99C()
{
  uint64_t v2 = *v1;
  (*v1)[19] = v0;
  swift_task_dealloc();
  sub_10001326C(v2[14], (uint64_t *)&unk_10010BDD0);
  uint64_t v3 = v2[17];
  uint64_t v4 = v2[16];
  if (v0) {
    uint64_t v5 = sub_10006FF1C;
  }
  else {
    uint64_t v5 = sub_10006FAF8;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10006FAF8()
{
  uint64_t v1 = *(void *)(v0 + 80);
  swift_release();
  if (!*(void *)(v1 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel_lastServicesData)) {
    goto LABEL_9;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_unknownObjectRetain();
  swift_retain();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v2 = *(void **)(v0 + 72);
  if (!v2)
  {
    sub_100012A24();
    uint64_t v13 = swift_allocError();
    *(void *)uint64_t v14 = 0xD000000000000024;
    *(void *)(v14 + 8) = 0x80000001000D71C0;
    *(_OWORD *)(v14 + 16) = xmmword_1000CE5E0;
    *(void *)(v14 + 32) = 0x80000001000D71F0;
    *(unsigned char *)(v14 + 40) = 11;
    swift_willThrow();
    swift_unknownObjectRelease();
    *(void *)(v0 + 64) = v13;
    swift_errorRetain();
    sub_100012854((uint64_t *)&unk_10010B010);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_errorRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_11;
    }
    uint64_t result = swift_errorRelease();
    uint64_t v16 = *(void *)(v0 + 16);
    uint64_t v15 = *(void *)(v0 + 24);
    uint64_t v18 = *(void **)(v0 + 32);
    uint64_t v17 = *(void *)(v0 + 40);
    uint64_t v19 = *(void *)(v0 + 48);
    int v20 = *(unsigned __int8 *)(v0 + 56);
    if (v20 == 7)
    {
      if (!v18)
      {
LABEL_22:
        __break(1u);
        return result;
      }
      swift_bridgeObjectRetain();
      id v21 = v18;
      swift_bridgeObjectRetain();
      sub_100067284(1u, v18);
      sub_10002376C(v16, v15, v18, v17, v19, 7u);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1000C7440();
      uint64_t v25 = v17;
      id v22 = objc_allocWithZone((Class)NSError);
      NSString v23 = sub_1000C7400();
      swift_bridgeObjectRelease();
      id v24 = [v22 initWithDomain:v23 code:46 userInfo:0];

      sub_100067284(2u, v24);
      sub_10002376C(v16, v15, v18, v25, v19, v20);
    }
    swift_errorRelease();
    goto LABEL_10;
  }
  id v3 = [*(id *)(v0 + 72) _copyWithoutPersonalInfo];
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectRelease();
  if (!Strong)
  {
    sub_1000C66B0();
    uint64_t v5 = sub_1000C66C0();
    os_log_type_t v6 = sub_1000C7690();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "ext computed property--extensionController is nil--will assert", v7, 2u);
      swift_slowDealloc();
    }
    uint64_t v9 = *(void *)(v0 + 96);
    uint64_t v8 = *(void *)(v0 + 104);
    uint64_t v10 = *(void *)(v0 + 88);

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (!result)
  {
    __break(1u);
    goto LABEL_22;
  }

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
LABEL_9:
  sub_100067284(5u, 0);
LABEL_10:
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
LABEL_11:
  return v12();
}

uint64_t sub_10006FF1C()
{
  swift_release();
  *(void *)(v0 + 64) = *(void *)(v0 + 152);
  swift_errorRetain();
  sub_100012854((uint64_t *)&unk_10010B010);
  if (swift_dynamicCast())
  {
    uint64_t result = swift_errorRelease();
    uint64_t v3 = *(void *)(v0 + 16);
    uint64_t v2 = *(void *)(v0 + 24);
    uint64_t v5 = *(void **)(v0 + 32);
    uint64_t v4 = *(void *)(v0 + 40);
    uint64_t v6 = *(void *)(v0 + 48);
    int v7 = *(unsigned __int8 *)(v0 + 56);
    if (v7 == 7)
    {
      if (!v5)
      {
        __break(1u);
        return result;
      }
      swift_bridgeObjectRetain();
      id v8 = v5;
      swift_bridgeObjectRetain();
      sub_100067284(1u, v5);
      sub_10002376C(v3, v2, v5, v4, v6, 7u);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1000C7440();
      uint64_t v13 = v4;
      id v9 = objc_allocWithZone((Class)NSError);
      NSString v10 = sub_1000C7400();
      swift_bridgeObjectRelease();
      id v11 = [v9 initWithDomain:v10 code:46 userInfo:0];

      sub_100067284(2u, v11);
      sub_10002376C(v3, v2, v5, v13, v6, v7);
    }
  }
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_100070148(uint64_t a1, uint64_t a2, char a3)
{
  *(unsigned char *)(v3 + 57) = a3;
  *(void *)(v3 + 104) = a1;
  *(void *)(v3 + 112) = a2;
  sub_100012854((uint64_t *)&unk_10010BDD0);
  *(void *)(v3 + 120) = swift_task_alloc();
  uint64_t v4 = sub_1000C66D0();
  *(void *)(v3 + 128) = v4;
  *(void *)(v3 + 136) = *(void *)(v4 - 8);
  *(void *)(v3 + 144) = swift_task_alloc();
  *(void *)(v3 + 152) = swift_task_alloc();
  *(void *)(v3 + 160) = swift_task_alloc();
  *(void *)(v3 + 168) = swift_task_alloc();
  *(void *)(v3 + 176) = swift_task_alloc();
  sub_1000C75D0();
  *(void *)(v3 + 184) = sub_1000C75C0();
  uint64_t v6 = sub_1000C7590();
  *(void *)(v3 + 192) = v6;
  *(void *)(v3 + 200) = v5;
  return _swift_task_switch(sub_1000702A4, v6, v5);
}

void sub_1000702A4()
{
  uint64_t v1 = v0[13];
  if (v1 < 1)
  {
    __break(1u);
  }
  else
  {
    v0[26] = BRCloudDocsErrorDomain;
    v0[27] = v1;
    uint64_t v2 = (void *)swift_task_alloc();
    v0[28] = v2;
    void *v2 = v0;
    v2[1] = sub_100070354;
    sub_100064590();
  }
}

uint64_t sub_100070354()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 232) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 200);
  uint64_t v4 = *(void *)(v2 + 192);
  if (v0) {
    uint64_t v5 = sub_1000705FC;
  }
  else {
    uint64_t v5 = sub_100070490;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100070490()
{
  swift_release();
  sub_1000C66B0();
  uint64_t v1 = sub_1000C66C0();
  os_log_type_t v2 = sub_1000C7690();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[27];
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 134217984;
    v0[12] = v3;
    sub_1000C7850();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "fetchShare completed with this many retries left: %ld", v4, 0xCu);
    swift_slowDealloc();
  }
  uint64_t v5 = v0[22];
  uint64_t v6 = v0[16];
  uint64_t v7 = v0[17];

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1000705FC()
{
  *(void *)(v0 + 64) = *(void *)(v0 + 232);
  swift_errorRetain();
  sub_100012854((uint64_t *)&unk_10010B010);
  if (swift_dynamicCast())
  {
    uint64_t v1 = swift_errorRelease();
    uint64_t v4 = *(void *)(v0 + 16);
    uint64_t v5 = *(void *)(v0 + 24);
    *(void *)(v0 + 240) = v4;
    *(void *)(v0 + 248) = v5;
    uint64_t v6 = *(void **)(v0 + 32);
    uint64_t v7 = *(void *)(v0 + 40);
    *(void *)(v0 + 256) = v6;
    *(void *)(v0 + 264) = v7;
    uint64_t v8 = *(void *)(v0 + 48);
    *(void *)(v0 + 272) = v8;
    int v9 = *(unsigned __int8 *)(v0 + 56);
    uint64_t v68 = v8;
    uint64_t v69 = v4;
    if (v9 != 5)
    {
      swift_release();
      sub_1000C66B0();
      uint64_t v16 = sub_1000C66C0();
      os_log_type_t v17 = sub_1000C7670();
      if (os_log_type_enabled(v16, v17))
      {
        uint64_t v18 = v5;
        uint64_t v19 = *(void *)(v0 + 216);
        int v20 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)int v20 = 134217984;
        *(void *)(v0 + 72) = v19;
        uint64_t v5 = v18;
        sub_1000C7850();
        _os_log_impl((void *)&_mh_execute_header, v16, v17, "tryToFetchShare error: throwing unexpected error--retries that were left: %ld", v20, 0xCu);
        swift_slowDealloc();
      }
      uint64_t v22 = *(void *)(v0 + 136);
      uint64_t v21 = *(void *)(v0 + 144);
      uint64_t v23 = *(void *)(v0 + 128);

      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
      sub_100012A24();
      swift_allocError();
      *(void *)uint64_t v24 = 0xD00000000000003ELL;
      *(void *)(v24 + 8) = 0x80000001000D7250;
      *(_OWORD *)(v24 + 16) = xmmword_1000CE620;
      *(void *)(v24 + 32) = 0x80000001000D7290;
      *(unsigned char *)(v24 + 40) = 11;
      swift_willThrow();
      uint64_t v26 = v68;
      uint64_t v25 = v69;
      uint64_t v27 = v5;
      uint64_t v28 = v6;
      uint64_t v29 = v7;
      unsigned __int8 v30 = v9;
      goto LABEL_23;
    }
    if (!v6)
    {
      __break(1u);
      return _swift_task_switch(v1, v2, v3);
    }
    swift_bridgeObjectRetain();
    uint64_t v66 = v6;
    id v10 = v6;
    swift_bridgeObjectRetain();
    id v11 = [v10 domain];
    uint64_t v12 = sub_1000C7440();
    uint64_t v14 = v13;

    if (v12 == sub_1000C7440() && v14 == v15)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v31 = sub_1000C7A50();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v31 & 1) == 0)
      {

        goto LABEL_17;
      }
    }
    id v32 = [v10 code];

    if (v32 == (id)7)
    {
      uint64_t v33 = *(void *)(v0 + 120);
      swift_getKeyPath();
      swift_getKeyPath();
      sub_1000C67E0();
      swift_release();
      swift_release();
      uint64_t v34 = sub_1000C6530();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 48))(v33, 1, v34) == 1)
      {
        uint64_t v35 = *(void *)(v0 + 120);
        swift_release();
        sub_10001326C(v35, (uint64_t *)&unk_10010BDD0);
LABEL_18:
        sub_1000C66B0();
        id v36 = v10;
        char v37 = sub_1000C66C0();
        os_log_type_t v38 = sub_1000C7670();
        if (os_log_type_enabled(v37, v38))
        {
          uint64_t v39 = *(void *)(v0 + 216);
          uint64_t v40 = swift_slowAlloc();
          os_log_t v65 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v40 = 134218242;
          *(void *)(v0 + 80) = v39;
          sub_1000C7850();
          *(_WORD *)(v40 + 12) = 2112;
          *(void *)(v0 + 88) = v36;
          os_log_t log = v37;
          id v41 = v36;
          id v42 = v36;
          sub_1000C7850();
          uint64_t v43 = v66;
          *os_log_t v65 = v66;

          id v36 = v41;
          char v37 = log;
          _os_log_impl((void *)&_mh_execute_header, log, v38, "tryToFetchShare failed to fetch share so throwing--retries that were left: %ld, error: %@", (uint8_t *)v40, 0x16u);
          sub_100012854((uint64_t *)&unk_10010B1E0);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          uint64_t v43 = v66;
        }

        (*(void (**)(void, void))(*(void *)(v0 + 136) + 8))(*(void *)(v0 + 152), *(void *)(v0 + 128));
        sub_100012A24();
        swift_allocError();
        uint64_t v44 = v68;
        *(void *)uint64_t v45 = v69;
        *(void *)(v45 + 8) = v5;
        *(void *)(v45 + 16) = v43;
        *(void *)(v45 + 24) = v7;
        *(void *)(v45 + 32) = v68;
        *(unsigned char *)(v45 + 40) = 5;
        swift_bridgeObjectRetain();
        id v46 = v36;
        swift_bridgeObjectRetain();
        swift_willThrow();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v25 = v69;
        uint64_t v27 = v5;
        uint64_t v28 = v43;
LABEL_22:
        uint64_t v29 = v7;
        uint64_t v26 = v44;
        unsigned __int8 v30 = 5;
LABEL_23:
        sub_10002376C(v25, v27, v28, v29, v26, v30);
        goto LABEL_24;
      }
      char v49 = *(unsigned char *)(v0 + 57);
      sub_10001326C(*(void *)(v0 + 120), (uint64_t *)&unk_10010BDD0);
      if ((v49 & 1) == 0)
      {
        uint64_t v44 = v8;
        swift_release();
        sub_1000C66B0();
        uint64_t v57 = sub_1000C66C0();
        os_log_type_t v58 = sub_1000C7670();
        if (os_log_type_enabled(v57, v58))
        {
          uint64_t v59 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v59 = 0;
          _os_log_impl((void *)&_mh_execute_header, v57, v58, "tryToFetchShare not synced to iCloud AND not shared so throw notInICloud error", v59, 2u);
          swift_slowDealloc();
        }
        uint64_t v60 = *(void *)(v0 + 168);
        uint64_t v61 = *(void *)(v0 + 128);
        uint64_t v62 = *(void *)(v0 + 136);

        (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v60, v61);
        sub_100012A24();
        swift_allocError();
        *(void *)uint64_t v63 = v69;
        *(void *)(v63 + 8) = v5;
        *(void *)(v63 + 16) = v66;
        *(void *)(v63 + 24) = v7;
        *(void *)(v63 + 32) = v44;
        *(unsigned char *)(v63 + 40) = 5;
        swift_bridgeObjectRetain();
        id v64 = v10;
        swift_bridgeObjectRetain();
        swift_willThrow();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v25 = v69;
        uint64_t v27 = v5;
        uint64_t v28 = v66;
        goto LABEL_22;
      }
      sub_1000C66B0();
      unint64_t v50 = sub_1000C66C0();
      os_log_type_t v51 = sub_1000C7690();
      if (os_log_type_enabled(v50, v51))
      {
        uint64_t v52 = *(void *)(v0 + 216);
        uint64_t v53 = swift_slowAlloc();
        *(_DWORD *)uint64_t v53 = 134217984;
        *(void *)(v53 + 4) = v52;
        _os_log_impl((void *)&_mh_execute_header, v50, v51, "About to retry tryToFetchShare post-share when unsynced after 1 second--retries left including this one: %ld", (uint8_t *)v53, 0xCu);
        swift_slowDealloc();
      }
      uint64_t v54 = *(void *)(v0 + 160);
      uint64_t v55 = *(void *)(v0 + 128);
      uint64_t v56 = *(void *)(v0 + 136);

      (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v54, v55);
      uint64_t v1 = (uint64_t)sub_100070E80;
      uint64_t v2 = 0;
      uint64_t v3 = 0;
      return _swift_task_switch(v1, v2, v3);
    }
LABEL_17:
    swift_release();
    goto LABEL_18;
  }
  swift_release();
LABEL_24:
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v47 = *(uint64_t (**)(void))(v0 + 8);
  return v47();
}

uint64_t sub_100070E80()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 280) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100070F18;
  return static Task<>.sleep(nanoseconds:)(1000000000);
}

uint64_t sub_100070F18()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    swift_errorRelease();
    uint64_t v3 = *(void *)(v2 + 192);
    uint64_t v4 = *(void *)(v2 + 200);
    uint64_t v5 = sub_1000760D4;
  }
  else
  {
    uint64_t v3 = *(void *)(v2 + 192);
    uint64_t v4 = *(void *)(v2 + 200);
    uint64_t v5 = sub_10007103C;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_10007103C()
{
  uint64_t v1 = v0[33];
  uint64_t v2 = v0[34];
  uint64_t v4 = v0[31];
  uint64_t v3 = (void *)v0[32];
  uint64_t v5 = v0[30];
  uint64_t v6 = v0[27];
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_10002376C(v5, v4, v3, v1, v2, 5u);
  uint64_t result = swift_errorRelease();
  if (v6 == 1)
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v10 = (uint64_t (*)(void))v0[1];
    return v10();
  }
  else
  {
    uint64_t v8 = v0[27];
    if (v8 < 2)
    {
      __break(1u);
    }
    else
    {
      v0[27] = v8 - 1;
      int v9 = (void *)swift_task_alloc();
      v0[28] = v9;
      *int v9 = v0;
      v9[1] = sub_100070354;
      return sub_100064590();
    }
  }
  return result;
}

uint64_t shareStatus(url:)()
{
  uint64_t v0 = sub_1000C6530();
  v21[4] = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v1 = sub_1000C66D0();
  v21[2] = *(void *)(v1 - 8);
  v21[3] = v1;
  __chkstk_darwin(v1);
  uint64_t v2 = sub_1000C6370();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100012854((uint64_t *)&unk_10010B000);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1000CC380;
  *(void *)(inited + 32) = NSURLUbiquitousItemIsSharedKey;
  *(void *)(inited + 40) = NSURLUbiquitousSharedItemCurrentUserRoleKey;
  uint64_t v7 = NSURLUbiquitousItemIsSharedKey;
  uint64_t v8 = NSURLUbiquitousSharedItemCurrentUserRoleKey;
  int v9 = sub_100072F30(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy();
  URL.evictionSafeResourceValues(forKeys:)((uint64_t)v9, (uint64_t)v5);
  uint64_t v10 = v2;
  swift_bridgeObjectRelease();
  uint64_t v11 = sub_1000C6350();
  uint64_t v12 = (NSString *)sub_1000C6360();
  if (!v12) {
    uint64_t v12 = NSURLUbiquitousSharedItemRoleParticipant;
  }
  uint64_t v13 = v12;
  uint64_t v14 = v3;
  uint64_t v15 = sub_1000C7440();
  uint64_t v17 = v16;
  int v19 = 256;
  if (v15 != sub_1000C7440() || v17 != v18)
  {
    if (sub_1000C7A50()) {
      int v19 = 256;
    }
    else {
      int v19 = 0;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v5, v10);

  return v19 | (v11 & 1);
}

uint64_t sub_10007172C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_100012854(&qword_10010D280);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10 - 8);
  uint64_t v13 = sub_100012854(&qword_10010B770);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000C7600();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  sub_10001A740(a5, (uint64_t)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10010D280);
  unint64_t v17 = (*(unsigned __int8 *)(v11 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = 0;
  v18[3] = 0;
  v18[4] = a3;
  v18[5] = a4;
  sub_100012898((uint64_t)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v18 + v17, &qword_10010D280);
  int v19 = (void *)((char *)v18 + ((v12 + v17 + 7) & 0xFFFFFFFFFFFFFFF8));
  void *v19 = a1;
  v19[1] = a2;
  swift_retain();
  swift_retain();
  sub_1000BD2A0((uint64_t)v15, (uint64_t)&unk_10010D290, (uint64_t)v18);
  return swift_release();
}

uint64_t sub_100071914(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[3] = a7;
  v8[4] = a8;
  uint64_t v12 = (int *)((char *)a4 + *a4);
  uint64_t v10 = (void *)swift_task_alloc();
  v8[5] = v10;
  *uint64_t v10 = v8;
  v10[1] = sub_100071A04;
  return ((uint64_t (*)(void *, uint64_t))v12)(v8 + 2, a6);
}

uint64_t sub_100071A04()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100071B00, 0, 0);
}

uint64_t sub_100071B00()
{
  uint64_t v7 = v0;
  uint64_t v1 = (void (*)(id *))v0[3];
  id v5 = (id)v0[2];
  char v6 = 0;
  id v2 = v5;
  v1(&v5);

  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_100071B8C@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_100071C0C(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = v1;
  swift_retain();
  return sub_1000C67F0();
}

uint64_t sub_100071C84()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();

  return swift_release();
}

uint64_t sub_100071D00(uint64_t a1)
{
  uint64_t v2 = sub_100012854((uint64_t *)&unk_10010BDD0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  id v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v9 - v6;
  sub_10001A740(a1, (uint64_t)&v9 - v6, (uint64_t *)&unk_10010BDD0);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10001A740((uint64_t)v7, (uint64_t)v5, (uint64_t *)&unk_10010BDD0);
  swift_retain();
  sub_1000C67F0();
  return sub_10001326C((uint64_t)v7, (uint64_t *)&unk_10010BDD0);
}

uint64_t sub_100071E10@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_100071E24()
{
  return sub_1000114AC();
}

uint64_t sub_100071E38@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_100071E4C()
{
  return sub_1000114AC();
}

uint64_t sub_100071E60@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_100071EE0()
{
  return sub_1000C67F0();
}

uint64_t sub_100071F5C@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_100071F70()
{
  return sub_1000114AC();
}

uint64_t sub_100071F84@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_100071F98()
{
  return sub_1000114AC();
}

double sub_100071FAC@<D0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_100072034()
{
  return sub_1000C67F0();
}

uint64_t sub_1000720D0(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_1000721A4(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_100075E70((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_100075E70((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_100075E20((uint64_t)v12);
  return v7;
}

uint64_t sub_1000721A4(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1000C7860();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_100072360(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_1000C7900();
  if (!v8)
  {
    sub_1000C7970();
    __break(1u);
LABEL_17:
    uint64_t result = sub_1000C79D0();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_100072360(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (uint64_t)sub_1000723F8(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1000725D8(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_1000725D8(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

void *sub_1000723F8(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_100072570(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_1000C78E0();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return v4;
      }
      sub_1000C7970();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_1000C74C0();
      if (!v2) {
        return _swiftEmptyArrayStorage;
      }
    }
    sub_1000C79D0();
    __break(1u);
LABEL_14:
    uint64_t result = (void *)sub_1000C7970();
    __break(1u);
  }
  else
  {
    return _swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_100072570(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  sub_100012854(&qword_10010D368);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1000725D8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_100012854(&qword_10010D368);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1000C79D0();
  __break(1u);
  return result;
}

unint64_t sub_100072728(uint64_t a1, uint64_t a2)
{
  sub_1000C7B10();
  sub_1000C7480();
  Swift::Int v4 = sub_1000C7B30();

  return sub_100072894(a1, a2, v4);
}

unint64_t sub_1000727A0(char a1)
{
  sub_1000C7B10();
  sub_10009C964(a1);
  sub_1000C7480();
  swift_bridgeObjectRelease();
  Swift::Int v2 = sub_1000C7B30();

  return sub_100072978(a1, v2);
}

unint64_t sub_100072828(unsigned __int8 a1)
{
  sub_1000C7B10();
  sub_1000C7B20(a1);
  Swift::Int v2 = sub_1000C7B30();

  return sub_100072A8C(a1, v2);
}

unint64_t sub_100072894(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1000C7A50() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1000C7A50() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_100072978(char a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    uint64_t v7 = *(void *)&aFolder_3[v6 * 8];
    uint64_t v8 = qword_1000CF338[v6];
    while (*(void *)&aFolder_3[8 * *(char *)(*(void *)(v2 + 48) + v4)] != v7
         || qword_1000CF338[*(char *)(*(void *)(v2 + 48) + v4)] != v8)
    {
      char v10 = sub_1000C7A50();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v10 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v5;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v4;
}

unint64_t sub_100072A8C(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

uint64_t sub_100072B2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = sub_100012854(&qword_10010D280);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8 - 8);
  sub_10001A740(a1, (uint64_t)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10010D280);
  unint64_t v11 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a2;
  *(void *)(v12 + 24) = a3;
  sub_100012898((uint64_t)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v12 + v11, &qword_10010D280);
  sub_100012854(&qword_10010D188);
  swift_allocObject();
  swift_retain();
  uint64_t result = sub_1000C67A0();
  *a4 = result;
  return result;
}

unint64_t sub_100072C7C(unint64_t result)
{
  unint64_t v1 = result;
  unint64_t v2 = result >> 62;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1000C7990();
    uint64_t result = swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      sub_100012854(&qword_10010D248);
      uint64_t result = sub_1000C78C0();
      uint64_t v3 = (unsigned char *)result;
      uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_1000C7990();
      uint64_t result = swift_bridgeObjectRelease();
      if (!v5) {
        return (unint64_t)v3;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  uint64_t v3 = &_swiftEmptySetSingleton;
  uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return (unint64_t)v3;
  }
LABEL_9:
  unint64_t v7 = 0;
  uint64_t v8 = v3 + 56;
  unint64_t v21 = v1 & 0xC000000000000001;
  unint64_t v19 = v1 + 32;
  uint64_t v20 = v1 & 0xFFFFFFFFFFFFFF8;
  while (v21)
  {
    uint64_t result = sub_1000C78F0();
    unint64_t v9 = result;
    BOOL v10 = __OFADD__(v7++, 1);
    if (v10) {
      goto LABEL_25;
    }
LABEL_18:
    sub_1000C6770();
    sub_100074448(&qword_10010D250, (void (*)(uint64_t))&type metadata accessor for AnyCancellable);
    uint64_t result = sub_1000C73D0();
    uint64_t v11 = -1 << v3[32];
    unint64_t v12 = result & ~v11;
    unint64_t v13 = v12 >> 6;
    uint64_t v14 = *(void *)&v8[8 * (v12 >> 6)];
    uint64_t v15 = 1 << v12;
    if (((1 << v12) & v14) != 0)
    {
      uint64_t v16 = ~v11;
      sub_100074448((unint64_t *)&unk_10010D258, (void (*)(uint64_t))&type metadata accessor for AnyCancellable);
      while (1)
      {
        uint64_t result = sub_1000C73F0();
        if (result) {
          break;
        }
        unint64_t v12 = (v12 + 1) & v16;
        unint64_t v13 = v12 >> 6;
        uint64_t v14 = *(void *)&v8[8 * (v12 >> 6)];
        uint64_t v15 = 1 << v12;
        if ((v14 & (1 << v12)) == 0) {
          goto LABEL_22;
        }
      }
      uint64_t result = swift_release();
    }
    else
    {
LABEL_22:
      *(void *)&v8[8 * v13] = v15 | v14;
      *(void *)(*((void *)v3 + 6) + 8 * v12) = v9;
      uint64_t v17 = *((void *)v3 + 2);
      BOOL v10 = __OFADD__(v17, 1);
      uint64_t v18 = v17 + 1;
      if (v10) {
        goto LABEL_26;
      }
      *((void *)v3 + 2) = v18;
    }
    if (v7 == v5) {
      return (unint64_t)v3;
    }
  }
  if (v7 >= *(void *)(v20 + 16)) {
    goto LABEL_27;
  }
  unint64_t v9 = *(void *)(v19 + 8 * v7);
  uint64_t result = swift_retain();
  BOOL v10 = __OFADD__(v7++, 1);
  if (!v10) {
    goto LABEL_18;
  }
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

void *sub_100072F30(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_100012854(&qword_10010D370);
    uint64_t v3 = sub_1000C78C0();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v31 = v1;
    uint64_t v32 = a1 + 32;
    while (1)
    {
      uint64_t v6 = *(void **)(v32 + 8 * v4);
      sub_1000C7440();
      sub_1000C7B10();
      id v7 = v6;
      sub_1000C7480();
      Swift::Int v8 = sub_1000C7B30();
      uint64_t result = (void *)swift_bridgeObjectRelease();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = v8 & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = sub_1000C7440();
        uint64_t v17 = v16;
        if (v15 == sub_1000C7440() && v17 == v18)
        {
LABEL_3:
          swift_bridgeObjectRelease_n();
LABEL_4:

          goto LABEL_5;
        }
        char v20 = sub_1000C7A50();
        swift_bridgeObjectRelease();
        uint64_t result = (void *)swift_bridgeObjectRelease();
        if (v20) {
          goto LABEL_4;
        }
        uint64_t v21 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v21;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          uint64_t v22 = sub_1000C7440();
          uint64_t v24 = v23;
          if (v22 == sub_1000C7440() && v24 == v25) {
            goto LABEL_3;
          }
          char v27 = sub_1000C7A50();
          swift_bridgeObjectRelease();
          uint64_t result = (void *)swift_bridgeObjectRelease();
          if (v27) {
            goto LABEL_4;
          }
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      *(void *)(*(void *)(v3 + 48) + 8 * v11) = v7;
      uint64_t v28 = *(void *)(v3 + 16);
      BOOL v29 = __OFADD__(v28, 1);
      uint64_t v30 = v28 + 1;
      if (v29)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v30;
LABEL_5:
      if (++v4 == v31) {
        return (void *)v3;
      }
    }
  }
  return &_swiftEmptySetSingleton;
}

uint64_t sub_100073160()
{
  return type metadata accessor for SharingModel();
}

uint64_t type metadata accessor for SharingModel()
{
  uint64_t result = qword_10010CB10;
  if (!qword_10010CB10) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000731B4()
{
  sub_10001E1A4(319, (unint64_t *)&qword_10010B9B0);
  if (v0 <= 0x3F)
  {
    sub_10001E1A4(319, &qword_10010CB28);
    if (v1 <= 0x3F)
    {
      sub_10001E1A4(319, &qword_10010CB30);
      if (v2 <= 0x3F)
      {
        sub_10001E1A4(319, &qword_10010CB38);
        if (v3 <= 0x3F)
        {
          sub_1000321A0(319, &qword_10010CB40, &qword_10010CB48);
          if (v4 <= 0x3F)
          {
            sub_10001E1A4(319, &qword_10010CB50);
            if (v5 <= 0x3F)
            {
              sub_10001E1A4(319, &qword_10010CB58);
              if (v6 <= 0x3F)
              {
                sub_10001E1A4(319, (unint64_t *)&unk_10010CB60);
                if (v7 <= 0x3F)
                {
                  sub_1000321A0(319, (unint64_t *)&unk_10010B9C0, &qword_10010CB70);
                  if (v8 <= 0x3F)
                  {
                    sub_1000321A0(319, &qword_10010CB78, &qword_10010CB80);
                    if (v9 <= 0x3F)
                    {
                      sub_10001E1A4(319, &qword_10010CB88);
                      if (v10 <= 0x3F)
                      {
                        sub_10001E1A4(319, &qword_10010CB90);
                        if (v11 <= 0x3F)
                        {
                          sub_1000321A0(319, &qword_10010CB98, &qword_10010CBA0);
                          if (v12 <= 0x3F)
                          {
                            sub_1000321A0(319, &qword_10010CBA8, (uint64_t *)&unk_10010BDD0);
                            if (v13 <= 0x3F)
                            {
                              sub_1000321A0(319, (unint64_t *)&qword_10010C660, &qword_10010CBB0);
                              if (v14 <= 0x3F)
                              {
                                sub_100073890(319, (unint64_t *)&qword_10010B9D8, (unint64_t *)&unk_10010B9E0);
                                if (v15 <= 0x3F)
                                {
                                  sub_1000321A0(319, &qword_10010CBB8, (uint64_t *)&unk_10010CBC0);
                                  if (v16 <= 0x3F)
                                  {
                                    sub_10001E1A4(319, &qword_10010B9D0);
                                    if (v17 <= 0x3F)
                                    {
                                      sub_100073890(319, &qword_10010CBD0, &qword_10010CBD8);
                                      if (v18 <= 0x3F)
                                      {
                                        sub_1000321A0(319, &qword_10010CBE0, (uint64_t *)&unk_10010CBE8);
                                        if (v19 <= 0x3F) {
                                          swift_updateClassMetadata2();
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_100073890(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1000132C8(255, a3);
    unint64_t v4 = sub_1000C6800();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1000738F8@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_100073920()
{
  return sub_1000114AC();
}

uint64_t sub_100073950@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_100073978()
{
  return sub_1000114AC();
}

unint64_t sub_1000739A0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  sub_100012854((uint64_t *)&unk_10010D390);
  unint64_t v3 = (void *)sub_1000C79C0();
  unsigned __int8 v4 = *(unsigned char *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 48);
  unint64_t result = sub_100072828(v4);
  if (v8)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  unint64_t v9 = (void *)(a1 + 72);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v3[6] + result) = v4;
    unint64_t v10 = (void *)(v3[7] + 16 * result);
    *unint64_t v10 = v6;
    v10[1] = v5;
    uint64_t v11 = v3[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      break;
    }
    _OWORD v3[2] = v13;
    if (!--v1) {
      goto LABEL_8;
    }
    unint64_t v14 = v9 + 3;
    unsigned __int8 v4 = *((unsigned char *)v9 - 16);
    uint64_t v6 = *(v9 - 1);
    uint64_t v15 = *v9;
    swift_bridgeObjectRetain();
    unint64_t result = sub_100072828(v4);
    unint64_t v9 = v14;
    uint64_t v5 = v15;
    if (v16) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_100073AB0()
{
  sub_100012854((uint64_t *)&unk_10010C5E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1000CE630;
  *(unsigned char *)(inited + 32) = 7;
  uint64_t v1 = self;
  unint64_t v2 = (objc_class *)[v1 mainBundle];
  v68._countAndFlagsBits = 0x80000001000D77F0;
  v81._unint64_t object = (void *)0x80000001000D7790;
  v81._countAndFlagsBits = 0xD00000000000005DLL;
  v94.value._countAndFlagsBits = 0;
  v94.value._unint64_t object = 0;
  v3.super.Class isa = v2;
  v107._countAndFlagsBits = 0;
  v107._unint64_t object = (void *)0xE000000000000000;
  uint64_t v4 = sub_1000C6320(v81, v94, v3, v107, v68);
  uint64_t v6 = v5;

  *(void *)(inited + 40) = v4;
  *(void *)(inited + 48) = v6;
  *(unsigned char *)(inited + 56) = 8;
  unint64_t v7 = (objc_class *)[v1 mainBundle];
  v69._countAndFlagsBits = 0x80000001000D7880;
  v82._countAndFlagsBits = 0xD00000000000005FLL;
  v82._unint64_t object = (void *)0x80000001000D7820;
  v95.value._countAndFlagsBits = 0;
  v95.value._unint64_t object = 0;
  v8.super.Class isa = v7;
  v108._countAndFlagsBits = 0;
  v108._unint64_t object = (void *)0xE000000000000000;
  uint64_t v9 = sub_1000C6320(v82, v95, v8, v108, v69);
  uint64_t v11 = v10;

  *(void *)(inited + 64) = v9;
  *(void *)(inited + 72) = v11;
  *(unsigned char *)(inited + 80) = 9;
  BOOL v12 = (objc_class *)[v1 mainBundle];
  v70._countAndFlagsBits = 0x80000001000D7920;
  v83._unint64_t object = (void *)0x80000001000D78C0;
  v83._countAndFlagsBits = 0xD00000000000005DLL;
  v96.value._countAndFlagsBits = 0;
  v96.value._unint64_t object = 0;
  v13.super.Class isa = v12;
  v109._countAndFlagsBits = 0;
  v109._unint64_t object = (void *)0xE000000000000000;
  uint64_t v14 = sub_1000C6320(v83, v96, v13, v109, v70);
  uint64_t v16 = v15;

  *(void *)(inited + 88) = v14;
  *(void *)(inited + 96) = v16;
  *(unsigned char *)(inited + 104) = 10;
  unint64_t v17 = (objc_class *)[v1 mainBundle];
  v84._countAndFlagsBits = 0xD000000000000062;
  v71._countAndFlagsBits = 0x80000001000D79C0;
  v84._unint64_t object = (void *)0x80000001000D7950;
  v97.value._countAndFlagsBits = 0;
  v97.value._unint64_t object = 0;
  v18.super.Class isa = v17;
  v110._countAndFlagsBits = 0;
  v110._unint64_t object = (void *)0xE000000000000000;
  uint64_t v19 = sub_1000C6320(v84, v97, v18, v110, v71);
  uint64_t v21 = v20;

  *(void *)(inited + 112) = v19;
  *(void *)(inited + 120) = v21;
  *(unsigned char *)(inited + 128) = 11;
  uint64_t v22 = (objc_class *)[v1 mainBundle];
  v72._countAndFlagsBits = 0x80000001000D7A60;
  v85._unint64_t object = (void *)0x80000001000D7A00;
  v85._countAndFlagsBits = 0xD00000000000005ELL;
  v98.value._countAndFlagsBits = 0;
  v98.value._unint64_t object = 0;
  v23.super.Class isa = v22;
  v111._countAndFlagsBits = 0;
  v111._unint64_t object = (void *)0xE000000000000000;
  uint64_t v24 = sub_1000C6320(v85, v98, v23, v111, v72);
  uint64_t v26 = v25;

  *(void *)(inited + 136) = v24;
  *(void *)(inited + 144) = v26;
  *(unsigned char *)(inited + 152) = 0;
  char v27 = (objc_class *)[v1 mainBundle];
  v73._countAndFlagsBits = 0x80000001000D7A90;
  v86._countAndFlagsBits = 0xD00000000000005FLL;
  v86._unint64_t object = (void *)0x80000001000D7820;
  v99.value._countAndFlagsBits = 0;
  v99.value._unint64_t object = 0;
  v28.super.Class isa = v27;
  v112._countAndFlagsBits = 0;
  v112._unint64_t object = (void *)0xE000000000000000;
  uint64_t v29 = sub_1000C6320(v86, v99, v28, v112, v73);
  uint64_t v31 = v30;

  *(void *)(inited + 160) = v29;
  *(void *)(inited + 168) = v31;
  *(unsigned char *)(inited + 176) = 1;
  uint64_t v32 = (objc_class *)[v1 mainBundle];
  v87._countAndFlagsBits = 0xD000000000000061;
  v74._countAndFlagsBits = 0x80000001000D7B30;
  v87._unint64_t object = (void *)0x80000001000D7AC0;
  v100.value._countAndFlagsBits = 0;
  v100.value._unint64_t object = 0;
  v33.super.Class isa = v32;
  v113._countAndFlagsBits = 0;
  v113._unint64_t object = (void *)0xE000000000000000;
  uint64_t v34 = sub_1000C6320(v87, v100, v33, v113, v74);
  uint64_t v36 = v35;

  *(void *)(inited + 184) = v34;
  *(void *)(inited + 192) = v36;
  *(unsigned char *)(inited + 200) = 2;
  char v37 = (objc_class *)[v1 mainBundle];
  v88._countAndFlagsBits = 0xD000000000000064;
  v75._countAndFlagsBits = 0x80000001000D7BD0;
  v88._unint64_t object = (void *)0x80000001000D7B60;
  v101.value._countAndFlagsBits = 0;
  v101.value._unint64_t object = 0;
  v38.super.Class isa = v37;
  v114._countAndFlagsBits = 0;
  v114._unint64_t object = (void *)0xE000000000000000;
  uint64_t v39 = sub_1000C6320(v88, v101, v38, v114, v75);
  uint64_t v41 = v40;

  *(void *)(inited + 208) = v39;
  *(void *)(inited + 216) = v41;
  *(unsigned char *)(inited + 224) = 3;
  id v42 = (objc_class *)[v1 mainBundle];
  v89._countAndFlagsBits = 0xD000000000000065;
  v76._countAndFlagsBits = 0x80000001000D7C80;
  v89._unint64_t object = (void *)0x80000001000D7C10;
  v102.value._countAndFlagsBits = 0;
  v102.value._unint64_t object = 0;
  v43.super.Class isa = v42;
  v115._countAndFlagsBits = 0;
  v115._unint64_t object = (void *)0xE000000000000000;
  uint64_t v44 = sub_1000C6320(v89, v102, v43, v115, v76);
  uint64_t v46 = v45;

  *(void *)(inited + 232) = v44;
  *(void *)(inited + 240) = v46;
  *(unsigned char *)(inited + 248) = 4;
  uint64_t v47 = (objc_class *)[v1 mainBundle];
  v77._countAndFlagsBits = 0x80000001000D7D20;
  v90._unint64_t object = (void *)0x80000001000D7CC0;
  v90._countAndFlagsBits = 0xD00000000000005ELL;
  v103.value._countAndFlagsBits = 0;
  v103.value._unint64_t object = 0;
  v48.super.Class isa = v47;
  v116._countAndFlagsBits = 0;
  v116._unint64_t object = (void *)0xE000000000000000;
  uint64_t v49 = sub_1000C6320(v90, v103, v48, v116, v77);
  uint64_t v51 = v50;

  *(void *)(inited + 256) = v49;
  *(void *)(inited + 264) = v51;
  *(unsigned char *)(inited + 272) = 5;
  uint64_t v52 = (objc_class *)[v1 mainBundle];
  v78._countAndFlagsBits = 0x80000001000D7DB0;
  v91._unint64_t object = (void *)0x80000001000D7D50;
  v91._countAndFlagsBits = 0xD00000000000005ELL;
  v104.value._countAndFlagsBits = 0;
  v104.value._unint64_t object = 0;
  v53.super.Class isa = v52;
  v117._countAndFlagsBits = 0;
  v117._unint64_t object = (void *)0xE000000000000000;
  uint64_t v54 = sub_1000C6320(v91, v104, v53, v117, v78);
  uint64_t v56 = v55;

  *(void *)(inited + 280) = v54;
  *(void *)(inited + 288) = v56;
  *(unsigned char *)(inited + 296) = 6;
  uint64_t v57 = (objc_class *)[v1 mainBundle];
  v92._countAndFlagsBits = 0xD00000000000005CLL;
  v79._countAndFlagsBits = 0x80000001000D7E40;
  v92._unint64_t object = (void *)0x80000001000D7DE0;
  v105.value._countAndFlagsBits = 0;
  v105.value._unint64_t object = 0;
  v58.super.Class isa = v57;
  v118._countAndFlagsBits = 0;
  v118._unint64_t object = (void *)0xE000000000000000;
  uint64_t v59 = sub_1000C6320(v92, v105, v58, v118, v79);
  uint64_t v61 = v60;

  *(void *)(inited + 304) = v59;
  *(void *)(inited + 312) = v61;
  *(unsigned char *)(inited + 320) = 13;
  uint64_t v62 = (objc_class *)[v1 mainBundle];
  v80._countAndFlagsBits = 0x80000001000D7ED0;
  v93._unint64_t object = (void *)0x80000001000D7E70;
  v93._countAndFlagsBits = 0xD00000000000005DLL;
  v106.value._countAndFlagsBits = 0;
  v106.value._unint64_t object = 0;
  v63.super.Class isa = v62;
  v119._countAndFlagsBits = 0;
  v119._unint64_t object = (void *)0xE000000000000000;
  uint64_t v64 = sub_1000C6320(v93, v106, v63, v119, v80);
  uint64_t v66 = v65;

  *(void *)(inited + 328) = v64;
  *(void *)(inited + 336) = v66;
  return sub_10004E6A4(inited);
}

uint64_t sub_100074180@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_1000741A8()
{
  return sub_1000114AC();
}

uint64_t sub_1000741E0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000741E8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100074210@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_100074238()
{
  return sub_1000114AC();
}

uint64_t sub_100074260@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_100074288()
{
  return sub_1000114AC();
}

uint64_t sub_1000742B0(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100013B98;
  return sub_1000156C4(a1, v4);
}

uint64_t sub_100074350(uint64_t a1)
{
  return a1;
}

uint64_t sub_100074378(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_release();
  }
  return result;
}

uint64_t sub_1000743F4@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_1000C6B60();
  *a1 = v3;
  return result;
}

uint64_t sub_100074420()
{
  return sub_1000C6B70();
}

uint64_t sub_100074448(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100074490(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, char a6)
{
  return sub_10005904C(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_100074498()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000744D0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = *(uint64_t (**)(uint64_t, void, void, void, void, void))(v2 + 16);
  uint64_t v6 = (int *)sub_100012854((uint64_t *)&unk_10010D340);
  uint64_t result = v5(a1, *(void *)(a1 + v6[12]), *(void *)(a1 + v6[12] + 8), *(void *)(a1 + v6[16]), *(void *)(a1 + v6[16] + 8), *(unsigned __int8 *)(a1 + v6[20]));
  *a2 = result;
  return result;
}

unsigned char *sub_10007453C(unsigned char *result)
{
  return sub_100059F2C(result);
}

uint64_t sub_100074544()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

_UNKNOWN **sub_10007457C(char a1, void *a2)
{
  return sub_100059FAC(a1, a2);
}

uint64_t sub_100074584@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void))(v2 + 16))(*a1, *((void *)a1 + 1));
  *a2 = result;
  return result;
}

unint64_t sub_1000745BC()
{
  unint64_t result = qword_10010D0C8;
  if (!qword_10010D0C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010D0C8);
  }
  return result;
}

uint64_t sub_100074610()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100074650(int a1, unsigned __int8 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_10005A3E0(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_100074658(unsigned __int8 *a1)
{
  return (*(uint64_t (**)(void, void, void, void, void, void))(v1 + 16))(*a1, a1[1], *((void *)a1 + 1), a1[16], a1[17], *((void *)a1 + 3));
}

void sub_100074698(void **a1)
{
}

uint64_t sub_1000746A0(unsigned __int8 *a1)
{
  return sub_10005ACA0(a1);
}

uint64_t sub_1000746A8(unsigned char *a1)
{
  return sub_10005AF94(a1);
}

uint64_t sub_1000746B0(unsigned __int8 a1)
{
  return sub_10005CD50(a1);
}

uint64_t sub_1000746B8(unsigned __int8 *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_1000746E4(unsigned __int8 a1)
{
  return sub_10005E988(a1);
}

uint64_t sub_1000746EC(unsigned __int8 *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_100074718(unsigned __int8 a1)
{
  return sub_10005ECB0(a1);
}

uint64_t sub_100074720(unsigned __int8 *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

unint64_t sub_10007474C()
{
  unint64_t result = qword_10010D150;
  if (!qword_10010D150)
  {
    sub_100013128((uint64_t *)&unk_10010CBC0);
    sub_100034064(&qword_10010BCA8, (unint64_t *)&unk_10010B9E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010D150);
  }
  return result;
}

uint64_t sub_1000747EC()
{
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100074824(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = *((void *)v4 + 2);
  double v11 = v4[3];
  double v12 = v4[4];
  NSBundle v13 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v13;
  void *v13 = v5;
  v13[1] = sub_100074904;
  return sub_10005EE18(a1, a2, a3, a4, v10, v11, v12);
}

uint64_t sub_100074904(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t sub_100074A00(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_10001AE78;
  NSBundle v8 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_10010D178 + dword_10010D178);
  return v8(a1, a2, v6);
}

uint64_t sub_100074AC8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100072B2C(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

unint64_t sub_100074AD0()
{
  unint64_t result = qword_10010D1E0;
  if (!qword_10010D1E0)
  {
    sub_100013128(&qword_10010D1E8);
    sub_100034064(&qword_10010D1F0, &qword_10010D1F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010D1E0);
  }
  return result;
}

unint64_t sub_100074B70()
{
  unint64_t result = qword_10010D230;
  if (!qword_10010D230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010D230);
  }
  return result;
}

uint64_t sub_100074BC4(char *a1)
{
  return sub_10005FBAC(a1);
}

uint64_t sub_100074BCC()
{
  return sub_100045158(40);
}

uint64_t sub_100074BD4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_100013B98;
  return sub_10005FED4(a1, v4, v5, v6);
}

uint64_t sub_100074C88()
{
  uint64_t v1 = sub_100012854(&qword_10010D280);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_release();
  uint64_t v5 = v0 + v3;
  uint64_t v6 = sub_1000C6530();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v0 + v3, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v3, v6);
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_100074DD8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_100012854(&qword_10010D280) - 8);
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = *(void *)(v2 + 24);
  uint64_t v8 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_10007172C(a1, a2, v6, v7, v8);
}

uint64_t sub_100074E60()
{
  uint64_t v1 = sub_100012854(&qword_10010D280);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 48) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v5 = v0 + v3;
  uint64_t v6 = sub_1000C6530();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v0 + v3, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v3, v6);
  }

  swift_release();

  return _swift_deallocObject(v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16, v2 | 7);
}

uint64_t sub_100074FD0()
{
  uint64_t v2 = *(void *)(sub_100012854(&qword_10010D280) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(int **)(v0 + 32);
  uint64_t v6 = v0 + v3;
  uint64_t v7 = swift_task_alloc();
  long long v8 = *(_OWORD *)(v0 + v4);
  *(void *)(v1 + 16) = v7;
  *(void *)uint64_t v7 = v1;
  *(void *)(v7 + 8) = sub_10001AE78;
  *(_OWORD *)(v7 + 24) = v8;
  double v11 = (uint64_t (*)(uint64_t, uint64_t))((char *)v5 + *v5);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v7 + 40) = v9;
  *uint64_t v9 = v7;
  v9[1] = sub_100071A04;
  return v11(v7 + 16, v6);
}

uint64_t sub_100075180(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_10007518C(uint64_t a1, double a2, double a3, double a4)
{
  *(double *)(v4 + 160) = a3;
  *(double *)(v4 + 168) = a4;
  *(double *)(v4 + 152) = a2;
  *(void *)(v4 + 144) = a1;
  uint64_t v5 = sub_1000C66D0();
  *(void *)(v4 + 176) = v5;
  *(void *)(v4 + 184) = *(void *)(v5 - 8);
  *(void *)(v4 + 192) = swift_task_alloc();
  sub_1000C75D0();
  *(void *)(v4 + 200) = sub_1000C75C0();
  uint64_t v7 = sub_1000C7590();
  *(void *)(v4 + 208) = v7;
  *(void *)(v4 + 216) = v6;
  return _swift_task_switch(sub_100075288, v7, v6);
}

uint64_t sub_100075288()
{
  double v2 = *(double *)(v0 + 160);
  double v1 = *(double *)(v0 + 168);
  double v3 = *(double *)(v0 + 152);
  *(unsigned char *)(v0 + 248) = sub_1000C6500();
  id v4 = objc_allocWithZone((Class)QLThumbnailGenerationRequest);
  sub_1000C64C0(v5);
  uint64_t v7 = v6;
  id v8 = objc_msgSend(v4, "initWithFileAtURL:size:scale:representationTypes:", v6, -1, v3, v2, v1);
  *(void *)(v0 + 224) = v8;

  id v9 = [self sharedGenerator];
  *(void *)(v0 + 232) = v9;
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 56) = v0 + 120;
  *(void *)(v0 + 24) = sub_100075428;
  uint64_t v10 = swift_continuation_init();
  *(void *)(v0 + 80) = _NSConcreteStackBlock;
  *(void *)(v0 + 88) = 0x40000000;
  *(void *)(v0 + 96) = sub_100060BB8;
  *(void *)(v0 + 104) = &unk_100101090;
  *(void *)(v0 + 112) = v10;
  [v9 generateBestRepresentationForRequest:v8 completionHandler:v0 + 80];
  return _swift_continuation_await(v0 + 16);
}

uint64_t sub_100075428()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 240) = v2;
  uint64_t v3 = *(void *)(v1 + 216);
  uint64_t v4 = *(void *)(v1 + 208);
  if (v2) {
    uint64_t v5 = sub_100075618;
  }
  else {
    uint64_t v5 = sub_100075558;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100075558()
{
  uint64_t v2 = *(void **)(v0 + 224);
  uint64_t v1 = *(void **)(v0 + 232);
  int v3 = *(unsigned __int8 *)(v0 + 248);
  swift_release();
  uint64_t v4 = *(void **)(v0 + 120);
  id v5 = [v4 UIImage];

  if (v3 == 1) {
    sub_1000C64E0();
  }
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(id))(v0 + 8);
  return v6(v5);
}

uint64_t sub_100075618()
{
  uint64_t v20 = v0;
  swift_release();
  swift_willThrow();
  sub_1000C66B0();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = sub_1000C66C0();
  os_log_type_t v2 = sub_1000C7670();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = *(void *)(v0 + 240);
    uint64_t v15 = *(void **)(v0 + 232);
    uint64_t v16 = *(void **)(v0 + 224);
    uint64_t v4 = *(void *)(v0 + 184);
    uint64_t v17 = *(void *)(v0 + 176);
    uint64_t v18 = *(void *)(v0 + 192);
    id v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    *(_DWORD *)id v5 = 136315138;
    uint64_t v19 = v6;
    *(void *)(v0 + 128) = v3;
    swift_errorRetain();
    sub_100012854((uint64_t *)&unk_10010B010);
    uint64_t v7 = sub_1000C7450();
    *(void *)(v0 + 136) = sub_1000720D0(v7, v8, &v19);
    sub_1000C7850();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "generateBestRepresentation throws error: %s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v18, v17);
  }
  else
  {
    id v9 = *(void **)(v0 + 224);
    uint64_t v11 = *(void *)(v0 + 184);
    uint64_t v10 = *(void *)(v0 + 192);
    uint64_t v12 = *(void *)(v0 + 176);

    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  }
  if (*(unsigned char *)(v0 + 248)) {
    sub_1000C64E0();
  }
  swift_task_dealloc();
  NSBundle v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13(0);
}

uint64_t sub_100075894()
{
  return sub_100045158(40);
}

uint64_t sub_10007589C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_10001AE78;
  return sub_10006F78C(a1, v4, v5, v6);
}

uint64_t sub_100075950()
{
  return sub_100045158(41);
}

uint64_t sub_100075958(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  char v7 = *(unsigned char *)(v1 + 40);
  unint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *unint64_t v8 = v2;
  v8[1] = sub_10001AE78;
  return sub_10005EB44(a1, v4, v5, v6, v7);
}

uint64_t sub_100075A1C@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_100075A44()
{
  return sub_1000114AC();
}

uint64_t sub_100075A6C@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_100075A94()
{
  return sub_1000114AC();
}

uint64_t sub_100075ABC@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_100075AE4()
{
  return sub_1000114AC();
}

uint64_t sub_100075B0C()
{
  return sub_100045158(40);
}

uint64_t sub_100075B14(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  char v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_10001AE78;
  return sub_10005DD18(a1, v4, v5, v6);
}

uint64_t sub_100075BC8()
{
  return sub_100045158(40);
}

uint64_t sub_100075BD0()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10001AE78;
  return sub_10005D060();
}

uint64_t sub_100075C84()
{
  return sub_100045158(40);
}

uint64_t sub_100075C8C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10001AE78;
  return sub_10005B15C();
}

uint64_t sub_100075D40()
{
  return sub_100045158(40);
}

uint64_t sub_100075D48(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  char v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_10001AE78;
  return sub_1000A1810(a1, v4, v5, v6);
}

uint64_t sub_100075E0C(uint64_t a1)
{
  return sub_1000456D0(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_100075E20(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_100075E70(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_100075EE4()
{
  return 16;
}

__n128 sub_100075EF0(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_100075EFC()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100075F44(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  unint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *unint64_t v8 = v2;
  v8[1] = sub_10001AE78;
  return sub_10006AA0C(a1, v4, v5, v7, v6);
}

uint64_t sub_100076004()
{
  return sub_100045158(40);
}

uint64_t sub_10007600C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10001AE78;
  return sub_10006AC2C();
}

uint64_t sub_1000760C0()
{
  return sub_10006AF7C();
}

uint64_t sub_1000760C8()
{
  return sub_10006AEFC();
}

uint64_t sub_100076108()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10007617C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1000761F0()
{
  return sub_10001AEE4();
}

uint64_t sub_100076204()
{
  return sub_10001AEE4();
}

uint64_t sub_100076218@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_10007622C()
{
  return sub_1000114AC();
}

uint64_t sub_100076240()
{
  return sub_10001AEE4();
}

uint64_t sub_100076254()
{
  return sub_10001AEE4();
}

uint64_t sub_100076268()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_beginAccess();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1000C67E0();
    swift_release();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    return sub_1000C67F0();
  }
  return result;
}

uint64_t sub_100076394()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing19PersonInfoViewModel__readWritePermissions;
  uint64_t v2 = sub_100012854(&qword_10010C308);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing19PersonInfoViewModel__readWritePermissionSelected;
  uint64_t v4 = sub_100012854(&qword_10010C310);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing19PersonInfoViewModel__personHasAddPeopleToggle;
  uint64_t v6 = sub_100012854(&qword_10010BB60);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  v7(v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing19PersonInfoViewModel__savingInProgress, v6);
  v7(v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing19PersonInfoViewModel__shouldShowRemoveAccess, v6);
  v7(v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing19PersonInfoViewModel__shouldShowRemoveMe, v6);
  return v0;
}

uint64_t sub_10007653C()
{
  sub_100076394();

  return swift_deallocClassInstance();
}

uint64_t sub_100076594()
{
  return type metadata accessor for PersonInfoViewModel();
}

uint64_t type metadata accessor for PersonInfoViewModel()
{
  uint64_t result = qword_10010D478;
  if (!qword_10010D478) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000765E8()
{
  sub_10007674C();
  if (v0 <= 0x3F)
  {
    sub_10001E1A4(319, &qword_10010C190);
    if (v1 <= 0x3F)
    {
      sub_10001E1A4(319, (unint64_t *)&qword_10010B9B0);
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

void sub_10007674C()
{
  if (!qword_10010C180)
  {
    sub_100013128(&qword_10010C188);
    unint64_t v0 = sub_1000C6800();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10010C180);
    }
  }
}

uint64_t sub_1000767A8@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_1000767BC()
{
  return sub_1000114AC();
}

uint64_t sub_1000767D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v92 = a2;
  uint64_t v93 = a3;
  uint64_t v6 = sub_100012854((uint64_t *)&unk_10010BBD0);
  __chkstk_darwin(v6 - 8);
  unint64_t v8 = (char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100012854((uint64_t *)&unk_10010C3F0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  NSBundle v13 = (char *)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v69 - v14;
  uint64_t v16 = sub_100012854(&qword_10010BC20);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_100012854((uint64_t *)&unk_10010C430);
  uint64_t v72 = *(void *)(v73 - 8);
  __chkstk_darwin(v73);
  Swift::String v71 = (char *)&v69 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_100012854(&qword_10010C388);
  __chkstk_darwin(v75);
  Swift::String v74 = (char *)&v69 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100012854(&qword_10010D570);
  uint64_t v77 = *(void *)(v22 - 8);
  uint64_t v78 = v22;
  __chkstk_darwin(v22);
  Swift::String v76 = (char *)&v69 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_100012854(&qword_10010D578);
  uint64_t v81 = *(void *)(v24 - 8);
  uint64_t v82 = v24;
  __chkstk_darwin(v24);
  Swift::String v80 = (char *)&v69 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::String v87 = v15;
  uint64_t v88 = v9;
  uint64_t v85 = v17;
  Swift::String v86 = v13;
  uint64_t v89 = v16;
  uint64_t v90 = v10;
  Swift::String v83 = v8;
  Swift::String v84 = v19;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && sub_1000C7990()) {
    uint64_t v26 = (void *)sub_100072C7C((unint64_t)_swiftEmptyArrayStorage);
  }
  else {
    uint64_t v26 = &_swiftEmptySetSingleton;
  }
  uint64_t v91 = v4;
  *(void *)(v4 + 112) = v26;
  uint64_t v27 = v4 + 112;
  uint64_t v29 = (void *)v92;
  uint64_t v28 = v93;
  *(void *)(v27 - 96) = v92;
  *(void *)(v27 - 88) = v28;
  *(void *)(v27 - 80) = a1;
  uint64_t v30 = v29[3];
  *(void *)(v27 - 72) = v29[2];
  *(void *)(v27 - 64) = v30;
  uint64_t v31 = v29[5];
  *(void *)(v27 - 56) = v29[4];
  *(void *)(v27 - 48) = v31;
  uint64_t v32 = v29[14];
  *(void *)(v27 - 40) = v29[13];
  *(void *)(v27 - 32) = v32;
  uint64_t v33 = v29[12];
  *(void *)(v27 - 24) = v29[11];
  *(void *)(v27 - 16) = v33;
  uint64_t v34 = *(void **)((char *)v29 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing18PersonRowViewModel_contact);
  uint64_t v79 = v27;
  *(void *)(v27 - 8) = v34;
  uint64_t KeyPath = swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  swift_retain();
  uint64_t v35 = a1;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v36 = v34;
  swift_retain();
  sub_1000C67E0();
  swift_release();
  swift_release();
  int v37 = v95;
  swift_release();
  int v38 = *((unsigned __int8 *)v29 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing18PersonRowViewModel_role);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  LODWORD(v29) = v95;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  char v39 = (char)v95;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  LODWORD(v30) = v95;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  uint64_t v40 = _swiftEmptyArrayStorage;
  if ((v29 & v30 & ((~v39 & 0xC) == 0)) != 0) {
    uint64_t v40 = &off_1000FF580;
  }
  if ((v95 & 0xFE) == 2) {
    uint64_t v41 = v40;
  }
  else {
    uint64_t v41 = &off_1000FF558;
  }
  if (!v38) {
    goto LABEL_10;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000C67E0();
  swift_release();
  swift_release();
  int v42 = v95;
  swift_release();
  if (v42 != 2)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    uint64_t v41 = _swiftEmptyArrayStorage;
  }
  uint64_t v43 = v91;
  swift_beginAccess();
  Swift::String_optional v94 = v41;
  sub_100012854(&qword_10010C188);
  sub_1000C67B0();
  swift_endAccess();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  if (v95 == 3) {
    int v44 = 1;
  }
  else {
    int v44 = v95;
  }
  swift_beginAccess();
  LOBYTE(v94) = v44;
  sub_1000C67B0();
  swift_endAccess();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  char v45 = 0;
  if (v38 && (_BYTE)v95 && !v44)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1000C67E0();
    swift_release();
    swift_release();
    swift_release();
    char v45 = (char)v95;
  }
  swift_beginAccess();
  LOBYTE(v94) = v45;
  sub_1000C67B0();
  swift_endAccess();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  char v46 = (char)v95;
  uint64_t v47 = v43 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing19PersonInfoViewModel__savingInProgress;
  swift_beginAccess();
  LOBYTE(v94) = v46;
  uint64_t KeyPath = v47;
  sub_1000C67B0();
  swift_endAccess();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  char v48 = 0;
  if (v38 && (_BYTE)v95)
  {
    if ((*(unsigned char *)(v92 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing18PersonRowViewModel_isMe) & 1) != 0
      || (swift_getKeyPath(),
          swift_getKeyPath(),
          swift_retain(),
          sub_1000C67E0(),
          swift_release(),
          swift_release(),
          swift_release(),
          v95 == 2))
    {
      char v48 = 0;
    }
    else
    {
      char v48 = v95 & (v37 != 1);
    }
  }
  swift_beginAccess();
  LOBYTE(v94) = v48;
  sub_1000C67B0();
  swift_endAccess();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  if (v95 == 1) {
    char v49 = (v38 != 0) & *(unsigned char *)(v92 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing18PersonRowViewModel_isMe);
  }
  else {
    char v49 = 0;
  }
  swift_beginAccess();
  LOBYTE(v94) = v49;
  sub_1000C67B0();
  swift_endAccess();
  swift_beginAccess();
  sub_100012854(&qword_10010C310);
  uint64_t v50 = v71;
  sub_1000C67C0();
  swift_endAccess();
  sub_10001E454(&qword_10010C538, (uint64_t *)&unk_10010C430);
  sub_10003F3A8();
  uint64_t v51 = v73;
  sub_1000C6860();
  (*(void (**)(char *, uint64_t))(v72 + 8))(v50, v51);
  swift_beginAccess();
  swift_retain();
  uint64_t v92 = sub_100012854(&qword_10010BB60);
  uint64_t v52 = v87;
  sub_1000C67C0();
  swift_endAccess();
  swift_release();
  uint64_t v73 = sub_10001E454((unint64_t *)&unk_10010C4C0, (uint64_t *)&unk_10010C3F0);
  uint64_t v69 = v35;
  NSBundle v53 = v84;
  uint64_t v54 = v88;
  sub_1000C6860();
  uint64_t v72 = *(void *)(v90 + 8);
  ((void (*)(char *, uint64_t))v72)(v52, v54);
  sub_10001E454(&qword_10010C550, &qword_10010C388);
  Swift::String v71 = (char *)sub_10001E454((unint64_t *)&unk_10010BC60, &qword_10010BC20);
  uint64_t v55 = v76;
  sub_1000C66E0();
  id v95 = [self mainRunLoop];
  uint64_t v56 = sub_1000C7820();
  uint64_t v57 = (uint64_t)v83;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v83, 1, 1, v56);
  sub_100044B40();
  sub_10001E454(&qword_10010D580, &qword_10010D570);
  sub_10001E278();
  NSBundle v58 = v80;
  uint64_t v59 = v78;
  sub_1000C6850();
  sub_10001E2E0(v57);

  (*(void (**)(char *, uint64_t))(v77 + 8))(v55, v59);
  uint64_t v60 = swift_allocObject();
  uint64_t v61 = v91;
  swift_weakInit();
  uint64_t v62 = swift_allocObject();
  uint64_t v63 = v69;
  *(void *)(v62 + 16) = v60;
  *(void *)(v62 + 24) = v63;
  uint64_t v64 = swift_allocObject();
  *(void *)(v64 + 16) = sub_10007793C;
  *(void *)(v64 + 24) = v62;
  sub_10001E454(qword_10010D588, &qword_10010D578);
  swift_retain();
  uint64_t v65 = v82;
  sub_1000C6870();
  swift_release();
  (*(void (**)(char *, uint64_t))(v81 + 8))(v58, v65);
  swift_beginAccess();
  sub_1000C6760();
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  sub_1000C67C0();
  swift_endAccess();
  sub_1000C6860();
  uint64_t v66 = (void (*)(char *, uint64_t))v72;
  ((void (*)(char *, uint64_t))v72)(v52, v54);
  swift_beginAccess();
  sub_1000C67C0();
  swift_endAccess();
  uint64_t v67 = v89;
  sub_1000C6880();
  (*(void (**)(char *, uint64_t))(v85 + 8))(v53, v67);
  (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v86, v52, v54);
  swift_beginAccess();
  sub_1000C67D0();
  swift_endAccess();
  v66(v52, v54);
  return v61;
}

uint64_t sub_100077874@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_10007789C()
{
  return sub_1000114AC();
}

uint64_t sub_1000778C4()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000778FC()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10007793C()
{
  return sub_100076268();
}

uint64_t sub_100077944()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10007797C(unsigned __int8 *a1)
{
  return (*(uint64_t (**)(void, void))(v1 + 16))(*a1, a1[1]);
}

uint64_t sub_1000779BC@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_1000779E4()
{
  return sub_1000114AC();
}

uint64_t Publishers.CSCombineLatest6.init(_:_:_:_:_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a7 - 8) + 32))(a9, a1, a7);
  uint64_t v16 = (int *)type metadata accessor for Publishers.CSCombineLatest6();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a8 - 8) + 32))(a9 + v16[29], a2, a8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a10 - 8) + 32))(a9 + v16[30], a3, a10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a11 - 8) + 32))(a9 + v16[31], a4, a11);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a12 - 8) + 32))(a9 + v16[32], a5, a12);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a13 - 8) + 32))(a9 + v16[33], a6, a13);
}

uint64_t type metadata accessor for Publishers.CSCombineLatest6()
{
  return swift_getGenericMetadata();
}

uint64_t Publishers.CSCombineLatest5.b.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 24) - 8) + 16))(a2, v2 + *(int *)(a1 + 100));
}

uint64_t Publishers.CSCombineLatest5.c.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 32) - 8) + 16))(a2, v2 + *(int *)(a1 + 104));
}

uint64_t Publishers.CSCombineLatest5.d.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 40) - 8) + 16))(a2, v2 + *(int *)(a1 + 108));
}

uint64_t Publishers.CSCombineLatest5.e.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 48) - 8) + 16))(a2, v2 + *(int *)(a1 + 112));
}

uint64_t Publishers.CSCombineLatest5.init(_:_:_:_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(a9, a1, a6);
  uint64_t v17 = (int *)type metadata accessor for Publishers.CSCombineLatest5();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a7 - 8) + 32))(a9 + v17[25], a2, a7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a8 - 8) + 32))(a9 + v17[26], a3, a8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a10 - 8) + 32))(a9 + v17[27], a4, a10);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a11 - 8) + 32))(a9 + v17[28], a5, a11);
}

uint64_t type metadata accessor for Publishers.CSCombineLatest5()
{
  return swift_getGenericMetadata();
}

uint64_t Publishers.CSCombineLatest5.receive<A>(subscriber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v86 = a4;
  uint64_t v85 = a3;
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v87 = a1;
  uint64_t v88 = v5;
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 56);
  uint64_t v9 = *(void *)(a2 + 64);
  uint64_t v10 = *(void *)(a2 + 72);
  uint64_t AssociatedTypeWitness = v6;
  uint64_t v102 = v5;
  uint64_t v90 = v6;
  uint64_t v103 = v7;
  uint64_t v104 = v8;
  uint64_t v98 = v8;
  uint64_t v99 = v7;
  uint64_t v105 = v9;
  uint64_t v106 = v10;
  uint64_t v96 = v10;
  uint64_t v97 = v9;
  uint64_t v100 = sub_1000C66F0();
  uint64_t v11 = *(void *)(a2 + 40);
  uint64_t v91 = *(void *)(a2 + 48);
  uint64_t v93 = (char *)&protocol conformance descriptor for Publishers.CombineLatest3<A, B, C>;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v12 = *(void *)(a2 + 80);
  uint64_t v106 = *(void *)(a2 + 88);
  uint64_t v95 = v12;
  uint64_t v76 = v106;
  uint64_t v94 = sub_1000C66F0();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v13 = v88;
  uint64_t v102 = swift_getAssociatedTypeWitness();
  uint64_t v14 = v99;
  uint64_t v103 = swift_getAssociatedTypeWitness();
  uint64_t v89 = v11;
  uint64_t v104 = swift_getAssociatedTypeWitness();
  uint64_t v105 = swift_getAssociatedTypeWitness();
  uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
  uint64_t v15 = v94;
  uint64_t v80 = swift_getWitnessTable();
  uint64_t v82 = sub_1000C6740();
  uint64_t v83 = *(void *)(v82 - 8);
  uint64_t v16 = __chkstk_darwin(v82);
  uint64_t v78 = (char *)&v68 - v17;
  uint64_t v75 = *(void *)(v91 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  Swift::String v74 = (char *)&v68 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = *(void *)(v11 - 8);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v73 = (char *)&v68 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = *(void *)(v15 - 8);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v93 = (char *)&v68 - v23;
  uint64_t v24 = *(void *)(v14 - 8);
  uint64_t v25 = __chkstk_darwin(v22);
  uint64_t v27 = (char *)&v68 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = v13;
  uint64_t v29 = *(void *)(v13 - 8);
  uint64_t v30 = __chkstk_darwin(v25);
  uint64_t v32 = (char *)&v68 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __chkstk_darwin(v30);
  uint64_t v35 = (char *)&v68 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = *(void *)(v100 - 8);
  uint64_t v36 = __chkstk_darwin(v33);
  Swift::String v70 = (char *)&v68 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v36);
  char v39 = (char *)&v68 - v38;
  uint64_t v41 = v79;
  uint64_t v43 = v42;
  (*(void (**)(char *, uint64_t))(v40 + 16))(v35, v79);
  uint64_t v69 = a2;
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v32, v41 + *(int *)(a2 + 100), v28);
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v27, v41 + *(int *)(a2 + 104), v99);
  uint64_t v72 = v39;
  uint64_t v44 = v43;
  sub_1000C6700();
  (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v70, v39, v100);
  uint64_t v45 = v69;
  uint64_t v46 = v89;
  (*(void (**)(char *, uint64_t, uint64_t))(v71 + 16))(v73, v41 + *(int *)(v69 + 108), v89);
  uint64_t v47 = v91;
  (*(void (**)(char *, uint64_t, uint64_t))(v75 + 16))(v74, v41 + *(int *)(v45 + 112), v91);
  uint64_t v48 = v76;
  uint64_t v49 = v46;
  uint64_t v50 = v47;
  uint64_t v51 = v95;
  sub_1000C6700();
  uint64_t v52 = (void *)swift_allocObject();
  v52[2] = v44;
  v52[3] = v28;
  uint64_t v53 = v98;
  uint64_t v54 = v99;
  v52[4] = v99;
  v52[5] = v49;
  uint64_t v55 = v85;
  v52[6] = v50;
  v52[7] = v55;
  uint64_t v56 = v96;
  uint64_t v57 = v97;
  v52[8] = v53;
  v52[9] = v57;
  v52[10] = v56;
  v52[11] = v51;
  uint64_t v58 = v86;
  v52[12] = v48;
  v52[13] = v58;
  uint64_t v59 = (void *)swift_allocObject();
  uint64_t v60 = v88;
  v59[2] = v90;
  v59[3] = v60;
  uint64_t v61 = v89;
  v59[4] = v54;
  v59[5] = v61;
  v59[6] = v50;
  v59[7] = v55;
  v59[8] = v53;
  v59[9] = v57;
  uint64_t v62 = v95;
  v59[10] = v56;
  v59[11] = v62;
  v59[12] = v48;
  v59[13] = v58;
  v59[14] = sub_100078D88;
  v59[15] = v52;
  uint64_t v63 = v78;
  uint64_t v65 = v93;
  uint64_t v64 = v94;
  sub_1000C6830();
  swift_release();
  uint64_t v66 = v82;
  sub_1000C6730();
  (*(void (**)(char *, uint64_t))(v83 + 8))(v63, v66);
  (*(void (**)(char *, uint64_t))(v77 + 8))(v65, v64);
  return (*(uint64_t (**)(char *, uint64_t))(v92 + 8))(v72, v100);
}

uint64_t sub_100078798(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, void (*a6)(char *, char *, uint64_t), char *a7, char *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v65 = a8;
  uint64_t v66 = a7;
  uint64_t v67 = a1;
  uint64_t v81 = a6;
  uint64_t v75 = a21;
  uint64_t v73 = a4;
  uint64_t v74 = a15;
  uint64_t v76 = a10;
  uint64_t v77 = a5;
  uint64_t v71 = a3;
  uint64_t v72 = a9;
  uint64_t v70 = a20;
  uint64_t v68 = a2;
  uint64_t v69 = a14;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v22 = swift_getAssociatedTypeWitness();
  uint64_t v23 = swift_getAssociatedTypeWitness();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v25 = TupleTypeMetadata3 - 8;
  uint64_t v26 = __chkstk_darwin(TupleTypeMetadata3);
  uint64_t v85 = (char *)&v58 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v26);
  Swift::String v84 = (char *)&v58 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v79 = (char *)&v58 - v31;
  __chkstk_darwin(v30);
  uint64_t v80 = (char *)&v58 + *(int *)(v25 + 56) - v32;
  uint64_t v33 = v80;
  uint64_t v78 = (char *)&v58 + *(int *)(v25 + 72) - v32;
  uint64_t v34 = v78;
  uint64_t v61 = AssociatedTypeWitness;
  uint64_t v86 = *(void **)(AssociatedTypeWitness - 8);
  uint64_t v82 = (void (*)(void))v86[2];
  uint64_t v83 = (char *)&v58 - v32;
  ((void (*)(char *, void, uint64_t))v82)((char *)&v58 - v32, v81, AssociatedTypeWitness);
  uint64_t v63 = *(void *)(v22 - 8);
  uint64_t v81 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
  uint64_t v58 = v22;
  v81(v33, v66, v22);
  uint64_t v64 = *(void *)(v23 - 8);
  uint64_t v35 = *(void (**)(char *, char *))(v64 + 16);
  uint64_t v59 = v23;
  v35(v34, v65);
  uint64_t v60 = (void (*)(char *, char *, uint64_t))v35;
  uint64_t v66 = &v79[*(int *)(v25 + 56)];
  uint64_t v36 = v66;
  uint64_t v65 = &v79[*(int *)(v25 + 72)];
  uint64_t v37 = v65;
  uint64_t v38 = v61;
  v82();
  v81(v36, v80, v22);
  char v39 = v78;
  ((void (*)(char *, char *, uint64_t))v35)(v37, v78, v23);
  uint64_t v62 = (void (*)(void))v86[4];
  ((void (*)(uint64_t, char *, uint64_t))v62)(v67, v79, v38);
  uint64_t v40 = &v84[*(int *)(v25 + 56)];
  uint64_t v79 = &v84[*(int *)(v25 + 72)];
  uint64_t v41 = v79;
  v82();
  uint64_t v42 = v80;
  uint64_t v43 = v58;
  v81(v40, v80, v58);
  uint64_t v44 = v39;
  uint64_t v45 = v59;
  v60(v41, v44, v59);
  uint64_t v46 = v63;
  uint64_t v47 = *(void (**)(uint64_t, char *, uint64_t))(v63 + 32);
  v47(v68, v40, v43);
  uint64_t v48 = &v85[*(int *)(v25 + 56)];
  uint64_t v49 = &v85[*(int *)(v25 + 72)];
  v62();
  v47((uint64_t)v48, v42, v43);
  uint64_t v50 = v64;
  uint64_t v51 = *(void (**)(char *, char *, uint64_t))(v64 + 32);
  v51(v49, v78, v45);
  v51(v71, v49, v45);
  uint64_t v52 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 16))(v73, v72, v52);
  uint64_t v53 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 16))(v77, v76, v53);
  uint64_t v54 = *(void (**)(char *, uint64_t))(v46 + 8);
  v54(v48, v43);
  uint64_t v55 = (void (*)(char *, uint64_t))v86[1];
  v55(v85, v38);
  uint64_t v56 = *(void (**)(char *, uint64_t))(v50 + 8);
  v56(v79, v45);
  v55(v84, v38);
  v56(v65, v45);
  return ((uint64_t (*)(char *, uint64_t))v54)(v66, v43);
}

uint64_t sub_100078D78()
{
  return _swift_deallocObject(v0, 112, 7);
}

uint64_t sub_100078D88(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, void (*a6)(char *, char *, uint64_t), char *a7, char *a8, uint64_t a9, uint64_t a10)
{
  return sub_100078798(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, v10[2], v10[3], v10[4], v10[5], v10[6], v10[7], v10[8], v10[9], v10[10],
           v10[11],
           v10[12]);
}

uint64_t sub_100078DD0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v12 = a1 + *(int *)(TupleTypeMetadata3 + 48);
  uint64_t v6 = a1 + *(int *)(TupleTypeMetadata3 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v7 = swift_getTupleTypeMetadata3();
  uint64_t v8 = a1 + *(int *)(v7 + 48);
  uint64_t v9 = a1 + *(int *)(v7 + 64);
  uint64_t TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  return a2(a3, a3 + TupleTypeMetadata[12], a3 + TupleTypeMetadata[16], a3 + TupleTypeMetadata[20], a3 + TupleTypeMetadata[24], a1, v12, v6, v8, v9);
}

uint64_t sub_100078F9C()
{
  swift_release();

  return _swift_deallocObject(v0, 128, 7);
}

uint64_t sub_100078FD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100078DD0(a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 112), a2);
}

uint64_t sub_100079020(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return Publishers.CSCombineLatest5.receive<A>(subscriber:)(a1, a4, a2, a3);
}

uint64_t Publishers.CSCombineLatest6.b.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 24) - 8) + 16))(a2, v2 + *(int *)(a1 + 116));
}

uint64_t Publishers.CSCombineLatest6.c.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 32) - 8) + 16))(a2, v2 + *(int *)(a1 + 120));
}

uint64_t Publishers.CSCombineLatest6.d.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 40) - 8) + 16))(a2, v2 + *(int *)(a1 + 124));
}

uint64_t Publishers.CSCombineLatest6.e.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 48) - 8) + 16))(a2, v2 + *(int *)(a1 + 128));
}

uint64_t Publishers.CSCombineLatest6.f.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 56) - 8) + 16))(a2, v2 + *(int *)(a1 + 132));
}

uint64_t Publishers.CSCombineLatest6.receive<A>(subscriber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v90 = a4;
  uint64_t v89 = a3;
  uint64_t v91 = a1;
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 64);
  uint64_t v9 = *(void *)(a2 + 72);
  uint64_t v104 = *(void *)(a2 + 80);
  uint64_t v105 = v7;
  uint64_t AssociatedTypeWitness = v5;
  uint64_t v108 = v6;
  uint64_t v93 = v5;
  uint64_t v106 = v6;
  uint64_t v109 = v7;
  uint64_t v110 = v8;
  uint64_t v98 = v9;
  uint64_t v99 = v8;
  uint64_t v111 = v9;
  uint64_t v112 = v104;
  uint64_t v10 = sub_1000C66F0();
  uint64_t v11 = *(void *)(a2 + 48);
  uint64_t v100 = *(void *)(a2 + 40);
  uint64_t v101 = v11;
  uint64_t v102 = *(void *)(a2 + 56);
  uint64_t v103 = v10;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v12 = *(void *)(a2 + 96);
  uint64_t v13 = *(void *)(a2 + 104);
  uint64_t v82 = *(void *)(a2 + 88);
  uint64_t v113 = v12;
  uint64_t v114 = v13;
  uint64_t v96 = v13;
  uint64_t v97 = v12;
  uint64_t v95 = sub_1000C6710();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v108 = swift_getAssociatedTypeWitness();
  uint64_t v14 = v105;
  uint64_t v109 = swift_getAssociatedTypeWitness();
  uint64_t v15 = v100;
  uint64_t v110 = swift_getAssociatedTypeWitness();
  uint64_t v111 = swift_getAssociatedTypeWitness();
  uint64_t v112 = swift_getAssociatedTypeWitness();
  uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
  uint64_t v16 = v95;
  uint64_t v84 = swift_getWitnessTable();
  uint64_t v86 = sub_1000C6740();
  uint64_t v87 = *(void *)(v86 - 8);
  uint64_t v17 = __chkstk_darwin(v86);
  uint64_t v81 = (char *)v71 - v18;
  uint64_t v79 = *(void *)(v102 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v78 = (char *)v71 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = *(void *)(v11 - 8);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v76 = (char *)v71 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = *(void *)(v15 - 8);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v73 = (char *)v71 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = *(void *)(v16 - 8);
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v94 = (char *)v71 - v26;
  uint64_t v27 = *(void *)(v14 - 8);
  uint64_t v28 = __chkstk_darwin(v25);
  uint64_t v72 = (char *)v71 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = *(void *)(v106 - 8);
  uint64_t v31 = __chkstk_darwin(v28);
  uint64_t v33 = (char *)v71 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = v93;
  uint64_t v35 = __chkstk_darwin(v31);
  uint64_t v37 = (char *)v71 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = *(void *)(v103 - 8);
  uint64_t v38 = __chkstk_darwin(v35);
  uint64_t v40 = (char *)v71 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71[1] = v40;
  __chkstk_darwin(v38);
  uint64_t v42 = (char *)v71 - v41;
  uint64_t v74 = (char *)v71 - v41;
  uint64_t v44 = v83;
  (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v37, v83, v34);
  uint64_t v45 = v44;
  (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v33, v44 + *(int *)(a2 + 116), v106);
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v72, v44 + *(int *)(a2 + 120), v105);
  sub_1000C6700();
  (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v40, v42, v103);
  uint64_t v46 = v100;
  (*(void (**)(char *, uint64_t, uint64_t))(v75 + 16))(v73, v44 + *(int *)(a2 + 124), v100);
  uint64_t v47 = v101;
  (*(void (**)(char *, uint64_t, uint64_t))(v77 + 16))(v76, v45 + *(int *)(a2 + 128), v101);
  uint64_t v48 = v102;
  (*(void (**)(char *, uint64_t, uint64_t))(v79 + 16))(v78, v45 + *(int *)(a2 + 132), v102);
  uint64_t v49 = v96;
  uint64_t v50 = v82;
  uint64_t v51 = v46;
  uint64_t v52 = v47;
  sub_1000C6720();
  uint64_t v53 = (void *)swift_allocObject();
  uint64_t v54 = v93;
  uint64_t v55 = v106;
  v53[2] = v93;
  v53[3] = v55;
  uint64_t v56 = v104;
  v53[4] = v105;
  v53[5] = v51;
  v53[6] = v52;
  v53[7] = v48;
  uint64_t v57 = v89;
  uint64_t v59 = v98;
  uint64_t v58 = v99;
  v53[8] = v89;
  v53[9] = v58;
  v53[10] = v59;
  v53[11] = v56;
  uint64_t v60 = v97;
  v53[12] = v50;
  v53[13] = v60;
  uint64_t v61 = v90;
  v53[14] = v49;
  v53[15] = v61;
  uint64_t v62 = (void *)swift_allocObject();
  uint64_t v63 = v106;
  v62[2] = v54;
  v62[3] = v63;
  uint64_t v64 = v100;
  v62[4] = v105;
  v62[5] = v64;
  uint64_t v65 = v102;
  v62[6] = v101;
  v62[7] = v65;
  v62[8] = v57;
  v62[9] = v58;
  v62[10] = v59;
  v62[11] = v56;
  v62[12] = v50;
  v62[13] = v60;
  uint64_t v66 = v95;
  v62[14] = v96;
  v62[15] = v61;
  v62[16] = sub_10007A1DC;
  v62[17] = v53;
  uint64_t v67 = v81;
  uint64_t v68 = v94;
  sub_1000C6830();
  swift_release();
  uint64_t v69 = v86;
  sub_1000C6730();
  (*(void (**)(char *, uint64_t))(v87 + 8))(v67, v69);
  (*(void (**)(char *, uint64_t))(v80 + 8))(v68, v66);
  return (*(uint64_t (**)(char *, uint64_t))(v92 + 8))(v74, v103);
}

uint64_t sub_100079B24(char *a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, char *a8, char *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  uint64_t v77 = a8;
  uint64_t v96 = a7;
  uint64_t v91 = a6;
  uint64_t v89 = a5;
  uint64_t v85 = a4;
  uint64_t v81 = a3;
  uint64_t v78 = a2;
  uint64_t v76 = a1;
  uint64_t v90 = a12;
  uint64_t v88 = a25;
  uint64_t v86 = a11;
  uint64_t v87 = a18;
  uint64_t v83 = a17;
  uint64_t v84 = a24;
  uint64_t v82 = a10;
  uint64_t v75 = a9;
  uint64_t v80 = a23;
  uint64_t v79 = a16;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v26 = swift_getAssociatedTypeWitness();
  uint64_t v27 = swift_getAssociatedTypeWitness();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v29 = TupleTypeMetadata3 - 8;
  uint64_t v30 = __chkstk_darwin(TupleTypeMetadata3);
  uint64_t v97 = (char *)&v66 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v98 = (char *)&v66 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v36 = (char *)&v66 - v35;
  __chkstk_darwin(v34);
  uint64_t v92 = (char *)&v66 + *(int *)(v29 + 56) - v37;
  uint64_t v38 = v92;
  uint64_t v93 = (char *)&v66 - v37;
  uint64_t v39 = (char *)&v66 + *(int *)(v29 + 72) - v37;
  uint64_t v99 = *(void **)(AssociatedTypeWitness - 8);
  uint64_t v100 = AssociatedTypeWitness;
  uint64_t v40 = v99 + 2;
  uint64_t v95 = (void (*)(void))v99[2];
  ((void (*)(char *, void *, uint64_t))v95)((char *)&v66 - v37, v96, AssociatedTypeWitness);
  uint64_t v69 = v40;
  uint64_t v96 = *(void **)(v26 - 8);
  uint64_t v94 = (void (*)(char *, char *, uint64_t))v96[2];
  uint64_t v70 = v26;
  v94(v38, v77, v26);
  uint64_t v68 = v27;
  uint64_t v74 = *(void *)(v27 - 8);
  uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v74 + 16);
  uint64_t v71 = v39;
  v41(v39, v75, v27);
  uint64_t v72 = v41;
  uint64_t v42 = *(int *)(v29 + 56);
  uint64_t v67 = v36;
  uint64_t v43 = &v36[v42];
  uint64_t v77 = &v36[v42];
  uint64_t v75 = &v36[*(int *)(v29 + 72)];
  uint64_t v44 = v75;
  ((void (*)(char *, char *, uint64_t))v95)(v36, v93, v100);
  uint64_t v45 = v43;
  uint64_t v46 = v92;
  v94(v45, v92, v26);
  uint64_t v47 = v68;
  v41(v44, v39, v68);
  uint64_t v73 = (void (*)(void))v99[4];
  ((void (*)(char *, char *, uint64_t))v73)(v76, v67, v100);
  uint64_t v67 = &v98[*(int *)(v29 + 56)];
  uint64_t v48 = v67;
  uint64_t v76 = &v98[*(int *)(v29 + 72)];
  uint64_t v49 = v76;
  v95();
  uint64_t v50 = v46;
  uint64_t v51 = v70;
  v94(v48, v50, v70);
  uint64_t v52 = v71;
  v72(v49, v71, v47);
  uint64_t v53 = (void (*)(uint64_t, char *, uint64_t))v96[4];
  v53(v78, v67, v51);
  uint64_t v54 = &v97[*(int *)(v29 + 56)];
  uint64_t v55 = &v97[*(int *)(v29 + 72)];
  v73();
  v53((uint64_t)v54, v92, v51);
  uint64_t v56 = v74;
  uint64_t v57 = *(void (**)(char *, char *, uint64_t))(v74 + 32);
  v57(v55, v52, v47);
  v57(v81, v55, v47);
  uint64_t v58 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 16))(v85, v82, v58);
  uint64_t v59 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 16))(v89, v86, v59);
  uint64_t v60 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 16))(v91, v90, v60);
  uint64_t v61 = (void (*)(char *, uint64_t))v96[1];
  v61(v54, v51);
  uint64_t v62 = v100;
  uint64_t v63 = (void (*)(char *, uint64_t))v99[1];
  v63(v97, v100);
  uint64_t v64 = *(void (**)(char *, uint64_t))(v56 + 8);
  v64(v76, v47);
  v63(v98, v62);
  v64(v75, v47);
  return ((uint64_t (*)(char *, uint64_t))v61)(v77, v51);
}

uint64_t sub_10007A1CC()
{
  return _swift_deallocObject(v0, 128, 7);
}

uint64_t sub_10007A1DC(char *a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, char *a8, char *a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return sub_100079B24(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, v12[2], v12[3], v12[4], v12[5], v12[6], v12[7], v12[8],
           v12[9],
           v12[10],
           v12[11],
           v12[12],
           v12[13],
           v12[14]);
}

uint64_t sub_10007A22C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v13 = a1 + *(int *)(TupleTypeMetadata3 + 48);
  uint64_t v12 = a1 + *(int *)(TupleTypeMetadata3 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  uint64_t TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  uint64_t v7 = a1 + TupleTypeMetadata[12];
  uint64_t v8 = a1 + TupleTypeMetadata[16];
  uint64_t v9 = a1 + TupleTypeMetadata[20];
  uint64_t v10 = (int *)swift_getTupleTypeMetadata();
  return a2(a3, a3 + v10[12], a3 + v10[16], a3 + v10[20], a3 + v10[24], a3 + v10[28], a1, v13, v12, v7, v8, v9);
}

uint64_t sub_10007A444()
{
  swift_release();

  return _swift_deallocObject(v0, 144, 7);
}

uint64_t sub_10007A47C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10007A22C(a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 128), a2);
}

uint64_t sub_10007A4CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return Publishers.CSCombineLatest6.receive<A>(subscriber:)(a1, a4, a2, a3);
}

uint64_t _s7Combine10PublishersO025com_apple_CloudSharingUI_eF0E16CSCombineLatest7V1axvg_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t Publishers.CSCombineLatest7.b.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 24) - 8) + 16))(a2, v2 + *(int *)(a1 + 132));
}

uint64_t Publishers.CSCombineLatest7.c.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 32) - 8) + 16))(a2, v2 + *(int *)(a1 + 136));
}

uint64_t Publishers.CSCombineLatest7.d.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 40) - 8) + 16))(a2, v2 + *(int *)(a1 + 140));
}

uint64_t Publishers.CSCombineLatest7.e.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 48) - 8) + 16))(a2, v2 + *(int *)(a1 + 144));
}

uint64_t Publishers.CSCombineLatest7.f.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 56) - 8) + 16))(a2, v2 + *(int *)(a1 + 148));
}

uint64_t Publishers.CSCombineLatest7.g.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 64) - 8) + 16))(a2, v2 + *(int *)(a1 + 152));
}

uint64_t Publishers.CSCombineLatest7.init(_:_:_:_:_:_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a8 - 8) + 32))(a9, a1, a8);
  uint64_t v17 = (int *)type metadata accessor for Publishers.CSCombineLatest7();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a10 - 8) + 32))(a9 + v17[33], a2, a10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a11 - 8) + 32))(a9 + v17[34], a3, a11);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a12 - 8) + 32))(a9 + v17[35], a4, a12);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a13 - 8) + 32))(a9 + v17[36], a5, a13);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a14 - 8) + 32))(a9 + v17[37], a6, a14);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a15 - 8) + 32))(a9 + v17[38], a7, a15);
}

uint64_t type metadata accessor for Publishers.CSCombineLatest7()
{
  return swift_getGenericMetadata();
}

uint64_t Publishers.CSCombineLatest7.receive<A>(subscriber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v94 = a4;
  uint64_t v93 = a3;
  uint64_t v95 = a1;
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 40);
  uint64_t v111 = *(void *)(a2 + 32);
  uint64_t v112 = v5;
  uint64_t v8 = *(void *)(a2 + 72);
  uint64_t v9 = *(void *)(a2 + 80);
  uint64_t v10 = *(void *)(a2 + 88);
  uint64_t v110 = *(void *)(a2 + 96);
  uint64_t v113 = v6;
  uint64_t AssociatedTypeWitness = v6;
  uint64_t v115 = v5;
  uint64_t v116 = v111;
  uint64_t v117 = v7;
  uint64_t v118 = v8;
  uint64_t v104 = v8;
  uint64_t v105 = v7;
  uint64_t v119 = v9;
  uint64_t v120 = v10;
  uint64_t v102 = v10;
  uint64_t v103 = v9;
  uint64_t v121 = v110;
  uint64_t v11 = sub_1000C6710();
  uint64_t v12 = *(void *)(a2 + 56);
  uint64_t v106 = *(void *)(a2 + 48);
  uint64_t v107 = v12;
  uint64_t v108 = *(void *)(a2 + 64);
  uint64_t v109 = v11;
  uint64_t v98 = (char *)&protocol conformance descriptor for Publishers.CombineLatest4<A, B, C, D>;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v13 = *(void *)(a2 + 112);
  uint64_t v14 = *(void *)(a2 + 120);
  uint64_t v101 = *(void *)(a2 + 104);
  uint64_t v121 = v14;
  uint64_t v85 = v13;
  uint64_t v100 = v14;
  uint64_t v99 = sub_1000C6710();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v115 = swift_getAssociatedTypeWitness();
  uint64_t v15 = v111;
  uint64_t v116 = swift_getAssociatedTypeWitness();
  uint64_t v16 = v105;
  uint64_t v117 = swift_getAssociatedTypeWitness();
  uint64_t v17 = v106;
  uint64_t v118 = swift_getAssociatedTypeWitness();
  uint64_t v119 = swift_getAssociatedTypeWitness();
  uint64_t v120 = swift_getAssociatedTypeWitness();
  uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
  uint64_t v18 = v99;
  uint64_t v88 = swift_getWitnessTable();
  uint64_t v90 = sub_1000C6740();
  uint64_t v91 = *(void *)(v90 - 8);
  uint64_t v19 = __chkstk_darwin(v90);
  uint64_t v86 = (char *)&v75 - v20;
  uint64_t v83 = *(void *)(v108 - 8);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v82 = (char *)&v75 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = *(void *)(v12 - 8);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v80 = (char *)&v75 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = *(void *)(v17 - 8);
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v78 = (char *)&v75 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = *(void *)(v18 - 8);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v98 = (char *)&v75 - v28;
  uint64_t v75 = *(void *)(v16 - 8);
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v76 = (char *)&v75 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = *(void *)(v15 - 8);
  uint64_t v32 = __chkstk_darwin(v29);
  uint64_t v34 = (char *)&v75 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = v112;
  uint64_t v36 = *(void *)(v112 - 8);
  uint64_t v37 = __chkstk_darwin(v32);
  uint64_t v39 = (char *)&v75 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = __chkstk_darwin(v37);
  uint64_t v42 = (char *)&v75 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = *(void *)(v109 - 8);
  uint64_t v43 = __chkstk_darwin(v40);
  uint64_t v96 = (char *)&v75 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v43);
  uint64_t v46 = (char *)&v75 - v45;
  uint64_t v48 = v87;
  (*(void (**)(char *, uint64_t))(v47 + 16))(v42, v87);
  (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v39, v48 + *(int *)(a2 + 132), v35);
  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v34, v48 + *(int *)(a2 + 136), v111);
  (*(void (**)(char *, uint64_t, uint64_t))(v75 + 16))(v76, v48 + *(int *)(a2 + 140), v105);
  uint64_t v77 = v46;
  sub_1000C6720();
  (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v96, v46, v109);
  uint64_t v49 = v106;
  (*(void (**)(char *, uint64_t, uint64_t))(v79 + 16))(v78, v48 + *(int *)(a2 + 144), v106);
  uint64_t v50 = v107;
  (*(void (**)(char *, uint64_t, uint64_t))(v81 + 16))(v80, v48 + *(int *)(a2 + 148), v107);
  uint64_t v51 = v48 + *(int *)(a2 + 152);
  uint64_t v52 = v108;
  (*(void (**)(char *, uint64_t, uint64_t))(v83 + 16))(v82, v51, v108);
  uint64_t v53 = v100;
  uint64_t v54 = v85;
  uint64_t v55 = v101;
  uint64_t v56 = v50;
  uint64_t v57 = v52;
  sub_1000C6720();
  uint64_t v58 = (void *)swift_allocObject();
  uint64_t v59 = v112;
  v58[2] = v113;
  v58[3] = v59;
  uint64_t v60 = v105;
  v58[4] = v111;
  v58[5] = v60;
  v58[6] = v49;
  v58[7] = v56;
  uint64_t v61 = v93;
  v58[8] = v57;
  v58[9] = v61;
  uint64_t v63 = v103;
  uint64_t v62 = v104;
  v58[10] = v104;
  v58[11] = v63;
  uint64_t v64 = v102;
  uint64_t v65 = v110;
  v58[12] = v102;
  v58[13] = v65;
  v58[14] = v55;
  v58[15] = v54;
  uint64_t v66 = v94;
  v58[16] = v53;
  v58[17] = v66;
  uint64_t v67 = (void *)swift_allocObject();
  uint64_t v68 = v112;
  void v67[2] = v113;
  v67[3] = v68;
  v67[4] = v111;
  v67[5] = v60;
  uint64_t v69 = v107;
  v67[6] = v106;
  v67[7] = v69;
  v67[8] = v108;
  v67[9] = v61;
  v67[10] = v62;
  v67[11] = v63;
  v67[12] = v64;
  v67[13] = v65;
  v67[14] = v101;
  v67[15] = v54;
  v67[16] = v100;
  v67[17] = v66;
  v67[18] = sub_10007BE54;
  v67[19] = v58;
  uint64_t v70 = v86;
  uint64_t v71 = v99;
  uint64_t v72 = v98;
  sub_1000C6830();
  swift_release();
  uint64_t v73 = v90;
  sub_1000C6730();
  (*(void (**)(char *, uint64_t))(v91 + 8))(v70, v73);
  (*(void (**)(char *, uint64_t))(v84 + 8))(v72, v71);
  return (*(uint64_t (**)(char *, uint64_t))(v97 + 8))(v77, v109);
}

uint64_t sub_10007B3A4(char *a1, char *a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(char *, uint64_t), void (*a10)(char *, char *, uint64_t), char *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, void (*a17)(char *, char *, uint64_t), uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void (*a24)(char *, uint64_t),uint64_t a25,void *a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  uint64_t v141 = a8;
  uint64_t v118 = a7;
  uint64_t v116 = a6;
  uint64_t v112 = a5;
  uint64_t v108 = a4;
  uint64_t v105 = a3;
  uint64_t v104 = a2;
  uint64_t v101 = a1;
  uint64_t v115 = a29;
  uint64_t v114 = a21;
  uint64_t v117 = a14;
  uint64_t v113 = a13;
  uint64_t v111 = a28;
  uint64_t v107 = a27;
  uint64_t v110 = a20;
  uint64_t v106 = a19;
  uint64_t v109 = a12;
  uint64_t v103 = a11;
  Swift::String v138 = a10;
  uint64_t v139 = a9;
  uint64_t v135 = a25;
  uint64_t v136 = a18;
  uint64_t v137 = a26;
  uint64_t v133 = a17;
  uint64_t v140 = a24;
  uint64_t v131 = a16;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v143 = swift_getAssociatedTypeWitness();
  uint64_t v144 = swift_getAssociatedTypeWitness();
  uint64_t v145 = swift_getAssociatedTypeWitness();
  uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
  uint64_t v30 = (int *)(TupleTypeMetadata - 8);
  uint64_t v31 = __chkstk_darwin(TupleTypeMetadata);
  uint64_t v129 = (char *)v94 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v127 = (char *)v94 - v34;
  uint64_t v35 = __chkstk_darwin(v33);
  NSBundle v128 = (char *)v94 - v36;
  uint64_t v37 = __chkstk_darwin(v35);
  uint64_t v39 = (char *)v94 - v38;
  __chkstk_darwin(v37);
  uint64_t v41 = (char *)v94 - v40;
  uint64_t v120 = (char *)v94 + v30[14] - v40;
  uint64_t v42 = v120;
  uint64_t v43 = (char *)v94 + v30[18] - v40;
  uint64_t v124 = (char *)v94 + v30[22] - v40;
  uint64_t v134 = (char *)v94 - v40;
  uint64_t v44 = swift_getAssociatedTypeWitness();
  unint64_t v132 = *(void **)(v44 - 8);
  uint64_t v122 = (void (*)(void))v132[2];
  uint64_t v123 = v132 + 2;
  ((void (*)(char *, uint64_t, uint64_t))v122)(v41, v141, v44);
  uint64_t v141 = swift_getAssociatedTypeWitness();
  uint64_t v131 = *(void **)(v141 - 8);
  uint64_t v119 = (void (*)(char *, char *, uint64_t))v131[2];
  uint64_t v140 = (void (*)(char *, uint64_t))(v131 + 2);
  v119(v42, (char *)v139, v141);
  uint64_t v135 = swift_getAssociatedTypeWitness();
  uint64_t v126 = *(void **)(v135 - 8);
  uint64_t v133 = (void (*)(char *, char *, uint64_t))v126[2];
  uint64_t v139 = (uint64_t (*)(char *, uint64_t))(v126 + 2);
  uint64_t v45 = v43;
  uint64_t v121 = v43;
  v133(v43, (char *)v138, v135);
  uint64_t v46 = swift_getAssociatedTypeWitness();
  uint64_t v130 = *(void **)(v46 - 8);
  uint64_t v47 = (void (*)(char *, char *, uint64_t))v130[2];
  uint64_t v136 = v46;
  uint64_t v137 = v130 + 2;
  Swift::String v138 = v47;
  uint64_t v48 = v124;
  v47(v124, v103, v46);
  uint64_t v49 = v30[14];
  uint64_t v99 = v39;
  uint64_t v50 = &v39[v49];
  uint64_t v103 = &v39[v49];
  uint64_t v102 = &v39[v30[18]];
  uint64_t v51 = v102;
  uint64_t v100 = &v39[v30[22]];
  uint64_t v52 = v100;
  uint64_t v53 = v39;
  uint64_t v125 = v44;
  uint64_t v54 = v122;
  ((void (*)(char *, char *, uint64_t))v122)(v53, v134, v44);
  uint64_t v55 = v50;
  uint64_t v56 = v119;
  v119(v55, v120, v141);
  v133(v51, v45, v135);
  uint64_t v57 = v52;
  uint64_t v58 = v48;
  v138(v57, v48, v136);
  uint64_t v59 = (void (*)(void))v132[4];
  uint64_t v96 = v132 + 4;
  uint64_t v97 = v59;
  ((void (*)(char *, char *, uint64_t))v59)(v101, v99, v44);
  uint64_t v60 = &v128[v30[14]];
  uint64_t v101 = &v128[v30[18]];
  uint64_t v61 = v101;
  uint64_t v99 = &v128[v30[22]];
  uint64_t v62 = v99;
  v54();
  uint64_t v63 = v60;
  uint64_t v64 = v60;
  uint64_t v65 = v120;
  uint64_t v66 = v141;
  v56(v63, v120, v141);
  uint64_t v67 = v135;
  v133(v61, v121, v135);
  uint64_t v68 = v136;
  v138(v62, v58, v136);
  uint64_t v69 = (void (*)(char *, char *, uint64_t))v131[4];
  v94[1] = v131 + 4;
  uint64_t v95 = v69;
  uint64_t v70 = v66;
  v69(v104, v64, v66);
  uint64_t v104 = &v127[v30[14]];
  uint64_t v71 = v104;
  uint64_t v72 = &v127[v30[18]];
  uint64_t v98 = &v127[v30[22]];
  uint64_t v73 = v98;
  v122();
  v119(v71, v65, v70);
  uint64_t v74 = v121;
  v133(v72, v121, v67);
  v138(v73, v58, v68);
  uint64_t v75 = (void (*)(uint64_t, char *, uint64_t))v126[4];
  v75(v105, v72, v67);
  uint64_t v76 = &v129[v30[14]];
  uint64_t v77 = &v129[v30[18]];
  uint64_t v78 = &v129[v30[22]];
  v97();
  uint64_t v79 = v65;
  uint64_t v80 = v141;
  v95(v76, v79, v141);
  v75((uint64_t)v77, v74, v67);
  uint64_t v81 = (void (*)(char *, char *, uint64_t))v130[4];
  v81(v78, v124, v68);
  v81(v108, v78, v68);
  uint64_t v82 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v82 - 8) + 16))(v112, v109, v82);
  uint64_t v83 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v83 - 8) + 16))(v116, v113, v83);
  uint64_t v84 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v84 - 8) + 16))(v118, v117, v84);
  uint64_t v140 = (void (*)(char *, uint64_t))v126[1];
  v140(v77, v67);
  uint64_t v85 = (void (*)(char *, uint64_t))v131[1];
  uint64_t v86 = v80;
  v85(v76, v80);
  uint64_t v139 = (uint64_t (*)(char *, uint64_t))v85;
  uint64_t v87 = (void (*)(char *, uint64_t))v132[1];
  uint64_t v88 = v125;
  v87(v129, v125);
  uint64_t v89 = (void (*)(char *, uint64_t))v130[1];
  uint64_t v90 = v136;
  v89(v98, v136);
  v85(v104, v86);
  v87(v127, v88);
  v89(v99, v90);
  uint64_t v91 = v135;
  uint64_t v92 = v140;
  v140(v101, v135);
  v87(v128, v88);
  v89(v100, v90);
  v92(v102, v91);
  return v139(v103, v141);
}

uint64_t sub_10007BE44()
{
  return _swift_deallocObject(v0, 144, 7);
}

uint64_t sub_10007BE54(char *a1, char *a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(char *, uint64_t), void (*a10)(char *, char *, uint64_t), char *a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return sub_10007B3A4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, *(void *)(v14 + 16), *(void **)(v14 + 24), *(void (**)(char *, char *, uint64_t))(v14 + 32), *(void *)(v14 + 40), *(void *)(v14 + 48),
           *(void *)(v14 + 56),
           *(void *)(v14 + 64),
           *(void *)(v14 + 72),
           *(void *)(v14 + 80),
           *(void (**)(char *, uint64_t))(v14 + 88),
           *(void *)(v14 + 96),
           *(void **)(v14 + 104),
           *(void *)(v14 + 112),
           *(void *)(v14 + 120),
           *(void *)(v14 + 128));
}

uint64_t sub_10007BEAC@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  uint64_t TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  uint64_t v14 = a1 + TupleTypeMetadata[12];
  uint64_t v13 = a1 + TupleTypeMetadata[16];
  uint64_t v12 = a1 + TupleTypeMetadata[20];
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v6 = (int *)swift_getTupleTypeMetadata();
  uint64_t v7 = a1 + v6[12];
  uint64_t v8 = a1 + v6[16];
  uint64_t v9 = a1 + v6[20];
  uint64_t v10 = (int *)swift_getTupleTypeMetadata();
  return a2(a3, a3 + v10[12], a3 + v10[16], a3 + v10[20], a3 + v10[24], a3 + v10[28], a3 + v10[32], a1, v14, v13, v12, v7, v8, v9);
}

uint64_t sub_10007C11C()
{
  swift_release();

  return _swift_deallocObject(v0, 160, 7);
}

uint64_t sub_10007C154@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10007BEAC(a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 144), a2);
}

uint64_t sub_10007C1AC(uint64_t a1, uint64_t a2)
{
  return _swift_getAssociatedConformanceWitness(*(void *)(a2 + 56), *(void *)(a2 + 16), a1, &protocol requirements base descriptor for Publisher, &associated conformance descriptor for Publisher.Publisher.Failure: Error);
}

uint64_t sub_10007C1CC(uint64_t a1, uint64_t a2)
{
  return _swift_getAssociatedConformanceWitness(*(void *)(a2 + 64), *(void *)(a2 + 16), a1, &protocol requirements base descriptor for Publisher, &associated conformance descriptor for Publisher.Publisher.Failure: Error);
}

uint64_t sub_10007C1EC(uint64_t a1, uint64_t a2)
{
  return _swift_getAssociatedConformanceWitness(*(void *)(a2 + 72), *(void *)(a2 + 16), a1, &protocol requirements base descriptor for Publisher, &associated conformance descriptor for Publisher.Publisher.Failure: Error);
}

uint64_t sub_10007C20C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return Publishers.CSCombineLatest7.receive<A>(subscriber:)(a1, a4, a2, a3);
}

uint64_t sub_10007C220(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 104);
}

uint64_t sub_10007C228()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        uint64_t result = swift_checkMetadataState();
        if (v4 <= 0x3F)
        {
          uint64_t result = swift_checkMetadataState();
          if (v5 <= 0x3F)
          {
            swift_initStructMetadata();
            return 0;
          }
        }
      }
    }
  }
  return result;
}

uint64_t *sub_10007C3B8(uint64_t *a1, uint64_t *a2, void *a3)
{
  uint64_t v4 = *(void *)(a3[2] - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = *(void *)(a3[3] - 8);
  uint64_t v7 = *(_DWORD *)(v6 + 80);
  uint64_t v8 = v5 + v7;
  uint64_t v9 = (v5 + v7) & ~v7;
  uint64_t v10 = *(void *)(a3[4] - 8);
  uint64_t v11 = *(_DWORD *)(v10 + 80);
  uint64_t v46 = *(void *)(v6 + 64) + v11;
  uint64_t v12 = v46 + v9;
  uint64_t v13 = *(void *)(v10 + 64);
  uint64_t v14 = a3[6];
  uint64_t v15 = v12 & ~v11;
  uint64_t v16 = *(void *)(a3[5] - 8);
  uint64_t v17 = *(_DWORD *)(v16 + 80);
  uint64_t v18 = v13 + v17;
  uint64_t v19 = *(void *)(v16 + 64);
  uint64_t v20 = *(void *)(v14 - 8);
  uint64_t v21 = *(_DWORD *)(v20 + 80);
  uint64_t v22 = v19 + v21;
  unint64_t v23 = ((v19 + v21 + ((v13 + v17 + v15) & ~v17)) & ~v21) + *(void *)(v20 + 64);
  uint64_t v24 = (*(unsigned char *)(v6 + 80) | *(unsigned char *)(v4 + 80) | *(unsigned char *)(v10 + 80) | *(unsigned char *)(v16 + 80) | *(unsigned char *)(v20 + 80));
  if (v24 <= 7
    && v23 <= 0x18
    && ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v4 + 80) | *(_DWORD *)(v10 + 80) | *(_DWORD *)(v16 + 80) | *(_DWORD *)(v20 + 80)) & 0x100000) == 0)
  {
    uint64_t v44 = a3[5];
    uint64_t v29 = ~v7;
    uint64_t v40 = a3[4];
    uint64_t v41 = ~v11;
    uint64_t v42 = ~v17;
    uint64_t v43 = ~v21;
    uint64_t v39 = a3[3];
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
    uint64_t v45 = a1;
    unint64_t v31 = ((unint64_t)a1 + v8) & v29;
    unint64_t v32 = ((unint64_t)a2 + v8) & v29;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16))(v31, v32, v39);
    uint64_t v33 = v31 + v46;
    uint64_t v28 = v45;
    uint64_t v34 = v33 & v41;
    unint64_t v35 = (v32 + v46) & v41;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v10 + 16))(v33 & v41, v35, v40);
    uint64_t v36 = (v34 + v18) & v42;
    unint64_t v37 = (v35 + v18) & v42;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v16 + 16))(v36, v37, v44);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v20 + 16))((v36 + v22) & v43, (v37 + v22) & v43, v14);
  }
  else
  {
    uint64_t v27 = *a2;
    *a1 = *a2;
    uint64_t v28 = (uint64_t *)(v27 + ((v24 + 16) & ~v24));
    swift_retain();
  }
  return v28;
}

uint64_t sub_10007C6FC(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void *)(a2[2] - 8) + 8;
  (*(void (**)(void))v4)();
  uint64_t v5 = *(void *)(v4 + 56) + a1;
  uint64_t v6 = *(void *)(a2[3] - 8);
  uint64_t v7 = v6 + 8;
  unint64_t v8 = (v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t))(v6 + 8))(v8);
  uint64_t v9 = *(void *)(v7 + 56);
  uint64_t v10 = *(void *)(a2[4] - 8);
  uint64_t v11 = v10 + 8;
  unint64_t v12 = (v8 + v9 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  (*(void (**)(unint64_t))(v10 + 8))(v12);
  uint64_t v13 = *(void *)(v11 + 56);
  uint64_t v14 = *(void *)(a2[5] - 8);
  uint64_t v15 = v14 + 8;
  unint64_t v16 = (v12 + v13 + *(unsigned __int8 *)(v14 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  (*(void (**)(unint64_t))(v14 + 8))(v16);
  uint64_t v17 = *(void *)(a2[6] - 8);
  uint64_t v18 = *(uint64_t (**)(unint64_t))(v17 + 8);
  unint64_t v19 = (v16 + *(void *)(v15 + 56) + *(unsigned __int8 *)(v17 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);

  return v18(v19);
}

uint64_t sub_10007C86C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a3[2] - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3[3] - 8);
  uint64_t v8 = v7 + 16;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 48) + v9;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 16))(v11, v12);
  uint64_t v13 = *(void *)(v8 + 48);
  uint64_t v14 = *(void *)(a3[4] - 8);
  uint64_t v15 = v14 + 16;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = (v17 + v11) & ~v16;
  uint64_t v19 = (v17 + v12) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v14 + 16))(v18, v19);
  uint64_t v20 = *(void *)(v15 + 48);
  uint64_t v21 = *(void *)(a3[5] - 8);
  uint64_t v22 = v21 + 16;
  uint64_t v23 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v24 = v20 + v23;
  uint64_t v25 = (v24 + v18) & ~v23;
  uint64_t v26 = (v24 + v19) & ~v23;
  (*(void (**)(uint64_t, uint64_t))(v21 + 16))(v25, v26);
  uint64_t v27 = *(void *)(a3[6] - 8);
  (*(void (**)(unint64_t, unint64_t))(v27 + 16))((*(void *)(v22 + 48) + *(unsigned __int8 *)(v27 + 80) + v25) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80), (*(void *)(v22 + 48) + *(unsigned __int8 *)(v27 + 80) + v26) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80));
  return a1;
}

uint64_t sub_10007CA0C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a3[2] - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3[3] - 8);
  uint64_t v8 = v7 + 24;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 40) + v9;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 24))(v11, v12);
  uint64_t v13 = *(void *)(v8 + 40);
  uint64_t v14 = *(void *)(a3[4] - 8);
  uint64_t v15 = v14 + 24;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = (v17 + v11) & ~v16;
  uint64_t v19 = (v17 + v12) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v14 + 24))(v18, v19);
  uint64_t v20 = *(void *)(v15 + 40);
  uint64_t v21 = *(void *)(a3[5] - 8);
  uint64_t v22 = v21 + 24;
  uint64_t v23 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v24 = v20 + v23;
  uint64_t v25 = (v24 + v18) & ~v23;
  uint64_t v26 = (v24 + v19) & ~v23;
  (*(void (**)(uint64_t, uint64_t))(v21 + 24))(v25, v26);
  uint64_t v27 = *(void *)(a3[6] - 8);
  (*(void (**)(unint64_t, unint64_t))(v27 + 24))((*(void *)(v22 + 40) + *(unsigned __int8 *)(v27 + 80) + v25) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80), (*(void *)(v22 + 40) + *(unsigned __int8 *)(v27 + 80) + v26) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80));
  return a1;
}

uint64_t sub_10007CBAC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a3[2] - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3[3] - 8);
  uint64_t v8 = v7 + 32;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 32) + v9;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 32))(v11, v12);
  uint64_t v13 = *(void *)(v8 + 32);
  uint64_t v14 = *(void *)(a3[4] - 8);
  uint64_t v15 = v14 + 32;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = (v17 + v11) & ~v16;
  uint64_t v19 = (v17 + v12) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v14 + 32))(v18, v19);
  uint64_t v20 = *(void *)(v15 + 32);
  uint64_t v21 = *(void *)(a3[5] - 8);
  uint64_t v22 = v21 + 32;
  uint64_t v23 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v24 = v20 + v23;
  uint64_t v25 = (v24 + v18) & ~v23;
  uint64_t v26 = (v24 + v19) & ~v23;
  (*(void (**)(uint64_t, uint64_t))(v21 + 32))(v25, v26);
  uint64_t v27 = *(void *)(a3[6] - 8);
  (*(void (**)(unint64_t, unint64_t))(v27 + 32))((*(void *)(v22 + 32) + *(unsigned __int8 *)(v27 + 80) + v25) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80), (*(void *)(v22 + 32) + *(unsigned __int8 *)(v27 + 80) + v26) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80));
  return a1;
}

uint64_t sub_10007CD4C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a3[2] - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3[3] - 8);
  uint64_t v8 = v7 + 40;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 24) + v9;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 40))(v11, v12);
  uint64_t v13 = *(void *)(v8 + 24);
  uint64_t v14 = *(void *)(a3[4] - 8);
  uint64_t v15 = v14 + 40;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = (v17 + v11) & ~v16;
  uint64_t v19 = (v17 + v12) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v14 + 40))(v18, v19);
  uint64_t v20 = *(void *)(v15 + 24);
  uint64_t v21 = *(void *)(a3[5] - 8);
  uint64_t v22 = v21 + 40;
  uint64_t v23 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v24 = v20 + v23;
  uint64_t v25 = (v24 + v18) & ~v23;
  uint64_t v26 = (v24 + v19) & ~v23;
  (*(void (**)(uint64_t, uint64_t))(v21 + 40))(v25, v26);
  uint64_t v27 = *(void *)(a3[6] - 8);
  (*(void (**)(unint64_t, unint64_t))(v27 + 40))((*(void *)(v22 + 24) + *(unsigned __int8 *)(v27 + 80) + v25) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80), (*(void *)(v22 + 24) + *(unsigned __int8 *)(v27 + 80) + v26) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80));
  return a1;
}

uint64_t sub_10007CEEC(unsigned __int16 *a1, unsigned int a2, void *a3)
{
  uint64_t v44 = *(void *)(a3[2] - 8);
  unsigned int v5 = *(_DWORD *)(v44 + 84);
  uint64_t v6 = *(void *)(a3[3] - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= v5) {
    unsigned int v8 = *(_DWORD *)(v44 + 84);
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = a3[5];
  uint64_t v10 = *(void *)(a3[4] - 8);
  unsigned int v11 = *(_DWORD *)(v10 + 84);
  if (v11 <= v8) {
    unsigned int v12 = v8;
  }
  else {
    unsigned int v12 = *(_DWORD *)(v10 + 84);
  }
  uint64_t v13 = *(void *)(v9 - 8);
  unsigned int v14 = *(_DWORD *)(v13 + 84);
  if (v14 <= v12) {
    unsigned int v15 = v12;
  }
  else {
    unsigned int v15 = *(_DWORD *)(v13 + 84);
  }
  uint64_t v16 = *(void *)(a3[6] - 8);
  uint64_t v17 = *(unsigned int *)(v16 + 84);
  uint64_t v18 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v19 = *(void *)(*(void *)(a3[3] - 8) + 64);
  uint64_t v20 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v21 = *(void *)(*(void *)(a3[4] - 8) + 64);
  uint64_t v22 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v23 = *(unsigned __int8 *)(v16 + 80);
  if (v17 <= v15) {
    unsigned int v24 = v15;
  }
  else {
    unsigned int v24 = *(_DWORD *)(v16 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v25 = *(void *)(*(void *)(a3[2] - 8) + 64) + v18;
  uint64_t v26 = *(void *)(*(void *)(v9 - 8) + 64) + v23;
  int v27 = a2 - v24;
  if (a2 <= v24) {
    goto LABEL_33;
  }
  uint64_t v28 = ((v26 + ((v21 + v22 + ((v19 + v20 + (v25 & ~v18)) & ~v20)) & ~v22)) & ~v23)
      + *(void *)(*(void *)(a3[6] - 8) + 64);
  char v29 = 8 * v28;
  if (v28 > 3) {
    goto LABEL_16;
  }
  unsigned int v31 = ((v27 + ~(-1 << v29)) >> v29) + 1;
  if (HIWORD(v31))
  {
    int v30 = *(_DWORD *)((char *)a1 + v28);
    if (!v30) {
      goto LABEL_33;
    }
    goto LABEL_23;
  }
  if (v31 > 0xFF)
  {
    int v30 = *(unsigned __int16 *)((char *)a1 + v28);
    if (!*(unsigned __int16 *)((char *)a1 + v28)) {
      goto LABEL_33;
    }
    goto LABEL_23;
  }
  if (v31 >= 2)
  {
LABEL_16:
    int v30 = *((unsigned __int8 *)a1 + v28);
    if (!*((unsigned char *)a1 + v28)) {
      goto LABEL_33;
    }
LABEL_23:
    int v32 = (v30 - 1) << v29;
    if (v28 > 3) {
      int v32 = 0;
    }
    if (v28)
    {
      if (v28 <= 3) {
        int v33 = ((v26 + ((v21 + v22 + ((v19 + v20 + (v25 & ~v18)) & ~v20)) & ~v22)) & ~v23)
      }
            + *(_DWORD *)(*(void *)(a3[6] - 8) + 64);
      else {
        int v33 = 4;
      }
      switch(v33)
      {
        case 2:
          int v34 = *a1;
          break;
        case 3:
          int v34 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
          break;
        case 4:
          int v34 = *(_DWORD *)a1;
          break;
        default:
          int v34 = *(unsigned __int8 *)a1;
          break;
      }
    }
    else
    {
      int v34 = 0;
    }
    return v24 + (v34 | v32) + 1;
  }
LABEL_33:
  if (!v24) {
    return 0;
  }
  if (v5 == v24)
  {
    unint64_t v35 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v44 + 48);
    uint64_t v36 = a1;
    uint64_t v37 = *(unsigned int *)(v44 + 84);
    uint64_t v38 = a3[2];
    return v35(v36, v37, v38);
  }
  unint64_t v40 = ((unint64_t)a1 + v25) & ~v18;
  if (v7 == v24)
  {
    uint64_t v41 = *(uint64_t (**)(unint64_t))(v6 + 48);
    return v41(((unint64_t)a1 + v25) & ~v18);
  }
  else
  {
    if (v11 == v24)
    {
      unint64_t v35 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v10 + 48);
      uint64_t v36 = (unsigned __int16 *)((v40 + v19 + v20) & ~v20);
      uint64_t v37 = *(unsigned int *)(v10 + 84);
      uint64_t v38 = a3[4];
      return v35(v36, v37, v38);
    }
    uint64_t v36 = (unsigned __int16 *)((((v40 + v19 + v20) & ~v20) + v21 + v22) & ~v22);
    if (v14 == v24)
    {
      unint64_t v35 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v13 + 48);
      uint64_t v37 = *(unsigned int *)(v13 + 84);
      uint64_t v38 = a3[5];
      return v35(v36, v37, v38);
    }
    unint64_t v42 = ((unint64_t)v36 + v26) & ~v23;
    uint64_t v43 = *(uint64_t (**)(unint64_t, uint64_t))(v16 + 48);
    return v43(v42, v17);
  }
}

void sub_10007D3C0(char *a1, unsigned int a2, unsigned int a3, void *a4)
{
  uint64_t v39 = *(void *)(a4[2] - 8);
  unsigned int v6 = *(_DWORD *)(v39 + 84);
  uint64_t v7 = *(void *)(a4[3] - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  uint64_t v9 = *(void *)(a4[4] - 8);
  if (v8 <= v6) {
    unsigned int v10 = *(_DWORD *)(v39 + 84);
  }
  else {
    unsigned int v10 = *(_DWORD *)(v7 + 84);
  }
  uint64_t v11 = *(void *)(a4[4] - 8);
  unsigned int v12 = *(_DWORD *)(v9 + 84);
  if (v12 <= v10) {
    unsigned int v13 = v10;
  }
  else {
    unsigned int v13 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v14 = a4[6];
  uint64_t v38 = a4[5];
  uint64_t v15 = *(void *)(v38 - 8);
  unsigned int v16 = *(_DWORD *)(v15 + 84);
  if (v16 <= v13) {
    unsigned int v17 = v13;
  }
  else {
    unsigned int v17 = *(_DWORD *)(v15 + 84);
  }
  uint64_t v18 = *(void *)(v14 - 8);
  uint64_t v19 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v20 = *(void *)(*(void *)(a4[3] - 8) + 64);
  uint64_t v21 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v22 = *(void *)(v9 + 64);
  uint64_t v23 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v24 = *(unsigned __int8 *)(v18 + 80);
  if (*(_DWORD *)(v18 + 84) <= v17) {
    unsigned int v25 = v17;
  }
  else {
    unsigned int v25 = *(_DWORD *)(v18 + 84);
  }
  uint64_t v26 = *(void *)(*(void *)(a4[2] - 8) + 64) + v19;
  uint64_t v27 = *(void *)(*(void *)(v38 - 8) + 64) + v24;
  size_t v28 = ((v27 + ((v22 + v23 + ((v20 + v21 + (v26 & ~v19)) & ~v21)) & ~v23)) & ~v24)
      + *(void *)(*(void *)(v14 - 8) + 64);
  if (a3 <= v25)
  {
    int v29 = 0;
  }
  else if (v28 <= 3)
  {
    unsigned int v34 = ((a3 - v25 + ~(-1 << (8 * v28))) >> (8 * v28)) + 1;
    if (HIWORD(v34))
    {
      int v29 = 4;
    }
    else if (v34 >= 0x100)
    {
      int v29 = 2;
    }
    else
    {
      int v29 = v34 > 1;
    }
  }
  else
  {
    int v29 = 1;
  }
  if (v25 < a2)
  {
    unsigned int v30 = ~v25 + a2;
    if (v28 < 4)
    {
      int v31 = (v30 >> (8 * v28)) + 1;
      if (v28)
      {
        int v35 = v30 & ~(-1 << (8 * v28));
        bzero(a1, v28);
        if (v28 == 3)
        {
          *(_WORD *)a1 = v35;
          a1[2] = BYTE2(v35);
        }
        else if (v28 == 2)
        {
          *(_WORD *)a1 = v35;
        }
        else
        {
          *a1 = v35;
        }
      }
    }
    else
    {
      bzero(a1, v28);
      *(_DWORD *)a1 = v30;
      int v31 = 1;
    }
    switch(v29)
    {
      case 1:
        a1[v28] = v31;
        return;
      case 2:
        *(_WORD *)&a1[v28] = v31;
        return;
      case 3:
        goto LABEL_62;
      case 4:
        *(_DWORD *)&a1[v28] = v31;
        return;
      default:
        return;
    }
  }
  uint64_t v32 = ~v19;
  uint64_t v33 = ~v24;
  switch(v29)
  {
    case 1:
      a1[v28] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v28] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_62:
      __break(1u);
      JUMPOUT(0x10007D8F8);
    case 4:
      *(_DWORD *)&a1[v28] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v6 == v25)
        {
          uint64_t v36 = *(void (**)(char *))(v39 + 56);
          uint64_t v37 = a1;
        }
        else
        {
          uint64_t v37 = (char *)((unint64_t)&a1[v26] & v32);
          if (v8 == v25)
          {
            uint64_t v36 = *(void (**)(char *))(v7 + 56);
          }
          else
          {
            uint64_t v37 = (char *)((unint64_t)&v37[v20 + v21] & ~v21);
            if (v12 == v25)
            {
              uint64_t v36 = *(void (**)(char *))(v11 + 56);
            }
            else
            {
              uint64_t v37 = (char *)((unint64_t)&v37[v22 + v23] & ~v23);
              if (v16 == v25)
              {
                uint64_t v36 = *(void (**)(char *))(v15 + 56);
              }
              else
              {
                uint64_t v37 = (char *)((unint64_t)&v37[v27] & v33);
                uint64_t v36 = *(void (**)(char *))(v18 + 56);
              }
            }
          }
        }
        v36(v37);
      }
      return;
  }
}

uint64_t sub_10007D920(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 120);
}

uint64_t sub_10007D928()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        uint64_t result = swift_checkMetadataState();
        if (v4 <= 0x3F)
        {
          uint64_t result = swift_checkMetadataState();
          if (v5 <= 0x3F)
          {
            uint64_t result = swift_checkMetadataState();
            if (v6 <= 0x3F)
            {
              swift_initStructMetadata();
              return 0;
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t *sub_10007DAF8(uint64_t *a1, uint64_t *a2, void *a3)
{
  uint64_t v4 = *(void *)(a3[2] - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = a3[3];
  uint64_t v7 = a3[4];
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  uint64_t v54 = v5 + v9;
  uint64_t v10 = (v5 + v9) & ~v9;
  uint64_t v11 = *(void *)(v8 + 64);
  uint64_t v12 = *(void *)(v7 - 8);
  uint64_t v13 = *(_DWORD *)(v12 + 80);
  uint64_t v53 = v11 + v13;
  uint64_t v14 = (v11 + v13 + v10) & ~v13;
  uint64_t v15 = *(void *)(v12 + 64);
  uint64_t v55 = *(void *)(a3[5] - 8);
  uint64_t v16 = *(_DWORD *)(v55 + 80);
  uint64_t v52 = v15 + v16;
  uint64_t v17 = (v15 + v16 + v14) & ~v16;
  uint64_t v18 = *(void *)(v55 + 64);
  uint64_t v19 = *(void *)(a3[6] - 8);
  uint64_t v20 = *(_DWORD *)(v19 + 80);
  uint64_t v51 = v18 + v20;
  uint64_t v21 = *(void *)(v19 + 64);
  uint64_t v22 = a3[7];
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(_DWORD *)(v23 + 80);
  uint64_t v25 = v21 + v24;
  unint64_t v26 = ((v21 + v24 + ((v18 + v20 + v17) & ~v20)) & ~v24) + *(void *)(v23 + 64);
  uint64_t v27 = (*(unsigned char *)(v8 + 80) | *(unsigned char *)(v4 + 80) | *(unsigned char *)(v12 + 80) | *(unsigned char *)(v55 + 80) | *(unsigned char *)(v19 + 80) | *(unsigned char *)(v23 + 80));
  if (v27 <= 7
    && v26 <= 0x18
    && ((*(_DWORD *)(v8 + 80) | *(_DWORD *)(v4 + 80) | *(_DWORD *)(v12 + 80) | *(_DWORD *)(v55 + 80) | *(_DWORD *)(v19 + 80) | *(_DWORD *)(v23 + 80)) & 0x100000) == 0)
  {
    uint64_t v50 = a3[6];
    uint64_t v32 = *(void *)(v7 - 8);
    uint64_t v33 = ~v9;
    uint64_t v48 = a3[5];
    uint64_t v34 = ~v13;
    uint64_t v45 = a3[4];
    uint64_t v46 = ~v16;
    uint64_t v47 = ~v20;
    uint64_t v49 = ~v24;
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
    uint64_t v36 = v6;
    int v31 = a1;
    unint64_t v37 = ((unint64_t)a1 + v54) & v33;
    unint64_t v38 = ((unint64_t)a2 + v54) & v33;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(v37, v38, v36);
    unint64_t v39 = (v38 + v53) & v34;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v32 + 16))((v37 + v53) & v34, v39, v45);
    unint64_t v40 = (((v37 + v53) & v34) + v52) & v46;
    unint64_t v41 = (v39 + v52) & v46;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v55 + 16))(v40, v41, v48);
    unint64_t v42 = (v40 + v51) & v47;
    uint64_t v43 = (v41 + v51) & v47;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v19 + 16))(v42, v43, v50);
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v23 + 16))((v42 + v25) & v49, (v43 + v25) & v49, v22);
  }
  else
  {
    uint64_t v30 = *a2;
    *a1 = *a2;
    int v31 = (uint64_t *)(v30 + ((v27 + 16) & ~v27));
    swift_retain();
  }
  return v31;
}

uint64_t sub_10007DEE8(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void *)(a2[2] - 8) + 8;
  (*(void (**)(void))v4)();
  uint64_t v5 = *(void *)(v4 + 56) + a1;
  uint64_t v6 = *(void *)(a2[3] - 8);
  uint64_t v7 = v6 + 8;
  unint64_t v8 = (v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t))(v6 + 8))(v8);
  uint64_t v9 = *(void *)(v7 + 56);
  uint64_t v10 = *(void *)(a2[4] - 8);
  uint64_t v11 = v10 + 8;
  unint64_t v12 = (v8 + v9 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  (*(void (**)(unint64_t))(v10 + 8))(v12);
  uint64_t v13 = *(void *)(v11 + 56);
  uint64_t v14 = *(void *)(a2[5] - 8);
  uint64_t v15 = v14 + 8;
  unint64_t v16 = (v12 + v13 + *(unsigned __int8 *)(v14 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  (*(void (**)(unint64_t))(v14 + 8))(v16);
  uint64_t v17 = *(void *)(v15 + 56);
  uint64_t v18 = *(void *)(a2[6] - 8);
  uint64_t v19 = v18 + 8;
  unint64_t v20 = (v16 + v17 + *(unsigned __int8 *)(v18 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  (*(void (**)(unint64_t))(v18 + 8))(v20);
  uint64_t v21 = *(void *)(a2[7] - 8);
  uint64_t v22 = *(uint64_t (**)(unint64_t))(v21 + 8);
  unint64_t v23 = (v20 + *(void *)(v19 + 56) + *(unsigned __int8 *)(v21 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);

  return v22(v23);
}

uint64_t sub_10007E09C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a3[2] - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3[3] - 8);
  uint64_t v8 = v7 + 16;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 48) + v9;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 16))(v11, v12);
  uint64_t v13 = *(void *)(v8 + 48);
  uint64_t v14 = *(void *)(a3[4] - 8);
  uint64_t v15 = v14 + 16;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = (v17 + v11) & ~v16;
  uint64_t v19 = (v17 + v12) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v14 + 16))(v18, v19);
  uint64_t v20 = *(void *)(v15 + 48);
  uint64_t v21 = *(void *)(a3[5] - 8);
  uint64_t v22 = v21 + 16;
  uint64_t v23 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v24 = v20 + v23;
  uint64_t v25 = (v24 + v18) & ~v23;
  uint64_t v26 = (v24 + v19) & ~v23;
  (*(void (**)(uint64_t, uint64_t))(v21 + 16))(v25, v26);
  uint64_t v27 = *(void *)(v22 + 48);
  uint64_t v28 = *(void *)(a3[6] - 8);
  uint64_t v29 = v28 + 16;
  uint64_t v30 = *(unsigned __int8 *)(v28 + 80);
  uint64_t v31 = v27 + v30;
  uint64_t v32 = (v31 + v25) & ~v30;
  uint64_t v33 = (v31 + v26) & ~v30;
  (*(void (**)(uint64_t, uint64_t))(v28 + 16))(v32, v33);
  uint64_t v34 = *(void *)(a3[7] - 8);
  (*(void (**)(unint64_t, unint64_t))(v34 + 16))((*(void *)(v29 + 48) + *(unsigned __int8 *)(v34 + 80) + v32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80), (*(void *)(v29 + 48) + *(unsigned __int8 *)(v34 + 80) + v33) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80));
  return a1;
}

uint64_t sub_10007E28C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a3[2] - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3[3] - 8);
  uint64_t v8 = v7 + 24;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 40) + v9;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 24))(v11, v12);
  uint64_t v13 = *(void *)(v8 + 40);
  uint64_t v14 = *(void *)(a3[4] - 8);
  uint64_t v15 = v14 + 24;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = (v17 + v11) & ~v16;
  uint64_t v19 = (v17 + v12) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v14 + 24))(v18, v19);
  uint64_t v20 = *(void *)(v15 + 40);
  uint64_t v21 = *(void *)(a3[5] - 8);
  uint64_t v22 = v21 + 24;
  uint64_t v23 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v24 = v20 + v23;
  uint64_t v25 = (v24 + v18) & ~v23;
  uint64_t v26 = (v24 + v19) & ~v23;
  (*(void (**)(uint64_t, uint64_t))(v21 + 24))(v25, v26);
  uint64_t v27 = *(void *)(v22 + 40);
  uint64_t v28 = *(void *)(a3[6] - 8);
  uint64_t v29 = v28 + 24;
  uint64_t v30 = *(unsigned __int8 *)(v28 + 80);
  uint64_t v31 = v27 + v30;
  uint64_t v32 = (v31 + v25) & ~v30;
  uint64_t v33 = (v31 + v26) & ~v30;
  (*(void (**)(uint64_t, uint64_t))(v28 + 24))(v32, v33);
  uint64_t v34 = *(void *)(a3[7] - 8);
  (*(void (**)(unint64_t, unint64_t))(v34 + 24))((*(void *)(v29 + 40) + *(unsigned __int8 *)(v34 + 80) + v32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80), (*(void *)(v29 + 40) + *(unsigned __int8 *)(v34 + 80) + v33) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80));
  return a1;
}

uint64_t sub_10007E47C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a3[2] - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3[3] - 8);
  uint64_t v8 = v7 + 32;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 32) + v9;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 32))(v11, v12);
  uint64_t v13 = *(void *)(v8 + 32);
  uint64_t v14 = *(void *)(a3[4] - 8);
  uint64_t v15 = v14 + 32;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = (v17 + v11) & ~v16;
  uint64_t v19 = (v17 + v12) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v14 + 32))(v18, v19);
  uint64_t v20 = *(void *)(v15 + 32);
  uint64_t v21 = *(void *)(a3[5] - 8);
  uint64_t v22 = v21 + 32;
  uint64_t v23 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v24 = v20 + v23;
  uint64_t v25 = (v24 + v18) & ~v23;
  uint64_t v26 = (v24 + v19) & ~v23;
  (*(void (**)(uint64_t, uint64_t))(v21 + 32))(v25, v26);
  uint64_t v27 = *(void *)(v22 + 32);
  uint64_t v28 = *(void *)(a3[6] - 8);
  uint64_t v29 = v28 + 32;
  uint64_t v30 = *(unsigned __int8 *)(v28 + 80);
  uint64_t v31 = v27 + v30;
  uint64_t v32 = (v31 + v25) & ~v30;
  uint64_t v33 = (v31 + v26) & ~v30;
  (*(void (**)(uint64_t, uint64_t))(v28 + 32))(v32, v33);
  uint64_t v34 = *(void *)(a3[7] - 8);
  (*(void (**)(unint64_t, unint64_t))(v34 + 32))((*(void *)(v29 + 32) + *(unsigned __int8 *)(v34 + 80) + v32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80), (*(void *)(v29 + 32) + *(unsigned __int8 *)(v34 + 80) + v33) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80));
  return a1;
}

uint64_t sub_10007E66C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a3[2] - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3[3] - 8);
  uint64_t v8 = v7 + 40;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 24) + v9;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 40))(v11, v12);
  uint64_t v13 = *(void *)(v8 + 24);
  uint64_t v14 = *(void *)(a3[4] - 8);
  uint64_t v15 = v14 + 40;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = (v17 + v11) & ~v16;
  uint64_t v19 = (v17 + v12) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v14 + 40))(v18, v19);
  uint64_t v20 = *(void *)(v15 + 24);
  uint64_t v21 = *(void *)(a3[5] - 8);
  uint64_t v22 = v21 + 40;
  uint64_t v23 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v24 = v20 + v23;
  uint64_t v25 = (v24 + v18) & ~v23;
  uint64_t v26 = (v24 + v19) & ~v23;
  (*(void (**)(uint64_t, uint64_t))(v21 + 40))(v25, v26);
  uint64_t v27 = *(void *)(v22 + 24);
  uint64_t v28 = *(void *)(a3[6] - 8);
  uint64_t v29 = v28 + 40;
  uint64_t v30 = *(unsigned __int8 *)(v28 + 80);
  uint64_t v31 = v27 + v30;
  uint64_t v32 = (v31 + v25) & ~v30;
  uint64_t v33 = (v31 + v26) & ~v30;
  (*(void (**)(uint64_t, uint64_t))(v28 + 40))(v32, v33);
  uint64_t v34 = *(void *)(a3[7] - 8);
  (*(void (**)(unint64_t, unint64_t))(v34 + 40))((*(void *)(v29 + 24) + *(unsigned __int8 *)(v34 + 80) + v32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80), (*(void *)(v29 + 24) + *(unsigned __int8 *)(v34 + 80) + v33) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80));
  return a1;
}

uint64_t sub_10007E85C(unsigned __int16 *a1, unsigned int a2, void *a3)
{
  uint64_t v55 = a3[2];
  uint64_t v54 = *(void *)(v55 - 8);
  unsigned int v5 = *(_DWORD *)(v54 + 84);
  uint64_t v6 = *(void *)(a3[3] - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = a3[5];
  uint64_t v52 = v8;
  uint64_t v53 = a3[4];
  uint64_t v9 = *(void *)(v53 - 8);
  if (v7 <= v5) {
    unsigned int v10 = *(_DWORD *)(v54 + 84);
  }
  else {
    unsigned int v10 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v11 = *(unsigned int *)(v9 + 84);
  if (v11 <= v10) {
    unsigned int v12 = v10;
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v13 = *(void *)(v8 - 8);
  unsigned int v14 = *(_DWORD *)(v13 + 84);
  if (v14 <= v12) {
    unsigned int v15 = v12;
  }
  else {
    unsigned int v15 = *(_DWORD *)(v13 + 84);
  }
  uint64_t v50 = a3[7];
  uint64_t v51 = a3[6];
  uint64_t v16 = *(void *)(v51 - 8);
  unsigned int v17 = *(_DWORD *)(v16 + 84);
  uint64_t v18 = *(void *)(v50 - 8);
  if (v17 <= v15) {
    unsigned int v19 = v15;
  }
  else {
    unsigned int v19 = *(_DWORD *)(v16 + 84);
  }
  uint64_t v20 = *(unsigned int *)(v18 + 84);
  uint64_t v21 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v56 = *(void *)(*(void *)(a3[3] - 8) + 64);
  uint64_t v22 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v23 = *(void *)(v9 + 64);
  uint64_t v24 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v25 = *(void *)(*(void *)(v8 - 8) + 64);
  uint64_t v26 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v27 = *(unsigned __int8 *)(v18 + 80);
  uint64_t v28 = *(void *)(v18 + 64);
  if (v20 > v19) {
    unsigned int v19 = *(_DWORD *)(v18 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v29 = *(void *)(*(void *)(v55 - 8) + 64) + v21;
  uint64_t v30 = v25 + v26;
  uint64_t v31 = *(void *)(*(void *)(v51 - 8) + 64) + v27;
  int v32 = a2 - v19;
  if (a2 <= v19) {
    goto LABEL_35;
  }
  uint64_t v33 = (v31 + ((v30 + ((v23 + v24 + ((v56 + v22 + (v29 & ~v21)) & ~v22)) & ~v24)) & ~v26)) & ~v27;
  uint64_t v34 = v33 + v28;
  char v35 = 8 * (v33 + v28);
  if (v34 > 3) {
    goto LABEL_18;
  }
  unsigned int v37 = ((v32 + ~(-1 << v35)) >> v35) + 1;
  if (HIWORD(v37))
  {
    int v36 = *(_DWORD *)((char *)a1 + v34);
    if (!v36) {
      goto LABEL_35;
    }
    goto LABEL_25;
  }
  if (v37 > 0xFF)
  {
    int v36 = *(unsigned __int16 *)((char *)a1 + v34);
    if (!*(unsigned __int16 *)((char *)a1 + v34)) {
      goto LABEL_35;
    }
    goto LABEL_25;
  }
  if (v37 >= 2)
  {
LABEL_18:
    int v36 = *((unsigned __int8 *)a1 + v34);
    if (!*((unsigned char *)a1 + v34)) {
      goto LABEL_35;
    }
LABEL_25:
    int v38 = (v36 - 1) << v35;
    if (v34 > 3) {
      int v38 = 0;
    }
    if (v34)
    {
      if (v34 <= 3) {
        int v39 = v34;
      }
      else {
        int v39 = 4;
      }
      switch(v39)
      {
        case 2:
          int v40 = *a1;
          break;
        case 3:
          int v40 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
          break;
        case 4:
          int v40 = *(_DWORD *)a1;
          break;
        default:
          int v40 = *(unsigned __int8 *)a1;
          break;
      }
    }
    else
    {
      int v40 = 0;
    }
    return v19 + (v40 | v38) + 1;
  }
LABEL_35:
  if (!v19) {
    return 0;
  }
  if (v5 == v19)
  {
    uint64_t v41 = v55;
    unint64_t v42 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v54 + 48);
    uint64_t v43 = a1;
    uint64_t v44 = *(unsigned int *)(v54 + 84);
    return v42(v43, v44, v41);
  }
  unint64_t v46 = ((unint64_t)a1 + v29) & ~v21;
  if (v7 == v19)
  {
    uint64_t v47 = *(uint64_t (**)(unint64_t))(v6 + 48);
    return v47(((unint64_t)a1 + v29) & ~v21);
  }
  else
  {
    if (v11 == v19)
    {
      unint64_t v42 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(*(void *)(v53 - 8) + 48);
      uint64_t v43 = (unsigned __int16 *)((v46 + v56 + v22) & ~v22);
      uint64_t v44 = v11;
      uint64_t v41 = v53;
      return v42(v43, v44, v41);
    }
    uint64_t v43 = (unsigned __int16 *)((((v46 + v56 + v22) & ~v22) + v23 + v24) & ~v24);
    if (v14 == v19)
    {
      unint64_t v42 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v13 + 48);
      uint64_t v44 = *(unsigned int *)(v13 + 84);
      uint64_t v41 = v52;
      return v42(v43, v44, v41);
    }
    uint64_t v43 = (unsigned __int16 *)(((unint64_t)v43 + v30) & ~v26);
    if (v17 == v19)
    {
      unint64_t v42 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v16 + 48);
      uint64_t v44 = *(unsigned int *)(v16 + 84);
      uint64_t v41 = v51;
      return v42(v43, v44, v41);
    }
    unint64_t v48 = ((unint64_t)v43 + v31) & ~v27;
    uint64_t v49 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 48);
    return v49(v48, v20, v50);
  }
}

void sub_10007EDF0(unsigned char *a1, unsigned int a2, unsigned int a3, void *a4)
{
  uint64_t v6 = *(void *)(a4[2] - 8);
  uint64_t v52 = v6;
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(a4[3] - 8);
  uint64_t v9 = v8;
  unsigned int v10 = *(_DWORD *)(v8 + 84);
  if (v10 <= v7) {
    unsigned int v11 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v11 = *(_DWORD *)(v8 + 84);
  }
  uint64_t v51 = a4[4];
  uint64_t v12 = *(void *)(v51 - 8);
  unsigned int v13 = *(_DWORD *)(v12 + 84);
  uint64_t v14 = *(void *)(a4[5] - 8);
  if (v13 <= v11) {
    unsigned int v15 = v11;
  }
  else {
    unsigned int v15 = *(_DWORD *)(v12 + 84);
  }
  uint64_t v16 = *(void *)(a4[5] - 8);
  unsigned int v50 = *(_DWORD *)(v14 + 84);
  if (v50 <= v15) {
    unsigned int v17 = v15;
  }
  else {
    unsigned int v17 = *(_DWORD *)(v14 + 84);
  }
  uint64_t v18 = *(void *)(a4[6] - 8);
  uint64_t v19 = v18;
  unsigned int v20 = *(_DWORD *)(v18 + 84);
  unsigned int v49 = v20;
  if (v20 <= v17) {
    unsigned int v20 = v17;
  }
  uint64_t v21 = *(void *)(a4[7] - 8);
  uint64_t v22 = *(void *)(v6 + 64);
  uint64_t v23 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v24 = *(void *)(v8 + 64);
  uint64_t v25 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v26 = *(void *)(*(void *)(v51 - 8) + 64);
  uint64_t v27 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v28 = *(void *)(v14 + 64);
  uint64_t v29 = *(unsigned __int8 *)(v18 + 80);
  uint64_t v30 = *(void *)(v18 + 64);
  uint64_t v31 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v32 = v22 + v23;
  uint64_t v33 = v28 + v29;
  uint64_t v34 = v30 + v31;
  size_t v35 = ((v34 + ((v28 + v29 + ((v26 + v27 + ((v24 + v25 + ((v22 + v23) & ~v23)) & ~v25)) & ~v27)) & ~v29)) & ~v31)
      + *(void *)(v21 + 64);
  if (*(_DWORD *)(v21 + 84) <= v20) {
    unsigned int v36 = v20;
  }
  else {
    unsigned int v36 = *(_DWORD *)(v21 + 84);
  }
  if (a3 <= v36)
  {
    int v37 = 0;
  }
  else if (v35 <= 3)
  {
    unsigned int v43 = ((a3 - v36 + ~(-1 << (8 * v35))) >> (8 * v35)) + 1;
    if (HIWORD(v43))
    {
      int v37 = 4;
    }
    else if (v43 >= 0x100)
    {
      int v37 = 2;
    }
    else
    {
      int v37 = v43 > 1;
    }
  }
  else
  {
    int v37 = 1;
  }
  if (v36 < a2)
  {
    unsigned int v38 = ~v36 + a2;
    if (v35 < 4)
    {
      int v39 = (v38 >> (8 * v35)) + 1;
      if (v35)
      {
        int v44 = v38 & ~(-1 << (8 * v35));
        bzero(a1, v35);
        if (v35 == 3)
        {
          *(_WORD *)a1 = v44;
          a1[2] = BYTE2(v44);
        }
        else if (v35 == 2)
        {
          *(_WORD *)a1 = v44;
        }
        else
        {
          *a1 = v44;
        }
      }
    }
    else
    {
      bzero(a1, v35);
      *(_DWORD *)a1 = v38;
      int v39 = 1;
    }
    switch(v37)
    {
      case 1:
        a1[v35] = v39;
        return;
      case 2:
        *(_WORD *)&a1[v35] = v39;
        return;
      case 3:
        goto LABEL_65;
      case 4:
        *(_DWORD *)&a1[v35] = v39;
        return;
      default:
        return;
    }
  }
  uint64_t v40 = ~v23;
  uint64_t v41 = ~v29;
  uint64_t v42 = ~v31;
  switch(v37)
  {
    case 1:
      a1[v35] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_35;
    case 2:
      *(_WORD *)&a1[v35] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_35;
    case 3:
LABEL_65:
      __break(1u);
      JUMPOUT(0x10007F3B0);
    case 4:
      *(_DWORD *)&a1[v35] = 0;
      goto LABEL_34;
    default:
LABEL_34:
      if (!a2) {
        return;
      }
LABEL_35:
      if (v7 == v36)
      {
        uint64_t v45 = *(void (**)(unsigned char *))(v52 + 56);
        unint64_t v46 = a1;
        goto LABEL_37;
      }
      unint64_t v46 = (unsigned char *)((unint64_t)&a1[v32] & v40);
      if (v10 == v36)
      {
        uint64_t v45 = *(void (**)(unsigned char *))(v9 + 56);
        goto LABEL_61;
      }
      unint64_t v46 = (unsigned char *)((unint64_t)&v46[v24 + v25] & ~v25);
      if (v13 == v36)
      {
        uint64_t v45 = *(void (**)(unsigned char *))(v12 + 56);
        goto LABEL_37;
      }
      unint64_t v46 = (unsigned char *)((unint64_t)&v46[v26 + v27] & ~v27);
      if (v50 == v36)
      {
        uint64_t v45 = *(void (**)(unsigned char *))(v16 + 56);
LABEL_37:
LABEL_61:
        v45(v46);
        return;
      }
      unint64_t v46 = (unsigned char *)((unint64_t)&v46[v33] & v41);
      if (v49 == v36)
      {
        uint64_t v45 = *(void (**)(unsigned char *))(v19 + 56);
        goto LABEL_61;
      }
      unint64_t v47 = (unint64_t)&v46[v34] & v42;
      unint64_t v48 = *(void (**)(unint64_t))(v21 + 56);
      v48(v47);
      return;
  }
}

uint64_t sub_10007F3D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 144);
}

uint64_t sub_10007F3E0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        uint64_t result = swift_checkMetadataState();
        if (v4 <= 0x3F)
        {
          uint64_t result = swift_checkMetadataState();
          if (v5 <= 0x3F)
          {
            uint64_t result = swift_checkMetadataState();
            if (v6 <= 0x3F)
            {
              uint64_t result = swift_checkMetadataState();
              if (v7 <= 0x3F)
              {
                swift_initStructMetadata();
                return 0;
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t *sub_10007F5F0(uint64_t *a1, uint64_t *a2, void *a3)
{
  unint64_t v3 = a1;
  uint64_t v4 = *(void *)(a3[2] - 8);
  uint64_t v5 = *(void *)(a3[3] - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  uint64_t v47 = *(void *)(a3[4] - 8);
  uint64_t v7 = a3[5];
  uint64_t v45 = *(void *)(v7 - 8);
  int v8 = *(_DWORD *)(v45 + 80);
  uint64_t v46 = a3[6];
  uint64_t v43 = *(void *)(v46 - 8);
  uint64_t v44 = a3[7];
  uint64_t v41 = *(void *)(v44 - 8);
  int v9 = *(_DWORD *)(v41 + 80);
  uint64_t v42 = a3[8];
  uint64_t v39 = *(void *)(v42 - 8);
  int v10 = *(_DWORD *)(v39 + 80);
  uint64_t v11 = *(void *)(v5 + 64) + *(_DWORD *)(v47 + 80);
  uint64_t v40 = *(void *)(v4 + 64) + v6;
  uint64_t v12 = *(void *)(v47 + 64) + v8;
  uint64_t v13 = *(void *)(v45 + 64) + *(_DWORD *)(v43 + 80);
  uint64_t v14 = *(void *)(v43 + 64) + v9;
  uint64_t v15 = (*(unsigned char *)(v5 + 80) | *(unsigned char *)(v4 + 80) | *(unsigned char *)(v47 + 80) | v8 | *(unsigned char *)(v43 + 80) | v9 | v10);
  if (v15 <= 7
    && ((*(void *)(*(void *)(v44 - 8) + 64)
       + *(_DWORD *)(v39 + 80)
       + ((v14
         + ((v13
           + ((v12 + ((v11 + (v40 & ~v6)) & ~(unint64_t)*(_DWORD *)(v47 + 80))) & ~(unint64_t)*(_DWORD *)(v45 + 80))) & ~(unint64_t)*(_DWORD *)(v43 + 80))) & ~(unint64_t)*(_DWORD *)(v41 + 80))) & ~(unint64_t)*(_DWORD *)(v39 + 80))
     + *(void *)(*(void *)(v42 - 8) + 64) <= 0x18
    && ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v4 + 80) | *(_DWORD *)(v47 + 80) | v8 | *(_DWORD *)(v43 + 80) | v9 | v10) & 0x100000) == 0)
  {
    uint64_t v19 = ~v6;
    unint64_t v32 = ~(unint64_t)*(_DWORD *)(v47 + 80);
    unint64_t v33 = ~(unint64_t)v8;
    uint64_t v34 = a3[4];
    unint64_t v35 = ~(unint64_t)*(_DWORD *)(v43 + 80);
    uint64_t v36 = *(void *)(*(void *)(v44 - 8) + 64) + *(_DWORD *)(v39 + 80);
    unint64_t v37 = ~(unint64_t)v9;
    unint64_t v38 = ~(unint64_t)*(_DWORD *)(v39 + 80);
    uint64_t v20 = a3[3];
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
    unint64_t v22 = ((unint64_t)v3 + v40) & v19;
    unint64_t v23 = ((unint64_t)a2 + v40) & v19;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))(v22, v23, v20);
    unint64_t v24 = (v23 + v11) & v32;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v47 + 16))((v22 + v11) & v32, v24, v34);
    unint64_t v25 = (((v22 + v11) & v32) + v12) & v33;
    unint64_t v26 = (v24 + v12) & v33;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v45 + 16))(v25, v26, v7);
    unint64_t v27 = (v25 + v13) & v35;
    unint64_t v28 = (v26 + v13) & v35;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v43 + 16))(v27, v28, v46);
    unint64_t v29 = (v27 + v14) & v37;
    unint64_t v30 = (v28 + v14) & v37;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v41 + 16))(v29, v30, v44);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v39 + 16))((v29 + v36) & v38, (v30 + v36) & v38, v42);
  }
  else
  {
    uint64_t v18 = *a2;
    *unint64_t v3 = *a2;
    unint64_t v3 = (uint64_t *)(v18 + ((v15 + 16) & ~v15));
    swift_retain();
  }
  return v3;
}

uint64_t sub_10007FA80(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void *)(a2[2] - 8) + 8;
  (*(void (**)(void))v4)();
  uint64_t v5 = *(void *)(v4 + 56) + a1;
  uint64_t v6 = *(void *)(a2[3] - 8);
  uint64_t v7 = v6 + 8;
  unint64_t v8 = (v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t))(v6 + 8))(v8);
  uint64_t v9 = *(void *)(v7 + 56);
  uint64_t v10 = *(void *)(a2[4] - 8);
  uint64_t v11 = v10 + 8;
  unint64_t v12 = (v8 + v9 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  (*(void (**)(unint64_t))(v10 + 8))(v12);
  uint64_t v13 = *(void *)(v11 + 56);
  uint64_t v14 = *(void *)(a2[5] - 8);
  uint64_t v15 = v14 + 8;
  unint64_t v16 = (v12 + v13 + *(unsigned __int8 *)(v14 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  (*(void (**)(unint64_t))(v14 + 8))(v16);
  uint64_t v17 = *(void *)(v15 + 56);
  uint64_t v18 = *(void *)(a2[6] - 8);
  uint64_t v19 = v18 + 8;
  unint64_t v20 = (v16 + v17 + *(unsigned __int8 *)(v18 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  (*(void (**)(unint64_t))(v18 + 8))(v20);
  uint64_t v21 = *(void *)(v19 + 56);
  uint64_t v22 = *(void *)(a2[7] - 8);
  uint64_t v23 = v22 + 8;
  unint64_t v24 = (v20 + v21 + *(unsigned __int8 *)(v22 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  (*(void (**)(unint64_t))(v22 + 8))(v24);
  uint64_t v25 = *(void *)(a2[8] - 8);
  unint64_t v26 = *(uint64_t (**)(unint64_t))(v25 + 8);
  unint64_t v27 = (v24 + *(void *)(v23 + 56) + *(unsigned __int8 *)(v25 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);

  return v26(v27);
}

uint64_t sub_10007FC78(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a3[2] - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3[3] - 8);
  uint64_t v8 = v7 + 16;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 48) + v9;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 16))(v11, v12);
  uint64_t v13 = *(void *)(v8 + 48);
  uint64_t v14 = *(void *)(a3[4] - 8);
  uint64_t v15 = v14 + 16;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = (v17 + v11) & ~v16;
  uint64_t v19 = (v17 + v12) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v14 + 16))(v18, v19);
  uint64_t v20 = *(void *)(v15 + 48);
  uint64_t v21 = *(void *)(a3[5] - 8);
  uint64_t v22 = v21 + 16;
  uint64_t v23 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v24 = v20 + v23;
  uint64_t v25 = (v24 + v18) & ~v23;
  uint64_t v26 = (v24 + v19) & ~v23;
  (*(void (**)(uint64_t, uint64_t))(v21 + 16))(v25, v26);
  uint64_t v27 = *(void *)(v22 + 48);
  uint64_t v28 = *(void *)(a3[6] - 8);
  uint64_t v29 = v28 + 16;
  uint64_t v30 = *(unsigned __int8 *)(v28 + 80);
  uint64_t v31 = v27 + v30;
  uint64_t v32 = (v31 + v25) & ~v30;
  uint64_t v33 = (v31 + v26) & ~v30;
  (*(void (**)(uint64_t, uint64_t))(v28 + 16))(v32, v33);
  uint64_t v34 = *(void *)(v29 + 48);
  uint64_t v35 = *(void *)(a3[7] - 8);
  uint64_t v36 = v35 + 16;
  uint64_t v37 = *(unsigned __int8 *)(v35 + 80);
  uint64_t v38 = v34 + v37;
  uint64_t v39 = (v38 + v32) & ~v37;
  uint64_t v40 = (v38 + v33) & ~v37;
  (*(void (**)(uint64_t, uint64_t))(v35 + 16))(v39, v40);
  uint64_t v41 = *(void *)(a3[8] - 8);
  (*(void (**)(unint64_t, unint64_t))(v41 + 16))((*(void *)(v36 + 48) + *(unsigned __int8 *)(v41 + 80) + v39) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80), (*(void *)(v36 + 48) + *(unsigned __int8 *)(v41 + 80) + v40) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80));
  return a1;
}

uint64_t sub_10007FEB8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a3[2] - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3[3] - 8);
  uint64_t v8 = v7 + 24;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 40) + v9;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 24))(v11, v12);
  uint64_t v13 = *(void *)(v8 + 40);
  uint64_t v14 = *(void *)(a3[4] - 8);
  uint64_t v15 = v14 + 24;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = (v17 + v11) & ~v16;
  uint64_t v19 = (v17 + v12) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v14 + 24))(v18, v19);
  uint64_t v20 = *(void *)(v15 + 40);
  uint64_t v21 = *(void *)(a3[5] - 8);
  uint64_t v22 = v21 + 24;
  uint64_t v23 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v24 = v20 + v23;
  uint64_t v25 = (v24 + v18) & ~v23;
  uint64_t v26 = (v24 + v19) & ~v23;
  (*(void (**)(uint64_t, uint64_t))(v21 + 24))(v25, v26);
  uint64_t v27 = *(void *)(v22 + 40);
  uint64_t v28 = *(void *)(a3[6] - 8);
  uint64_t v29 = v28 + 24;
  uint64_t v30 = *(unsigned __int8 *)(v28 + 80);
  uint64_t v31 = v27 + v30;
  uint64_t v32 = (v31 + v25) & ~v30;
  uint64_t v33 = (v31 + v26) & ~v30;
  (*(void (**)(uint64_t, uint64_t))(v28 + 24))(v32, v33);
  uint64_t v34 = *(void *)(v29 + 40);
  uint64_t v35 = *(void *)(a3[7] - 8);
  uint64_t v36 = v35 + 24;
  uint64_t v37 = *(unsigned __int8 *)(v35 + 80);
  uint64_t v38 = v34 + v37;
  uint64_t v39 = (v38 + v32) & ~v37;
  uint64_t v40 = (v38 + v33) & ~v37;
  (*(void (**)(uint64_t, uint64_t))(v35 + 24))(v39, v40);
  uint64_t v41 = *(void *)(a3[8] - 8);
  (*(void (**)(unint64_t, unint64_t))(v41 + 24))((*(void *)(v36 + 40) + *(unsigned __int8 *)(v41 + 80) + v39) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80), (*(void *)(v36 + 40) + *(unsigned __int8 *)(v41 + 80) + v40) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80));
  return a1;
}

uint64_t sub_1000800F8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a3[2] - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3[3] - 8);
  uint64_t v8 = v7 + 32;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 32) + v9;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 32))(v11, v12);
  uint64_t v13 = *(void *)(v8 + 32);
  uint64_t v14 = *(void *)(a3[4] - 8);
  uint64_t v15 = v14 + 32;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = (v17 + v11) & ~v16;
  uint64_t v19 = (v17 + v12) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v14 + 32))(v18, v19);
  uint64_t v20 = *(void *)(v15 + 32);
  uint64_t v21 = *(void *)(a3[5] - 8);
  uint64_t v22 = v21 + 32;
  uint64_t v23 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v24 = v20 + v23;
  uint64_t v25 = (v24 + v18) & ~v23;
  uint64_t v26 = (v24 + v19) & ~v23;
  (*(void (**)(uint64_t, uint64_t))(v21 + 32))(v25, v26);
  uint64_t v27 = *(void *)(v22 + 32);
  uint64_t v28 = *(void *)(a3[6] - 8);
  uint64_t v29 = v28 + 32;
  uint64_t v30 = *(unsigned __int8 *)(v28 + 80);
  uint64_t v31 = v27 + v30;
  uint64_t v32 = (v31 + v25) & ~v30;
  uint64_t v33 = (v31 + v26) & ~v30;
  (*(void (**)(uint64_t, uint64_t))(v28 + 32))(v32, v33);
  uint64_t v34 = *(void *)(v29 + 32);
  uint64_t v35 = *(void *)(a3[7] - 8);
  uint64_t v36 = v35 + 32;
  uint64_t v37 = *(unsigned __int8 *)(v35 + 80);
  uint64_t v38 = v34 + v37;
  uint64_t v39 = (v38 + v32) & ~v37;
  uint64_t v40 = (v38 + v33) & ~v37;
  (*(void (**)(uint64_t, uint64_t))(v35 + 32))(v39, v40);
  uint64_t v41 = *(void *)(a3[8] - 8);
  (*(void (**)(unint64_t, unint64_t))(v41 + 32))((*(void *)(v36 + 32) + *(unsigned __int8 *)(v41 + 80) + v39) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80), (*(void *)(v36 + 32) + *(unsigned __int8 *)(v41 + 80) + v40) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80));
  return a1;
}

uint64_t sub_100080338(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a3[2] - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3[3] - 8);
  uint64_t v8 = v7 + 40;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 24) + v9;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 40))(v11, v12);
  uint64_t v13 = *(void *)(v8 + 24);
  uint64_t v14 = *(void *)(a3[4] - 8);
  uint64_t v15 = v14 + 40;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = (v17 + v11) & ~v16;
  uint64_t v19 = (v17 + v12) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v14 + 40))(v18, v19);
  uint64_t v20 = *(void *)(v15 + 24);
  uint64_t v21 = *(void *)(a3[5] - 8);
  uint64_t v22 = v21 + 40;
  uint64_t v23 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v24 = v20 + v23;
  uint64_t v25 = (v24 + v18) & ~v23;
  uint64_t v26 = (v24 + v19) & ~v23;
  (*(void (**)(uint64_t, uint64_t))(v21 + 40))(v25, v26);
  uint64_t v27 = *(void *)(v22 + 24);
  uint64_t v28 = *(void *)(a3[6] - 8);
  uint64_t v29 = v28 + 40;
  uint64_t v30 = *(unsigned __int8 *)(v28 + 80);
  uint64_t v31 = v27 + v30;
  uint64_t v32 = (v31 + v25) & ~v30;
  uint64_t v33 = (v31 + v26) & ~v30;
  (*(void (**)(uint64_t, uint64_t))(v28 + 40))(v32, v33);
  uint64_t v34 = *(void *)(v29 + 24);
  uint64_t v35 = *(void *)(a3[7] - 8);
  uint64_t v36 = v35 + 40;
  uint64_t v37 = *(unsigned __int8 *)(v35 + 80);
  uint64_t v38 = v34 + v37;
  uint64_t v39 = (v38 + v32) & ~v37;
  uint64_t v40 = (v38 + v33) & ~v37;
  (*(void (**)(uint64_t, uint64_t))(v35 + 40))(v39, v40);
  uint64_t v41 = *(void *)(a3[8] - 8);
  (*(void (**)(unint64_t, unint64_t))(v41 + 40))((*(void *)(v36 + 24) + *(unsigned __int8 *)(v41 + 80) + v39) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80), (*(void *)(v36 + 24) + *(unsigned __int8 *)(v41 + 80) + v40) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80));
  return a1;
}

uint64_t sub_100080578(unsigned __int16 *a1, unsigned int a2, void *a3)
{
  uint64_t v58 = a3[2];
  uint64_t v56 = a3[3];
  uint64_t v57 = *(void *)(v58 - 8);
  unsigned int v5 = *(_DWORD *)(v57 + 84);
  uint64_t v6 = *(void *)(v56 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  if (v7 <= v5) {
    unsigned int v8 = *(_DWORD *)(v57 + 84);
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = a3[5];
  uint64_t v54 = a3[4];
  uint64_t v10 = *(void *)(v54 - 8);
  unsigned int v55 = *(_DWORD *)(v10 + 84);
  if (v55 > v8) {
    unsigned int v8 = *(_DWORD *)(v10 + 84);
  }
  uint64_t v11 = *(void *)(v9 - 8);
  unsigned int v53 = *(_DWORD *)(v11 + 84);
  if (v53 <= v8) {
    unsigned int v12 = v8;
  }
  else {
    unsigned int v12 = *(_DWORD *)(v11 + 84);
  }
  uint64_t v13 = *(void *)(a3[6] - 8);
  unsigned int v52 = *(_DWORD *)(v13 + 84);
  if (v52 <= v12) {
    unsigned int v14 = v12;
  }
  else {
    unsigned int v14 = *(_DWORD *)(v13 + 84);
  }
  uint64_t v49 = a3[8];
  uint64_t v50 = a3[7];
  uint64_t v15 = *(void *)(v50 - 8);
  unsigned int v16 = *(_DWORD *)(v15 + 84);
  unsigned int v51 = v16;
  if (v16 <= v14) {
    unsigned int v16 = v14;
  }
  uint64_t v17 = *(void *)(a3[8] - 8);
  uint64_t v18 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v19 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v20 = v13;
  uint64_t v21 = *(void *)(*(void *)(v54 - 8) + 64);
  uint64_t v22 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v23 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v24 = *(void *)(v13 + 64);
  uint64_t v25 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v26 = *(unsigned __int8 *)(v17 + 80);
  uint64_t v27 = *(void *)(v17 + 64);
  if (*(_DWORD *)(v17 + 84) <= v16) {
    unsigned int v28 = v16;
  }
  else {
    unsigned int v28 = *(_DWORD *)(v17 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v29 = *(void *)(*(void *)(v56 - 8) + 64);
  uint64_t v30 = *(void *)(*(void *)(v58 - 8) + 64) + v18;
  uint64_t v31 = *(void *)(*(void *)(v9 - 8) + 64) + v23;
  uint64_t v32 = v24 + v25;
  uint64_t v33 = *(void *)(*(void *)(v50 - 8) + 64) + v26;
  unsigned int v34 = a2 - v28;
  if (a2 <= v28) {
    goto LABEL_37;
  }
  uint64_t v35 = (v33 + ((v32 + ((v31 + ((v21 + v22 + ((v29 + v19 + (v30 & ~v18)) & ~v19)) & ~v22)) & ~v23)) & ~v25)) & ~v26;
  uint64_t v36 = v35 + v27;
  char v37 = 8 * (v35 + v27);
  if (v36 > 3) {
    goto LABEL_20;
  }
  unsigned int v39 = ((v34 + ~(-1 << v37)) >> v37) + 1;
  if (HIWORD(v39))
  {
    int v38 = *(_DWORD *)((char *)a1 + v36);
    if (!v38) {
      goto LABEL_37;
    }
    goto LABEL_27;
  }
  if (v39 > 0xFF)
  {
    int v38 = *(unsigned __int16 *)((char *)a1 + v36);
    if (!*(unsigned __int16 *)((char *)a1 + v36)) {
      goto LABEL_37;
    }
    goto LABEL_27;
  }
  if (v39 >= 2)
  {
LABEL_20:
    int v38 = *((unsigned __int8 *)a1 + v36);
    if (!*((unsigned char *)a1 + v36)) {
      goto LABEL_37;
    }
LABEL_27:
    int v40 = (v38 - 1) << v37;
    if (v36 > 3) {
      int v40 = 0;
    }
    if (v36)
    {
      if (v36 <= 3) {
        int v41 = v36;
      }
      else {
        int v41 = 4;
      }
      switch(v41)
      {
        case 2:
          int v42 = *a1;
          break;
        case 3:
          int v42 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
          break;
        case 4:
          int v42 = *(_DWORD *)a1;
          break;
        default:
          int v42 = *(unsigned __int8 *)a1;
          break;
      }
    }
    else
    {
      int v42 = 0;
    }
    return v28 + (v42 | v40) + 1;
  }
LABEL_37:
  if (!v28) {
    return 0;
  }
  if (v5 == v28)
  {
    uint64_t v43 = v58;
    uint64_t v44 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v57 + 48);
    uint64_t v7 = *(unsigned int *)(v57 + 84);
    goto LABEL_57;
  }
  unint64_t v46 = ((unint64_t)a1 + v30) & ~v18;
  if (v7 == v28)
  {
    uint64_t v43 = v56;
    uint64_t v44 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(*(void *)(v56 - 8) + 48);
    a1 = (unsigned __int16 *)(((unint64_t)a1 + v30) & ~v18);
    goto LABEL_57;
  }
  uint64_t v7 = v55;
  if (v55 == v28)
  {
    uint64_t v43 = v54;
    uint64_t v44 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(*(void *)(v54 - 8) + 48);
    a1 = (unsigned __int16 *)((v46 + v29 + v19) & ~v19);
    goto LABEL_57;
  }
  a1 = (unsigned __int16 *)((((v46 + v29 + v19) & ~v19) + v21 + v22) & ~v22);
  uint64_t v7 = v53;
  if (v53 == v28)
  {
    uint64_t v43 = v9;
    uint64_t v44 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    goto LABEL_57;
  }
  unint64_t v47 = ((unint64_t)a1 + v31) & ~v23;
  if (v52 != v28)
  {
    a1 = (unsigned __int16 *)((v32 + v47) & ~v25);
    uint64_t v7 = v51;
    if (v51 != v28)
    {
      a1 = (unsigned __int16 *)(((unint64_t)a1 + v33) & ~v26);
      uint64_t v44 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v17 + 48);
      uint64_t v7 = *(unsigned int *)(v17 + 84);
      uint64_t v43 = v49;
      return v44(a1, v7, v43);
    }
    uint64_t v44 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v15 + 48);
    uint64_t v43 = v50;
LABEL_57:
    return v44(a1, v7, v43);
  }
  unint64_t v48 = *(uint64_t (**)(unint64_t))(v20 + 48);
  return v48(v47);
}

void sub_100080B14(unsigned char *a1, unsigned int a2, unsigned int a3, void *a4)
{
  uint64_t v56 = *(void *)(a4[2] - 8);
  unsigned int v5 = *(_DWORD *)(v56 + 84);
  uint64_t v6 = *(void *)(a4[3] - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  unsigned int v55 = v7;
  if (v7 <= v5) {
    unsigned int v7 = *(_DWORD *)(v56 + 84);
  }
  uint64_t v52 = a4[4];
  uint64_t v8 = *(void *)(v52 - 8);
  unsigned int v9 = *(_DWORD *)(v8 + 84);
  unsigned int v54 = v9;
  if (v9 <= v7) {
    unsigned int v9 = v7;
  }
  uint64_t v49 = a4[5];
  uint64_t v10 = *(void *)(v49 - 8);
  uint64_t v11 = *(void *)(a4[6] - 8);
  unsigned int v50 = *(_DWORD *)(v10 + 84);
  if (v50 > v9) {
    unsigned int v9 = *(_DWORD *)(v10 + 84);
  }
  uint64_t v12 = *(void *)(a4[6] - 8);
  unsigned int v48 = *(_DWORD *)(v11 + 84);
  if (v48 <= v9) {
    unsigned int v13 = v9;
  }
  else {
    unsigned int v13 = *(_DWORD *)(v11 + 84);
  }
  uint64_t v46 = a4[7];
  uint64_t v14 = *(void *)(v46 - 8);
  unsigned int v47 = *(_DWORD *)(v14 + 84);
  if (v47 <= v13) {
    unsigned int v15 = v13;
  }
  else {
    unsigned int v15 = *(_DWORD *)(v14 + 84);
  }
  uint64_t v16 = *(void *)(a4[8] - 8);
  uint64_t v17 = *(void *)(*(void *)(a4[2] - 8) + 64);
  uint64_t v53 = *(void *)(a4[3] - 8);
  uint64_t v18 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v19 = *(void *)(v53 + 64);
  uint64_t v51 = *(void *)(v52 - 8);
  uint64_t v20 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v21 = *(void *)(v51 + 64);
  uint64_t v22 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v23 = *(void *)(*(void *)(v49 - 8) + 64);
  uint64_t v24 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v25 = *(void *)(v11 + 64);
  uint64_t v26 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v27 = *(void *)(*(void *)(v46 - 8) + 64);
  uint64_t v28 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v29 = v17 + v18;
  uint64_t v30 = v23 + v24;
  uint64_t v31 = v25 + v26;
  size_t v32 = ((v27
        + v28
        + ((v25 + v26 + ((v23 + v24 + ((v21 + v22 + ((v19 + v20 + ((v17 + v18) & ~v18)) & ~v20)) & ~v22)) & ~v24)) & ~v26)) & ~v28)
      + *(void *)(v16 + 64);
  if (*(_DWORD *)(v16 + 84) <= v15) {
    unsigned int v33 = v15;
  }
  else {
    unsigned int v33 = *(_DWORD *)(v16 + 84);
  }
  if (a3 <= v33)
  {
    int v34 = 0;
  }
  else if (v32 <= 3)
  {
    unsigned int v39 = ((a3 - v33 + ~(-1 << (8 * v32))) >> (8 * v32)) + 1;
    if (HIWORD(v39))
    {
      int v34 = 4;
    }
    else if (v39 >= 0x100)
    {
      int v34 = 2;
    }
    else
    {
      int v34 = v39 > 1;
    }
  }
  else
  {
    int v34 = 1;
  }
  if (v33 < a2)
  {
    unsigned int v35 = ~v33 + a2;
    if (v32 < 4)
    {
      int v36 = (v35 >> (8 * v32)) + 1;
      if (v32)
      {
        int v40 = v35 & ~(-1 << (8 * v32));
        bzero(a1, v32);
        if (v32 == 3)
        {
          *(_WORD *)a1 = v40;
          a1[2] = BYTE2(v40);
        }
        else if (v32 == 2)
        {
          *(_WORD *)a1 = v40;
        }
        else
        {
          *a1 = v40;
        }
      }
    }
    else
    {
      bzero(a1, v32);
      *(_DWORD *)a1 = v35;
      int v36 = 1;
    }
    switch(v34)
    {
      case 1:
        a1[v32] = v36;
        return;
      case 2:
        *(_WORD *)&a1[v32] = v36;
        return;
      case 3:
        goto LABEL_67;
      case 4:
        *(_DWORD *)&a1[v32] = v36;
        return;
      default:
        return;
    }
  }
  uint64_t v37 = ~v18;
  uint64_t v38 = ~v26;
  switch(v34)
  {
    case 1:
      a1[v32] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_36;
    case 2:
      *(_WORD *)&a1[v32] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_36;
    case 3:
LABEL_67:
      __break(1u);
      JUMPOUT(0x10008114CLL);
    case 4:
      *(_DWORD *)&a1[v32] = 0;
      goto LABEL_35;
    default:
LABEL_35:
      if (!a2) {
        return;
      }
LABEL_36:
      if (v5 == v33)
      {
        int v41 = *(void (**)(unsigned char *))(v56 + 56);
        int v42 = a1;
        goto LABEL_55;
      }
      int v42 = (unsigned char *)((unint64_t)&a1[v29] & v37);
      if (v55 == v33)
      {
        int v41 = *(void (**)(unsigned char *))(v53 + 56);
        goto LABEL_55;
      }
      int v42 = (unsigned char *)((unint64_t)&v42[v19 + v20] & ~v20);
      if (v54 == v33)
      {
        uint64_t v43 = v51;
LABEL_54:
        int v41 = *(void (**)(unsigned char *))(v43 + 56);
        goto LABEL_55;
      }
      int v42 = (unsigned char *)((unint64_t)&v42[v21 + v22] & ~v22);
      if (v50 == v33)
      {
        uint64_t v43 = v10;
        goto LABEL_54;
      }
      unint64_t v44 = (unint64_t)&v42[v30] & ~v24;
      if (v48 != v33)
      {
        int v42 = (unsigned char *)((v31 + v44) & v38);
        if (v47 != v33)
        {
          int v42 = (unsigned char *)((unint64_t)&v42[v27 + v28] & ~v28);
          int v41 = *(void (**)(unsigned char *))(v16 + 56);
          goto LABEL_57;
        }
        int v41 = *(void (**)(unsigned char *))(v14 + 56);
LABEL_55:
LABEL_57:
        v41(v42);
        return;
      }
      uint64_t v45 = *(void (**)(unint64_t))(v12 + 56);
      v45(v44);
      return;
  }
}

uint64_t destroy for ComposeParticipantsView(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 8))
  {
    return swift_release();
  }
  return result;
}

void *_s37com_apple_CloudSharingUI_CloudSharing23ComposeParticipantsViewVwCP_0(void *a1, void *a2)
{
  *a1 = *a2;
  unsigned int v5 = a2 + 1;
  uint64_t v4 = a2[1];
  swift_bridgeObjectRetain();
  if (v4)
  {
    uint64_t v6 = a2[2];
    a1[1] = v4;
    a1[2] = v6;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 1) = *v5;
  }
  return a1;
}

void *assignWithCopy for ComposeParticipantsView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[1];
  if (!a1[1])
  {
    if (v4)
    {
      uint64_t v6 = a2[2];
      a1[1] = v4;
      a1[2] = v6;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v5 = a2[2];
  a1[1] = v4;
  a1[2] = v5;
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for ComposeParticipantsView(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

void *assignWithTake for ComposeParticipantsView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[1];
  if (!a1[1])
  {
    if (v4)
    {
      uint64_t v6 = a2[2];
      a1[1] = v4;
      a1[2] = v6;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v5 = a2[2];
  a1[1] = v4;
  a1[2] = v5;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ComposeParticipantsView(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ComposeParticipantsView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ComposeParticipantsView()
{
  return &type metadata for ComposeParticipantsView;
}

unint64_t sub_100081410()
{
  unint64_t result = qword_10010D710;
  if (!qword_10010D710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010D710);
  }
  return result;
}

void sub_100081464(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v6 = objc_allocWithZone((Class)_UIShareInvitationModalAddParticipantController);
  swift_bridgeObjectRetain();
  Class isa = sub_1000C7530().super.isa;
  swift_bridgeObjectRelease();
  id v8 = [v6 initWithCurrentAddresses:isa];

  if (v8)
  {
    id v9 = v8;
    NSString v10 = sub_1000C7400();
    [v9 setContinueActionTitle:v10];

    if (a3)
    {
      void v14[4] = a3;
      void v14[5] = a4;
      v14[0] = _NSConcreteStackBlock;
      v14[1] = 1107296256;
      v14[2] = sub_1000815DC;
      v14[3] = &unk_1001014D8;
      uint64_t v11 = _Block_copy(v14);
      id v12 = v9;
      sub_1000236E0(a3);
      swift_release();
    }
    else
    {
      id v13 = v9;
      uint64_t v11 = 0;
    }
    [v9 setCompletion:v11];
    _Block_release(v11);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1000815DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  if (a3) {
    uint64_t v5 = sub_1000C7540();
  }
  else {
    uint64_t v5 = 0;
  }
  swift_retain();
  v4(a2, v5);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_10008165C(uint64_t a1)
{
  sub_100081464(a1, *v1, v1[1], v1[2]);
}

uint64_t sub_100081668(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100081758();

  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_1000816CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100081758();

  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_100081730()
{
}

unint64_t sub_100081758()
{
  unint64_t result = qword_10010D718[0];
  if (!qword_10010D718[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_10010D718);
  }
  return result;
}

uint64_t sub_1000817AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000817BC()
{
  return swift_release();
}

ValueMetadata *type metadata accessor for TriStateBool()
{
  return &type metadata for TriStateBool;
}

BOOL sub_1000817D4(BOOL *a1, uint64_t *a2)
{
  return sub_1000817E0(*a1, *a2);
}

BOOL sub_1000817E0(BOOL result, uint64_t a2)
{
  uint64_t v2 = *(void *)(result + 16);
  if (!v2)
  {
    __break(1u);
    goto LABEL_23;
  }
  int v3 = *(unsigned __int8 *)(result + 32);
  if (v3 == 1)
  {
    if (v2 == 1)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    if (*(unsigned char *)(result + 33) == 1)
    {
      uint64_t v4 = 0;
      goto LABEL_11;
    }
    int v5 = 0;
  }
  else
  {
    if (v2 == 1)
    {
LABEL_24:
      __break(1u);
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    int v5 = *(unsigned __int8 *)(result + 33);
  }
  BOOL v6 = v3 == v5;
  uint64_t v4 = 1;
  if (!v6) {
    uint64_t v4 = 2;
  }
LABEL_11:
  uint64_t v7 = *(void *)(a2 + 16);
  if (!v7)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  int v8 = *(unsigned __int8 *)(a2 + 32);
  if ((v8 & 1) == 0)
  {
    if (v7 != 1)
    {
      int v10 = *(unsigned __int8 *)(a2 + 33);
      goto LABEL_19;
    }
    goto LABEL_25;
  }
  if (v7 != 1)
  {
    if (*(unsigned char *)(a2 + 33) == 1)
    {
      uint64_t v9 = 0;
      return v4 == v9;
    }
    int v10 = 0;
LABEL_19:
    BOOL v6 = v8 == v10;
    uint64_t v9 = 1;
    if (!v6) {
      uint64_t v9 = 2;
    }
    return v4 == v9;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1000818A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 32);
}

void sub_1000818B0()
{
  sub_100082438();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

char *sub_100081954(char *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *(void *)a1 = *a2;
    uint64_t v4 = (char *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_1000C6930();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_100012854(&qword_10010BE10);
      memcpy(v4, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, uint64_t *, uint64_t))(v8 + 16))(v4, a2, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v4, 0, 1, v7);
    }
    uint64_t v11 = a3[9];
    uint64_t v12 = a3[10];
    id v13 = &v4[v11];
    uint64_t v14 = (uint64_t *)((char *)a2 + v11);
    uint64_t v15 = v14[1];
    *(void *)id v13 = *v14;
    *((void *)v13 + 1) = v15;
    uint64_t v16 = &v4[v12];
    uint64_t v17 = (uint64_t *)((char *)a2 + v12);
    uint64_t v18 = v17[1];
    *(void *)uint64_t v16 = *v17;
    *((void *)v16 + 1) = v18;
    uint64_t v19 = a3[11];
    uint64_t v20 = &v4[v19];
    uint64_t v21 = (char *)a2 + v19;
    *uint64_t v20 = *v21;
    *((void *)v20 + 1) = *((void *)v21 + 1);
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_100081B10(uint64_t a1)
{
  uint64_t v2 = sub_1000C6930();
  uint64_t v3 = *(void *)(v2 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2)) {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }
  swift_release();
  swift_release();

  return swift_release();
}

char *sub_100081C00(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1000C6930();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_100012854(&qword_10010BE10);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[9];
  uint64_t v10 = a3[10];
  uint64_t v11 = &a1[v9];
  uint64_t v12 = &a2[v9];
  uint64_t v13 = *((void *)v12 + 1);
  *(void *)uint64_t v11 = *(void *)v12;
  *((void *)v11 + 1) = v13;
  uint64_t v14 = &a1[v10];
  uint64_t v15 = &a2[v10];
  uint64_t v16 = *((void *)v15 + 1);
  *(void *)uint64_t v14 = *(void *)v15;
  *((void *)v14 + 1) = v16;
  uint64_t v17 = a3[11];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  char *v18 = *v19;
  *((void *)v18 + 1) = *((void *)v19 + 1);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

char *sub_100081D70(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1000C6930();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = sub_100012854(&qword_10010BE10);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = a3[9];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = *((void *)v14 + 1);
  *(void *)uint64_t v13 = *(void *)v14;
  *((void *)v13 + 1) = v15;
  swift_retain();
  swift_release();
  uint64_t v16 = a3[10];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v19 = *((void *)v18 + 1);
  *(void *)uint64_t v17 = *(void *)v18;
  *((void *)v17 + 1) = v19;
  swift_retain();
  swift_release();
  uint64_t v20 = a3[11];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  char *v21 = *v22;
  *((void *)v21 + 1) = *((void *)v22 + 1);
  swift_retain();
  swift_release();
  return a1;
}

char *sub_100081F64(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1000C6930();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_100012854(&qword_10010BE10);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[10];
  *(_OWORD *)&a1[a3[9]] = *(_OWORD *)&a2[a3[9]];
  *(_OWORD *)&a1[v9] = *(_OWORD *)&a2[v9];
  *(_OWORD *)&a1[a3[11]] = *(_OWORD *)&a2[a3[11]];
  return a1;
}

char *sub_1000820A0(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1000C6930();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = sub_100012854(&qword_10010BE10);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *(_OWORD *)&a1[a3[9]] = *(_OWORD *)&a2[a3[9]];
  swift_release();
  *(_OWORD *)&a1[a3[10]] = *(_OWORD *)&a2[a3[10]];
  swift_release();
  uint64_t v12 = a3[11];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  char *v13 = *v14;
  *((void *)v13 + 1) = *((void *)v14 + 1);
  swift_release();
  return a1;
}

uint64_t sub_100082274(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100082288);
}

uint64_t sub_100082288(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100012854(&qword_10010BE10);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 36));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_10008234C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100082360);
}

uint64_t sub_100082360(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100012854(&qword_10010BE10);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 36)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for AsyncMainActorButton()
{
  return sub_10008337C();
}

void sub_100082438()
{
  if (!qword_10010D7A0)
  {
    sub_1000C6930();
    unint64_t v0 = sub_1000C7840();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10010D7A0);
    }
  }
}

uint64_t sub_100082490()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000824D4@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3 = v2;
  unsigned int v39 = a2;
  uint64_t v5 = *(void *)(a1 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(a1);
  uint64_t v7 = sub_100012854(&qword_10010BE10);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32[1] = v9;
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  uint64_t v35 = sub_1000C7240();
  uint64_t v38 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  unsigned int v33 = (char *)v32 - v12;
  sub_100013128(&qword_10010C930);
  uint64_t v13 = sub_1000C6AB0();
  uint64_t v36 = *(void *)(v13 - 8);
  uint64_t v14 = __chkstk_darwin(v13);
  int v34 = (char *)v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v37 = (char *)v32 - v16;
  sub_100082E64(v2, (uint64_t)v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v2, a1);
  unint64_t v17 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v10;
  *(void *)(v18 + 24) = v11;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v18 + v17, (char *)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  uint64_t v19 = v33;
  sub_1000C7220();
  uint64_t v20 = v3 + *(int *)(a1 + 44);
  char v21 = *(unsigned char *)v20;
  uint64_t v22 = *(void *)(v20 + 8);
  char v42 = v21;
  uint64_t v43 = v22;
  sub_100012854(&qword_10010D7A8);
  sub_1000C71F0();
  uint64_t v23 = v35;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v25 = v34;
  sub_1000C7100();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v19, v23);
  unint64_t v26 = sub_1000830B0();
  uint64_t v40 = WitnessTable;
  unint64_t v41 = v26;
  swift_getWitnessTable();
  uint64_t v28 = v36;
  uint64_t v27 = v37;
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v36 + 16);
  v29(v37, v25, v13);
  uint64_t v30 = *(void (**)(char *, uint64_t))(v28 + 8);
  v30(v25, v13);
  v29(v39, v27, v13);
  return ((uint64_t (*)(char *, uint64_t))v30)(v27, v13);
}

uint64_t sub_1000828E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AsyncMainActorButton();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v21[-v8];
  uint64_t v10 = sub_100012854(&qword_10010B770);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = &v21[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = (char *)(a1 + *(int *)(v6 + 44));
  char v14 = *v13;
  uint64_t v15 = *((void *)v13 + 1);
  v21[16] = v14;
  uint64_t v22 = v15;
  v21[15] = 1;
  sub_100012854(&qword_10010D7A8);
  sub_1000C7200();
  uint64_t v16 = sub_1000C7600();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v12, 1, 1, v16);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  sub_1000C75D0();
  uint64_t v17 = sub_1000C75C0();
  unint64_t v18 = (*(unsigned __int8 *)(v7 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v19 = (char *)swift_allocObject();
  *((void *)v19 + 2) = v17;
  *((void *)v19 + 3) = &protocol witness table for MainActor;
  *((void *)v19 + 4) = a2;
  *((void *)v19 + 5) = a3;
  (*(void (**)(char *, unsigned char *, uint64_t))(v7 + 32))(&v19[v18], v9, v6);
  sub_1000BD2A0((uint64_t)v12, (uint64_t)&unk_10010D7B8, (uint64_t)v19);
  return swift_release();
}

uint64_t sub_100082B1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[5] = a5;
  v6[6] = a6;
  v6[4] = a4;
  sub_1000C75D0();
  v6[7] = sub_1000C75C0();
  uint64_t v8 = sub_1000C7590();
  v6[8] = v8;
  v6[9] = v7;
  return _swift_task_switch(sub_100082BB8, v8, v7);
}

uint64_t sub_100082BB8()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = type metadata accessor for AsyncMainActorButton();
  v0[10] = v2;
  uint64_t v5 = (uint64_t (*)(void))(*(void *)(v1 + *(int *)(v2 + 36)) + **(int **)(v1 + *(int *)(v2 + 36)));
  uint64_t v3 = (void *)swift_task_alloc();
  v0[11] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100082C9C;
  return v5();
}

uint64_t sub_100082C9C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 72);
  uint64_t v3 = *(void *)(v1 + 64);
  return _swift_task_switch(sub_100082DBC, v3, v2);
}

uint64_t sub_100082DBC()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 32);
  swift_release();
  uint64_t v3 = (char *)(v2 + *(int *)(v1 + 44));
  char v4 = *v3;
  uint64_t v5 = *((void *)v3 + 1);
  *(unsigned char *)(v0 + 16) = v4;
  *(void *)(v0 + 24) = v5;
  *(unsigned char *)(v0 + 96) = 0;
  sub_100012854(&qword_10010D7A8);
  sub_1000C7200();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_100082E64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100012854(&qword_10010BE10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100082ECC()
{
  uint64_t v1 = *(void *)(type metadata accessor for AsyncMainActorButton() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = sub_1000C6930();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  }
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_10008302C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(type metadata accessor for AsyncMainActorButton() - 8);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_1000828E8(v4, v1, v2);
}

unint64_t sub_1000830B0()
{
  unint64_t result = qword_10010C928;
  if (!qword_10010C928)
  {
    sub_100013128(&qword_10010C930);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010C928);
  }
  return result;
}

uint64_t sub_10008310C()
{
  uint64_t v1 = *(void *)(type metadata accessor for AsyncMainActorButton() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 48) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_unknownObjectRelease();
  uint64_t v5 = sub_1000C6930();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  }
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_100083274(uint64_t a1)
{
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = *(void *)(type metadata accessor for AsyncMainActorButton() - 8);
  uint64_t v7 = v1[2];
  uint64_t v8 = v1[3];
  uint64_t v9 = (uint64_t)v1 + ((*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_100013B98;
  return sub_100082B1C(a1, v7, v8, v9, v4, v5);
}

uint64_t sub_10008337C()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1000833AC()
{
  return swift_getWitnessTable();
}

void *initializeBufferWithCopyOfBuffer for NameAndEmailView(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for NameAndEmailView()
{
  return swift_release();
}

void *assignWithCopy for NameAndEmailView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  return a1;
}

void *assignWithTake for NameAndEmailView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  return a1;
}

uint64_t getEnumTagSinglePayload for NameAndEmailView(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for NameAndEmailView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NameAndEmailView()
{
  return &type metadata for NameAndEmailView;
}

uint64_t sub_1000835CC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000835E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100012854(&qword_10010D7C0);
  __chkstk_darwin(v4);
  uint64_t v6 = (uint64_t *)&v35[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_1000C6FA0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = &v35[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (a1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1000C67E0();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v11 = v44;
    uint64_t v12 = v45;
    uint64_t v14 = v46;
    uint64_t v13 = (void *)v47;
    uint64_t v15 = HIBYTE(v47) & 0xF;
    if ((v47 & 0x2000000000000000) == 0) {
      uint64_t v15 = v46 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v42 = v8;
    uint64_t v43 = v7;
    uint64_t v40 = v4;
    unint64_t v41 = v10;
    if (v15)
    {
      v48._countAndFlagsBits = 10272;
      v48._unint64_t object = (void *)0xE200000000000000;
      sub_1000C74B0(v48);
      v49._countAndFlagsBits = v14;
      v49._unint64_t object = v13;
      sub_1000C74B0(v49);
      swift_bridgeObjectRelease();
      v50._countAndFlagsBits = 41;
      v50._unint64_t object = (void *)0xE100000000000000;
      sub_1000C74B0(v50);
      uint64_t v11 = v44;
      uint64_t v12 = v45;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    uint64_t v44 = v11;
    uint64_t v45 = v12;
    sub_1000363CC();
    uint64_t v16 = sub_1000C7000();
    uint64_t v37 = v17;
    uint64_t v38 = v16;
    uint64_t v39 = v18;
    int v20 = v19 & 1;
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v22 = swift_getKeyPath();
    uint64_t v23 = swift_getKeyPath();
    uint64_t v25 = v41;
    uint64_t v24 = v42;
    uint64_t v26 = v43;
    (*(void (**)(unsigned char *, void, uint64_t))(v42 + 104))(v41, enum case for Text.TruncationMode.tail(_:), v43);
    uint64_t v27 = swift_getKeyPath();
    (*(void (**)(char *, unsigned char *, uint64_t))(v24 + 16))((char *)v6 + *(int *)(v40 + 28), v25, v26);
    uint64_t *v6 = v27;
    uint64_t v28 = sub_100012854(&qword_10010D7C8);
    sub_100083B30((uint64_t)v6, a2 + *(int *)(v28 + 36));
    uint64_t v30 = v37;
    uint64_t v29 = v38;
    *(void *)a2 = v38;
    *(void *)(a2 + 8) = v30;
    char v31 = v20;
    int v36 = v20;
    *(unsigned char *)(a2 + 16) = v20;
    *(void *)(a2 + 24) = v39;
    *(void *)(a2 + 32) = KeyPath;
    *(void *)(a2 + 40) = 1;
    *(unsigned char *)(a2 + 48) = 0;
    *(void *)(a2 + 56) = v22;
    *(unsigned char *)(a2 + 64) = 1;
    *(void *)(a2 + 72) = v23;
    *(void *)(a2 + 80) = 0x3FEB333333333333;
    uint64_t v32 = v29;
    uint64_t v33 = v30;
    sub_100039224(v29, v30, v31);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_100083B98((uint64_t)v6);
    (*(void (**)(unsigned char *, uint64_t))(v24 + 8))(v25, v26);
    sub_100039234(v32, v33, v36);
    swift_release();
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    type metadata accessor for SharingModel();
    sub_100038DD8();
    uint64_t result = sub_1000C6B20();
    __break(1u);
  }
  return result;
}

uint64_t sub_10008397C@<X0>(uint64_t a1@<X8>)
{
  return sub_1000835E8(*v1, a1);
}

uint64_t sub_100083994@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1000C6BC0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1000839C4()
{
  return sub_1000C6BD0();
}

uint64_t sub_1000839EC@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_1000C6BF0();
  *a1 = v3;
  return result;
}

uint64_t sub_100083A18()
{
  return sub_1000C6C00();
}

uint64_t sub_100083A40()
{
  return sub_1000C6B80();
}

uint64_t sub_100083A64(uint64_t a1)
{
  uint64_t v2 = sub_1000C6FA0();
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_1000C6B90();
}

uint64_t sub_100083B30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100012854(&qword_10010D7C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100083B98(uint64_t a1)
{
  uint64_t v2 = sub_100012854(&qword_10010D7C0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100083BFC()
{
  unint64_t result = qword_10010D7D0;
  if (!qword_10010D7D0)
  {
    sub_100013128(&qword_10010D7C8);
    sub_100083C88();
    sub_100083E2C(&qword_10010D838, &qword_10010D7C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010D7D0);
  }
  return result;
}

unint64_t sub_100083C88()
{
  unint64_t result = qword_10010D7D8;
  if (!qword_10010D7D8)
  {
    sub_100013128(&qword_10010D7E0);
    sub_100083D14();
    sub_100083E2C(&qword_10010D828, &qword_10010D830);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010D7D8);
  }
  return result;
}

unint64_t sub_100083D14()
{
  unint64_t result = qword_10010D7E8;
  if (!qword_10010D7E8)
  {
    sub_100013128(&qword_10010D7F0);
    sub_100083DA0();
    sub_100083E2C(&qword_10010D818, &qword_10010D820);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010D7E8);
  }
  return result;
}

unint64_t sub_100083DA0()
{
  unint64_t result = qword_10010D7F8;
  if (!qword_10010D7F8)
  {
    sub_100013128(&qword_10010D800);
    sub_100083E2C(&qword_10010D808, &qword_10010D810);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010D7F8);
  }
  return result;
}

uint64_t sub_100083E2C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100013128(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100083E80()
{
  return sub_100024420();
}

void sub_100083E94(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1000C66D0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v38 - v11;
  if (!a1) {
    goto LABEL_12;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  unint64_t v41 = a1;
  id v13 = a1;
  swift_retain();
  sub_1000C67F0();
  uint64_t v14 = (uint64_t *)(v3 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12CKShareModel_accountID);
  if (*(void *)(v3 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12CKShareModel_accountID + 8)) {
    goto LABEL_12;
  }
  uint64_t v38 = v7;
  uint64_t v39 = v6;
  id v40 = v13;
  id v15 = [v40 containerIdentifier];
  uint64_t v16 = sub_1000C7440();
  uint64_t v18 = v17;

  sub_1000C7440();
  uint64_t v19 = sub_1000C7460();
  uint64_t v21 = v20;
  swift_bridgeObjectRelease();
  if (v16 == v19 && v18 == v21)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_7;
  }
  char v22 = sub_1000C7A50();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v22)
  {
LABEL_7:
    if (swift_weakLoadStrong())
    {
      uint64_t v23 = sub_100085040();
      uint64_t v25 = v24;
      swift_release();
      if (v25)
      {
        uint64_t *v14 = v23;
        v14[1] = v25;
        swift_bridgeObjectRelease();
        sub_1000C66B0();
        uint64_t v26 = sub_1000C66C0();
        os_log_type_t v27 = sub_1000C7690();
        if (os_log_type_enabled(v26, v27))
        {
          uint64_t v28 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v28 = 0;
          _os_log_impl((void *)&_mh_execute_header, v26, v27, "found accountID for URL", v28, 2u);
          swift_slowDealloc();
        }

        (*(void (**)(char *, uint64_t))(v38 + 8))(v12, v39);
LABEL_12:
        if (!a2) {
          return;
        }
        goto LABEL_13;
      }
      if (a2)
      {

LABEL_13:
        swift_getKeyPath();
        swift_getKeyPath();
        unint64_t v41 = a2;
        id v29 = a2;
        swift_retain();
        sub_1000C67F0();
        return;
      }
      if (swift_weakLoadStrong())
      {
        uint64_t v30 = sub_100019DC8();
        uint64_t v32 = v31;
        swift_release();
        uint64_t v34 = v38;
        uint64_t v33 = v39;
        if (v32)
        {
          uint64_t *v14 = v30;
          v14[1] = v32;
          swift_bridgeObjectRelease();
          sub_1000C66B0();
          uint64_t v35 = sub_1000C66C0();
          os_log_type_t v36 = sub_1000C7690();
          if (os_log_type_enabled(v35, v36))
          {
            uint64_t v37 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v37 = 0;
            _os_log_impl((void *)&_mh_execute_header, v35, v36, "found accountID for an EDS account", v37, 2u);
            swift_slowDealloc();
          }

          (*(void (**)(char *, uint64_t))(v34 + 8))(v10, v33);
        }
        else
        {
        }
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return;
  }

  if (a2) {
    goto LABEL_13;
  }
}

uint64_t sub_1000842B0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  return v1;
}

void sub_100084324(void *a1)
{
  if (!a1 || !swift_weakLoadStrong()) {
    return;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = a1;
  swift_retain();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  if ([v2 publicPermission] != (id)1) {
    goto LABEL_21;
  }
  p_name = &stru_100107FF8.name;
  id v4 = [v2 participants];
  sub_1000132C8(0, (unint64_t *)&unk_10010B070);
  unint64_t v5 = sub_1000C7540();

  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1000C7990();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (!v6)
  {
LABEL_21:
    [v2 publicPermission];
    swift_release();

    return;
  }
  id v7 = [v2 participants];
  unint64_t v8 = sub_1000C7540();

  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1000C7990();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v9)
  {
    if (v9 < 1)
    {
      __break(1u);
      goto LABEL_55;
    }
    id v10 = v2;
    for (uint64_t i = 0; i != v9; ++i)
    {
      if ((v8 & 0xC000000000000001) != 0) {
        id v12 = (id)sub_1000C78F0();
      }
      else {
        id v12 = *(id *)(v8 + 8 * i + 32);
      }
      id v13 = v12;
      if ([v12 role] == (id)1 || objc_msgSend(v13, "permission") != (id)2)
      {
      }
      else
      {
        sub_1000C7910();
        sub_1000C7940();
        sub_1000C7950();
        sub_1000C7920();
      }
    }
    swift_bridgeObjectRelease();
    id v2 = v10;
    p_name = (char **)(&stru_100107FF8 + 8);
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_42;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_42;
    }
  }
  if (((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) == 0)
  {
    uint64_t v14 = _swiftEmptyArrayStorage[2];
    goto LABEL_27;
  }
LABEL_42:
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1000C7990();
  swift_release();
LABEL_27:
  swift_release();
  id v15 = objc_msgSend(v2, p_name[445]);
  unint64_t v16 = sub_1000C7540();

  if (v16 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_1000C7990();
    swift_bridgeObjectRelease();
    if (v17)
    {
LABEL_29:
      id v22 = v2;
      if (v17 >= 1)
      {
        for (uint64_t j = 0; j != v17; ++j)
        {
          if ((v16 & 0xC000000000000001) != 0) {
            id v19 = (id)sub_1000C78F0();
          }
          else {
            id v19 = *(id *)(v16 + 8 * j + 32);
          }
          uint64_t v20 = v19;
          if ([v19 role] == (id)1 || objc_msgSend(v20, "permission") != (id)3)
          {
          }
          else
          {
            sub_1000C7910();
            sub_1000C7940();
            sub_1000C7950();
            sub_1000C7920();
          }
        }
        swift_bridgeObjectRelease();
        id v2 = v22;
        goto LABEL_45;
      }
LABEL_55:
      __break(1u);
      return;
    }
  }
  else
  {
    uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v17) {
      goto LABEL_29;
    }
  }
  swift_bridgeObjectRelease();
LABEL_45:
  if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0
    || ((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_1000C7990();
    swift_release();
  }
  else
  {
    uint64_t v21 = _swiftEmptyArrayStorage[2];
  }
  swift_release();
  if (v14 <= 0 || v21 < 1)
  {
    swift_release();
  }
  else
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1000C67E0();
    swift_release();

    swift_release();
    swift_release();
  }
}

uint64_t sub_100084870()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();

  return swift_release();
}

uint64_t sub_1000848E8()
{
  return sub_100024420();
}

uint64_t sub_1000848FC()
{
  return sub_100024420();
}

uint64_t sub_100084910()
{
  return sub_100024420();
}

void sub_100084924()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000C66D0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  unint64_t v8 = (char *)v39 - v7;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  id v9 = v46;
  if (v46)
  {
    id v10 = [objc_allocWithZone((Class)CKContainer) initWithContainerSetupInfo:v46];
    swift_getKeyPath();
    swift_getKeyPath();
    id v46 = v10;
    swift_retain();
    sub_1000C67F0();

    return;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  id v11 = v46;
  if (v46)
  {
    if (!*(void *)(v1 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12CKShareModel_accountID + 8))
    {
      id v30 = [objc_allocWithZone((Class)CKContainer) initWithContainerID:v46];
      swift_getKeyPath();
      swift_getKeyPath();
      id v46 = v30;
      swift_retain();
      sub_1000C67F0();

      goto LABEL_16;
    }
    uint64_t v44 = v3;
    id v12 = objc_allocWithZone((Class)CKContainerOptions);
    swift_bridgeObjectRetain();
    id v13 = [v12 init];
    id v45 = v11;
    uint64_t v14 = v13;
    id v15 = objc_allocWithZone((Class)CKAccountOverrideInfo);
    NSString v16 = sub_1000C7400();
    swift_bridgeObjectRelease();
    id v17 = [v15 initWithAccountID:v16];

    [v14 setAccountOverrideInfo:v17];
    id v18 = objc_allocWithZone((Class)CKContainer);
    id v19 = [v18 initWithContainerID:v45 options:v14];
    swift_getKeyPath();
    swift_getKeyPath();
    id v46 = v19;
    swift_retain();
    sub_1000C67F0();
    sub_1000C66B0();
    swift_retain_n();
    uint64_t v20 = sub_1000C66C0();
    int v21 = sub_1000C7690();
    if (!os_log_type_enabled(v20, (os_log_type_t)v21))
    {

      swift_release_n();
LABEL_15:
      uint64_t v3 = v44;
      (*(void (**)(char *, uint64_t))(v44 + 8))(v8, v2);
      goto LABEL_16;
    }
    int v40 = v21;
    id v41 = v14;
    os_log_t v42 = v20;
    id v43 = v17;
    id v22 = (uint8_t *)swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    uint64_t v48 = v23;
    *(_DWORD *)id v22 = 136315138;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1000C67E0();
    swift_release();
    swift_release();
    id v24 = v46;
    v39[1] = v23;
    if (v46
      && (id v25 = [v46 options],
          v24,
          id v24 = [v25 accountOverrideInfo],
          v25,
          v24))
    {
      id v26 = [v24 accountID];

      os_log_type_t v27 = v22;
      if (v26)
      {
        id v24 = (id)sub_1000C7440();
        uint64_t v29 = v28;

LABEL_14:
        id v46 = v24;
        uint64_t v47 = v29;
        sub_100012854(&qword_10010CBB0);
        uint64_t v31 = sub_1000C7450();
        id v46 = (id)sub_1000720D0(v31, v32, &v48);
        sub_1000C7850();
        swift_release_n();
        swift_bridgeObjectRelease();
        os_log_t v33 = v42;
        _os_log_impl((void *)&_mh_execute_header, v42, (os_log_type_t)v40, "replaceContainer container.options.accountOverrideInfo.accountID: %s", v27, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        goto LABEL_15;
      }
      id v24 = 0;
    }
    else
    {
      os_log_type_t v27 = v22;
    }
    uint64_t v29 = 0;
    goto LABEL_14;
  }
LABEL_16:
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  id v34 = v46;

  if (!v34)
  {
    sub_1000C66B0();
    uint64_t v35 = sub_1000C66C0();
    uint64_t v36 = sub_1000C7670();
    if (os_log_type_enabled(v35, (os_log_type_t)v36))
    {
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v37 = 0;
      _os_log_impl((void *)&_mh_execute_header, v35, (os_log_type_t)v36, "replaceContainer throwing as it didn't build a container", v37, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    sub_100012A24();
    swift_allocError();
    *(void *)uint64_t v38 = 0xD000000000000012;
    *(void *)(v38 + 8) = 0x80000001000D81A0;
    *(_OWORD *)(v38 + 16) = xmmword_1000CFD40;
    *(void *)(v38 + 32) = 0x80000001000D5840;
    *(unsigned char *)(v38 + 40) = 10;
    swift_willThrow();
  }
}

uint64_t sub_100085040()
{
  uint64_t v24 = sub_1000C66D0();
  uint64_t v0 = *(void *)(v24 - 8);
  uint64_t v1 = __chkstk_darwin(v24);
  uint64_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v23 - v4;
  uint64_t v6 = sub_100012854((uint64_t *)&unk_10010BDD0);
  __chkstk_darwin(v6 - 8);
  unint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000C6530();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_100088B98((uint64_t)v8);
    sub_1000C66B0();
    id v13 = sub_1000C66C0();
    os_log_type_t v14 = sub_1000C7670();
    if (os_log_type_enabled(v13, v14))
    {
      id v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "can't get the user iCloud account ID without a document/folder sharing URL--may get here from SPI with no fileURL, will try userICloudEDSAccountID then fall back on signed-in account w. accountID == nil", v15, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v0 + 8))(v3, v24);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  uint64_t v16 = sub_100019C0C((uint64_t)v12);
  if (!v17)
  {
    sub_1000C66B0();
    id v19 = sub_1000C66C0();
    os_log_type_t v20 = sub_1000C7670();
    if (os_log_type_enabled(v19, v20))
    {
      int v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "accountID must be non-nil for document/folder sharing", v21, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v0 + 8))(v5, v24);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    return 0;
  }
  uint64_t v18 = v16;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return v18;
}

uint64_t sub_1000853EC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100012854(&qword_10010D9E8);
  uint64_t v107 = *(void *)(v2 - 8);
  uint64_t v108 = v2;
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v105 = (char *)v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v106 = (char *)v69 - v5;
  uint64_t v101 = sub_100012854(&qword_10010CEE0);
  uint64_t v98 = *(void *)(v101 - 8);
  __chkstk_darwin(v101);
  uint64_t v95 = (char *)v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_100012854(&qword_10010CEE8);
  __chkstk_darwin(v102);
  uint64_t v96 = (char *)v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = sub_100012854(&qword_10010D9F0);
  uint64_t v90 = *(void *)(v91 - 8);
  __chkstk_darwin(v91);
  uint64_t v89 = (char *)v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_100012854(&qword_10010D9F8);
  __chkstk_darwin(v93);
  uint64_t v92 = (char *)v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = sub_100012854(&qword_10010DA00);
  uint64_t v97 = *(void *)(v99 - 8);
  __chkstk_darwin(v99);
  uint64_t v94 = (char *)v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100012854(&qword_10010DA08);
  uint64_t v103 = *(void *)(v11 - 8);
  uint64_t v104 = v11;
  __chkstk_darwin(v11);
  uint64_t v100 = (char *)v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_100012854(&qword_10010CFA0);
  uint64_t v88 = *(void *)(v70 - 8);
  __chkstk_darwin(v70);
  uint64_t v87 = (char *)v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = sub_100012854(&qword_10010D9E0);
  uint64_t v86 = *(void *)(v111 - 8);
  __chkstk_darwin(v111);
  uint64_t v85 = (char *)v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_100012854(&qword_10010D9D8);
  uint64_t v83 = *(void *)(v84 - 8);
  __chkstk_darwin(v84);
  uint64_t v82 = (char *)v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = sub_100012854(&qword_10010D1D0);
  uint64_t v81 = *(void *)(v110 - 8);
  __chkstk_darwin(v110);
  uint64_t v80 = (char *)v69 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = sub_100012854(&qword_10010D9D0);
  uint64_t v79 = *(void *)(v109 - 8);
  __chkstk_darwin(v109);
  uint64_t v78 = (char *)v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_100012854((uint64_t *)&unk_10010C490);
  uint64_t v76 = *(void *)(v77 - 8);
  __chkstk_darwin(v77);
  uint64_t v75 = (char *)v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_100012854(&qword_10010CEA0);
  uint64_t v73 = *(void *)(v74 - 8);
  __chkstk_darwin(v74);
  uint64_t v72 = (char *)v69 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_100012854((uint64_t *)&unk_10010BDD0);
  uint64_t v20 = __chkstk_darwin(v71);
  id v22 = (char *)v69 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v24 = (char *)v69 - v23;
  uint64_t v25 = sub_100012854(&qword_10010BB60);
  uint64_t v26 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v28 = (char *)v69 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_100012854((uint64_t *)&unk_10010BC90);
  uint64_t v30 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  unint64_t v32 = (char *)v69 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = v1 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12CKShareModel__ckShare;
  uint64_t v112 = 0;
  sub_100012854(&qword_10010D8C8);
  sub_1000C67B0();
  id v34 = *(void (**)(uint64_t, char *, uint64_t))(v30 + 32);
  v69[0] = v33;
  v69[1] = v29;
  v34(v33, v32, v29);
  uint64_t v35 = v1 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12CKShareModel__currentUserIsOwner;
  LOBYTE(v112) = 1;
  sub_1000C67B0();
  (*(void (**)(uint64_t, char *, uint64_t))(v26 + 32))(v35, v28, v25);
  uint64_t v36 = v1 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12CKShareModel__sharingURL;
  uint64_t v37 = sub_1000C6530();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v24, 1, 1, v37);
  sub_1000128FC((uint64_t)v24, (uint64_t)v22);
  uint64_t v38 = v72;
  sub_1000C67B0();
  sub_100088B98((uint64_t)v24);
  uint64_t v39 = v1;
  (*(void (**)(uint64_t, char *, uint64_t))(v73 + 32))(v36, v38, v74);
  uint64_t v40 = v1 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12CKShareModel__ckShareParticipantsCoOwnersState;
  uint64_t v112 = &off_1000FF1E8;
  id v41 = v75;
  sub_1000C67B0();
  (*(void (**)(uint64_t, char *, uint64_t))(v76 + 32))(v40, v41, v77);
  uint64_t v42 = v1 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12CKShareModel__containerID;
  uint64_t v112 = 0;
  sub_100012854(&qword_10010D8D8);
  id v43 = v78;
  sub_1000C67B0();
  (*(void (**)(uint64_t, char *, uint64_t))(v79 + 32))(v42, v43, v109);
  uint64_t v44 = v1 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12CKShareModel__containerSetupInfo;
  uint64_t v112 = 0;
  sub_100012854(&qword_10010D1E8);
  id v45 = v80;
  sub_1000C67B0();
  (*(void (**)(uint64_t, char *, uint64_t))(v81 + 32))(v44, v45, v110);
  id v46 = (void *)(v1 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12CKShareModel_accountID);
  *id v46 = 0;
  v46[1] = 0;
  uint64_t v47 = v1 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12CKShareModel__container;
  uint64_t v112 = 0;
  sub_100012854(&qword_10010D8F0);
  uint64_t v48 = v82;
  sub_1000C67B0();
  (*(void (**)(uint64_t, char *, uint64_t))(v83 + 32))(v47, v48, v84);
  uint64_t v49 = v1 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12CKShareModel__ckSystemSharingUIObserver;
  uint64_t v112 = 0;
  uint64_t v50 = sub_100012854((uint64_t *)&unk_10010D900);
  uint64_t v51 = v85;
  sub_1000C67B0();
  (*(void (**)(uint64_t, char *, uint64_t))(v86 + 32))(v49, v51, v111);
  swift_weakInit();
  uint64_t v84 = v50;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && sub_1000C7990()) {
    uint64_t v52 = (void *)sub_100072C7C((unint64_t)_swiftEmptyArrayStorage);
  }
  else {
    uint64_t v52 = &_swiftEmptySetSingleton;
  }
  uint64_t v53 = v70;
  *(void *)(v39 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12CKShareModel_store) = v52;
  swift_beginAccess();
  unsigned int v54 = v87;
  sub_1000C67C0();
  swift_endAccess();
  swift_allocObject();
  swift_weakInit();
  sub_10001E454(&qword_10010D0A0, &qword_10010CFA0);
  sub_1000C6870();
  swift_release();
  (*(void (**)(char *, uint64_t))(v88 + 8))(v54, v53);
  swift_beginAccess();
  sub_1000C6760();
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  unsigned int v55 = v89;
  sub_1000C67C0();
  swift_endAccess();
  sub_10001E454(&qword_10010DA10, &qword_10010D9F0);
  sub_100088C60();
  uint64_t v56 = v91;
  sub_1000C6860();
  (*(void (**)(char *, uint64_t))(v90 + 8))(v55, v56);
  swift_beginAccess();
  uint64_t v57 = v95;
  sub_1000C67C0();
  swift_endAccess();
  sub_10001E454(&qword_10010D1D8, &qword_10010CEE0);
  sub_100074AD0();
  uint64_t v58 = v101;
  sub_1000C6860();
  (*(void (**)(char *, uint64_t))(v98 + 8))(v57, v58);
  sub_10001E454(&qword_10010DA28, &qword_10010D9F8);
  sub_10001E454(&qword_10010D208, &qword_10010CEE8);
  uint64_t v59 = v94;
  sub_1000C66E0();
  uint64_t v60 = swift_allocObject();
  swift_weakInit();
  uint64_t v61 = swift_allocObject();
  *(void *)(v61 + 16) = sub_100088D3C;
  *(void *)(v61 + 24) = v60;
  sub_10001E454(&qword_10010DA30, &qword_10010DA00);
  uint64_t v62 = v99;
  uint64_t v63 = v100;
  sub_1000C6830();
  swift_release();
  (*(void (**)(char *, uint64_t))(v97 + 8))(v59, v62);
  swift_beginAccess();
  uint64_t v64 = v106;
  sub_1000C67C0();
  swift_endAccess();
  sub_10001E454(&qword_10010DA38, &qword_10010DA08);
  uint64_t v65 = v104;
  sub_1000C6880();
  (*(void (**)(char *, uint64_t))(v103 + 8))(v63, v65);
  uint64_t v67 = v107;
  uint64_t v66 = v108;
  (*(void (**)(char *, char *, uint64_t))(v107 + 16))(v105, v64, v108);
  swift_beginAccess();
  sub_1000C67D0();
  swift_endAccess();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v64, v66);
  return v39;
}

void sub_1000864C0(void **a1)
{
  uint64_t v1 = *a1;
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    if (!v1)
    {
      swift_release();
      return;
    }
    id v2 = v1;
    id v3 = [v2 currentUserParticipant];
    id v4 = [v2 owner];
    id v5 = v4;
    if (v3)
    {
      if (!v4)
      {
LABEL_9:

LABEL_10:
        swift_getKeyPath();
        swift_getKeyPath();
        swift_retain();
        sub_1000C67F0();
        swift_release();

        return;
      }
      sub_1000132C8(0, (unint64_t *)&unk_10010B070);
      id v6 = v3;
      sub_1000C7800();
    }
    else if (!v4)
    {
      goto LABEL_10;
    }
    id v3 = v5;
    goto LABEL_9;
  }
}

id sub_100086624(id a1, void *a2)
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    if (a2)
    {
      id v4 = &selRef_initWithContainerSetupInfo_;
      a1 = a2;
    }
    else
    {
      if (!a1) {
        goto LABEL_9;
      }
      id v4 = &selRef_initWithContainerID_;
    }
    a1 = objc_msgSend(objc_allocWithZone((Class)CKContainer), *v4, a1);
    if (a1)
    {
      id v5 = objc_allocWithZone((Class)CKSystemSharingUIObserver);
      id v6 = a1;
      a1 = [v5 initWithContainer:v6];
      uint64_t v7 = swift_allocObject();
      swift_weakInit();
      uint64_t v8 = swift_allocObject();
      *(void *)(v8 + 16) = v7;
      *(void *)(v8 + 24) = a2;
      id v9 = a2;
      swift_retain();
      sub_1000C7790();
      swift_release();
      swift_allocObject();
      swift_weakInit();
      swift_retain();
      sub_1000C77A0();
      swift_release();
      swift_release();

      return a1;
    }
LABEL_9:
    swift_release();
    return a1;
  }
  return 0;
}

uint64_t sub_1000867EC(uint64_t a1, void *a2, char a3, uint64_t a4, void *a5)
{
  uint64_t v8 = sub_1000C66D0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100012854(&qword_10010B770);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    swift_errorRetain();
    sub_1000C66B0();
    swift_errorRetain();
    swift_errorRetain();
    id v22 = sub_1000C66C0();
    os_log_type_t v23 = sub_1000C7670();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      *(_DWORD *)uint64_t v24 = 136315138;
      v28[1] = v24 + 4;
      v29[0] = v25;
      uint64_t v30 = (uint64_t)a2;
      swift_errorRetain();
      sub_100012854((uint64_t *)&unk_10010B010);
      uint64_t v26 = sub_1000C7450();
      uint64_t v30 = sub_1000720D0(v26, v27, v29);
      sub_1000C7850();
      swift_bridgeObjectRelease();
      sub_100047AF8(a2, 1);
      sub_100047AF8(a2, 1);
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "ckShareModel systemSharingUIDidSaveShareBlock error: %s", v24, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      sub_100047AF8(a2, 1);
    }
    else
    {
      sub_100047AF8(a2, 1);
      sub_100047AF8(a2, 1);
      swift_errorRelease();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else
  {
    uint64_t v15 = sub_1000C7600();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
    uint64_t v16 = swift_allocObject();
    swift_beginAccess();
    swift_weakLoadStrong();
    swift_weakInit();
    id v17 = a2;
    swift_release();
    sub_1000C75D0();
    sub_100088F14(a2, 0);
    id v18 = a5;
    swift_retain();
    uint64_t v19 = sub_1000C75C0();
    uint64_t v20 = (void *)swift_allocObject();
    v20[2] = v19;
    v20[3] = &protocol witness table for MainActor;
    v20[4] = v16;
    v20[5] = v17;
    v20[6] = a5;
    swift_release();
    sub_1000BD2A0((uint64_t)v14, (uint64_t)&unk_10010DA60, (uint64_t)v20);
    sub_100047AF8(a2, 0);
    return swift_release();
  }
}

uint64_t sub_100086BD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[11] = a5;
  v6[12] = a6;
  v6[10] = a4;
  uint64_t v7 = sub_1000C66D0();
  v6[13] = v7;
  v6[14] = *(void *)(v7 - 8);
  v6[15] = swift_task_alloc();
  v6[16] = swift_task_alloc();
  v6[17] = swift_task_alloc();
  sub_100012854((uint64_t *)&unk_10010BDD0);
  v6[18] = swift_task_alloc();
  uint64_t v8 = sub_1000C6530();
  v6[19] = v8;
  v6[20] = *(void *)(v8 - 8);
  v6[21] = swift_task_alloc();
  v6[22] = swift_task_alloc();
  v6[23] = sub_1000C75D0();
  v6[24] = sub_1000C75C0();
  uint64_t v10 = sub_1000C7590();
  v6[25] = v10;
  v6[26] = v9;
  return _swift_task_switch(sub_100086D84, v10, v9);
}

uint64_t sub_100086D84()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 216) = Strong;
  if (!Strong) {
    goto LABEL_16;
  }
  uint64_t v2 = swift_weakLoadStrong();
  *(void *)(v0 + 224) = v2;
  if (!v2)
  {
LABEL_15:
    swift_release();
LABEL_16:
    swift_release();
LABEL_17:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
    return v8();
  }
  id v3 = [*(id *)(v0 + 88) recordID];
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  id v4 = *(void **)(v0 + 40);
  if (!v4)
  {
    if (!v3) {
      goto LABEL_20;
    }
    goto LABEL_11;
  }
  id v5 = [*(id *)(v0 + 40) recordID];

  if (!v3)
  {
    if (!v5) {
      goto LABEL_20;
    }

LABEL_14:
    swift_release();
    goto LABEL_15;
  }
  if (!v5)
  {
LABEL_11:

    goto LABEL_14;
  }
  sub_1000132C8(0, &qword_10010DA50);
  id v6 = v3;
  char v7 = sub_1000C7800();

  if ((v7 & 1) == 0) {
    goto LABEL_14;
  }
LABEL_20:
  id v10 = [*(id *)(v0 + 88) URL];
  if (!v10)
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 160) + 56))(*(void *)(v0 + 144), 1, 1, *(void *)(v0 + 152));
    goto LABEL_26;
  }
  uint64_t v11 = v10;
  uint64_t v13 = *(void *)(v0 + 160);
  uint64_t v12 = *(void *)(v0 + 168);
  uint64_t v15 = *(void *)(v0 + 144);
  uint64_t v14 = *(void *)(v0 + 152);
  sub_1000C64F0();

  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32);
  v16(v15, v12, v14);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(v15, 0, 1, v14);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v15, 1, v14) == 1)
  {
LABEL_26:
    uint64_t v18 = *(void *)(v0 + 144);
    swift_release();
    swift_release();
    swift_release();
    sub_100088B98(v18);
    goto LABEL_17;
  }
  v16(*(void *)(v0 + 176), *(void *)(v0 + 144), *(void *)(v0 + 152));
  *(void *)(v0 + 232) = sub_1000C75C0();
  id v17 = (void *)swift_task_alloc();
  *(void *)(v0 + 240) = v17;
  *id v17 = v0;
  v17[1] = sub_10008711C;
  return sub_100064590();
}

uint64_t sub_10008711C()
{
  *(void *)(*(void *)v1 + 248) = v0;
  swift_task_dealloc();
  uint64_t v3 = sub_1000C7590();
  if (v0) {
    id v4 = sub_100087664;
  }
  else {
    id v4 = sub_100087278;
  }
  return _swift_task_switch(v4, v3, v2);
}

uint64_t sub_100087278()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 200);
  uint64_t v2 = *(void *)(v0 + 208);
  return _swift_task_switch(sub_1000872DC, v1, v2);
}

uint64_t sub_1000872DC()
{
  sub_1000C66B0();
  uint64_t v1 = sub_1000C66C0();
  os_log_type_t v2 = sub_1000C7690();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "ckShareModel calling notifyClientShareDidChange()", v3, 2u);
    swift_slowDealloc();
  }
  uint64_t v4 = v0[17];
  uint64_t v5 = v0[13];
  uint64_t v6 = v0[14];

  char v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v0[32] = v7;
  v0[33] = (v6 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v7(v4, v5);
  if (swift_unknownObjectWeakLoadStrong())
  {
    sub_10000E040();
    swift_unknownObjectRelease();
  }
  uint64_t v8 = (void *)swift_task_alloc();
  v0[34] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_10008744C;
  uint64_t v9 = v0[22];
  uint64_t v10 = v0[12];
  return sub_1000651D8(v9, v10);
}

uint64_t sub_10008744C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 280) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 208);
  uint64_t v4 = *(void *)(v2 + 200);
  if (v0) {
    uint64_t v5 = sub_1000879B8;
  }
  else {
    uint64_t v5 = sub_100087588;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100087588()
{
  uint64_t v1 = v0[22];
  uint64_t v2 = v0[19];
  uint64_t v3 = v0[20];
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100087664()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 200);
  uint64_t v2 = *(void *)(v0 + 208);
  return _swift_task_switch(sub_1000876C8, v1, v2);
}

uint64_t sub_1000876C8()
{
  os_log_type_t v23 = v0;
  swift_release();
  sub_1000C66B0();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = sub_1000C66C0();
  os_log_type_t v2 = sub_1000C7670();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[31];
    uint64_t v19 = v0[19];
    uint64_t v20 = v0[22];
    uint64_t v17 = v0[16];
    uint64_t v18 = v0[20];
    uint64_t v4 = v0[14];
    uint64_t v16 = v0[13];
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    uint64_t v22 = v6;
    v0[6] = v3;
    swift_errorRetain();
    sub_100012854((uint64_t *)&unk_10010B010);
    uint64_t v7 = sub_1000C7450();
    v0[7] = sub_1000720D0(v7, v8, &v22);
    sub_1000C7850();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "ckShareModel systemSharingUIDidSaveShareBlock failed to refetch share: %s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_release();
    swift_release();
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v17, v16);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v20, v19);
  }
  else
  {
    uint64_t v21 = v0[22];
    uint64_t v9 = v0[19];
    uint64_t v10 = v0[20];
    uint64_t v11 = v0[16];
    uint64_t v13 = v0[13];
    uint64_t v12 = v0[14];

    swift_release();
    swift_release();
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v21, v9);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_1000879B8()
{
  os_log_type_t v23 = v0;
  swift_release();
  sub_1000C66B0();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = sub_1000C66C0();
  os_log_type_t v2 = sub_1000C7670();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[35];
    uint64_t v20 = v0[22];
    uint64_t v4 = v0[20];
    uint64_t v18 = (void (*)(uint64_t, uint64_t))v0[32];
    uint64_t v19 = v0[19];
    uint64_t v16 = v0[13];
    uint64_t v17 = v0[15];
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    uint64_t v22 = v6;
    v0[8] = v3;
    swift_errorRetain();
    sub_100012854((uint64_t *)&unk_10010B010);
    uint64_t v7 = sub_1000C7450();
    v0[9] = sub_1000720D0(v7, v8, &v22);
    sub_1000C7850();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "ckShareModel systemSharingUIDidSaveShareBlock failed to fetch share metadata: %s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_release();
    swift_release();
    swift_errorRelease();
    v18(v17, v16);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v20, v19);
  }
  else
  {
    uint64_t v9 = (void (*)(uint64_t, uint64_t))v0[32];
    uint64_t v21 = v0[22];
    uint64_t v10 = v0[19];
    uint64_t v11 = v0[20];
    uint64_t v12 = v0[15];
    uint64_t v13 = v0[13];

    swift_release();
    swift_release();
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
    v9(v12, v13);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v21, v10);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_100087CA4(void *a1, uint64_t a2, char a3)
{
  uint64_t v6 = sub_100012854(&qword_10010B770);
  __chkstk_darwin(v6 - 8);
  unint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000C66D0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v34 - v14;
  if (a3)
  {
    swift_errorRetain();
    sub_1000C66B0();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v22 = sub_1000C66C0();
    os_log_type_t v23 = sub_1000C7670();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      uint64_t v37 = v9;
      uint64_t v38 = v25;
      *(_DWORD *)uint64_t v24 = 136315138;
      uint64_t v39 = a2;
      swift_errorRetain();
      sub_100012854((uint64_t *)&unk_10010B010);
      uint64_t v26 = sub_1000C7450();
      uint64_t v39 = sub_1000720D0(v26, v27, (uint64_t *)&v38);
      sub_1000C7850();
      swift_bridgeObjectRelease();
      sub_100047238(a2, 1);
      sub_100047238(a2, 1);
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "ckShareModel systemSharingUIDidStopSharingBlock error: %s", v24, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      sub_100047238(a2, 1);
      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v37);
    }
    else
    {
      sub_100047238(a2, 1);
      sub_100047238(a2, 1);
      swift_errorRelease();

      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    }
  }
  else
  {
    sub_1000C66B0();
    uint64_t v16 = a1;
    uint64_t v17 = sub_1000C66C0();
    os_log_type_t v18 = sub_1000C7690();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v37 = v9;
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      uint64_t v36 = v10;
      id v34 = (void *)v20;
      uint64_t v35 = v8;
      *(_DWORD *)uint64_t v19 = 138412290;
      uint64_t v38 = v16;
      uint64_t v21 = v16;
      uint64_t v9 = v37;
      unint64_t v8 = v35;
      sub_1000C7850();
      void *v34 = v16;

      _os_log_impl((void *)&_mh_execute_header, v17, v18, "ckShareModel systemSharingUIDidStopSharingBlock stopped sharing: %@", v19, 0xCu);
      sub_100012854((uint64_t *)&unk_10010B1E0);
      swift_arrayDestroy();
      uint64_t v10 = v36;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      uint64_t v17 = v16;
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    uint64_t v29 = sub_1000C7600();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v8, 1, 1, v29);
    uint64_t v30 = swift_allocObject();
    swift_beginAccess();
    swift_weakLoadStrong();
    swift_weakInit();
    swift_release();
    sub_1000C75D0();
    uint64_t v31 = v16;
    swift_retain();
    uint64_t v32 = sub_1000C75C0();
    uint64_t v33 = (void *)swift_allocObject();
    v33[2] = v32;
    v33[3] = &protocol witness table for MainActor;
    v33[4] = v30;
    v33[5] = v31;
    swift_release();
    sub_1000BD2A0((uint64_t)v8, (uint64_t)&unk_10010DA48, (uint64_t)v33);
    return swift_release();
  }
}

uint64_t sub_1000881F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  uint64_t v6 = sub_1000C66D0();
  v5[8] = v6;
  v5[9] = *(void *)(v6 - 8);
  v5[10] = swift_task_alloc();
  sub_1000C75D0();
  v5[11] = sub_1000C75C0();
  uint64_t v8 = sub_1000C7590();
  return _swift_task_switch(sub_1000882E4, v8, v7);
}

uint64_t sub_1000882E4()
{
  swift_release();
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    if (swift_weakLoadStrong())
    {
      swift_getKeyPath();
      swift_getKeyPath();
      sub_1000C67E0();
      swift_release();
      swift_release();
      uint64_t v1 = (void *)v0[5];
      if (v1)
      {
        id v2 = [v1 recordID];

        if (v2)
        {
          uint64_t v3 = (void *)v0[7];
          sub_1000132C8(0, &qword_10010DA50);
          id v4 = v3;
          char v5 = sub_1000C7800();

          if (v5)
          {
            sub_1000C66B0();
            uint64_t v6 = sub_1000C66C0();
            os_log_type_t v7 = sub_1000C7690();
            if (os_log_type_enabled(v6, v7))
            {
              uint64_t v8 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v8 = 0;
              _os_log_impl((void *)&_mh_execute_header, v6, v7, "ckShareModel systemSharingUIDidStopSharingBlock dismissing", v8, 2u);
              swift_slowDealloc();
            }
            uint64_t v10 = v0[9];
            uint64_t v9 = v0[10];
            uint64_t v11 = v0[8];

            (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
            if (swift_unknownObjectWeakLoadStrong())
            {
              sub_10000AB98();
              uint64_t v12 = (void *)sub_10000A1F4();
              if (v12)
              {
                [v12 _shareWasMadePrivate];
                swift_unknownObjectRelease();
              }
              uint64_t v13 = (void *)sub_10000A1F4();
              if (v13)
              {
                [v13 _dismissViewControllerWithError:0];
                swift_unknownObjectRelease();
              }
              swift_unknownObjectRelease();
            }
          }
        }
      }
      swift_release();
    }
    swift_release();
  }
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_100088568()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12CKShareModel__ckShare;
  uint64_t v2 = sub_100012854((uint64_t *)&unk_10010BC90);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12CKShareModel__currentUserIsOwner;
  uint64_t v4 = sub_100012854(&qword_10010BB60);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12CKShareModel__sharingURL;
  uint64_t v6 = sub_100012854(&qword_10010CEA0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12CKShareModel__ckShareParticipantsCoOwnersState;
  uint64_t v8 = sub_100012854((uint64_t *)&unk_10010C490);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12CKShareModel__containerID;
  uint64_t v10 = sub_100012854(&qword_10010D9D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12CKShareModel__containerSetupInfo;
  uint64_t v12 = sub_100012854(&qword_10010D1D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  swift_bridgeObjectRelease();
  uint64_t v13 = v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12CKShareModel__container;
  uint64_t v14 = sub_100012854(&qword_10010D9D8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12CKShareModel__ckSystemSharingUIObserver;
  uint64_t v16 = sub_100012854(&qword_10010D9E0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  swift_weakDestroy();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1000887FC()
{
  sub_100088568();

  return swift_deallocClassInstance();
}

uint64_t sub_100088854()
{
  return type metadata accessor for CKShareModel();
}

uint64_t type metadata accessor for CKShareModel()
{
  uint64_t result = qword_10010D8B0;
  if (!qword_10010D8B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000888A8()
{
  sub_1000321A0(319, &qword_10010D8C0, &qword_10010D8C8);
  if (v0 <= 0x3F)
  {
    sub_10001E1A4(319, (unint64_t *)&qword_10010B9B0);
    if (v1 <= 0x3F)
    {
      sub_1000321A0(319, &qword_10010CBA8, (uint64_t *)&unk_10010BDD0);
      if (v2 <= 0x3F)
      {
        sub_10001E1A4(319, &qword_10010B5E8);
        if (v3 <= 0x3F)
        {
          sub_1000321A0(319, &qword_10010D8D0, &qword_10010D8D8);
          if (v4 <= 0x3F)
          {
            sub_1000321A0(319, &qword_10010D8E0, &qword_10010D1E8);
            if (v5 <= 0x3F)
            {
              sub_1000321A0(319, &qword_10010D8E8, &qword_10010D8F0);
              if (v6 <= 0x3F)
              {
                sub_1000321A0(319, &qword_10010D8F8, (uint64_t *)&unk_10010D900);
                if (v7 <= 0x3F) {
                  swift_updateClassMetadata2();
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_100088B98(uint64_t a1)
{
  uint64_t v2 = sub_100012854((uint64_t *)&unk_10010BDD0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100088C20()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100088C58(void **a1)
{
}

unint64_t sub_100088C60()
{
  unint64_t result = qword_10010DA18;
  if (!qword_10010DA18)
  {
    sub_100013128(&qword_10010D8D8);
    sub_100088CEC(&qword_10010DA20, &qword_10010CBD8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010DA18);
  }
  return result;
}

uint64_t sub_100088CEC(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000132C8(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_100088D3C(id a1, void *a2)
{
  return sub_100086624(a1, a2);
}

uint64_t sub_100088D44()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100088D7C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void))(v2 + 16))(*a1, a1[1]);
  *a2 = result;
  return result;
}

uint64_t sub_100088DB4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100088DF4(uint64_t a1, void *a2, char a3)
{
  return sub_1000867EC(a1, a2, a3 & 1, *(void *)(v3 + 16), *(void **)(v3 + 24));
}

uint64_t sub_100088E00(void *a1, uint64_t a2, char a3)
{
  return sub_100087CA4(a1, a2, a3 & 1);
}

uint64_t sub_100088E0C()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100088E54(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_10001AE78;
  return sub_1000881F0(a1, v4, v5, v7, v6);
}

id sub_100088F14(void *a1, char a2)
{
  if (a2) {
    return (id)swift_errorRetain();
  }
  else {
    return a1;
  }
}

uint64_t sub_100088F20()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100088F70(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100013B98;
  return sub_100086BD0(a1, v4, v5, v6, v7, v8);
}

id sub_100089108()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ComposeMessageView.Coordinator();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ComposeMessageView.Coordinator()
{
  return self;
}

uint64_t sub_100089174(uint64_t a1)
{
  return sub_1000899D4(a1, *(void *)v1, *(void *)(v1 + 8), *(NSString *)(v1 + 16));
}

id sub_100089180@<X0>(void *a1@<X8>)
{
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v3 = *(void *)(v1 + 32);
  uint64_t v5 = (objc_class *)type metadata accessor for ComposeMessageView.Coordinator();
  uint64_t v6 = (char *)objc_allocWithZone(v5);
  uint64_t v7 = (uint64_t *)&v6[OBJC_IVAR____TtCV37com_apple_CloudSharingUI_CloudSharing18ComposeMessageView11Coordinator_completion];
  uint64_t *v7 = v4;
  v7[1] = v3;
  sub_1000236E0(v4);
  v9.receiver = v6;
  v9.super_class = v5;
  id result = objc_msgSendSuper2(&v9, "init");
  *a1 = result;
  return result;
}

uint64_t sub_100089200(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100089980();

  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100089264(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100089980();

  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_1000892C8()
{
}

uint64_t sub_1000892F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_100012854(&qword_10010DB20);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_1000C71A0();
  uint64_t v5 = sub_1000C6F30();
  unint64_t v6 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
  v6(v4, 1, 1, v5);
  uint64_t v27 = sub_1000C6F50();
  sub_100089B2C((uint64_t)v4);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v25 = sub_1000C7130();
  uint64_t v24 = swift_getKeyPath();
  sub_1000C6D00();
  uint64_t v7 = sub_1000C6FF0();
  uint64_t v9 = v8;
  char v11 = v10 & 1;
  v6(v4, 1, 1, v5);
  sub_1000C6F50();
  sub_100089B2C((uint64_t)v4);
  uint64_t v12 = sub_1000C6FE0();
  uint64_t v14 = v13;
  char v16 = v15;
  uint64_t v18 = v17;
  swift_release();
  LOBYTE(v6) = v16 & 1;
  sub_100039234(v7, v9, v11);
  swift_bridgeObjectRelease();
  uint64_t v19 = v27;
  uint64_t v21 = v25;
  uint64_t v20 = KeyPath;
  *(void *)a1 = v28;
  *(void *)(a1 + 8) = v20;
  uint64_t v22 = v24;
  *(void *)(a1 + 16) = v19;
  *(void *)(a1 + 24) = v22;
  *(void *)(a1 + 32) = v21;
  *(void *)(a1 + 40) = v12;
  *(void *)(a1 + 48) = v14;
  *(unsigned char *)(a1 + 56) = (_BYTE)v6;
  *(void *)(a1 + 64) = v18;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100039224(v12, v14, (char)v6);
  swift_bridgeObjectRetain();
  sub_100039234(v12, v14, (char)v6);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

__n128 sub_1000895BC@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000C6D20();
  sub_1000892F0((uint64_t)&v10);
  uint64_t v3 = v11;
  uint64_t v4 = v12;
  uint64_t v5 = v14;
  char v6 = v15;
  uint64_t v7 = v16;
  __n128 result = v13;
  long long v9 = v10;
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  *(_OWORD *)(a1 + 24) = v9;
  *(void *)(a1 + 40) = v3;
  *(void *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 56) = result;
  *(void *)(a1 + 72) = v5;
  *(unsigned char *)(a1 + 80) = v6;
  *(void *)(a1 + 88) = v7;
  return result;
}

uint64_t destroy for ComposeMessageView(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 24))
  {
    return swift_release();
  }
  return result;
}

void *initializeWithCopy for ComposeMessageView(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  char v6 = a2 + 3;
  uint64_t v5 = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v5)
  {
    uint64_t v7 = a2[4];
    a1[3] = v5;
    a1[4] = v7;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 3) = *v6;
  }
  return a1;
}

void *assignWithCopy for ComposeMessageView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[3];
  if (!a1[3])
  {
    if (v4)
    {
      uint64_t v6 = a2[4];
      a1[3] = v4;
      a1[4] = v6;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v5 = a2[4];
  a1[3] = v4;
  a1[4] = v5;
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for ComposeMessageView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  if (!a1[3])
  {
    if (v5)
    {
      uint64_t v7 = a2[4];
      a1[3] = v5;
      a1[4] = v7;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
    return a1;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v6 = a2[4];
  a1[3] = v5;
  a1[4] = v6;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ComposeMessageView(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 40)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ComposeMessageView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ComposeMessageView()
{
  return &type metadata for ComposeMessageView;
}

unint64_t sub_10008992C()
{
  unint64_t result = qword_10010DB00;
  if (!qword_10010DB00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010DB00);
  }
  return result;
}

unint64_t sub_100089980()
{
  unint64_t result = qword_10010DB08;
  if (!qword_10010DB08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010DB08);
  }
  return result;
}

uint64_t sub_1000899D4(uint64_t a1, uint64_t a2, uint64_t a3, NSString a4)
{
  if ([self canSendText])
  {
    id v6 = [objc_allocWithZone((Class)MFMessageComposeViewController) init];
    sub_100012854(&qword_10010DB18);
    sub_1000C6E80();
    [v6 setMessageComposeDelegate:v10];

    if (a2) {
      v7.super.Class isa = sub_1000C7530().super.isa;
    }
    else {
      v7.super.Class isa = 0;
    }
    [v6 setRecipients:v7.super.isa];

    if (a4) {
      a4 = sub_1000C7400();
    }
    [v6 setBody:a4];

    return (uint64_t)v6;
  }
  else
  {
    id v8 = objc_allocWithZone((Class)sub_100012854(&qword_10010DB10));
    return sub_1000C6D40();
  }
}

ValueMetadata *type metadata accessor for MessagesUnavailableView()
{
  return &type metadata for MessagesUnavailableView;
}

uint64_t sub_100089B10()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100089B2C(uint64_t a1)
{
  uint64_t v2 = sub_100012854(&qword_10010DB20);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100089BA0()
{
  unint64_t result = qword_10010DB28;
  if (!qword_10010DB28)
  {
    sub_100013128((uint64_t *)&unk_10010DB30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010DB28);
  }
  return result;
}

uint64_t sub_100089C00()
{
  id v1 = [v0 allowedParticipantAccessOptions];
  if (v1 == (id)1) {
    return 0xD000000000000010;
  }
  if (v1 == (id)2) {
    return 0x6E65697069636552;
  }
  if (v1 == (id)3) {
    return 7958081;
  }
  sub_1000C78D0(17);
  swift_bridgeObjectRelease();
  strcpy((char *)v3, "Unknown (raw: ");
  [v0 allowedParticipantAccessOptions];
  v4._countAndFlagsBits = sub_1000C7A20();
  sub_1000C74B0(v4);
  swift_bridgeObjectRelease();
  v5._countAndFlagsBits = 41;
  v5._unint64_t object = (void *)0xE100000000000000;
  sub_1000C74B0(v5);
  return v3[0];
}

uint64_t sub_100089D38()
{
  id v1 = [v0 allowedParticipantPermissionOptions];
  if (v1 == (id)3) {
    return 7958081;
  }
  if (v1 == (id)2) {
    return 0x6972572F64616552;
  }
  if (v1 == (id)1) {
    return 0x6C6E4F2064616552;
  }
  sub_1000C78D0(17);
  swift_bridgeObjectRelease();
  strcpy((char *)v3, "Unknown (raw: ");
  [v0 allowedParticipantPermissionOptions];
  v4._countAndFlagsBits = sub_1000C7A20();
  sub_1000C74B0(v4);
  swift_bridgeObjectRelease();
  v5._countAndFlagsBits = 41;
  v5._unint64_t object = (void *)0xE100000000000000;
  sub_1000C74B0(v5);
  return v3[0];
}

void *initializeBufferWithCopyOfBuffer for GlobalPermissionSummaryView_iOS(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for GlobalPermissionSummaryView_iOS()
{
  return swift_release();
}

void *assignWithCopy for GlobalPermissionSummaryView_iOS(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for GlobalPermissionSummaryView_iOS(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for GlobalPermissionSummaryView_iOS(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GlobalPermissionSummaryView_iOS(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GlobalPermissionSummaryView_iOS()
{
  return &type metadata for GlobalPermissionSummaryView_iOS;
}

uint64_t sub_100089FAC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100089FC8@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_100089FDC()
{
  return sub_1000114AC();
}

uint64_t sub_100089FF0(uint64_t a1, uint64_t a2)
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  type metadata accessor for GlobalPermissionViewModel();
  sub_10008BB50(&qword_10010DB40, (void (*)(uint64_t))type metadata accessor for GlobalPermissionViewModel);
  sub_1000C6A70();
  swift_getKeyPath();
  sub_1000C6A80();
  swift_release();
  swift_release();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain_n();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  sub_1000C6A70();
  swift_getKeyPath();
  sub_1000C6A80();
  swift_release();
  swift_release();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain_n();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  swift_retain();
  sub_1000C6A70();
  swift_getKeyPath();
  sub_1000C6A80();
  swift_release();
  swift_release();
  sub_1000C72D0();
  sub_1000C72D0();
  sub_1000C6A70();
  swift_getKeyPath();
  sub_1000C6A80();
  swift_release();
  swift_release();
  sub_1000C6A70();
  swift_getKeyPath();
  sub_1000C6A80();
  swift_release();
  swift_release();
  sub_100012854(&qword_10010DB48);
  sub_100013128(&qword_10010DB50);
  sub_10008B9E0();
  swift_getOpaqueTypeConformance2();
  sub_10008BB98();
  return sub_1000C6A40();
}

uint64_t sub_10008A638@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_10008A64C()
{
  return sub_1000114AC();
}

uint64_t sub_10008A660(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1000C75D0();
  swift_retain_n();
  uint64_t v4 = sub_1000C75C0();
  uint64_t v5 = (void *)swift_allocObject();
  v5[2] = v4;
  v5[3] = &protocol witness table for MainActor;
  v5[4] = a3;
  swift_retain();
  uint64_t v6 = sub_1000C75C0();
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = v6;
  v7[3] = &protocol witness table for MainActor;
  v7[4] = a3;
  sub_1000C72C0();
  swift_release();
  sub_100012854(&qword_10010BF08);
  sub_1000C7290();
  swift_release();
  return swift_release();
}

uint64_t sub_10008A798@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_10008A7AC()
{
  return sub_1000114AC();
}

uint64_t sub_10008A7C0(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100012854(&qword_10010B770);
  __chkstk_darwin(v6 - 8);
  id v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000C75E0();
  uint64_t v9 = sub_1000C7600();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 0, 1, v9);
  sub_1000C75D0();
  swift_retain();
  uint64_t v10 = sub_1000C75C0();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v10;
  *(void *)(v11 + 24) = &protocol witness table for MainActor;
  *(void *)(v11 + 32) = a2;
  *(void *)(v11 + 40) = a3;
  *(unsigned char *)(v11 + 48) = a1;
  sub_1000BD2A0((uint64_t)v8, (uint64_t)&unk_10010DBA0, v11);
  return swift_release();
}

uint64_t sub_10008A8F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  *(unsigned char *)(v6 + 104) = a6;
  *(void *)(v6 + 16) = a5;
  *(void *)(v6 + 24) = sub_1000C75D0();
  *(void *)(v6 + 32) = sub_1000C75C0();
  uint64_t v8 = sub_1000C7590();
  *(void *)(v6 + 40) = v8;
  *(void *)(v6 + 48) = v7;
  return _swift_task_switch(sub_10008A994, v8, v7);
}

uint64_t sub_10008A994()
{
  swift_retain();
  v0[7] = sub_1000C75C0();
  uint64_t v2 = sub_1000C7590();
  v0[8] = v2;
  v0[9] = v1;
  return _swift_task_switch(sub_10008AA24, v2, v1);
}

uint64_t sub_10008AA24()
{
  char v1 = *(unsigned char *)(v0 + 104) + 1;
  uint64_t v2 = *(void *)(*(void *)(v0 + 16) + 16);
  *(void *)(v0 + 80) = *(void *)(v2 + 16);
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10008AAF0;
  return sub_10001B18C(v1, v2, 1, 1);
}

uint64_t sub_10008AAF0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 64);
    uint64_t v4 = *(void *)(v2 + 72);
    uint64_t v5 = sub_10008AC7C;
  }
  else
  {
    swift_release();
    uint64_t v3 = *(void *)(v2 + 64);
    uint64_t v4 = *(void *)(v2 + 72);
    uint64_t v5 = sub_10008AC0C;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_10008AC0C()
{
  swift_release();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 48);
  return _swift_task_switch(sub_10003D628, v1, v2);
}

uint64_t sub_10008AC7C()
{
  uint64_t v1 = v0[12];
  swift_release();
  swift_release();
  sub_10003DD74(v1, 0xD000000000000029, 0x80000001000D8280);
  swift_errorRelease();
  swift_release();
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[6];
  return _swift_task_switch(sub_10003D628, v2, v3);
}

uint64_t sub_10008AD30(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_100012854(&qword_10010B770);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_getKeyPath();
  swift_getKeyPath();
  v12[15] = a1;
  swift_retain();
  sub_1000C67F0();
  swift_retain();
  sub_1000C75E0();
  uint64_t v8 = sub_1000C7600();
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 0, 1, v8);
  sub_1000C75D0();
  swift_retain();
  uint64_t v9 = sub_1000C75C0();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v9;
  *(void *)(v10 + 24) = &protocol witness table for MainActor;
  *(unsigned char *)(v10 + 32) = a1;
  *(void *)(v10 + 40) = a3;
  sub_1000BD2A0((uint64_t)v7, (uint64_t)&unk_10010DB90, v10);
  swift_release();
  return swift_release();
}

uint64_t sub_10008AEBC@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_10008AED0()
{
  return sub_1000114AC();
}

uint64_t sub_10008AEE4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v47 = a2;
  uint64_t v3 = type metadata accessor for AlertViewModelAlert(0);
  uint64_t v4 = v3 - 8;
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100012854(&qword_10010CB70);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_100012854(&qword_10010DB50);
  __chkstk_darwin(v50);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100012854(&qword_10010DB48);
  uint64_t v45 = *(void *)(v12 - 8);
  uint64_t v46 = v12;
  __chkstk_darwin(v12);
  uint64_t v44 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_1000C6D30();
  sub_10008B3F0((uint64_t)&v51);
  uint64_t v38 = v52;
  uint64_t v39 = v51;
  int v48 = v53;
  uint64_t v14 = v54;
  uint64_t v41 = v56;
  uint64_t v42 = v55;
  int v40 = v57;
  uint64_t v49 = v58;
  id v15 = [self labelColor];
  uint64_t v37 = sub_1000C7180();
  uint64_t KeyPath = swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  id v34 = v9;
  sub_1000C67E0();
  uint64_t v35 = a1;
  swift_release();
  swift_release();
  swift_release();
  type metadata accessor for GlobalPermissionViewModel();
  sub_10008BB50(&qword_10010DB40, (void (*)(uint64_t))type metadata accessor for GlobalPermissionViewModel);
  sub_1000C6A70();
  swift_getKeyPath();
  sub_1000C6A80();
  swift_release();
  swift_release();
  uint64_t v16 = v51;
  uint64_t v17 = v52;
  char v18 = v53;
  sub_100044994((uint64_t)v9, (uint64_t)v6);
  uint64_t v19 = *(int *)(v4 + 28);
  uint64_t v33 = v6;
  uint64_t v20 = &v6[v19];
  *(void *)uint64_t v20 = v16;
  *((void *)v20 + 1) = v17;
  v20[16] = v18;
  sub_10008BC4C((uint64_t)v6, (uint64_t)&v11[*(int *)(v50 + 36)]);
  uint64_t v21 = v42;
  *(void *)uint64_t v11 = v43;
  *((void *)v11 + 1) = 0;
  v11[16] = 1;
  uint64_t v23 = v38;
  uint64_t v22 = v39;
  *((void *)v11 + 3) = v39;
  *((void *)v11 + 4) = v23;
  char v24 = v48;
  v11[40] = v48;
  *((void *)v11 + 6) = v14;
  *((void *)v11 + 7) = v21;
  uint64_t v25 = v41;
  *((void *)v11 + 8) = v41;
  char v26 = v40;
  v11[72] = v40;
  uint64_t v27 = KeyPath;
  *((void *)v11 + 10) = v49;
  *((void *)v11 + 11) = v27;
  *((void *)v11 + 12) = v37;
  sub_100039224(v22, v23, v24);
  swift_bridgeObjectRetain();
  sub_100039224(v21, v25, v26);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_10008BCB0((uint64_t)v33);
  sub_10001326C((uint64_t)v34, &qword_10010CB70);
  sub_100039234(v22, v23, v48);
  swift_bridgeObjectRelease();
  sub_100039234(v21, v25, v26);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  swift_retain();
  if (!Strong || (id v29 = sub_10000E21C(), swift_unknownObjectRelease(), !v29)) {
    [objc_allocWithZone((Class)UIImage) init];
  }
  swift_release();
  sub_1000C7190();
  sub_10008B9E0();
  uint64_t v30 = v44;
  sub_1000C7040();
  swift_release();
  sub_10001326C((uint64_t)v11, &qword_10010DB50);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v45 + 32))(v47, v30, v46);
}

uint64_t sub_10008B3F0@<X0>(uint64_t a1@<X8>)
{
  sub_1000C6D00();
  uint64_t v2 = sub_1000C6FF0();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  uint64_t v7 = sub_1000C6FD0();
  uint64_t v30 = v8;
  uint64_t v31 = v7;
  uint64_t v32 = v9;
  char v29 = v10 & 1;
  sub_100039234(v2, v4, v6);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  sub_1000363CC();
  uint64_t v11 = sub_1000C7000();
  uint64_t v13 = v12;
  char v15 = v14 & 1;
  sub_1000C6F00();
  uint64_t v16 = sub_1000C6FE0();
  uint64_t v18 = v17;
  char v20 = v19;
  swift_release();
  sub_100039234(v11, v13, v15);
  swift_bridgeObjectRelease();
  sub_1000C7170();
  uint64_t v21 = sub_1000C6FB0();
  uint64_t v23 = v22;
  char v25 = v24;
  uint64_t v27 = v26;
  swift_release();
  sub_100039234(v16, v18, v20 & 1);
  swift_bridgeObjectRelease();
  *(void *)a1 = v31;
  *(void *)(a1 + 8) = v30;
  *(unsigned char *)(a1 + 16) = v29;
  *(void *)(a1 + 24) = v32;
  *(void *)(a1 + 32) = v21;
  *(void *)(a1 + 40) = v23;
  *(unsigned char *)(a1 + 48) = v25 & 1;
  *(void *)(a1 + 56) = v27;
  sub_100039224(v31, v30, v29);
  swift_bridgeObjectRetain();
  sub_100039224(v21, v23, v25 & 1);
  swift_bridgeObjectRetain();
  sub_100039234(v21, v23, v25 & 1);
  swift_bridgeObjectRelease();
  sub_100039234(v31, v30, v29);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10008B668@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_10008B67C()
{
  return sub_1000114AC();
}

uint64_t sub_10008B690()
{
  return sub_100089FF0(*v0, v0[1]);
}

uint64_t sub_10008B698()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();

  return swift_release();
}

uint64_t sub_10008B714(uint64_t a1)
{
  uint64_t v2 = sub_100012854(&qword_10010CB70);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  char v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v9 - v6;
  sub_100044994(a1, (uint64_t)&v9 - v6);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_100044994((uint64_t)v7, (uint64_t)v5);
  swift_retain();
  sub_1000C67F0();
  return sub_10001326C((uint64_t)v7, &qword_10010CB70);
}

uint64_t sub_10008B824@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_10008B84C()
{
  return sub_1000114AC();
}

uint64_t sub_10008B874()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10008B8AC(char a1)
{
  return sub_10008A660(a1 & 1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10008B8C0@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_10008B8E8()
{
  return sub_1000114AC();
}

uint64_t sub_10008B910(char a1)
{
  return sub_10008A7C0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10008B920@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_10008B948()
{
  return sub_1000114AC();
}

uint64_t sub_10008B970(char a1)
{
  return sub_10008AD30(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10008B988@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_10008B9B0()
{
  return sub_1000114AC();
}

uint64_t sub_10008B9D8@<X0>(uint64_t a1@<X8>)
{
  return sub_10008AEE4(*(void *)(v1 + 24), a1);
}

unint64_t sub_10008B9E0()
{
  unint64_t result = qword_10010DB58;
  if (!qword_10010DB58)
  {
    sub_100013128(&qword_10010DB50);
    sub_10008BA8C();
    sub_10008BB50(&qword_10010DB80, (void (*)(uint64_t))type metadata accessor for AlertViewModelAlert);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010DB58);
  }
  return result;
}

unint64_t sub_10008BA8C()
{
  unint64_t result = qword_10010DB60;
  if (!qword_10010DB60)
  {
    sub_100013128(&qword_10010DB68);
    sub_10001E454(&qword_10010DB70, &qword_10010DB78);
    sub_10001E454(&qword_10010C990, &qword_10010C998);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010DB60);
  }
  return result;
}

uint64_t sub_10008BB50(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10008BB98()
{
  unint64_t result = qword_10010DB88;
  if (!qword_10010DB88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010DB88);
  }
  return result;
}

uint64_t sub_10008BBFC@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_10008BC24()
{
  return sub_1000114AC();
}

uint64_t sub_10008BC4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AlertViewModelAlert(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10008BCB0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AlertViewModelAlert(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10008BD14()
{
  return sub_10008BDE8(48);
}

uint64_t sub_10008BD1C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 40);
  char v7 = *(unsigned char *)(v1 + 32);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_100013B98;
  return sub_10003E430(a1, v4, v5, v7, v6);
}

uint64_t sub_10008BDE0()
{
  return sub_10008BDE8(49);
}

uint64_t sub_10008BDE8(uint64_t a1)
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v1, a1, 7);
}

uint64_t sub_10008BE34(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  char v8 = *(unsigned char *)(v1 + 48);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_10001AE78;
  return sub_10008A8F4(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_10008BF00@<X0>(unsigned char *a1@<X8>)
{
  return sub_10003C1B4(a1);
}

uint64_t sub_10008BF10(char *a1)
{
  return sub_10003C234(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_10008BF1C()
{
  return sub_10001E454(&qword_10010DBA8, &qword_10010DBB0);
}

uint64_t sub_10008BF64@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1000C7150();
  uint64_t result = sub_1000C6A10();
  *a1 = v2;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  return result;
}

ValueMetadata *type metadata accessor for FramePreferenceKey()
{
  return &type metadata for FramePreferenceKey;
}

double sub_10008BFC0()
{
  double result = 0.0;
  xmmword_10010DBB8 = 0u;
  unk_10010DBC8 = 0u;
  return result;
}

double sub_10008BFD4@<D0>(_OWORD *a1@<X8>)
{
  if (qword_10010ACE0 != -1) {
    swift_once();
  }
  double result = *(double *)&xmmword_10010DBB8;
  long long v3 = unk_10010DBC8;
  *a1 = xmmword_10010DBB8;
  a1[1] = v3;
  return result;
}

void URL.evictionSafeResourceValues(forKeys:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v3 = sub_100012854(&qword_10010DBD8);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v22 = (uint64_t)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v20 - v6;
  id v24 = 0;
  uint64_t v8 = sub_1000C6370();
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
  id v10 = [objc_allocWithZone((Class)NSFileCoordinator) init];
  sub_1000C64C0(v11);
  uint64_t v13 = v12;
  char v14 = (void *)swift_allocObject();
  v14[2] = v7;
  v14[3] = a1;
  void v14[4] = &v24;
  char v15 = (void *)swift_allocObject();
  v15[2] = sub_10008C540;
  v15[3] = v14;
  aBlock[4] = sub_10008C55C;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_10008C584;
  aBlock[3] = &unk_1001019C8;
  uint64_t v16 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  [v10 coordinateReadingItemAtURL:v13 options:4 error:aBlock byAccessor:v16];
  _Block_release(v16);

  id v17 = aBlock[0];
  LOBYTE(v16) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v16) {
    __break(1u);
  }
  if (v17)
  {
    id v18 = v17;
    swift_willThrow();
    sub_10008C6E8((uint64_t)v7);

    swift_release();
  }
  else if (v24)
  {
    v24;
    swift_willThrow();
    sub_10008C6E8((uint64_t)v7);

    swift_release();
  }
  else
  {
    uint64_t v19 = v22;
    sub_10008C680((uint64_t)v7, v22);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v19, 1, v8) == 1)
    {
      __break(1u);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v21, v19, v8);
      sub_10008C6E8((uint64_t)v7);

      swift_release();
    }
  }
}

uint64_t sub_10008C3C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_100012854(&qword_10010DBD8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000C64D0();
  uint64_t v6 = sub_1000C6370();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 0, 1, v6);
  return sub_10008C788((uint64_t)v5, a2);
}

uint64_t sub_10008C508()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10008C540(uint64_t a1)
{
  return sub_10008C3C8(a1, *(void *)(v1 + 16));
}

uint64_t sub_10008C54C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10008C55C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_10008C584(uint64_t a1)
{
  uint64_t v2 = sub_1000C6530();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void (**)(char *))(a1 + 32);
  sub_1000C64F0();
  v6(v5);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_10008C668(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10008C678()
{
  return swift_release();
}

uint64_t sub_10008C680(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100012854(&qword_10010DBD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10008C6E8(uint64_t a1)
{
  uint64_t v2 = sub_100012854(&qword_10010DBD8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10008C748()
{
  unint64_t result = qword_10010DBE0;
  if (!qword_10010DBE0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10010DBE0);
  }
  return result;
}

uint64_t sub_10008C788(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100012854(&qword_10010DBD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10008C7F0()
{
  return sub_10008E474(1);
}

uint64_t sub_10008C82C()
{
  type metadata accessor for ActivitiesModelData();
  uint64_t v0 = swift_allocObject();
  type metadata accessor for ActivityType(0);
  uint64_t v1 = UIActivityTypeMail;
  sub_1000C67B0();
  return v0;
}

uint64_t sub_10008C8B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100012854(&qword_10010DBE8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100012854(&qword_10010DBF0);
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10008CAF8(v1, (uint64_t)v5);
  type metadata accessor for SharingModel();
  sub_10008DB6C((unint64_t *)&qword_10010BF20, (void (*)(uint64_t))type metadata accessor for SharingModel);
  uint64_t v10 = sub_1000C6960();
  uint64_t v11 = sub_1000C6780();
  sub_10001A740((uint64_t)v5, (uint64_t)v9, &qword_10010DBE8);
  uint64_t v12 = (uint64_t *)&v9[*(int *)(v7 + 44)];
  uint64_t *v12 = v11;
  v12[1] = v10;
  sub_10001326C((uint64_t)v5, &qword_10010DBE8);
  type metadata accessor for ActivitiesModelData();
  sub_10008DB6C((unint64_t *)&qword_10010B450, (void (*)(uint64_t))type metadata accessor for ActivitiesModelData);
  uint64_t v13 = sub_1000C6960();
  uint64_t v14 = sub_1000C6780();
  sub_10001A740((uint64_t)v9, a1, &qword_10010DBF0);
  char v15 = (uint64_t *)(a1 + *(int *)(sub_100012854(&qword_10010DBF8) + 36));
  uint64_t *v15 = v14;
  v15[1] = v13;
  return sub_10001326C((uint64_t)v9, &qword_10010DBF0);
}

uint64_t sub_10008CAF8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v68 = a2;
  uint64_t v3 = sub_100012854(&qword_10010DC00);
  __chkstk_darwin(v3);
  uint64_t v5 = (void *)((char *)v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v58 = sub_100012854(&qword_10010DC08);
  uint64_t v56 = *(void *)(v58 - 8);
  __chkstk_darwin(v58);
  uint64_t v55 = (char *)v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_100012854(&qword_10010DC10);
  uint64_t v7 = __chkstk_darwin(v67);
  uint64_t v54 = (char *)v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v57 = (uint64_t)v51 - v9;
  uint64_t v63 = sub_100012854(&qword_10010DC18);
  __chkstk_darwin(v63);
  uint64_t v65 = (uint64_t)v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_100012854(&qword_10010DC20);
  __chkstk_darwin(v60);
  uint64_t v12 = (_OWORD *)((char *)v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v64 = sub_100012854(&qword_10010DC28);
  __chkstk_darwin(v64);
  uint64_t v62 = (char *)v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = type metadata accessor for PeopleView();
  __chkstk_darwin(v61);
  uint64_t v59 = (uint64_t)v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100012854(&qword_10010DC30);
  __chkstk_darwin(v15);
  uint64_t v66 = (char *)v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *a1;
  type metadata accessor for NetworkMonitor();
  sub_10008DB6C(&qword_10010DC38, (void (*)(uint64_t))type metadata accessor for NetworkMonitor);
  uint64_t v53 = v17;
  sub_1000C6960();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  if (v69)
  {
    type metadata accessor for SharingModel();
    sub_10008DB6C((unint64_t *)&qword_10010BF20, (void (*)(uint64_t))type metadata accessor for SharingModel);
    *uint64_t v5 = sub_1000C6B30();
    v5[1] = v18;
    swift_storeEnumTagMultiPayload();
    sub_10008DA84();
    sub_10008DCA8();
    return sub_1000C6D50();
  }
  else
  {
    v51[1] = v15;
    v51[2] = v3;
    uint64_t v52 = v5;
    type metadata accessor for SharingModel();
    sub_10008DB6C((unint64_t *)&qword_10010BF20, (void (*)(uint64_t))type metadata accessor for SharingModel);
    sub_1000C6960();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1000C67E0();
    swift_release();
    swift_release();
    swift_release();
    switch((char)v69)
    {
      case 1:
      case 3:
        sub_100095698(0, (uint64_t)&v69);
        long long v20 = v78;
        v12[8] = v77;
        v12[9] = v20;
        v12[10] = v79;
        long long v21 = v74;
        v12[4] = v73;
        v12[5] = v21;
        long long v22 = v76;
        v12[6] = v75;
        v12[7] = v22;
        long long v23 = v70;
        _OWORD *v12 = v69;
        v12[1] = v23;
        long long v24 = v72;
        v12[2] = v71;
        uint64_t v12[3] = v24;
        swift_storeEnumTagMultiPayload();
        sub_10008DD6C((uint64_t)&v69);
        sub_10008DB6C(&qword_10010DC50, (void (*)(uint64_t))type metadata accessor for PeopleView);
        sub_10008DBB4();
        uint64_t v25 = (uint64_t)v62;
        sub_1000C6D50();
        sub_10001A740(v25, v65, &qword_10010DC28);
        swift_storeEnumTagMultiPayload();
        sub_10008DAC0();
        sub_10008DC08();
        uint64_t v26 = (uint64_t)v66;
        sub_1000C6D50();
        sub_10001326C(v25, &qword_10010DC28);
        sub_10008DE50((uint64_t)&v69);
        break;
      case 2:
        long long v69 = *((_OWORD *)a1 + 3);
        LOBYTE(v70) = *((unsigned char *)a1 + 64);
        uint64_t v43 = swift_allocObject();
        long long v44 = *((_OWORD *)a1 + 3);
        *(_OWORD *)(v43 + 48) = *((_OWORD *)a1 + 2);
        *(_OWORD *)(v43 + 64) = v44;
        *(unsigned char *)(v43 + 80) = *((unsigned char *)a1 + 64);
        long long v45 = *((_OWORD *)a1 + 1);
        *(_OWORD *)(v43 + 16) = *(_OWORD *)a1;
        *(_OWORD *)(v43 + 32) = v45;
        uint64_t v46 = swift_allocObject();
        long long v47 = *((_OWORD *)a1 + 3);
        *(_OWORD *)(v46 + 48) = *((_OWORD *)a1 + 2);
        *(_OWORD *)(v46 + 64) = v47;
        *(unsigned char *)(v46 + 80) = *((unsigned char *)a1 + 64);
        long long v48 = *((_OWORD *)a1 + 1);
        *(_OWORD *)(v46 + 16) = *(_OWORD *)a1;
        *(_OWORD *)(v46 + 32) = v48;
        sub_100047E74();
        sub_100047E74();
        sub_10008DFA0((uint64_t)&v69);
        sub_100047E74();
        sub_100047E74();
        sub_10008DFA0((uint64_t)&v69);
        uint64_t v49 = v59;
        sub_1000A3640((uint64_t)sub_10008DF38, v43, (uint64_t)sub_10008DF98, v46, v59);
        sub_10008DFD4(v49, (uint64_t)v12);
        swift_storeEnumTagMultiPayload();
        sub_10008DB6C(&qword_10010DC50, (void (*)(uint64_t))type metadata accessor for PeopleView);
        sub_10008DBB4();
        uint64_t v50 = (uint64_t)v62;
        sub_1000C6D50();
        sub_10001A740(v50, v65, &qword_10010DC28);
        swift_storeEnumTagMultiPayload();
        sub_10008DAC0();
        sub_10008DC08();
        uint64_t v26 = (uint64_t)v66;
        sub_1000C6D50();
        sub_10001326C(v50, &qword_10010DC28);
        sub_10008E038(v49);
        break;
      default:
        uint64_t v27 = v55;
        sub_1000C69A0();
        sub_1000C7350();
        uint64_t v29 = v28;
        uint64_t v31 = v30;
        uint64_t v32 = v56;
        uint64_t v33 = v54;
        uint64_t v34 = v58;
        (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v54, v27, v58);
        uint64_t v35 = &v33[*(int *)(v67 + 36)];
        __asm { FMOV            V0.2D, #1.0 }
        *(_OWORD *)uint64_t v35 = _Q0;
        *((void *)v35 + 2) = v29;
        *((void *)v35 + 3) = v31;
        (*(void (**)(char *, uint64_t))(v32 + 8))(v27, v34);
        uint64_t v41 = (uint64_t)v33;
        uint64_t v42 = v57;
        sub_10008DD04(v41, v57);
        sub_10001A740(v42, v65, &qword_10010DC10);
        swift_storeEnumTagMultiPayload();
        sub_10008DAC0();
        sub_10008DC08();
        uint64_t v26 = (uint64_t)v66;
        sub_1000C6D50();
        sub_10001326C(v42, &qword_10010DC10);
        break;
    }
    sub_10001A740(v26, (uint64_t)v52, &qword_10010DC30);
    swift_storeEnumTagMultiPayload();
    sub_10008DA84();
    sub_10008DCA8();
    sub_1000C6D50();
    return sub_10001326C(v26, &qword_10010DC30);
  }
}

uint64_t *sub_10008D5C0()
{
  type metadata accessor for SharingModel();
  sub_10008DB6C((unint64_t *)&qword_10010BF20, (void (*)(uint64_t))type metadata accessor for SharingModel);
  uint64_t v0 = sub_1000C6960();
  type metadata accessor for PeopleViewModel();
  swift_allocObject();
  return sub_100024784(v0);
}

uint64_t sub_10008D668()
{
  type metadata accessor for SharingModel();
  sub_10008DB6C((unint64_t *)&qword_10010BF20, (void (*)(uint64_t))type metadata accessor for SharingModel);
  uint64_t v0 = sub_1000C6960();
  type metadata accessor for GlobalPermissionViewModel();
  swift_allocObject();
  uint64_t v1 = sub_1000407F0(v0);
  swift_release();
  return v1;
}

uint64_t sub_10008D720@<X0>(uint64_t a1@<X8>)
{
  return sub_10008C8B0(a1);
}

uint64_t destroy for ContentView()
{
  sub_10004809C();
  sub_10004809C();

  return sub_10004809C();
}

uint64_t initializeWithCopy for ContentView(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  char v6 = *((unsigned char *)a2 + 16);
  sub_100047E74();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  char v9 = *((unsigned char *)v2 + 40);
  sub_100047E74();
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 40) = v9;
  uint64_t v10 = v2[6];
  uint64_t v11 = v2[7];
  LOBYTE(v2) = *((unsigned char *)v2 + 64);
  sub_100047E74();
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(unsigned char *)(a1 + 64) = (_BYTE)v2;
  return a1;
}

uint64_t assignWithCopy for ContentView(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  char v6 = *((unsigned char *)a2 + 16);
  sub_100047E74();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  sub_10004809C();
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  char v9 = *((unsigned char *)v2 + 40);
  sub_100047E74();
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 40) = v9;
  sub_10004809C();
  uint64_t v10 = v2[6];
  uint64_t v11 = v2[7];
  LOBYTE(v2) = *((unsigned char *)v2 + 64);
  sub_100047E74();
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(unsigned char *)(a1 + 64) = (_BYTE)v2;
  sub_10004809C();
  return a1;
}

__n128 initializeWithTake for ContentView(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for ContentView(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v4;
  sub_10004809C();
  char v5 = *(unsigned char *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = v5;
  sub_10004809C();
  char v6 = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = v6;
  sub_10004809C();
  return a1;
}

uint64_t getEnumTagSinglePayload for ContentView(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 65)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ContentView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 65) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentView()
{
  return &type metadata for ContentView;
}

uint64_t sub_10008DA60()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10008DA84()
{
  return sub_10008E284(&qword_10010DC40, &qword_10010DC30, (void (*)(void))sub_10008DAC0, (void (*)(void))sub_10008DC08);
}

unint64_t sub_10008DAC0()
{
  unint64_t result = qword_10010DC48;
  if (!qword_10010DC48)
  {
    sub_100013128(&qword_10010DC28);
    sub_10008DB6C(&qword_10010DC50, (void (*)(uint64_t))type metadata accessor for PeopleView);
    sub_10008DBB4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010DC48);
  }
  return result;
}

uint64_t sub_10008DB6C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10008DBB4()
{
  unint64_t result = qword_10010DC58;
  if (!qword_10010DC58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010DC58);
  }
  return result;
}

unint64_t sub_10008DC08()
{
  unint64_t result = qword_10010DC60;
  if (!qword_10010DC60)
  {
    sub_100013128(&qword_10010DC10);
    sub_10001E454(&qword_10010DC68, &qword_10010DC08);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010DC60);
  }
  return result;
}

unint64_t sub_10008DCA8()
{
  unint64_t result = qword_10010DC70;
  if (!qword_10010DC70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010DC70);
  }
  return result;
}

uint64_t sub_10008DD04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100012854(&qword_10010DC10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10008DD6C(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 136);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1000236E0(v3);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_10008DE50(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 136);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_100013344(v3);
  swift_release();
  swift_release();
  return a1;
}

uint64_t *sub_10008DF38()
{
  return sub_10008D5C0();
}

uint64_t sub_10008DF44()
{
  sub_10004809C();
  sub_10004809C();
  sub_10004809C();

  return _swift_deallocObject(v0, 81, 7);
}

uint64_t sub_10008DF98()
{
  return sub_10008D668();
}

uint64_t sub_10008DFA0(uint64_t a1)
{
  return a1;
}

uint64_t sub_10008DFD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PeopleView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10008E038(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PeopleView();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10008E098()
{
  unint64_t result = qword_10010DC78;
  if (!qword_10010DC78)
  {
    sub_100013128(&qword_10010DBF8);
    sub_10008E138();
    sub_10001E454(&qword_10010DCB0, &qword_10010DCB8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010DC78);
  }
  return result;
}

unint64_t sub_10008E138()
{
  unint64_t result = qword_10010DC80;
  if (!qword_10010DC80)
  {
    sub_100013128(&qword_10010DBF0);
    sub_10008E1D8();
    sub_10001E454(&qword_10010DCA0, &qword_10010DCA8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010DC80);
  }
  return result;
}

unint64_t sub_10008E1D8()
{
  unint64_t result = qword_10010DC88;
  if (!qword_10010DC88)
  {
    sub_100013128(&qword_10010DBE8);
    sub_10008E284(&qword_10010DC90, &qword_10010DC98, (void (*)(void))sub_10008DA84, (void (*)(void))sub_10008DCA8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010DC88);
  }
  return result;
}

uint64_t sub_10008E284(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100013128(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10008E30C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10008E380@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_10008E400()
{
  return sub_1000C67F0();
}

uint64_t sub_10008E474(int a1)
{
  uint64_t v2 = v1;
  int v17 = a1;
  uint64_t v3 = sub_100012854(&qword_10010D220);
  uint64_t v15 = *(void *)(v3 - 8);
  uint64_t v16 = v3;
  __chkstk_darwin(v3);
  uint64_t v14 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000C76C0();
  uint64_t v5 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000C76B0();
  __chkstk_darwin(v8);
  uint64_t v9 = sub_1000C7380();
  __chkstk_darwin(v9 - 8);
  sub_1000C68C0();
  swift_allocObject();
  *(void *)(v1 + 16) = sub_1000C68B0();
  sub_10008F0D0();
  sub_1000C7370();
  uint64_t v19 = _swiftEmptyArrayStorage;
  sub_10008F298(&qword_10010DD90, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100012854(&qword_10010DD98);
  sub_10008F2E0(&qword_10010DDA0, &qword_10010DD98);
  sub_1000C78A0();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v13);
  *(void *)(v1 + 24) = sub_1000C76F0();
  uint64_t v10 = v1 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing14NetworkMonitor__status;
  char v18 = 0;
  uint64_t v11 = v14;
  sub_1000C67B0();
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v10, v11, v16);
  swift_allocObject();
  swift_weakInit();
  swift_retain();
  swift_retain();
  sub_1000236E0((uint64_t)sub_10008F148);
  sub_1000C6890();
  swift_release();
  swift_release_n();
  if (v17) {
    sub_1000C68A0();
  }
  return v2;
}

uint64_t sub_10008E828(uint64_t a1)
{
  uint64_t v22 = a1;
  uint64_t v1 = sub_1000C7360();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  long long v24 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000C7380();
  uint64_t v23 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000C6900();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_10008F0D0();
    uint64_t v21 = sub_1000C76D0();
    uint64_t v12 = swift_allocObject();
    swift_weakInit();
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v22, v7);
    uint64_t v13 = *(unsigned __int8 *)(v8 + 80);
    uint64_t v22 = v4;
    uint64_t v14 = v2;
    uint64_t v15 = (v13 + 24) & ~v13;
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = v12;
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v16 + v15, v10, v7);
    aBlock[4] = sub_10008F21C;
    aBlock[5] = v16;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000BCEA4;
    aBlock[3] = &unk_100101BA8;
    int v17 = _Block_copy(aBlock);
    swift_release();
    sub_1000C7370();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_10008F298(&qword_10010DDA8, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100012854(&qword_10010DDB0);
    sub_10008F2E0(&qword_10010DDB8, &qword_10010DDB0);
    char v18 = v24;
    sub_1000C78A0();
    uint64_t v19 = (void *)v21;
    sub_1000C76E0();
    _Block_release(v17);
    swift_release();

    (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v1);
    return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v6, v22);
  }
  return result;
}

uint64_t sub_10008EC08()
{
  uint64_t v0 = sub_1000C68E0();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = &v10[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v2);
  uint64_t v6 = &v10[-v5];
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1000C68F0();
    (*(void (**)(unsigned char *, void, uint64_t))(v1 + 104))(v4, enum case for NWPath.Status.satisfied(_:), v0);
    char v8 = sub_1000C68D0();
    uint64_t v9 = *(void (**)(unsigned char *, uint64_t))(v1 + 8);
    v9(v4, v0);
    v9(v6, v0);
    swift_getKeyPath();
    swift_getKeyPath();
    v10[7] = (v8 & 1) == 0;
    return sub_1000C67F0();
  }
  return result;
}

uint64_t sub_10008EDBC()
{
  swift_release();

  uint64_t v1 = v0 + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing14NetworkMonitor__status;
  uint64_t v2 = sub_100012854(&qword_10010D220);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_10008EE70()
{
  return type metadata accessor for NetworkMonitor();
}

uint64_t type metadata accessor for NetworkMonitor()
{
  uint64_t result = qword_10010DCF0;
  if (!qword_10010DCF0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10008EEC4()
{
  sub_10008EF70();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_10008EF70()
{
  if (!qword_10010DD00)
  {
    unint64_t v0 = sub_1000C6800();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10010DD00);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for NetworkStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10008F094);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NetworkStatus()
{
  return &type metadata for NetworkStatus;
}

unint64_t sub_10008F0D0()
{
  unint64_t result = qword_10010B500;
  if (!qword_10010B500)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10010B500);
  }
  return result;
}

uint64_t sub_10008F110()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10008F148(uint64_t a1)
{
  return sub_10008E828(a1);
}

uint64_t sub_10008F150()
{
  uint64_t v1 = sub_1000C6900();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10008F21C()
{
  sub_1000C6900();

  return sub_10008EC08();
}

uint64_t sub_10008F280(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10008F290()
{
  return swift_release();
}

uint64_t sub_10008F298(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10008F2E0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100013128(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10008F338@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a1;
  uint64_t v23 = a2;
  uint64_t v3 = sub_1000C6AE0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100012854(&qword_10010DDF0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100012854(&qword_10010DDE0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v21 = v11;
  uint64_t v22 = v12;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = a1;
  sub_100012854(&qword_10010DE20);
  sub_10001E454(&qword_10010DE28, &qword_10010DE20);
  sub_1000C6F90();
  sub_1000C6AD0();
  uint64_t v15 = sub_10001E454(&qword_10010DDF8, &qword_10010DDF0);
  sub_1000C7110();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v24 = v20;
  sub_100012854(&qword_10010DDE8);
  uint64_t v26 = v7;
  uint64_t v27 = v3;
  uint64_t v28 = v15;
  uint64_t v29 = &protocol witness table for GroupedListStyle;
  swift_getOpaqueTypeConformance2();
  uint64_t v16 = sub_100013128(&qword_10010DE00);
  uint64_t v17 = sub_10001E454(&qword_10010DE08, &qword_10010DE00);
  uint64_t v26 = v16;
  uint64_t v27 = v17;
  swift_getOpaqueTypeConformance2();
  uint64_t v18 = v21;
  sub_1000C70F0();
  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v14, v18);
}

uint64_t sub_10008F6D4@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v51 = a2;
  uint64_t v50 = sub_100012854(&qword_10010DE80);
  uint64_t v58 = *(void *)(v50 - 8);
  uint64_t v3 = __chkstk_darwin(v50);
  uint64_t v49 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v57 = (char *)&v43 - v5;
  uint64_t v48 = sub_100012854(&qword_10010DE88);
  uint64_t v56 = *(void *)(v48 - 8);
  uint64_t v6 = __chkstk_darwin(v48);
  uint64_t v55 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v54 = (char *)&v43 - v8;
  uint64_t v9 = sub_100012854(&qword_10010DE90);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_100012854(&qword_10010DE98);
  uint64_t v13 = *(void *)(v52 - 8);
  uint64_t v14 = __chkstk_darwin(v52);
  uint64_t v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = v16;
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v43 - v17;
  uint64_t v61 = a1;
  sub_100012854(&qword_10010DEA0);
  sub_10009615C();
  sub_1000C7310();
  sub_1000C7150();
  sub_1000C69B0();
  sub_1000962C0();
  sub_1000C70A0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v47 = v13;
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  uint64_t v46 = v18;
  uint64_t v20 = v16;
  uint64_t v21 = v52;
  v19(v18, v20, v52);
  uint64_t v60 = a1;
  sub_100012854(&qword_10010DEF8);
  uint64_t v22 = sub_100013128(&qword_10010DF00);
  uint64_t v23 = sub_100013128(&qword_10010DF08);
  unint64_t v24 = sub_100096348();
  unint64_t v25 = sub_1000964AC();
  unint64_t v26 = sub_100096500();
  uint64_t v62 = v22;
  uint64_t v63 = &type metadata for TransportPresentationState;
  uint64_t v64 = v23;
  unint64_t v65 = v24;
  unint64_t v66 = v25;
  unint64_t v67 = v26;
  swift_getOpaqueTypeConformance2();
  uint64_t v27 = v54;
  sub_1000C7310();
  uint64_t v59 = a1;
  sub_100012854(&qword_10010DF68);
  sub_1000966A4();
  uint64_t v28 = v57;
  sub_1000C7310();
  uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  uint64_t v29 = v53;
  uint64_t v30 = v21;
  v43(v53, v18, v21);
  long long v45 = *(void (**)(char *, char *, uint64_t))(v56 + 16);
  uint64_t v31 = v55;
  uint64_t v32 = v48;
  v45(v55, v27, v48);
  long long v44 = *(void (**)(char *, char *, uint64_t))(v58 + 16);
  uint64_t v33 = v49;
  uint64_t v34 = v28;
  uint64_t v35 = v50;
  v44(v49, v34, v50);
  uint64_t v36 = v51;
  v43(v51, v29, v30);
  uint64_t v37 = sub_100012854(&qword_10010DF80);
  v45(&v36[*(int *)(v37 + 48)], v31, v32);
  v44(&v36[*(int *)(v37 + 64)], v33, v35);
  uint64_t v38 = *(void (**)(char *, uint64_t))(v58 + 8);
  v38(v57, v35);
  uint64_t v39 = *(void (**)(char *, uint64_t))(v56 + 8);
  v39(v54, v32);
  int v40 = *(void (**)(char *, uint64_t))(v47 + 8);
  uint64_t v41 = v52;
  v40(v46, v52);
  v38(v33, v35);
  v39(v55, v32);
  return ((uint64_t (*)(char *, uint64_t))v40)(v53, v41);
}

double sub_10008FD24@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000C6D20();
  sub_10008FE18(a1, (uint64_t)__src);
  v9[264] = 0;
  memcpy(&v9[7], __src, 0x101uLL);
  id v5 = [self systemGroupedBackgroundColor];
  sub_1000C7180();
  uint64_t v6 = sub_1000C7270();
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = 0x4024000000000000;
  *(unsigned char *)(a2 + 16) = 0;
  memcpy((void *)(a2 + 17), v9, 0x108uLL);
  *(void *)(a2 + 288) = v6;
  *(void *)(a2 + 296) = 0xC034000000000000;
  double result = 20.0;
  *(_OWORD *)(a2 + 304) = xmmword_1000D0820;
  *(void *)(a2 + 320) = 0x4034000000000000;
  *(unsigned char *)(a2 + 328) = 0;
  return result;
}

uint64_t sub_10008FE18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v52 = a1;
  uint64_t v55 = sub_1000C71B0();
  uint64_t v54 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  uint64_t v53 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_1000903FC();
  uint64_t v78 = v4;
  sub_1000363CC();
  uint64_t v5 = sub_1000C7000();
  uint64_t v7 = v6;
  char v9 = v8 & 1;
  sub_1000C6EF0();
  uint64_t v10 = sub_1000C6FE0();
  uint64_t v12 = v11;
  char v14 = v13;
  swift_release();
  sub_100039234(v5, v7, v9);
  swift_bridgeObjectRelease();
  uint64_t v15 = sub_1000C6FD0();
  uint64_t v59 = v16;
  uint64_t v60 = v15;
  char v18 = v17;
  uint64_t v61 = v19;
  uint64_t v20 = v52;
  sub_100039234(v10, v12, v14 & 1);
  swift_bridgeObjectRelease();
  char v21 = sub_1000C6EB0();
  if (*(unsigned char *)v20)
  {
    uint64_t v58 = 0;
    uint64_t v57 = 0;
    uint64_t KeyPath = 0;
    char v22 = 0;
  }
  else
  {
    uint64_t v58 = sub_100090D70();
    uint64_t v57 = v23;
    uint64_t KeyPath = swift_getKeyPath();
    char v22 = 1;
  }
  if (*(void *)(v20 + 8))
  {
    char v24 = v18 & 1;
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1000C67E0();
    swift_release();
    swift_release();
    swift_release();
    sub_1000C7190();
    uint64_t v25 = v54;
    unint64_t v26 = v53;
    uint64_t v27 = v55;
    (*(void (**)(char *, void, uint64_t))(v54 + 104))(v53, enum case for Image.ResizingMode.stretch(_:), v55);
    uint64_t v52 = sub_1000C71D0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v26, v27);
    sub_1000C7330();
    sub_1000C69F0();
    uint64_t v55 = v77;
    char v28 = v78;
    uint64_t v54 = v79;
    char v29 = v80;
    uint64_t v53 = v81;
    uint64_t v51 = v82;
    type metadata accessor for SharingModel();
    sub_10009699C((unint64_t *)&qword_10010BF20, (void (*)(uint64_t))type metadata accessor for SharingModel);
    uint64_t v50 = sub_1000C6B30();
    uint64_t v49 = v30;
    uint64_t v31 = sub_1000C6B30();
    uint64_t v33 = v32;
    char v34 = sub_1000C6EB0();
    char v76 = v24;
    char v73 = 0;
    char v70 = 1;
    char v67 = v28;
    char v65 = v29;
    char v62 = 0;
    *(_DWORD *)(a2 + 17) = *(_DWORD *)v75;
    *(_DWORD *)(a2 + 20) = *(_DWORD *)&v75[3];
    *(_DWORD *)(a2 + 33) = *(_DWORD *)v74;
    *(_DWORD *)(a2 + 36) = *(_DWORD *)&v74[3];
    int v35 = *(_DWORD *)v72;
    *(_DWORD *)(a2 + 76) = *(_DWORD *)&v72[3];
    *(_DWORD *)(a2 + 73) = v35;
    *(_DWORD *)(a2 + 105) = *(_DWORD *)v71;
    *(_DWORD *)(a2 + 108) = *(_DWORD *)&v71[3];
    LOBYTE(v35) = v70;
    *(_DWORD *)(a2 + 130) = v68;
    *(_WORD *)(a2 + 134) = v69;
    char v36 = v67;
    *(_DWORD *)(a2 + 145) = *(_DWORD *)v66;
    *(_DWORD *)(a2 + 148) = *(_DWORD *)&v66[3];
    char v37 = v65;
    int v38 = *(_DWORD *)v64;
    *(_DWORD *)(a2 + 164) = *(_DWORD *)&v64[3];
    *(_DWORD *)(a2 + 161) = v38;
    *(_DWORD *)(a2 + 220) = *(_DWORD *)&v63[3];
    *(_DWORD *)(a2 + 217) = *(_DWORD *)v63;
    LOBYTE(v38) = v62;
    uint64_t v40 = v59;
    uint64_t v39 = v60;
    *(void *)a2 = v60;
    *(void *)(a2 + 8) = v40;
    *(unsigned char *)(a2 + 16) = v24;
    char v41 = v24;
    *(void *)(a2 + 24) = v61;
    *(unsigned char *)(a2 + 32) = v21;
    *(void *)(a2 + 40) = 0;
    *(void *)(a2 + 48) = 0;
    *(_OWORD *)(a2 + 56) = xmmword_1000D0830;
    *(unsigned char *)(a2 + 72) = 0;
    uint64_t v42 = v58;
    uint64_t v43 = v57;
    *(void *)(a2 + 80) = v58;
    *(void *)(a2 + 88) = v43;
    *(void *)(a2 + 96) = KeyPath;
    *(unsigned char *)(a2 + 104) = v22;
    *(void *)(a2 + 112) = v52;
    *(void *)(a2 + 120) = 0;
    *(unsigned char *)(a2 + 128) = v35;
    *(unsigned char *)(a2 + 129) = 0;
    *(void *)(a2 + 136) = v55;
    *(unsigned char *)(a2 + 144) = v36;
    *(void *)(a2 + 152) = v54;
    *(unsigned char *)(a2 + 160) = v37;
    uint64_t v44 = v51;
    *(void *)(a2 + 168) = v53;
    *(void *)(a2 + 176) = v44;
    uint64_t v45 = v49;
    *(void *)(a2 + 184) = v50;
    *(void *)(a2 + 192) = v45;
    *(void *)(a2 + 200) = v31;
    *(void *)(a2 + 208) = v33;
    *(unsigned char *)(a2 + 216) = v34;
    *(void *)(a2 + 224) = 0xC024000000000000;
    *(void *)(a2 + 232) = 0;
    *(void *)(a2 + 240) = 0;
    *(void *)(a2 + 248) = 0;
    *(unsigned char *)(a2 + 256) = v38;
    char v46 = v41;
    sub_100039224(v39, v40, v41);
    swift_bridgeObjectRetain();
    sub_100097050(v42, v43);
    sub_100097094(v42, v43);
    sub_100039234(v39, v40, v46);
    return swift_bridgeObjectRelease();
  }
  else
  {
    type metadata accessor for SharingModel();
    sub_10009699C((unint64_t *)&qword_10010BF20, (void (*)(uint64_t))type metadata accessor for SharingModel);
    uint64_t result = sub_1000C6B20();
    __break(1u);
  }
  return result;
}

uint64_t sub_1000903FC()
{
  if (*(unsigned char *)v0 == 1)
  {
    uint64_t v1 = (objc_class *)[self mainBundle];
    v99._unint64_t object = (void *)0xE90000000000006BLL;
    v85._countAndFlagsBits = 0x80000001000D8AC0;
    v99._countAndFlagsBits = 0x6E694C20646E6553;
    v114.value._countAndFlagsBits = 0;
    v114.value._unint64_t object = 0;
    v2.super.Class isa = v1;
    v129._countAndFlagsBits = 0;
    v129._unint64_t object = (void *)0xE000000000000000;
    uint64_t v3 = sub_1000C6320(v99, v114, v2, v129, v85);

    return v3;
  }
  sub_100012854((uint64_t *)&unk_10010C5E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1000CE630;
  *(unsigned char *)(inited + 32) = 7;
  uint64_t v6 = self;
  uint64_t v7 = (objc_class *)[v6 mainBundle];
  v100._unint64_t object = (void *)0xEA00000000006574;
  v85._countAndFlagsBits = 0x80000001000D87C0;
  v100._countAndFlagsBits = 0x6F4E206572616853;
  v115.value._countAndFlagsBits = 0;
  v115.value._unint64_t object = 0;
  v8.super.Class isa = v7;
  v130._countAndFlagsBits = 0;
  v130._unint64_t object = (void *)0xE000000000000000;
  uint64_t v9 = sub_1000C6320(v100, v115, v8, v130, v85);
  uint64_t v11 = v10;

  *(void *)(inited + 40) = v9;
  *(void *)(inited + 48) = v11;
  *(unsigned char *)(inited + 56) = 8;
  uint64_t v12 = (objc_class *)[v6 mainBundle];
  v86._countAndFlagsBits = 0x80000001000D87F0;
  v101._countAndFlagsBits = 0x6F46206572616853;
  v101._unint64_t object = (void *)0xEC0000007265646CLL;
  v116.value._countAndFlagsBits = 0;
  v116.value._unint64_t object = 0;
  v13.super.Class isa = v12;
  v131._countAndFlagsBits = 0;
  v131._unint64_t object = (void *)0xE000000000000000;
  uint64_t v14 = sub_1000C6320(v101, v116, v13, v131, v86);
  uint64_t v16 = v15;

  *(void *)(inited + 64) = v14;
  *(void *)(inited + 72) = v16;
  *(unsigned char *)(inited + 80) = 9;
  char v17 = (objc_class *)[v6 mainBundle];
  v102._unint64_t object = (void *)0xEA00000000007473;
  v87._countAndFlagsBits = 0x80000001000D8820;
  v102._countAndFlagsBits = 0x694C206572616853;
  v117.value._countAndFlagsBits = 0;
  v117.value._unint64_t object = 0;
  v18.super.Class isa = v17;
  v132._countAndFlagsBits = 0;
  v132._unint64_t object = (void *)0xE000000000000000;
  uint64_t v19 = sub_1000C6320(v102, v117, v18, v132, v87);
  uint64_t v21 = v20;

  *(void *)(inited + 88) = v19;
  *(void *)(inited + 96) = v21;
  *(unsigned char *)(inited + 104) = 10;
  char v22 = (objc_class *)[v6 mainBundle];
  v88._countAndFlagsBits = 0x80000001000D8850;
  v103._countAndFlagsBits = 0x6154206572616853;
  v103._unint64_t object = (void *)0xEF70756F72472062;
  v118.value._countAndFlagsBits = 0;
  v118.value._unint64_t object = 0;
  v23.super.Class isa = v22;
  v133._countAndFlagsBits = 0;
  v133._unint64_t object = (void *)0xE000000000000000;
  uint64_t v24 = sub_1000C6320(v103, v118, v23, v133, v88);
  uint64_t v26 = v25;

  *(void *)(inited + 112) = v24;
  *(void *)(inited + 120) = v26;
  *(unsigned char *)(inited + 128) = 11;
  uint64_t v27 = (objc_class *)[v6 mainBundle];
  v89._countAndFlagsBits = 0x80000001000D8880;
  v104._countAndFlagsBits = 0x6F42206572616853;
  v104._unint64_t object = (void *)0xEB00000000647261;
  v119.value._countAndFlagsBits = 0;
  v119.value._unint64_t object = 0;
  v28.super.Class isa = v27;
  v134._countAndFlagsBits = 0;
  v134._unint64_t object = (void *)0xE000000000000000;
  uint64_t v29 = sub_1000C6320(v104, v119, v28, v134, v89);
  uint64_t v31 = v30;

  *(void *)(inited + 136) = v29;
  *(void *)(inited + 144) = v31;
  *(unsigned char *)(inited + 152) = 0;
  uint64_t v32 = (objc_class *)[v6 mainBundle];
  v90._countAndFlagsBits = 0x80000001000D87F0;
  v105._countAndFlagsBits = 0x6F46206572616853;
  v105._unint64_t object = (void *)0xEC0000007265646CLL;
  v120.value._countAndFlagsBits = 0;
  v120.value._unint64_t object = 0;
  v33.super.Class isa = v32;
  v135._countAndFlagsBits = 0;
  v135._unint64_t object = (void *)0xE000000000000000;
  uint64_t v34 = sub_1000C6320(v105, v120, v33, v135, v90);
  uint64_t v36 = v35;

  *(void *)(inited + 160) = v34;
  *(void *)(inited + 168) = v36;
  *(unsigned char *)(inited + 176) = 1;
  char v37 = (objc_class *)[v6 mainBundle];
  v91._countAndFlagsBits = 0x80000001000D88C0;
  v106._countAndFlagsBits = 0x6946206572616853;
  v106._unint64_t object = (void *)0xEA0000000000656CLL;
  v121.value._countAndFlagsBits = 0;
  v121.value._unint64_t object = 0;
  v38.super.Class isa = v37;
  v136._countAndFlagsBits = 0;
  v136._unint64_t object = (void *)0xE000000000000000;
  uint64_t v39 = sub_1000C6320(v106, v121, v38, v136, v91);
  uint64_t v41 = v40;

  *(void *)(inited + 184) = v39;
  *(void *)(inited + 192) = v41;
  *(unsigned char *)(inited + 200) = 2;
  uint64_t v42 = (objc_class *)[v6 mainBundle];
  v107._countAndFlagsBits = 0xD000000000000011;
  v92._countAndFlagsBits = 0x80000001000D8910;
  v107._unint64_t object = (void *)0x80000001000D88F0;
  v122.value._countAndFlagsBits = 0;
  v122.value._unint64_t object = 0;
  v43.super.Class isa = v42;
  v137._countAndFlagsBits = 0;
  v137._unint64_t object = (void *)0xE000000000000000;
  uint64_t v44 = sub_1000C6320(v107, v122, v43, v137, v92);
  uint64_t v46 = v45;

  *(void *)(inited + 208) = v44;
  *(void *)(inited + 216) = v46;
  *(unsigned char *)(inited + 224) = 3;
  uint64_t v47 = (objc_class *)[v6 mainBundle];
  v108._countAndFlagsBits = 0xD000000000000012;
  v93._countAndFlagsBits = 0x80000001000D8960;
  v108._unint64_t object = (void *)0x80000001000D8940;
  v123.value._countAndFlagsBits = 0;
  v123.value._unint64_t object = 0;
  v48.super.Class isa = v47;
  v138._countAndFlagsBits = 0;
  v138._unint64_t object = (void *)0xE000000000000000;
  uint64_t v49 = sub_1000C6320(v108, v123, v48, v138, v93);
  uint64_t v51 = v50;

  *(void *)(inited + 232) = v49;
  *(void *)(inited + 240) = v51;
  *(unsigned char *)(inited + 248) = 4;
  uint64_t v52 = (objc_class *)[v6 mainBundle];
  v94._countAndFlagsBits = 0x80000001000D8990;
  v109._countAndFlagsBits = 0x6D49206572616853;
  v109._unint64_t object = (void *)0xEB00000000656761;
  v124.value._countAndFlagsBits = 0;
  v124.value._unint64_t object = 0;
  v53.super.Class isa = v52;
  v139._countAndFlagsBits = 0;
  v139._unint64_t object = (void *)0xE000000000000000;
  uint64_t v54 = sub_1000C6320(v109, v124, v53, v139, v94);
  uint64_t v56 = v55;

  *(void *)(inited + 256) = v54;
  *(void *)(inited + 264) = v56;
  *(unsigned char *)(inited + 272) = 5;
  uint64_t v57 = (objc_class *)[v6 mainBundle];
  v110._unint64_t object = (void *)0xEB00000000656976;
  v95._countAndFlagsBits = 0x80000001000D89C0;
  v110._countAndFlagsBits = 0x6F4D206572616853;
  v125.value._countAndFlagsBits = 0;
  v125.value._unint64_t object = 0;
  v58.super.Class isa = v57;
  v140._countAndFlagsBits = 0;
  v140._unint64_t object = (void *)0xE000000000000000;
  uint64_t v59 = sub_1000C6320(v110, v125, v58, v140, v95);
  uint64_t v61 = v60;

  *(void *)(inited + 280) = v59;
  *(void *)(inited + 288) = v61;
  *(unsigned char *)(inited + 296) = 6;
  char v62 = (objc_class *)[v6 mainBundle];
  v96._countAndFlagsBits = 0x80000001000D89F0;
  v111._countAndFlagsBits = 0x4450206572616853;
  v111._unint64_t object = (void *)0xE900000000000046;
  v126.value._countAndFlagsBits = 0;
  v126.value._unint64_t object = 0;
  v63.super.Class isa = v62;
  v141._countAndFlagsBits = 0;
  v141._unint64_t object = (void *)0xE000000000000000;
  uint64_t v64 = sub_1000C6320(v111, v126, v63, v141, v96);
  uint64_t v66 = v65;

  *(void *)(inited + 304) = v64;
  *(void *)(inited + 312) = v66;
  *(unsigned char *)(inited + 320) = 13;
  char v67 = (objc_class *)[v6 mainBundle];
  v112._countAndFlagsBits = 0xD00000000000001ALL;
  v97._countAndFlagsBits = 0x80000001000D8A40;
  v112._unint64_t object = (void *)0x80000001000D8A20;
  v127.value._countAndFlagsBits = 0;
  v127.value._unint64_t object = 0;
  v68.super.Class isa = v67;
  v142._countAndFlagsBits = 0x706F655020646441;
  v142._unint64_t object = (void *)0xEA0000000000656CLL;
  uint64_t v69 = sub_1000C6320(v112, v127, v68, v142, v97);
  uint64_t v71 = v70;

  *(void *)(inited + 328) = v69;
  *(void *)(inited + 336) = v71;
  unint64_t v72 = sub_10004E6A4(inited);
  if (!*(void *)(v0 + 8))
  {
    type metadata accessor for SharingModel();
    sub_10009699C((unint64_t *)&qword_10010BF20, (void (*)(uint64_t))type metadata accessor for SharingModel);
    uint64_t result = sub_1000C6B20();
    __break(1u);
    return result;
  }
  uint64_t v73 = v72;
  swift_retain();
  uint64_t v74 = sub_10003B628(v73);
  uint64_t v76 = v75;
  swift_release();
  if (!*(void *)(v73 + 16)) {
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  unint64_t v77 = sub_1000727A0(13);
  if ((v78 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_10:
    swift_bridgeObjectRelease();
    return v74;
  }
  uint64_t v79 = (uint64_t *)(*(void *)(v73 + 56) + 16 * v77);
  uint64_t v81 = *v79;
  uint64_t v80 = v79[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (v74 == v81 && v76 == v80)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_14;
  }
  char v82 = sub_1000C7A50();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v82)
  {
LABEL_14:
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1000C67E0();
    swift_release();
    swift_release();
    swift_release();
    if (HIBYTE(v98._object) == 3)
    {
      swift_bridgeObjectRelease();
      uint64_t v83 = (objc_class *)[v6 mainBundle];
      v98._countAndFlagsBits = 0x80000001000D8A80;
      v113._countAndFlagsBits = 0x706F655020646441;
      v113._unint64_t object = (void *)0xEA0000000000656CLL;
      v128.value._countAndFlagsBits = 0;
      v128.value._unint64_t object = 0;
      v84.super.Class isa = v83;
      v143._countAndFlagsBits = 0;
      v143._unint64_t object = (void *)0xE000000000000000;
      uint64_t v74 = sub_1000C6320(v113, v128, v84, v143, v98);
    }
  }
  return v74;
}

uint64_t sub_100090D70()
{
  sub_100012854((uint64_t *)&unk_10010C5E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1000CD6C0;
  *(unsigned char *)(inited + 32) = 7;
  uint64_t v1 = self;
  NSBundle v2 = (objc_class *)[v1 mainBundle];
  v57._countAndFlagsBits = 0xD000000000000045;
  v48._countAndFlagsBits = 0x80000001000D8480;
  v57._unint64_t object = (void *)0x80000001000D8430;
  v65.value._countAndFlagsBits = 0;
  v65.value._unint64_t object = 0;
  v3.super.Class isa = v2;
  v73._countAndFlagsBits = 0;
  v73._unint64_t object = (void *)0xE000000000000000;
  uint64_t v4 = sub_1000C6320(v57, v65, v3, v73, v48);
  uint64_t v6 = v5;

  *(void *)(inited + 40) = v4;
  *(void *)(inited + 48) = v6;
  *(unsigned char *)(inited + 56) = 9;
  uint64_t v7 = (objc_class *)[v1 mainBundle];
  v58._countAndFlagsBits = 0xD000000000000017;
  v49._countAndFlagsBits = 0x80000001000D8520;
  v58._unint64_t object = (void *)0x80000001000D84B0;
  v66.value._countAndFlagsBits = 0;
  v66.value._unint64_t object = 0;
  v8.super.Class isa = v7;
  v74._countAndFlagsBits = 0xD000000000000040;
  v74._unint64_t object = (void *)0x80000001000D84D0;
  uint64_t v9 = sub_1000C6320(v58, v66, v8, v74, v49);
  uint64_t v11 = v10;

  *(void *)(inited + 64) = v9;
  *(void *)(inited + 72) = v11;
  *(unsigned char *)(inited + 80) = 10;
  uint64_t v12 = (objc_class *)[v1 mainBundle];
  v59._countAndFlagsBits = 0xD00000000000001CLL;
  v50._countAndFlagsBits = 0x80000001000D8570;
  v59._unint64_t object = (void *)0x80000001000D8550;
  v67.value._countAndFlagsBits = 0;
  v67.value._unint64_t object = 0;
  v13.super.Class isa = v12;
  v75._countAndFlagsBits = 0xD000000000000040;
  v75._unint64_t object = (void *)0x80000001000D84D0;
  uint64_t v14 = sub_1000C6320(v59, v67, v13, v75, v50);
  uint64_t v16 = v15;

  *(void *)(inited + 88) = v14;
  *(void *)(inited + 96) = v16;
  *(unsigned char *)(inited + 104) = 11;
  char v17 = (objc_class *)[v1 mainBundle];
  v60._countAndFlagsBits = 0xD000000000000018;
  v51._countAndFlagsBits = 0x80000001000D85C0;
  v60._unint64_t object = (void *)0x80000001000D85A0;
  v68.value._countAndFlagsBits = 0;
  v68.value._unint64_t object = 0;
  v18.super.Class isa = v17;
  v76._countAndFlagsBits = 0xD000000000000040;
  v76._unint64_t object = (void *)0x80000001000D84D0;
  uint64_t v19 = sub_1000C6320(v60, v68, v18, v76, v51);
  uint64_t v21 = v20;

  *(void *)(inited + 112) = v19;
  *(void *)(inited + 120) = v21;
  *(unsigned char *)(inited + 128) = 13;
  char v22 = (objc_class *)[v1 mainBundle];
  v61._countAndFlagsBits = 0xD000000000000021;
  v52._countAndFlagsBits = 0x80000001000D8620;
  v61._unint64_t object = (void *)0x80000001000D85F0;
  v69.value._countAndFlagsBits = 0;
  v69.value._unint64_t object = 0;
  v23.super.Class isa = v22;
  v77._countAndFlagsBits = 0xD000000000000040;
  v77._unint64_t object = (void *)0x80000001000D84D0;
  uint64_t v24 = sub_1000C6320(v61, v69, v23, v77, v52);
  uint64_t v26 = v25;

  *(void *)(inited + 136) = v24;
  *(void *)(inited + 144) = v26;
  unint64_t v27 = sub_10004E6A4(inited);
  NSBundle v28 = (objc_class *)[v1 mainBundle];
  v62._countAndFlagsBits = 0xD000000000000043;
  v53._countAndFlagsBits = 0x80000001000D86B0;
  v62._unint64_t object = (void *)0x80000001000D8660;
  v70.value._countAndFlagsBits = 0;
  v70.value._unint64_t object = 0;
  v29.super.Class isa = v28;
  v78._countAndFlagsBits = 0;
  v78._unint64_t object = (void *)0xE000000000000000;
  uint64_t v30 = sub_1000C6320(v62, v70, v29, v78, v53);
  uint64_t v32 = v31;

  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1000330AC(v30, v32, 8, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  uint64_t v34 = (objc_class *)[v1 mainBundle];
  v63._countAndFlagsBits = 0xD000000000000050;
  v54._countAndFlagsBits = 0x80000001000D86B0;
  v63._unint64_t object = (void *)0x80000001000D86E0;
  v71.value._countAndFlagsBits = 0;
  v71.value._unint64_t object = 0;
  v35.super.Class isa = v34;
  v79._countAndFlagsBits = 0;
  v79._unint64_t object = (void *)0xE000000000000000;
  uint64_t v36 = sub_1000C6320(v63, v71, v35, v79, v54);
  uint64_t v38 = v37;

  char v39 = swift_isUniquelyReferenced_nonNull_native();
  sub_1000330AC(v36, v38, 0, v39);
  swift_bridgeObjectRelease();
  uint64_t v40 = (objc_class *)[v1 mainBundle];
  v64._countAndFlagsBits = 0xD00000000000004ELL;
  v55._countAndFlagsBits = 0x80000001000D8790;
  v64._unint64_t object = (void *)0x80000001000D8740;
  v72.value._countAndFlagsBits = 0;
  v72.value._unint64_t object = 0;
  v41.super.Class isa = v40;
  v80._countAndFlagsBits = 0;
  v80._unint64_t object = (void *)0xE000000000000000;
  uint64_t v42 = sub_1000C6320(v64, v72, v41, v80, v55);
  uint64_t v44 = v43;

  char v45 = swift_isUniquelyReferenced_nonNull_native();
  sub_1000330AC(v42, v44, 1, v45);
  swift_bridgeObjectRelease();
  if (*(void *)(v56 + 8))
  {
    swift_retain();
    uint64_t v46 = sub_10003B628(v27);
    swift_release();
    swift_bridgeObjectRelease();
    return v46;
  }
  else
  {
    type metadata accessor for SharingModel();
    sub_10009699C((unint64_t *)&qword_10010BF20, (void (*)(uint64_t))type metadata accessor for SharingModel);
    uint64_t result = sub_1000C6B20();
    __break(1u);
  }
  return result;
}

uint64_t sub_1000912C0(_OWORD *a1)
{
  uint64_t v2 = sub_100012854(&qword_10010DF30);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100012854(&qword_10010DF20);
  uint64_t v6 = v5 - 8;
  __chkstk_darwin(v5);
  NSBundle v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100012854(&qword_10010DF00);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v4 = sub_1000C6D20();
  *((void *)v4 + 1) = 0;
  v4[16] = 0;
  uint64_t v12 = sub_100012854(&qword_10010DF88);
  sub_1000915F8((uint64_t)a1, (uint64_t)&v4[*(int *)(v12 + 44)]);
  sub_10001A740((uint64_t)v4, (uint64_t)v8, &qword_10010DF30);
  NSBundle v13 = &v8[*(int *)(v6 + 44)];
  *(_OWORD *)NSBundle v13 = xmmword_1000D0840;
  *((_OWORD *)v13 + 1) = xmmword_1000D0840;
  v13[32] = 0;
  sub_10001326C((uint64_t)v4, &qword_10010DF30);
  id v14 = [self systemGroupedBackgroundColor];
  uint64_t v24 = sub_1000C7180();
  swift_retain();
  uint64_t v15 = sub_1000C7270();
  sub_10001A740((uint64_t)v8, (uint64_t)v11, &qword_10010DF20);
  swift_release();
  *(void *)&v11[*(int *)(v9 + 36)] = v15;
  sub_10001326C((uint64_t)v8, &qword_10010DF20);
  long long v23 = *(_OWORD *)((char *)a1 + 40);
  sub_100012854(&qword_10010DF90);
  sub_1000C7210();
  uint64_t v16 = (_OWORD *)swift_allocObject();
  long long v17 = a1[9];
  v16[9] = a1[8];
  v16[10] = v17;
  v16[11] = a1[10];
  long long v18 = a1[5];
  v16[5] = a1[4];
  v16[6] = v18;
  long long v19 = a1[7];
  v16[7] = a1[6];
  v16[8] = v19;
  long long v20 = a1[1];
  v16[1] = *a1;
  v16[2] = v20;
  long long v21 = a1[3];
  v16[3] = a1[2];
  void v16[4] = v21;
  sub_10008DD6C((uint64_t)a1);
  sub_100012854(&qword_10010DF08);
  sub_100096348();
  sub_1000964AC();
  sub_100096500();
  sub_1000C70E0();
  swift_release();
  swift_release();
  swift_release();
  return sub_10001326C((uint64_t)v11, &qword_10010DF00);
}

uint64_t sub_1000915F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100012854(&qword_10010E000);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (void *)((char *)v27 - v8);
  uint64_t v10 = (objc_class *)[self mainBundle];
  v26._countAndFlagsBits = 0x80000001000D83E0;
  v28._unint64_t object = (void *)0x80000001000D83A0;
  v28._countAndFlagsBits = 0x1000000000000030;
  v29.value._countAndFlagsBits = 0;
  v29.value._unint64_t object = 0;
  v11.super.Class isa = v10;
  v30._countAndFlagsBits = 0;
  v30._unint64_t object = (void *)0xE000000000000000;
  uint64_t v12 = sub_1000C6320(v28, v29, v11, v30, v26);
  uint64_t v14 = v13;

  v27[0] = v12;
  v27[1] = v14;
  sub_1000363CC();
  uint64_t v15 = sub_1000C7000();
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  char v21 = v20 & 1;
  *uint64_t v9 = sub_1000C7330();
  v9[1] = v22;
  uint64_t v23 = sub_100012854(&qword_10010E008);
  sub_100091804(a1, (char *)v9 + *(int *)(v23 + 44));
  sub_10001A740((uint64_t)v9, (uint64_t)v7, &qword_10010E000);
  *(void *)a2 = v15;
  *(void *)(a2 + 8) = v17;
  *(unsigned char *)(a2 + 16) = v21;
  *(void *)(a2 + 24) = v19;
  uint64_t v24 = sub_100012854(&qword_10010E010);
  sub_10001A740((uint64_t)v7, a2 + *(int *)(v24 + 48), &qword_10010E000);
  sub_100039224(v15, v17, v21);
  swift_bridgeObjectRetain();
  sub_10001326C((uint64_t)v9, &qword_10010E000);
  sub_10001326C((uint64_t)v7, &qword_10010E000);
  sub_100039234(v15, v17, v21);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100091804@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  Swift::String v73 = a2;
  uint64_t v3 = sub_100012854(&qword_10010E018);
  uint64_t v60 = *(void *)(v3 - 8);
  uint64_t v61 = v3;
  __chkstk_darwin(v3);
  Swift::String v58 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_100012854(&qword_10010E020);
  __chkstk_darwin(v57);
  Swift::String v62 = (uint64_t (*)())((char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_100012854(&qword_10010E028);
  Swift::String_optional v70 = *(char **)(v6 - 8);
  uint64_t v71 = v6;
  __chkstk_darwin(v6);
  uint64_t v59 = (uint64_t)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100012854(&qword_10010E030);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v72 = (uint64_t)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v57 - v11;
  uint64_t v13 = *(void *)(a1 + 8);
  if (v13)
  {
    v95[0] = *(_OWORD *)(a1 + 40);
    swift_retain();
    sub_100012854(&qword_10010DF90);
    sub_1000C7210();
    uint64_t v93 = v97;
    uint64_t v94 = v96;
    int v92 = v98;
    long long v14 = *(_OWORD *)(a1 + 72);
    v95[0] = *(_OWORD *)(a1 + 56);
    v95[1] = v14;
    v95[2] = *(_OWORD *)(a1 + 88);
    *(void *)&v95[3] = *(void *)(a1 + 104);
    sub_100012854(&qword_10010DFB0);
    sub_1000C7210();
    uint64_t v90 = v97;
    uint64_t v91 = v96;
    uint64_t v88 = v99;
    uint64_t v89 = v98;
    uint64_t v86 = v101;
    uint64_t v87 = v100;
    uint64_t v84 = v103;
    uint64_t v85 = v102;
    v95[0] = *(_OWORD *)(a1 + 112);
    *(void *)&v95[1] = *(void *)(a1 + 128);
    sub_100012854(&qword_10010DFA8);
    sub_1000C7210();
    uint64_t v82 = v97;
    uint64_t v83 = v96;
    uint64_t v80 = v99;
    uint64_t v81 = v98;
    v95[0] = *(_OWORD *)(a1 + 136);
    *(void *)&v95[1] = *(void *)(a1 + 152);
    sub_100012854(&qword_10010DFE8);
    sub_1000C7210();
    uint64_t v78 = v97;
    uint64_t v79 = v96;
    uint64_t v76 = v99;
    uint64_t v77 = v98;
    unsigned __int8 v134 = 0;
    int v69 = sub_1000C6EA0();
    sub_1000C6940();
    uint64_t v16 = v15;
    uint64_t v18 = v17;
    uint64_t v20 = v19;
    uint64_t v22 = v21;
    int v68 = v134;
    unsigned __int8 v135 = 0;
    sub_1000C7330();
    uint64_t v23 = 1;
    sub_1000C69F0();
    unsigned __int8 v24 = v137;
    uint64_t v66 = v138;
    uint64_t v67 = v136;
    unsigned __int8 v25 = v139;
    uint64_t v64 = v141;
    uint64_t v65 = v140;
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1000C67E0();
    swift_release();
    swift_release();
    swift_release();
    int v26 = v96;
    int v63 = v135;
    unsigned __int8 v133 = v24;
    unsigned __int8 v132 = v25;
    int v74 = v24;
    int v75 = v25;
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1000C67E0();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v27 = v71;
    if (v96 - 1 < 2)
    {
      Swift::String v28 = v58;
      sub_1000C6990();
      sub_1000C7350();
      uint64_t v30 = v29;
      uint64_t v32 = v31;
      uint64_t v34 = v60;
      uint64_t v33 = v61;
      uint64_t v35 = (uint64_t)v62;
      (*(void (**)(uint64_t (*)(), char *, uint64_t))(v60 + 16))(v62, v28, v61);
      uint64_t v36 = v35 + *(int *)(v57 + 36);
      __asm { FMOV            V0.2D, #1.0 }
      *(_OWORD *)uint64_t v36 = _Q0;
      *(void *)(v36 + 16) = v30;
      *(void *)(v36 + 24) = v32;
      (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v33);
      sub_1000C7330();
      sub_1000C69F0();
      uint64_t v42 = v59;
      sub_10001A740(v35, v59, &qword_10010E020);
      uint64_t v43 = (_OWORD *)(v42 + *(int *)(v27 + 36));
      long long v44 = v143;
      _OWORD *v43 = v142;
      v43[1] = v44;
      v43[2] = v144;
      sub_10001326C(v35, &qword_10010E020);
      sub_100096F8C(v42, (uint64_t)v12);
      uint64_t v23 = 0;
    }
    (*((void (**)(char *, uint64_t, uint64_t, uint64_t))v70 + 7))(v12, v23, 1, v27);
    if ((v26 - 1) >= 2) {
      double v45 = 1.0;
    }
    else {
      double v45 = 0.0;
    }
    uint64_t v46 = v72;
    sub_10001A740((uint64_t)v12, v72, &qword_10010E030);
    *(void *)&v95[0] = v13;
    *((void *)&v95[0] + 1) = v94;
    *(void *)&v95[1] = v93;
    BYTE8(v95[1]) = v92;
    Swift::String_optional v70 = v12;
    uint64_t v71 = v13;
    *(void *)&v95[2] = v91;
    *((void *)&v95[2] + 1) = v90;
    *(void *)&v95[3] = v89;
    *((void *)&v95[3] + 1) = v88;
    *(void *)&v95[4] = v87;
    *((void *)&v95[4] + 1) = v86;
    *(void *)&v95[5] = v85;
    *((void *)&v95[5] + 1) = v84;
    *(void *)&v95[6] = v83;
    *((void *)&v95[6] + 1) = v82;
    *(void *)&v95[7] = v81;
    *((void *)&v95[7] + 1) = v80;
    *(void *)&v95[8] = v79;
    *((void *)&v95[8] + 1) = v78;
    *(void *)&v95[9] = v77;
    *((void *)&v95[9] + 1) = v76;
    Swift::String v62 = sub_10008C82C;
    *(void *)&v95[10] = sub_10008C82C;
    *((void *)&v95[10] + 1) = 0;
    char v48 = v68;
    char v47 = v69;
    LOBYTE(v95[11]) = v68;
    BYTE8(v95[11]) = v69;
    *(void *)&v95[12] = v16;
    *((void *)&v95[12] + 1) = v18;
    *(void *)&v95[13] = v20;
    *((void *)&v95[13] + 1) = v22;
    char v49 = v63;
    LOBYTE(v95[14]) = v63;
    uint64_t v51 = v66;
    uint64_t v50 = v67;
    *((void *)&v95[14] + 1) = v67;
    LOBYTE(v95[15]) = v74;
    *((void *)&v95[15] + 1) = v66;
    LOBYTE(v95[16]) = v75;
    uint64_t v53 = v64;
    uint64_t v52 = v65;
    *((void *)&v95[16] + 1) = v65;
    *(void *)&v95[17] = v64;
    *((double *)&v95[17] + 1) = v45;
    Swift::String v54 = v73;
    memcpy(v73, v95, 0x120uLL);
    uint64_t v55 = sub_100012854(&qword_10010E038);
    sub_10001A740(v46, (uint64_t)v54 + *(int *)(v55 + 48), &qword_10010E030);
    sub_100096D64((uint64_t)v95);
    sub_10001326C((uint64_t)v70, &qword_10010E030);
    sub_10001326C(v46, &qword_10010E030);
    uint64_t v96 = v71;
    uint64_t v97 = v94;
    uint64_t v98 = v93;
    LOBYTE(v99) = v92;
    uint64_t v100 = v91;
    uint64_t v101 = v90;
    uint64_t v102 = v89;
    uint64_t v103 = v88;
    uint64_t v104 = v87;
    uint64_t v105 = v86;
    uint64_t v106 = v85;
    uint64_t v107 = v84;
    uint64_t v108 = v83;
    uint64_t v109 = v82;
    uint64_t v110 = v81;
    uint64_t v111 = v80;
    uint64_t v112 = v79;
    uint64_t v113 = v78;
    uint64_t v114 = v77;
    uint64_t v115 = v76;
    Swift::String_optional v116 = v62;
    uint64_t v117 = 0;
    char v118 = v48;
    char v119 = v47;
    uint64_t v120 = v16;
    uint64_t v121 = v18;
    uint64_t v122 = v20;
    uint64_t v123 = v22;
    char v124 = v49;
    uint64_t v125 = v50;
    char v126 = v74;
    uint64_t v127 = v51;
    char v128 = v75;
    uint64_t v129 = v52;
    uint64_t v130 = v53;
    double v131 = v45;
    return sub_100096E78((uint64_t)&v96);
  }
  else
  {
    type metadata accessor for SharingModel();
    sub_10009699C((unint64_t *)&qword_10010BF20, (void (*)(uint64_t))type metadata accessor for SharingModel);
    uint64_t result = sub_1000C6B20();
    __break(1u);
  }
  return result;
}

uint64_t sub_100092084@<X0>(uint64_t a1@<X8>)
{
  sub_1000C6D00();
  uint64_t result = sub_1000C6FF0();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_100092104()
{
  sub_100012854(&qword_10010BDE0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1000CABA0;
  *(void *)(v0 + 56) = &type metadata for String;
  *(void *)(v0 + 32) = 0xD000000000000010;
  *(void *)(v0 + 40) = 0x80000001000D8380;
  sub_1000C7B00();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100092198@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_100012854(&qword_10010DF98);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100012854(&qword_10010DFA0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_100012854(&qword_10010DF50);
  __chkstk_darwin(v55);
  uint64_t v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for ComposeMailView(0);
  __chkstk_darwin(v14);
  uint64_t v16 = (uint64_t *)((char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  switch(*a1)
  {
    case 1:
      long long v60 = *(_OWORD *)(a2 + 112);
      *(void *)&long long v61 = *(void *)(a2 + 128);
      sub_100012854(&qword_10010DFA8);
      sub_1000C71F0();
      *(void *)&long long v54 = a3;
      long long v43 = v56;
      long long v44 = (_OWORD *)swift_allocObject();
      long long v45 = *(_OWORD *)(a2 + 144);
      v44[9] = *(_OWORD *)(a2 + 128);
      v44[10] = v45;
      v44[11] = *(_OWORD *)(a2 + 160);
      long long v46 = *(_OWORD *)(a2 + 80);
      v44[5] = *(_OWORD *)(a2 + 64);
      v44[6] = v46;
      long long v47 = *(_OWORD *)(a2 + 112);
      v44[7] = *(_OWORD *)(a2 + 96);
      v44[8] = v47;
      long long v48 = *(_OWORD *)(a2 + 16);
      v44[1] = *(_OWORD *)a2;
      v44[2] = v48;
      long long v49 = *(_OWORD *)(a2 + 48);
      v44[3] = *(_OWORD *)(a2 + 32);
      v44[4] = v49;
      *(void *)uint64_t v11 = _swiftEmptyArrayStorage;
      *(_OWORD *)(v11 + 8) = v43;
      *((void *)v11 + 3) = sub_100096820;
      *((void *)v11 + 4) = v44;
      swift_storeEnumTagMultiPayload();
      sub_10008DD6C(a2);
      sub_10009699C(&qword_10010B860, (void (*)(uint64_t))type metadata accessor for ComposeMailView);
      sub_10008992C();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1000C6D50();
      sub_10001A740((uint64_t)v13, (uint64_t)v8, &qword_10010DF50);
      swift_storeEnumTagMultiPayload();
      sub_100012854(&qword_10010DF60);
      sub_10009657C();
      sub_100096628();
      sub_1000C6D50();
      sub_10001326C((uint64_t)v13, &qword_10010DF50);
      swift_release();
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 2:
      uint64_t v29 = (_OWORD *)swift_allocObject();
      long long v30 = *(_OWORD *)(a2 + 144);
      v29[9] = *(_OWORD *)(a2 + 128);
      v29[10] = v30;
      v29[11] = *(_OWORD *)(a2 + 160);
      long long v31 = *(_OWORD *)(a2 + 80);
      v29[5] = *(_OWORD *)(a2 + 64);
      v29[6] = v31;
      long long v32 = *(_OWORD *)(a2 + 112);
      v29[7] = *(_OWORD *)(a2 + 96);
      v29[8] = v32;
      long long v33 = *(_OWORD *)(a2 + 16);
      v29[1] = *(_OWORD *)a2;
      v29[2] = v33;
      long long v34 = *(_OWORD *)(a2 + 48);
      uint64_t v29[3] = *(_OWORD *)(a2 + 32);
      v29[4] = v34;
      *(void *)&long long v56 = _swiftEmptyArrayStorage;
      *((void *)&v56 + 1) = sub_1000967A8;
      *(void *)&long long v57 = v29;
      BYTE8(v57) = 1;
      goto LABEL_5;
    case 3:
      uint64_t v35 = (_OWORD *)swift_allocObject();
      long long v36 = *(_OWORD *)(a2 + 144);
      v35[9] = *(_OWORD *)(a2 + 128);
      v35[10] = v36;
      v35[11] = *(_OWORD *)(a2 + 160);
      long long v37 = *(_OWORD *)(a2 + 80);
      v35[5] = *(_OWORD *)(a2 + 64);
      v35[6] = v37;
      long long v38 = *(_OWORD *)(a2 + 112);
      v35[7] = *(_OWORD *)(a2 + 96);
      v35[8] = v38;
      long long v39 = *(_OWORD *)(a2 + 16);
      v35[1] = *(_OWORD *)a2;
      v35[2] = v39;
      long long v40 = *(_OWORD *)(a2 + 48);
      v35[3] = *(_OWORD *)(a2 + 32);
      unsigned char v35[4] = v40;
      *(void *)&long long v56 = _swiftEmptyArrayStorage;
      *((void *)&v56 + 1) = sub_1000967E4;
      *(void *)&long long v57 = v35;
      BYTE8(v57) = 0;
LABEL_5:
      sub_10008DD6C(a2);
      sub_100081410();
      swift_retain();
      sub_1000C6D50();
      uint64_t v41 = v61;
      char v42 = BYTE8(v61);
      *(_OWORD *)uint64_t v8 = v60;
      *((void *)v8 + 2) = v41;
      v8[24] = v42;
      swift_storeEnumTagMultiPayload();
      sub_100012854(&qword_10010DF60);
      sub_10009657C();
      sub_100096628();
      sub_1000C6D50();
      uint64_t result = swift_release();
      break;
    default:
      long long v17 = *(_OWORD *)(a2 + 72);
      long long v56 = *(_OWORD *)(a2 + 56);
      long long v57 = v17;
      long long v58 = *(_OWORD *)(a2 + 88);
      uint64_t v59 = *(void *)(a2 + 104);
      sub_100012854(&qword_10010DFB0);
      sub_1000C7210();
      long long v54 = v60;
      long long v53 = v61;
      long long v52 = v62;
      uint64_t v51 = v63;
      uint64_t v50 = v64;
      uint64_t v18 = (uint64_t (*)(uint64_t, char))swift_allocObject();
      long long v19 = *(_OWORD *)(a2 + 144);
      *((_OWORD *)v18 + 9) = *(_OWORD *)(a2 + 128);
      *((_OWORD *)v18 + 10) = v19;
      *((_OWORD *)v18 + 11) = *(_OWORD *)(a2 + 160);
      long long v20 = *(_OWORD *)(a2 + 80);
      *((_OWORD *)v18 + 5) = *(_OWORD *)(a2 + 64);
      *((_OWORD *)v18 + 6) = v20;
      long long v21 = *(_OWORD *)(a2 + 112);
      *((_OWORD *)v18 + 7) = *(_OWORD *)(a2 + 96);
      *((_OWORD *)v18 + 8) = v21;
      long long v22 = *(_OWORD *)(a2 + 16);
      *((_OWORD *)v18 + 1) = *(_OWORD *)a2;
      *((_OWORD *)v18 + 2) = v22;
      long long v23 = *(_OWORD *)(a2 + 48);
      *((_OWORD *)v18 + 3) = *(_OWORD *)(a2 + 32);
      *((_OWORD *)v18 + 4) = v23;
      uint64_t *v16 = swift_getKeyPath();
      sub_100012854(&qword_10010B7B0);
      swift_storeEnumTagMultiPayload();
      unsigned __int8 v24 = (char *)v16 + *(int *)(v14 + 20);
      long long v25 = v53;
      *(_OWORD *)unsigned __int8 v24 = v54;
      *((_OWORD *)v24 + 1) = v25;
      *((_OWORD *)v24 + 2) = v52;
      uint64_t v26 = v50;
      *((void *)v24 + 6) = v51;
      *((void *)v24 + 7) = v26;
      uint64_t v27 = (uint64_t (**)(uint64_t, char))((char *)v16 + *(int *)(v14 + 24));
      *uint64_t v27 = sub_1000968CC;
      v27[1] = v18;
      sub_1000968DC((uint64_t)v16, (uint64_t)v11);
      swift_storeEnumTagMultiPayload();
      sub_10008DD6C(a2);
      sub_10009699C(&qword_10010B860, (void (*)(uint64_t))type metadata accessor for ComposeMailView);
      sub_10008992C();
      sub_1000C6D50();
      sub_10001A740((uint64_t)v13, (uint64_t)v8, &qword_10010DF50);
      swift_storeEnumTagMultiPayload();
      sub_100012854(&qword_10010DF60);
      sub_10009657C();
      sub_100096628();
      sub_1000C6D50();
      sub_10001326C((uint64_t)v13, &qword_10010DF50);
      uint64_t result = sub_100096940((uint64_t)v16);
      break;
  }
  return result;
}

uint64_t sub_1000928A8(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v6 = sub_1000C66D0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100012854(&qword_10010B770);
  uint64_t result = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    swift_errorRetain();
    sub_1000C66B0();
    swift_errorRetain();
    swift_errorRetain();
    long long v23 = sub_1000C66C0();
    os_log_type_t v24 = sub_1000C7670();
    if (os_log_type_enabled(v23, v24))
    {
      long long v25 = (uint8_t *)swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      *(_DWORD *)long long v25 = 136315138;
      v29[1] = v25 + 4;
      *(void *)&v30[0] = v26;
      uint64_t v32 = a1;
      swift_errorRetain();
      sub_100012854((uint64_t *)&unk_10010B010);
      uint64_t v27 = sub_1000C7450();
      uint64_t v32 = sub_1000720D0(v27, v28, (uint64_t *)v30);
      sub_1000C7850();
      swift_bridgeObjectRelease();
      sub_100047238(a1, 1);
      sub_100047238(a1, 1);
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "Failed to present Mail compose: %s", v25, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      sub_100047238(a1, 1);
    }
    else
    {
      sub_100047238(a1, 1);
      sub_100047238(a1, 1);
      swift_errorRelease();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  else if (a1 == 2)
  {
    uint64_t v14 = *(void *)(a3 + 8);
    if (v14)
    {
      long long v15 = *(_OWORD *)(a3 + 72);
      v30[0] = *(_OWORD *)(a3 + 56);
      v30[1] = v15;
      v30[2] = *(_OWORD *)(a3 + 88);
      uint64_t v31 = *(void *)(a3 + 104);
      swift_retain();
      sub_100012854(&qword_10010DFB0);
      sub_1000C71F0();
      swift_bridgeObjectRelease();
      uint64_t v16 = v33;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v16) {
        long long v17 = v16;
      }
      else {
        long long v17 = _swiftEmptyArrayStorage;
      }
      sub_1000B60FC((uint64_t)v17);
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v18 = *(void *)(a3 + 24);
      if (v18)
      {
        uint64_t v19 = sub_10009699C(&qword_10010DFB8, (void (*)(uint64_t))type metadata accessor for ActivitiesModelData);
        uint64_t v20 = sub_1000C7600();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v13, 1, 1, v20);
        sub_1000C75D0();
        swift_retain_n();
        swift_retain_n();
        uint64_t v21 = sub_1000C75C0();
        uint64_t v22 = swift_allocObject();
        *(void *)(v22 + 16) = v21;
        *(void *)(v22 + 24) = &protocol witness table for MainActor;
        *(void *)(v22 + 32) = v14;
        *(unsigned char *)(v22 + 40) = 1;
        *(void *)(v22 + 48) = v18;
        *(void *)(v22 + 56) = v19;
        sub_1000BD2A0((uint64_t)v13, (uint64_t)&unk_10010DFC8, v22);
        swift_release();
        swift_release();
        return swift_release();
      }
    }
    else
    {
      type metadata accessor for SharingModel();
      sub_10009699C((unint64_t *)&qword_10010BF20, (void (*)(uint64_t))type metadata accessor for SharingModel);
      sub_1000C6B20();
      __break(1u);
    }
    type metadata accessor for ActivitiesModelData();
    sub_10009699C((unint64_t *)&qword_10010B450, (void (*)(uint64_t))type metadata accessor for ActivitiesModelData);
    swift_retain();
    uint64_t result = sub_1000C6B20();
    __break(1u);
  }
  return result;
}

uint64_t sub_100092DC4(char a1, uint64_t a2)
{
  uint64_t v4 = sub_100012854(&qword_10010B770);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000C66D0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000C66B0();
  uint64_t v11 = sub_1000C66C0();
  os_log_type_t v12 = sub_1000C7690();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 67109120;
    v21[3] = a1 & 1;
    sub_1000C7850();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Did message sent: %{BOOL}d", v13, 8u);
    swift_slowDealloc();
  }

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  if (a1)
  {
    uint64_t v15 = *(void *)(a2 + 8);
    if (v15)
    {
      uint64_t v16 = *(void *)(a2 + 24);
      if (v16)
      {
        uint64_t v17 = sub_10009699C(&qword_10010DFB8, (void (*)(uint64_t))type metadata accessor for ActivitiesModelData);
        uint64_t v18 = sub_1000C7600();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v6, 1, 1, v18);
        sub_1000C75D0();
        swift_retain_n();
        swift_retain_n();
        uint64_t v19 = sub_1000C75C0();
        uint64_t v20 = swift_allocObject();
        *(void *)(v20 + 16) = v19;
        *(void *)(v20 + 24) = &protocol witness table for MainActor;
        *(void *)(v20 + 32) = v15;
        *(unsigned char *)(v20 + 40) = 1;
        *(void *)(v20 + 48) = v16;
        *(void *)(v20 + 56) = v17;
        sub_1000BD2A0((uint64_t)v6, (uint64_t)&unk_10010DFD0, v20);
        swift_release();
        swift_release();
        return swift_release();
      }
    }
    else
    {
      type metadata accessor for SharingModel();
      sub_10009699C((unint64_t *)&qword_10010BF20, (void (*)(uint64_t))type metadata accessor for SharingModel);
      sub_1000C6B20();
      __break(1u);
    }
    type metadata accessor for ActivitiesModelData();
    sub_10009699C((unint64_t *)&qword_10010B450, (void (*)(uint64_t))type metadata accessor for ActivitiesModelData);
    swift_retain();
    uint64_t result = sub_1000C6B20();
    __break(1u);
  }
  return result;
}

uint64_t sub_100093170(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 56) = a5;
  *(void *)(v6 + 64) = a6;
  *(unsigned char *)(v6 + 128) = a4;
  sub_1000C75D0();
  *(void *)(v6 + 72) = sub_1000C75C0();
  uint64_t v8 = sub_1000C7590();
  *(void *)(v6 + 80) = v8;
  *(void *)(v6 + 88) = v7;
  return _swift_task_switch(sub_10009320C, v8, v7);
}

uint64_t sub_10009320C()
{
  int v1 = *(unsigned __int8 *)(v0 + 128);
  uint64_t v2 = *(void *)(*(void *)(v0 + 56) + 8);
  *(void *)(v0 + 96) = v2;
  if (v1 == 1)
  {
    if (v2)
    {
      swift_retain();
      uint64_t v3 = (void *)swift_task_alloc();
      *(void *)(v0 + 104) = v3;
      *uint64_t v3 = v0;
      v3[1] = sub_1000933F4;
      return sub_100051988();
    }
    goto LABEL_13;
  }
  if (!v2)
  {
LABEL_13:
    type metadata accessor for SharingModel();
    sub_10009699C((unint64_t *)&qword_10010BF20, (void (*)(uint64_t))type metadata accessor for SharingModel);
    return sub_1000C6B20();
  }
  if (*(void *)(v0 + 64)) {
    uint64_t v5 = *(void **)(v0 + 64);
  }
  else {
    uint64_t v5 = _swiftEmptyArrayStorage;
  }
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1000B60FC((uint64_t)v5);
  swift_release();
  swift_bridgeObjectRelease();
  swift_retain();
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v6;
  void *v6 = v0;
  v6[1] = sub_100093570;
  return sub_10006DE7C();
}

uint64_t sub_1000933F4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 80);
    uint64_t v4 = *(void *)(v2 + 88);
    uint64_t v5 = sub_10009376C;
  }
  else
  {
    swift_release();
    uint64_t v3 = *(void *)(v2 + 80);
    uint64_t v4 = *(void *)(v2 + 88);
    uint64_t v5 = sub_100093510;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100093510()
{
  swift_release();
  int v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100093570()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 88);
  uint64_t v3 = *(void *)(v1 + 80);
  return _swift_task_switch(sub_1000936B4, v3, v2);
}

uint64_t sub_1000936B4()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_release();
  long long v2 = *(_OWORD *)(v1 + 136);
  *(void *)(v0 + 32) = *(void *)(v1 + 152);
  *(_OWORD *)(v0 + 16) = v2;
  sub_100012854(&qword_10010DFE8);
  uint64_t v3 = sub_1000C71F0();
  uint64_t v4 = *(void (**)(uint64_t))(v0 + 40);
  if (v4)
  {
    v4(v3);
    sub_100013344((uint64_t)v4);
  }
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_10009376C()
{
  uint64_t v1 = *(void *)(v0 + 112);
  swift_release();
  swift_release();
  sub_100093810(v1, 0xD000000000000018, 0x80000001000D3620);
  swift_errorRelease();
  long long v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

void sub_100093810(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v41 = a2;
  uint64_t v43 = sub_1000C66D0();
  uint64_t v45 = *(void *)(v43 - 8);
  uint64_t v5 = __chkstk_darwin(v43);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v36 - v8;
  sub_1000C7440();
  id v10 = objc_allocWithZone((Class)NSError);
  NSString v11 = sub_1000C7400();
  swift_bridgeObjectRelease();
  id v12 = [v10 initWithDomain:v11 code:1 userInfo:0];

  uint64_t v48 = a1;
  id v49 = v12;
  swift_errorRetain();
  sub_100012854((uint64_t *)&unk_10010B010);
  swift_dynamicCast();
  uint64_t v13 = v46[0];
  uint64_t v14 = v46[1];
  uint64_t v15 = (void *)v46[2];
  uint64_t v16 = v46[3];
  uint64_t v17 = v46[4];
  int v42 = v47;
  if (v47 == 8)
  {

    if (!v15)
    {
      __break(1u);
      goto LABEL_14;
    }
    id v49 = v15;
    swift_bridgeObjectRetain();
    long long v40 = v15;
    id v18 = v15;
    swift_bridgeObjectRetain();
    sub_1000C66B0();
    swift_bridgeObjectRetain_n();
    id v19 = v18;
    uint64_t v20 = sub_1000C66C0();
    os_log_type_t v21 = sub_1000C7670();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = swift_slowAlloc();
      uint64_t v37 = v13;
      uint64_t v23 = v22;
      uint64_t v36 = swift_slowAlloc();
      v46[0] = v36;
      *(_DWORD *)uint64_t v23 = 136315394;
      uint64_t v38 = v17;
      swift_bridgeObjectRetain();
      uint64_t v48 = sub_1000720D0(v41, a3, v46);
      uint64_t v39 = v14;
      sub_1000C7850();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v23 + 12) = 2080;
      uint64_t v41 = v23 + 14;
      id v24 = v19;
      id v25 = [v24 description];
      uint64_t v26 = sub_1000C7440();
      uint64_t v27 = v16;
      unint64_t v29 = v28;

      uint64_t v48 = sub_1000720D0(v26, v29, v46);
      uint64_t v14 = v39;
      sub_1000C7850();

      uint64_t v16 = v27;
      uint64_t v17 = v38;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "ComposeParticipantsView \"%s\" stopSharing failed with error: %s", (uint8_t *)v23, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v13 = v37;
      swift_slowDealloc();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v45 + 8))(v9, v43);
    uint64_t v15 = v40;
  }
  else
  {
    sub_1000C66B0();
    swift_bridgeObjectRetain_n();
    long long v30 = sub_1000C66C0();
    os_log_type_t v31 = sub_1000C7670();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v39 = v14;
      uint64_t v32 = (uint8_t *)swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      long long v40 = v15;
      v46[0] = v33;
      uint64_t v38 = v17;
      *(_DWORD *)uint64_t v32 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v48 = sub_1000720D0(v41, a3, v46);
      uint64_t v17 = v38;
      uint64_t v14 = v39;
      sub_1000C7850();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "ComposeParticipantsView \"%s\" stopSharing failed with unexpected error, returning CKError.internalError as best approximation", v32, 0xCu);
      swift_arrayDestroy();
      uint64_t v15 = v40;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v45 + 8))(v7, v43);
  }
  if (*(void *)(v44 + 8))
  {
    swift_beginAccess();
    long long v34 = v49;
    swift_retain();
    id v35 = v34;
    sub_100067284(0, v34);
    swift_release();

    sub_10002376C(v13, v14, v15, v16, v17, v42);
    return;
  }
LABEL_14:
  type metadata accessor for SharingModel();
  sub_10009699C((unint64_t *)&qword_10010BF20, (void (*)(uint64_t))type metadata accessor for SharingModel);
  sub_1000C6B20();
  __break(1u);
}

uint64_t sub_100093E34(char a1, uint64_t a2, _OWORD *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = sub_100012854(&qword_10010B770);
  __chkstk_darwin(v9 - 8);
  NSString v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000C7600();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  sub_1000C75D0();
  sub_10008DD6C((uint64_t)a3);
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1000C75C0();
  uint64_t v14 = swift_allocObject();
  long long v15 = a3[6];
  *(_OWORD *)(v14 + 152) = a3[7];
  long long v16 = a3[9];
  *(_OWORD *)(v14 + 168) = a3[8];
  *(_OWORD *)(v14 + 184) = v16;
  *(_OWORD *)(v14 + 200) = a3[10];
  long long v17 = a3[2];
  *(_OWORD *)(v14 + 88) = a3[3];
  long long v18 = a3[5];
  *(_OWORD *)(v14 + 104) = a3[4];
  *(_OWORD *)(v14 + 120) = v18;
  *(_OWORD *)(v14 + 136) = v15;
  long long v19 = a3[1];
  *(_OWORD *)(v14 + 40) = *a3;
  *(_OWORD *)(v14 + 56) = v19;
  *(void *)(v14 + 16) = v13;
  *(void *)(v14 + 24) = &protocol witness table for MainActor;
  *(unsigned char *)(v14 + 32) = a1;
  *(_OWORD *)(v14 + 72) = v17;
  *(void *)(v14 + 216) = a2;
  sub_1000BD2A0((uint64_t)v11, a5, v14);
  return swift_release();
}

uint64_t sub_100093FA8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 16) = a5;
  *(void *)(v6 + 24) = a6;
  *(unsigned char *)(v6 + 96) = a4;
  sub_1000C75D0();
  *(void *)(v6 + 32) = sub_1000C75C0();
  uint64_t v8 = sub_1000C7590();
  *(void *)(v6 + 40) = v8;
  *(void *)(v6 + 48) = v7;
  return _swift_task_switch(sub_100094044, v8, v7);
}

uint64_t sub_100094044()
{
  int v1 = *(unsigned __int8 *)(v0 + 96);
  uint64_t v2 = *(void *)(*(void *)(v0 + 16) + 8);
  *(void *)(v0 + 56) = v2;
  if (v1 == 1)
  {
    if (v2)
    {
      swift_retain();
      uint64_t v3 = (void *)swift_task_alloc();
      *(void *)(v0 + 64) = v3;
      *uint64_t v3 = v0;
      v3[1] = sub_10009422C;
      return sub_100051988();
    }
    goto LABEL_13;
  }
  if (!v2)
  {
LABEL_13:
    type metadata accessor for SharingModel();
    sub_10009699C((unint64_t *)&qword_10010BF20, (void (*)(uint64_t))type metadata accessor for SharingModel);
    return sub_1000C6B20();
  }
  if (*(void *)(v0 + 24)) {
    uint64_t v5 = *(void **)(v0 + 24);
  }
  else {
    uint64_t v5 = _swiftEmptyArrayStorage;
  }
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1000B60FC((uint64_t)v5);
  swift_release();
  swift_bridgeObjectRelease();
  swift_retain();
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v6;
  void *v6 = v0;
  v6[1] = sub_100094348;
  return sub_10006DE7C();
}

uint64_t sub_10009422C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 40);
    uint64_t v4 = *(void *)(v2 + 48);
    uint64_t v5 = sub_100094710;
  }
  else
  {
    swift_release();
    uint64_t v3 = *(void *)(v2 + 40);
    uint64_t v4 = *(void *)(v2 + 48);
    uint64_t v5 = sub_10003D628;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100094348()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 48);
  uint64_t v3 = *(void *)(v1 + 40);
  return _swift_task_switch(sub_10009448C, v3, v2);
}

uint64_t sub_10009448C()
{
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100094528;
  return sub_100068D94();
}

uint64_t sub_100094528()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 48);
  uint64_t v3 = *(void *)(v1 + 40);
  return _swift_task_switch(sub_10009466C, v3, v2);
}

uint64_t sub_10009466C()
{
  swift_release();
  if (swift_unknownObjectWeakLoadStrong())
  {
    sub_10000AB98();
    uint64_t v1 = (void *)sub_10000A1F4();
    if (v1)
    {
      [v1 _dismissViewControllerWithError:0];
      swift_unknownObjectRelease();
    }
    swift_unknownObjectRelease();
  }
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100094710()
{
  uint64_t v1 = *(void *)(v0 + 72);
  swift_release();
  swift_release();
  sub_100093810(v1, 0xD000000000000016, 0x80000001000D3600);
  swift_errorRelease();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1000947B4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  if (*(void *)(a1 + 8))
  {
    type metadata accessor for GlobalPermissionViewModel();
    swift_allocObject();
    uint64_t v3 = swift_retain();
    sub_1000407F0(v3);
    swift_release();
    sub_10009699C(&qword_10010DB40, (void (*)(uint64_t))type metadata accessor for GlobalPermissionViewModel);
    uint64_t v4 = sub_1000C6A60();
    uint64_t v6 = v5;
    id v7 = [self secondarySystemGroupedBackgroundColor];
    sub_1000C7180();
    uint64_t result = sub_1000C7270();
    *a2 = v4;
    a2[1] = v6;
    a2[2] = result;
  }
  else
  {
    type metadata accessor for SharingModel();
    sub_10009699C((unint64_t *)&qword_10010BF20, (void (*)(uint64_t))type metadata accessor for SharingModel);
    uint64_t result = sub_1000C6B20();
    __break(1u);
  }
  return result;
}

uint64_t sub_100094910(uint64_t a1)
{
  uint64_t v2 = sub_1000C6D80();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = sub_100012854(&qword_10010DE00);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1000C6D70();
  uint64_t v9 = a1;
  sub_100012854(&qword_10010DE30);
  sub_10001E454(&qword_10010DE38, &qword_10010DE30);
  sub_1000C6980();
  sub_10001E454(&qword_10010DE08, &qword_10010DE00);
  sub_1000C6DB0();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_100094AD8(_OWORD *a1)
{
  uint64_t v2 = (_OWORD *)swift_allocObject();
  long long v3 = a1[9];
  v2[9] = a1[8];
  v2[10] = v3;
  v2[11] = a1[10];
  long long v4 = a1[5];
  v2[5] = a1[4];
  v2[6] = v4;
  long long v5 = a1[7];
  v2[7] = a1[6];
  v2[8] = v5;
  long long v6 = a1[1];
  v2[1] = *a1;
  v2[2] = v6;
  long long v7 = a1[3];
  v2[3] = a1[2];
  v2[4] = v7;
  sub_10008DD6C((uint64_t)a1);
  sub_100012854(&qword_10010DE40);
  sub_10009600C();

  return sub_1000C7230();
}

uint64_t sub_100094BB4(uint64_t a1)
{
  if (*(void *)(a1 + 8))
  {
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      sub_10000AB98();
      uint64_t v2 = (void *)sub_10000A1F4();
      if (v2)
      {
        [v2 _dismissViewControllerWithError:0];
        swift_unknownObjectRelease();
      }
      return swift_unknownObjectRelease();
    }
  }
  else
  {
    type metadata accessor for SharingModel();
    sub_10009699C((unint64_t *)&qword_10010BF20, (void (*)(uint64_t))type metadata accessor for SharingModel);
    uint64_t result = sub_1000C6B20();
    __break(1u);
  }
  return result;
}

uint64_t sub_100094C90@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_100012854(&qword_10010DE78);
  uint64_t v3 = v2 - 8;
  __chkstk_darwin(v2);
  long long v5 = (uint64_t *)((char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_1000C71C0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000C71A0();
  NSString v11 = self;
  id v12 = [v11 secondaryLabelColor];
  uint64_t v13 = sub_1000C7180();
  id v14 = [v11 quaternaryLabelColor];
  uint64_t v15 = sub_1000C7180();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for Image.Scale.large(_:), v6);
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))((char *)v5 + *(int *)(v3 + 36), v9, v6);
  *long long v5 = KeyPath;
  uint64_t v17 = sub_100012854(&qword_10010DE40);
  sub_10001A740((uint64_t)v5, (uint64_t)a1 + *(int *)(v17 + 36), &qword_10010DE78);
  *a1 = v10;
  a1[1] = v13;
  a1[2] = v15;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10001326C((uint64_t)v5, &qword_10010DE78);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_100094EE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  v7[2] = sub_1000C75D0();
  v7[3] = sub_1000C75C0();
  NSString v11 = (void *)swift_task_alloc();
  v7[4] = v11;
  *NSString v11 = v7;
  v11[1] = sub_10005B20C;
  return sub_10005DFC0(a5, a6, a7);
}

uint64_t sub_100094FBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v27 = a1;
  uint64_t v26 = sub_1000C6DE0();
  uint64_t v2 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v4 = (char *)v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100012854(&qword_10010DDD0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v9 = v1[9];
  v33[8] = v1[8];
  v33[9] = v9;
  v33[10] = v1[10];
  long long v10 = v1[5];
  v33[4] = v1[4];
  v33[5] = v10;
  long long v11 = v1[7];
  v33[6] = v1[6];
  v33[7] = v11;
  long long v12 = v1[1];
  v33[0] = *v1;
  long long v13 = v1[2];
  v33[3] = v1[3];
  v33[1] = v12;
  v33[2] = v13;
  unint64_t v28 = v33;
  v25[1] = sub_100012854(&qword_10010DDD8);
  uint64_t v14 = sub_100013128(&qword_10010DDE0);
  uint64_t v15 = sub_100013128(&qword_10010DDE8);
  uint64_t v16 = sub_100013128(&qword_10010DDF0);
  uint64_t v17 = sub_1000C6AE0();
  uint64_t v18 = sub_10001E454(&qword_10010DDF8, &qword_10010DDF0);
  uint64_t v29 = v16;
  uint64_t v30 = v17;
  uint64_t v31 = v18;
  uint64_t v32 = &protocol witness table for GroupedListStyle;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v20 = sub_100013128(&qword_10010DE00);
  uint64_t v21 = sub_10001E454(&qword_10010DE08, &qword_10010DE00);
  uint64_t v29 = v20;
  uint64_t v30 = v21;
  uint64_t v22 = swift_getOpaqueTypeConformance2();
  uint64_t v29 = v14;
  uint64_t v30 = v15;
  uint64_t v31 = OpaqueTypeConformance2;
  uint64_t v32 = (void *)v22;
  swift_getOpaqueTypeConformance2();
  sub_1000C6A50();
  sub_1000C6DD0();
  sub_10001E454(&qword_10010DE10, &qword_10010DDD0);
  sub_10009699C(&qword_10010DE18, (void (*)(uint64_t))&type metadata accessor for StackNavigationViewStyle);
  uint64_t v23 = v26;
  sub_1000C7010();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v23);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

double sub_1000953A0@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v4 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v4)
  {
    *(void *)&long long v6 = a1;
    *((void *)&v6 + 1) = a2;
    sub_1000363CC();
    swift_bridgeObjectRetain();
    sub_1000C7000();
  }
  sub_1000C6D50();
  double result = *(double *)&v6;
  *(_OWORD *)a3 = v6;
  *(_OWORD *)(a3 + 16) = v7;
  *(unsigned char *)(a3 + 32) = v8;
  return result;
}

double sub_100095470@<D0>(uint64_t a1@<X8>)
{
  return sub_1000953A0(*(void *)v1, *(void *)(v1 + 8), a1);
}

uint64_t sub_100095478@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (a1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1000C67E0();
    swift_release();
    swift_release();
    swift_release();
    sub_1000363CC();
    uint64_t v3 = sub_1000C7000();
    uint64_t v5 = v4;
    char v7 = v6 & 1;
    sub_1000C6F60();
    uint64_t v8 = sub_1000C6FE0();
    uint64_t v10 = v9;
    char v12 = v11;
    swift_release();
    sub_100039234(v3, v5, v7);
    swift_bridgeObjectRelease();
    uint64_t v13 = sub_1000C6FD0();
    uint64_t v15 = v14;
    char v17 = v16;
    uint64_t v19 = v18;
    sub_100039234(v8, v10, v12 & 1);
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)a2 = v13;
    *(void *)(a2 + 8) = v15;
    *(unsigned char *)(a2 + 16) = v17 & 1;
    *(void *)(a2 + 24) = v19;
  }
  else
  {
    type metadata accessor for SharingModel();
    sub_10009699C((unint64_t *)&qword_10010BF20, (void (*)(uint64_t))type metadata accessor for SharingModel);
    uint64_t result = sub_1000C6B20();
    __break(1u);
  }
  return result;
}

uint64_t sub_10009563C@<X0>(uint64_t a1@<X8>)
{
  return sub_100095478(*v1, a1);
}

uint64_t sub_100095644@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1000C6C20();
  *a1 = result;
  return result;
}

uint64_t sub_100095670()
{
  return sub_1000C6C30();
}

__n128 sub_100095698@<Q0>(char a1@<W0>, uint64_t a2@<X8>)
{
  type metadata accessor for SharingModel();
  sub_10009699C((unint64_t *)&qword_10010BF20, (void (*)(uint64_t))type metadata accessor for SharingModel);
  uint64_t v4 = sub_1000C6B30();
  uint64_t v14 = v5;
  uint64_t v15 = v4;
  type metadata accessor for ActivitiesModelData();
  sub_10009699C((unint64_t *)&qword_10010B450, (void (*)(uint64_t))type metadata accessor for ActivitiesModelData);
  uint64_t v6 = sub_1000C6B30();
  uint64_t v12 = v7;
  uint64_t v13 = v6;
  sub_100012854(&qword_10010DDC0);
  sub_1000C71E0();
  sub_1000C71E0();
  char v8 = a1 & 1;
  sub_1000C71E0();
  sub_100012854((uint64_t *)&unk_10010C1C0);
  sub_1000C71E0();
  sub_1000C71E0();
  sub_100095970();
  id v9 = [(id)swift_getObjCClassFromMetadata() appearance];
  id v10 = [self systemGroupedBackgroundColor];
  [v9 setBackgroundColor:v10];

  *(unsigned char *)a2 = v8;
  *(void *)(a2 + 8) = v15;
  *(void *)(a2 + 16) = v14;
  *(void *)(a2 + 24) = v13;
  *(void *)(a2 + 32) = v12;
  *(unsigned char *)(a2 + 40) = v16.n128_u8[0];
  *(void *)(a2 + 48) = v16.n128_u64[1];
  *(__n128 *)(a2 + 56) = v16;
  *(_OWORD *)(a2 + 72) = v17;
  *(_OWORD *)(a2 + 88) = v18;
  *(void *)(a2 + 104) = v19;
  *(__n128 *)(a2 + 112) = v16;
  *(void *)(a2 + 128) = v17;
  __n128 result = v16;
  *(__n128 *)(a2 + 136) = v16;
  *(void *)(a2 + 152) = v17;
  *(__n128 *)(a2 + 160) = v16;
  return result;
}

unint64_t sub_100095970()
{
  unint64_t result = qword_10010DDC8;
  if (!qword_10010DDC8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10010DDC8);
  }
  return result;
}

uint64_t destroy for InviteView(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  if (*(void *)(a1 + 136)) {
    swift_release();
  }
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for InviteView(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  id v9 = (_OWORD *)(a2 + 136);
  uint64_t v8 = *(void *)(a2 + 136);
  uint64_t v10 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v10;
  uint64_t v11 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v11;
  uint64_t v12 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v12;
  uint64_t v16 = v8;
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (v16)
  {
    uint64_t v13 = *(void *)(a2 + 144);
    *(void *)(a1 + 136) = v16;
    *(void *)(a1 + 144) = v13;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 136) = *v9;
  }
  uint64_t v14 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v14;
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for InviteView(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_retain();
  swift_release();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_retain();
  swift_release();
  uint64_t v4 = *(void *)(a2 + 136);
  if (!*(void *)(a1 + 136))
  {
    if (v4)
    {
      uint64_t v6 = *(void *)(a2 + 144);
      *(void *)(a1 + 136) = v4;
      *(void *)(a1 + 144) = v6;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    goto LABEL_8;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v5 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = v4;
  *(void *)(a1 + 144) = v5;
  swift_retain();
  swift_release();
LABEL_8:
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_retain();
  swift_release();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for InviteView(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(__n128 *)(a1 + 112) = result;
  *(_OWORD *)(a1 + 128) = v8;
  return result;
}

uint64_t assignWithTake for InviteView(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_release();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  swift_release();
  uint64_t v5 = *(void *)(a2 + 136);
  if (!*(void *)(a1 + 136))
  {
    if (v5)
    {
      uint64_t v7 = *(void *)(a2 + 144);
      *(void *)(a1 + 136) = v5;
      *(void *)(a1 + 144) = v7;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    goto LABEL_8;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v6 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = v5;
  *(void *)(a1 + 144) = v6;
  swift_release();
LABEL_8:
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_release();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for InviteView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 176)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 64);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InviteView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 176) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 64) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 176) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InviteView()
{
  return &type metadata for InviteView;
}

uint64_t sub_100095FC4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100095FE0@<X0>(uint64_t a1@<X8>)
{
  return sub_10008F338(*(void *)(v1 + 16), a1);
}

uint64_t sub_100095FE8@<X0>(char *a1@<X8>)
{
  return sub_10008F6D4(*(void *)(v1 + 16), a1);
}

uint64_t sub_100095FF0()
{
  return sub_100094910(*(void *)(v0 + 16));
}

uint64_t sub_100095FF8()
{
  return sub_100094AD8(*(_OWORD **)(v0 + 16));
}

uint64_t sub_100096004()
{
  return sub_100094BB4(v0 + 16);
}

unint64_t sub_10009600C()
{
  unint64_t result = qword_10010DE48;
  if (!qword_10010DE48)
  {
    sub_100013128(&qword_10010DE40);
    sub_1000960AC();
    sub_10001E454(&qword_10010DE70, &qword_10010DE78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010DE48);
  }
  return result;
}

unint64_t sub_1000960AC()
{
  unint64_t result = qword_10010DE50;
  if (!qword_10010DE50)
  {
    sub_100013128(&qword_10010DE58);
    sub_10001E454(&qword_10010DE60, &qword_10010DE68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010DE50);
  }
  return result;
}

double sub_100096154@<D0>(uint64_t a1@<X8>)
{
  return sub_10008FD24(*(void *)(v1 + 16), a1);
}

unint64_t sub_10009615C()
{
  unint64_t result = qword_10010DEA8;
  if (!qword_10010DEA8)
  {
    sub_100013128(&qword_10010DEA0);
    sub_1000961FC();
    sub_10001E454(&qword_10010DEE0, &qword_10010DEE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010DEA8);
  }
  return result;
}

unint64_t sub_1000961FC()
{
  unint64_t result = qword_10010DEB0;
  if (!qword_10010DEB0)
  {
    sub_100013128(&qword_10010DEB8);
    sub_10001E454(&qword_10010DEC0, &qword_10010DEC8);
    sub_10001E454(&qword_10010DED0, &qword_10010DED8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010DEB0);
  }
  return result;
}

unint64_t sub_1000962C0()
{
  unint64_t result = qword_10010DEF0;
  if (!qword_10010DEF0)
  {
    sub_100013128(&qword_10010DE90);
    sub_10009615C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010DEF0);
  }
  return result;
}

uint64_t sub_100096340()
{
  return sub_1000912C0(*(_OWORD **)(v0 + 16));
}

unint64_t sub_100096348()
{
  unint64_t result = qword_10010DF10;
  if (!qword_10010DF10)
  {
    sub_100013128(&qword_10010DF00);
    sub_1000963E8();
    sub_10001E454(&qword_10010DED0, &qword_10010DED8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010DF10);
  }
  return result;
}

unint64_t sub_1000963E8()
{
  unint64_t result = qword_10010DF18;
  if (!qword_10010DF18)
  {
    sub_100013128(&qword_10010DF20);
    sub_10001E454(&qword_10010DF28, &qword_10010DF30);
    sub_10001E454(&qword_10010DEE0, &qword_10010DEE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010DF18);
  }
  return result;
}

unint64_t sub_1000964AC()
{
  unint64_t result = qword_10010DF38;
  if (!qword_10010DF38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010DF38);
  }
  return result;
}

unint64_t sub_100096500()
{
  unint64_t result = qword_10010DF40;
  if (!qword_10010DF40)
  {
    sub_100013128(&qword_10010DF08);
    sub_10009657C();
    sub_100096628();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010DF40);
  }
  return result;
}

unint64_t sub_10009657C()
{
  unint64_t result = qword_10010DF48;
  if (!qword_10010DF48)
  {
    sub_100013128(&qword_10010DF50);
    sub_10009699C(&qword_10010B860, (void (*)(uint64_t))type metadata accessor for ComposeMailView);
    sub_10008992C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010DF48);
  }
  return result;
}

unint64_t sub_100096628()
{
  unint64_t result = qword_10010DF58;
  if (!qword_10010DF58)
  {
    sub_100013128(&qword_10010DF60);
    sub_100081410();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010DF58);
  }
  return result;
}

uint64_t sub_10009669C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1000947B4(*(void *)(v1 + 16), a1);
}

unint64_t sub_1000966A4()
{
  unint64_t result = qword_10010DF70;
  if (!qword_10010DF70)
  {
    sub_100013128(&qword_10010DF68);
    sub_100096744();
    sub_10001E454(&qword_10010DED0, &qword_10010DED8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010DF70);
  }
  return result;
}

unint64_t sub_100096744()
{
  unint64_t result = qword_10010DF78;
  if (!qword_10010DF78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010DF78);
  }
  return result;
}

uint64_t sub_10009679C@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100092198(a1, v2 + 16, a2);
}

uint64_t sub_1000967A8(char a1, uint64_t a2)
{
  return sub_100093E34(a1, a2, (_OWORD *)(v2 + 16), (uint64_t)&unk_100101DE0, (uint64_t)&unk_10010DFF8);
}

uint64_t sub_1000967E4(char a1, uint64_t a2)
{
  return sub_100093E34(a1, a2, (_OWORD *)(v2 + 16), (uint64_t)&unk_100101DB8, (uint64_t)&unk_10010DFE0);
}

uint64_t sub_100096820(char a1)
{
  return sub_100092DC4(a1, v1 + 16);
}

uint64_t sub_10009682C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  if (*(void *)(v0 + 152)) {
    swift_release();
  }
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 192, 7);
}

uint64_t sub_1000968CC(uint64_t a1, char a2)
{
  return sub_1000928A8(a1, a2 & 1, v2 + 16);
}

uint64_t sub_1000968DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ComposeMailView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100096940(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ComposeMailView(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10009699C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000969E8(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  char v7 = *(unsigned char *)(v1 + 40);
  uint64_t v9 = *(void *)(v1 + 48);
  uint64_t v8 = *(void *)(v1 + 56);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_10001AE78;
  return sub_100094EE8(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_100096AC4()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100096B10(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  char v6 = *(unsigned char *)(v1 + 32);
  uint64_t v7 = v1 + 40;
  uint64_t v8 = *(void *)(v1 + 216);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100013B98;
  return sub_100093170(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_100096BE0()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  if (*(void *)(v0 + 176)) {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 224, 7);
}

uint64_t sub_100096C90(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  char v6 = *(unsigned char *)(v1 + 32);
  uint64_t v7 = v1 + 40;
  uint64_t v8 = *(void *)(v1 + 216);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_10001AE78;
  return sub_100093FA8(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_100096D64(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 144);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1000236E0(v3);
  sub_100047E74();
  return a1;
}

uint64_t sub_100096E78(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 144);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_100013344(v3);
  sub_10004809C();
  return a1;
}

uint64_t sub_100096F8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100012854(&qword_10010E028);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100096FF4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1000C6C20();
  *a1 = result;
  return result;
}

uint64_t sub_100097020()
{
  return sub_1000C6C30();
}

uint64_t sub_100097050(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_100097094(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

ValueMetadata *type metadata accessor for ItemNameView()
{
  return &type metadata for ItemNameView;
}

void *initializeBufferWithCopyOfBuffer for PossiblyEmptyText(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for PossiblyEmptyText()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for PossiblyEmptyText(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for PossiblyEmptyText(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for PossiblyEmptyText()
{
  return &type metadata for PossiblyEmptyText;
}

unsigned char *storeEnumTagSinglePayload for InviteViewContext(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10009727CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InviteViewContext()
{
  return &type metadata for InviteViewContext;
}

uint64_t sub_1000972B4()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100097388()
{
  unint64_t result = qword_10010E040;
  if (!qword_10010E040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010E040);
  }
  return result;
}

uint64_t sub_1000973DC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000973F8()
{
  return swift_getOpaqueTypeConformance2();
}

void *sub_10009741C()
{
  return &protocol witness table for Text;
}

unint64_t sub_10009742C()
{
  unint64_t result = qword_10010E048;
  if (!qword_10010E048)
  {
    sub_100013128(&qword_10010E050);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010E048);
  }
  return result;
}

uint64_t destroy for PersonRow_iOS()
{
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for PersonRow_iOS(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for PersonRow_iOS(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for PersonRow_iOS(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for PersonRow_iOS(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PersonRow_iOS(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PersonRow_iOS()
{
  return &type metadata for PersonRow_iOS;
}

uint64_t sub_1000976D0()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1000976EC(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100012854(&qword_10010E060);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v25 - v8;
  uint64_t v10 = *a1;
  uint64_t v11 = qword_10010ACC8;
  id v35 = objc_retain(objc_retain(*(id *)(*a1
                                      + OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing18PersonRowViewModel_contact)));
  if (v11 != -1) {
    swift_once();
  }
  sub_1000C7330();
  sub_1000C69F0();
  uint64_t v34 = v36;
  int v33 = v37;
  uint64_t v32 = v38;
  int v31 = v39;
  uint64_t v29 = v41;
  uint64_t v30 = v40;
  *(void *)uint64_t v9 = sub_1000C6D30();
  *((void *)v9 + 1) = 0;
  v9[16] = 1;
  uint64_t v12 = sub_100012854(&qword_10010E068);
  sub_1000979CC(a1, (uint64_t)&v9[*(int *)(v12 + 44)]);
  id v13 = *(id *)(v10 + 80);
  uint64_t v14 = sub_1000C7180();
  sub_1000C7330();
  sub_1000C69F0();
  char v15 = v43;
  uint64_t v16 = v44;
  char v17 = v45;
  uint64_t v27 = v46;
  uint64_t v28 = v42;
  uint64_t v26 = v47;
  sub_10001A740((uint64_t)v9, (uint64_t)v7, &qword_10010E060);
  long long v18 = v35;
  *(void *)a2 = v35;
  *(void *)(a2 + 8) = 0;
  *(_WORD *)(a2 + 16) = 257;
  *(void *)(a2 + 24) = v34;
  *(unsigned char *)(a2 + 32) = v33;
  *(void *)(a2 + 40) = v32;
  *(unsigned char *)(a2 + 48) = v31;
  uint64_t v19 = v29;
  *(void *)(a2 + 56) = v30;
  *(void *)(a2 + 64) = v19;
  uint64_t v20 = (int *)sub_100012854(&qword_10010E070);
  sub_10001A740((uint64_t)v7, a2 + v20[12], &qword_10010E060);
  uint64_t v21 = a2 + v20[16];
  *(void *)uint64_t v21 = 0;
  *(unsigned char *)(v21 + 8) = 1;
  uint64_t v22 = a2 + v20[20];
  *(void *)uint64_t v22 = v14;
  *(_WORD *)(v22 + 8) = 256;
  *(void *)(v22 + 16) = v28;
  *(unsigned char *)(v22 + 24) = v15;
  *(void *)(v22 + 32) = v16;
  *(unsigned char *)(v22 + 40) = v17;
  uint64_t v23 = v26;
  *(void *)(v22 + 48) = v27;
  *(void *)(v22 + 56) = v23;
  id v24 = v18;
  swift_retain();
  sub_10001326C((uint64_t)v9, &qword_10010E060);
  swift_release();

  sub_10001326C((uint64_t)v7, &qword_10010E060);
}

uint64_t sub_1000979CC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100012854(&qword_10010E078);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v43 - v8;
  uint64_t v10 = *a1;
  uint64_t v11 = *(void *)(*a1 + 32);
  uint64_t v12 = *(void *)(*a1 + 40);
  uint64_t v45 = v11;
  uint64_t v46 = v12;
  sub_1000363CC();
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1000C7000();
  uint64_t v15 = v14;
  uint64_t v45 = v13;
  uint64_t v46 = v14;
  char v17 = v16 & 1;
  char v47 = v16 & 1;
  uint64_t v48 = v18;
  sub_1000C7090();
  sub_100039234(v13, v15, v17);
  swift_bridgeObjectRelease();
  unint64_t v19 = *(void *)(v10 + 56);
  uint64_t v20 = HIBYTE(v19) & 0xF;
  if ((v19 & 0x2000000000000000) == 0) {
    uint64_t v20 = *(void *)(v10 + 48) & 0xFFFFFFFFFFFFLL;
  }
  if (v20)
  {
    uint64_t v45 = *(void *)(v10 + 48);
    uint64_t v46 = v19;
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_1000C7000();
    uint64_t v23 = v22;
    char v25 = v24 & 1;
    sub_1000C6F00();
    uint64_t v26 = sub_1000C6FE0();
    uint64_t v43 = a2;
    uint64_t v44 = v7;
    uint64_t v28 = v27;
    char v30 = v29;
    swift_release();
    sub_100039234(v21, v23, v25);
    swift_bridgeObjectRelease();
    sub_1000C7170();
    uint64_t v31 = sub_1000C6FB0();
    uint64_t v33 = v32;
    char v35 = v34;
    uint64_t v37 = v36;
    swift_release();
    uint64_t v38 = v35 & 1;
    uint64_t v39 = v28;
    char v40 = v30 & 1;
    a2 = v43;
    uint64_t v7 = v44;
    sub_100039234(v26, v39, v40);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v31 = 0;
    uint64_t v33 = 0;
    uint64_t v38 = 0;
    uint64_t v37 = 0;
  }
  sub_10001A740((uint64_t)v9, (uint64_t)v7, &qword_10010E078);
  sub_10001A740((uint64_t)v7, a2, &qword_10010E078);
  uint64_t v41 = (uint64_t *)(a2 + *(int *)(sub_100012854(&qword_10010E080) + 48));
  *uint64_t v41 = v31;
  v41[1] = v33;
  v41[2] = v38;
  v41[3] = v37;
  sub_100097D08(v31, v33, v38, v37);
  sub_10001326C((uint64_t)v9, &qword_10010E078);
  sub_100097D4C(v31, v33, v38, v37);
  return sub_10001326C((uint64_t)v7, &qword_10010E078);
}

void sub_100097CA4(uint64_t a1@<X8>)
{
  long long v3 = *(_OWORD *)(v1 + 16);
  v5[0] = *(_OWORD *)v1;
  v5[1] = v3;
  uint64_t v6 = *(void *)(v1 + 32);
  *(void *)a1 = sub_1000C6CF0();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  uint64_t v4 = sub_100012854(&qword_10010E058);
  sub_1000976EC((uint64_t *)v5, a1 + *(int *)(v4 + 44));
}

uint64_t sub_100097D08(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_100039224(result, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_100097D4C(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_100039234(result, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_100097D94()
{
  unint64_t result = qword_10010E088;
  if (!qword_10010E088)
  {
    sub_100013128(&qword_10010E090);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010E088);
  }
  return result;
}

uint64_t *sub_100097DF0(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1000C6570();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (uint64_t *)((char *)a1 + v9);
    uint64_t v14 = (uint64_t *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    void *v13 = *v14;
    v13[1] = v15;
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100097EF4(uint64_t a1)
{
  uint64_t v2 = sub_1000C6570();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100097F88(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000C6570();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  uint64_t v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  void *v12 = *v13;
  v12[1] = v14;
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10009803C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000C6570();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100098120(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000C6570();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1000981B0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000C6570();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  void *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10009826C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100098280);
}

uint64_t sub_100098280(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000C6570();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_100098344(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100098358);
}

uint64_t sub_100098358(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1000C6570();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for AlertViewModel(uint64_t a1)
{
  return sub_100023528(a1, qword_10010E0F0);
}

uint64_t sub_100098438()
{
  uint64_t result = sub_1000C6570();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1000984E4()
{
  return sub_10009AF08(&qword_10010E130, (void (*)(uint64_t))&type metadata accessor for UUID);
}

uint64_t sub_100098530@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1000C6570();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

void *sub_100098598(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *a1 = *a2;
    a1 = (void *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1000C6570();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    unint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = *(void *)((char *)a2 + v8);
    uint64_t v12 = *(void *)((char *)a2 + v8 + 8);
    char v13 = *((unsigned char *)a2 + v8 + 16);
    sub_100039224(v11, v12, v13);
    *(void *)uint64_t v9 = v11;
    *((void *)v9 + 1) = v12;
    v9[16] = v13;
    *((void *)v9 + 3) = *((void *)v10 + 3);
    uint64_t v14 = a3[6];
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = sub_1000C6930();
    uint64_t v18 = *(void *)(v17 - 8);
    unint64_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
    swift_bridgeObjectRetain();
    if (v19(v16, 1, v17))
    {
      uint64_t v20 = sub_100012854(&qword_10010BE10);
      memcpy(v15, v16, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
    uint64_t v22 = a3[7];
    uint64_t v23 = (void *)((char *)a1 + v22);
    char v24 = (void *)((char *)a2 + v22);
    if (*v24)
    {
      uint64_t v25 = v24[1];
      void *v23 = *v24;
      v23[1] = v25;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
    }
  }
  return a1;
}

uint64_t sub_1000987B0(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_1000C6570();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  sub_100039234(*(void *)(a1 + a2[5]), *(void *)(a1 + a2[5] + 8), *(unsigned char *)(a1 + a2[5] + 16));
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + a2[6];
  uint64_t v6 = sub_1000C6930();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
  if (!result) {
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  if (*(void *)(a1 + a2[7]))
  {
    return swift_release();
  }
  return result;
}

uint64_t sub_1000988EC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000C6570();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7);
  uint64_t v11 = *(void *)(a2 + v7 + 8);
  char v12 = *(unsigned char *)(a2 + v7 + 16);
  sub_100039224(v10, v11, v12);
  *(void *)uint64_t v8 = v10;
  *(void *)(v8 + 8) = v11;
  *(unsigned char *)(v8 + 16) = v12;
  *(void *)(v8 + 24) = *(void *)(v9 + 24);
  uint64_t v13 = a3[6];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (const void *)(a2 + v13);
  uint64_t v16 = sub_1000C6930();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48);
  swift_bridgeObjectRetain();
  if (v18(v15, 1, v16))
  {
    uint64_t v19 = sub_100012854(&qword_10010BE10);
    memcpy(v14, v15, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v17 + 16))(v14, v15, v16);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  uint64_t v20 = a3[7];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  if (*v22)
  {
    uint64_t v23 = v22[1];
    void *v21 = *v22;
    v21[1] = v23;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  }
  return a1;
}

uint64_t sub_100098AB4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000C6570();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7);
  uint64_t v11 = *(void *)(a2 + v7 + 8);
  char v12 = *(unsigned char *)(a2 + v7 + 16);
  sub_100039224(v10, v11, v12);
  uint64_t v13 = *(void *)v8;
  uint64_t v14 = *(void *)(v8 + 8);
  char v15 = *(unsigned char *)(v8 + 16);
  *(void *)uint64_t v8 = v10;
  *(void *)(v8 + 8) = v11;
  *(unsigned char *)(v8 + 16) = v12;
  sub_100039234(v13, v14, v15);
  *(void *)(v8 + 24) = *(void *)(v9 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[6];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  uint64_t v19 = sub_1000C6930();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v20 + 48);
  LODWORD(v8) = v21(v17, 1, v19);
  int v22 = v21(v18, 1, v19);
  if (v8)
  {
    if (!v22)
    {
      (*(void (**)(void *, void *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v22)
  {
    (*(void (**)(void *, uint64_t))(v20 + 8))(v17, v19);
LABEL_6:
    uint64_t v23 = sub_100012854(&qword_10010BE10);
    memcpy(v17, v18, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v20 + 24))(v17, v18, v19);
LABEL_7:
  uint64_t v24 = a3[7];
  uint64_t v25 = (void *)(a1 + v24);
  uint64_t v26 = (uint64_t *)(a2 + v24);
  uint64_t v27 = *(void *)(a1 + v24);
  uint64_t v28 = *v26;
  if (!v27)
  {
    if (v28)
    {
      uint64_t v30 = v26[1];
      *uint64_t v25 = v28;
      v25[1] = v30;
      swift_retain();
      return a1;
    }
LABEL_13:
    *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
    return a1;
  }
  if (!v28)
  {
    swift_release();
    goto LABEL_13;
  }
  uint64_t v29 = v26[1];
  *uint64_t v25 = v28;
  v25[1] = v29;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_100098D1C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000C6570();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (_OWORD *)(a1 + v7);
  uint64_t v10 = (_OWORD *)(a2 + v7);
  long long v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  char v12 = (void *)(a1 + v8);
  uint64_t v13 = (const void *)(a2 + v8);
  uint64_t v14 = sub_1000C6930();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_100012854(&qword_10010BE10);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v17 = a3[7];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (uint64_t *)(a2 + v17);
  uint64_t v20 = *v19;
  if (*v19)
  {
    uint64_t v21 = v19[1];
    void *v18 = v20;
    v18[1] = v21;
  }
  else
  {
    *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  }
  return a1;
}

uint64_t sub_100098EAC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000C6570();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  LOBYTE(v7) = *(unsigned char *)(a2 + v7 + 16);
  uint64_t v10 = *(void *)v8;
  uint64_t v11 = *(void *)(v8 + 8);
  char v12 = *(unsigned char *)(v8 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(unsigned char *)(v8 + 16) = v7;
  sub_100039234(v10, v11, v12);
  *(void *)(v8 + 24) = *(void *)(v9 + 24);
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[6];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  uint64_t v16 = sub_1000C6930();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v17 + 48);
  int v19 = v18(v14, 1, v16);
  int v20 = v18(v15, 1, v16);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v17 + 32))(v14, v15, v16);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v20)
  {
    (*(void (**)(void *, uint64_t))(v17 + 8))(v14, v16);
LABEL_6:
    uint64_t v21 = sub_100012854(&qword_10010BE10);
    memcpy(v14, v15, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v17 + 40))(v14, v15, v16);
LABEL_7:
  uint64_t v22 = a3[7];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (uint64_t *)(a2 + v22);
  uint64_t v25 = *(void *)(a1 + v22);
  uint64_t v26 = *v24;
  if (!v25)
  {
    if (v26)
    {
      uint64_t v28 = v24[1];
      void *v23 = v26;
      v23[1] = v28;
      return a1;
    }
LABEL_13:
    *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
    return a1;
  }
  if (!v26)
  {
    swift_release();
    goto LABEL_13;
  }
  uint64_t v27 = v24[1];
  void *v23 = v26;
  v23[1] = v27;
  swift_release();
  return a1;
}

uint64_t sub_1000990F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100099104);
}

uint64_t sub_100099104(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000C6570();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 24);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = sub_100012854(&qword_10010BE10);
    char v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 24);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_100099238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10009924C);
}

uint64_t sub_10009924C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1000C6570();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = sub_100012854(&qword_10010BE10);
    char v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 24);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t type metadata accessor for AlertViewModelButton(uint64_t a1)
{
  return sub_100023528(a1, qword_10010E190);
}

void sub_1000993A0()
{
  sub_1000C6570();
  if (v0 <= 0x3F)
  {
    sub_10009A29C(319, (unint64_t *)&qword_10010D7A0, (void (*)(uint64_t))&type metadata accessor for ButtonRole);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

char *sub_100099494(char *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *(void *)a1 = *a2;
    uint64_t v4 = (char *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = (int *)type metadata accessor for AlertViewModel(0);
    uint64_t v8 = *((void *)v7 - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_100012854(&qword_10010CB70);
      memcpy(v4, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v11 = sub_1000C6570();
      (*(void (**)(char *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(v4, a2, v11);
      uint64_t v12 = v7[5];
      uint64_t v13 = &v4[v12];
      uint64_t v14 = (uint64_t *)((char *)a2 + v12);
      uint64_t v15 = v14[1];
      *(void *)uint64_t v13 = *v14;
      *((void *)v13 + 1) = v15;
      uint64_t v16 = v7[6];
      uint64_t v17 = &v4[v16];
      uint64_t v18 = (uint64_t *)((char *)a2 + v16);
      uint64_t v19 = v18[1];
      *(void *)uint64_t v17 = *v18;
      *((void *)v17 + 1) = v19;
      *(void *)&v4[v7[7]] = *(uint64_t *)((char *)a2 + v7[7]);
      int v20 = *(void (**)(char *, void, uint64_t, int *))(v8 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v20(v4, 0, 1, v7);
    }
    uint64_t v21 = *(int *)(a3 + 20);
    uint64_t v22 = &v4[v21];
    uint64_t v23 = (char *)a2 + v21;
    uint64_t v24 = *((void *)v23 + 1);
    *(void *)uint64_t v22 = *(void *)v23;
    *((void *)v22 + 1) = v24;
    v22[16] = v23[16];
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_100099690(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AlertViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 1, v2))
  {
    uint64_t v3 = sub_1000C6570();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();

  return swift_release();
}

char *sub_100099788(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for AlertViewModel(0);
  uint64_t v7 = *((void *)v6 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_100012854(&qword_10010CB70);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v9 = sub_1000C6570();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
    uint64_t v10 = v6[5];
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    uint64_t v13 = *((void *)v12 + 1);
    *(void *)uint64_t v11 = *(void *)v12;
    *((void *)v11 + 1) = v13;
    uint64_t v14 = v6[6];
    uint64_t v15 = &a1[v14];
    uint64_t v16 = &a2[v14];
    uint64_t v17 = *((void *)v16 + 1);
    *(void *)uint64_t v15 = *(void *)v16;
    *((void *)v15 + 1) = v17;
    *(void *)&a1[v6[7]] = *(void *)&a2[v6[7]];
    uint64_t v18 = *(void (**)(char *, void, uint64_t, int *))(v7 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v18(a1, 0, 1, v6);
  }
  uint64_t v19 = *(int *)(a3 + 20);
  int v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  uint64_t v22 = *((void *)v21 + 1);
  *(void *)int v20 = *(void *)v21;
  *((void *)v20 + 1) = v22;
  v20[16] = v21[16];
  swift_retain();
  swift_retain();
  return a1;
}

char *sub_100099938(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for AlertViewModel(0);
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v24 = sub_1000C6570();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 24))(a1, a2, v24);
      uint64_t v25 = v6[5];
      uint64_t v26 = &a1[v25];
      uint64_t v27 = &a2[v25];
      *(void *)uint64_t v26 = *(void *)v27;
      *((void *)v26 + 1) = *((void *)v27 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v28 = v6[6];
      uint64_t v29 = &a1[v28];
      uint64_t v30 = &a2[v28];
      *(void *)uint64_t v29 = *(void *)v30;
      *((void *)v29 + 1) = *((void *)v30 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)&a1[v6[7]] = *(void *)&a2[v6[7]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
    sub_100099BF4((uint64_t)a1);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v19 = sub_100012854(&qword_10010CB70);
    memcpy(a1, a2, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v11 = sub_1000C6570();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
  uint64_t v12 = v6[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  *(void *)uint64_t v13 = *(void *)v14;
  *((void *)v13 + 1) = *((void *)v14 + 1);
  uint64_t v15 = v6[6];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  *(void *)uint64_t v16 = *(void *)v17;
  *((void *)v16 + 1) = *((void *)v17 + 1);
  *(void *)&a1[v6[7]] = *(void *)&a2[v6[7]];
  uint64_t v18 = *(void (**)(char *, void, uint64_t, int *))(v7 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v18(a1, 0, 1, v6);
LABEL_7:
  uint64_t v20 = *(int *)(a3 + 20);
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  *(void *)&a1[v20] = *(void *)&a2[v20];
  swift_retain();
  swift_release();
  *((void *)v21 + 1) = *((void *)v22 + 1);
  swift_retain();
  swift_release();
  v21[16] = v22[16];
  return a1;
}

uint64_t sub_100099BF4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AlertViewModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_100099C50(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for AlertViewModel(0);
  uint64_t v7 = *((void *)v6 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_100012854(&qword_10010CB70);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v9 = sub_1000C6570();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
    *(_OWORD *)&a1[v6[5]] = *(_OWORD *)&a2[v6[5]];
    *(_OWORD *)&a1[v6[6]] = *(_OWORD *)&a2[v6[6]];
    *(void *)&a1[v6[7]] = *(void *)&a2[v6[7]];
    (*(void (**)(char *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  v11[16] = v12[16];
  return a1;
}

char *sub_100099DC8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for AlertViewModel(0);
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v17 = sub_1000C6570();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 40))(a1, a2, v17);
      uint64_t v18 = v6[5];
      uint64_t v19 = &a1[v18];
      uint64_t v20 = &a2[v18];
      uint64_t v22 = *(void *)v20;
      uint64_t v21 = *((void *)v20 + 1);
      *(void *)uint64_t v19 = v22;
      *((void *)v19 + 1) = v21;
      swift_bridgeObjectRelease();
      uint64_t v23 = v6[6];
      uint64_t v24 = &a1[v23];
      uint64_t v25 = &a2[v23];
      uint64_t v27 = *(void *)v25;
      uint64_t v26 = *((void *)v25 + 1);
      *(void *)uint64_t v24 = v27;
      *((void *)v24 + 1) = v26;
      swift_bridgeObjectRelease();
      *(void *)&a1[v6[7]] = *(void *)&a2[v6[7]];
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
    sub_100099BF4((uint64_t)a1);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v12 = sub_100012854(&qword_10010CB70);
    memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v11 = sub_1000C6570();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
  *(_OWORD *)&a1[v6[5]] = *(_OWORD *)&a2[v6[5]];
  *(_OWORD *)&a1[v6[6]] = *(_OWORD *)&a2[v6[6]];
  *(void *)&a1[v6[7]] = *(void *)&a2[v6[7]];
  (*(void (**)(char *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v13 = *(int *)(a3 + 20);
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  *(void *)&a1[v13] = *(void *)v15;
  swift_release();
  *((void *)v14 + 1) = *((void *)v15 + 1);
  swift_release();
  v14[16] = v15[16];
  return a1;
}

uint64_t sub_10009A018(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10009A02C);
}

uint64_t sub_10009A02C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100012854(&qword_10010CB70);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_10009A0F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10009A108);
}

uint64_t sub_10009A108(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100012854(&qword_10010CB70);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for AlertViewModelAlert(uint64_t a1)
{
  return sub_100023528(a1, (uint64_t *)&unk_10010E228);
}

void sub_10009A1EC()
{
  sub_10009A29C(319, (unint64_t *)&unk_10010E238, (void (*)(uint64_t))type metadata accessor for AlertViewModel);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_10009A29C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1000C7840();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_10009A2F0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10009A30C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v25 = a1;
  uint64_t v26 = a2;
  uint64_t v4 = sub_100012854(&qword_10010CB70);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100012854(&qword_10010E268);
  uint64_t v23 = *(void *)(v7 - 8);
  uint64_t v24 = v7;
  __chkstk_darwin(v7);
  uint64_t v22 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001A740(v3, (uint64_t)v6, &qword_10010CB70);
  uint64_t v9 = type metadata accessor for AlertViewModel(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v6, 1, v9) == 1)
  {
    sub_10009AD20((uint64_t)v6);
    uint64_t v10 = 0;
    unint64_t v11 = 0xE000000000000000;
  }
  else
  {
    uint64_t v12 = &v6[*(int *)(v9 + 20)];
    uint64_t v10 = *(void *)v12;
    unint64_t v11 = *((void *)v12 + 1);
    swift_bridgeObjectRetain();
    sub_100099BF4((uint64_t)v6);
  }
  uint64_t v31 = v10;
  unint64_t v32 = v11;
  uint64_t v13 = v3 + *(int *)(type metadata accessor for AlertViewModelAlert(0) + 20);
  uint64_t v14 = *(void *)v13;
  uint64_t v15 = *(void *)(v13 + 8);
  LOBYTE(v13) = *(unsigned char *)(v13 + 16);
  uint64_t v27 = v14;
  uint64_t v28 = v15;
  char v29 = v13;
  sub_100012854(&qword_10010BF18);
  uint64_t v16 = sub_1000C72B0();
  uint64_t v21 = v20;
  v20[3] = v30;
  uint64_t v17 = __chkstk_darwin(v16);
  __chkstk_darwin(v17);
  sub_100012854(&qword_10010E270);
  sub_100012854(&qword_10010E278);
  sub_100012854(&qword_10010E280);
  sub_10001E454(&qword_10010E288, &qword_10010E270);
  sub_1000363CC();
  sub_10009AD90();
  sub_10009AE9C();
  uint64_t v18 = v22;
  sub_1000C70C0();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v23 + 32))(v26, v18, v24);
}

uint64_t sub_10009A65C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100012854(&qword_10010E2A0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100012854(&qword_10010CB70);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for AlertViewModel(0);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001A740(a1, (uint64_t)v10, &qword_10010CB70);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_10009AD20((uint64_t)v10);
    uint64_t v15 = 1;
  }
  else
  {
    sub_10009B0F0((uint64_t)v10, (uint64_t)v14, type metadata accessor for AlertViewModel);
    v17[1] = *(void *)&v14[*(int *)(v11 + 28)];
    swift_bridgeObjectRetain();
    sub_100012854(&qword_10010E2C0);
    sub_1000C6570();
    sub_100012854(&qword_10010E2B0);
    sub_10001E454(&qword_10010E2C8, &qword_10010E2C0);
    sub_10001E454(&qword_10010E2A8, &qword_10010E2B0);
    sub_10009AF08(qword_10010E2D0, (void (*)(uint64_t))type metadata accessor for AlertViewModelButton);
    sub_1000C72F0();
    sub_100099BF4((uint64_t)v14);
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(a2, v7, v4);
    uint64_t v15 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a2, v15, 1, v4);
}

uint64_t sub_10009A99C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AlertViewModelButton(0);
  uint64_t v3 = v2 - 8;
  uint64_t v4 = *(void *)(v2 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v2);
  uint64_t v6 = sub_100012854(&qword_10010BE10);
  __chkstk_darwin(v6 - 8);
  sub_10001A740(a1 + *(int *)(v3 + 32), (uint64_t)&v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)], &qword_10010BE10);
  sub_100036FC4(a1, (uint64_t)&v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  unint64_t v8 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v9 = swift_allocObject();
  sub_10009B0F0((uint64_t)&v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)], v9 + v8, type metadata accessor for AlertViewModelButton);
  uint64_t v12 = a1;
  return sub_1000C7220();
}

uint64_t sub_10009AB54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1 + *(int *)(type metadata accessor for AlertViewModelButton(0) + 20);
  uint64_t v4 = *(void *)v3;
  uint64_t v5 = *(void *)(v3 + 8);
  char v6 = *(unsigned char *)(v3 + 16);
  uint64_t v7 = *(void *)(v3 + 24);
  *(void *)a2 = *(void *)v3;
  *(void *)(a2 + 8) = v5;
  *(unsigned char *)(a2 + 16) = v6;
  *(void *)(a2 + 24) = v7;
  sub_100039224(v4, v5, v6);

  return swift_bridgeObjectRetain();
}

uint64_t sub_10009ABB8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_100012854(&qword_10010CB70);
  __chkstk_darwin(v4 - 8);
  char v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001A740(a1, (uint64_t)v6, &qword_10010CB70);
  uint64_t v7 = type metadata accessor for AlertViewModel(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7) == 1)
  {
    sub_10009AD20((uint64_t)v6);
LABEL_5:
    uint64_t result = 0;
    uint64_t v12 = 0;
    uint64_t v15 = 0;
    uint64_t v13 = 0;
    goto LABEL_6;
  }
  unint64_t v8 = &v6[*(int *)(v7 + 24)];
  uint64_t v10 = *(void *)v8;
  uint64_t v9 = *((void *)v8 + 1);
  swift_bridgeObjectRetain();
  sub_100099BF4((uint64_t)v6);
  if (!v9) {
    goto LABEL_5;
  }
  v16[0] = v10;
  v16[1] = v9;
  sub_1000363CC();
  uint64_t result = sub_1000C7000();
  uint64_t v15 = v14 & 1;
LABEL_6:
  *a2 = result;
  a2[1] = v12;
  a2[2] = v15;
  a2[3] = v13;
  return result;
}

uint64_t sub_10009AD00()
{
  return sub_1000C69E0();
}

uint64_t sub_10009AD20(uint64_t a1)
{
  uint64_t v2 = sub_100012854(&qword_10010CB70);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10009AD80@<X0>(uint64_t a1@<X8>)
{
  return sub_10009A65C(*(void *)(v1 + 16), a1);
}

uint64_t sub_10009AD88@<X0>(uint64_t *a1@<X8>)
{
  return sub_10009ABB8(*(void *)(v1 + 16), a1);
}

unint64_t sub_10009AD90()
{
  unint64_t result = qword_10010E290;
  if (!qword_10010E290)
  {
    sub_100013128(&qword_10010E278);
    sub_10009AE04();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010E290);
  }
  return result;
}

unint64_t sub_10009AE04()
{
  unint64_t result = qword_10010E298;
  if (!qword_10010E298)
  {
    sub_100013128(&qword_10010E2A0);
    sub_10001E454(&qword_10010E2A8, &qword_10010E2B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010E298);
  }
  return result;
}

unint64_t sub_10009AE9C()
{
  unint64_t result = qword_10010E2B8;
  if (!qword_10010E2B8)
  {
    sub_100013128(&qword_10010E280);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010E2B8);
  }
  return result;
}

uint64_t sub_10009AF08(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10009AF50()
{
  uint64_t v1 = (int *)type metadata accessor for AlertViewModelButton(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = v0 + v3;
  uint64_t v6 = sub_1000C6570();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  sub_100039234(*(void *)(v5 + v1[5]), *(void *)(v5 + v1[5] + 8), *(unsigned char *)(v5 + v1[5] + 16));
  swift_bridgeObjectRelease();
  uint64_t v7 = v0 + v3 + v1[6];
  uint64_t v8 = sub_1000C6930();
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  if (*(void *)(v5 + v1[7])) {
    swift_release();
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_10009B0F0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10009B158()
{
  uint64_t v1 = type metadata accessor for AlertViewModelButton(0);
  uint64_t v3 = *(void *)(v1 - 8);
  uint64_t result = v1 - 8;
  uint64_t v4 = (uint64_t (**)(void))(v0
                          + *(int *)(result + 36)
                          + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
  if (*v4) {
    return (*v4)();
  }
  return result;
}

uint64_t sub_10009B1CC@<X0>(uint64_t a1@<X8>)
{
  return sub_10009AB54(*(void *)(v1 + 16), a1);
}

uint64_t sub_10009B1D4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10009B2B4()
{
  uint64_t result = sub_1000C6800();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_10009B350@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_10009B364()
{
  return sub_1000114AC();
}

uint64_t sub_10009B378@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_10009B38C()
{
  return sub_1000114AC();
}

uint64_t sub_10009B3A0()
{
  uint64_t v0 = sub_100012854((uint64_t *)&unk_10010BDD0);
  uint64_t v1 = __chkstk_darwin(v0);
  uint64_t v22 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v21 - v3;
  uint64_t v5 = sub_1000C6530();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = OBJC_IVAR____TtC37com_apple_CloudSharingUI_CloudSharing12SharingModel__rootFolderURL;
  uint64_t v25 = v0;
  unint64_t v9 = sub_1000131C4();
  unint64_t v26 = v9;
  swift_getKeyPath();
  uint64_t v23 = v0;
  unint64_t v24 = v9;
  swift_getKeyPath();
  swift_retain();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_100088B98((uint64_t)v4);
    swift_retain();
    sub_100012E3C(0, 0);
    uint64_t v10 = swift_release();
    __chkstk_darwin(v10);
    uint64_t v11 = sub_100012854(&qword_10010CBB0);
    *(&v21 - 2) = v11;
    unint64_t v12 = sub_1000130BC();
    *(&v21 - 1) = v12;
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    *(&v21 - 2) = v11;
    *(&v21 - 1) = v12;
    swift_getKeyPath();
    swift_retain();
    sub_1000C67E0();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v14 = v28;
    if (v28) {
      swift_bridgeObjectRelease();
    }
    swift_getKeyPath();
    swift_getKeyPath();
    BOOL v27 = v14 == 0;
    swift_retain();
    sub_1000C67F0();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    uint64_t v15 = sub_1000C64B0();
    uint64_t v17 = v16;
    swift_retain();
    sub_100012E3C(v15, v17);
    swift_release();
    swift_bridgeObjectRelease();
    swift_getKeyPath();
    swift_getKeyPath();
    BOOL v27 = 0;
    swift_retain();
    sub_1000C67F0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    __chkstk_darwin(result);
    *(&v21 - 2) = v0;
    *(&v21 - 1) = v9;
    uint64_t v19 = swift_getKeyPath();
    __chkstk_darwin(v19);
    *(&v21 - 2) = v0;
    *(&v21 - 1) = v9;
    swift_getKeyPath();
    swift_retain();
    uint64_t v20 = (uint64_t)v22;
    sub_1000C67E0();
    swift_release();
    swift_release();
    swift_release();
    sub_10000FAF4(v20);
    swift_unknownObjectRelease();
    return sub_100088B98(v20);
  }
  return result;
}

uint64_t sub_10009B874()
{
  uint64_t v0 = sub_100012854((uint64_t *)&unk_10010BDD0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100012854(&qword_10010CBB0);
  v13[2] = v3;
  unint64_t v4 = sub_1000130BC();
  v13[3] = v4;
  swift_getKeyPath();
  v13[0] = v3;
  v13[1] = v4;
  swift_getKeyPath();
  swift_retain();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v5 = v15;
  uint64_t v6 = swift_bridgeObjectRelease();
  if (v5)
  {
    __chkstk_darwin(v6);
    v13[-2] = v3;
    v13[-1] = v4;
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    v13[-2] = v3;
    v13[-1] = v4;
    swift_getKeyPath();
    swift_retain();
    sub_1000C67E0();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v8 = v15;
    swift_bridgeObjectRelease();
    if (v8)
    {
      BOOL v9 = 1;
    }
    else
    {
      swift_getKeyPath();
      swift_getKeyPath();
      sub_1000C67E0();
      swift_release();
      swift_release();
      uint64_t v10 = sub_1000C6530();
      BOOL v9 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v2, 1, v10) != 1;
      sub_100088B98((uint64_t)v2);
    }
  }
  else
  {
    BOOL v9 = 0;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  BOOL v14 = v9;
  swift_retain();
  sub_1000C67F0();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  BOOL v11 = v14;
  swift_getKeyPath();
  swift_getKeyPath();
  BOOL v14 = !v11;
  swift_retain();
  return sub_1000C67F0();
}

uint64_t sub_10009BBC4()
{
  return swift_release();
}

uint64_t sub_10009BC80()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 96);
  uint64_t v2 = sub_1000C6800();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_100013344(*(void *)(v0 + *(void *)(*(void *)v0 + 104)));
  return v0;
}

uint64_t sub_10009BD28()
{
  sub_10009BC80();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ModelPublished()
{
  return sub_10008337C();
}

uint64_t sub_10009BDA0()
{
  return 16;
}

__n128 sub_10009BDAC(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_10009BDB8@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_10009BDE0()
{
  return sub_1000114AC();
}

uint64_t sub_10009BE08@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_10009BE30()
{
  return sub_1000114AC();
}

uint64_t destroy for UIActivityView(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 24))
  {
    return swift_release();
  }
  return result;
}

void *initializeWithCopy for UIActivityView(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  uint64_t v6 = a2 + 3;
  uint64_t v5 = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v5)
  {
    uint64_t v7 = a2[4];
    a1[3] = v5;
    a1[4] = v7;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 3) = *v6;
  }
  return a1;
}

void *assignWithCopy for UIActivityView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[3];
  if (!a1[3])
  {
    if (v4)
    {
      uint64_t v6 = a2[4];
      a1[3] = v4;
      a1[4] = v6;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v5 = a2[4];
  a1[3] = v4;
  a1[4] = v5;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for UIActivityView(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  if (!*(void *)(a1 + 24))
  {
    if (v4)
    {
      uint64_t v6 = *(void *)(a2 + 32);
      *(void *)(a1 + 24) = v4;
      *(void *)(a1 + 32) = v6;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for UIActivityView()
{
  return &type metadata for UIActivityView;
}

unint64_t sub_10009C0CC()
{
  unint64_t result = qword_10010E358;
  if (!qword_10010E358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010E358);
  }
  return result;
}

id sub_10009C120()
{
  sub_100012898(v0 + 8, (uint64_t)v10, &qword_10010E368);
  swift_bridgeObjectRetain();
  sub_10009C53C((uint64_t)v10);
  v1.super.Class isa = sub_1000C7530().super.isa;
  swift_bridgeObjectRelease();
  sub_100012898((uint64_t)v10, (uint64_t)&v11, &qword_10010E368);
  if (v11)
  {
    sub_10009C580();
    v2.super.Class isa = sub_1000C7530().super.isa;
    sub_10009C5C0((uint64_t)v10);
  }
  else
  {
    v2.super.Class isa = 0;
  }
  id v3 = [objc_allocWithZone((Class)UIActivityViewController) initWithActivityItems:v1.super.isa applicationActivities:v2.super.isa];

  sub_100012898(v0 + 16, (uint64_t)v9, (uint64_t *)&unk_10010E370);
  sub_100012898((uint64_t)v9, (uint64_t)&v12, (uint64_t *)&unk_10010E370);
  Class isa = v12;
  if (v12)
  {
    type metadata accessor for ActivityType(0);
    Class isa = sub_1000C7530().super.isa;
  }
  [v3 setExcludedActivityTypes:isa];

  if (*(void *)(v0 + 24))
  {
    uint64_t v5 = *(void *)(v0 + 32);
    v8[4] = *(void *)(v0 + 24);
    v8[5] = v5;
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 1107296256;
    v8[2] = sub_10009C300;
    v8[3] = &unk_100102178;
    uint64_t v6 = _Block_copy(v8);
    swift_retain();
    swift_release();
  }
  else
  {
    uint64_t v6 = 0;
  }
  [v3 setCompletionWithItemsHandler:v6];
  _Block_release(v6);
  return v3;
}

uint64_t sub_10009C300(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8 = *(void (**)(void *, uint64_t, uint64_t, void *))(a1 + 32);
  if (a4) {
    uint64_t v9 = sub_1000C7540();
  }
  else {
    uint64_t v9 = 0;
  }
  swift_retain();
  id v10 = a2;
  id v11 = a5;
  v8(a2, a3, v9, a5);
  swift_release();

  return swift_bridgeObjectRelease();
}

id sub_10009C3BC()
{
  return sub_10009C120();
}

uint64_t sub_10009C3F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_10009C4E8();

  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_10009C45C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_10009C4E8();

  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_10009C4C0()
{
}

unint64_t sub_10009C4E8()
{
  unint64_t result = qword_10010E360;
  if (!qword_10010E360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010E360);
  }
  return result;
}

uint64_t sub_10009C53C(uint64_t a1)
{
  return a1;
}

uint64_t sub_10009C568(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10009C578()
{
  return swift_release();
}

unint64_t sub_10009C580()
{
  unint64_t result = qword_10010EF70;
  if (!qword_10010EF70)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10010EF70);
  }
  return result;
}

uint64_t sub_10009C5C0(uint64_t a1)
{
  return a1;
}

uint64_t getEnumTagSinglePayload for SharingType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF7)
  {
    unsigned int v2 = a2 + 9;
    if (a2 + 9 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 9;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 9;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x10009C69CLL);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 9;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  if (v7 >= 8) {
    unsigned int v8 = v7 - 7;
  }
  else {
    unsigned int v8 = 0;
  }
  if (v8 >= 3) {
    return v8 - 2;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for SharingType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 9;
  if (a3 + 9 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xF7) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v7 = ((a2 - 247) >> 8) + 1;
    *unint64_t result = a2 + 9;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x10009C784);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *unint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

uint64_t sub_10009C7AC(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 >= 8) {
    return v1 - 7;
  }
  else {
    return 0;
  }
}

unsigned char *sub_10009C7C0(unsigned char *result, int a2)
{
  if (a2) {
    *unint64_t result = a2 + 7;
  }
  return result;
}

ValueMetadata *type metadata accessor for SharingType()
{
  return &type metadata for SharingType;
}

uint64_t sub_10009C7E0(char a1)
{
  return byte_1000D11CE[a1];
}

BOOL sub_10009C7F4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  BOOL v4 = v3 == 8;
  BOOL v5 = v3 == 9;
  int v6 = v3 & 0xFE;
  BOOL v8 = v3 == 7 || v2 == v3;
  if (v2 == 7) {
    BOOL v8 = 1;
  }
  if (v6 == 8) {
    BOOL v8 = 0;
  }
  if (v2 == 9) {
    BOOL v8 = v5;
  }
  if (v2 == 8) {
    return v4;
  }
  else {
    return v8;
  }
}

uint64_t sub_10009C844(char a1)
{
  return *(void *)&aUnspeciNotes_0[8 * a1];
}

uint64_t sub_10009C864()
{
  return sub_10009C844(*v0);
}

uint64_t sub_10009C86C(char a1)
{
  if (a1 == 8) {
    return 0x6E776F6E6B6E752ELL;
  }
  if (a1 == 9) {
    return 0x6E656D75636F642ELL;
  }
  sub_1000C78D0(19);
  swift_bridgeObjectRelease();
  uint64_t v3 = 8 * a1;
  v4._countAndFlagsBits = *(void *)&aUnspeciNotes_0[v3];
  v4._unint64_t object = *(void **)&aFied_0[v3];
  sub_1000C74B0(v4);
  swift_bridgeObjectRelease();
  v5._countAndFlagsBits = 41;
  v5._unint64_t object = (void *)0xE100000000000000;
  sub_1000C74B0(v5);
  return 0xD000000000000010;
}

uint64_t sub_10009C95C()
{
  return sub_10009C86C(*v0);
}

uint64_t sub_10009C964(char a1)
{
  return *(void *)&aFolder_4[8 * a1];
}

uint64_t sub_10009C984(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = sub_10009C964(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_10009C964(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1000C7A50();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

Swift::Int sub_10009CA10()
{
  char v1 = *v0;
  sub_1000C7B10();
  sub_10009C964(v1);
  sub_1000C7480();
  swift_bridgeObjectRelease();
  return sub_1000C7B30();
}

uint64_t sub_10009CA74()
{
  sub_10009C964(*v0);
  sub_1000C7480();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10009CAC8()
{
  char v1 = *v0;
  sub_1000C7B10();
  sub_10009C964(v1);
  sub_1000C7480();
  swift_bridgeObjectRelease();
  return sub_1000C7B30();
}

uint64_t sub_10009CB28@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_10009EE08(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_10009CB58@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10009C964(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_10009CB84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = 0xD000000000000018;
  sub_1000C65B0();
  ((void (*)(void))__chkstk_darwin)();
  uint64_t v59 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000C66D0();
  uint64_t v61 = *(void *)(v6 - 8);
  uint64_t v62 = v6;
  uint64_t v7 = ((uint64_t (*)(void))__chkstk_darwin)();
  long long v58 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  long long v60 = (char *)&v53 - v9;
  uint64_t v10 = sub_100012854((uint64_t *)&unk_10010AFF0);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v53 - v15;
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v53 - v17;
  uint64_t v19 = sub_1000C6690();
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v21 = __chkstk_darwin(v20);
  uint64_t v22 = __chkstk_darwin(v21);
  unint64_t v24 = (char *)&v53 - v23;
  uint64_t v25 = __chkstk_darwin(v22);
  unsigned __int8 v30 = (char *)&v53 - v29;
  if (a1 == 0x726464756F6C6369 && a2 == 0xEB00000000657669) {
    return 0xD00000000000001BLL;
  }
  uint64_t v54 = v28;
  uint64_t v55 = v27;
  uint64_t v56 = v26;
  uint64_t v57 = v25;
  if (sub_1000C7A50()) {
    return 0xD00000000000001BLL;
  }
  unint64_t v31 = 0xD000000000000014;
  if (a1 == 0x7365746F6ELL && a2 == 0xE500000000000000 || (sub_1000C7A50() & 1) != 0) {
    return v31;
  }
  if ((a1 != 0x7265646E696D6572 || a2 != 0xE900000000000073) && (sub_1000C7A50() & 1) == 0)
  {
    unint64_t v31 = 0xD000000000000019;
    if (a1 == 0xD000000000000011 && a2 == 0x80000001000D8BD0 || (sub_1000C7A50() & 1) != 0) {
      return v31;
    }
    if ((a1 != 0x6D726F6665657266 || a2 != 0xE800000000000000) && (sub_1000C7A50() & 1) == 0)
    {
      swift_bridgeObjectRetain();
      sub_1000C66A0();
      uint64_t v33 = v56;
      char v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48);
      if (v34(v18, 1, v57) == 1)
      {
        sub_10001326C((uint64_t)v18, (uint64_t *)&unk_10010AFF0);
        swift_bridgeObjectRetain();
        sub_1000C65A0();
        uint64_t v35 = v57;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v33 + 56))(v13, 1, 1, v57);
        sub_1000C6600();
        if (v34(v16, 1, v35) == 1)
        {
          sub_10001326C((uint64_t)v16, (uint64_t *)&unk_10010AFF0);
          swift_bridgeObjectRetain();
          return a1;
        }
        else
        {
          uint64_t v43 = v55;
          (*(void (**)(uint64_t, char *, uint64_t))(v33 + 32))(v55, v16, v35);
          uint64_t v44 = v58;
          sub_1000C66B0();
          uint64_t v45 = v54;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16))(v54, v43, v35);
          uint64_t v46 = sub_1000C66C0();
          os_log_type_t v47 = sub_1000C7690();
          if (os_log_type_enabled(v46, v47))
          {
            uint64_t v48 = (uint8_t *)swift_slowAlloc();
            uint64_t v64 = swift_slowAlloc();
            *(_DWORD *)uint64_t v48 = 136315138;
            uint64_t v49 = sub_1000C65C0();
            uint64_t v63 = sub_1000720D0(v49, v50, &v64);
            sub_1000C7850();
            swift_bridgeObjectRelease();
            uint64_t v51 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
            v51(v45, v57);
            _os_log_impl((void *)&_mh_execute_header, v46, v47, "utiOfItem(fromCKShareType)--type from filename extension: %s", v48, 0xCu);
            swift_arrayDestroy();
            uint64_t v35 = v57;
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
            uint64_t v51 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
            v51(v45, v35);
          }

          (*(void (**)(char *, uint64_t))(v61 + 8))(v44, v62);
          uint64_t v52 = v55;
          uint64_t v4 = sub_1000C65C0();
          v51(v52, v35);
        }
      }
      else
      {
        uint64_t v36 = v57;
        (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v30, v18, v57);
        sub_1000C6620();
        char v37 = sub_1000C6680();
        uint64_t v38 = *(void (**)(char *, uint64_t))(v33 + 8);
        v38(v24, v36);
        uint64_t v39 = v60;
        sub_1000C66B0();
        char v40 = sub_1000C66C0();
        os_log_type_t v41 = sub_1000C7690();
        if (os_log_type_enabled(v40, v41))
        {
          uint64_t v42 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)uint64_t v42 = 67109120;
          LODWORD(v64) = v37 & 1;
          sub_1000C7850();
          _os_log_impl((void *)&_mh_execute_header, v40, v41, "utiOfItem(fromCKShareType)--ckShareType is a UTType. Is file system item: %{BOOL}d", v42, 8u);
          swift_slowDealloc();
        }

        (*(void (**)(char *, uint64_t))(v61 + 8))(v39, v62);
        uint64_t v4 = sub_1000C65C0();
        v38(v30, v57);
      }
    }
  }
  return v4;
}

unint64_t sub_10009D40C(char *a1, void *a2)
{
  id v41 = a2;
  uint64_t v3 = sub_1000C6530();
  uint64_t v42 = *(void *)(v3 - 8);
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v38 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v35 - v6;
  uint64_t v8 = sub_1000C66D0();
  uint64_t v39 = *(void *)(v8 - 8);
  uint64_t v40 = v8;
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v43 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v35 - v11;
  uint64_t v13 = sub_1000C6370();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100012854((uint64_t *)&unk_10010B000);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1000CABA0;
  *(void *)(inited + 32) = NSURLTypeIdentifierKey;
  uint64_t v18 = NSURLTypeIdentifierKey;
  uint64_t v19 = sub_100072F30(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy();
  URL.evictionSafeResourceValues(forKeys:)((uint64_t)v19, (uint64_t)v16);
  uint64_t v38 = a1;
  uint64_t v43 = v7;
  uint64_t v20 = v42;
  swift_bridgeObjectRelease();
  uint64_t v21 = sub_1000C6340();
  if (!v22)
  {
    char v37 = v16;
    uint64_t v27 = v12;
    sub_1000C66B0();
    uint64_t v28 = v43;
    uint64_t v29 = v3;
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v43, v38, v3);
    unsigned __int8 v30 = sub_1000C66C0();
    os_log_type_t v31 = sub_1000C7670();
    if (os_log_type_enabled(v30, v31))
    {
      unint64_t v32 = (uint8_t *)swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      v44[0] = v36;
      uint64_t v38 = v27;
      *(_DWORD *)unint64_t v32 = 136315138;
      uint64_t v35 = v32 + 4;
      sub_100037144();
      uint64_t v33 = sub_1000C7A20();
      uint64_t v45 = sub_1000720D0(v33, v34, v44);
      sub_1000C7850();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v28, v29);
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "resourceValues(forKeys:) returned nil for typeIdentifier (UTI) for URL: %s", v32, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v39 + 8))(v38, v40);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v20 + 8))(v28, v29);
      (*(void (**)(char *, uint64_t))(v39 + 8))(v27, v40);
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v37, v13);
    if (v41)
    {
      id v24 = v41;
      sub_1000C77E0();
      uint64_t v25 = sub_1000C77F0();

      swift_bridgeObjectRelease();
      if (v25)
      {
        uint64_t v45 = v25;
        sub_100012854(&qword_10010BEA0);
        if (swift_dynamicCast())
        {
          unint64_t v23 = sub_10009CB84(v44[0], v44[1]);

          swift_bridgeObjectRelease();
          return v23;
        }
      }
    }
    return 0;
  }
  unint64_t v23 = v21;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  return v23;
}

uint64_t sub_10009DB54()
{
  uint64_t v0 = sub_1000C6690();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000C6650();
  char v4 = sub_1000C6670();
  uint64_t v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  if (v4) {
    return 0;
  }
  sub_1000C65E0();
  char v7 = sub_1000C6670();
  v5(v3, v0);
  if (v7) {
    return 3;
  }
  sub_1000C65D0();
  char v8 = sub_1000C6670();
  v5(v3, v0);
  if (v8) {
    return 2;
  }
  sub_1000C6630();
  char v9 = sub_1000C6670();
  v5(v3, v0);
  if (v9) {
    return 4;
  }
  sub_1000C6640();
  char v10 = sub_1000C6670();
  v5(v3, v0);
  if (v10) {
    return 5;
  }
  sub_1000C65F0();
  char v11 = sub_1000C6670();
  v5(v3, v0);
  if (v11) {
    return 6;
  }
  else {
    return 1;
  }
}

uint64_t sub_10009DD3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v33 = a1;
  uint64_t v5 = sub_1000C65B0();
  __chkstk_darwin(v5 - 8);
  char v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100012854((uint64_t *)&unk_10010AFF0);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  char v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v32 - v13;
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v32 - v15;
  uint64_t v17 = sub_1000C6690();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v32 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  unint64_t v23 = (char *)&v32 - v22;
  uint64_t v24 = sub_1000C6530();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48))(a3, 1, v24) == 1)
  {
    uint64_t v25 = v33;
    if (v33 == 0xD000000000000014 && a2 == 0x80000001000D8B30 || (sub_1000C7A50() & 1) != 0)
    {
      return 7;
    }
    else if (v25 == 0xD000000000000016 && a2 == 0x80000001000D8B50 || (sub_1000C7A50() & 1) != 0)
    {
      return 8;
    }
    else if (v25 == 0xD000000000000018 && a2 == 0x80000001000D8B70 || (sub_1000C7A50() & 1) != 0)
    {
      return 9;
    }
    else if (v25 == 0xD000000000000019 && a2 == 0x80000001000D8B90 || (sub_1000C7A50() & 1) != 0)
    {
      return 10;
    }
    else if (v25 == 0x6C656D726163 && a2 == 0xE600000000000000)
    {
      return 11;
    }
    else
    {
      char v29 = sub_1000C7A50();
      BOOL v31 = v25 == 0xD000000000000018 && a2 == 0x80000001000D8BB0;
      uint64_t v26 = 11;
      if ((v29 & 1) == 0
        && !v31
        && (sub_1000C7A50() & 1) == 0
        && (v25 != 0x6D726F6665657266 || a2 != 0xE800000000000000))
      {
        if (sub_1000C7A50()) {
          return 11;
        }
        else {
          return 12;
        }
      }
    }
  }
  else
  {
    unint64_t v32 = v7;
    swift_bridgeObjectRetain();
    sub_1000C66A0();
    uint64_t v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
    if (v27(v16, 1, v17) == 1)
    {
      sub_10001326C((uint64_t)v16, (uint64_t *)&unk_10010AFF0);
      swift_bridgeObjectRetain();
      sub_1000C65A0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v11, 1, 1, v17);
      sub_1000C6600();
      if (v27(v14, 1, v17) == 1)
      {
        sub_10001326C((uint64_t)v14, (uint64_t *)&unk_10010AFF0);
        return 1;
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v21, v14, v17);
        uint64_t v26 = sub_10009DB54();
        (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
      }
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v23, v16, v17);
      uint64_t v26 = sub_10009DB54();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v23, v17);
    }
  }
  return v26;
}

uint64_t sub_10009E2A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000C65B0();
  __chkstk_darwin(v4 - 8);
  uint64_t v39 = (char *)v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100012854((uint64_t *)&unk_10010BDD0);
  __chkstk_darwin(v6 - 8);
  uint64_t v38 = (char *)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100012854((uint64_t *)&unk_10010AFF0);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  char v11 = (char *)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)v37 - v13;
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)v37 - v15;
  uint64_t v17 = sub_1000C6690();
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v20 = (char *)v37 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v18);
  unint64_t v23 = (char *)v37 - v22;
  uint64_t v24 = __chkstk_darwin(v21);
  uint64_t v27 = (char *)v37 - v26;
  if (a1 == 0x726464756F6C6369 && a2 == 0xEB00000000657669) {
    return 1;
  }
  uint64_t v28 = v25;
  uint64_t v29 = v24;
  if (sub_1000C7A50()) {
    return 1;
  }
  if (a1 == 0x737265626D756ELL && a2 == 0xE700000000000000 || (sub_1000C7A50() & 1) != 0) {
    return 2;
  }
  if (a1 == 0x7365676170 && a2 == 0xE500000000000000 || (sub_1000C7A50() & 1) != 0) {
    return 1;
  }
  if (a1 == 0x65746F6E79656BLL && a2 == 0xE700000000000000 || (sub_1000C7A50() & 1) != 0) {
    return 3;
  }
  if (a1 == 0x7365746F6ELL && a2 == 0xE500000000000000 || (sub_1000C7A50() & 1) != 0) {
    return 7;
  }
  if (a1 == 0xD000000000000016 && a2 == 0x80000001000D8B50 || (sub_1000C7A50() & 1) != 0) {
    return 8;
  }
  if (a1 == 0x7265646E696D6572 && a2 == 0xE900000000000073
    || (sub_1000C7A50() & 1) != 0
    || a1 == 0xD000000000000018 && a2 == 0x80000001000D8B70
    || (sub_1000C7A50() & 1) != 0)
  {
    return 9;
  }
  if (a1 == 0xD000000000000011 && a2 == 0x80000001000D8BD0 || (sub_1000C7A50() & 1) != 0) {
    return 10;
  }
  if (a1 == 0x6D726F6665657266 && a2 == 0xE800000000000000 || (sub_1000C7A50() & 1) != 0) {
    return 11;
  }
  swift_bridgeObjectRetain();
  sub_1000C66A0();
  v37[0] = *(void *)(v28 + 48);
  v37[1] = v28 + 48;
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v37[0])(v16, 1, v29) == 1)
  {
    sub_10001326C((uint64_t)v16, (uint64_t *)&unk_10010AFF0);
    swift_bridgeObjectRetain();
    sub_1000C65A0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56))(v11, 1, 1, v29);
    sub_1000C6600();
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v37[0])(v14, 1, v29) == 1)
    {
      sub_10001326C((uint64_t)v14, (uint64_t *)&unk_10010AFF0);
      return 12;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v20, v14, v29);
      uint64_t v30 = sub_10009DB54();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v20, v29);
    }
  }
  else
  {
    uint64_t v32 = v28;
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v27, v16, v29);
    sub_1000C6620();
    char v33 = sub_1000C6680();
    unint64_t v34 = *(void (**)(char *, uint64_t))(v32 + 8);
    v34(v23, v29);
    if (v33)
    {
      uint64_t v30 = sub_10009DB54();
    }
    else
    {
      uint64_t v35 = sub_1000C6530();
      uint64_t v36 = (uint64_t)v38;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v38, 1, 1, v35);
      uint64_t v30 = sub_10009DD3C(a1, a2, v36);
      sub_10001326C(v36, (uint64_t *)&unk_10010BDD0);
    }
    v34(v27, v29);
  }
  return v30;
}

uint64_t getEnumTagSinglePayload for CloudKitAppType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CloudKitAppType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10009EB7CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CloudKitAppType()
{
  return &type metadata for CloudKitAppType;
}

unint64_t sub_10009EBB8()
{
  unint64_t result = qword_10010E380;
  if (!qword_10010E380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010E380);
  }
  return result;
}

ValueMetadata *type metadata accessor for UTISupport()
{
  return &type metadata for UTISupport;
}

uint64_t getEnumTagSinglePayload for UTISupport.SharingItemType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF3) {
    goto LABEL_17;
  }
  if (a2 + 13 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 13) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 13;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 13;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 13;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xE;
  int v8 = v6 - 14;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for UTISupport.SharingItemType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 13 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 13) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF2)
  {
    unsigned int v6 = ((a2 - 243) >> 8) + 1;
    *unint64_t result = a2 + 13;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10009ED78);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 13;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UTISupport.SharingItemType()
{
  return &type metadata for UTISupport.SharingItemType;
}

unint64_t sub_10009EDB4()
{
  unint64_t result = qword_10010E388;
  if (!qword_10010E388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010E388);
  }
  return result;
}

uint64_t sub_10009EE08(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1000FF5D8;
  v6._unint64_t object = a2;
  unint64_t v4 = sub_1000C79F0(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 0xE) {
    return 14;
  }
  else {
    return v4;
  }
}

ValueMetadata *type metadata accessor for OfflineView()
{
  return &type metadata for OfflineView;
}

uint64_t sub_10009EE64()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10009EE80()
{
  uint64_t v0 = sub_1000C6D20();
  sub_10009F028((uint64_t)&v9);
  char v1 = v10;
  uint64_t v2 = *(void *)v11;
  char v3 = v12;
  uint64_t v4 = v13;
  long long v5 = v9;
  long long v6 = *(_OWORD *)&v11[8];
  long long v9 = (unint64_t)v0;
  char v10 = 1;
  *(_OWORD *)char v11 = v5;
  unsigned char v11[16] = v1;
  uint64_t v12 = v2;
  long long v13 = v6;
  char v14 = v3;
  uint64_t v15 = v4;
  sub_100012854(&qword_10010DB78);
  sub_100012854(&qword_10010DDE8);
  sub_10001E454(&qword_10010DB70, &qword_10010DB78);
  sub_100013128(&qword_10010DE00);
  sub_10001E454(&qword_10010DE08, &qword_10010DE00);
  swift_getOpaqueTypeConformance2();
  sub_1000C70F0();
  long long v7 = v13;
  LOBYTE(v0) = v14;
  sub_100039234(*(uint64_t *)v11, *(uint64_t *)&v11[8], v11[16]);
  swift_bridgeObjectRelease();
  sub_100039234(v7, *((uint64_t *)&v7 + 1), v0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10009F028@<X0>(uint64_t a1@<X8>)
{
  sub_1000C6D00();
  uint64_t v2 = sub_1000C6FF0();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  sub_1000C6EF0();
  uint64_t v7 = sub_1000C6FE0();
  uint64_t v9 = v8;
  char v11 = v10;
  swift_release();
  char v12 = v11 & 1;
  sub_100039234(v2, v4, v6);
  swift_bridgeObjectRelease();
  sub_1000C7170();
  uint64_t v13 = sub_1000C6FB0();
  uint64_t v32 = v14;
  uint64_t v33 = v13;
  char v16 = v15;
  uint64_t v34 = v17;
  swift_release();
  char v31 = v16 & 1;
  sub_100039234(v7, v9, v12);
  swift_bridgeObjectRelease();
  sub_1000C6D00();
  uint64_t v18 = sub_1000C6FF0();
  uint64_t v20 = v19;
  char v22 = v21 & 1;
  sub_1000C7170();
  uint64_t v23 = sub_1000C6FB0();
  uint64_t v25 = v24;
  char v27 = v26;
  uint64_t v29 = v28;
  swift_release();
  v27 &= 1u;
  sub_100039234(v18, v20, v22);
  swift_bridgeObjectRelease();
  *(void *)a1 = v33;
  *(void *)(a1 + 8) = v32;
  *(unsigned char *)(a1 + 16) = v31;
  *(void *)(a1 + 24) = v34;
  *(void *)(a1 + 32) = v23;
  *(void *)(a1 + 40) = v25;
  *(unsigned char *)(a1 + 48) = v27;
  *(void *)(a1 + 56) = v29;
  sub_100039224(v33, v32, v31);
  swift_bridgeObjectRetain();
  sub_100039224(v23, v25, v27);
  swift_bridgeObjectRetain();
  sub_100039234(v23, v25, v27);
  swift_bridgeObjectRelease();
  sub_100039234(v33, v32, v31);

  return swift_bridgeObjectRelease();
}

uint64_t sub_10009F2A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000C6D80();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_100012854(&qword_10010DE00);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1000C6D70();
  uint64_t v11 = a1;
  uint64_t v12 = a2;
  sub_100012854(&qword_10010DE30);
  sub_10001E454(&qword_10010DE38, &qword_10010DE30);
  sub_1000C6980();
  sub_10001E454(&qword_10010DE08, &qword_10010DE00);
  sub_1000C6DB0();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10009F46C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  swift_retain();
  sub_100012854(&qword_10010DE40);
  sub_10009600C();

  return sub_1000C7230();
}

uint64_t sub_10009F520(uint64_t a1)
{
  if (a1)
  {
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      sub_10000AB98();
      uint64_t v2 = (void *)sub_10000A1F4();
      if (v2)
      {
        [v2 _dismissViewControllerWithError:0];
        swift_unknownObjectRelease();
      }
      return swift_unknownObjectRelease();
    }
  }
  else
  {
    type metadata accessor for SharingModel();
    sub_10009FC68((unint64_t *)&qword_10010BF20, (void (*)(uint64_t))type metadata accessor for SharingModel);
    uint64_t result = sub_1000C6B20();
    __break(1u);
  }
  return result;
}

uint64_t sub_10009F5F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_100012854(&qword_10010DE78);
  uint64_t v3 = v2 - 8;
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_1000C71C0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000C71A0();
  uint64_t v11 = self;
  id v12 = [v11 secondaryLabelColor];
  uint64_t v13 = sub_1000C7180();
  id v14 = [v11 quaternaryLabelColor];
  uint64_t v15 = sub_1000C7180();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for Image.Scale.large(_:), v6);
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))((char *)v5 + *(int *)(v3 + 36), v9, v6);
  *uint64_t v5 = KeyPath;
  uint64_t v17 = sub_100012854(&qword_10010DE40);
  sub_10009FBA0((uint64_t)v5, (uint64_t)a1 + *(int *)(v17 + 36));
  *a1 = v10;
  a1[1] = v13;
  a1[2] = v15;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10009FC08((uint64_t)v5);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_10009F83C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v19 = a1;
  uint64_t v18 = sub_1000C6DE0();
  uint64_t v2 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100012854(&qword_10010E390);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v20 = *v1;
  v17[1] = sub_100012854(&qword_10010E398);
  uint64_t v9 = sub_100013128(&qword_10010DB78);
  uint64_t v10 = sub_100013128(&qword_10010DDE8);
  uint64_t v11 = sub_10001E454(&qword_10010DB70, &qword_10010DB78);
  uint64_t v12 = sub_100013128(&qword_10010DE00);
  uint64_t v13 = sub_10001E454(&qword_10010DE08, &qword_10010DE00);
  uint64_t v21 = v12;
  uint64_t v22 = v13;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v21 = v9;
  uint64_t v22 = v10;
  uint64_t v23 = v11;
  uint64_t v24 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  sub_1000C6A50();
  sub_1000C6DD0();
  sub_10001E454(&qword_10010E3A0, &qword_10010E390);
  sub_10009FC68(&qword_10010DE18, (void (*)(uint64_t))&type metadata accessor for StackNavigationViewStyle);
  uint64_t v15 = v18;
  sub_1000C7010();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v15);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10009FB40()
{
  return sub_10009EE80();
}

uint64_t sub_10009FB48()
{
  return sub_10009F2A0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10009FB50()
{
  return sub_10009F46C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10009FB58()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10009FB90()
{
  return sub_10009F520(*(void *)(v0 + 16));
}

uint64_t sub_10009FBA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100012854(&qword_10010DE78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10009FC08(uint64_t a1)
{
  uint64_t v2 = sub_100012854(&qword_10010DE78);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10009FC68(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10009FCB0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10009FD80()
{
  v1[33] = v0;
  sub_100012854(&qword_10010B770);
  v1[34] = swift_task_alloc();
  sub_100012854((uint64_t *)&unk_10010BDD0);
  v1[35] = swift_task_alloc();
  uint64_t v2 = sub_1000C6530();
  v1[36] = v2;
  v1[37] = *(void *)(v2 - 8);
  v1[38] = swift_task_alloc();
  uint64_t v3 = sub_1000C66D0();
  v1[39] = v3;
  v1[40] = *(void *)(v3 - 8);
  v1[41] = swift_task_alloc();
  v1[42] = swift_task_alloc();
  v1[43] = swift_task_alloc();
  v1[44] = sub_1000C75D0();
  v1[45] = sub_1000C75C0();
  uint64_t v5 = sub_1000C7590();
  v1[46] = v5;
  v1[47] = v4;
  return _swift_task_switch(sub_10009FF50, v5, v4);
}

uint64_t sub_10009FF50()
{
  uint64_t v35 = v0;
  sub_1000C66B0();
  char v1 = sub_1000C66C0();
  os_log_type_t v2 = sub_1000C7690();
  if (os_log_type_enabled(v1, v2))
  {
    os_log_type_t v33 = v2;
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v34 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315138;
    uint64_t v4 = sub_1000C7500();
    uint64_t v6 = v5;
    if ((0x80000001000D8D20 & 0x2000000000000000) != 0) {
      unint64_t v7 = (0x80000001000D8D20 & 0xF00000000000000) >> 54;
    }
    else {
      unint64_t v7 = 148;
    }
    if ((((unint64_t)"ngError thrown: " >> 61) & ((0x80000001000D8D20 & 0xF00000000000000) >> 54 == 0)) != 0)
    {
LABEL_13:
      swift_bridgeObjectRelease();
      uint64_t v12 = 0;
      unint64_t v13 = 0xE000000000000000;
    }
    else
    {
      uint64_t v8 = v4;
      while (sub_1000C7500() != v8 || v9 != v6)
      {
        char v11 = sub_1000C7A50();
        swift_bridgeObjectRelease();
        if (v11) {
          goto LABEL_16;
        }
        if (v7 == (unint64_t)sub_1000C74A0() >> 14) {
          goto LABEL_13;
        }
      }
      swift_bridgeObjectRelease();
LABEL_16:
      swift_bridgeObjectRelease();
      sub_1000C7510();
      uint64_t v12 = sub_1000C7470();
      unint64_t v13 = v18;
      swift_bridgeObjectRelease();
    }
    uint64_t v19 = *(void *)(v0 + 344);
    uint64_t v21 = *(void *)(v0 + 312);
    uint64_t v20 = *(void *)(v0 + 320);
    *(void *)(v0 + 224) = sub_1000720D0(v12, v13, &v34);
    sub_1000C7850();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v33, "running %s() for UI", v3, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
    v17(v19, v21);
  }
  else
  {
    uint64_t v14 = *(void *)(v0 + 344);
    uint64_t v15 = *(void *)(v0 + 312);
    uint64_t v16 = *(void *)(v0 + 320);

    uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v17(v14, v15);
  }
  *(void *)(v0 + 384) = v17;
  uint64_t v22 = *(void *)(v0 + 288);
  uint64_t v23 = *(void *)(v0 + 296);
  uint64_t v24 = *(void *)(v0 + 280);
  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 59) = 1;
  swift_retain();
  sub_1000C67F0();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v24, 1, v22) == 1)
  {
    sub_100088B98(*(void *)(v0 + 280));
    char v25 = 0;
  }
  else
  {
    uint64_t v27 = *(void *)(v0 + 296);
    uint64_t v26 = *(void *)(v0 + 304);
    uint64_t v28 = *(void *)(v0 + 288);
    (*(void (**)(uint64_t, void, uint64_t))(v27 + 32))(v26, *(void *)(v0 + 280), v28);
    int v29 = shareStatus(url:)();
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
    char v25 = (v29 & 0x10001) == 1;
  }
  uint64_t v30 = (void *)swift_task_alloc();
  *(void *)(v0 + 392) = v30;
  *uint64_t v30 = v0;
  v30[1] = sub_1000A0394;
  uint64_t v31 = *(void *)(v0 + 264);
  return sub_100070148(60, v31, v25);
}

uint64_t sub_1000A0394()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 400) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 376);
  uint64_t v4 = *(void *)(v2 + 368);
  if (v0) {
    uint64_t v5 = sub_1000A06D0;
  }
  else {
    uint64_t v5 = sub_1000A04D0;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1000A04D0()
{
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  if (*(unsigned char *)(v0 + 107) == 1
    && (swift_getKeyPath(),
        swift_getKeyPath(),
        sub_1000C67E0(),
        swift_release(),
        swift_release(),
        (*(unsigned char *)(v0 + 109) & 0xFE) != 8))
  {
    swift_getKeyPath();
    swift_getKeyPath();
    *(unsigned char *)(v0 + 110) = 2;
  }
  else
  {
    swift_getKeyPath();
    swift_getKeyPath();
    *(unsigned char *)(v0 + 108) = 4;
  }
  swift_retain();
  sub_1000C67F0();
  if (swift_unknownObjectWeakLoadStrong())
  {
    sub_10000EBAC();
    swift_unknownObjectRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000A06D0()
{
  uint64_t v110 = v0;
  swift_release();
  if (swift_unknownObjectWeakLoadStrong())
  {
    sub_10000EBAC();
    swift_unknownObjectRelease();
  }
  *(void *)(v0 + 248) = *(void *)(v0 + 400);
  sub_100012854((uint64_t *)&unk_10010B010);
  if (!swift_dynamicCast())
  {
    swift_errorRelease();
    return sub_1000C7980();
  }
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v3 = *(void **)(v0 + 128);
  uint64_t v4 = *(void *)(v0 + 136);
  uint64_t v5 = *(void *)(v0 + 144);
  int v6 = *(unsigned __int8 *)(v0 + 152);
  sub_1000C66B0();
  sub_1000236F4(v2, v1, v3, v4, v5, v6);
  sub_1000236F4(v2, v1, v3, v4, v5, v6);
  uint64_t v7 = sub_1000C66C0();
  os_log_type_t type = sub_1000C7670();
  BOOL v8 = os_log_type_enabled(v7, type);
  uint64_t v104 = *(void (**)(uint64_t, uint64_t))(v0 + 384);
  uint64_t v100 = *(void *)(v0 + 312);
  uint64_t v102 = *(void *)(v0 + 336);
  uint64_t v107 = v1;
  if (v8)
  {
    loga = v7;
    uint64_t v9 = v1;
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v108 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315138;
    *(void *)(v0 + 160) = v2;
    *(void *)(v0 + 168) = v1;
    *(void *)(v0 + 176) = v3;
    *(void *)(v0 + 184) = v4;
    *(void *)(v0 + 192) = v5;
    *(unsigned char *)(v0 + 200) = v6;
    sub_1000236F4(v2, v1, v3, v4, v5, v6);
    uint64_t v11 = sub_1000C7450();
    *(void *)(v0 + 232) = sub_1000720D0(v11, v12, &v108);
    sub_1000C7850();
    swift_bridgeObjectRelease();
    sub_10002376C(v2, v1, v3, v4, v5, v6);
    uint64_t v13 = v5;
    sub_10002376C(v2, v9, v3, v4, v5, v6);
    uint64_t v7 = loga;
    _os_log_impl((void *)&_mh_execute_header, loga, type, "Failed to fetch share: %s", v10, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10002376C(v2, v1, v3, v4, v5, v6);
    uint64_t v14 = v1;
    uint64_t v13 = v5;
    sub_10002376C(v2, v14, v3, v4, v5, v6);
  }

  v104(v102, v100);
  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 106) = 2;
  swift_retain();
  uint64_t result = sub_1000C67F0();
  if (v6 != 5)
  {
    uint64_t v108 = 0;
    unint64_t v109 = 0xE000000000000000;
    sub_1000C78D0(34);
    unint64_t v22 = v109;
    *(void *)(v0 + 208) = v108;
    *(void *)(v0 + 216) = v22;
    v112._countAndFlagsBits = 0xD000000000000020;
    v112._unint64_t object = (void *)0x80000001000D8CF0;
    sub_1000C74B0(v112);
    *(void *)(v0 + 16) = v2;
    *(void *)(v0 + 24) = v107;
    *(void *)(v0 + 32) = v3;
    *(void *)(v0 + 40) = v4;
    *(void *)(v0 + 48) = v13;
    *(unsigned char *)(v0 + 56) = v6;
    sub_1000C7960();
    return sub_1000C7980();
  }
  if (!v3)
  {
    __break(1u);
    return result;
  }
  uint64_t v16 = v13;
  swift_bridgeObjectRetain();
  id v17 = v3;
  swift_bridgeObjectRetain();
  if (sub_1000239F0(3))
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v18 = v2;
    uint64_t v19 = v107;
    uint64_t v20 = v3;
    uint64_t v21 = v4;
    goto LABEL_66;
  }
  uint64_t v106 = v3;
  uint64_t v103 = v4;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  uint64_t v23 = &selRef_setOtherAddressesAlreadyChosen_;
  if (*(unsigned char *)(v0 + 105) == 3)
  {
    id v24 = v17;
    id v25 = [v24 domain];
    uint64_t v26 = sub_1000C7440();
    uint64_t v28 = v27;

    if (v26 == sub_1000C7440() && v28 == v29)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v30 = sub_1000C7A50();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v30 & 1) == 0)
      {

        uint64_t v23 = &selRef_setOtherAddressesAlreadyChosen_;
        goto LABEL_24;
      }
    }
    id v31 = [v24 code];

    BOOL v77 = v31 == (id)20;
    uint64_t v23 = &selRef_setOtherAddressesAlreadyChosen_;
    if (v77) {
      goto LABEL_33;
    }
LABEL_24:
    id v32 = v24;
    id v33 = [v32 v23[210]];
    uint64_t v34 = sub_1000C7440();
    uint64_t v36 = v35;

    if (v34 == sub_1000C7440() && v36 == v37)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v38 = sub_1000C7A50();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v38 & 1) == 0)
      {

LABEL_32:
        swift_getKeyPath();
        swift_getKeyPath();
        sub_1000C67E0();
        swift_release();
        swift_release();
        BOOL v40 = (*(unsigned char *)(v0 + 63) & 0xFE) == 2;
        id v41 = v32;
        sub_100067284(4 * v40, v106);

        uint64_t v23 = &selRef_setOtherAddressesAlreadyChosen_;
        goto LABEL_33;
      }
    }
    id v39 = [v32 code];

    BOOL v77 = v39 == (id)7;
    uint64_t v23 = &selRef_setOtherAddressesAlreadyChosen_;
    if (v77) {
      goto LABEL_33;
    }
    goto LABEL_32;
  }
LABEL_33:
  id v42 = v17;
  id v43 = [v42 v23[210]];
  uint64_t v44 = sub_1000C7440();
  uint64_t v46 = v45;

  if (v44 == sub_1000C7440() && v46 == v47)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v48 = sub_1000C7A50();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v48 & 1) == 0)
    {

      goto LABEL_40;
    }
  }
  id v49 = [v42 code];

  if (v49 == (id)20)
  {
    BOOL v50 = 0;
    goto LABEL_46;
  }
LABEL_40:
  id v51 = v42;
  id v52 = [v51 domain];
  uint64_t v53 = sub_1000C7440();
  uint64_t v55 = v54;

  if (v53 == sub_1000C7440() && v55 == v56)
  {
    swift_bridgeObjectRelease_n();
LABEL_44:
    id v58 = [v51 code];

    BOOL v50 = v58 != (id)7;
    goto LABEL_46;
  }
  char v57 = sub_1000C7A50();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v57) {
    goto LABEL_44;
  }

  BOOL v50 = 1;
LABEL_46:
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  if (*(unsigned char *)(v0 + 58) != 1 || v50)
  {
    uint64_t v65 = (unsigned char *)(v0 + 57);
    sub_1000C66B0();
    uint64_t v66 = v107;
    sub_1000236F4(v2, v107, v106, v103, v16, 5u);
    swift_bridgeObjectRetain();
    id v67 = v42;
    swift_bridgeObjectRetain();
    int v68 = sub_1000C66C0();
    os_log_type_t v69 = sub_1000C7670();
    uint64_t v105 = v67;
    if (os_log_type_enabled(v68, v69))
    {
      os_log_type_t v94 = v69;
      os_log_t log = v68;
      uint64_t v99 = v16;
      Swift::String_optional v70 = (_DWORD *)swift_slowAlloc();
      uint64_t v108 = swift_slowAlloc();
      Swift::String v95 = v70;
      _DWORD *v70 = 136315394;
      uint64_t v71 = sub_1000C7500();
      uint64_t v73 = v72;
      if ((0x80000001000D8D20 & 0x2000000000000000) != 0) {
        unint64_t v74 = (0x80000001000D8D20 & 0xF00000000000000) >> 54;
      }
      else {
        unint64_t v74 = 148;
      }
      if ((((unint64_t)"ngError thrown: " >> 61) & ((0x80000001000D8D20 & 0xF00000000000000) >> 54 == 0)) != 0)
      {
LABEL_62:
        swift_bridgeObjectRelease();
        uint64_t v79 = 0;
        unint64_t v80 = 0xE000000000000000;
      }
      else
      {
        uint64_t v75 = v71;
        while (1)
        {
          BOOL v77 = sub_1000C7500() == v75 && v76 == v73;
          if (v77) {
            break;
          }
          char v78 = sub_1000C7A50();
          swift_bridgeObjectRelease();
          if (v78) {
            goto LABEL_68;
          }
          if (v74 == (unint64_t)sub_1000C74A0() >> 14) {
            goto LABEL_62;
          }
        }
        swift_bridgeObjectRelease();
LABEL_68:
        swift_bridgeObjectRelease();
        sub_1000C7510();
        uint64_t v79 = sub_1000C7470();
        unint64_t v80 = v85;
        swift_bridgeObjectRelease();
      }
      uint64_t v92 = *(void *)(v0 + 328);
      uint64_t v93 = *(void (**)(uint64_t, uint64_t))(v0 + 384);
      uint64_t v91 = *(void *)(v0 + 312);
      *(void *)(v0 + 256) = sub_1000720D0(v79, v80, &v108);
      sub_1000C7850();
      swift_bridgeObjectRelease();
      *((_WORD *)v95 + 6) = 2080;
      *(void *)(v0 + 64) = v2;
      *(void *)(v0 + 72) = v107;
      *(void *)(v0 + 80) = v106;
      *(void *)(v0 + 88) = v103;
      *(void *)(v0 + 96) = v99;
      *(unsigned char *)(v0 + 104) = 5;
      sub_1000236F4(v2, v107, v106, v103, v99, 5u);
      uint64_t v86 = sub_1000C7450();
      *(void *)(v0 + 240) = sub_1000720D0(v86, v87, &v108);
      sub_1000C7850();
      uint64_t v84 = v106;
      swift_bridgeObjectRelease();
      sub_10002376C(v2, v107, v106, v103, v99, 5u);
      sub_10002376C(v2, v107, v106, v103, v99, 5u);
      _os_log_impl((void *)&_mh_execute_header, log, v94, "%s error: %s", (uint8_t *)v95, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v81 = v103;
      uint64_t v66 = v107;
      uint64_t v16 = v99;
      v93(v92, v91);
      uint64_t v65 = (unsigned char *)(v0 + 57);
    }
    else
    {
      uint64_t v101 = *(void (**)(uint64_t, uint64_t))(v0 + 384);
      uint64_t v81 = v103;
      uint64_t v82 = *(void *)(v0 + 328);
      uint64_t v83 = *(void *)(v0 + 312);
      sub_10002376C(v2, v107, v106, v103, v16, 5u);
      sub_10002376C(v2, v107, v106, v103, v16, 5u);

      uint64_t v84 = v106;
      v101(v82, v83);
    }
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1000C67E0();
    swift_release();
    swift_release();
    BOOL v88 = (*v65 & 0xFE) == 2;
    id v89 = v105;
    sub_100067284(4 * v88, v84);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10002376C(v2, v66, v84, v81, v16, 5u);

    goto LABEL_71;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  int v59 = *(unsigned __int8 *)(v0 + 111);
  swift_getKeyPath();
  swift_getKeyPath();
  if (v59 == 1)
  {
    uint64_t v61 = *(void *)(v0 + 264);
    uint64_t v60 = *(void *)(v0 + 272);
    *(unsigned char *)(v0 + 61) = 2;
    swift_retain();
    sub_1000C67F0();
    swift_getKeyPath();
    swift_getKeyPath();
    *(unsigned char *)(v0 + 62) = 0;
    swift_retain();
    sub_1000C67F0();
    sub_1000C75E0();
    uint64_t v62 = sub_1000C7600();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v60, 0, 1, v62);
    swift_retain();
    uint64_t v63 = sub_1000C75C0();
    uint64_t v64 = (void *)swift_allocObject();
    uint64_t v64[2] = v63;
    v64[3] = &protocol witness table for MainActor;
    v64[4] = v61;
    sub_1000BD2A0(v60, (uint64_t)&unk_10010E3C0, (uint64_t)v64);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    *(unsigned char *)(v0 + 60) = 0;
    swift_retain();
    sub_1000C67F0();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v18 = v2;
  uint64_t v19 = v107;
  uint64_t v20 = v106;
  uint64_t v21 = v4;
LABEL_66:
  sub_10002376C(v18, v19, v20, v21, v16, 5u);
LABEL_71:
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v90 = *(uint64_t (**)(void))(v0 + 8);
  return v90();
}

uint64_t sub_1000A1760()
{
  v0[2] = sub_1000C75D0();
  v0[3] = sub_1000C75C0();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[4] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10005B20C;
  return sub_100065960(3);
}

uint64_t sub_1000A1810(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[10] = a4;
  uint64_t v5 = sub_1000C66D0();
  v4[11] = v5;
  v4[12] = *(void *)(v5 - 8);
  v4[13] = swift_task_alloc();
  v4[14] = swift_task_alloc();
  v4[15] = swift_task_alloc();
  sub_1000C75D0();
  v4[16] = sub_1000C75C0();
  uint64_t v7 = sub_1000C7590();
  v4[17] = v7;
  v4[18] = v6;
  return _swift_task_switch(sub_1000A1920, v7, v6);
}

uint64_t sub_1000A1920()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  if (*(unsigned char *)(v0 + 60) == 1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1000C67E0();
    swift_release();
    swift_release();
    if (*(unsigned char *)(v0 + 58) == 1
      || (swift_getKeyPath(),
          swift_getKeyPath(),
          sub_1000C67E0(),
          swift_release(),
          swift_release(),
          *(unsigned char *)(v0 + 57) == 3))
    {
      uint64_t v1 = (void *)swift_task_alloc();
      *(void *)(v0 + 160) = v1;
      *uint64_t v1 = v0;
      v1[1] = sub_1000A1F7C;
      return sub_10006E7D8();
    }
    else
    {
      swift_release();
      sub_1000C66B0();
      uint64_t v4 = sub_1000C66C0();
      os_log_type_t v5 = sub_1000C7690();
      if (os_log_type_enabled(v4, v5))
      {
        uint64_t v6 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v6 = 0;
        _os_log_impl((void *)&_mh_execute_header, v4, v5, "shareTypeStabilizedForUI completed", v6, 2u);
        swift_slowDealloc();
      }
      uint64_t v7 = *(void *)(v0 + 120);
      uint64_t v8 = *(void *)(v0 + 88);
      uint64_t v9 = *(void *)(v0 + 96);

      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
      return v10();
    }
  }
  else
  {
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 152) = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_1000A1C20;
    return sub_10009FD80();
  }
}

uint64_t sub_1000A1C20()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 144);
  uint64_t v3 = *(void *)(v1 + 136);
  return _swift_task_switch(sub_1000A1D40, v3, v2);
}

uint64_t sub_1000A1D40()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  if (*(unsigned char *)(v0 + 58) == 1
    || (swift_getKeyPath(),
        swift_getKeyPath(),
        sub_1000C67E0(),
        swift_release(),
        swift_release(),
        *(unsigned char *)(v0 + 57) == 3))
  {
    uint64_t v1 = (void *)swift_task_alloc();
    *(void *)(v0 + 160) = v1;
    *uint64_t v1 = v0;
    v1[1] = sub_1000A1F7C;
    return sub_10006E7D8();
  }
  else
  {
    swift_release();
    sub_1000C66B0();
    uint64_t v3 = sub_1000C66C0();
    os_log_type_t v4 = sub_1000C7690();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "shareTypeStabilizedForUI completed", v5, 2u);
      swift_slowDealloc();
    }
    uint64_t v6 = *(void *)(v0 + 120);
    uint64_t v7 = *(void *)(v0 + 88);
    uint64_t v8 = *(void *)(v0 + 96);

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
    return v9();
  }
}

uint64_t sub_1000A1F7C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 168) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 144);
  uint64_t v4 = *(void *)(v2 + 136);
  if (v0) {
    uint64_t v5 = sub_1000A21D8;
  }
  else {
    uint64_t v5 = sub_1000A20B8;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1000A20B8()
{
  swift_release();
  sub_1000C66B0();
  uint64_t v1 = sub_1000C66C0();
  os_log_type_t v2 = sub_1000C7690();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "shareTypeStabilizedForUI completed", v3, 2u);
    swift_slowDealloc();
  }
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[11];
  uint64_t v6 = v0[12];

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1000A21D8()
{
  uint64_t v44 = v0;
  uint64_t v1 = *(void *)(v0 + 168);
  swift_release();
  *(void *)(v0 + 72) = v1;
  swift_errorRetain();
  sub_100012854((uint64_t *)&unk_10010B010);
  if (swift_dynamicCast())
  {
    uint64_t result = swift_errorRelease();
    uint64_t v41 = *(void *)(v0 + 16);
    uint64_t v3 = *(void **)(v0 + 32);
    uint64_t v42 = *(void *)(v0 + 24);
    uint64_t v4 = *(void *)(v0 + 48);
    uint64_t v40 = *(void *)(v0 + 40);
    int v39 = *(unsigned __int8 *)(v0 + 56);
    if (v39 == 6)
    {
      if (!v3)
      {
        __break(1u);
        return result;
      }
      swift_bridgeObjectRetain();
      id v5 = v3;
      swift_bridgeObjectRetain();
      sub_1000C66B0();
      id v6 = v5;
      uint64_t v7 = sub_1000C66C0();
      os_log_type_t v8 = sub_1000C7670();
      BOOL v9 = os_log_type_enabled(v7, v8);
      uint64_t v10 = *(void *)(v0 + 112);
      uint64_t v12 = *(void *)(v0 + 88);
      uint64_t v11 = *(void *)(v0 + 96);
      if (v9)
      {
        uint64_t v38 = v4;
        uint64_t v13 = (uint8_t *)swift_slowAlloc();
        uint64_t v43 = swift_slowAlloc();
        *(_DWORD *)uint64_t v13 = 136315138;
        buf = v13;
        uint64_t v37 = v12;
        id v14 = v6;
        uint64_t v36 = v10;
        id v15 = v6;
        id v16 = [v14 description];
        os_log_type_t type = v8;
        uint64_t v17 = sub_1000C7440();
        unint64_t v19 = v18;

        id v6 = v15;
        *(void *)(v0 + 64) = sub_1000720D0(v17, v19, &v43);
        sub_1000C7850();
        uint64_t v4 = v38;
        swift_bridgeObjectRelease();

        _os_log_impl((void *)&_mh_execute_header, v7, type, "shareTypeStabilizedForUI nameAndEmailError: %s", buf, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v36, v37);
      }
      else
      {

        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
      }
      id v21 = v6;
      sub_100067284(0, v3);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    unint64_t v22 = v3;
    uint64_t v23 = v4;
    swift_getKeyPath();
    swift_getKeyPath();
    *(unsigned char *)(v0 + 59) = 5;
    swift_retain();
    sub_1000C67F0();
    sub_1000C7440();
    id v24 = objc_allocWithZone((Class)NSError);
    NSString v25 = sub_1000C7400();
    swift_bridgeObjectRelease();
    id v26 = [v24 initWithDomain:v25 code:1 userInfo:0];

    sub_1000C66B0();
    uint64_t v27 = sub_1000C66C0();
    os_log_type_t v28 = sub_1000C7670();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v29 = 0;
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "shareTypeStabilizedForUI unexpected nameAndEmailError, returning CKError.internalError as best approximation", v29, 2u);
      swift_slowDealloc();
    }
    uint64_t v31 = *(void *)(v0 + 96);
    uint64_t v30 = *(void *)(v0 + 104);
    uint64_t v32 = *(void *)(v0 + 88);

    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v30, v32);
    id v33 = v26;
    sub_100067284(0, v26);

    sub_10002376C(v41, v42, v22, v40, v23, v39);
    swift_errorRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    swift_errorRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v20();
}

uint64_t sub_1000A26C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[17] = a4;
  uint64_t v5 = sub_1000C66D0();
  v4[18] = v5;
  v4[19] = *(void *)(v5 - 8);
  v4[20] = swift_task_alloc();
  v4[21] = sub_1000C75D0();
  v4[22] = sub_1000C75C0();
  id v6 = (void *)swift_task_alloc();
  v4[23] = v6;
  void *v6 = v4;
  v6[1] = sub_1000A27D0;
  return sub_100064590();
}

uint64_t sub_1000A27D0()
{
  *(void *)(*(void *)v1 + 192) = v0;
  swift_task_dealloc();
  uint64_t v3 = sub_1000C7590();
  if (v0) {
    uint64_t v4 = sub_1000A2A78;
  }
  else {
    uint64_t v4 = sub_1000A292C;
  }
  return _swift_task_switch(v4, v3, v2);
}

uint64_t sub_1000A292C()
{
  swift_release();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectRelease();
  if (!Strong)
  {
    sub_1000C66B0();
    uint64_t v2 = sub_1000C66C0();
    os_log_type_t v3 = sub_1000C7690();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "ext computed property--extensionController is nil--will assert", v4, 2u);
      swift_slowDealloc();
    }
    uint64_t v6 = v0[19];
    uint64_t v5 = v0[20];
    uint64_t v7 = v0[18];

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  }
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_10000F560();
    swift_unknownObjectRelease();
    swift_task_dealloc();
    BOOL v9 = (uint64_t (*)(void))v0[1];
    return v9();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000A2A78()
{
  uint64_t v1 = *(void *)(v0 + 192);
  swift_release();
  *(void *)(v0 + 128) = v1;
  sub_100012854((uint64_t *)&unk_10010B010);
  uint64_t result = swift_dynamicCast();
  if (!result)
  {
    swift_errorRelease();
    return sub_1000C7980();
  }
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v5 = *(void **)(v0 + 32);
  uint64_t v6 = *(void *)(v0 + 40);
  uint64_t v7 = *(void *)(v0 + 48);
  int v8 = *(unsigned __int8 *)(v0 + 56);
  if (v8 != 5)
  {
    sub_1000C78D0(34);
    *(void *)(v0 + 112) = 0;
    *(void *)(v0 + 120) = 0xE000000000000000;
    v15._unint64_t object = (void *)0x80000001000D8CF0;
    v15._countAndFlagsBits = 0xD000000000000020;
    sub_1000C74B0(v15);
    *(void *)(v0 + 64) = v4;
    *(void *)(v0 + 72) = v3;
    *(void *)(v0 + 80) = v5;
    *(void *)(v0 + 88) = v6;
    *(void *)(v0 + 96) = v7;
    *(unsigned char *)(v0 + 104) = v8;
    sub_1000C7960();
    return sub_1000C7980();
  }
  uint64_t v13 = *(void *)(v0 + 40);
  if (v5)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_bridgeObjectRetain();
    id v9 = v5;
    swift_bridgeObjectRetain();
    sub_1000C67E0();
    swift_release();
    swift_release();
    BOOL v10 = *(unsigned char *)(v0 + 57) == 2;
    id v11 = v9;
    sub_100067284(4 * v10, v5);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10002376C(v4, v3, v5, v13, v7, 5u);
    swift_errorRelease();
    swift_task_dealloc();
    uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
    return v12();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000A2D54()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000A2D94()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100013B98;
  return sub_1000A1760();
}

ValueMetadata *type metadata accessor for SharingOptions()
{
  return &type metadata for SharingOptions;
}

unsigned char *storeEnumTagSinglePayload for SharingMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000A2F2CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SharingMode()
{
  return &type metadata for SharingMode;
}

unsigned char *storeEnumTagSinglePayload for SharePermission(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000A3030);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SharePermission()
{
  return &type metadata for SharePermission;
}

void *sub_1000A3068@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_1000A3074(void *a1@<X8>)
{
  *a1 = 0;
}

void *sub_1000A307C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_1000A3090@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

void *sub_1000A30A4@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_1000A30B8(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_1000A30E8@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_1000A3114@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v5 == 0;
  return result;
}

void *sub_1000A3138(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_1000A314C(void *result)
{
  *v1 &= *result;
  return result;
}

void *sub_1000A3160(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_1000A3174@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_1000A3188(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_1000A319C(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_1000A31B0(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_1000A31C4()
{
  return *v0 == 0;
}

uint64_t sub_1000A31D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return SetAlgebra.init<A>(_:)(a1, a4, a2, a5, a3);
}

void *sub_1000A31EC(void *result)
{
  *v1 &= ~*result;
  return result;
}

uint64_t sub_1000A3200@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_1000A33A4(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

unint64_t sub_1000A3250()
{
  unint64_t result = qword_10010E3D0;
  if (!qword_10010E3D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010E3D0);
  }
  return result;
}

unint64_t sub_1000A32A8()
{
  unint64_t result = qword_10010E3D8;
  if (!qword_10010E3D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010E3D8);
  }
  return result;
}

unint64_t sub_1000A3300()
{
  unint64_t result = qword_10010E3E0;
  if (!qword_10010E3E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010E3E0);
  }
  return result;
}

uint64_t sub_1000A3354(char a1)
{
  return *(void *)&aNone_6[8 * a1];
}

uint64_t sub_1000A3374()
{
  return sub_1000A3354(*v0);
}

uint64_t sub_1000A337C(char a1)
{
  return *(void *)&aNone_7[8 * a1];
}

uint64_t sub_1000A339C()
{
  return sub_1000A337C(*v0);
}

uint64_t sub_1000A33A4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t result = 0;
  uint64_t v4 = (uint64_t *)(a1 + 32);
  do
  {
    uint64_t v6 = *v4++;
    uint64_t v5 = v6;
    if ((v6 & ~result) == 0) {
      uint64_t v5 = 0;
    }
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

unsigned char *storeEnumTagSinglePayload for ShareType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000A34ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShareType()
{
  return &type metadata for ShareType;
}

unsigned char *storeEnumTagSinglePayload for PostShareBooleanOptions(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000A35B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PostShareBooleanOptions()
{
  return &type metadata for PostShareBooleanOptions;
}

unint64_t sub_1000A35EC()
{
  unint64_t result = qword_10010E3E8;
  if (!qword_10010E3E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010E3E8);
  }
  return result;
}

uint64_t sub_1000A3640@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(void *)a5 = a1;
  *(void *)(a5 + 8) = a2;
  *(unsigned char *)(a5 + 16) = 0;
  *(void *)(a5 + 24) = a3;
  *(void *)(a5 + 32) = a4;
  *(unsigned char *)(a5 + 40) = 0;
  sub_1000C71E0();
  *(unsigned char *)(a5 + 48) = v8;
  *(void *)(a5 + 56) = *((void *)&v8 + 1);
  sub_1000C71E0();
  *(unsigned char *)(a5 + 64) = v8;
  *(void *)(a5 + 72) = *((void *)&v8 + 1);
  sub_1000C71E0();
  *(unsigned char *)(a5 + 80) = v8;
  *(void *)(a5 + 88) = *((void *)&v8 + 1);
  type metadata accessor for CGRect(0);
  sub_1000C71E0();
  *(_OWORD *)(a5 + 96) = v8;
  *(_OWORD *)(a5 + 112) = v9;
  *(void *)(a5 + 128) = v10;
  *(_OWORD *)(a5 + 136) = xmmword_1000D1930;
  *(_OWORD *)(a5 + 152) = xmmword_1000D1930;
  unsigned int v6 = (uint64_t *)(a5 + *(int *)(type metadata accessor for PeopleView() + 44));
  uint64_t *v6 = swift_getKeyPath();
  sub_100012854(&qword_10010C7B0);
  return swift_storeEnumTagMultiPayload();
}

void sub_1000A3768(void *a1@<X8>)
{
  *a1 = &off_1000FF748;
}

void sub_1000A3778(void *a1@<X8>)
{
  *a1 = &off_1000FF770;
}

uint64_t sub_1000A3788()
{
  return sub_10001E454(&qword_10010E3F0, &qword_10010E3F8);
}

unint64_t sub_1000A37C8()
{
  unint64_t result = qword_10010E400;
  if (!qword_10010E400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010E400);
  }
  return result;
}

uint64_t sub_1000A381C()
{
  return sub_10001E454(&qword_10010E408, &qword_10010E410);
}

uint64_t type metadata accessor for PeopleView()
{
  uint64_t result = qword_10010E470;
  if (!qword_10010E470) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000A38A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for PersonInfoView();
  uint64_t v5 = (int *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)&v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t *v7 = swift_getKeyPath();
  sub_100012854(&qword_10010C7A8);
  swift_storeEnumTagMultiPayload();
  long long v8 = (char *)v7 + v5[7];
  *(void *)long long v8 = sub_1000B47B4;
  *((void *)v8 + 1) = a1;
  unsigned char v8[16] = 0;
  long long v9 = (char *)v7 + v5[8];
  v17[15] = 3;
  swift_retain();
  sub_100012854((uint64_t *)&unk_10010BFB0);
  sub_1000C71E0();
  uint64_t v10 = v18;
  *long long v9 = v17[16];
  *((void *)v9 + 1) = v10;
  id v11 = (uint64_t *)((char *)v7 + v5[9]);
  *id v11 = swift_getKeyPath();
  sub_100012854(&qword_10010C7B0);
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = (uint64_t *)((char *)v7 + v5[10]);
  uint64_t *v12 = swift_getKeyPath();
  sub_100012854(&qword_10010B7B0);
  swift_storeEnumTagMultiPayload();
  uint64_t v14 = *(void *)(a1 + 40);
  uint64_t v13 = *(void *)(a1 + 48);
  sub_1000B4804((uint64_t)v7, a2, (uint64_t (*)(void))type metadata accessor for PersonInfoView);
  Swift::String v15 = (void *)(a2 + *(int *)(sub_100012854(&qword_10010E808) + 52));
  void *v15 = v14;
  v15[1] = v13;
  swift_bridgeObjectRetain();
  return sub_1000B486C((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for PersonInfoView);
}

uint64_t sub_1000A3A74@<X0>(uint64_t a1@<X8>)
{
  uint64_t v62 = a1;
  uint64_t v61 = sub_1000C6AE0();
  uint64_t v51 = *(void *)(v61 - 8);
  __chkstk_darwin(v61);
  id v49 = (char *)&v45 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_100012854(&qword_10010E4C0);
  uint64_t v48 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  int v3 = (char *)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_100012854(&qword_10010E4C8);
  uint64_t v50 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  uint64_t v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_100012854(&qword_10010E4D0);
  uint64_t v52 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  uint64_t v47 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_100012854(&qword_10010E4D8);
  __chkstk_darwin(v55);
  id v58 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000C6DE0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_100012854(&qword_10010E4E0);
  uint64_t v46 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  uint64_t v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_100012854(&qword_10010E4E8);
  uint64_t v14 = *(void *)(v56 - 8);
  uint64_t v15 = __chkstk_darwin(v56);
  uint64_t v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  unint64_t v19 = (char *)&v45 - v18;
  char v20 = sub_1000C5DE0();
  uint64_t v63 = v53;
  if (v20)
  {
    sub_100012854(&qword_10010E538);
    uint64_t v21 = sub_100013128(&qword_10010E540);
    unint64_t v22 = sub_1000B14AC();
    uint64_t v64 = v21;
    unint64_t v65 = v22;
    swift_getOpaqueTypeConformance2();
    sub_1000C6AC0();
    sub_1000C6DD0();
    uint64_t v23 = sub_10001E454(&qword_10010E530, &qword_10010E4E0);
    uint64_t v24 = sub_1000B5228(&qword_10010DE18, (void (*)(uint64_t))&type metadata accessor for StackNavigationViewStyle);
    uint64_t v25 = v54;
    sub_1000C7010();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    (*(void (**)(char *, uint64_t))(v46 + 8))(v13, v25);
    id v26 = v17;
    uint64_t v27 = v56;
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v19, v26, v56);
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v58, v19, v27);
    swift_storeEnumTagMultiPayload();
    uint64_t v64 = v25;
    unint64_t v65 = v8;
    uint64_t v66 = v23;
    id v67 = (void *)v24;
    swift_getOpaqueTypeConformance2();
    uint64_t v28 = sub_10001E454(&qword_10010E528, &qword_10010E4C0);
    uint64_t v64 = v57;
    unint64_t v65 = v8;
    uint64_t v66 = v28;
    id v67 = (void *)v24;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v64 = v59;
    unint64_t v65 = v61;
    uint64_t v66 = OpaqueTypeConformance2;
    id v67 = &protocol witness table for GroupedListStyle;
    swift_getOpaqueTypeConformance2();
    sub_1000C6D50();
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v19, v27);
  }
  else
  {
    sub_100012854(&qword_10010E4F0);
    sub_1000B123C();
    sub_1000C6A50();
    sub_1000C6DD0();
    uint64_t v31 = sub_10001E454(&qword_10010E528, &qword_10010E4C0);
    uint64_t v32 = sub_1000B5228(&qword_10010DE18, (void (*)(uint64_t))&type metadata accessor for StackNavigationViewStyle);
    id v33 = v5;
    uint64_t v34 = v57;
    uint64_t v35 = v8;
    uint64_t v36 = (void *)v32;
    uint64_t v53 = (void *)v32;
    sub_1000C7010();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v35);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v3, v34);
    uint64_t v37 = v49;
    sub_1000C6AD0();
    uint64_t v64 = v34;
    unint64_t v65 = v35;
    uint64_t v66 = v31;
    id v67 = v36;
    uint64_t v38 = swift_getOpaqueTypeConformance2();
    int v39 = v47;
    uint64_t v40 = v59;
    uint64_t v41 = v61;
    sub_1000C7110();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v37, v41);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v33, v40);
    uint64_t v42 = v52;
    uint64_t v43 = v60;
    (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v58, v39, v60);
    swift_storeEnumTagMultiPayload();
    uint64_t v44 = sub_10001E454(&qword_10010E530, &qword_10010E4E0);
    uint64_t v64 = v54;
    unint64_t v65 = v35;
    uint64_t v66 = v44;
    id v67 = v53;
    swift_getOpaqueTypeConformance2();
    uint64_t v64 = v40;
    unint64_t v65 = v41;
    uint64_t v66 = v38;
    id v67 = &protocol witness table for GroupedListStyle;
    swift_getOpaqueTypeConformance2();
    sub_1000C6D50();
    return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v39, v43);
  }
}

uint64_t sub_1000A43E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v50 = a2;
  uint64_t v3 = sub_100012854(&qword_10010CB70);
  __chkstk_darwin(v3 - 8);
  uint64_t v52 = (uint64_t)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100012854(&qword_10010E570);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100012854(&qword_10010E560);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_100012854(&qword_10010E590);
  uint64_t v44 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  uint64_t v42 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_100012854(&qword_10010E558) - 8;
  __chkstk_darwin(v43);
  uint64_t v51 = (uint64_t)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_100012854(&qword_10010E540);
  __chkstk_darwin(v53);
  uint64_t v46 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_100012854(&qword_10010E538);
  uint64_t v48 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  uint64_t v47 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = a1;
  sub_100012854(&qword_10010E598);
  sub_10001E454(&qword_10010E5A0, &qword_10010E598);
  sub_1000C6F90();
  sub_1000C6EC0();
  uint64_t v17 = sub_10001E454(&qword_10010E578, &qword_10010E570);
  sub_1000C7060();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v54 = a1;
  sub_100012854(&qword_10010E568);
  uint64_t v65 = v5;
  uint64_t v66 = v17;
  swift_getOpaqueTypeConformance2();
  uint64_t v18 = sub_100013128(&qword_10010E580);
  uint64_t v19 = sub_10001E454(&qword_10010E588, &qword_10010E580);
  uint64_t v65 = v18;
  uint64_t v66 = v19;
  swift_getOpaqueTypeConformance2();
  sub_1000C70F0();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  type metadata accessor for PeopleViewModel();
  sub_1000B5228(&qword_10010E5A8, (void (*)(uint64_t))type metadata accessor for PeopleViewModel);
  sub_1000C6960();
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v20 = v52;
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  sub_1000C6970();
  swift_getKeyPath();
  sub_1000C6A80();
  swift_release();
  swift_release();
  uint64_t v21 = v65;
  uint64_t v22 = v66;
  LOBYTE(v10) = v67;
  uint64_t v23 = v51;
  uint64_t v24 = v51 + *(int *)(v43 + 44);
  sub_10001A740(v20, v24, &qword_10010CB70);
  uint64_t v43 = type metadata accessor for AlertViewModelAlert(0);
  uint64_t v25 = v24 + *(int *)(v43 + 20);
  *(void *)uint64_t v25 = v21;
  *(void *)(v25 + 8) = v22;
  *(unsigned char *)(v25 + 16) = v10;
  uint64_t v26 = v44;
  uint64_t v27 = v42;
  uint64_t v28 = v45;
  (*(void (**)(uint64_t, char *, uint64_t))(v44 + 16))(v23, v42, v45);
  sub_10001326C(v20, &qword_10010CB70);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v27, v28);
  sub_1000C6960();
  swift_beginAccess();
  swift_retain();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  sub_1000C6970();
  swift_getKeyPath();
  sub_1000C6A80();
  swift_release();
  swift_release();
  uint64_t v29 = v62;
  uint64_t v30 = v63;
  uint64_t v31 = v64;
  swift_getKeyPath();
  uint64_t v56 = v29;
  uint64_t v57 = v30;
  uint64_t v58 = v31;
  sub_100012854(&qword_10010E5B0);
  sub_1000C72A0();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v32 = v59;
  uint64_t v33 = v60;
  LOBYTE(v10) = v61;
  uint64_t v34 = v52;
  uint64_t v35 = (uint64_t)v46;
  uint64_t v36 = (uint64_t)&v46[*(int *)(v53 + 36)];
  sub_10001A740(v52, v36, &qword_10010CB70);
  uint64_t v37 = v36 + *(int *)(v43 + 20);
  *(void *)uint64_t v37 = v32;
  *(void *)(v37 + 8) = v33;
  *(unsigned char *)(v37 + 16) = v10;
  uint64_t v38 = v51;
  sub_10001A740(v51, v35, &qword_10010E558);
  sub_10001326C(v34, &qword_10010CB70);
  sub_10001326C(v38, &qword_10010E558);
  sub_1000C6960();
  swift_beginAccess();
  swift_retain();
  swift_release();
  if (!swift_unknownObjectWeakLoadStrong() || (id v39 = sub_10000E21C(), swift_unknownObjectRelease(), !v39)) {
    [objc_allocWithZone((Class)UIImage) init];
  }
  swift_release();
  sub_1000C7190();
  sub_1000B14AC();
  uint64_t v40 = v47;
  sub_1000C7040();
  swift_release();
  sub_10001326C(v35, &qword_10010E540);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v48 + 32))(v50, v40, v49);
}

uint64_t sub_1000A4D5C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v160 = a2;
  uint64_t v141 = sub_100012854(&qword_10010E5B8);
  uint64_t v140 = *(void *)(v141 - 8);
  __chkstk_darwin(v141);
  unsigned __int8 v139 = (char *)&v129 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v161 = sub_100012854(&qword_10010E5C0);
  uint64_t v156 = *(void *)(v161 - 8);
  __chkstk_darwin(v161);
  uint64_t v138 = (char *)&v129 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100012854(&qword_10010E5C8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v159 = (uint64_t)&v129 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  *(void *)&long long v158 = (char *)&v129 - v8;
  uint64_t v145 = sub_100012854(&qword_10010E5D0);
  uint64_t v144 = *(void *)(v145 - 8);
  __chkstk_darwin(v145);
  long long v143 = (char *)&v129 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v142 = sub_100012854(&qword_10010E5D8);
  __chkstk_darwin(v142);
  uint64_t v147 = (char *)&v129 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v154 = sub_100012854(&qword_10010E5E0);
  uint64_t v153 = *(void *)(v154 - 8);
  __chkstk_darwin(v154);
  uint64_t v146 = (uint64_t)&v129 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100012854(&qword_10010E5E8);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v157 = (uint64_t)&v129 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v170 = (uint64_t)&v129 - v15;
  uint64_t v137 = sub_100012854(&qword_10010E5F0);
  uint64_t v136 = *(void *)(v137 - 8);
  __chkstk_darwin(v137);
  unsigned __int8 v135 = (char *)&v129 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v152 = sub_100012854(&qword_10010E5F8);
  uint64_t v151 = *(void *)(v152 - 8);
  __chkstk_darwin(v152);
  unsigned __int8 v134 = (char *)&v129 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100012854(&qword_10010E600);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  uint64_t v166 = (uint64_t)&v129 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v171 = (uint64_t)&v129 - v21;
  uint64_t v133 = sub_100012854(&qword_10010E608);
  uint64_t v132 = *(void *)(v133 - 8);
  __chkstk_darwin(v133);
  double v131 = (char *)&v129 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v149 = sub_100012854(&qword_10010E610);
  uint64_t v148 = *(void *)(v149 - 8);
  __chkstk_darwin(v149);
  uint64_t v130 = (char *)&v129 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_100012854(&qword_10010E618);
  uint64_t v25 = __chkstk_darwin(v24 - 8);
  uint64_t v165 = (uint64_t)&v129 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v169 = (uint64_t)&v129 - v27;
  uint64_t v28 = type metadata accessor for PeopleView();
  uint64_t v29 = __chkstk_darwin(v28 - 8);
  uint64_t v150 = (uint64_t)&v129 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v32 = (char *)&v129 - v31;
  uint64_t v33 = sub_100012854(&qword_10010E620);
  uint64_t v34 = __chkstk_darwin(v33 - 8);
  uint64_t v168 = (uint64_t)&v129 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  uint64_t v167 = (uint64_t)&v129 - v36;
  uint64_t v37 = sub_100012854(&qword_10010E628);
  uint64_t v38 = *(void *)(v37 - 8);
  uint64_t v39 = __chkstk_darwin(v37);
  uint64_t v163 = (char *)&v129 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __chkstk_darwin(v39);
  uint64_t v43 = (char *)&v129 - v42;
  __chkstk_darwin(v41);
  uint64_t v45 = (char *)&v129 - v44;
  uint64_t v172 = a1;
  sub_1000A76F4(a1, (uint64_t)&v173);
  sub_100012854(&qword_10010E630);
  sub_100012854(&qword_10010E638);
  sub_1000B34E0();
  sub_10001E454(&qword_10010E680, &qword_10010E638);
  sub_1000C7300();
  uint64_t v155 = v38;
  uint64_t v46 = *(void (**)(char *, char *, uint64_t))(v38 + 32);
  uint64_t v162 = v45;
  uint64_t v164 = v37;
  v46(v45, v43, v37);
  type metadata accessor for PeopleViewModel();
  uint64_t v47 = sub_1000B5228(&qword_10010E5A8, (void (*)(uint64_t))type metadata accessor for PeopleViewModel);
  sub_1000C6960();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v49 = v173;
  unint64_t v48 = v174;
  swift_bridgeObjectRelease();
  if ((v48 & 0x2000000000000000) != 0) {
    uint64_t v50 = HIBYTE(v48) & 0xF;
  }
  else {
    uint64_t v50 = v49 & 0xFFFFFFFFFFFFLL;
  }
  sub_1000B4804(a1, (uint64_t)v32, (uint64_t (*)(void))type metadata accessor for PeopleView);
  if (v50)
  {
    uint64_t v51 = sub_1000B486C((uint64_t)v32, (uint64_t (*)(void))type metadata accessor for PeopleView);
LABEL_10:
    __chkstk_darwin(v51);
    *((void *)&v129 - 2) = a1;
    sub_1000A89AC(&v173);
    sub_100012854(&qword_10010E280);
    sub_100012854(&qword_10010E688);
    sub_10009AE9C();
    sub_10001E454(&qword_10010E690, &qword_10010E688);
    uint64_t v55 = v167;
    sub_1000C7300();
    uint64_t v56 = sub_100012854(&qword_10010E698);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v55, 0, 1, v56);
    goto LABEL_11;
  }
  sub_1000C6960();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v53 = v173;
  unint64_t v52 = v174;
  swift_bridgeObjectRelease();
  if ((v52 & 0x2000000000000000) != 0) {
    uint64_t v54 = HIBYTE(v52) & 0xF;
  }
  else {
    uint64_t v54 = v53 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v51 = sub_1000B486C((uint64_t)v32, (uint64_t (*)(void))type metadata accessor for PeopleView);
  if (v54) {
    goto LABEL_10;
  }
  uint64_t v128 = sub_100012854(&qword_10010E698);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v128 - 8) + 56))(v167, 1, 1, v128);
LABEL_11:
  type metadata accessor for GlobalPermissionViewModel();
  sub_1000B5228(&qword_10010DB40, (void (*)(uint64_t))type metadata accessor for GlobalPermissionViewModel);
  sub_1000C6960();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  uint64_t v57 = swift_release();
  if (v173 == 1)
  {
    __chkstk_darwin(v57);
    *((void *)&v129 - 2) = a1;
    sub_100096744();
    uint64_t v58 = v131;
    sub_1000C7310();
    long long v129 = *(_OWORD *)(a1 + 136);
    uint64_t v59 = *(void *)(a1 + 152);
    uint64_t v60 = *(void *)(a1 + 160);
    uint64_t v61 = v132;
    uint64_t v62 = (uint64_t)v130;
    uint64_t v63 = v133;
    (*(void (**)(char *, char *, uint64_t))(v132 + 16))(v130, v58, v133);
    uint64_t v64 = v149;
    uint64_t v65 = v62 + *(int *)(v149 + 36);
    *(_OWORD *)uint64_t v65 = v129;
    *(void *)(v65 + 16) = v59;
    *(void *)(v65 + 24) = v60;
    *(unsigned char *)(v65 + 32) = 0;
    (*(void (**)(char *, uint64_t))(v61 + 8))(v58, v63);
    uint64_t v66 = v169;
    sub_100012898(v62, v169, &qword_10010E610);
    uint64_t v67 = 0;
    uint64_t v68 = v158;
    uint64_t v69 = v152;
  }
  else
  {
    uint64_t v67 = 1;
    uint64_t v68 = v158;
    uint64_t v66 = v169;
    uint64_t v69 = v152;
    uint64_t v64 = v149;
  }
  uint64_t v70 = 1;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v148 + 56))(v66, v67, 1, v64);
  sub_1000C6960();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  if (v173 == 1)
  {
    uint64_t v173 = sub_1000A8B64();
    uint64_t v174 = v71;
    sub_1000363CC();
    uint64_t v173 = sub_1000C7000();
    uint64_t v174 = v72;
    LOBYTE(v175) = v73 & 1;
    uint64_t v176 = v74;
    __chkstk_darwin(v173);
    *((void *)&v129 - 2) = a1;
    sub_100012854(&qword_10010BF40);
    sub_10001E454(&qword_10010BF48, &qword_10010BF40);
    uint64_t v75 = v135;
    sub_1000C7320();
    long long v152 = *(_OWORD *)(a1 + 136);
    uint64_t v76 = *(void *)(a1 + 152);
    uint64_t v77 = *(void *)(a1 + 160);
    uint64_t v78 = v136;
    uint64_t v79 = *(void (**)(char *, char *, uint64_t))(v136 + 16);
    *(void *)&long long v158 = v47;
    uint64_t v80 = v68;
    uint64_t v81 = v134;
    uint64_t v82 = v137;
    v79(v134, v75, v137);
    uint64_t v83 = &v81[*(int *)(v69 + 36)];
    *(_OWORD *)uint64_t v83 = v152;
    *((void *)v83 + 2) = v76;
    *((void *)v83 + 3) = v77;
    v83[32] = 0;
    (*(void (**)(char *, uint64_t))(v78 + 8))(v75, v82);
    uint64_t v84 = (uint64_t)v81;
    uint64_t v68 = v80;
    sub_100012898(v84, v171, &qword_10010E5F8);
    uint64_t v70 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v151 + 56))(v171, v70, 1, v69);
  sub_1000C6960();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  int v85 = v173;
  uint64_t v86 = v150;
  sub_1000B4804(a1, v150, (uint64_t (*)(void))type metadata accessor for PeopleView);
  if (v85 == 1)
  {
    uint64_t v87 = sub_1000B486C(v86, (uint64_t (*)(void))type metadata accessor for PeopleView);
LABEL_19:
    __chkstk_darwin(v87);
    *((void *)&v129 - 2) = a1;
    sub_1000AA0E0(&v173);
    sub_100012854(&qword_10010E6B0);
    sub_100012854(&qword_10010E280);
    sub_10001E454(&qword_10010E6B8, &qword_10010E6B0);
    sub_10009AE9C();
    id v89 = v143;
    sub_1000C7320();
    long long v158 = *(_OWORD *)(a1 + 136);
    uint64_t v90 = *(void *)(a1 + 152);
    uint64_t v91 = *(void *)(a1 + 160);
    uint64_t v92 = v144;
    uint64_t v93 = (uint64_t)v147;
    uint64_t v94 = v145;
    (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v147, v89, v145);
    uint64_t v95 = v93 + *(int *)(v142 + 36);
    *(_OWORD *)uint64_t v95 = v158;
    *(void *)(v95 + 16) = v90;
    *(void *)(v95 + 24) = v91;
    *(unsigned char *)(v95 + 32) = 0;
    (*(void (**)(char *, uint64_t))(v92 + 8))(v89, v94);
    uint64_t v96 = sub_1000C7340();
    sub_1000C6960();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1000C67E0();
    swift_release();
    swift_release();
    swift_release();
    LOBYTE(v94) = v173;
    uint64_t v97 = v146;
    sub_10001A740(v93, v146, &qword_10010E5D8);
    uint64_t v98 = v154;
    uint64_t v99 = v97 + *(int *)(v154 + 36);
    *(void *)uint64_t v99 = v96;
    *(unsigned char *)(v99 + 8) = v94;
    sub_10001326C(v93, &qword_10010E5D8);
    uint64_t v100 = v170;
    sub_100012898(v97, v170, &qword_10010E5E0);
    uint64_t v101 = 0;
    goto LABEL_21;
  }
  sub_1000C6960();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  int v88 = v173;
  uint64_t v87 = sub_1000B486C(v86, (uint64_t (*)(void))type metadata accessor for PeopleView);
  if (v88 == 1) {
    goto LABEL_19;
  }
  uint64_t v101 = 1;
  uint64_t v100 = v170;
  uint64_t v98 = v154;
LABEL_21:
  uint64_t v102 = 1;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v153 + 56))(v100, v101, 1, v98);
  sub_1000C6960();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  uint64_t v103 = swift_release();
  if (v173 == 1)
  {
    __chkstk_darwin(v103);
    *((void *)&v129 - 2) = a1;
    sub_100012854(&qword_10010E6A8);
    uint64_t v104 = sub_100013128(&qword_10010BF40);
    uint64_t v105 = sub_100013128(&qword_10010E2B0);
    uint64_t v106 = sub_10001E454(&qword_10010BF48, &qword_10010BF40);
    uint64_t v107 = sub_10001E454(&qword_10010E2A8, &qword_10010E2B0);
    uint64_t v173 = v104;
    uint64_t v174 = v105;
    uint64_t v175 = &type metadata for Text;
    uint64_t v176 = v106;
    uint64_t v177 = v107;
    uint64_t v178 = &protocol witness table for Text;
    swift_getOpaqueTypeConformance2();
    uint64_t v108 = v139;
    sub_1000C7310();
    long long v158 = *(_OWORD *)(a1 + 136);
    uint64_t v109 = *(void *)(a1 + 152);
    uint64_t v110 = *(void *)(a1 + 160);
    uint64_t v111 = v140;
    uint64_t v112 = (uint64_t)v138;
    uint64_t v113 = v141;
    (*(void (**)(char *, char *, uint64_t))(v140 + 16))(v138, v108, v141);
    uint64_t v114 = v112 + *(int *)(v161 + 36);
    *(_OWORD *)uint64_t v114 = v158;
    *(void *)(v114 + 16) = v109;
    *(void *)(v114 + 24) = v110;
    *(unsigned char *)(v114 + 32) = 0;
    (*(void (**)(char *, uint64_t))(v111 + 8))(v108, v113);
    sub_100012898(v112, v68, &qword_10010E5C0);
    uint64_t v102 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v156 + 56))(v68, v102, 1, v161);
  uint64_t v115 = v155;
  Swift::String_optional v116 = *(void (**)(char *, char *, uint64_t))(v155 + 16);
  uint64_t v117 = v163;
  uint64_t v118 = v164;
  v116(v163, v162, v164);
  sub_10001A740(v167, v168, &qword_10010E620);
  uint64_t v119 = v165;
  sub_10001A740(v169, v165, &qword_10010E618);
  sub_10001A740(v171, v166, &qword_10010E600);
  uint64_t v120 = v157;
  sub_10001A740(v170, v157, &qword_10010E5E8);
  uint64_t v121 = v159;
  sub_10001A740(v68, v159, &qword_10010E5C8);
  uint64_t v122 = v160;
  v116(v160, v117, v118);
  uint64_t v123 = (int *)sub_100012854(&qword_10010E6A0);
  sub_10001A740(v168, (uint64_t)&v122[v123[12]], &qword_10010E620);
  sub_10001A740(v119, (uint64_t)&v122[v123[16]], &qword_10010E618);
  uint64_t v124 = v166;
  sub_10001A740(v166, (uint64_t)&v122[v123[20]], &qword_10010E600);
  sub_10001A740(v120, (uint64_t)&v122[v123[24]], &qword_10010E5E8);
  sub_10001A740(v121, (uint64_t)&v122[v123[28]], &qword_10010E5C8);
  sub_10001326C(v68, &qword_10010E5C8);
  sub_10001326C(v170, &qword_10010E5E8);
  sub_10001326C(v171, &qword_10010E600);
  sub_10001326C(v169, &qword_10010E618);
  sub_10001326C(v167, &qword_10010E620);
  uint64_t v125 = *(void (**)(char *, uint64_t))(v115 + 8);
  uint64_t v126 = v164;
  v125(v162, v164);
  sub_10001326C(v121, &qword_10010E5C8);
  sub_10001326C(v120, &qword_10010E5E8);
  sub_10001326C(v124, &qword_10010E600);
  sub_10001326C(v165, &qword_10010E618);
  sub_10001326C(v168, &qword_10010E620);
  return ((uint64_t (*)(char *, uint64_t))v125)(v163, v126);
}

uint64_t sub_1000A6634@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v95 = a2;
  uint64_t v74 = sub_100012854(&qword_10010E758);
  __chkstk_darwin(v74);
  uint64_t v78 = (char *)&v69 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_1000C6AA0();
  uint64_t v73 = *(void *)(v77 - 8);
  uint64_t v4 = __chkstk_darwin(v77);
  uint64_t v72 = (char *)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = v5;
  __chkstk_darwin(v4);
  int v85 = (char *)&v69 - v6;
  uint64_t v76 = sub_100012854(&qword_10010E760);
  uint64_t v75 = *(void *)(v76 - 8);
  __chkstk_darwin(v76);
  uint64_t v96 = (char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_100012854(&qword_10010E768);
  __chkstk_darwin(v89);
  uint64_t v80 = (uint64_t)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100012854(&qword_10010E770);
  uint64_t v92 = *(void *)(v9 - 8);
  uint64_t v93 = v9;
  __chkstk_darwin(v9);
  uint64_t v79 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100012854(&qword_10010E778);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v94 = (uint64_t)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v86 = (char *)&v69 - v14;
  uint64_t v15 = type metadata accessor for PeopleView();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  __chkstk_darwin(v15 - 8);
  uint64_t v18 = sub_100012854(&qword_10010E780);
  uint64_t v90 = *(void *)(v18 - 8);
  uint64_t v91 = v18;
  uint64_t v19 = __chkstk_darwin(v18);
  int v88 = (char *)&v69 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v69 - v21;
  type metadata accessor for PeopleViewModel();
  sub_1000B5228(&qword_10010E5A8, (void (*)(uint64_t))type metadata accessor for PeopleViewModel);
  sub_1000C6960();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  sub_1000B4804(a1, (uint64_t)&v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for PeopleView);
  uint64_t v23 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v24 = (v23 + 16) & ~v23;
  uint64_t v81 = v23 | 7;
  uint64_t v82 = v24 + v17;
  uint64_t v25 = swift_allocObject();
  uint64_t v83 = v24;
  uint64_t v84 = (uint64_t)&v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000B51C0(v84, v25 + v24, (uint64_t (*)(void))type metadata accessor for PeopleView);
  sub_100012854(&qword_10010B998);
  sub_100012854(&qword_10010E788);
  sub_10001E454(&qword_10010E790, &qword_10010B998);
  sub_1000B3F78();
  sub_1000B5228(&qword_10010E7B0, (void (*)(uint64_t))type metadata accessor for PersonRowViewModel);
  uint64_t v87 = v22;
  sub_1000C72F0();
  uint64_t v26 = a1;
  sub_1000C6960();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  if (v99 == 1)
  {
    uint64_t v69 = a1;
    uint64_t v27 = v84;
    sub_1000B4804(a1, v84, (uint64_t (*)(void))type metadata accessor for PeopleView);
    uint64_t v28 = swift_allocObject();
    uint64_t v29 = v83;
    sub_1000B51C0(v27, v28 + v83, (uint64_t (*)(void))type metadata accessor for PeopleView);
    sub_1000B4060();
    sub_1000C7230();
    uint64_t v30 = v73;
    uint64_t v31 = v85;
    uint64_t v32 = v77;
    (*(void (**)(char *, void, uint64_t))(v73 + 104))(v85, enum case for CoordinateSpace.global(_:), v77);
    uint64_t v70 = type metadata accessor for PeopleView;
    sub_1000B4804(v26, v27, (uint64_t (*)(void))type metadata accessor for PeopleView);
    uint64_t v33 = swift_allocObject();
    sub_1000B51C0(v27, v33 + v29, (uint64_t (*)(void))type metadata accessor for PeopleView);
    uint64_t v34 = v72;
    (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v72, v31, v32);
    unint64_t v35 = (*(unsigned __int8 *)(v30 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
    uint64_t v36 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v30 + 32))(v36 + v35, v34, v32);
    uint64_t v37 = sub_1000C7330();
    uint64_t v39 = v38;
    uint64_t v40 = v75;
    uint64_t v41 = (uint64_t)v78;
    uint64_t v42 = v76;
    (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v78, v96, v76);
    uint64_t v43 = (uint64_t (**)@<X0>(uint64_t *@<X8>))(v41 + *(int *)(v74 + 36));
    char *v43 = sub_1000B41D8;
    v43[1] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v36;
    v43[2] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v37;
    v43[3] = v39;
    uint64_t v44 = swift_allocObject();
    *(void *)(v44 + 16) = sub_1000B40B8;
    *(void *)(v44 + 24) = v33;
    uint64_t v45 = v80;
    sub_10001A740(v41, v80, &qword_10010E758);
    uint64_t v46 = (uint64_t (**)(double *))(v45 + *(int *)(v89 + 36));
    *uint64_t v46 = sub_1000B4290;
    v46[1] = (uint64_t (*)(double *))v44;
    sub_10001326C(v41, &qword_10010E758);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v85, v32);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v96, v42);
    uint64_t v47 = v69;
    uint64_t v48 = *(void *)(v69 + 72);
    char v97 = *(unsigned char *)(v69 + 64);
    uint64_t v98 = v48;
    sub_100012854(&qword_10010D7A8);
    sub_1000C7210();
    uint64_t v49 = v84;
    uint64_t v50 = v70;
    sub_1000B4804(v47, v84, (uint64_t (*)(void))v70);
    uint64_t v51 = swift_allocObject();
    sub_1000B51C0(v49, v51 + v83, (uint64_t (*)(void))v50);
    sub_1000B4328();
    sub_10009C0CC();
    unint64_t v52 = v79;
    sub_1000C70D0();
    swift_release();
    swift_release();
    swift_release();
    sub_10001326C(v45, &qword_10010E768);
    uint64_t v54 = v92;
    uint64_t v53 = v93;
    uint64_t v55 = (uint64_t)v86;
    (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v86, v52, v93);
    uint64_t v56 = 0;
    uint64_t v57 = v53;
    uint64_t v58 = v54;
  }
  else
  {
    uint64_t v56 = 1;
    uint64_t v58 = v92;
    uint64_t v57 = v93;
    uint64_t v55 = (uint64_t)v86;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v58 + 56))(v55, v56, 1, v57);
  uint64_t v60 = v90;
  uint64_t v59 = v91;
  uint64_t v61 = *(void (**)(char *, char *, uint64_t))(v90 + 16);
  uint64_t v63 = v87;
  uint64_t v62 = v88;
  v61(v88, v87, v91);
  uint64_t v64 = v94;
  sub_10001A740(v55, v94, &qword_10010E778);
  uint64_t v65 = v95;
  v61(v95, v62, v59);
  uint64_t v66 = sub_100012854(&qword_10010E7B8);
  sub_10001A740(v64, (uint64_t)&v65[*(int *)(v66 + 48)], &qword_10010E778);
  sub_10001326C(v55, &qword_10010E778);
  uint64_t v67 = *(void (**)(char *, uint64_t))(v60 + 8);
  v67(v63, v59);
  sub_10001326C(v64, &qword_10010E778);
  return ((uint64_t (*)(char *, uint64_t))v67)(v62, v59);
}

uint64_t sub_1000A71B4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v30 = a3;
  uint64_t v27 = sub_100012854(&qword_10010E808);
  __chkstk_darwin(v27);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100012854(&qword_10010E7A8);
  uint64_t v28 = *(void *)(v7 - 8);
  uint64_t v29 = v7;
  __chkstk_darwin(v7);
  uint64_t v26 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *a1;
  type metadata accessor for PeopleViewModel();
  sub_1000B5228(&qword_10010E5A8, (void (*)(uint64_t))type metadata accessor for PeopleViewModel);
  uint64_t v10 = sub_1000C6960();
  swift_beginAccess();
  uint64_t v11 = *(void *)(v10 + 16);
  swift_retain();
  swift_release();
  swift_retain();
  uint64_t v12 = sub_1000C6960();
  type metadata accessor for PersonInfoViewModel();
  swift_allocObject();
  uint64_t v13 = sub_1000767D0(v11, v9, v12);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v31 = v9;
  uint64_t v32 = a2;
  sub_1000A38A4(v13, (uint64_t)v6);
  sub_1000B46D8();
  sub_10001E454(&qword_10010E818, &qword_10010E808);
  uint64_t v14 = v26;
  sub_1000C6A40();
  swift_beginAccess();
  uint64_t v15 = (void *)swift_retain();
  LOBYTE(v10) = sub_10003B1F0(v15);
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v17 = swift_allocObject();
  *(unsigned char *)(v17 + 16) = (v10 & 1) == 0;
  uint64_t v18 = v28;
  uint64_t v19 = v30;
  uint64_t v20 = v14;
  uint64_t v21 = v14;
  uint64_t v22 = v29;
  (*(void (**)(uint64_t, char *, uint64_t))(v28 + 16))(v30, v20, v29);
  swift_release();
  uint64_t v23 = (uint64_t *)(v19 + *(int *)(sub_100012854(&qword_10010E788) + 36));
  uint64_t *v23 = KeyPath;
  v23[1] = (uint64_t)sub_1000B4794;
  v23[2] = v17;
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v21, v22);
}

uint64_t sub_1000A752C()
{
  type metadata accessor for PeopleViewModel();
  sub_1000B5228(&qword_10010E5A8, (void (*)(uint64_t))type metadata accessor for PeopleViewModel);
  sub_1000C6960();
  sub_100012854(&qword_10010E800);
  sub_1000C71F0();
  swift_beginAccess();
  if (!swift_unknownObjectWeakLoadStrong())
  {
    swift_release();
    goto LABEL_5;
  }
  char v0 = sub_10000F3C4(v2, v3, v4, v5);
  swift_release();
  uint64_t result = swift_unknownObjectRelease();
  if ((v0 & 1) == 0)
  {
LABEL_5:
    sub_100012854(&qword_10010D7A8);
    return sub_1000C7200();
  }
  return result;
}

uint64_t sub_1000A769C()
{
  return sub_1000C7200();
}

uint64_t sub_1000A76F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000C6DC0();
  uint64_t v84 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v77 = (char *)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_100012854(&qword_10010C898);
  __chkstk_darwin(v82);
  uint64_t v7 = (char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100012854((uint64_t *)&unk_10010D3A0);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v78 = (uint64_t)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v76 - v12;
  __chkstk_darwin(v11);
  uint64_t v83 = (uint64_t)&v76 - v14;
  uint64_t v81 = type metadata accessor for PeopleView();
  __chkstk_darwin(v81);
  uint64_t v16 = (char *)&v76 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v17 = sub_1000C6010();
  sub_1000B4804(a1, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for PeopleView);
  if (v17)
  {
    type metadata accessor for PeopleViewModel();
    sub_1000B5228(&qword_10010E5A8, (void (*)(uint64_t))type metadata accessor for PeopleViewModel);
    sub_1000C6960();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1000C67E0();
    swift_release();
    swift_release();
    swift_release();
    if (v100 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v18 = sub_1000C7990();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v18 = *(void *)((v100 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    sub_1000B486C((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for PeopleView);
    if (v18)
    {
      unint64_t v19 = 0;
      uint64_t v20 = 0;
      uint64_t v21 = 0;
      uint64_t v22 = 0;
      uint64_t v23 = 0;
      uint64_t v24 = 0;
      uint64_t v25 = 0;
      uint64_t v26 = 0;
      uint64_t v27 = 0;
      uint64_t v28 = 0;
      uint64_t result = 0;
      uint64_t v30 = 0;
      uint64_t v31 = 0;
      uint64_t v32 = 0;
      __int16 v33 = -256;
      goto LABEL_20;
    }
  }
  else
  {
    sub_1000B486C((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for PeopleView);
  }
  type metadata accessor for PeopleViewModel();
  sub_1000B5228(&qword_10010E5A8, (void (*)(uint64_t))type metadata accessor for PeopleViewModel);
  sub_1000C6960();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v80 = sub_1000C7190();
  sub_1000C6960();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v34 = v101;
  unint64_t v79 = v100;
  uint64_t v35 = v83;
  sub_1000606F8(v83);
  uint64_t v36 = v84;
  (*(void (**)(char *, void, uint64_t))(v84 + 104))(v13, enum case for UserInterfaceSizeClass.regular(_:), v4);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v13, 0, 1, v4);
  uint64_t v37 = (uint64_t)&v7[*(int *)(v82 + 48)];
  sub_10001A740(v35, (uint64_t)v7, (uint64_t *)&unk_10010D3A0);
  sub_10001A740((uint64_t)v13, v37, (uint64_t *)&unk_10010D3A0);
  uint64_t v38 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48);
  if (v38((uint64_t)v7, 1, v4) == 1)
  {
    sub_10001326C((uint64_t)v13, (uint64_t *)&unk_10010D3A0);
    sub_10001326C(v35, (uint64_t *)&unk_10010D3A0);
    if (v38(v37, 1, v4) == 1)
    {
      sub_10001326C((uint64_t)v7, (uint64_t *)&unk_10010D3A0);
      uint64_t v39 = v80;
      unint64_t v40 = v79;
LABEL_15:
      unsigned __int8 v61 = sub_1000C6EC0();
      sub_1000C6940();
      uint64_t v63 = v62;
      uint64_t v65 = v64;
      uint64_t v67 = v66;
      uint64_t v69 = v68;
      swift_retain();
      swift_bridgeObjectRetain();
      unsigned __int8 v70 = sub_1000C6ED0();
      sub_1000C6940();
      uint64_t v85 = v39;
      unint64_t v86 = v40;
      uint64_t v87 = v34;
      uint64_t v88 = v61;
      uint64_t v89 = v63;
      uint64_t v90 = v65;
      uint64_t v91 = v67;
      uint64_t v92 = v69;
      uint64_t v93 = 0;
      uint64_t v94 = v70;
      uint64_t v95 = v71;
      uint64_t v96 = v72;
      uint64_t v97 = v73;
      uint64_t v98 = v74;
      __int16 v99 = 0;
      goto LABEL_16;
    }
    goto LABEL_12;
  }
  uint64_t v41 = v78;
  sub_10001A740((uint64_t)v7, v78, (uint64_t *)&unk_10010D3A0);
  if (v38(v37, 1, v4) == 1)
  {
    sub_10001326C((uint64_t)v13, (uint64_t *)&unk_10010D3A0);
    sub_10001326C(v35, (uint64_t *)&unk_10010D3A0);
    (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v41, v4);
LABEL_12:
    sub_10001326C((uint64_t)v7, &qword_10010C898);
    uint64_t v39 = v80;
    unint64_t v40 = v79;
    goto LABEL_13;
  }
  uint64_t v56 = v84;
  uint64_t v57 = v41;
  uint64_t v58 = v77;
  (*(void (**)(char *, uint64_t, uint64_t))(v84 + 32))(v77, v37, v4);
  sub_1000B5228(&qword_10010C8C0, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
  char v59 = sub_1000C73F0();
  uint64_t v60 = *(void (**)(char *, uint64_t))(v56 + 8);
  v60(v58, v4);
  sub_10001326C((uint64_t)v13, (uint64_t *)&unk_10010D3A0);
  sub_10001326C(v83, (uint64_t *)&unk_10010D3A0);
  v60((char *)v57, v4);
  sub_10001326C((uint64_t)v7, (uint64_t *)&unk_10010D3A0);
  uint64_t v39 = v80;
  unint64_t v40 = v79;
  if (v59) {
    goto LABEL_15;
  }
LABEL_13:
  unsigned __int8 v42 = sub_1000C6EC0();
  sub_1000C6940();
  uint64_t v44 = v43;
  uint64_t v46 = v45;
  uint64_t v48 = v47;
  uint64_t v50 = v49;
  swift_retain();
  swift_bridgeObjectRetain();
  unsigned __int8 v51 = sub_1000C6ED0();
  sub_1000C6940();
  uint64_t v85 = v39;
  unint64_t v86 = v40;
  uint64_t v87 = v34;
  uint64_t v88 = v42;
  uint64_t v89 = v44;
  uint64_t v90 = v46;
  uint64_t v91 = v48;
  uint64_t v92 = v50;
  uint64_t v93 = 0;
  uint64_t v94 = v51;
  uint64_t v95 = v52;
  uint64_t v96 = v53;
  uint64_t v97 = v54;
  uint64_t v98 = v55;
  __int16 v99 = 256;
LABEL_16:
  sub_100012854(&qword_10010E660);
  sub_1000B3614(&qword_10010E658, &qword_10010E660, (void (*)(void))sub_1000B35EC);
  sub_1000C6D50();
  swift_bridgeObjectRelease();
  swift_release();
  unint64_t v19 = v100;
  uint64_t v20 = v101;
  uint64_t v21 = v102;
  uint64_t v22 = v103;
  uint64_t v23 = v104;
  uint64_t v24 = v105;
  uint64_t v25 = v106;
  uint64_t v26 = v107;
  uint64_t v27 = v108;
  uint64_t v28 = v109;
  uint64_t result = v110;
  uint64_t v30 = v111;
  uint64_t v31 = v112;
  uint64_t v32 = v113;
  if (v115) {
    __int16 v75 = 256;
  }
  else {
    __int16 v75 = 0;
  }
  __int16 v33 = v75 | v114;
LABEL_20:
  *(void *)a2 = v19;
  *(void *)(a2 + 8) = v20;
  *(void *)(a2 + 16) = v21;
  *(void *)(a2 + 24) = v22;
  *(void *)(a2 + 32) = v23;
  *(void *)(a2 + 40) = v24;
  *(void *)(a2 + 48) = v25;
  *(void *)(a2 + 56) = v26;
  *(void *)(a2 + 64) = v27;
  *(void *)(a2 + 72) = v28;
  *(void *)(a2 + 80) = result;
  *(void *)(a2 + 88) = v30;
  *(void *)(a2 + 96) = v31;
  *(void *)(a2 + 104) = v32;
  *(_WORD *)(a2 + 112) = v33;
  return result;
}

uint64_t sub_1000A80D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v50 = a1;
  uint64_t v1 = sub_1000C6D60();
  uint64_t v52 = *(void *)(v1 - 8);
  uint64_t v53 = v1;
  __chkstk_darwin(v1);
  CGFloat v3 = (char *)&v43 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_100012854(&qword_10010E728);
  uint64_t v51 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  uint64_t v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100012854(&qword_10010E730);
  uint64_t v54 = *(void *)(v6 - 8);
  uint64_t v55 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100012854(&qword_10010E738);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v49 = (uint64_t)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v48 = (uint64_t)&v43 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v47 = (char *)&v43 - v15;
  __chkstk_darwin(v14);
  char v17 = (char *)&v43 - v16;
  type metadata accessor for PeopleViewModel();
  sub_1000B5228(&qword_10010E5A8, (void (*)(uint64_t))type metadata accessor for PeopleViewModel);
  sub_1000C6960();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v19 = v56;
  unint64_t v18 = v57;
  swift_bridgeObjectRelease();
  uint64_t v20 = HIBYTE(v18) & 0xF;
  if ((v18 & 0x2000000000000000) == 0) {
    uint64_t v20 = v19 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v43 = v8;
  uint64_t v44 = v3;
  uint64_t v46 = v17;
  if (v20)
  {
    sub_1000C6960();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1000C67E0();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v58 = v56;
    unint64_t v59 = v57;
    sub_1000C6970();
    swift_getKeyPath();
    sub_1000C6A80();
    swift_release();
    swift_release();
    sub_1000363CC();
    sub_1000C7260();
    sub_1000C6B10();
    sub_10001E454(&qword_10010E740, &qword_10010E728);
    sub_1000B5228((unint64_t *)&qword_10010E748, (void (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect);
    uint64_t v21 = v45;
    uint64_t v22 = v53;
    sub_1000C7050();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v3, v22);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v5, v21);
    uint64_t v24 = v54;
    uint64_t v23 = v55;
    (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v17, v8, v55);
    uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56);
    v25(v17, 0, 1, v23);
    uint64_t v26 = v21;
  }
  else
  {
    uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v54 + 56);
    v25(v17, 1, 1, v55);
    uint64_t v26 = v45;
  }
  sub_1000C6960();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v28 = v56;
  unint64_t v27 = v57;
  swift_bridgeObjectRelease();
  uint64_t v29 = HIBYTE(v27) & 0xF;
  if ((v27 & 0x2000000000000000) == 0) {
    uint64_t v29 = v28 & 0xFFFFFFFFFFFFLL;
  }
  if (v29)
  {
    sub_1000C6960();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1000C67E0();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v58 = v56;
    unint64_t v59 = v57;
    sub_1000C6970();
    swift_getKeyPath();
    sub_1000C6A80();
    swift_release();
    swift_release();
    sub_1000363CC();
    sub_1000C7260();
    uint64_t v30 = v26;
    uint64_t v31 = v44;
    sub_1000C6B10();
    sub_10001E454(&qword_10010E740, &qword_10010E728);
    sub_1000B5228((unint64_t *)&qword_10010E748, (void (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect);
    uint64_t v32 = v43;
    uint64_t v33 = v53;
    sub_1000C7050();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v31, v33);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v5, v30);
    uint64_t v34 = v55;
    uint64_t v35 = (uint64_t)v47;
    (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v47, v32, v55);
    uint64_t v36 = 0;
  }
  else
  {
    uint64_t v36 = 1;
    uint64_t v34 = v55;
    uint64_t v35 = (uint64_t)v47;
  }
  uint64_t v37 = (uint64_t)v46;
  v25((char *)v35, v36, 1, v34);
  uint64_t v38 = v48;
  sub_10001A740(v37, v48, &qword_10010E738);
  uint64_t v39 = v49;
  sub_10001A740(v35, v49, &qword_10010E738);
  uint64_t v40 = v50;
  sub_10001A740(v38, v50, &qword_10010E738);
  uint64_t v41 = sub_100012854(&qword_10010E750);
  sub_10001A740(v39, v40 + *(int *)(v41 + 48), &qword_10010E738);
  sub_10001326C(v35, &qword_10010E738);
  sub_10001326C(v37, &qword_10010E738);
  sub_10001326C(v39, &qword_10010E738);
  return sub_10001326C(v38, &qword_10010E738);
}

uint64_t sub_1000A895C@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_1000A8970()
{
  return sub_1000114AC();
}

uint64_t sub_1000A8984@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_1000A8998()
{
  return sub_1000114AC();
}

uint64_t sub_1000A89AC@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for PeopleViewModel();
  sub_1000B5228(&qword_10010E5A8, (void (*)(uint64_t))type metadata accessor for PeopleViewModel);
  sub_1000C6960();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v2 = HIBYTE(v8) & 0xF;
  if ((v8 & 0x2000000000000000) == 0) {
    uint64_t v2 = *(void *)v7 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    sub_1000C6960();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1000C67E0();
    swift_release();
    swift_release();
    swift_release();
    sub_1000363CC();
    uint64_t result = sub_1000C7000();
    uint64_t v2 = v6 & 1;
  }
  else
  {
    uint64_t result = 0;
    uint64_t v4 = 0;
    uint64_t v5 = 0;
  }
  *a1 = result;
  a1[1] = v4;
  a1[2] = v2;
  a1[3] = v5;
  return result;
}

uint64_t sub_1000A8B64()
{
  sub_100012854((uint64_t *)&unk_10010C5E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1000CE630;
  *(unsigned char *)(inited + 32) = 7;
  uint64_t v1 = self;
  uint64_t v2 = (objc_class *)[v1 mainBundle];
  v70._countAndFlagsBits = 0x80000001000D8DD0;
  v83._unint64_t object = (void *)0x80000001000D8DA0;
  v83._countAndFlagsBits = 0xD000000000000020;
  v96.value._countAndFlagsBits = 0;
  v96.value._unint64_t object = 0;
  v3.super.Class isa = v2;
  v109._countAndFlagsBits = 0;
  v109._unint64_t object = (void *)0xE000000000000000;
  uint64_t v4 = sub_1000C6320(v83, v96, v3, v109, v70);
  uint64_t v6 = v5;

  *(void *)(inited + 40) = v4;
  *(void *)(inited + 48) = v6;
  *(unsigned char *)(inited + 56) = 8;
  uint64_t v7 = (objc_class *)[v1 mainBundle];
  v71._countAndFlagsBits = 0x80000001000D8E50;
  v84._countAndFlagsBits = 0xD000000000000022;
  v84._unint64_t object = (void *)0x80000001000D8E20;
  v97.value._countAndFlagsBits = 0;
  v97.value._unint64_t object = 0;
  v8.super.Class isa = v7;
  v110._countAndFlagsBits = 0;
  v110._unint64_t object = (void *)0xE000000000000000;
  uint64_t v9 = sub_1000C6320(v84, v97, v8, v110, v71);
  uint64_t v11 = v10;

  *(void *)(inited + 64) = v9;
  *(void *)(inited + 72) = v11;
  *(unsigned char *)(inited + 80) = 9;
  uint64_t v12 = (objc_class *)[v1 mainBundle];
  v72._countAndFlagsBits = 0x80000001000D8EE0;
  v85._unint64_t object = (void *)0x80000001000D8EB0;
  v85._countAndFlagsBits = 0xD000000000000020;
  v98.value._countAndFlagsBits = 0;
  v98.value._unint64_t object = 0;
  v13.super.Class isa = v12;
  v111._countAndFlagsBits = 0;
  v111._unint64_t object = (void *)0xE000000000000000;
  uint64_t v14 = sub_1000C6320(v85, v98, v13, v111, v72);
  uint64_t v16 = v15;

  *(void *)(inited + 88) = v14;
  *(void *)(inited + 96) = v16;
  *(unsigned char *)(inited + 104) = 10;
  char v17 = (objc_class *)[v1 mainBundle];
  v86._countAndFlagsBits = 0xD000000000000025;
  v73._countAndFlagsBits = 0x80000001000D8F60;
  v86._unint64_t object = (void *)0x80000001000D8F30;
  v99.value._countAndFlagsBits = 0;
  v99.value._unint64_t object = 0;
  v18.super.Class isa = v17;
  v112._countAndFlagsBits = 0;
  v112._unint64_t object = (void *)0xE000000000000000;
  uint64_t v19 = sub_1000C6320(v86, v99, v18, v112, v73);
  uint64_t v21 = v20;

  *(void *)(inited + 112) = v19;
  *(void *)(inited + 120) = v21;
  *(unsigned char *)(inited + 128) = 11;
  uint64_t v22 = (objc_class *)[v1 mainBundle];
  v74._countAndFlagsBits = 0x80000001000D8FE0;
  v87._unint64_t object = (void *)0x80000001000D8FB0;
  v87._countAndFlagsBits = 0xD000000000000021;
  v100.value._countAndFlagsBits = 0;
  v100.value._unint64_t object = 0;
  v23.super.Class isa = v22;
  v113._countAndFlagsBits = 0;
  v113._unint64_t object = (void *)0xE000000000000000;
  uint64_t v24 = sub_1000C6320(v87, v100, v23, v113, v74);
  uint64_t v26 = v25;

  *(void *)(inited + 136) = v24;
  *(void *)(inited + 144) = v26;
  *(unsigned char *)(inited + 152) = 0;
  unint64_t v27 = (objc_class *)[v1 mainBundle];
  v75._countAndFlagsBits = 0x80000001000D9040;
  v88._countAndFlagsBits = 0xD000000000000022;
  v88._unint64_t object = (void *)0x80000001000D8E20;
  v101.value._countAndFlagsBits = 0;
  v101.value._unint64_t object = 0;
  v28.super.Class isa = v27;
  v114._countAndFlagsBits = 0;
  v114._unint64_t object = (void *)0xE000000000000000;
  uint64_t v29 = sub_1000C6320(v88, v101, v28, v114, v75);
  uint64_t v31 = v30;

  *(void *)(inited + 160) = v29;
  *(void *)(inited + 168) = v31;
  *(unsigned char *)(inited + 176) = 1;
  uint64_t v32 = (objc_class *)[v1 mainBundle];
  v89._countAndFlagsBits = 0xD000000000000024;
  v76._countAndFlagsBits = 0x80000001000D90C0;
  v89._unint64_t object = (void *)0x80000001000D9090;
  v102.value._countAndFlagsBits = 0;
  v102.value._unint64_t object = 0;
  v33.super.Class isa = v32;
  v115._countAndFlagsBits = 0;
  v115._unint64_t object = (void *)0xE000000000000000;
  uint64_t v34 = sub_1000C6320(v89, v102, v33, v115, v76);
  uint64_t v36 = v35;

  *(void *)(inited + 184) = v34;
  *(void *)(inited + 192) = v36;
  *(unsigned char *)(inited + 200) = 2;
  uint64_t v37 = (objc_class *)[v1 mainBundle];
  v90._countAndFlagsBits = 0xD000000000000027;
  v77._countAndFlagsBits = 0x80000001000D9140;
  v90._unint64_t object = (void *)0x80000001000D9110;
  v103.value._countAndFlagsBits = 0;
  v103.value._unint64_t object = 0;
  v38.super.Class isa = v37;
  v116._countAndFlagsBits = 0;
  v116._unint64_t object = (void *)0xE000000000000000;
  uint64_t v39 = sub_1000C6320(v90, v103, v38, v116, v77);
  uint64_t v41 = v40;

  *(void *)(inited + 208) = v39;
  *(void *)(inited + 216) = v41;
  *(unsigned char *)(inited + 224) = 3;
  unsigned __int8 v42 = (objc_class *)[v1 mainBundle];
  v91._countAndFlagsBits = 0xD000000000000028;
  v78._countAndFlagsBits = 0x80000001000D91D0;
  v91._unint64_t object = (void *)0x80000001000D91A0;
  v104.value._countAndFlagsBits = 0;
  v104.value._unint64_t object = 0;
  v43.super.Class isa = v42;
  v117._countAndFlagsBits = 0;
  v117._unint64_t object = (void *)0xE000000000000000;
  uint64_t v44 = sub_1000C6320(v91, v104, v43, v117, v78);
  uint64_t v46 = v45;

  *(void *)(inited + 232) = v44;
  *(void *)(inited + 240) = v46;
  *(unsigned char *)(inited + 248) = 4;
  uint64_t v47 = (objc_class *)[v1 mainBundle];
  v79._countAndFlagsBits = 0x80000001000D9260;
  v92._unint64_t object = (void *)0x80000001000D9230;
  v92._countAndFlagsBits = 0xD000000000000021;
  v105.value._countAndFlagsBits = 0;
  v105.value._unint64_t object = 0;
  v48.super.Class isa = v47;
  v118._countAndFlagsBits = 0;
  v118._unint64_t object = (void *)0xE000000000000000;
  uint64_t v49 = sub_1000C6320(v92, v105, v48, v118, v79);
  uint64_t v51 = v50;

  *(void *)(inited + 256) = v49;
  *(void *)(inited + 264) = v51;
  *(unsigned char *)(inited + 272) = 5;
  uint64_t v52 = (objc_class *)[v1 mainBundle];
  v80._countAndFlagsBits = 0x80000001000D92E0;
  v93._unint64_t object = (void *)0x80000001000D92B0;
  v93._countAndFlagsBits = 0xD000000000000021;
  v106.value._countAndFlagsBits = 0;
  v106.value._unint64_t object = 0;
  v53.super.Class isa = v52;
  v119._countAndFlagsBits = 0;
  v119._unint64_t object = (void *)0xE000000000000000;
  uint64_t v54 = sub_1000C6320(v93, v106, v53, v119, v80);
  uint64_t v56 = v55;

  *(void *)(inited + 280) = v54;
  *(void *)(inited + 288) = v56;
  *(unsigned char *)(inited + 296) = 6;
  unint64_t v57 = (objc_class *)[v1 mainBundle];
  v94._countAndFlagsBits = 0xD00000000000001FLL;
  v81._countAndFlagsBits = 0x80000001000D9350;
  v94._unint64_t object = (void *)0x80000001000D9330;
  v107.value._countAndFlagsBits = 0;
  v107.value._unint64_t object = 0;
  v58.super.Class isa = v57;
  v120._countAndFlagsBits = 0;
  v120._unint64_t object = (void *)0xE000000000000000;
  uint64_t v59 = sub_1000C6320(v94, v107, v58, v120, v81);
  uint64_t v61 = v60;

  *(void *)(inited + 304) = v59;
  *(void *)(inited + 312) = v61;
  *(unsigned char *)(inited + 320) = 13;
  uint64_t v62 = (objc_class *)[v1 mainBundle];
  v82._countAndFlagsBits = 0x80000001000D93D0;
  v95._unint64_t object = (void *)0x80000001000D93A0;
  v95._countAndFlagsBits = 0xD000000000000020;
  v108.value._countAndFlagsBits = 0;
  v108.value._unint64_t object = 0;
  v63.super.Class isa = v62;
  v121._countAndFlagsBits = 0;
  v121._unint64_t object = (void *)0xE000000000000000;
  uint64_t v64 = sub_1000C6320(v95, v108, v63, v121, v82);
  uint64_t v66 = v65;

  *(void *)(inited + 328) = v64;
  *(void *)(inited + 336) = v66;
  unint64_t v67 = sub_10004E6A4(inited);
  type metadata accessor for PeopleViewModel();
  sub_1000B5228(&qword_10010E5A8, (void (*)(uint64_t))type metadata accessor for PeopleViewModel);
  sub_1000C6960();
  swift_beginAccess();
  swift_retain();
  swift_release();
  uint64_t v68 = sub_10003B628(v67);
  swift_release();
  swift_bridgeObjectRelease();
  return v68;
}

double sub_1000A92BC@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = sub_1000AA708(a1).n128_u64[0];
  return result;
}

uint64_t sub_1000A92D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v84 = a2;
  uint64_t v3 = sub_100012854(&qword_10010E6C0);
  uint64_t v71 = *(void *)(v3 - 8);
  uint64_t v72 = v3;
  __chkstk_darwin(v3);
  Swift::String v70 = (char *)v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_100012854(&qword_10010E6C8);
  uint64_t v82 = *(void *)(v86 - 8);
  __chkstk_darwin(v86);
  uint64_t v69 = (char *)v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100012854(&qword_10010E6D0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v83 = (uint64_t)v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v85 = (uint64_t)v66 - v9;
  uint64_t v10 = type metadata accessor for PeopleView();
  uint64_t v78 = *(void *)(v10 - 8);
  uint64_t v11 = *(void *)(v78 + 64);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = sub_100012854(&qword_10010BE10);
  __chkstk_darwin(v12 - 8);
  Swift::String v77 = (char *)v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100012854(&qword_10010E6D8);
  uint64_t v79 = *(void *)(v14 - 8);
  uint64_t v80 = v14;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100012854(&qword_10010E6E0);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v75 = v17;
  uint64_t v76 = v18;
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)v66 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_100012854(&qword_10010E6E8);
  uint64_t v22 = __chkstk_darwin(v21 - 8);
  uint64_t v81 = (uint64_t)v66 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)v66 - v24;
  uint64_t v26 = type metadata accessor for PeopleViewModel();
  uint64_t v73 = sub_1000B5228(&qword_10010E5A8, (void (*)(uint64_t))type metadata accessor for PeopleViewModel);
  uint64_t v74 = v26;
  sub_1000C6960();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v68 = v16;
  uint64_t v67 = (uint64_t)v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66[1] = v11;
  if (v89 == 1)
  {
    uint64_t v27 = sub_1000C6930();
    NSBundle v28 = v77;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v77, 1, 1, v27);
    sub_1000B4804(a1, (uint64_t)v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for PeopleView);
    unint64_t v29 = (*(unsigned __int8 *)(v78 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80);
    uint64_t v30 = swift_allocObject();
    sub_1000B51C0((uint64_t)v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v30 + v29, (uint64_t (*)(void))type metadata accessor for PeopleView);
    sub_100012854(&qword_10010E6F8);
    sub_1000B3AD8(&qword_10010E700, &qword_10010E6F8, &qword_10010E708, &qword_10010E710);
    uint64_t v40 = v28;
    sub_1000C7220();
    id v31 = [self labelColor];
    uint64_t v32 = sub_1000C7180();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v35 = v79;
    uint64_t v34 = v80;
    (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v20, v16, v80);
    uint64_t v36 = v75;
    uint64_t v37 = (uint64_t *)&v20[*(int *)(v75 + 36)];
    *uint64_t v37 = KeyPath;
    v37[1] = v32;
    (*(void (**)(char *, uint64_t))(v35 + 8))(v16, v34);
    sub_100012898((uint64_t)v20, (uint64_t)v25, &qword_10010E6E0);
    uint64_t v38 = 0;
    uint64_t v39 = (uint64_t)v25;
    uint64_t v41 = v36;
  }
  else
  {
    uint64_t v38 = 1;
    uint64_t v39 = (uint64_t)v25;
    uint64_t v40 = v77;
    uint64_t v41 = v75;
  }
  uint64_t v42 = 1;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v76 + 56))(v39, v38, 1, v41);
  sub_1000C6960();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  if (v89 == 1)
  {
    uint64_t v43 = sub_1000C6930();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v40, 1, 1, v43);
    uint64_t v44 = v67;
    sub_1000B4804(a1, v67, (uint64_t (*)(void))type metadata accessor for PeopleView);
    uint64_t v45 = *(unsigned __int8 *)(v78 + 80);
    uint64_t v46 = (v45 + 16) & ~v45;
    Swift::String v77 = (char *)(v45 | 7);
    uint64_t v47 = swift_allocObject();
    sub_1000B51C0(v44, v47 + v46, (uint64_t (*)(void))type metadata accessor for PeopleView);
    sub_100012854(&qword_10010E6F8);
    uint64_t v78 = v39;
    sub_1000B3AD8(&qword_10010E700, &qword_10010E6F8, &qword_10010E708, &qword_10010E710);
    NSBundle v48 = v68;
    sub_1000C7220();
    uint64_t v49 = *(void *)(a1 + 88);
    char v87 = *(unsigned char *)(a1 + 80);
    uint64_t v88 = v49;
    sub_100012854(&qword_10010D7A8);
    sub_1000C7210();
    sub_1000B4804(a1, v44, (uint64_t (*)(void))type metadata accessor for PeopleView);
    uint64_t v50 = swift_allocObject();
    sub_1000B51C0(v44, v50 + v46, (uint64_t (*)(void))type metadata accessor for PeopleView);
    sub_10001E454(&qword_10010E720, &qword_10010E6D8);
    sub_10009C0CC();
    uint64_t v51 = v70;
    uint64_t v52 = v80;
    sub_1000C70D0();
    swift_release();
    swift_release();
    uint64_t v39 = v78;
    swift_release();
    (*(void (**)(char *, uint64_t))(v79 + 8))(v48, v52);
    id v53 = [self labelColor];
    uint64_t v54 = sub_1000C7180();
    uint64_t v55 = swift_getKeyPath();
    uint64_t v57 = v71;
    uint64_t v56 = v72;
    uint64_t v58 = (uint64_t)v69;
    (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v69, v51, v72);
    uint64_t v59 = (uint64_t *)(v58 + *(int *)(v86 + 36));
    *uint64_t v59 = v55;
    v59[1] = v54;
    (*(void (**)(char *, uint64_t))(v57 + 8))(v51, v56);
    sub_100012898(v58, v85, &qword_10010E6C8);
    uint64_t v42 = 0;
  }
  uint64_t v60 = v85;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v82 + 56))(v85, v42, 1, v86);
  uint64_t v61 = v81;
  sub_10001A740(v39, v81, &qword_10010E6E8);
  uint64_t v62 = v83;
  sub_10001A740(v60, v83, &qword_10010E6D0);
  uint64_t v63 = v84;
  sub_10001A740(v61, v84, &qword_10010E6E8);
  uint64_t v64 = sub_100012854(&qword_10010E6F0);
  sub_10001A740(v62, v63 + *(int *)(v64 + 48), &qword_10010E6D0);
  sub_10001326C(v60, &qword_10010E6D0);
  sub_10001326C(v39, &qword_10010E6E8);
  sub_10001326C(v62, &qword_10010E6D0);
  return sub_10001326C(v61, &qword_10010E6E8);
}

uint64_t sub_1000A9DB8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000C6CF0();
  sub_1000A9F44((uint64_t)v11);
  uint64_t v3 = v11[0];
  uint64_t v4 = v11[1];
  char v5 = v12;
  uint64_t v6 = v13;
  uint64_t v7 = v14;
  char v8 = v15;
  uint64_t v9 = v16;
  uint64_t result = sub_1000C6D10();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = v6;
  *(void *)(a1 + 56) = v7;
  *(unsigned char *)(a1 + 64) = v8;
  *(void *)(a1 + 72) = v9;
  *(void *)(a1 + 80) = result;
  *(void *)(a1 + 88) = sub_1000B60F4;
  *(void *)(a1 + 96) = 0;
  return result;
}

uint64_t sub_1000A9E84@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000C6CF0();
  sub_1000A9F44((uint64_t)v11);
  uint64_t v3 = v11[0];
  uint64_t v4 = v11[1];
  char v5 = v12;
  uint64_t v6 = v13;
  uint64_t v7 = v14;
  char v8 = v15;
  uint64_t v9 = v16;
  uint64_t result = sub_1000C6D10();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = v6;
  *(void *)(a1 + 56) = v7;
  *(unsigned char *)(a1 + 64) = v8;
  *(void *)(a1 + 72) = v9;
  *(void *)(a1 + 80) = result;
  *(void *)(a1 + 88) = sub_1000B60F4;
  *(void *)(a1 + 96) = 0;
  return result;
}

uint64_t sub_1000A9F44@<X0>(uint64_t a1@<X8>)
{
  sub_1000C6D00();
  uint64_t v2 = sub_1000C6FF0();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  char v8 = v7 & 1;
  uint64_t v9 = sub_1000C71A0();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 40) = 1;
  *(void *)(a1 + 48) = v9;
  sub_100039224(v2, v4, v8);
  swift_bridgeObjectRetain();
  sub_100039234(v2, v4, v8);

  return swift_bridgeObjectRelease();
}

double sub_1000AA02C@<D0>(uint64_t a1@<X8>)
{
  type metadata accessor for PeopleViewModel();
  sub_1000B5228(&qword_10010E5A8, (void (*)(uint64_t))type metadata accessor for PeopleViewModel);
  sub_1000C6960();
  uint64_t v2 = sub_100031138();
  swift_release();
  *(void *)a1 = v2;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  return result;
}

uint64_t sub_1000AA0E0@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for GlobalPermissionViewModel();
  sub_1000B5228(&qword_10010DB40, (void (*)(uint64_t))type metadata accessor for GlobalPermissionViewModel);
  sub_1000C6960();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = 0;
  uint64_t v3 = 0;
  uint64_t v4 = 0;
  uint64_t v5 = 0;
  if ((v7 & 1) == 0)
  {
    sub_1000C6960();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1000C67E0();
    swift_release();
    swift_release();
    swift_release();
    sub_1000363CC();
    uint64_t result = sub_1000C7000();
    uint64_t v4 = v6 & 1;
  }
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return result;
}

uint64_t sub_1000AA280@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v3 = type metadata accessor for PeopleView();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3 - 8);
  uint64_t v6 = sub_100012854(&qword_10010BE10);
  __chkstk_darwin(v6 - 8);
  char v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100012854(&qword_10010BF40);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v27 = v9;
  uint64_t v28 = v10;
  __chkstk_darwin(v9);
  uint64_t v26 = (char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000C6910();
  uint64_t v12 = sub_1000C6930();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_1000B4804(a1, (uint64_t)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for PeopleView);
  unint64_t v13 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v14 = swift_allocObject();
  sub_1000B51C0((uint64_t)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v14 + v13, (uint64_t (*)(void))type metadata accessor for PeopleView);
  sub_100012854(&qword_10010BF50);
  sub_10001E454(&qword_10010BF58, &qword_10010BF50);
  sub_1000C7220();
  sub_1000C6D00();
  uint64_t v15 = sub_1000C6FF0();
  uint64_t v17 = v16;
  v25[1] = v18;
  uint64_t v19 = *(void *)(a1 + 56);
  char v21 = v20 & 1;
  char v32 = *(unsigned char *)(a1 + 48);
  uint64_t v33 = v19;
  sub_100012854(&qword_10010D7A8);
  sub_1000C7210();
  v25[0] = v25;
  uint64_t v31 = a1;
  uint64_t v30 = a1;
  sub_100012854(&qword_10010E2B0);
  sub_10001E454(&qword_10010BF48, &qword_10010BF40);
  sub_10001E454(&qword_10010E2A8, &qword_10010E2B0);
  uint64_t v22 = v27;
  uint64_t v23 = v26;
  sub_1000C70B0();
  swift_release();
  swift_release();
  sub_100039234(v15, v17, v21);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v23, v22);
}

double sub_1000AA6E8@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = sub_1000AA708(a1).n128_u64[0];
  return result;
}

__n128 sub_1000AA708@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000C6CF0();
  sub_1000AF69C((uint64_t)&v10);
  uint64_t v3 = v10;
  char v4 = v11;
  char v5 = v13;
  uint64_t v6 = v14;
  uint64_t v7 = v15;
  char v8 = v16;
  __n128 result = v12;
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  *(void *)(a1 + 24) = v3;
  *(unsigned char *)(a1 + 32) = v4;
  *(__n128 *)(a1 + 40) = result;
  *(unsigned char *)(a1 + 56) = v5;
  *(void *)(a1 + 64) = v6;
  *(void *)(a1 + 72) = v7;
  *(unsigned char *)(a1 + 80) = v8;
  return result;
}

uint64_t sub_1000AA798()
{
  char v0 = self;
  uint64_t v1 = (objc_class *)[v0 mainBundle];
  v87._countAndFlagsBits = 0x1000000000000049;
  v70._countAndFlagsBits = 0x80000001000D9470;
  v87._unint64_t object = (void *)0x80000001000D9420;
  v100.value._countAndFlagsBits = 0;
  v100.value._unint64_t object = 0;
  v2.super.Class isa = v1;
  v113._countAndFlagsBits = 0;
  v113._unint64_t object = (void *)0xE000000000000000;
  sub_1000C6320(v87, v100, v2, v113, v70);

  sub_100012854((uint64_t *)&unk_10010BD70);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1000CABA0;
  type metadata accessor for PeopleViewModel();
  sub_1000B5228(&qword_10010E5A8, (void (*)(uint64_t))type metadata accessor for PeopleViewModel);
  sub_1000C6960();
  swift_beginAccess();
  swift_retain();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  *(void *)(v3 + 56) = &type metadata for String;
  *(void *)(v3 + 64) = sub_100036368();
  *(void *)(v3 + 32) = v85;
  *(void *)(v3 + 40) = v86;
  uint64_t v4 = sub_1000C7410();
  uint64_t v83 = v5;
  uint64_t v84 = v4;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100012854((uint64_t *)&unk_10010C5E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1000CE630;
  *(unsigned char *)(inited + 32) = 7;
  uint64_t v7 = (objc_class *)[v0 mainBundle];
  v71._countAndFlagsBits = 0x80000001000D9470;
  v88._unint64_t object = (void *)0x80000001000D94A0;
  v88._countAndFlagsBits = 0xD00000000000007BLL;
  v101.value._countAndFlagsBits = 0;
  v101.value._unint64_t object = 0;
  v8.super.Class isa = v7;
  v114._countAndFlagsBits = 0;
  v114._unint64_t object = (void *)0xE000000000000000;
  uint64_t v9 = sub_1000C6320(v88, v101, v8, v114, v71);
  uint64_t v11 = v10;

  *(void *)(inited + 40) = v9;
  *(void *)(inited + 48) = v11;
  *(unsigned char *)(inited + 56) = 8;
  __n128 v12 = (objc_class *)[v0 mainBundle];
  v89._countAndFlagsBits = 0xD000000000000091;
  v72._countAndFlagsBits = 0x80000001000D95C0;
  v89._unint64_t object = (void *)0x80000001000D9520;
  v102.value._countAndFlagsBits = 0;
  v102.value._unint64_t object = 0;
  v13.super.Class isa = v12;
  v115._countAndFlagsBits = 0;
  v115._unint64_t object = (void *)0xE000000000000000;
  uint64_t v14 = sub_1000C6320(v89, v102, v13, v115, v72);
  uint64_t v16 = v15;

  *(void *)(inited + 64) = v14;
  *(void *)(inited + 72) = v16;
  *(unsigned char *)(inited + 80) = 9;
  uint64_t v17 = (objc_class *)[v0 mainBundle];
  v73._countAndFlagsBits = 0x80000001000D9470;
  v90._unint64_t object = (void *)0x80000001000D9600;
  v90._countAndFlagsBits = 0xD00000000000007BLL;
  v103.value._countAndFlagsBits = 0;
  v103.value._unint64_t object = 0;
  v18.super.Class isa = v17;
  v116._countAndFlagsBits = 0;
  v116._unint64_t object = (void *)0xE000000000000000;
  uint64_t v19 = sub_1000C6320(v90, v103, v18, v116, v73);
  uint64_t v21 = v20;

  *(void *)(inited + 88) = v19;
  *(void *)(inited + 96) = v21;
  *(unsigned char *)(inited + 104) = 10;
  uint64_t v22 = (objc_class *)[v0 mainBundle];
  v91._countAndFlagsBits = 0xD000000000000080;
  v74._countAndFlagsBits = 0x80000001000D9470;
  v91._unint64_t object = (void *)0x80000001000D9680;
  v104.value._countAndFlagsBits = 0;
  v104.value._unint64_t object = 0;
  v23.super.Class isa = v22;
  v117._countAndFlagsBits = 0;
  v117._unint64_t object = (void *)0xE000000000000000;
  uint64_t v24 = sub_1000C6320(v91, v104, v23, v117, v74);
  uint64_t v26 = v25;

  *(void *)(inited + 112) = v24;
  *(void *)(inited + 120) = v26;
  *(unsigned char *)(inited + 128) = 11;
  uint64_t v27 = (objc_class *)[v0 mainBundle];
  v92._countAndFlagsBits = 0xD00000000000007CLL;
  v75._countAndFlagsBits = 0x80000001000D9470;
  v92._unint64_t object = (void *)0x80000001000D9710;
  v105.value._countAndFlagsBits = 0;
  v105.value._unint64_t object = 0;
  v28.super.Class isa = v27;
  v118._countAndFlagsBits = 0;
  v118._unint64_t object = (void *)0xE000000000000000;
  uint64_t v29 = sub_1000C6320(v92, v105, v28, v118, v75);
  uint64_t v31 = v30;

  *(void *)(inited + 136) = v29;
  *(void *)(inited + 144) = v31;
  *(unsigned char *)(inited + 152) = 0;
  char v32 = (objc_class *)[v0 mainBundle];
  v93._countAndFlagsBits = 0x10000000000000A2;
  v76._countAndFlagsBits = 0x80000001000D9470;
  v93._unint64_t object = (void *)0x80000001000D9790;
  v106.value._countAndFlagsBits = 0;
  v106.value._unint64_t object = 0;
  v33.super.Class isa = v32;
  v119._countAndFlagsBits = 0;
  v119._unint64_t object = (void *)0xE000000000000000;
  uint64_t v34 = sub_1000C6320(v93, v106, v33, v119, v76);
  uint64_t v36 = v35;

  *(void *)(inited + 160) = v34;
  *(void *)(inited + 168) = v36;
  *(unsigned char *)(inited + 176) = 1;
  uint64_t v37 = (objc_class *)[v0 mainBundle];
  v94._countAndFlagsBits = 0x1000000000000090;
  v77._countAndFlagsBits = 0x80000001000D9470;
  v94._unint64_t object = (void *)0x80000001000D9840;
  v107.value._countAndFlagsBits = 0;
  v107.value._unint64_t object = 0;
  v38.super.Class isa = v37;
  v120._countAndFlagsBits = 0;
  v120._unint64_t object = (void *)0xE000000000000000;
  uint64_t v39 = sub_1000C6320(v94, v107, v38, v120, v77);
  uint64_t v41 = v40;

  *(void *)(inited + 184) = v39;
  *(void *)(inited + 192) = v41;
  *(unsigned char *)(inited + 200) = 2;
  uint64_t v42 = (objc_class *)[v0 mainBundle];
  v95._countAndFlagsBits = 0x1000000000000093;
  v78._countAndFlagsBits = 0x80000001000D9470;
  v95._unint64_t object = (void *)0x80000001000D98E0;
  v108.value._countAndFlagsBits = 0;
  v108.value._unint64_t object = 0;
  v43.super.Class isa = v42;
  v121._countAndFlagsBits = 0;
  v121._unint64_t object = (void *)0xE000000000000000;
  uint64_t v44 = sub_1000C6320(v95, v108, v43, v121, v78);
  uint64_t v46 = v45;

  *(void *)(inited + 208) = v44;
  *(void *)(inited + 216) = v46;
  *(unsigned char *)(inited + 224) = 3;
  uint64_t v47 = (objc_class *)[v0 mainBundle];
  v96._countAndFlagsBits = 0x1000000000000094;
  v79._countAndFlagsBits = 0x80000001000D9470;
  v96._unint64_t object = (void *)0x80000001000D9980;
  v109.value._countAndFlagsBits = 0;
  v109.value._unint64_t object = 0;
  v48.super.Class isa = v47;
  v122._countAndFlagsBits = 0;
  v122._unint64_t object = (void *)0xE000000000000000;
  uint64_t v49 = sub_1000C6320(v96, v109, v48, v122, v79);
  uint64_t v51 = v50;

  *(void *)(inited + 232) = v49;
  *(void *)(inited + 240) = v51;
  *(unsigned char *)(inited + 248) = 4;
  uint64_t v52 = (objc_class *)[v0 mainBundle];
  v80._countAndFlagsBits = 0x80000001000D9470;
  v97._unint64_t object = (void *)0x80000001000D9A20;
  v97._countAndFlagsBits = 0x100000000000008DLL;
  v110.value._countAndFlagsBits = 0;
  v110.value._unint64_t object = 0;
  v53.super.Class isa = v52;
  v123._countAndFlagsBits = 0;
  v123._unint64_t object = (void *)0xE000000000000000;
  uint64_t v54 = sub_1000C6320(v97, v110, v53, v123, v80);
  uint64_t v56 = v55;

  *(void *)(inited + 256) = v54;
  *(void *)(inited + 264) = v56;
  *(unsigned char *)(inited + 272) = 5;
  uint64_t v57 = (objc_class *)[v0 mainBundle];
  v81._countAndFlagsBits = 0x80000001000D9470;
  v98._unint64_t object = (void *)0x80000001000D9AB0;
  v98._countAndFlagsBits = 0x100000000000008DLL;
  v111.value._countAndFlagsBits = 0;
  v111.value._unint64_t object = 0;
  v58.super.Class isa = v57;
  v124._countAndFlagsBits = 0;
  v124._unint64_t object = (void *)0xE000000000000000;
  uint64_t v59 = sub_1000C6320(v98, v111, v58, v124, v81);
  uint64_t v61 = v60;

  *(void *)(inited + 280) = v59;
  *(void *)(inited + 288) = v61;
  *(unsigned char *)(inited + 296) = 6;
  uint64_t v62 = (objc_class *)[v0 mainBundle];
  v99._countAndFlagsBits = 0x100000000000008BLL;
  v82._countAndFlagsBits = 0x80000001000D9470;
  v99._unint64_t object = (void *)0x80000001000D9B40;
  v112.value._countAndFlagsBits = 0;
  v112.value._unint64_t object = 0;
  v63.super.Class isa = v62;
  v125._countAndFlagsBits = 0;
  v125._unint64_t object = (void *)0xE000000000000000;
  uint64_t v64 = sub_1000C6320(v99, v112, v63, v125, v82);
  uint64_t v66 = v65;

  *(void *)(inited + 304) = v64;
  *(void *)(inited + 312) = v66;
  *(unsigned char *)(inited + 320) = 13;
  *(void *)(inited + 328) = v84;
  *(void *)(inited + 336) = v83;
  unint64_t v67 = sub_10004E6A4(inited);
  sub_1000C6960();
  swift_beginAccess();
  swift_retain();
  swift_release();
  uint64_t v68 = sub_10003B628(v67);
  swift_release();
  swift_bridgeObjectRelease();
  return v68;
}

uint64_t sub_1000AAF70(uint64_t a1)
{
  uint64_t v2 = sub_1000C6D80();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = sub_100012854(&qword_10010E580);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1000C6D70();
  uint64_t v9 = a1;
  sub_100012854(&qword_10010E2B0);
  sub_10001E454(&qword_10010E2A8, &qword_10010E2B0);
  sub_1000C6980();
  sub_10001E454(&qword_10010E588, &qword_10010E580);
  sub_1000C6DB0();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1000AB138(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PeopleView();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2 - 8);
  sub_1000B4804(a1, (uint64_t)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for PeopleView);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = swift_allocObject();
  sub_1000B51C0((uint64_t)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v6 + v5, (uint64_t (*)(void))type metadata accessor for PeopleView);
  return sub_1000C7230();
}

uint64_t sub_1000AB280@<X0>(uint64_t a1@<X8>)
{
  sub_1000C6D00();
  uint64_t v2 = sub_1000C6FF0();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  uint64_t v7 = sub_1000C6FD0();
  uint64_t v9 = v8;
  char v11 = v10;
  uint64_t v13 = v12;
  sub_100039234(v2, v4, v6);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = v9;
  *(unsigned char *)(a1 + 16) = v11 & 1;
  *(void *)(a1 + 24) = v13;
  return result;
}

uint64_t sub_1000AB34C@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_1000AB360()
{
  return sub_1000114AC();
}

uint64_t sub_1000AB374@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_1000AB388()
{
  return sub_1000114AC();
}

uint64_t sub_1000AB39C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v45 = a1;
  uint64_t v55 = a2;
  uint64_t v3 = sub_100012854(&qword_10010CB70);
  __chkstk_darwin(v3 - 8);
  NSBundle v53 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000C6CE0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_100012854(&qword_10010E518);
  uint64_t v47 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  char v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_100012854(&qword_10010E510);
  uint64_t v49 = *(void *)(v48 - 8);
  __chkstk_darwin(v48);
  uint64_t v56 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_100012854(&qword_10010E820);
  uint64_t v52 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  uint64_t v57 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_100012854(&qword_10010E508) - 8;
  __chkstk_darwin(v51);
  uint64_t v50 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = a1;
  sub_100012854(&qword_10010E828);
  sub_10001E454(&qword_10010E830, &qword_10010E828);
  sub_1000C6F90();
  sub_1000C6D00();
  uint64_t v14 = sub_1000C6FF0();
  uint64_t v16 = v15;
  char v18 = v17 & 1;
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v5);
  uint64_t v19 = sub_10001E454(&qword_10010E520, &qword_10010E518);
  uint64_t v20 = v46;
  sub_1000C7080();
  sub_100039234(v14, v16, v18);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v10, v20);
  uint64_t v58 = v45;
  sub_100012854(&qword_10010DDE8);
  uint64_t v69 = v20;
  uint64_t v70 = v19;
  swift_getOpaqueTypeConformance2();
  uint64_t v21 = sub_100013128(&qword_10010DE00);
  uint64_t v22 = sub_10001E454(&qword_10010DE08, &qword_10010DE00);
  uint64_t v69 = v21;
  uint64_t v70 = v22;
  swift_getOpaqueTypeConformance2();
  uint64_t v23 = v48;
  uint64_t v24 = v56;
  sub_1000C70F0();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v24, v23);
  type metadata accessor for PeopleViewModel();
  sub_1000B5228(&qword_10010E5A8, (void (*)(uint64_t))type metadata accessor for PeopleViewModel);
  sub_1000C6960();
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v25 = (uint64_t)v53;
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  sub_1000C6970();
  swift_getKeyPath();
  sub_1000C6A80();
  swift_release();
  swift_release();
  uint64_t v26 = v69;
  uint64_t v27 = v70;
  LOBYTE(v20) = v71;
  uint64_t v28 = (uint64_t)v50;
  uint64_t v29 = (uint64_t)&v50[*(int *)(v51 + 44)];
  sub_10001A740(v25, v29, &qword_10010CB70);
  uint64_t v56 = (char *)type metadata accessor for AlertViewModelAlert(0);
  uint64_t v30 = v29 + *((int *)v56 + 5);
  *(void *)uint64_t v30 = v26;
  *(void *)(v30 + 8) = v27;
  *(unsigned char *)(v30 + 16) = v20;
  uint64_t v31 = v52;
  char v32 = v57;
  uint64_t v33 = v54;
  (*(void (**)(uint64_t, char *, uint64_t))(v52 + 16))(v28, v57, v54);
  sub_10001326C(v25, &qword_10010CB70);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v32, v33);
  sub_1000C6960();
  swift_beginAccess();
  swift_retain();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  sub_1000C6970();
  swift_getKeyPath();
  sub_1000C6A80();
  swift_release();
  swift_release();
  uint64_t v34 = v66;
  uint64_t v35 = v67;
  uint64_t v36 = v68;
  swift_getKeyPath();
  uint64_t v60 = v34;
  uint64_t v61 = v35;
  uint64_t v62 = v36;
  sub_100012854(&qword_10010E5B0);
  sub_1000C72A0();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v37 = v63;
  uint64_t v38 = v64;
  LOBYTE(v36) = v65;
  uint64_t v39 = sub_100012854(&qword_10010E4F0);
  uint64_t v40 = v55;
  uint64_t v41 = v55 + *(int *)(v39 + 36);
  sub_10001A740(v25, v41, &qword_10010CB70);
  uint64_t v42 = v41 + *((int *)v56 + 5);
  *(void *)uint64_t v42 = v37;
  *(void *)(v42 + 8) = v38;
  *(unsigned char *)(v42 + 16) = v36;
  sub_10001A740(v28, v40, &qword_10010E508);
  sub_10001326C(v25, &qword_10010CB70);
  return sub_10001326C(v28, &qword_10010E508);
}

uint64_t sub_1000ABCB0@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  Swift::String v72 = a2;
  uint64_t v73 = sub_100012854(&qword_10010E838);
  uint64_t v71 = *(void *)(v73 - 8);
  uint64_t v3 = __chkstk_darwin(v73);
  Swift::String v80 = (char *)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  Swift::String v79 = (char *)&v68 - v5;
  uint64_t v6 = sub_100012854(&qword_10010E840);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v87 = (uint64_t)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v77 = (uint64_t)&v68 - v9;
  uint64_t v10 = sub_100012854(&qword_10010E608);
  uint64_t v84 = *(void *)(v10 - 8);
  uint64_t v85 = v10;
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v86 = (char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v70 = (char *)&v68 - v14;
  __chkstk_darwin(v13);
  Swift::String v82 = (char *)&v68 - v15;
  uint64_t v16 = type metadata accessor for PeopleView();
  __chkstk_darwin(v16 - 8);
  char v18 = (char *)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100012854(&qword_10010E848);
  uint64_t v20 = __chkstk_darwin(v19 - 8);
  uint64_t v83 = (uint64_t)&v68 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v81 = (uint64_t)&v68 - v22;
  uint64_t v23 = sub_100012854(&qword_10010E850);
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = __chkstk_darwin(v23);
  Swift::String v75 = (char *)&v68 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v68 - v28;
  __chkstk_darwin(v27);
  uint64_t v31 = (char *)&v68 - v30;
  uint64_t v88 = a1;
  sub_1000AD74C((uint64_t)&v89);
  sub_100012854(&qword_10010E858);
  sub_100012854(&qword_10010E860);
  sub_1000B4918();
  sub_10001E454(&qword_10010E878, &qword_10010E860);
  sub_1000C7300();
  uint64_t v76 = v24;
  char v32 = *(void (**)(char *, char *, uint64_t))(v24 + 32);
  Swift::String v74 = v31;
  uint64_t v78 = v23;
  v32(v31, v29, v23);
  type metadata accessor for PeopleViewModel();
  sub_1000B5228(&qword_10010E5A8, (void (*)(uint64_t))type metadata accessor for PeopleViewModel);
  sub_1000C6960();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v34 = v89;
  unint64_t v33 = v90;
  swift_bridgeObjectRelease();
  if ((v33 & 0x2000000000000000) != 0) {
    uint64_t v35 = HIBYTE(v33) & 0xF;
  }
  else {
    uint64_t v35 = v34 & 0xFFFFFFFFFFFFLL;
  }
  sub_1000B4804(a1, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for PeopleView);
  if (v35)
  {
    uint64_t v36 = sub_1000B486C((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for PeopleView);
LABEL_10:
    __chkstk_darwin(v36);
    *(&v68 - 2) = a1;
    sub_100012854(&qword_10010E880);
    sub_10001E454(&qword_10010E888, &qword_10010E880);
    uint64_t v40 = v81;
    sub_1000C7310();
    uint64_t v41 = sub_100012854(&qword_10010E890);
    uint64_t v42 = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v40, 0, 1, v41);
    goto LABEL_11;
  }
  sub_1000C6960();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v38 = v89;
  unint64_t v37 = v90;
  swift_bridgeObjectRelease();
  if ((v37 & 0x2000000000000000) != 0) {
    uint64_t v39 = HIBYTE(v37) & 0xF;
  }
  else {
    uint64_t v39 = v38 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v36 = sub_1000B486C((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for PeopleView);
  if (v39) {
    goto LABEL_10;
  }
  uint64_t v67 = sub_100012854(&qword_10010E890);
  uint64_t v42 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 56))(v81, 1, 1, v67);
LABEL_11:
  uint64_t v43 = v77;
  __chkstk_darwin(v42);
  *(&v68 - 2) = a1;
  sub_100096744();
  uint64_t v44 = v70;
  sub_1000C7310();
  (*(void (**)(char *, char *, uint64_t))(v84 + 32))(v82, v44, v85);
  sub_1000C6960();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  if (v89 == 1)
  {
    uint64_t v89 = sub_1000A8B64();
    unint64_t v90 = v45;
    sub_1000363CC();
    uint64_t v89 = sub_1000C7000();
    unint64_t v90 = v46;
    char v91 = v47 & 1;
    uint64_t v92 = v48;
    __chkstk_darwin(v89);
    *(&v68 - 2) = a1;
    sub_100012854(&qword_10010BF40);
    sub_10001E454(&qword_10010BF48, &qword_10010BF40);
    sub_1000C7320();
    uint64_t v49 = sub_100012854(&qword_10010E5F0);
    uint64_t v50 = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v43, 0, 1, v49);
  }
  else
  {
    uint64_t v51 = sub_100012854(&qword_10010E5F0);
    uint64_t v50 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v43, 1, 1, v51);
  }
  __chkstk_darwin(v50);
  *(&v68 - 2) = a1;
  sub_100012854(&qword_10010E898);
  sub_10001E454(&qword_10010E8A0, &qword_10010E898);
  uint64_t v52 = v79;
  sub_1000C7310();
  NSBundle v53 = *(void (**)(char *, char *, uint64_t))(v76 + 16);
  uint64_t v54 = v75;
  uint64_t v55 = v78;
  v53(v75, v74, v78);
  sub_10001A740(v81, v83, &qword_10010E848);
  uint64_t v69 = *(void (**)(char *, char *, uint64_t))(v84 + 16);
  v69(v86, v82, v85);
  sub_10001A740(v43, v87, &qword_10010E840);
  uint64_t v56 = v71;
  uint64_t v70 = *(char **)(v71 + 16);
  uint64_t v57 = v73;
  ((void (*)(char *, char *, uint64_t))v70)(v80, v52, v73);
  uint64_t v58 = v72;
  v53(v72, v54, v55);
  uint64_t v59 = (int *)sub_100012854(&qword_10010E8A8);
  sub_10001A740(v83, (uint64_t)&v58[v59[12]], &qword_10010E848);
  uint64_t v60 = v85;
  v69(&v58[v59[16]], v86, v85);
  sub_10001A740(v87, (uint64_t)&v58[v59[20]], &qword_10010E840);
  uint64_t v61 = v80;
  ((void (*)(char *, char *, uint64_t))v70)(&v58[v59[24]], v80, v57);
  uint64_t v62 = *(void (**)(char *, uint64_t))(v56 + 8);
  v62(v79, v57);
  sub_10001326C(v77, &qword_10010E840);
  uint64_t v63 = *(void (**)(char *, uint64_t))(v84 + 8);
  v63(v82, v60);
  sub_10001326C(v81, &qword_10010E848);
  uint64_t v64 = *(void (**)(char *, uint64_t))(v76 + 8);
  uint64_t v65 = v78;
  v64(v74, v78);
  v62(v61, v57);
  sub_10001326C(v87, &qword_10010E840);
  v63(v86, v60);
  sub_10001326C(v83, &qword_10010E848);
  return ((uint64_t (*)(char *, uint64_t))v64)(v75, v65);
}

uint64_t sub_1000AC8FC@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v59 = a2;
  uint64_t v3 = sub_100012854(&qword_10010E760);
  uint64_t v48 = *(void *)(v3 - 8);
  uint64_t v49 = v3;
  __chkstk_darwin(v3);
  char v47 = (char *)v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100012854(&qword_10010E918);
  uint64_t v56 = *(void *)(v5 - 8);
  uint64_t v57 = v5;
  __chkstk_darwin(v5);
  unint64_t v46 = (char *)v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100012854(&qword_10010E920);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v58 = (uint64_t)v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v51 = (char *)v45 - v10;
  uint64_t v11 = type metadata accessor for PeopleView();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v11 - 8);
  uint64_t v14 = (char *)v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100012854(&qword_10010E928);
  uint64_t v54 = *(void *)(v15 - 8);
  uint64_t v55 = v15;
  uint64_t v16 = __chkstk_darwin(v15);
  NSBundle v53 = (char *)v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)v45 - v18;
  uint64_t v50 = type metadata accessor for PeopleViewModel();
  sub_1000B5228(&qword_10010E5A8, (void (*)(uint64_t))type metadata accessor for PeopleViewModel);
  sub_1000C6960();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  sub_1000B4804(a1, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for PeopleView);
  uint64_t v20 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v21 = (v20 + 16) & ~v20;
  v45[0] = v20 | 7;
  v45[1] = v21 + v13;
  uint64_t v22 = swift_allocObject();
  sub_1000B51C0((uint64_t)v14, v22 + v21, (uint64_t (*)(void))type metadata accessor for PeopleView);
  sub_100012854(&qword_10010B998);
  sub_100012854(&qword_10010E930);
  sub_10001E454(&qword_10010E790, &qword_10010B998);
  sub_10001E454(&qword_10010E938, &qword_10010E930);
  sub_1000B5228(&qword_10010E7B0, (void (*)(uint64_t))type metadata accessor for PersonRowViewModel);
  uint64_t v52 = v19;
  sub_1000C72F0();
  sub_1000C6960();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  if (v62 == 1)
  {
    sub_1000B4804(a1, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for PeopleView);
    uint64_t v23 = swift_allocObject();
    sub_1000B51C0((uint64_t)v14, v23 + v21, (uint64_t (*)(void))type metadata accessor for PeopleView);
    sub_1000B4060();
    uint64_t v24 = v47;
    sub_1000C7230();
    uint64_t v25 = *(void *)(a1 + 72);
    char v60 = *(unsigned char *)(a1 + 64);
    uint64_t v61 = v25;
    sub_100012854(&qword_10010D7A8);
    sub_1000C7210();
    sub_10001E454(&qword_10010E7D8, &qword_10010E760);
    sub_10008DBB4();
    uint64_t v26 = v46;
    uint64_t v27 = v49;
    sub_1000C70D0();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v24, v27);
    uint64_t v29 = v56;
    uint64_t v28 = v57;
    uint64_t v30 = v51;
    (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v51, v26, v57);
    uint64_t v31 = 0;
    uint64_t v32 = v28;
    uint64_t v33 = (uint64_t)v30;
    uint64_t v34 = v29;
  }
  else
  {
    uint64_t v31 = 1;
    uint64_t v34 = v56;
    uint64_t v32 = v57;
    uint64_t v33 = (uint64_t)v51;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 56))(v33, v31, 1, v32);
  uint64_t v36 = v53;
  uint64_t v35 = v54;
  unint64_t v37 = *(void (**)(char *, char *, uint64_t))(v54 + 16);
  uint64_t v38 = v52;
  uint64_t v39 = v55;
  v37(v53, v52, v55);
  uint64_t v40 = v58;
  sub_10001A740(v33, v58, &qword_10010E920);
  uint64_t v41 = v59;
  v37(v59, v36, v39);
  uint64_t v42 = sub_100012854(&qword_10010E940);
  sub_10001A740(v40, (uint64_t)&v41[*(int *)(v42 + 48)], &qword_10010E920);
  sub_10001326C(v33, &qword_10010E920);
  uint64_t v43 = *(void (**)(char *, uint64_t))(v35 + 8);
  v43(v38, v39);
  sub_10001326C(v40, &qword_10010E920);
  return ((uint64_t (*)(char *, uint64_t))v43)(v36, v39);
}

uint64_t sub_1000AD0E8(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PeopleView();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4 - 8);
  uint64_t v7 = (int *)type metadata accessor for PersonInfoView();
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (uint64_t *)&v22[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  uint64_t v12 = &v22[-v11];
  uint64_t v13 = *a1;
  uint64_t v23 = v13;
  uint64_t v24 = a2;
  sub_1000B4804(a2, (uint64_t)&v22[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], (uint64_t (*)(void))type metadata accessor for PeopleView);
  unint64_t v14 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v15 = swift_allocObject();
  sub_1000B51C0((uint64_t)&v22[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], v15 + v14, (uint64_t (*)(void))type metadata accessor for PeopleView);
  *(void *)(v15 + ((v6 + v14 + 7) & 0xFFFFFFFFFFFFFFF8)) = v13;
  *uint64_t v10 = swift_getKeyPath();
  sub_100012854(&qword_10010C7A8);
  swift_storeEnumTagMultiPayload();
  uint64_t v16 = (char *)v10 + v7[5];
  *(void *)uint64_t v16 = sub_1000B5134;
  *((void *)v16 + 1) = v15;
  v16[16] = 0;
  uint64_t v17 = (char *)v10 + v7[6];
  char v25 = 3;
  swift_retain();
  sub_100012854((uint64_t *)&unk_10010BFB0);
  sub_1000C71E0();
  uint64_t v18 = v27;
  *uint64_t v17 = v26;
  *((void *)v17 + 1) = v18;
  uint64_t v19 = (uint64_t *)((char *)v10 + v7[7]);
  uint64_t *v19 = swift_getKeyPath();
  sub_100012854(&qword_10010C7B0);
  swift_storeEnumTagMultiPayload();
  uint64_t v20 = (uint64_t *)((char *)v10 + v7[8]);
  *uint64_t v20 = swift_getKeyPath();
  sub_100012854(&qword_10010B7B0);
  swift_storeEnumTagMultiPayload();
  sub_1000B51C0((uint64_t)v10, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for PersonInfoView);
  sub_1000B46D8();
  sub_1000B5228(&qword_10010E948, (void (*)(uint64_t))type metadata accessor for PersonInfoView);
  return sub_1000C6A40();
}

uint64_t sub_1000AD410(uint64_t a1, uint64_t a2)
{
  type metadata accessor for PeopleViewModel();
  sub_1000B5228(&qword_10010E5A8, (void (*)(uint64_t))type metadata accessor for PeopleViewModel);
  uint64_t v3 = sub_1000C6960();
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 16);
  swift_retain();
  swift_release();
  swift_retain();
  uint64_t v5 = sub_1000C6960();
  type metadata accessor for PersonInfoViewModel();
  swift_allocObject();
  uint64_t v6 = sub_1000767D0(v4, a2, v5);
  swift_release();
  swift_release();
  swift_release();
  return v6;
}

uint64_t sub_1000AD54C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000C67E0();
  swift_release();
  swift_release();
  type metadata accessor for PeopleViewModel();
  sub_1000B5228(&qword_10010E5A8, (void (*)(uint64_t))type metadata accessor for PeopleViewModel);
  sub_1000C6960();
  sub_100012854((uint64_t *)&unk_10010BFB0);
  sub_1000C71E0();
  uint64_t result = sub_1000C6A60();
  *(void *)a2 = a1;
  *(unsigned char *)(a2 + 8) = v6;
  *(void *)(a2 + 16) = v7;
  *(void *)(a2 + 24) = result;
  *(void *)(a2 + 32) = v5;
  return result;
}

uint64_t sub_1000AD690()
{
  return sub_1000C7200();
}

__n128 sub_1000AD6E8@<Q0>(uint64_t a1@<X8>)
{
  sub_100095698(0, (uint64_t)v7);
  long long v2 = v7[9];
  *(_OWORD *)(a1 + 128) = v7[8];
  *(_OWORD *)(a1 + 144) = v2;
  *(_OWORD *)(a1 + 160) = v7[10];
  long long v3 = v7[5];
  *(_OWORD *)(a1 + 64) = v7[4];
  *(_OWORD *)(a1 + 80) = v3;
  long long v4 = v7[7];
  *(_OWORD *)(a1 + 96) = v7[6];
  *(_OWORD *)(a1 + 112) = v4;
  long long v5 = v7[1];
  *(_OWORD *)a1 = v7[0];
  *(_OWORD *)(a1 + 16) = v5;
  __n128 result = (__n128)v7[3];
  *(_OWORD *)(a1 + 32) = v7[2];
  *(__n128 *)(a1 + 48) = result;
  return result;
}

double sub_1000AD74C@<D0>(uint64_t a1@<X8>)
{
  type metadata accessor for PeopleViewModel();
  sub_1000B5228(&qword_10010E5A8, (void (*)(uint64_t))type metadata accessor for PeopleViewModel);
  sub_1000C6960();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  if (v3 == 1)
  {
    sub_1000C6960();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1000C67E0();
    swift_release();
    swift_release();
    swift_release();
    sub_1000C7190();
    sub_1000C6960();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1000C67E0();
    swift_release();
    swift_release();
    swift_release();
    sub_1000C6960();
    swift_beginAccess();
    swift_retain();
    swift_release();
    sub_100069984();
    swift_release();
    sub_1000C6960();
    swift_beginAccess();
    swift_retain();
    swift_release();
    sub_100069EBC();
    swift_release();
  }
  sub_1000B4994();
  sub_1000C6D50();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = v5;
  *(void *)(a1 + 48) = v6;
  *(unsigned char *)(a1 + 56) = v7;
  return result;
}

uint64_t sub_1000ADA80@<X0>(uint64_t a1@<X8>)
{
  uint64_t v26 = a1;
  uint64_t v1 = sub_100012854(&qword_10010E908);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  long long v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v2);
  char v7 = (char *)&v26 - v6;
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = (char *)&v26 - v9;
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v26 - v11;
  type metadata accessor for PeopleViewModel();
  sub_1000B5228(&qword_10010E5A8, (void (*)(uint64_t))type metadata accessor for PeopleViewModel);
  sub_1000C6960();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v14 = v27;
  unint64_t v13 = v28;
  swift_bridgeObjectRelease();
  uint64_t v15 = HIBYTE(v13) & 0xF;
  if ((v13 & 0x2000000000000000) == 0) {
    uint64_t v15 = v14 & 0xFFFFFFFFFFFFLL;
  }
  if (v15)
  {
    sub_1000C6960();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1000C67E0();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v29 = v27;
    unint64_t v30 = v28;
    sub_1000C6970();
    swift_getKeyPath();
    sub_1000C6A80();
    swift_release();
    swift_release();
    sub_1000363CC();
    sub_1000C7260();
    uint64_t v16 = sub_100012854(&qword_10010E728);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v12, 0, 1, v16);
  }
  else
  {
    uint64_t v17 = sub_100012854(&qword_10010E728);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v12, 1, 1, v17);
  }
  sub_1000C6960();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v19 = v27;
  unint64_t v18 = v28;
  swift_bridgeObjectRelease();
  uint64_t v20 = HIBYTE(v18) & 0xF;
  if ((v18 & 0x2000000000000000) == 0) {
    uint64_t v20 = v19 & 0xFFFFFFFFFFFFLL;
  }
  if (v20)
  {
    sub_1000C6960();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1000C67E0();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v29 = v27;
    unint64_t v30 = v28;
    sub_1000C6970();
    swift_getKeyPath();
    sub_1000C6A80();
    swift_release();
    swift_release();
    sub_1000363CC();
    sub_1000C7260();
    uint64_t v21 = sub_100012854(&qword_10010E728);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v10, 0, 1, v21);
  }
  else
  {
    uint64_t v22 = sub_100012854(&qword_10010E728);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v10, 1, 1, v22);
  }
  sub_10001A740((uint64_t)v12, (uint64_t)v7, &qword_10010E908);
  sub_10001A740((uint64_t)v10, (uint64_t)v4, &qword_10010E908);
  uint64_t v23 = v26;
  sub_10001A740((uint64_t)v7, v26, &qword_10010E908);
  uint64_t v24 = sub_100012854(&qword_10010E910);
  sub_10001A740((uint64_t)v4, v23 + *(int *)(v24 + 48), &qword_10010E908);
  sub_10001326C((uint64_t)v10, &qword_10010E908);
  sub_10001326C((uint64_t)v12, &qword_10010E908);
  sub_10001326C((uint64_t)v4, &qword_10010E908);
  return sub_10001326C((uint64_t)v7, &qword_10010E908);
}

uint64_t sub_1000AE018@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for GlobalPermissionViewModel();
  sub_1000B5228(&qword_10010DB40, (void (*)(uint64_t))type metadata accessor for GlobalPermissionViewModel);
  sub_1000C6960();
  uint64_t result = sub_1000C6A60();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1000AE0BC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PeopleView();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2 - 8);
  uint64_t v5 = sub_100012854(&qword_10010BE10);
  __chkstk_darwin(v5 - 8);
  char v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000C6930();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  sub_1000B4804(a1, (uint64_t)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for PeopleView);
  unint64_t v9 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v10 = swift_allocObject();
  sub_1000B51C0((uint64_t)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + v9, (uint64_t (*)(void))type metadata accessor for PeopleView);
  sub_100012854(&qword_10010BF50);
  sub_10001E454(&qword_10010BF58, &qword_10010BF50);
  return sub_1000C7220();
}

uint64_t sub_1000AE2B8()
{
  if (!swift_unknownObjectWeakLoadStrong()) {
    return swift_release();
  }
  sub_10000EE50();
  swift_release();
  return swift_unknownObjectRelease();
}

double sub_1000AE390@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = sub_1000AA708(a1).n128_u64[0];
  return result;
}

uint64_t sub_1000AE3AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v89 = a2;
  uint64_t v79 = sub_100012854(&qword_10010BF40);
  uint64_t v78 = *(void *)(v79 - 8);
  __chkstk_darwin(v79);
  uint64_t v87 = (char *)&v73 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100012854(&qword_10010E6A8);
  uint64_t v92 = *(void *)(v4 - 8);
  uint64_t v93 = v4;
  __chkstk_darwin(v4);
  uint64_t v77 = (char *)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100012854(&qword_10010E8B0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v88 = (uint64_t)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  Swift::String v94 = (char *)&v73 - v9;
  uint64_t v81 = sub_100012854(&qword_10010E8B8);
  uint64_t v80 = *(void *)(v81 - 8);
  __chkstk_darwin(v81);
  uint64_t v76 = (char *)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v90 = (uint64_t *)sub_100012854(&qword_10010E8C0);
  uint64_t v82 = *(v90 - 1);
  __chkstk_darwin(v90);
  Swift::String v75 = (char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100012854(&qword_10010E8C8);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v86 = (uint64_t)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v97 = (uint64_t)&v73 - v15;
  uint64_t v16 = type metadata accessor for PeopleView();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void *)(v17 + 64);
  __chkstk_darwin(v16 - 8);
  uint64_t v19 = sub_100012854(&qword_10010BE10);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)&v73 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100012854(&qword_10010E8D0);
  uint64_t v23 = __chkstk_darwin(v22 - 8);
  uint64_t v85 = (uint64_t)&v73 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v73 - v25;
  uint64_t v27 = type metadata accessor for PeopleViewModel();
  uint64_t v95 = sub_1000B5228(&qword_10010E5A8, (void (*)(uint64_t))type metadata accessor for PeopleViewModel);
  uint64_t v96 = v27;
  sub_1000C6960();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  char v91 = v26;
  uint64_t v83 = v17;
  uint64_t v84 = v18;
  if (v100 == 1)
  {
    uint64_t v28 = sub_1000C6930();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v21, 1, 1, v28);
    sub_1000B4804(a1, (uint64_t)&v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for PeopleView);
    unint64_t v29 = (*(unsigned __int8 *)(v17 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    uint64_t v30 = swift_allocObject() + v29;
    uint64_t v26 = v91;
    uint64_t v31 = (char *)&v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_1000B51C0((uint64_t)v31, v30, (uint64_t (*)(void))type metadata accessor for PeopleView);
    sub_100012854(&qword_10010E8E0);
    sub_1000B3AD8(&qword_10010E8E8, &qword_10010E8E0, &qword_10010BF58, &qword_10010BF50);
    uint64_t v32 = v21;
    sub_1000C7220();
    uint64_t v33 = 0;
  }
  else
  {
    uint64_t v31 = (char *)&v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v32 = v21;
    uint64_t v33 = 1;
  }
  uint64_t v34 = v80;
  uint64_t v35 = 1;
  uint64_t v36 = v81;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v80 + 56))(v26, v33, 1, v81);
  sub_1000C6960();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v37 = (uint64_t)v31;
  uint64_t v38 = v90;
  uint64_t v39 = v82;
  if (v100 == 1)
  {
    uint64_t v40 = sub_1000C6930();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v32, 1, 1, v40);
    sub_1000B4804(a1, v37, (uint64_t (*)(void))type metadata accessor for PeopleView);
    unint64_t v41 = (*(unsigned __int8 *)(v83 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80);
    uint64_t v42 = swift_allocObject();
    sub_1000B51C0(v37, v42 + v41, (uint64_t (*)(void))type metadata accessor for PeopleView);
    sub_100012854(&qword_10010E8E0);
    sub_1000B3AD8(&qword_10010E8E8, &qword_10010E8E0, &qword_10010BF58, &qword_10010BF50);
    uint64_t v74 = v37;
    uint64_t v43 = v32;
    uint64_t v44 = v76;
    sub_1000C7220();
    uint64_t v45 = *(void *)(a1 + 88);
    char v98 = *(unsigned char *)(a1 + 80);
    uint64_t v99 = v45;
    sub_100012854(&qword_10010D7A8);
    sub_1000C7210();
    sub_10001E454(&qword_10010E8F0, &qword_10010E8B8);
    sub_10008DBB4();
    unint64_t v46 = v75;
    sub_1000C70D0();
    uint64_t v38 = v90;
    swift_release();
    swift_release();
    char v47 = v44;
    uint64_t v32 = v43;
    uint64_t v37 = v74;
    (*(void (**)(char *, uint64_t))(v34 + 8))(v47, v36);
    (*(void (**)(uint64_t, char *, uint64_t *))(v39 + 32))(v97, v46, v38);
    uint64_t v35 = 0;
  }
  uint64_t v48 = 1;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t *))(v39 + 56))(v97, v35, 1, v38);
  sub_1000C6960();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  swift_release();
  swift_release();
  if (v100 == 1)
  {
    sub_1000C6910();
    uint64_t v49 = sub_1000C6930();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v32, 0, 1, v49);
    sub_1000B4804(a1, v37, (uint64_t (*)(void))type metadata accessor for PeopleView);
    unint64_t v50 = (*(unsigned __int8 *)(v83 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80);
    uint64_t v51 = swift_allocObject();
    sub_1000B51C0(v37, v51 + v50, (uint64_t (*)(void))type metadata accessor for PeopleView);
    sub_100012854(&qword_10010BF50);
    sub_10001E454(&qword_10010BF58, &qword_10010BF50);
    sub_1000C7220();
    sub_1000C6D00();
    uint64_t v95 = sub_1000C6FF0();
    uint64_t v96 = v52;
    uint64_t v54 = v53;
    uint64_t v55 = *(void *)(a1 + 56);
    char v57 = v56 & 1;
    char v98 = *(unsigned char *)(a1 + 48);
    uint64_t v99 = v55;
    sub_100012854(&qword_10010D7A8);
    uint64_t v58 = sub_1000C7210();
    unint64_t v90 = &v73;
    LODWORD(v84) = v101;
    uint64_t v59 = __chkstk_darwin(v58);
    __chkstk_darwin(v59);
    sub_100012854(&qword_10010E2B0);
    sub_10001E454(&qword_10010BF48, &qword_10010BF40);
    sub_10001E454(&qword_10010E2A8, &qword_10010E2B0);
    uint64_t v60 = v79;
    uint64_t v61 = v77;
    uint64_t v62 = v95;
    uint64_t v63 = v87;
    sub_1000C70B0();
    swift_release();
    swift_release();
    sub_100039234(v62, v54, v57);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v78 + 8))(v63, v60);
    (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v94, v61, v93);
    uint64_t v48 = 0;
  }
  uint64_t v64 = (uint64_t)v94;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v92 + 56))(v94, v48, 1, v93);
  uint64_t v65 = (uint64_t)v91;
  uint64_t v66 = v85;
  sub_10001A740((uint64_t)v91, v85, &qword_10010E8D0);
  uint64_t v67 = v97;
  uint64_t v68 = v86;
  sub_10001A740(v97, v86, &qword_10010E8C8);
  uint64_t v69 = v88;
  sub_10001A740(v64, v88, &qword_10010E8B0);
  uint64_t v70 = v89;
  sub_10001A740(v66, v89, &qword_10010E8D0);
  uint64_t v71 = sub_100012854(&qword_10010E8D8);
  sub_10001A740(v68, v70 + *(int *)(v71 + 48), &qword_10010E8C8);
  sub_10001A740(v69, v70 + *(int *)(v71 + 64), &qword_10010E8B0);
  sub_10001326C(v64, &qword_10010E8B0);
  sub_10001326C(v67, &qword_10010E8C8);
  sub_10001326C(v65, &qword_10010E8D0);
  sub_10001326C(v69, &qword_10010E8B0);
  sub_10001326C(v68, &qword_10010E8C8);
  return sub_10001326C(v66, &qword_10010E8D0);
}

uint64_t sub_1000AF20C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_100012854(&qword_10010B770);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for PeopleViewModel();
  sub_1000B5228(&qword_10010E5A8, (void (*)(uint64_t))type metadata accessor for PeopleViewModel);
  uint64_t v7 = sub_1000C6960();
  swift_beginAccess();
  uint64_t v8 = *(void *)(v7 + 16);
  swift_retain();
  sub_1000C75E0();
  uint64_t v9 = sub_1000C7600();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v6, 0, 1, v9);
  sub_1000C75D0();
  swift_retain();
  uint64_t v10 = sub_1000C75C0();
  uint64_t v11 = (void *)swift_allocObject();
  void v11[2] = v10;
  v11[3] = &protocol witness table for MainActor;
  v11[4] = v8;
  sub_1000BD2A0((uint64_t)v6, a3, (uint64_t)v11);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1000AF3D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000C6CF0();
  sub_1000AF69C((uint64_t)&v12);
  uint64_t v3 = v12;
  char v4 = v13;
  uint64_t v5 = v14;
  uint64_t v6 = v15;
  char v7 = v16;
  uint64_t v8 = v17;
  uint64_t v9 = v18;
  char v10 = v19;
  uint64_t result = sub_1000C6D10();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  *(void *)(a1 + 24) = v3;
  *(unsigned char *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = v6;
  *(unsigned char *)(a1 + 56) = v7;
  *(void *)(a1 + 64) = v8;
  *(void *)(a1 + 72) = v9;
  *(unsigned char *)(a1 + 80) = v10;
  *(void *)(a1 + 88) = result;
  *(void *)(a1 + 96) = sub_1000AF498;
  *(void *)(a1 + 104) = 0;
  return result;
}

uint64_t sub_1000AF498()
{
  return sub_1000C6A90();
}

uint64_t sub_1000AF4C0()
{
  return sub_1000C7200();
}

uint64_t sub_1000AF518@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000C6CF0();
  sub_1000AF69C((uint64_t)&v12);
  uint64_t v3 = v12;
  char v4 = v13;
  uint64_t v5 = v14;
  uint64_t v6 = v15;
  char v7 = v16;
  uint64_t v8 = v17;
  uint64_t v9 = v18;
  char v10 = v19;
  uint64_t result = sub_1000C6D10();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  *(void *)(a1 + 24) = v3;
  *(unsigned char *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = v6;
  *(unsigned char *)(a1 + 56) = v7;
  *(void *)(a1 + 64) = v8;
  *(void *)(a1 + 72) = v9;
  *(unsigned char *)(a1 + 80) = v10;
  *(void *)(a1 + 88) = result;
  *(void *)(a1 + 96) = sub_1000B60F4;
  *(void *)(a1 + 104) = 0;
  return result;
}

__n128 sub_1000AF5E0@<Q0>(uint64_t a1@<X8>)
{
  sub_100095698(1, (uint64_t)v7);
  long long v2 = v7[9];
  *(_OWORD *)(a1 + 128) = v7[8];
  *(_OWORD *)(a1 + 144) = v2;
  *(_OWORD *)(a1 + 160) = v7[10];
  long long v3 = v7[5];
  *(_OWORD *)(a1 + 64) = v7[4];
  *(_OWORD *)(a1 + 80) = v3;
  long long v4 = v7[7];
  *(_OWORD *)(a1 + 96) = v7[6];
  *(_OWORD *)(a1 + 112) = v4;
  long long v5 = v7[1];
  *(_OWORD *)a1 = v7[0];
  *(_OWORD *)(a1 + 16) = v5;
  __n128 result = (__n128)v7[3];
  *(_OWORD *)(a1 + 32) = v7[2];
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t sub_1000AF644()
{
  return sub_1000C7200();
}

uint64_t sub_1000AF69C@<X0>(uint64_t a1@<X8>)
{
  sub_1000C6D00();
  uint64_t v2 = sub_1000C6FF0();
  uint64_t v4 = v3;
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
  char v6 = v5 & 1;
  *(void *)(a1 + 16) = v2;
  *(void *)(a1 + 24) = v3;
  *(unsigned char *)(a1 + 32) = v5 & 1;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = 0;
  *(unsigned char *)(a1 + 56) = 1;
  sub_100039224(v2, v3, v5 & 1);
  swift_bridgeObjectRetain();
  sub_100039234(v2, v4, v6);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000AF75C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PeopleView();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2 - 8);
  uint64_t v5 = sub_100012854(&qword_10010BE10);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000C6910();
  uint64_t v8 = sub_1000C6930();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 0, 1, v8);
  sub_1000B4804(a1, (uint64_t)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for PeopleView);
  unint64_t v9 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v10 = swift_allocObject();
  sub_1000B51C0((uint64_t)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + v9, (uint64_t (*)(void))type metadata accessor for PeopleView);
  return sub_1000C7220();
}

uint64_t sub_1000AF930(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_100012854(&qword_10010B770);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for PeopleViewModel();
  sub_1000B5228(&qword_10010E5A8, (void (*)(uint64_t))type metadata accessor for PeopleViewModel);
  uint64_t v7 = sub_1000C6960();
  swift_getKeyPath();
  swift_getKeyPath();
  v12[15] = 1;
  swift_retain();
  sub_1000C67F0();
  uint64_t v8 = sub_1000C7600();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v6, 1, 1, v8);
  sub_1000C75D0();
  swift_retain();
  uint64_t v9 = sub_1000C75C0();
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = v9;
  v10[3] = &protocol witness table for MainActor;
  void v10[4] = v7;
  sub_1000BD118((uint64_t)v6, a3, (uint64_t)v10);
  swift_release();
  return swift_release();
}

uint64_t sub_1000AFB08@<X0>(uint64_t a1@<X8>)
{
  sub_1000C6D00();
  uint64_t result = sub_1000C6FF0();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_1000AFB84@<X0>(uint64_t a1@<X8>)
{
  sub_1000AA798();
  sub_1000363CC();
  uint64_t result = sub_1000C7000();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_1000AFBE0(uint64_t a1)
{
  uint64_t v2 = sub_1000C6D80();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = sub_100012854(&qword_10010DE00);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1000C6D70();
  uint64_t v9 = a1;
  sub_100012854(&qword_10010DE30);
  sub_10001E454(&qword_10010DE38, &qword_10010DE30);
  sub_1000C6980();
  sub_10001E454(&qword_10010DE08, &qword_10010DE00);
  sub_1000C6DB0();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1000AFDA8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PeopleView();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2 - 8);
  sub_1000B4804(a1, (uint64_t)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for PeopleView);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = swift_allocObject();
  sub_1000B51C0((uint64_t)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v6 + v5, (uint64_t (*)(void))type metadata accessor for PeopleView);
  sub_100012854(&qword_10010DE40);
  sub_10009600C();
  return sub_1000C7230();
}

uint64_t sub_1000AFEFC()
{
  type metadata accessor for PeopleViewModel();
  sub_1000B5228(&qword_10010E5A8, (void (*)(uint64_t))type metadata accessor for PeopleViewModel);
  sub_1000C6960();
  swift_beginAccess();
  if (!swift_unknownObjectWeakLoadStrong()) {
    return swift_release();
  }
  sub_10000AB98();
  char v0 = (void *)sub_10000A1F4();
  if (v0)
  {
    [v0 _dismissViewControllerWithError:0];
    swift_release();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_release();
  }
  return swift_unknownObjectRelease();
}

uint64_t sub_1000B0008@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_100012854(&qword_10010DE78);
  uint64_t v3 = v2 - 8;
  __chkstk_darwin(v2);
  unint64_t v5 = (uint64_t *)((char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_1000C71C0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000C71A0();
  uint64_t v11 = self;
  id v12 = [v11 secondaryLabelColor];
  uint64_t v13 = sub_1000C7180();
  id v14 = [v11 quaternaryLabelColor];
  uint64_t v15 = sub_1000C7180();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for Image.Scale.large(_:), v6);
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))((char *)v5 + *(int *)(v3 + 36), v9, v6);
  *unint64_t v5 = KeyPath;
  uint64_t v17 = sub_100012854(&qword_10010DE40);
  sub_10001A740((uint64_t)v5, (uint64_t)a1 + *(int *)(v17 + 36), &qword_10010DE78);
  *a1 = v10;
  a1[1] = v13;
  a1[2] = v15;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10001326C((uint64_t)v5, &qword_10010DE78);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1000B0260()
{
  return sub_1000C6C10();
}

uint64_t sub_1000B0284(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000B4634(a1, a2, a3, a4, (uint64_t *)&unk_10010D3A0, (uint64_t (*)(char *))&EnvironmentValues.horizontalSizeClass.setter);
}

uint64_t sub_1000B02B8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *(void *)a1 = *a2;
    a1 = v20 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *a2;
    uint64_t v8 = a2[1];
    char v9 = *((unsigned char *)a2 + 16);
    sub_100047E74();
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v8;
    *(unsigned char *)(a1 + 16) = v9;
    uint64_t v10 = a2[3];
    uint64_t v11 = a2[4];
    char v12 = *((unsigned char *)a2 + 40);
    sub_100047E74();
    *(void *)(a1 + 24) = v10;
    *(void *)(a1 + 32) = v11;
    *(unsigned char *)(a1 + 40) = v12;
    *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
    *(void *)(a1 + 56) = a2[7];
    *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
    *(void *)(a1 + 72) = a2[9];
    *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
    *(void *)(a1 + 88) = a2[11];
    long long v13 = *((_OWORD *)a2 + 7);
    *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
    *(_OWORD *)(a1 + 112) = v13;
    *(void *)(a1 + 128) = a2[16];
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 17);
    uint64_t v14 = *(int *)(a3 + 44);
    uint64_t v15 = (void *)(a1 + v14);
    char v16 = (uint64_t *)((char *)a2 + v14);
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 19);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_100012854(&qword_10010C7B0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_1000C6DC0();
      uint64_t v18 = *(void *)(v17 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      {
        uint64_t v19 = sub_100012854((uint64_t *)&unk_10010D3A0);
        memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v18 + 16))(v15, v16, v17);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      }
    }
    else
    {
      void *v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1000B0534(uint64_t a1, uint64_t a2)
{
  sub_10004809C();
  sub_10004809C();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 44);
  sub_100012854(&qword_10010C7B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_1000C6DC0();
    uint64_t v8 = *(void *)(v5 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
    if (!result)
    {
      uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
      return v7(v4, v5);
    }
  }
  else
  {
    return swift_release();
  }
  return result;
}

uint64_t sub_1000B0690(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  char v8 = *((unsigned char *)a2 + 16);
  sub_100047E74();
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = v8;
  uint64_t v9 = a2[3];
  uint64_t v10 = a2[4];
  char v11 = *((unsigned char *)a2 + 40);
  sub_100047E74();
  *(void *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v10;
  *(unsigned char *)(a1 + 40) = v11;
  *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
  *(void *)(a1 + 56) = a2[7];
  *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
  *(void *)(a1 + 72) = a2[9];
  *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
  *(void *)(a1 + 88) = a2[11];
  long long v12 = *((_OWORD *)a2 + 7);
  *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
  *(_OWORD *)(a1 + 112) = v12;
  *(void *)(a1 + 128) = a2[16];
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 17);
  uint64_t v13 = *(int *)(a3 + 44);
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (uint64_t *)((char *)a2 + v13);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 19);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100012854(&qword_10010C7B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = sub_1000C6DC0();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      uint64_t v18 = sub_100012854((uint64_t *)&unk_10010D3A0);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
  }
  else
  {
    void *v14 = *v15;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1000B08BC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  char v8 = *((unsigned char *)a2 + 16);
  sub_100047E74();
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = v8;
  sub_10004809C();
  uint64_t v9 = a2[3];
  uint64_t v10 = a2[4];
  char v11 = *((unsigned char *)a2 + 40);
  sub_100047E74();
  *(void *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v10;
  *(unsigned char *)(a1 + 40) = v11;
  sub_10004809C();
  *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
  *(void *)(a1 + 56) = a2[7];
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
  *(void *)(a1 + 72) = a2[9];
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
  *(void *)(a1 + 88) = a2[11];
  swift_retain();
  swift_release();
  *(void *)(a1 + 96) = a2[12];
  *(void *)(a1 + 104) = a2[13];
  *(void *)(a1 + 112) = a2[14];
  *(void *)(a1 + 120) = a2[15];
  *(void *)(a1 + 128) = a2[16];
  swift_retain();
  swift_release();
  *(void *)(a1 + 136) = a2[17];
  *(void *)(a1 + 144) = a2[18];
  *(void *)(a1 + 152) = a2[19];
  *(void *)(a1 + 160) = a2[20];
  if ((uint64_t *)a1 != a2)
  {
    uint64_t v12 = *(int *)(a3 + 44);
    uint64_t v13 = (void *)(a1 + v12);
    uint64_t v14 = (uint64_t *)((char *)a2 + v12);
    sub_10001326C(a1 + v12, &qword_10010C7B0);
    sub_100012854(&qword_10010C7B0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = sub_1000C6DC0();
      uint64_t v16 = *(void *)(v15 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        uint64_t v17 = sub_100012854((uint64_t *)&unk_10010D3A0);
        memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v16 + 16))(v13, v14, v15);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
    }
    else
    {
      void *v13 = *v14;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1000B0B5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  long long v5 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v5;
  long long v6 = *(_OWORD *)(a2 + 80);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  uint64_t v7 = *(int *)(a3 + 44);
  char v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  uint64_t v10 = sub_100012854(&qword_10010C7B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_1000C6DC0();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
    {
      uint64_t v13 = sub_100012854((uint64_t *)&unk_10010D3A0);
      memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v8, v9, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1000B0D24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v6;
  sub_10004809C();
  char v7 = *(unsigned char *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = v7;
  sub_10004809C();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_release();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_release();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_release();
  long long v8 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v8;
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_release();
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  if (a1 != a2)
  {
    uint64_t v9 = *(int *)(a3 + 44);
    uint64_t v10 = (void *)(a1 + v9);
    uint64_t v11 = (const void *)(a2 + v9);
    sub_10001326C(a1 + v9, &qword_10010C7B0);
    uint64_t v12 = sub_100012854(&qword_10010C7B0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_1000C6DC0();
      uint64_t v14 = *(void *)(v13 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13))
      {
        uint64_t v15 = sub_100012854((uint64_t *)&unk_10010D3A0);
        memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v10, v11, v13);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v10, 0, 1, v13);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1000B0F68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000B0F7C);
}

uint64_t sub_1000B0F7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 56);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_100012854(&qword_10010C7C0);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 44);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_1000B103C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000B1050);
}

uint64_t sub_1000B1050(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 56) = a2;
  }
  else
  {
    uint64_t v7 = sub_100012854(&qword_10010C7C0);
    long long v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 44);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1000B10FC()
{
  sub_1000B11B8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1000B11B8()
{
  if (!qword_10010C838)
  {
    sub_100013128((uint64_t *)&unk_10010D3A0);
    unint64_t v0 = sub_1000C6950();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10010C838);
    }
  }
}

uint64_t sub_1000B1214()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000B1234@<X0>(uint64_t a1@<X8>)
{
  return sub_1000AB39C(*(void *)(v1 + 16), a1);
}

unint64_t sub_1000B123C()
{
  unint64_t result = qword_10010E4F8;
  if (!qword_10010E4F8)
  {
    sub_100013128(&qword_10010E4F0);
    sub_1000B12E8();
    sub_1000B5228(&qword_10010DB80, (void (*)(uint64_t))type metadata accessor for AlertViewModelAlert);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010E4F8);
  }
  return result;
}

unint64_t sub_1000B12E8()
{
  unint64_t result = qword_10010E500;
  if (!qword_10010E500)
  {
    sub_100013128(&qword_10010E508);
    sub_100013128(&qword_10010E510);
    sub_100013128(&qword_10010DDE8);
    sub_100013128(&qword_10010E518);
    sub_10001E454(&qword_10010E520, &qword_10010E518);
    swift_getOpaqueTypeConformance2();
    sub_100013128(&qword_10010DE00);
    sub_10001E454(&qword_10010DE08, &qword_10010DE00);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_1000B5228(&qword_10010DB80, (void (*)(uint64_t))type metadata accessor for AlertViewModelAlert);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010E500);
  }
  return result;
}

uint64_t sub_1000B14A4@<X0>(uint64_t a1@<X8>)
{
  return sub_1000A43E0(*(void *)(v1 + 16), a1);
}

unint64_t sub_1000B14AC()
{
  unint64_t result = qword_10010E548;
  if (!qword_10010E548)
  {
    sub_100013128(&qword_10010E540);
    sub_1000B1558();
    sub_1000B5228(&qword_10010DB80, (void (*)(uint64_t))type metadata accessor for AlertViewModelAlert);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010E548);
  }
  return result;
}

unint64_t sub_1000B1558()
{
  unint64_t result = qword_10010E550;
  if (!qword_10010E550)
  {
    sub_100013128(&qword_10010E558);
    sub_100013128(&qword_10010E560);
    sub_100013128(&qword_10010E568);
    sub_100013128(&qword_10010E570);
    sub_10001E454(&qword_10010E578, &qword_10010E570);
    swift_getOpaqueTypeConformance2();
    sub_100013128(&qword_10010E580);
    sub_10001E454(&qword_10010E588, &qword_10010E580);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_1000B5228(&qword_10010DB80, (void (*)(uint64_t))type metadata accessor for AlertViewModelAlert);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010E550);
  }
  return result;
}

uint64_t sub_1000B1714@<X0>(char *a1@<X8>)
{
  return sub_1000A4D5C(*(void *)(v1 + 16), a1);
}

uint64_t sub_1000B171C()
{
  return sub_1000AAF70(*(void *)(v0 + 16));
}

uint64_t sub_1000B1724@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000C7330();
  uint64_t v30 = v3;
  uint64_t v31 = v2;
  sub_1000B1990((uint64_t)&v32);
  __int16 v29 = v33;
  uint64_t v27 = v34;
  uint64_t v28 = v32;
  uint64_t v25 = v36;
  uint64_t v26 = v35;
  sub_1000C7330();
  sub_1000C69F0();
  uint64_t v23 = v34;
  uint64_t v24 = v32;
  char v19 = v35;
  char v20 = v33;
  uint64_t v21 = v37;
  uint64_t v22 = v36;
  sub_1000C6D00();
  LOWORD(v18) = 256;
  uint64_t v4 = sub_1000C6FF0();
  uint64_t v6 = v5;
  char v8 = v7 & 1;
  id v9 = objc_msgSend(self, "labelColor", 0, v18);
  sub_1000C7180();
  uint64_t v10 = sub_1000C6FB0();
  uint64_t v12 = v11;
  char v14 = v13;
  uint64_t v16 = v15;
  swift_release();
  sub_100039234(v4, v6, v8);
  swift_bridgeObjectRelease();
  char v41 = v20;
  char v40 = v19;
  char v39 = v14 & 1;
  char v38 = 1;
  *(void *)a1 = v31;
  *(void *)(a1 + 8) = v30;
  *(void *)(a1 + 16) = v28;
  *(_WORD *)(a1 + 24) = v29;
  *(void *)(a1 + 32) = v27;
  *(void *)(a1 + 40) = v26;
  *(void *)(a1 + 48) = v25;
  *(void *)(a1 + 56) = v24;
  *(unsigned char *)(a1 + 64) = v20;
  *(void *)(a1 + 72) = v23;
  *(unsigned char *)(a1 + 80) = v19;
  *(void *)(a1 + 88) = v22;
  *(void *)(a1 + 96) = v21;
  *(void *)(a1 + 104) = v10;
  *(void *)(a1 + 112) = v12;
  *(unsigned char *)(a1 + 120) = v14 & 1;
  *(void *)(a1 + 128) = v16;
  *(void *)(a1 + 136) = 0;
  *(unsigned char *)(a1 + 144) = 1;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100039224(v10, v12, v14 & 1);
  swift_bridgeObjectRetain();
  sub_100039234(v10, v12, v14 & 1);
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000B1990@<X0>(uint64_t a1@<X8>)
{
  if (sub_1000C5DE0())
  {
    id v2 = [self quaternaryLabelColor];
    uint64_t v3 = sub_1000C7180();
    __int16 v4 = 256;
  }
  else
  {
    uint64_t v3 = 0;
    __int16 v4 = 0;
  }
  uint64_t v5 = sub_1000C71A0();
  id v6 = [self labelColor];
  uint64_t v7 = sub_1000C7180();
  uint64_t result = swift_getKeyPath();
  *(void *)a1 = v3;
  *(_WORD *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = result;
  *(void *)(a1 + 32) = v7;
  return result;
}

double sub_1000B1A54@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000C6CF0();
  sub_1000B1724((uint64_t)v8);
  *(_OWORD *)&v10[119] = v8[7];
  *(_OWORD *)&v10[103] = v8[6];
  *(_OWORD *)&v10[55] = v8[3];
  *(_OWORD *)&v10[39] = v8[2];
  *(_OWORD *)&v10[135] = v8[8];
  v10[151] = v9;
  *(_OWORD *)&v10[71] = v8[4];
  *(_OWORD *)&v10[87] = v8[5];
  *(_OWORD *)&v10[7] = v8[0];
  *(_OWORD *)&v10[23] = v8[1];
  long long v3 = *(_OWORD *)&v10[112];
  *(_OWORD *)(a1 + 113) = *(_OWORD *)&v10[96];
  *(_OWORD *)(a1 + 129) = v3;
  *(_OWORD *)(a1 + 145) = *(_OWORD *)&v10[128];
  long long v4 = *(_OWORD *)&v10[48];
  *(_OWORD *)(a1 + 49) = *(_OWORD *)&v10[32];
  *(_OWORD *)(a1 + 65) = v4;
  long long v5 = *(_OWORD *)&v10[80];
  *(_OWORD *)(a1 + 81) = *(_OWORD *)&v10[64];
  *(_OWORD *)(a1 + 97) = v5;
  double result = *(double *)v10;
  long long v7 = *(_OWORD *)&v10[16];
  *(_OWORD *)(a1 + 17) = *(_OWORD *)v10;
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  *(void *)(a1 + 161) = *(void *)&v10[144];
  *(_OWORD *)(a1 + 33) = v7;
  return result;
}

uint64_t sub_1000B1B3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v29[1] = a2;
  void v29[2] = a3;
  uint64_t v30 = a1;
  uint64_t v31 = a4;
  uint64_t v4 = sub_100012854(&qword_10010E960);
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  long long v7 = (void *)((char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_100012854(&qword_10010E968);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100012854(&qword_10010E970);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  char v14 = (char *)v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100012854(&qword_10010E978);
  uint64_t v16 = v15 - 8;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1000C6D20();
  sub_1000B1E70((uint64_t)v32);
  v33[272] = 0;
  memcpy(&v33[7], v32, 0x109uLL);
  v34[0] = v19;
  v34[1] = 0x4020000000000000;
  LOBYTE(v34[2]) = 0;
  memcpy((char *)&v34[2] + 1, v33, 0x110uLL);
  uint64_t v20 = sub_1000C6FC0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v10, 1, 1, v20);
  uint64_t KeyPath = swift_getKeyPath();
  sub_10001A740((uint64_t)v10, (uint64_t)v7 + *(int *)(v5 + 36), &qword_10010E968);
  uint64_t *v7 = KeyPath;
  sub_10001A740((uint64_t)v7, (uint64_t)&v14[*(int *)(v12 + 44)], &qword_10010E960);
  memcpy(v14, v34, 0x121uLL);
  sub_1000B58D0((uint64_t)v34);
  sub_10001326C((uint64_t)v7, &qword_10010E960);
  sub_10001326C((uint64_t)v10, &qword_10010E968);
  sub_1000B594C((uint64_t)v32);
  uint64_t v22 = swift_getKeyPath();
  sub_10001A740((uint64_t)v14, (uint64_t)v18, &qword_10010E970);
  uint64_t v23 = &v18[*(int *)(v16 + 44)];
  *(void *)uint64_t v23 = v22;
  v23[8] = 1;
  sub_10001326C((uint64_t)v14, &qword_10010E970);
  uint64_t v24 = sub_1000C7340();
  uint64_t v25 = v31;
  sub_10001A740((uint64_t)v18, v31, &qword_10010E978);
  uint64_t v26 = (uint64_t *)(v25 + *(int *)(sub_100012854(&qword_10010E980) + 36));
  uint64_t v27 = v30;
  *uint64_t v26 = v24;
  v26[1] = v27;
  swift_retain();
  return sub_10001326C((uint64_t)v18, &qword_10010E978);
}

uint64_t sub_1000B1E70@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000C6CF0();
  sub_1000B20C8((uint64_t)v20);
  *(_OWORD *)&v22[87] = v20[5];
  *(_OWORD *)&v22[103] = v20[6];
  *(_OWORD *)&v22[119] = v20[7];
  *(_OWORD *)&v22[23] = v20[1];
  *(_OWORD *)&v22[39] = v20[2];
  *(_OWORD *)&v22[55] = v20[3];
  *(_OWORD *)&v22[71] = v20[4];
  char v23 = 1;
  v22[135] = v21;
  *(_OWORD *)&v22[7] = v20[0];
  uint64_t v19 = sub_1000C6CF0();
  sub_1000B22E4((uint64_t)&v31);
  uint64_t v3 = v31;
  char v4 = v32;
  uint64_t v5 = *(void *)v33;
  uint64_t v6 = *(void *)&v33[8];
  char v7 = v33[16];
  uint64_t v8 = *(void *)&v34[7];
  uint64_t v9 = *(void *)&v34[15];
  uint64_t v10 = *(void *)&v34[23];
  char v11 = v34[31];
  uint64_t v12 = *(void *)((char *)&v35 + 7);
  char v13 = HIBYTE(v35);
  long long v24 = (unint64_t)v2;
  LOBYTE(v25[0]) = 1;
  *(_OWORD *)((char *)v25 + 1) = *(_OWORD *)v22;
  *(_OWORD *)((char *)&v25[4] + 1) = *(_OWORD *)&v22[64];
  *(_OWORD *)((char *)&v25[3] + 1) = *(_OWORD *)&v22[48];
  *(_OWORD *)((char *)&v25[2] + 1) = *(_OWORD *)&v22[32];
  *(_OWORD *)((char *)&v25[1] + 1) = *(_OWORD *)&v22[16];
  *(void *)((char *)&v25[8] + 1) = *(void *)&v22[128];
  *(_OWORD *)((char *)&v25[7] + 1) = *(_OWORD *)&v22[112];
  *(_OWORD *)((char *)&v25[6] + 1) = *(_OWORD *)&v22[96];
  *(_OWORD *)((char *)&v25[5] + 1) = *(_OWORD *)&v22[80];
  long long v14 = v25[6];
  *(_OWORD *)(a1 + 96) = v25[5];
  *(_OWORD *)(a1 + 112) = v14;
  *(_OWORD *)(a1 + 128) = v25[7];
  *(_OWORD *)(a1 + 137) = *(_OWORD *)((char *)&v25[7] + 9);
  long long v15 = v25[2];
  *(_OWORD *)(a1 + 32) = v25[1];
  *(_OWORD *)(a1 + 48) = v15;
  long long v16 = v25[4];
  *(_OWORD *)(a1 + 64) = v25[3];
  *(_OWORD *)(a1 + 80) = v16;
  long long v17 = v25[0];
  *(_OWORD *)a1 = v24;
  *(_OWORD *)(a1 + 16) = v17;
  char v30 = 1;
  char v29 = v4;
  char v28 = v7;
  char v27 = v11;
  char v26 = v13;
  *(void *)(a1 + 160) = v19;
  *(void *)(a1 + 168) = 0;
  *(unsigned char *)(a1 + 176) = 1;
  *(void *)(a1 + 184) = v3;
  *(unsigned char *)(a1 + 192) = v4;
  *(void *)(a1 + 200) = v5;
  *(void *)(a1 + 208) = v6;
  *(unsigned char *)(a1 + 216) = v7;
  *(void *)(a1 + 224) = v8;
  *(void *)(a1 + 232) = v9;
  *(void *)(a1 + 240) = v10;
  *(unsigned char *)(a1 + 248) = v11;
  *(void *)(a1 + 256) = v12;
  *(unsigned char *)(a1 + 264) = v13;
  sub_1000B59D0((uint64_t)&v24);
  sub_100039224(v5, v6, v7);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100039234(v5, v6, v7);
  swift_release();
  swift_bridgeObjectRelease();
  long long v37 = *(_OWORD *)&v22[80];
  long long v38 = *(_OWORD *)&v22[96];
  long long v39 = *(_OWORD *)&v22[112];
  *(_OWORD *)uint64_t v34 = *(_OWORD *)&v22[16];
  *(_OWORD *)&v34[16] = *(_OWORD *)&v22[32];
  long long v35 = *(_OWORD *)&v22[48];
  long long v36 = *(_OWORD *)&v22[64];
  uint64_t v31 = v2;
  uint64_t v32 = 0;
  v33[0] = 1;
  uint64_t v40 = *(void *)&v22[128];
  *(_OWORD *)&v33[1] = *(_OWORD *)v22;
  return sub_1000B5A08((uint64_t)&v31);
}

double sub_1000B20C8@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000C71B0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for Image.ResizingMode.stretch(_:), v2);
  uint64_t v6 = sub_1000C71D0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1000C7330();
  sub_1000C69F0();
  uint64_t v7 = v15[1];
  char v8 = v16;
  uint64_t v9 = v17;
  char v10 = v18;
  uint64_t v11 = v19;
  uint64_t v12 = v20;
  sub_1000C7140();
  uint64_t v13 = sub_1000C7160();
  swift_release();
  *(_DWORD *)(a1 + 9) = *(_DWORD *)v24;
  *(_DWORD *)(a1 + 12) = *(_DWORD *)&v24[3];
  *(_DWORD *)(a1 + 34) = *(_DWORD *)&v22[9];
  *(_WORD *)(a1 + 38) = v23;
  *(_DWORD *)(a1 + 49) = *(_DWORD *)v22;
  *(_DWORD *)(a1 + 52) = *(_DWORD *)&v22[3];
  *(_DWORD *)(a1 + 65) = *(_DWORD *)v21;
  *(_DWORD *)(a1 + 68) = *(_DWORD *)&v21[3];
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = 0;
  *(_WORD *)(a1 + 32) = 1;
  *(void *)(a1 + 40) = v7;
  *(unsigned char *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(unsigned char *)(a1 + 64) = v10;
  *(void *)(a1 + 72) = v11;
  *(void *)(a1 + 80) = v12;
  *(void *)(a1 + 88) = v13;
  double result = 5.0;
  *(_OWORD *)(a1 + 96) = xmmword_1000D0830;
  *(void *)(a1 + 112) = 0x4010000000000000;
  *(void *)(a1 + 120) = 0;
  *(unsigned char *)(a1 + 128) = 1;
  return result;
}

uint64_t sub_1000B22E4@<X0>(uint64_t a1@<X8>)
{
  sub_1000363CC();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1000C7000();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  sub_1000C6F20();
  sub_1000C6F40();
  sub_1000C6F70();
  swift_release();
  uint64_t v7 = sub_1000C6FE0();
  uint64_t v9 = v8;
  char v11 = v10;
  swift_release();
  char v12 = v11 & 1;
  sub_100039234(v2, v4, v6);
  swift_bridgeObjectRelease();
  id v13 = [self labelColor];
  sub_1000C7180();
  uint64_t v14 = sub_1000C6FB0();
  uint64_t v16 = v15;
  char v18 = v17;
  uint64_t v20 = v19;
  swift_release();
  sub_100039234(v7, v9, v12);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
  *(void *)(a1 + 16) = v14;
  *(void *)(a1 + 24) = v16;
  *(unsigned char *)(a1 + 32) = v18 & 1;
  *(void *)(a1 + 40) = v20;
  *(void *)(a1 + 48) = KeyPath;
  *(void *)(a1 + 56) = 2;
  *(unsigned char *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(unsigned char *)(a1 + 80) = 1;
  sub_100039224(v14, v16, v18 & 1);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100039234(v14, v16, v18 & 1);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000B24C0@<X0>(uint64_t a1@<X8>)
{
  return sub_1000B1B3C(*v1, v1[1], v1[2], a1);
}

uint64_t sub_1000B24CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v28 = a1;
  uint64_t v2 = sub_100012854(&qword_10010E960);
  uint64_t v3 = v2 - 8;
  __chkstk_darwin(v2);
  char v5 = (uint64_t *)((char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_100012854(&qword_10010E968);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100012854(&qword_10010E988);
  uint64_t v10 = v9 - 8;
  __chkstk_darwin(v9);
  char v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000C6CF0();
  sub_1000B2890(v1, (uint64_t)v29);
  *(_OWORD *)((char *)&v31[10] + 7) = v29[10];
  *(_OWORD *)((char *)&v31[11] + 7) = v29[11];
  *(_OWORD *)((char *)&v31[12] + 7) = v30[0];
  v31[13] = *(_OWORD *)((char *)v30 + 9);
  *(_OWORD *)((char *)&v31[6] + 7) = v29[6];
  *(_OWORD *)((char *)&v31[7] + 7) = v29[7];
  *(_OWORD *)((char *)&v31[8] + 7) = v29[8];
  *(_OWORD *)((char *)&v31[9] + 7) = v29[9];
  *(_OWORD *)((char *)&v31[2] + 7) = v29[2];
  *(_OWORD *)((char *)&v31[3] + 7) = v29[3];
  *(_OWORD *)((char *)&v31[4] + 7) = v29[4];
  *(_OWORD *)((char *)&v31[5] + 7) = v29[5];
  *(_OWORD *)((char *)v31 + 7) = v29[0];
  *(_OWORD *)((char *)&v31[1] + 7) = v29[1];
  *(_OWORD *)((char *)&v34[10] + 1) = v31[10];
  *(_OWORD *)((char *)&v34[11] + 1) = v31[11];
  *(_OWORD *)((char *)&v34[12] + 1) = v31[12];
  *(_OWORD *)((char *)&v34[13] + 1) = *(_OWORD *)((char *)v30 + 9);
  *(_OWORD *)((char *)&v34[6] + 1) = v31[6];
  *(_OWORD *)((char *)&v34[7] + 1) = v31[7];
  *(_OWORD *)((char *)&v34[8] + 1) = v31[8];
  *(_OWORD *)((char *)&v34[9] + 1) = v31[9];
  *(_OWORD *)((char *)&v34[2] + 1) = v31[2];
  *(_OWORD *)((char *)&v34[3] + 1) = v31[3];
  *(_OWORD *)((char *)&v34[4] + 1) = v31[4];
  *(_OWORD *)((char *)&v34[5] + 1) = v31[5];
  *(_OWORD *)((char *)v34 + 1) = v31[0];
  char v32 = 1;
  long long v33 = (unint64_t)v13;
  LOBYTE(v34[0]) = 1;
  *(_OWORD *)((char *)&v34[1] + 1) = v31[1];
  uint64_t v14 = sub_1000C6FC0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v8, 1, 1, v14);
  uint64_t KeyPath = swift_getKeyPath();
  sub_10001A740((uint64_t)v8, (uint64_t)v5 + *(int *)(v3 + 36), &qword_10010E968);
  *char v5 = KeyPath;
  sub_10001A740((uint64_t)v5, (uint64_t)&v12[*(int *)(v10 + 44)], &qword_10010E960);
  long long v16 = v34[12];
  *((_OWORD *)v12 + 12) = v34[11];
  *((_OWORD *)v12 + 13) = v16;
  *((_OWORD *)v12 + 14) = v34[13];
  v12[240] = v34[14];
  long long v17 = v34[8];
  *((_OWORD *)v12 + 8) = v34[7];
  *((_OWORD *)v12 + 9) = v17;
  long long v18 = v34[10];
  *((_OWORD *)v12 + 10) = v34[9];
  *((_OWORD *)v12 + 11) = v18;
  long long v19 = v34[4];
  *((_OWORD *)v12 + 4) = v34[3];
  *((_OWORD *)v12 + 5) = v19;
  long long v20 = v34[6];
  *((_OWORD *)v12 + 6) = v34[5];
  *((_OWORD *)v12 + 7) = v20;
  long long v21 = v34[0];
  *(_OWORD *)char v12 = v33;
  *((_OWORD *)v12 + 1) = v21;
  long long v22 = v34[2];
  *((_OWORD *)v12 + 2) = v34[1];
  *((_OWORD *)v12 + 3) = v22;
  sub_1000B5AA4((uint64_t)&v33);
  sub_10001326C((uint64_t)v5, &qword_10010E960);
  sub_10001326C((uint64_t)v8, &qword_10010E968);
  sub_1000B5BC8((uint64_t)v29);
  uint64_t v23 = sub_1000C6F80();
  uint64_t v24 = swift_getKeyPath();
  uint64_t v25 = v28;
  sub_10001A740((uint64_t)v12, v28, &qword_10010E988);
  char v26 = (uint64_t *)(v25 + *(int *)(sub_100012854(&qword_10010E990) + 36));
  *char v26 = v24;
  v26[1] = v23;
  return sub_10001326C((uint64_t)v12, &qword_10010E988);
}

uint64_t sub_1000B2890@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000C71B0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1)
  {
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for Image.ResizingMode.stretch(_:), v4);
    swift_retain();
    uint64_t v57 = sub_1000C71D0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v56 = sub_1000C7120();
    uint64_t KeyPath = swift_getKeyPath();
    sub_1000C7330();
    sub_1000C69F0();
    uint64_t v54 = v71;
    uint64_t v53 = v72;
    uint64_t v52 = v73;
    uint64_t v51 = v74;
    uint64_t v8 = v76;
    uint64_t v50 = v75;
    swift_release();
    uint64_t v9 = 1;
  }
  else
  {
    uint64_t v57 = 0;
    uint64_t v9 = 0;
    uint64_t KeyPath = 0;
    uint64_t v56 = 0;
    uint64_t v54 = 0;
    uint64_t v53 = 0;
    uint64_t v52 = 0;
    uint64_t v51 = 0;
    uint64_t v50 = 0;
    uint64_t v8 = 0;
  }
  uint64_t v10 = sub_1000C6D30();
  sub_1000B2D2C(a1, (uint64_t)v58);
  uint64_t v11 = v58[0];
  uint64_t v12 = v58[1];
  char v13 = v59;
  uint64_t v14 = v60;
  uint64_t v15 = v61;
  uint64_t v16 = v62;
  uint64_t v17 = v63;
  uint64_t v19 = v64;
  uint64_t v18 = v65;
  uint64_t v46 = v65;
  uint64_t v20 = v66;
  uint64_t v21 = v67;
  uint64_t v47 = v67;
  uint64_t v22 = v68;
  uint64_t v45 = v68;
  LOBYTE(v58[0]) = 1;
  char v70 = v59;
  char v69 = 1;
  uint64_t v23 = v57;
  *(void *)a2 = v57;
  *(void *)(a2 + 8) = 0;
  uint64_t v24 = v23;
  uint64_t v57 = v23;
  uint64_t v49 = v9;
  uint64_t v25 = KeyPath;
  *(void *)(a2 + 16) = v9;
  *(void *)(a2 + 24) = v25;
  uint64_t KeyPath = v25;
  uint64_t v26 = v56;
  *(void *)(a2 + 32) = v56;
  uint64_t v56 = v26;
  uint64_t v27 = v54;
  *(void *)(a2 + 40) = v54;
  uint64_t v54 = v27;
  uint64_t v28 = v53;
  *(void *)(a2 + 48) = v53;
  uint64_t v53 = v28;
  uint64_t v29 = v52;
  *(void *)(a2 + 56) = v52;
  uint64_t v52 = v29;
  uint64_t v30 = v50;
  *(void *)(a2 + 64) = v51;
  *(void *)(a2 + 72) = v30;
  uint64_t v50 = v30;
  *(void *)(a2 + 80) = v8;
  *(void *)(a2 + 88) = v10;
  uint64_t v48 = v8;
  *(void *)(a2 + 96) = 0;
  *(unsigned char *)(a2 + 104) = 1;
  *(void *)(a2 + 112) = v11;
  *(void *)(a2 + 120) = v12;
  uint64_t v31 = v11;
  uint64_t v32 = v12;
  *(unsigned char *)(a2 + 128) = v13;
  *(void *)(a2 + 136) = v14;
  *(void *)(a2 + 144) = v15;
  uint64_t v43 = v14;
  uint64_t v33 = v15;
  *(void *)(a2 + 152) = v16;
  *(void *)(a2 + 160) = v17;
  uint64_t v34 = v16;
  uint64_t v44 = v17;
  *(void *)(a2 + 168) = v19;
  *(void *)(a2 + 176) = v18;
  uint64_t v35 = v19;
  *(void *)(a2 + 184) = v20;
  *(void *)(a2 + 192) = v21;
  uint64_t v36 = v20;
  *(void *)(a2 + 200) = v22;
  *(void *)(a2 + 208) = 0;
  *(unsigned char *)(a2 + 216) = 1;
  sub_1000B5B78(v24);
  sub_100039224(v31, v32, v13);
  swift_bridgeObjectRetain();
  uint64_t v37 = v33;
  uint64_t v38 = v33;
  uint64_t v39 = v35;
  sub_100097D08(v37, v34, v17, v35);
  uint64_t v40 = v46;
  LOBYTE(v35) = v47;
  uint64_t v41 = v45;
  sub_100097D08(v46, v36, v47, v45);
  sub_100039234(v31, v32, v13);
  swift_bridgeObjectRelease();
  sub_100097D4C(v38, v34, v44, v39);
  sub_100097D4C(v40, v36, v35, v41);
  return sub_1000B5C9C(v57);
}

uint64_t sub_1000B2D2C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1000363CC();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1000C7000();
  uint64_t v5 = v4;
  char v7 = v6 & 1;
  sub_1000C6F10();
  sub_1000C6F40();
  sub_1000C6F70();
  swift_release();
  uint64_t v8 = sub_1000C6FE0();
  uint64_t v10 = v9;
  char v12 = v11;
  swift_release();
  sub_100039234(v3, v5, v7);
  swift_bridgeObjectRelease();
  char v13 = self;
  id v14 = [v13 labelColor];
  sub_1000C7180();
  uint64_t v49 = sub_1000C6FB0();
  uint64_t v47 = v15;
  uint64_t v48 = v16;
  char v46 = v17;
  swift_release();
  sub_100039234(v8, v10, v12 & 1);
  swift_bridgeObjectRelease();
  unint64_t v18 = a1[4];
  uint64_t v19 = HIBYTE(v18) & 0xF;
  if ((v18 & 0x2000000000000000) == 0) {
    uint64_t v19 = a1[3] & 0xFFFFFFFFFFFFLL;
  }
  if (v19)
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_1000C7000();
    uint64_t v22 = v21;
    char v24 = v23 & 1;
    id v25 = [v13 labelColor];
    sub_1000C7180();
    uint64_t v26 = sub_1000C6FB0();
    uint64_t v44 = v27;
    uint64_t v45 = v26;
    char v29 = v28;
    uint64_t v43 = v30;
    swift_release();
    uint64_t v42 = v29 & 1;
    sub_100039234(v20, v22, v24);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v44 = 0;
    uint64_t v45 = 0;
    uint64_t v42 = 0;
    uint64_t v43 = 0;
  }
  unint64_t v31 = a1[6];
  uint64_t v32 = HIBYTE(v31) & 0xF;
  if ((v31 & 0x2000000000000000) == 0) {
    uint64_t v32 = a1[5] & 0xFFFFFFFFFFFFLL;
  }
  if (v32)
  {
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_1000C7000();
    uint64_t v35 = v34;
    uint64_t v37 = v36;
    uint64_t v39 = v38 & 1;
  }
  else
  {
    uint64_t v33 = 0;
    uint64_t v35 = 0;
    uint64_t v39 = 0;
    uint64_t v37 = 0;
  }
  *(void *)a2 = v49;
  *(void *)(a2 + 8) = v47;
  *(unsigned char *)(a2 + 16) = v46 & 1;
  *(void *)(a2 + 24) = v48;
  *(void *)(a2 + 32) = v45;
  *(void *)(a2 + 40) = v44;
  *(void *)(a2 + 48) = v42;
  *(void *)(a2 + 56) = v43;
  *(void *)(a2 + 64) = v33;
  *(void *)(a2 + 72) = v35;
  *(void *)(a2 + 80) = v39;
  *(void *)(a2 + 88) = v37;
  sub_100039224(v49, v47, v46 & 1);
  swift_bridgeObjectRetain();
  sub_100097D08(v45, v44, v42, v43);
  sub_100097D08(v33, v35, v39, v37);
  sub_100097D4C(v33, v35, v39, v37);
  sub_100097D4C(v45, v44, v42, v43);
  sub_100039234(v49, v47, v46 & 1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000B3060@<X0>(uint64_t a1@<X8>)
{
  return sub_1000B24CC(a1);
}

uint64_t sub_1000B30A4@<X0>(void *a1@<X8>)
{
  return sub_1000112D0(a1);
}

uint64_t sub_1000B30B8()
{
  return sub_100011360();
}

uint64_t sub_1000B30CC@<X0>(void *a1@<X8>)
{
  return sub_1000112D0(a1);
}

uint64_t sub_1000B30E0()
{
  return sub_100011360();
}

uint64_t sub_1000B30F4@<X0>(void *a1@<X8>)
{
  return sub_1000112D0(a1);
}

uint64_t sub_1000B3108()
{
  return sub_100011360();
}

uint64_t sub_1000B311C()
{
  return sub_1000B3270();
}

uint64_t sub_1000B3130()
{
  return sub_1000B3270();
}

uint64_t sub_1000B3158(uint64_t a1)
{
  return sub_1000B3324(a1);
}

uint64_t sub_1000B316C(uint64_t a1)
{
  return sub_1000B3324(a1);
}

uint64_t sub_1000B3194@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_1000B31BC()
{
  return sub_1000114AC();
}

uint64_t sub_1000B31E4@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_1000B31F8()
{
  return sub_1000114AC();
}

uint64_t sub_1000B320C@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_1000B3220()
{
  return sub_1000114AC();
}

uint64_t sub_1000B3234@<X0>(void *a1@<X8>)
{
  return sub_1000112D0(a1);
}

uint64_t sub_1000B3248()
{
  return sub_100011360();
}

uint64_t sub_1000B325C()
{
  return sub_1000B3270();
}

uint64_t sub_1000B3270()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();

  return swift_release();
}

uint64_t sub_1000B32E8()
{
  return sub_1000B3270();
}

uint64_t sub_1000B3310(uint64_t a1)
{
  return sub_1000B3324(a1);
}

uint64_t sub_1000B3324(uint64_t a1)
{
  uint64_t v2 = sub_100012854(&qword_10010CB70);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  char v7 = (char *)&v9 - v6;
  sub_10001A740(a1, (uint64_t)&v9 - v6, &qword_10010CB70);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10001A740((uint64_t)v7, (uint64_t)v5, &qword_10010CB70);
  swift_retain();
  sub_1000C67F0();
  return sub_10001326C((uint64_t)v7, &qword_10010CB70);
}

uint64_t sub_1000B343C(uint64_t a1)
{
  return sub_1000B3324(a1);
}

uint64_t sub_1000B3464@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_1000B348C()
{
  return sub_1000114AC();
}

uint64_t sub_1000B34B4()
{
  return sub_1000AB138(*(void *)(v0 + 16));
}

uint64_t sub_1000B34C0()
{
  return sub_1000B4A64((uint64_t (*)(unint64_t))sub_1000AFEFC);
}

uint64_t sub_1000B34D8@<X0>(char *a1@<X8>)
{
  return sub_1000A6634(*(void *)(v1 + 16), a1);
}

unint64_t sub_1000B34E0()
{
  unint64_t result = qword_10010E640;
  if (!qword_10010E640)
  {
    sub_100013128(&qword_10010E630);
    sub_1000B3554();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010E640);
  }
  return result;
}

unint64_t sub_1000B3554()
{
  unint64_t result = qword_10010E648;
  if (!qword_10010E648)
  {
    sub_100013128(&qword_10010E650);
    sub_1000B3614(&qword_10010E658, &qword_10010E660, (void (*)(void))sub_1000B35EC);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010E648);
  }
  return result;
}

uint64_t sub_1000B35EC()
{
  return sub_1000B3614(&qword_10010E668, &qword_10010E670, (void (*)(void))sub_1000B3694);
}

uint64_t sub_1000B3614(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100013128(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000B3694()
{
  unint64_t result = qword_10010E678;
  if (!qword_10010E678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010E678);
  }
  return result;
}

uint64_t sub_1000B36E8@<X0>(void *a1@<X8>)
{
  return sub_1000112D0(a1);
}

uint64_t sub_1000B3710()
{
  return sub_100011360();
}

uint64_t sub_1000B3738@<X0>(uint64_t a1@<X8>)
{
  return sub_1000A80D0(a1);
}

uint64_t sub_1000B3740@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_1000B3768()
{
  return sub_1000114AC();
}

uint64_t sub_1000B3790()
{
  return sub_1000C6BE0();
}

uint64_t sub_1000B37B4@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000C67E0();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1000B3834()
{
  return sub_1000C67F0();
}

uint64_t sub_1000B38B0@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_1000B38C4@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_1000B38EC()
{
  return sub_1000114AC();
}

uint64_t sub_1000B3900()
{
  return sub_1000114AC();
}

uint64_t sub_1000B3940@<X0>(uint64_t a1@<X8>)
{
  return sub_1000AA280(*(void *)(v1 + 16), a1);
}

uint64_t sub_1000B3948@<X0>(uint64_t a1@<X8>)
{
  return sub_1000A92D8(*(void *)(v1 + 16), a1);
}

uint64_t sub_1000B3950()
{
  return sub_1000AE0BC(*(void *)(v0 + 16));
}

uint64_t sub_1000B399C@<X0>(void *a1@<X8>)
{
  return sub_1000112D0(a1);
}

uint64_t sub_1000B39C4()
{
  return sub_100011360();
}

uint64_t sub_1000B39F0()
{
  return sub_1000B4A64((uint64_t (*)(unint64_t))sub_1000AE2B8);
}

uint64_t sub_1000B3A08@<X0>(void *a1@<X8>)
{
  return sub_1000112D0(a1);
}

uint64_t sub_1000B3A30()
{
  return sub_100011360();
}

uint64_t sub_1000B3A5C()
{
  return sub_1000B3A74((uint64_t (*)(unint64_t))sub_1000AF4C0);
}

uint64_t sub_1000B3A74(uint64_t (*a1)(unint64_t))
{
  uint64_t v3 = *(void *)(type metadata accessor for PeopleView() - 8);
  return a1(v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
}

uint64_t sub_1000B3AD8(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100013128(a2);
    sub_10001E454(a3, a4);
    sub_1000B3B74();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000B3B74()
{
  unint64_t result = qword_10010E718;
  if (!qword_10010E718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010E718);
  }
  return result;
}

uint64_t sub_1000B3BD0@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_1000B3BE4()
{
  return sub_1000114AC();
}

uint64_t sub_1000B3BF8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1000C6C80();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1000B3C28()
{
  return sub_1000C6C90();
}

unsigned char *sub_1000B3C50(unsigned char *result, char a2)
{
  *result &= a2 ^ 1;
  return result;
}

uint64_t sub_1000B3C64@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000C6BA0();
  *a1 = result;
  return result;
}

uint64_t sub_1000B3C90@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000C6BA0();
  *a1 = result;
  return result;
}

uint64_t sub_1000B3CBC()
{
  return sub_1000C6BB0();
}

uint64_t sub_1000B3CE8()
{
  return sub_1000C6BB0();
}

uint64_t sub_1000B3D18()
{
  return sub_1000B4BAC((uint64_t)&unk_100102780, (uint64_t)&unk_10010C5D8, (uint64_t (*)(unint64_t, uint64_t, uint64_t))sub_1000AF20C);
}

uint64_t sub_1000B3D54()
{
  return sub_1000B3A74((uint64_t (*)(unint64_t))sub_1000AF644);
}

uint64_t sub_1000B3D6C()
{
  return sub_1000AF75C(*(void *)(v0 + 16));
}

uint64_t sub_1000B3DC4()
{
  return sub_1000B4BAC((uint64_t)&unk_1001027F8, (uint64_t)&unk_10010BEB8, (uint64_t (*)(unint64_t, uint64_t, uint64_t))sub_1000AF930);
}

uint64_t sub_1000B3DF8@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_1000B3E20()
{
  return sub_1000114AC();
}

uint64_t sub_1000B3E4C@<X0>(void *a1@<X8>)
{
  return sub_1000112D0(a1);
}

uint64_t sub_1000B3E74()
{
  return sub_100011360();
}

uint64_t sub_1000B3E9C@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_1000B3EC4()
{
  return sub_1000114AC();
}

uint64_t sub_1000B3EEC@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_1000B3F14()
{
  return sub_1000114AC();
}

uint64_t sub_1000B3F60(uint64_t a1)
{
  return sub_1000B4C98(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1000A71B4);
}

unint64_t sub_1000B3F78()
{
  unint64_t result = qword_10010E798;
  if (!qword_10010E798)
  {
    sub_100013128(&qword_10010E788);
    sub_10001E454(&qword_10010E7A0, &qword_10010E7A8);
    sub_10001E454((unint64_t *)&qword_10010C928, &qword_10010C930);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010E798);
  }
  return result;
}

uint64_t sub_1000B4048()
{
  return sub_1000B4EE8((uint64_t (*)(uint64_t))sub_1000A752C);
}

unint64_t sub_1000B4060()
{
  unint64_t result = qword_10010E7C0;
  if (!qword_10010E7C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010E7C0);
  }
  return result;
}

uint64_t sub_1000B40B8()
{
  type metadata accessor for PeopleView();

  return sub_1000A769C();
}

uint64_t sub_1000B4148()
{
  uint64_t v1 = sub_1000C6AA0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1000B41D8@<X0>(uint64_t *a1@<X8>)
{
  sub_1000C6AA0();

  return sub_10008BF64(a1);
}

uint64_t sub_1000B4258()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000B4290(double *a1)
{
  return (*(uint64_t (**)(double, double, double, double))(v1 + 16))(*a1, a1[1], a1[2], a1[3]);
}

double sub_1000B42C4@<D0>(uint64_t a1@<X8>)
{
  return sub_1000AA02C(a1);
}

unint64_t sub_1000B4328()
{
  unint64_t result = qword_10010E7C8;
  if (!qword_10010E7C8)
  {
    sub_100013128(&qword_10010E768);
    sub_1000B43C8();
    sub_10001E454(&qword_10010E7F0, &qword_10010E7F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010E7C8);
  }
  return result;
}

unint64_t sub_1000B43C8()
{
  unint64_t result = qword_10010E7D0;
  if (!qword_10010E7D0)
  {
    sub_100013128(&qword_10010E758);
    sub_10001E454(&qword_10010E7D8, &qword_10010E760);
    sub_10001E454(&qword_10010E7E0, &qword_10010E7E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010E7D0);
  }
  return result;
}

uint64_t sub_1000B448C@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_1000C6CA0();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_1000B44C0()
{
  return sub_1000C6CB0();
}

uint64_t sub_1000B44F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000C6C40();
  *a1 = result;
  return result;
}

uint64_t sub_1000B451C()
{
  return sub_1000C6C50();
}

uint64_t sub_1000B4548()
{
  return sub_1000C6B40();
}

uint64_t sub_1000B456C(uint64_t a1)
{
  uint64_t v2 = sub_1000C71C0();
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_1000C6B50();
}

uint64_t sub_1000B4634(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(char *))
{
  uint64_t v9 = sub_100012854(a5);
  __chkstk_darwin(v9 - 8);
  char v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001A740(a1, (uint64_t)v11, a5);
  return a6(v11);
}

unint64_t sub_1000B46D8()
{
  unint64_t result = qword_10010E810;
  if (!qword_10010E810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010E810);
  }
  return result;
}

uint64_t sub_1000B472C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1000C6C80();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1000B475C()
{
  return sub_1000C6C90();
}

uint64_t sub_1000B4784()
{
  return _swift_deallocObject(v0, 17, 7);
}

unsigned char *sub_1000B4794(unsigned char *result)
{
  *result &= ~*(unsigned char *)(v1 + 16) & 1;
  return result;
}

uint64_t sub_1000B47B4()
{
  return swift_retain();
}

uint64_t sub_1000B47BC()
{
  return sub_1000C6C60();
}

uint64_t sub_1000B47E0()
{
  return sub_1000C6BE0();
}

uint64_t sub_1000B4804(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000B486C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000B48CC@<X0>(char *a1@<X8>)
{
  return sub_1000ABCB0(*(void *)(v1 + 16), a1);
}

uint64_t sub_1000B48D4()
{
  return sub_1000AFBE0(*(void *)(v0 + 16));
}

uint64_t sub_1000B48DC()
{
  return sub_1000AFDA8(*(void *)(v0 + 16));
}

uint64_t sub_1000B48E8()
{
  return sub_1000C6B40();
}

uint64_t sub_1000B4910@<X0>(char *a1@<X8>)
{
  return sub_1000AC8FC(*(void *)(v1 + 16), a1);
}

unint64_t sub_1000B4918()
{
  unint64_t result = qword_10010E868;
  if (!qword_10010E868)
  {
    sub_100013128(&qword_10010E858);
    sub_1000B4994();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010E868);
  }
  return result;
}

unint64_t sub_1000B4994()
{
  unint64_t result = qword_10010E870;
  if (!qword_10010E870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010E870);
  }
  return result;
}

uint64_t sub_1000B49E8@<X0>(uint64_t a1@<X8>)
{
  return sub_1000ADA80(a1);
}

uint64_t sub_1000B49F0@<X0>(uint64_t *a1@<X8>)
{
  return sub_1000AE018(a1);
}

uint64_t sub_1000B4A0C@<X0>(uint64_t a1@<X8>)
{
  return sub_1000AE3AC(*(void *)(v1 + 16), a1);
}

uint64_t sub_1000B4A14()
{
  return sub_1000AE0BC(*(void *)(v0 + 16));
}

uint64_t sub_1000B4A64(uint64_t (*a1)(unint64_t))
{
  uint64_t v3 = *(void *)(type metadata accessor for PeopleView() - 8);
  return a1(v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
}

uint64_t sub_1000B4ACC()
{
  return sub_1000AF75C(*(void *)(v0 + 16));
}

uint64_t sub_1000B4B18@<X0>(uint64_t a1@<X8>)
{
  return sub_1000AFB84(a1);
}

uint64_t sub_1000B4B3C()
{
  return sub_1000B4BAC((uint64_t)&unk_100102A00, (uint64_t)&unk_10010E8F8, (uint64_t (*)(unint64_t, uint64_t, uint64_t))sub_1000AF20C);
}

uint64_t sub_1000B4B78()
{
  return sub_1000B4BAC((uint64_t)&unk_100102A50, (uint64_t)&unk_10010E900, (uint64_t (*)(unint64_t, uint64_t, uint64_t))sub_1000AF930);
}

uint64_t sub_1000B4BAC(uint64_t a1, uint64_t a2, uint64_t (*a3)(unint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *(void *)(type metadata accessor for PeopleView() - 8);
  return a3(v3 + ((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), a1, a2);
}

uint64_t sub_1000B4C2C@<X0>(unsigned char *a1@<X8>)
{
  return sub_10001141C(a1);
}

uint64_t sub_1000B4C54()
{
  return sub_1000114AC();
}

uint64_t sub_1000B4C80(uint64_t a1)
{
  return sub_1000B4C98(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1000AD0E8);
}

uint64_t sub_1000B4C98(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(type metadata accessor for PeopleView() - 8);
  uint64_t v5 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return a2(a1, v5);
}

uint64_t sub_1000B4D30()
{
  uint64_t v1 = (int *)(type metadata accessor for PeopleView() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  sub_10004809C();
  sub_10004809C();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v5 = v0 + v3 + v1[13];
  sub_100012854(&qword_10010C7B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1000C6DC0();
    uint64_t v7 = *(void *)(v6 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    }
  }
  else
  {
    swift_release();
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1000B4ED0()
{
  return sub_1000B4EE8((uint64_t (*)(uint64_t))sub_1000AD690);
}

uint64_t sub_1000B4EE8(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for PeopleView() - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

uint64_t sub_1000B4F5C@<X0>(uint64_t a1@<X8>)
{
  return sub_1000AD54C(*(void *)(v1 + 16), a1);
}

uint64_t sub_1000B4F78()
{
  uint64_t v1 = (int *)(type metadata accessor for PeopleView() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  sub_10004809C();
  sub_10004809C();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v5 = v0 + v3 + v1[13];
  sub_100012854(&qword_10010C7B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1000C6DC0();
    uint64_t v7 = *(void *)(v6 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    }
  }
  else
  {
    swift_release();
  }
  swift_release();

  return _swift_deallocObject(v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

uint64_t sub_1000B5134()
{
  uint64_t v1 = *(void *)(type metadata accessor for PeopleView() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_1000AD410(v0 + v2, v3);
}

uint64_t sub_1000B51C0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000B5228(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for FolderShareHeader_macOS()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for FolderShareHeader_macOS(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  a1[6] = a2[6];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for FolderShareHeader_macOS(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for FolderShareHeader_macOS(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

void *assignWithTake for FolderShareHeader_macOS(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[4];
  a1[3] = a2[3];
  a1[4] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[6];
  a1[5] = a2[5];
  a1[6] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FolderShareHeader_macOS(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FolderShareHeader_macOS(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FolderShareHeader_macOS()
{
  return &type metadata for FolderShareHeader_macOS;
}

ValueMetadata *type metadata accessor for AddPeopleRow_iOS()
{
  return &type metadata for AddPeopleRow_iOS;
}

uint64_t destroy for PostShareHeader_iOS()
{
  swift_release();

  return swift_bridgeObjectRelease();
}

void *_s37com_apple_CloudSharingUI_CloudSharing19PostShareHeader_iOSVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for PostShareHeader_iOS(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for PostShareHeader_iOS(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for PostShareHeader_iOS()
{
  return &type metadata for PostShareHeader_iOS;
}

unint64_t sub_1000B5648()
{
  unint64_t result = qword_10010E950;
  if (!qword_10010E950)
  {
    sub_100013128(&qword_10010E958);
    sub_100013128(&qword_10010E4E0);
    sub_1000C6DE0();
    sub_10001E454(&qword_10010E530, &qword_10010E4E0);
    sub_1000B5228(&qword_10010DE18, (void (*)(uint64_t))&type metadata accessor for StackNavigationViewStyle);
    swift_getOpaqueTypeConformance2();
    sub_100013128(&qword_10010E4C8);
    sub_1000C6AE0();
    sub_100013128(&qword_10010E4C0);
    sub_10001E454(&qword_10010E528, &qword_10010E4C0);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010E950);
  }
  return result;
}

uint64_t sub_1000B5824()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000B5840()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000B585C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000B5878()
{
  return sub_1000C6C70();
}

uint64_t sub_1000B589C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000B4634(a1, a2, a3, a4, &qword_10010E968, (uint64_t (*)(char *))&EnvironmentValues.textCase.setter);
}

uint64_t sub_1000B58D0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 224);
  uint64_t v3 = *(void *)(a1 + 232);
  char v4 = *(unsigned char *)(a1 + 240);
  swift_retain();
  swift_retain();
  sub_100039224(v2, v3, v4);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_1000B594C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 200);
  uint64_t v3 = *(void *)(a1 + 208);
  char v4 = *(unsigned char *)(a1 + 216);
  swift_release();
  swift_release();
  sub_100039234(v2, v3, v4);
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1000B59D0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000B5A08(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000B5A40@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_1000C6CA0();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_1000B5A74()
{
  return sub_1000C6CB0();
}

uint64_t sub_1000B5AA4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 136);
  uint64_t v3 = *(void *)(a1 + 144);
  char v4 = *(unsigned char *)(a1 + 152);
  uint64_t v5 = *(void *)(a1 + 168);
  uint64_t v6 = *(void *)(a1 + 176);
  uint64_t v7 = *(void *)(a1 + 184);
  uint64_t v8 = *(void *)(a1 + 192);
  uint64_t v9 = *(void *)(a1 + 200);
  uint64_t v12 = *(void *)(a1 + 216);
  uint64_t v13 = *(void *)(a1 + 208);
  uint64_t v11 = *(void *)(a1 + 224);
  sub_1000B5B78(*(void *)(a1 + 24));
  sub_100039224(v2, v3, v4);
  swift_bridgeObjectRetain();
  sub_100097D08(v5, v6, v7, v8);
  sub_100097D08(v9, v13, v12, v11);
  return a1;
}

uint64_t sub_1000B5B78(uint64_t result)
{
  if (result)
  {
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_1000B5BC8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 112);
  uint64_t v3 = *(void *)(a1 + 120);
  char v4 = *(unsigned char *)(a1 + 128);
  uint64_t v5 = *(void *)(a1 + 144);
  uint64_t v6 = *(void *)(a1 + 152);
  uint64_t v7 = *(void *)(a1 + 160);
  uint64_t v8 = *(void *)(a1 + 168);
  uint64_t v9 = *(void *)(a1 + 176);
  uint64_t v12 = *(void *)(a1 + 192);
  uint64_t v13 = *(void *)(a1 + 184);
  uint64_t v11 = *(void *)(a1 + 200);
  sub_1000B5C9C(*(void *)a1);
  sub_100039234(v2, v3, v4);
  swift_bridgeObjectRelease();
  sub_100097D4C(v5, v6, v7, v8);
  sub_100097D4C(v9, v13, v12, v11);
  return a1;
}

uint64_t sub_1000B5C9C(uint64_t result)
{
  if (result)
  {
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1000B5CE8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000C6C40();
  *a1 = result;
  return result;
}

uint64_t sub_1000B5D14()
{
  return sub_1000C6C50();
}

unint64_t sub_1000B5D44()
{
  unint64_t result = qword_10010E998;
  if (!qword_10010E998)
  {
    sub_100013128(&qword_10010E980);
    sub_1000B5DE4();
    sub_10001E454(&qword_10010E9D8, &qword_10010E9E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010E998);
  }
  return result;
}

unint64_t sub_1000B5DE4()
{
  unint64_t result = qword_10010E9A0;
  if (!qword_10010E9A0)
  {
    sub_100013128(&qword_10010E978);
    sub_1000B5E84();
    sub_10001E454(&qword_10010E9C8, &qword_10010E9D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010E9A0);
  }
  return result;
}

unint64_t sub_1000B5E84()
{
  unint64_t result = qword_10010E9A8;
  if (!qword_10010E9A8)
  {
    sub_100013128(&qword_10010E970);
    sub_10001E454(&qword_10010E9B0, &qword_10010E9B8);
    sub_10001E454(&qword_10010E9C0, &qword_10010E960);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010E9A8);
  }
  return result;
}

uint64_t sub_1000B5F48()
{
  return sub_10001E454(&qword_10010E9E8, &qword_10010E9F0);
}

unint64_t sub_1000B5F88()
{
  unint64_t result = qword_10010E9F8;
  if (!qword_10010E9F8)
  {
    sub_100013128(&qword_10010E990);
    sub_1000B6028();
    sub_10001E454(&qword_10010EA18, &qword_10010EA20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010E9F8);
  }
  return result;
}

unint64_t sub_1000B6028()
{
  unint64_t result = qword_10010EA00;
  if (!qword_10010EA00)
  {
    sub_100013128(&qword_10010E988);
    sub_10001E454(&qword_10010EA08, &qword_10010EA10);
    sub_10001E454(&qword_10010E9C0, &qword_10010E960);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10010EA00);
  }
  return result;
}

uint64_t sub_1000B60FC(uint64_t a1)
{
  uint64_t v104 = sub_1000C66D0();
  uint64_t v2 = *(void *)(v104 - 8);
  uint64_t v3 = __chkstk_darwin(v104);
  uint64_t v5 = (char *)v85 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  Swift::String_optional v105 = (char *)v85 - v6;
  uint64_t v7 = sub_100012854((uint64_t *)&unk_10010BDD0);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v101 = (uint64_t)v85 - v11;
  uint64_t v87 = *(void *)(a1 + 16);
  if (!v87)
  {
    id v14 = _swiftEmptyArrayStorage;
LABEL_69:
    swift_getKeyPath();
    swift_getKeyPath();
    id v107 = v14;
    swift_retain();
    return sub_1000C67F0();
  }
  uint64_t v86 = a1 + 32;
  Swift::String_optional v103 = (void (**)(char *, uint64_t))(v2 + 8);
  v85[1] = a1;
  swift_bridgeObjectRetain();
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  id v14 = _swiftEmptyArrayStorage;
  *(void *)&long long v15 = 136315394;
  long long v95 = v15;
  Swift::String v94 = (char *)&type metadata for Any + 8;
  *(void *)&long long v15 = 67109120;
  long long v98 = v15;
  uint64_t v97 = v5;
  Swift::String_optional v102 = v10;
  while (1)
  {
    char v17 = (uint64_t *)(v86 + 16 * v12);
    uint64_t v18 = *v17;
    unint64_t v19 = v17[1];
    if ((v19 & 0x1000000000000000) != 0) {
      Swift::Int v20 = sub_1000C74D0();
    }
    else {
      Swift::Int v20 = sub_1000C74E0();
    }
    Swift::Int v21 = v20;
    id v22 = objc_allocWithZone((Class)NSDataDetector);
    id v107 = 0;
    swift_bridgeObjectRetain();
    id v23 = [v22 initWithTypes:32 error:&v107];
    if (!v23)
    {
      id v83 = v107;
      sub_1000C6490();

      swift_willThrow();
      goto LABEL_74;
    }
    char v24 = v23;
    id v25 = v107;
    NSString v26 = sub_1000C7400();
    id v100 = v24;
    id v27 = objc_msgSend(v24, "matchesInString:options:range:", v26, 0, 0, v21);

    unint64_t v99 = sub_1000B730C();
    unint64_t v28 = sub_1000C7540();

    swift_bridgeObjectRetain();
    uint64_t v91 = v18;
    unint64_t v29 = (unint64_t)sub_1000B74D8(v28);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v92 = v19;
    unint64_t v90 = v14;
    uint64_t v89 = v12;
    uint64_t v93 = v13;
    uint64_t v96 = HIBYTE(v19) & 0xF;
    if (v29 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v30 = sub_1000C7990();
      if (v30)
      {
LABEL_10:
        uint64_t v31 = 4;
        while (1)
        {
          if ((v29 & 0xC000000000000001) != 0) {
            id v32 = (id)sub_1000C78F0();
          }
          else {
            id v32 = *(id *)(v29 + 8 * v31);
          }
          uint64_t v33 = v32;
          uint64_t v34 = v31 - 3;
          if (__OFADD__(v31 - 4, 1))
          {
            __break(1u);
LABEL_71:
            __break(1u);
          }
          id v35 = [v32 URL];
          if (v35)
          {
            uint64_t v36 = v35;
            sub_1000C64F0();

            uint64_t v37 = sub_1000C6530();
            (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v10, 0, 1, v37);
          }
          else
          {
            uint64_t v37 = sub_1000C6530();
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v10, 1, 1, v37);
          }
          uint64_t v38 = (uint64_t)v10;
          uint64_t v39 = v101;
          sub_10001A178(v38, v101);
          sub_1000C6530();
          uint64_t v40 = *(void *)(v37 - 8);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v39, 1, v37) == 1)
          {
            sub_100088B98(v39);
            char v41 = 0;
          }
          else
          {
            uint64_t v42 = sub_1000C6510();
            uint64_t v43 = v39;
            uint64_t v44 = v42;
            uint64_t v46 = v45;
            (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v43, v37);
            if (v46)
            {
              if (v44 == 0x6F746C69616DLL && v46 == 0xE600000000000000)
              {
                swift_bridgeObjectRelease();
                char v41 = 1;
              }
              else
              {
                char v41 = sub_1000C7A50();
                swift_bridgeObjectRelease();
              }
            }
            else
            {
              char v41 = 0;
            }
          }
          sub_1000C66B0();
          uint64_t v47 = sub_1000C66C0();
          os_log_type_t v48 = sub_1000C7690();
          if (os_log_type_enabled(v47, v48))
          {
            uint64_t v49 = swift_slowAlloc();
            *(_DWORD *)uint64_t v49 = v98;
            *(_DWORD *)(v49 + 4) = v41 & 1;
            _os_log_impl((void *)&_mh_execute_header, v47, v48, "isValid(address...) is link, valid email: %{BOOL}d", (uint8_t *)v49, 8u);
            swift_slowDealloc();
          }

          (*v103)(v105, v104);
          if (v41) {
            break;
          }
          ++v31;
          uint64_t v10 = v102;
          if (v34 == v30) {
            goto LABEL_30;
          }
        }

        swift_bridgeObjectRelease_n();
        uint64_t v74 = v91;
        unint64_t v75 = v92;
        uint64_t v76 = sub_1000B6C4C();
        uint64_t v10 = v102;
        if (v76[2])
        {
          uint64_t v74 = v76[4];
          unint64_t v77 = v76[5];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          char v78 = 0;
          unint64_t v75 = v77;
        }
        else
        {
          swift_bridgeObjectRelease();
          char v78 = 0;
        }
        id v14 = v90;
        uint64_t v16 = v89;
        uint64_t v13 = v93;
        goto LABEL_57;
      }
    }
    else
    {
      uint64_t v30 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v30) {
        goto LABEL_10;
      }
    }
LABEL_30:

    swift_bridgeObjectRelease_n();
    uint64_t v50 = (void *)((v92 & 0x1000000000000000) != 0 ? sub_1000C74D0() : sub_1000C74E0());
    id v100 = v50;
    uint64_t v51 = v97;
    uint64_t v52 = v93;
    id v53 = objc_allocWithZone((Class)NSDataDetector);
    id v107 = 0;
    id v54 = [v53 initWithTypes:2048 error:&v107];
    if (!v54) {
      break;
    }
    uint64_t v55 = v54;
    id v56 = v107;
    NSString v57 = sub_1000C7400();
    id v58 = objc_msgSend(v55, "matchesInString:options:range:", v57, 0, 0, v100);

    unint64_t v59 = sub_1000C7540();
    swift_bridgeObjectRetain();
    unint64_t v60 = (unint64_t)sub_1000B74D8(v59);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v93 = v52;
    id v88 = v55;
    if (v60 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v61 = sub_1000C7990();
      if (!v61) {
        goto LABEL_3;
      }
LABEL_36:
      unint64_t v99 = v60 & 0xC000000000000001;
      uint64_t v62 = 4;
      uint64_t v96 = v60;
      while (1)
      {
        if (v99) {
          id v63 = (id)sub_1000C78F0();
        }
        else {
          id v63 = *(id *)(v60 + 8 * v62);
        }
        uint64_t v64 = v63;
        uint64_t v65 = v62 - 3;
        if (__OFADD__(v62 - 4, 1)) {
          goto LABEL_71;
        }
        if ([v63 range]) {
          BOOL v67 = 0;
        }
        else {
          BOOL v67 = v66 == v100;
        }
        int v68 = v67;
        sub_1000C66B0();
        char v69 = sub_1000C66C0();
        os_log_type_t v70 = sub_1000C7690();
        if (os_log_type_enabled(v69, v70))
        {
          uint64_t v71 = swift_slowAlloc();
          id v107 = (id)swift_slowAlloc();
          *(_DWORD *)uint64_t v71 = v95;
          uint64_t v106 = 2048;
          type metadata accessor for CheckingType(0);
          uint64_t v72 = sub_1000C7450();
          *(void *)(v71 + 4) = sub_1000720D0(v72, v73, (uint64_t *)&v107);
          uint64_t v51 = v97;
          swift_bridgeObjectRelease();
          *(_WORD *)(v71 + 12) = 1024;
          *(_DWORD *)(v71 + 14) = v68;
          _os_log_impl((void *)&_mh_execute_header, v69, v70, "isValid(address...) is %s, valid: %{BOOL}d", (uint8_t *)v71, 0x12u);
          swift_arrayDestroy();
          unint64_t v60 = v96;
          swift_slowDealloc();
          uint64_t v10 = v102;
          swift_slowDealloc();
        }

        (*v103)(v51, v104);
        if (v68) {
          break;
        }
        ++v62;
        if (v65 == v61) {
          goto LABEL_3;
        }
      }

      swift_bridgeObjectRelease_n();
      char v78 = 1;
      id v14 = v90;
      uint64_t v16 = v89;
      unint64_t v75 = v92;
      uint64_t v13 = v93;
      uint64_t v74 = v91;
LABEL_57:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v14 = sub_1000B71E8(0, v14[2] + 1, 1, v14);
      }
      unint64_t v80 = v14[2];
      unint64_t v79 = v14[3];
      if (v80 >= v79 >> 1) {
        id v14 = sub_1000B71E8((void *)(v79 > 1), v80 + 1, 1, v14);
      }
      v14[2] = v80 + 1;
      uint64_t v81 = &v14[3 * v80];
      v81[4] = v74;
      v81[5] = v75;
      *((unsigned char *)v81 + 48) = v78;
      goto LABEL_4;
    }
    uint64_t v61 = *(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v61) {
      goto LABEL_36;
    }
LABEL_3:

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    id v14 = v90;
    uint64_t v16 = v89;
    uint64_t v13 = v93;
LABEL_4:
    uint64_t v12 = v16 + 1;
    if (v12 == v87)
    {
      swift_bridgeObjectRelease();
      goto LABEL_69;
    }
  }
  id v84 = v107;
  sub_1000C6490();

  swift_willThrow();
LABEL_74:
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

void *sub_1000B6C4C()
{
  uint64_t v0 = sub_1000C66D0();
  __chkstk_darwin(v0);
  NSString v1 = sub_1000C7400();
  id v2 = objc_allocWithZone((Class)NSRegularExpression);
  id v3 = sub_1000B6FFC(0xD00000000000002FLL, 0x80000001000D9C50, 1);
  uint64_t v4 = sub_1000C7490();
  NSString v5 = sub_1000C7400();
  id v6 = objc_msgSend(v3, "matchesInString:options:range:", v5, 1, 0, v4);

  sub_1000B730C();
  unint64_t v7 = sub_1000C7540();

  id v8 = v1;
  uint64_t v9 = sub_1000B775C(v7, v8);
  swift_bridgeObjectRelease();

  return v9;
}

id sub_1000B6FFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  NSString v5 = sub_1000C7400();
  swift_bridgeObjectRelease();
  id v10 = 0;
  id v6 = [v3 initWithPattern:v5 options:a3 error:&v10];

  if (v6)
  {
    id v7 = v10;
  }
  else
  {
    id v8 = v10;
    sub_1000C6490();

    swift_willThrow();
  }
  return v6;
}

void *sub_1000B70D8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100012854(&qword_10010EA30);
      id v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      id v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1000B7668(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1000B71E8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100012854(&qword_10010EA38);
      id v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      id v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1000B78F0(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

unint64_t sub_1000B730C()
{
  unint64_t result = qword_10010EA28;
  if (!qword_10010EA28)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10010EA28);
  }
  return result;
}

uint64_t sub_1000B734C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000B736C(a1, a2, a3, *v3);
  *id v3 = (char *)result;
  return result;
}

uint64_t sub_1000B736C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100012854(&qword_10010EA30);
    id v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    id v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  id v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1000C79D0();
  __break(1u);
  return result;
}

void *sub_1000B74D8(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v2)
  {
    while (1)
    {
      unint64_t v11 = v1;
      unint64_t v3 = 0;
      unint64_t v4 = v1 & 0xC000000000000001;
      uint64_t v5 = v1 & 0xFFFFFFFFFFFFFF8;
      unint64_t v12 = v1 & 0xC000000000000001;
      while (v4)
      {
        id v6 = (id)sub_1000C78F0();
LABEL_9:
        int64_t v7 = v6;
        unint64_t v8 = v3 + 1;
        if (__OFADD__(v3, 1)) {
          goto LABEL_15;
        }
        [v6 range];
        sub_1000C7650();
        if (v9)
        {
        }
        else
        {
          sub_1000C7910();
          sub_1000C7940();
          sub_1000C7950();
          sub_1000C7920();
          unint64_t v1 = v11;
          unint64_t v4 = v12;
        }
        ++v3;
        if (v8 == v2) {
          return _swiftEmptyArrayStorage;
        }
      }
      if (v3 < *(void *)(v5 + 16)) {
        break;
      }
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      uint64_t v2 = sub_1000C7990();
      if (!v2) {
        return _swiftEmptyArrayStorage;
      }
    }
    id v6 = *(id *)(v1 + 8 * v3 + 32);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1000B7668(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1000C79D0();
  __break(1u);
  return result;
}

void *sub_1000B775C(unint64_t a1, void *a2)
{
  unint64_t v3 = v2;
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (!v5) {
      return _swiftEmptyArrayStorage;
    }
    uint64_t result = (void *)sub_1000B734C(0, v5 & ~(v5 >> 63), 0);
    if (v5 < 0) {
      break;
    }
    unint64_t v18 = v3;
    uint64_t v7 = 0;
    while (v5 != v7)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v8 = (id)sub_1000C78F0();
      }
      else {
        id v8 = *(id *)(a1 + 8 * v7 + 32);
      }
      char v9 = v8;
      id v10 = objc_msgSend(v8, "range", v18);
      id v12 = objc_msgSend(a2, "substringWithRange:", v10, v11);
      uint64_t v13 = sub_1000C7440();
      uint64_t v15 = v14;

      unint64_t v3 = _swiftEmptyArrayStorage[2];
      unint64_t v16 = _swiftEmptyArrayStorage[3];
      if (v3 >= v16 >> 1) {
        sub_1000B734C(v16 > 1, v3 + 1, 1);
      }
      ++v7;
      _swiftEmptyArrayStorage[2] = v3 + 1;
      char v17 = &_swiftEmptyArrayStorage[2 * v3];
      void v17[4] = v13;
      v17[5] = v15;
      if (v5 == v7) {
        return _swiftEmptyArrayStorage;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1000C7990();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1000B78F0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1000C79D0();
  __break(1u);
  return result;
}

uint64_t _sSo9CNContactC025com_apple_CloudSharingUI_dE0E2idSSvg_0()
{
  id v1 = [v0 identifier];
  uint64_t v2 = sub_1000C7440();

  return v2;
}

void sub_1000B7A48(uint64_t *a1@<X8>)
{
  id v3 = [*v1 identifier];
  uint64_t v4 = sub_1000C7440();
  uint64_t v6 = v5;

  *a1 = v4;
  a1[1] = v6;
}

id sub_1000B7AD0()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1000B7BBC()
{
  return type metadata accessor for ContactsObserver();
}

uint64_t type metadata accessor for ContactsObserver()
{
  uint64_t result = qword_10010EA90;
  if (!qword_10010EA90) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000B7C10()
{
  sub_1000B7CBC();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1000B7CBC()
{
  if (!qword_10010EAA0)
  {
    sub_100013128(&qword_10010EAA8);
    unint64_t v0 = sub_1000C6800();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10010EAA0);
    }
  }
}

ValueMetadata *type metadata accessor for ShareSaveStatus()
{
  return &type metadata for ShareSaveStatus;
}

ValueMetadata *type metadata accessor for FolderShareStage()
{
  return &type metadata for FolderShareStage;
}

uint64_t getEnumTagSinglePayload for SaveStage(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFB)
  {
    unsigned int v2 = a2 + 5;
    if (a2 + 5 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 5;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 5;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1000B7DF0);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 5;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  if (v7 < 2) {
    return 0;
  }
  unsigned int v8 = (v7 + 2147483646) & 0x7FFFFFFF;
  uint64_t result = v8 - 3;
  if (v8 <= 3) {
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SaveStage(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 5;
  if (a3 + 5 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFB) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v7 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x1000B7ED8);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

uint64_t sub_1000B7F00(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  BOOL v2 = v1 >= 2;
  int v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2) {
    return (v3 + 1);
  }
  else {
    return 0;
  }
}

unsigned char *sub_1000B7F1C(unsigned char *result, int a2)
{
  if (a2) {
    *uint64_t result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for SaveStage()
{
  return &type metadata for SaveStage;
}

uint64_t getEnumTagSinglePayload for AddAddressesStage(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AddAddressesStage(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000B80A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AddAddressesStage()
{
  return &type metadata for AddAddressesStage;
}

uint64_t getEnumTagSinglePayload for CreateOrLoadStage(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CreateOrLoadStage(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000B8234);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CreateOrLoadStage()
{
  return &type metadata for CreateOrLoadStage;
}

uint64_t destroy for ShareAddress()
{
  return sub_1000741E8();
}

uint64_t _s37com_apple_CloudSharingUI_CloudSharing12ShareAddressOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_1000741E0();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for ShareAddress(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_1000741E0();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_1000741E8();
  return a1;
}

__n128 initializeWithTake for ShareAddress(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for ShareAddress(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_1000741E8();
  return a1;
}

uint64_t getEnumTagSinglePayload for ShareAddress(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ShareAddress(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}