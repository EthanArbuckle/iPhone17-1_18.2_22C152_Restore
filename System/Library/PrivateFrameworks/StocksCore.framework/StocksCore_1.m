uint64_t sub_1AFDCD0D4()
{
  return sub_1AFDD0064(&qword_1EB8168D0);
}

uint64_t sub_1AFDCD0F8(uint64_t a1)
{
  return sub_1AFDCCF04(a1, 0xD00000000000002BLL, 0x80000001AFFF3750, &qword_1EB811058);
}

uint64_t sub_1AFDCD11C()
{
  return sub_1AFDD0064(&qword_1EB811068);
}

uint64_t sub_1AFDCD140(uint64_t a1)
{
  return sub_1AFDCD31C(a1, 0, 0xD00000000000002ELL, 0x80000001AFFF3720, (uint64_t *)&unk_1EB811070);
}

uint64_t sub_1AFDCD168()
{
  return sub_1AFDD0064(&qword_1EB811080);
}

uint64_t sub_1AFDCD18C()
{
  uint64_t v0 = sub_1AFFC9C58();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  v3 = (char *)v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFDD09F8(0, &qword_1E9AFAC30);
  v5[3] = 3;
  v5[2] = 1;
  v5[1] = 5;
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB3F8], v0);
  uint64_t result = sub_1AFFC9CC8();
  qword_1E9AFABF8 = result;
  return result;
}

uint64_t sub_1AFDCD2D0()
{
  return sub_1AFDD0064(&qword_1E9AF8CC8);
}

uint64_t sub_1AFDCD2F4(uint64_t a1)
{
  return sub_1AFDCD31C(a1, 1, 0xD000000000000027, 0x80000001AFFF36F0, &qword_1E9AFAC00);
}

uint64_t sub_1AFDCD31C(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v7 = sub_1AFFC9C58();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_1AFFC9C68();
  double v12 = MEMORY[0x1F4188790](v11);
  (*(void (**)(unsigned char *, void, double))(v14 + 104))(&v16[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x1E4FAB410], v12);
  (*(void (**)(unsigned char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FAB3F8], v7);
  v16[15] = a2;
  sub_1AFDD09F8(0, (unint64_t *)&qword_1EB81ABA8);
  swift_allocObject();
  uint64_t result = sub_1AFFC9CE8();
  *a5 = result;
  return result;
}

uint64_t sub_1AFDCD4F0()
{
  return sub_1AFDD0064(&qword_1E9AF8CD0);
}

uint64_t sub_1AFDCD514(uint64_t a1)
{
  return sub_1AFDCDCCC(a1, MEMORY[0x1E4FAB3F8], 0xD000000000000022, 0x80000001AFFF36C0, &qword_1EB817C40);
}

uint64_t sub_1AFDCD540()
{
  return sub_1AFDD0064(&qword_1EB817C48);
}

uint64_t sub_1AFDCD564()
{
  uint64_t v0 = sub_1AFFC9C68();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1AFFC9C58();
  double v5 = MEMORY[0x1F4188790](v4);
  (*(void (**)(char *, void, double))(v7 + 104))((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4FAB400], v5);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB410], v0);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1AFDD09F8(0, &qword_1EB819B78);
  swift_allocObject();
  uint64_t result = sub_1AFFC9CE8();
  qword_1EB811048 = result;
  return result;
}

uint64_t sub_1AFDCD72C()
{
  return sub_1AFDD0064(&qword_1EB811050);
}

uint64_t sub_1AFDCD750(uint64_t a1)
{
  return sub_1AFDCE188(a1, 0xD00000000000002DLL, 0x80000001AFFF3660, &qword_1EB811940);
}

uint64_t sub_1AFDCD774()
{
  return sub_1AFDD0064(&qword_1EB811948);
}

uint64_t sub_1AFDCD798(uint64_t a1)
{
  return sub_1AFDCCF04(a1, 0xD000000000000020, 0x80000001AFFF3630, &qword_1EB817BE0);
}

uint64_t sub_1AFDCD7BC()
{
  return sub_1AFDD0064(&qword_1EB817BF0);
}

uint64_t sub_1AFDCD7E0(uint64_t a1)
{
  return sub_1AFDCCF04(a1, 0xD000000000000027, 0x80000001AFFF3600, &qword_1EB817C08);
}

uint64_t sub_1AFDCD804()
{
  return sub_1AFDD0064(&qword_1EB817C18);
}

uint64_t sub_1AFDCD828(uint64_t a1)
{
  return sub_1AFDCCF04(a1, 0xD000000000000024, 0x80000001AFFF35D0, &qword_1EB817BF8);
}

uint64_t sub_1AFDCD84C()
{
  return sub_1AFDD0064(&qword_1EB817C00);
}

uint64_t sub_1AFDCD870(uint64_t a1)
{
  return sub_1AFDCCF04(a1, 0xD000000000000020, 0x80000001AFFF35A0, &qword_1EB811018);
}

uint64_t sub_1AFDCD894()
{
  return sub_1AFDD0064(&qword_1EB811028);
}

uint64_t sub_1AFDCD8B8(uint64_t a1)
{
  return sub_1AFDCCF04(a1, 0xD00000000000002ALL, 0x80000001AFFF3570, (uint64_t *)&unk_1EB811AC0);
}

uint64_t sub_1AFDCD8DC()
{
  return sub_1AFDD0064(&qword_1EB811AD0);
}

uint64_t sub_1AFDCD900()
{
  uint64_t v0 = sub_1AFFC9C58();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  v3 = &v9[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_1AFFC9C68();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1AFDD0AEC(0, &qword_1EB819B68, (void (*)(void))sub_1AFDD0950);
  v9[15] = 0;
  if (qword_1EB81AB78 != -1) {
    swift_once();
  }
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v7, qword_1EB81AB68 + OBJC_IVAR____TtC10StocksCore8AppGroup_settingsDomain, v4);
  (*(void (**)(unsigned char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  sub_1AFDD08A4(0, &qword_1EB81A0D8, &qword_1EB819B58);
  sub_1AFDD0BA0(0, &qword_1EB819B58);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1AFFD0DC0;
  v9[14] = 0;
  sub_1AFFC9C78();
  v9[13] = 1;
  sub_1AFFC9C78();
  v9[12] = 2;
  sub_1AFFC9C78();
  sub_1AFDD09A4();
  uint64_t result = sub_1AFFC9C98();
  qword_1EB819B28 = result;
  return result;
}

uint64_t sub_1AFDCDC7C()
{
  return sub_1AFDD0064(&qword_1EB818A38);
}

uint64_t sub_1AFDCDCA0(uint64_t a1)
{
  return sub_1AFDCDCCC(a1, MEMORY[0x1E4FAB400], 0xD000000000000025, 0x80000001AFFF3520, &qword_1EB819AD0);
}

uint64_t sub_1AFDCDCCC(uint64_t a1, unsigned int *a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v7 = sub_1AFFC9C58();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_1AFFC9C68();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = &v16[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1EB81AB78 != -1) {
    swift_once();
  }
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v12 + 16))(v14, qword_1EB81AB68 + OBJC_IVAR____TtC10StocksCore8AppGroup_settingsDomain, v11);
  (*(void (**)(unsigned char *, void, uint64_t))(v8 + 104))(v10, *a2, v7);
  v16[15] = 0;
  sub_1AFDD09F8(0, (unint64_t *)&qword_1EB81ABA8);
  swift_allocObject();
  uint64_t result = sub_1AFFC9CE8();
  *a5 = result;
  return result;
}

uint64_t sub_1AFDCDEE0()
{
  return sub_1AFDD0064(&qword_1EB819AE0);
}

uint64_t sub_1AFDCDF04(uint64_t a1)
{
  return sub_1AFDCDCCC(a1, MEMORY[0x1E4FAB400], 0xD00000000000002BLL, 0x80000001AFFF34F0, &qword_1EB819B00);
}

uint64_t sub_1AFDCDF30()
{
  return sub_1AFDD0064(&qword_1EB818A28);
}

uint64_t sub_1AFDCDF54()
{
  uint64_t v0 = sub_1AFFC9C68();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1AFFC9C58();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFFC9C08();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB400], v4);
  if (qword_1EB81AB78 != -1) {
    swift_once();
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, qword_1EB81AB68 + OBJC_IVAR____TtC10StocksCore8AppGroup_settingsDomain, v0);
  uint64_t result = sub_1AFFC9BE8();
  qword_1EB819B20 = result;
  return result;
}

uint64_t sub_1AFDCE140()
{
  return sub_1AFDD0064(&qword_1EB818A30);
}

uint64_t sub_1AFDCE164(uint64_t a1)
{
  return sub_1AFDCE188(a1, 0xD000000000000029, 0x80000001AFFF3480, &qword_1EB819AE8);
}

uint64_t sub_1AFDCE188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5 = sub_1AFFC9C58();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1AFFC9C68();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB81AB78 != -1) {
    swift_once();
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, qword_1EB81AB68 + OBJC_IVAR____TtC10StocksCore8AppGroup_settingsDomain, v9);
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FAB400], v5);
  v14[0] = 0;
  v14[1] = 0xE000000000000000;
  sub_1AFDD09F8(0, &qword_1EB819B78);
  swift_allocObject();
  uint64_t result = sub_1AFFC9CE8();
  *a4 = result;
  return result;
}

uint64_t sub_1AFDCE3A4()
{
  return sub_1AFDD0064(&qword_1EB819AF8);
}

uint64_t sub_1AFDCE3C8(uint64_t a1)
{
  return sub_1AFDCE188(a1, 0xD000000000000031, 0x80000001AFFF3440, &qword_1EB819B08);
}

uint64_t sub_1AFDCE3EC()
{
  return sub_1AFDD0064(&qword_1EB818970);
}

uint64_t sub_1AFDCE410(uint64_t a1)
{
  return sub_1AFDCE188(a1, 0xD000000000000033, 0x80000001AFFF3400, &qword_1EB819B10);
}

uint64_t sub_1AFDCE434()
{
  return sub_1AFDD0064(&qword_1EB819B18);
}

uint64_t sub_1AFDCE458(uint64_t a1)
{
  return sub_1AFDCDCCC(a1, MEMORY[0x1E4FAB3F8], 0xD00000000000002ALL, 0x80000001AFFF33D0, &qword_1EB811038);
}

uint64_t sub_1AFDCE484()
{
  return sub_1AFDD0064(&qword_1EB811040);
}

uint64_t sub_1AFDCE4A8()
{
  uint64_t v11 = sub_1AFFC9C58();
  uint64_t v0 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1AFFC9C68();
  uint64_t v3 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFDD09F8(0, &qword_1EB8110C8);
  uint64_t v10 = v6;
  uint64_t v13 = 0x404E000000000000;
  sub_1AFDD08A4(0, &qword_1EB811340, &qword_1EB8110C0);
  sub_1AFDD0BA0(0, &qword_1EB8110C0);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1AFFD0600;
  uint64_t v12 = 0x3FF0000000000000;
  sub_1AFFC9C78();
  uint64_t v12 = 0x4014000000000000;
  sub_1AFFC9C78();
  uint64_t v12 = 0x4024000000000000;
  sub_1AFFC9C78();
  uint64_t v12 = 0x404E000000000000;
  sub_1AFFC9C78();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FAB410], v9);
  (*(void (**)(char *, void, uint64_t))(v0 + 104))(v2, *MEMORY[0x1E4FAB3F8], v11);
  uint64_t result = sub_1AFFC9C98();
  qword_1EB810A58 = result;
  return result;
}

uint64_t sub_1AFDCE80C()
{
  return sub_1AFDD0064(&qword_1EB810A68);
}

uint64_t sub_1AFDCE830()
{
  uint64_t v9 = sub_1AFFC9C58();
  uint64_t v0 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v2 = (char *)v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8[0] = sub_1AFFC9C68();
  uint64_t v3 = *(void *)(v8[0] - 8);
  MEMORY[0x1F4188790](v8[0]);
  uint64_t v5 = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFDD0AEC(0, &qword_1EB8167A0, (void (*)(void))sub_1AFDD0850);
  v8[1] = v6;
  char v13 = 0;
  sub_1AFDD08A4(0, &qword_1EB8167A8, &qword_1EB816798);
  sub_1AFDD0BA0(0, &qword_1EB816798);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1AFFD0DC0;
  char v12 = 0;
  sub_1AFFC9C78();
  char v11 = 1;
  sub_1AFFC9C78();
  char v10 = 2;
  sub_1AFFC9C78();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, *MEMORY[0x1E4FAB410], v8[0]);
  (*(void (**)(char *, void, uint64_t))(v0 + 104))(v2, *MEMORY[0x1E4FAB3F8], v9);
  sub_1AFDD08FC();
  uint64_t result = sub_1AFFC9C98();
  qword_1EB816780 = result;
  return result;
}

uint64_t sub_1AFDCEB74()
{
  return sub_1AFDD0064(&qword_1EB816790);
}

uint64_t sub_1AFDCEB98()
{
  uint64_t v9 = sub_1AFFC9C58();
  uint64_t v0 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v2 = (char *)v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8[0] = sub_1AFFC9C68();
  uint64_t v3 = *(void *)(v8[0] - 8);
  MEMORY[0x1F4188790](v8[0]);
  uint64_t v5 = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFDD0AEC(0, &qword_1EB8168D8, (void (*)(void))sub_1AFDD07A8);
  v8[1] = v6;
  char v13 = 0;
  sub_1AFDD08A4(0, &qword_1EB8183A0, &qword_1EB817C78);
  sub_1AFDD0BA0(0, &qword_1EB817C78);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1AFFD0DC0;
  char v12 = 0;
  sub_1AFFC9C78();
  char v11 = 1;
  sub_1AFFC9C78();
  char v10 = 2;
  sub_1AFFC9C78();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, *MEMORY[0x1E4FAB410], v8[0]);
  (*(void (**)(char *, void, uint64_t))(v0 + 104))(v2, *MEMORY[0x1E4FAB3F8], v9);
  sub_1AFDD07FC();
  uint64_t result = sub_1AFFC9C98();
  qword_1EB817BD0 = result;
  return result;
}

uint64_t sub_1AFDCEED0()
{
  return sub_1AFDD0064(&qword_1EB817BD8);
}

uint64_t sub_1AFDCEEF4(uint64_t a1)
{
  return sub_1AFDCDCCC(a1, MEMORY[0x1E4FAB400], 0xD000000000000032, 0x80000001AFFF32F0, &qword_1EB81A3B8);
}

uint64_t sub_1AFDCEF20()
{
  return sub_1AFDD0064(&qword_1EB81A300);
}

uint64_t sub_1AFDCEF44(uint64_t a1)
{
  return sub_1AFDCDCCC(a1, MEMORY[0x1E4FAB400], 0xD000000000000033, 0x80000001AFFF32B0, &qword_1EB8114C8);
}

uint64_t sub_1AFDCEF70()
{
  return sub_1AFDD0064(&qword_1EB8114D8);
}

uint64_t sub_1AFDCEF94(uint64_t a1)
{
  return sub_1AFDCCF04(a1, 0xD000000000000031, 0x80000001AFFF3270, &qword_1EB811030);
}

uint64_t sub_1AFDCEFB8()
{
  return sub_1AFDD0064(&qword_1EB810AC0);
}

uint64_t sub_1AFDCEFDC(uint64_t a1)
{
  return sub_1AFDCFA04(a1, MEMORY[0x1E4FAB278], 0xD00000000000002CLL, 0x80000001AFFF3240, &qword_1EB8110B0);
}

uint64_t sub_1AFDCF008()
{
  return sub_1AFDD0064(&qword_1EB8110B8);
}

uint64_t sub_1AFDCF02C(uint64_t a1)
{
  return sub_1AFDCFA04(a1, MEMORY[0x1E4FAB278], 0xD00000000000001FLL, 0x80000001AFFF3220, &qword_1EB811088);
}

uint64_t sub_1AFDCF058()
{
  return sub_1AFDD0064(&qword_1EB810AD0);
}

uint64_t sub_1AFDCF07C(uint64_t a1)
{
  return sub_1AFDCFA04(a1, MEMORY[0x1E4FAB278], 0xD00000000000001DLL, 0x80000001AFFF3200, &qword_1E9AFAC08);
}

uint64_t sub_1AFDCF0A8()
{
  return sub_1AFDD0064(&qword_1E9AF8CD8);
}

uint64_t sub_1AFDCF0CC(uint64_t a1)
{
  return sub_1AFDCFA04(a1, MEMORY[0x1E4FAB278], 0xD00000000000001CLL, 0x80000001AFFF31E0, &qword_1E9AFAC10);
}

uint64_t sub_1AFDCF0F8()
{
  return sub_1AFDD0064(&qword_1E9AF8CE0);
}

uint64_t sub_1AFDCF11C(uint64_t a1)
{
  return sub_1AFDCFA04(a1, MEMORY[0x1E4FAB278], 0xD000000000000022, 0x80000001AFFF31B0, &qword_1EB8110A0);
}

uint64_t sub_1AFDCF148()
{
  return sub_1AFDD0064(&qword_1EB8110A8);
}

uint64_t sub_1AFDCF16C(uint64_t a1)
{
  return sub_1AFDCF524(a1, 0xD000000000000022, 0x80000001AFFF3180, &qword_1EB817C58);
}

uint64_t sub_1AFDCF190()
{
  return sub_1AFDD0064(&qword_1EB817C60);
}

uint64_t sub_1AFDCF1B4(uint64_t a1)
{
  return sub_1AFDCFA04(a1, MEMORY[0x1E4FAB278], 0xD000000000000021, 0x80000001AFFF3150, &qword_1EB811090);
}

uint64_t sub_1AFDCF1E0()
{
  return sub_1AFDD0064(&qword_1EB811098);
}

uint64_t sub_1AFDCF204()
{
  uint64_t v0 = sub_1AFFC9C58();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1AFFC9C68();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1AFFC9BD8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  char v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFDD06EC();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4FAB278], v8);
  if (qword_1EB81AB78 != -1) {
    swift_once();
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, qword_1EB81AB68 + OBJC_IVAR____TtC10StocksCore8AppGroup_settingsDomain, v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  uint64_t result = sub_1AFFC9CB8();
  qword_1EB817C68 = result;
  return result;
}

uint64_t sub_1AFDCF494()
{
  return sub_1AFDD0064(&qword_1EB817C70);
}

uint64_t sub_1AFDCF4B8(uint64_t a1)
{
  return sub_1AFDCF524(a1, 0xD000000000000022, 0x80000001AFFF30F0, &qword_1EB810B18);
}

uint64_t sub_1AFDCF4DC()
{
  return sub_1AFDD0064(&qword_1EB810B28);
}

uint64_t sub_1AFDCF500(uint64_t a1)
{
  return sub_1AFDCF524(a1, 0xD000000000000024, 0x80000001AFFF30C0, &qword_1EB811950);
}

uint64_t sub_1AFDCF524(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  v18[2] = a3;
  v19 = a4;
  v18[1] = a2;
  uint64_t v4 = sub_1AFFC9C58();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1AFFC9C68();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  char v11 = (void *)((char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = sub_1AFFC9BD8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  v15 = (char *)v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFDD06EC();
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E4FAB278], v12);
  *char v11 = sub_1AFFCAE98();
  v11[1] = v16;
  (*(void (**)(uint64_t *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4FAB408], v8);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB400], v4);
  uint64_t result = sub_1AFFC9CB8();
  uint64_t *v19 = result;
  return result;
}

uint64_t sub_1AFDCF784()
{
  return sub_1AFDD0064(&qword_1EB811960);
}

uint64_t sub_1AFDCF7A8()
{
  uint64_t v0 = sub_1AFFC9C58();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1AFFC9BD8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFDD06EC();
  sub_1AFFCAE98();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB278], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  uint64_t result = sub_1AFFC9CA8();
  qword_1EB810A70 = result;
  return result;
}

uint64_t sub_1AFDCF964()
{
  return sub_1AFDD0064(&qword_1EB810A78);
}

uint64_t sub_1AFDCF988(uint64_t a1)
{
  return sub_1AFDCFA04(a1, MEMORY[0x1E4FAB278], 0xD000000000000020, 0x80000001AFFF3090, (uint64_t *)&unk_1EB8114E0);
}

uint64_t sub_1AFDCF9B4()
{
  return sub_1AFDD0064(&qword_1EB8114F0);
}

uint64_t sub_1AFDCF9D8(uint64_t a1)
{
  return sub_1AFDCFA04(a1, MEMORY[0x1E4FAB280], 0xD000000000000025, 0x80000001AFFF3060, &qword_1EB811A88);
}

uint64_t sub_1AFDCFA04(uint64_t a1, unsigned int *a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v16 = a5;
  uint64_t v6 = sub_1AFFC9C58();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1AFFC9BD8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFDD06EC();
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, *a2, v10);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FAB400], v6);
  uint64_t result = sub_1AFFC9CA8();
  *uint64_t v16 = result;
  return result;
}

uint64_t sub_1AFDCFBB4()
{
  return sub_1AFDD0064(&qword_1EB811A98);
}

uint64_t sub_1AFDCFBD8(uint64_t a1)
{
  return sub_1AFDCFC44(a1, 0xD000000000000018, 0x80000001AFFF3040, &qword_1E9AFAC18);
}

uint64_t sub_1AFDCFBFC()
{
  return sub_1AFDD0064(&qword_1E9AF8CF0);
}

uint64_t sub_1AFDCFC20(uint64_t a1)
{
  return sub_1AFDCFC44(a1, 0xD00000000000001BLL, 0x80000001AFFF3020, &qword_1E9AFAC20);
}

uint64_t sub_1AFDCFC44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5 = sub_1AFFC9C58();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_1AFFC9C68();
  double v10 = MEMORY[0x1F4188790](v9);
  uint64_t v12 = &v15[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *uint64_t v12 = 0xD00000000000001CLL;
  v12[1] = 0x80000001AFFF3000;
  (*(void (**)(void *, void, double))(v13 + 104))(v12, *MEMORY[0x1E4FAB408], v10);
  (*(void (**)(unsigned char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FAB3F8], v5);
  v15[15] = 0;
  sub_1AFDD09F8(0, (unint64_t *)&qword_1EB81ABA8);
  swift_allocObject();
  uint64_t result = sub_1AFFC9CE8();
  *a4 = result;
  return result;
}

uint64_t sub_1AFDCFE30()
{
  return sub_1AFDD0064(&qword_1E9AF8CF8);
}

uint64_t sub_1AFDCFE54()
{
  uint64_t v0 = sub_1AFFC9C58();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1AFFC9C68();
  double v5 = MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v7 = 0xD00000000000001CLL;
  v7[1] = 0x80000001AFFF3000;
  (*(void (**)(void *, void, double))(v8 + 104))(v7, *MEMORY[0x1E4FAB408], v5);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB3F8], v0);
  v10[1] = 0x4024000000000000;
  sub_1AFDD09F8(0, &qword_1EB8110C8);
  swift_allocObject();
  uint64_t result = sub_1AFFC9CE8();
  qword_1E9AFAC28 = result;
  return result;
}

uint64_t sub_1AFDD0040()
{
  return sub_1AFDD0064(qword_1E9AF8D00);
}

uint64_t sub_1AFDD0064(void *a1)
{
  if (*a1 != -1) {
    swift_once();
  }

  return sub_1AFFC8E48();
}

unint64_t sub_1AFDD00B4()
{
  unint64_t result = qword_1EB816E30;
  if (!qword_1EB816E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816E30);
  }
  return result;
}

unint64_t sub_1AFDD010C()
{
  unint64_t result = qword_1EB818EE0;
  if (!qword_1EB818EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818EE0);
  }
  return result;
}

unint64_t sub_1AFDD0164()
{
  unint64_t result = qword_1EB819508;
  if (!qword_1EB819508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819508);
  }
  return result;
}

unint64_t sub_1AFDD01BC()
{
  unint64_t result = qword_1EB816770;
  if (!qword_1EB816770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816770);
  }
  return result;
}

unint64_t sub_1AFDD0214()
{
  unint64_t result = qword_1EB816D18;
  if (!qword_1EB816D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816D18);
  }
  return result;
}

ValueMetadata *type metadata accessor for NewsProvider()
{
  return &type metadata for NewsProvider;
}

unsigned char *storeEnumTagSinglePayload for NewsEnvironment(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFDD034CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NewsEnvironment()
{
  return &type metadata for NewsEnvironment;
}

ValueMetadata *type metadata accessor for AppConfigurationSource()
{
  return &type metadata for AppConfigurationSource;
}

ValueMetadata *type metadata accessor for KVSCleanupPermission()
{
  return &type metadata for KVSCleanupPermission;
}

unsigned char *_s10StocksCore12NewsProviderOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFDD0470);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StocksDataServiceEnablement()
{
  return &type metadata for StocksDataServiceEnablement;
}

ValueMetadata *_s4NewsVMa()
{
  return &_s4NewsVN;
}

ValueMetadata *_s10MarketDataVMa()
{
  return &_s10MarketDataVN;
}

ValueMetadata *_s16AppConfigurationVMa()
{
  return &_s16AppConfigurationVN;
}

ValueMetadata *_s14IdentificationVMa()
{
  return &_s14IdentificationVN;
}

ValueMetadata *_s9WatchlistVMa()
{
  return &_s9WatchlistVN;
}

ValueMetadata *_s10DataSourceVMa()
{
  return &_s10DataSourceVN;
}

ValueMetadata *_s3SDSVMa()
{
  return &_s3SDSVN;
}

ValueMetadata *_s11PrivateDataVMa()
{
  return &_s11PrivateDataVN;
}

ValueMetadata *_s8FeaturesVMa()
{
  return &_s8FeaturesVN;
}

ValueMetadata *_s6WidgetVMa()
{
  return &_s6WidgetVN;
}

unint64_t sub_1AFDD0548()
{
  unint64_t result = qword_1EB816D20;
  if (!qword_1EB816D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816D20);
  }
  return result;
}

unint64_t sub_1AFDD059C()
{
  unint64_t result = qword_1EB816778;
  if (!qword_1EB816778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816778);
  }
  return result;
}

unint64_t sub_1AFDD05F0()
{
  unint64_t result = qword_1EB819510;
  if (!qword_1EB819510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819510);
  }
  return result;
}

unint64_t sub_1AFDD0644()
{
  unint64_t result = qword_1EB818EE8;
  if (!qword_1EB818EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818EE8);
  }
  return result;
}

unint64_t sub_1AFDD0698()
{
  unint64_t result = qword_1EB816E38;
  if (!qword_1EB816E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816E38);
  }
  return result;
}

void sub_1AFDD06EC()
{
  if (!qword_1EB819B70)
  {
    sub_1AFFC9BD8();
    sub_1AFDD0750();
    unint64_t v0 = sub_1AFFC9CD8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB819B70);
    }
  }
}

unint64_t sub_1AFDD0750()
{
  unint64_t result = qword_1EB819B48;
  if (!qword_1EB819B48)
  {
    sub_1AFFC9BD8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819B48);
  }
  return result;
}

unint64_t sub_1AFDD07A8()
{
  unint64_t result = qword_1EB816D10;
  if (!qword_1EB816D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816D10);
  }
  return result;
}

unint64_t sub_1AFDD07FC()
{
  unint64_t result = qword_1EB816D08;
  if (!qword_1EB816D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816D08);
  }
  return result;
}

unint64_t sub_1AFDD0850()
{
  unint64_t result = qword_1EB816768;
  if (!qword_1EB816768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816768);
  }
  return result;
}

void sub_1AFDD08A4(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1AFDD0BA0(255, a3);
    unint64_t v4 = sub_1AFFCBC98();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_1AFDD08FC()
{
  unint64_t result = qword_1EB816760;
  if (!qword_1EB816760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816760);
  }
  return result;
}

unint64_t sub_1AFDD0950()
{
  unint64_t result = qword_1EB819500;
  if (!qword_1EB819500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819500);
  }
  return result;
}

unint64_t sub_1AFDD09A4()
{
  unint64_t result = qword_1EB8194F8;
  if (!qword_1EB8194F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8194F8);
  }
  return result;
}

void sub_1AFDD09F8(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_1AFFC9CD8();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

unint64_t sub_1AFDD0A44()
{
  unint64_t result = qword_1EB818ED8;
  if (!qword_1EB818ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818ED8);
  }
  return result;
}

unint64_t sub_1AFDD0A98()
{
  unint64_t result = qword_1EB818ED0;
  if (!qword_1EB818ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818ED0);
  }
  return result;
}

void sub_1AFDD0AEC(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  if (!*a2)
  {
    a3();
    unint64_t v4 = sub_1AFFC9CD8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_1AFDD0B4C()
{
  unint64_t result = qword_1EB816E28;
  if (!qword_1EB816E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816E28);
  }
  return result;
}

void sub_1AFDD0BA0(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_1AFFC9C88();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

unint64_t sub_1AFDD0BE8()
{
  unint64_t result = qword_1EB816E20;
  if (!qword_1EB816E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816E20);
  }
  return result;
}

uint64_t sub_1AFDD0C3C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1AFDD0C50(uint64_t a1)
{
  sub_1AFFC9EF8();
  id v5 = sub_1AFDD0D74(a1);
  sub_1AFFC9EA8();
  sub_1AFDD1378(0, &qword_1EB811168, (uint64_t (*)(uint64_t))sub_1AFDD13DC, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  sub_1AFFCA758();
  uint64_t v2 = (void *)sub_1AFFCA5E8();
  sub_1AFDD12DC();
  uint64_t v3 = sub_1AFFCA668();

  swift_release();
  swift_release();

  return v3;
}

id sub_1AFDD0D74(uint64_t a1)
{
  void (*v7)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  void v14[536];

  MEMORY[0x1F4188790](a1);
  uint64_t v2 = v1;
  uint64_t v3 = v1[2];
  sub_1AFDD1410(0, (unint64_t *)&qword_1EB81A0E0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1AFFD05F0;
  uint64_t v5 = v2[6];
  uint64_t v6 = v2[7];
  __swift_project_boxed_opaque_existential_1(v2 + 3, v5);
  uint64_t v7 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v6 + 8);
  swift_unknownObjectRetain();
  v7(v14, v5, v6);
  uint64_t v8 = v14[164];
  uint64_t v9 = v14[165];
  sub_1AFFC8E38();
  sub_1AFD55D10((uint64_t)v14);
  *(void *)(v4 + 32) = v8;
  *(void *)(v4 + 40) = v9;
  double v10 = objc_allocWithZone(MEMORY[0x1E4F7E788]);
  uint64_t v11 = (void *)sub_1AFFCB1B8();
  swift_bridgeObjectRelease();
  uint64_t v12 = objc_msgSend(v10, sel_initWithContext_resourceIDs_downloadAssets_, v3, v11, 1);

  swift_unknownObjectRelease();
  return v12;
}

uint64_t sub_1AFDD0ED8(id *a1)
{
  uint64_t v2 = v1;
  sub_1AFDD1378(0, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v21 - v5;
  uint64_t v7 = sub_1AFFC96E8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  double v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v12 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)v21 - v13;
  id v15 = objc_msgSend(*a1, sel_fileURL, v12);
  if (!v15)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    goto LABEL_7;
  }
  uint64_t v16 = v15;
  sub_1AFFC9678();

  v17 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v17(v6, v10, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
LABEL_7:
    sub_1AFD48D50((uint64_t)v6);
    sub_1AFDD131C();
    swift_allocError();
    swift_willThrow();
    return v2;
  }
  v17(v14, v6, v7);
  uint64_t v18 = sub_1AFFC9708();
  if (!v1)
  {
    v21[0] = v18;
    v21[1] = v19;
    sub_1AFDD1410(0, &qword_1EB811120, MEMORY[0x1E4F277C0], MEMORY[0x1E4FAB088]);
    swift_allocObject();
    uint64_t v2 = sub_1AFFCA6F8();
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v14, v7);
  return v2;
}

uint64_t sub_1AFDD11C8()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StockFeedConfigService()
{
  return self;
}

uint64_t sub_1AFDD122C()
{
  sub_1AFDD12DC();
  sub_1AFFCA7C8();
  uint64_t v0 = (void *)sub_1AFFCA5E8();
  uint64_t v1 = sub_1AFFCA668();
  swift_release();

  return v1;
}

uint64_t sub_1AFDD12C0()
{
  return sub_1AFDD0C50(v0);
}

unint64_t sub_1AFDD12DC()
{
  unint64_t result = qword_1EB810AE8;
  if (!qword_1EB810AE8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB810AE8);
  }
  return result;
}

unint64_t sub_1AFDD131C()
{
  unint64_t result = qword_1E9AFAC38;
  if (!qword_1E9AFAC38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFAC38);
  }
  return result;
}

uint64_t sub_1AFDD1370(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AFFBC540(a1, a2, a3, a4, *(void **)(v4 + 16));
}

void sub_1AFDD1378(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1AFDD13DC(uint64_t a1)
{
}

void sub_1AFDD1410(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for StockFeedConfigService.Errors(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1AFDD14F8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for StockFeedConfigService.Errors()
{
  return &type metadata for StockFeedConfigService.Errors;
}

unint64_t sub_1AFDD1534()
{
  unint64_t result = qword_1E9AFAC40;
  if (!qword_1E9AFAC40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFAC40);
  }
  return result;
}

uint64_t sub_1AFDD1588()
{
  uint64_t v1 = *v0;
  sub_1AFFC8E38();
  return v1;
}

uint64_t sub_1AFDD15B8(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*sub_1AFDD15F0())()
{
  return nullsub_1;
}

uint64_t sub_1AFDD1610@<X0>(uint64_t a1@<X8>)
{
  return sub_1AFDD2DF8(type metadata accessor for RawAttributionSource, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0], a1);
}

uint64_t type metadata accessor for RawAttributionSource(uint64_t a1)
{
  return sub_1AFD9BB54(a1, qword_1EB818918);
}

uint64_t sub_1AFDD1664(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for RawAttributionSource(0);
  return sub_1AFDD17A8(a1, v1 + *(int *)(v3 + 20), (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
}

uint64_t (*sub_1AFDD16B8())(void)
{
  return nullsub_1;
}

uint64_t sub_1AFDD1700@<X0>(uint64_t a1@<X8>)
{
  return sub_1AFDD2E84(type metadata accessor for RawAttributionSource, &qword_1EB818B30, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo, a1);
}

uint64_t type metadata accessor for RawAttributionSourceLogo(uint64_t a1)
{
  return sub_1AFD9BB54(a1, (uint64_t *)&unk_1EB818B20);
}

uint64_t sub_1AFDD1754(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for RawAttributionSource(0);
  return sub_1AFDD17A8(a1, v1 + *(int *)(v3 + 24), &qword_1EB818B30, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
}

uint64_t sub_1AFDD17A8(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1AFD4B138(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a2, a1, v6);
  return a2;
}

uint64_t (*sub_1AFDD1814())(void)
{
  return nullsub_1;
}

uint64_t sub_1AFDD185C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v10 = type metadata accessor for RawAttributionSource(0);
  uint64_t v11 = (uint64_t)a5 + *(int *)(v10 + 20);
  uint64_t v12 = sub_1AFFC96E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  uint64_t v13 = (uint64_t)a5 + *(int *)(v10 + 24);
  uint64_t v14 = type metadata accessor for RawAttributionSourceLogo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  *a5 = a1;
  a5[1] = a2;
  sub_1AFDD17A8(a3, v11, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
  return sub_1AFDD17A8(a4, v13, &qword_1EB818B30, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
}

uint64_t sub_1AFDD1998()
{
  uint64_t v1 = 0x4C5255656D6F68;
  if (*v0 != 1) {
    uint64_t v1 = 1869049708;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1701667182;
  }
}

uint64_t sub_1AFDD19E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1AFDE4774(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AFDD1A0C(uint64_t a1)
{
  unint64_t v2 = sub_1AFDDAB9C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFDD1A48(uint64_t a1)
{
  unint64_t v2 = sub_1AFDDAB9C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFDD1A84(void *a1)
{
  sub_1AFDDB100(0, &qword_1EB8117B0, (uint64_t (*)(void))sub_1AFDDAB9C, (uint64_t)&type metadata for RawAttributionSource.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDDAB9C();
  sub_1AFFCBE78();
  char v12 = 0;
  sub_1AFFCBC08();
  if (!v1)
  {
    type metadata accessor for RawAttributionSource(0);
    char v11 = 1;
    sub_1AFFC96E8();
    sub_1AFDDABF0(&qword_1EB818B68, MEMORY[0x1E4F276F0]);
    sub_1AFFCBBE8();
    char v10 = 2;
    type metadata accessor for RawAttributionSourceLogo(0);
    sub_1AFDDABF0(&qword_1EB8116D0, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
    sub_1AFFCBBE8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1AFDD1CEC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v28 = a2;
  sub_1AFD4B138(0, &qword_1EB818B30, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
  MEMORY[0x1F4188790](v3 - 8);
  v29 = (char *)&v27 - v4;
  sub_1AFD4B138(0, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v27 - v6;
  sub_1AFDDB100(0, &qword_1E9AFAC50, (uint64_t (*)(void))sub_1AFDDAB9C, (uint64_t)&type metadata for RawAttributionSource.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v30 = *(void *)(v8 - 8);
  uint64_t v31 = v8;
  MEMORY[0x1F4188790](v8);
  char v10 = (char *)&v27 - v9;
  uint64_t v11 = type metadata accessor for RawAttributionSource(0);
  uint64_t v12 = v11 - 8;
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (uint64_t *)((char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = (uint64_t)v14 + *(int *)(v12 + 28);
  uint64_t v16 = sub_1AFFC96E8();
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v34 = v15;
  v17(v15, 1, 1, v16);
  uint64_t v18 = (uint64_t)v14 + *(int *)(v12 + 32);
  uint64_t v19 = type metadata accessor for RawAttributionSourceLogo(0);
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  uint64_t v32 = v18;
  v20(v18, 1, 1, v19);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDDAB9C();
  uint64_t v21 = v33;
  sub_1AFFCBE68();
  if (v21)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    uint64_t v23 = v32;
    sub_1AFDDAE2C(v34, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
    return sub_1AFDDAE2C(v23, &qword_1EB818B30, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
  }
  else
  {
    uint64_t v22 = v30;
    char v37 = 0;
    *uint64_t v14 = sub_1AFFCBB18();
    v14[1] = v24;
    char v36 = 1;
    sub_1AFDDABF0(&qword_1EB818B78, MEMORY[0x1E4F276F0]);
    sub_1AFFCBAF8();
    sub_1AFDD17A8((uint64_t)v7, v34, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
    char v35 = 2;
    sub_1AFDDABF0(&qword_1E9AFAC58, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
    uint64_t v25 = (uint64_t)v29;
    sub_1AFFCBAF8();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v10, v31);
    sub_1AFDD17A8(v25, v32, &qword_1EB818B30, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
    sub_1AFDDAF9C((uint64_t)v14, v28, type metadata accessor for RawAttributionSource);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return sub_1AFDDAC98((uint64_t)v14, type metadata accessor for RawAttributionSource);
  }
}

uint64_t sub_1AFDD2214@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1AFDD1CEC(a1, a2);
}

uint64_t sub_1AFDD222C(void *a1)
{
  return sub_1AFDD1A84(a1);
}

uint64_t sub_1AFDD2248@<X0>(uint64_t a1@<X8>)
{
  uint64_t v45 = a1;
  sub_1AFD4B138(0, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
  MEMORY[0x1F4188790](v2 - 8);
  v44 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v38 - v5;
  sub_1AFD4B138(0, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v38 - v11;
  uint64_t v13 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
  uint64_t v43 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for RawAttributionSourceLogo.Resolved(0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for RawAttributionSourceLogo(0);
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFDDAF9C(v1, (uint64_t)v21, type metadata accessor for RawAttributionSourceLogo);
  if (swift_getEnumCaseMultiPayload() != 1) {
    return sub_1AFDDB218((uint64_t)v21, v45, type metadata accessor for RawAttributionSourceLogo.Unresolved);
  }
  v42 = v9;
  sub_1AFDDB218((uint64_t)v21, (uint64_t)v18, type metadata accessor for RawAttributionSourceLogo.Resolved);
  uint64_t v22 = type metadata accessor for RawAttributionSourceLogo.Resolved.Variant(0);
  uint64_t v23 = (uint64_t)&v18[*(int *)(v22 + 28)];
  v41 = v15;
  sub_1AFDDAF9C(v23, (uint64_t)v15, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
  sub_1AFDDAD18((uint64_t)&v18[*(int *)(v16 + 20)], (uint64_t)v6, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
  v38 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48);
  int v24 = v38(v6, 1, v22);
  uint64_t v25 = (uint64_t)v12;
  uint64_t v26 = v13;
  uint64_t v28 = v43;
  uint64_t v27 = (uint64_t)v44;
  uint64_t v40 = v25;
  uint64_t v29 = v25;
  if (v24 == 1)
  {
    sub_1AFDDAE2C((uint64_t)v6, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
    uint64_t v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56);
    v30(v29, 1, 1, v26);
  }
  else
  {
    sub_1AFDDAF9C((uint64_t)&v6[*(int *)(v22 + 28)], v25, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
    sub_1AFDDAC98((uint64_t)v6, type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
    uint64_t v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56);
    v30(v29, 0, 1, v26);
  }
  uint64_t v39 = v26;
  sub_1AFDDAD18((uint64_t)&v18[*(int *)(v16 + 24)], v27, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
  sub_1AFDDAC98((uint64_t)v18, type metadata accessor for RawAttributionSourceLogo.Resolved);
  int v32 = v38((char *)v27, 1, v22);
  uint64_t v33 = v45;
  uint64_t v34 = (uint64_t)v41;
  uint64_t v35 = (uint64_t)v42;
  if (v32 == 1)
  {
    sub_1AFDDAE2C(v27, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
    uint64_t v36 = 1;
  }
  else
  {
    sub_1AFDDAF9C(v27 + *(int *)(v22 + 28), (uint64_t)v42, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
    sub_1AFDDAC98(v27, type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
    uint64_t v36 = 0;
  }
  v30(v35, v36, 1, v39);
  sub_1AFDDB218(v34, v33, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
  uint64_t v37 = type metadata accessor for RawAttributionSourceLogo.Unresolved(0);
  sub_1AFDDAE88(v40, v33 + *(int *)(v37 + 20), (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
  return sub_1AFDDAE88(v35, v33 + *(int *)(v37 + 24), (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
}

uint64_t sub_1AFDD27F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1AFDD5164(a1, a2, a3, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant, type metadata accessor for RawAttributionSourceLogo.Unresolved, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant, a4);
}

uint64_t sub_1AFDD283C@<X0>(uint64_t a1@<X8>)
{
  sub_1AFDD2884(a1);
  type metadata accessor for RawAttributionSourceLogo(0);

  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1AFDD2884@<X0>(uint64_t a1@<X8>)
{
  uint64_t v31 = a1;
  sub_1AFD4B138(0, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v30 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v34 = (char *)&v28 - v4;
  sub_1AFD4B138(0, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v33 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v28 - v8;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v28 - v11;
  uint64_t v13 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
  uint64_t v32 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFFC96C8();
  uint64_t v16 = sub_1AFFC96E8();
  uint64_t v17 = *(void **)(v16 - 8);
  uint64_t v18 = (uint64_t (*)(char *, uint64_t, uint64_t))v17[6];
  uint64_t result = v18(v12, 1, v16);
  if (result == 1)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v35 = (void (*)(char *, char *, uint64_t))v17[2];
  v35(v15, v12, v16);
  uint64_t v20 = *(int *)(v13 + 20);
  uint64_t v28 = v15;
  *(void *)&v15[v20] = 0x4016000000000000;
  uint64_t v21 = (void (*)(char *, uint64_t))v17[1];
  v21(v12, v16);
  sub_1AFFC96C8();
  uint64_t v29 = v18;
  uint64_t result = v18(v9, 1, v16);
  if (result == 1)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v22 = (uint64_t)v34;
  v35(v34, v9, v16);
  *(void *)(v22 + *(int *)(v13 + 20)) = 0x4016000000000000;
  v21(v9, v16);
  uint64_t v23 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v32 + 56);
  v23(v22, 0, 1, v13);
  int v24 = v33;
  sub_1AFFC96C8();
  uint64_t result = v29(v24, 1, v16);
  if (result != 1)
  {
    uint64_t v25 = (uint64_t)v30;
    v35(v30, v24, v16);
    *(void *)(v25 + *(int *)(v13 + 20)) = 0x4016000000000000;
    v21(v24, v16);
    v23(v25, 0, 1, v13);
    uint64_t v26 = v31;
    sub_1AFDDB218((uint64_t)v28, v31, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
    uint64_t v27 = type metadata accessor for RawAttributionSourceLogo.Unresolved(0);
    sub_1AFDDAE88(v22, v26 + *(int *)(v27 + 20), (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
    return sub_1AFDDAE88(v25, v26 + *(int *)(v27 + 24), (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1AFDD2D14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v6 = sub_1AFFC96E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  uint64_t result = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
  *(double *)(a2 + *(int *)(result + 20)) = a3;
  return result;
}

uint64_t sub_1AFDD2D90@<X0>(uint64_t a1@<X8>)
{
  return sub_1AFDDAF9C(v1, a1, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
}

uint64_t sub_1AFDD2DC4@<X0>(uint64_t a1@<X8>)
{
  return sub_1AFDD2DF8(type metadata accessor for RawAttributionSourceLogo.Unresolved, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant, a1);
}

uint64_t sub_1AFDD2DF8@<X0>(uint64_t (*a1)(void)@<X0>, unint64_t *a2@<X1>, void (*a3)(uint64_t)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = a1(0);
  return sub_1AFDDAD18(v4 + *(int *)(v8 + 20), a4, a2, a3);
}

uint64_t sub_1AFDD2E50@<X0>(uint64_t a1@<X8>)
{
  return sub_1AFDD2E84(type metadata accessor for RawAttributionSourceLogo.Unresolved, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant, a1);
}

uint64_t sub_1AFDD2E84@<X0>(uint64_t (*a1)(void)@<X0>, unint64_t *a2@<X1>, void (*a3)(uint64_t)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = a1(0);
  return sub_1AFDDAD18(v4 + *(int *)(v8 + 24), a4, a2, a3);
}

uint64_t sub_1AFDD2EDC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1AFFC96E8();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t sub_1AFDD2F44(uint64_t a1)
{
  uint64_t v3 = sub_1AFFC96E8();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*sub_1AFDD2FAC())()
{
  return nullsub_1;
}

double sub_1AFDD2FCC()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0) + 20));
}

uint64_t sub_1AFDD2FF0(double a1)
{
  uint64_t result = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
  *(double *)(v1 + *(int *)(result + 20)) = a1;
  return result;
}

uint64_t (*sub_1AFDD3020())(void)
{
  return nullsub_1;
}

uint64_t sub_1AFDD3068()
{
  return sub_1AFFCBE28();
}

BOOL sub_1AFDD3100(uint64_t a1, uint64_t a2)
{
  if ((MEMORY[0x1B3E8BAC0]() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
  return *(double *)(a1 + *(int *)(v4 + 20)) == *(double *)(a2 + *(int *)(v4 + 20));
}

uint64_t sub_1AFDD3150()
{
  if (*v0) {
    return 0x656E696C65736162;
  }
  else {
    return 7107189;
  }
}

uint64_t sub_1AFDD3190@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1AFDE48AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AFDD31B8(uint64_t a1)
{
  unint64_t v2 = sub_1AFDDAD84();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFDD31F4(uint64_t a1)
{
  unint64_t v2 = sub_1AFDDAD84();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFDD3230(void *a1)
{
  sub_1AFDDB100(0, &qword_1E9AFAC60, (uint64_t (*)(void))sub_1AFDDAD84, (uint64_t)&type metadata for RawAttributionSourceLogo.Unresolved.Variant.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDDAD84();
  sub_1AFFCBE78();
  char v11 = 0;
  sub_1AFFC96E8();
  sub_1AFDDABF0(&qword_1EB818B68, MEMORY[0x1E4F276F0]);
  sub_1AFFCBC58();
  if (!v1)
  {
    type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
    char v10 = 1;
    sub_1AFFCBC28();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1AFDD3418()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFDD34C0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v25 = sub_1AFFC96E8();
  uint64_t v23 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  int v24 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFDDB100(0, &qword_1E9AFAC70, (uint64_t (*)(void))sub_1AFDDAD84, (uint64_t)&type metadata for RawAttributionSourceLogo.Unresolved.Variant.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v26 = v5;
  uint64_t v22 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v20 - v6;
  uint64_t v8 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
  MEMORY[0x1F4188790](v8);
  char v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDDAD84();
  sub_1AFFCBE68();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v20 = v10;
  uint64_t v11 = v22;
  uint64_t v12 = v23;
  char v28 = 0;
  sub_1AFDDABF0(&qword_1EB818B78, MEMORY[0x1E4F276F0]);
  uint64_t v14 = v24;
  uint64_t v13 = v25;
  sub_1AFFCBB58();
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v20, v14, v13);
  char v27 = 1;
  sub_1AFFCBB38();
  uint64_t v16 = v15;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v7, v26);
  uint64_t v18 = (uint64_t)v20;
  uint64_t v17 = v21;
  *(void *)&v20[*(int *)(v8 + 20)] = v16;
  sub_1AFDDAF9C(v18, v17, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1AFDDAC98(v18, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
}

uint64_t sub_1AFDD3850@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1AFDD34C0(a1, a2);
}

uint64_t sub_1AFDD3868(void *a1)
{
  return sub_1AFDD3230(a1);
}

uint64_t sub_1AFDD3884()
{
  return sub_1AFFCBE28();
}

uint64_t sub_1AFDD3918()
{
  return sub_1AFFCBE38();
}

BOOL sub_1AFDD39C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (MEMORY[0x1B3E8BAC0]() & 1) != 0 && *(double *)(a1 + *(int *)(a3 + 20)) == *(double *)(a2 + *(int *)(a3 + 20));
}

uint64_t sub_1AFDD3A14()
{
  uint64_t v1 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v20 = (uint64_t)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v19 = (uint64_t)&v18 - v5;
  sub_1AFD4B138(0, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v21 = (uint64_t)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  char v10 = (char *)&v18 - v9;
  sub_1AFFC96E8();
  sub_1AFDDABF0((unint64_t *)&qword_1EB81A618, MEMORY[0x1E4F276F0]);
  sub_1AFFCAD68();
  sub_1AFFCBE28();
  uint64_t v11 = type metadata accessor for RawAttributionSourceLogo.Unresolved(0);
  uint64_t v12 = *(int *)(v11 + 20);
  uint64_t v22 = v0;
  sub_1AFDDAD18(v0 + v12, (uint64_t)v10, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
  uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48);
  uint64_t v23 = v2 + 48;
  if (v13(v10, 1, v1) == 1)
  {
    sub_1AFFCBE18();
  }
  else
  {
    uint64_t v14 = v19;
    sub_1AFDDB218((uint64_t)v10, v19, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
    sub_1AFFCBE18();
    sub_1AFFCAD68();
    sub_1AFFCBE28();
    sub_1AFDDAC98(v14, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
  }
  uint64_t v15 = v21;
  sub_1AFDDAD18(v22 + *(int *)(v11 + 24), v21, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
  if (v13((char *)v15, 1, v1) == 1) {
    return sub_1AFFCBE18();
  }
  uint64_t v17 = v20;
  sub_1AFDDB218(v15, v20, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
  sub_1AFFCBE18();
  sub_1AFFCAD68();
  sub_1AFFCBE28();
  return sub_1AFDDAC98(v17, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
}

uint64_t sub_1AFDD3DB0()
{
  uint64_t v1 = 1802658148;
  if (*v0 != 1) {
    uint64_t v1 = 0x6574616C706D6574;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x746867696CLL;
  }
}

uint64_t sub_1AFDD3E00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1AFDE4B88(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AFDD3E28(uint64_t a1)
{
  unint64_t v2 = sub_1AFDDADD8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFDD3E64(uint64_t a1)
{
  unint64_t v2 = sub_1AFDDADD8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFDD3EA0(void *a1)
{
  sub_1AFDDB100(0, &qword_1EB8117C0, (uint64_t (*)(void))sub_1AFDDADD8, (uint64_t)&type metadata for RawAttributionSourceLogo.Unresolved.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDDADD8();
  sub_1AFFCBE78();
  char v12 = 0;
  type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
  sub_1AFDDABF0(&qword_1E9AFAC78, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
  sub_1AFFCBC58();
  if (!v1)
  {
    type metadata accessor for RawAttributionSourceLogo.Unresolved(0);
    char v11 = 1;
    sub_1AFFCBBE8();
    char v10 = 2;
    sub_1AFFCBBE8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1AFDD40CC()
{
  uint64_t v1 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v20 = (uint64_t)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v19 = (uint64_t)&v18 - v5;
  sub_1AFD4B138(0, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  char v11 = (char *)&v18 - v10;
  sub_1AFFCBDF8();
  sub_1AFFC96E8();
  sub_1AFDDABF0((unint64_t *)&qword_1EB81A618, MEMORY[0x1E4F276F0]);
  sub_1AFFCAD68();
  sub_1AFFCBE28();
  uint64_t v12 = type metadata accessor for RawAttributionSourceLogo.Unresolved(0);
  uint64_t v13 = *(int *)(v12 + 20);
  uint64_t v21 = v0;
  sub_1AFDDAD18(v0 + v13, (uint64_t)v11, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
  uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48);
  uint64_t v22 = v2 + 48;
  if (v14(v11, 1, v1) == 1)
  {
    sub_1AFFCBE18();
  }
  else
  {
    uint64_t v15 = v19;
    sub_1AFDDB218((uint64_t)v11, v19, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
    sub_1AFFCBE18();
    sub_1AFFCAD68();
    sub_1AFFCBE28();
    sub_1AFDDAC98(v15, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
  }
  sub_1AFDDAD18(v21 + *(int *)(v12 + 24), (uint64_t)v8, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
  if (v14(v8, 1, v1) == 1)
  {
    sub_1AFFCBE18();
  }
  else
  {
    uint64_t v16 = v20;
    sub_1AFDDB218((uint64_t)v8, v20, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
    sub_1AFFCBE18();
    sub_1AFFCAD68();
    sub_1AFFCBE28();
    sub_1AFDDAC98(v16, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
  }
  return sub_1AFFCBE38();
}

uint64_t sub_1AFDD445C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  sub_1AFD4B138(0, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v21 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v19 - v6;
  uint64_t v24 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
  MEMORY[0x1F4188790](v24);
  uint64_t v23 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFDDB100(0, &qword_1E9AFAC80, (uint64_t (*)(void))sub_1AFDDADD8, (uint64_t)&type metadata for RawAttributionSourceLogo.Unresolved.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v25 = v9;
  uint64_t v22 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  char v11 = (char *)&v19 - v10;
  uint64_t v12 = type metadata accessor for RawAttributionSourceLogo.Unresolved(0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDDADD8();
  uint64_t v15 = (uint64_t)v26;
  sub_1AFFCBE68();
  if (v15) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v26 = a1;
  char v29 = 0;
  sub_1AFDDABF0(&qword_1E9AFAC88, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
  uint64_t v16 = (uint64_t)v23;
  sub_1AFFCBB58();
  sub_1AFDDB218(v16, (uint64_t)v14, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
  char v28 = 1;
  sub_1AFFCBAF8();
  sub_1AFDDAE88((uint64_t)v7, (uint64_t)&v14[*(int *)(v12 + 20)], (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
  char v27 = 2;
  uint64_t v17 = (uint64_t)v21;
  sub_1AFFCBAF8();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v11, v25);
  sub_1AFDDAE88(v17, (uint64_t)&v14[*(int *)(v12 + 24)], (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
  sub_1AFDDAF9C((uint64_t)v14, v20, type metadata accessor for RawAttributionSourceLogo.Unresolved);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  return sub_1AFDDAC98((uint64_t)v14, type metadata accessor for RawAttributionSourceLogo.Unresolved);
}

uint64_t sub_1AFDD4934@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1AFDD445C(a1, a2);
}

uint64_t sub_1AFDD494C(void *a1)
{
  return sub_1AFDD3EA0(a1);
}

uint64_t sub_1AFDD4968(uint64_t a1, uint64_t a2)
{
  uint64_t v25 = a2;
  uint64_t v3 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v22 = (uint64_t)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v21 = (uint64_t)&v20 - v7;
  sub_1AFD4B138(0, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v20 - v12;
  sub_1AFFC96E8();
  sub_1AFDDABF0((unint64_t *)&qword_1EB81A618, MEMORY[0x1E4F276F0]);
  sub_1AFFCAD68();
  sub_1AFFCBE28();
  uint64_t v14 = *(int *)(v25 + 20);
  uint64_t v23 = v2;
  sub_1AFDDAD18(v2 + v14, (uint64_t)v13, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
  uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48);
  uint64_t v24 = v4 + 48;
  if (v15(v13, 1, v3) == 1)
  {
    sub_1AFFCBE18();
  }
  else
  {
    uint64_t v16 = (uint64_t)v13;
    uint64_t v17 = v21;
    sub_1AFDDB218(v16, v21, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
    sub_1AFFCBE18();
    sub_1AFFCAD68();
    sub_1AFFCBE28();
    sub_1AFDDAC98(v17, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
  }
  sub_1AFDDAD18(v23 + *(int *)(v25 + 24), (uint64_t)v10, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
  if (v15(v10, 1, v3) == 1) {
    return sub_1AFFCBE18();
  }
  uint64_t v19 = v22;
  sub_1AFDDB218((uint64_t)v10, v22, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
  sub_1AFFCBE18();
  sub_1AFFCAD68();
  sub_1AFFCBE28();
  return sub_1AFDDAC98(v19, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
}

uint64_t sub_1AFDD4CFC(uint64_t a1, uint64_t a2)
{
  uint64_t v20 = a2;
  uint64_t v3 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v19 = (uint64_t)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v18 - v7;
  sub_1AFD4B138(0, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v18 - v13;
  sub_1AFFCBDF8();
  sub_1AFFC96E8();
  sub_1AFDDABF0((unint64_t *)&qword_1EB81A618, MEMORY[0x1E4F276F0]);
  sub_1AFFCAD68();
  sub_1AFFCBE28();
  sub_1AFDDAD18(v2 + *(int *)(v20 + 20), (uint64_t)v14, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
  uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48);
  if (v15(v14, 1, v3) == 1)
  {
    sub_1AFFCBE18();
  }
  else
  {
    sub_1AFDDB218((uint64_t)v14, (uint64_t)v8, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
    sub_1AFFCBE18();
    sub_1AFFCAD68();
    sub_1AFFCBE28();
    sub_1AFDDAC98((uint64_t)v8, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
  }
  sub_1AFDDAD18(v2 + *(int *)(v20 + 24), (uint64_t)v11, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
  if (v15(v11, 1, v3) == 1)
  {
    sub_1AFFCBE18();
  }
  else
  {
    uint64_t v16 = v19;
    sub_1AFDDB218((uint64_t)v11, v19, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
    sub_1AFFCBE18();
    sub_1AFFCAD68();
    sub_1AFFCBE28();
    sub_1AFDDAC98(v16, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
  }
  return sub_1AFFCBE38();
}

uint64_t sub_1AFDD5080@<X0>(uint64_t a1@<X8>)
{
  return sub_1AFDDAF9C(v1, a1, type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
}

uint64_t sub_1AFDD50B4@<X0>(uint64_t a1@<X8>)
{
  return sub_1AFDD2DF8(type metadata accessor for RawAttributionSourceLogo.Resolved, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant, a1);
}

uint64_t sub_1AFDD50E8@<X0>(uint64_t a1@<X8>)
{
  return sub_1AFDD2E84(type metadata accessor for RawAttributionSourceLogo.Resolved, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant, a1);
}

uint64_t sub_1AFDD511C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1AFDD5164(a1, a2, a3, type metadata accessor for RawAttributionSourceLogo.Resolved.Variant, type metadata accessor for RawAttributionSourceLogo.Resolved, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant, a4);
}

uint64_t sub_1AFDD5164@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(void)@<X3>, uint64_t (*a5)(void)@<X4>, unint64_t *a6@<X5>, void (*a7)(uint64_t)@<X6>, uint64_t a8@<X8>)
{
  sub_1AFDDB218(a1, a8, a4);
  uint64_t v14 = a5(0);
  sub_1AFDDAE88(a2, a8 + *(int *)(v14 + 20), a6, a7);
  return sub_1AFDDAE88(a3, a8 + *(int *)(v14 + 24), a6, a7);
}

uint64_t sub_1AFDD51F4()
{
  uint64_t v1 = *(void *)v0;
  sub_1AFD4B0E0(*(void *)v0, *(void *)(v0 + 8));
  return v1;
}

double sub_1AFDD5228()
{
  return *(double *)(v0 + 16);
}

double sub_1AFDD5230()
{
  return *(double *)(v0 + 24);
}

uint64_t sub_1AFDD5238@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for RawAttributionSourceLogo.Resolved.Variant(0);
  return sub_1AFDDAF9C(v1 + *(int *)(v3 + 28), a1, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
}

BOOL sub_1AFDD5284(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(int *)(type metadata accessor for RawAttributionSourceLogo.Resolved.Variant(0) + 28);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  if ((MEMORY[0x1B3E8BAC0](v5, v6) & 1) == 0) {
    return 0;
  }
  uint64_t v7 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
  return *(double *)(v5 + *(int *)(v7 + 20)) == *(double *)(v6 + *(int *)(v7 + 20));
}

uint64_t sub_1AFDD52F0()
{
  return sub_1AFFCBE28();
}

uint64_t sub_1AFDD5398()
{
  uint64_t result = 1635017060;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x656C616373;
      break;
    case 2:
      uint64_t result = 0x656E696C65736162;
      break;
    case 3:
      uint64_t result = 0x766C6F7365726E75;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1AFDD542C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1AFDE49B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AFDD5454(uint64_t a1)
{
  unint64_t v2 = sub_1AFDDAEF4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFDD5490(uint64_t a1)
{
  unint64_t v2 = sub_1AFDDAEF4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFDD54CC(void *a1)
{
  uint64_t v3 = v1;
  sub_1AFDDB100(0, &qword_1E9AFAC90, (uint64_t (*)(void))sub_1AFDDAEF4, (uint64_t)&type metadata for RawAttributionSourceLogo.Resolved.Variant.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDDAEF4();
  sub_1AFFCBE78();
  long long v11 = *v3;
  char v12 = 0;
  sub_1AFD7D5E4();
  sub_1AFFCBC58();
  if (!v2)
  {
    LOBYTE(v11) = 1;
    sub_1AFFCBC28();
    LOBYTE(v11) = 2;
    sub_1AFFCBC28();
    type metadata accessor for RawAttributionSourceLogo.Resolved.Variant(0);
    LOBYTE(v11) = 3;
    type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
    sub_1AFDDABF0(&qword_1E9AFAC78, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
    sub_1AFFCBC58();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1AFDD5724()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFDD57DC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v19 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
  MEMORY[0x1F4188790](v19);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFDDB100(0, &qword_1E9AFACA0, (uint64_t (*)(void))sub_1AFDDAEF4, (uint64_t)&type metadata for RawAttributionSourceLogo.Resolved.Variant.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v22 = v5;
  uint64_t v18 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v18 - v6;
  uint64_t v8 = type metadata accessor for RawAttributionSourceLogo.Resolved.Variant(0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDDAEF4();
  uint64_t v21 = v7;
  uint64_t v11 = v23;
  sub_1AFFCBE68();
  if (v11) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v23 = v8;
  uint64_t v12 = v18;
  uint64_t v13 = (uint64_t)v4;
  uint64_t v14 = v20;
  char v25 = 0;
  sub_1AFD7D52C();
  sub_1AFFCBB58();
  *(_OWORD *)uint64_t v10 = v24;
  LOBYTE(v24) = 1;
  sub_1AFFCBB38();
  *((void *)v10 + 2) = v15;
  LOBYTE(v24) = 2;
  sub_1AFFCBB38();
  *((void *)v10 + 3) = v16;
  LOBYTE(v24) = 3;
  sub_1AFDDABF0(&qword_1E9AFAC88, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
  sub_1AFFCBB58();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v21, v22);
  sub_1AFDDB218(v13, (uint64_t)&v10[*(int *)(v23 + 28)], type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
  sub_1AFDDAF9C((uint64_t)v10, v14, type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1AFDDAC98((uint64_t)v10, type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
}

uint64_t sub_1AFDD5B7C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1AFDD57DC(a1, a2);
}

uint64_t sub_1AFDD5B94(void *a1)
{
  return sub_1AFDD54CC(a1);
}

uint64_t sub_1AFDD5BB0()
{
  return sub_1AFFCBE28();
}

uint64_t sub_1AFDD5C50()
{
  return sub_1AFFCBE38();
}

BOOL sub_1AFDD5D00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(int *)(a3 + 28);
  uint64_t v4 = a1 + v3;
  uint64_t v5 = a2 + v3;
  if ((MEMORY[0x1B3E8BAC0](a1 + v3, a2 + v3) & 1) == 0) {
    return 0;
  }
  uint64_t v6 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
  return *(double *)(v4 + *(int *)(v6 + 20)) == *(double *)(v5 + *(int *)(v6 + 20));
}

uint64_t sub_1AFDD5D5C()
{
  uint64_t v1 = type metadata accessor for RawAttributionSourceLogo.Resolved.Variant(0);
  uint64_t v24 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v23 = (uint64_t)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v22 = (uint64_t)&v21 - v4;
  sub_1AFD4B138(0, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v25 = (uint64_t)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v21 - v8;
  sub_1AFFC96E8();
  sub_1AFDDABF0((unint64_t *)&qword_1EB81A618, MEMORY[0x1E4F276F0]);
  sub_1AFFCAD68();
  uint64_t v10 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
  sub_1AFFCBE28();
  uint64_t v11 = type metadata accessor for RawAttributionSourceLogo.Resolved(0);
  uint64_t v12 = *(int *)(v11 + 20);
  uint64_t v26 = v0;
  uint64_t v13 = v24;
  sub_1AFDDAD18(v0 + v12, (uint64_t)v9, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v9, 1, v1);
  uint64_t v21 = v10;
  if (v15 == 1)
  {
    sub_1AFFCBE18();
  }
  else
  {
    uint64_t v16 = (uint64_t)v9;
    uint64_t v17 = v22;
    sub_1AFDDB218(v16, v22, type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
    sub_1AFFCBE18();
    sub_1AFFCAD68();
    sub_1AFFCBE28();
    sub_1AFDDAC98(v17, type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
  }
  uint64_t v18 = v25;
  sub_1AFDDAD18(v26 + *(int *)(v11 + 24), v25, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
  if (v14((char *)v18, 1, v1) == 1) {
    return sub_1AFFCBE18();
  }
  uint64_t v20 = v23;
  sub_1AFDDB218(v18, v23, type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
  sub_1AFFCBE18();
  sub_1AFFCAD68();
  sub_1AFFCBE28();
  return sub_1AFDDAC98(v20, type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
}

uint64_t sub_1AFDD6118(uint64_t a1)
{
  unint64_t v2 = sub_1AFDDAF48();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFDD6154(uint64_t a1)
{
  unint64_t v2 = sub_1AFDDAF48();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFDD6190(void *a1)
{
  sub_1AFDDB100(0, &qword_1E9AFACA8, (uint64_t (*)(void))sub_1AFDDAF48, (uint64_t)&type metadata for RawAttributionSourceLogo.Resolved.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDDAF48();
  sub_1AFFCBE78();
  char v12 = 0;
  type metadata accessor for RawAttributionSourceLogo.Resolved.Variant(0);
  sub_1AFDDABF0(&qword_1E9AFACB8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
  sub_1AFFCBC58();
  if (!v1)
  {
    type metadata accessor for RawAttributionSourceLogo.Resolved(0);
    char v11 = 1;
    sub_1AFFCBBE8();
    char v10 = 2;
    sub_1AFFCBBE8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1AFDD63BC()
{
  uint64_t v1 = type metadata accessor for RawAttributionSourceLogo.Resolved.Variant(0);
  uint64_t v22 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v21 = (uint64_t)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v20 = (uint64_t)&v19 - v4;
  sub_1AFD4B138(0, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  char v10 = (char *)&v19 - v9;
  sub_1AFFCBDF8();
  sub_1AFFC96E8();
  sub_1AFDDABF0((unint64_t *)&qword_1EB81A618, MEMORY[0x1E4F276F0]);
  sub_1AFFCAD68();
  type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
  sub_1AFFCBE28();
  uint64_t v11 = type metadata accessor for RawAttributionSourceLogo.Resolved(0);
  uint64_t v12 = *(int *)(v11 + 20);
  uint64_t v23 = v0;
  uint64_t v13 = v22;
  sub_1AFDDAD18(v0 + v12, (uint64_t)v10, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
  uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v14(v10, 1, v1) == 1)
  {
    sub_1AFFCBE18();
  }
  else
  {
    uint64_t v15 = (uint64_t)v10;
    uint64_t v16 = v20;
    sub_1AFDDB218(v15, v20, type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
    sub_1AFFCBE18();
    sub_1AFFCAD68();
    sub_1AFFCBE28();
    sub_1AFDDAC98(v16, type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
  }
  sub_1AFDDAD18(v23 + *(int *)(v11 + 24), (uint64_t)v7, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
  if (v14(v7, 1, v1) == 1)
  {
    sub_1AFFCBE18();
  }
  else
  {
    uint64_t v17 = v21;
    sub_1AFDDB218((uint64_t)v7, v21, type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
    sub_1AFFCBE18();
    sub_1AFFCAD68();
    sub_1AFFCBE28();
    sub_1AFDDAC98(v17, type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
  }
  return sub_1AFFCBE38();
}

uint64_t sub_1AFDD6764@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  sub_1AFD4B138(0, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v21 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v19 - v6;
  uint64_t v24 = type metadata accessor for RawAttributionSourceLogo.Resolved.Variant(0);
  MEMORY[0x1F4188790](v24);
  uint64_t v23 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFDDB100(0, &qword_1E9AFACC0, (uint64_t (*)(void))sub_1AFDDAF48, (uint64_t)&type metadata for RawAttributionSourceLogo.Resolved.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v25 = v9;
  uint64_t v22 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v19 - v10;
  uint64_t v12 = type metadata accessor for RawAttributionSourceLogo.Resolved(0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDDAF48();
  uint64_t v15 = (uint64_t)v26;
  sub_1AFFCBE68();
  if (v15) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v26 = a1;
  char v29 = 0;
  sub_1AFDDABF0(&qword_1E9AFACC8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
  uint64_t v16 = (uint64_t)v23;
  sub_1AFFCBB58();
  sub_1AFDDB218(v16, (uint64_t)v14, type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
  char v28 = 1;
  sub_1AFFCBAF8();
  sub_1AFDDAE88((uint64_t)v7, (uint64_t)&v14[*(int *)(v12 + 20)], &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
  char v27 = 2;
  uint64_t v17 = (uint64_t)v21;
  sub_1AFFCBAF8();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v11, v25);
  sub_1AFDDAE88(v17, (uint64_t)&v14[*(int *)(v12 + 24)], &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
  sub_1AFDDAF9C((uint64_t)v14, v20, type metadata accessor for RawAttributionSourceLogo.Resolved);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  return sub_1AFDDAC98((uint64_t)v14, type metadata accessor for RawAttributionSourceLogo.Resolved);
}

uint64_t sub_1AFDD6C3C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1AFDD6764(a1, a2);
}

uint64_t sub_1AFDD6C54(void *a1)
{
  return sub_1AFDD6190(a1);
}

uint64_t sub_1AFDD6C70(uint64_t a1, uint64_t a2)
{
  uint64_t v27 = a2;
  uint64_t v3 = v2;
  uint64_t v4 = type metadata accessor for RawAttributionSourceLogo.Resolved.Variant(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v24 = (uint64_t)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v23 = (uint64_t)&v22 - v8;
  sub_1AFD4B138(0, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v25 = (uint64_t)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v22 - v12;
  sub_1AFFC96E8();
  sub_1AFDDABF0((unint64_t *)&qword_1EB81A618, MEMORY[0x1E4F276F0]);
  sub_1AFFCAD68();
  uint64_t v14 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
  sub_1AFFCBE28();
  sub_1AFDDAD18(v2 + *(int *)(v27 + 20), (uint64_t)v13, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  uint64_t v26 = v5 + 48;
  int v16 = v15(v13, 1, v4);
  uint64_t v22 = v14;
  if (v16 == 1)
  {
    sub_1AFFCBE18();
  }
  else
  {
    uint64_t v17 = (uint64_t)v13;
    uint64_t v18 = v23;
    sub_1AFDDB218(v17, v23, type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
    sub_1AFFCBE18();
    sub_1AFFCAD68();
    sub_1AFFCBE28();
    sub_1AFDDAC98(v18, type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
  }
  uint64_t v19 = v25;
  sub_1AFDDAD18(v3 + *(int *)(v27 + 24), v25, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
  if (v15((char *)v19, 1, v4) == 1) {
    return sub_1AFFCBE18();
  }
  uint64_t v21 = v24;
  sub_1AFDDB218(v19, v24, type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
  sub_1AFFCBE18();
  sub_1AFFCAD68();
  sub_1AFFCBE28();
  return sub_1AFDDAC98(v21, type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
}

uint64_t sub_1AFDD7028(uint64_t a1, uint64_t a2)
{
  uint64_t v21 = a2;
  uint64_t v3 = type metadata accessor for RawAttributionSourceLogo.Resolved.Variant(0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v20 = (uint64_t)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v19 = (uint64_t)&v19 - v7;
  sub_1AFD4B138(0, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v19 - v12;
  sub_1AFFCBDF8();
  sub_1AFFC96E8();
  sub_1AFDDABF0((unint64_t *)&qword_1EB81A618, MEMORY[0x1E4F276F0]);
  sub_1AFFCAD68();
  type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
  sub_1AFFCBE28();
  sub_1AFDDAD18(v2 + *(int *)(v21 + 20), (uint64_t)v13, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
  uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48);
  if (v14(v13, 1, v3) == 1)
  {
    sub_1AFFCBE18();
  }
  else
  {
    uint64_t v15 = (uint64_t)v13;
    uint64_t v16 = v19;
    sub_1AFDDB218(v15, v19, type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
    sub_1AFFCBE18();
    sub_1AFFCAD68();
    sub_1AFFCBE28();
    sub_1AFDDAC98(v16, type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
  }
  sub_1AFDDAD18(v2 + *(int *)(v21 + 24), (uint64_t)v10, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
  if (v14(v10, 1, v3) == 1)
  {
    sub_1AFFCBE18();
  }
  else
  {
    uint64_t v17 = v20;
    sub_1AFDDB218((uint64_t)v10, v20, type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
    sub_1AFFCBE18();
    sub_1AFFCAD68();
    sub_1AFFCBE28();
    sub_1AFDDAC98(v17, type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
  }
  return sub_1AFFCBE38();
}

uint64_t sub_1AFDD73CC()
{
  uint64_t v0 = type metadata accessor for RawAttributionSourceLogo.Resolved.Variant(0);
  uint64_t v52 = *(void *)(v0 - 8);
  uint64_t v53 = v0;
  MEMORY[0x1F4188790](v0);
  uint64_t v50 = (uint64_t)v46 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  uint64_t v49 = (uint64_t)v46 - v3;
  sub_1AFD4B138(0, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v54 = (uint64_t)v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v51 = (uint64_t)v46 - v7;
  v55 = (char *)type metadata accessor for RawAttributionSourceLogo.Resolved(0);
  MEMORY[0x1F4188790](v55);
  uint64_t v9 = (char *)v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v48 = (uint64_t)v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v47 = (uint64_t)v46 - v14;
  sub_1AFD4B138(0, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)v46 - v19;
  uint64_t v21 = type metadata accessor for RawAttributionSourceLogo.Unresolved(0);
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)v46 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for RawAttributionSourceLogo(0);
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (char *)v46 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFDDAF9C(v56, (uint64_t)v26, type metadata accessor for RawAttributionSourceLogo);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1AFDDB218((uint64_t)v26, (uint64_t)v9, type metadata accessor for RawAttributionSourceLogo.Resolved);
    sub_1AFFCBE08();
    uint64_t v27 = v53;
    uint64_t v28 = sub_1AFFC96E8();
    sub_1AFDDABF0((unint64_t *)&qword_1EB81A618, MEMORY[0x1E4F276F0]);
    sub_1AFFCAD68();
    sub_1AFFCBE28();
    uint64_t v29 = (uint64_t)v55;
    uint64_t v30 = v51;
    sub_1AFDDAD18((uint64_t)&v9[*((int *)v55 + 5)], v51, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
    uint64_t v31 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v52 + 48);
    int v32 = v31(v30, 1, v27);
    uint64_t v56 = v28;
    v46[1] = v10;
    if (v32 == 1)
    {
      sub_1AFFCBE18();
    }
    else
    {
      uint64_t v34 = v31;
      uint64_t v35 = v49;
      sub_1AFDDB218(v30, v49, type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
      sub_1AFFCBE18();
      sub_1AFFCAD68();
      sub_1AFFCBE28();
      uint64_t v36 = v35;
      uint64_t v31 = v34;
      uint64_t v29 = (uint64_t)v55;
      sub_1AFDDAC98(v36, type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
    }
    uint64_t v37 = v54;
    sub_1AFDDAD18((uint64_t)&v9[*(int *)(v29 + 24)], v54, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
    if (v31(v37, 1, v27) == 1)
    {
      sub_1AFFCBE18();
    }
    else
    {
      uint64_t v41 = v50;
      sub_1AFDDB218(v37, v50, type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
      sub_1AFFCBE18();
      sub_1AFFCAD68();
      sub_1AFFCBE28();
      sub_1AFDDAC98(v41, type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
    }
    v42 = type metadata accessor for RawAttributionSourceLogo.Resolved;
    uint64_t v43 = (uint64_t)v9;
  }
  else
  {
    v55 = v17;
    sub_1AFDDB218((uint64_t)v26, (uint64_t)v23, type metadata accessor for RawAttributionSourceLogo.Unresolved);
    sub_1AFFCBE08();
    sub_1AFFC96E8();
    sub_1AFDDABF0((unint64_t *)&qword_1EB81A618, MEMORY[0x1E4F276F0]);
    sub_1AFFCAD68();
    sub_1AFFCBE28();
    sub_1AFDDAD18((uint64_t)&v23[*(int *)(v21 + 20)], (uint64_t)v20, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
    uint64_t v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    uint64_t v56 = v11 + 48;
    if (v33(v20, 1, v10) == 1)
    {
      sub_1AFFCBE18();
    }
    else
    {
      uint64_t v38 = (uint64_t)v20;
      uint64_t v39 = v47;
      sub_1AFDDB218(v38, v47, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
      sub_1AFFCBE18();
      sub_1AFFCAD68();
      sub_1AFFCBE28();
      sub_1AFDDAC98(v39, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
    }
    uint64_t v40 = (uint64_t)v55;
    sub_1AFDDAD18((uint64_t)&v23[*(int *)(v21 + 24)], (uint64_t)v55, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
    if (v33((char *)v40, 1, v10) == 1)
    {
      sub_1AFFCBE18();
    }
    else
    {
      uint64_t v44 = v48;
      sub_1AFDDB218(v40, v48, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
      sub_1AFFCBE18();
      sub_1AFFCAD68();
      sub_1AFFCBE28();
      sub_1AFDDAC98(v44, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
    }
    v42 = type metadata accessor for RawAttributionSourceLogo.Unresolved;
    uint64_t v43 = (uint64_t)v23;
  }
  return sub_1AFDDAC98(v43, v42);
}

uint64_t sub_1AFDD7C9C()
{
  if (*v0) {
    return 0x6465766C6F736572;
  }
  else {
    return 0x766C6F7365726E75;
  }
}

uint64_t sub_1AFDD7CDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1AFDE4CC8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AFDD7D04(uint64_t a1)
{
  unint64_t v2 = sub_1AFDDB0AC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFDD7D40(uint64_t a1)
{
  unint64_t v2 = sub_1AFDDB0AC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFDD7D84()
{
  return 12383;
}

uint64_t sub_1AFDD7D94(uint64_t a1)
{
  unint64_t v2 = sub_1AFDDB004();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFDD7DD0(uint64_t a1)
{
  unint64_t v2 = sub_1AFDDB004();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFDD7E0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1AFFCBCE8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1AFDD7E8C(uint64_t a1)
{
  unint64_t v2 = sub_1AFDDB058();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFDD7EC8(uint64_t a1)
{
  unint64_t v2 = sub_1AFDDB058();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFDD7F04(void *a1)
{
  unint64_t v2 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBBDE0];
  sub_1AFDDB100(0, &qword_1EB8117C8, (uint64_t (*)(void))sub_1AFDDB004, (uint64_t)&type metadata for RawAttributionSourceLogo.ResolvedCodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v32 = *(void *)(v3 - 8);
  uint64_t v33 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v31 = (char *)&v25 - v4;
  uint64_t v29 = type metadata accessor for RawAttributionSourceLogo.Resolved(0);
  MEMORY[0x1F4188790](v29);
  uint64_t v30 = (uint64_t)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFDDB100(0, &qword_1EB8117D0, (uint64_t (*)(void))sub_1AFDDB058, (uint64_t)&type metadata for RawAttributionSourceLogo.UnresolvedCodingKeys, v2);
  uint64_t v27 = *(void *)(v6 - 8);
  uint64_t v28 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v26 = (char *)&v25 - v7;
  uint64_t v25 = type metadata accessor for RawAttributionSourceLogo.Unresolved(0);
  MEMORY[0x1F4188790](v25);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for RawAttributionSourceLogo(0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFDDB100(0, &qword_1EB8117B8, (uint64_t (*)(void))sub_1AFDDB0AC, (uint64_t)&type metadata for RawAttributionSourceLogo.CodingKeys, v2);
  uint64_t v14 = v13;
  uint64_t v34 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v25 - v15;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDDB0AC();
  sub_1AFFCBE78();
  sub_1AFDDAF9C(v35, (uint64_t)v12, type metadata accessor for RawAttributionSourceLogo);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = v30;
    sub_1AFDDB218((uint64_t)v12, v30, type metadata accessor for RawAttributionSourceLogo.Resolved);
    char v37 = 1;
    sub_1AFDDB004();
    uint64_t v18 = v31;
    sub_1AFFCBB88();
    sub_1AFDDABF0(&qword_1E9AFACD0, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved);
    uint64_t v19 = v33;
    sub_1AFFCBC58();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v18, v19);
    uint64_t v20 = type metadata accessor for RawAttributionSourceLogo.Resolved;
    uint64_t v21 = v17;
  }
  else
  {
    sub_1AFDDB218((uint64_t)v12, (uint64_t)v9, type metadata accessor for RawAttributionSourceLogo.Unresolved);
    char v36 = 0;
    sub_1AFDDB058();
    uint64_t v22 = v26;
    sub_1AFFCBB88();
    sub_1AFDDABF0(&qword_1EB811698, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved);
    uint64_t v23 = v28;
    sub_1AFFCBC58();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v22, v23);
    uint64_t v20 = type metadata accessor for RawAttributionSourceLogo.Unresolved;
    uint64_t v21 = (uint64_t)v9;
  }
  sub_1AFDDAC98(v21, v20);
  return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v16, v14);
}

uint64_t sub_1AFDD8474()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFDD84B4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v42 = a2;
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBBDC0];
  sub_1AFDDB100(0, &qword_1E9AFACD8, (uint64_t (*)(void))sub_1AFDDB004, (uint64_t)&type metadata for RawAttributionSourceLogo.ResolvedCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v44 = v4;
  uint64_t v46 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v50 = (char *)&v38 - v5;
  sub_1AFDDB100(0, &qword_1E9AFACE0, (uint64_t (*)(void))sub_1AFDDB058, (uint64_t)&type metadata for RawAttributionSourceLogo.UnresolvedCodingKeys, v3);
  uint64_t v43 = v6;
  uint64_t v45 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v49 = (char *)&v38 - v7;
  sub_1AFDDB100(0, &qword_1E9AFACE8, (uint64_t (*)(void))sub_1AFDDB0AC, (uint64_t)&type metadata for RawAttributionSourceLogo.CodingKeys, v3);
  uint64_t v47 = *(void *)(v8 - 8);
  uint64_t v48 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v38 - v9;
  uint64_t v11 = type metadata accessor for RawAttributionSourceLogo(0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v38 - v15;
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v38 - v18;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDDB0AC();
  uint64_t v20 = v51;
  sub_1AFFCBE68();
  if (v20) {
    goto LABEL_7;
  }
  uint64_t v39 = v13;
  uint64_t v40 = v16;
  uint64_t v22 = v49;
  uint64_t v21 = v50;
  uint64_t v38 = v19;
  uint64_t v41 = v11;
  uint64_t v23 = v47;
  uint64_t v24 = v48;
  uint64_t v51 = a1;
  uint64_t v25 = sub_1AFFCBB68();
  if (*(void *)(v25 + 16) != 1)
  {
    uint64_t v29 = sub_1AFFCB868();
    swift_allocError();
    uint64_t v31 = v30;
    sub_1AFDDB168();
    *uint64_t v31 = v41;
    sub_1AFFCBA98();
    sub_1AFFCB848();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v29 - 8) + 104))(v31, *MEMORY[0x1E4FBBA70], v29);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v24);
    a1 = v51;
LABEL_7:
    uint64_t v34 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v34);
  }
  if (*(unsigned char *)(v25 + 32))
  {
    char v53 = 1;
    sub_1AFDDB004();
    uint64_t v26 = v21;
    sub_1AFFCBA88();
    type metadata accessor for RawAttributionSourceLogo.Resolved(0);
    sub_1AFDDABF0(&qword_1E9AFAD00, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved);
    uint64_t v27 = (uint64_t)v39;
    uint64_t v28 = v44;
    sub_1AFFCBB58();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v26, v28);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v24);
    swift_storeEnumTagMultiPayload();
    uint64_t v36 = v27;
  }
  else
  {
    char v52 = 0;
    sub_1AFDDB058();
    sub_1AFFCBA88();
    type metadata accessor for RawAttributionSourceLogo.Unresolved(0);
    sub_1AFDDABF0(&qword_1E9AFAD08, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved);
    uint64_t v32 = (uint64_t)v40;
    uint64_t v33 = v43;
    sub_1AFFCBB58();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v22, v33);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v24);
    swift_storeEnumTagMultiPayload();
    uint64_t v36 = v32;
  }
  uint64_t v37 = (uint64_t)v38;
  sub_1AFDDB218(v36, (uint64_t)v38, type metadata accessor for RawAttributionSourceLogo);
  sub_1AFDDB218(v37, v42, type metadata accessor for RawAttributionSourceLogo);
  uint64_t v34 = (uint64_t)v51;
  return __swift_destroy_boxed_opaque_existential_1(v34);
}

uint64_t sub_1AFDD8B70@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1AFDD84B4(a1, a2);
}

uint64_t sub_1AFDD8B88(void *a1)
{
  return sub_1AFDD7F04(a1);
}

uint64_t sub_1AFDD8BA0()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFDD8BE4()
{
  return sub_1AFFCBE38();
}

BOOL sub_1AFDD8C24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
  uint64_t v67 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v64 = (uint64_t)&v57 - v8;
  sub_1AFDE4E88(0, &qword_1EB811AB8, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
  uint64_t v66 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v68 = (uint64_t)&v57 - v13;
  sub_1AFD4B138(0, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v65 = (uint64_t)&v57 - v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v57 - v20;
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)&v57 - v23;
  MEMORY[0x1F4188790](v25);
  uint64_t v27 = (char *)&v57 - v26;
  double v29 = MEMORY[0x1F4188790](v28);
  uint64_t v31 = (char *)&v57 - v30;
  if ((MEMORY[0x1B3E8BAC0](a1, a2, v29) & 1) == 0
    || *(double *)(a1 + *(int *)(v4 + 20)) != *(double *)(a2 + *(int *)(v4 + 20)))
  {
    return 0;
  }
  v62 = v21;
  v63 = v11;
  v58 = v6;
  v59 = v16;
  uint64_t v32 = type metadata accessor for RawAttributionSourceLogo.Unresolved(0);
  uint64_t v33 = *(int *)(v32 + 20);
  uint64_t v60 = a1;
  sub_1AFDDAD18(a1 + v33, (uint64_t)v31, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
  uint64_t v34 = v32;
  uint64_t v35 = *(int *)(v32 + 20);
  uint64_t v61 = a2;
  sub_1AFDDAD18(a2 + v35, (uint64_t)v27, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
  uint64_t v36 = v68;
  uint64_t v37 = v68 + *(int *)(v66 + 48);
  sub_1AFDDAD18((uint64_t)v31, v68, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
  sub_1AFDDAD18((uint64_t)v27, v37, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
  uint64_t v38 = v67 + 48;
  uint64_t v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v67 + 48);
  if (v39(v36, 1, v4) == 1)
  {
    sub_1AFDDAE2C((uint64_t)v27, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
    sub_1AFDDAE2C((uint64_t)v31, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
    if (v39(v37, 1, v4) == 1)
    {
      uint64_t v40 = v4;
      sub_1AFDDAE2C(v68, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
      goto LABEL_11;
    }
LABEL_8:
    sub_1AFDE4E2C(v68, &qword_1EB811AB8, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
    return 0;
  }
  sub_1AFDDAD18(v36, (uint64_t)v24, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
  uint64_t v67 = v38;
  if (v39(v37, 1, v4) == 1)
  {
    sub_1AFDDAE2C((uint64_t)v27, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
    sub_1AFDDAE2C((uint64_t)v31, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
    sub_1AFDDAC98((uint64_t)v24, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
    goto LABEL_8;
  }
  uint64_t v41 = v64;
  sub_1AFDDB218(v37, v64, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
  if ((MEMORY[0x1B3E8BAC0](v24, v41) & 1) == 0)
  {
    sub_1AFDDAC98(v41, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
    sub_1AFDDAE2C((uint64_t)v27, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
    sub_1AFDDAE2C((uint64_t)v31, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
    sub_1AFDDAC98((uint64_t)v24, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
    uint64_t v52 = v68;
LABEL_22:
    sub_1AFDDAE2C(v52, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
    return 0;
  }
  uint64_t v42 = *(int *)(v4 + 20);
  double v43 = *(double *)&v24[v42];
  double v44 = *(double *)(v41 + v42);
  sub_1AFDDAC98(v41, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
  sub_1AFDDAE2C((uint64_t)v27, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
  sub_1AFDDAE2C((uint64_t)v31, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
  sub_1AFDDAC98((uint64_t)v24, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
  uint64_t v40 = v4;
  sub_1AFDDAE2C(v68, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
  if (v43 != v44) {
    return 0;
  }
LABEL_11:
  uint64_t v45 = (uint64_t)v62;
  sub_1AFDDAD18(v60 + *(int *)(v34 + 24), (uint64_t)v62, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
  uint64_t v46 = v61 + *(int *)(v34 + 24);
  uint64_t v47 = v65;
  sub_1AFDDAD18(v46, v65, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
  uint64_t v48 = (uint64_t)v63;
  uint64_t v49 = (uint64_t)&v63[*(int *)(v66 + 48)];
  sub_1AFDDAD18(v45, (uint64_t)v63, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
  sub_1AFDDAD18(v47, v49, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
  if (v39(v48, 1, v40) == 1)
  {
    sub_1AFDDAE2C(v47, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
    sub_1AFDDAE2C(v45, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
    if (v39(v49, 1, v40) == 1)
    {
      sub_1AFDDAE2C(v48, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
      return 1;
    }
    goto LABEL_16;
  }
  uint64_t v51 = (uint64_t)v59;
  sub_1AFDDAD18(v48, (uint64_t)v59, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
  if (v39(v49, 1, v40) == 1)
  {
    sub_1AFDDAE2C(v47, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
    sub_1AFDDAE2C(v45, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
    sub_1AFDDAC98(v51, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
LABEL_16:
    sub_1AFDE4E2C(v48, &qword_1EB811AB8, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
    return 0;
  }
  uint64_t v53 = (uint64_t)v58;
  sub_1AFDDB218(v49, (uint64_t)v58, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
  if ((MEMORY[0x1B3E8BAC0](v51, v53) & 1) == 0)
  {
    sub_1AFDDAC98(v53, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
    sub_1AFDDAE2C(v47, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
    sub_1AFDDAE2C(v45, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
    sub_1AFDDAC98(v51, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
    uint64_t v52 = v48;
    goto LABEL_22;
  }
  uint64_t v54 = *(int *)(v40 + 20);
  double v55 = *(double *)(v51 + v54);
  double v56 = *(double *)(v53 + v54);
  sub_1AFDDAC98(v53, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
  sub_1AFDDAE2C(v47, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
  sub_1AFDDAE2C(v45, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
  sub_1AFDDAC98(v51, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
  sub_1AFDDAE2C(v48, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
  return v55 == v56;
}

BOOL sub_1AFDD9580(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RawAttributionSourceLogo.Resolved.Variant(0);
  uint64_t v70 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v64 = (uint64_t)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v61 - v7;
  sub_1AFDE4E88(0, &qword_1E9AFADA8, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
  uint64_t v10 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v61 - v14;
  sub_1AFD4B138(0, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v65 = (uint64_t)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v66 = (uint64_t)&v61 - v19;
  MEMORY[0x1F4188790](v20);
  uint64_t v67 = (uint64_t)&v61 - v21;
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)&v61 - v23;
  MEMORY[0x1F4188790](v25);
  uint64_t v27 = (char *)&v61 - v26;
  double v29 = MEMORY[0x1F4188790](v28);
  uint64_t v31 = (char *)&v61 - v30;
  uint64_t v32 = *(int *)(v4 + 28);
  uint64_t v68 = a1;
  uint64_t v69 = a2;
  uint64_t v33 = a1 + v32;
  uint64_t v34 = a2 + v32;
  if ((MEMORY[0x1B3E8BAC0](v33, v34, v29) & 1) == 0) {
    return 0;
  }
  uint64_t v35 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
  if (*(double *)(v33 + *(int *)(v35 + 20)) != *(double *)(v34 + *(int *)(v35 + 20))) {
    return 0;
  }
  uint64_t v61 = v35;
  v63 = v12;
  uint64_t v36 = type metadata accessor for RawAttributionSourceLogo.Resolved(0);
  sub_1AFDDAD18(v68 + *(int *)(v36 + 20), (uint64_t)v31, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
  uint64_t v62 = v36;
  sub_1AFDDAD18(v69 + *(int *)(v36 + 20), (uint64_t)v27, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
  uint64_t v37 = (uint64_t)&v15[*(int *)(v10 + 48)];
  sub_1AFDDAD18((uint64_t)v31, (uint64_t)v15, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
  sub_1AFDDAD18((uint64_t)v27, v37, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
  uint64_t v38 = v70 + 48;
  uint64_t v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v70 + 48);
  if (v39((uint64_t)v15, 1, v4) == 1)
  {
    sub_1AFDDAE2C((uint64_t)v27, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
    sub_1AFDDAE2C((uint64_t)v31, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
    if (v39(v37, 1, v4) == 1)
    {
      sub_1AFDDAE2C((uint64_t)v15, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
      goto LABEL_11;
    }
LABEL_8:
    sub_1AFDE4E2C((uint64_t)v15, &qword_1E9AFADA8, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
    return 0;
  }
  sub_1AFDDAD18((uint64_t)v15, (uint64_t)v24, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
  if (v39(v37, 1, v4) == 1)
  {
    sub_1AFDDAE2C((uint64_t)v27, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
    sub_1AFDDAE2C((uint64_t)v31, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
    sub_1AFDDAC98((uint64_t)v24, type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
    goto LABEL_8;
  }
  uint64_t v70 = v38;
  sub_1AFDDB218(v37, (uint64_t)v8, type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
  uint64_t v40 = *(int *)(v4 + 28);
  uint64_t v41 = &v24[v40];
  uint64_t v42 = &v8[v40];
  if ((MEMORY[0x1B3E8BAC0](&v24[v40], &v8[v40]) & 1) == 0)
  {
    sub_1AFDDAC98((uint64_t)v8, type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
    sub_1AFDDAE2C((uint64_t)v27, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
    sub_1AFDDAE2C((uint64_t)v31, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
    sub_1AFDDAC98((uint64_t)v24, type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
    uint64_t v53 = (uint64_t)v15;
LABEL_22:
    sub_1AFDDAE2C(v53, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
    return 0;
  }
  uint64_t v43 = *(int *)(v61 + 20);
  double v44 = *(double *)&v41[v43];
  double v45 = *(double *)&v42[v43];
  sub_1AFDDAC98((uint64_t)v8, type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
  sub_1AFDDAE2C((uint64_t)v27, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
  sub_1AFDDAE2C((uint64_t)v31, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
  sub_1AFDDAC98((uint64_t)v24, type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
  sub_1AFDDAE2C((uint64_t)v15, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
  if (v44 != v45) {
    return 0;
  }
LABEL_11:
  uint64_t v46 = v62;
  uint64_t v47 = v67;
  sub_1AFDDAD18(v68 + *(int *)(v62 + 24), v67, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
  uint64_t v48 = v66;
  sub_1AFDDAD18(v69 + *(int *)(v46 + 24), v66, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
  uint64_t v49 = (uint64_t)v63;
  uint64_t v50 = (uint64_t)&v63[*(int *)(v10 + 48)];
  sub_1AFDDAD18(v47, (uint64_t)v63, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
  sub_1AFDDAD18(v48, v50, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
  if (v39(v49, 1, v4) == 1)
  {
    sub_1AFDDAE2C(v48, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
    sub_1AFDDAE2C(v47, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
    if (v39(v50, 1, v4) == 1)
    {
      sub_1AFDDAE2C((uint64_t)v63, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
      return 1;
    }
    goto LABEL_16;
  }
  uint64_t v52 = v65;
  sub_1AFDDAD18(v49, v65, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
  if (v39(v50, 1, v4) == 1)
  {
    sub_1AFDDAE2C(v48, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
    sub_1AFDDAE2C(v47, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
    sub_1AFDDAC98(v52, type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
LABEL_16:
    sub_1AFDE4E2C((uint64_t)v63, &qword_1E9AFADA8, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
    return 0;
  }
  uint64_t v54 = v64;
  sub_1AFDDB218(v50, v64, type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
  uint64_t v55 = *(int *)(v4 + 28);
  uint64_t v56 = v52 + v55;
  uint64_t v57 = v54 + v55;
  if ((MEMORY[0x1B3E8BAC0](v52 + v55, v54 + v55) & 1) == 0)
  {
    sub_1AFDDAC98(v54, type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
    sub_1AFDDAE2C(v48, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
    sub_1AFDDAE2C(v47, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
    sub_1AFDDAC98(v52, type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
    uint64_t v53 = (uint64_t)v63;
    goto LABEL_22;
  }
  uint64_t v58 = *(int *)(v61 + 20);
  double v59 = *(double *)(v56 + v58);
  double v60 = *(double *)(v57 + v58);
  sub_1AFDDAC98(v54, type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
  sub_1AFDDAE2C(v48, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
  sub_1AFDDAE2C(v47, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
  sub_1AFDDAC98(v52, type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
  sub_1AFDDAE2C((uint64_t)v63, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
  return v59 == v60;
}

BOOL sub_1AFDD9EF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RawAttributionSourceLogo.Resolved(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for RawAttributionSourceLogo.Unresolved(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for RawAttributionSourceLogo(0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v28 - v14;
  sub_1AFDE4DC8();
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (uint64_t)&v18[*(int *)(v19 + 56)];
  sub_1AFDDAF9C(a1, (uint64_t)v18, type metadata accessor for RawAttributionSourceLogo);
  sub_1AFDDAF9C(a2, v20, type metadata accessor for RawAttributionSourceLogo);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1AFDDAF9C((uint64_t)v18, (uint64_t)v12, type metadata accessor for RawAttributionSourceLogo);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1AFDDB218(v20, (uint64_t)v6, type metadata accessor for RawAttributionSourceLogo.Resolved);
      BOOL v21 = sub_1AFDD9580((uint64_t)v12, (uint64_t)v6);
      sub_1AFDDAC98((uint64_t)v6, type metadata accessor for RawAttributionSourceLogo.Resolved);
      uint64_t v22 = (uint64_t)v12;
      uint64_t v23 = type metadata accessor for RawAttributionSourceLogo.Resolved;
LABEL_9:
      sub_1AFDDAC98(v22, v23);
      uint64_t v26 = type metadata accessor for RawAttributionSourceLogo;
      goto LABEL_10;
    }
    uint64_t v24 = type metadata accessor for RawAttributionSourceLogo.Resolved;
    uint64_t v25 = (uint64_t)v12;
  }
  else
  {
    sub_1AFDDAF9C((uint64_t)v18, (uint64_t)v15, type metadata accessor for RawAttributionSourceLogo);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_1AFDDB218(v20, (uint64_t)v9, type metadata accessor for RawAttributionSourceLogo.Unresolved);
      BOOL v21 = sub_1AFDD8C24((uint64_t)v15, (uint64_t)v9);
      sub_1AFDDAC98((uint64_t)v9, type metadata accessor for RawAttributionSourceLogo.Unresolved);
      uint64_t v22 = (uint64_t)v15;
      uint64_t v23 = type metadata accessor for RawAttributionSourceLogo.Unresolved;
      goto LABEL_9;
    }
    uint64_t v24 = type metadata accessor for RawAttributionSourceLogo.Unresolved;
    uint64_t v25 = (uint64_t)v15;
  }
  sub_1AFDDAC98(v25, v24);
  BOOL v21 = 0;
  uint64_t v26 = (uint64_t (*)(void))sub_1AFDE4DC8;
LABEL_10:
  sub_1AFDDAC98((uint64_t)v18, v26);
  return v21;
}

BOOL sub_1AFDDA258(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for RawAttributionSourceLogo(0);
  uint64_t v69 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  v63 = &v59[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1AFDE4E88(0, &qword_1EB818B38, &qword_1EB818B30, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
  uint64_t v66 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = &v59[-v7];
  sub_1AFD4B138(0, &qword_1EB818B30, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v64 = &v59[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v11);
  uint64_t v67 = &v59[-v12];
  MEMORY[0x1F4188790](v13);
  uint64_t v68 = &v59[-v14];
  uint64_t v15 = sub_1AFFC96E8();
  uint64_t v70 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v65 = &v59[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
  sub_1AFDE4E88(0, (unint64_t *)&qword_1EB818B80, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
  uint64_t v19 = v18;
  MEMORY[0x1F4188790](v18);
  BOOL v21 = &v59[-v20];
  sub_1AFD4B138(0, (unint64_t *)&qword_1EB81A490, v17);
  MEMORY[0x1F4188790](v22 - 8);
  uint64_t v24 = &v59[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v25);
  uint64_t v27 = &v59[-v26];
  MEMORY[0x1F4188790](v28);
  uint64_t v30 = &v59[-v29];
  uint64_t v31 = *a1;
  uint64_t v32 = a1[1];
  v71 = a1;
  v72 = a2;
  if (v31 == *a2 && v32 == a2[1] || (v33 = sub_1AFFCBCE8(), BOOL result = 0, (v33 & 1) != 0))
  {
    uint64_t v61 = v4;
    uint64_t v62 = v8;
    uint64_t v35 = type metadata accessor for RawAttributionSource(0);
    uint64_t v36 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
    sub_1AFDDAD18((uint64_t)v71 + *(int *)(v35 + 20), (uint64_t)v30, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
    sub_1AFDDAD18((uint64_t)v72 + *(int *)(v35 + 20), (uint64_t)v27, (unint64_t *)&qword_1EB81A490, v36);
    uint64_t v37 = (uint64_t)&v21[*(int *)(v19 + 48)];
    sub_1AFDDAD18((uint64_t)v30, (uint64_t)v21, (unint64_t *)&qword_1EB81A490, v36);
    sub_1AFDDAD18((uint64_t)v27, v37, (unint64_t *)&qword_1EB81A490, v36);
    uint64_t v38 = v70;
    uint64_t v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v70 + 48);
    if (v39((uint64_t)v21, 1, v15) == 1)
    {
      uint64_t v40 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
      sub_1AFDDAE2C((uint64_t)v27, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
      sub_1AFDDAE2C((uint64_t)v30, (unint64_t *)&qword_1EB81A490, v40);
      if (v39(v37, 1, v15) == 1)
      {
        sub_1AFDDAE2C((uint64_t)v21, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
LABEL_11:
        uint64_t v49 = v68;
        sub_1AFDDAD18((uint64_t)v71 + *(int *)(v35 + 24), (uint64_t)v68, &qword_1EB818B30, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
        uint64_t v50 = (uint64_t)v72 + *(int *)(v35 + 24);
        uint64_t v51 = v67;
        sub_1AFDDAD18(v50, (uint64_t)v67, &qword_1EB818B30, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
        uint64_t v52 = (uint64_t)v62;
        uint64_t v53 = (uint64_t)&v62[*(int *)(v66 + 48)];
        sub_1AFDDAD18((uint64_t)v49, (uint64_t)v62, &qword_1EB818B30, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
        sub_1AFDDAD18((uint64_t)v51, v53, &qword_1EB818B30, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
        uint64_t v54 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v69 + 48);
        uint64_t v55 = v61;
        if (v54(v52, 1, v61) == 1)
        {
          sub_1AFDDAE2C((uint64_t)v51, &qword_1EB818B30, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
          sub_1AFDDAE2C((uint64_t)v49, &qword_1EB818B30, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
          if (v54(v53, 1, v55) == 1)
          {
            sub_1AFDDAE2C(v52, &qword_1EB818B30, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
            return 1;
          }
        }
        else
        {
          uint64_t v56 = v64;
          sub_1AFDDAD18(v52, (uint64_t)v64, &qword_1EB818B30, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
          if (v54(v53, 1, v55) != 1)
          {
            uint64_t v57 = v63;
            sub_1AFDDB218(v53, (uint64_t)v63, type metadata accessor for RawAttributionSourceLogo);
            BOOL v58 = sub_1AFDD9EF8((uint64_t)v56, (uint64_t)v57);
            sub_1AFDDAC98((uint64_t)v57, type metadata accessor for RawAttributionSourceLogo);
            sub_1AFDDAE2C((uint64_t)v51, &qword_1EB818B30, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
            sub_1AFDDAE2C((uint64_t)v49, &qword_1EB818B30, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
            sub_1AFDDAC98((uint64_t)v56, type metadata accessor for RawAttributionSourceLogo);
            sub_1AFDDAE2C(v52, &qword_1EB818B30, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
            return v58;
          }
          sub_1AFDDAE2C((uint64_t)v51, &qword_1EB818B30, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
          sub_1AFDDAE2C((uint64_t)v49, &qword_1EB818B30, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
          sub_1AFDDAC98((uint64_t)v56, type metadata accessor for RawAttributionSourceLogo);
        }
        uint64_t v42 = &qword_1EB818B38;
        uint64_t v43 = &qword_1EB818B30;
        double v44 = (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo;
        uint64_t v45 = v52;
        goto LABEL_17;
      }
    }
    else
    {
      sub_1AFDDAD18((uint64_t)v21, (uint64_t)v24, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
      if (v39(v37, 1, v15) != 1)
      {
        uint64_t v46 = v65;
        (*(void (**)(unsigned char *, uint64_t, uint64_t))(v38 + 32))(v65, v37, v15);
        sub_1AFDDABF0(&qword_1EB818B70, MEMORY[0x1E4F276F0]);
        int v60 = sub_1AFFCADD8();
        uint64_t v47 = *(void (**)(unsigned char *, uint64_t))(v38 + 8);
        v47(v46, v15);
        uint64_t v48 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
        sub_1AFDDAE2C((uint64_t)v27, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
        sub_1AFDDAE2C((uint64_t)v30, (unint64_t *)&qword_1EB81A490, v48);
        v47(v24, v15);
        sub_1AFDDAE2C((uint64_t)v21, (unint64_t *)&qword_1EB81A490, v48);
        if ((v60 & 1) == 0) {
          return 0;
        }
        goto LABEL_11;
      }
      uint64_t v41 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
      sub_1AFDDAE2C((uint64_t)v27, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
      sub_1AFDDAE2C((uint64_t)v30, (unint64_t *)&qword_1EB81A490, v41);
      (*(void (**)(unsigned char *, uint64_t))(v38 + 8))(v24, v15);
    }
    uint64_t v42 = (unint64_t *)&qword_1EB818B80;
    uint64_t v43 = (unint64_t *)&qword_1EB81A490;
    double v44 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
    uint64_t v45 = (uint64_t)v21;
LABEL_17:
    sub_1AFDE4E2C(v45, v42, v43, v44);
    return 0;
  }
  return result;
}

unint64_t sub_1AFDDAB9C()
{
  unint64_t result = qword_1EB811628;
  if (!qword_1EB811628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB811628);
  }
  return result;
}

uint64_t sub_1AFDDABF0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for RawAttributionSourceLogo.Resolved.Variant(uint64_t a1)
{
  return sub_1AFD9BB54(a1, (uint64_t *)&unk_1EB8188D8);
}

uint64_t type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(uint64_t a1)
{
  return sub_1AFD9BB54(a1, (uint64_t *)&unk_1EB8188C8);
}

uint64_t type metadata accessor for RawAttributionSourceLogo.Resolved(uint64_t a1)
{
  return sub_1AFD9BB54(a1, (uint64_t *)&unk_1EB81A5B8);
}

uint64_t sub_1AFDDAC98(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for RawAttributionSourceLogo.Unresolved(uint64_t a1)
{
  return sub_1AFD9BB54(a1, (uint64_t *)&unk_1EB81A5A8);
}

uint64_t sub_1AFDDAD18(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1AFD4B138(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

unint64_t sub_1AFDDAD84()
{
  unint64_t result = qword_1E9AFAC68;
  if (!qword_1E9AFAC68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFAC68);
  }
  return result;
}

unint64_t sub_1AFDDADD8()
{
  unint64_t result = qword_1EB811680;
  if (!qword_1EB811680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB811680);
  }
  return result;
}

uint64_t sub_1AFDDAE2C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1AFD4B138(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1AFDDAE88(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1AFD4B138(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

unint64_t sub_1AFDDAEF4()
{
  unint64_t result = qword_1E9AFAC98;
  if (!qword_1E9AFAC98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFAC98);
  }
  return result;
}

unint64_t sub_1AFDDAF48()
{
  unint64_t result = qword_1E9AFACB0;
  if (!qword_1E9AFACB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFACB0);
  }
  return result;
}

uint64_t sub_1AFDDAF9C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_1AFDDB004()
{
  unint64_t result = qword_1EB8116A0;
  if (!qword_1EB8116A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8116A0);
  }
  return result;
}

unint64_t sub_1AFDDB058()
{
  unint64_t result = qword_1EB8116B8;
  if (!qword_1EB8116B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8116B8);
  }
  return result;
}

unint64_t sub_1AFDDB0AC()
{
  unint64_t result = qword_1EB811668;
  if (!qword_1EB811668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB811668);
  }
  return result;
}

void sub_1AFDDB100(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

void sub_1AFDDB168()
{
  if (!qword_1E9AFACF0)
  {
    sub_1AFDDB1D8();
    sub_1AFFCB858();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1E9AFACF0);
    }
  }
}

unint64_t sub_1AFDDB1D8()
{
  unint64_t result = qword_1E9AFACF8;
  if (!qword_1E9AFACF8)
  {
    unint64_t result = swift_getExistentialMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1E9AFACF8);
  }
  return result;
}

uint64_t sub_1AFDDB218(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1AFDDB280()
{
  return sub_1AFDDABF0(&qword_1E9AFAD10, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
}

uint64_t sub_1AFDDB2C8()
{
  return sub_1AFDDABF0(&qword_1E9AFAD18, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved);
}

uint64_t sub_1AFDDB310()
{
  return sub_1AFDDABF0(&qword_1E9AFAD20, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
}

uint64_t sub_1AFDDB358()
{
  return sub_1AFDDABF0(&qword_1E9AFAD28, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved);
}

uint64_t sub_1AFDDB3A0()
{
  return sub_1AFDDABF0(&qword_1E9AFAD30, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
}

uint64_t *sub_1AFDDB3E8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1AFFC8E48();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    unint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1AFFC96E8();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    sub_1AFFC8E38();
    if (v13(v10, 1, v11))
    {
      sub_1AFD4B138(0, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = *(int *)(a3 + 24);
    uint64_t v17 = (uint64_t *)((char *)v4 + v16);
    uint64_t v18 = (uint64_t *)((char *)a2 + v16);
    uint64_t v19 = type metadata accessor for RawAttributionSourceLogo(0);
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      sub_1AFD4B138(0, &qword_1EB818B30, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
      memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      uint64_t v70 = v20;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v22 = *v18;
        unint64_t v23 = v18[1];
        sub_1AFD4B0E0(*v18, v23);
        *uint64_t v17 = v22;
        v17[1] = v23;
        *((_OWORD *)v17 + 1) = *((_OWORD *)v18 + 1);
        uint64_t v24 = type metadata accessor for RawAttributionSourceLogo.Resolved.Variant(0);
        uint64_t v25 = *(int *)(v24 + 28);
        uint64_t v26 = (char *)v17 + v25;
        uint64_t v27 = (char *)v18 + v25;
        uint64_t v62 = *(void (**)(void))(v12 + 16);
        ((void (*)(char *, char *, uint64_t))v62)((char *)v17 + v25, (char *)v18 + v25, v11);
        uint64_t v60 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
        *(void *)&v26[*(int *)(v60 + 20)] = *(void *)&v27[*(int *)(v60 + 20)];
        uint64_t v66 = type metadata accessor for RawAttributionSourceLogo.Resolved(0);
        __dst = (int *)v24;
        uint64_t v28 = *(int *)(v66 + 20);
        uint64_t v29 = (void *)((char *)v17 + v28);
        uint64_t v30 = (uint64_t *)((char *)v18 + v28);
        uint64_t v64 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48);
        uint64_t v59 = *(void *)(v24 - 8);
        if (v64((char *)v18 + v28, 1, v24))
        {
          sub_1AFD4B138(0, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
          memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
        }
        else
        {
          unint64_t v39 = v30[1];
          uint64_t v58 = *v30;
          sub_1AFD4B0E0(*v30, v39);
          void *v29 = v58;
          v29[1] = v39;
          *((_OWORD *)v29 + 1) = *((_OWORD *)v30 + 1);
          uint64_t v40 = *(int *)(v24 + 28);
          uint64_t v41 = (char *)v30 + v40;
          uint64_t v42 = (char *)v29 + v40;
          v62();
          *(void *)&v42[*(int *)(v60 + 20)] = *(void *)&v41[*(int *)(v60 + 20)];
          (*(void (**)(void *, void, uint64_t, uint64_t))(v59 + 56))(v29, 0, 1, v24);
        }
        uint64_t v43 = *(int *)(v66 + 24);
        double v44 = (void *)((char *)v17 + v43);
        uint64_t v45 = (uint64_t *)((char *)v18 + v43);
        uint64_t v46 = v70;
        if (v64((char *)v45, 1, v24))
        {
          sub_1AFD4B138(0, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
          memcpy(v44, v45, *(void *)(*(void *)(v47 - 8) + 64));
        }
        else
        {
          uint64_t v52 = *v45;
          unint64_t v53 = v45[1];
          sub_1AFD4B0E0(*v45, v53);
          void *v44 = v52;
          v44[1] = v53;
          *((_OWORD *)v44 + 1) = *((_OWORD *)v45 + 1);
          uint64_t v54 = __dst[7];
          uint64_t v55 = (char *)v44 + v54;
          uint64_t v56 = (char *)v45 + v54;
          ((void (*)(char *, char *, uint64_t))v62)((char *)v44 + v54, v56, v11);
          *(void *)&v55[*(int *)(v60 + 20)] = *(void *)&v56[*(int *)(v60 + 20)];
          (*(void (**)(void *, void, uint64_t, int *))(v59 + 56))(v44, 0, 1, __dst);
        }
      }
      else
      {
        uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
        v32((char *)v17, (char *)v18, v11);
        uint64_t v33 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
        *(void *)((char *)v17 + *(int *)(v33 + 20)) = *(uint64_t *)((char *)v18 + *(int *)(v33 + 20));
        uint64_t v34 = type metadata accessor for RawAttributionSourceLogo.Unresolved(0);
        uint64_t v35 = *(int *)(v34 + 20);
        uint64_t v67 = v34;
        __dsta = (char *)v17 + v35;
        uint64_t v36 = (char *)v18 + v35;
        uint64_t v63 = *(void *)(v33 - 8);
        uint64_t v65 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48);
        uint64_t v61 = v32;
        if (v65((char *)v18 + v35, 1, v33))
        {
          sub_1AFD4B138(0, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
          memcpy(__dsta, v36, *(void *)(*(void *)(v37 - 8) + 64));
          uint64_t v38 = v63;
        }
        else
        {
          v32(__dsta, v36, v11);
          *(void *)&__dsta[*(int *)(v33 + 20)] = *(void *)&v36[*(int *)(v33 + 20)];
          uint64_t v38 = v63;
          (*(void (**)(void))(v63 + 56))();
        }
        uint64_t v48 = *(int *)(v67 + 24);
        uint64_t v49 = (char *)v17 + v48;
        uint64_t v50 = (char *)v18 + v48;
        if (v65(v50, 1, v33))
        {
          sub_1AFD4B138(0, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
          memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
        }
        else
        {
          v61(v49, v50, v11);
          *(void *)&v49[*(int *)(v33 + 20)] = *(void *)&v50[*(int *)(v33 + 20)];
          (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v49, 0, 1, v33);
        }
        uint64_t v46 = v70;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v46 + 56))(v17, 0, 1, v19);
    }
  }
  return v4;
}

uint64_t sub_1AFDDBB58(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1AFFC96E8();
  uint64_t v21 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v4, v5);
  }
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = type metadata accessor for RawAttributionSourceLogo(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7);
  if (!result)
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1AFD4B504(*(void *)v6, *(void *)(v6 + 8));
      uint64_t v9 = type metadata accessor for RawAttributionSourceLogo.Resolved.Variant(0);
      uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
      v20(v6 + *(int *)(v9 + 28), v5);
      uint64_t v10 = type metadata accessor for RawAttributionSourceLogo.Resolved(0);
      uint64_t v11 = v6 + *(int *)(v10 + 20);
      uint64_t v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
      if (!v12(v11, 1, v9))
      {
        sub_1AFD4B504(*(void *)v11, *(void *)(v11 + 8));
        v20(v11 + *(int *)(v9 + 28), v5);
      }
      uint64_t v13 = v6 + *(int *)(v10 + 24);
      uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v12)(v13, 1, v9);
      if (result) {
        return result;
      }
      sub_1AFD4B504(*(void *)v13, *(void *)(v13 + 8));
      uint64_t v14 = v13 + *(int *)(v9 + 28);
    }
    else
    {
      uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
      v20(v6, v5);
      uint64_t v15 = type metadata accessor for RawAttributionSourceLogo.Unresolved(0);
      uint64_t v16 = v6 + *(int *)(v15 + 20);
      uint64_t v17 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
      uint64_t v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
      if (!v18(v16, 1, v17)) {
        v20(v16, v5);
      }
      uint64_t v19 = v6 + *(int *)(v15 + 24);
      uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v18)(v19, 1, v17);
      if (result) {
        return result;
      }
      uint64_t v14 = v19;
    }
    return ((uint64_t (*)(uint64_t, uint64_t))v20)(v14, v5);
  }
  return result;
}

void *sub_1AFDDBE58(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1AFFC96E8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  sub_1AFFC8E38();
  if (v12(v9, 1, v10))
  {
    sub_1AFD4B138(0, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = *(int *)(a3 + 24);
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  uint64_t v17 = type metadata accessor for RawAttributionSourceLogo(0);
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    sub_1AFD4B138(0, &qword_1EB818B30, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    uint64_t v68 = v18;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v20 = *v16;
      unint64_t v21 = v16[1];
      sub_1AFD4B0E0(*v16, v21);
      void *v15 = v20;
      v15[1] = v21;
      *((_OWORD *)v15 + 1) = *((_OWORD *)v16 + 1);
      uint64_t v22 = type metadata accessor for RawAttributionSourceLogo.Resolved.Variant(0);
      uint64_t v23 = *(int *)(v22 + 28);
      uint64_t v24 = (char *)v15 + v23;
      uint64_t v25 = (char *)v16 + v23;
      uint64_t v60 = *(void (**)(void))(v11 + 16);
      ((void (*)(char *, char *, uint64_t))v60)((char *)v15 + v23, (char *)v16 + v23, v10);
      uint64_t v58 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
      *(void *)&v24[*(int *)(v58 + 20)] = *(void *)&v25[*(int *)(v58 + 20)];
      uint64_t v64 = type metadata accessor for RawAttributionSourceLogo.Resolved(0);
      __dst = (int *)v22;
      uint64_t v26 = *(int *)(v64 + 20);
      uint64_t v27 = (void *)((char *)v15 + v26);
      uint64_t v28 = (uint64_t *)((char *)v16 + v26);
      uint64_t v62 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48);
      uint64_t v57 = *(void *)(v22 - 8);
      if (v62((char *)v16 + v26, 1, v22))
      {
        sub_1AFD4B138(0, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
        memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        unint64_t v37 = v28[1];
        uint64_t v56 = *v28;
        sub_1AFD4B0E0(*v28, v37);
        *uint64_t v27 = v56;
        v27[1] = v37;
        *((_OWORD *)v27 + 1) = *((_OWORD *)v28 + 1);
        uint64_t v38 = *(int *)(v22 + 28);
        unint64_t v39 = (char *)v28 + v38;
        uint64_t v40 = (char *)v27 + v38;
        v60();
        *(void *)&v40[*(int *)(v58 + 20)] = *(void *)&v39[*(int *)(v58 + 20)];
        (*(void (**)(void *, void, uint64_t, uint64_t))(v57 + 56))(v27, 0, 1, v22);
      }
      uint64_t v41 = *(int *)(v64 + 24);
      uint64_t v42 = (void *)((char *)v15 + v41);
      uint64_t v43 = (uint64_t *)((char *)v16 + v41);
      uint64_t v44 = v68;
      if (v62((char *)v43, 1, v22))
      {
        sub_1AFD4B138(0, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
        memcpy(v42, v43, *(void *)(*(void *)(v45 - 8) + 64));
      }
      else
      {
        uint64_t v50 = *v43;
        unint64_t v51 = v43[1];
        sub_1AFD4B0E0(*v43, v51);
        void *v42 = v50;
        v42[1] = v51;
        *((_OWORD *)v42 + 1) = *((_OWORD *)v43 + 1);
        uint64_t v52 = __dst[7];
        unint64_t v53 = (char *)v42 + v52;
        uint64_t v54 = (char *)v43 + v52;
        ((void (*)(char *, char *, uint64_t))v60)((char *)v42 + v52, v54, v10);
        *(void *)&v53[*(int *)(v58 + 20)] = *(void *)&v54[*(int *)(v58 + 20)];
        (*(void (**)(void *, void, uint64_t, int *))(v57 + 56))(v42, 0, 1, __dst);
      }
    }
    else
    {
      uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
      v30((char *)v15, (char *)v16, v10);
      uint64_t v31 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
      *(void *)((char *)v15 + *(int *)(v31 + 20)) = *(uint64_t *)((char *)v16 + *(int *)(v31 + 20));
      uint64_t v32 = type metadata accessor for RawAttributionSourceLogo.Unresolved(0);
      uint64_t v33 = *(int *)(v32 + 20);
      uint64_t v65 = v32;
      __dsta = (char *)v15 + v33;
      uint64_t v34 = (char *)v16 + v33;
      uint64_t v61 = *(void *)(v31 - 8);
      uint64_t v63 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48);
      uint64_t v59 = v30;
      if (v63((char *)v16 + v33, 1, v31))
      {
        sub_1AFD4B138(0, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
        memcpy(__dsta, v34, *(void *)(*(void *)(v35 - 8) + 64));
        uint64_t v36 = v61;
      }
      else
      {
        v30(__dsta, v34, v10);
        *(void *)&__dsta[*(int *)(v31 + 20)] = *(void *)&v34[*(int *)(v31 + 20)];
        uint64_t v36 = v61;
        (*(void (**)(void))(v61 + 56))();
      }
      uint64_t v46 = *(int *)(v65 + 24);
      uint64_t v47 = (char *)v15 + v46;
      uint64_t v48 = (char *)v16 + v46;
      if (v63(v48, 1, v31))
      {
        sub_1AFD4B138(0, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
        memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
      }
      else
      {
        v59(v47, v48, v10);
        *(void *)&v47[*(int *)(v31 + 20)] = *(void *)&v48[*(int *)(v31 + 20)];
        (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v47, 0, 1, v31);
      }
      uint64_t v44 = v68;
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void *, void, uint64_t, uint64_t))(v44 + 56))(v15, 0, 1, v17);
  }
  return a1;
}

void *sub_1AFDDC578(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1AFFC96E8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    sub_1AFD4B138(0, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  uint64_t v18 = type metadata accessor for RawAttributionSourceLogo(0);
  v115 = *(void **)(v18 - 8);
  uint64_t v19 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t))v115[6];
  int v20 = v19(v16, 1, v18);
  int v21 = v19(v17, 1, v18);
  if (v20)
  {
    if (!v21)
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v22 = *v17;
        unint64_t v23 = v17[1];
        sub_1AFD4B0E0(*v17, v23);
        *uint64_t v16 = v22;
        v16[1] = v23;
        v16[2] = v17[2];
        v16[3] = v17[3];
        uint64_t v24 = type metadata accessor for RawAttributionSourceLogo.Resolved.Variant(0);
        uint64_t v25 = *(int *)(v24 + 28);
        uint64_t v26 = (char *)v16 + v25;
        uint64_t v27 = (char *)v17 + v25;
        v103 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
        v103((char *)v16 + v25, (char *)v17 + v25, v9);
        uint64_t v99 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
        *(void *)&v26[*(int *)(v99 + 20)] = *(void *)&v27[*(int *)(v99 + 20)];
        __dst = (int *)type metadata accessor for RawAttributionSourceLogo.Resolved(0);
        uint64_t v28 = __dst[5];
        uint64_t v29 = (uint64_t *)((char *)v16 + v28);
        uint64_t v30 = (uint64_t *)((char *)v17 + v28);
        v107 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48);
        uint64_t v96 = *(void *)(v24 - 8);
        if (v107((char *)v17 + v28, 1, v24))
        {
          sub_1AFD4B138(0, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
          memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
        }
        else
        {
          uint64_t v95 = v24;
          uint64_t v50 = *v30;
          unint64_t v51 = v30[1];
          sub_1AFD4B0E0(*v30, v51);
          void *v29 = v50;
          v29[1] = v51;
          v29[2] = v30[2];
          v29[3] = v30[3];
          uint64_t v52 = *(int *)(v95 + 28);
          unint64_t v53 = (char *)v29 + v52;
          uint64_t v54 = (char *)v30 + v52;
          v103((char *)v29 + v52, (char *)v30 + v52, v9);
          *(void *)&v53[*(int *)(v99 + 20)] = *(void *)&v54[*(int *)(v99 + 20)];
          uint64_t v24 = v95;
          (*(void (**)(void *, void, uint64_t, uint64_t))(v96 + 56))(v29, 0, 1, v95);
        }
        uint64_t v55 = __dst[6];
        uint64_t v56 = (uint64_t *)((char *)v16 + v55);
        uint64_t v57 = (uint64_t *)((char *)v17 + v55);
        if (v107((char *)v57, 1, v24))
        {
          sub_1AFD4B138(0, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
          memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64));
        }
        else
        {
          uint64_t v69 = v24;
          uint64_t v70 = *v57;
          unint64_t v71 = v57[1];
          sub_1AFD4B0E0(*v57, v71);
          *uint64_t v56 = v70;
          v56[1] = v71;
          v56[2] = v57[2];
          v56[3] = v57[3];
          uint64_t v72 = *(int *)(v69 + 28);
          v73 = (char *)v56 + v72;
          v74 = (char *)v57 + v72;
          v103((char *)v56 + v72, v74, v9);
          *(void *)&v73[*(int *)(v99 + 20)] = *(void *)&v74[*(int *)(v99 + 20)];
          (*(void (**)(void *, void, uint64_t, uint64_t))(v96 + 56))(v56, 0, 1, v69);
        }
      }
      else
      {
        uint64_t v43 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v10 + 16);
        v43(v16, v17, v9);
        uint64_t v44 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
        *(uint64_t *)((char *)v16 + *(int *)(v44 + 20)) = *(uint64_t *)((char *)v17 + *(int *)(v44 + 20));
        uint64_t v45 = type metadata accessor for RawAttributionSourceLogo.Unresolved(0);
        uint64_t v46 = *(int *)(v45 + 20);
        uint64_t v109 = v45;
        __dstb = (char *)v16 + v46;
        uint64_t v47 = (char *)v17 + v46;
        uint64_t v101 = *(void *)(v44 - 8);
        v105 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v101 + 48);
        v97 = (void (*)(char *, char *, uint64_t))v43;
        if (v105((char *)v17 + v46, 1, v44))
        {
          sub_1AFD4B138(0, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
          memcpy(__dstb, v47, *(void *)(*(void *)(v48 - 8) + 64));
          uint64_t v49 = v101;
        }
        else
        {
          v43((uint64_t *)__dstb, (uint64_t *)v47, v9);
          *(void *)&__dstb[*(int *)(v44 + 20)] = *(void *)&v47[*(int *)(v44 + 20)];
          uint64_t v49 = v101;
          (*(void (**)(void))(v101 + 56))();
        }
        uint64_t v65 = *(int *)(v109 + 24);
        uint64_t v66 = (char *)v16 + v65;
        uint64_t v67 = (char *)v17 + v65;
        if (v105(v67, 1, v44))
        {
          sub_1AFD4B138(0, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
          memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
        }
        else
        {
          v97(v66, v67, v9);
          *(void *)&v66[*(int *)(v44 + 20)] = *(void *)&v67[*(int *)(v44 + 20)];
          (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v66, 0, 1, v44);
        }
      }
      swift_storeEnumTagMultiPayload();
      ((void (*)(uint64_t *, void, uint64_t, uint64_t))v115[7])(v16, 0, 1, v18);
      return a1;
    }
LABEL_14:
    sub_1AFD4B138(0, &qword_1EB818B30, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
    memcpy(v16, v17, *(void *)(*(void *)(v32 - 8) + 64));
    return a1;
  }
  if (v21)
  {
    sub_1AFDDAC98((uint64_t)v16, type metadata accessor for RawAttributionSourceLogo);
    goto LABEL_14;
  }
  if (a1 != a2)
  {
    sub_1AFDDAC98((uint64_t)v16, type metadata accessor for RawAttributionSourceLogo);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v33 = *v17;
      unint64_t v34 = v17[1];
      sub_1AFD4B0E0(*v17, v34);
      *uint64_t v16 = v33;
      v16[1] = v34;
      v16[2] = v17[2];
      v16[3] = v17[3];
      uint64_t v35 = type metadata accessor for RawAttributionSourceLogo.Resolved.Variant(0);
      uint64_t v36 = *(int *)(v35 + 28);
      unint64_t v37 = (char *)v16 + v36;
      uint64_t v38 = (char *)v17 + v36;
      v108 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
      v108((char *)v16 + v36, (char *)v17 + v36, v9);
      uint64_t v104 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
      *(void *)&v37[*(int *)(v104 + 20)] = *(void *)&v38[*(int *)(v104 + 20)];
      v116 = (int *)type metadata accessor for RawAttributionSourceLogo.Resolved(0);
      uint64_t v39 = v116[5];
      uint64_t v40 = (uint64_t *)((char *)v16 + v39);
      uint64_t v41 = (uint64_t *)((char *)v17 + v39);
      __dsta = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v35 - 8) + 48);
      uint64_t v100 = *(void *)(v35 - 8);
      if (__dsta((char *)v17 + v39, 1, v35))
      {
        sub_1AFD4B138(0, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
        memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
      }
      else
      {
        uint64_t v98 = v35;
        uint64_t v76 = *v41;
        unint64_t v77 = v41[1];
        sub_1AFD4B0E0(*v41, v77);
        *uint64_t v40 = v76;
        v40[1] = v77;
        v40[2] = v41[2];
        v40[3] = v41[3];
        uint64_t v78 = *(int *)(v98 + 28);
        v79 = (char *)v40 + v78;
        v80 = (char *)v41 + v78;
        v108((char *)v40 + v78, (char *)v41 + v78, v9);
        *(void *)&v79[*(int *)(v104 + 20)] = *(void *)&v80[*(int *)(v104 + 20)];
        uint64_t v35 = v98;
        (*(void (**)(void *, void, uint64_t, uint64_t))(v100 + 56))(v40, 0, 1, v98);
      }
      uint64_t v81 = v116[6];
      v82 = (uint64_t *)((char *)v16 + v81);
      v83 = (uint64_t *)((char *)v17 + v81);
      if (__dsta((char *)v83, 1, v35))
      {
        sub_1AFD4B138(0, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
        memcpy(v82, v83, *(void *)(*(void *)(v84 - 8) + 64));
      }
      else
      {
        uint64_t v89 = v35;
        uint64_t v90 = *v83;
        unint64_t v91 = v83[1];
        sub_1AFD4B0E0(*v83, v91);
        void *v82 = v90;
        v82[1] = v91;
        v82[2] = v83[2];
        v82[3] = v83[3];
        uint64_t v92 = *(int *)(v89 + 28);
        v93 = (char *)v82 + v92;
        v94 = (char *)v83 + v92;
        v108((char *)v82 + v92, v94, v9);
        *(void *)&v93[*(int *)(v104 + 20)] = *(void *)&v94[*(int *)(v104 + 20)];
        (*(void (**)(void *, void, uint64_t, uint64_t))(v100 + 56))(v82, 0, 1, v89);
      }
    }
    else
    {
      uint64_t v59 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v10 + 16);
      v59(v16, v17, v9);
      uint64_t v60 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
      *(uint64_t *)((char *)v16 + *(int *)(v60 + 20)) = *(uint64_t *)((char *)v17 + *(int *)(v60 + 20));
      __dstc = (int *)type metadata accessor for RawAttributionSourceLogo.Unresolved(0);
      uint64_t v61 = __dstc[5];
      v117 = (char *)v16 + v61;
      uint64_t v62 = (char *)v17 + v61;
      uint64_t v106 = *(void *)(v60 - 8);
      v110 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v106 + 48);
      v102 = (void (*)(char *, char *, uint64_t))v59;
      if (v110((char *)v17 + v61, 1, v60))
      {
        sub_1AFD4B138(0, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
        memcpy(v117, v62, *(void *)(*(void *)(v63 - 8) + 64));
        uint64_t v64 = v106;
      }
      else
      {
        v59((uint64_t *)v117, (uint64_t *)v62, v9);
        *(void *)&v117[*(int *)(v60 + 20)] = *(void *)&v62[*(int *)(v60 + 20)];
        uint64_t v64 = v106;
        (*(void (**)(void))(v106 + 56))();
      }
      uint64_t v85 = __dstc[6];
      v86 = (char *)v16 + v85;
      v87 = (char *)v17 + v85;
      if (v110(v87, 1, v60))
      {
        sub_1AFD4B138(0, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
        memcpy(v86, v87, *(void *)(*(void *)(v88 - 8) + 64));
      }
      else
      {
        v102(v86, v87, v9);
        *(void *)&v86[*(int *)(v60 + 20)] = *(void *)&v87[*(int *)(v60 + 20)];
        (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v86, 0, 1, v60);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_1AFDDD280(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1AFFC96E8();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_1AFD4B138(0, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = *(int *)(a3 + 24);
  int v13 = (_OWORD *)((char *)a1 + v12);
  uint64_t v14 = (_OWORD *)((char *)a2 + v12);
  uint64_t v15 = type metadata accessor for RawAttributionSourceLogo(0);
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    sub_1AFD4B138(0, &qword_1EB818B30, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    uint64_t v62 = v16;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      long long v18 = v14[1];
      *int v13 = *v14;
      v13[1] = v18;
      uint64_t v19 = type metadata accessor for RawAttributionSourceLogo.Resolved.Variant(0);
      uint64_t v20 = *(int *)(v19 + 28);
      int v21 = (char *)v13 + v20;
      uint64_t v22 = (char *)v14 + v20;
      unint64_t v53 = *(void (**)(void))(v10 + 32);
      ((void (*)(char *, char *, uint64_t))v53)((char *)v13 + v20, (char *)v14 + v20, v9);
      uint64_t v52 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
      *(void *)&v21[*(int *)(v52 + 20)] = *(void *)&v22[*(int *)(v52 + 20)];
      uint64_t v59 = type metadata accessor for RawAttributionSourceLogo.Resolved(0);
      uint64_t v23 = *(int *)(v59 + 20);
      uint64_t v24 = (_OWORD *)((char *)v14 + v23);
      uint64_t v25 = *(void *)(v19 - 8);
      __dst = (_OWORD *)((char *)v13 + v23);
      uint64_t v57 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
      if (v57((char *)v14 + v23, 1, v19))
      {
        sub_1AFD4B138(0, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
        memcpy(__dst, v24, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        long long v34 = v24[1];
        _OWORD *__dst = *v24;
        __dst[1] = v34;
        uint64_t v35 = *(int *)(v19 + 28);
        unint64_t v51 = (char *)__dst + v35;
        uint64_t v36 = (char *)v24 + v35;
        v53();
        *(void *)&v51[*(int *)(v52 + 20)] = *(void *)&v36[*(int *)(v52 + 20)];
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v25 + 56))(__dst, 0, 1, v19);
      }
      uint64_t v37 = v25;
      uint64_t v38 = *(int *)(v59 + 24);
      uint64_t v39 = (_OWORD *)((char *)v13 + v38);
      uint64_t v40 = (_OWORD *)((char *)v14 + v38);
      if (v57((char *)v40, 1, v19))
      {
        sub_1AFD4B138(0, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
        memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
      }
      else
      {
        long long v46 = v40[1];
        *uint64_t v39 = *v40;
        v39[1] = v46;
        uint64_t v47 = *(int *)(v19 + 28);
        uint64_t v48 = (char *)v39 + v47;
        uint64_t v49 = (char *)v40 + v47;
        ((void (*)(char *, char *, uint64_t))v53)((char *)v39 + v47, v49, v9);
        *(void *)&v48[*(int *)(v52 + 20)] = *(void *)&v49[*(int *)(v52 + 20)];
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v37 + 56))(v39, 0, 1, v19);
      }
    }
    else
    {
      uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
      v27((char *)v13, (char *)v14, v9);
      uint64_t v28 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
      *(void *)((char *)v13 + *(int *)(v28 + 20)) = *(void *)((char *)v14 + *(int *)(v28 + 20));
      uint64_t v29 = type metadata accessor for RawAttributionSourceLogo.Unresolved(0);
      uint64_t v30 = *(int *)(v29 + 20);
      uint64_t v60 = v29;
      uint64_t v61 = (char *)v13 + v30;
      uint64_t v31 = (char *)v14 + v30;
      __dsta = *(void **)(v28 - 8);
      uint64_t v58 = (unsigned int (*)(char *, uint64_t, uint64_t))__dsta[6];
      uint64_t v54 = v27;
      if (v58((char *)v14 + v30, 1, v28))
      {
        sub_1AFD4B138(0, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
        memcpy(v61, v31, *(void *)(*(void *)(v32 - 8) + 64));
        uint64_t v33 = __dsta;
      }
      else
      {
        v27(v61, v31, v9);
        *(void *)&v61[*(int *)(v28 + 20)] = *(void *)&v31[*(int *)(v28 + 20)];
        uint64_t v33 = __dsta;
        ((void (*)(void))__dsta[7])();
      }
      uint64_t v42 = *(int *)(v60 + 24);
      uint64_t v43 = (char *)v13 + v42;
      uint64_t v44 = (char *)v14 + v42;
      if (v58(v44, 1, v28))
      {
        sub_1AFD4B138(0, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
        memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
      }
      else
      {
        v54(v43, v44, v9);
        *(void *)&v43[*(int *)(v28 + 20)] = *(void *)&v44[*(int *)(v28 + 20)];
        ((void (*)(char *, void, uint64_t, uint64_t))v33[7])(v43, 0, 1, v28);
      }
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v62 + 56))(v13, 0, 1, v15);
  }
  return a1;
}

void *sub_1AFDDD944(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1AFFC96E8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    sub_1AFD4B138(0, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = *(int *)(a3 + 24);
  uint64_t v17 = (char *)a1 + v16;
  long long v18 = (char *)a2 + v16;
  uint64_t v19 = type metadata accessor for RawAttributionSourceLogo(0);
  v107 = *(void **)(v19 - 8);
  uint64_t v20 = (uint64_t (*)(char *, uint64_t, uint64_t))v107[6];
  int v21 = v20(v17, 1, v19);
  int v22 = v20(v18, 1, v19);
  if (v21)
  {
    if (!v22)
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        long long v23 = *((_OWORD *)v18 + 1);
        *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
        *((_OWORD *)v17 + 1) = v23;
        uint64_t v24 = type metadata accessor for RawAttributionSourceLogo.Resolved.Variant(0);
        uint64_t v25 = *(int *)(v24 + 28);
        uint64_t v26 = &v17[v25];
        uint64_t v27 = &v18[v25];
        uint64_t v89 = *(void (**)(void))(v11 + 32);
        ((void (*)(char *, char *, uint64_t))v89)(&v17[v25], &v18[v25], v10);
        uint64_t v87 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
        *(void *)&v26[*(int *)(v87 + 20)] = *(void *)&v27[*(int *)(v87 + 20)];
        uint64_t v100 = type metadata accessor for RawAttributionSourceLogo.Resolved(0);
        uint64_t v28 = *(int *)(v100 + 20);
        uint64_t v29 = &v18[v28];
        uint64_t v30 = *(void *)(v24 - 8);
        __dst = &v17[v28];
        uint64_t v96 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
        if (v96(&v18[v28], 1, v24))
        {
          sub_1AFD4B138(0, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
          memcpy(__dst, v29, *(void *)(*(void *)(v31 - 8) + 64));
        }
        else
        {
          long long v49 = *((_OWORD *)v29 + 1);
          *(_OWORD *)__dst = *(_OWORD *)v29;
          *((_OWORD *)__dst + 1) = v49;
          uint64_t v50 = *(int *)(v24 + 28);
          v86 = &__dst[v50];
          unint64_t v51 = &v29[v50];
          v89();
          *(void *)&v86[*(int *)(v87 + 20)] = *(void *)&v51[*(int *)(v87 + 20)];
          (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(__dst, 0, 1, v24);
        }
        uint64_t v52 = *(int *)(v100 + 24);
        unint64_t v53 = &v17[v52];
        uint64_t v54 = &v18[v52];
        if (v96(v54, 1, v24))
        {
          sub_1AFD4B138(0, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
          memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
        }
        else
        {
          long long v66 = *((_OWORD *)v54 + 1);
          *(_OWORD *)unint64_t v53 = *(_OWORD *)v54;
          *((_OWORD *)v53 + 1) = v66;
          uint64_t v67 = *(int *)(v24 + 28);
          uint64_t v68 = &v53[v67];
          uint64_t v69 = &v54[v67];
          ((void (*)(char *, char *, uint64_t))v89)(&v53[v67], v69, v10);
          *(void *)&v68[*(int *)(v87 + 20)] = *(void *)&v69[*(int *)(v87 + 20)];
          (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v53, 0, 1, v24);
        }
      }
      else
      {
        uint64_t v42 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
        v42(v17, v18, v10);
        uint64_t v43 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
        *(void *)&v17[*(int *)(v43 + 20)] = *(void *)&v18[*(int *)(v43 + 20)];
        uint64_t v44 = type metadata accessor for RawAttributionSourceLogo.Unresolved(0);
        uint64_t v45 = *(int *)(v44 + 20);
        uint64_t v102 = v44;
        v105 = &v17[v45];
        long long v46 = &v18[v45];
        __dstb = *(void **)(v43 - 8);
        uint64_t v98 = (unsigned int (*)(char *, uint64_t, uint64_t))__dstb[6];
        unint64_t v91 = v42;
        if (v98(&v18[v45], 1, v43))
        {
          sub_1AFD4B138(0, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
          memcpy(v105, v46, *(void *)(*(void *)(v47 - 8) + 64));
          uint64_t v48 = __dstb;
        }
        else
        {
          v42(v105, v46, v10);
          *(void *)&v105[*(int *)(v43 + 20)] = *(void *)&v46[*(int *)(v43 + 20)];
          uint64_t v48 = __dstb;
          ((void (*)(void))__dstb[7])();
        }
        uint64_t v62 = *(int *)(v102 + 24);
        uint64_t v63 = &v17[v62];
        uint64_t v64 = &v18[v62];
        if (v98(v64, 1, v43))
        {
          sub_1AFD4B138(0, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
          memcpy(v63, v64, *(void *)(*(void *)(v65 - 8) + 64));
        }
        else
        {
          v91(v63, v64, v10);
          *(void *)&v63[*(int *)(v43 + 20)] = *(void *)&v64[*(int *)(v43 + 20)];
          ((void (*)(char *, void, uint64_t, uint64_t))v48[7])(v63, 0, 1, v43);
        }
      }
      swift_storeEnumTagMultiPayload();
      ((void (*)(char *, void, uint64_t, uint64_t))v107[7])(v17, 0, 1, v19);
      return a1;
    }
LABEL_14:
    sub_1AFD4B138(0, &qword_1EB818B30, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
    memcpy(v17, v18, *(void *)(*(void *)(v32 - 8) + 64));
    return a1;
  }
  if (v22)
  {
    sub_1AFDDAC98((uint64_t)v17, type metadata accessor for RawAttributionSourceLogo);
    goto LABEL_14;
  }
  if (a1 != a2)
  {
    sub_1AFDDAC98((uint64_t)v17, type metadata accessor for RawAttributionSourceLogo);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      long long v33 = *((_OWORD *)v18 + 1);
      *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
      *((_OWORD *)v17 + 1) = v33;
      uint64_t v34 = type metadata accessor for RawAttributionSourceLogo.Resolved.Variant(0);
      uint64_t v35 = *(int *)(v34 + 28);
      uint64_t v36 = &v17[v35];
      uint64_t v37 = &v18[v35];
      __dsta = *(void (**)(char *, char *, uint64_t))(v11 + 32);
      __dsta(&v17[v35], &v18[v35], v10);
      uint64_t v90 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
      *(void *)&v36[*(int *)(v90 + 20)] = *(void *)&v37[*(int *)(v90 + 20)];
      uint64_t v104 = (int *)type metadata accessor for RawAttributionSourceLogo.Resolved(0);
      uint64_t v38 = v104[5];
      uint64_t v39 = &v18[v38];
      uint64_t v40 = *(void *)(v34 - 8);
      v97 = &v17[v38];
      uint64_t v101 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48);
      if (v101(&v18[v38], 1, v34))
      {
        sub_1AFD4B138(0, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
        memcpy(v97, v39, *(void *)(*(void *)(v41 - 8) + 64));
      }
      else
      {
        long long v71 = *((_OWORD *)v39 + 1);
        *(_OWORD *)v97 = *(_OWORD *)v39;
        *((_OWORD *)v97 + 1) = v71;
        uint64_t v72 = *(int *)(v34 + 28);
        uint64_t v88 = &v97[v72];
        v73 = &v39[v72];
        ((void (*)(void))__dsta)();
        *(void *)&v88[*(int *)(v90 + 20)] = *(void *)&v73[*(int *)(v90 + 20)];
        (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v97, 0, 1, v34);
      }
      uint64_t v74 = v104[6];
      v75 = &v17[v74];
      uint64_t v76 = &v18[v74];
      if (v101(v76, 1, v34))
      {
        sub_1AFD4B138(0, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
        memcpy(v75, v76, *(void *)(*(void *)(v77 - 8) + 64));
      }
      else
      {
        long long v82 = *((_OWORD *)v76 + 1);
        *(_OWORD *)v75 = *(_OWORD *)v76;
        *((_OWORD *)v75 + 1) = v82;
        uint64_t v83 = *(int *)(v34 + 28);
        uint64_t v84 = &v75[v83];
        uint64_t v85 = &v76[v83];
        __dsta(&v75[v83], v85, v10);
        *(void *)&v84[*(int *)(v90 + 20)] = *(void *)&v85[*(int *)(v90 + 20)];
        (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v75, 0, 1, v34);
      }
    }
    else
    {
      uint64_t v56 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
      v56(v17, v18, v10);
      uint64_t v57 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
      *(void *)&v17[*(int *)(v57 + 20)] = *(void *)&v18[*(int *)(v57 + 20)];
      uint64_t v106 = (int *)type metadata accessor for RawAttributionSourceLogo.Unresolved(0);
      uint64_t v58 = v106[5];
      v108 = &v17[v58];
      uint64_t v59 = &v18[v58];
      uint64_t v99 = *(void **)(v57 - 8);
      v103 = (unsigned int (*)(char *, uint64_t, uint64_t))v99[6];
      __dstc = v56;
      if (v103(&v18[v58], 1, v57))
      {
        sub_1AFD4B138(0, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
        memcpy(v108, v59, *(void *)(*(void *)(v60 - 8) + 64));
        uint64_t v61 = v99;
      }
      else
      {
        v56(v108, v59, v10);
        *(void *)&v108[*(int *)(v57 + 20)] = *(void *)&v59[*(int *)(v57 + 20)];
        uint64_t v61 = v99;
        ((void (*)(void))v99[7])();
      }
      uint64_t v78 = v106[6];
      v79 = &v17[v78];
      v80 = &v18[v78];
      if (v103(v80, 1, v57))
      {
        sub_1AFD4B138(0, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
        memcpy(v79, v80, *(void *)(*(void *)(v81 - 8) + 64));
      }
      else
      {
        __dstc(v79, v80, v10);
        *(void *)&v79[*(int *)(v57 + 20)] = *(void *)&v80[*(int *)(v57 + 20)];
        ((void (*)(char *, void, uint64_t, uint64_t))v61[7])(v79, 0, 1, v57);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1AFDDE590(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1AFDDE5A4);
}

uint64_t sub_1AFDDE5A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1AFD4B138(0, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      sub_1AFD4B138(0, &qword_1EB818B30, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
      int v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_1AFDDE708(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1AFDDE71C);
}

uint64_t sub_1AFDDE71C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1AFD4B138(0, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      sub_1AFD4B138(0, &qword_1EB818B30, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
      int v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 24);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_1AFDDE880()
{
  sub_1AFD4B138(319, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
  if (v0 <= 0x3F)
  {
    sub_1AFD4B138(319, &qword_1EB818B30, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unint64_t sub_1AFDDE98C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v22 + ((v5 + 16) & ~(unint64_t)v5);
    sub_1AFFC8E48();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = *(void *)a2;
      unint64_t v7 = *(void *)(a2 + 8);
      sub_1AFD4B0E0(*(void *)a2, v7);
      *(void *)a1 = v6;
      *(void *)(a1 + 8) = v7;
      *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
      uint64_t v8 = type metadata accessor for RawAttributionSourceLogo.Resolved.Variant(0);
      uint64_t v9 = *(int *)(v8 + 28);
      uint64_t v10 = a1 + v9;
      uint64_t v11 = a2 + v9;
      uint64_t v12 = sub_1AFFC96E8();
      uint64_t v13 = (void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
      uint64_t v54 = *v13;
      (*v13)(v10, v11, v12);
      uint64_t v14 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
      *(void *)(v10 + *(int *)(v14 + 20)) = *(void *)(v11 + *(int *)(v14 + 20));
      uint64_t v15 = type metadata accessor for RawAttributionSourceLogo.Resolved(0);
      uint64_t v16 = *(int *)(v15 + 20);
      uint64_t v17 = (void *)(a1 + v16);
      long long v18 = (uint64_t *)(a2 + v16);
      uint64_t v58 = *(void *)(v8 - 8);
      uint64_t v56 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v58 + 48);
      uint64_t v53 = v14;
      if (v56(a2 + v16, 1, v8))
      {
        sub_1AFD4B138(0, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
        memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
        uint64_t v20 = v8;
        uint64_t v21 = v58;
      }
      else
      {
        uint64_t v51 = v15;
        uint64_t v52 = v12;
        uint64_t v32 = *v18;
        unint64_t v31 = v18[1];
        sub_1AFD4B0E0(*v18, v31);
        *uint64_t v17 = v32;
        v17[1] = v31;
        uint64_t v12 = v52;
        *((_OWORD *)v17 + 1) = *((_OWORD *)v18 + 1);
        uint64_t v33 = *(int *)(v8 + 28);
        uint64_t v34 = (char *)v17 + v33;
        uint64_t v35 = (char *)v18 + v33;
        v54((uint64_t)v17 + v33, (uint64_t)v35, v52);
        *(void *)&v34[*(int *)(v14 + 20)] = *(void *)&v35[*(int *)(v14 + 20)];
        uint64_t v15 = v51;
        uint64_t v21 = v58;
        (*(void (**)(void *, void, uint64_t, uint64_t))(v58 + 56))(v17, 0, 1, v8);
        uint64_t v20 = v8;
      }
      uint64_t v36 = *(int *)(v15 + 24);
      uint64_t v37 = (void *)(a1 + v36);
      uint64_t v38 = (uint64_t *)(a2 + v36);
      if (v56((uint64_t)v38, 1, v20))
      {
        sub_1AFD4B138(0, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
        memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
      }
      else
      {
        uint64_t v45 = *v38;
        unint64_t v46 = v38[1];
        sub_1AFD4B0E0(*v38, v46);
        *uint64_t v37 = v45;
        v37[1] = v46;
        *((_OWORD *)v37 + 1) = *((_OWORD *)v38 + 1);
        uint64_t v47 = *(int *)(v20 + 28);
        uint64_t v48 = (char *)v37 + v47;
        long long v49 = (char *)v38 + v47;
        v54((uint64_t)v37 + v47, (uint64_t)v49, v12);
        *(void *)&v48[*(int *)(v53 + 20)] = *(void *)&v49[*(int *)(v53 + 20)];
        (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v37, 0, 1, v20);
      }
    }
    else
    {
      uint64_t v23 = sub_1AFFC96E8();
      uint64_t v59 = *(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16);
      v59(a1, a2, v23);
      uint64_t v24 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
      *(void *)(a1 + *(int *)(v24 + 20)) = *(void *)(a2 + *(int *)(v24 + 20));
      uint64_t v57 = type metadata accessor for RawAttributionSourceLogo.Unresolved(0);
      uint64_t v25 = *(int *)(v57 + 20);
      uint64_t v26 = (char *)(a1 + v25);
      uint64_t v27 = (char *)(a2 + v25);
      uint64_t v28 = *(void *)(v24 - 8);
      uint64_t v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48);
      uint64_t v55 = v23;
      if (v29(a2 + v25, 1, v24))
      {
        sub_1AFD4B138(0, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
        memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
      }
      else
      {
        v59((unint64_t)v26, (uint64_t)v27, v23);
        *(void *)&v26[*(int *)(v24 + 20)] = *(void *)&v27[*(int *)(v24 + 20)];
        (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v26, 0, 1, v24);
      }
      uint64_t v40 = v28;
      uint64_t v41 = *(int *)(v57 + 24);
      uint64_t v42 = (char *)(a1 + v41);
      uint64_t v43 = (char *)(a2 + v41);
      if (v29((uint64_t)v43, 1, v24))
      {
        sub_1AFD4B138(0, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
        memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
      }
      else
      {
        v59((unint64_t)v42, (uint64_t)v43, v55);
        *(void *)&v42[*(int *)(v24 + 20)] = *(void *)&v43[*(int *)(v24 + 20)];
        (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v42, 0, 1, v24);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1AFDDEF58(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1AFD4B504(*(void *)a1, *(void *)(a1 + 8));
    uint64_t v2 = type metadata accessor for RawAttributionSourceLogo.Resolved.Variant(0);
    uint64_t v3 = a1 + *(int *)(v2 + 28);
    uint64_t v4 = sub_1AFFC96E8();
    long long v18 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
    v18(v3, v4);
    uint64_t v5 = type metadata accessor for RawAttributionSourceLogo.Resolved(0);
    uint64_t v6 = a1 + *(int *)(v5 + 20);
    unint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);
    if (!v7(v6, 1, v2))
    {
      sub_1AFD4B504(*(void *)v6, *(void *)(v6 + 8));
      v18(v6 + *(int *)(v2 + 28), v4);
    }
    uint64_t v8 = a1 + *(int *)(v5 + 24);
    uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v7)(v8, 1, v2);
    if (!result)
    {
      sub_1AFD4B504(*(void *)v8, *(void *)(v8 + 8));
      uint64_t v10 = v8 + *(int *)(v2 + 28);
      uint64_t v11 = v4;
LABEL_11:
      return ((uint64_t (*)(uint64_t, uint64_t))v18)(v10, v11);
    }
  }
  else
  {
    uint64_t v12 = sub_1AFFC96E8();
    long long v18 = *(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);
    v18(a1, v12);
    uint64_t v13 = type metadata accessor for RawAttributionSourceLogo.Unresolved(0);
    uint64_t v14 = a1 + *(int *)(v13 + 20);
    uint64_t v15 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
    uint64_t v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
    if (!v16(v14, 1, v15)) {
      v18(v14, v12);
    }
    uint64_t v17 = a1 + *(int *)(v13 + 24);
    uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v16)(v17, 1, v15);
    if (!result)
    {
      uint64_t v10 = v17;
      uint64_t v11 = v12;
      goto LABEL_11;
    }
  }
  return result;
}

uint64_t sub_1AFDDF1C0(uint64_t a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = *(void *)a2;
    unint64_t v5 = *(void *)(a2 + 8);
    sub_1AFD4B0E0(*(void *)a2, v5);
    *(void *)a1 = v4;
    *(void *)(a1 + 8) = v5;
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    uint64_t v6 = type metadata accessor for RawAttributionSourceLogo.Resolved.Variant(0);
    uint64_t v7 = *(int *)(v6 + 28);
    uint64_t v8 = a1 + v7;
    uint64_t v9 = a2 + v7;
    uint64_t v10 = sub_1AFFC96E8();
    uint64_t v11 = *(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
    uint64_t v51 = v10;
    v11(v8, v9);
    uint64_t v12 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
    *(void *)(v8 + *(int *)(v12 + 20)) = *(void *)(v9 + *(int *)(v12 + 20));
    uint64_t v13 = type metadata accessor for RawAttributionSourceLogo.Resolved(0);
    uint64_t v14 = *(int *)(v13 + 20);
    uint64_t v15 = (void *)(a1 + v14);
    uint64_t v16 = (uint64_t *)(a2 + v14);
    uint64_t v52 = *(void *)(v6 - 8);
    uint64_t v54 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 48);
    uint64_t v50 = v12;
    if (v54(a2 + v14, 1, v6))
    {
      sub_1AFD4B138(0, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
      uint64_t v18 = v6;
      uint64_t v19 = v52;
    }
    else
    {
      uint64_t v49 = v13;
      uint64_t v29 = *v16;
      unint64_t v30 = v16[1];
      sub_1AFD4B0E0(*v16, v30);
      void *v15 = v29;
      v15[1] = v30;
      *((_OWORD *)v15 + 1) = *((_OWORD *)v16 + 1);
      uint64_t v31 = *(int *)(v6 + 28);
      uint64_t v32 = (char *)v15 + v31;
      uint64_t v33 = (char *)v16 + v31;
      ((void (*)(char *, char *, uint64_t))v11)((char *)v15 + v31, v33, v51);
      *(void *)&v32[*(int *)(v12 + 20)] = *(void *)&v33[*(int *)(v12 + 20)];
      uint64_t v13 = v49;
      uint64_t v19 = v52;
      (*(void (**)(void *, void, uint64_t, uint64_t))(v52 + 56))(v15, 0, 1, v6);
      uint64_t v18 = v6;
    }
    uint64_t v34 = *(int *)(v13 + 24);
    uint64_t v35 = (void *)(a1 + v34);
    uint64_t v36 = (uint64_t *)(a2 + v34);
    if (v54((uint64_t)v36, 1, v18))
    {
      sub_1AFD4B138(0, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
      memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
    }
    else
    {
      uint64_t v43 = *v36;
      unint64_t v44 = v36[1];
      sub_1AFD4B0E0(*v36, v44);
      *uint64_t v35 = v43;
      v35[1] = v44;
      *((_OWORD *)v35 + 1) = *((_OWORD *)v36 + 1);
      uint64_t v45 = *(int *)(v18 + 28);
      unint64_t v46 = (char *)v35 + v45;
      uint64_t v47 = (char *)v36 + v45;
      ((void (*)(char *, char *, uint64_t))v11)((char *)v35 + v45, v47, v51);
      *(void *)&v46[*(int *)(v50 + 20)] = *(void *)&v47[*(int *)(v50 + 20)];
      (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v35, 0, 1, v18);
    }
  }
  else
  {
    uint64_t v20 = sub_1AFFC96E8();
    uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16);
    v21(a1, a2, v20);
    uint64_t v22 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
    *(void *)(a1 + *(int *)(v22 + 20)) = *(void *)(a2 + *(int *)(v22 + 20));
    uint64_t v55 = type metadata accessor for RawAttributionSourceLogo.Unresolved(0);
    uint64_t v23 = *(int *)(v55 + 20);
    uint64_t v24 = (char *)(a1 + v23);
    uint64_t v25 = (char *)(a2 + v23);
    uint64_t v26 = *(void *)(v22 - 8);
    uint64_t v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
    uint64_t v53 = (void (*)(char *, char *, uint64_t))v21;
    if (v27(a2 + v23, 1, v22))
    {
      sub_1AFD4B138(0, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
      memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      v21((uint64_t)v24, (uint64_t)v25, v20);
      *(void *)&v24[*(int *)(v22 + 20)] = *(void *)&v25[*(int *)(v22 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v24, 0, 1, v22);
    }
    uint64_t v38 = v26;
    uint64_t v39 = *(int *)(v55 + 24);
    uint64_t v40 = (char *)(a1 + v39);
    uint64_t v41 = (char *)(a2 + v39);
    if (v27((uint64_t)v41, 1, v22))
    {
      sub_1AFD4B138(0, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
      memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      v53(v40, v41, v20);
      *(void *)&v40[*(int *)(v22 + 20)] = *(void *)&v41[*(int *)(v22 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v40, 0, 1, v22);
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t *sub_1AFDDF720(uint64_t *a1, uint64_t *a2)
{
  if (a1 != a2)
  {
    sub_1AFDDAC98((uint64_t)a1, type metadata accessor for RawAttributionSourceLogo);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = *a2;
      unint64_t v5 = a2[1];
      sub_1AFD4B0E0(*a2, v5);
      *a1 = v4;
      a1[1] = v5;
      a1[2] = a2[2];
      a1[3] = a2[3];
      uint64_t v6 = type metadata accessor for RawAttributionSourceLogo.Resolved.Variant(0);
      uint64_t v7 = *(int *)(v6 + 28);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = sub_1AFFC96E8();
      uint64_t v56 = (void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
      uint64_t v51 = *v56;
      (*v56)(v8, v9, v10);
      uint64_t v11 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
      *(void *)&v8[*(int *)(v11 + 20)] = *(void *)&v9[*(int *)(v11 + 20)];
      uint64_t v54 = type metadata accessor for RawAttributionSourceLogo.Resolved(0);
      uint64_t v12 = *(int *)(v54 + 20);
      uint64_t v13 = (uint64_t *)((char *)a1 + v12);
      uint64_t v14 = (uint64_t *)((char *)a2 + v12);
      uint64_t v15 = *(void *)(v6 - 8);
      uint64_t v52 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
      uint64_t v50 = v11;
      if (v52((char *)a2 + v12, 1, v6))
      {
        sub_1AFD4B138(0, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
        memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        uint64_t v49 = v10;
        uint64_t v27 = *v14;
        unint64_t v26 = v14[1];
        sub_1AFD4B0E0(*v14, v26);
        *uint64_t v13 = v27;
        v13[1] = v26;
        v13[2] = v14[2];
        v13[3] = v14[3];
        uint64_t v28 = *(int *)(v6 + 28);
        uint64_t v29 = (char *)v13 + v28;
        unint64_t v30 = (char *)v14 + v28;
        v51((char *)v13 + v28, v30, v49);
        *(void *)&v29[*(int *)(v11 + 20)] = *(void *)&v30[*(int *)(v11 + 20)];
        uint64_t v10 = v49;
        (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v6);
      }
      uint64_t v31 = v6;
      uint64_t v32 = v15;
      uint64_t v33 = *(int *)(v54 + 24);
      uint64_t v34 = (uint64_t *)((char *)a1 + v33);
      uint64_t v35 = (uint64_t *)((char *)a2 + v33);
      if (v52((char *)v35, 1, v6))
      {
        sub_1AFD4B138(0, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
        memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
      }
      else
      {
        uint64_t v42 = v10;
        uint64_t v43 = *v35;
        unint64_t v44 = v35[1];
        sub_1AFD4B0E0(*v35, v44);
        *uint64_t v34 = v43;
        v34[1] = v44;
        v34[2] = v35[2];
        v34[3] = v35[3];
        uint64_t v45 = *(int *)(v31 + 28);
        unint64_t v46 = (char *)v34 + v45;
        uint64_t v47 = (char *)v35 + v45;
        v51((char *)v34 + v45, v47, v42);
        *(void *)&v46[*(int *)(v50 + 20)] = *(void *)&v47[*(int *)(v50 + 20)];
        (*(void (**)(void *, void, uint64_t, uint64_t))(v32 + 56))(v34, 0, 1, v31);
      }
    }
    else
    {
      uint64_t v17 = sub_1AFFC96E8();
      uint64_t v18 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v17 - 8) + 16);
      v18(a1, a2, v17);
      uint64_t v19 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
      *(uint64_t *)((char *)a1 + *(int *)(v19 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v19 + 20));
      uint64_t v55 = type metadata accessor for RawAttributionSourceLogo.Unresolved(0);
      uint64_t v20 = *(int *)(v55 + 20);
      uint64_t v21 = (char *)a1 + v20;
      uint64_t v22 = (char *)a2 + v20;
      uint64_t v23 = *(void *)(v19 - 8);
      uint64_t v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
      uint64_t v53 = (void (*)(char *, char *, uint64_t))v18;
      if (v24((char *)a2 + v20, 1, v19))
      {
        sub_1AFD4B138(0, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
        memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        v18((uint64_t *)v21, (uint64_t *)v22, v17);
        *(void *)&v21[*(int *)(v19 + 20)] = *(void *)&v22[*(int *)(v19 + 20)];
        (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v21, 0, 1, v19);
      }
      uint64_t v37 = v23;
      uint64_t v38 = *(int *)(v55 + 24);
      uint64_t v39 = (char *)a1 + v38;
      uint64_t v40 = (char *)a2 + v38;
      if (v24(v40, 1, v19))
      {
        sub_1AFD4B138(0, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
        memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
      }
      else
      {
        v53(v39, v40, v17);
        *(void *)&v39[*(int *)(v19 + 20)] = *(void *)&v40[*(int *)(v19 + 20)];
        (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v39, 0, 1, v19);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_1AFDDFCD4(char *a1, char *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    long long v4 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v4;
    uint64_t v5 = type metadata accessor for RawAttributionSourceLogo.Resolved.Variant(0);
    uint64_t v6 = *(int *)(v5 + 28);
    uint64_t v7 = &a1[v6];
    uint64_t v8 = &a2[v6];
    uint64_t v9 = sub_1AFFC96E8();
    uint64_t v10 = (void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
    uint64_t v53 = *v10;
    (*v10)(v7, v8, v9);
    uint64_t v51 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
    *(void *)&v7[*(int *)(v51 + 20)] = *(void *)&v8[*(int *)(v51 + 20)];
    uint64_t v49 = type metadata accessor for RawAttributionSourceLogo.Resolved(0);
    uint64_t v11 = *(int *)(v49 + 20);
    uint64_t v12 = &a1[v11];
    uint64_t v13 = &a2[v11];
    uint64_t v14 = *(void *)(v5 - 8);
    uint64_t v48 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    uint64_t v47 = v9;
    if (v48(&a2[v11], 1, v5))
    {
      sub_1AFD4B138(0, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
      memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
      uint64_t v16 = v51;
      uint64_t v17 = v53;
    }
    else
    {
      long long v27 = *((_OWORD *)v13 + 1);
      *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
      *((_OWORD *)v12 + 1) = v27;
      uint64_t v28 = *(int *)(v5 + 28);
      uint64_t v29 = &v12[v28];
      unint64_t v30 = &v13[v28];
      uint64_t v31 = v9;
      uint64_t v17 = v53;
      v53(&v12[v28], v30, v31);
      uint64_t v16 = v51;
      *(void *)&v29[*(int *)(v51 + 20)] = *(void *)&v30[*(int *)(v51 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v5);
    }
    uint64_t v32 = v14;
    uint64_t v33 = *(int *)(v49 + 24);
    uint64_t v34 = &a1[v33];
    uint64_t v35 = &a2[v33];
    if (v48(v35, 1, v5))
    {
      sub_1AFD4B138(0, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
      memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      long long v42 = *((_OWORD *)v35 + 1);
      *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
      *((_OWORD *)v34 + 1) = v42;
      uint64_t v43 = *(int *)(v5 + 28);
      unint64_t v44 = &v34[v43];
      uint64_t v45 = &v35[v43];
      v17(&v34[v43], v45, v47);
      *(void *)&v44[*(int *)(v16 + 20)] = *(void *)&v45[*(int *)(v16 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v34, 0, 1, v5);
    }
  }
  else
  {
    uint64_t v18 = sub_1AFFC96E8();
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32);
    v19(a1, a2, v18);
    uint64_t v20 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
    *(void *)&a1[*(int *)(v20 + 20)] = *(void *)&a2[*(int *)(v20 + 20)];
    uint64_t v52 = type metadata accessor for RawAttributionSourceLogo.Unresolved(0);
    uint64_t v21 = *(int *)(v52 + 20);
    uint64_t v22 = &a1[v21];
    uint64_t v23 = &a2[v21];
    uint64_t v24 = *(void *)(v20 - 8);
    uint64_t v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
    uint64_t v50 = v19;
    if (v25(&a2[v21], 1, v20))
    {
      sub_1AFD4B138(0, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
      memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      v19(v22, v23, v18);
      *(void *)&v22[*(int *)(v20 + 20)] = *(void *)&v23[*(int *)(v20 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v22, 0, 1, v20);
    }
    uint64_t v37 = v24;
    uint64_t v38 = *(int *)(v52 + 24);
    uint64_t v39 = &a1[v38];
    uint64_t v40 = &a2[v38];
    if (v25(v40, 1, v20))
    {
      sub_1AFD4B138(0, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
      memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
    }
    else
    {
      v50(v39, v40, v18);
      *(void *)&v39[*(int *)(v20 + 20)] = *(void *)&v40[*(int *)(v20 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v39, 0, 1, v20);
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

char *sub_1AFDE01F8(char *a1, char *a2)
{
  if (a1 != a2)
  {
    sub_1AFDDAC98((uint64_t)a1, type metadata accessor for RawAttributionSourceLogo);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      long long v4 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v4;
      uint64_t v5 = type metadata accessor for RawAttributionSourceLogo.Resolved.Variant(0);
      uint64_t v6 = *(int *)(v5 + 28);
      uint64_t v7 = &a1[v6];
      uint64_t v8 = &a2[v6];
      uint64_t v9 = sub_1AFFC96E8();
      uint64_t v10 = (void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
      uint64_t v53 = *v10;
      (*v10)(v7, v8, v9);
      uint64_t v51 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
      *(void *)&v7[*(int *)(v51 + 20)] = *(void *)&v8[*(int *)(v51 + 20)];
      uint64_t v49 = type metadata accessor for RawAttributionSourceLogo.Resolved(0);
      uint64_t v11 = *(int *)(v49 + 20);
      uint64_t v12 = &a1[v11];
      uint64_t v13 = &a2[v11];
      uint64_t v14 = *(void *)(v5 - 8);
      uint64_t v48 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
      uint64_t v47 = v9;
      if (v48(&a2[v11], 1, v5))
      {
        sub_1AFD4B138(0, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
        memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
        uint64_t v16 = v51;
        uint64_t v17 = v53;
      }
      else
      {
        long long v27 = *((_OWORD *)v13 + 1);
        *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
        *((_OWORD *)v12 + 1) = v27;
        uint64_t v28 = *(int *)(v5 + 28);
        uint64_t v29 = &v12[v28];
        unint64_t v30 = &v13[v28];
        uint64_t v31 = v9;
        uint64_t v17 = v53;
        v53(&v12[v28], v30, v31);
        uint64_t v16 = v51;
        *(void *)&v29[*(int *)(v51 + 20)] = *(void *)&v30[*(int *)(v51 + 20)];
        (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v5);
      }
      uint64_t v32 = v14;
      uint64_t v33 = *(int *)(v49 + 24);
      uint64_t v34 = &a1[v33];
      uint64_t v35 = &a2[v33];
      if (v48(v35, 1, v5))
      {
        sub_1AFD4B138(0, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
        memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
      }
      else
      {
        long long v42 = *((_OWORD *)v35 + 1);
        *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
        *((_OWORD *)v34 + 1) = v42;
        uint64_t v43 = *(int *)(v5 + 28);
        unint64_t v44 = &v34[v43];
        uint64_t v45 = &v35[v43];
        v17(&v34[v43], v45, v47);
        *(void *)&v44[*(int *)(v16 + 20)] = *(void *)&v45[*(int *)(v16 + 20)];
        (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v34, 0, 1, v5);
      }
    }
    else
    {
      uint64_t v18 = sub_1AFFC96E8();
      uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32);
      v19(a1, a2, v18);
      uint64_t v20 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
      *(void *)&a1[*(int *)(v20 + 20)] = *(void *)&a2[*(int *)(v20 + 20)];
      uint64_t v52 = type metadata accessor for RawAttributionSourceLogo.Unresolved(0);
      uint64_t v21 = *(int *)(v52 + 20);
      uint64_t v22 = &a1[v21];
      uint64_t v23 = &a2[v21];
      uint64_t v24 = *(void *)(v20 - 8);
      uint64_t v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
      uint64_t v50 = v19;
      if (v25(&a2[v21], 1, v20))
      {
        sub_1AFD4B138(0, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
        memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        v19(v22, v23, v18);
        *(void *)&v22[*(int *)(v20 + 20)] = *(void *)&v23[*(int *)(v20 + 20)];
        (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v22, 0, 1, v20);
      }
      uint64_t v37 = v24;
      uint64_t v38 = *(int *)(v52 + 24);
      uint64_t v39 = &a1[v38];
      uint64_t v40 = &a2[v38];
      if (v25(v40, 1, v20))
      {
        sub_1AFD4B138(0, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
        memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
      }
      else
      {
        v50(v39, v40, v18);
        *(void *)&v39[*(int *)(v20 + 20)] = *(void *)&v40[*(int *)(v20 + 20)];
        (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v39, 0, 1, v20);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for NetworkEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for NetworkEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_1AFDE0794()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1AFDE07A4()
{
  uint64_t result = type metadata accessor for RawAttributionSourceLogo.Unresolved(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for RawAttributionSourceLogo.Resolved(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1AFDE0868(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1AFFC8E48();
  }
  else
  {
    uint64_t v7 = sub_1AFFC96E8();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
    *(uint64_t *)((char *)a1 + *(int *)(v9 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v9 + 20));
    uint64_t v10 = *(int *)(a3 + 20);
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = *(void *)(v9 - 8);
    uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    if (v21((char *)a2 + v10, 1, v9))
    {
      sub_1AFD4B138(0, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
      memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      v8((uint64_t *)v11, (uint64_t *)v12, v7);
      *(void *)&v11[*(int *)(v9 + 20)] = *(void *)&v12[*(int *)(v9 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v9);
    }
    uint64_t v16 = *(int *)(a3 + 24);
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    if (v21(v18, 1, v9))
    {
      sub_1AFD4B138(0, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      v8((uint64_t *)v17, (uint64_t *)v18, v7);
      *(void *)&v17[*(int *)(v9 + 20)] = *(void *)&v18[*(int *)(v9 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v17, 0, 1, v9);
    }
  }
  return a1;
}

uint64_t sub_1AFDE0B20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1AFFC96E8();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v10(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48);
  if (!v7(v5, 1, v6)) {
    v10(v5, v4);
  }
  uint64_t v8 = a1 + *(int *)(a2 + 24);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v7)(v8, 1, v6);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v10)(v8, v4);
  }
  return result;
}

uint64_t sub_1AFDE0C6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1AFFC96E8();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
  *(void *)(a1 + *(int *)(v8 + 20)) = *(void *)(a2 + *(int *)(v8 + 20));
  uint64_t v21 = a3;
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (char *)(a1 + v9);
  uint64_t v11 = (char *)(a2 + v9);
  uint64_t v12 = *(void *)(v8 - 8);
  uint64_t v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  uint64_t v19 = (void (*)(char *, char *, uint64_t))v7;
  if (v20(a2 + v9, 1, v8))
  {
    sub_1AFD4B138(0, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
    memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v10, (uint64_t)v11, v6);
    *(void *)&v10[*(int *)(v8 + 20)] = *(void *)&v11[*(int *)(v8 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v8);
  }
  uint64_t v14 = *(int *)(v21 + 24);
  uint64_t v15 = (char *)(a1 + v14);
  uint64_t v16 = (char *)(a2 + v14);
  if (v20((uint64_t)v16, 1, v8))
  {
    sub_1AFD4B138(0, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    v19(v15, v16, v6);
    *(void *)&v15[*(int *)(v8 + 20)] = *(void *)&v16[*(int *)(v8 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v8);
  }
  return a1;
}

uint64_t sub_1AFDE0ED4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1AFFC96E8();
  uint64_t v24 = *(void *)(v6 - 8);
  uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 24);
  v22(a1, a2, v6);
  uint64_t v7 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
  *(void *)(a1 + *(int *)(v7 + 20)) = *(void *)(a2 + *(int *)(v7 + 20));
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (char *)(a2 + v8);
  uint64_t v23 = *(void *)(v7 - 8);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
  int v12 = v11(a1 + v8, 1, v7);
  int v13 = v11((uint64_t)v10, 1, v7);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v9, v10, v6);
      *(void *)&v9[*(int *)(v7 + 20)] = *(void *)&v10[*(int *)(v7 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v9, 0, 1, v7);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    sub_1AFDDAC98((uint64_t)v9, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
LABEL_6:
    sub_1AFD4B138(0, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
    memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  v22((uint64_t)v9, (uint64_t)v10, v6);
  *(void *)&v9[*(int *)(v7 + 20)] = *(void *)&v10[*(int *)(v7 + 20)];
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = (char *)(a1 + v15);
  uint64_t v17 = (char *)(a2 + v15);
  int v18 = v11(a1 + v15, 1, v7);
  int v19 = v11((uint64_t)v17, 1, v7);
  if (!v18)
  {
    if (!v19)
    {
      v22((uint64_t)v16, (uint64_t)v17, v6);
      *(void *)&v16[*(int *)(v7 + 20)] = *(void *)&v17[*(int *)(v7 + 20)];
      return a1;
    }
    sub_1AFDDAC98((uint64_t)v16, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    sub_1AFD4B138(0, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v16, v17, v6);
  *(void *)&v16[*(int *)(v7 + 20)] = *(void *)&v17[*(int *)(v7 + 20)];
  (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v16, 0, 1, v7);
  return a1;
}

uint64_t sub_1AFDE123C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1AFFC96E8();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
  *(void *)(a1 + *(int *)(v8 + 20)) = *(void *)(a2 + *(int *)(v8 + 20));
  uint64_t v21 = a3;
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (char *)(a1 + v9);
  uint64_t v11 = (char *)(a2 + v9);
  uint64_t v12 = *(void *)(v8 - 8);
  uint64_t v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  int v19 = (void (*)(char *, char *, uint64_t))v7;
  if (v20(a2 + v9, 1, v8))
  {
    sub_1AFD4B138(0, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
    memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v10, (uint64_t)v11, v6);
    *(void *)&v10[*(int *)(v8 + 20)] = *(void *)&v11[*(int *)(v8 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v8);
  }
  uint64_t v14 = *(int *)(v21 + 24);
  uint64_t v15 = (char *)(a1 + v14);
  uint64_t v16 = (char *)(a2 + v14);
  if (v20((uint64_t)v16, 1, v8))
  {
    sub_1AFD4B138(0, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    v19(v15, v16, v6);
    *(void *)&v15[*(int *)(v8 + 20)] = *(void *)&v16[*(int *)(v8 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v8);
  }
  return a1;
}

uint64_t sub_1AFDE14A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1AFFC96E8();
  uint64_t v24 = *(void *)(v6 - 8);
  uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 40);
  v22(a1, a2, v6);
  uint64_t v7 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
  *(void *)(a1 + *(int *)(v7 + 20)) = *(void *)(a2 + *(int *)(v7 + 20));
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (char *)(a2 + v8);
  uint64_t v23 = *(void *)(v7 - 8);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
  int v12 = v11(a1 + v8, 1, v7);
  int v13 = v11((uint64_t)v10, 1, v7);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v9, v10, v6);
      *(void *)&v9[*(int *)(v7 + 20)] = *(void *)&v10[*(int *)(v7 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v9, 0, 1, v7);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    sub_1AFDDAC98((uint64_t)v9, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
LABEL_6:
    sub_1AFD4B138(0, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
    memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  v22((uint64_t)v9, (uint64_t)v10, v6);
  *(void *)&v9[*(int *)(v7 + 20)] = *(void *)&v10[*(int *)(v7 + 20)];
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = (char *)(a1 + v15);
  uint64_t v17 = (char *)(a2 + v15);
  int v18 = v11(a1 + v15, 1, v7);
  int v19 = v11((uint64_t)v17, 1, v7);
  if (!v18)
  {
    if (!v19)
    {
      v22((uint64_t)v16, (uint64_t)v17, v6);
      *(void *)&v16[*(int *)(v7 + 20)] = *(void *)&v17[*(int *)(v7 + 20)];
      return a1;
    }
    sub_1AFDDAC98((uint64_t)v16, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    sub_1AFD4B138(0, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v16, v17, v6);
  *(void *)&v16[*(int *)(v7 + 20)] = *(void *)&v17[*(int *)(v7 + 20)];
  (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v16, 0, 1, v7);
  return a1;
}

uint64_t sub_1AFDE180C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1AFDE1820);
}

uint64_t sub_1AFDE1820(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_3Tm(a1, a2, a3, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
}

uint64_t sub_1AFDE1854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1AFDE1868);
}

uint64_t sub_1AFDE1868(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_4Tm(a1, a2, a3, a4, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
}

void sub_1AFDE189C(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t *sub_1AFDE18D0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1AFFC8E48();
  }
  else
  {
    uint64_t v7 = sub_1AFFC96E8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_1AFDE199C(uint64_t a1)
{
  uint64_t v2 = sub_1AFFC96E8();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_1AFDE1A00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1AFFC96E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1AFDE1A7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1AFFC96E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1AFDE1AF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1AFFC96E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1AFDE1B74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1AFFC96E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1AFDE1BF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1AFDE1C04);
}

uint64_t sub_1AFDE1C04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1AFFC96E8();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_1AFDE1C70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1AFDE1C84);
}

uint64_t sub_1AFDE1C84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1AFFC96E8();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_1AFDE1CF4()
{
  uint64_t result = sub_1AFFC96E8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1AFDE1D8C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v21 + ((v5 + 16) & ~(unint64_t)v5);
    sub_1AFFC8E48();
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    unint64_t v8 = *(void *)(a2 + 8);
    sub_1AFD4B0E0(*(void *)a2, v8);
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v8;
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    uint64_t v9 = type metadata accessor for RawAttributionSourceLogo.Resolved.Variant(0);
    uint64_t v10 = *(int *)(v9 + 28);
    uint64_t v11 = a1 + v10;
    uint64_t v12 = a2 + v10;
    uint64_t v13 = sub_1AFFC96E8();
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
    v14(v11, v12, v13);
    uint64_t v15 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
    *(void *)(v11 + *(int *)(v15 + 20)) = *(void *)(v12 + *(int *)(v15 + 20));
    uint64_t v16 = *(int *)(a3 + 20);
    uint64_t v17 = (void *)(a1 + v16);
    int v18 = (uint64_t *)(a2 + v16);
    uint64_t v41 = *(void *)(v9 - 8);
    long long v42 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48);
    uint64_t v39 = v15;
    uint64_t v40 = (void (*)(char *, char *, uint64_t))v14;
    if (v42(a2 + v16, 1, v9))
    {
      sub_1AFD4B138(0, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
      uint64_t v20 = v41;
    }
    else
    {
      uint64_t v37 = v13;
      uint64_t v38 = v9;
      uint64_t v22 = *v18;
      unint64_t v23 = v18[1];
      sub_1AFD4B0E0(*v18, v23);
      *uint64_t v17 = v22;
      v17[1] = v23;
      uint64_t v13 = v37;
      *((_OWORD *)v17 + 1) = *((_OWORD *)v18 + 1);
      uint64_t v24 = *(int *)(v38 + 28);
      uint64_t v25 = (char *)v17 + v24;
      uint64_t v26 = (char *)v18 + v24;
      v14((uint64_t)v17 + v24, (uint64_t)v26, v37);
      *(void *)&v25[*(int *)(v15 + 20)] = *(void *)&v26[*(int *)(v15 + 20)];
      uint64_t v9 = v38;
      uint64_t v20 = v41;
      (*(void (**)(void *, void, uint64_t, uint64_t))(v41 + 56))(v17, 0, 1, v38);
    }
    uint64_t v27 = *(int *)(a3 + 24);
    uint64_t v28 = (void *)(a1 + v27);
    uint64_t v29 = (uint64_t *)(a2 + v27);
    if (v42((uint64_t)v29, 1, v9))
    {
      sub_1AFD4B138(0, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
      memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      uint64_t v31 = *v29;
      unint64_t v32 = v29[1];
      sub_1AFD4B0E0(*v29, v32);
      *uint64_t v28 = v31;
      v28[1] = v32;
      *((_OWORD *)v28 + 1) = *((_OWORD *)v29 + 1);
      uint64_t v33 = *(int *)(v9 + 28);
      uint64_t v34 = (char *)v28 + v33;
      uint64_t v35 = (char *)v29 + v33;
      v40((char *)v28 + v33, v35, v13);
      *(void *)&v34[*(int *)(v39 + 20)] = *(void *)&v35[*(int *)(v39 + 20)];
      (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v28, 0, 1, v9);
    }
  }
  return a1;
}

uint64_t sub_1AFDE20E4(uint64_t a1, uint64_t a2)
{
  sub_1AFD4B504(*(void *)a1, *(void *)(a1 + 8));
  uint64_t v4 = type metadata accessor for RawAttributionSourceLogo.Resolved.Variant(0);
  uint64_t v5 = a1 + *(int *)(v4 + 28);
  uint64_t v6 = sub_1AFFC96E8();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v12(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 20);
  unint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  if (!v8(v7, 1, v4))
  {
    sub_1AFD4B504(*(void *)v7, *(void *)(v7 + 8));
    v12(v7 + *(int *)(v4 + 28), v6);
  }
  uint64_t v9 = a1 + *(int *)(a2 + 24);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v8)(v9, 1, v4);
  if (!result)
  {
    sub_1AFD4B504(*(void *)v9, *(void *)(v9 + 8));
    uint64_t v11 = v9 + *(int *)(v4 + 28);
    return ((uint64_t (*)(uint64_t, uint64_t))v12)(v11, v6);
  }
  return result;
}

uint64_t sub_1AFDE225C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  unint64_t v7 = *(void *)(a2 + 8);
  sub_1AFD4B0E0(*(void *)a2, v7);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v8 = type metadata accessor for RawAttributionSourceLogo.Resolved.Variant(0);
  uint64_t v9 = *(int *)(v8 + 28);
  uint64_t v10 = (char *)(a1 + v9);
  uint64_t v11 = (char *)(a2 + v9);
  uint64_t v12 = sub_1AFFC96E8();
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
  v13(v10, v11, v12);
  uint64_t v39 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
  uint64_t v40 = a1;
  *(void *)&v10[*(int *)(v39 + 20)] = *(void *)&v11[*(int *)(v39 + 20)];
  uint64_t v14 = *(int *)(a3 + 20);
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (uint64_t *)(a2 + v14);
  uint64_t v17 = *(void *)(v8 - 8);
  uint64_t v38 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
  uint64_t v37 = v13;
  if (v38(a2 + v14, 1, v8))
  {
    sub_1AFD4B138(0, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
    memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
    uint64_t v19 = v39;
  }
  else
  {
    uint64_t v35 = a3;
    uint64_t v36 = v12;
    uint64_t v20 = *v16;
    unint64_t v21 = v16[1];
    sub_1AFD4B0E0(*v16, v21);
    void *v15 = v20;
    v15[1] = v21;
    uint64_t v12 = v36;
    *((_OWORD *)v15 + 1) = *((_OWORD *)v16 + 1);
    uint64_t v22 = *(int *)(v8 + 28);
    unint64_t v23 = (char *)v15 + v22;
    uint64_t v24 = (char *)v16 + v22;
    v13((char *)v15 + v22, v24, v36);
    uint64_t v19 = v39;
    *(void *)&v23[*(int *)(v39 + 20)] = *(void *)&v24[*(int *)(v39 + 20)];
    a3 = v35;
    (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v8);
  }
  uint64_t v25 = *(int *)(a3 + 24);
  uint64_t v26 = (void *)(v40 + v25);
  uint64_t v27 = (uint64_t *)(a2 + v25);
  if (v38((uint64_t)v27, 1, v8))
  {
    sub_1AFD4B138(0, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
    memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    uint64_t v29 = *v27;
    unint64_t v30 = v27[1];
    sub_1AFD4B0E0(*v27, v30);
    *uint64_t v26 = v29;
    v26[1] = v30;
    *((_OWORD *)v26 + 1) = *((_OWORD *)v27 + 1);
    uint64_t v31 = *(int *)(v8 + 28);
    unint64_t v32 = (char *)v26 + v31;
    uint64_t v33 = (char *)v27 + v31;
    v37((char *)v26 + v31, v33, v12);
    *(void *)&v32[*(int *)(v19 + 20)] = *(void *)&v33[*(int *)(v19 + 20)];
    (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v26, 0, 1, v8);
  }
  return v40;
}

uint64_t *sub_1AFDE2554(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  sub_1AFD4B0E0(*a2, v7);
  uint64_t v8 = *a1;
  unint64_t v9 = a1[1];
  *a1 = v6;
  a1[1] = v7;
  sub_1AFD4B504(v8, v9);
  a1[2] = a2[2];
  a1[3] = a2[3];
  uint64_t v10 = type metadata accessor for RawAttributionSourceLogo.Resolved.Variant(0);
  uint64_t v11 = *(int *)(v10 + 28);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_1AFFC96E8();
  uint64_t v57 = *(void *)(v14 - 8);
  uint64_t v55 = *(void (**)(char *, char *, uint64_t))(v57 + 24);
  v55(v12, v13, v14);
  uint64_t v58 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
  uint64_t v59 = a3;
  *(void *)&v12[*(int *)(v58 + 20)] = *(void *)&v13[*(int *)(v58 + 20)];
  uint64_t v15 = *(int *)(a3 + 20);
  uint64_t v16 = (uint64_t *)((char *)a1 + v15);
  uint64_t v17 = (uint64_t *)((char *)a2 + v15);
  uint64_t v56 = *(void *)(v10 - 8);
  uint64_t v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v56 + 48);
  int v19 = v18((char *)a1 + v15, 1, v10);
  int v20 = v18((char *)v17, 1, v10);
  if (v19)
  {
    if (!v20)
    {
      uint64_t v21 = v14;
      uint64_t v22 = *v17;
      unint64_t v23 = v17[1];
      sub_1AFD4B0E0(*v17, v23);
      *uint64_t v16 = v22;
      v16[1] = v23;
      uint64_t v14 = v21;
      v16[2] = v17[2];
      v16[3] = v17[3];
      uint64_t v24 = *(int *)(v10 + 28);
      uint64_t v25 = (char *)v16 + v24;
      uint64_t v26 = (char *)v17 + v24;
      (*(void (**)(char *, char *, uint64_t))(v57 + 16))((char *)v16 + v24, v26, v21);
      *(void *)&v25[*(int *)(v58 + 20)] = *(void *)&v26[*(int *)(v58 + 20)];
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v56 + 56))(v16, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v20)
  {
    sub_1AFDDAC98((uint64_t)v16, type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
LABEL_6:
    sub_1AFD4B138(0, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
    memcpy(v16, v17, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v54 = v14;
  uint64_t v40 = *v17;
  unint64_t v41 = v17[1];
  sub_1AFD4B0E0(*v17, v41);
  uint64_t v42 = *v16;
  unint64_t v43 = v16[1];
  *uint64_t v16 = v40;
  v16[1] = v41;
  uint64_t v14 = v54;
  sub_1AFD4B504(v42, v43);
  v16[2] = v17[2];
  v16[3] = v17[3];
  uint64_t v44 = *(int *)(v10 + 28);
  uint64_t v45 = (char *)v16 + v44;
  unint64_t v46 = (char *)v17 + v44;
  v55(v45, v46, v54);
  *(void *)&v45[*(int *)(v58 + 20)] = *(void *)&v46[*(int *)(v58 + 20)];
LABEL_7:
  uint64_t v28 = *(int *)(v59 + 24);
  uint64_t v29 = (uint64_t *)((char *)a1 + v28);
  unint64_t v30 = (uint64_t *)((char *)a2 + v28);
  int v31 = v18((char *)a1 + v28, 1, v10);
  int v32 = v18((char *)v30, 1, v10);
  if (!v31)
  {
    if (!v32)
    {
      uint64_t v47 = *v30;
      unint64_t v48 = v30[1];
      sub_1AFD4B0E0(*v30, v48);
      uint64_t v49 = *v29;
      unint64_t v50 = v29[1];
      uint64_t *v29 = v47;
      v29[1] = v48;
      sub_1AFD4B504(v49, v50);
      v29[2] = v30[2];
      v29[3] = v30[3];
      uint64_t v51 = *(int *)(v10 + 28);
      uint64_t v52 = (char *)v29 + v51;
      uint64_t v53 = (char *)v30 + v51;
      v55((char *)v29 + v51, v53, v14);
      *(void *)&v52[*(int *)(v58 + 20)] = *(void *)&v53[*(int *)(v58 + 20)];
      return a1;
    }
    sub_1AFDDAC98((uint64_t)v29, type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
    goto LABEL_12;
  }
  if (v32)
  {
LABEL_12:
    sub_1AFD4B138(0, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
    memcpy(v29, v30, *(void *)(*(void *)(v38 - 8) + 64));
    return a1;
  }
  uint64_t v33 = *v30;
  unint64_t v34 = v30[1];
  sub_1AFD4B0E0(*v30, v34);
  uint64_t *v29 = v33;
  v29[1] = v34;
  v29[2] = v30[2];
  v29[3] = v30[3];
  uint64_t v35 = *(int *)(v10 + 28);
  uint64_t v36 = (char *)v29 + v35;
  uint64_t v37 = (char *)v30 + v35;
  (*(void (**)(char *, char *, uint64_t))(v57 + 16))((char *)v29 + v35, v37, v14);
  *(void *)&v36[*(int *)(v58 + 20)] = *(void *)&v37[*(int *)(v58 + 20)];
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v56 + 56))(v29, 0, 1, v10);
  return a1;
}

_OWORD *sub_1AFDE29E4(_OWORD *a1, char *a2, uint64_t a3)
{
  long long v6 = *((_OWORD *)a2 + 1);
  *a1 = *(_OWORD *)a2;
  a1[1] = v6;
  uint64_t v7 = type metadata accessor for RawAttributionSourceLogo.Resolved.Variant(0);
  uint64_t v8 = *(int *)(v7 + 28);
  unint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_1AFFC96E8();
  uint64_t v12 = *(void (**)(void))(*(void *)(v11 - 8) + 32);
  ((void (*)(char *, char *, uint64_t))v12)(v9, v10, v11);
  uint64_t v13 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
  *(void *)&v9[*(int *)(v13 + 20)] = *(void *)&v10[*(int *)(v13 + 20)];
  uint64_t v34 = a3;
  uint64_t v14 = *(int *)(a3 + 20);
  uint64_t v15 = (_OWORD *)((char *)a1 + v14);
  uint64_t v16 = &a2[v14];
  uint64_t v17 = *(void *)(v7 - 8);
  uint64_t v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  uint64_t v32 = v11;
  if (v33(&a2[v14], 1, v7))
  {
    sub_1AFD4B138(0, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
    memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    long long v19 = *((_OWORD *)v16 + 1);
    _OWORD *v15 = *(_OWORD *)v16;
    v15[1] = v19;
    uint64_t v20 = *(int *)(v7 + 28);
    int v31 = (char *)v15 + v20;
    uint64_t v21 = &v16[v20];
    v12();
    *(void *)&v31[*(int *)(v13 + 20)] = *(void *)&v21[*(int *)(v13 + 20)];
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v7);
  }
  uint64_t v22 = *(int *)(v34 + 24);
  unint64_t v23 = (_OWORD *)((char *)a1 + v22);
  uint64_t v24 = &a2[v22];
  if (v33(v24, 1, v7))
  {
    sub_1AFD4B138(0, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
    memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    long long v26 = *((_OWORD *)v24 + 1);
    *unint64_t v23 = *(_OWORD *)v24;
    v23[1] = v26;
    uint64_t v27 = *(int *)(v7 + 28);
    uint64_t v28 = (char *)v23 + v27;
    uint64_t v29 = &v24[v27];
    ((void (*)(char *, char *, uint64_t))v12)((char *)v23 + v27, v29, v32);
    *(void *)&v28[*(int *)(v13 + 20)] = *(void *)&v29[*(int *)(v13 + 20)];
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v17 + 56))(v23, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_1AFDE2CA8(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *a2;
  sub_1AFD4B504(v6, v7);
  *(_OWORD *)(a1 + 16) = a2[1];
  uint64_t v8 = type metadata accessor for RawAttributionSourceLogo.Resolved.Variant(0);
  uint64_t v9 = *(int *)(v8 + 28);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_1AFFC96E8();
  uint64_t v47 = *(void *)(v12 - 8);
  uint64_t v49 = v12;
  uint64_t v45 = *(void (**)(uint64_t, char *))(v47 + 40);
  v45(v10, v11);
  uint64_t v48 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
  *(void *)(v10 + *(int *)(v48 + 20)) = *(void *)&v11[*(int *)(v48 + 20)];
  uint64_t v13 = *(int *)(a3 + 20);
  uint64_t v14 = (unint64_t *)(a1 + v13);
  uint64_t v15 = (_OWORD *)((char *)a2 + v13);
  uint64_t v46 = *(void *)(v8 - 8);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v46 + 48);
  int v17 = v16(a1 + v13, 1, v8);
  int v18 = v16((uint64_t)v15, 1, v8);
  if (v17)
  {
    if (!v18)
    {
      long long v19 = v15[1];
      *(_OWORD *)uint64_t v14 = *v15;
      *((_OWORD *)v14 + 1) = v19;
      uint64_t v20 = *(int *)(v8 + 28);
      uint64_t v21 = (char *)v14 + v20;
      uint64_t v22 = (char *)v15 + v20;
      (*(void (**)(char *, char *, uint64_t))(v47 + 32))((char *)v14 + v20, v22, v49);
      *(void *)&v21[*(int *)(v48 + 20)] = *(void *)&v22[*(int *)(v48 + 20)];
      (*(void (**)(unint64_t *, void, uint64_t, uint64_t))(v46 + 56))(v14, 0, 1, v8);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    sub_1AFDDAC98((uint64_t)v14, type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
LABEL_6:
    sub_1AFD4B138(0, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
    memcpy(v14, v15, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v35 = *v14;
  unint64_t v36 = v14[1];
  *(_OWORD *)uint64_t v14 = *v15;
  sub_1AFD4B504(v35, v36);
  *((_OWORD *)v14 + 1) = v15[1];
  uint64_t v37 = *(int *)(v8 + 28);
  uint64_t v38 = (char *)v14 + v37;
  uint64_t v39 = (char *)v15 + v37;
  ((void (*)(char *, char *, uint64_t))v45)(v38, v39, v49);
  *(void *)&v38[*(int *)(v48 + 20)] = *(void *)&v39[*(int *)(v48 + 20)];
LABEL_7:
  uint64_t v24 = *(int *)(a3 + 24);
  uint64_t v25 = (_OWORD *)(a1 + v24);
  long long v26 = (_OWORD *)((char *)a2 + v24);
  int v27 = v16(a1 + v24, 1, v8);
  int v28 = v16((uint64_t)v26, 1, v8);
  if (!v27)
  {
    if (!v28)
    {
      uint64_t v40 = *(void *)v25;
      unint64_t v41 = *((void *)v25 + 1);
      *uint64_t v25 = *v26;
      sub_1AFD4B504(v40, v41);
      v25[1] = v26[1];
      uint64_t v42 = *(int *)(v8 + 28);
      unint64_t v43 = (char *)v25 + v42;
      uint64_t v44 = (char *)v26 + v42;
      ((void (*)(char *, char *, uint64_t))v45)((char *)v25 + v42, v44, v49);
      *(void *)&v43[*(int *)(v48 + 20)] = *(void *)&v44[*(int *)(v48 + 20)];
      return a1;
    }
    sub_1AFDDAC98((uint64_t)v25, type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
    goto LABEL_12;
  }
  if (v28)
  {
LABEL_12:
    sub_1AFD4B138(0, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
    memcpy(v25, v26, *(void *)(*(void *)(v33 - 8) + 64));
    return a1;
  }
  long long v29 = v26[1];
  *uint64_t v25 = *v26;
  v25[1] = v29;
  uint64_t v30 = *(int *)(v8 + 28);
  int v31 = (char *)v25 + v30;
  uint64_t v32 = (char *)v26 + v30;
  (*(void (**)(char *, char *, uint64_t))(v47 + 32))((char *)v25 + v30, v32, v49);
  *(void *)&v31[*(int *)(v48 + 20)] = *(void *)&v32[*(int *)(v48 + 20)];
  (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v46 + 56))(v25, 0, 1, v8);
  return a1;
}

uint64_t sub_1AFDE30B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1AFDE30C4);
}

uint64_t sub_1AFDE30C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_3Tm(a1, a2, a3, type metadata accessor for RawAttributionSourceLogo.Resolved.Variant, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
}

uint64_t __swift_get_extra_inhabitant_index_3Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), unint64_t *a5, void (*a6)(uint64_t))
{
  uint64_t v11 = a4(0);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v13(a1, a2, v11);
  }
  else
  {
    sub_1AFD4B138(0, a5, a6);
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + *(int *)(a3 + 20);
    return v16(v18, a2, v17);
  }
}

uint64_t sub_1AFDE3210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1AFDE3224);
}

uint64_t sub_1AFDE3224(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_4Tm(a1, a2, a3, a4, type metadata accessor for RawAttributionSourceLogo.Resolved.Variant, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
}

uint64_t __swift_store_extra_inhabitant_index_4Tm(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t (*a5)(void), unint64_t *a6, void (*a7)(uint64_t))
{
  uint64_t v13 = a5(0);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v15(a1, a2, a2, v13);
  }
  else
  {
    sub_1AFD4B138(0, a6, a7);
    uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
    uint64_t v19 = v17;
    uint64_t v20 = a1 + *(int *)(a4 + 20);
    return v18(v20, a2, a2, v19);
  }
}

void sub_1AFDE337C(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_1AFDE33B0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t), unint64_t *a5, void (*a6)(uint64_t))
{
  a4(319);
  if (v8 <= 0x3F)
  {
    sub_1AFD4B138(319, a5, a6);
    if (v9 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unint64_t sub_1AFDE3494(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v14 + ((v5 + 16) & ~(unint64_t)v5);
    sub_1AFFC8E48();
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    unint64_t v8 = *(void *)(a2 + 8);
    sub_1AFD4B0E0(*(void *)a2, v8);
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v8;
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    uint64_t v9 = *(int *)(a3 + 28);
    uint64_t v10 = a1 + v9;
    uint64_t v11 = a2 + v9;
    uint64_t v12 = sub_1AFFC96E8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    uint64_t v13 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
    *(void *)(v10 + *(int *)(v13 + 20)) = *(void *)(v11 + *(int *)(v13 + 20));
  }
  return a1;
}

uint64_t sub_1AFDE3598(uint64_t a1, uint64_t a2)
{
  sub_1AFD4B504(*(void *)a1, *(void *)(a1 + 8));
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_1AFFC96E8();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t sub_1AFDE3614(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  unint64_t v7 = *(void *)(a2 + 8);
  sub_1AFD4B0E0(*(void *)a2, v7);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v8 = *(int *)(a3 + 28);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1AFFC96E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  uint64_t v12 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
  *(void *)(v9 + *(int *)(v12 + 20)) = *(void *)(v10 + *(int *)(v12 + 20));
  return a1;
}

uint64_t *sub_1AFDE36C8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  sub_1AFD4B0E0(*a2, v7);
  uint64_t v8 = *a1;
  unint64_t v9 = a1[1];
  *a1 = v6;
  a1[1] = v7;
  sub_1AFD4B504(v8, v9);
  a1[2] = a2[2];
  a1[3] = a2[3];
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_1AFFC96E8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  uint64_t v14 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
  *(void *)&v11[*(int *)(v14 + 20)] = *(void *)&v12[*(int *)(v14 + 20)];
  return a1;
}

_OWORD *sub_1AFDE378C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = (char *)a1 + v5;
  unint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1AFFC96E8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  uint64_t v9 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
  *(void *)&v6[*(int *)(v9 + 20)] = *(void *)&v7[*(int *)(v9 + 20)];
  return a1;
}

uint64_t sub_1AFDE381C(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *a2;
  sub_1AFD4B504(v6, v7);
  *(_OWORD *)(a1 + 16) = a2[1];
  uint64_t v8 = *(int *)(a3 + 28);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_1AFFC96E8();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
  *(void *)(v9 + *(int *)(v12 + 20)) = *(void *)&v10[*(int *)(v12 + 20)];
  return a1;
}

uint64_t sub_1AFDE38C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1AFDE38DC);
}

uint64_t sub_1AFDE38DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 12)
  {
    uint64_t v4 = *(void *)(a1 + 8) >> 60;
    if (((4 * v4) & 0xC) != 0) {
      return 16 - ((4 * v4) & 0xC | (v4 >> 2));
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1AFDE3998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1AFDE39AC);
}

void *sub_1AFDE39AC(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 12)
  {
    *uint64_t result = 0;
    result[1] = (unint64_t)(((-(int)a2 >> 2) & 3) - 4 * a2) << 60;
  }
  else
  {
    uint64_t v7 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 28);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1AFDE3A5C()
{
  uint64_t result = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for RawAttributionSourceLogo.CodingKeys()
{
  return &type metadata for RawAttributionSourceLogo.CodingKeys;
}

ValueMetadata *type metadata accessor for RawAttributionSourceLogo.UnresolvedCodingKeys()
{
  return &type metadata for RawAttributionSourceLogo.UnresolvedCodingKeys;
}

unsigned char *_s10StocksCore24RawAttributionSourceLogoO20UnresolvedCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1AFDE3BCCLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for RawAttributionSourceLogo.ResolvedCodingKeys()
{
  return &type metadata for RawAttributionSourceLogo.ResolvedCodingKeys;
}

ValueMetadata *type metadata accessor for RawAttributionSourceLogo.Resolved.CodingKeys()
{
  return &type metadata for RawAttributionSourceLogo.Resolved.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for RawAttributionSourceLogo.Resolved.Variant.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFDE3CE4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RawAttributionSourceLogo.Resolved.Variant.CodingKeys()
{
  return &type metadata for RawAttributionSourceLogo.Resolved.Variant.CodingKeys;
}

ValueMetadata *type metadata accessor for RawAttributionSourceLogo.Unresolved.CodingKeys()
{
  return &type metadata for RawAttributionSourceLogo.Unresolved.CodingKeys;
}

unsigned char *_s10StocksCore24RawAttributionSourceLogoO10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFDE3DF8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant.CodingKeys()
{
  return &type metadata for RawAttributionSourceLogo.Unresolved.Variant.CodingKeys;
}

unsigned char *_s10StocksCore24RawAttributionSourceLogoO8ResolvedV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFDE3EFCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RawAttributionSource.CodingKeys()
{
  return &type metadata for RawAttributionSource.CodingKeys;
}

unint64_t sub_1AFDE3F38()
{
  unint64_t result = qword_1E9AFAD38;
  if (!qword_1E9AFAD38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFAD38);
  }
  return result;
}

unint64_t sub_1AFDE3F90()
{
  unint64_t result = qword_1E9AFAD40;
  if (!qword_1E9AFAD40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFAD40);
  }
  return result;
}

unint64_t sub_1AFDE3FE8()
{
  unint64_t result = qword_1E9AFAD48;
  if (!qword_1E9AFAD48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFAD48);
  }
  return result;
}

unint64_t sub_1AFDE4040()
{
  unint64_t result = qword_1E9AFAD50;
  if (!qword_1E9AFAD50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFAD50);
  }
  return result;
}

unint64_t sub_1AFDE4098()
{
  unint64_t result = qword_1E9AFAD58;
  if (!qword_1E9AFAD58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFAD58);
  }
  return result;
}

unint64_t sub_1AFDE40F0()
{
  unint64_t result = qword_1E9AFAD60;
  if (!qword_1E9AFAD60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFAD60);
  }
  return result;
}

unint64_t sub_1AFDE4148()
{
  unint64_t result = qword_1E9AFAD68;
  if (!qword_1E9AFAD68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFAD68);
  }
  return result;
}

unint64_t sub_1AFDE41A0()
{
  unint64_t result = qword_1E9AFAD70;
  if (!qword_1E9AFAD70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFAD70);
  }
  return result;
}

unint64_t sub_1AFDE41F8()
{
  unint64_t result = qword_1EB811678;
  if (!qword_1EB811678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB811678);
  }
  return result;
}

unint64_t sub_1AFDE4250()
{
  unint64_t result = qword_1EB811670;
  if (!qword_1EB811670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB811670);
  }
  return result;
}

unint64_t sub_1AFDE42A8()
{
  unint64_t result = qword_1EB8116C8;
  if (!qword_1EB8116C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8116C8);
  }
  return result;
}

unint64_t sub_1AFDE4300()
{
  unint64_t result = qword_1EB8116C0;
  if (!qword_1EB8116C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8116C0);
  }
  return result;
}

unint64_t sub_1AFDE4358()
{
  unint64_t result = qword_1EB8116B0;
  if (!qword_1EB8116B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8116B0);
  }
  return result;
}

unint64_t sub_1AFDE43B0()
{
  unint64_t result = qword_1EB8116A8;
  if (!qword_1EB8116A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8116A8);
  }
  return result;
}

unint64_t sub_1AFDE4408()
{
  unint64_t result = qword_1E9AFAD78;
  if (!qword_1E9AFAD78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFAD78);
  }
  return result;
}

unint64_t sub_1AFDE4460()
{
  unint64_t result = qword_1E9AFAD80;
  if (!qword_1E9AFAD80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFAD80);
  }
  return result;
}

unint64_t sub_1AFDE44B8()
{
  unint64_t result = qword_1E9AFAD88;
  if (!qword_1E9AFAD88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFAD88);
  }
  return result;
}

unint64_t sub_1AFDE4510()
{
  unint64_t result = qword_1E9AFAD90;
  if (!qword_1E9AFAD90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFAD90);
  }
  return result;
}

unint64_t sub_1AFDE4568()
{
  unint64_t result = qword_1EB811690;
  if (!qword_1EB811690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB811690);
  }
  return result;
}

unint64_t sub_1AFDE45C0()
{
  unint64_t result = qword_1EB811688;
  if (!qword_1EB811688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB811688);
  }
  return result;
}

unint64_t sub_1AFDE4618()
{
  unint64_t result = qword_1E9AFAD98;
  if (!qword_1E9AFAD98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFAD98);
  }
  return result;
}

unint64_t sub_1AFDE4670()
{
  unint64_t result = qword_1E9AFADA0;
  if (!qword_1E9AFADA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFADA0);
  }
  return result;
}

unint64_t sub_1AFDE46C8()
{
  unint64_t result = qword_1EB811638;
  if (!qword_1EB811638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB811638);
  }
  return result;
}

unint64_t sub_1AFDE4720()
{
  unint64_t result = qword_1EB811630;
  if (!qword_1EB811630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB811630);
  }
  return result;
}

uint64_t sub_1AFDE4774(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4C5255656D6F68 && a2 == 0xE700000000000000 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1869049708 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1AFFCBCE8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1AFDE48AC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 7107189 && a2 == 0xE300000000000000;
  if (v2 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656E696C65736162 && a2 == 0xEE0074657366664FLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1AFFCBCE8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1AFDE49B4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1635017060 && a2 == 0xE400000000000000;
  if (v2 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C616373 && a2 == 0xE500000000000000 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656E696C65736162 && a2 == 0xEE0074657366664FLL || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x766C6F7365726E75 && a2 == 0xEA00000000006465)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1AFFCBCE8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1AFDE4B88(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746867696CLL && a2 == 0xE500000000000000;
  if (v2 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1802658148 && a2 == 0xE400000000000000 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6574616C706D6574 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1AFFCBCE8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1AFDE4CC8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x766C6F7365726E75 && a2 == 0xEA00000000006465;
  if (v2 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6465766C6F736572 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1AFFCBCE8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

void sub_1AFDE4DC8()
{
  if (!qword_1EB810A50)
  {
    type metadata accessor for RawAttributionSourceLogo(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB810A50);
    }
  }
}

uint64_t sub_1AFDE4E2C(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1AFDE4E88(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

void sub_1AFDE4E88(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_1AFD4B138(255, a3, a4);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v6) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_1AFDE4EF8@<X0>(void *a1@<X8>)
{
  uint64_t result = (uint64_t)objc_msgSend(v1, sel_respondsToSelector_, sel_stocksFields);
  if ((result & 1) != 0
    && (uint64_t result = (uint64_t)objc_msgSend(v1, sel_stocksFields)) != 0
    && (id v4 = objc_msgSend((id)result, sel_stocksMetadataJSON),
        uint64_t result = swift_unknownObjectRelease(),
        v4))
  {
    unint64_t v5 = sub_1AFFCAE98();
    unint64_t v7 = v6;

    sub_1AFFC9198();
    swift_allocObject();
    sub_1AFFC9188();
    uint64_t v8 = sub_1AFDE5044(v5, v7);
    unint64_t v10 = v9;
    sub_1AFDE558C();
    sub_1AFFC9168();
    sub_1AFD4B504(v8, v10);
    uint64_t result = swift_release();
    uint64_t v11 = v12;
  }
  else
  {
    uint64_t v11 = MEMORY[0x1E4FBC860];
  }
  *a1 = v11;
  return result;
}

uint64_t sub_1AFDE5044(unint64_t a1, unint64_t a2)
{
  uint64_t v44 = *MEMORY[0x1E4F143B8];
  *(void *)&long long v40 = a1;
  *((void *)&v40 + 1) = a2;
  sub_1AFDE5D90();
  sub_1AFFC8E38();
  if (swift_dynamicCast())
  {
    sub_1AFD80454(v38, (uint64_t)&v41);
    __swift_project_boxed_opaque_existential_1(&v41, v43);
    sub_1AFFC9458();
    swift_bridgeObjectRelease();
    v38[0] = v40;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v41);
    return *(void *)&v38[0];
  }
  uint64_t v39 = 0;
  memset(v38, 0, sizeof(v38));
  sub_1AFDE5DE8((uint64_t)v38, &qword_1EB816C88, (uint64_t (*)(uint64_t))sub_1AFDE5D90);
  unint64_t v2 = a1;
  unint64_t v3 = a2;
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) != 0)
    {
      uint64_t v41 = a1;
      uint64_t v42 = a2 & 0xFFFFFFFFFFFFFFLL;
      unint64_t v6 = (char *)&v41 + (HIBYTE(a2) & 0xF);
      unint64_t v7 = &v41;
    }
    else
    {
      if ((a1 & 0x1000000000000000) != 0)
      {
        uint64_t v4 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v5 = a1 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v4 = sub_1AFFCB878();
      }
      if (v4) {
        unint64_t v6 = (unsigned char *)(v4 + v5);
      }
      else {
        unint64_t v6 = 0;
      }
      unint64_t v7 = (uint64_t *)v4;
    }
    uint64_t v8 = sub_1AFDE64E8(v7, v6);
    unint64_t v10 = v9;
    if (v9 >> 60 != 15)
    {
      swift_bridgeObjectRelease();
      *(void *)&v38[0] = v8;
      *((void *)&v38[0] + 1) = v10;
      return *(void *)&v38[0];
    }
    unint64_t v2 = a1;
    unint64_t v3 = a2;
    if ((a2 & 0x1000000000000000) == 0) {
      goto LABEL_14;
    }
LABEL_70:
    uint64_t v11 = sub_1AFFCAFB8();
    goto LABEL_17;
  }
LABEL_69:
  uint64_t v8 = 0;
  unint64_t v10 = 0xF000000000000000;
  if ((v3 & 0x1000000000000000) != 0) {
    goto LABEL_70;
  }
LABEL_14:
  if ((v3 & 0x2000000000000000) != 0) {
    uint64_t v11 = HIBYTE(v3) & 0xF;
  }
  else {
    uint64_t v11 = v2 & 0xFFFFFFFFFFFFLL;
  }
LABEL_17:
  *(void *)&v38[0] = sub_1AFDE654C(v11);
  *((void *)&v38[0] + 1) = v12;
  MEMORY[0x1F4188790](*(void *)&v38[0]);
  unint64_t v13 = (unint64_t)sub_1AFDE5EBC((void *(*)(uint64_t *__return_ptr, char *, char *))sub_1AFDE65EC);
  uint64_t v16 = *((void *)&v38[0] + 1) >> 62;
  uint64_t v17 = v13;
  uint64_t v18 = v3;
  unint64_t v19 = v14;
  switch(*((void *)&v38[0] + 1) >> 62)
  {
    case 1:
      LODWORD(v20) = DWORD1(v38[0]) - LODWORD(v38[0]);
      if (__OFSUB__(DWORD1(v38[0]), v38[0])) {
        goto LABEL_73;
      }
      uint64_t v20 = (int)v20;
LABEL_23:
      if (v15 != v20)
      {
        if (v16)
        {
          if (v16 == 1) {
            uint64_t v24 = *(uint64_t *)&v38[0] >> 32;
          }
          else {
            uint64_t v24 = *(void *)(*(void *)&v38[0] + 24);
          }
        }
        else
        {
          uint64_t v24 = BYTE14(v38[0]);
        }
LABEL_61:
        if (v24 < v15)
        {
          __break(1u);
LABEL_73:
          __break(1u);
LABEL_74:
          __break(1u);
        }
        sub_1AFFC9748();
LABEL_63:
        swift_bridgeObjectRelease();
        goto LABEL_64;
      }
LABEL_29:
      if ((v3 & 0x2000000000000000) != 0) {
        unint64_t v25 = HIBYTE(v3) & 0xF;
      }
      else {
        unint64_t v25 = v13 & 0xFFFFFFFFFFFFLL;
      }
      *(void *)((char *)&v40 + 7) = 0;
      *(void *)&long long v40 = 0;
      if (4 * v25 == v14 >> 14) {
        goto LABEL_58;
      }
      LOBYTE(v26) = 0;
      uint64_t v27 = (v13 >> 59) & 1;
      if ((v3 & 0x1000000000000000) == 0) {
        LOBYTE(v27) = 1;
      }
      uint64_t v28 = 4 << v27;
      uint64_t v35 = v3 & 0xFFFFFFFFFFFFFFLL;
      uint64_t v33 = (uint64_t)v8;
      uint64_t v34 = (v3 & 0xFFFFFFFFFFFFFFFLL) + 32;
      break;
    case 2:
      uint64_t v22 = *(void *)(*(void *)&v38[0] + 16);
      uint64_t v21 = *(void *)(*(void *)&v38[0] + 24);
      BOOL v23 = __OFSUB__(v21, v22);
      uint64_t v20 = v21 - v22;
      if (!v23) {
        goto LABEL_23;
      }
      goto LABEL_74;
    case 3:
      if (!v15) {
        goto LABEL_29;
      }
      uint64_t v24 = 0;
      goto LABEL_61;
    default:
      uint64_t v20 = BYTE14(v38[0]);
      goto LABEL_23;
  }
  do
  {
    unint64_t v29 = v19 & 0xC;
    unint64_t v2 = v19;
    if (v29 == v28) {
      unint64_t v2 = sub_1AFE6FDE8(v19, v17, v18);
    }
    unint64_t v30 = v2 >> 16;
    if (v2 >> 16 >= v25)
    {
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
      goto LABEL_69;
    }
    if ((v18 & 0x1000000000000000) != 0)
    {
      unint64_t v2 = sub_1AFFCAFF8();
      char v31 = v2;
      if (v29 != v28) {
        goto LABEL_47;
      }
    }
    else if ((v18 & 0x2000000000000000) != 0)
    {
      uint64_t v41 = v17;
      uint64_t v42 = v35;
      char v31 = *((unsigned char *)&v41 + v30);
      if (v29 != v28) {
        goto LABEL_47;
      }
    }
    else
    {
      unint64_t v2 = v34;
      if ((v17 & 0x1000000000000000) == 0) {
        unint64_t v2 = sub_1AFFCB878();
      }
      char v31 = *(unsigned char *)(v2 + v30);
      if (v29 != v28)
      {
LABEL_47:
        if ((v18 & 0x1000000000000000) == 0) {
          goto LABEL_48;
        }
        goto LABEL_51;
      }
    }
    unint64_t v2 = sub_1AFE6FDE8(v19, v17, v18);
    unint64_t v19 = v2;
    if ((v18 & 0x1000000000000000) == 0)
    {
LABEL_48:
      unint64_t v19 = (v19 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_53;
    }
LABEL_51:
    if (v25 <= v19 >> 16) {
      goto LABEL_68;
    }
    unint64_t v2 = sub_1AFFCAFC8();
    unint64_t v19 = v2;
LABEL_53:
    *((unsigned char *)&v40 + v26) = v31;
    unsigned int v26 = v26 + 1;
    if ((v26 >> 8)) {
      goto LABEL_67;
    }
    BYTE14(v40) = v26;
    if (v26 == 14)
    {
      uint64_t v41 = v40;
      LODWORD(v42) = DWORD2(v40);
      WORD2(v42) = WORD6(v40);
      sub_1AFFC9758();
      LOBYTE(v26) = 0;
      BYTE14(v40) = 0;
    }
  }
  while (4 * v25 != v19 >> 14);
  uint64_t v8 = (unsigned char *)v33;
  if ((_BYTE)v26)
  {
    uint64_t v41 = v40;
    LODWORD(v42) = DWORD2(v40);
    WORD2(v42) = WORD6(v40);
    sub_1AFFC9758();
    sub_1AFDE6658(v33, v10);
    goto LABEL_63;
  }
LABEL_58:
  swift_bridgeObjectRelease();
  sub_1AFDE6658((uint64_t)v8, v10);
LABEL_64:
  swift_bridgeObjectRelease();
  return *(void *)&v38[0];
}

unint64_t sub_1AFDE558C()
{
  unint64_t result = qword_1EB816F88;
  if (!qword_1EB816F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816F88);
  }
  return result;
}

uint64_t sub_1AFDE55E0@<X0>(uint64_t a1@<X8>)
{
  sub_1AFDE5E58(0, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v49 = (char *)&v41 - v6;
  MEMORY[0x1F4188790](v7);
  unint64_t v50 = (char *)&v41 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v41 - v10;
  uint64_t v12 = sub_1AFFC96E8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v41 - v17;
  self;
  uint64_t v19 = swift_dynamicCastObjCClass();
  if (!v19) {
    goto LABEL_8;
  }
  uint64_t v20 = (void *)v19;
  swift_unknownObjectRetain();
  id v21 = objc_msgSend(v20, sel_contentURL);
  uint64_t v51 = a1;
  if (!v21)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
    goto LABEL_7;
  }
  uint64_t v22 = v21;
  sub_1AFFC9678();

  BOOL v23 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v23(v11, v15, v12);
  uint64_t v48 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56);
  v48((uint64_t)v11, 0, 1, v12);
  uint64_t v46 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  uint64_t v47 = v13 + 48;
  if (v46(v11, 1, v12) == 1)
  {
LABEL_7:
    swift_unknownObjectRelease();
    sub_1AFDE5DE8((uint64_t)v11, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
    a1 = v51;
LABEL_8:
    sub_1AFFCB598();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v4, 1, v12) == 1)
    {
      sub_1AFDE5DE8((uint64_t)v4, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(a1, 1, 1, v12);
    }
    else
    {
      URL.replacingHostWithStocksHost()(a1);
      (*(void (**)(char *, uint64_t))(v13 + 8))(v4, v12);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(a1, 0, 1, v12);
    }
  }
  uint64_t v45 = v13 + 56;
  v23(v18, v11, v12);
  id v44 = self;
  sub_1AFDE5CA0();
  uint64_t v24 = swift_allocObject();
  long long v41 = xmmword_1AFFD05F0;
  uint64_t v25 = MEMORY[0x1E4FBB1A0];
  *(_OWORD *)(v24 + 16) = xmmword_1AFFD05F0;
  *(void *)(v24 + 56) = v25;
  *(void *)(v24 + 32) = 0x656C6369747261;
  *(void *)(v24 + 40) = 0xE700000000000000;
  uint64_t v43 = sub_1AFFCB1B8();
  swift_bridgeObjectRelease();
  sub_1AFDE5E58(0, &qword_1EB81A0B8, MEMORY[0x1E4F26EA0], MEMORY[0x1E4FBBE00]);
  uint64_t v42 = sub_1AFFC92C8();
  *(_OWORD *)(swift_allocObject() + 16) = v41;
  uint64_t v26 = sub_1AFFC9628();
  unint64_t v28 = v27;
  sub_1AFFC9788();
  sub_1AFD4B504(v26, v28);
  sub_1AFFC92B8();
  swift_bridgeObjectRelease();
  unint64_t v29 = (void *)sub_1AFFCB1B8();
  swift_bridgeObjectRelease();
  unint64_t v30 = (void *)v43;
  id v31 = objc_msgSend(v44, sel_fc_NewsURLWithPathComponents_queryItems_internal_, v43, v29, 0);

  if (v31)
  {
    uint64_t v32 = (uint64_t)v49;
    sub_1AFFC9678();

    uint64_t v33 = 0;
    uint64_t v34 = (uint64_t)v50;
    uint64_t v35 = v51;
  }
  else
  {
    uint64_t v33 = 1;
    uint64_t v34 = (uint64_t)v50;
    uint64_t v35 = v51;
    uint64_t v32 = (uint64_t)v49;
  }
  uint64_t v37 = v48;
  v48(v32, v33, 1, v12);
  sub_1AFDE5CFC(v32, v34);
  if (v46((char *)v34, 1, v12) == 1)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
    swift_unknownObjectRelease();
    sub_1AFDE5DE8(v34, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
    uint64_t v38 = v35;
    uint64_t v39 = 1;
  }
  else
  {
    URL.replacingHostWithStocksHost()(v35);
    swift_unknownObjectRelease();
    long long v40 = *(void (**)(char *, uint64_t))(v13 + 8);
    v40(v18, v12);
    v40((char *)v34, v12);
    uint64_t v38 = v35;
    uint64_t v39 = 0;
  }
  return v37(v38, v39, 1, v12);
}

void sub_1AFDE5CA0()
{
  if (!qword_1EB8183F0)
  {
    unint64_t v0 = sub_1AFFCBC98();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8183F0);
    }
  }
}

uint64_t sub_1AFDE5CFC(uint64_t a1, uint64_t a2)
{
  sub_1AFDE5E58(0, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1AFDE5D90()
{
  unint64_t result = qword_1EB816C80;
  if (!qword_1EB816C80)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB816C80);
  }
  return result;
}

uint64_t sub_1AFDE5DE8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1AFDE5E58(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1AFDE5E58(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

char *sub_1AFDE5EBC(void *(*a1)(uint64_t *__return_ptr, char *, char *))
{
  v16[2] = *MEMORY[0x1E4F143B8];
  uint64_t v4 = *v1;
  unint64_t v3 = v1[1];
  uint64_t v5 = v1;
  switch(v3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)uint64_t v1 = xmmword_1AFFD6BE0;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v11 = v4 >> 32;
      if (isUniquelyReferenced_nonNull_native) {
        goto LABEL_16;
      }
      if (v11 < (int)v4) {
        goto LABEL_23;
      }
      if (sub_1AFFC9398() && __OFSUB__((int)v4, sub_1AFFC93C8())) {
        goto LABEL_24;
      }
      sub_1AFFC93D8();
      swift_allocObject();
      uint64_t v13 = sub_1AFFC9378();
      swift_release();
      uint64_t v9 = v13;
      uint64_t v11 = v4 >> 32;
LABEL_16:
      if (v11 < (int)v4)
      {
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
      }
      unint64_t result = sub_1AFDE62A8((int)v4, v11, a1);
      unint64_t v12 = v9 | 0x4000000000000000;
      if (v2)
      {
        *uint64_t v5 = v4;
        goto LABEL_19;
      }
      *uint64_t v5 = v4;
      v5[1] = v12;
      break;
    case 2uLL:
      uint64_t v14 = *v1;
      uint64_t v15 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      sub_1AFFC96F8();
      unint64_t result = sub_1AFDE62A8(*(void *)(v14 + 16), *(void *)(v14 + 24), a1);
      unint64_t v12 = v15 | 0x8000000000000000;
      if (v2)
      {
        *uint64_t v1 = v14;
LABEL_19:
        v5[1] = v12;
      }
      else
      {
        *uint64_t v1 = v14;
        v1[1] = v12;
      }
      break;
    case 3uLL:
      memset(v16, 0, 15);
      unint64_t result = (char *)a1(&v14, (char *)v16, (char *)v16);
      if (!v2) {
        return (char *)v14;
      }
      return result;
    default:
      v16[0] = *v1;
      LOWORD(v16[1]) = v3;
      BYTE2(v16[1]) = BYTE2(v3);
      BYTE3(v16[1]) = BYTE3(v3);
      BYTE4(v16[1]) = BYTE4(v3);
      BYTE5(v16[1]) = BYTE5(v3);
      BYTE6(v16[1]) = BYTE6(v3);
      unint64_t result = (char *)a1(&v14, (char *)v16, (char *)v16 + BYTE6(v3));
      if (!v2) {
        unint64_t result = (char *)v14;
      }
      unint64_t v8 = LODWORD(v16[1]) | ((unint64_t)BYTE4(v16[1]) << 32) | ((unint64_t)BYTE5(v16[1]) << 40) | ((unint64_t)BYTE6(v16[1]) << 48);
      *uint64_t v1 = v16[0];
      v1[1] = v8;
      return result;
  }
  return result;
}

unsigned char *sub_1AFDE61C0@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  if (!result) {
    goto LABEL_4;
  }
  uint64_t v4 = a2 - result;
  if (a2 == result)
  {
    unint64_t result = 0;
LABEL_4:
    unint64_t v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    unint64_t result = (unsigned char *)sub_1AFEA1E6C(result, a2);
    unint64_t v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    unint64_t result = (unsigned char *)sub_1AFDE63E8((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v8 | 0x8000000000000000;
  }
  else
  {
    unint64_t result = (unsigned char *)sub_1AFDE6464((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

void *sub_1AFDE6238(void *(*a1)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3)
  {
    unint64_t result = a1(&v6, a3, a4 - a3);
    if (v4) {
      return result;
    }
    return (void *)v6;
  }
  unint64_t result = a1(&v6, 0, 0);
  if (!v4) {
    return (void *)v6;
  }
  return result;
}

char *sub_1AFDE62A8(uint64_t a1, uint64_t a2, void *(*a3)(uint64_t *__return_ptr, char *, char *))
{
  unint64_t result = (char *)sub_1AFFC9398();
  if (!result) {
    goto LABEL_12;
  }
  uint64_t v8 = result;
  unint64_t result = (char *)sub_1AFFC93C8();
  uint64_t v9 = a1 - (void)result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_11;
  }
  BOOL v10 = __OFSUB__(a2, a1);
  uint64_t v11 = a2 - a1;
  if (v10)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  uint64_t v12 = sub_1AFFC93B8();
  if (v12 >= v11) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v12;
  }
  unint64_t result = (char *)a3(&v14, &v8[v9], &v8[v9 + v13]);
  if (!v3) {
    return (char *)v14;
  }
  return result;
}

uint64_t sub_1AFDE635C@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  if (result)
  {
    sub_1AFFC8E38();
    unint64_t result = sub_1AFFCB808();
    if ((v3 & 1) == 0)
    {
      uint64_t v4 = result;
      unint64_t result = swift_bridgeObjectRelease();
      *a2 = 0;
      a2[1] = 0xE000000000000000;
      a2[2] = 15;
      a2[3] = v4;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1AFDE63E8(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_1AFFC93D8();
  swift_allocObject();
  uint64_t result = sub_1AFFC9388();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1AFFC9738();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = v2;
  }
  return result;
}

uint64_t sub_1AFDE6464(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_1AFFC93D8();
  swift_allocObject();
  uint64_t result = sub_1AFFC9388();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0) {
    return v2 << 32;
  }
LABEL_10:
  __break(1u);
  return result;
}

unsigned char *sub_1AFDE64E8(unsigned char *result, unsigned char *a2)
{
  if (result)
  {
    uint64_t v2 = a2 - result;
    if (a2 == result)
    {
      return 0;
    }
    else if (v2 <= 14)
    {
      return (unsigned char *)sub_1AFEA1E6C(result, a2);
    }
    else if ((unint64_t)v2 >= 0x7FFFFFFF)
    {
      return (unsigned char *)sub_1AFDE63E8((uint64_t)result, (uint64_t)a2);
    }
    else
    {
      return (unsigned char *)sub_1AFDE6464((uint64_t)result, (uint64_t)a2);
    }
  }
  return result;
}

uint64_t sub_1AFDE654C(uint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    if (result <= 14)
    {
      if (result < 0) {
        __break(1u);
      }
      else {
        return 0;
      }
    }
    else
    {
      sub_1AFFC93D8();
      swift_allocObject();
      sub_1AFFC93A8();
      if (v1 >= 0x7FFFFFFF)
      {
        sub_1AFFC9738();
        uint64_t result = swift_allocObject();
        *(void *)(result + 16) = 0;
        *(void *)(result + 24) = v1;
      }
      else
      {
        return v1 << 32;
      }
    }
  }
  return result;
}

void *sub_1AFDE65EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  unint64_t v5 = *(uint64_t **)(v3 + 16);
  uint64_t v7 = *v5;
  uint64_t v6 = v5[1];
  v13[0] = v7;
  v13[1] = v6;
  v12[2] = v13;
  uint64_t result = sub_1AFDE6238((void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1AFDE666C, (uint64_t)v12, a1, a2);
  *a3 = result;
  a3[1] = v9;
  a3[2] = v10;
  a3[3] = v11;
  return result;
}

uint64_t sub_1AFDE6658(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1AFD4B504(a1, a2);
  }
  return a1;
}

uint64_t sub_1AFDE666C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1AFDE635C(a1, a2);
}

uint64_t type metadata accessor for StubPrivateDataPollingService()
{
  return self;
}

uint64_t sub_1AFDE66B0()
{
  return sub_1AFFCA6F8();
}

uint64_t type metadata accessor for YahooSearchService()
{
  return self;
}

uint64_t sub_1AFDE670C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_1AFFC9E18();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = &v22[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v11 = *v3;
  sub_1AFFC9EF8();
  sub_1AFD2CEB0(v11 + 16, (uint64_t)v22);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v8 + 16))(v10, a3, v7);
  uint64_t v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v23);
  double v13 = MEMORY[0x1F4188790](v12);
  uint64_t v15 = (uint64_t *)&v22[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(uint64_t *, double))(v16 + 16))(v15, v13);
  uint64_t v17 = *v15;
  sub_1AFFC8E38();
  id v18 = sub_1AFDE68E0(a1, a2, v17, (uint64_t)v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  uint64_t v19 = sub_1AFFC9EC8();

  return v19;
}

id sub_1AFDE68E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for YahooBaseOperationFactory();
  v25[3] = v8;
  v25[4] = &off_1F0877A08;
  v25[0] = a3;
  uint64_t v9 = (objc_class *)type metadata accessor for YahooSearchOperation();
  uint64_t v10 = (char *)objc_allocWithZone(v9);
  uint64_t v11 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v25, v8);
  double v12 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = (uint64_t *)((char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v15 + 16))(v14, v12);
  uint64_t v16 = *v14;
  v24[3] = v8;
  v24[4] = &off_1F0877A08;
  v24[0] = v16;
  uint64_t v17 = &v10[qword_1E9AFBE58];
  *(void *)uint64_t v17 = a1;
  *((void *)v17 + 1) = a2;
  sub_1AFD2CEB0((uint64_t)v24, (uint64_t)&v10[qword_1E9AFBE60]);
  id v18 = &v10[qword_1E9AFBE68];
  uint64_t v19 = sub_1AFFC9E18();
  uint64_t v20 = *(void *)(v19 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v18, a4, v19);
  v23.receiver = v10;
  v23.super_class = v9;
  id v21 = objc_msgSendSuper2(&v23, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(a4, v19);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  return v21;
}

uint64_t sub_1AFDE6AC8(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  memcpy(v7, v3, 0x10BAuLL);
  *(unsigned char *)(v2 + 16) = 1;
  *(_DWORD *)(v2 + 40) = 0;
  *(unsigned char *)(v2 + 44) = 0;
  *(_DWORD *)(v2 + 48) = 0;
  *(void *)(v2 + 56) = 0;
  *(_DWORD *)(v2 + 64) = 0;
  *(void *)(v2 + 72) = 0;
  *(void *)(v2 + 80) = 0;
  memcpy(v6, v4, sizeof(v6));
  sub_1AFDE7544(0, &qword_1EB819BA0, (uint64_t)&type metadata for AppConfiguration, MEMORY[0x1E4FAAA60]);
  swift_allocObject();
  sub_1AFDB3690((uint64_t)v7);
  *(void *)(v2 + 32) = sub_1AFFCA038();
  memcpy(v6, v7, sizeof(v6));
  sub_1AFDE7544(0, &qword_1EB819B98, (uint64_t)&type metadata for AppConfiguration, MEMORY[0x1E4FAAA48]);
  swift_allocObject();
  *(void *)(v2 + 24) = sub_1AFFC9FC8();
  return v2;
}

uint64_t sub_1AFDE6C10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v29 = a3;
  uint64_t v30 = a1;
  uint64_t v31 = a2;
  uint64_t v7 = sub_1AFFCABC8();
  uint64_t v37 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1AFFCAC18();
  uint64_t v35 = *(void *)(v10 - 8);
  uint64_t v36 = v10;
  MEMORY[0x1F4188790](v10);
  double v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1AFFCAC38();
  uint64_t v34 = v13;
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v28 - v18;
  sub_1AFD67528();
  uint64_t v32 = sub_1AFFCB4B8();
  sub_1AFFCAC28();
  os_unfair_lock_lock((os_unfair_lock_t)(a5 + 48));
  double v20 = *(double *)(a5 + 56);
  os_unfair_lock_unlock((os_unfair_lock_t)(a5 + 48));
  MEMORY[0x1B3E8D0A0](v16, v20);
  uint64_t v33 = *(void (**)(char *, uint64_t))(v14 + 8);
  v33(v16, v13);
  id v21 = (void *)swift_allocObject();
  uint64_t v22 = v29;
  void v21[2] = a5;
  v21[3] = v22;
  uint64_t v23 = v30;
  uint64_t v24 = v31;
  v21[4] = a4;
  v21[5] = v23;
  v21[6] = v24;
  aBlock[4] = sub_1AFDE75D8;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1AFDB5104;
  aBlock[3] = &block_descriptor_8;
  uint64_t v25 = _Block_copy(aBlock);
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  swift_release();
  sub_1AFFCABE8();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1AFDBE628((unint64_t *)&unk_1EB819C20, MEMORY[0x1E4FBCB00]);
  sub_1AFDBE5D0();
  sub_1AFDBE628((unint64_t *)&qword_1EB819DB0, (void (*)(uint64_t))sub_1AFDBE5D0);
  sub_1AFFCB738();
  uint64_t v26 = (void *)v32;
  MEMORY[0x1B3E8D8F0](v19, v12, v9, v25);
  _Block_release(v25);

  (*(void (**)(char *, uint64_t))(v37 + 8))(v9, v7);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v12, v36);
  return ((uint64_t (*)(char *, uint64_t))v33)(v19, v34);
}

void sub_1AFDE701C(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = v5 + 16;
  os_unfair_lock_lock(v5 + 16);
  uint64_t v8 = *(void *)&v6[18]._os_unfair_lock_opaque;
  if (v8)
  {
    uint64_t v9 = *(void *)&v6[20]._os_unfair_lock_opaque;
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v8;
    *(void *)(v10 + 24) = v9;
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = sub_1AFDE76A0;
    *(void *)(v11 + 24) = v10;
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = sub_1AFDE76A0;
    *(void *)(v12 + 24) = v10;
    *(void *)&v6[18]._os_unfair_lock_opaque = sub_1AFDE7958;
    *(void *)&v6[20]._os_unfair_lock_opaque = v12;
    sub_1AFFC8E48();
    os_unfair_lock_unlock(v7);
    (*(void (**)(void))(v11 + 16))();
    sub_1AFD309C0((uint64_t)sub_1AFDE76C8);
  }
  else
  {
    *(void *)&v6[18]._os_unfair_lock_opaque = 0;
    os_unfair_lock_unlock(v7);
  }
  os_unfair_lock_lock(v6 + 10);
  int os_unfair_lock_opaque_low = LOBYTE(v6[11]._os_unfair_lock_opaque);
  os_unfair_lock_unlock(v6 + 10);
  if (os_unfair_lock_opaque_low == 1)
  {
    sub_1AFDE764C();
    uint64_t v14 = (void *)swift_allocError();
    v4();
  }
  else
  {
    sub_1AFFC9FD8();
    memcpy(v17, v16, 0x10BAuLL);
    memcpy(v15, v16, 0x10BAuLL);
    v2(v15);
    sub_1AFD55D10((uint64_t)v17);
  }
}

uint64_t sub_1AFDE7244()
{
  swift_release();
  swift_release();
  sub_1AFDE7728(v0 + 40, &qword_1E9AFADB0, MEMORY[0x1E4FBB390]);
  sub_1AFDE7728(v0 + 48, &qword_1E9AFADB8, MEMORY[0x1E4FBB3D0]);
  sub_1AFDE7798(v0 + 64);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StubAppConfigurationManager()
{
  return self;
}

void sub_1AFDE72E0()
{
  if (MEMORY[0x1E4FBC8F0]) {
    sub_1AFDE7544(0, &qword_1E9AFADB0, MEMORY[0x1E4FBB390], MEMORY[0x1E4FBCDD8]);
  }
}

void sub_1AFDE7340()
{
  if (MEMORY[0x1E4FBC8F0]) {
    sub_1AFDE7544(0, &qword_1E9AFADB8, MEMORY[0x1E4FBB3D0], MEMORY[0x1E4FBCDD8]);
  }
}

void sub_1AFDE73A0()
{
  if (MEMORY[0x1E4FBC8F0]) {
    sub_1AFDE75E8(0, &qword_1E9AFADC0, (uint64_t (*)(uint64_t))sub_1AFDE740C, MEMORY[0x1E4FBCDD8]);
  }
}

void sub_1AFDE740C(uint64_t a1)
{
}

unint64_t sub_1AFDE7440()
{
  unint64_t result = qword_1E9AF8760;
  if (!qword_1E9AF8760)
  {
    unint64_t result = swift_getFunctionTypeMetadata0();
    atomic_store(result, (unint64_t *)&qword_1E9AF8760);
  }
  return result;
}

uint64_t sub_1AFDE7484()
{
  return sub_1AFFC9FD8();
}

uint64_t sub_1AFDE74AC()
{
  return sub_1AFFC8E48();
}

uint64_t sub_1AFDE74B8()
{
  return sub_1AFFC8E48();
}

uint64_t sub_1AFDE74C4()
{
  return sub_1AFFCA758();
}

uint64_t sub_1AFDE753C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AFDE6C10(a1, a2, a3, a4, v4);
}

void sub_1AFDE7544(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1AFDE7590()
{
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

void sub_1AFDE75D8()
{
  sub_1AFDE701C(*(void *)(v0 + 16));
}

void sub_1AFDE75E8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1AFDE764C()
{
  unint64_t result = qword_1E9AFADD0;
  if (!qword_1E9AFADD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFADD0);
  }
  return result;
}

uint64_t sub_1AFDE76A0()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1AFDE76C8()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1AFDE76F0()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1AFDE7728(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  sub_1AFDE7544(0, a2, a3, MEMORY[0x1E4FBCDD8]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1AFDE7798(uint64_t a1)
{
  sub_1AFDE75E8(0, &qword_1E9AFADC0, (uint64_t (*)(uint64_t))sub_1AFDE740C, MEMORY[0x1E4FBCDD8]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for StubAppConfigurationManager.ManagerError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1AFDE78C0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for StubAppConfigurationManager.ManagerError()
{
  return &type metadata for StubAppConfigurationManager.ManagerError;
}

unint64_t sub_1AFDE78FC()
{
  unint64_t result = qword_1E9AFADD8;
  if (!qword_1E9AFADD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFADD8);
  }
  return result;
}

uint64_t dispatch thunk of UserInfoType.userID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of UserInfoType.resetUserID()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of UserInfoType.adsUserID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of UserInfoType.resetAdsUserID()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of UserInfoType.startDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of UserInfoType.saveStartDate(_:overwrite:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of UserInfoType.upsellAppLaunchCount.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of UserInfoType.saveUpsellAppLaunchCount(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of UserInfoType.lastAppLaunchUpsellInstanceID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of UserInfoType.saveLastAppLaunchUpsellInstanceID(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 80))();
}

uint64_t dispatch thunk of UserInfoType.appLaunchUpsellLastSeenDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of UserInfoType.saveAppLaunchUpsellLastSeenDate(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t dispatch thunk of UserInfoType.appReviewRequestLastSeenDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of UserInfoType.saveAppReviewRequestLastSeenDate(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 112))();
}

uint64_t dispatch thunk of UserInfoType.addObserver(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 120))();
}

uint64_t dispatch thunk of UserInfoType.removeObserver(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 128))();
}

uint64_t sub_1AFDE7A9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t sub_1AFDE7AB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

void sub_1AFDE7AC4(void **a1, uint64_t a2)
{
  int v3 = *a1;
  id v4 = (id)sub_1AFFCAE68();
  objc_msgSend(v3, sel_addObserver_forZone_, a2, v4);
}

uint64_t sub_1AFDE7B38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = a3;
  v9[3] = a4;
  v9[4] = sub_1AFD8173C;
  v9[5] = v8;
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFCA4F8();

  return swift_release();
}

void sub_1AFDE7C10(void **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = *a1;
  uint64_t v10 = (void *)sub_1AFFCAE68();
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = a2;
  v11[3] = a3;
  v11[4] = a4;
  v11[5] = a5;
  v13[4] = sub_1AFDEA8E8;
  v13[5] = v11;
  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 1107296256;
  void v13[2] = sub_1AFDE7E00;
  v13[3] = &block_descriptor_9;
  uint64_t v12 = _Block_copy(v13);
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  swift_release();
  objc_msgSend(v9, sel_readContentsOfZone_withBlock_, v10, v12);
  _Block_release(v12);
}

void sub_1AFDE7D34(void *a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, void (*a5)(id))
{
  if (a2)
  {
    a3(a2);
  }
  else
  {
    if (a1)
    {
      uint64_t v7 = (void *)sub_1AFFCAE68();
      id v8 = objc_msgSend(a1, sel_recordWithName_, v7);
    }
    else
    {
      id v8 = 0;
    }
    a5(v8);
  }
}

uint64_t sub_1AFDE7E00(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  sub_1AFFC8E48();
  swift_unknownObjectRetain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();

  return swift_unknownObjectRelease();
}

void sub_1AFDE7E80(void **a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v7 = *a1;
  id v8 = (void *)sub_1AFFCAE68();
  updated = (objc_class *)type metadata accessor for UpdateUserIDCommand();
  uint64_t v10 = objc_allocWithZone(updated);
  uint64_t v11 = &v10[OBJC_IVAR___SCUpdateUserIDCommand_userID];
  *uint64_t v11 = a2;
  v11[1] = a3;
  v10[OBJC_IVAR___SCUpdateUserIDCommand_overwrite] = a4;
  v13.receiver = v10;
  v13.super_class = updated;
  sub_1AFFC8E38();
  id v12 = objc_msgSendSuper2(&v13, sel_init);
  objc_msgSend(v7, sel_modifyContentsOfZone_withCommand_, v8, v12, v13.receiver, v13.super_class);
}

void sub_1AFDE7F50(void **a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v8 = sub_1AFFC98F8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = *a1;
  objc_super v13 = (void *)sub_1AFFCAE68();
  sub_1AFFC8E38();
  sub_1AFFC98B8();
  updated = (objc_class *)type metadata accessor for UpdateAdsUserIDCommand();
  uint64_t v15 = objc_allocWithZone(updated);
  uint64_t v16 = &v15[OBJC_IVAR___SCUpdateAdsUserIDCommand_userID];
  *uint64_t v16 = a2;
  v16[1] = a3;
  (*(void (**)(unsigned char *, char *, uint64_t))(v9 + 16))(&v15[OBJC_IVAR___SCUpdateAdsUserIDCommand_userIDCreatedDate], v11, v8);
  v15[OBJC_IVAR___SCUpdateAdsUserIDCommand_overwrite] = a4;
  v18.receiver = v15;
  v18.super_class = updated;
  id v17 = objc_msgSendSuper2(&v18, sel_init);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  objc_msgSend(v12, sel_modifyContentsOfZone_withCommand_, v13, v17);
}

uint64_t sub_1AFDE80F4()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UserInfo()
{
  return self;
}

uint64_t sub_1AFDE8158(id *a1)
{
  uint64_t v2 = sub_1AFFC9938();
  uint64_t v3 = *(void *)(v2 - 8);
  double v4 = MEMORY[0x1F4188790](v2);
  id v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*a1
    || (id v7 = objc_msgSend(*a1, sel_encryptedValues, v4),
        uint64_t v8 = (void *)sub_1AFFCAE68(),
        id v9 = objc_msgSend(v7, sel_objectForKeyedSubscript_, v8),
        swift_unknownObjectRelease(),
        v8,
        !v9)
    || (v15[1] = v9, sub_1AFD2D178(0, (unint64_t *)&qword_1EB8112A0), (swift_dynamicCast() & 1) == 0))
  {
    sub_1AFFC8978();
    uint64_t v10 = sub_1AFFC9918();
    uint64_t v12 = v11;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = v10;
    *(void *)(v13 + 24) = v12;
    *(unsigned char *)(v13 + 32) = 0;
    sub_1AFFC8E38();
    sub_1AFFCA4F8();
    swift_release();
    v15[2] = v10;
    v15[3] = v12;
  }
  sub_1AFDEAC70(0, &qword_1EB811150, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1AFFCA6F8();
}

uint64_t sub_1AFDE8390(void **a1, uint64_t a2)
{
  uint64_t v52 = sub_1AFFC9938();
  uint64_t v5 = *(void *)(v52 - 8);
  MEMORY[0x1F4188790](v52);
  id v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFD2C83C();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1AFFC98F8();
  uint64_t v48 = *(void *)(v11 - 8);
  uint64_t v49 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v46 = (char *)&v43 - v15;
  double v17 = MEMORY[0x1F4188790](v16);
  uint64_t v47 = (char *)&v43 - v18;
  uint64_t v19 = *a1;
  if (!v19) {
    goto LABEL_13;
  }
  id v20 = objc_msgSend(v19, sel_encryptedValues, v17);
  uint64_t v51 = v2;
  id v21 = v20;
  uint64_t v22 = sub_1AFFCAE68();
  uint64_t v50 = a2;
  uint64_t v23 = (void *)v22;
  id v24 = objc_msgSend(v21, sel_objectForKeyedSubscript_, v22);
  swift_unknownObjectRelease();

  if (!v24) {
    goto LABEL_13;
  }
  id v55 = v24;
  sub_1AFD2D178(0, (unint64_t *)&qword_1EB8112A0);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_13;
  }
  uint64_t v44 = v53;
  uint64_t v45 = v54;
  id v25 = objc_msgSend(v19, sel_encryptedValues);
  uint64_t v26 = (void *)sub_1AFFCAE68();
  id v27 = objc_msgSend(v25, sel_objectForKeyedSubscript_, v26);
  swift_unknownObjectRelease();

  if (!v27)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v48 + 56))(v10, 1, 1, v49);
    goto LABEL_12;
  }
  uint64_t v53 = (uint64_t)v27;
  uint64_t v28 = v49;
  int v29 = swift_dynamicCast();
  uint64_t v30 = v48;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v10, v29 ^ 1u, 1, v28);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v10, 1, v28) == 1)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    sub_1AFD3BE10((uint64_t)v10);
LABEL_13:
    sub_1AFFC8978();
    uint64_t v34 = sub_1AFFC9918();
    uint64_t v36 = v35;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v52);
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = v34;
    *(void *)(v37 + 24) = v36;
    *(unsigned char *)(v37 + 32) = 0;
    sub_1AFFC8E38();
    sub_1AFFCA4F8();
    swift_release();
    uint64_t v53 = v34;
    uint64_t v54 = v36;
    sub_1AFDEAC70(0, &qword_1EB811150, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return sub_1AFFCA6F8();
  }
  (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v47, v10, v28);
  sub_1AFFC9C48();
  sub_1AFFC9C28();
  if (qword_1EB810A68 != -1) {
    swift_once();
  }
  sub_1AFFC9C18();
  swift_release();
  sub_1AFFC9828();
  sub_1AFFC98B8();
  char v31 = sub_1AFFC9848();
  uint64_t v32 = *(void (**)(char *, uint64_t))(v30 + 8);
  v32(v13, v28);
  if (v31)
  {
    uint64_t v53 = v44;
    uint64_t v54 = v45;
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1AFFC8978();
    uint64_t v39 = sub_1AFFC9918();
    uint64_t v41 = v40;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v52);
    uint64_t v42 = swift_allocObject();
    *(void *)(v42 + 16) = v39;
    *(void *)(v42 + 24) = v41;
    *(unsigned char *)(v42 + 32) = 1;
    sub_1AFFC8E38();
    sub_1AFFCA4F8();
    swift_release();
    uint64_t v53 = v39;
    uint64_t v54 = v41;
  }
  sub_1AFDEAC70(0, &qword_1EB811150, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FAB088]);
  swift_allocObject();
  uint64_t v33 = sub_1AFFCA6F8();
  v32(v46, v28);
  v32(v47, v28);
  return v33;
}

uint64_t sub_1AFDE8A74(id *a1)
{
  return sub_1AFDE90F8(a1);
}

void sub_1AFDE8AA4(void **a1, uint64_t a2, char a3)
{
  uint64_t v6 = sub_1AFFC98F8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *a1;
  uint64_t v11 = (void *)sub_1AFFCAE68();
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v12(v9, a2, v6);
  updated = (objc_class *)type metadata accessor for UpdateUserStartDateCommand();
  uint64_t v14 = objc_allocWithZone(updated);
  v12(&v14[OBJC_IVAR___SCUpdateUserStartDateCommand_startDate], (uint64_t)v9, v6);
  v14[OBJC_IVAR___SCUpdateUserStartDateCommand_mergePolicy] = a3;
  v16.receiver = v14;
  v16.super_class = updated;
  id v15 = objc_msgSendSuper2(&v16, sel_init);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  objc_msgSend(v10, sel_modifyContentsOfZone_withCommand_, v11, v15);
}

uint64_t sub_1AFDE8C3C(void **a1)
{
  uint64_t v1 = *a1;
  if (v1)
  {
    id v2 = objc_msgSend(v1, sel_valuesByKey);
    uint64_t v3 = (void *)sub_1AFFCAE68();
    id v4 = objc_msgSend(v2, sel_objectForKeyedSubscript_, v3);
    swift_unknownObjectRelease();

    if (v4)
    {
      sub_1AFD2D178(0, (unint64_t *)&qword_1EB8112A0);
      swift_dynamicCast();
    }
  }
  sub_1AFDEAA64(0, &qword_1EB811198, &qword_1EB811360, MEMORY[0x1E4FBC1C8]);
  swift_allocObject();
  return sub_1AFFCA6F8();
}

void sub_1AFDE8D74(void **a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  id v4 = (void *)sub_1AFFCAE68();
  updated = (objc_class *)type metadata accessor for UpdateUpsellAppLaunchCountCommand();
  uint64_t v6 = (char *)objc_allocWithZone(updated);
  *(void *)&v6[OBJC_IVAR___SCUpdateUpsellAppLaunchCountCommand_upsellAppLaunchCount] = a2;
  v8.receiver = v6;
  v8.super_class = updated;
  id v7 = objc_msgSendSuper2(&v8, sel_init);
  objc_msgSend(v3, sel_modifyContentsOfZone_withCommand_, v4, v7);
}

uint64_t sub_1AFDE8E18(void **a1)
{
  uint64_t v1 = *a1;
  if (v1)
  {
    id v2 = objc_msgSend(v1, sel_valuesByKey);
    uint64_t v3 = (void *)sub_1AFFCAE68();
    id v4 = objc_msgSend(v2, sel_objectForKeyedSubscript_, v3);
    swift_unknownObjectRelease();

    if (v4)
    {
      sub_1AFD2D178(0, (unint64_t *)&qword_1EB8112A0);
      swift_dynamicCast();
    }
  }
  sub_1AFDEAA64(0, (unint64_t *)&unk_1EB811158, (unint64_t *)&qword_1EB819C90, MEMORY[0x1E4FBB1A0]);
  swift_allocObject();
  return sub_1AFFCA6F8();
}

void sub_1AFDE8F4C(void **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *a1;
  uint64_t v6 = (void *)sub_1AFFCAE68();
  updated = (objc_class *)type metadata accessor for UpdateLastAppLaunchUpsellInstanceIDCommand();
  objc_super v8 = (char *)objc_allocWithZone(updated);
  uint64_t v9 = &v8[OBJC_IVAR___SCUpdateLastAppLaunchUpsellInstanceIDCommand_lastAppLaunchUpsellInstanceID];
  *(void *)uint64_t v9 = a2;
  *((void *)v9 + 1) = a3;
  v11.receiver = v8;
  v11.super_class = updated;
  sub_1AFFC8E38();
  id v10 = objc_msgSendSuper2(&v11, sel_init);
  objc_msgSend(v5, sel_modifyContentsOfZone_withCommand_, v6, v10, v11.receiver, v11.super_class);
}

uint64_t sub_1AFDE900C(id *a1)
{
  return sub_1AFDE90F8(a1);
}

uint64_t sub_1AFDE903C()
{
  return sub_1AFFCA758();
}

uint64_t sub_1AFDE90C8(id *a1)
{
  return sub_1AFDE90F8(a1);
}

uint64_t sub_1AFDE90F8(id *a1)
{
  sub_1AFD2C83C();
  MEMORY[0x1F4188790](v2 - 8);
  id v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v6 = MEMORY[0x1F4188790](v5);
  objc_super v8 = (char *)v17 - v7;
  if (*a1
    && (id v9 = objc_msgSend(*a1, sel_encryptedValues, v6),
        id v10 = (void *)sub_1AFFCAE68(),
        id v11 = objc_msgSend(v9, sel_objectForKeyedSubscript_, v10),
        swift_unknownObjectRelease(),
        v10,
        v11))
  {
    v17[1] = v11;
    sub_1AFD2D178(0, (unint64_t *)&qword_1EB8112A0);
    uint64_t v12 = sub_1AFFC98F8();
    int v13 = swift_dynamicCast();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, v13 ^ 1u, 1, v12);
  }
  else
  {
    uint64_t v14 = sub_1AFFC98F8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v8, 1, 1, v14);
  }
  sub_1AFD3C27C((uint64_t)v8, (uint64_t)v4);
  sub_1AFDEA830(0, &qword_1EB811128, (uint64_t (*)(uint64_t))sub_1AFD2C83C, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  uint64_t v15 = sub_1AFFCA6F8();
  sub_1AFD3BE10((uint64_t)v8);
  return v15;
}

void sub_1AFDE9328(void **a1, uint64_t a2, uint64_t (*a3)(void), void *a4)
{
  uint64_t v8 = sub_1AFFC98F8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  id v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *a1;
  int v13 = (void *)sub_1AFFCAE68();
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v14(v11, a2, v8);
  uint64_t v15 = (objc_class *)a3(0);
  objc_super v16 = (char *)objc_allocWithZone(v15);
  v14(&v16[*a4], (uint64_t)v11, v8);
  v18.receiver = v16;
  v18.super_class = v15;
  id v17 = objc_msgSendSuper2(&v18, sel_init);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  objc_msgSend(v12, sel_modifyContentsOfZone_withCommand_, v13, v17);
}

uint64_t sub_1AFDE94B8(uint64_t a1, uint64_t a2)
{
  id v4 = (void *)(v2 + 24);
  swift_beginAccess();
  unint64_t v5 = *(void *)(v2 + 24);
  uint64_t v14 = MEMORY[0x1E4FBC860];
  if (v5 >> 62)
  {
    sub_1AFFC8E38();
    uint64_t result = sub_1AFFCB9C8();
    uint64_t v6 = result;
    if (result) {
      goto LABEL_3;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    uint64_t v11 = MEMORY[0x1E4FBC860];
    goto LABEL_15;
  }
  uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = sub_1AFFC8E38();
  if (!v6) {
    goto LABEL_14;
  }
LABEL_3:
  if (v6 < 1)
  {
    __break(1u);
    return result;
  }
  for (uint64_t i = 0; i != v6; ++i)
  {
    if ((v5 & 0xC000000000000001) != 0)
    {
      uint64_t v9 = MEMORY[0x1B3E8DC70](i, v5);
    }
    else
    {
      uint64_t v9 = *(void *)(v5 + 8 * i + 32);
      sub_1AFFC8E48();
    }
    uint64_t v10 = MEMORY[0x1B3E8F200](v9 + 16);
    swift_unknownObjectRelease();
    if (v10)
    {
      sub_1AFFCB888();
      sub_1AFFCB8C8();
      sub_1AFFCB8D8();
      sub_1AFFCB898();
    }
    else
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v11 = v14;
LABEL_15:
  *id v4 = v11;
  swift_bridgeObjectRelease();
  type metadata accessor for ObserverProxy();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v12 + 24) = a2;
  swift_unknownObjectWeakAssign();
  uint64_t v13 = swift_beginAccess();
  MEMORY[0x1B3E8D5F0](v13);
  if (*(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1AFFCB228();
  }
  sub_1AFFCB278();
  sub_1AFFCB1E8();
  return swift_endAccess();
}

uint64_t sub_1AFDE96D4()
{
  return sub_1AFDE974C();
}

uint64_t sub_1AFDE9700()
{
  return sub_1AFDE97F8();
}

uint64_t sub_1AFDE9720()
{
  return sub_1AFDE974C();
}

uint64_t sub_1AFDE974C()
{
  sub_1AFDEA7C8();
  sub_1AFFCA7C8();
  sub_1AFFC8E48();
  uint64_t v0 = (void *)sub_1AFFCA5E8();
  uint64_t v1 = sub_1AFFCA668();
  swift_release();
  swift_release();

  return v1;
}

uint64_t sub_1AFDE97D8()
{
  return sub_1AFDE97F8();
}

uint64_t sub_1AFDE97F8()
{
  uint64_t v0 = sub_1AFFC9938();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFFC8978();
  uint64_t v4 = sub_1AFFC9918();
  uint64_t v6 = v5;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v4;
  *(void *)(v7 + 24) = v6;
  *(unsigned char *)(v7 + 32) = 1;
  sub_1AFFC8E38();
  sub_1AFFCA4F8();
  swift_release();
  return v4;
}

uint64_t sub_1AFDE9934()
{
  return sub_1AFDE9D50();
}

uint64_t sub_1AFDE9960(uint64_t a1, char a2)
{
  uint64_t v4 = sub_1AFFC98F8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  double v7 = MEMORY[0x1F4188790](v4);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))((char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4, v7);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  *(unsigned char *)(v9 + v8 + v6) = a2;
  sub_1AFFCA4F8();
  return swift_release();
}

uint64_t sub_1AFDE9AAC(uint64_t a1, uint64_t a2)
{
  return sub_1AFDE9AE8(a1, a2, (uint64_t)sub_1AFDEA798, &qword_1EB811360, MEMORY[0x1E4FBC1C8]);
}

uint64_t sub_1AFDE9AE8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5)
{
  sub_1AFDEA7C8();
  sub_1AFFCA7C8();
  double v7 = (void *)sub_1AFFCA5E8();
  sub_1AFDEAC70(0, a4, a5, MEMORY[0x1E4FBB718]);
  uint64_t v8 = sub_1AFFCA668();
  swift_release();

  return v8;
}

uint64_t sub_1AFDE9B98(uint64_t a1)
{
  *(void *)(swift_allocObject() + 16) = a1;
  sub_1AFFCA4F8();

  return swift_release();
}

uint64_t sub_1AFDE9C14(uint64_t a1, uint64_t a2)
{
  return sub_1AFDE9AE8(a1, a2, (uint64_t)sub_1AFDEA798, (unint64_t *)&qword_1EB819C90, MEMORY[0x1E4FBB1A0]);
}

uint64_t sub_1AFDE9C50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  sub_1AFFC8E38();
  sub_1AFFCA4F8();

  return swift_release();
}

uint64_t sub_1AFDE9CD8()
{
  return sub_1AFDE9D50();
}

uint64_t sub_1AFDE9D04(uint64_t a1)
{
  return sub_1AFDE9DF4(a1);
}

uint64_t sub_1AFDE9D24()
{
  return sub_1AFDE9D50();
}

uint64_t sub_1AFDE9D50()
{
  sub_1AFDEA7C8();
  sub_1AFFCA7C8();
  uint64_t v0 = (void *)sub_1AFFCA5E8();
  sub_1AFD2C83C();
  uint64_t v1 = sub_1AFFCA668();
  swift_release();

  return v1;
}

uint64_t sub_1AFDE9DD4(uint64_t a1)
{
  return sub_1AFDE9DF4(a1);
}

uint64_t sub_1AFDE9DF4(uint64_t a1)
{
  uint64_t v2 = sub_1AFFC98F8();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  double v5 = MEMORY[0x1F4188790](v2);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16))((char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2, v5);
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v7 + v6, (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  sub_1AFFCA4F8();
  return swift_release();
}

uint64_t sub_1AFDE9F28(uint64_t a1, uint64_t a2)
{
  return sub_1AFDE94B8(a1, a2);
}

uint64_t sub_1AFDE9F4C(uint64_t a1)
{
  uint64_t v3 = *v1;
  swift_beginAccess();
  swift_unknownObjectRetain();
  unint64_t v4 = sub_1AFFC8E38();
  uint64_t v5 = sub_1AFDA5E54(v4, a1);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  *(void *)(v3 + 24) = v5;
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for ObserverProxy()
{
  return self;
}

uint64_t sub_1AFDEA090(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  uint64_t v8 = __swift_project_boxed_opaque_existential_1(a1, v6);

  return sub_1AFDEA250((uint64_t)v8, a2, a3, v3, v6, v7);
}

uint64_t sub_1AFDEA0F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = MEMORY[0x1B3E8F200](v3 + 16);
  if (result)
  {
    uint64_t v8 = *(void *)(v3 + 24);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 16))(a1, a2, a3, ObjectType, v8);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for UserInfoMergeHandler()
{
  return self;
}

uint64_t sub_1AFDEA250(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v15[3] = a5;
  void v15[4] = a6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v15);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 16))(boxed_opaque_existential_1, a1, a5);
  if (MEMORY[0x1B3E8F200](a4 + 16))
  {
    uint64_t v12 = *(void *)(a4 + 24);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 8))(v15, a2, a3, ObjectType, v12);
    swift_unknownObjectRelease();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
}

id sub_1AFDEA328()
{
  sub_1AFDEAC70(0, (unint64_t *)&qword_1EB8183E0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1AFFD2CD0;
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1AFFD6D90;
  sub_1AFD8F6AC(0, &qword_1EB8181B8);
  id v2 = objc_allocWithZone((Class)SCWRecordFieldSchema);
  uint64_t v3 = (void *)sub_1AFFCAE68();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v5 = objc_msgSend(v2, sel_initWithName_valueClass_required_encrypted_, v3, ObjCClassFromMetadata, 0, 1);

  *(void *)(v1 + 32) = v5;
  sub_1AFD8F6AC(0, (unint64_t *)&unk_1EB818180);
  id v6 = objc_allocWithZone((Class)SCWRecordFieldSchema);
  uint64_t v7 = (void *)sub_1AFFCAE68();
  uint64_t v8 = swift_getObjCClassFromMetadata();
  id v9 = objc_msgSend(v6, sel_initWithName_valueClass_required_encrypted_, v7, v8, 0, 1);

  *(void *)(v1 + 40) = v9;
  sub_1AFD8F6AC(0, (unint64_t *)&qword_1EB819E90);
  id v10 = objc_allocWithZone((Class)SCWRecordFieldSchema);
  uint64_t v11 = (void *)sub_1AFFCAE68();
  id v12 = objc_msgSend(v10, sel_initWithName_valueClass_required_encrypted_, v11, swift_getObjCClassFromMetadata(), 0, 0);

  *(void *)(v1 + 48) = v12;
  id v13 = objc_allocWithZone((Class)SCWRecordFieldSchema);
  uint64_t v14 = (void *)sub_1AFFCAE68();
  id v15 = objc_msgSend(v13, sel_initWithName_valueClass_required_encrypted_, v14, ObjCClassFromMetadata, 0, 0);

  *(void *)(v1 + 56) = v15;
  id v16 = objc_allocWithZone((Class)SCWRecordFieldSchema);
  id v17 = (void *)sub_1AFFCAE68();
  id v18 = objc_msgSend(v16, sel_initWithName_valueClass_required_encrypted_, v17, v8, 0, 1);

  *(void *)(v1 + 64) = v18;
  id v19 = objc_allocWithZone((Class)SCWRecordFieldSchema);
  id v20 = (void *)sub_1AFFCAE68();
  id v21 = objc_msgSend(v19, sel_initWithName_valueClass_required_encrypted_, v20, v8, 0, 1);

  *(void *)(v1 + 72) = v21;
  sub_1AFFCB1E8();
  id v22 = objc_allocWithZone((Class)SCWRecordSchema);
  uint64_t v23 = (void *)sub_1AFFCAE68();
  sub_1AFD8F6AC(0, (unint64_t *)&unk_1EB818130);
  id v24 = (void *)sub_1AFFCB1B8();
  swift_bridgeObjectRelease();
  id v25 = objc_msgSend(v22, sel_initWithRecordType_fieldSchemas_, v23, v24);

  *(void *)(v0 + 32) = v25;
  sub_1AFFCB1E8();
  id v26 = objc_allocWithZone((Class)SCWZoneSchema);
  id v27 = (void *)sub_1AFFCAE68();
  sub_1AFD8F6AC(0, &qword_1EB8180A8);
  uint64_t v28 = (void *)sub_1AFFCB1B8();
  swift_bridgeObjectRelease();
  id v29 = objc_msgSend(v26, sel_initWithName_atomic_recordSchemas_, v27, 1, v28);

  return v29;
}

void sub_1AFDEA778(void **a1)
{
}

uint64_t sub_1AFDEA798()
{
  return sub_1AFDE903C();
}

void sub_1AFDEA7C8()
{
  if (!qword_1EB8112B0)
  {
    sub_1AFD8F6AC(255, (unint64_t *)&qword_1EB818190);
    unint64_t v0 = sub_1AFFCB658();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8112B0);
    }
  }
}

void sub_1AFDEA830(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1AFDEA894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AFDE7B38(a1, a2, a3, a4);
}

uint64_t sub_1AFDEA89C()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1AFDEA8D8(void **a1)
{
  sub_1AFDE7C10(a1, v1[2], v1[3], v1[4], v1[5]);
}

void sub_1AFDEA8E8(void *a1, uint64_t a2)
{
  sub_1AFDE7D34(a1, a2, *(void (**)(uint64_t))(v2 + 16), *(void *)(v2 + 24), *(void (**)(id))(v2 + 32));
}

uint64_t objectdestroyTm()
{
  uint64_t v1 = sub_1AFFC98F8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x1F4186498](v0, v5, v6);
}

void sub_1AFDEA988(void **a1)
{
}

void sub_1AFDEA9A8(void **a1, uint64_t (*a2)(void), void *a3)
{
  uint64_t v7 = *(void *)(sub_1AFFC98F8() - 8);
  sub_1AFDE9328(a1, v3 + ((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), a2, a3);
}

uint64_t sub_1AFDEAA24()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1AFDEAA5C(void **a1)
{
  sub_1AFDE8F4C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_1AFDEAA64(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  if (!*a2)
  {
    sub_1AFDEAC70(255, a3, a4, MEMORY[0x1E4FBB718]);
    unint64_t v5 = sub_1AFFCA788();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1AFDEAAD0()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1AFDEAAE0(void **a1)
{
  sub_1AFDE8D74(a1, *(void *)(v1 + 16));
}

uint64_t sub_1AFDEAAE8()
{
  uint64_t v1 = sub_1AFFC98F8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  uint64_t v6 = *(void *)(v2 + 64) + v4 + 1;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x1F4186498](v0, v6, v5);
}

void sub_1AFDEAB7C(void **a1)
{
  uint64_t v3 = *(void *)(sub_1AFFC98F8() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  char v5 = *(unsigned char *)(v1 + v4 + *(void *)(v3 + 64));

  sub_1AFDE8AA4(a1, v1 + v4, v5);
}

uint64_t sub_1AFDEAC10()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 33, 7);
}

void sub_1AFDEAC48(void **a1)
{
  sub_1AFDE7F50(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32));
}

uint64_t sub_1AFDEAC54(void **a1)
{
  return sub_1AFDE8390(a1, v1);
}

void sub_1AFDEAC70(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1AFDEACBC(void **a1)
{
  sub_1AFDE7E80(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32));
}

uint64_t sub_1AFDEACC8(id *a1)
{
  return sub_1AFDE8158(a1);
}

void sub_1AFDEACE4(uint64_t a1, unint64_t a2)
{
  if (a2)
  {
    sub_1AFFC8E38();
    unint64_t v4 = (void *)sub_1AFFCAE68();
    unint64_t v5 = (void *)sub_1AFFCAE68();
    id v6 = objc_msgSend(v4, sel_fc_numberFollowingString_, v5);

    if (v6)
    {
      swift_bridgeObjectRelease();
      objc_msgSend(v6, sel_integerValue);

      return;
    }
    uint64_t v7 = HIBYTE(a2) & 0xF;
    uint64_t v8 = a1 & 0xFFFFFFFFFFFFLL;
    if ((a2 & 0x2000000000000000) != 0) {
      uint64_t v9 = HIBYTE(a2) & 0xF;
    }
    else {
      uint64_t v9 = a1 & 0xFFFFFFFFFFFFLL;
    }
    if (v9)
    {
      if ((a2 & 0x1000000000000000) != 0)
      {
        sub_1AFE6FE7C(a1, a2, 10);
LABEL_47:
        swift_bridgeObjectRelease();
        return;
      }
      if ((a2 & 0x2000000000000000) == 0)
      {
        if ((a1 & 0x1000000000000000) != 0) {
          id v10 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
        }
        else {
          id v10 = (unsigned __int8 *)sub_1AFFCB878();
        }
        sub_1AFE6FE64(v10, v8, 10);
        goto LABEL_47;
      }
      v26[0] = a1;
      v26[1] = a2 & 0xFFFFFFFFFFFFFFLL;
      if (a1 == 43)
      {
        if (v7)
        {
          if (v7 != 1 && (BYTE1(a1) - 48) <= 9u && v7 != 2 && (BYTE2(a1) - 48) <= 9u)
          {
            uint64_t v11 = 10 * (BYTE1(a1) - 48) + (BYTE2(a1) - 48);
            uint64_t v12 = v7 - 3;
            if (v12)
            {
              id v13 = (unsigned __int8 *)v26 + 3;
              do
              {
                unsigned int v14 = *v13 - 48;
                if (v14 > 9) {
                  break;
                }
                uint64_t v15 = 10 * v11;
                if ((unsigned __int128)(v11 * (__int128)10) >> 64 != (10 * v11) >> 63) {
                  break;
                }
                uint64_t v11 = v15 + v14;
                if (__OFADD__(v15, v14)) {
                  break;
                }
                ++v13;
                --v12;
              }
              while (v12);
            }
          }
          goto LABEL_47;
        }
      }
      else
      {
        if (a1 != 45)
        {
          if (v7)
          {
            if ((a1 - 48) <= 9u && v7 != 1 && (BYTE1(a1) - 48) <= 9u)
            {
              uint64_t v16 = 10 * (a1 - 48) + (BYTE1(a1) - 48);
              uint64_t v17 = v7 - 2;
              if (v17)
              {
                id v18 = (unsigned __int8 *)v26 + 2;
                do
                {
                  unsigned int v19 = *v18 - 48;
                  if (v19 > 9) {
                    break;
                  }
                  uint64_t v20 = 10 * v16;
                  if ((unsigned __int128)(v16 * (__int128)10) >> 64 != (10 * v16) >> 63) {
                    break;
                  }
                  uint64_t v16 = v20 + v19;
                  if (__OFADD__(v20, v19)) {
                    break;
                  }
                  ++v18;
                  --v17;
                }
                while (v17);
              }
            }
          }
          goto LABEL_47;
        }
        if (v7)
        {
          if (v7 != 1 && (BYTE1(a1) - 48) <= 9u && v7 != 2 && (BYTE2(a1) - 48) <= 9u)
          {
            uint64_t v21 = -10 * (BYTE1(a1) - 48) - (BYTE2(a1) - 48);
            uint64_t v22 = v7 - 3;
            if (v22)
            {
              uint64_t v23 = (unsigned __int8 *)v26 + 3;
              do
              {
                unsigned int v24 = *v23 - 48;
                if (v24 > 9) {
                  break;
                }
                uint64_t v25 = 10 * v21;
                if ((unsigned __int128)(v21 * (__int128)10) >> 64 != (10 * v21) >> 63) {
                  break;
                }
                uint64_t v21 = v25 - v24;
                if (__OFSUB__(v25, v24)) {
                  break;
                }
                ++v23;
                --v22;
              }
              while (v22);
            }
          }
          goto LABEL_47;
        }
        __break(1u);
      }
      __break(1u);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
}

void sub_1AFDEB054(void *a1, void *a2, void *a3)
{
  uint64_t v4 = (uint64_t)v3;
  uint64_t v71 = *v3;
  uint64_t v8 = (void *)sub_1AFFCAE68();
  uint64_t v9 = &selRef_precedingSymbol;
  id v70 = a2;
  id v10 = objc_msgSend(a2, sel_recordWithName_, v8);

  if (v10
    && (id v11 = objc_msgSend(v10, sel_encryptedValues),
        v10,
        uint64_t v12 = (void *)sub_1AFFCAE68(),
        id v13 = objc_msgSend(v11, sel_objectForKeyedSubscript_, v12),
        swift_unknownObjectRelease(),
        v12,
        v13))
  {
    id v76 = v13;
    sub_1AFD2D178(0, (unint64_t *)&qword_1EB8112A0);
    int v14 = swift_dynamicCast();
    if (v14) {
      uint64_t v15 = v72;
    }
    else {
      uint64_t v15 = 0;
    }
    if (v14) {
      unint64_t v16 = v73;
    }
    else {
      unint64_t v16 = 0;
    }
  }
  else
  {
    uint64_t v15 = 0;
    unint64_t v16 = 0;
  }
  uint64_t v17 = (void *)sub_1AFFCAE68();
  id v18 = objc_msgSend(a3, sel_recordWithName_, v17);

  if (!v18) {
    goto LABEL_17;
  }
  id v19 = objc_msgSend(v18, sel_encryptedValues);

  uint64_t v20 = (void *)sub_1AFFCAE68();
  id v21 = objc_msgSend(v19, sel_objectForKeyedSubscript_, v20);
  swift_unknownObjectRelease();

  uint64_t v9 = &selRef_precedingSymbol;
  if (!v21 || (id v76 = v21, sub_1AFD2D178(0, (unint64_t *)&qword_1EB8112A0), (swift_dynamicCast() & 1) == 0))
  {
LABEL_17:
    if (!v16) {
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  uint64_t v22 = v72;
  if (v16)
  {
    if (v72 == v15 && v16 == v73)
    {
      swift_bridgeObjectRelease();
LABEL_18:
      swift_bridgeObjectRelease();
      goto LABEL_19;
    }
    char v50 = sub_1AFFCBCE8();
    swift_bridgeObjectRelease();
    uint64_t v22 = v72;
    if (v50) {
      goto LABEL_18;
    }
  }
  uint64_t v67 = a1;
  uint64_t v68 = v22;
  swift_beginAccess();
  unint64_t v51 = *(void *)(v4 + 24);
  if (v51 >> 62)
  {
    sub_1AFFC8E38();
    uint64_t v52 = sub_1AFFCB9C8();
    if (v52) {
      goto LABEL_59;
    }
LABEL_72:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a1 = v67;
    goto LABEL_19;
  }
  uint64_t v52 = *(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10);
  sub_1AFFC8E38();
  if (!v52) {
    goto LABEL_72;
  }
LABEL_59:
  unint64_t v69 = v73;
  long long v66 = a3;
  if (v52 < 1)
  {
    __break(1u);
    return;
  }
  uint64_t v53 = 0;
  do
  {
    if ((v51 & 0xC000000000000001) != 0)
    {
      uint64_t v54 = MEMORY[0x1B3E8DC70](v53, v51);
    }
    else
    {
      uint64_t v54 = *(void *)(v51 + 8 * v53 + 32);
      sub_1AFFC8E48();
    }
    uint64_t v74 = v71;
    v75 = &off_1F0879608;
    uint64_t v72 = v4;
    if (MEMORY[0x1B3E8F200](v54 + 16))
    {
      uint64_t v55 = *(void *)(v54 + 24);
      uint64_t v56 = v52;
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v58 = *(void (**)(uint64_t *, uint64_t, unint64_t, uint64_t, uint64_t))(v55 + 8);
      swift_retain_n();
      uint64_t v59 = ObjectType;
      uint64_t v52 = v56;
      uint64_t v60 = v55;
      uint64_t v9 = &selRef_precedingSymbol;
      v58(&v72, v68, v69, v59, v60);
      swift_unknownObjectRelease();
    }
    else
    {
      swift_retain_n();
    }
    ++v53;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v72);
    swift_release();
    swift_release();
  }
  while (v52 != v53);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a3 = v66;
  a1 = v67;
LABEL_19:
  uint64_t v23 = (void *)sub_1AFFCAE68();
  id v24 = objc_msgSend(v70, v9[19], v23);

  if (v24 && (uint64_t v25 = sub_1AFFCB5D8(), v24, v25))
  {
    uint64_t v77 = v25;
    sub_1AFD2D178(0, (unint64_t *)&qword_1EB8112A0);
    int v26 = swift_dynamicCast();
    if (v26) {
      uint64_t v27 = v72;
    }
    else {
      uint64_t v27 = 0;
    }
    if (v26) {
      unint64_t v28 = v73;
    }
    else {
      unint64_t v28 = 0;
    }
  }
  else
  {
    uint64_t v27 = 0;
    unint64_t v28 = 0;
  }
  id v29 = (void *)sub_1AFFCAE68();
  id v30 = objc_msgSend(a3, v9[19], v29);

  if (v30 && (uint64_t v31 = sub_1AFFCB5D8(), v30, v31))
  {
    uint64_t v77 = v31;
    sub_1AFD2D178(0, (unint64_t *)&qword_1EB8112A0);
    int v32 = swift_dynamicCast();
    if (v32) {
      uint64_t v33 = v72;
    }
    else {
      uint64_t v33 = 0;
    }
    if (v32) {
      unint64_t v34 = v73;
    }
    else {
      unint64_t v34 = 0;
    }
    if (!v28) {
      goto LABEL_49;
    }
  }
  else
  {
    uint64_t v33 = 0;
    unint64_t v34 = 0;
    if (!v28)
    {
LABEL_49:
      swift_bridgeObjectRelease();
      return;
    }
  }
  if (!v34) {
    goto LABEL_49;
  }
  uint64_t v35 = HIBYTE(v34) & 0xF;
  if ((v34 & 0x2000000000000000) == 0) {
    uint64_t v35 = v33 & 0xFFFFFFFFFFFFLL;
  }
  if (!v35)
  {
LABEL_48:
    swift_bridgeObjectRelease();
    goto LABEL_49;
  }
  sub_1AFFC8E38();
  sub_1AFDEACE4(v27, v28);
  int64_t v37 = v36;
  char v39 = v38;
  swift_bridgeObjectRelease();
  if (v39) {
    int64_t v40 = 0x8000000000000000;
  }
  else {
    int64_t v40 = v37;
  }
  sub_1AFFC8E38();
  sub_1AFDEACE4(v33, v34);
  int64_t v42 = v41;
  char v44 = v43;
  swift_bridgeObjectRelease();
  if (v44)
  {
    if (v40 == 0x8000000000000000) {
      goto LABEL_48;
    }
  }
  else if (v42 >= v40)
  {
    goto LABEL_48;
  }
  if (qword_1E9AF8C08 != -1) {
    swift_once();
  }
  uint64_t v45 = sub_1AFFCA8A8();
  __swift_project_value_buffer(v45, (uint64_t)qword_1E9AF9D30);
  swift_bridgeObjectRetain_n();
  sub_1AFFC8E38();
  uint64_t v46 = sub_1AFFCA888();
  os_log_type_t v47 = sub_1AFFCB478();
  if (os_log_type_enabled(v46, v47))
  {
    uint64_t v48 = swift_slowAlloc();
    uint64_t v49 = swift_slowAlloc();
    uint64_t v72 = v49;
    *(_DWORD *)uint64_t v48 = 136315394;
    sub_1AFFC8E38();
    uint64_t v77 = sub_1AFD36BA8(v33, v34, &v72);
    sub_1AFFCB688();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v48 + 12) = 2080;
    sub_1AFFC8E38();
    uint64_t v77 = sub_1AFD36BA8(v27, v28, &v72);
    sub_1AFFCB688();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AFD01000, v46, v47, "Received an invalid lastAppLaunchUpsellInstanceID [%s], restoring record back to [%s]", (uint8_t *)v48, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v49, -1, -1);
    MEMORY[0x1B3E8F0D0](v48, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v61 = (void *)sub_1AFFCAE68();
  updated = (objc_class *)type metadata accessor for UpdateLastAppLaunchUpsellInstanceIDCommand();
  uint64_t v63 = (char *)objc_allocWithZone(updated);
  uint64_t v64 = (uint64_t *)&v63[OBJC_IVAR___SCUpdateLastAppLaunchUpsellInstanceIDCommand_lastAppLaunchUpsellInstanceID];
  *uint64_t v64 = v27;
  v64[1] = v28;
  v78.receiver = v63;
  v78.super_class = updated;
  id v65 = objc_msgSendSuper2(&v78, sel_init);
  objc_msgSend(a1, sel_modifyContentsOfZone_withCommand_, v61, v65);
}

uint64_t sub_1AFDEB8E8(void *a1)
{
  sub_1AFD2C83C();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v101 = (char *)&v97 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v100 = (char *)&v97 - v5;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v97 - v7;
  uint64_t v9 = sub_1AFFC98F8();
  v103 = *(void (***)(uint64_t, char *, uint64_t))(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v99 = (char *)&v97 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  id v13 = (char *)&v97 - v12;
  MEMORY[0x1F4188790](v14);
  unint64_t v16 = (char *)&v97 - v15;
  double v18 = MEMORY[0x1F4188790](v17);
  uint64_t v102 = (char *)&v97 - v19;
  uint64_t v114 = MEMORY[0x1E4FBC860];
  id v20 = objc_msgSend(a1, sel_recordID, v18);
  id v21 = objc_msgSend(v20, sel_recordName);

  uint64_t v22 = sub_1AFFCAE98();
  uint64_t v24 = v23;

  if (v22 == 0x6F666E4972657375 && v24 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v25 = sub_1AFFCBCE8();
    swift_bridgeObjectRelease();
    if ((v25 & 1) == 0) {
      return v114;
    }
  }
  id v26 = objc_msgSend(a1, sel_encryptedValues);
  uint64_t v27 = (void *)sub_1AFFCAE68();
  unint64_t v28 = &off_1E5FA5000;
  id v29 = objc_msgSend(v26, sel_objectForKeyedSubscript_, v27);
  swift_unknownObjectRelease();

  if (v29)
  {
    id v111 = v29;
    sub_1AFD2D178(0, (unint64_t *)&qword_1EB8112A0);
    if (swift_dynamicCast())
    {
      id v30 = v109;
      uint64_t v31 = v110;
      updated = (objc_class *)type metadata accessor for UpdateUserIDCommand();
      uint64_t v33 = objc_allocWithZone(updated);
      unint64_t v34 = &v33[OBJC_IVAR___SCUpdateUserIDCommand_userID];
      *unint64_t v34 = v30;
      v34[1] = v31;
      v33[OBJC_IVAR___SCUpdateUserIDCommand_overwrite] = 0;
      v104.receiver = v33;
      v104.super_class = updated;
      objc_msgSendSuper2(&v104, sel_init);
      MEMORY[0x1B3E8D5F0]();
      if (*(void *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1AFFCB228();
      }
      sub_1AFFCB278();
      sub_1AFFCB1E8();
      unint64_t v28 = &off_1E5FA5000;
    }
  }
  id v35 = objc_msgSend(a1, sel_encryptedValues);
  int64_t v36 = (void *)sub_1AFFCAE68();
  id v37 = objc_msgSend(v35, sel_objectForKeyedSubscript_, v36);
  swift_unknownObjectRelease();

  if (v37)
  {
    id v111 = v37;
    sub_1AFD2D178(0, (unint64_t *)&qword_1EB8112A0);
    if (swift_dynamicCast())
    {
      uint64_t v98 = v13;
      id v39 = v109;
      uint64_t v38 = v110;
      int64_t v40 = v102;
      sub_1AFFC98B8();
      int64_t v41 = (objc_class *)type metadata accessor for UpdateAdsUserIDCommand();
      int64_t v42 = objc_allocWithZone(v41);
      char v43 = &v42[OBJC_IVAR___SCUpdateAdsUserIDCommand_userID];
      *char v43 = v39;
      v43[1] = v38;
      char v44 = v103;
      v103[2]((uint64_t)&v42[OBJC_IVAR___SCUpdateAdsUserIDCommand_userIDCreatedDate], v40, v9);
      v42[OBJC_IVAR___SCUpdateAdsUserIDCommand_overwrite] = 0;
      v105.receiver = v42;
      v105.super_class = v41;
      objc_msgSendSuper2(&v105, sel_init);
      uint64_t v45 = ((uint64_t (*)(char *, uint64_t))v44[1])(v40, v9);
      MEMORY[0x1B3E8D5F0](v45);
      if (*(void *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1AFFCB228();
      }
      sub_1AFFCB278();
      sub_1AFFCB1E8();
      id v13 = v98;
      unint64_t v28 = &off_1E5FA5000;
    }
  }
  id v46 = objc_msgSend(a1, sel_encryptedValues);
  os_log_type_t v47 = (void *)sub_1AFFCAE68();
  id v48 = objc_msgSend(v46, sel_objectForKeyedSubscript_, v47);
  swift_unknownObjectRelease();

  if (!v48)
  {
    uint64_t v52 = v103;
    unint64_t v51 = (void (**)(uint64_t, char *, uint64_t))v103[7];
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v51)(v8, 1, 1, v9);
    goto LABEL_19;
  }
  id v109 = v48;
  sub_1AFD2D178(0, (unint64_t *)&qword_1EB8112A0);
  int v49 = swift_dynamicCast();
  char v50 = v103;
  unint64_t v51 = (void (**)(uint64_t, char *, uint64_t))v103[7];
  ((void (*)(char *, void, uint64_t, uint64_t))v51)(v8, v49 ^ 1u, 1, v9);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v50[6])(v8, 1, v9) == 1)
  {
    uint64_t v52 = v50;
LABEL_19:
    sub_1AFD3BE10((uint64_t)v8);
    goto LABEL_23;
  }
  uint64_t v98 = v13;
  v50[4]((uint64_t)v16, v8, v9);
  uint64_t v53 = v50[2];
  uint64_t v54 = v102;
  v53((uint64_t)v102, v16, v9);
  uint64_t v55 = (objc_class *)type metadata accessor for UpdateUserStartDateCommand();
  uint64_t v56 = objc_allocWithZone(v55);
  v53((uint64_t)&v56[OBJC_IVAR___SCUpdateUserStartDateCommand_startDate], v54, v9);
  v56[OBJC_IVAR___SCUpdateUserStartDateCommand_mergePolicy] = 2;
  v106.receiver = v56;
  v106.super_class = v55;
  objc_msgSendSuper2(&v106, sel_init);
  uint64_t v57 = v50[1];
  uint64_t v58 = ((uint64_t (*)(char *, uint64_t))v57)(v54, v9);
  MEMORY[0x1B3E8D5F0](v58);
  if (*(void *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1AFFCB228();
  }
  sub_1AFFCB278();
  sub_1AFFCB1E8();
  ((void (*)(char *, uint64_t))v57)(v16, v9);
  id v13 = v98;
  unint64_t v28 = &off_1E5FA5000;
  uint64_t v52 = v103;
LABEL_23:
  id v59 = objc_msgSend(a1, sel_valuesByKey);
  uint64_t v60 = (void *)sub_1AFFCAE68();
  id v61 = objc_msgSend(v59, sel_objectForKeyedSubscript_, v60);
  swift_unknownObjectRelease();

  if (v61)
  {
    id v109 = v61;
    sub_1AFD2D178(0, (unint64_t *)&qword_1EB8112A0);
    if (swift_dynamicCast())
    {
      id v62 = v111;
      uint64_t v63 = (objc_class *)type metadata accessor for UpdateUpsellAppLaunchCountCommand();
      uint64_t v64 = (char *)objc_allocWithZone(v63);
      *(void *)&v64[OBJC_IVAR___SCUpdateUpsellAppLaunchCountCommand_upsellAppLaunchCount] = v62;
      v107.receiver = v64;
      v107.super_class = v63;
      objc_msgSendSuper2(&v107, sel_init);
      MEMORY[0x1B3E8D5F0]();
      if (*(void *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1AFFCB228();
      }
      sub_1AFFCB278();
      sub_1AFFCB1E8();
    }
  }
  id v65 = objc_msgSend(a1, sel_valuesByKey);
  long long v66 = (void *)sub_1AFFCAE68();
  id v67 = objc_msgSend(v65, sel_objectForKeyedSubscript_, v66);
  swift_unknownObjectRelease();

  if (v67)
  {
    id v111 = v67;
    sub_1AFD2D178(0, (unint64_t *)&qword_1EB8112A0);
    if (swift_dynamicCast())
    {
      id v68 = v109;
      uint64_t v69 = v110;
      id v70 = (objc_class *)type metadata accessor for UpdateLastAppLaunchUpsellInstanceIDCommand();
      uint64_t v71 = (char *)objc_allocWithZone(v70);
      uint64_t v72 = &v71[OBJC_IVAR___SCUpdateLastAppLaunchUpsellInstanceIDCommand_lastAppLaunchUpsellInstanceID];
      *(void *)uint64_t v72 = v68;
      *((void *)v72 + 1) = v69;
      v108.receiver = v71;
      v108.super_class = v70;
      objc_msgSendSuper2(&v108, sel_init);
      MEMORY[0x1B3E8D5F0]();
      if (*(void *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1AFFCB228();
      }
      sub_1AFFCB278();
      sub_1AFFCB1E8();
      unint64_t v28 = &off_1E5FA5000;
    }
  }
  id v73 = objc_msgSend(a1, sel_encryptedValues);
  uint64_t v74 = (void *)sub_1AFFCAE68();
  id v75 = objc_msgSend(v73, sel_objectForKeyedSubscript_, v74);
  swift_unknownObjectRelease();

  if (!v75)
  {
    uint64_t v76 = (uint64_t)v100;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v51)(v100, 1, 1, v9);
    goto LABEL_39;
  }
  id v109 = v75;
  sub_1AFD2D178(0, (unint64_t *)&qword_1EB8112A0);
  uint64_t v76 = (uint64_t)v100;
  int v77 = swift_dynamicCast();
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v51)(v76, v77 ^ 1u, 1, v9);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v52[6])(v76, 1, v9) == 1)
  {
LABEL_39:
    sub_1AFD3BE10(v76);
    goto LABEL_40;
  }
  v103 = v51;
  v52[4]((uint64_t)v13, (char *)v76, v9);
  objc_super v78 = v52[2];
  v79 = v102;
  v78((uint64_t)v102, v13, v9);
  v80 = (objc_class *)type metadata accessor for UpdateAppLaunchUpsellLastSeenDateCommand();
  uint64_t v81 = (char *)objc_allocWithZone(v80);
  v78((uint64_t)&v81[OBJC_IVAR___SCUpdateAppLaunchUpsellLastSeenDateCommand_appLaunchUpsellLastSeenDate], v79, v9);
  v112.receiver = v81;
  v112.super_class = v80;
  objc_msgSendSuper2(&v112, sel_init);
  long long v82 = v52[1];
  uint64_t v83 = ((uint64_t (*)(char *, uint64_t))v82)(v79, v9);
  MEMORY[0x1B3E8D5F0](v83);
  if (*(void *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1AFFCB228();
  }
  sub_1AFFCB278();
  sub_1AFFCB1E8();
  ((void (*)(char *, uint64_t))v82)(v13, v9);
  unint64_t v28 = &off_1E5FA5000;
  unint64_t v51 = v103;
LABEL_40:
  id v84 = objc_msgSend(a1, sel_encryptedValues);
  uint64_t v85 = (void *)sub_1AFFCAE68();
  id v86 = objc_msgSend(v84, (SEL)v28[498], v85);
  swift_unknownObjectRelease();

  if (!v86)
  {
    uint64_t v87 = (uint64_t)v101;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v51)(v101, 1, 1, v9);
    goto LABEL_46;
  }
  id v109 = v86;
  sub_1AFD2D178(0, (unint64_t *)&qword_1EB8112A0);
  uint64_t v87 = (uint64_t)v101;
  int v88 = swift_dynamicCast();
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v51)(v87, v88 ^ 1u, 1, v9);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v52[6])(v87, 1, v9) == 1)
  {
LABEL_46:
    sub_1AFD3BE10(v87);
    return v114;
  }
  uint64_t v89 = v99;
  v52[4]((uint64_t)v99, (char *)v87, v9);
  uint64_t v90 = v52[2];
  unint64_t v91 = v102;
  v90((uint64_t)v102, v89, v9);
  uint64_t v92 = (objc_class *)type metadata accessor for UpdateAppReviewRequestLastSeenDateCommand();
  v93 = (char *)objc_allocWithZone(v92);
  v90((uint64_t)&v93[OBJC_IVAR___SCUpdateAppReviewRequestLastSeenDateCommand_appReviewRequestLastSeenDate], v91, v9);
  v113.receiver = v93;
  v113.super_class = v92;
  objc_msgSendSuper2(&v113, sel_init);
  v94 = v52[1];
  uint64_t v95 = ((uint64_t (*)(char *, uint64_t))v94)(v91, v9);
  MEMORY[0x1B3E8D5F0](v95);
  if (*(void *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1AFFCB228();
  }
  sub_1AFFCB278();
  sub_1AFFCB1E8();
  ((void (*)(char *, uint64_t))v94)(v89, v9);
  return v114;
}

uint64_t sub_1AFDEC73C(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x79636E6572727563;
      break;
    case 2:
      uint64_t v5 = 0x75636F7470797263;
      unint64_t v3 = 0xEE0079636E657272;
      break;
    case 3:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x797469757165;
      break;
    case 4:
      unint64_t v3 = 0xE300000000000000;
      uint64_t v5 = 6714469;
      break;
    case 5:
      uint64_t v5 = 0x73657275747566;
      break;
    case 6:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x7865646E69;
      break;
    case 7:
      uint64_t v5 = 0x75466C617574756DLL;
      unint64_t v3 = 0xEA0000000000646ELL;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE800000000000000;
      if (v5 == 0x79636E6572727563) {
        goto LABEL_22;
      }
      goto LABEL_25;
    case 2:
      unint64_t v6 = 0xEE0079636E657272;
      if (v5 != 0x75636F7470797263) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 3:
      unint64_t v6 = 0xE600000000000000;
      if (v5 != 0x797469757165) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 4:
      unint64_t v6 = 0xE300000000000000;
      if (v5 != 6714469) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 5:
      if (v5 != 0x73657275747566) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 6:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v2 = 0x7865646E69;
      goto LABEL_21;
    case 7:
      unint64_t v6 = 0xEA0000000000646ELL;
      if (v5 != 0x75466C617574756DLL) {
        goto LABEL_25;
      }
      goto LABEL_22;
    default:
LABEL_21:
      if (v5 != v2) {
        goto LABEL_25;
      }
LABEL_22:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_25:
      }
        char v7 = sub_1AFFCBCE8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1AFDEC9C0(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEE00646579616C65;
  uint64_t v3 = 0x44636972656E6567;
  uint64_t v4 = a1;
  unint64_t v5 = 0x44636972656E6567;
  unint64_t v6 = 0xEE00646579616C65;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x655271616473616ELL;
      unint64_t v6 = 0xEE00656D69746C61;
      break;
    case 2:
      unint64_t v5 = 0x6C6165526573796ELL;
      unint64_t v6 = 0xEC000000656D6974;
      break;
    case 3:
      unint64_t v6 = 0x80000001AFFEDFA0;
      unint64_t v5 = 0xD000000000000010;
      break;
    case 4:
      unint64_t v5 = 0x52544B4D6573796ELL;
      goto LABEL_7;
    case 5:
      unint64_t v5 = 0x52636972656E6567;
LABEL_7:
      unint64_t v6 = 0xEF656D69746C6165;
      break;
    case 6:
      unint64_t v6 = 0xE700000000000000;
      unint64_t v5 = 0x6E776F6E6B6E75;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xEE00656D69746C61;
      if (v5 == 0x655271616473616ELL) {
        goto LABEL_20;
      }
      goto LABEL_23;
    case 2:
      unint64_t v2 = 0xEC000000656D6974;
      if (v5 != 0x6C6165526573796ELL) {
        goto LABEL_23;
      }
      goto LABEL_20;
    case 3:
      unint64_t v2 = 0x80000001AFFEDFA0;
      if (v5 != 0xD000000000000010) {
        goto LABEL_23;
      }
      goto LABEL_20;
    case 4:
      unint64_t v2 = 0xEF656D69746C6165;
      if (v5 != 0x52544B4D6573796ELL) {
        goto LABEL_23;
      }
      goto LABEL_20;
    case 5:
      uint64_t v3 = 0x52636972656E6567;
      unint64_t v2 = 0xEF656D69746C6165;
      goto LABEL_19;
    case 6:
      unint64_t v2 = 0xE700000000000000;
      if (v5 != 0x6E776F6E6B6E75) {
        goto LABEL_23;
      }
      goto LABEL_20;
    default:
LABEL_19:
      if (v5 != v3) {
        goto LABEL_23;
      }
LABEL_20:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_23:
      }
        char v7 = sub_1AFFCBCE8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1AFDECC74(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1852141679;
      break;
    case 2:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x6465736F6C63;
      break;
    case 3:
      uint64_t v5 = 0x656B72614D657270;
      unint64_t v3 = 0xE900000000000074;
      break;
    case 4:
      uint64_t v5 = 0x756F487265746661;
      unint64_t v3 = 0xEA00000000007372;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE400000000000000;
      if (v5 == 1852141679) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0xE600000000000000;
      if (v5 != 0x6465736F6C63) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      uint64_t v2 = 0x656B72614D657270;
      unint64_t v6 = 0xE900000000000074;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xEA00000000007372;
      if (v5 != 0x756F487265746661) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_1AFFCBCE8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1AFDECE38(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 1701869940;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 1701869940;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x6C6562616CLL;
      break;
    case 2:
      unsigned int v6 = 1801675106;
      goto LABEL_5;
    case 3:
      unsigned int v6 = 1701998438;
LABEL_5:
      uint64_t v5 = v6 | 0x756F726700000000;
      unint64_t v3 = 0xEF726F6C6F43646ELL;
      break;
    case 4:
      char v7 = "alternateBackgroundColor";
      goto LABEL_8;
    case 5:
      char v7 = "alternateForegroundColor";
LABEL_8:
      unint64_t v3 = (unint64_t)(v7 - 32) | 0x8000000000000000;
      uint64_t v5 = 0xD000000000000018;
      break;
    default:
      break;
  }
  unint64_t v8 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v8 = 0xE500000000000000;
      if (v5 == 0x6C6562616CLL) {
        goto LABEL_20;
      }
      goto LABEL_22;
    case 2:
      unsigned int v9 = 1801675106;
      goto LABEL_14;
    case 3:
      unsigned int v9 = 1701998438;
LABEL_14:
      uint64_t v2 = v9 | 0x756F726700000000;
      unint64_t v8 = 0xEF726F6C6F43646ELL;
      goto LABEL_15;
    case 4:
      uint64_t v10 = "alternateBackgroundColor";
      goto LABEL_19;
    case 5:
      uint64_t v10 = "alternateForegroundColor";
LABEL_19:
      unint64_t v8 = (unint64_t)(v10 - 32) | 0x8000000000000000;
      if (v5 == 0xD000000000000018) {
        goto LABEL_20;
      }
      goto LABEL_22;
    default:
LABEL_15:
      if (v5 != v2) {
        goto LABEL_22;
      }
LABEL_20:
      if (v3 == v8) {
        char v11 = 1;
      }
      else {
LABEL_22:
      }
        char v11 = sub_1AFFCBCE8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v11 & 1;
  }
}

uint64_t sub_1AFDED010(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0xD000000000000018;
  }
  else {
    unint64_t v3 = 0xD000000000000014;
  }
  if (v2) {
    unint64_t v4 = 0x80000001AFFEDF00;
  }
  else {
    unint64_t v4 = 0x80000001AFFEDF20;
  }
  if (a2) {
    unint64_t v5 = 0xD000000000000018;
  }
  else {
    unint64_t v5 = 0xD000000000000014;
  }
  if (a2) {
    unint64_t v6 = 0x80000001AFFEDF20;
  }
  else {
    unint64_t v6 = 0x80000001AFFEDF00;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1AFFCBCE8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1AFDED0BC(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xED0000676E697373;
  uint64_t v3 = 0x694D6649796C6E6FLL;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 0x746972777265766FLL;
    }
    else {
      uint64_t v5 = 0x65646C4F7065656BLL;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xE900000000000065;
    }
    else {
      unint64_t v6 = 0xEA00000000007473;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  uint64_t v5 = 0x694D6649796C6E6FLL;
  unint64_t v6 = 0xED0000676E697373;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      uint64_t v3 = 0x746972777265766FLL;
    }
    else {
      uint64_t v3 = 0x65646C4F7065656BLL;
    }
    if (v7 == 1) {
      unint64_t v2 = 0xE900000000000065;
    }
    else {
      unint64_t v2 = 0xEA00000000007473;
    }
  }
LABEL_15:
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1AFFCBCE8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1AFDED1F8(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xEA00000000007372;
  uint64_t v3 = 0x756F487265746661;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 0x737961776C61;
    }
    else {
      uint64_t v5 = 0x726576656ELL;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xE600000000000000;
    }
    else {
      unint64_t v6 = 0xE500000000000000;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  uint64_t v5 = 0x756F487265746661;
  unint64_t v6 = 0xEA00000000007372;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      uint64_t v3 = 0x737961776C61;
    }
    else {
      uint64_t v3 = 0x726576656ELL;
    }
    if (v7 == 1) {
      unint64_t v2 = 0xE600000000000000;
    }
    else {
      unint64_t v2 = 0xE500000000000000;
    }
  }
LABEL_15:
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1AFFCBCE8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1AFDED304(char a1, char a2)
{
  unint64_t v3 = 0xE200000000000000;
  uint64_t v4 = 25705;
  switch(a1)
  {
    case 1:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v4 = 1701667182;
      break;
    case 2:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v4 = 0x737574617473;
      break;
    case 3:
      uint64_t v4 = 0x695F6D6165727473;
      unint64_t v3 = 0xEF6C61767265746ELL;
      break;
    case 4:
      uint64_t v4 = 0x65706F5F7478656ELL;
      unint64_t v3 = 0xE90000000000006ELL;
      break;
    default:
      break;
  }
  unint64_t v5 = 0xE200000000000000;
  uint64_t v6 = 25705;
  switch(a2)
  {
    case 1:
      unint64_t v5 = 0xE400000000000000;
      if (v4 == 1701667182) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v5 = 0xE600000000000000;
      if (v4 != 0x737574617473) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      uint64_t v6 = 0x695F6D6165727473;
      unint64_t v5 = 0xEF6C61767265746ELL;
      goto LABEL_12;
    case 4:
      unint64_t v5 = 0xE90000000000006ELL;
      if (v4 != 0x65706F5F7478656ELL) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v4 != v6) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v5) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_1AFFCBCE8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1AFDED4C4(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 1701667182;
  }
  else {
    uint64_t v3 = 25705;
  }
  if (v2) {
    unint64_t v4 = 0xE200000000000000;
  }
  else {
    unint64_t v4 = 0xE400000000000000;
  }
  if (a2) {
    uint64_t v5 = 1701667182;
  }
  else {
    uint64_t v5 = 25705;
  }
  if (a2) {
    unint64_t v6 = 0xE400000000000000;
  }
  else {
    unint64_t v6 = 0xE200000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1AFFCBCE8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1AFDED558(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000020;
  unint64_t v3 = 0x80000001AFFEDD70;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000020;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0xD000000000000026;
      unint64_t v6 = "DataSource_Quote_NasdaqLS_FreeRealtime";
      goto LABEL_5;
    case 2:
      unint64_t v5 = 0xD000000000000022;
      unint64_t v6 = "DataSource_Quote_NYSE_FreeRealtime";
      goto LABEL_5;
    case 3:
      unint64_t v5 = 0xD000000000000026;
      unint64_t v6 = "DataSource_Quote_NYSEArca_FreeRealtime";
LABEL_5:
      unint64_t v3 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      break;
    case 4:
      char v7 = "DataSource_Quote_NYSEMKT_FreeRealtime";
      goto LABEL_8;
    case 5:
      char v7 = "DataSource_Quote_Generic_FreeRealtime";
LABEL_8:
      unint64_t v3 = (unint64_t)(v7 - 32) | 0x8000000000000000;
      unint64_t v5 = 0xD000000000000025;
      break;
    case 6:
      unint64_t v3 = 0xE700000000000000;
      unint64_t v5 = 0x4E574F4E4B4E55;
      break;
    default:
      break;
  }
  unint64_t v8 = 0x80000001AFFEDD70;
  switch(a2)
  {
    case 1:
      unint64_t v9 = 0xD000000000000026;
      uint64_t v10 = "DataSource_Quote_NasdaqLS_FreeRealtime";
      goto LABEL_14;
    case 2:
      unint64_t v9 = 0xD000000000000022;
      uint64_t v10 = "DataSource_Quote_NYSE_FreeRealtime";
      goto LABEL_14;
    case 3:
      unint64_t v9 = 0xD000000000000026;
      uint64_t v10 = "DataSource_Quote_NYSEArca_FreeRealtime";
LABEL_14:
      unint64_t v8 = (unint64_t)(v10 - 32) | 0x8000000000000000;
      if (v5 != v9) {
        goto LABEL_23;
      }
      goto LABEL_20;
    case 4:
      char v11 = "DataSource_Quote_NYSEMKT_FreeRealtime";
      goto LABEL_18;
    case 5:
      char v11 = "DataSource_Quote_Generic_FreeRealtime";
LABEL_18:
      unint64_t v8 = (unint64_t)(v11 - 32) | 0x8000000000000000;
      unint64_t v2 = 0xD000000000000025;
      goto LABEL_19;
    case 6:
      unint64_t v8 = 0xE700000000000000;
      if (v5 != 0x4E574F4E4B4E55) {
        goto LABEL_23;
      }
      goto LABEL_20;
    default:
LABEL_19:
      if (v5 != v2) {
        goto LABEL_23;
      }
LABEL_20:
      if (v3 == v8) {
        char v12 = 1;
      }
      else {
LABEL_23:
      }
        char v12 = sub_1AFFCBCE8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v12 & 1;
  }
}

uint64_t sub_1AFDED75C(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x65676E6168637865;
    }
    else {
      uint64_t v3 = 0x756F735F61746164;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE900000000000073;
    }
    else {
      unint64_t v4 = 0xEC00000073656372;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x65676E6168637865;
      }
      else {
        uint64_t v6 = 0x756F735F61746164;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE900000000000073;
      }
      else {
        unint64_t v7 = 0xEC00000073656372;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE600000000000000;
    uint64_t v3 = 0x7365746F7571;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE600000000000000;
  if (v3 != 0x7365746F7571)
  {
LABEL_21:
    char v8 = sub_1AFFCBCE8();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1AFDED888(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xE900000000000064;
  uint64_t v3 = 0x496C656E6E616863;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 0x6E6F43656C797473;
    }
    else {
      uint64_t v5 = 0x6954736567646162;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xEC00000073676966;
    }
    else {
      unint64_t v6 = 0xED000074756F656DLL;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  uint64_t v5 = 0x496C656E6E616863;
  unint64_t v6 = 0xE900000000000064;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      uint64_t v3 = 0x6E6F43656C797473;
    }
    else {
      uint64_t v3 = 0x6954736567646162;
    }
    if (v7 == 1) {
      unint64_t v2 = 0xEC00000073676966;
    }
    else {
      unint64_t v2 = 0xED000074756F656DLL;
    }
  }
LABEL_15:
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1AFFCBCE8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1AFDED9CC(char a1, unsigned __int8 a2)
{
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v2 = 0x656764457377656ELL;
    }
    else {
      uint64_t v2 = 0x74694B64756F6C63;
    }
    unint64_t v3 = 0xE800000000000000;
    int v4 = a2;
    if (a2)
    {
LABEL_6:
      if (v4 == 1) {
        uint64_t v5 = 0x656764457377656ELL;
      }
      else {
        uint64_t v5 = 0x74694B64756F6C63;
      }
      unint64_t v6 = 0xE800000000000000;
      if (v2 != v5) {
        goto LABEL_15;
      }
      goto LABEL_13;
    }
  }
  else
  {
    unint64_t v3 = 0xE700000000000000;
    uint64_t v2 = 0x746C7561666564;
    int v4 = a2;
    if (a2) {
      goto LABEL_6;
    }
  }
  unint64_t v6 = 0xE700000000000000;
  if (v2 != 0x746C7561666564)
  {
LABEL_15:
    char v7 = sub_1AFFCBCE8();
    goto LABEL_16;
  }
LABEL_13:
  if (v3 != v6) {
    goto LABEL_15;
  }
  char v7 = 1;
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1AFDEDAE8(unsigned __int8 a1, unsigned __int8 a2)
{
  if ((unint64_t)a1 << 40 == (unint64_t)a2 << 40) {
    char v2 = 1;
  }
  else {
    char v2 = sub_1AFFCBCE8();
  }
  swift_bridgeObjectRelease_n();
  return v2 & 1;
}

uint64_t sub_1AFDEDB60(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xE900000000000067;
  uint64_t v3 = 0x69666E6F43707061;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 0x6465776F6C6C61;
    }
    else {
      uint64_t v5 = 0x776F6C6C61736964;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xE700000000000000;
    }
    else {
      unint64_t v6 = 0xEA00000000006465;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  uint64_t v5 = 0x69666E6F43707061;
  unint64_t v6 = 0xE900000000000067;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      uint64_t v3 = 0x6465776F6C6C61;
    }
    else {
      uint64_t v3 = 0x776F6C6C61736964;
    }
    if (v7 == 1) {
      unint64_t v2 = 0xE700000000000000;
    }
    else {
      unint64_t v2 = 0xEA00000000006465;
    }
  }
LABEL_15:
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1AFFCBCE8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1AFDEDC84(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xED0000656D616E5FLL;
  uint64_t v3 = 0x65676E6168637865;
  uint64_t v4 = a1;
  uint64_t v5 = 0x65676E6168637865;
  unint64_t v6 = 0xED0000656D616E5FLL;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0xE400000000000000;
      uint64_t v5 = 1701869940;
      break;
    case 2:
      uint64_t v5 = 0x616E5F74726F6873;
      unint64_t v6 = 0xEA0000000000656DLL;
      break;
    case 3:
      unint64_t v6 = 0xE400000000000000;
      uint64_t v5 = 1701667182;
      break;
    case 4:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v5 = 0x6C6F626D7973;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE400000000000000;
      if (v5 == 1701869940) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v2 = 0xEA0000000000656DLL;
      if (v5 != 0x616E5F74726F6873) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v2 = 0xE400000000000000;
      uint64_t v3 = 1701667182;
      goto LABEL_12;
    case 4:
      unint64_t v2 = 0xE600000000000000;
      if (v5 != 0x6C6F626D7973) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v3) {
        goto LABEL_16;
      }
LABEL_13:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_1AFFCBCE8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1AFDEDE48(char a1, char a2)
{
  unint64_t v3 = 0xD00000000000001ALL;
  unint64_t v4 = 0x80000001AFFEE2A0;
  switch(a1)
  {
    case 1:
      unint64_t v3 = 0xD000000000000021;
      uint64_t v5 = "mediaSharingBlacklistedChannelIds";
      goto LABEL_6;
    case 2:
      unint64_t v4 = 0x80000001AFFEE2F0;
      unint64_t v3 = 0xD000000000000017;
      break;
    case 3:
      unint64_t v3 = 0xD00000000000001FLL;
      uint64_t v5 = "webEmbedContentBlockerOverrides";
      goto LABEL_6;
    case 4:
      unint64_t v3 = 0xD000000000000019;
      uint64_t v5 = "anfRenderingConfiguration";
LABEL_6:
      unint64_t v4 = (unint64_t)(v5 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xD00000000000001ALL;
  unint64_t v7 = 0x80000001AFFEE2A0;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xD000000000000021;
      char v8 = "mediaSharingBlacklistedChannelIds";
      goto LABEL_12;
    case 2:
      unint64_t v7 = 0x80000001AFFEE2F0;
      unint64_t v6 = 0xD000000000000017;
      break;
    case 3:
      unint64_t v6 = 0xD00000000000001FLL;
      char v8 = "webEmbedContentBlockerOverrides";
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xD000000000000019;
      char v8 = "anfRenderingConfiguration";
LABEL_12:
      unint64_t v7 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  if (v3 == v6 && v4 == v7) {
    char v9 = 1;
  }
  else {
    char v9 = sub_1AFFCBCE8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_1AFDEDFE8(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 1702125892;
  }
  else {
    uint64_t v3 = 0x6D617473656D6954;
  }
  if (v2) {
    unint64_t v4 = 0xE900000000000070;
  }
  else {
    unint64_t v4 = 0xE400000000000000;
  }
  if (a2) {
    uint64_t v5 = 1702125892;
  }
  else {
    uint64_t v5 = 0x6D617473656D6954;
  }
  if (a2) {
    unint64_t v6 = 0xE400000000000000;
  }
  else {
    unint64_t v6 = 0xE900000000000070;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1AFFCBCE8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1AFDEE08C(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 118;
  }
  else {
    uint64_t v3 = 6710642;
  }
  if (v2) {
    unint64_t v4 = 0xE300000000000000;
  }
  else {
    unint64_t v4 = 0xE100000000000000;
  }
  if (a2) {
    uint64_t v5 = 118;
  }
  else {
    uint64_t v5 = 6710642;
  }
  if (a2) {
    unint64_t v6 = 0xE100000000000000;
  }
  else {
    unint64_t v6 = 0xE300000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1AFFCBCE8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1AFDEE120(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 1852141679;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 1852141679;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x65736F6C63;
      break;
    case 2:
      uint64_t v5 = 1751607656;
      break;
    case 3:
      unint64_t v3 = 0xE300000000000000;
      uint64_t v5 = 7827308;
      break;
    case 4:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x656D756C6F76;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE500000000000000;
      if (v5 == 0x65736F6C63) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      if (v5 != 1751607656) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v6 = 0xE300000000000000;
      uint64_t v2 = 7827308;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xE600000000000000;
      if (v5 != 0x656D756C6F76) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_1AFFCBCE8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1AFDEE2A4(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEB00000000617465;
  uint64_t v3 = 0x6D2D7365756C6176;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6D2D7365756C6176;
  unint64_t v6 = 0xEB00000000617465;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x636E657265666572;
      unint64_t v6 = 0xEE006174656D2D65;
      break;
    case 2:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v5 = 0x736569726573;
      break;
    case 3:
      unint64_t v6 = 0xE400000000000000;
      uint64_t v5 = 1635018093;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xEE006174656D2D65;
      if (v5 == 0x636E657265666572) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v2 = 0xE600000000000000;
      uint64_t v3 = 0x736569726573;
      goto LABEL_9;
    case 3:
      unint64_t v2 = 0xE400000000000000;
      if (v5 == 1635018093) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v3) {
        goto LABEL_14;
      }
LABEL_12:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1AFFCBCE8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1AFDEE444(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 1635017060;
  }
  else {
    uint64_t v3 = 0x7265732D61746164;
  }
  if (v2) {
    unint64_t v4 = 0xEB00000000736569;
  }
  else {
    unint64_t v4 = 0xE400000000000000;
  }
  if (a2) {
    uint64_t v5 = 1635017060;
  }
  else {
    uint64_t v5 = 0x7265732D61746164;
  }
  if (a2) {
    unint64_t v6 = 0xE400000000000000;
  }
  else {
    unint64_t v6 = 0xEB00000000736569;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1AFFCBCE8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1AFDEE4EC(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xEB00000000657461;
  uint64_t v3 = 0x4479616C70736964;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 0x70795479726F7473;
    }
    else {
      uint64_t v5 = 25705;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xE900000000000065;
    }
    else {
      unint64_t v6 = 0xE200000000000000;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  uint64_t v5 = 0x4479616C70736964;
  unint64_t v6 = 0xEB00000000657461;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      uint64_t v3 = 0x70795479726F7473;
    }
    else {
      uint64_t v3 = 25705;
    }
    if (v7 == 1) {
      unint64_t v2 = 0xE900000000000065;
    }
    else {
      unint64_t v2 = 0xE200000000000000;
    }
  }
LABEL_15:
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1AFFCBCE8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1AFDEE600(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0xD000000000000011;
  }
  else {
    unint64_t v3 = 0x446873696C627570;
  }
  if (v2) {
    unint64_t v4 = 0xEB00000000657461;
  }
  else {
    unint64_t v4 = 0x80000001AFFEDED0;
  }
  if (a2) {
    unint64_t v5 = 0xD000000000000011;
  }
  else {
    unint64_t v5 = 0x446873696C627570;
  }
  if (a2) {
    unint64_t v6 = 0x80000001AFFEDED0;
  }
  else {
    unint64_t v6 = 0xEB00000000657461;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1AFFCBCE8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1AFDEE6B4(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEB00000000656D61;
  unint64_t v3 = 0x4E64726F6365725FLL;
  uint64_t v4 = a1;
  unint64_t v5 = 0x4E64726F6365725FLL;
  unint64_t v6 = 0xEB00000000656D61;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x72756769666E6F63;
      unint64_t v6 = 0xED00006E6F697461;
      break;
    case 2:
      unint64_t v6 = 0x80000001AFFED100;
      unint64_t v5 = 0xD000000000000014;
      break;
    case 3:
      unint64_t v5 = 0xD000000000000016;
      char v7 = "todayFeedConfiguration";
      goto LABEL_6;
    case 4:
      unint64_t v5 = 0xD00000000000001DLL;
      char v7 = "todayFeedTopStoriesArticleIDs";
LABEL_6:
      unint64_t v6 = (unint64_t)(v7 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v3 = 0x72756769666E6F63;
      unint64_t v2 = 0xED00006E6F697461;
      break;
    case 2:
      unint64_t v2 = 0x80000001AFFED100;
      unint64_t v3 = 0xD000000000000014;
      break;
    case 3:
      unint64_t v3 = 0xD000000000000016;
      char v8 = "todayFeedConfiguration";
      goto LABEL_12;
    case 4:
      unint64_t v3 = 0xD00000000000001DLL;
      char v8 = "todayFeedTopStoriesArticleIDs";
LABEL_12:
      unint64_t v2 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  if (v5 == v3 && v6 == v2) {
    char v9 = 1;
  }
  else {
    char v9 = sub_1AFFCBCE8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_1AFDEE898(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x65676E6168637865;
  unint64_t v3 = 0xE800000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x65676E6168637865;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1701667182;
      break;
    case 2:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x6C6F626D7973;
      break;
    case 3:
      uint64_t v5 = 0x6D614E74726F6873;
      unint64_t v3 = 0xE900000000000065;
      break;
    case 4:
      uint64_t v5 = 0x4E746361706D6F63;
      unint64_t v3 = 0xEB00000000656D61;
      break;
    case 5:
      uint64_t v5 = 0x79546C6F626D7973;
      unint64_t v3 = 0xEA00000000006570;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE800000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE400000000000000;
      if (v5 == 1701667182) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      unint64_t v6 = 0xE600000000000000;
      if (v5 != 0x6C6F626D7973) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      unint64_t v6 = 0xE900000000000065;
      if (v5 != 0x6D614E74726F6873) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      uint64_t v2 = 0x4E746361706D6F63;
      unint64_t v6 = 0xEB00000000656D61;
      goto LABEL_15;
    case 5:
      unint64_t v6 = 0xEA00000000006570;
      if (v5 != 0x79546C6F626D7973) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v2) {
        goto LABEL_19;
      }
LABEL_16:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = sub_1AFFCBCE8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1AFDEEAAC(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEA00000000007265;
  uint64_t v3 = 0x696669746E656469;
  uint64_t v4 = a1;
  uint64_t v5 = 0x696669746E656469;
  unint64_t v6 = 0xEA00000000007265;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0xE300000000000000;
      uint64_t v5 = 7107189;
      break;
    case 2:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v5 = 0x6E6F697461727564;
      break;
    case 3:
      uint64_t v5 = 0x69736F5079616C70;
      unint64_t v6 = 0xEC0000006E6F6974;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE300000000000000;
      if (v5 == 7107189) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v2 = 0xE800000000000000;
      uint64_t v3 = 0x6E6F697461727564;
      goto LABEL_9;
    case 3:
      unint64_t v2 = 0xEC0000006E6F6974;
      if (v5 == 0x69736F5079616C70) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v3) {
        goto LABEL_14;
      }
LABEL_12:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1AFFCBCE8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1AFDEEC44(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x646174654D736473;
  }
  else {
    uint64_t v3 = 0x7365746F7571;
  }
  if (v2) {
    unint64_t v4 = 0xE600000000000000;
  }
  else {
    unint64_t v4 = 0xEB00000000617461;
  }
  if (a2) {
    uint64_t v5 = 0x646174654D736473;
  }
  else {
    uint64_t v5 = 0x7365746F7571;
  }
  if (a2) {
    unint64_t v6 = 0xEB00000000617461;
  }
  else {
    unint64_t v6 = 0xE600000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1AFFCBCE8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1AFDEECF0(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x65736F6C63;
  unint64_t v3 = 0xE500000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x65736F6C63;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1751607656;
      break;
    case 2:
      unint64_t v3 = 0xE300000000000000;
      uint64_t v5 = 7827308;
      break;
    case 3:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1852141679;
      break;
    case 4:
      uint64_t v5 = 0x636E657265666572;
      unint64_t v3 = 0xED00006574614465;
      break;
    case 5:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x656D756C6F76;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE500000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE400000000000000;
      if (v5 == 1751607656) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      unint64_t v6 = 0xE300000000000000;
      if (v5 != 7827308) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      unint64_t v6 = 0xE400000000000000;
      if (v5 != 1852141679) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      uint64_t v2 = 0x636E657265666572;
      unint64_t v6 = 0xED00006574614465;
      goto LABEL_15;
    case 5:
      unint64_t v6 = 0xE600000000000000;
      if (v5 != 0x656D756C6F76) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v2) {
        goto LABEL_19;
      }
LABEL_16:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = sub_1AFFCBCE8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1AFDEEED4(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x7461447472617473;
  }
  else {
    uint64_t v3 = 0x65746144646E65;
  }
  if (v2) {
    unint64_t v4 = 0xE700000000000000;
  }
  else {
    unint64_t v4 = 0xE900000000000065;
  }
  if (a2) {
    uint64_t v5 = 0x7461447472617473;
  }
  else {
    uint64_t v5 = 0x65746144646E65;
  }
  if (a2) {
    unint64_t v6 = 0xE900000000000065;
  }
  else {
    unint64_t v6 = 0xE700000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1AFFCBCE8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1AFDEEF80(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x74657366666FLL;
  }
  else {
    uint64_t v3 = 1701080931;
  }
  if (v2) {
    unint64_t v4 = 0xE400000000000000;
  }
  else {
    unint64_t v4 = 0xE600000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x74657366666FLL;
  }
  else {
    uint64_t v5 = 1701080931;
  }
  if (a2) {
    unint64_t v6 = 0xE600000000000000;
  }
  else {
    unint64_t v6 = 0xE400000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1AFFCBCE8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1AFDEF01C(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xE900000000000065;
  uint64_t v3 = 0x676E615265746164;
  uint64_t v4 = a1;
  uint64_t v5 = 0x676E615265746164;
  unint64_t v6 = 0xE900000000000065;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v5 = 0x73656972746E65;
      break;
    case 2:
      uint64_t v5 = 0x695474656B72616DLL;
      unint64_t v6 = 0xEE00656E6F5A656DLL;
      break;
    case 3:
      uint64_t v5 = 0x73756F6976657270;
      unint64_t v6 = 0xED000065736F6C43;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE700000000000000;
      if (v5 == 0x73656972746E65) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v3 = 0x695474656B72616DLL;
      unint64_t v2 = 0xEE00656E6F5A656DLL;
      goto LABEL_9;
    case 3:
      unint64_t v2 = 0xED000065736F6C43;
      if (v5 == 0x73756F6976657270) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v3) {
        goto LABEL_14;
      }
LABEL_12:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1AFFCBCE8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1AFDEF1E4(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x59434E4552525543;
      break;
    case 2:
      uint64_t v5 = 0x435F4F5450595243;
      unint64_t v3 = 0xEF59434E45525255;
      break;
    case 3:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x595449555145;
      break;
    case 4:
      unint64_t v3 = 0xE300000000000000;
      uint64_t v5 = 4609093;
      break;
    case 5:
      uint64_t v5 = 0x53455255545546;
      break;
    case 6:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x5845444E49;
      break;
    case 7:
      uint64_t v5 = 0x465F4C415554554DLL;
      unint64_t v3 = 0xEB00000000444E55;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE800000000000000;
      if (v5 == 0x59434E4552525543) {
        goto LABEL_22;
      }
      goto LABEL_25;
    case 2:
      unint64_t v6 = 0xEF59434E45525255;
      if (v5 != 0x435F4F5450595243) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 3:
      unint64_t v6 = 0xE600000000000000;
      if (v5 != 0x595449555145) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 4:
      unint64_t v6 = 0xE300000000000000;
      if (v5 != 4609093) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 5:
      if (v5 != 0x53455255545546) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 6:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v2 = 0x5845444E49;
      goto LABEL_21;
    case 7:
      unint64_t v6 = 0xEB00000000444E55;
      if (v5 != 0x465F4C415554554DLL) {
        goto LABEL_25;
      }
      goto LABEL_22;
    default:
LABEL_21:
      if (v5 != v2) {
        goto LABEL_25;
      }
LABEL_22:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_25:
      }
        char v7 = sub_1AFFCBCE8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1AFDEF470(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 1313165391;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 1313165391;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x4445534F4C43;
      break;
    case 2:
      uint64_t v5 = 0x4B52414D5F455250;
      unint64_t v3 = 0xEA00000000005445;
      break;
    case 3:
      uint64_t v5 = 0x4F485F5245544641;
      unint64_t v3 = 0xEB00000000535255;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE600000000000000;
      if (v5 == 0x4445534F4C43) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v2 = 0x4B52414D5F455250;
      unint64_t v6 = 0xEA00000000005445;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xEB00000000535255;
      if (v5 == 0x4F485F5245544641) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1AFFCBCE8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1AFDEF600(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEF444559414C4544;
  unint64_t v3 = 0x5F434952454E4547;
  uint64_t v4 = a1;
  unint64_t v5 = 0x5F434952454E4547;
  unint64_t v6 = 0xEF444559414C4544;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x525F51414453414ELL;
      unint64_t v6 = 0xEF454D49544C4145;
      break;
    case 2:
      unint64_t v5 = 0x4145525F4553594ELL;
      unint64_t v6 = 0xED0000454D49544CLL;
      break;
    case 3:
      unint64_t v5 = 0xD000000000000012;
      char v7 = "NYSE_ARCA_REALTIME";
      goto LABEL_6;
    case 4:
      unint64_t v5 = 0xD000000000000011;
      char v7 = "NYSE_MKT_REALTIME";
LABEL_6:
      unint64_t v6 = (unint64_t)(v7 - 32) | 0x8000000000000000;
      break;
    case 5:
      unint64_t v6 = 0x80000001AFFED060;
      unint64_t v5 = 0xD000000000000010;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xEF454D49544C4145;
      if (v5 == 0x525F51414453414ELL) {
        goto LABEL_17;
      }
      goto LABEL_20;
    case 2:
      unint64_t v2 = 0xED0000454D49544CLL;
      if (v5 != 0x4145525F4553594ELL) {
        goto LABEL_20;
      }
      goto LABEL_17;
    case 3:
      unint64_t v3 = 0xD000000000000012;
      char v8 = "NYSE_ARCA_REALTIME";
      goto LABEL_15;
    case 4:
      unint64_t v3 = 0xD000000000000011;
      char v8 = "NYSE_MKT_REALTIME";
LABEL_15:
      unint64_t v2 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      goto LABEL_16;
    case 5:
      unint64_t v2 = 0x80000001AFFED060;
      if (v5 != 0xD000000000000010) {
        goto LABEL_20;
      }
      goto LABEL_17;
    default:
LABEL_16:
      if (v5 != v3) {
        goto LABEL_20;
      }
LABEL_17:
      if (v6 == v2) {
        char v9 = 1;
      }
      else {
LABEL_20:
      }
        char v9 = sub_1AFFCBCE8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9 & 1;
  }
}

uint64_t sub_1AFDEF864(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0xD000000000000013;
  }
  else {
    unint64_t v3 = 0x65676175676E616CLL;
  }
  if (v2) {
    unint64_t v4 = 0xEF736769666E6F43;
  }
  else {
    unint64_t v4 = 0x80000001AFFEE0F0;
  }
  if (a2) {
    unint64_t v5 = 0xD000000000000013;
  }
  else {
    unint64_t v5 = 0x65676175676E616CLL;
  }
  if (a2) {
    unint64_t v6 = 0x80000001AFFEE0F0;
  }
  else {
    unint64_t v6 = 0xEF736769666E6F43;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1AFFCBCE8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1AFDEF91C(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xED00004449797469;
  uint64_t v3 = 0x746E456B636F7473;
  uint64_t v4 = a1;
  uint64_t v5 = 0x746E456B636F7473;
  unint64_t v6 = 0xED00004449797469;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v5 = 0x6C6F626D7973;
      break;
    case 2:
      uint64_t v5 = 0x6E6174726F706D69;
      unint64_t v6 = 0xEA00000000006563;
      break;
    case 3:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v5 = 0x726F697270;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE600000000000000;
      if (v5 == 0x6C6F626D7973) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v3 = 0x6E6174726F706D69;
      unint64_t v2 = 0xEA00000000006563;
      goto LABEL_9;
    case 3:
      unint64_t v2 = 0xE500000000000000;
      if (v5 == 0x726F697270) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v3) {
        goto LABEL_14;
      }
LABEL_12:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1AFFCBCE8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1AFDEFABC(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x646174654D736473;
  }
  else {
    uint64_t v3 = 0x6D6574497377656ELL;
  }
  if (v2) {
    unint64_t v4 = 0xE900000000000073;
  }
  else {
    unint64_t v4 = 0xEB00000000617461;
  }
  if (a2) {
    uint64_t v5 = 0x646174654D736473;
  }
  else {
    uint64_t v5 = 0x6D6574497377656ELL;
  }
  if (a2) {
    unint64_t v6 = 0xEB00000000617461;
  }
  else {
    unint64_t v6 = 0xE900000000000073;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1AFFCBCE8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1AFDEFB70(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x72656469766F7270;
  unint64_t v3 = 0xE800000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x72656469766F7270;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x446873696C627570;
      unint64_t v3 = 0xEB00000000657461;
      break;
    case 2:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x7972616D6D7573;
      break;
    case 3:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x656C746974;
      break;
    case 4:
      unint64_t v3 = 0xE300000000000000;
      uint64_t v5 = 7107189;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE800000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xEB00000000657461;
      if (v5 == 0x446873696C627570) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0xE700000000000000;
      if (v5 != 0x7972616D6D7573) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v2 = 0x656C746974;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xE300000000000000;
      if (v5 != 7107189) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_1AFFCBCE8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1AFDEFD34(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEA00000000006E6FLL;
  uint64_t v3 = 0x69746375646F7270;
  uint64_t v4 = a1;
  uint64_t v5 = 0x69746375646F7270;
  unint64_t v6 = 0xEA00000000006E6FLL;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v5 = 0x676E6967617473;
      break;
    case 2:
      unint64_t v6 = 0xE200000000000000;
      uint64_t v5 = 24945;
      break;
    case 3:
      unint64_t v6 = 0xE400000000000000;
      uint64_t v5 = 1953719668;
      break;
    case 4:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v5 = 0x6C65766564;
      break;
    case 5:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v5 = 0x786F62646E6173;
      break;
    case 6:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v5 = 0x316F6D6564;
      break;
    case 7:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v5 = 0x326F6D6564;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE700000000000000;
      if (v5 == 0x676E6967617473) {
        goto LABEL_22;
      }
      goto LABEL_25;
    case 2:
      unint64_t v2 = 0xE200000000000000;
      if (v5 != 24945) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 3:
      unint64_t v2 = 0xE400000000000000;
      if (v5 != 1953719668) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 4:
      unint64_t v2 = 0xE500000000000000;
      if (v5 != 0x6C65766564) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 5:
      unint64_t v2 = 0xE700000000000000;
      if (v5 != 0x786F62646E6173) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 6:
      unint64_t v2 = 0xE500000000000000;
      uint64_t v3 = 0x316F6D6564;
      goto LABEL_21;
    case 7:
      unint64_t v2 = 0xE500000000000000;
      if (v5 != 0x326F6D6564) {
        goto LABEL_25;
      }
      goto LABEL_22;
    default:
LABEL_21:
      if (v5 != v3) {
        goto LABEL_25;
      }
LABEL_22:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_25:
      }
        char v7 = sub_1AFFCBCE8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1AFDEFF88(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x72614C6F65646976;
  }
  else {
    uint64_t v3 = 0x616D536F65646976;
  }
  if (v2) {
    unint64_t v4 = 0xEA00000000006C6CLL;
  }
  else {
    unint64_t v4 = 0xEA00000000006567;
  }
  if (a2) {
    uint64_t v5 = 0x72614C6F65646976;
  }
  else {
    uint64_t v5 = 0x616D536F65646976;
  }
  if (a2) {
    unint64_t v6 = 0xEA00000000006567;
  }
  else {
    unint64_t v6 = 0xEA00000000006C6CLL;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1AFFCBCE8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1AFDF0034(char a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xEF6E6F696765526DLL;
  uint64_t v3 = 0x6F72467265666E69;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v4 = 0x656C707061;
    }
    else {
      uint64_t v4 = 0x6F6F686179;
    }
    unint64_t v5 = 0xE500000000000000;
    int v6 = a2;
    if (!a2) {
      goto LABEL_10;
    }
    goto LABEL_6;
  }
  uint64_t v4 = 0x6F72467265666E69;
  unint64_t v5 = 0xEF6E6F696765526DLL;
  int v6 = a2;
  if (a2)
  {
LABEL_6:
    if (v6 == 1) {
      uint64_t v3 = 0x656C707061;
    }
    else {
      uint64_t v3 = 0x6F6F686179;
    }
    unint64_t v2 = 0xE500000000000000;
  }
LABEL_10:
  if (v4 == v3 && v5 == v2) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1AFFCBCE8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1AFDF0150(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEE00726F74636146;
  unint64_t v3 = 0x6E6F6974756C6964;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6E6F6974756C6964;
  unint64_t v6 = 0xEE00726F74636146;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x657469726F766166;
      unint64_t v6 = 0xEE0074736F6F4264;
      break;
    case 2:
      unint64_t v5 = 0x65576C61626F6C67;
      uint64_t v7 = 1952999273;
      goto LABEL_8;
    case 3:
      unint64_t v5 = 0x46676E6964646170;
      unint64_t v6 = 0xED0000726F746361;
      break;
    case 4:
      unint64_t v5 = 0xD000000000000015;
      unint64_t v6 = 0x80000001AFFEDBB0;
      break;
    case 5:
      unint64_t v6 = 0x80000001AFFEDBD0;
      unint64_t v5 = 0xD000000000000014;
      break;
    case 6:
      unint64_t v5 = 0x6573614272657375;
      uint64_t v7 = 1701734764;
LABEL_8:
      unint64_t v6 = v7 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xEE0074736F6F4264;
      if (v5 == 0x657469726F766166) {
        goto LABEL_22;
      }
      goto LABEL_24;
    case 2:
      uint64_t v8 = 0x65576C61626F6C67;
      uint64_t v9 = 1952999273;
      goto LABEL_21;
    case 3:
      unint64_t v2 = 0xED0000726F746361;
      if (v5 != 0x46676E6964646170) {
        goto LABEL_24;
      }
      goto LABEL_22;
    case 4:
      unint64_t v2 = 0x80000001AFFEDBB0;
      if (v5 != 0xD000000000000015) {
        goto LABEL_24;
      }
      goto LABEL_22;
    case 5:
      unint64_t v2 = 0x80000001AFFEDBD0;
      unint64_t v3 = 0xD000000000000014;
      goto LABEL_18;
    case 6:
      uint64_t v8 = 0x6573614272657375;
      uint64_t v9 = 1701734764;
LABEL_21:
      unint64_t v2 = v9 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
      if (v5 == v8) {
        goto LABEL_22;
      }
      goto LABEL_24;
    default:
LABEL_18:
      if (v5 != v3) {
        goto LABEL_24;
      }
LABEL_22:
      if (v6 == v2) {
        char v10 = 1;
      }
      else {
LABEL_24:
      }
        char v10 = sub_1AFFCBCE8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v10 & 1;
  }
}

uint64_t sub_1AFDF0410(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6C6F626D7973;
  unint64_t v3 = 0xE600000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6C6F626D7973;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0x80000001AFFED2E0;
      unint64_t v5 = 0xD000000000000011;
      break;
    case 2:
      unint64_t v5 = 0x4E79616C70736964;
      unint64_t v3 = 0xEB00000000656D61;
      break;
    case 3:
      unint64_t v5 = 0x5379616C70736964;
      unint64_t v6 = 0x6C6F626D79;
      goto LABEL_9;
    case 4:
      unint64_t v5 = 0x746E456B636F7473;
      uint64_t v7 = 1232696425;
      goto LABEL_8;
    case 5:
      unint64_t v5 = 0x6365727065447369;
      unint64_t v3 = 0xEC00000064657461;
      break;
    case 6:
      unint64_t v5 = 0x6D6563616C706572;
      uint64_t v7 = 1232367205;
LABEL_8:
      unint64_t v6 = v7 & 0xFFFF0000FFFFFFFFLL | 0x4400000000;
LABEL_9:
      unint64_t v3 = v6 & 0xFFFFFFFFFFFFLL | 0xED00000000000000;
      break;
    default:
      break;
  }
  unint64_t v8 = 0xE600000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v8 = 0x80000001AFFED2E0;
      if (v5 == 0xD000000000000011) {
        goto LABEL_23;
      }
      goto LABEL_25;
    case 2:
      unint64_t v8 = 0xEB00000000656D61;
      if (v5 != 0x4E79616C70736964) {
        goto LABEL_25;
      }
      goto LABEL_23;
    case 3:
      uint64_t v9 = 0x5379616C70736964;
      unint64_t v10 = 0x6C6F626D79;
      goto LABEL_22;
    case 4:
      uint64_t v9 = 0x746E456B636F7473;
      uint64_t v11 = 1232696425;
      goto LABEL_21;
    case 5:
      uint64_t v2 = 0x6365727065447369;
      unint64_t v8 = 0xEC00000064657461;
      goto LABEL_18;
    case 6:
      uint64_t v9 = 0x6D6563616C706572;
      uint64_t v11 = 1232367205;
LABEL_21:
      unint64_t v10 = v11 & 0xFFFF0000FFFFFFFFLL | 0x4400000000;
LABEL_22:
      unint64_t v8 = v10 & 0xFFFFFFFFFFFFLL | 0xED00000000000000;
      if (v5 == v9) {
        goto LABEL_23;
      }
      goto LABEL_25;
    default:
LABEL_18:
      if (v5 != v2) {
        goto LABEL_25;
      }
LABEL_23:
      if (v3 == v8) {
        char v12 = 1;
      }
      else {
LABEL_25:
      }
        char v12 = sub_1AFFCBCE8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v12 & 1;
  }
}

uint64_t sub_1AFDF06A0(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x544847494CLL;
      break;
    case 2:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1263681860;
      break;
    case 3:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x4554414C504D4554;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE500000000000000;
      if (v5 == 0x544847494CLL) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v6 = 0xE400000000000000;
      uint64_t v2 = 1263681860;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xE800000000000000;
      if (v5 == 0x4554414C504D4554) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1AFFCBCE8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1AFDF0818(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x736C72556F676F6CLL;
    }
    else {
      uint64_t v3 = 0x6C7255656D6F68;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE800000000000000;
    }
    else {
      unint64_t v4 = 0xE700000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x736C72556F676F6CLL;
      }
      else {
        uint64_t v6 = 0x6C7255656D6F68;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE800000000000000;
      }
      else {
        unint64_t v7 = 0xE700000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE400000000000000;
    uint64_t v3 = 1701667182;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE400000000000000;
  if (v3 != 1701667182)
  {
LABEL_21:
    char v8 = sub_1AFFCBCE8();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1AFDF0924(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x796144656E6FLL;
  unint64_t v3 = 0xE600000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x796144656E6FLL;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x6B656557656E6FLL;
      break;
    case 2:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x68746E6F4D656E6FLL;
      break;
    case 3:
      uint64_t v5 = 0x6E6F4D6565726874;
      unint64_t v3 = 0xEB00000000736874;
      break;
    case 4:
      uint64_t v5 = 0x68746E6F4D786973;
      goto LABEL_13;
    case 5:
      uint64_t v5 = 0x61446F5472616579;
      unint64_t v3 = 0xEA00000000006574;
      break;
    case 6:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x72616559656E6FLL;
      break;
    case 7:
      unint64_t v3 = 0xE800000000000000;
      unsigned int v6 = 1500477300;
      goto LABEL_10;
    case 8:
      uint64_t v5 = 0x7261655965766966;
LABEL_13:
      unint64_t v3 = 0xE900000000000073;
      break;
    case 9:
      unint64_t v3 = 0xE800000000000000;
      unsigned int v6 = 1500407156;
LABEL_10:
      uint64_t v5 = v6 | 0x7372616500000000;
      break;
    case 10:
      unint64_t v3 = 0xE300000000000000;
      uint64_t v5 = 7105633;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE600000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0xE700000000000000;
      if (v5 == 0x6B656557656E6FLL) {
        goto LABEL_32;
      }
      goto LABEL_36;
    case 2:
      unint64_t v7 = 0xE800000000000000;
      if (v5 != 0x68746E6F4D656E6FLL) {
        goto LABEL_36;
      }
      goto LABEL_32;
    case 3:
      unint64_t v7 = 0xEB00000000736874;
      if (v5 != 0x6E6F4D6565726874) {
        goto LABEL_36;
      }
      goto LABEL_32;
    case 4:
      uint64_t v8 = 0x68746E6F4D786973;
      goto LABEL_35;
    case 5:
      unint64_t v7 = 0xEA00000000006574;
      if (v5 != 0x61446F5472616579) {
        goto LABEL_36;
      }
      goto LABEL_32;
    case 6:
      unint64_t v7 = 0xE700000000000000;
      if (v5 != 0x72616559656E6FLL) {
        goto LABEL_36;
      }
      goto LABEL_32;
    case 7:
      unint64_t v7 = 0xE800000000000000;
      unsigned int v9 = 1500477300;
      goto LABEL_28;
    case 8:
      uint64_t v8 = 0x7261655965766966;
LABEL_35:
      unint64_t v7 = 0xE900000000000073;
      if (v5 != v8) {
        goto LABEL_36;
      }
      goto LABEL_32;
    case 9:
      unint64_t v7 = 0xE800000000000000;
      unsigned int v9 = 1500407156;
LABEL_28:
      if (v5 != (v9 | 0x7372616500000000)) {
        goto LABEL_36;
      }
      goto LABEL_32;
    case 10:
      unint64_t v7 = 0xE300000000000000;
      uint64_t v2 = 7105633;
      goto LABEL_31;
    default:
LABEL_31:
      if (v5 != v2) {
        goto LABEL_36;
      }
LABEL_32:
      if (v3 == v7) {
        char v10 = 1;
      }
      else {
LABEL_36:
      }
        char v10 = sub_1AFFCBCE8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v10 & 1;
  }
}

uint64_t sub_1AFDF0C50(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x64656C62616E65;
    }
    else {
      uint64_t v3 = 0x64656C6261736964;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE700000000000000;
    }
    else {
      unint64_t v4 = 0xE800000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x64656C62616E65;
      }
      else {
        uint64_t v6 = 0x64656C6261736964;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE700000000000000;
      }
      else {
        unint64_t v7 = 0xE800000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE700000000000000;
    uint64_t v3 = 0x746C7561666564;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE700000000000000;
  if (v3 != 0x746C7561666564)
  {
LABEL_21:
    char v8 = sub_1AFFCBCE8();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1AFDF0D6C(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xEE004449656C646ELL;
  unint64_t v3 = 0x7542746E65696C63;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v5 = 0xD000000000000018;
    }
    else {
      unint64_t v5 = 0xD000000000000020;
    }
    if (v4 == 1) {
      unint64_t v6 = 0x80000001AFFED180;
    }
    else {
      unint64_t v6 = 0x80000001AFFED1A0;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  unint64_t v5 = 0x7542746E65696C63;
  unint64_t v6 = 0xEE004449656C646ELL;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      unint64_t v3 = 0xD000000000000018;
    }
    else {
      unint64_t v3 = 0xD000000000000020;
    }
    if (v7 == 1) {
      unint64_t v2 = 0x80000001AFFED180;
    }
    else {
      unint64_t v2 = 0x80000001AFFED1A0;
    }
  }
LABEL_15:
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1AFFCBCE8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1AFDF0E88()
{
  uint64_t v1 = sub_1AFFCABC8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  int v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1AFFCAC18();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  aBlock[4] = sub_1AFDF1D98;
  uint64_t v13 = v0;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1AFDB5104;
  aBlock[3] = &block_descriptor_10;
  unsigned int v9 = _Block_copy(aBlock);
  sub_1AFFC8E48();
  sub_1AFFCABE8();
  v11[1] = MEMORY[0x1E4FBC860];
  sub_1AFDF3910((unint64_t *)&unk_1EB819C20, MEMORY[0x1E4FBCB00]);
  sub_1AFDF1DA0(0, (unint64_t *)&qword_1EB819DA0, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1AFDB56D0();
  sub_1AFFCB738();
  MEMORY[0x1B3E8D920](0, v8, v4, v9);
  _Block_release(v9);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return swift_release();
}

uint64_t sub_1AFDF1130(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RawAttributionSource(0);
  MEMORY[0x1F4188790](v2 - 8);
  int v4 = &v6[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1((void *)(a1 + 40), *(void *)(a1 + 64));
  sub_1AFF04F10((uint64_t)v6);
  sub_1AFDF3A00((uint64_t)v6, (uint64_t)v7, &qword_1EB818CA0, (uint64_t)&type metadata for SDSMetadata);
  if (*((void *)&v7[0] + 1))
  {
    long long v9 = v7[0];
    long long v10 = v7[1];
    uint64_t v11 = v8;
    sub_1AFDF1308((uint64_t *)&v9);
    long long v12 = v9;
    long long v13 = v10;
    uint64_t v14 = v11;
    long long v17 = v9;
    sub_1AFDF3958((uint64_t)&v17);
    sub_1AFDF3B94((uint64_t)&v13, (uint64_t)v16, (uint64_t (*)(void))sub_1AFDF3984);
    sub_1AFD30B60((uint64_t)v16);
    sub_1AFDF3A00((uint64_t)&v13 + 8, (uint64_t)v15, (unint64_t *)&qword_1EB819C90, MEMORY[0x1E4FBB1A0]);
    return sub_1AFDF3958((uint64_t)v15);
  }
  else
  {
    sub_1AFFC8E48();
    sub_1AFFCA048();
    swift_release();
    sub_1AFDF3910((unint64_t *)&qword_1EB818B18, (void (*)(uint64_t))type metadata accessor for RawAttributionSource);
    sub_1AFFCA068();
    return sub_1AFDF3DB8((uint64_t)v4, type metadata accessor for RawAttributionSource);
  }
}

void sub_1AFDF1308(uint64_t *a1)
{
  uint64_t v2 = (void *)v1;
  uint64_t v4 = type metadata accessor for RawAttributionSource(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (uint64_t *)((char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = (os_unfair_lock_s *)(v1 + 80);
  os_unfair_lock_lock(v7);
  sub_1AFDF14B4(v2 + 11, a1, &v10);
  os_unfair_lock_unlock(v7);
  if (v10 == 1)
  {
    __swift_project_boxed_opaque_existential_1(v2 + 5, v2[8]);
    sub_1AFF04DAC((long long *)a1);
    long long v8 = *((_OWORD *)a1 + 1);
    long long v10 = *(_OWORD *)a1;
    long long v11 = v8;
    uint64_t v12 = a1[4];
    long long v15 = v10;
    sub_1AFDF3B94((uint64_t)&v11, (uint64_t)v14, (uint64_t (*)(void))sub_1AFDF3984);
    sub_1AFDF3A00((uint64_t)&v11 + 8, (uint64_t)v13, (unint64_t *)&qword_1EB819C90, MEMORY[0x1E4FBB1A0]);
    sub_1AFD8C5F8((uint64_t)&v15);
    sub_1AFDF3A80((uint64_t)v14);
    sub_1AFD8C5F8((uint64_t)v13);
    sub_1AFDF1780(a1, v6);
    sub_1AFDF3910((unint64_t *)&qword_1EB818B18, (void (*)(uint64_t))type metadata accessor for RawAttributionSource);
    sub_1AFFCA068();
    sub_1AFDF3DB8((uint64_t)v6, type metadata accessor for RawAttributionSource);
  }
}

uint64_t sub_1AFDF14B4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v22 = a2[4];
  uint64_t v23 = a2[2];
  uint64_t v7 = *a1;
  uint64_t v8 = a1[1];
  uint64_t v10 = a1[2];
  uint64_t v9 = a1[3];
  uint64_t v11 = a1[4];
  uint64_t v20 = v6;
  uint64_t v21 = *a2;
  uint64_t v19 = a2[3];
  if (v8)
  {
    long long v12 = *((_OWORD *)a2 + 1);
    long long v31 = *(_OWORD *)a2;
    long long v32 = v12;
    uint64_t v33 = a2[4];
    *(void *)&long long v36 = v7;
    *((void *)&v36 + 1) = v8;
    *(void *)&long long v37 = v10;
    *((void *)&v37 + 1) = v9;
    uint64_t v38 = v11;
    long long v34 = v31;
    sub_1AFDF3B94((uint64_t)&v32, (uint64_t)v39, (uint64_t (*)(void))sub_1AFDF3984);
    sub_1AFDF3A00((uint64_t)&v32 + 8, (uint64_t)v35, (unint64_t *)&qword_1EB819C90, MEMORY[0x1E4FBB1A0]);
    sub_1AFD8C5F8((uint64_t)&v34);
    sub_1AFDF3A80((uint64_t)v39);
    sub_1AFD8C5F8((uint64_t)v35);
    sub_1AFD8C5F8((uint64_t)&v34);
    sub_1AFDF3A80((uint64_t)v39);
    sub_1AFD8C5F8((uint64_t)v35);
    sub_1AFD57E4C(v7, v8);
    BOOL v13 = sub_1AFF2667C(&v31, &v36);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1AFDF3958((uint64_t)&v34);
    sub_1AFD30B60((uint64_t)v39);
    sub_1AFDF3958((uint64_t)v35);
    sub_1AFDF3958((uint64_t)&v34);
    sub_1AFD30B60((uint64_t)v39);
    uint64_t result = sub_1AFDF3958((uint64_t)v35);
    uint64_t v15 = v22;
    uint64_t v16 = v23;
    if (v13)
    {
      *a3 = 0;
      return result;
    }
  }
  else
  {
    long long v17 = *((_OWORD *)a2 + 1);
    long long v36 = *(_OWORD *)a2;
    long long v37 = v17;
    uint64_t v38 = a2[4];
    long long v31 = v36;
    sub_1AFDF3B94((uint64_t)&v37, (uint64_t)&v34, (uint64_t (*)(void))sub_1AFDF3984);
    sub_1AFDF3A00((uint64_t)&v37 + 8, (uint64_t)v35, (unint64_t *)&qword_1EB819C90, MEMORY[0x1E4FBB1A0]);
    sub_1AFD8C5F8((uint64_t)&v31);
    sub_1AFDF3A80((uint64_t)&v34);
    sub_1AFD8C5F8((uint64_t)v35);
    uint64_t v18 = v6;
    uint64_t v16 = v23;
    uint64_t v15 = v22;
    sub_1AFD30C94(v5, v18);
    uint64_t v8 = 0;
  }
  sub_1AFD30C94(v7, v8);
  *a1 = v21;
  a1[1] = v20;
  a1[2] = v16;
  a1[3] = v19;
  a1[4] = v15;
  *a3 = 1;
  long long v25 = *(_OWORD *)a2;
  long long v26 = *((_OWORD *)a2 + 1);
  uint64_t v27 = a2[4];
  long long v30 = v25;
  sub_1AFDF3B94((uint64_t)&v26, (uint64_t)v29, (uint64_t (*)(void))sub_1AFDF3984);
  sub_1AFDF3A00((uint64_t)&v26 + 8, (uint64_t)v28, (unint64_t *)&qword_1EB819C90, MEMORY[0x1E4FBB1A0]);
  sub_1AFD8C5F8((uint64_t)&v30);
  sub_1AFDF3A80((uint64_t)v29);
  return sub_1AFD8C5F8((uint64_t)v28);
}

uint64_t sub_1AFDF1780@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1AFDF1DA0(0, &qword_1EB818B30, type metadata accessor for RawAttributionSourceLogo, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v33 = (uint64_t)&v31 - v6;
  sub_1AFDF1DA0(0, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0], v4);
  MEMORY[0x1F4188790](v7 - 8);
  long long v32 = (char *)&v31 - v8;
  uint64_t v9 = sub_1AFFC9A78();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v10 = sub_1AFFCAE58();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  BOOL v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v31 - v15;
  uint64_t v17 = *a1;
  uint64_t v18 = a1[1];
  uint64_t v19 = a1[4];
  uint64_t v31 = a1[3];
  if (v17 == 0x6946206F6F686159 && v18 == 0xED000065636E616ELL || (sub_1AFFCBCE8() & 1) != 0)
  {
    sub_1AFFCADF8();
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v13, v16, v10);
    if (qword_1EB819E80 != -1) {
      swift_once();
    }
    id v20 = (id)qword_1EB831AF8;
    sub_1AFFC9A28();
    uint64_t v17 = sub_1AFFCAEF8();
    uint64_t v18 = v21;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
    uint64_t v22 = (uint64_t)v32;
    if (v19) {
      goto LABEL_7;
    }
LABEL_9:
    uint64_t v23 = sub_1AFFC96E8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v22, 1, 1, v23);
    goto LABEL_10;
  }
  sub_1AFFC8E38();
  uint64_t v22 = (uint64_t)v32;
  if (!v19) {
    goto LABEL_9;
  }
LABEL_7:
  sub_1AFFC8E38();
  sub_1AFFC96C8();
  swift_bridgeObjectRelease();
LABEL_10:
  uint64_t v24 = v33;
  sub_1AFDF1E2C((long long *)a1, v33);
  uint64_t v25 = type metadata accessor for RawAttributionSource(0);
  uint64_t v26 = (uint64_t)a2 + *(int *)(v25 + 20);
  uint64_t v27 = sub_1AFFC96E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v26, 1, 1, v27);
  uint64_t v28 = (uint64_t)a2 + *(int *)(v25 + 24);
  uint64_t v29 = type metadata accessor for RawAttributionSourceLogo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v28, 1, 1, v29);
  *a2 = v17;
  a2[1] = v18;
  sub_1AFDF3AAC(v22, v26, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
  return sub_1AFDF3AAC(v24, v28, &qword_1EB818B30, type metadata accessor for RawAttributionSourceLogo);
}

uint64_t sub_1AFDF1C44()
{
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  sub_1AFDF3DB8(v0 + 80, (uint64_t (*)(void))sub_1AFDF1D10);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SDSAttributionProvider()
{
  return self;
}

void sub_1AFDF1CD4()
{
  if (MEMORY[0x1E4FBC8F0]) {
    sub_1AFDF1D10();
  }
}

void sub_1AFDF1D10()
{
  if (!qword_1E9AFAE50)
  {
    sub_1AFDF3CFC(255, &qword_1EB818CA0, (uint64_t)&type metadata for SDSMetadata, MEMORY[0x1E4FBB718]);
    unint64_t v0 = sub_1AFFCA838();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9AFAE50);
    }
  }
}

uint64_t sub_1AFDF1D8C()
{
  return sub_1AFFC8E48();
}

uint64_t sub_1AFDF1D98()
{
  return sub_1AFDF1130(v0);
}

void sub_1AFDF1DA0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1AFDF1E04(uint64_t a1, uint64_t *a2)
{
}

uint64_t sub_1AFDF1E2C@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for RawAttributionSourceLogo(0);
  uint64_t v182 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v146 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1AFDF1DA0(0, &qword_1E9AFAE60, type metadata accessor for RawAttributionSourceLogo.Unresolved, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v146 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  BOOL v13 = (char *)&v146 - v12;
  MEMORY[0x1F4188790](v14);
  v161 = (char *)&v146 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v163 = (uint64_t)&v146 - v17;
  MEMORY[0x1F4188790](v18);
  uint64_t v169 = (uint64_t)&v146 - v19;
  MEMORY[0x1F4188790](v20);
  uint64_t v178 = (uint64_t)&v146 - v21;
  uint64_t v173 = sub_1AFFC96E8();
  uint64_t v172 = *(void *)(v173 - 8);
  MEMORY[0x1F4188790](v173);
  v160 = (char *)&v146 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFDF1DA0(0, (unint64_t *)&unk_1EB818828, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant, v7);
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v159 = (uint64_t)&v146 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  uint64_t v27 = (char *)&v146 - v26;
  MEMORY[0x1F4188790](v28);
  long long v30 = (char *)&v146 - v29;
  MEMORY[0x1F4188790](v31);
  uint64_t v158 = (uint64_t)&v146 - v32;
  MEMORY[0x1F4188790](v33);
  id v35 = (char *)&v146 - v34;
  MEMORY[0x1F4188790](v36);
  v174 = (char *)&v146 - v37;
  MEMORY[0x1F4188790](v38);
  uint64_t v168 = (uint64_t)&v146 - v39;
  uint64_t v177 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
  uint64_t v180 = *(void *)(v177 - 8);
  MEMORY[0x1F4188790](v177);
  int64_t v41 = (char *)&v146 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v42);
  uint64_t v162 = (uint64_t)&v146 - v43;
  MEMORY[0x1F4188790](v44);
  uint64_t v170 = (uint64_t)&v146 - v45;
  MEMORY[0x1F4188790](v46);
  uint64_t v171 = (uint64_t)&v146 - v47;
  uint64_t v179 = type metadata accessor for RawAttributionSourceLogo.Unresolved(0);
  uint64_t v181 = *(void *)(v179 - 8);
  MEMORY[0x1F4188790](v179);
  uint64_t v175 = (uint64_t)&v146 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v49);
  uint64_t v184 = (uint64_t)&v146 - v50;
  long long v51 = *a1;
  long long v187 = a1[1];
  long long v186 = v51;
  uint64_t v188 = *((void *)a1 + 4);
  if (!(void)v187)
  {
    long long v195 = *a1;
    sub_1AFDF3958((uint64_t)&v195);
    sub_1AFDF3A00((uint64_t)&v187 + 8, (uint64_t)v193, (unint64_t *)&qword_1EB819C90, MEMORY[0x1E4FBB1A0]);
    sub_1AFDF3958((uint64_t)v193);
    uint64_t v61 = 1;
    goto LABEL_64;
  }
  v166 = a1;
  v154 = v41;
  v152 = v27;
  v148 = v13;
  v153 = v35;
  v149 = v30;
  v150 = v10;
  v151 = v6;
  uint64_t v164 = v4;
  uint64_t v165 = a2;
  uint64_t v52 = *(void *)(v187 + 16);
  uint64_t v53 = (char *)v187;
  v176 = (char *)v187;
  if (!v52)
  {
    int v155 = 0;
    uint64_t v156 = 0;
    uint64_t v157 = 0;
    uint64_t v183 = 0;
    uint64_t v56 = 0;
LABEL_21:
    uint64_t v68 = 0;
    uint64_t v65 = 0;
    uint64_t v66 = 0;
    char v67 = 0;
    goto LABEL_26;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v54 = (unsigned __int8 *)(v53 + 64);
  while (2)
  {
    uint64_t v56 = *((void *)v54 - 4);
    uint64_t v55 = *((void *)v54 - 3);
    uint64_t v57 = *(v54 - 16);
    uint64_t v58 = *((void *)v54 - 1);
    int v59 = *v54;
    switch(*(v54 - 16))
    {
      case 1u:
        sub_1AFFC8E38();
        uint64_t v53 = v176;
        swift_bridgeObjectRelease();
        goto LABEL_12;
      default:
        char v60 = sub_1AFFCBCE8();
        sub_1AFFC8E38();
        swift_bridgeObjectRelease();
        if ((v60 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          v54 += 40;
          if (!--v52)
          {
            uint64_t v53 = v176;
            swift_bridgeObjectRelease_n();
            uint64_t v56 = 0;
            uint64_t v55 = 0;
            uint64_t v57 = 0;
            uint64_t v58 = 0;
            int v59 = 0;
            goto LABEL_13;
          }
          continue;
        }
        uint64_t v53 = v176;
LABEL_12:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_13:
        uint64_t v183 = v55;
        int v155 = v59;
        uint64_t v156 = v58;
        uint64_t v157 = v57;
        uint64_t v185 = *((void *)v53 + 2);
        if (!v185)
        {
          uint64_t v52 = 0;
          goto LABEL_21;
        }
        uint64_t v167 = v56;
        swift_bridgeObjectRetain_n();
        uint64_t v62 = 0;
        uint64_t v63 = v53 + 64;
        while (2)
        {
          uint64_t v64 = v62 + 1;
          if (__OFADD__(v62, 1))
          {
            __break(1u);
            JUMPOUT(0x1AFDF3600);
          }
          uint64_t v52 = *((void *)v63 - 4);
          uint64_t v65 = *(v63 - 16);
          uint64_t v66 = *((void *)v63 - 1);
          char v67 = *v63;
          switch(*(v63 - 16))
          {
            case 2:
              uint64_t v68 = *((void *)v63 - 3);
              sub_1AFFC8E38();
              uint64_t v53 = v176;
              swift_bridgeObjectRelease();
              goto LABEL_24;
            default:
              uint64_t v68 = *((void *)v63 - 3);
              char v69 = sub_1AFFCBCE8();
              sub_1AFFC8E38();
              swift_bridgeObjectRelease();
              if ((v69 & 1) == 0)
              {
                swift_bridgeObjectRelease();
                ++v62;
                v63 += 40;
                if (v64 == v185)
                {
                  uint64_t v53 = v176;
                  swift_bridgeObjectRelease_n();
                  uint64_t v52 = 0;
                  uint64_t v68 = 0;
                  uint64_t v65 = 0;
                  uint64_t v66 = 0;
                  char v67 = 0;
                  goto LABEL_25;
                }
                continue;
              }
              uint64_t v53 = v176;
LABEL_24:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
LABEL_25:
              uint64_t v56 = v167;
LABEL_26:
              uint64_t v147 = v52;
              v193[0] = v52;
              v193[1] = v68;
              uint64_t v185 = v68;
              v193[2] = v65;
              v193[3] = v66;
              char v194 = v67;
              uint64_t v70 = *((void *)v53 + 2);
              if (v70)
              {
                uint64_t v167 = v56;
                swift_bridgeObjectRetain_n();
                uint64_t v71 = v53 + 64;
                while (1)
                {
                  uint64_t v73 = *((void *)v71 - 4);
                  uint64_t v72 = *((void *)v71 - 3);
                  uint64_t v74 = *(v71 - 16);
                  uint64_t v75 = *((void *)v71 - 1);
                  char v76 = *v71;
                  switch(*(v71 - 16))
                  {
                    case 3:
                      sub_1AFFC8E38();
                      swift_bridgeObjectRelease();
                      goto LABEL_36;
                    default:
                      char v77 = sub_1AFFCBCE8();
                      sub_1AFFC8E38();
                      swift_bridgeObjectRelease();
                      if (v77)
                      {
LABEL_36:
                        uint64_t v56 = v167;
                        objc_super v78 = v166;
                        uint64_t v79 = v183;
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        goto LABEL_37;
                      }
                      swift_bridgeObjectRelease();
                      v71 += 40;
                      if (!--v70)
                      {
                        swift_bridgeObjectRelease_n();
                        uint64_t v73 = 0;
                        uint64_t v72 = 0;
                        uint64_t v74 = 0;
                        uint64_t v75 = 0;
                        char v76 = 0;
                        uint64_t v56 = v167;
                        goto LABEL_33;
                      }
                      break;
                  }
                }
              }
              uint64_t v73 = 0;
              uint64_t v72 = 0;
              uint64_t v74 = 0;
              uint64_t v75 = 0;
              char v76 = 0;
LABEL_33:
              objc_super v78 = v166;
              uint64_t v79 = v183;
LABEL_37:
              v191[0] = v73;
              v191[1] = v72;
              v191[2] = v74;
              v191[3] = v75;
              char v192 = v76;
              long long v189 = *v78;
              sub_1AFDF3958((uint64_t)&v189);
              swift_bridgeObjectRelease();
              sub_1AFDF3A00((uint64_t)&v187 + 8, (uint64_t)v190, (unint64_t *)&qword_1EB819C90, MEMORY[0x1E4FBB1A0]);
              sub_1AFDF3958((uint64_t)v190);
              if (!v79)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                goto LABEL_63;
              }
              uint64_t v80 = v184;
              sub_1AFDD2884(v184);
              uint64_t v81 = v171;
              sub_1AFDF3B2C(v80, v171, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
              uint64_t v82 = sub_1AFFC9608();
              uint64_t v84 = v83;
              uint64_t v85 = v172;
              id v86 = *(void (**)(uint64_t, uint64_t))(v172 + 8);
              uint64_t v87 = v81;
              uint64_t v88 = v173;
              v86(v87, v173);
              if (v82 == v56 && v183 == v84)
              {
                swift_bridgeObjectRelease();
                uint64_t v89 = v175;
                sub_1AFDF3B2C(v184, v175, type metadata accessor for RawAttributionSourceLogo.Unresolved);
                uint64_t v90 = v179;
                uint64_t v91 = v177;
                goto LABEL_43;
              }
              char v92 = sub_1AFFCBCE8();
              swift_bridgeObjectRelease();
              uint64_t v89 = v175;
              sub_1AFDF3B2C(v184, v175, type metadata accessor for RawAttributionSourceLogo.Unresolved);
              uint64_t v90 = v179;
              uint64_t v91 = v177;
              if ((v92 & 1) == 0)
              {
                sub_1AFDF3DB8(v89, type metadata accessor for RawAttributionSourceLogo.Unresolved);
LABEL_56:
                uint64_t v99 = v178;
                uint64_t v100 = v181;
                goto LABEL_57;
              }
LABEL_43:
              uint64_t v93 = v168;
              sub_1AFDF3C7C(v89 + *(int *)(v90 + 20), v168, (unint64_t *)&unk_1EB818828, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v180 + 48))(v93, 1, v91) == 1)
              {
                sub_1AFDF3D48(v93, (unint64_t *)&unk_1EB818828, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
                BOOL v94 = v185 == 0;
                goto LABEL_52;
              }
              uint64_t v95 = v160;
              (*(void (**)(char *, uint64_t, uint64_t))(v85 + 16))(v160, v93, v88);
              sub_1AFDF3DB8(v93, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
              uint64_t v96 = sub_1AFFC9608();
              uint64_t v98 = v97;
              v86((uint64_t)v95, v88);
              BOOL v94 = v185 == 0;
              if (!v98)
              {
                uint64_t v89 = v175;
LABEL_52:
                sub_1AFFC8E38();
                sub_1AFDF3DB8(v89, type metadata accessor for RawAttributionSourceLogo.Unresolved);
                uint64_t v99 = v178;
                uint64_t v100 = v181;
                if (!v94)
                {
                  swift_bridgeObjectRelease();
                  goto LABEL_57;
                }
                goto LABEL_53;
              }
              if (!v185)
              {
                sub_1AFDF3DB8(v175, type metadata accessor for RawAttributionSourceLogo.Unresolved);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                goto LABEL_56;
              }
              uint64_t v99 = v178;
              uint64_t v100 = v181;
              uint64_t v101 = v175;
              if (v96 == v147 && v185 == v98)
              {
                sub_1AFDF3DB8(v175, type metadata accessor for RawAttributionSourceLogo.Unresolved);
                swift_bridgeObjectRelease();
                goto LABEL_53;
              }
              char v145 = sub_1AFFCBCE8();
              sub_1AFDF3DB8(v101, type metadata accessor for RawAttributionSourceLogo.Unresolved);
              swift_bridgeObjectRelease();
              if (v145)
              {
LABEL_53:
                sub_1AFDF3B2C(v184, v99, type metadata accessor for RawAttributionSourceLogo.Unresolved);
                (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v100 + 56))(v99, 0, 1, v90);
                goto LABEL_58;
              }
LABEL_57:
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v100 + 56))(v99, 1, 1, v90);
LABEL_58:
              uint64_t v102 = v169;
              sub_1AFDF3C7C(v99, v169, &qword_1E9AFAE60, type metadata accessor for RawAttributionSourceLogo.Unresolved);
              objc_super v105 = *(char **)(v100 + 48);
              uint64_t v104 = v100 + 48;
              v103 = v105;
              unsigned int v106 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v105)(v102, 1, v90);
              if (v106 == 1)
              {
                sub_1AFDF3D48(v102, &qword_1E9AFAE60, type metadata accessor for RawAttributionSourceLogo.Unresolved);
                double v107 = 0.0;
              }
              else
              {
                uint64_t v108 = v56;
                uint64_t v109 = v162;
                sub_1AFDF3B2C(v102, v162, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
                sub_1AFDF3DB8(v102, type metadata accessor for RawAttributionSourceLogo.Unresolved);
                double v107 = *(double *)(v109 + *(int *)(v91 + 20));
                uint64_t v110 = v109;
                uint64_t v56 = v108;
                sub_1AFDF3DB8(v110, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
              }
              uint64_t v111 = v91;
              *(void *)&long long v195 = v56;
              *((void *)&v195 + 1) = v183;
              uint64_t v196 = v157;
              uint64_t v197 = v156;
              char v198 = v155;
              objc_super v112 = v174;
              sub_1AFDF3630((uint64_t)&v195, v107, v106 == 1, v174);
              objc_super v113 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v180 + 48);
              if (v113((uint64_t)v112, 1, v111) != 1)
              {
                uint64_t v116 = v170;
                sub_1AFDF3B94((uint64_t)v112, v170, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
                sub_1AFDF3B2C(v116, (uint64_t)v154, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
                uint64_t v117 = v163;
                sub_1AFDF3C7C(v99, v163, &qword_1E9AFAE60, type metadata accessor for RawAttributionSourceLogo.Unresolved);
                unsigned int v118 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v103)(v117, 1, v90);
                uint64_t v114 = v182;
                uint64_t v181 = v104;
                v176 = v103;
                if (v118 == 1)
                {
                  v119 = &qword_1E9AFAE60;
                  v120 = type metadata accessor for RawAttributionSourceLogo.Unresolved;
                  uint64_t v121 = v117;
                }
                else
                {
                  uint64_t v122 = v117 + *(int *)(v90 + 20);
                  uint64_t v123 = v158;
                  sub_1AFDF3C7C(v122, v158, (unint64_t *)&unk_1EB818828, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
                  sub_1AFDF3DB8(v117, type metadata accessor for RawAttributionSourceLogo.Unresolved);
                  if (v113(v123, 1, v111) != 1)
                  {
                    double v124 = *(double *)(v123 + *(int *)(v111 + 20));
                    sub_1AFDF3DB8(v123, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
                    char v125 = 0;
LABEL_72:
                    uint64_t v126 = (uint64_t)v151;
                    uint64_t v127 = (uint64_t)v150;
                    uint64_t v128 = (uint64_t)v149;
                    uint64_t v129 = (uint64_t)v148;
                    uint64_t v130 = (uint64_t)v161;
                    sub_1AFDF3630((uint64_t)v193, v124, v125, v153);
                    sub_1AFDF3C7C(v178, v130, &qword_1E9AFAE60, type metadata accessor for RawAttributionSourceLogo.Unresolved);
                    uint64_t v131 = v179;
                    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v176)(v130, 1, v179) == 1)
                    {
                      v132 = &qword_1E9AFAE60;
                      v133 = type metadata accessor for RawAttributionSourceLogo.Unresolved;
                      uint64_t v134 = v130;
                    }
                    else
                    {
                      uint64_t v135 = v159;
                      sub_1AFDF3C7C(v130 + *(int *)(v131 + 24), v159, (unint64_t *)&unk_1EB818828, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
                      sub_1AFDF3DB8(v130, type metadata accessor for RawAttributionSourceLogo.Unresolved);
                      uint64_t v136 = v177;
                      if (v113(v135, 1, v177) != 1)
                      {
                        double v137 = *(double *)(v135 + *(int *)(v136 + 20));
                        sub_1AFDF3DB8(v135, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
                        char v138 = 0;
                        goto LABEL_78;
                      }
                      v132 = (unint64_t *)&unk_1EB818828;
                      v133 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant;
                      uint64_t v134 = v135;
                    }
                    sub_1AFDF3D48(v134, v132, v133);
                    double v137 = 0.0;
                    char v138 = 1;
LABEL_78:
                    v139 = v152;
                    sub_1AFDF3630((uint64_t)v191, v137, v138, v152);
                    sub_1AFDF3DB8(v170, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
                    sub_1AFDF3DB8(v184, type metadata accessor for RawAttributionSourceLogo.Unresolved);
                    sub_1AFDF3BFC(v178, v129, &qword_1E9AFAE60, type metadata accessor for RawAttributionSourceLogo.Unresolved);
                    uint64_t v140 = v177;
                    if (v113((uint64_t)v139, 1, v177) == 1)
                    {
                      sub_1AFDF3BFC(v129, v127, &qword_1E9AFAE60, type metadata accessor for RawAttributionSourceLogo.Unresolved);
                      uint64_t v141 = v179;
                      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v176)(v127, 1, v179) == 1)
                      {
                        sub_1AFDF3D48(v127, &qword_1E9AFAE60, type metadata accessor for RawAttributionSourceLogo.Unresolved);
                        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v180 + 56))(v128, 1, 1, v177);
                      }
                      else
                      {
                        sub_1AFDF3C7C(v127 + *(int *)(v141 + 24), v128, (unint64_t *)&unk_1EB818828, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
                        sub_1AFDF3DB8(v127, type metadata accessor for RawAttributionSourceLogo.Unresolved);
                      }
                      a2 = v165;
                      uint64_t v4 = v164;
                      uint64_t v142 = (uint64_t)v154;
                      uint64_t v143 = v141;
                      v144 = v153;
                      sub_1AFDF3D48((uint64_t)v152, (unint64_t *)&unk_1EB818828, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
                    }
                    else
                    {
                      sub_1AFDF3D48(v129, &qword_1E9AFAE60, type metadata accessor for RawAttributionSourceLogo.Unresolved);
                      sub_1AFDF3B94((uint64_t)v139, v128, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
                      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v180 + 56))(v128, 0, 1, v140);
                      a2 = v165;
                      uint64_t v4 = v164;
                      uint64_t v142 = (uint64_t)v154;
                      uint64_t v143 = v179;
                      v144 = v153;
                    }
                    sub_1AFDF3B94(v142, v126, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
                    sub_1AFDF3BFC((uint64_t)v144, v126 + *(int *)(v143 + 20), (unint64_t *)&unk_1EB818828, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
                    sub_1AFDF3BFC(v128, v126 + *(int *)(v143 + 24), (unint64_t *)&unk_1EB818828, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
                    swift_storeEnumTagMultiPayload();
                    sub_1AFDF3B94(v126, a2, type metadata accessor for RawAttributionSourceLogo);
                    uint64_t v61 = 0;
                    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v114 + 56))(a2, v61, 1, v4);
                  }
                  v119 = (unint64_t *)&unk_1EB818828;
                  v120 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant;
                  uint64_t v121 = v123;
                }
                sub_1AFDF3D48(v121, v119, v120);
                double v124 = 0.0;
                char v125 = 1;
                goto LABEL_72;
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_1AFDF3D48(v99, &qword_1E9AFAE60, type metadata accessor for RawAttributionSourceLogo.Unresolved);
              sub_1AFDF3DB8(v184, type metadata accessor for RawAttributionSourceLogo.Unresolved);
              sub_1AFDF3D48((uint64_t)v112, (unint64_t *)&unk_1EB818828, type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
LABEL_63:
              uint64_t v61 = 1;
              a2 = v165;
              uint64_t v4 = v164;
LABEL_64:
              uint64_t v114 = v182;
              return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v114 + 56))(a2, v61, 1, v4);
          }
        }
    }
  }
}

uint64_t sub_1AFDF3630@<X0>(uint64_t a1@<X0>, double a2@<X1>, char a3@<W2>, char *a4@<X8>)
{
  sub_1AFDF1DA0(0, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v24 - v9;
  uint64_t v11 = sub_1AFFC96E8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)v24 - v16;
  sub_1AFDF3A00(a1, (uint64_t)v24, &qword_1E9AFAE68, (uint64_t)&type metadata for SDSMetadata.SourceLogo);
  if (!v24[1]) {
    goto LABEL_4;
  }
  double v18 = *(double *)&v24[3];
  char v26 = v25;
  sub_1AFFC96C8();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1AFDF3958(a1);
    sub_1AFDF3D48((uint64_t)v10, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
LABEL_4:
    uint64_t v19 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(a4, 1, 1, v19);
  }
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v21(v17, v10, v11);
  v21(v14, v17, v11);
  sub_1AFDF3958(a1);
  double v22 = a2;
  if (a3) {
    double v22 = 0.0;
  }
  if (v26) {
    double v18 = v22;
  }
  v21(a4, v14, v11);
  uint64_t v23 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
  *(double *)&a4[*(int *)(v23 + 20)] = v18;
  return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(a4, 0, 1, v23);
}

uint64_t sub_1AFDF3910(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AFDF3958(uint64_t a1)
{
  return a1;
}

void sub_1AFDF3984()
{
  if (!qword_1E9AFAE58)
  {
    sub_1AFDF3CFC(255, (unint64_t *)&qword_1EB819CB8, (uint64_t)&type metadata for SDSMetadata.SourceLogo, MEMORY[0x1E4FBB320]);
    unint64_t v0 = sub_1AFFCB658();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9AFAE58);
    }
  }
}

uint64_t sub_1AFDF3A00(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1AFDF3CFC(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1AFDF3A80(uint64_t a1)
{
  return a1;
}

uint64_t sub_1AFDF3AAC(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1AFDF1DA0(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a2, a1, v6);
  return a2;
}

uint64_t sub_1AFDF3B2C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1AFDF3B94(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1AFDF3BFC(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1AFDF1DA0(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1AFDF3C7C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1AFDF1DA0(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

void sub_1AFDF3CFC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1AFDF3D48(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1AFDF1DA0(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1AFDF3DB8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1AFDF3E18(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

ValueMetadata *type metadata accessor for UnimplementedManagedConfigurationService()
{
  return &type metadata for UnimplementedManagedConfigurationService;
}

uint64_t sub_1AFDF3E3C()
{
  return 0;
}

uint64_t sub_1AFDF3E70(void *a1, uint64_t a2)
{
  sub_1AFDF494C(0, &qword_1E9AFAE98, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v10 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDF4894();
  sub_1AFFCBE78();
  v10[1] = a2;
  sub_1AFDF48E8();
  sub_1AFDF49B0(&qword_1E9AFAEA0);
  sub_1AFFCBC58();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1AFDF3FF4()
{
  return 0x676E697070616DLL;
}

uint64_t sub_1AFDF400C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x676E697070616DLL && a2 == 0xE700000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1AFFCBCE8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1AFDF40A4(uint64_t a1)
{
  unint64_t v2 = sub_1AFDF4894();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFDF40E0(uint64_t a1)
{
  unint64_t v2 = sub_1AFDF4894();

  return MEMORY[0x1F41862B0](a1, v2);
}

void *sub_1AFDF411C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1AFDF46D0(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1AFDF4148(void *a1)
{
  return sub_1AFDF3E70(a1, *v1);
}

uint64_t *sub_1AFDF4164@<X0>(uint64_t *result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v3 = *(void *)(a2 + 16);
  if (!v3)
  {
    uint64_t v6 = (void *)MEMORY[0x1E4FBC868];
LABEL_21:
    *a3 = v6;
    return result;
  }
  long long v30 = a3;
  uint64_t v5 = *result;
  sub_1AFFC8E38();
  uint64_t v6 = (void *)MEMORY[0x1E4FBC868];
  char v7 = (uint64_t *)(a2 + 40);
  uint64_t v31 = v5;
  while (1)
  {
    if (!*(void *)(v5 + 16)) {
      goto LABEL_4;
    }
    uint64_t v8 = *(v7 - 1);
    uint64_t v9 = *v7;
    swift_bridgeObjectRetain_n();
    unint64_t v10 = sub_1AFD79CC8(v8, v9);
    if (v11) {
      break;
    }
    swift_bridgeObjectRelease_n();
LABEL_4:
    v7 += 2;
    if (!--v3)
    {
      uint64_t result = (uint64_t *)swift_bridgeObjectRelease();
      a3 = v30;
      goto LABEL_21;
    }
  }
  uint64_t v12 = (uint64_t *)(*(void *)(v5 + 56) + 16 * v10);
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  sub_1AFDF461C(0, (unint64_t *)&qword_1EB81A0E0, MEMORY[0x1E4FBBE00]);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1AFFD05F0;
  *(void *)(v15 + 32) = v14;
  *(void *)(v15 + 40) = v13;
  sub_1AFFC8E38();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v32 = v8;
  unint64_t v18 = sub_1AFD79CC8(v8, v9);
  uint64_t v19 = v6[2];
  BOOL v20 = (v17 & 1) == 0;
  uint64_t v21 = v19 + v20;
  if (!__OFADD__(v19, v20))
  {
    char v22 = v17;
    if (v6[3] >= v21)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if ((v17 & 1) == 0) {
          goto LABEL_16;
        }
      }
      else
      {
        sub_1AFEB8BB8();
        if ((v22 & 1) == 0) {
          goto LABEL_16;
        }
      }
    }
    else
    {
      sub_1AFEB3340(v21, isUniquelyReferenced_nonNull_native);
      unint64_t v23 = sub_1AFD79CC8(v32, v9);
      if ((v22 & 1) != (v24 & 1)) {
        goto LABEL_24;
      }
      unint64_t v18 = v23;
      if ((v22 & 1) == 0)
      {
LABEL_16:
        v6[(v18 >> 6) + 8] |= 1 << v18;
        char v26 = (uint64_t *)(v6[6] + 16 * v18);
        *char v26 = v32;
        v26[1] = v9;
        *(void *)(v6[7] + 8 * v18) = v15;
        uint64_t v27 = v6[2];
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28) {
          goto LABEL_23;
        }
        v6[2] = v29;
        sub_1AFFC8E38();
        goto LABEL_18;
      }
    }
    uint64_t v25 = v6[7];
    swift_bridgeObjectRelease();
    *(void *)(v25 + 8 * v18) = v15;
LABEL_18:
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    uint64_t v5 = v31;
    goto LABEL_4;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = (uint64_t *)sub_1AFFCBD68();
  __break(1u);
  return result;
}

uint64_t sub_1AFDF43E4()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TestFeedLookupService()
{
  return self;
}

uint64_t sub_1AFDF4440(uint64_t a1)
{
  sub_1AFFCA7C8();
  *(void *)(swift_allocObject() + 16) = a1;
  sub_1AFFC8E38();
  uint64_t v2 = (void *)sub_1AFFCA5E8();
  sub_1AFDF4598();
  uint64_t v3 = sub_1AFFCA678();
  swift_release();
  swift_release();

  return v3;
}

uint64_t sub_1AFDF4504()
{
  return sub_1AFFCA008();
}

uint64_t sub_1AFDF4544()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t *sub_1AFDF457C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1AFDF4164(a1, *(void *)(v2 + 16), a2);
}

void sub_1AFDF4598()
{
  if (!qword_1EB817EB8)
  {
    sub_1AFDF461C(255, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB320]);
    unint64_t v0 = sub_1AFFCAD18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB817EB8);
    }
  }
}

void sub_1AFDF461C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, void))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x1E4FBB1A0]);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_1AFDF466C()
{
  unint64_t result = qword_1E9AFAE70;
  if (!qword_1E9AFAE70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFAE70);
  }
  return result;
}

ValueMetadata *type metadata accessor for TestFeedLookupService.TestData()
{
  return &type metadata for TestFeedLookupService.TestData;
}

void *sub_1AFDF46D0(void *a1)
{
  sub_1AFDF494C(0, &qword_1E9AFAE78, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v7 = (char *)v10 - v6;
  uint64_t v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDF4894();
  sub_1AFFCBE68();
  if (!v1)
  {
    sub_1AFDF48E8();
    sub_1AFDF49B0(&qword_1E9AFAE90);
    sub_1AFFCBB58();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v8 = (void *)v10[1];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v8;
}

unint64_t sub_1AFDF4894()
{
  unint64_t result = qword_1E9AFAE80;
  if (!qword_1E9AFAE80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFAE80);
  }
  return result;
}

void sub_1AFDF48E8()
{
  if (!qword_1E9AFAE88)
  {
    unint64_t v0 = sub_1AFFCAD18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9AFAE88);
    }
  }
}

void sub_1AFDF494C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1AFDF4894();
    unint64_t v7 = a3(a1, &type metadata for TestFeedLookupService.TestData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1AFDF49B0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1AFDF48E8();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TestFeedLookupService.TestData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1AFDF4AACLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for TestFeedLookupService.TestData.CodingKeys()
{
  return &type metadata for TestFeedLookupService.TestData.CodingKeys;
}

unint64_t sub_1AFDF4AE8()
{
  unint64_t result = qword_1E9AFAEA8;
  if (!qword_1E9AFAEA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFAEA8);
  }
  return result;
}

unint64_t sub_1AFDF4B40()
{
  unint64_t result = qword_1E9AFAEB0;
  if (!qword_1E9AFAEB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFAEB0);
  }
  return result;
}

unint64_t sub_1AFDF4B98()
{
  unint64_t result = qword_1E9AFAEB8;
  if (!qword_1E9AFAEB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFAEB8);
  }
  return result;
}

uint64_t sub_1AFDF4BEC(unsigned __int8 *a1, char *a2)
{
  return sub_1AFDEE2A4(*a1, *a2);
}

uint64_t sub_1AFDF4BF8()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFDF4CDC()
{
  sub_1AFFCAF68();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFDF4DA8()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFDF4E88@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFDF6404();
  *a1 = result;
  return result;
}

void sub_1AFDF4EB8(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xEB00000000617465;
  uint64_t v3 = 0x6D2D7365756C6176;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEE006174656D2D65;
      uint64_t v3 = 0x636E657265666572;
      goto LABEL_3;
    case 2:
      *a1 = 0x736569726573;
      a1[1] = 0xE600000000000000;
      break;
    case 3:
      *a1 = 1635018093;
      a1[1] = 0xE400000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1AFDF4F5C()
{
  uint64_t result = 0x6D2D7365756C6176;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x636E657265666572;
      break;
    case 2:
      uint64_t result = 0x736569726573;
      break;
    case 3:
      uint64_t result = 1635018093;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1AFDF4FF4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFDF6404();
  *a1 = result;
  return result;
}

uint64_t sub_1AFDF501C(uint64_t a1)
{
  unint64_t v2 = sub_1AFDF7DE8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFDF5058(uint64_t a1)
{
  unint64_t v2 = sub_1AFDF7DE8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFDF5094()
{
  return sub_1AFDF5A00();
}

uint64_t sub_1AFDF50AC()
{
  return sub_1AFFCAF68();
}

uint64_t sub_1AFDF50C4()
{
  return sub_1AFDF5A68();
}

uint64_t sub_1AFDF50DC@<X0>(BOOL *a1@<X8>)
{
  return sub_1AFDF5AC0(a1);
}

void sub_1AFDF50E8(void *a1@<X8>)
{
  *a1 = 0x65727574616566;
  a1[1] = 0xE700000000000000;
}

uint64_t sub_1AFDF5104()
{
  return 0x65727574616566;
}

uint64_t sub_1AFDF511C@<X0>(BOOL *a1@<X8>)
{
  return sub_1AFDF5B38(a1);
}

uint64_t sub_1AFDF5128(uint64_t a1)
{
  unint64_t v2 = sub_1AFDF7D94();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFDF5164(uint64_t a1)
{
  unint64_t v2 = sub_1AFDF7D94();

  return MEMORY[0x1F41862B0](a1, v2);
}

char *sub_1AFDF51A0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1AFDF6450(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(unsigned char *)(a2 + 16) = v6 & 1;
    *(void *)(a2 + 24) = v7;
  }
  return result;
}

uint64_t sub_1AFDF51D8(unsigned __int8 *a1, char *a2)
{
  return sub_1AFDEE120(*a1, *a2);
}

uint64_t sub_1AFDF51E4()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFDF52B8()
{
  sub_1AFFCAF68();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFDF5374()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFDF5444@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFDF6914();
  *a1 = result;
  return result;
}

void sub_1AFDF5474(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE400000000000000;
  uint64_t v3 = 1852141679;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE500000000000000;
      uint64_t v3 = 0x65736F6C63;
      goto LABEL_3;
    case 2:
      *a1 = 1751607656;
      a1[1] = 0xE400000000000000;
      break;
    case 3:
      *a1 = 7827308;
      a1[1] = 0xE300000000000000;
      break;
    case 4:
      *a1 = 0x656D756C6F76;
      a1[1] = 0xE600000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

ValueMetadata *type metadata accessor for YahooChartResponse()
{
  return &type metadata for YahooChartResponse;
}

uint64_t sub_1AFDF551C()
{
  return sub_1AFFCB178();
}

uint64_t sub_1AFDF557C(char *a1, char *a2)
{
  return sub_1AFDEE08C(*a1, *a2);
}

uint64_t sub_1AFDF5588()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFDF55F8()
{
  sub_1AFFCAF68();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFDF5654()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFDF56C0@<X0>(char *a1@<X8>)
{
  return sub_1AFDF621C(a1);
}

void sub_1AFDF56CC(uint64_t *a1@<X8>)
{
  uint64_t v2 = 6710642;
  if (*v1) {
    uint64_t v2 = 118;
  }
  unint64_t v3 = 0xE300000000000000;
  if (*v1) {
    unint64_t v3 = 0xE100000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1AFDF56F8()
{
  if (*v0) {
    return 118;
  }
  else {
    return 6710642;
  }
}

uint64_t sub_1AFDF5720@<X0>(char *a1@<X8>)
{
  return sub_1AFDF6300(a1);
}

uint64_t sub_1AFDF572C(uint64_t a1)
{
  unint64_t v2 = sub_1AFDF8CB8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFDF5768(uint64_t a1)
{
  unint64_t v2 = sub_1AFDF8CB8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFDF57A4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1AFDF6960(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_1AFDF57D4()
{
  return sub_1AFDF5A00();
}

uint64_t sub_1AFDF57E0()
{
  return sub_1AFFCAF68();
}

uint64_t sub_1AFDF57EC()
{
  return sub_1AFDF5A68();
}

uint64_t sub_1AFDF57F8@<X0>(BOOL *a1@<X8>)
{
  return sub_1AFDF5AC0(a1);
}

void sub_1AFDF5804(void *a1@<X8>)
{
  *a1 = 112;
  a1[1] = 0xE100000000000000;
}

uint64_t sub_1AFDF5814()
{
  return 112;
}

uint64_t sub_1AFDF5820@<X0>(BOOL *a1@<X8>)
{
  return sub_1AFDF5B38(a1);
}

uint64_t sub_1AFDF582C(uint64_t a1)
{
  unint64_t v2 = sub_1AFDF8428();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFDF5868(uint64_t a1)
{
  unint64_t v2 = sub_1AFDF8428();

  return MEMORY[0x1F41862B0](a1, v2);
}

void *sub_1AFDF58A4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1AFDF6BCC(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1AFDF58D0()
{
  return sub_1AFDF5A00();
}

uint64_t sub_1AFDF58E4()
{
  return sub_1AFFCAF68();
}

uint64_t sub_1AFDF58F8()
{
  return sub_1AFDF5A68();
}

uint64_t sub_1AFDF590C@<X0>(BOOL *a1@<X8>)
{
  return sub_1AFDF5AC0(a1);
}

void sub_1AFDF5918(void *a1@<X8>)
{
  *a1 = 0x65756C6176;
  a1[1] = 0xE500000000000000;
}

uint64_t sub_1AFDF5930()
{
  return 0x65756C6176;
}

uint64_t sub_1AFDF5944@<X0>(BOOL *a1@<X8>)
{
  return sub_1AFDF5B38(a1);
}

uint64_t sub_1AFDF5950(uint64_t a1)
{
  unint64_t v2 = sub_1AFDF8380();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFDF598C(uint64_t a1)
{
  unint64_t v2 = sub_1AFDF8380();

  return MEMORY[0x1F41862B0](a1, v2);
}

void *sub_1AFDF59C8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1AFDF6E6C(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1AFDF59F4()
{
  return sub_1AFDF5A00();
}

uint64_t sub_1AFDF5A00()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFDF5A50()
{
  return sub_1AFFCAF68();
}

uint64_t sub_1AFDF5A5C()
{
  return sub_1AFDF5A68();
}

uint64_t sub_1AFDF5A68()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFDF5AB4@<X0>(BOOL *a1@<X8>)
{
  return sub_1AFDF5AC0(a1);
}

uint64_t sub_1AFDF5AC0@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1AFFCBA78();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1AFDF5B10(void *a1@<X8>)
{
  *a1 = 25705;
  a1[1] = 0xE200000000000000;
}

uint64_t sub_1AFDF5B20()
{
  return 25705;
}

uint64_t sub_1AFDF5B2C@<X0>(BOOL *a1@<X8>)
{
  return sub_1AFDF5B38(a1);
}

uint64_t sub_1AFDF5B38@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1AFFCBA78();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1AFDF5B8C(uint64_t a1)
{
  unint64_t v2 = sub_1AFDF8BB0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFDF5BC8(uint64_t a1)
{
  unint64_t v2 = sub_1AFDF8BB0();

  return MEMORY[0x1F41862B0](a1, v2);
}

unint64_t sub_1AFDF5C04@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1AFDF706C(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1AFDF5C30(char *a1, char *a2)
{
  return sub_1AFDEDFE8(*a1, *a2);
}

uint64_t sub_1AFDF5C3C()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFDF5CBC()
{
  sub_1AFFCAF68();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFDF5D28()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFDF5DA4@<X0>(char *a1@<X8>)
{
  return sub_1AFDF621C(a1);
}

void sub_1AFDF5DB0(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1702125892;
  if (!*v1) {
    uint64_t v2 = 0x6D617473656D6954;
  }
  unint64_t v3 = 0xE900000000000070;
  if (*v1) {
    unint64_t v3 = 0xE400000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1AFDF5DEC()
{
  return sub_1AFFCB178();
}

uint64_t sub_1AFDF5E4C()
{
  return 1701869940;
}

uint64_t sub_1AFDF5E5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1AFFCBCE8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1AFDF5EE4(uint64_t a1)
{
  unint64_t v2 = sub_1AFDF84D0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFDF5F20(uint64_t a1)
{
  unint64_t v2 = sub_1AFDF84D0();

  return MEMORY[0x1F41862B0](a1, v2);
}

unint64_t sub_1AFDF5F5C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1AFDF7214(a1);
  if (!v2) {
    *a2 = result & 1;
  }
  return result;
}

uint64_t sub_1AFDF5F8C()
{
  if (*v0) {
    return 0x746E65746E6F63;
  }
  else {
    return 1701667182;
  }
}

uint64_t sub_1AFDF5FC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1AFDF73BC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AFDF5FE8(uint64_t a1)
{
  unint64_t v2 = sub_1AFDF8578();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFDF6024(uint64_t a1)
{
  unint64_t v2 = sub_1AFDF8578();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFDF6060@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1AFDF74A0(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_1AFDF6090(char *a1, char *a2)
{
  return sub_1AFDEE444(*a1, *a2);
}

uint64_t sub_1AFDF609C()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFDF6120()
{
  sub_1AFFCAF68();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFDF6190()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFDF6210@<X0>(char *a1@<X8>)
{
  return sub_1AFDF621C(a1);
}

uint64_t sub_1AFDF621C@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1AFFCBA78();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1AFDF6278(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1635017060;
  if (!*v1) {
    uint64_t v2 = 0x7265732D61746164;
  }
  unint64_t v3 = 0xEB00000000736569;
  if (*v1) {
    unint64_t v3 = 0xE400000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1AFDF62B8()
{
  if (*v0) {
    return 1635017060;
  }
  else {
    return 0x7265732D61746164;
  }
}

uint64_t sub_1AFDF62F4@<X0>(char *a1@<X8>)
{
  return sub_1AFDF6300(a1);
}

uint64_t sub_1AFDF6300@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1AFFCBA78();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1AFDF6360(uint64_t a1)
{
  unint64_t v2 = sub_1AFDF7A4C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFDF639C(uint64_t a1)
{
  unint64_t v2 = sub_1AFDF7A4C();

  return MEMORY[0x1F41862B0](a1, v2);
}

char *sub_1AFDF63D8@<X0>(void *a1@<X0>, char **a2@<X8>)
{
  uint64_t result = sub_1AFDF76C8(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1AFDF6404()
{
  unint64_t v0 = sub_1AFFCBA78();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

char *sub_1AFDF6450(void *a1)
{
  sub_1AFDF8C58(0, &qword_1EB8182B0, (void (*)(void))sub_1AFDF7D94);
  uint64_t v3 = v2;
  uint64_t v17 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v15 - v4;
  sub_1AFDF8C58(0, &qword_1EB8182A8, (void (*)(void))sub_1AFDF7DE8);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v10 = (char *)&v15 - v9;
  uint64_t v11 = a1[3];
  unint64_t v18 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v11);
  sub_1AFDF7DE8();
  uint64_t v12 = v19;
  sub_1AFFCBE68();
  if (v12)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  }
  else
  {
    uint64_t v16 = v5;
    uint64_t v19 = v8;
    char v20 = 0;
    sub_1AFDF7E3C();
    sub_1AFFCBB58();
    uint64_t v5 = v21;
    char v20 = 2;
    sub_1AFDF7E90();
    sub_1AFFC8E38();
    sub_1AFFCBB58();
    char v20 = 1;
    sub_1AFDF7EE4();
    sub_1AFFC8E38();
    sub_1AFFCBB58();
    LOBYTE(v21) = 3;
    sub_1AFDF7D94();
    sub_1AFFCBA88();
    sub_1AFDF8D0C(0, &qword_1EB817FA8, (uint64_t)&type metadata for YahooChartResponse.Feature, MEMORY[0x1E4FBB320]);
    sub_1AFDF7F38(&qword_1EB817FB0, &qword_1EB817FA8, (uint64_t)&type metadata for YahooChartResponse.Feature, (void (*)(void))sub_1AFDF7FC4);
    uint64_t v14 = v16;
    sub_1AFFCBB58();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v14, v3);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v10, v7);
    sub_1AFFC8E38();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v5;
}

uint64_t sub_1AFDF6914()
{
  unint64_t v0 = sub_1AFFCBA78();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

uint64_t sub_1AFDF6960(void *a1)
{
  sub_1AFDF8C58(0, &qword_1EB8182C0, (void (*)(void))sub_1AFDF8CB8);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = &v10[-v6];
  uint64_t v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDF8CB8();
  sub_1AFFCBE68();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v10[31] = 0;
    uint64_t v8 = sub_1AFFCBB18();
    sub_1AFDF8D0C(0, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    v10[30] = 1;
    sub_1AFDF8D58();
    sub_1AFFC8E38();
    sub_1AFFCBB58();
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
    sub_1AFFC8E38();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v8;
}

void *sub_1AFDF6BCC(void *a1)
{
  sub_1AFDF8C58(0, &qword_1EB8182C8, (void (*)(void))sub_1AFDF8428);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v11 - v6;
  uint64_t v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDF8428();
  uint64_t v9 = v8;
  sub_1AFFCBE68();
  if (!v1)
  {
    sub_1AFDF8D0C(0, &qword_1EB817F98, (uint64_t)&type metadata for YahooChartResponse.Record, MEMORY[0x1E4FBB320]);
    sub_1AFDF7F38(&qword_1EB817FA0, &qword_1EB817F98, (uint64_t)&type metadata for YahooChartResponse.Record, (void (*)(void))sub_1AFDF847C);
    sub_1AFFCBB58();
    uint64_t v9 = v12;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v9;
}

void *sub_1AFDF6E6C(void *a1)
{
  sub_1AFDF8C58(0, &qword_1EB8182D8, (void (*)(void))sub_1AFDF8380);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v11 - v6;
  uint64_t v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDF8380();
  uint64_t v9 = v8;
  sub_1AFFCBE68();
  if (!v1)
  {
    sub_1AFDF8D0C(0, &qword_1EB817F88, (uint64_t)&type metadata for YahooChartResponse.MappingEntry, MEMORY[0x1E4FBB320]);
    sub_1AFDF7F38(&qword_1EB817F90, &qword_1EB817F88, (uint64_t)&type metadata for YahooChartResponse.MappingEntry, (void (*)(void))sub_1AFDF83D4);
    sub_1AFFCBB58();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v9 = (void *)v11[1];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v9;
}

unint64_t sub_1AFDF706C(void *a1)
{
  sub_1AFDF8C58(0, &qword_1EB8182B8, (void (*)(void))sub_1AFDF8BB0);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v11 - v6;
  uint64_t v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDF8BB0();
  unint64_t v9 = (unint64_t)v8;
  sub_1AFFCBE68();
  if (!v1)
  {
    sub_1AFDF8C04();
    sub_1AFFCBB58();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    unint64_t v9 = v12;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v9;
}

unint64_t sub_1AFDF7214(void *a1)
{
  sub_1AFDF8C58(0, &qword_1EB8182E0, (void (*)(void))sub_1AFDF84D0);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v11 - v6;
  uint64_t v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDF84D0();
  unint64_t v9 = (unint64_t)v8;
  sub_1AFFCBE68();
  if (!v1)
  {
    sub_1AFDF8524();
    sub_1AFFCBB58();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    unint64_t v9 = v12;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v9;
}

uint64_t sub_1AFDF73BC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1AFFCBCE8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1AFDF74A0(void *a1)
{
  sub_1AFDF8C58(0, &qword_1EB8182D0, (void (*)(void))sub_1AFDF8578);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v10 - v6;
  uint64_t v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDF8578();
  sub_1AFFCBE68();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    char v12 = 0;
    uint64_t v8 = sub_1AFFCBB18();
    char v11 = 1;
    sub_1AFFC8E38();
    sub_1AFFCBAA8();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_1AFFC8E38();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v8;
}

char *sub_1AFDF76C8(void *a1)
{
  sub_1AFDF8C58(0, &qword_1EB8182A0, (void (*)(void))sub_1AFDF7A4C);
  uint64_t v4 = v3;
  uint64_t v14 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v15 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v13 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDF7A4C();
  sub_1AFFCBE68();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    uint64_t v9 = v14;
    uint64_t v10 = v15;
    uint64_t v13 = a1;
    char v18 = 1;
    sub_1AFFCBA88();
    sub_1AFDF8D0C(0, &qword_1E9AFAEC0, (uint64_t)&type metadata for YahooChartResponse.DataSeries, MEMORY[0x1E4FBB320]);
    char v17 = 0;
    sub_1AFDF7F38(&qword_1E9AFAEC8, &qword_1E9AFAEC0, (uint64_t)&type metadata for YahooChartResponse.DataSeries, (void (*)(void))sub_1AFDF7AA0);
    sub_1AFFCBB58();
    char v12 = *(void (**)(char *, uint64_t))(v9 + 8);
    v12(v10, v4);
    v12(v8, v4);
    uint64_t v8 = v16;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  }
  return v8;
}

unint64_t sub_1AFDF7A4C()
{
  unint64_t result = qword_1EB817528;
  if (!qword_1EB817528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817528);
  }
  return result;
}

unint64_t sub_1AFDF7AA0()
{
  unint64_t result = qword_1EB817570;
  if (!qword_1EB817570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817570);
  }
  return result;
}

ValueMetadata *type metadata accessor for YahooChartResponse.CodingKeys()
{
  return &type metadata for YahooChartResponse.CodingKeys;
}

uint64_t destroy for YahooChartResponse.DataSeries()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for YahooChartResponse.DataSeries(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  return a1;
}

uint64_t assignWithCopy for YahooChartResponse.DataSeries(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for YahooChartResponse.DataSeries(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for YahooChartResponse.DataSeries()
{
  return &type metadata for YahooChartResponse.DataSeries;
}

unint64_t sub_1AFDF7C90()
{
  unint64_t result = qword_1E9AFAED0;
  if (!qword_1E9AFAED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFAED0);
  }
  return result;
}

unint64_t sub_1AFDF7CE8()
{
  unint64_t result = qword_1EB817538;
  if (!qword_1EB817538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817538);
  }
  return result;
}

unint64_t sub_1AFDF7D40()
{
  unint64_t result = qword_1EB817530;
  if (!qword_1EB817530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817530);
  }
  return result;
}

unint64_t sub_1AFDF7D94()
{
  unint64_t result = qword_1EB817558;
  if (!qword_1EB817558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817558);
  }
  return result;
}

unint64_t sub_1AFDF7DE8()
{
  unint64_t result = qword_1EB817540;
  if (!qword_1EB817540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817540);
  }
  return result;
}

unint64_t sub_1AFDF7E3C()
{
  unint64_t result = qword_1EB817620;
  if (!qword_1EB817620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817620);
  }
  return result;
}

unint64_t sub_1AFDF7E90()
{
  unint64_t result = qword_1EB8175E0;
  if (!qword_1EB8175E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8175E0);
  }
  return result;
}

unint64_t sub_1AFDF7EE4()
{
  unint64_t result = qword_1EB817650;
  if (!qword_1EB817650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817650);
  }
  return result;
}

uint64_t sub_1AFDF7F38(unint64_t *a1, unint64_t *a2, uint64_t a3, void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1AFDF8D0C(255, a2, a3, MEMORY[0x1E4FBB320]);
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1AFDF7FC4()
{
  unint64_t result = qword_1EB817600;
  if (!qword_1EB817600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817600);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for YahooChartResponse.DataSeries.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFDF80E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for YahooChartResponse.DataSeries.CodingKeys()
{
  return &type metadata for YahooChartResponse.DataSeries.CodingKeys;
}

ValueMetadata *type metadata accessor for YahooChartResponse.DataSeries.FeaturesCodingKeys()
{
  return &type metadata for YahooChartResponse.DataSeries.FeaturesCodingKeys;
}

ValueMetadata *type metadata accessor for YahooChartResponse.Feature()
{
  return &type metadata for YahooChartResponse.Feature;
}

ValueMetadata *type metadata accessor for YahooChartResponse.Metadata()
{
  return &type metadata for YahooChartResponse.Metadata;
}

ValueMetadata *type metadata accessor for YahooChartResponse.Series()
{
  return &type metadata for YahooChartResponse.Series;
}

ValueMetadata *type metadata accessor for YahooChartResponse.Mapping()
{
  return &type metadata for YahooChartResponse.Mapping;
}

unint64_t sub_1AFDF8174()
{
  unint64_t result = qword_1E9AFAED8;
  if (!qword_1E9AFAED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFAED8);
  }
  return result;
}

unint64_t sub_1AFDF81CC()
{
  unint64_t result = qword_1E9AFAEE0;
  if (!qword_1E9AFAEE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFAEE0);
  }
  return result;
}

unint64_t sub_1AFDF8224()
{
  unint64_t result = qword_1EB817550;
  if (!qword_1EB817550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817550);
  }
  return result;
}

unint64_t sub_1AFDF827C()
{
  unint64_t result = qword_1EB817548;
  if (!qword_1EB817548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817548);
  }
  return result;
}

unint64_t sub_1AFDF82D4()
{
  unint64_t result = qword_1EB817568;
  if (!qword_1EB817568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817568);
  }
  return result;
}

unint64_t sub_1AFDF832C()
{
  unint64_t result = qword_1EB817560;
  if (!qword_1EB817560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817560);
  }
  return result;
}

unint64_t sub_1AFDF8380()
{
  unint64_t result = qword_1EB817608;
  if (!qword_1EB817608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817608);
  }
  return result;
}

unint64_t sub_1AFDF83D4()
{
  unint64_t result = qword_1EB817590;
  if (!qword_1EB817590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817590);
  }
  return result;
}

unint64_t sub_1AFDF8428()
{
  unint64_t result = qword_1EB8175C8;
  if (!qword_1EB8175C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8175C8);
  }
  return result;
}

unint64_t sub_1AFDF847C()
{
  unint64_t result = qword_1EB8175C0;
  if (!qword_1EB8175C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8175C0);
  }
  return result;
}

unint64_t sub_1AFDF84D0()
{
  unint64_t result = qword_1EB817628;
  if (!qword_1EB817628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817628);
  }
  return result;
}

unint64_t sub_1AFDF8524()
{
  unint64_t result = qword_1EB817648;
  if (!qword_1EB817648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817648);
  }
  return result;
}

unint64_t sub_1AFDF8578()
{
  unint64_t result = qword_1EB8175E8;
  if (!qword_1EB8175E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8175E8);
  }
  return result;
}

ValueMetadata *type metadata accessor for YahooChartResponse.Feature.CodingKeys()
{
  return &type metadata for YahooChartResponse.Feature.CodingKeys;
}

ValueMetadata *type metadata accessor for YahooChartResponse.Metadata.CodingKeys()
{
  return &type metadata for YahooChartResponse.Metadata.CodingKeys;
}

ValueMetadata *type metadata accessor for YahooChartResponse.Series.CodingKeys()
{
  return &type metadata for YahooChartResponse.Series.CodingKeys;
}

ValueMetadata *type metadata accessor for YahooChartResponse.Mapping.CodingKeys()
{
  return &type metadata for YahooChartResponse.Mapping.CodingKeys;
}

ValueMetadata *type metadata accessor for YahooChartResponse.Metadata.DateType()
{
  return &type metadata for YahooChartResponse.Metadata.DateType;
}

void *sub_1AFDF8620(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  return a1;
}

void *assignWithCopy for YahooChartResponse.Record(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for YahooChartResponse.Record(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for YahooChartResponse.Record()
{
  return &type metadata for YahooChartResponse.Record;
}

ValueMetadata *type metadata accessor for YahooChartResponse.MappingEntry()
{
  return &type metadata for YahooChartResponse.MappingEntry;
}

unint64_t sub_1AFDF873C()
{
  unint64_t result = qword_1E9AFAEF0;
  if (!qword_1E9AFAEF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFAEF0);
  }
  return result;
}

unint64_t sub_1AFDF8794()
{
  unint64_t result = qword_1E9AFAEF8;
  if (!qword_1E9AFAEF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFAEF8);
  }
  return result;
}

unint64_t sub_1AFDF87EC()
{
  unint64_t result = qword_1E9AFAF00;
  if (!qword_1E9AFAF00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFAF00);
  }
  return result;
}

unint64_t sub_1AFDF8844()
{
  unint64_t result = qword_1E9AFAF08;
  if (!qword_1E9AFAF08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFAF08);
  }
  return result;
}

unint64_t sub_1AFDF889C()
{
  unint64_t result = qword_1E9AFAF10;
  if (!qword_1E9AFAF10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFAF10);
  }
  return result;
}

unint64_t sub_1AFDF88F4()
{
  unint64_t result = qword_1EB8175F8;
  if (!qword_1EB8175F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8175F8);
  }
  return result;
}

unint64_t sub_1AFDF894C()
{
  unint64_t result = qword_1EB8175F0;
  if (!qword_1EB8175F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8175F0);
  }
  return result;
}

unint64_t sub_1AFDF89A4()
{
  unint64_t result = qword_1EB817638;
  if (!qword_1EB817638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817638);
  }
  return result;
}

unint64_t sub_1AFDF89FC()
{
  unint64_t result = qword_1EB817630;
  if (!qword_1EB817630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817630);
  }
  return result;
}

unint64_t sub_1AFDF8A54()
{
  unint64_t result = qword_1EB8175D8;
  if (!qword_1EB8175D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8175D8);
  }
  return result;
}

unint64_t sub_1AFDF8AAC()
{
  unint64_t result = qword_1EB8175D0;
  if (!qword_1EB8175D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8175D0);
  }
  return result;
}

unint64_t sub_1AFDF8B04()
{
  unint64_t result = qword_1EB817618;
  if (!qword_1EB817618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817618);
  }
  return result;
}

unint64_t sub_1AFDF8B5C()
{
  unint64_t result = qword_1EB817610;
  if (!qword_1EB817610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817610);
  }
  return result;
}

unint64_t sub_1AFDF8BB0()
{
  unint64_t result = qword_1EB817578;
  if (!qword_1EB817578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817578);
  }
  return result;
}

unint64_t sub_1AFDF8C04()
{
  unint64_t result = qword_1EB8175A0;
  if (!qword_1EB8175A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8175A0);
  }
  return result;
}

void sub_1AFDF8C58(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  if (!*a2)
  {
    a3();
    unint64_t v4 = sub_1AFFCBB78();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_1AFDF8CB8()
{
  unint64_t result = qword_1EB8175A8;
  if (!qword_1EB8175A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8175A8);
  }
  return result;
}

void sub_1AFDF8D0C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_1AFDF8D58()
{
  unint64_t result = qword_1EB819DD8;
  if (!qword_1EB819DD8)
  {
    sub_1AFDF8D0C(255, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819DD8);
  }
  return result;
}

unint64_t sub_1AFDF8DE4()
{
  unint64_t result = qword_1EB817640;
  if (!qword_1EB817640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817640);
  }
  return result;
}

unsigned char *_s10StocksCore18YahooChartResponseV8MetadataV8DateTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFDF8F04);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for YahooChartResponse.Record.CodingKeys()
{
  return &type metadata for YahooChartResponse.Record.CodingKeys;
}

unsigned char *_s10StocksCore18YahooChartResponseV10DataSeriesV18FeaturesCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1AFDF8FD8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for YahooChartResponse.MappingEntry.CodingKeys()
{
  return &type metadata for YahooChartResponse.MappingEntry.CodingKeys;
}

unsigned char *_s10StocksCore18YahooChartResponseV15ValueIdentifierOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFDF90DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for YahooChartResponse.ValueIdentifier()
{
  return &type metadata for YahooChartResponse.ValueIdentifier;
}

unint64_t sub_1AFDF9118()
{
  unint64_t result = qword_1E9AFAF18;
  if (!qword_1E9AFAF18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFAF18);
  }
  return result;
}

unint64_t sub_1AFDF9170()
{
  unint64_t result = qword_1E9AFAF20;
  if (!qword_1E9AFAF20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFAF20);
  }
  return result;
}

unint64_t sub_1AFDF91C8()
{
  unint64_t result = qword_1E9AFAF28;
  if (!qword_1E9AFAF28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFAF28);
  }
  return result;
}

unint64_t sub_1AFDF9220()
{
  unint64_t result = qword_1EB8175B8;
  if (!qword_1EB8175B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8175B8);
  }
  return result;
}

unint64_t sub_1AFDF9278()
{
  unint64_t result = qword_1EB8175B0;
  if (!qword_1EB8175B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8175B0);
  }
  return result;
}

unint64_t sub_1AFDF92D0()
{
  unint64_t result = qword_1EB817588;
  if (!qword_1EB817588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817588);
  }
  return result;
}

unint64_t sub_1AFDF9328()
{
  unint64_t result = qword_1EB817580;
  if (!qword_1EB817580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817580);
  }
  return result;
}

unint64_t sub_1AFDF937C()
{
  unint64_t result = qword_1EB817598;
  if (!qword_1EB817598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817598);
  }
  return result;
}

uint64_t sub_1AFDF93D0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v5 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v6 = type metadata accessor for NewsFeedRequest();
  sub_1AFDF97C0((uint64_t)a2 + *(int *)(v6 + 32), (uint64_t)v8);
  uint64_t v9 = v3;
  uint64_t v10 = v5;
  uint64_t v11 = v4;
  sub_1AFDF97C0((uint64_t)v8, (uint64_t)&v12);
  sub_1AFDF9AB8();
  swift_allocObject();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFD76370((uint64_t)v8);
  return sub_1AFFCA6F8();
}

uint64_t type metadata accessor for TestNewsFeedService()
{
  return self;
}

uint64_t sub_1AFDF94D0(uint64_t a1)
{
  uint64_t v3 = *v1;
  sub_1AFFC8E48();
  sub_1AFDF9558(a1, v3);
  swift_release();
  uint64_t v4 = (void *)sub_1AFFCA5E8();
  uint64_t v5 = sub_1AFFCA548();
  swift_bridgeObjectRelease();

  return v5;
}

uint64_t sub_1AFDF9558(uint64_t a1, void *a2)
{
  uint64_t v24 = type metadata accessor for NewsFeedRequest();
  uint64_t v5 = *(void *)(v24 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v24);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v8)
  {
    v18[1] = v2;
    uint64_t v30 = MEMORY[0x1E4FBC860];
    sub_1AFFCB8B8();
    uint64_t v10 = *(unsigned __int8 *)(v5 + 80);
    uint64_t v11 = a1 + ((v10 + 32) & ~v10);
    uint64_t v12 = *(void *)(v5 + 72);
    uint64_t v22 = (v10 + 16) & ~v10;
    unint64_t v23 = a2 + 2;
    uint64_t v21 = v22 + v6;
    uint64_t v19 = v12;
    uint64_t v20 = v10 | 7;
    for (uint64_t i = v8 - 1; ; --i)
    {
      uint64_t v14 = a2[5];
      uint64_t v15 = a2[6];
      __swift_project_boxed_opaque_existential_1(v23, v14);
      sub_1AFDF97C0(v11 + *(int *)(v24 + 32), (uint64_t)v27);
      sub_1AFDF97C0((uint64_t)v27, (uint64_t)v28);
      v25[6] = v28[6];
      v25[7] = v28[7];
      uint64_t v26 = v29;
      v25[2] = v28[2];
      v25[3] = v28[3];
      v25[4] = v28[4];
      void v25[5] = v28[5];
      v25[0] = v28[0];
      v25[1] = v28[1];
      sub_1AFD76370((uint64_t)v28);
      sub_1AFE70724(v25, v14, v15);
      sub_1AFD76408((uint64_t)v27);
      sub_1AFDF981C(v11, (uint64_t)v7);
      uint64_t v16 = swift_allocObject();
      sub_1AFDF99E8((uint64_t)v7, v16 + v22);
      char v17 = (void *)sub_1AFFCA5E8();
      sub_1AFFCA668();
      swift_release();
      swift_release();

      sub_1AFFCB888();
      sub_1AFFCB8C8();
      sub_1AFFCB8D8();
      sub_1AFFCB898();
      if (!i) {
        break;
      }
      v11 += v19;
    }
    return v30;
  }
  return result;
}

uint64_t sub_1AFDF97C0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1AFDF981C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NewsFeedRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AFDF9880()
{
  uint64_t v1 = (int *)(type metadata accessor for NewsFeedRequest() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  swift_bridgeObjectRelease();
  uint64_t v7 = v6 + v1[8];
  uint64_t v8 = sub_1AFFC98F8();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  v9(v7, v8);
  v9(v6 + v1[9], v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, v4, v5);
}

uint64_t sub_1AFDF99E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NewsFeedRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AFDF9A4C(uint64_t *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for NewsFeedRequest() - 8);
  return sub_1AFDF93D0(a1, (uint64_t *)(v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))));
}

void sub_1AFDF9AB8()
{
  if (!qword_1E9AFAF30)
  {
    unint64_t v0 = sub_1AFFCA788();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9AFAF30);
    }
  }
}

unint64_t sub_1AFDF9B10(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1AFE05518(0, (unint64_t *)&qword_1EB819F00);
  uint64_t v2 = (void *)sub_1AFFCBA08();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  sub_1AFFC8E48();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    unint64_t result = sub_1AFD79CC8(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v11 = v5;
    v11[1] = v6;
    uint64_t v12 = (void *)(v2[7] + 16 * result);
    *uint64_t v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1AFDF9C40(uint64_t a1)
{
  sub_1AFE05AE4(0, (unint64_t *)&qword_1EB817F18, (void (*)(uint64_t))type metadata accessor for Chart);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (void *)((char *)v26 - v5);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v8 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1AFE05158(0, &qword_1EB818200, type metadata accessor for Chart, MEMORY[0x1E4FBBD58]);
  uint64_t v7 = sub_1AFFCBA08();
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = (uint64_t)v6 + *(int *)(v3 + 48);
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v26[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v4 + 72);
  sub_1AFFC8E48();
  while (1)
  {
    sub_1AFE051CC(v13, (uint64_t)v6, (uint64_t)&qword_1EB817F18, (uint64_t)type metadata accessor for Chart, MEMORY[0x1E4FBB1A0], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1AFE05AE4);
    uint64_t v15 = *v6;
    uint64_t v16 = v6[1];
    unint64_t result = sub_1AFD79CC8(*v6, v16);
    if (v18) {
      break;
    }
    unint64_t v19 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v20 = (uint64_t *)(v8[6] + 16 * result);
    *uint64_t v20 = v15;
    v20[1] = v16;
    uint64_t v21 = v8[7];
    uint64_t v22 = type metadata accessor for Chart(0);
    unint64_t result = sub_1AFE05634(v10, v21 + *(void *)(*(void *)(v22 - 8) + 72) * v19, type metadata accessor for Chart);
    uint64_t v23 = v8[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24) {
      goto LABEL_11;
    }
    void v8[2] = v25;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1AFDF9EB4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1AFE05DD4(0, &qword_1EB818230, MEMORY[0x1E4FBB960], MEMORY[0x1E4FBB968], MEMORY[0x1E4FBBD58]);
  uint64_t v2 = sub_1AFFCBA08();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  sub_1AFFC8E48();
  while (1)
  {
    sub_1AFE05CC0(v6, (uint64_t)v15, (unint64_t *)&qword_1EB8181C0);
    unint64_t result = sub_1AFD79D40((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_1AFD8DDEC(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1AFDFA02C(uint64_t a1)
{
  sub_1AFE05AE4(0, (unint64_t *)&qword_1EB811450, (void (*)(uint64_t))type metadata accessor for Quote);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (void *)((char *)v26 - v5);
  if (!*(void *)(a1 + 16))
  {
    char v8 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1AFE05158(0, &qword_1EB818208, (uint64_t (*)(uint64_t))type metadata accessor for Quote, MEMORY[0x1E4FBBD58]);
  uint64_t v7 = sub_1AFFCBA08();
  char v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = (uint64_t)v6 + *(int *)(v3 + 48);
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v26[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v4 + 72);
  sub_1AFFC8E48();
  while (1)
  {
    sub_1AFE051CC(v13, (uint64_t)v6, (uint64_t)&qword_1EB811450, (uint64_t)type metadata accessor for Quote, MEMORY[0x1E4FBB1A0], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1AFE05AE4);
    uint64_t v15 = *v6;
    uint64_t v16 = v6[1];
    unint64_t result = sub_1AFD79CC8(*v6, v16);
    if (v18) {
      break;
    }
    unint64_t v19 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v20 = (uint64_t *)(v8[6] + 16 * result);
    *uint64_t v20 = v15;
    v20[1] = v16;
    uint64_t v21 = v8[7];
    uint64_t v22 = type metadata accessor for Quote();
    unint64_t result = sub_1AFE05634(v10, v21 + *(void *)(*(void *)(v22 - 8) + 72) * v19, (uint64_t (*)(void))type metadata accessor for Quote);
    uint64_t v23 = v8[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24) {
      goto LABEL_11;
    }
    void v8[2] = v25;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1AFDFA2A0(uint64_t a1)
{
  return sub_1AFDFADD8(a1, (void (*)(void))sub_1AFE05738, (uint64_t)&unk_1E9AFB010, (uint64_t)type metadata accessor for CIImageRepresentationOption, (uint64_t (*)(uint64_t))sub_1AFD79D84);
}

unint64_t sub_1AFDFA2E8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_11;
  }
  sub_1AFE05518(0, &qword_1EB81B2A8);
  uint64_t v2 = (void *)sub_1AFFCBA08();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  sub_1AFFC8E48();
  long long v4 = *(_OWORD *)(a1 + 144);
  long long v37 = *(_OWORD *)(a1 + 128);
  long long v38 = v4;
  long long v39 = *(_OWORD *)(a1 + 160);
  uint64_t v40 = *(void *)(a1 + 176);
  long long v5 = *(_OWORD *)(a1 + 80);
  long long v33 = *(_OWORD *)(a1 + 64);
  long long v34 = v5;
  long long v6 = *(_OWORD *)(a1 + 112);
  long long v35 = *(_OWORD *)(a1 + 96);
  long long v36 = v6;
  long long v7 = *(_OWORD *)(a1 + 48);
  long long v31 = *(_OWORD *)(a1 + 32);
  long long v32 = v7;
  uint64_t v9 = *((void *)&v31 + 1);
  uint64_t v8 = v31;
  sub_1AFE0556C((uint64_t)&v31);
  unint64_t result = sub_1AFD79CC8(v8, v9);
  if (v11)
  {
LABEL_8:
    __break(1u);
LABEL_9:
    swift_release();
    goto LABEL_11;
  }
  uint64_t v12 = 184;
  while (1)
  {
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v13 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v13 = v8;
    v13[1] = v9;
    uint64_t v14 = v2[7] + 136 * result;
    *(_OWORD *)uint64_t v14 = v32;
    long long v15 = v33;
    long long v16 = v34;
    long long v17 = v36;
    *(_OWORD *)(v14 + 48) = v35;
    *(_OWORD *)(v14 + 64) = v17;
    *(_OWORD *)(v14 + 16) = v15;
    *(_OWORD *)(v14 + 32) = v16;
    long long v18 = v37;
    long long v19 = v38;
    long long v20 = v39;
    *(void *)(v14 + 128) = v40;
    *(_OWORD *)(v14 + 96) = v19;
    *(_OWORD *)(v14 + 112) = v20;
    *(_OWORD *)(v14 + 80) = v18;
    uint64_t v21 = v2[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      break;
    }
    v2[2] = v23;
    if (!--v3) {
      goto LABEL_9;
    }
    uint64_t v24 = v12 + 152;
    uint64_t v25 = (long long *)(a1 + v12);
    long long v26 = v25[7];
    long long v37 = v25[6];
    long long v38 = v26;
    long long v39 = v25[8];
    uint64_t v40 = *((void *)v25 + 18);
    long long v27 = v25[3];
    long long v33 = v25[2];
    long long v34 = v27;
    long long v28 = v25[5];
    long long v35 = v25[4];
    long long v36 = v28;
    long long v29 = v25[1];
    long long v31 = *v25;
    long long v32 = v29;
    uint64_t v9 = *((void *)&v31 + 1);
    uint64_t v8 = v31;
    sub_1AFE0556C((uint64_t)&v31);
    unint64_t result = sub_1AFD79CC8(v8, v9);
    uint64_t v12 = v24;
    if (v30) {
      goto LABEL_8;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_1AFDFA4CC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1AFE05DD4(0, &qword_1E9AFB030, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB1B0], MEMORY[0x1E4FBBD58]);
  uint64_t v2 = sub_1AFFCBA08();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  sub_1AFFC8E48();
  while (1)
  {
    sub_1AFE05CC0(v6, (uint64_t)&v15, (unint64_t *)&unk_1E9AFB038);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_1AFD79CC8(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    char v11 = (uint64_t *)(v3[6] + 16 * result);
    *char v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_1AFD8DDEC(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1AFDFA640(uint64_t a1)
{
  sub_1AFE05AE4(0, (unint64_t *)&qword_1E9AFB018, MEMORY[0x1E4F18630]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (unsigned __int8 *)v24 - v5;
  if (!*(void *)(a1 + 16))
  {
    uint64_t v8 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1AFE05B50(0, (unint64_t *)&unk_1E9AFB020, MEMORY[0x1E4F18630], (void (*)(void))sub_1AFE05BD0);
  uint64_t v7 = sub_1AFFCBA08();
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  char v10 = &v6[*(int *)(v3 + 48)];
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v24[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v4 + 72);
  sub_1AFFC8E48();
  while (1)
  {
    sub_1AFE051CC(v13, (uint64_t)v6, (uint64_t)&qword_1E9AFB018, MEMORY[0x1E4F18630], (uint64_t)&type metadata for NewsDisplayConfiguration, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1AFE05AE4);
    unsigned __int8 v15 = *v6;
    unint64_t result = sub_1AFD79DCC(*v6);
    if (v17) {
      break;
    }
    unint64_t v18 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(unsigned char *)(v8[6] + result) = v15;
    uint64_t v19 = v8[7];
    uint64_t v20 = sub_1AFFC8DD8();
    unint64_t result = (*(uint64_t (**)(unint64_t, unsigned __int8 *, uint64_t))(*(void *)(v20 - 8) + 32))(v19 + *(void *)(*(void *)(v20 - 8) + 72) * v18, v10, v20);
    uint64_t v21 = v8[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_11;
    }
    void v8[2] = v23;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1AFDFA8BC(uint64_t a1)
{
  sub_1AFE05AE4(0, (unint64_t *)&qword_1E9AFAFF0, (void (*)(uint64_t))type metadata accessor for EarningsCalendarEventModel);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (void *)((char *)v26 - v5);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v8 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1AFE05158(0, &qword_1E9AFC030, (uint64_t (*)(uint64_t))type metadata accessor for EarningsCalendarEventModel, MEMORY[0x1E4FBBD58]);
  uint64_t v7 = sub_1AFFCBA08();
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = (uint64_t)v6 + *(int *)(v3 + 48);
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v26[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v4 + 72);
  sub_1AFFC8E48();
  while (1)
  {
    sub_1AFE051CC(v13, (uint64_t)v6, (uint64_t)&qword_1E9AFAFF0, (uint64_t)type metadata accessor for EarningsCalendarEventModel, MEMORY[0x1E4FBB1A0], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1AFE05AE4);
    uint64_t v15 = *v6;
    uint64_t v16 = v6[1];
    unint64_t result = sub_1AFD79CC8(*v6, v16);
    if (v18) {
      break;
    }
    unint64_t v19 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v20 = (uint64_t *)(v8[6] + 16 * result);
    *uint64_t v20 = v15;
    v20[1] = v16;
    uint64_t v21 = v8[7];
    uint64_t v22 = type metadata accessor for EarningsCalendarEventModel();
    unint64_t result = sub_1AFE05634(v10, v21 + *(void *)(*(void *)(v22 - 8) + 72) * v19, (uint64_t (*)(void))type metadata accessor for EarningsCalendarEventModel);
    uint64_t v23 = v8[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24) {
      goto LABEL_11;
    }
    void v8[2] = v25;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1AFDFAB30(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1AFE05158(0, &qword_1EB816AD0, (uint64_t (*)(uint64_t))sub_1AFD3ABD0, MEMORY[0x1E4FBBD58]);
  uint64_t v2 = (void *)sub_1AFFCBA08();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  sub_1AFFC8E48();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    unint64_t result = sub_1AFD79CC8(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1AFDFAC78(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1AFE05A6C();
  uint64_t v2 = (void *)sub_1AFFCBA08();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  sub_1AFFC8E48();
  uint64_t v4 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 2);
    uint64_t v6 = (uint64_t)*(v4 - 1);
    uint64_t v7 = *v4;
    sub_1AFFC8E38();
    id v8 = v7;
    unint64_t result = sub_1AFD79CC8(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v11 = v5;
    v11[1] = v6;
    *(void *)(v2[7] + 8 * result) = v8;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1AFDFAD90(uint64_t a1)
{
  return sub_1AFDFADD8(a1, (void (*)(void))sub_1AFE04278, (uint64_t)&unk_1E9AFAFE8, (uint64_t)type metadata accessor for FileAttributeKey, (uint64_t (*)(uint64_t))sub_1AFD79D84);
}

unint64_t sub_1AFDFADD8(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  if (!*(void *)(a1 + 16))
  {
    char v10 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  a2(0);
  uint64_t v9 = sub_1AFFCBA08();
  char v10 = (void *)v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (!v11)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v10;
  }
  uint64_t v12 = v9 + 64;
  uint64_t v13 = a1 + 32;
  sub_1AFFC8E48();
  uint64_t v14 = MEMORY[0x1E4FBC840] + 8;
  while (1)
  {
    sub_1AFE051CC(v13, (uint64_t)&v21, a3, a4, v14, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1AFE057D8);
    uint64_t v15 = v21;
    unint64_t result = a5(v21);
    if (v17) {
      break;
    }
    *(void *)(v12 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v10[6] + 8 * result) = v15;
    unint64_t result = (unint64_t)sub_1AFD8DDEC(&v22, (_OWORD *)(v10[7] + 32 * result));
    uint64_t v18 = v10[2];
    BOOL v19 = __OFADD__(v18, 1);
    uint64_t v20 = v18 + 1;
    if (v19) {
      goto LABEL_11;
    }
    void v10[2] = v20;
    v13 += 40;
    if (!--v11)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1AFDFAF40(uint64_t a1)
{
  sub_1AFE057D8(0, (unint64_t *)&qword_1EB816B08, MEMORY[0x1E4F276F0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)v25 - v5;
  if (!*(void *)(a1 + 16))
  {
    id v8 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1AFE0569C();
  uint64_t v7 = sub_1AFFCBA08();
  id v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  char v10 = &v6[*(int *)(v3 + 48)];
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v25[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v4 + 72);
  sub_1AFFC8E48();
  while (1)
  {
    sub_1AFE051CC(v13, (uint64_t)v6, (uint64_t)&qword_1EB816B08, MEMORY[0x1E4F276F0], (uint64_t)&type metadata for DownloadedImage, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1AFE057D8);
    unint64_t result = sub_1AFD79F8C((uint64_t)v6);
    if (v16) {
      break;
    }
    unint64_t v17 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v18 = v8[6];
    uint64_t v19 = sub_1AFFC96E8();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v18 + *(void *)(*(void *)(v19 - 8) + 72) * v17, v6, v19);
    uint64_t v20 = v8[7] + 24 * v17;
    uint64_t v21 = *((void *)v10 + 2);
    *(_OWORD *)uint64_t v20 = *(_OWORD *)v10;
    *(void *)(v20 + 16) = v21;
    uint64_t v22 = v8[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_11;
    }
    void v8[2] = v24;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

id NewsCoreConfiguration.__allocating_init(experimentalizableFieldPostfix:appConfiguration:topStoriesConfiguration:newsUIConfiguration:newsPersonalizationTreatment:endpointConfigurations:paidBundleConfiguration:paidBundleViaOfferConfiguration:analyticsEndpointMaxPayloadSize:maxRetriesForDroppedFeeds:delayBeforeRetryingDroppedFeeds:enableCacheFallbackForArticleRecirculation:prerollLoadingTimeout:prerollReadyToPlayTimeout:isPrivateDataEncryptionRequired:)(uint64_t a1, uint64_t a2, const void *a3, uint64_t *a4, uint64_t *a5, const void *a6, uint64_t a7, const void *a8, double a9, double a10, double a11, long long a12, uint64_t a13, char a14, char a15)
{
  id v25 = objc_allocWithZone(v15);
  return NewsCoreConfiguration.init(experimentalizableFieldPostfix:appConfiguration:topStoriesConfiguration:newsUIConfiguration:newsPersonalizationTreatment:endpointConfigurations:paidBundleConfiguration:paidBundleViaOfferConfiguration:analyticsEndpointMaxPayloadSize:maxRetriesForDroppedFeeds:delayBeforeRetryingDroppedFeeds:enableCacheFallbackForArticleRecirculation:prerollLoadingTimeout:prerollReadyToPlayTimeout:isPrivateDataEncryptionRequired:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, (long long *)a12, *((uint64_t *)&a12 + 1), a13, a14, a15);
}

uint64_t sub_1AFDFB270(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_1AFE05DD4(0, &qword_1EB818230, MEMORY[0x1E4FBB960], MEMORY[0x1E4FBB968], MEMORY[0x1E4FBBD58]);
    uint64_t v2 = sub_1AFFCBA08();
  }
  else
  {
    uint64_t v2 = MEMORY[0x1E4FBC868];
  }
  uint64_t v27 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v26 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 64;
  sub_1AFFC8E38();
  uint64_t result = sub_1AFFC8E48();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v26) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v27 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v26) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v27 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v26) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v27 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v26) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v27 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    unint64_t v17 = (void *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v18 = v17[1];
    *(void *)&v36[0] = *v17;
    *((void *)&v36[0] + 1) = v18;
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    swift_dynamicCast();
    swift_dynamicCast();
    long long v32 = v28;
    long long v33 = v29;
    uint64_t v34 = v30;
    sub_1AFD8DDEC(&v31, v35);
    long long v28 = v32;
    long long v29 = v33;
    uint64_t v30 = v34;
    sub_1AFD8DDEC(v35, v36);
    sub_1AFD8DDEC(v36, &v32);
    uint64_t result = sub_1AFFCB768();
    uint64_t v19 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v6 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v20) & ~*(void *)(v6 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v6 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v9 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    uint64_t v10 = *(void *)(v2 + 48) + 40 * v9;
    *(_OWORD *)uint64_t v10 = v28;
    *(_OWORD *)(v10 + 16) = v29;
    *(void *)(v10 + 32) = v30;
    uint64_t result = (uint64_t)sub_1AFD8DDEC(&v32, (_OWORD *)(*(void *)(v2 + 56) + 32 * v9));
    ++*(void *)(v2 + 16);
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v26)
  {
LABEL_37:
    swift_release();
    sub_1AFD762B0();
    return v2;
  }
  unint64_t v14 = *(void *)(v27 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v26) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v27 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1AFDFB658(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_1AFE05DD4(0, &qword_1EB818230, MEMORY[0x1E4FBB960], MEMORY[0x1E4FBB968], MEMORY[0x1E4FBBD58]);
    uint64_t v2 = sub_1AFFCBA08();
  }
  else
  {
    uint64_t v2 = MEMORY[0x1E4FBC868];
  }
  uint64_t v28 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 64;
  sub_1AFFC8E38();
  uint64_t result = sub_1AFFC8E48();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v27) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v28 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v27) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v28 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v27) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v28 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    unint64_t v17 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    sub_1AFD38AF4(*(void *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(void *)&long long v39 = v19;
    *((void *)&v39 + 1) = v18;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(void *)&v37[0] = v19;
    *((void *)&v37[0] + 1) = v18;
    sub_1AFFC8E38();
    swift_dynamicCast();
    sub_1AFD8DDEC(v38, v32);
    long long v33 = v29;
    long long v34 = v30;
    uint64_t v35 = v31;
    sub_1AFD8DDEC(v32, v36);
    long long v29 = v33;
    long long v30 = v34;
    uint64_t v31 = v35;
    sub_1AFD8DDEC(v36, v37);
    sub_1AFD8DDEC(v37, &v33);
    uint64_t result = sub_1AFFCB768();
    uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    uint64_t v10 = *(void *)(v2 + 48) + 40 * v9;
    *(_OWORD *)uint64_t v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(void *)(v10 + 32) = v31;
    uint64_t result = (uint64_t)sub_1AFD8DDEC(&v33, (_OWORD *)(*(void *)(v2 + 56) + 32 * v9));
    ++*(void *)(v2 + 16);
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_1AFD762B0();
    return v2;
  }
  unint64_t v14 = *(void *)(v28 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1AFDFBA48(unint64_t a1)
{
  unint64_t v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (sub_1AFFCB968()) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v3 = MEMORY[0x1E4FBC868];
    if (v2) {
      goto LABEL_4;
    }
LABEL_7:
    uint64_t v8 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v5 = ~v8;
    unint64_t v37 = a1 + 64;
    uint64_t v9 = -v8;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v6 = v10 & *(void *)(a1 + 64);
    unint64_t v7 = a1;
    goto LABEL_11;
  }
  if (!*(void *)(a1 + 16)) {
    goto LABEL_6;
  }
LABEL_3:
  sub_1AFE05DD4(0, &qword_1EB818230, MEMORY[0x1E4FBB960], MEMORY[0x1E4FBB968], MEMORY[0x1E4FBBD58]);
  uint64_t v3 = sub_1AFFCBA08();
  if (!v2) {
    goto LABEL_7;
  }
LABEL_4:
  uint64_t v4 = sub_1AFFCB958();
  unint64_t v37 = 0;
  uint64_t v5 = 0;
  unint64_t v6 = 0;
  unint64_t v7 = v4 | 0x8000000000000000;
LABEL_11:
  int64_t v36 = (unint64_t)(v5 + 64) >> 6;
  uint64_t v11 = v3 + 64;
  sub_1AFFC8E38();
  uint64_t result = sub_1AFFC8E48();
  int64_t v38 = 0;
  unint64_t v39 = v7;
  while ((v7 & 0x8000000000000000) != 0)
  {
    uint64_t v17 = sub_1AFFCB988();
    if (!v17) {
      goto LABEL_45;
    }
    uint64_t v19 = v18;
    *(void *)&long long v44 = v17;
    sub_1AFD8F6AC(0, (unint64_t *)&qword_1EB819E90);
    swift_dynamicCast();
    *(void *)&long long v44 = v19;
    sub_1AFD8F6AC(0, &qword_1EB818140);
    swift_dynamicCast();
    uint64_t v20 = v49;
LABEL_36:
    *(void *)&v48[0] = v20;
    sub_1AFD8F6AC(0, (unint64_t *)&qword_1EB819E90);
    swift_dynamicCast();
    sub_1AFD8F6AC(0, &qword_1EB818140);
    swift_dynamicCast();
    long long v44 = v40;
    long long v45 = v41;
    uint64_t v46 = v42;
    sub_1AFD8DDEC(&v43, v47);
    long long v40 = v44;
    long long v41 = v45;
    uint64_t v42 = v46;
    sub_1AFD8DDEC(v47, v48);
    sub_1AFD8DDEC(v48, &v44);
    uint64_t result = sub_1AFFCB768();
    uint64_t v29 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v30 = result & ~v29;
    unint64_t v31 = v30 >> 6;
    if (((-1 << v30) & ~*(void *)(v11 + 8 * (v30 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v30) & ~*(void *)(v11 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      unint64_t v7 = v39;
    }
    else
    {
      char v32 = 0;
      unint64_t v33 = (unint64_t)(63 - v29) >> 6;
      unint64_t v7 = v39;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_46;
        }
        BOOL v34 = v31 == v33;
        if (v31 == v33) {
          unint64_t v31 = 0;
        }
        v32 |= v34;
        uint64_t v35 = *(void *)(v11 + 8 * v31);
      }
      while (v35 == -1);
      unint64_t v13 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(void *)(v11 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    uint64_t v14 = *(void *)(v3 + 48) + 40 * v13;
    *(_OWORD *)uint64_t v14 = v40;
    *(_OWORD *)(v14 + 16) = v41;
    *(void *)(v14 + 32) = v42;
    uint64_t result = (uint64_t)sub_1AFD8DDEC(&v44, (_OWORD *)(*(void *)(v3 + 56) + 32 * v13));
    ++*(void *)(v3 + 16);
  }
  if (v6)
  {
    unint64_t v15 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    unint64_t v16 = v15 | (v38 << 6);
LABEL_35:
    uint64_t v25 = *(void *)(v7 + 56);
    uint64_t v20 = *(void **)(*(void *)(v7 + 48) + 8 * v16);
    uint64_t v26 = *(void **)(v25 + 8 * v16);
    uint64_t v49 = v20;
    uint64_t v50 = v26;
    id v27 = v20;
    id v28 = v26;
    goto LABEL_36;
  }
  int64_t v21 = v38 + 1;
  if (__OFADD__(v38, 1))
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  if (v21 >= v36) {
    goto LABEL_45;
  }
  unint64_t v22 = *(void *)(v37 + 8 * v21);
  int64_t v23 = v38 + 1;
  if (v22) {
    goto LABEL_34;
  }
  int64_t v23 = v38 + 2;
  if (v38 + 2 >= v36) {
    goto LABEL_45;
  }
  unint64_t v22 = *(void *)(v37 + 8 * v23);
  if (v22) {
    goto LABEL_34;
  }
  int64_t v23 = v38 + 3;
  if (v38 + 3 >= v36) {
    goto LABEL_45;
  }
  unint64_t v22 = *(void *)(v37 + 8 * v23);
  if (v22) {
    goto LABEL_34;
  }
  int64_t v23 = v38 + 4;
  if (v38 + 4 >= v36) {
    goto LABEL_45;
  }
  unint64_t v22 = *(void *)(v37 + 8 * v23);
  if (v22)
  {
LABEL_34:
    unint64_t v6 = (v22 - 1) & v22;
    unint64_t v16 = __clz(__rbit64(v22)) + (v23 << 6);
    int64_t v38 = v23;
    goto LABEL_35;
  }
  int64_t v24 = v38 + 5;
  if (v38 + 5 >= v36)
  {
LABEL_45:
    uint64_t v49 = 0;
    uint64_t v50 = 0;
    swift_release();
    sub_1AFD762B0();
    return v3;
  }
  unint64_t v22 = *(void *)(v37 + 8 * v24);
  if (v22)
  {
    int64_t v23 = v38 + 5;
    goto LABEL_34;
  }
  while (1)
  {
    int64_t v23 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v23 >= v36) {
      goto LABEL_45;
    }
    unint64_t v22 = *(void *)(v37 + 8 * v23);
    ++v24;
    if (v22) {
      goto LABEL_34;
    }
  }
LABEL_47:
  __break(1u);
  return result;
}

uint64_t NewsCoreConfiguration.experimentalizableFieldPostfix.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_experimentalizableFieldPostfix);
  sub_1AFFC8E38();
  return v1;
}

uint64_t NewsCoreConfiguration.analyticsEndpointMaxPayloadSize.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_analyticsEndpointMaxPayloadSize);
}

uint64_t NewsCoreConfiguration.maxRetriesForDroppedFeeds.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_maxRetriesForDroppedFeeds);
}

double NewsCoreConfiguration.delayBeforeRetryingDroppedFeeds.getter()
{
  return *(double *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_delayBeforeRetryingDroppedFeeds);
}

uint64_t NewsCoreConfiguration.enableCacheFallbackForArticleRecirculation.getter()
{
  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_enableCacheFallbackForArticleRecirculation);
}

double NewsCoreConfiguration.prerollLoadingTimeout.getter()
{
  return *(double *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_prerollLoadingTimeout);
}

double NewsCoreConfiguration.prerollReadyToPlayTimeout.getter()
{
  return *(double *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_prerollReadyToPlayTimeout);
}

uint64_t NewsCoreConfiguration.isPrivateDataEncryptionRequired.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_isPrivateDataEncryptionRequired);
}

id NewsCoreConfiguration.init(experimentalizableFieldPostfix:appConfiguration:topStoriesConfiguration:newsUIConfiguration:newsPersonalizationTreatment:endpointConfigurations:paidBundleConfiguration:paidBundleViaOfferConfiguration:analyticsEndpointMaxPayloadSize:maxRetriesForDroppedFeeds:delayBeforeRetryingDroppedFeeds:enableCacheFallbackForArticleRecirculation:prerollLoadingTimeout:prerollReadyToPlayTimeout:isPrivateDataEncryptionRequired:)(uint64_t a1, uint64_t a2, const void *a3, uint64_t *a4, uint64_t *a5, const void *a6, uint64_t a7, const void *a8, double a9, double a10, double a11, long long *a12, uint64_t a13, uint64_t a14, unsigned __int8 a15, unsigned __int8 a16)
{
  uint64_t v55 = a3;
  uint64_t v56 = a7;
  uint64_t v53 = a1;
  uint64_t v54 = a2;
  int v61 = a16;
  int v60 = a15;
  uint64_t v59 = a14;
  uint64_t v58 = a13;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v57 = sub_1AFFC9E08();
  MEMORY[0x1F4188790](v57);
  uint64_t v62 = (char *)&v49 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = *a4;
  uint64_t v26 = a4[3];
  uint64_t v27 = *a5;
  long long v28 = *(_OWORD *)(a5 + 3);
  long long v51 = *(_OWORD *)(a5 + 5);
  long long v52 = v28;
  uint64_t v29 = a5[7];
  uint64_t v50 = a5[8];
  memcpy(v66, a6, sizeof(v66));
  memcpy(v72, a8, 0x1F9uLL);
  long long v30 = a12[3];
  long long v69 = a12[2];
  long long v70 = v30;
  char v71 = *((unsigned char *)a12 + 64);
  long long v31 = a12[1];
  long long v67 = *a12;
  long long v68 = v31;
  char v32 = &v16[OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_experimentalizableFieldPostfix];
  uint64_t v34 = v54;
  unint64_t v33 = v55;
  *char v32 = v53;
  v32[1] = v34;
  memcpy(&v16[OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_appConfiguration], v33, 0x10BAuLL);
  uint64_t v35 = &v16[OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_topStoriesConfiguration];
  *(void *)uint64_t v35 = v25;
  *(_OWORD *)(v35 + 8) = *(_OWORD *)(a4 + 1);
  *((void *)v35 + 3) = v26;
  int64_t v36 = &v16[OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_newsUIConfiguration];
  *(void *)int64_t v36 = v27;
  *(_OWORD *)(v36 + 8) = *(_OWORD *)(a5 + 1);
  *(_OWORD *)(v36 + 24) = v52;
  *(_OWORD *)(v36 + 40) = v51;
  uint64_t v37 = v50;
  *((void *)v36 + 7) = v29;
  *((void *)v36 + 8) = v37;
  memcpy(&v16[OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_newsPersonalizationTreatment], a6, 0x8DBuLL);
  *(void *)&v16[OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_endpointConfigurations] = v56;
  memcpy(&v16[OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_paidBundleConfiguration], a8, 0x1F9uLL);
  int64_t v38 = &v16[OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_paidBundleViaOfferConfiguration];
  long long v39 = a12[3];
  *((_OWORD *)v38 + 2) = a12[2];
  *((_OWORD *)v38 + 3) = v39;
  v38[64] = *((unsigned char *)a12 + 64);
  long long v40 = a12[1];
  *(_OWORD *)int64_t v38 = *a12;
  *((_OWORD *)v38 + 1) = v40;
  *(void *)&v16[OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_analyticsEndpointMaxPayloadSize] = v58;
  *(void *)&v16[OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_maxRetriesForDroppedFeeds] = v59;
  *(double *)&v16[OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_delayBeforeRetryingDroppedFeeds] = a9;
  v16[OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_enableCacheFallbackForArticleRecirculation] = v60;
  *(double *)&v16[OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_prerollLoadingTimeout] = a10;
  *(double *)&v16[OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_prerollReadyToPlayTimeout] = a11;
  v16[OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_isPrivateDataEncryptionRequired] = v61;
  uint64_t v41 = swift_allocObject();
  memcpy((void *)(v41 + 16), a8, 0x1F9uLL);
  uint64_t v65 = MEMORY[0x1E4FBC860];
  uint64_t v42 = v16;
  sub_1AFDB7DDC((uint64_t)v72);
  sub_1AFDF3A80((uint64_t)&v67);
  sub_1AFDFC8AC((unint64_t *)&unk_1EB81ABB0, MEMORY[0x1E4FAA910]);
  sub_1AFD673A0(0);
  sub_1AFDFC8AC((unint64_t *)&qword_1EB81AC30, sub_1AFD673A0);
  sub_1AFFCB738();
  sub_1AFDB3DD4(0, &qword_1EB817D00, &qword_1EB818148);
  swift_allocObject();
  *(void *)&v42[OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_lazyPaidBundleConfig] = sub_1AFFCA528();
  uint64_t v43 = swift_allocObject();
  long long v44 = v70;
  *(_OWORD *)(v43 + 48) = v69;
  *(_OWORD *)(v43 + 64) = v44;
  *(unsigned char *)(v43 + 80) = v71;
  long long v45 = v68;
  *(_OWORD *)(v43 + 16) = v67;
  *(_OWORD *)(v43 + 32) = v45;
  uint64_t v46 = MEMORY[0x1E4FBC860];
  uint64_t v65 = MEMORY[0x1E4FBC860];
  sub_1AFFCB738();
  sub_1AFDB3DD4(0, &qword_1EB817D08, &qword_1EB818150);
  swift_allocObject();
  *(void *)&v42[OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_lazyPaidBundleViaOfferConfig] = sub_1AFFCA528();
  uint64_t v47 = swift_allocObject();
  memcpy((void *)(v47 + 16), v66, 0x8DBuLL);
  uint64_t v65 = v46;
  sub_1AFFCB738();
  sub_1AFDB3DD4(0, (unint64_t *)&unk_1EB817D10, &qword_1EB818158);
  swift_allocObject();
  *(void *)&v42[OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_lazyPersonalizationTreatment] = sub_1AFFCA528();

  v64.receiver = v42;
  v64.super_class = ObjectType;
  return objc_msgSendSuper2(&v64, sel_init);
}

void sub_1AFDFC670(const void *a1@<X0>, void *a2@<X8>)
{
  unint64_t v3 = sub_1AFDFC8F4(a1);
  sub_1AFDFB658(v3);
  swift_bridgeObjectRelease();
  id v4 = objc_allocWithZone(MEMORY[0x1E4F7E620]);
  uint64_t v5 = (void *)sub_1AFFCAC78();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v4, sel_initWithConfigDictionary_, v5);

  *a2 = v6;
}

uint64_t sub_1AFDFC710()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v0[48] != 1)
  {
    if (v0[28] != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (v0[32] != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (v0[36] != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (v0[40] != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (v0[44] != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 521, 7);
}

void sub_1AFDFC8A4(void *a1@<X8>)
{
  sub_1AFDFC670((const void *)(v1 + 16), a1);
}

uint64_t sub_1AFDFC8AC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1AFDFC8F4(const void *a1)
{
  __dst[64] = *(id *)MEMORY[0x1E4F143B8];
  sub_1AFFC91E8();
  swift_allocObject();
  sub_1AFFC91D8();
  memcpy(__dst, a1, 0x1F9uLL);
  sub_1AFE05E90();
  uint64_t v2 = sub_1AFFC91C8();
  unint64_t v4 = v3;
  swift_release();
  uint64_t v5 = self;
  id v6 = (void *)sub_1AFFC9778();
  __dst[0] = 0;
  id v7 = objc_msgSend(v5, sel_JSONObjectWithData_options_error_, v6, 4, __dst);

  if (!v7)
  {
    id v10 = __dst[0];
    uint64_t v11 = (void *)sub_1AFFC9508();

    swift_willThrow();
    goto LABEL_5;
  }
  id v8 = __dst[0];
  sub_1AFFCB6F8();
  swift_unknownObjectRelease();
  sub_1AFE05DD4(0, (unint64_t *)&qword_1EB817EC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB1B0], MEMORY[0x1E4FBAEA0]);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_5:
    unint64_t v9 = sub_1AFDFA4CC(MEMORY[0x1E4FBC860]);
    sub_1AFD4B504(v2, v4);
    return v9;
  }
  sub_1AFD4B504(v2, v4);
  return v13;
}

void sub_1AFDFCB04(uint64_t a1@<X0>, void *a2@<X8>)
{
  unint64_t v3 = sub_1AFDFCBE4(a1);
  sub_1AFDFB658(v3);
  swift_bridgeObjectRelease();
  id v4 = objc_allocWithZone(MEMORY[0x1E4F7E628]);
  uint64_t v5 = (void *)sub_1AFFCAC78();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v4, sel_initWithConfigDictionary_, v5);

  *a2 = v6;
}

uint64_t sub_1AFDFCBA4()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 81, 7);
}

void sub_1AFDFCBDC(void *a1@<X8>)
{
  sub_1AFDFCB04(v1 + 16, a1);
}

unint64_t sub_1AFDFCBE4(uint64_t a1)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  sub_1AFFC91E8();
  swift_allocObject();
  sub_1AFFC91D8();
  long long v2 = *(_OWORD *)(a1 + 48);
  v16[2] = *(_OWORD *)(a1 + 32);
  void v16[3] = v2;
  char v17 = *(unsigned char *)(a1 + 64);
  long long v3 = *(_OWORD *)(a1 + 16);
  v16[0] = *(_OWORD *)a1;
  v16[1] = v3;
  sub_1AFE05D80();
  uint64_t v4 = sub_1AFFC91C8();
  unint64_t v6 = v5;
  swift_release();
  id v7 = self;
  id v8 = (void *)sub_1AFFC9778();
  *(void *)&v16[0] = 0;
  id v9 = objc_msgSend(v7, sel_JSONObjectWithData_options_error_, v8, 4, v16);

  if (!v9)
  {
    id v12 = *(id *)&v16[0];
    uint64_t v13 = (void *)sub_1AFFC9508();

    swift_willThrow();
    goto LABEL_5;
  }
  id v10 = *(id *)&v16[0];
  sub_1AFFCB6F8();
  swift_unknownObjectRelease();
  sub_1AFE05DD4(0, (unint64_t *)&qword_1EB817EC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB1B0], MEMORY[0x1E4FBAEA0]);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_5:
    unint64_t v11 = sub_1AFDFA4CC(MEMORY[0x1E4FBC860]);
    sub_1AFD4B504(v4, v6);
    return v11;
  }
  sub_1AFD4B504(v4, v6);
  return v15;
}

uint64_t sub_1AFDFCDF4@<X0>(const void *a1@<X0>, void *a2@<X8>)
{
  __dst[284] = *(id *)MEMORY[0x1E4F143B8];
  sub_1AFFC91E8();
  swift_allocObject();
  sub_1AFFC91D8();
  memcpy(__dst, a1, 0x8DBuLL);
  sub_1AFE05D2C();
  uint64_t v4 = sub_1AFFC91C8();
  unint64_t v6 = v5;
  swift_release();
  id v7 = self;
  id v8 = (void *)sub_1AFFC9778();
  __dst[0] = 0;
  id v9 = objc_msgSend(v7, sel_JSONObjectWithData_options_error_, v8, 4, __dst);

  id v10 = __dst[0];
  if (!v9) {
    goto LABEL_5;
  }
  id v11 = __dst[0];
  sub_1AFFCB6F8();
  swift_unknownObjectRelease();
  sub_1AFE05DD4(0, (unint64_t *)&qword_1EB817EC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB1B0], MEMORY[0x1E4FBAEA0]);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_6:
    id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F7E670]), sel_init);
    goto LABEL_7;
  }
  sub_1AFDFB658(v17);
  swift_bridgeObjectRelease();
  id v10 = objc_allocWithZone(MEMORY[0x1E4F7E670]);
  id v12 = (void *)sub_1AFFCAC78();
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(v10, sel_initWithPersonalizationTreatmentDictionary_, v12);

  if (!v13)
  {
    __break(1u);
LABEL_5:
    id v14 = v10;
    uint64_t v15 = (void *)sub_1AFFC9508();

    swift_willThrow();
    goto LABEL_6;
  }
LABEL_7:
  uint64_t result = sub_1AFD4B504(v4, v6);
  *a2 = v13;
  return result;
}

uint64_t sub_1AFDFD084()
{
  return MEMORY[0x1F4186498](v0, 2283, 7);
}

uint64_t sub_1AFDFD094@<X0>(void *a1@<X8>)
{
  return sub_1AFDFCDF4((const void *)(v1 + 16), a1);
}

id NewsCoreConfiguration.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void NewsCoreConfiguration.init()()
{
}

id NewsCoreConfiguration.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t NewsCoreConfiguration.isOrderFeedEndpointEnabled.getter()
{
  return 1;
}

uint64_t NewsCoreConfiguration.useSecureConnectionForAssets.getter()
{
  return 1;
}

uint64_t NewsCoreConfiguration.forYouRecordConfigID.getter()
{
  return 0x3134343334312D59;
}

uint64_t NewsCoreConfiguration.isPrivateDataEncryptionAllowed.getter()
{
  return 1;
}

uint64_t NewsCoreConfiguration.isPrivateDataEncryptionMigrationDesired.getter()
{
  return 0;
}

uint64_t NewsCoreConfiguration.privateDataEncryptionMigrationRequiresAllDevicesRunningTigris.getter()
{
  return 1;
}

uint64_t NewsCoreConfiguration.isPrivateDataMigrationCleanupEnabled.getter()
{
  return 0;
}

uint64_t NewsCoreConfiguration.privateDataShouldSecureSubscriptions.getter()
{
  return 0;
}

void NewsCoreConfiguration.topStoriesConfig.getter()
{
  sub_1AFDFD6B8();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AFFD0DC0;
  *(void *)&v24[0] = 0x496C656E6E616863;
  *((void *)&v24[0] + 1) = 0xE900000000000064;
  uint64_t v2 = MEMORY[0x1E4FBB1A0];
  sub_1AFFCB788();
  uint64_t v3 = v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_topStoriesConfiguration;
  uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_topStoriesConfiguration);
  uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_topStoriesConfiguration + 8);
  *(void *)(inited + 96) = v2;
  *(void *)(inited + 72) = v5;
  *(void *)(inited + 80) = v4;
  strcpy((char *)v24, "badgesTimeout");
  HIWORD(v24[0]) = -4864;
  sub_1AFFC8E38();
  sub_1AFFCB788();
  double v6 = *(double *)(v3 + 24);
  if ((~*(void *)&v6 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v6 <= -9.22337204e18)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v6 >= 9.22337204e18)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    return;
  }
  *(void *)(inited + 168) = MEMORY[0x1E4FBC1C8];
  *(void *)(inited + 144) = (uint64_t)v6;
  strcpy((char *)v24, "styleConfigs");
  BYTE13(v24[0]) = 0;
  HIWORD(v24[0]) = -5120;
  sub_1AFFCB788();
  uint64_t v7 = *(void *)(v3 + 16);
  int64_t v8 = *(void *)(v7 + 16);
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (v8)
  {
    uint64_t v28 = MEMORY[0x1E4FBC860];
    sub_1AFFC8E38();
    sub_1AFD9DB60(0, v8, 0);
    uint64_t v9 = v28;
    id v10 = (long long *)(v7 + 64);
    do
    {
      long long v11 = *(v10 - 1);
      long long v12 = *v10;
      long long v13 = v10[1];
      long long v14 = v10[2];
      uint64_t v15 = *((void *)v10 + 6);
      uint64_t v16 = *((void *)v10 + 7);
      v24[0] = *(v10 - 2);
      v24[1] = v11;
      void v24[2] = v12;
      v24[3] = v13;
      void v24[4] = v14;
      uint64_t v25 = v15;
      uint64_t v26 = v16;
      sub_1AFDFD720((uint64_t *)v24, &v27);
      unint64_t v17 = v27;
      uint64_t v28 = v9;
      unint64_t v19 = *(void *)(v9 + 16);
      unint64_t v18 = *(void *)(v9 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_1AFD9DB60(v18 > 1, v19 + 1, 1);
        uint64_t v9 = v28;
      }
      *(void *)(v9 + 16) = v19 + 1;
      *(void *)(v9 + 8 * v19 + 32) = v17;
      v10 += 6;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
  }
  sub_1AFE0227C();
  *(void *)(inited + 240) = v20;
  *(void *)(inited + 216) = v9;
  sub_1AFDF9EB4(inited);
  id v21 = objc_allocWithZone(MEMORY[0x1E4F7E878]);
  unint64_t v22 = (void *)sub_1AFFCAC78();
  swift_bridgeObjectRelease();
  id v23 = objc_msgSend(v21, sel_initWithConfigDictionary_, v22);

  if (!v23) {
    goto LABEL_15;
  }
}

void sub_1AFDFD6B8()
{
  if (!qword_1EB8183C8)
  {
    sub_1AFE05E30(255, (unint64_t *)&qword_1EB8181C0);
    unint64_t v0 = sub_1AFFCBC98();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8183C8);
    }
  }
}

unint64_t sub_1AFDFD720@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v6 = a1[5];
  uint64_t v7 = a1[7];
  uint64_t v11 = a1[4];
  uint64_t v12 = a1[6];
  uint64_t v13 = a1[9];
  uint64_t v14 = a1[8];
  uint64_t v15 = a1[11];
  uint64_t v16 = a1[10];
  sub_1AFDFD6B8();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AFFD2CC0;
  uint64_t v9 = MEMORY[0x1E4FBB1A0];
  sub_1AFFCB788();
  *(void *)(inited + 96) = v9;
  *(void *)(inited + 72) = v5;
  *(void *)(inited + 80) = v4;
  sub_1AFFC8E38();
  sub_1AFFCB788();
  *(void *)(inited + 168) = v9;
  *(void *)(inited + 144) = v3;
  *(void *)(inited + 152) = v2;
  sub_1AFFC8E38();
  sub_1AFFCB788();
  *(void *)(inited + 240) = v9;
  *(void *)(inited + 216) = v11;
  *(void *)(inited + 224) = v6;
  sub_1AFFC8E38();
  sub_1AFFCB788();
  *(void *)(inited + 312) = v9;
  *(void *)(inited + 288) = v12;
  *(void *)(inited + 296) = v7;
  sub_1AFFC8E38();
  sub_1AFFCB788();
  *(void *)(inited + 384) = v9;
  *(void *)(inited + 360) = v14;
  *(void *)(inited + 368) = v13;
  sub_1AFFC8E38();
  sub_1AFFCB788();
  *(void *)(inited + 456) = v9;
  *(void *)(inited + 432) = v16;
  *(void *)(inited + 440) = v15;
  sub_1AFFC8E38();
  unint64_t result = sub_1AFDF9EB4(inited);
  *a2 = result;
  return result;
}

uint64_t NewsCoreConfiguration.diversifyOptionalTopStories.getter()
{
  return 1;
}

uint64_t NewsCoreConfiguration.articleRapidUpdatesTimeout.getter()
{
  return 60;
}

uint64_t NewsCoreConfiguration.savedArticlesCutoffTime.getter()
{
  return 0;
}

uint64_t NewsCoreConfiguration.savedArticlesOpenedCutoffTime.getter()
{
  return 0;
}

uint64_t NewsCoreConfiguration.savedArticlesMaximumCountWiFi.getter()
{
  return 0;
}

uint64_t NewsCoreConfiguration.savedArticlesMaximumCountCellular.getter()
{
  return 0;
}

uint64_t NewsCoreConfiguration.endpointConfigsByEnvironment.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_endpointConfigurations);
  uint64_t v37 = MEMORY[0x1E4FBC868];
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v24 = v2 - 1;
    uint64_t v3 = 32;
    uint64_t v22 = v1;
    while (1)
    {
      uint64_t v23 = v3;
      memcpy(__dst, (const void *)(v1 + v3), sizeof(__dst));
      uint64_t v4 = __dst[33];
      uint64_t v30 = __dst[30];
      uint64_t v31 = __dst[32];
      uint64_t v5 = __dst[31];
      uint64_t v6 = __dst[29];
      uint64_t v28 = __dst[26];
      uint64_t v29 = __dst[28];
      uint64_t v7 = __dst[27];
      uint64_t v27 = __dst[24];
      uint64_t v8 = __dst[25];
      uint64_t v9 = __dst[11];
      uint64_t v26 = __dst[13];
      uint64_t v10 = __dst[9];
      uint64_t v34 = __dst[10];
      uint64_t v35 = __dst[12];
      uint64_t v11 = __dst[7];
      uint64_t v32 = __dst[6];
      uint64_t v33 = __dst[8];
      sub_1AFD9B5DC((uint64_t)__dst);
      uint64_t v12 = (void *)sub_1AFFCAE68();
      uint64_t v13 = FCEndpointEnvironmentForEnvironment();

      id v25 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithUnsignedInteger_, v13);
      objc_allocWithZone(MEMORY[0x1E4F7E3C8]);
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      id v14 = sub_1AFE01DBC(v32, v11, v33, v10, v34, v9, v35, v26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              v27,
              v8,
              v28,
              v7,
              v29,
              v6,
              v30,
              v5,
              v31,
              v4);
      if (v14)
      {
        uint64_t v15 = (uint64_t)v14;
        uint64_t v16 = v37;
        if ((v37 & 0xC000000000000001) != 0)
        {
          if (v37 >= 0) {
            uint64_t v16 = v37 & 0xFFFFFFFFFFFFFF8;
          }
          uint64_t result = sub_1AFFCB968();
          if (__OFADD__(result, 1))
          {
            __break(1u);
            return result;
          }
          uint64_t v16 = sub_1AFE02BC0(v16, result + 1);
          uint64_t v37 = v16;
        }
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        sub_1AFE03F88(v15, v25, isUniquelyReferenced_nonNull_native);
        uint64_t v37 = v16;

        swift_bridgeObjectRelease();
      }
      else
      {
        unint64_t v19 = (void *)sub_1AFE02778((unint64_t)v25);
      }
      sub_1AFE028C8((uint64_t)__dst);
      uint64_t v1 = v22;
      if (!v24)
      {
        swift_bridgeObjectRelease();
        unint64_t v20 = v37;
        goto LABEL_15;
      }
      --v24;
      uint64_t v3 = v23 + 272;
    }
  }
  sub_1AFFC8E38();
  unint64_t v20 = MEMORY[0x1E4FBC868];
LABEL_15:
  swift_bridgeObjectRelease();
  uint64_t v21 = sub_1AFDFBA48(v20);
  swift_bridgeObjectRelease();
  return v21;
}

void NewsCoreConfiguration.analyticsEnvelopeContentTypeConfigs(for:)()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_endpointConfigurations);
  uint64_t v2 = sub_1AFDFDF08();
  uint64_t v4 = v3;
  uint64_t v5 = v1[2];
  if (v5)
  {
    uint64_t v6 = v2;
    memcpy(__dst, v1 + 4, sizeof(__dst));
    if (__dst[0] != v6 || __dst[1] != v4)
    {
      uint64_t v8 = (char *)(v1 + 38);
      do
      {
        if (sub_1AFFCBCE8()) {
          break;
        }
        if (!--v5) {
          goto LABEL_15;
        }
        memcpy(__dst, v8, sizeof(__dst));
        BOOL v9 = __dst[0] == v6 && __dst[1] == v4;
        v8 += 272;
      }
      while (!v9);
    }
    sub_1AFD9B5DC((uint64_t)__dst);
    swift_bridgeObjectRelease();
    memcpy(__src, __dst, sizeof(__src));
  }
  else
  {
LABEL_15:
    sub_1AFD973BC(0, 0, 0, 0, 0, 0, 0, 0, __src, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0);
    swift_bridgeObjectRelease();
  }
  memcpy(__dst, __src, sizeof(__dst));
  uint64_t v10 = (void *)sub_1AFFCAE68();
  uint64_t v11 = (void *)sub_1AFFCAE68();
  sub_1AFE028C8((uint64_t)__dst);
  id v12 = (id)FCAnalyticsEnvelopeContentTypeConfigsByContentType();

  if (v12)
  {
    sub_1AFD8F6AC(0, (unint64_t *)&qword_1EB819E90);
    sub_1AFD8F6AC(0, &qword_1EB81B2A0);
    sub_1AFE040C8();
    sub_1AFFCAC88();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1AFDFDF08()
{
  return 0x4E574F4E4B4E55;
}

uint64_t NewsCoreConfiguration.personalizationTreatment()()
{
  sub_1AFFCA508();
  return v1;
}

id NewsCoreConfiguration.currentTreatment.getter()
{
  id v0 = objc_allocWithZone(NSNumber);

  return objc_msgSend(v0, sel_initWithInteger_, 0);
}

uint64_t NewsCoreConfiguration.shouldShowAlternateHeadlines.getter()
{
  return 0;
}

uint64_t NewsCoreConfiguration.subscriptionsGlobalMeteredCount.getter()
{
  return 0;
}

double NewsCoreConfiguration.endOfArticleMinPaidHeadlineRatio.getter()
{
  double result = *(double *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_appConfiguration + 3856);
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_appConfiguration + 3864)) {
    return 0.25;
  }
  return result;
}

uint64_t NewsCoreConfiguration.endOfArticleMaxInaccessiblePaidArticleCount.getter()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_appConfiguration + 3880)) {
    return 2;
  }
  else {
    return *(void *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_appConfiguration + 3872);
  }
}

uint64_t NewsCoreConfiguration.endOfArticleExpireArticlesAfter.getter()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_appConfiguration + 3896)) {
    return 2592000;
  }
  else {
    return *(void *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_appConfiguration + 3888);
  }
}

double NewsCoreConfiguration.interstitialAdLoadDelay.getter()
{
  double result = *(double *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_appConfiguration + 3904);
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_appConfiguration + 3912)) {
    return 1.0;
  }
  return result;
}

double NewsCoreConfiguration.adRequestThrottle.getter()
{
  double result = *(double *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_appConfiguration + 3920);
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_appConfiguration + 3928)) {
    return 1.0;
  }
  return result;
}

uint64_t NewsCoreConfiguration.todayFeedEnabled.getter()
{
  return 0;
}

uint64_t NewsCoreConfiguration.permanentChannelIDs.getter()
{
  return 0;
}

uint64_t NewsCoreConfiguration.briefingsTagID.getter()
{
  return 0;
}

id NewsCoreConfiguration.notificationsConfig.getter()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F7E5F0]);

  return objc_msgSend(v0, sel_init);
}

id NewsCoreConfiguration.embedProxyConfiguration.getter()
{
  uint64_t v1 = MEMORY[0x1E4FBC868];
  uint64_t v15 = MEMORY[0x1E4FBC868];
  unint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_appConfiguration + 4024);
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_appConfiguration + 4032);
  uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_appConfiguration + 4040);
  if (v2 >= 2)
  {
    uint64_t v7 = *(void *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_appConfiguration + 4016);
    sub_1AFFC8E38();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1AFE03884(v7, v2, 0x736F4879786F7270, 0xE900000000000074, isUniquelyReferenced_nonNull_native);
    uint64_t v6 = v1;
    uint64_t v15 = v1;
    swift_bridgeObjectRelease();
    if (v4) {
      goto LABEL_8;
    }
LABEL_9:
    sub_1AFE02300(0x74754179786F7270, 0xEF6769666E6F436FLL);
    swift_bridgeObjectRelease();
    uint64_t v10 = v15;
    goto LABEL_10;
  }
  sub_1AFE02300(0x736F4879786F7270, 0xE900000000000074);
  swift_bridgeObjectRelease();
  if (v2 == 1 || v4 == 0) {
    goto LABEL_9;
  }
  uint64_t v6 = v15;
LABEL_8:
  sub_1AFFC8E38();
  char v9 = swift_isUniquelyReferenced_nonNull_native();
  sub_1AFE03884(v3, v4, 0x74754179786F7270, 0xEF6769666E6F436FLL, v9);
  uint64_t v10 = v6;
  swift_bridgeObjectRelease();
LABEL_10:
  sub_1AFDFB270(v10);
  swift_bridgeObjectRelease();
  id v11 = objc_allocWithZone(MEMORY[0x1E4F7E3C0]);
  id v12 = (void *)sub_1AFFCAC78();
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(v11, sel_initWithDictionary_, v12);

  return v13;
}

uint64_t NewsCoreConfiguration.entitlementsRequestTimeoutDurationInSeconds.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_appConfiguration + 4008);
}

uint64_t NewsCoreConfiguration.peopleAlsoReadConfiguration.getter()
{
  return 0;
}

void NewsCoreConfiguration.appConfigRefreshRate.getter()
{
}

void NewsCoreConfiguration.trendingTopicsRefreshRate.getter()
{
}

void NewsCoreConfiguration.notificationEnabledChannelsRefreshFrequency.getter()
{
}

void NewsCoreConfiguration.presubscribedFeedIDs.getter()
{
}

void NewsCoreConfiguration.breakingNewsChannelID.getter()
{
}

void NewsCoreConfiguration.topVideosChannelID.getter()
{
}

void NewsCoreConfiguration.moreVideosChannelID.getter()
{
}

void NewsCoreConfiguration.trendingTagID.getter()
{
}

void NewsCoreConfiguration.featuredStoriesTagID.getter()
{
}

void NewsCoreConfiguration.savedStoriesTagID.getter()
{
}

void NewsCoreConfiguration.myMagazinesTagID.getter()
{
}

void NewsCoreConfiguration.mySportsTagID.getter()
{
}

void NewsCoreConfiguration.sportsTopStoriesTagID.getter()
{
}

void NewsCoreConfiguration.shortcutsTagID.getter()
{
}

void NewsCoreConfiguration.editorialGemsSectionID.getter()
{
}

void NewsCoreConfiguration.editorialChannelID.getter()
{
}

void NewsCoreConfiguration.hiddenFeedIDs.getter()
{
}

void NewsCoreConfiguration.forYouGroupsConfiguration.getter()
{
}

void NewsCoreConfiguration.minimumDurationBetweenForYouGroupsWeekday.getter()
{
}

void NewsCoreConfiguration.minimumDurationBetweenForYouGroupsWeekend.getter()
{
}

void NewsCoreConfiguration.minimumDurationBetweenTrendingGroupsWeekday.getter()
{
}

void NewsCoreConfiguration.minimumDurationBetweenTrendingGroupsWeekend.getter()
{
}

void NewsCoreConfiguration.expiredPaidSubscriptionGroupCutoffTime.getter()
{
}

void NewsCoreConfiguration.maximumNumberOfExpiredPaidSubscriptionGroups.getter()
{
}

void NewsCoreConfiguration.maximumTimesHeadlineInPaidSubscriptionGroup.getter()
{
}

void NewsCoreConfiguration.maximumPaidSubscriptionGroupSizeiPad.getter()
{
}

void NewsCoreConfiguration.maximumPaidSubscriptionGroupSizeiPhone.getter()
{
}

void NewsCoreConfiguration.optionalTopStoriesRefreshRate.getter()
{
}

void NewsCoreConfiguration.minimumTrendingUnseenRatio.getter()
{
}

void NewsCoreConfiguration.forYouVideoGroupsConfig.getter()
{
}

void NewsCoreConfiguration.minimumDistanceBetweenImageOnTopTiles.getter()
{
}

void NewsCoreConfiguration.expirePinnedArticlesAfter.getter()
{
}

void NewsCoreConfiguration.todayConfig(withIdentifier:queueConfigs:backgroundColorLight:backgroundColorDark:maxSlotCount:)()
{
}

id NewsCoreConfiguration.copy(with:)(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v2 = v1;
  int64_t v36 = v3;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v34 = *(void *)(v1 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_experimentalizableFieldPostfix + 8);
  uint64_t v35 = *(void *)(v1 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_experimentalizableFieldPostfix);
  memcpy(v50, (const void *)(v1 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_appConfiguration), 0x10BAuLL);
  memcpy(__dst, (const void *)(v1 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_appConfiguration), 0x10BAuLL);
  uint64_t v5 = v1 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_topStoriesConfiguration;
  uint64_t v6 = *(void *)(v1 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_topStoriesConfiguration);
  uint64_t v7 = *(void *)(v1 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_topStoriesConfiguration + 8);
  uint64_t v8 = *(void *)(v5 + 16);
  uint64_t v9 = *(void *)(v5 + 24);
  v48[0] = v6;
  v48[1] = v7;
  _OWORD v48[2] = v8;
  v48[3] = v9;
  uint64_t v10 = *(void *)(v2 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_newsUIConfiguration + 8);
  uint64_t v12 = *(void *)(v2 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_newsUIConfiguration + 16);
  uint64_t v11 = *(void *)(v2 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_newsUIConfiguration + 24);
  uint64_t v14 = *(void *)(v2 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_newsUIConfiguration + 32);
  uint64_t v13 = *(void *)(v2 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_newsUIConfiguration + 40);
  uint64_t v16 = *(void *)(v2 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_newsUIConfiguration + 48);
  uint64_t v15 = *(void *)(v2 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_newsUIConfiguration + 56);
  uint64_t v33 = *(void *)(v2 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_newsUIConfiguration + 64);
  v47[0] = *(void *)(v2 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_newsUIConfiguration);
  v47[1] = v10;
  _OWORD v47[2] = v12;
  v47[3] = v11;
  v47[4] = v14;
  v47[5] = v13;
  v47[6] = v16;
  v47[7] = v15;
  v47[8] = v33;
  memcpy(v46, (const void *)(v2 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_newsPersonalizationTreatment), 0x8DBuLL);
  uint64_t v32 = *(void *)(v2 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_endpointConfigurations);
  memcpy(v51, (const void *)(v2 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_paidBundleConfiguration), 0x1F9uLL);
  memcpy(v45, (const void *)(v2 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_paidBundleConfiguration), 0x1F9uLL);
  char v17 = *(unsigned char *)(v2 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_paidBundleViaOfferConfiguration + 16);
  uint64_t v18 = *(void *)(v2 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_paidBundleViaOfferConfiguration + 24);
  char v19 = *(unsigned char *)(v2 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_paidBundleViaOfferConfiguration + 32);
  uint64_t v20 = *(void *)(v2 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_paidBundleViaOfferConfiguration + 40);
  char v21 = *(unsigned char *)(v2 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_paidBundleViaOfferConfiguration + 48);
  uint64_t v22 = *(void *)(v2 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_paidBundleViaOfferConfiguration + 56);
  char v23 = *(unsigned char *)(v2 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_paidBundleViaOfferConfiguration + 64);
  long long v37 = *(_OWORD *)(v2 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_paidBundleViaOfferConfiguration);
  char v38 = v17;
  uint64_t v39 = v18;
  char v40 = v19;
  uint64_t v41 = v20;
  char v42 = v21;
  uint64_t v43 = v22;
  char v44 = v23;
  uint64_t v30 = *(void *)(v2 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_maxRetriesForDroppedFeeds);
  uint64_t v31 = *(void *)(v2 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_analyticsEndpointMaxPayloadSize);
  double v24 = *(double *)(v2 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_delayBeforeRetryingDroppedFeeds);
  unsigned __int8 v25 = *(unsigned char *)(v2 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_enableCacheFallbackForArticleRecirculation);
  double v26 = *(double *)(v2 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_prerollLoadingTimeout);
  double v27 = *(double *)(v2 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_prerollReadyToPlayTimeout);
  unsigned __int8 v28 = *(unsigned char *)(v2 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_isPrivateDataEncryptionRequired);
  objc_allocWithZone(ObjectType);
  sub_1AFFC8E38();
  sub_1AFDB3690((uint64_t)v50);
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFDB7DDC((uint64_t)v51);
  sub_1AFFC8E38();
  id result = NewsCoreConfiguration.init(experimentalizableFieldPostfix:appConfiguration:topStoriesConfiguration:newsUIConfiguration:newsPersonalizationTreatment:endpointConfigurations:paidBundleConfiguration:paidBundleViaOfferConfiguration:analyticsEndpointMaxPayloadSize:maxRetriesForDroppedFeeds:delayBeforeRetryingDroppedFeeds:enableCacheFallbackForArticleRecirculation:prerollLoadingTimeout:prerollReadyToPlayTimeout:isPrivateDataEncryptionRequired:)(v35, v34, __dst, v48, v47, v46, v32, v45, v24, v26, v27, &v37, v31, v30, v25, v28);
  v36[3] = ObjectType;
  *int64_t v36 = result;
  return result;
}

uint64_t NewsCoreConfiguration.universalLinksEnabled.getter()
{
  return 1;
}

uint64_t NewsCoreConfiguration.embedConfigurationAssetID.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_newsUIConfiguration);
  sub_1AFFC8E38();
  return v1;
}

uint64_t NewsCoreConfiguration.mediaSharingBlacklistedChannelIDs.getter()
{
  return sub_1AFFC8E38();
}

uint64_t NewsCoreConfiguration.webEmbedContentBlockers.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_newsUIConfiguration + 24);
  sub_1AFFC8E38();
  return v1;
}

uint64_t NewsCoreConfiguration.webEmbedContentBlockerOverrides.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_newsUIConfiguration + 40);
  sub_1AFFC8E38();
  return v1;
}

uint64_t NewsCoreConfiguration.anfRenderingConfiguration.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_newsUIConfiguration + 56);
  sub_1AFFC8E38();
  return v1;
}

uint64_t NewsCoreConfiguration.endOfArticleFeedConfigurationResourceId.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_appConfiguration + 1328);
  sub_1AFFC8E38();
  return v1;
}

uint64_t NewsCoreConfiguration.userConcernConfigurationResourceId.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_appConfiguration + 4104);
  sub_1AFFC8E38();
  return v1;
}

uint64_t NewsCoreConfiguration.aiAttributionArticleString.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_appConfiguration + 4120);
  sub_1AFFC8E38();
  return v1;
}

uint64_t NewsCoreConfiguration.paidBundleConfig.getter()
{
  sub_1AFFCA508();
  return v1;
}

id sub_1AFE0018C(void *a1)
{
  id v1 = a1;
  sub_1AFFCA508();

  return v3;
}

uint64_t NewsCoreConfiguration.paidBundleViaOfferConfig.getter()
{
  sub_1AFFCA508();
  return v1;
}

id NewsCoreConfiguration.newAdsEnabled.getter()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_appConfiguration + 3944)) {
    uint64_t v1 = 2;
  }
  else {
    uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_appConfiguration + 3936);
  }
  return objc_msgSend(self, sel_enabledForCurrentLevel_, v1);
}

id NewsCoreConfiguration.newsPersonalizationConfiguration.getter()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F7E5B8]);

  return objc_msgSend(v0, sel_init);
}

uint64_t NewsCoreConfiguration.subscriptionsPlacardGlobalMaximumPerDay.getter()
{
  uint64_t result = *(void *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_appConfiguration + 3960);
  if (result < 0) {
    __break(1u);
  }
  return result;
}

uint64_t NewsCoreConfiguration.subscriptionsPlacardPublisherFrequencyInSeconds.getter()
{
  double v1 = *(double *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_appConfiguration + 3952);
  if ((~*(void *)&v1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v1 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v1 < 9.22337204e18) {
    return (uint64_t)v1;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t NewsCoreConfiguration.subscriptionsGracePeriodForTokenVerificationSeconds.getter()
{
  double v1 = *(double *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_appConfiguration + 3968);
  if ((~*(void *)&v1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v1 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v1 < 9.22337204e18) {
    return (uint64_t)v1;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t NewsCoreConfiguration.hideAllPaywalls.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_appConfiguration + 3976);
}

uint64_t NewsCoreConfiguration.hideAlacartePaywalls.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_appConfiguration + 3977);
}

void NewsCoreConfiguration.iAdConfig.getter()
{
  sub_1AFD8F6AC(0, &qword_1EB8114A0);
  v1[0] = *(unsigned char *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_appConfiguration + 1560);
  long long v2 = *(_OWORD *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_appConfiguration + 1568);
  sub_1AFD5CBB4(v1);
}

uint64_t NewsCoreConfiguration.likeDislikeBehavior.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_appConfiguration + 3984);
}

uint64_t NewsCoreConfiguration.autoRefreshMinimumInterval.getter()
{
  return 120;
}

uint64_t NewsCoreConfiguration.deprecatedSportsTopicTagIds.getter()
{
  return MEMORY[0x1E4FBC860];
}

id sub_1AFE00608(uint64_t a1, uint64_t a2, Class *a3)
{
  id v3 = objc_msgSend(objc_allocWithZone(*a3), sel_init);

  return v3;
}

id NewsCoreConfiguration.puzzlesConfig.getter()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F7E748]);

  return objc_msgSend(v0, sel_init);
}

unint64_t NewsCoreConfiguration.articleConfig.getter()
{
  if (!*(void *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_appConfiguration + 4272)) {
    return sub_1AFDF9EB4(MEMORY[0x1E4FBC860]);
  }
  sub_1AFE05158(0, (unint64_t *)&qword_1EB819C78, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBAEA0]);
  sub_1AFE04130();
  uint64_t v1 = sub_1AFFCAD48();
  if (!v1) {
    return sub_1AFDF9EB4(MEMORY[0x1E4FBC860]);
  }
  uint64_t v2 = sub_1AFDFB658(v1);
  swift_bridgeObjectRelease();
  return v2;
}

void NewsCoreConfiguration.minimumFollowCountToRemovePersonalizePlacardInFollowingAndForYou.getter()
{
}

void NewsCoreConfiguration.onboardingFeedIDs.getter()
{
}

void NewsCoreConfiguration.recommendedCategories.getter()
{
}

void NewsCoreConfiguration.autoScrollToTopFeedTimeout.getter()
{
}

void NewsCoreConfiguration.tileProminenceScoreBalanceValue.getter()
{
}

void NewsCoreConfiguration.prefetchConfig.getter()
{
}

void NewsCoreConfiguration.topLevelCuratedTagIDs.getter()
{
}

void NewsCoreConfiguration.topLevelRecommendedTopicTagIDs.getter()
{
}

void NewsCoreConfiguration.topLevelRecommendedChannelTagIDs.getter()
{
}

void NewsCoreConfiguration.newFavoriteNotificationAlertsFrequency.getter()
{
}

void NewsCoreConfiguration.notificationArticleCacheTimeout.getter()
{
}

void NewsCoreConfiguration.notificationArticleWithRapidUpdatesCacheTimeout.getter()
{
}

void NewsCoreConfiguration.parsecPopulationFloor.getter()
{
}

void NewsCoreConfiguration.parsecPopulationCeiling.getter()
{
}

void NewsCoreConfiguration.widgetConfigID.getter()
{
}

void NewsCoreConfiguration.widgetMinimumArticleExposureDurationToBePreseenInMilliseconds.getter()
{
}

void NewsCoreConfiguration.widgetMinimumNumberOfTimesPreseenToBeSeen.getter()
{
}

void NewsCoreConfiguration.articleDiversificationSimilarityExpectationStart.getter()
{
}

void NewsCoreConfiguration.articleDiversificationSimilarityExpectationEnd.getter()
{
}

void NewsCoreConfiguration.articleDiversificationUniquePublisherExpectationSlope.getter()
{
}

void NewsCoreConfiguration.articleDiversificationUniquePublisherExpectationYIntercept.getter()
{
}

void NewsCoreConfiguration.personalizationBundleIdMappingResourceId.getter()
{
}

void NewsCoreConfiguration.personalizationUrlMappingResourceId.getter()
{
}

void NewsCoreConfiguration.personalizationWhitelistResourceId.getter()
{
}

void NewsCoreConfiguration.personalizationFavorabilityResourceId.getter()
{
}

void NewsCoreConfiguration.corryBarMaxArticleCountForArticleList.getter()
{
}

void NewsCoreConfiguration.corryBarMaxArticleCountForSingleArticle.getter()
{
}

void NewsCoreConfiguration.corryBarHideDiscoverMoreInterstitialForNonOnboardedUsers.getter()
{
}

void NewsCoreConfiguration.exploreArticleID.getter()
{
}

void NewsCoreConfiguration.externalAnalyticsConfigurations.getter()
{
}

void NewsCoreConfiguration.usAndUKUseAUWhatsNewFeatures.getter()
{
}

void NewsCoreConfiguration.stateRestorationAllowedTimeWindow.getter()
{
}

void NewsCoreConfiguration.stateRestorationOniPhoneEnabled.getter()
{
}

void NewsCoreConfiguration.terminateAppOnBackgroundAfterJoiningOrLeavingExperiment.getter()
{
}

void NewsCoreConfiguration.topStoriesPublishDates.getter()
{
}

void NewsCoreConfiguration.articleRecirculationConfigJSON.getter()
{
}

void NewsCoreConfiguration.trendingStyle.getter()
{
}

void NewsCoreConfiguration.shareDiscoverMoreVideosInfo.getter()
{
}

void NewsCoreConfiguration.articleRecirculationComponentPlacementConfigJSON.getter()
{
}

void NewsCoreConfiguration.articleRecirculationPopularFeedQueryTimeRange.getter()
{
}

void NewsCoreConfiguration.disableThumbnailsForArticleRecirculation.getter()
{
}

id sub_1AFE01DBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  if (a2)
  {
    objc_super v78 = (void *)sub_1AFFCAE68();
    swift_bridgeObjectRelease();
    if (a4) {
      goto LABEL_3;
    }
  }
  else
  {
    objc_super v78 = 0;
    if (a4)
    {
LABEL_3:
      char v77 = (void *)sub_1AFFCAE68();
      swift_bridgeObjectRelease();
      if (a6) {
        goto LABEL_4;
      }
      goto LABEL_24;
    }
  }
  char v77 = 0;
  if (a6)
  {
LABEL_4:
    char v76 = (void *)sub_1AFFCAE68();
    swift_bridgeObjectRelease();
    uint64_t v43 = a10;
    if (a8) {
      goto LABEL_5;
    }
    goto LABEL_25;
  }
LABEL_24:
  char v76 = 0;
  uint64_t v43 = a10;
  if (a8)
  {
LABEL_5:
    uint64_t v75 = (void *)sub_1AFFCAE68();
    swift_bridgeObjectRelease();
    uint64_t v44 = a12;
    if (v43) {
      goto LABEL_6;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t v75 = 0;
  uint64_t v44 = a12;
  if (v43)
  {
LABEL_6:
    uint64_t v74 = (void *)sub_1AFFCAE68();
    swift_bridgeObjectRelease();
    uint64_t v45 = a14;
    if (v44) {
      goto LABEL_7;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t v74 = 0;
  uint64_t v45 = a14;
  if (v44)
  {
LABEL_7:
    uint64_t v73 = (void *)sub_1AFFCAE68();
    swift_bridgeObjectRelease();
    uint64_t v46 = a16;
    if (v45) {
      goto LABEL_8;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t v73 = 0;
  uint64_t v46 = a16;
  if (v45)
  {
LABEL_8:
    uint64_t v72 = (void *)sub_1AFFCAE68();
    swift_bridgeObjectRelease();
    uint64_t v47 = a18;
    if (v46) {
      goto LABEL_9;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t v72 = 0;
  uint64_t v47 = a18;
  if (v46)
  {
LABEL_9:
    char v71 = (void *)sub_1AFFCAE68();
    swift_bridgeObjectRelease();
    uint64_t v48 = a20;
    if (v47) {
      goto LABEL_10;
    }
    goto LABEL_30;
  }
LABEL_29:
  char v71 = 0;
  uint64_t v48 = a20;
  if (v47)
  {
LABEL_10:
    long long v70 = (void *)sub_1AFFCAE68();
    swift_bridgeObjectRelease();
    uint64_t v49 = a22;
    if (v48) {
      goto LABEL_11;
    }
    goto LABEL_31;
  }
LABEL_30:
  long long v70 = 0;
  uint64_t v49 = a22;
  if (v48)
  {
LABEL_11:
    uint64_t v81 = (void *)sub_1AFFCAE68();
    swift_bridgeObjectRelease();
    uint64_t v50 = a24;
    if (v49) {
      goto LABEL_12;
    }
    goto LABEL_32;
  }
LABEL_31:
  uint64_t v81 = 0;
  uint64_t v50 = a24;
  if (v49)
  {
LABEL_12:
    long long v51 = (void *)sub_1AFFCAE68();
    swift_bridgeObjectRelease();
    uint64_t v52 = a26;
    if (v50) {
      goto LABEL_13;
    }
    goto LABEL_33;
  }
LABEL_32:
  long long v51 = 0;
  uint64_t v52 = a26;
  if (v50)
  {
LABEL_13:
    uint64_t v53 = (void *)sub_1AFFCAE68();
    swift_bridgeObjectRelease();
    uint64_t v54 = a28;
    if (v52) {
      goto LABEL_14;
    }
    goto LABEL_34;
  }
LABEL_33:
  uint64_t v53 = 0;
  uint64_t v54 = a28;
  if (v52)
  {
LABEL_14:
    uint64_t v55 = (void *)sub_1AFFCAE68();
    swift_bridgeObjectRelease();
    uint64_t v56 = a30;
    if (v54) {
      goto LABEL_15;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t v55 = 0;
  uint64_t v56 = a30;
  if (v54)
  {
LABEL_15:
    long long v69 = (void *)sub_1AFFCAE68();
    swift_bridgeObjectRelease();
    uint64_t v57 = a32;
    if (v56) {
      goto LABEL_16;
    }
    goto LABEL_36;
  }
LABEL_35:
  long long v69 = 0;
  uint64_t v57 = a32;
  if (v56)
  {
LABEL_16:
    uint64_t v58 = (void *)sub_1AFFCAE68();
    swift_bridgeObjectRelease();
    uint64_t v59 = a34;
    if (v57) {
      goto LABEL_17;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t v58 = 0;
  uint64_t v59 = a34;
  if (v57)
  {
LABEL_17:
    int v60 = (void *)sub_1AFFCAE68();
    swift_bridgeObjectRelease();
    uint64_t v61 = a36;
    if (v59) {
      goto LABEL_18;
    }
    goto LABEL_38;
  }
LABEL_37:
  int v60 = 0;
  uint64_t v61 = a36;
  if (v59)
  {
LABEL_18:
    uint64_t v62 = (void *)sub_1AFFCAE68();
    swift_bridgeObjectRelease();
    uint64_t v63 = a38;
    if (v61) {
      goto LABEL_19;
    }
    goto LABEL_39;
  }
LABEL_38:
  uint64_t v62 = 0;
  uint64_t v63 = a38;
  if (v61)
  {
LABEL_19:
    objc_super v64 = (void *)sub_1AFFCAE68();
    swift_bridgeObjectRelease();
    uint64_t v65 = a40;
    if (v63) {
      goto LABEL_20;
    }
LABEL_40:
    uint64_t v66 = 0;
    if (v65) {
      goto LABEL_21;
    }
LABEL_41:
    long long v67 = 0;
    goto LABEL_42;
  }
LABEL_39:
  objc_super v64 = 0;
  uint64_t v65 = a40;
  if (!v63) {
    goto LABEL_40;
  }
LABEL_20:
  uint64_t v66 = (void *)sub_1AFFCAE68();
  swift_bridgeObjectRelease();
  if (!v65) {
    goto LABEL_41;
  }
LABEL_21:
  long long v67 = (void *)sub_1AFFCAE68();
  swift_bridgeObjectRelease();
LABEL_42:
  id v80 = objc_msgSend(v79, sel_initWithClientAPIBaseURLString_notificationsBaseURLString_staticAssetBaseURLString_remoteDataSourceBaseURLString_newsletterAPIBaseURLString_appAnalyticsBaseURLString_fairPlayBaseURLString_searchAPIBaseURLString_puzzlesArchiveAPIBaseURLString_appAnalyticsNotificationReceiptBaseURLString_authTokenAPIBaseURLString_sportsDataVisualizationAPIBaseURLString_fineGrainedNewsletterSubscriptionBaseURLString_appAnalyticsSportsEventsBaseURLString_appAnalyticsAppHealthBaseURLString_ckOrderFeedBaseURLString_ckMultiFetchBaseURLString_ckRecordFetchBaseURLString_ckEdgeCachedOrderFeedBaseURLString_ckEdgeCachedMultiFetchBaseURLString_, v78, v77, v76, v75, v74, v73, v72, v71, v70, v81, v51, v53, v55, v69, v58, v60, v62,
          v64,
          v66,
          v67);

  return v80;
}

void sub_1AFE0227C()
{
  if (!qword_1EB818028)
  {
    sub_1AFE05DD4(255, (unint64_t *)&qword_1EB817ED0, MEMORY[0x1E4FBB960], MEMORY[0x1E4FBB968], MEMORY[0x1E4FBAEA0]);
    unint64_t v0 = sub_1AFFCB288();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB818028);
    }
  }
}

uint64_t sub_1AFE02300(uint64_t a1, uint64_t a2)
{
  id v3 = v2;
  sub_1AFFC8E38();
  unint64_t v6 = sub_1AFD79CC8(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  uint64_t *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1AFEB8068();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 16 * v6);
  sub_1AFE02E10(v6, v9);
  uint64_t *v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1AFE023E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1AFE02490(a1, a2, (uint64_t (*)(void))type metadata accessor for QuoteDetail, (uint64_t (*)(void))type metadata accessor for QuoteDetail, (uint64_t (*)(void))type metadata accessor for QuoteDetail, (void (*)(void))sub_1AFEB8230, a3);
}

uint64_t sub_1AFE0243C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1AFE02490(a1, a2, (uint64_t (*)(void))type metadata accessor for Quote, (uint64_t (*)(void))type metadata accessor for Quote, (uint64_t (*)(void))type metadata accessor for Quote, (void (*)(void))sub_1AFEB84DC, a3);
}

uint64_t sub_1AFE02490@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t (*a4)(void)@<X3>, uint64_t (*a5)(void)@<X4>, void (*a6)(void)@<X5>, uint64_t a7@<X8>)
{
  uint64_t v12 = v7;
  sub_1AFFC8E38();
  unint64_t v16 = sub_1AFD79CC8(a1, a2);
  LOBYTE(a2) = v17;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = *v12;
    uint64_t v29 = *v12;
    *uint64_t v12 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      a6();
      uint64_t v19 = v29;
    }
    swift_bridgeObjectRelease();
    uint64_t v20 = *(void *)(v19 + 56);
    uint64_t v21 = a3(0);
    uint64_t v28 = *(void *)(v21 - 8);
    sub_1AFE05634(v20 + *(void *)(v28 + 72) * v16, a7, a4);
    sub_1AFE033AC(v16, v19, a5);
    *uint64_t v12 = v19;
    swift_bridgeObjectRelease();
    uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56);
    uint64_t v23 = a7;
    uint64_t v24 = 0;
    uint64_t v25 = v21;
  }
  else
  {
    uint64_t v26 = a3(0);
    uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56);
    uint64_t v25 = v26;
    uint64_t v23 = a7;
    uint64_t v24 = 1;
  }

  return v22(v23, v24, 1, v25);
}

double sub_1AFE02654@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  sub_1AFFC8E38();
  unint64_t v8 = sub_1AFD79CC8(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v17 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1AFEB89B8();
      uint64_t v11 = v17;
    }
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void *)(v11 + 56) + 48 * v8;
    uint64_t v13 = *(void *)(v12 + 24);
    uint64_t v14 = *(void *)(v12 + 32);
    __int16 v15 = *(_WORD *)(v12 + 40);
    *(void *)a3 = *(void *)v12;
    *(_OWORD *)(a3 + 8) = *(_OWORD *)(v12 + 8);
    *(void *)(a3 + 24) = v13;
    *(void *)(a3 + 32) = v14;
    *(_WORD *)(a3 + 40) = v15;
    sub_1AFE02FE8(v8, v11);
    *uint64_t v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *(_OWORD *)(a3 + 26) = 0u;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1AFE02778(unint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  if ((v4 & 0xC000000000000001) == 0)
  {
LABEL_8:
    sub_1AFFC8E38();
    a1 = sub_1AFD79D88(a1);
    char v13 = v12;
    swift_bridgeObjectRelease();
    if (v13)
    {
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v9 = *v2;
      uint64_t v17 = *v2;
      *uint64_t v2 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_1AFEB8BD4();
        uint64_t v9 = v17;
      }
      goto LABEL_11;
    }
    return 0;
  }
  if (v4 < 0) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = v4 & 0xFFFFFFFFFFFFFF8;
  }
  sub_1AFFC8E38();
  id v6 = (id)a1;
  uint64_t v7 = sub_1AFFCB978();

  if (!v7)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_unknownObjectRelease();
  uint64_t v8 = sub_1AFFCB968();
  uint64_t v9 = sub_1AFE02BC0(v5, v8);
  sub_1AFFC8E48();
  a1 = sub_1AFD79D88((uint64_t)v6);
  char v11 = v10;
  swift_release();
  if ((v11 & 1) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
LABEL_11:

  uint64_t v15 = *(void *)(*(void *)(v9 + 56) + 8 * a1);
  sub_1AFE031E0(a1, v9);
  *uint64_t v2 = v9;
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_1AFE028C8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1AFE029EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1AFE02490(a1, a2, (uint64_t (*)(void))type metadata accessor for EarningsCalendarEventModel, (uint64_t (*)(void))type metadata accessor for EarningsCalendarEventModel, (uint64_t (*)(void))type metadata accessor for EarningsCalendarEventModel, (void (*)(void))sub_1AFEB95E0, a3);
}

uint64_t sub_1AFE02A40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1AFE02490(a1, a2, type metadata accessor for Chart, type metadata accessor for Chart, type metadata accessor for Chart, (void (*)(void))sub_1AFEB98A8, a3);
}

double sub_1AFE02A94@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  id v3 = v2;
  sub_1AFFC8E38();
  unint64_t v6 = sub_1AFD7A010(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v13 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1AFEBAEF8();
      uint64_t v9 = v13;
    }
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = sub_1AFFCB948();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v6, v11);
    sub_1AFD8DDEC((_OWORD *)(*(void *)(v9 + 56) + 32 * v6), a2);
    sub_1AFE035CC(v6, v9);
    uint64_t *v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

uint64_t sub_1AFE02BC0(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_1AFE05C24();
    uint64_t v2 = sub_1AFFCB9F8();
    uint64_t v18 = v2;
    sub_1AFFCB958();
    uint64_t v3 = sub_1AFFCB988();
    if (v3)
    {
      uint64_t v4 = v3;
      sub_1AFD8F6AC(0, (unint64_t *)&qword_1EB819E90);
      do
      {
        swift_dynamicCast();
        sub_1AFD8F6AC(0, &qword_1EB818140);
        swift_dynamicCast();
        uint64_t v2 = v18;
        unint64_t v12 = *(void *)(v18 + 16);
        if (*(void *)(v18 + 24) <= v12)
        {
          sub_1AFEB335C(v12 + 1, 1);
          uint64_t v2 = v18;
        }
        uint64_t result = sub_1AFFCB5F8();
        uint64_t v6 = v2 + 64;
        uint64_t v7 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v8 = result & ~v7;
        unint64_t v9 = v8 >> 6;
        if (((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6))) != 0)
        {
          unint64_t v10 = __clz(__rbit64((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6)))) | v8 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v13 = 0;
          unint64_t v14 = (unint64_t)(63 - v7) >> 6;
          do
          {
            if (++v9 == v14 && (v13 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v15 = v9 == v14;
            if (v9 == v14) {
              unint64_t v9 = 0;
            }
            v13 |= v15;
            uint64_t v16 = *(void *)(v6 + 8 * v9);
          }
          while (v16 == -1);
          unint64_t v10 = __clz(__rbit64(~v16)) + (v9 << 6);
        }
        *(void *)(v6 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        uint64_t v11 = 8 * v10;
        *(void *)(*(void *)(v2 + 48) + v11) = v17;
        *(void *)(*(void *)(v2 + 56) + v11) = v4;
        ++*(void *)(v2 + 16);
        uint64_t v4 = sub_1AFFCB988();
      }
      while (v4);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC868];
  }
  return v2;
}

unint64_t sub_1AFE02E10(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_1AFFCB748();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1AFFCBDF8();
        sub_1AFFC8E38();
        sub_1AFFCAF68();
        uint64_t v9 = sub_1AFFCBE38();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          unint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          char v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *unint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          BOOL v15 = (_OWORD *)(v14 + 16 * v3);
          uint64_t v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            _OWORD *v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *uint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1AFE02FE8(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_1AFFCB748();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1AFFCBDF8();
        sub_1AFFC8E38();
        sub_1AFFCAF68();
        uint64_t v11 = sub_1AFFCBE38();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v12 = v11 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 < v8) {
            goto LABEL_5;
          }
        }
        else if (v12 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v12)
        {
LABEL_11:
          uint64_t v13 = *(void *)(a2 + 48);
          uint64_t v14 = (_OWORD *)(v13 + 16 * v3);
          BOOL v15 = (_OWORD *)(v13 + 16 * v6);
          if (v3 != v6 || v14 >= v15 + 1) {
            *uint64_t v14 = *v15;
          }
          uint64_t v16 = *(void *)(a2 + 56);
          uint64_t v17 = (long long *)(v16 + 48 * v3);
          uint64_t v18 = (long long *)(v16 + 48 * v6);
          if (48 * v3 < (uint64_t)(48 * v6) || v17 >= v18 + 3 || (v19 = v3 == v6, int64_t v3 = v6, !v19))
          {
            long long v9 = *v18;
            long long v10 = v18[2];
            v17[1] = v18[1];
            void v17[2] = v10;
            *uint64_t v17 = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v21 = *v20;
    uint64_t v22 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v22 = *v20;
    uint64_t v21 = (-1 << result) - 1;
  }
  *uint64_t v20 = v22 & v21;
  uint64_t v23 = *(void *)(a2 + 16);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_1AFE031E0(unint64_t a1, uint64_t a2)
{
  int64_t v3 = a1;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t v8 = sub_1AFFCB748();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        id v10 = *(id *)(*(void *)(a2 + 48) + 8 * v6);
        uint64_t v11 = sub_1AFFCB5F8();

        unint64_t v12 = v11 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v3 >= (uint64_t)v12)
          {
LABEL_16:
            uint64_t v15 = *(void *)(a2 + 48);
            uint64_t v16 = (void *)(v15 + 8 * v3);
            uint64_t v17 = (void *)(v15 + 8 * v6);
            if (v3 != v6 || v16 >= v17 + 1) {
              *uint64_t v16 = *v17;
            }
            uint64_t v18 = *(void *)(a2 + 56);
            BOOL v19 = (void *)(v18 + 8 * v3);
            uint64_t v20 = (void *)(v18 + 8 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v19 >= v20 + 1))
            {
              void *v19 = *v20;
              int64_t v3 = v6;
            }
          }
        }
        else if (v12 >= v9 || v3 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v22 = *v21;
    uint64_t v23 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v21 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    uint64_t v23 = *v21;
    uint64_t v22 = (-1 << a1) - 1;
  }
  *uint64_t v21 = v23 & v22;
  uint64_t v24 = *(void *)(a2 + 16);
  BOOL v25 = __OFSUB__(v24, 1);
  uint64_t v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_1AFE03394(unint64_t a1, uint64_t a2)
{
  return sub_1AFE033AC(a1, a2, (uint64_t (*)(void))type metadata accessor for EarningsCalendarEventModel);
}

unint64_t sub_1AFE033AC(unint64_t result, uint64_t a2, uint64_t (*a3)(void))
{
  int64_t v4 = result;
  uint64_t v5 = a2 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v7 = (result + 1) & ~v6;
  if (((1 << v7) & *(void *)(a2 + 64 + 8 * (v7 >> 6))) != 0)
  {
    uint64_t v9 = ~v6;
    uint64_t result = sub_1AFFCB748();
    if ((*(void *)(v5 + 8 * (v7 >> 6)) & (1 << v7)) != 0)
    {
      unint64_t v10 = (result + 1) & v9;
      while (1)
      {
        sub_1AFFCBDF8();
        sub_1AFFC8E38();
        sub_1AFFCAF68();
        uint64_t v11 = sub_1AFFCBE38();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v12 = v11 & v9;
        if (v4 >= (uint64_t)v10) {
          break;
        }
        if (v12 < v10) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v13 = *(void *)(a2 + 48);
        uint64_t v14 = (_OWORD *)(v13 + 16 * v4);
        uint64_t v15 = (_OWORD *)(v13 + 16 * v7);
        if (v4 != v7 || v14 >= v15 + 1) {
          *uint64_t v14 = *v15;
        }
        uint64_t v16 = *(void *)(a2 + 56);
        uint64_t v17 = *(void *)(*(void *)(a3(0) - 8) + 72);
        int64_t v18 = v17 * v4;
        uint64_t result = v16 + v17 * v4;
        int64_t v19 = v17 * v7;
        unint64_t v20 = v16 + v17 * v7 + v17;
        if (v18 < v19 || result >= v20)
        {
          uint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v4 = v7;
          if (v18 == v19) {
            goto LABEL_6;
          }
          uint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v4 = v7;
LABEL_6:
        unint64_t v7 = (v7 + 1) & v9;
        if (((*(void *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v12 < v10) {
        goto LABEL_6;
      }
LABEL_11:
      if (v4 < (uint64_t)v12) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    uint64_t v22 = (uint64_t *)(v5 + 8 * ((unint64_t)v4 >> 6));
    uint64_t v23 = *v22;
    uint64_t v24 = (-1 << v4) - 1;
  }
  else
  {
    uint64_t v22 = (uint64_t *)(v5 + 8 * (result >> 6));
    uint64_t v24 = *v22;
    uint64_t v23 = (-1 << result) - 1;
  }
  *uint64_t v22 = v24 & v23;
  uint64_t v25 = *(void *)(a2 + 16);
  BOOL v26 = __OFSUB__(v25, 1);
  uint64_t v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_1AFE035CC(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1AFFCB948();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(void *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    uint64_t v10 = ~v8;
    uint64_t v39 = a2 + 64;
    uint64_t v11 = sub_1AFFCB748();
    uint64_t v12 = v39;
    if ((*(void *)(v39 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      unint64_t v37 = (v11 + 1) & v10;
      uint64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v13 = v5 + 16;
      int64_t v36 = v14;
      uint64_t v15 = *(void *)(v13 + 56);
      uint64_t v38 = v13;
      uint64_t v16 = (void (**)(char *, uint64_t))(v13 - 8);
      do
      {
        int64_t v17 = v15 * v9;
        v36(v7, *(void *)(a2 + 48) + v15 * v9, v4);
        uint64_t v18 = sub_1AFFCAD58();
        (*v16)(v7, v4);
        unint64_t v19 = v18 & v10;
        if (a1 >= (uint64_t)v37)
        {
          if (v19 >= v37 && a1 >= (uint64_t)v19)
          {
LABEL_17:
            uint64_t v22 = *(void *)(a2 + 48);
            unint64_t v23 = v22 + v15 * a1;
            unint64_t v24 = v22 + v17 + v15;
            if (v15 * a1 < v17 || v23 >= v24)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v17)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v26 = *(void *)(a2 + 56);
            uint64_t v27 = (_OWORD *)(v26 + 32 * a1);
            uint64_t v28 = (_OWORD *)(v26 + 32 * v9);
            uint64_t v12 = v39;
            if (a1 != v9 || (a1 = v9, v27 >= v28 + 2))
            {
              long long v29 = v28[1];
              *uint64_t v27 = *v28;
              v27[1] = v29;
              a1 = v9;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v37 || a1 >= (uint64_t)v19)
        {
          goto LABEL_17;
        }
        uint64_t v12 = v39;
LABEL_5:
        unint64_t v9 = (v9 + 1) & v10;
      }
      while (((*(void *)(v12 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    uint64_t v30 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v31 = *v30;
    uint64_t v32 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v30 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v32 = *v30;
    uint64_t v31 = (-1 << a1) - 1;
  }
  *uint64_t v30 = v32 & v31;
  uint64_t v33 = *(void *)(a2 + 16);
  BOOL v34 = __OFSUB__(v33, 1);
  uint64_t v35 = v33 - 1;
  if (v34)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v35;
    ++*(_DWORD *)(a2 + 36);
  }
}

uint64_t sub_1AFE03884(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = (void **)v5;
  uint64_t v12 = (void *)*v5;
  unint64_t v14 = sub_1AFD79CC8(a3, a4);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a5 & 1) != 0)
  {
LABEL_7:
    unint64_t v20 = *v6;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = (uint64_t *)(v20[7] + 16 * v14);
      uint64_t result = swift_bridgeObjectRelease();
      *uint64_t v21 = a1;
      v21[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_1AFEB8068();
    goto LABEL_7;
  }
  sub_1AFEB2018(v17, a5 & 1);
  unint64_t v23 = sub_1AFD79CC8(a3, a4);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_15:
    uint64_t result = sub_1AFFCBD68();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  unint64_t v20 = *v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1AFFB24EC(v14, a3, a4, a1, a2, v20);

  return sub_1AFFC8E38();
}

uint64_t sub_1AFE039D8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1AFD79CC8(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    char v18 = *v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t v20 = type metadata accessor for QuoteDetail();
      return sub_1AFE05A04(a1, v19 + *(void *)(*(void *)(v20 - 8) + 72) * v12, (uint64_t (*)(void))type metadata accessor for QuoteDetail);
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1AFEB8230();
    goto LABEL_7;
  }
  sub_1AFEB234C(v15, a4 & 1);
  unint64_t v22 = sub_1AFD79CC8(a2, a3);
  if ((v16 & 1) != (v23 & 1))
  {
LABEL_15:
    uint64_t result = sub_1AFFCBD68();
    __break(1u);
    return result;
  }
  unint64_t v12 = v22;
  char v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1AFFB253C(v12, a2, a3, a1, v18);

  return sub_1AFFC8E38();
}

uint64_t sub_1AFE03B44(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1AFD79CC8(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    char v18 = *v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t v20 = type metadata accessor for Quote();
      return sub_1AFE05A04(a1, v19 + *(void *)(*(void *)(v20 - 8) + 72) * v12, (uint64_t (*)(void))type metadata accessor for Quote);
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1AFEB84DC();
    goto LABEL_7;
  }
  sub_1AFEB2744(v15, a4 & 1);
  unint64_t v22 = sub_1AFD79CC8(a2, a3);
  if ((v16 & 1) != (v23 & 1))
  {
LABEL_15:
    uint64_t result = sub_1AFFCBD68();
    __break(1u);
    return result;
  }
  unint64_t v12 = v22;
  char v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1AFFB2568(v12, a2, a3, a1, v18);

  return sub_1AFFC8E38();
}

uint64_t sub_1AFE03CB0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1AFD79CC8(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1AFEB8788();
      goto LABEL_7;
    }
    sub_1AFEB2B3C(v15, a4 & 1);
    unint64_t v21 = sub_1AFD79CC8(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      char v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_1AFFCBD68();
    __break(1u);
    return result;
  }
LABEL_7:
  char v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = v18[7] + 136 * v12;
    return sub_1AFE05240(a1, v19);
  }
LABEL_13:
  sub_1AFFB2594(v12, a2, a3, a1, v18);

  return sub_1AFFC8E38();
}

uint64_t sub_1AFE03DFC(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1AFD79CC8(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1AFEB89B8();
      goto LABEL_7;
    }
    sub_1AFEB2FCC(v15, a4 & 1);
    unint64_t v21 = sub_1AFD79CC8(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      char v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_1AFFCBD68();
    __break(1u);
    return result;
  }
LABEL_7:
  char v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = v18[7] + 48 * v12;
    return sub_1AFE050A0((uint64_t)a1, v19);
  }
LABEL_13:
  sub_1AFFB2608(v12, a2, a3, a1, v18);

  return sub_1AFFC8E38();
}

uint64_t sub_1AFE03F48(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1AFE04B80(a1, a2, a3, a4, (void (*)(void))sub_1AFEB8BB8, (void (*)(void))sub_1AFEB3340, (void (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AFFB2664);
}

void sub_1AFE03F88(uint64_t a1, void *a2, char a3)
{
  uint64_t v4 = (void **)v3;
  unint64_t v7 = (void *)*v3;
  unint64_t v9 = sub_1AFD79D88((uint64_t)a2);
  uint64_t v10 = v7[2];
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v13 = v8;
  uint64_t v14 = v7[3];
  if (v14 >= v12 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v15 = *v4;
    if (v13)
    {
LABEL_8:
      uint64_t v16 = v15[7];

      *(void *)(v16 + 8 * v9) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_1AFEB8BD4();
    goto LABEL_7;
  }
  sub_1AFEB335C(v12, a3 & 1);
  unint64_t v17 = sub_1AFD79D88((uint64_t)a2);
  if ((v13 & 1) != (v18 & 1))
  {
LABEL_15:
    sub_1AFD8F6AC(0, (unint64_t *)&qword_1EB819E90);
    sub_1AFFCBD68();
    __break(1u);
    return;
  }
  unint64_t v9 = v17;
  uint64_t v15 = *v4;
  if (v13) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1AFFB2668(v9, (uint64_t)a2, a1, v15);

  id v19 = a2;
}

unint64_t sub_1AFE040C8()
{
  unint64_t result = qword_1EB8181A0;
  if (!qword_1EB8181A0)
  {
    sub_1AFD8F6AC(255, (unint64_t *)&qword_1EB819E90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8181A0);
  }
  return result;
}

unint64_t sub_1AFE04130()
{
  unint64_t result = qword_1EB819C80;
  if (!qword_1EB819C80)
  {
    sub_1AFE05158(255, (unint64_t *)&qword_1EB819C78, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBAEA0]);
    sub_1AFDFC8AC(&qword_1EB819BA8, MEMORY[0x1E4FAAFC8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819C80);
  }
  return result;
}

uint64_t type metadata accessor for NewsCoreConfiguration()
{
  return self;
}

uint64_t method lookup function for NewsCoreConfiguration(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for NewsCoreConfiguration);
}

uint64_t dispatch thunk of NewsCoreConfiguration.__allocating_init(experimentalizableFieldPostfix:appConfiguration:topStoriesConfiguration:newsUIConfiguration:newsPersonalizationTreatment:endpointConfigurations:paidBundleConfiguration:paidBundleViaOfferConfiguration:analyticsEndpointMaxPayloadSize:maxRetriesForDroppedFeeds:delayBeforeRetryingDroppedFeeds:enableCacheFallbackForArticleRecirculation:prerollLoadingTimeout:prerollReadyToPlayTimeout:isPrivateDataEncryptionRequired:)()
{
  return (*(uint64_t (**)(void))(v0 + 224))();
}

void sub_1AFE04278()
{
  if (!qword_1E9AFAFD8)
  {
    type metadata accessor for FileAttributeKey(255);
    sub_1AFDFC8AC((unint64_t *)&unk_1EB8180C0, type metadata accessor for FileAttributeKey);
    unint64_t v0 = sub_1AFFCBA18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9AFAFD8);
    }
  }
}

uint64_t sub_1AFE04318(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1AFD79CC8(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1AFEB91A8();
      goto LABEL_7;
    }
    sub_1AFEB3D64(v15, a4 & 1);
    unint64_t v21 = sub_1AFD79CC8(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      char v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_1AFFCBD68();
    __break(1u);
    return result;
  }
LABEL_7:
  char v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = v18[7] + 104 * v12;
    return sub_1AFE050FC(a1, v19);
  }
LABEL_13:
  sub_1AFFB26B0(v12, a2, a3, a1, v18);

  return sub_1AFFC8E38();
}

uint64_t sub_1AFE04464(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1AFD79CC8(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    char v18 = *v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t v20 = type metadata accessor for EarningsCalendarEventModel();
      return sub_1AFE05A04(a1, v19 + *(void *)(*(void *)(v20 - 8) + 72) * v12, (uint64_t (*)(void))type metadata accessor for EarningsCalendarEventModel);
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1AFEB95E0();
    goto LABEL_7;
  }
  sub_1AFEB4498(v15, a4 & 1);
  unint64_t v22 = sub_1AFD79CC8(a2, a3);
  if ((v16 & 1) != (v23 & 1))
  {
LABEL_15:
    uint64_t result = sub_1AFFCBD68();
    __break(1u);
    return result;
  }
  unint64_t v12 = v22;
  char v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1AFFB271C(v12, a2, a3, a1, v18);

  return sub_1AFFC8E38();
}

uint64_t sub_1AFE045D0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1AFD79CC8(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    char v18 = *v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t v20 = type metadata accessor for Chart(0);
      return sub_1AFE05A04(a1, v19 + *(void *)(*(void *)(v20 - 8) + 72) * v12, type metadata accessor for Chart);
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1AFEB98A8();
    goto LABEL_7;
  }
  sub_1AFEB48AC(v15, a4 & 1);
  unint64_t v22 = sub_1AFD79CC8(a2, a3);
  if ((v16 & 1) != (v23 & 1))
  {
LABEL_15:
    uint64_t result = sub_1AFFCBD68();
    __break(1u);
    return result;
  }
  unint64_t v12 = v22;
  char v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1AFFB274C(v12, a2, a3, a1, v18);

  return sub_1AFFC8E38();
}

uint64_t sub_1AFE0473C(uint64_t a1, unint64_t *a2, char a3)
{
  uint64_t v4 = (void **)v3;
  char v8 = (void *)*v3;
  unint64_t v10 = sub_1AFD79E90(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 >= v13 && (a3 & 1) != 0)
  {
LABEL_7:
    char v16 = *v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_1AFEB9B54();
    goto LABEL_7;
  }
  sub_1AFEB4CA4(v13, a3 & 1);
  unint64_t v19 = sub_1AFD79E90(a2);
  if ((v14 & 1) != (v20 & 1))
  {
LABEL_15:
    uint64_t result = sub_1AFFCBD68();
    __break(1u);
    return result;
  }
  unint64_t v10 = v19;
  char v16 = *v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1AFFB2748(v10, (uint64_t)a2, a1, v16);

  return sub_1AFD76370((uint64_t)a2);
}

uint64_t sub_1AFE0486C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  unint64_t v7 = (void **)v6;
  char v14 = (void *)*v6;
  unint64_t v16 = sub_1AFD79CC8(a4, a5);
  uint64_t v17 = v14[2];
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v20 = v15;
  uint64_t v21 = v14[3];
  if (v21 >= v19 && (a6 & 1) != 0)
  {
LABEL_7:
    unint64_t v22 = *v7;
    if (v20)
    {
LABEL_8:
      uint64_t v23 = v22[7] + 24 * v16;
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)uint64_t v23 = a1;
      *(void *)(v23 + 8) = a2;
      *(unsigned char *)(v23 + 16) = a3 & 1;
      return result;
    }
    goto LABEL_11;
  }
  if (v21 >= v19 && (a6 & 1) == 0)
  {
    sub_1AFEB9F5C();
    goto LABEL_7;
  }
  sub_1AFEB5438(v19, a6 & 1);
  unint64_t v25 = sub_1AFD79CC8(a4, a5);
  if ((v20 & 1) != (v26 & 1))
  {
LABEL_15:
    uint64_t result = sub_1AFFCBD68();
    __break(1u);
    return result;
  }
  unint64_t v16 = v25;
  unint64_t v22 = *v7;
  if (v20) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1AFFB27E8(v16, a4, a5, a1, a2, a3 & 1, v22);

  return sub_1AFFC8E38();
}

uint64_t sub_1AFE049D4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1AFD79CC8(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    BOOL v18 = *v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t v20 = type metadata accessor for YahooMultiQuoteItem(0);
      return sub_1AFE05A04(a1, v19 + *(void *)(*(void *)(v20 - 8) + 72) * v12, type metadata accessor for YahooMultiQuoteItem);
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1AFEBA740();
    goto LABEL_7;
  }
  sub_1AFEB63E4(v15, a4 & 1);
  unint64_t v22 = sub_1AFD79CC8(a2, a3);
  if ((v16 & 1) != (v23 & 1))
  {
LABEL_15:
    uint64_t result = sub_1AFFCBD68();
    __break(1u);
    return result;
  }
  unint64_t v12 = v22;
  BOOL v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1AFFB283C(v12, a2, a3, a1, v18);

  return sub_1AFFC8E38();
}

uint64_t sub_1AFE04B40(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1AFE04B80(a1, a2, a3, a4, (void (*)(void))sub_1AFEBA9EC, (void (*)(void))sub_1AFEB67DC, (void (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AFFB2664);
}

uint64_t sub_1AFE04B80(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(void), void (*a6)(void), void (*a7)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  unint64_t v10 = v7;
  uint64_t v15 = *v7;
  unint64_t v17 = sub_1AFD79CC8(a2, a3);
  uint64_t v18 = *(void *)(v15 + 16);
  BOOL v19 = (v16 & 1) == 0;
  uint64_t v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v21 = v16;
  uint64_t v22 = *(void *)(v15 + 24);
  if (v22 >= v20 && (a4 & 1) != 0)
  {
LABEL_7:
    uint64_t v23 = *v10;
    if (v21)
    {
LABEL_8:
      uint64_t v24 = *(void *)(v23 + 56);
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v24 + 8 * v17) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v22 >= v20 && (a4 & 1) == 0)
  {
    a5();
    goto LABEL_7;
  }
  a6();
  unint64_t v26 = sub_1AFD79CC8(a2, a3);
  if ((v21 & 1) != (v27 & 1))
  {
LABEL_15:
    uint64_t result = sub_1AFFCBD68();
    __break(1u);
    return result;
  }
  unint64_t v17 = v26;
  uint64_t v23 = *v10;
  if (v21) {
    goto LABEL_8;
  }
LABEL_11:
  a7(v17, a2, a3, a1, v23);

  return sub_1AFFC8E38();
}

uint64_t sub_1AFE04CF4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_1AFFC96E8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  char v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_1AFD79F8C(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v20 = *v4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];
      uint64_t v22 = type metadata accessor for SDSAuthToken();
      return sub_1AFE05A04(a1, v21 + *(void *)(*(void *)(v22 - 8) + 72) * v14, (uint64_t (*)(void))type metadata accessor for SDSAuthToken);
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1AFEBABBC();
    goto LABEL_7;
  }
  sub_1AFEB6B0C(v17, a3 & 1);
  unint64_t v24 = sub_1AFD79F8C(a2);
  if ((v18 & 1) != (v25 & 1))
  {
LABEL_14:
    uint64_t result = sub_1AFFCBD68();
    __break(1u);
    return result;
  }
  unint64_t v14 = v24;
  uint64_t v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_1AFFB295C(v14, (uint64_t)v11, a1, v20);
}

_OWORD *sub_1AFE04EC8(_OWORD *a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_1AFFCB948();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  char v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_1AFD7A010(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 < v17 || (a3 & 1) == 0)
  {
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_1AFEBAEF8();
      goto LABEL_7;
    }
    sub_1AFEB6FF0(v17, a3 & 1);
    unint64_t v23 = sub_1AFD7A010(a2);
    if ((v18 & 1) == (v24 & 1))
    {
      unint64_t v14 = v23;
      uint64_t v20 = *v4;
      if (v18) {
        goto LABEL_8;
      }
LABEL_13:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_1AFFB2A4C(v14, (uint64_t)v11, a1, v20);
    }
LABEL_15:
    uint64_t result = (_OWORD *)sub_1AFFCBD68();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v20 = *v4;
  if ((v18 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v21 = (_OWORD *)(v20[7] + 32 * v14);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);

  return sub_1AFD8DDEC(a1, v21);
}

uint64_t sub_1AFE050A0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1AFE050FC(uint64_t a1, uint64_t a2)
{
  return a2;
}

void sub_1AFE05158(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, void, uint64_t, void))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, MEMORY[0x1E4FBB1A0], v7, MEMORY[0x1E4FBB1B0]);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1AFE051CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = a6(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a2, a1, v8);
  return a2;
}

uint64_t sub_1AFE05240(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_1AFE0529C(uint64_t a1)
{
  sub_1AFE05AE4(0, (unint64_t *)&qword_1EB811660, (void (*)(uint64_t))type metadata accessor for CurrencyResponse);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v18 - v4;
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    sub_1AFE05B50(0, &qword_1EB811788, (void (*)(uint64_t))type metadata accessor for CurrencyResponse, (void (*)(void))sub_1AFE054C4);
    uint64_t v7 = sub_1AFFCBA08();
    uint64_t v8 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v9 = *(void *)(v3 + 72);
    while (1)
    {
      sub_1AFE051CC(v8, (uint64_t)v5, (uint64_t)&qword_1EB811660, (uint64_t)type metadata accessor for CurrencyResponse, (uint64_t)&type metadata for CurrencyManagerCacheKey, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1AFE05AE4);
      unint64_t result = sub_1AFD7BA50();
      if (v11) {
        break;
      }
      unint64_t v12 = result;
      *(void *)(v7 + 64 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
      uint64_t v13 = *(void *)(v7 + 56);
      uint64_t v14 = type metadata accessor for CurrencyResponse();
      unint64_t result = sub_1AFE05634((uint64_t)v5, v13 + *(void *)(*(void *)(v14 - 8) + 72) * v12, (uint64_t (*)(void))type metadata accessor for CurrencyResponse);
      uint64_t v15 = *(void *)(v7 + 16);
      BOOL v16 = __OFADD__(v15, 1);
      uint64_t v17 = v15 + 1;
      if (v16) {
        goto LABEL_10;
      }
      *(void *)(v7 + 16) = v17;
      v8 += v9;
      if (!--v6) {
        return v7;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC868];
  }
  return result;
}

unint64_t sub_1AFE054C4()
{
  unint64_t result = qword_1EB811650;
  if (!qword_1EB811650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB811650);
  }
  return result;
}

void sub_1AFE05518(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_1AFFCBA18();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t sub_1AFE0556C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  sub_1AFFC8E38();
  sub_1AFD8CCFC(v2, v3);
  return a1;
}

uint64_t sub_1AFE05634(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1AFE0569C()
{
  if (!qword_1EB816C70)
  {
    sub_1AFFC96E8();
    sub_1AFDFC8AC((unint64_t *)&qword_1EB81A618, MEMORY[0x1E4F276F0]);
    unint64_t v0 = sub_1AFFCBA18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB816C70);
    }
  }
}

void sub_1AFE05738()
{
  if (!qword_1E9AFB000)
  {
    type metadata accessor for CIImageRepresentationOption(255);
    sub_1AFDFC8AC((unint64_t *)&unk_1EB811518, type metadata accessor for CIImageRepresentationOption);
    unint64_t v0 = sub_1AFFCBA18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9AFB000);
    }
  }
}

void sub_1AFE057D8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_1AFE05844(uint64_t a1)
{
  uint64_t v16 = *(void *)(a1 + 216);
  uint64_t v17 = *(void *)(a1 + 208);
  uint64_t v14 = *(void *)(a1 + 232);
  uint64_t v15 = *(void *)(a1 + 224);
  uint64_t v12 = *(void *)(a1 + 248);
  uint64_t v13 = *(void *)(a1 + 240);
  uint64_t v10 = *(void *)(a1 + 264);
  uint64_t v11 = *(void *)(a1 + 256);
  long long v9 = *(_OWORD *)(a1 + 272);
  long long v7 = *(_OWORD *)(a1 + 304);
  long long v8 = *(_OWORD *)(a1 + 288);
  long long v6 = *(_OWORD *)(a1 + 320);
  long long v4 = *(_OWORD *)(a1 + 352);
  long long v5 = *(_OWORD *)(a1 + 336);
  uint64_t v2 = *(void *)(a1 + 368);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1AFD56100(v17, v16, v15, v14, v13, v12, v11, v10, v9, *((uint64_t *)&v9 + 1), v8, *((uint64_t *)&v8 + 1), v7, *((uint64_t *)&v7 + 1), v6, *((uint64_t *)&v6 + 1), v5, *((uint64_t *)&v5 + 1), v4,
    *((uint64_t *)&v4 + 1),
    v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AFE05A04(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

void sub_1AFE05A6C()
{
  if (!qword_1EB811A80)
  {
    sub_1AFD8F6AC(255, &qword_1EB811A60);
    unint64_t v0 = sub_1AFFCBA18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB811A80);
    }
  }
}

void sub_1AFE05AE4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_1AFE05B50(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    a4();
    unint64_t v6 = sub_1AFFCBA18();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_1AFE05BD0()
{
  unint64_t result = qword_1EB816BF8;
  if (!qword_1EB816BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816BF8);
  }
  return result;
}

void sub_1AFE05C24()
{
  if (!qword_1EB818228)
  {
    sub_1AFD8F6AC(255, (unint64_t *)&qword_1EB819E90);
    sub_1AFD8F6AC(255, &qword_1EB818140);
    sub_1AFE040C8();
    unint64_t v0 = sub_1AFFCBA18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB818228);
    }
  }
}

uint64_t sub_1AFE05CC0(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  sub_1AFE05E30(0, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_1AFE05D2C()
{
  unint64_t result = qword_1EB819828;
  if (!qword_1EB819828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819828);
  }
  return result;
}

unint64_t sub_1AFE05D80()
{
  unint64_t result = qword_1EB8198D8;
  if (!qword_1EB8198D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8198D8);
  }
  return result;
}

void sub_1AFE05DD4(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, MEMORY[0x1E4FBC840] + 8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1AFE05E30(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v4) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

unint64_t sub_1AFE05E90()
{
  unint64_t result = qword_1EB819600;
  if (!qword_1EB819600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819600);
  }
  return result;
}

uint64_t sub_1AFE05EE4(uint64_t a1, void (*a2)(uint64_t *, uint64_t *), uint64_t a3, uint64_t a4)
{
  uint64_t v20 = a1;
  uint64_t v7 = a4 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(a4 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(a4 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t result = sub_1AFFC8E38();
  int64_t v13 = 0;
  if (!v10) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v14 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (unint64_t i = v14 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v13 << 6))
  {
    uint64_t v19 = *(void *)(*(void *)(a4 + 56) + 8 * i);
    sub_1AFFC8E38();
    a2(&v20, &v19);
    if (v4)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    uint64_t result = swift_bridgeObjectRelease();
    if (v10) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v13++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v13 >= v11) {
      goto LABEL_26;
    }
    unint64_t v17 = *(void *)(v7 + 8 * v13);
    if (!v17) {
      break;
    }
LABEL_17:
    unint64_t v10 = (v17 - 1) & v17;
  }
  int64_t v18 = v13 + 1;
  if (v13 + 1 >= v11) {
    goto LABEL_26;
  }
  unint64_t v17 = *(void *)(v7 + 8 * v18);
  if (v17) {
    goto LABEL_16;
  }
  int64_t v18 = v13 + 2;
  if (v13 + 2 >= v11) {
    goto LABEL_26;
  }
  unint64_t v17 = *(void *)(v7 + 8 * v18);
  if (v17) {
    goto LABEL_16;
  }
  int64_t v18 = v13 + 3;
  if (v13 + 3 >= v11) {
    goto LABEL_26;
  }
  unint64_t v17 = *(void *)(v7 + 8 * v18);
  if (v17) {
    goto LABEL_16;
  }
  int64_t v18 = v13 + 4;
  if (v13 + 4 >= v11)
  {
LABEL_26:
    swift_release();
    return v20;
  }
  unint64_t v17 = *(void *)(v7 + 8 * v18);
  if (v17)
  {
LABEL_16:
    int64_t v13 = v18;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v13 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v13 >= v11) {
      goto LABEL_26;
    }
    unint64_t v17 = *(void *)(v7 + 8 * v13);
    ++v18;
    if (v17) {
      goto LABEL_17;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1AFE060A8(uint64_t a1, void (*a2)(uint64_t *, _OWORD *), uint64_t a3, uint64_t a4)
{
  v32[0] = a1;
  uint64_t v7 = a4 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(a4 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(a4 + 64);
  int64_t v33 = (unint64_t)(v8 + 63) >> 6;
  uint64_t result = sub_1AFFC8E38();
  int64_t v12 = 0;
  if (!v10) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v13 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (unint64_t i = v13 | (v12 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v12 << 6))
  {
    uint64_t v18 = *(void *)(a4 + 56);
    uint64_t v19 = (_OWORD *)(*(void *)(a4 + 48) + 136 * i);
    v28[0] = *v19;
    long long v20 = v19[4];
    long long v22 = v19[1];
    long long v21 = v19[2];
    v28[3] = v19[3];
    v28[4] = v20;
    v28[1] = v22;
    v28[2] = v21;
    long long v24 = v19[6];
    long long v23 = v19[7];
    long long v25 = v19[5];
    uint64_t v29 = *((void *)v19 + 16);
    v28[6] = v24;
    v28[7] = v23;
    v28[5] = v25;
    uint64_t v26 = *(void *)(v18 + 8 * i);
    memmove(__dst, v19, 0x88uLL);
    *((void *)&v31 + 1) = v26;
    v27[6] = __dst[6];
    v27[7] = __dst[7];
    v27[8] = v31;
    v27[2] = __dst[2];
    v27[3] = __dst[3];
    v27[4] = __dst[4];
    v27[5] = __dst[5];
    v27[0] = __dst[0];
    v27[1] = __dst[1];
    sub_1AFD76370((uint64_t)v28);
    sub_1AFFC8E38();
    a2(v32, v27);
    if (v4)
    {
      swift_bridgeObjectRelease();
      sub_1AFE12890((uint64_t)__dst);
      return swift_release();
    }
    uint64_t result = sub_1AFE12890((uint64_t)__dst);
    if (v10) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v12++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v12 >= v33) {
      goto LABEL_26;
    }
    unint64_t v16 = *(void *)(v7 + 8 * v12);
    if (!v16) {
      break;
    }
LABEL_17:
    unint64_t v10 = (v16 - 1) & v16;
  }
  int64_t v17 = v12 + 1;
  if (v12 + 1 >= v33) {
    goto LABEL_26;
  }
  unint64_t v16 = *(void *)(v7 + 8 * v17);
  if (v16) {
    goto LABEL_16;
  }
  int64_t v17 = v12 + 2;
  if (v12 + 2 >= v33) {
    goto LABEL_26;
  }
  unint64_t v16 = *(void *)(v7 + 8 * v17);
  if (v16) {
    goto LABEL_16;
  }
  int64_t v17 = v12 + 3;
  if (v12 + 3 >= v33) {
    goto LABEL_26;
  }
  unint64_t v16 = *(void *)(v7 + 8 * v17);
  if (v16) {
    goto LABEL_16;
  }
  int64_t v17 = v12 + 4;
  if (v12 + 4 >= v33)
  {
LABEL_26:
    swift_release();
    return v32[0];
  }
  unint64_t v16 = *(void *)(v7 + 8 * v17);
  if (v16)
  {
LABEL_16:
    int64_t v12 = v17;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v12 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v12 >= v33) {
      goto LABEL_26;
    }
    unint64_t v16 = *(void *)(v7 + 8 * v12);
    ++v17;
    if (v16) {
      goto LABEL_17;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1AFE06300(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  if (v5)
  {
    unint64_t v6 = (uint64_t (*)(unsigned char *))result;
    unint64_t v7 = 0;
    uint64_t v8 = a3 + 32;
    uint64_t v9 = MEMORY[0x1E4FBC860];
    unint64_t v14 = (uint64_t (*)(unsigned char *))result;
    while (v7 < *(void *)(a3 + 16))
    {
      sub_1AFD2CF70(v8, (uint64_t)v15);
      sub_1AFD2CF70((uint64_t)v15, (uint64_t)v16);
      sub_1AFD2D03C(v15, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
      char v10 = v6(v16);
      if (v3)
      {
        sub_1AFD2D03C(v15, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2D0A0);
        swift_release();
        goto LABEL_15;
      }
      if (v10)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v17 = v9;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1AFD9D8F0(0, *(void *)(v9 + 16) + 1, 1);
          uint64_t v9 = v17;
        }
        unint64_t v13 = *(void *)(v9 + 16);
        unint64_t v12 = *(void *)(v9 + 24);
        if (v13 >= v12 >> 1)
        {
          sub_1AFD9D8F0(v12 > 1, v13 + 1, 1);
          uint64_t v9 = v17;
        }
        *(void *)(v9 + 16) = v13 + 1;
        uint64_t result = sub_1AFD2CF70((uint64_t)v15, v9 + 144 * v13 + 32);
        unint64_t v6 = v14;
      }
      else
      {
        uint64_t result = (uint64_t)sub_1AFD2D03C(v15, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2D0A0);
      }
      ++v7;
      v8 += 144;
      if (v5 == v7) {
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
LABEL_15:
    swift_bridgeObjectRelease();
    return v9;
  }
  return result;
}

uint64_t sub_1AFE064BC(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t v5 = MEMORY[0x1E4FBC860];
  unint64_t v17 = MEMORY[0x1E4FBC860];
  uint64_t v6 = *(void *)(a3 + 16);
  if (v6)
  {
    unint64_t v7 = (uint64_t (*)(long long *))result;
    unint64_t v5 = 0;
    uint64_t v8 = a3 + 32;
    unint64_t v9 = MEMORY[0x1E4FBC860];
    uint64_t v13 = *(void *)(a3 + 16);
    unint64_t v14 = (uint64_t (*)(long long *))result;
    while (v5 < *(void *)(a3 + 16))
    {
      sub_1AFE0F8F8(v8, (uint64_t)v16);
      char v10 = v7(v16);
      if (v3)
      {
        sub_1AFE0F930((uint64_t)v16);
        swift_release();
        swift_bridgeObjectRelease();
        return v5;
      }
      if (v10)
      {
        sub_1AFE0F8D8(v16, v15);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1AFD9DB80(0, *(void *)(v9 + 16) + 1, 1);
        }
        unint64_t v9 = v17;
        unint64_t v12 = *(void *)(v17 + 16);
        unint64_t v11 = *(void *)(v17 + 24);
        if (v12 >= v11 >> 1)
        {
          sub_1AFD9DB80(v11 > 1, v12 + 1, 1);
          unint64_t v9 = v17;
        }
        *(void *)(v9 + 16) = v12 + 1;
        uint64_t result = (uint64_t)sub_1AFE0F8D8(v15, (_OWORD *)(v9 + (v12 << 6) + 32));
        uint64_t v6 = v13;
        unint64_t v7 = v14;
      }
      else
      {
        uint64_t result = sub_1AFE0F930((uint64_t)v16);
      }
      ++v5;
      v8 += 64;
      if (v6 == v5)
      {
        unint64_t v5 = v17;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v5;
  }
  return result;
}

void *sub_1AFE06644(void (*a1)(void *__return_ptr, id *), uint64_t a2, unint64_t a3)
{
  unint64_t v4 = a3;
  if (a3 >> 62) {
    goto LABEL_20;
  }
  uint64_t v5 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  sub_1AFFC8E38();
  for (; v5; uint64_t v5 = sub_1AFFCB9C8())
  {
    unint64_t v22 = v4 & 0xC000000000000001;
    uint64_t v6 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v7 = 4;
    unint64_t v21 = v4;
    while (1)
    {
      id v8 = v22 ? (id)MEMORY[0x1B3E8DC70](v7 - 4, v4) : *(id *)(v4 + 8 * v7);
      unint64_t v9 = v8;
      if (__OFADD__(v7 - 4, 1)) {
        break;
      }
      id v28 = v8;
      a1(v27, &v28);
      if (v3)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return v6;
      }

      sub_1AFE130E4((uint64_t)v27, (uint64_t)v25, &qword_1EB816958, (uint64_t)&type metadata for StockNewsFeed);
      sub_1AFE130E4((uint64_t)v25, (uint64_t)v26, &qword_1EB816958, (uint64_t)&type metadata for StockNewsFeed);
      if (sub_1AFE13164(v26) != 1)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v6 = sub_1AFD35A54(0, v6[2] + 1, 1, v6);
        }
        unint64_t v11 = v6[2];
        unint64_t v10 = v6[3];
        if (v11 >= v10 >> 1) {
          uint64_t v6 = sub_1AFD35A54((void *)(v10 > 1), v11 + 1, 1, v6);
        }
        sub_1AFE130E4((uint64_t)v25, (uint64_t)v24, &qword_1EB816958, (uint64_t)&type metadata for StockNewsFeed);
        v6[2] = v11 + 1;
        unint64_t v12 = &v6[20 * v11];
        long long v13 = v24[1];
        v12[2] = v24[0];
        v12[3] = v13;
        long long v14 = v24[5];
        long long v15 = v24[3];
        long long v16 = v24[2];
        v12[6] = v24[4];
        v12[7] = v14;
        void v12[4] = v16;
        v12[5] = v15;
        long long v17 = v24[9];
        long long v18 = v24[7];
        long long v19 = v24[6];
        v12[10] = v24[8];
        v12[11] = v17;
        v12[8] = v19;
        v12[9] = v18;
        unint64_t v4 = v21;
      }
      if (v7 - 3 == v5)
      {
        swift_bridgeObjectRelease();
        return v6;
      }
      ++v7;
    }
    __break(1u);
LABEL_20:
    sub_1AFFC8E38();
  }
  swift_bridgeObjectRelease();
  return (void *)MEMORY[0x1E4FBC860];
}

uint64_t NewsFeedService.__allocating_init(contentContext:headlineScorerFactory:appConfigurationManager:)(uint64_t a1, long long *a2, long long *a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  sub_1AFD80454(a2, v6 + 24);
  sub_1AFD80454(a3, v6 + 64);
  return v6;
}

uint64_t NewsFeedType.stock.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1AFDF97C0(v1, (uint64_t)v8);
  sub_1AFDF97C0((uint64_t)v8, (uint64_t)v9);
  long long v3 = v9[7];
  *(_OWORD *)(a1 + 96) = v9[6];
  *(_OWORD *)(a1 + 112) = v3;
  *(void *)(a1 + 128) = v10;
  long long v4 = v9[3];
  *(_OWORD *)(a1 + 32) = v9[2];
  *(_OWORD *)(a1 + 48) = v4;
  long long v5 = v9[5];
  *(_OWORD *)(a1 + 64) = v9[4];
  *(_OWORD *)(a1 + 80) = v5;
  long long v6 = v9[1];
  *(_OWORD *)a1 = v9[0];
  *(_OWORD *)(a1 + 16) = v6;
  return sub_1AFD76370((uint64_t)v9);
}

uint64_t sub_1AFE06988()
{
  return sub_1AFFC8E38();
}

_OWORD *sub_1AFE06990@<X0>(long long *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1AFE13524(0, &qword_1EB818380, (uint64_t)&type metadata for NewsFeedFilterOptions.Option, MEMORY[0x1E4FBBE00]);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1AFFD05F0;
  uint64_t result = sub_1AFE0F8D8(a1, (_OWORD *)(v4 + 32));
  *a2 = v4;
  return result;
}

uint64_t sub_1AFE06A14@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_1AFE06A1C(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 16);
  if (!v3) {
    return 0;
  }
  sub_1AFE0F8F8(v2 + 32, (uint64_t)v11);
  sub_1AFFC8E38();
  BOOL v5 = sub_1AFE0F568((uint64_t)v11, a1);
  sub_1AFE0F930((uint64_t)v11);
  if (v5)
  {
LABEL_3:
    swift_bridgeObjectRelease();
    return 1;
  }
  if (v3 == 1)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v7 = v2 + 96;
  uint64_t v8 = 1;
  while (1)
  {
    uint64_t result = sub_1AFE0F8F8(v7, (uint64_t)v11);
    uint64_t v9 = v8 + 1;
    if (__OFADD__(v8, 1)) {
      break;
    }
    BOOL v10 = sub_1AFE0F568((uint64_t)v11, a1);
    sub_1AFE0F930((uint64_t)v11);
    if (v10) {
      goto LABEL_3;
    }
    v7 += 64;
    ++v8;
    if (v9 == v3) {
      goto LABEL_9;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1AFE06B08@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = *v2;
  v6[2] = a1;
  sub_1AFFC8E38();
  uint64_t result = sub_1AFE064BC((uint64_t)sub_1AFE0F960, (uint64_t)v6, v4);
  *a2 = result;
  return result;
}

BOOL sub_1AFE06B70(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1AFE06B84()
{
  return sub_1AFFCBE08();
}

uint64_t sub_1AFE06BB0()
{
  return sub_1AFFCBE38();
}

uint64_t NewsFeedRequest.feedID.getter()
{
  uint64_t v1 = *v0;
  sub_1AFFC8E38();
  return v1;
}

uint64_t NewsFeedRequest.maxCount.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t NewsFeedRequest.laterDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsFeedRequest() + 24);
  uint64_t v4 = sub_1AFFC98F8();
  BOOL v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t NewsFeedRequest.earlierDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsFeedRequest() + 28);
  uint64_t v4 = sub_1AFFC98F8();
  BOOL v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t NewsFeedRequest.type.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for NewsFeedRequest();
  sub_1AFDF97C0(v1 + *(int *)(v3 + 32), (uint64_t)v5);
  sub_1AFDF97C0((uint64_t)v5, a1);
  return sub_1AFD76370((uint64_t)v5);
}

uint64_t NewsFeedRequest.init(feedID:maxCount:laterDate:earlierDate:type:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X8>)
{
  sub_1AFDF97C0(a6, (uint64_t)v18);
  *(void *)a7 = a1;
  *((void *)a7 + 1) = a2;
  *((void *)a7 + 2) = a3;
  long long v13 = (int *)type metadata accessor for NewsFeedRequest();
  long long v14 = &a7[v13[6]];
  uint64_t v15 = sub_1AFFC98F8();
  long long v16 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32);
  v16(v14, a4, v15);
  v16(&a7[v13[7]], a5, v15);
  return sub_1AFDF97C0((uint64_t)v18, (uint64_t)&a7[v13[8]]);
}

uint64_t StockNewsFeed.headlines.getter()
{
  return sub_1AFFC8E38();
}

uint64_t StockNewsFeed.feedID.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_1AFFC8E38();
  return v1;
}

uint64_t StockNewsFeed.type.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1AFDF97C0(v1 + 24, (uint64_t)v4);
  sub_1AFDF97C0((uint64_t)v4, a1);
  return sub_1AFD76370((uint64_t)v4);
}

BOOL StockNewsFeed.isEmpty.getter()
{
  return *(void *)(*(void *)v0 + 16) == 0;
}

uint64_t StockNewsFeed.filtered(_:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v5 = v1[2];
  sub_1AFDF97C0((uint64_t)(v1 + 3), (uint64_t)v7);
  *a1 = sub_1AFE06F74(v3);
  a1[1] = v4;
  a1[2] = v5;
  sub_1AFDF97C0((uint64_t)v7, (uint64_t)(a1 + 3));
  sub_1AFFC8E38();
  return sub_1AFD76370((uint64_t)v7);
}

uint64_t sub_1AFE06F74(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 16);
  if (!v4)
  {
    sub_1AFFC8E38();
    return a1;
  }
  uint64_t v5 = v3 + 32;
  sub_1AFFC8E38();
  uint64_t v6 = v3 + 32;
  uint64_t v7 = v4;
  uint64_t v81 = v4;
  uint64_t v82 = v3;
  uint64_t v80 = v3 + 32;
  uint64_t v72 = a1;
  while (1)
  {
    sub_1AFE0F8F8(v6, (uint64_t)v88);
    sub_1AFE0F8F8((uint64_t)v88, (uint64_t)&v85);
    int v8 = v87;
    if (v87 == 3) {
      break;
    }
    sub_1AFE0F930((uint64_t)&v85);
    sub_1AFE0F930((uint64_t)v88);
    v6 += 64;
    if (!--v7)
    {
      int v71 = v8;
      swift_bridgeObjectRelease();
      sub_1AFFC8E38();
      goto LABEL_23;
    }
  }
  int v71 = 3;
  sub_1AFE0F930((uint64_t)v88);
  swift_bridgeObjectRelease();
  memset(v96, 0, sizeof(v96));
  uint64_t v95 = 4;
  char v97 = 9;
  sub_1AFD2CF14((uint64_t)&v95, (uint64_t)v93);
  sub_1AFFC8E38();
  sub_1AFD2D108((uint64_t)&v95);
  v92[0] = MEMORY[0x1E4FBC860];
  unint64_t v9 = *(void *)(a1 + 16);
  if (v9)
  {
    unint64_t v10 = 0;
    uint64_t v11 = v72 + 32;
    unint64_t v84 = v9 - 1;
    uint64_t v12 = MEMORY[0x1E4FBC860];
    do
    {
      if (v10 <= v9) {
        unint64_t v13 = v9;
      }
      else {
        unint64_t v13 = v10;
      }
      uint64_t v14 = v11 + 144 * v10;
      unint64_t v15 = v10;
      while (1)
      {
        if (v13 == v15) {
          goto LABEL_88;
        }
        sub_1AFD2CF70(v14, (uint64_t)v88);
        unint64_t v10 = v15 + 1;
        sub_1AFD2CF70((uint64_t)v88, (uint64_t)&v85);
        sub_1AFD2D03C(v88, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
        if ((sub_1AFF709CC() & 1) == 0) {
          break;
        }
        sub_1AFD2D03C(v88, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2D0A0);
        v14 += 144;
        ++v15;
        if (v9 == v10) {
          goto LABEL_22;
        }
      }
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v92[0] = v12;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1AFD9D8F0(0, *(void *)(v12 + 16) + 1, 1);
        uint64_t v12 = v92[0];
      }
      unint64_t v18 = *(void *)(v12 + 16);
      unint64_t v17 = *(void *)(v12 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_1AFD9D8F0(v17 > 1, v18 + 1, 1);
        uint64_t v12 = v92[0];
      }
      *(void *)(v12 + 16) = v18 + 1;
      sub_1AFD2CF70((uint64_t)v88, v12 + 144 * v18 + 32);
    }
    while (v84 != v15);
  }
LABEL_22:
  sub_1AFD2D108((uint64_t)v93);
  swift_bridgeObjectRelease();
  a1 = v92[0];
  uint64_t v4 = v81;
  uint64_t v3 = v82;
  uint64_t v5 = v80;
LABEL_23:
  uint64_t v74 = v96;
  sub_1AFFC8E38();
  uint64_t v77 = 0;
  uint64_t v78 = 0;
  unint64_t v19 = 0;
  int v79 = 1;
  uint64_t v73 = MEMORY[0x1E4FBC840] + 8;
  uint64_t v20 = 0;
  while (2)
  {
    if (v19 >= *(void *)(v3 + 16)) {
      goto LABEL_87;
    }
    uint64_t v21 = v19++;
    sub_1AFE0F8F8(v5 + (v21 << 6), (uint64_t)&v95);
    switch(v98)
    {
      case 1:
        unint64_t v84 = v19;
        uint64_t v41 = v95;
        id v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28BD0]), sel_init);
        int64_t v42 = *(void *)(v41 + 16);
        if (v42)
        {
          uint64_t v83 = v20;
          v93[0] = MEMORY[0x1E4FBC860];
          sub_1AFD9DAF0(0, v42, 0);
          uint64_t v43 = v93[0];
          uint64_t v44 = (uint64_t *)(v41 + 40);
          do
          {
            uint64_t v45 = *v44;
            uint64_t v85 = *(v44 - 1);
            uint64_t v86 = v45;
            sub_1AFFC8E38();
            swift_dynamicCast();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1AFD9DAF0(0, *(void *)(v43 + 16) + 1, 1);
              uint64_t v43 = v93[0];
            }
            unint64_t v47 = *(void *)(v43 + 16);
            unint64_t v46 = *(void *)(v43 + 24);
            if (v47 >= v46 >> 1)
            {
              sub_1AFD9DAF0(v46 > 1, v47 + 1, 1);
              uint64_t v43 = v93[0];
            }
            v44 += 2;
            *(void *)(v43 + 16) = v47 + 1;
            sub_1AFD8DDEC(v88, (_OWORD *)(v43 + 32 * v47 + 32));
            --v42;
          }
          while (v42);
          swift_bridgeObjectRelease();
          uint64_t v20 = v83;
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        uint64_t v56 = (void *)sub_1AFFCB1B8();
        swift_bridgeObjectRelease();
        objc_msgSend(v23, sel_addObjectsFromArray_, v56);

        uint64_t v55 = sub_1AFE12190(a1, v23);
        goto LABEL_76;
      case 2:
        unint64_t v39 = v95;
        sub_1AFE130E4((uint64_t)v74, (uint64_t)v88, &qword_1E9AFB0C8, (uint64_t)&type metadata for HeadlineCondition);
        sub_1AFE1341C((uint64_t)v88, (uint64_t)v93);
        if (v94 != 255)
        {
          uint64_t v40 = sub_1AFE133B8((uint64_t)v93, (uint64_t)&v85);
          v93[0] = 0;
          MEMORY[0x1F4188790](v40);
          long long v68 = &v85;
          uint64_t v69 = (uint64_t)v93;
          long long v70 = (_OWORD *)v39;
          a1 = sub_1AFE06300((uint64_t)sub_1AFE13570, (uint64_t)&v67, a1);
          sub_1AFE134A4((uint64_t)v88);
          sub_1AFD2D108((uint64_t)&v85);
          goto LABEL_25;
        }
        sub_1AFE134A4((uint64_t)v93);
        if ((v39 & 0x8000000000000000) != 0) {
          goto LABEL_89;
        }
        unint64_t v84 = v19;
        if (v39 && *(void *)(a1 + 16) < v39) {
          unint64_t v39 = *(void *)(a1 + 16);
        }
        uint64_t v50 = v20;
        sub_1AFFCBD08();
        swift_unknownObjectRetain_n();
        uint64_t v51 = swift_dynamicCastClass();
        if (!v51)
        {
          swift_bridgeObjectRelease();
          uint64_t v51 = MEMORY[0x1E4FBC860];
        }
        uint64_t v52 = *(void *)(v51 + 16);
        swift_release();
        if (v52 == v39)
        {
          uint64_t v53 = (void *)swift_dynamicCastClass();
          if (v53)
          {
LABEL_71:
            swift_bridgeObjectRelease();
            sub_1AFE134A4((uint64_t)v88);
            a1 = (uint64_t)v53;
            uint64_t v20 = v50;
            unint64_t v19 = v84;
            goto LABEL_25;
          }
          swift_bridgeObjectRelease();
LABEL_70:
          uint64_t v53 = (void *)MEMORY[0x1E4FBC860];
          goto LABEL_71;
        }
        swift_bridgeObjectRelease();
        if (!v39) {
          goto LABEL_70;
        }
        sub_1AFE13524(0, &qword_1EB818390, (uint64_t)&type metadata for Headline, MEMORY[0x1E4FBBE00]);
        uint64_t v53 = (void *)swift_allocObject();
        size_t v58 = _swift_stdlib_malloc_size(v53);
        v53[2] = v39;
        v53[3] = 2 * ((uint64_t)(v58 - 32) / 144);
        if (a1 + 32 >= (unint64_t)&v53[18 * v39 + 4] || (unint64_t)(v53 + 4) >= a1 + 32 + 144 * v39)
        {
          swift_arrayInitWithCopy();
          goto LABEL_71;
        }
        goto LABEL_90;
      case 3:
        int v79 = 0;
        uint64_t v77 = v96[0];
        uint64_t v78 = v95;
        goto LABEL_25;
      case 4:
        uint64_t v83 = v20;
        unint64_t v84 = v19;
        sub_1AFE133B8((uint64_t)&v95, (uint64_t)v93);
        sub_1AFD2CF14((uint64_t)v93, (uint64_t)v92);
        uint64_t v30 = MEMORY[0x1E4FBC860];
        uint64_t v91 = MEMORY[0x1E4FBC860];
        uint64_t v31 = *(void *)(a1 + 16);
        if (!v31) {
          goto LABEL_60;
        }
        unint64_t v32 = 0;
        uint64_t v33 = a1 + 32;
        uint64_t v76 = v31 - 1;
        do
        {
          uint64_t v34 = v33 + 144 * v32;
          unint64_t v35 = v32;
          while (1)
          {
            if (v35 >= *(void *)(a1 + 16))
            {
              __break(1u);
LABEL_87:
              __break(1u);
LABEL_88:
              __break(1u);
LABEL_89:
              __break(1u);
LABEL_90:
              LODWORD(v70) = 0;
              uint64_t v69 = 1092;
              LOBYTE(v68) = 2;
              sub_1AFFCBA28();
              __break(1u);
              JUMPOUT(0x1AFE07AE4);
            }
            sub_1AFD2CF70(v34, (uint64_t)v88);
            unint64_t v32 = v35 + 1;
            sub_1AFD2CF70((uint64_t)v88, (uint64_t)&v85);
            sub_1AFD2D03C(v88, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
            if ((sub_1AFF709CC() & 1) == 0) {
              break;
            }
            sub_1AFD2D03C(v88, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2D0A0);
            v34 += 144;
            ++v35;
            if (v31 == v32) {
              goto LABEL_60;
            }
          }
          char v36 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v91 = v30;
          uint64_t v75 = v33;
          if ((v36 & 1) == 0)
          {
            sub_1AFD9D8F0(0, *(void *)(v30 + 16) + 1, 1);
            uint64_t v30 = v91;
          }
          unint64_t v38 = *(void *)(v30 + 16);
          unint64_t v37 = *(void *)(v30 + 24);
          if (v38 >= v37 >> 1)
          {
            sub_1AFD9D8F0(v37 > 1, v38 + 1, 1);
            uint64_t v30 = v91;
          }
          *(void *)(v30 + 16) = v38 + 1;
          sub_1AFD2CF70((uint64_t)v88, v30 + 144 * v38 + 32);
          uint64_t v33 = v75;
        }
        while (v76 != v35);
LABEL_60:
        sub_1AFD2D108((uint64_t)v92);
        swift_bridgeObjectRelease();
        a1 = v91;
        sub_1AFD2D108((uint64_t)v93);
        uint64_t v3 = v82;
        uint64_t v20 = v83;
LABEL_77:
        uint64_t v5 = v80;
        uint64_t v4 = v81;
        unint64_t v19 = v84;
LABEL_25:
        if (v19 != v4) {
          continue;
        }
        BOOL v59 = v71 != 3;
        swift_bridgeObjectRelease();
        if (((v59 | v79) & 1) == 0)
        {
          uint64_t v60 = v77;
          *(void *)&v88[0] = v77;
          char v89 = 5;
          sub_1AFD2CF14((uint64_t)v88, (uint64_t)&v85);
          uint64_t v61 = swift_allocObject();
          sub_1AFE133B8((uint64_t)&v85, v61 + 16);
          sub_1AFD2D108((uint64_t)v88);
          uint64_t v62 = sub_1AFFCB208();
          swift_release();
          uint64_t v63 = v78;
          if (v62 < v78)
          {
            uint64_t v64 = swift_bridgeObjectRelease();
            *(void *)&v88[0] = v63;
            *((void *)&v88[0] + 1) = v60;
            char v90 = 3;
            MEMORY[0x1F4188790](v64);
            long long v70 = v88;
            sub_1AFFC8E38();
            uint64_t v65 = sub_1AFE064BC((uint64_t)sub_1AFE137F4, (uint64_t)&v68, v3);
            sub_1AFE0F930((uint64_t)v88);
            *(void *)&v88[0] = v65;
            a1 = sub_1AFE06F74(v72);
            swift_bridgeObjectRelease();
          }
        }
        return a1;
      case 5:
        unint64_t v48 = v19;
        uint64_t v49 = sub_1AFE12480(a1, v95);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        a1 = v49;
        unint64_t v19 = v48;
        goto LABEL_25;
      default:
        unint64_t v84 = v19;
        uint64_t v22 = v95;
        id v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28BD0]), sel_init);
        int64_t v24 = *(void *)(v22 + 16);
        if (v24)
        {
          uint64_t v83 = v20;
          v93[0] = MEMORY[0x1E4FBC860];
          sub_1AFD9DAF0(0, v24, 0);
          uint64_t v25 = v93[0];
          uint64_t v26 = (uint64_t *)(v22 + 40);
          do
          {
            uint64_t v27 = *v26;
            uint64_t v85 = *(v26 - 1);
            uint64_t v86 = v27;
            sub_1AFFC8E38();
            swift_dynamicCast();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1AFD9DAF0(0, *(void *)(v25 + 16) + 1, 1);
              uint64_t v25 = v93[0];
            }
            unint64_t v29 = *(void *)(v25 + 16);
            unint64_t v28 = *(void *)(v25 + 24);
            if (v29 >= v28 >> 1)
            {
              sub_1AFD9DAF0(v28 > 1, v29 + 1, 1);
              uint64_t v25 = v93[0];
            }
            v26 += 2;
            *(void *)(v25 + 16) = v29 + 1;
            sub_1AFD8DDEC(v88, (_OWORD *)(v25 + 32 * v29 + 32));
            --v24;
          }
          while (v24);
          swift_bridgeObjectRelease();
          uint64_t v20 = v83;
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        uint64_t v54 = (void *)sub_1AFFCB1B8();
        swift_bridgeObjectRelease();
        objc_msgSend(v23, sel_addObjectsFromArray_, v54);

        uint64_t v55 = (uint64_t)sub_1AFE11EF4(a1, v23);
LABEL_76:
        uint64_t v57 = v55;
        swift_bridgeObjectRelease();

        a1 = v57;
        uint64_t v3 = v82;
        goto LABEL_77;
    }
  }
}

uint64_t StockNewsFeed.copy(with:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v6 = *(void *)(v2 + 8);
  uint64_t v5 = *(void *)(v2 + 16);
  sub_1AFDF97C0(v2 + 24, (uint64_t)v8);
  *a2 = a1;
  a2[1] = v6;
  a2[2] = v5;
  sub_1AFDF97C0((uint64_t)v8, (uint64_t)(a2 + 3));
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  return sub_1AFD76370((uint64_t)v8);
}

uint64_t StockNewsFeed.sorted(_:)@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *v2;
  uint64_t v6 = v2[1];
  uint64_t v7 = v2[2];
  sub_1AFDF97C0((uint64_t)(v2 + 3), (uint64_t)v11);
  switch(v4)
  {
    case 1:
      uint64_t v10 = v5;
      sub_1AFFC8E38();
      int v8 = (uint64_t (*)(void *))sub_1AFE0BFE4;
      goto LABEL_6;
    case 2:
      uint64_t v10 = v5;
      sub_1AFFC8E38();
      int v8 = sub_1AFE0B570;
      goto LABEL_6;
    case 3:
      uint64_t v10 = v5;
      sub_1AFFC8E38();
      int v8 = sub_1AFE0AAFC;
LABEL_6:
      sub_1AFE0AA88(&v10, v8);
      uint64_t v5 = v10;
      break;
    default:
      sub_1AFFC8E38();
      break;
  }
  *a2 = v5;
  a2[1] = v6;
  a2[2] = v7;
  sub_1AFDF97C0((uint64_t)v11, (uint64_t)(a2 + 3));
  sub_1AFFC8E38();
  return sub_1AFD76370((uint64_t)v11);
}

double StockNewsFeed.limited(_:)@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  long long v4 = v2[5];
  void v26[3] = v2[4];
  v26[4] = v4;
  long long v5 = v2[3];
  v26[1] = v2[2];
  void v26[2] = v5;
  long long v6 = v2[9];
  v26[7] = v2[8];
  v26[8] = v6;
  long long v7 = v2[7];
  v26[5] = v2[6];
  v26[6] = v7;
  long long v8 = v2[1];
  long long v25 = *v2;
  v26[0] = v8;
  double v9 = *(double *)&v25;
  if (*(void *)(v25 + 16) <= a1)
  {
    uint64_t v15 = *((void *)&v25 + 1);
    uint64_t v14 = *(void *)&v26[0];
    sub_1AFD762B8((uint64_t)&v25);
    goto LABEL_10;
  }
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1AFFCBD08();
    sub_1AFFC8E38();
    swift_unknownObjectRetain_n();
    uint64_t v11 = swift_dynamicCastClass();
    if (!v11)
    {
      swift_bridgeObjectRelease();
      uint64_t v11 = MEMORY[0x1E4FBC860];
    }
    uint64_t v12 = *(void *)(v11 + 16);
    swift_release();
    if (v12 == a1)
    {
      uint64_t v13 = swift_dynamicCastClass();
      if (!v13)
      {
        swift_bridgeObjectRelease();
        uint64_t v13 = MEMORY[0x1E4FBC860];
      }
      goto LABEL_8;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v13 = sub_1AFD6FFD4(v25, v25 + 32, 0, (2 * a1) | 1);
LABEL_8:
  swift_bridgeObjectRelease();
  uint64_t v15 = *((void *)&v25 + 1);
  uint64_t v14 = *(void *)&v26[0];
  sub_1AFFC8E38();
  sub_1AFD76370((uint64_t)v26 + 8);
  double v9 = *(double *)&v13;
LABEL_10:
  sub_1AFDF97C0((uint64_t)v26 + 8, (uint64_t)v24);
  *(double *)&long long v22 = v9;
  *((void *)&v22 + 1) = v15;
  *(void *)&v23[0] = v14;
  sub_1AFDF97C0((uint64_t)v24, (uint64_t)v23 + 8);
  long long v16 = v23[6];
  a2[6] = v23[5];
  a2[7] = v16;
  long long v17 = v23[8];
  a2[8] = v23[7];
  a2[9] = v17;
  long long v18 = v23[2];
  a2[2] = v23[1];
  a2[3] = v18;
  long long v19 = v23[4];
  a2[4] = v23[3];
  a2[5] = v19;
  double result = v9;
  long long v21 = v23[0];
  *a2 = v22;
  a2[1] = v21;
  return result;
}

uint64_t StockNewsFeed.startIndex.getter()
{
  return 0;
}

uint64_t StockNewsFeed.endIndex.getter()
{
  return *(void *)(*(void *)v0 + 16);
}

unint64_t StockNewsFeed.subscript.getter@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  if (*(void *)(*(void *)v2 + 16) <= result)
  {
    __break(1u);
  }
  else
  {
    sub_1AFD2CF70(*(void *)v2 + 144 * result + 32, (uint64_t)v4);
    sub_1AFD2CF70((uint64_t)v4, a2);
    return (unint64_t)sub_1AFD2D03C(v4, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
  }
  return result;
}

Swift::Int __swiftcall StockNewsFeed.index(after:)(Swift::Int after)
{
  BOOL v1 = __OFADD__(after, 1);
  Swift::Int result = after + 1;
  if (v1) {
    __break(1u);
  }
  return result;
}

uint64_t StockNewsFeed.makeIterator()()
{
  uint64_t v1 = *v0;
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = 0;
  sub_1AFE0FA20();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = sub_1AFE0FA18;
  *(void *)(v3 + 24) = v2;
  sub_1AFFC8E38();
  return v3;
}

void *sub_1AFE07F84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  Swift::Int result = (void *)swift_beginAccess();
  uint64_t v5 = *(void *)(a1 + 16);
  unint64_t v6 = *(void *)(a1 + 24);
  unint64_t v7 = *(void *)(v5 + 16);
  if (v6 == v7)
  {
    sub_1AFE13198((uint64_t)v8);
    return (void *)sub_1AFE130E4((uint64_t)v8, a2, &qword_1E9AFB0A8, (uint64_t)&type metadata for Headline);
  }
  else if (v6 >= v7)
  {
    __break(1u);
  }
  else
  {
    sub_1AFD2CF70(v5 + 144 * v6 + 32, (uint64_t)v8);
    sub_1AFD2CF70((uint64_t)v8, a2);
    *(void *)(a1 + 24) = v6 + 1;
    nullsub_1(a2);
    return sub_1AFD2D03C(v8, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
  }
  return result;
}

void sub_1AFE08058(void *a1@<X8>)
{
  *a1 = 0;
}

void sub_1AFE08060(void *a1@<X8>)
{
  *a1 = *(void *)(*(void *)v1 + 16);
}

void (*sub_1AFE08070(void *a1, unint64_t *a2))(void *a1)
{
  long long v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = sub_1AFE08118(v4, *a2);
  return sub_1AFE080D0;
}

void sub_1AFE080D0(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

void (*sub_1AFE08118(void *a1, unint64_t a2))(void **a1)
{
  Swift::Int result = (void (*)(void **))malloc(0x1B0uLL);
  *a1 = result;
  uint64_t v6 = *v2;
  if (*(void *)(*v2 + 16) <= a2)
  {
    __break(1u);
  }
  else
  {
    unint64_t v7 = result;
    uint64_t v8 = (uint64_t)result + 144;
    sub_1AFD2CF70(v6 + 144 * a2 + 32, (uint64_t)result);
    sub_1AFD2CF70((uint64_t)v7, v8);
    sub_1AFD2D03C(v7, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
    return sub_1AFE081C4;
  }
  return result;
}

void sub_1AFE081C4(void **a1)
{
  uint64_t v1 = *a1;
  sub_1AFD2CF70((uint64_t)(*a1 + 18), (uint64_t)(*a1 + 36));
  sub_1AFD2D03C(v1 + 36, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2D0A0);

  free(v1);
}

uint64_t *sub_1AFE08224@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = result[1];
  long long v5 = v2[5];
  long long v15[4] = v2[4];
  uint64_t v15[5] = v5;
  long long v6 = v2[3];
  _OWORD v15[2] = v2[2];
  v15[3] = v6;
  long long v7 = v2[9];
  v15[8] = v2[8];
  v15[9] = v7;
  long long v8 = v2[7];
  v15[6] = v2[6];
  v15[7] = v8;
  long long v9 = v2[1];
  v15[0] = *v2;
  v15[1] = v9;
  if (v3 < 0 || *(void *)(*(void *)&v15[0] + 16) < v4)
  {
    __break(1u);
  }
  else
  {
    long long v10 = v2[7];
    *(_OWORD *)(a2 + 112) = v2[6];
    *(_OWORD *)(a2 + 128) = v10;
    long long v11 = v2[9];
    *(_OWORD *)(a2 + 144) = v2[8];
    *(_OWORD *)(a2 + 160) = v11;
    long long v12 = v2[3];
    *(_OWORD *)(a2 + 48) = v2[2];
    *(_OWORD *)(a2 + 64) = v12;
    long long v13 = v2[5];
    *(_OWORD *)(a2 + 80) = v2[4];
    *(_OWORD *)(a2 + 96) = v13;
    long long v14 = v2[1];
    *(_OWORD *)(a2 + 16) = *v2;
    *(_OWORD *)(a2 + 32) = v14;
    *(void *)a2 = v3;
    *(void *)(a2 + 8) = v4;
    return (uint64_t *)sub_1AFD762B8((uint64_t)v15);
  }
  return result;
}

uint64_t sub_1AFE082B8@<X0>(uint64_t a1@<X8>)
{
  long long v2 = v1[7];
  long long v3 = v1[5];
  long long v23 = v1[6];
  long long v24 = v2;
  long long v4 = v1[7];
  long long v5 = v1[9];
  long long v25 = v1[8];
  long long v6 = v25;
  long long v26 = v5;
  long long v7 = v1[3];
  long long v9 = v1[1];
  long long v19 = v1[2];
  long long v8 = v19;
  long long v20 = v7;
  long long v10 = v1[3];
  long long v11 = v1[5];
  long long v21 = v1[4];
  long long v12 = v21;
  long long v22 = v11;
  long long v13 = v1[1];
  v18[0] = *v1;
  long long v14 = v18[0];
  v18[1] = v13;
  *(_OWORD *)(a1 + 96) = v23;
  *(_OWORD *)(a1 + 112) = v4;
  long long v15 = v1[9];
  *(_OWORD *)(a1 + 128) = v6;
  *(_OWORD *)(a1 + 144) = v15;
  *(_OWORD *)(a1 + 32) = v8;
  *(_OWORD *)(a1 + 48) = v10;
  *(_OWORD *)(a1 + 64) = v12;
  *(_OWORD *)(a1 + 80) = v3;
  *(_OWORD *)a1 = v14;
  *(_OWORD *)(a1 + 16) = v9;
  uint64_t v16 = *(void *)(*(void *)&v18[0] + 16);
  *(void *)(a1 + 160) = 0;
  *(void *)(a1 + 168) = v16;
  return sub_1AFD762B8((uint64_t)v18);
}

BOOL sub_1AFE0833C()
{
  return *(void *)(*(void *)v0 + 16) == 0;
}

void sub_1AFE08350(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(_WORD *)(a1 + 8) = 256;
}

uint64_t *sub_1AFE08360@<X0>(uint64_t *result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if ((a2 & 0x8000000000000000) == 0)
  {
    uint64_t v3 = *result;
    if (!a2)
    {
LABEL_6:
      *a3 = v3;
      return result;
    }
    unint64_t v4 = v3 ^ 0x7FFFFFFFFFFFFFFFLL;
    unint64_t v5 = a2 - 1;
    while (v4 > v5)
    {
      ++v3;
      if (!--a2) {
        goto LABEL_6;
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1AFE08398@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result = sub_1AFE127B8(*a1, a2, *a3);
  *(void *)a4 = result;
  *(unsigned char *)(a4 + 8) = v6 & 1;
  return result;
}

uint64_t *sub_1AFE083D0(uint64_t *result, uint64_t *a2)
{
  uint64_t v2 = *result;
  uint64_t v3 = *a2;
  if (*a2 < *result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (*a2 == *result) {
    return 0;
  }
  unint64_t v4 = (uint64_t *)(v3 - v2);
  if (v3 > v2)
  {
    uint64_t result = 0;
    unint64_t v5 = v3 + ~v2;
    while (v5 <= 0x7FFFFFFFFFFFFFFELL)
    {
      uint64_t result = (uint64_t *)((char *)result + 1);
      if (v4 == result) {
        return result;
      }
    }
    __break(1u);
    goto LABEL_10;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t *sub_1AFE08428(uint64_t *result, uint64_t *a2)
{
  uint64_t v2 = *result;
  uint64_t v3 = a2[1];
  if (*result >= *a2)
  {
    BOOL v5 = __OFSUB__(v2, v3);
    BOOL v4 = v2 - v3 < 0;
  }
  else
  {
    BOOL v5 = 0;
    BOOL v4 = 0;
  }
  if (v4 == v5) {
    __break(1u);
  }
  return result;
}

void *sub_1AFE08444(void *result, void *a2)
{
  if (*result < *a2 || a2[1] < *result) {
    __break(1u);
  }
  return result;
}

void *sub_1AFE08460(void *result, void *a2)
{
  if (*result < *a2 || a2[1] < result[1]) {
    __break(1u);
  }
  return result;
}

void *sub_1AFE0847C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  if (__OFADD__(*result, 1)) {
    __break(1u);
  }
  else {
    *a2 = *result + 1;
  }
  return result;
}

void *sub_1AFE08494(void *result)
{
  if (__OFADD__(*result, 1)) {
    __break(1u);
  }
  else {
    ++*result;
  }
  return result;
}

uint64_t sub_1AFE084AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  *(void *)(v4 + 24) = 0;
  sub_1AFE0FA20();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_1AFE0FA18;
  *(void *)(v5 + 24) = v4;
  long long v6 = *((_OWORD *)v1 + 7);
  v12[6] = *((_OWORD *)v1 + 6);
  v12[7] = v6;
  long long v7 = *((_OWORD *)v1 + 9);
  v12[8] = *((_OWORD *)v1 + 8);
  v12[9] = v7;
  long long v8 = *((_OWORD *)v1 + 3);
  v12[2] = *((_OWORD *)v1 + 2);
  v12[3] = v8;
  long long v9 = *((_OWORD *)v1 + 5);
  void v12[4] = *((_OWORD *)v1 + 4);
  v12[5] = v9;
  long long v10 = *((_OWORD *)v1 + 1);
  v12[0] = *(_OWORD *)v1;
  v12[1] = v10;
  sub_1AFFC8E38();
  uint64_t result = sub_1AFE11E24((uint64_t)v12);
  *a1 = v5;
  return result;
}

uint64_t sub_1AFE0856C()
{
  return *(void *)(*(void *)v0 + 16);
}

uint64_t sub_1AFE08578()
{
  return 2;
}

void *sub_1AFE08580()
{
  long long v1 = v0[7];
  v8[6] = v0[6];
  v8[7] = v1;
  long long v2 = v0[9];
  v8[8] = v0[8];
  v8[9] = v2;
  long long v3 = v0[3];
  void v8[2] = v0[2];
  v8[3] = v3;
  long long v4 = v0[5];
  v8[4] = v0[4];
  v8[5] = v4;
  long long v5 = v0[1];
  v8[0] = *v0;
  v8[1] = v5;
  long long v6 = sub_1AFD6FB18((uint64_t)v8);
  sub_1AFE11E24((uint64_t)v8);
  return v6;
}

uint64_t sub_1AFE085E4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1AFE08638(a1, a2, a3);
}

uint64_t sub_1AFE08638(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  long long v4 = v3;
  uint64_t v8 = *v4;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v8;
  *(void *)(v9 + 24) = 0;
  sub_1AFE0FA20();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_1AFE0FA18;
  *(void *)(v10 + 24) = v9;
  sub_1AFFC8E38();
  uint64_t result = sub_1AFE11E24((uint64_t)v4);
  uint64_t v12 = 0;
  if (!a2 || !a3)
  {
LABEL_11:
    *a1 = v10;
    return v12;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    sub_1AFE07F84(v9, (uint64_t)v14);
    sub_1AFE130E4((uint64_t)v14, (uint64_t)v15, &qword_1E9AFB0A8, (uint64_t)&type metadata for Headline);
    sub_1AFE130E4((uint64_t)v15, (uint64_t)v16, &qword_1E9AFB0A8, (uint64_t)&type metadata for Headline);
    if (sub_1AFE11EDC((uint64_t)v16) == 1)
    {
      uint64_t v12 = 0;
    }
    else
    {
      uint64_t v12 = 0;
      while (1)
      {
        sub_1AFE130E4((uint64_t)v15, (uint64_t)v13, &qword_1E9AFB0A8, (uint64_t)&type metadata for Headline);
        sub_1AFD2CF70((uint64_t)v13, a2);
        if (a3 - 1 == v12) {
          break;
        }
        a2 += 144;
        sub_1AFE07F84(v9, (uint64_t)v14);
        sub_1AFE130E4((uint64_t)v14, (uint64_t)v15, &qword_1E9AFB0A8, (uint64_t)&type metadata for Headline);
        sub_1AFE130E4((uint64_t)v15, (uint64_t)v16, &qword_1E9AFB0A8, (uint64_t)&type metadata for Headline);
        ++v12;
        if (sub_1AFE11EDC((uint64_t)v16) == 1) {
          goto LABEL_11;
        }
      }
      uint64_t v12 = a3;
    }
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t sub_1AFE087EC()
{
  return sub_1AFFCB0A8();
}

uint64_t NewsFeedService.init(contentContext:headlineScorerFactory:appConfigurationManager:)(uint64_t a1, long long *a2, long long *a3)
{
  *(void *)(v3 + 16) = a1;
  sub_1AFD80454(a2, v3 + 24);
  sub_1AFD80454(a3, v3 + 64);
  return v3;
}

uint64_t sub_1AFE08854(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for NewsFeedRequest();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v54 = (uint64_t *)((char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v48 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (!v11)
  {
    v58[0] = MEMORY[0x1E4FBC860];
    sub_1AFE12A14();
    swift_allocObject();
    return sub_1AFFCA6F8();
  }
  uint64_t v49 = v2;
  uint64_t v50 = a2;
  v58[0] = MEMORY[0x1E4FBC860];
  sub_1AFFCB8B8();
  uint64_t v12 = self;
  uint64_t v13 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  uint64_t v14 = *(void *)(v6 + 72);
  uint64_t v51 = v13;
  uint64_t v52 = a1;
  uint64_t v53 = v11;
  uint64_t v15 = v11;
  uint64_t v55 = v14;
  do
  {
    sub_1AFDF981C(v13, (uint64_t)v10);
    id v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F7E438]), sel_init);
    long long v17 = (void *)sub_1AFFCAE68();
    objc_msgSend(v16, sel_setFeedID_, v17);

    objc_msgSend(v16, sel_setMaxCount_, *((void *)v10 + 2));
    uint64_t v18 = v5;
    long long v19 = (void *)sub_1AFFC9838();
    long long v20 = (void *)sub_1AFFC9838();
    id v21 = objc_msgSend(v12, sel_feedRangeFromDate_toDate_, v19, v20);

    objc_msgSend(v16, sel_setFeedRange_, v21);
    sub_1AFE131B8((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for NewsFeedRequest);
    sub_1AFFCB888();
    sub_1AFFCB8C8();
    uint64_t v5 = v18;
    sub_1AFFCB8D8();
    sub_1AFFCB898();
    v13 += v55;
    --v15;
  }
  while (v15);
  uint64_t v48 = v58[0];
  sub_1AFFC8E38();
  --v53;
  long long v22 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v23 = v51;
  while (1)
  {
    uint64_t v24 = v23;
    long long v25 = v54;
    sub_1AFDF981C(v23, (uint64_t)v54);
    uint64_t v27 = *v25;
    uint64_t v26 = v25[1];
    sub_1AFDF97C0((uint64_t)v25 + *(int *)(v5 + 32), (uint64_t)v58);
    sub_1AFFC8E38();
    sub_1AFD76370((uint64_t)v58);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v57 = v22;
    unint64_t v30 = sub_1AFD79CC8(v27, v26);
    uint64_t v31 = v22[2];
    BOOL v32 = (v29 & 1) == 0;
    uint64_t v33 = v31 + v32;
    if (__OFADD__(v31, v32)) {
      break;
    }
    char v34 = v29;
    if (v22[3] >= v33)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v5 = v18;
        if (v29) {
          goto LABEL_12;
        }
      }
      else
      {
        sub_1AFEB8D78();
        uint64_t v5 = v18;
        if (v34) {
          goto LABEL_12;
        }
      }
    }
    else
    {
      sub_1AFEB362C(v33, isUniquelyReferenced_nonNull_native);
      unint64_t v35 = sub_1AFD79CC8(v27, v26);
      if ((v34 & 1) != (v36 & 1)) {
        goto LABEL_23;
      }
      unint64_t v30 = v35;
      uint64_t v5 = v18;
      if (v34)
      {
LABEL_12:
        long long v22 = v57;
        uint64_t v37 = v57[7] + 136 * v30;
        sub_1AFDF97C0(v37, (uint64_t)v56);
        sub_1AFD76408((uint64_t)v56);
        sub_1AFDF97C0((uint64_t)v58, v37);
        goto LABEL_16;
      }
    }
    long long v22 = v57;
    v57[(v30 >> 6) + 8] |= 1 << v30;
    unint64_t v38 = (uint64_t *)(v22[6] + 16 * v30);
    *unint64_t v38 = v27;
    v38[1] = v26;
    sub_1AFDF97C0((uint64_t)v58, v22[7] + 136 * v30);
    uint64_t v39 = v22[2];
    BOOL v40 = __OFADD__(v39, 1);
    uint64_t v41 = v39 + 1;
    if (v40) {
      goto LABEL_22;
    }
    v22[2] = v41;
    sub_1AFFC8E38();
LABEL_16:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1AFE131B8((uint64_t)v54, (uint64_t (*)(void))type metadata accessor for NewsFeedRequest);
    if (!v53)
    {
      uint64_t v42 = v52;
      uint64_t v43 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v43);
      uint64_t v44 = v48;
      *(&v48 - 6) = v49;
      *(&v48 - 5) = v44;
      uint64_t v45 = v50;
      *(&v48 - 4) = v42;
      *(&v48 - 3) = v45;
      *(&v48 - 2) = (uint64_t)v22;
      sub_1AFE12A14();
      swift_allocObject();
      uint64_t v46 = sub_1AFFCA758();
      swift_release();
      swift_bridgeObjectRelease();
      return v46;
    }
    uint64_t v23 = v24 + v55;
    --v53;
  }
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  uint64_t result = sub_1AFFCBD68();
  __break(1u);
  return result;
}

uint64_t sub_1AFE08D7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v46 = v9;
  uint64_t v48 = v10;
  uint64_t v12 = v11;
  unint64_t v14 = v13;
  id v16 = v15;
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = v22;
  *(void *)(v23 + 24) = v20;
  uint64_t v24 = (void *)v16[2];
  sub_1AFFC8E48();
  id v25 = objc_msgSend(objc_msgSend(v24, sel_configurationManager), sel_configuration);
  swift_unknownObjectRelease();
  id v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F7E440]), sel_init);
  objc_msgSend(v26, sel_setContext_, v24);
  objc_msgSend(v26, sel_setConfiguration_, v25);
  objc_msgSend(v26, sel_setOptions_, 14);
  sub_1AFD8F6AC(0, &qword_1EB818070);
  uint64_t v27 = (void *)sub_1AFFCB1B8();
  objc_msgSend(v26, sel_setFeedRequests_, v27);

  if (v25) {
    uint64_t v28 = objc_msgSend(v25, sel_isOrderFeedEndpointEnabled);
  }
  else {
    uint64_t v28 = 1;
  }
  id v29 = objc_msgSend(self, sel_temporaryFeedDatabaseWithEndpoint_, v28);
  objc_msgSend(v26, sel_setFeedDatabase_, v29);

  if (v14 >> 62)
  {
    sub_1AFFC8E38();
    uint64_t v30 = sub_1AFFCB9C8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v30 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v30 == 1)
  {
    uint64_t v31 = v16[11];
    uint64_t v32 = v16[12];
    __swift_project_boxed_opaque_existential_1(v16 + 8, v31);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v32 + 8))(aBlock, v31, v32);
    sub_1AFD55D10((uint64_t)aBlock);
    if (aBlock[32] >= 1)
    {
      if (qword_1EB8168D0 != -1) {
        swift_once();
      }
      type metadata accessor for NewsFeedService();
      sub_1AFE12BA8(&qword_1EB816F48, v33, (void (*)(uint64_t))type metadata accessor for NewsFeedService);
      sub_1AFFC9BB8();
      if ((v50 & 1) == 0)
      {
        id v34 = objc_allocWithZone(MEMORY[0x1E4F7E3A8]);
        unint64_t v35 = (void *)sub_1AFFCAE68();
        char v36 = (void *)sub_1AFFCAE68();
        id v37 = objc_msgSend(v34, sel_initWithGroupName_cacheControlKey_, v35, v36);

        objc_msgSend(v26, sel_setEdgeCacheHint_, v37);
      }
    }
  }
  id v38 = objc_msgSend(v26, sel_operationID, v46, v48);
  uint64_t v39 = sub_1AFFCAE98();
  uint64_t v41 = v40;

  uint64_t v42 = swift_allocObject();
  swift_weakInit();
  uint64_t v43 = (void *)swift_allocObject();
  v43[2] = v42;
  v43[3] = v47;
  v43[4] = v18;
  v43[5] = v12;
  v43[6] = v49;
  v43[7] = sub_1AFD8173C;
  v43[8] = v23;
  v43[9] = v39;
  v43[10] = v41;
  v43[11] = v25;
  v43[12] = a9;
  aBlock[4] = sub_1AFE12B68;
  void aBlock[5] = v43;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1AFE0A0F8;
  aBlock[3] = &block_descriptor_11;
  uint64_t v44 = _Block_copy(aBlock);
  sub_1AFFC8E48();
  sub_1AFFC8E38();
  swift_unknownObjectRetain();
  sub_1AFFC8E38();
  swift_release();
  objc_msgSend(v26, sel_setRequestCompletionHandler_, v44);
  _Block_release(v44);
  sub_1AFFC9EF8();
  sub_1AFFC9EA8();
  sub_1AFFC9ED8();
  swift_unknownObjectRelease();

  return swift_release();
}

void sub_1AFE09258(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(void), uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(uint64_t), uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v21 = Strong;
    if (a3)
    {
      swift_getErrorValue();
      id v22 = a3;
      if (sub_1AFFB5E9C(v39))
      {
        sub_1AFE12CD0(a7, a9, a10);
      }
      else
      {
        sub_1AFFCB468();
        sub_1AFD2CD48();
        uint64_t v29 = swift_allocObject();
        *(_OWORD *)(v29 + 16) = xmmword_1AFFD0610;
        uint64_t v30 = MEMORY[0x1E4FBB1A0];
        *(void *)(v29 + 56) = MEMORY[0x1E4FBB1A0];
        unint64_t v31 = sub_1AFD2CE00();
        *(void *)(v29 + 64) = v31;
        *(void *)(v29 + 32) = a11;
        *(void *)(v29 + 40) = a12;
        void aBlock[6] = a3;
        sub_1AFD2CDB0(0, (unint64_t *)&qword_1EB81A110);
        sub_1AFFC8E38();
        sub_1AFFCB928();
        *(void *)(v29 + 96) = v30;
        *(void *)(v29 + 104) = v31;
        *(void *)(v29 + 72) = 0;
        *(void *)(v29 + 80) = 0xE000000000000000;
        sub_1AFD8F6AC(0, (unint64_t *)&qword_1EB819EA0);
        uint64_t v32 = (void *)sub_1AFFCB638();
        sub_1AFFCA878();
        swift_bridgeObjectRelease();

        ((void (*)(void *))a5)(a3);
      }
      swift_release();
    }
    else
    {
      if (a1)
      {
        id v26 = objc_allocWithZone(MEMORY[0x1E4F7E410]);
        sub_1AFFC8E38();
        id v27 = objc_msgSend(v26, sel_init);
        objc_msgSend(v27, sel_setConfiguration_, a13);
        objc_msgSend(v27, sel_setContext_, *(void *)(v21 + 16));
        if (a2)
        {
          sub_1AFD8F6AC(0, &qword_1EB818060);
          uint64_t v28 = (void *)sub_1AFFCB1B8();
        }
        else
        {
          uint64_t v28 = 0;
        }
        objc_msgSend(v27, sel_setFeedItems_, v28, a5);

        uint64_t v35 = swift_allocObject();
        swift_beginAccess();
        swift_weakLoadStrong();
        swift_weakInit();
        swift_release();
        char v36 = (void *)swift_allocObject();
        _OWORD v36[2] = v35;
        v36[3] = v38;
        v36[4] = a6;
        v36[5] = a1;
        v36[6] = a14;
        v36[7] = a9;
        v36[8] = a10;
        aBlock[4] = sub_1AFE12C9C;
        void aBlock[5] = v36;
        aBlock[0] = MEMORY[0x1E4F143A8];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1AFD84BA0;
        aBlock[3] = &block_descriptor_28;
        id v37 = _Block_copy(aBlock);
        sub_1AFFC8E48();
        sub_1AFFC8E38();
        sub_1AFFC8E48();
        swift_release();
        objc_msgSend(v27, sel_setHeadlinesMapCompletionHandler_, v37);
        _Block_release(v37);
        sub_1AFFC9EF8();
        sub_1AFFC9EA8();
        sub_1AFFC9ED8();
        swift_release();
      }
      else
      {
        sub_1AFE12BF0();
        uint64_t v33 = (void *)swift_allocError();
        *id v34 = 1;
        a5();
      }
      swift_release();
    }
  }
  else
  {
    uint64_t v23 = sub_1AFFC9E28();
    sub_1AFE12BA8((unint64_t *)&qword_1E9AFB0B0, 255, MEMORY[0x1E4FAA9B0]);
    uint64_t v24 = (void *)swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v23 - 8) + 104))(v25, *MEMORY[0x1E4FAA9A0], v23);
    ((void (*)(void *))a5)(v24);
  }
}

void sub_1AFE0973C(void *a1, void *a2, uint64_t a3, void (*a4)(void), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_weakLoadStrong();
  if (Strong)
  {
    if (a2)
    {
      id v17 = a2;
      ((void (*)(void *))a4)(a2);
      uint64_t v18 = a2;
LABEL_4:

      swift_release();
      return;
    }
    if (!a1)
    {
      sub_1AFE12BF0();
      uint64_t v30 = swift_allocError();
      *unint64_t v31 = 0;
      a4();
      uint64_t v18 = (void *)v30;
      goto LABEL_4;
    }
    uint64_t v23 = Strong[6];
    uint64_t v22 = Strong[7];
    __swift_project_boxed_opaque_existential_1(Strong + 3, v23);
    uint64_t v32 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
    id v33 = a1;
    v32(v23, v22);
    uint64_t v24 = swift_allocObject();
    swift_beginAccess();
    swift_weakLoadStrong();
    swift_weakInit();
    swift_release();
    uint64_t v25 = (void *)swift_allocObject();
    void v25[2] = v24;
    v25[3] = a4;
    v25[4] = a5;
    void v25[5] = a6;
    v25[6] = a7;
    v25[7] = v33;
    long long v25[8] = a8;
    v25[9] = a9;
    id v26 = v33;
    sub_1AFFC8E48();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E48();
    id v27 = (void *)sub_1AFFCA5E8();
    sub_1AFFCA678();
    swift_release();
    swift_release();

    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = a4;
    *(void *)(v28 + 24) = a5;
    sub_1AFFC8E48();
    uint64_t v29 = (void *)sub_1AFFCA5E8();
    sub_1AFFCA6B8();
    swift_release();

    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v19 = sub_1AFFC9E28();
    sub_1AFE12BA8((unint64_t *)&qword_1E9AFB0B0, 255, MEMORY[0x1E4FAA9B0]);
    uint64_t v20 = (void *)swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v19 - 8) + 104))(v21, *MEMORY[0x1E4FAA9A0], v19);
    ((void (*)(void *))a4)(v20);
  }
}

void sub_1AFE09A94(uint64_t a1, uint64_t a2, void (*a3)(void *), uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(void))
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  uint64_t v15 = swift_release();
  if (Strong)
  {
    MEMORY[0x1F4188790](v15);
    v19[2] = a6;
    v19[3] = a7;
    v19[4] = a1;
    sub_1AFE06644((void (*)(void *__return_ptr, id *))sub_1AFE130C4, (uint64_t)v19, a5);
    a8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v16 = sub_1AFFC9E28();
    sub_1AFE12BA8((unint64_t *)&qword_1E9AFB0B0, 255, MEMORY[0x1E4FAA9B0]);
    id v17 = (void *)swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v16 - 8) + 104))(v18, *MEMORY[0x1E4FAA9A0], v16);
    a3(v17);
  }
}

uint64_t sub_1AFE09C44@<X0>(id *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  id v10 = *a1;
  id v11 = objc_msgSend(*a1, sel_feedID);
  if (!v11)
  {
    __break(1u);
LABEL_17:
    sub_1AFD76408((uint64_t)v62);
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v12 = v11;
  uint64_t v13 = sub_1AFFCAE98();
  uint64_t v15 = v14;

  if (!*(void *)(a2 + 16) || (unint64_t v16 = sub_1AFD79CC8(v13, v15), (v17 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    sub_1AFE1317C(v63);
    return sub_1AFE130E4((uint64_t)v63, a5, &qword_1EB816958, (uint64_t)&type metadata for StockNewsFeed);
  }
  sub_1AFDF97C0(*(void *)(a2 + 56) + 136 * v16, (uint64_t)v62);
  sub_1AFD76370((uint64_t)v62);
  swift_bridgeObjectRelease();
  sub_1AFD2CD48();
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1AFFD0DC0;
  id v19 = objc_msgSend(v10, sel_feedItems);
  uint64_t v47 = a5;
  uint64_t v64 = v5;
  uint64_t v48 = a3;
  if (v19)
  {
    sub_1AFD8F6AC(0, &qword_1EB818060);
    unint64_t v20 = sub_1AFFCB1C8();

    if (v20 >> 62)
    {
      sub_1AFFC8E38();
      id v19 = (id)sub_1AFFCB9C8();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v19 = *(id *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v21 = MEMORY[0x1E4FBB5C8];
  *(void *)(v18 + 56) = MEMORY[0x1E4FBB550];
  *(void *)(v18 + 64) = v21;
  *(void *)(v18 + 32) = v19;
  sub_1AFDF97C0((uint64_t)v62, (uint64_t)&v53);
  long long v22 = v54;
  uint64_t v23 = MEMORY[0x1E4FBB1A0];
  *(void *)(v18 + 96) = MEMORY[0x1E4FBB1A0];
  unint64_t v24 = sub_1AFD2CE00();
  *(void *)(v18 + 104) = v24;
  *(_OWORD *)(v18 + 72) = v22;
  sub_1AFFC8E38();
  id v25 = objc_msgSend(v10, sel_feedID);
  if (!v25) {
    goto LABEL_17;
  }
  id v26 = v25;
  uint64_t v27 = sub_1AFFCAE98();
  uint64_t v29 = v28;

  *(void *)(v18 + 136) = v23;
  *(void *)(v18 + 144) = v24;
  *(void *)(v18 + 112) = v27;
  *(void *)(v18 + 120) = v29;
  sub_1AFD8F6AC(0, (unint64_t *)&qword_1EB819EA0);
  uint64_t v30 = (void *)sub_1AFFCB638();
  sub_1AFFCB478();
  sub_1AFFCA878();
  swift_bridgeObjectRelease();

  id v31 = objc_msgSend(v10, sel_feedItems);
  if (v31)
  {
    uint64_t v32 = v31;
    sub_1AFD8F6AC(0, &qword_1EB818060);
    unint64_t v33 = sub_1AFFCB1C8();
  }
  else
  {
    unint64_t v33 = MEMORY[0x1E4FBC860];
  }
  id v35 = v48;
  unint64_t v36 = sub_1AFE12630(v33, v35);
  swift_bridgeObjectRelease();

  uint64_t v37 = a4[3];
  uint64_t v38 = a4[4];
  __swift_project_boxed_opaque_existential_1(a4, v37);
  v51[6] = v59;
  v51[7] = v60;
  uint64_t v52 = v61;
  v51[2] = v55;
  v51[3] = v56;
  v51[4] = v57;
  v51[5] = v58;
  v51[0] = v53;
  v51[1] = v54;
  nullsub_1(v51);
  sub_1AFD2D884((uint64_t)v51, (uint64_t)v63);
  uint64_t v39 = *(uint64_t (**)(unint64_t, _OWORD *, uint64_t, uint64_t))(v38 + 16);
  sub_1AFD76370((uint64_t)&v53);
  uint64_t v40 = v39(v36, v63, v37, v38);
  sub_1AFD76408((uint64_t)v62);
  sub_1AFFC8E38();
  uint64_t v41 = sub_1AFE0F318(v36, v40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  id v42 = objc_msgSend(v10, sel_feedID);
  if (v42)
  {
    uint64_t v43 = v42;
    uint64_t v44 = sub_1AFFCAE98();
    uint64_t v46 = v45;

    *(void *)&long long v49 = v41;
    *((void *)&v49 + 1) = v44;
    *(void *)&v50[0] = v46;
    sub_1AFDF97C0((uint64_t)v62, (uint64_t)v50 + 8);
    v63[6] = v50[5];
    v63[7] = v50[6];
    v63[8] = v50[7];
    v63[9] = v50[8];
    v63[2] = v50[1];
    v63[3] = v50[2];
    v63[4] = v50[3];
    v63[5] = v50[4];
    v63[0] = v49;
    v63[1] = v50[0];
    nullsub_1(v63);
    return sub_1AFE130E4((uint64_t)v63, v47, &qword_1EB816958, (uint64_t)&type metadata for StockNewsFeed);
  }
LABEL_18:
  uint64_t result = sub_1AFD76408((uint64_t)v62);
  __break(1u);
  return result;
}

uint64_t sub_1AFE0A0F8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6 = a2;
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1AFD8F6AC(0, &qword_1EB816908);
    uint64_t v6 = sub_1AFFCB1C8();
  }
  if (a3)
  {
    sub_1AFD8F6AC(0, &qword_1EB818060);
    a3 = sub_1AFFCB1C8();
  }
  sub_1AFFC8E48();
  id v8 = a4;
  v7(v6, a3, a4);
  swift_release();

  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t NewsFeedService.deinit()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  return v0;
}

uint64_t NewsFeedService.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);

  return swift_deallocClassInstance();
}

uint64_t NewsFeedService.fetchFeeds(for:)(uint64_t a1)
{
  return sub_1AFE08854(a1, 0);
}

uint64_t sub_1AFE0A258(uint64_t a1)
{
  return sub_1AFE08854(a1, 0);
}

uint64_t sub_1AFE0A280(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_1AFDF97C0(a2, (uint64_t)v15);
  void v14[2] = a3;
  v14[3] = a4;
  v14[4] = v15;
  sub_1AFFC8E38();
  uint64_t v11 = sub_1AFE05EE4(MEMORY[0x1E4FBC860], (void (*)(uint64_t *, uint64_t *))sub_1AFE0FADC, (uint64_t)v14, a1);
  swift_bridgeObjectRelease();
  uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a6 + 8))(v11, a5, a6);
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1AFE0A35C(unint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v29 = a5;
  uint64_t v27 = a3;
  uint64_t v28 = a4;
  uint64_t v8 = type metadata accessor for NewsFeedRequest();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (uint64_t *)((char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = *a2;
  uint64_t v13 = *(void *)(*a2 + 16);
  if (v13)
  {
    id v25 = a1;
    uint64_t v26 = v5;
    unint64_t v14 = *a1;
    uint64_t v24 = sub_1AFFC8E38();
    uint64_t v15 = (uint64_t *)(v24 + 40);
    do
    {
      uint64_t v17 = *(v15 - 1);
      uint64_t v16 = *v15;
      sub_1AFFC8E38();
      sub_1AFFC98E8();
      uint64_t v18 = (char *)v11 + *(int *)(v8 + 28);
      uint64_t v19 = sub_1AFFC98F8();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v18, v28, v19);
      *uint64_t v11 = v17;
      v11[1] = v16;
      void v11[2] = v27;
      uint64_t v20 = v29;
      sub_1AFDF97C0(v29, (uint64_t)v11 + *(int *)(v8 + 32));
      sub_1AFD76370(v20);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v14 = sub_1AFD35B98(0, *(void *)(v14 + 16) + 1, 1, v14);
      }
      unint64_t v22 = *(void *)(v14 + 16);
      unint64_t v21 = *(void *)(v14 + 24);
      if (v22 >= v21 >> 1) {
        unint64_t v14 = sub_1AFD35B98(v21 > 1, v22 + 1, 1, v14);
      }
      v15 += 2;
      *(void *)(v14 + 16) = v22 + 1;
      sub_1AFDF99E8((uint64_t)v11, v14+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v22);
      --v13;
    }
    while (v13);
    uint64_t result = swift_bridgeObjectRelease();
    *id v25 = v14;
  }
  return result;
}

uint64_t sub_1AFE0A578(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void v8[2] = a2;
  v8[3] = a3;
  sub_1AFE060A8(MEMORY[0x1E4FBC860], (void (*)(uint64_t *, _OWORD *))sub_1AFE0FAFC, (uint64_t)v8, a1);
  uint64_t v6 = (*(uint64_t (**)(void))(a5 + 8))();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1AFE0A60C(unint64_t *a1, _OWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v38 = a4;
  uint64_t v34 = a3;
  uint64_t v7 = type metadata accessor for NewsFeedRequest();
  uint64_t v33 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (void *)((char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  long long v10 = a2[3];
  v37[2] = a2[2];
  _OWORD v37[3] = v10;
  long long v11 = a2[8];
  long long v12 = a2[6];
  v37[7] = a2[7];
  v37[8] = v11;
  long long v13 = a2[5];
  v37[4] = a2[4];
  v37[5] = v13;
  v37[6] = v12;
  long long v14 = a2[1];
  v37[0] = *a2;
  v37[1] = v14;
  uint64_t v15 = *((void *)&v11 + 1);
  uint64_t v16 = *(void *)(*((void *)&v11 + 1) + 16);
  if (v16)
  {
    uint64_t v32 = v4;
    long long v17 = a2[7];
    v35[6] = a2[6];
    v35[7] = v17;
    uint64_t v36 = *((void *)a2 + 16);
    long long v18 = a2[3];
    _OWORD v35[2] = a2[2];
    v35[3] = v18;
    long long v19 = a2[5];
    v35[4] = a2[4];
    v35[5] = v19;
    long long v20 = a2[1];
    v35[0] = *a2;
    v35[1] = v20;
    nullsub_1(v35);
    id v31 = a1;
    unint64_t v21 = *a1;
    sub_1AFE12938((uint64_t)v37);
    v30[1] = v15;
    unint64_t v22 = (uint64_t *)(v15 + 40);
    do
    {
      uint64_t v24 = *(v22 - 1);
      uint64_t v23 = *v22;
      sub_1AFFC8E38();
      sub_1AFFC98E8();
      id v25 = (char *)v9 + *(int *)(v7 + 28);
      uint64_t v26 = sub_1AFFC98F8();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v25, v38, v26);
      *uint64_t v9 = v24;
      v9[1] = v23;
      void v9[2] = v34;
      sub_1AFDF97C0((uint64_t)v35, (uint64_t)v9 + *(int *)(v7 + 32));
      sub_1AFD76370((uint64_t)v37);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v21 = sub_1AFD35B98(0, *(void *)(v21 + 16) + 1, 1, v21);
      }
      unint64_t v28 = *(void *)(v21 + 16);
      unint64_t v27 = *(void *)(v21 + 24);
      if (v28 >= v27 >> 1) {
        unint64_t v21 = sub_1AFD35B98(v27 > 1, v28 + 1, 1, v21);
      }
      v22 += 2;
      *(void *)(v21 + 16) = v28 + 1;
      sub_1AFDF99E8((uint64_t)v9, v21+ ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80))+ *(void *)(v33 + 72) * v28);
      --v16;
    }
    while (v16);
    swift_bridgeObjectRelease();
    uint64_t result = sub_1AFD76408((uint64_t)v37);
    *id v31 = v21;
  }
  else
  {
    sub_1AFE12938((uint64_t)v37);
    swift_bridgeObjectRelease();
    return sub_1AFD76408((uint64_t)v37);
  }
  return result;
}

uint64_t sub_1AFE0A8B0(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  sub_1AFD2CF70(a1, (uint64_t)v9);
  sub_1AFD2CF70((uint64_t)v9, (uint64_t)&v8);
  uint64_t result = sub_1AFF709CC();
  if ((result & 1) == 0) {
    return 1;
  }
  uint64_t v7 = *a3 + 1;
  if (__OFADD__(*a3, 1))
  {
    __break(1u);
  }
  else
  {
    *a3 = v7;
    return v7 <= a4;
  }
  return result;
}

uint64_t sub_1AFE0A93C(unsigned char *a1, uint64_t a2)
{
  uint64_t v2 = a2;
  switch(*a1)
  {
    case 1:
      uint64_t v5 = a2;
      sub_1AFFC8E38();
      uint64_t v3 = (uint64_t (*)(void *))sub_1AFE0BFE4;
      goto LABEL_6;
    case 2:
      uint64_t v5 = a2;
      sub_1AFFC8E38();
      uint64_t v3 = sub_1AFE0B570;
      goto LABEL_6;
    case 3:
      uint64_t v5 = a2;
      sub_1AFFC8E38();
      uint64_t v3 = sub_1AFE0AAFC;
LABEL_6:
      sub_1AFE0AA88(&v5, v3);
      uint64_t v2 = v5;
      break;
    default:
      sub_1AFFC8E38();
      break;
  }
  return v2;
}

uint64_t sub_1AFE0AA30(uint64_t *a1)
{
  return sub_1AFE0AA88(a1, (uint64_t (*)(void *))sub_1AFE0BFE4);
}

uint64_t sub_1AFE0AA5C(uint64_t *a1)
{
  return sub_1AFE0AA88(a1, sub_1AFE0B570);
}

uint64_t sub_1AFE0AA88(uint64_t *a1, uint64_t (*a2)(void *))
{
  uint64_t v4 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v4 = sub_1AFEE62D0(v4);
  }
  uint64_t v5 = *(void *)(v4 + 16);
  v7[0] = v4 + 32;
  v7[1] = v5;
  uint64_t result = a2(v7);
  *a1 = v4;
  return result;
}

uint64_t sub_1AFE0AAFC(uint64_t *a1)
{
  uint64_t v2 = a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_1AFFCBC78();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_155;
    }
    if (v3) {
      return sub_1AFE0D344(0, v3, 1, v2);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_163;
  }
  uint64_t v113 = v3;
  uint64_t v109 = result;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    uint64_t v114 = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v13 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      long long v11 = (char *)MEMORY[0x1E4FBC860];
LABEL_120:
      uint64_t v108 = v8;
      if (v13 >= 2)
      {
        uint64_t v100 = *v2;
        do
        {
          unint64_t v101 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_150;
          }
          if (!v100) {
            goto LABEL_162;
          }
          uint64_t v102 = *(void *)&v11[16 * v101 + 32];
          uint64_t v103 = *(void *)&v11[16 * v13 + 24];
          sub_1AFE0DD08((char *)(v100 + 144 * v102), (char *)(v100 + 144 * *(void *)&v11[16 * v13 + 16]), v100 + 144 * v103, v114);
          if (v1) {
            break;
          }
          if (v103 < v102) {
            goto LABEL_151;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            long long v11 = sub_1AFEE6294((uint64_t)v11);
          }
          if (v101 >= *((void *)v11 + 2)) {
            goto LABEL_152;
          }
          uint64_t v104 = &v11[16 * v101 + 32];
          *(void *)uint64_t v104 = v102;
          *((void *)v104 + 1) = v103;
          unint64_t v105 = *((void *)v11 + 2);
          if (v13 > v105) {
            goto LABEL_153;
          }
          memmove(&v11[16 * v13 + 16], &v11[16 * v13 + 32], 16 * (v105 - v13));
          *((void *)v11 + 2) = v105 - 1;
          unint64_t v13 = v105 - 1;
        }
        while (v105 > 2);
      }
LABEL_131:
      swift_bridgeObjectRelease();
      *(void *)(v108 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v108 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_1AFFCB258();
    *(void *)(v7 + 16) = v6;
    uint64_t v108 = v7;
    uint64_t v114 = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  double v107 = v2;
  uint64_t v10 = *v2;
  long long v11 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v12 = v113;
  uint64_t v126 = *v2;
  while (1)
  {
    uint64_t v14 = v9;
    uint64_t v15 = v9 + 1;
    uint64_t v110 = v9;
    if (v9 + 1 >= v12)
    {
      ++v9;
      goto LABEL_51;
    }
    uint64_t v16 = v10;
    sub_1AFD2CF70(v10 + 144 * v15, (uint64_t)v121);
    sub_1AFD2CF70(v16 + 144 * v14, (uint64_t)v122);
    sub_1AFD2CF70((uint64_t)v121, (uint64_t)v124);
    sub_1AFD2CF70((uint64_t)v122, (uint64_t)v125);
    sub_1AFD2CF70((uint64_t)v121, (uint64_t)v123);
    if (sub_1AFD2D15C((uint64_t)v123) == 1)
    {
      sub_1AFD2D168((uint64_t)v123);
LABEL_21:
      sub_1AFD2D03C(v122, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
      sub_1AFD2D03C(v121, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
      sub_1AFE13218((uint64_t)v124);
      uint64_t v9 = v14 + 2;
      if (v14 + 2 >= v113)
      {
        uint64_t v10 = v126;
        goto LABEL_51;
      }
      BOOL v20 = 0;
      goto LABEL_25;
    }
    uint64_t v17 = sub_1AFD2D168((uint64_t)v123);
    sub_1AFD2CF70((uint64_t)v122, (uint64_t)v118);
    int v18 = sub_1AFD2D15C((uint64_t)v118);
    uint64_t v19 = sub_1AFD2D168((uint64_t)v118);
    if (v18 == 1) {
      goto LABEL_21;
    }
    uint64_t v21 = v19;
    sub_1AFD2D03C(v122, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
    sub_1AFD2D03C(v121, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
    sub_1AFE13218((uint64_t)v124);
    double v22 = *(double *)(v21 + 88);
    double v23 = *(double *)(v17 + 88);
    BOOL v20 = v22 < v23;
    uint64_t v9 = v14 + 2;
    if (v14 + 2 >= v113)
    {
      uint64_t v10 = v126;
      if (v22 >= v23) {
        goto LABEL_51;
      }
      goto LABEL_39;
    }
LABEL_25:
    uint64_t v10 = v126;
    while (1)
    {
      uint64_t v24 = v9;
      uint64_t v25 = v10 + 144 * v9;
      uint64_t v26 = v10;
      sub_1AFD2CF70(v25, (uint64_t)v116);
      sub_1AFD2CF70(v26 + 144 * v15, (uint64_t)v117);
      sub_1AFD2CF70((uint64_t)v116, (uint64_t)v118);
      sub_1AFD2CF70((uint64_t)v117, (uint64_t)&v119);
      sub_1AFD2CF70((uint64_t)v116, (uint64_t)v120);
      if (sub_1AFD2D15C((uint64_t)v120) == 1)
      {
        sub_1AFD2D168((uint64_t)v120);
LABEL_30:
        sub_1AFD2D03C(v117, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
        sub_1AFD2D03C(v116, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
        sub_1AFE13218((uint64_t)v118);
        if (v20)
        {
          uint64_t v10 = v126;
          goto LABEL_38;
        }
        uint64_t v9 = v24 + 1;
        uint64_t v10 = v126;
        if (v24 + 1 >= v113) {
          goto LABEL_50;
        }
        goto LABEL_26;
      }
      uint64_t v27 = sub_1AFD2D168((uint64_t)v120);
      sub_1AFD2CF70((uint64_t)v117, (uint64_t)v115);
      int v28 = sub_1AFD2D15C((uint64_t)v115);
      uint64_t v29 = sub_1AFD2D168((uint64_t)v115);
      if (v28 == 1) {
        goto LABEL_30;
      }
      uint64_t v30 = v29;
      sub_1AFD2D03C(v117, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
      sub_1AFD2D03C(v116, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
      sub_1AFE13218((uint64_t)v118);
      if (((v20 ^ (*(double *)(v30 + 88) >= *(double *)(v27 + 88))) & 1) == 0)
      {
        uint64_t v10 = v126;
        if (!v20)
        {
          uint64_t v9 = v24;
          goto LABEL_50;
        }
        goto LABEL_38;
      }
      uint64_t v9 = v24 + 1;
      uint64_t v10 = v126;
      if (v24 + 1 >= v113) {
        break;
      }
LABEL_26:
      uint64_t v15 = v24;
    }
    ++v24;
    if (!v20)
    {
LABEL_50:
      uint64_t v14 = v110;
      goto LABEL_51;
    }
LABEL_38:
    uint64_t v9 = v24;
    BOOL v81 = v24 < v110;
    uint64_t v14 = v110;
    if (v81) {
      goto LABEL_158;
    }
LABEL_39:
    if (v14 < v9)
    {
      uint64_t v31 = 144 * v9 - 144;
      uint64_t v32 = v14;
      uint64_t v33 = 144 * v14;
      uint64_t v34 = v9;
      while (1)
      {
        if (v32 != --v34)
        {
          if (!v10) {
            goto LABEL_161;
          }
          id v35 = (void *)(v10 + v33);
          uint64_t v36 = (const void *)(v10 + v31);
          sub_1AFD2CF70(v10 + v33, (uint64_t)v118);
          memmove(v35, v36, 0x90uLL);
          sub_1AFD2CF70((uint64_t)v118, (uint64_t)v36);
          uint64_t v10 = v126;
        }
        ++v32;
        v31 -= 144;
        v33 += 144;
        if (v32 >= v34) {
          goto LABEL_50;
        }
      }
    }
LABEL_51:
    if (v9 < v113)
    {
      if (__OFSUB__(v9, v14)) {
        goto LABEL_154;
      }
      if (v9 - v14 < v109) {
        break;
      }
    }
LABEL_71:
    if (v9 < v14) {
      goto LABEL_149;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      long long v11 = sub_1AFEE5E44(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v50 = *((void *)v11 + 2);
    unint64_t v49 = *((void *)v11 + 3);
    unint64_t v13 = v50 + 1;
    uint64_t v10 = v126;
    if (v50 >= v49 >> 1)
    {
      uint64_t v99 = sub_1AFEE5E44((char *)(v49 > 1), v50 + 1, 1, v11);
      uint64_t v10 = v126;
      long long v11 = v99;
    }
    *((void *)v11 + 2) = v13;
    uint64_t v51 = v11 + 32;
    uint64_t v52 = &v11[16 * v50 + 32];
    *(void *)uint64_t v52 = v110;
    *((void *)v52 + 1) = v9;
    if (v50)
    {
      while (1)
      {
        unint64_t v53 = v13 - 1;
        if (v13 >= 4)
        {
          long long v58 = &v51[16 * v13];
          uint64_t v59 = *((void *)v58 - 8);
          uint64_t v60 = *((void *)v58 - 7);
          BOOL v64 = __OFSUB__(v60, v59);
          uint64_t v61 = v60 - v59;
          if (v64) {
            goto LABEL_138;
          }
          uint64_t v63 = *((void *)v58 - 6);
          uint64_t v62 = *((void *)v58 - 5);
          BOOL v64 = __OFSUB__(v62, v63);
          uint64_t v56 = v62 - v63;
          char v57 = v64;
          if (v64) {
            goto LABEL_139;
          }
          unint64_t v65 = v13 - 2;
          uint64_t v66 = &v51[16 * v13 - 32];
          uint64_t v68 = *(void *)v66;
          uint64_t v67 = *((void *)v66 + 1);
          BOOL v64 = __OFSUB__(v67, v68);
          uint64_t v69 = v67 - v68;
          if (v64) {
            goto LABEL_141;
          }
          BOOL v64 = __OFADD__(v56, v69);
          uint64_t v70 = v56 + v69;
          if (v64) {
            goto LABEL_144;
          }
          if (v70 >= v61)
          {
            uint64_t v88 = &v51[16 * v53];
            uint64_t v90 = *(void *)v88;
            uint64_t v89 = *((void *)v88 + 1);
            BOOL v64 = __OFSUB__(v89, v90);
            uint64_t v91 = v89 - v90;
            if (v64) {
              goto LABEL_148;
            }
            BOOL v81 = v56 < v91;
            goto LABEL_108;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v82 = *((void *)v11 + 4);
            uint64_t v83 = *((void *)v11 + 5);
            BOOL v64 = __OFSUB__(v83, v82);
            uint64_t v75 = v83 - v82;
            char v76 = v64;
            goto LABEL_102;
          }
          uint64_t v55 = *((void *)v11 + 4);
          uint64_t v54 = *((void *)v11 + 5);
          BOOL v64 = __OFSUB__(v54, v55);
          uint64_t v56 = v54 - v55;
          char v57 = v64;
        }
        if (v57) {
          goto LABEL_140;
        }
        unint64_t v65 = v13 - 2;
        int v71 = &v51[16 * v13 - 32];
        uint64_t v73 = *(void *)v71;
        uint64_t v72 = *((void *)v71 + 1);
        BOOL v74 = __OFSUB__(v72, v73);
        uint64_t v75 = v72 - v73;
        char v76 = v74;
        if (v74) {
          goto LABEL_143;
        }
        uint64_t v77 = &v51[16 * v53];
        uint64_t v79 = *(void *)v77;
        uint64_t v78 = *((void *)v77 + 1);
        BOOL v64 = __OFSUB__(v78, v79);
        uint64_t v80 = v78 - v79;
        if (v64) {
          goto LABEL_146;
        }
        if (__OFADD__(v75, v80)) {
          goto LABEL_147;
        }
        if (v75 + v80 >= v56)
        {
          BOOL v81 = v56 < v80;
LABEL_108:
          if (v81) {
            unint64_t v53 = v65;
          }
          goto LABEL_110;
        }
LABEL_102:
        if (v76) {
          goto LABEL_142;
        }
        unint64_t v84 = &v51[16 * v53];
        uint64_t v86 = *(void *)v84;
        uint64_t v85 = *((void *)v84 + 1);
        BOOL v64 = __OFSUB__(v85, v86);
        uint64_t v87 = v85 - v86;
        if (v64) {
          goto LABEL_145;
        }
        if (v87 < v75) {
          goto LABEL_15;
        }
LABEL_110:
        unint64_t v92 = v53 - 1;
        if (v53 - 1 >= v13)
        {
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
          goto LABEL_157;
        }
        if (!v10) {
          goto LABEL_160;
        }
        uint64_t v93 = v11;
        unsigned __int8 v94 = &v51[16 * v92];
        uint64_t v95 = *(void *)v94;
        uint64_t v96 = &v51[16 * v53];
        uint64_t v97 = *((void *)v96 + 1);
        sub_1AFE0DD08((char *)(v10 + 144 * *(void *)v94), (char *)(v10 + 144 * *(void *)v96), v10 + 144 * v97, v114);
        if (v1) {
          goto LABEL_131;
        }
        if (v97 < v95) {
          goto LABEL_135;
        }
        if (v53 > *((void *)v93 + 2)) {
          goto LABEL_136;
        }
        *(void *)unsigned __int8 v94 = v95;
        *(void *)&v51[16 * v92 + 8] = v97;
        unint64_t v98 = *((void *)v93 + 2);
        if (v53 >= v98) {
          goto LABEL_137;
        }
        long long v11 = v93;
        unint64_t v13 = v98 - 1;
        memmove(&v51[16 * v53], v96 + 16, 16 * (v98 - 1 - v53));
        *((void *)v93 + 2) = v98 - 1;
        uint64_t v10 = v126;
        if (v98 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    uint64_t v12 = v113;
    if (v9 >= v113)
    {
      uint64_t v2 = v107;
      uint64_t v8 = v108;
      goto LABEL_120;
    }
  }
  if (__OFADD__(v14, v109)) {
    goto LABEL_156;
  }
  if (v14 + v109 >= v113) {
    uint64_t v37 = v113;
  }
  else {
    uint64_t v37 = v14 + v109;
  }
  if (v37 >= v14)
  {
    if (v9 != v37)
    {
      unsigned int v106 = v11;
      uint64_t v38 = v14;
      uint64_t v39 = (_OWORD *)(v10 + 144 * v9);
      uint64_t v111 = v37;
      uint64_t v112 = v38 + 1;
      do
      {
        uint64_t v40 = v112;
        for (unint64_t i = v39; ; i -= 9)
        {
          sub_1AFD2CF70((uint64_t)i, (uint64_t)v122);
          sub_1AFD2CF70((uint64_t)(i - 9), (uint64_t)v123);
          sub_1AFD2CF70((uint64_t)v122, (uint64_t)v124);
          sub_1AFD2CF70((uint64_t)v123, (uint64_t)v125);
          sub_1AFD2CF70((uint64_t)v122, (uint64_t)v118);
          if (sub_1AFD2D15C((uint64_t)v118) == 1) {
            break;
          }
          uint64_t v42 = sub_1AFD2D168((uint64_t)v118);
          sub_1AFD2CF70((uint64_t)v123, (uint64_t)v121);
          int v43 = sub_1AFD2D15C((uint64_t)v121);
          uint64_t v44 = sub_1AFD2D168((uint64_t)v121);
          sub_1AFD2D03C(v123, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
          sub_1AFD2D03C(v122, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
          sub_1AFE13218((uint64_t)v124);
          if (v43 == 1 || *(double *)(v44 + 88) >= *(double *)(v42 + 88)) {
            goto LABEL_62;
          }
          if (!v126) {
            goto LABEL_159;
          }
          sub_1AFD2CF70((uint64_t)i, (uint64_t)v120);
          long long v45 = *(i - 2);
          i[6] = *(i - 3);
          i[7] = v45;
          i[8] = *(i - 1);
          long long v46 = *(i - 6);
          i[2] = *(i - 7);
          i[3] = v46;
          long long v47 = *(i - 4);
          i[4] = *(i - 5);
          i[5] = v47;
          long long v48 = *(i - 8);
          *unint64_t i = *(i - 9);
          i[1] = v48;
          sub_1AFD2CF70((uint64_t)v120, (uint64_t)(i - 9));
          if (v9 == v40) {
            goto LABEL_62;
          }
          ++v40;
        }
        sub_1AFD2D168((uint64_t)v118);
        sub_1AFD2D03C(v123, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
        sub_1AFD2D03C(v122, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
        sub_1AFE13218((uint64_t)v124);
LABEL_62:
        ++v9;
        v39 += 9;
      }
      while (v9 != v111);
      uint64_t v9 = v111;
      long long v11 = v106;
      uint64_t v14 = v110;
    }
    goto LABEL_71;
  }
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  __break(1u);
LABEL_161:
  __break(1u);
LABEL_162:
  __break(1u);
LABEL_163:
  uint64_t result = sub_1AFFCB998();
  __break(1u);
  return result;
}

uint64_t sub_1AFE0B570(uint64_t *a1)
{
  uint64_t v2 = a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_1AFFCBC78();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_155;
    }
    if (v3) {
      return sub_1AFE0D548(0, v3, 1, v2);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_163;
  }
  uint64_t v113 = v3;
  uint64_t v109 = result;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    uint64_t v114 = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v13 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      long long v11 = (char *)MEMORY[0x1E4FBC860];
LABEL_120:
      uint64_t v108 = v8;
      if (v13 >= 2)
      {
        uint64_t v100 = *v2;
        do
        {
          unint64_t v101 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_150;
          }
          if (!v100) {
            goto LABEL_162;
          }
          uint64_t v102 = *(void *)&v11[16 * v101 + 32];
          uint64_t v103 = *(void *)&v11[16 * v13 + 24];
          sub_1AFE0E21C((char *)(v100 + 144 * v102), (char *)(v100 + 144 * *(void *)&v11[16 * v13 + 16]), v100 + 144 * v103, v114);
          if (v1) {
            break;
          }
          if (v103 < v102) {
            goto LABEL_151;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            long long v11 = sub_1AFEE6294((uint64_t)v11);
          }
          if (v101 >= *((void *)v11 + 2)) {
            goto LABEL_152;
          }
          uint64_t v104 = &v11[16 * v101 + 32];
          *(void *)uint64_t v104 = v102;
          *((void *)v104 + 1) = v103;
          unint64_t v105 = *((void *)v11 + 2);
          if (v13 > v105) {
            goto LABEL_153;
          }
          memmove(&v11[16 * v13 + 16], &v11[16 * v13 + 32], 16 * (v105 - v13));
          *((void *)v11 + 2) = v105 - 1;
          unint64_t v13 = v105 - 1;
        }
        while (v105 > 2);
      }
LABEL_131:
      swift_bridgeObjectRelease();
      *(void *)(v108 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v108 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_1AFFCB258();
    *(void *)(v7 + 16) = v6;
    uint64_t v108 = v7;
    uint64_t v114 = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  double v107 = v2;
  uint64_t v10 = *v2;
  long long v11 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v12 = v113;
  uint64_t v126 = *v2;
  while (1)
  {
    uint64_t v14 = v9;
    uint64_t v15 = v9 + 1;
    uint64_t v110 = v9;
    if (v9 + 1 >= v12)
    {
      ++v9;
      goto LABEL_51;
    }
    uint64_t v16 = v10;
    sub_1AFD2CF70(v10 + 144 * v15, (uint64_t)v121);
    sub_1AFD2CF70(v16 + 144 * v14, (uint64_t)v122);
    sub_1AFD2CF70((uint64_t)v121, (uint64_t)v124);
    sub_1AFD2CF70((uint64_t)v122, (uint64_t)v125);
    sub_1AFD2CF70((uint64_t)v121, (uint64_t)v123);
    if (sub_1AFD2D15C((uint64_t)v123) == 1)
    {
      sub_1AFD2D168((uint64_t)v123);
LABEL_21:
      sub_1AFD2D03C(v122, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
      sub_1AFD2D03C(v121, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
      sub_1AFE13218((uint64_t)v124);
      uint64_t v9 = v14 + 2;
      if (v14 + 2 >= v113)
      {
        uint64_t v10 = v126;
        goto LABEL_51;
      }
      BOOL v20 = 0;
      goto LABEL_25;
    }
    uint64_t v17 = sub_1AFD2D168((uint64_t)v123);
    sub_1AFD2CF70((uint64_t)v122, (uint64_t)v118);
    int v18 = sub_1AFD2D15C((uint64_t)v118);
    uint64_t v19 = sub_1AFD2D168((uint64_t)v118);
    if (v18 == 1) {
      goto LABEL_21;
    }
    uint64_t v21 = v19;
    sub_1AFD2D03C(v122, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
    sub_1AFD2D03C(v121, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
    sub_1AFE13218((uint64_t)v124);
    double v22 = *(double *)(v21 + 72);
    double v23 = *(double *)(v17 + 72);
    BOOL v20 = v22 < v23;
    uint64_t v9 = v14 + 2;
    if (v14 + 2 >= v113)
    {
      uint64_t v10 = v126;
      if (v22 >= v23) {
        goto LABEL_51;
      }
      goto LABEL_39;
    }
LABEL_25:
    uint64_t v10 = v126;
    while (1)
    {
      uint64_t v24 = v9;
      uint64_t v25 = v10 + 144 * v9;
      uint64_t v26 = v10;
      sub_1AFD2CF70(v25, (uint64_t)v116);
      sub_1AFD2CF70(v26 + 144 * v15, (uint64_t)v117);
      sub_1AFD2CF70((uint64_t)v116, (uint64_t)v118);
      sub_1AFD2CF70((uint64_t)v117, (uint64_t)&v119);
      sub_1AFD2CF70((uint64_t)v116, (uint64_t)v120);
      if (sub_1AFD2D15C((uint64_t)v120) == 1)
      {
        sub_1AFD2D168((uint64_t)v120);
LABEL_30:
        sub_1AFD2D03C(v117, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
        sub_1AFD2D03C(v116, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
        sub_1AFE13218((uint64_t)v118);
        if (v20)
        {
          uint64_t v10 = v126;
          goto LABEL_38;
        }
        uint64_t v9 = v24 + 1;
        uint64_t v10 = v126;
        if (v24 + 1 >= v113) {
          goto LABEL_50;
        }
        goto LABEL_26;
      }
      uint64_t v27 = sub_1AFD2D168((uint64_t)v120);
      sub_1AFD2CF70((uint64_t)v117, (uint64_t)v115);
      int v28 = sub_1AFD2D15C((uint64_t)v115);
      uint64_t v29 = sub_1AFD2D168((uint64_t)v115);
      if (v28 == 1) {
        goto LABEL_30;
      }
      uint64_t v30 = v29;
      sub_1AFD2D03C(v117, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
      sub_1AFD2D03C(v116, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
      sub_1AFE13218((uint64_t)v118);
      if (((v20 ^ (*(double *)(v30 + 72) >= *(double *)(v27 + 72))) & 1) == 0)
      {
        uint64_t v10 = v126;
        if (!v20)
        {
          uint64_t v9 = v24;
          goto LABEL_50;
        }
        goto LABEL_38;
      }
      uint64_t v9 = v24 + 1;
      uint64_t v10 = v126;
      if (v24 + 1 >= v113) {
        break;
      }
LABEL_26:
      uint64_t v15 = v24;
    }
    ++v24;
    if (!v20)
    {
LABEL_50:
      uint64_t v14 = v110;
      goto LABEL_51;
    }
LABEL_38:
    uint64_t v9 = v24;
    BOOL v81 = v24 < v110;
    uint64_t v14 = v110;
    if (v81) {
      goto LABEL_158;
    }
LABEL_39:
    if (v14 < v9)
    {
      uint64_t v31 = 144 * v9 - 144;
      uint64_t v32 = v14;
      uint64_t v33 = 144 * v14;
      uint64_t v34 = v9;
      while (1)
      {
        if (v32 != --v34)
        {
          if (!v10) {
            goto LABEL_161;
          }
          id v35 = (void *)(v10 + v33);
          uint64_t v36 = (const void *)(v10 + v31);
          sub_1AFD2CF70(v10 + v33, (uint64_t)v118);
          memmove(v35, v36, 0x90uLL);
          sub_1AFD2CF70((uint64_t)v118, (uint64_t)v36);
          uint64_t v10 = v126;
        }
        ++v32;
        v31 -= 144;
        v33 += 144;
        if (v32 >= v34) {
          goto LABEL_50;
        }
      }
    }
LABEL_51:
    if (v9 < v113)
    {
      if (__OFSUB__(v9, v14)) {
        goto LABEL_154;
      }
      if (v9 - v14 < v109) {
        break;
      }
    }
LABEL_71:
    if (v9 < v14) {
      goto LABEL_149;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      long long v11 = sub_1AFEE5E44(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v50 = *((void *)v11 + 2);
    unint64_t v49 = *((void *)v11 + 3);
    unint64_t v13 = v50 + 1;
    uint64_t v10 = v126;
    if (v50 >= v49 >> 1)
    {
      uint64_t v99 = sub_1AFEE5E44((char *)(v49 > 1), v50 + 1, 1, v11);
      uint64_t v10 = v126;
      long long v11 = v99;
    }
    *((void *)v11 + 2) = v13;
    uint64_t v51 = v11 + 32;
    uint64_t v52 = &v11[16 * v50 + 32];
    *(void *)uint64_t v52 = v110;
    *((void *)v52 + 1) = v9;
    if (v50)
    {
      while (1)
      {
        unint64_t v53 = v13 - 1;
        if (v13 >= 4)
        {
          long long v58 = &v51[16 * v13];
          uint64_t v59 = *((void *)v58 - 8);
          uint64_t v60 = *((void *)v58 - 7);
          BOOL v64 = __OFSUB__(v60, v59);
          uint64_t v61 = v60 - v59;
          if (v64) {
            goto LABEL_138;
          }
          uint64_t v63 = *((void *)v58 - 6);
          uint64_t v62 = *((void *)v58 - 5);
          BOOL v64 = __OFSUB__(v62, v63);
          uint64_t v56 = v62 - v63;
          char v57 = v64;
          if (v64) {
            goto LABEL_139;
          }
          unint64_t v65 = v13 - 2;
          uint64_t v66 = &v51[16 * v13 - 32];
          uint64_t v68 = *(void *)v66;
          uint64_t v67 = *((void *)v66 + 1);
          BOOL v64 = __OFSUB__(v67, v68);
          uint64_t v69 = v67 - v68;
          if (v64) {
            goto LABEL_141;
          }
          BOOL v64 = __OFADD__(v56, v69);
          uint64_t v70 = v56 + v69;
          if (v64) {
            goto LABEL_144;
          }
          if (v70 >= v61)
          {
            uint64_t v88 = &v51[16 * v53];
            uint64_t v90 = *(void *)v88;
            uint64_t v89 = *((void *)v88 + 1);
            BOOL v64 = __OFSUB__(v89, v90);
            uint64_t v91 = v89 - v90;
            if (v64) {
              goto LABEL_148;
            }
            BOOL v81 = v56 < v91;
            goto LABEL_108;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v82 = *((void *)v11 + 4);
            uint64_t v83 = *((void *)v11 + 5);
            BOOL v64 = __OFSUB__(v83, v82);
            uint64_t v75 = v83 - v82;
            char v76 = v64;
            goto LABEL_102;
          }
          uint64_t v55 = *((void *)v11 + 4);
          uint64_t v54 = *((void *)v11 + 5);
          BOOL v64 = __OFSUB__(v54, v55);
          uint64_t v56 = v54 - v55;
          char v57 = v64;
        }
        if (v57) {
          goto LABEL_140;
        }
        unint64_t v65 = v13 - 2;
        int v71 = &v51[16 * v13 - 32];
        uint64_t v73 = *(void *)v71;
        uint64_t v72 = *((void *)v71 + 1);
        BOOL v74 = __OFSUB__(v72, v73);
        uint64_t v75 = v72 - v73;
        char v76 = v74;
        if (v74) {
          goto LABEL_143;
        }
        uint64_t v77 = &v51[16 * v53];
        uint64_t v79 = *(void *)v77;
        uint64_t v78 = *((void *)v77 + 1);
        BOOL v64 = __OFSUB__(v78, v79);
        uint64_t v80 = v78 - v79;
        if (v64) {
          goto LABEL_146;
        }
        if (__OFADD__(v75, v80)) {
          goto LABEL_147;
        }
        if (v75 + v80 >= v56)
        {
          BOOL v81 = v56 < v80;
LABEL_108:
          if (v81) {
            unint64_t v53 = v65;
          }
          goto LABEL_110;
        }
LABEL_102:
        if (v76) {
          goto LABEL_142;
        }
        unint64_t v84 = &v51[16 * v53];
        uint64_t v86 = *(void *)v84;
        uint64_t v85 = *((void *)v84 + 1);
        BOOL v64 = __OFSUB__(v85, v86);
        uint64_t v87 = v85 - v86;
        if (v64) {
          goto LABEL_145;
        }
        if (v87 < v75) {
          goto LABEL_15;
        }
LABEL_110:
        unint64_t v92 = v53 - 1;
        if (v53 - 1 >= v13)
        {
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
          goto LABEL_157;
        }
        if (!v10) {
          goto LABEL_160;
        }
        uint64_t v93 = v11;
        unsigned __int8 v94 = &v51[16 * v92];
        uint64_t v95 = *(void *)v94;
        uint64_t v96 = &v51[16 * v53];
        uint64_t v97 = *((void *)v96 + 1);
        sub_1AFE0E21C((char *)(v10 + 144 * *(void *)v94), (char *)(v10 + 144 * *(void *)v96), v10 + 144 * v97, v114);
        if (v1) {
          goto LABEL_131;
        }
        if (v97 < v95) {
          goto LABEL_135;
        }
        if (v53 > *((void *)v93 + 2)) {
          goto LABEL_136;
        }
        *(void *)unsigned __int8 v94 = v95;
        *(void *)&v51[16 * v92 + 8] = v97;
        unint64_t v98 = *((void *)v93 + 2);
        if (v53 >= v98) {
          goto LABEL_137;
        }
        long long v11 = v93;
        unint64_t v13 = v98 - 1;
        memmove(&v51[16 * v53], v96 + 16, 16 * (v98 - 1 - v53));
        *((void *)v93 + 2) = v98 - 1;
        uint64_t v10 = v126;
        if (v98 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    uint64_t v12 = v113;
    if (v9 >= v113)
    {
      uint64_t v2 = v107;
      uint64_t v8 = v108;
      goto LABEL_120;
    }
  }
  if (__OFADD__(v14, v109)) {
    goto LABEL_156;
  }
  if (v14 + v109 >= v113) {
    uint64_t v37 = v113;
  }
  else {
    uint64_t v37 = v14 + v109;
  }
  if (v37 >= v14)
  {
    if (v9 != v37)
    {
      unsigned int v106 = v11;
      uint64_t v38 = v14;
      uint64_t v39 = (_OWORD *)(v10 + 144 * v9);
      uint64_t v111 = v37;
      uint64_t v112 = v38 + 1;
      do
      {
        uint64_t v40 = v112;
        for (unint64_t i = v39; ; i -= 9)
        {
          sub_1AFD2CF70((uint64_t)i, (uint64_t)v122);
          sub_1AFD2CF70((uint64_t)(i - 9), (uint64_t)v123);
          sub_1AFD2CF70((uint64_t)v122, (uint64_t)v124);
          sub_1AFD2CF70((uint64_t)v123, (uint64_t)v125);
          sub_1AFD2CF70((uint64_t)v122, (uint64_t)v118);
          if (sub_1AFD2D15C((uint64_t)v118) == 1) {
            break;
          }
          uint64_t v42 = sub_1AFD2D168((uint64_t)v118);
          sub_1AFD2CF70((uint64_t)v123, (uint64_t)v121);
          int v43 = sub_1AFD2D15C((uint64_t)v121);
          uint64_t v44 = sub_1AFD2D168((uint64_t)v121);
          sub_1AFD2D03C(v123, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
          sub_1AFD2D03C(v122, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
          sub_1AFE13218((uint64_t)v124);
          if (v43 == 1 || *(double *)(v44 + 72) >= *(double *)(v42 + 72)) {
            goto LABEL_62;
          }
          if (!v126) {
            goto LABEL_159;
          }
          sub_1AFD2CF70((uint64_t)i, (uint64_t)v120);
          long long v45 = *(i - 2);
          i[6] = *(i - 3);
          i[7] = v45;
          i[8] = *(i - 1);
          long long v46 = *(i - 6);
          i[2] = *(i - 7);
          i[3] = v46;
          long long v47 = *(i - 4);
          i[4] = *(i - 5);
          i[5] = v47;
          long long v48 = *(i - 8);
          *unint64_t i = *(i - 9);
          i[1] = v48;
          sub_1AFD2CF70((uint64_t)v120, (uint64_t)(i - 9));
          if (v9 == v40) {
            goto LABEL_62;
          }
          ++v40;
        }
        sub_1AFD2D168((uint64_t)v118);
        sub_1AFD2D03C(v123, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
        sub_1AFD2D03C(v122, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
        sub_1AFE13218((uint64_t)v124);
LABEL_62:
        ++v9;
        v39 += 9;
      }
      while (v9 != v111);
      uint64_t v9 = v111;
      long long v11 = v106;
      uint64_t v14 = v110;
    }
    goto LABEL_71;
  }
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  __break(1u);
LABEL_161:
  __break(1u);
LABEL_162:
  __break(1u);
LABEL_163:
  uint64_t result = sub_1AFFCB998();
  __break(1u);
  return result;
}

void sub_1AFE0BFE4(uint64_t *a1)
{
  sub_1AFD2C83C();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v169 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v169 - v6;
  MEMORY[0x1F4188790](v8);
  uint64_t v179 = (char *)&v169 - v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v182 = (char *)&v169 - v11;
  MEMORY[0x1F4188790](v12);
  v174 = (char *)&v169 - v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v177 = (char *)&v169 - v15;
  uint64_t v16 = sub_1AFFC98F8();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  v190 = (char *)&v169 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  v199 = (char *)&v169 - v20;
  MEMORY[0x1F4188790](v21);
  v176 = (char *)&v169 - v22;
  MEMORY[0x1F4188790](v23);
  uint64_t v180 = (char *)&v169 - v24;
  MEMORY[0x1F4188790](v25);
  uint64_t v172 = (char *)&v169 - v26;
  MEMORY[0x1F4188790](v27);
  v201 = (char *)&v169 - v28;
  MEMORY[0x1F4188790](v29);
  uint64_t v175 = (char *)&v169 - v30;
  uint64_t v178 = a1;
  uint64_t v31 = a1[1];
  uint64_t v32 = sub_1AFFCBC78();
  if (v32 >= v31)
  {
    if (v31 < 0) {
      goto LABEL_170;
    }
    if (v31) {
      sub_1AFE0D74C(0, v31, 1, v178);
    }
    return;
  }
  if (v31 >= 0) {
    uint64_t v33 = v31;
  }
  else {
    uint64_t v33 = v31 + 1;
  }
  if (v31 < -1) {
    goto LABEL_178;
  }
  uint64_t v173 = v32;
  if (v31 < 2)
  {
    uint64_t v36 = MEMORY[0x1E4FBC860];
    long long v187 = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v31 != 1)
    {
      unint64_t v41 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v40 = (char *)MEMORY[0x1E4FBC860];
LABEL_134:
      uint64_t v171 = v36;
      if (v41 >= 2)
      {
        uint64_t v161 = *v178;
        do
        {
          unint64_t v162 = v41 - 2;
          if (v41 < 2) {
            goto LABEL_165;
          }
          if (!v161) {
            goto LABEL_177;
          }
          uint64_t v163 = v40;
          uint64_t v164 = *(void *)&v40[16 * v162 + 32];
          uint64_t v165 = *(void *)&v40[16 * v41 + 24];
          uint64_t v166 = v189;
          sub_1AFE0E730((char *)(v161 + 144 * v164), (char *)(v161 + 144 * *(void *)&v40[16 * v41 + 16]), v161 + 144 * v165, v187);
          if (v166) {
            goto LABEL_132;
          }
          if (v165 < v164) {
            goto LABEL_166;
          }
          uint64_t v189 = 0;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v163 = sub_1AFEE6294((uint64_t)v163);
          }
          if (v162 >= *((void *)v163 + 2)) {
            goto LABEL_167;
          }
          uint64_t v167 = &v163[16 * v162 + 32];
          *(void *)uint64_t v167 = v164;
          *((void *)v167 + 1) = v165;
          unint64_t v168 = *((void *)v163 + 2);
          if (v41 > v168) {
            goto LABEL_168;
          }
          memmove(&v163[16 * v41 + 16], &v163[16 * v41 + 32], 16 * (v168 - v41));
          uint64_t v40 = v163;
          *((void *)v163 + 2) = v168 - 1;
          unint64_t v41 = v168 - 1;
        }
        while (v168 > 2);
      }
      swift_bridgeObjectRelease();
      *(void *)(v171 + 16) = 0;
      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v171 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v34 = v33 >> 1;
    uint64_t v35 = sub_1AFFCB258();
    *(void *)(v35 + 16) = v34;
    uint64_t v171 = v35;
    long long v187 = (char *)(v35 + 32);
  }
  uint64_t v37 = 0;
  uint64_t v38 = *v178;
  uint64_t v39 = (void (**)(char *, char *, uint64_t))(v17 + 32);
  v209 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
  v200 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
  v193 = (void (**)(char *, uint64_t))(v17 + 8);
  uint64_t v197 = v38;
  uint64_t v170 = v38 + 144;
  uint64_t v40 = (char *)MEMORY[0x1E4FBC860];
  v191 = v4;
  char v192 = v7;
  uint64_t v185 = v31;
  uint64_t v196 = (void (**)(char *, char *, uint64_t))(v17 + 32);
  uint64_t v194 = v16;
LABEL_16:
  uint64_t v188 = v40;
  uint64_t v183 = v37 + 1;
  uint64_t v184 = v37;
  if (v37 + 1 >= v31)
  {
    uint64_t v59 = v37 + 1;
    goto LABEL_55;
  }
  uint64_t v42 = v37;
  uint64_t v43 = v197;
  sub_1AFD2CF70(v197 + 144 * (v37 + 1), (uint64_t)v206);
  sub_1AFD2CF70(v43 + 144 * v42, (uint64_t)v207);
  sub_1AFD2CF70((uint64_t)v206, (uint64_t)v208);
  sub_1AFD2D15C((uint64_t)v208);
  uint64_t v44 = *(void **)sub_1AFD2D168((uint64_t)v208);
  sub_1AFD2D03C(v207, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
  sub_1AFD2D03C(v206, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
  id v45 = objc_msgSend(v44, sel_publishDate);
  if (!v45)
  {
    unint64_t v50 = *v209;
    uint64_t v49 = (uint64_t)v177;
    (*v209)(v177, 1, 1, v16);
    goto LABEL_26;
  }
  long long v46 = v45;
  long long v47 = v201;
  sub_1AFFC98A8();

  long long v48 = *v39;
  uint64_t v49 = (uint64_t)v177;
  (*v39)(v177, v47, v16);
  unint64_t v50 = *v209;
  (*v209)((char *)v49, 0, 1, v16);
  uint64_t v51 = *v200;
  if ((*v200)(v49, 1, v16) == 1)
  {
LABEL_26:
    sub_1AFE131B8(v49, (uint64_t (*)(void))sub_1AFD2C83C);
    sub_1AFD2D03C(v207, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2D0A0);
    sub_1AFD2D03C(v206, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2D0A0);
    LODWORD(v198) = 0;
    goto LABEL_27;
  }
  v48(v175, (char *)v49, v16);
  sub_1AFD2CF70((uint64_t)v207, (uint64_t)v205);
  sub_1AFD2D15C((uint64_t)v205);
  id v52 = objc_msgSend(*(id *)sub_1AFD2D168((uint64_t)v205), sel_publishDate);
  if (!v52)
  {
    uint64_t v49 = (uint64_t)v174;
    v50(v174, 1, 1, v16);
    goto LABEL_25;
  }
  unint64_t v53 = v52;
  uint64_t v54 = v201;
  sub_1AFFC98A8();

  uint64_t v49 = (uint64_t)v174;
  v48(v174, v54, v16);
  v50((char *)v49, 0, 1, v16);
  if (v51(v49, 1, v16) == 1)
  {
LABEL_25:
    (*v193)(v175, v16);
    goto LABEL_26;
  }
  uint64_t v55 = v172;
  v48(v172, (char *)v49, v16);
  uint64_t v56 = v175;
  LODWORD(v198) = sub_1AFFC9858();
  char v57 = *v193;
  (*v193)(v55, v194);
  long long v58 = v56;
  uint64_t v16 = v194;
  v57(v58, v194);
  sub_1AFD2D03C(v207, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2D0A0);
  sub_1AFD2D03C(v206, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2D0A0);
LABEL_27:
  uint64_t v37 = v184;
  if (v184 + 2 >= v31)
  {
    uint64_t v59 = v184 + 2;
    if (v198)
    {
LABEL_47:
      if (v59 < v37) {
        goto LABEL_171;
      }
      if (v37 < v59)
      {
        uint64_t v77 = 144 * v59 - 144;
        uint64_t v78 = 144 * v37;
        uint64_t v195 = v59;
        uint64_t v79 = v59;
        uint64_t v80 = v37;
        do
        {
          if (v80 != --v79)
          {
            if (!v197) {
              goto LABEL_176;
            }
            BOOL v81 = (void *)(v197 + v78);
            uint64_t v82 = (const void *)(v197 + v77);
            sub_1AFD2CF70(v197 + v78, (uint64_t)v205);
            memmove(v81, v82, 0x90uLL);
            sub_1AFD2CF70((uint64_t)v205, (uint64_t)v82);
            uint64_t v37 = v184;
          }
          ++v80;
          v77 -= 144;
          v78 += 144;
        }
        while (v80 < v79);
        uint64_t v31 = v185;
        uint64_t v59 = v195;
      }
    }
    goto LABEL_55;
  }
  uint64_t v60 = v170 + 144 * v184;
  for (uint64_t i = v184 + 3; ; ++i)
  {
    sub_1AFD2CF70(v60 + 144, (uint64_t)v203);
    sub_1AFD2CF70(v60, (uint64_t)v204);
    sub_1AFD2CF70((uint64_t)v203, (uint64_t)v205);
    sub_1AFD2D15C((uint64_t)v205);
    uint64_t v62 = *(void **)sub_1AFD2D168((uint64_t)v205);
    sub_1AFD2D03C(v204, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
    sub_1AFD2D03C(v203, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
    id v63 = objc_msgSend(v62, sel_publishDate);
    if (!v63)
    {
      uint64_t v67 = (uint64_t)v182;
      v50(v182, 1, 1, v16);
      goto LABEL_38;
    }
    BOOL v64 = v63;
    unint64_t v65 = v201;
    sub_1AFFC98A8();

    uint64_t v66 = *v39;
    uint64_t v67 = (uint64_t)v182;
    (*v39)(v182, v65, v16);
    v50((char *)v67, 0, 1, v16);
    uint64_t v68 = *v200;
    if ((*v200)(v67, 1, v16) == 1) {
      goto LABEL_38;
    }
    v66(v180, (char *)v67, v16);
    sub_1AFD2CF70((uint64_t)v204, (uint64_t)v202);
    sub_1AFD2D15C((uint64_t)v202);
    id v69 = objc_msgSend(*(id *)sub_1AFD2D168((uint64_t)v202), sel_publishDate);
    if (!v69)
    {
      uint64_t v67 = (uint64_t)v179;
      v50(v179, 1, 1, v16);
LABEL_37:
      (*v193)(v180, v16);
LABEL_38:
      sub_1AFE131B8(v67, (uint64_t (*)(void))sub_1AFD2C83C);
      sub_1AFD2D03C(v204, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2D0A0);
      sub_1AFD2D03C(v203, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2D0A0);
      if (v198)
      {
        uint64_t v59 = i - 1;
        uint64_t v37 = v184;
        uint64_t v31 = v185;
        goto LABEL_47;
      }
      goto LABEL_39;
    }
    uint64_t v70 = v69;
    int v71 = v201;
    sub_1AFFC98A8();

    uint64_t v67 = (uint64_t)v179;
    uint64_t v72 = v71;
    uint64_t v39 = v196;
    v66(v179, v72, v16);
    v50((char *)v67, 0, 1, v16);
    if (v68(v67, 1, v16) == 1) {
      goto LABEL_37;
    }
    uint64_t v73 = v176;
    v66(v176, (char *)v67, v16);
    BOOL v74 = v180;
    LODWORD(v195) = sub_1AFFC9858();
    uint64_t v75 = *v193;
    char v76 = v73;
    uint64_t v39 = v196;
    (*v193)(v76, v16);
    v75(v74, v16);
    sub_1AFD2D03C(v204, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2D0A0);
    sub_1AFD2D03C(v203, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2D0A0);
    if ((v198 ^ v195))
    {
      uint64_t v59 = i - 1;
      uint64_t v31 = v185;
      goto LABEL_44;
    }
LABEL_39:
    if (v185 == i) {
      break;
    }
    v60 += 144;
  }
  uint64_t v31 = v185;
  uint64_t v59 = v185;
LABEL_44:
  uint64_t v37 = v184;
  if (v198) {
    goto LABEL_47;
  }
LABEL_55:
  if (v59 >= v31)
  {
    uint64_t v83 = v59;
LABEL_82:
    if (v83 < v37) {
      goto LABEL_164;
    }
    goto LABEL_83;
  }
  if (__OFSUB__(v59, v37)) {
    goto LABEL_169;
  }
  uint64_t v83 = v59;
  if (v59 - v37 >= v173) {
    goto LABEL_82;
  }
  if (__OFADD__(v37, v173)) {
    goto LABEL_172;
  }
  if (v37 + v173 >= v31) {
    uint64_t v84 = v31;
  }
  else {
    uint64_t v84 = v37 + v173;
  }
  if (v84 >= v37)
  {
    if (v83 == v84) {
      goto LABEL_82;
    }
    uint64_t v85 = (_OWORD *)(v197 + 144 * v83);
    uint64_t v181 = v84;
LABEL_69:
    uint64_t v89 = v183;
    long long v186 = v85;
    uint64_t v195 = v83;
    while (2)
    {
      sub_1AFD2CF70((uint64_t)v85, (uint64_t)v206);
      sub_1AFD2CF70((uint64_t)(v85 - 9), (uint64_t)v207);
      sub_1AFD2CF70((uint64_t)v206, (uint64_t)v208);
      sub_1AFD2D15C((uint64_t)v208);
      uint64_t v90 = *(void **)sub_1AFD2D168((uint64_t)v208);
      sub_1AFD2D03C(v207, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
      sub_1AFD2D03C(v206, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
      id v91 = objc_msgSend(v90, sel_publishDate);
      if (v91)
      {
        unint64_t v92 = v91;
        uint64_t v198 = v89;
        uint64_t v93 = v201;
        sub_1AFFC98A8();

        unsigned __int8 v94 = *v39;
        uint64_t v86 = (uint64_t)v192;
        (*v39)(v192, v93, v16);
        uint64_t v87 = v39;
        uint64_t v95 = *v209;
        (*v209)((char *)v86, 0, 1, v16);
        uint64_t v96 = *v200;
        if ((*v200)(v86, 1, v16) == 1) {
          break;
        }
        v94(v199, (char *)v86, v16);
        sub_1AFD2CF70((uint64_t)v207, (uint64_t)v205);
        sub_1AFD2D15C((uint64_t)v205);
        id v97 = objc_msgSend(*(id *)sub_1AFD2D168((uint64_t)v205), sel_publishDate);
        if (v97)
        {
          unint64_t v98 = v97;
          uint64_t v99 = v201;
          sub_1AFFC98A8();

          uint64_t v86 = (uint64_t)v191;
          uint64_t v100 = v99;
          uint64_t v16 = v194;
          v94(v191, v100, v194);
          v95((char *)v86, 0, 1, v16);
          if (v96(v86, 1, v16) == 1) {
            goto LABEL_79;
          }
          unint64_t v101 = v190;
          v94(v190, (char *)v86, v16);
          uint64_t v102 = v199;
          char v103 = sub_1AFFC9858();
          uint64_t v104 = *v193;
          (*v193)(v101, v16);
          v104(v102, v16);
          sub_1AFD2D03C(v207, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2D0A0);
          sub_1AFD2D03C(v206, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2D0A0);
          if (v103)
          {
            uint64_t v88 = v195;
            if (!v197) {
              goto LABEL_174;
            }
            sub_1AFD2CF70((uint64_t)v85, (uint64_t)v204);
            long long v105 = *(v85 - 2);
            v85[6] = *(v85 - 3);
            v85[7] = v105;
            v85[8] = *(v85 - 1);
            long long v106 = *(v85 - 6);
            v85[2] = *(v85 - 7);
            v85[3] = v106;
            long long v107 = *(v85 - 4);
            v85[4] = *(v85 - 5);
            v85[5] = v107;
            long long v108 = *(v85 - 8);
            *uint64_t v85 = *(v85 - 9);
            v85[1] = v108;
            sub_1AFD2CF70((uint64_t)v204, (uint64_t)(v85 - 9));
            uint64_t v39 = v196;
            if (v88 == v198) {
              goto LABEL_68;
            }
            uint64_t v89 = v198 + 1;
            v85 -= 9;
            continue;
          }
          uint64_t v39 = v196;
LABEL_67:
          uint64_t v88 = v195;
LABEL_68:
          uint64_t v83 = v88 + 1;
          uint64_t v85 = v186 + 9;
          if (v83 != v181) {
            goto LABEL_69;
          }
          uint64_t v83 = v181;
          if (v181 < v184) {
            goto LABEL_164;
          }
LABEL_83:
          if (swift_isUniquelyReferenced_nonNull_native()) {
            uint64_t v40 = v188;
          }
          else {
            uint64_t v40 = sub_1AFEE5E44(0, *((void *)v188 + 2) + 1, 1, v188);
          }
          unint64_t v110 = *((void *)v40 + 2);
          unint64_t v109 = *((void *)v40 + 3);
          unint64_t v41 = v110 + 1;
          if (v110 >= v109 >> 1) {
            uint64_t v40 = sub_1AFEE5E44((char *)(v109 > 1), v110 + 1, 1, v40);
          }
          *((void *)v40 + 2) = v41;
          uint64_t v111 = v40 + 32;
          uint64_t v112 = &v40[16 * v110 + 32];
          *(void *)uint64_t v112 = v184;
          *((void *)v112 + 1) = v83;
          uint64_t v195 = v83;
          if (v110)
          {
            while (2)
            {
              unint64_t v113 = v41 - 1;
              if (v41 >= 4)
              {
                unsigned int v118 = &v111[16 * v41];
                uint64_t v119 = *((void *)v118 - 8);
                uint64_t v120 = *((void *)v118 - 7);
                BOOL v124 = __OFSUB__(v120, v119);
                uint64_t v121 = v120 - v119;
                if (v124) {
                  goto LABEL_153;
                }
                uint64_t v123 = *((void *)v118 - 6);
                uint64_t v122 = *((void *)v118 - 5);
                BOOL v124 = __OFSUB__(v122, v123);
                uint64_t v116 = v122 - v123;
                char v117 = v124;
                if (v124) {
                  goto LABEL_154;
                }
                unint64_t v125 = v41 - 2;
                uint64_t v126 = &v111[16 * v41 - 32];
                uint64_t v128 = *(void *)v126;
                uint64_t v127 = *((void *)v126 + 1);
                BOOL v124 = __OFSUB__(v127, v128);
                uint64_t v129 = v127 - v128;
                if (v124) {
                  goto LABEL_156;
                }
                BOOL v124 = __OFADD__(v116, v129);
                uint64_t v130 = v116 + v129;
                if (v124) {
                  goto LABEL_159;
                }
                if (v130 >= v121)
                {
                  v148 = &v111[16 * v113];
                  uint64_t v150 = *(void *)v148;
                  uint64_t v149 = *((void *)v148 + 1);
                  BOOL v124 = __OFSUB__(v149, v150);
                  uint64_t v151 = v149 - v150;
                  if (v124) {
                    goto LABEL_163;
                  }
                  BOOL v141 = v116 < v151;
                }
                else
                {
LABEL_101:
                  if (v117) {
                    goto LABEL_155;
                  }
                  unint64_t v125 = v41 - 2;
                  uint64_t v131 = &v111[16 * v41 - 32];
                  uint64_t v133 = *(void *)v131;
                  uint64_t v132 = *((void *)v131 + 1);
                  BOOL v134 = __OFSUB__(v132, v133);
                  uint64_t v135 = v132 - v133;
                  char v136 = v134;
                  if (v134) {
                    goto LABEL_158;
                  }
                  double v137 = &v111[16 * v113];
                  uint64_t v139 = *(void *)v137;
                  uint64_t v138 = *((void *)v137 + 1);
                  BOOL v124 = __OFSUB__(v138, v139);
                  uint64_t v140 = v138 - v139;
                  if (v124) {
                    goto LABEL_161;
                  }
                  if (__OFADD__(v135, v140)) {
                    goto LABEL_162;
                  }
                  if (v135 + v140 < v116) {
                    goto LABEL_113;
                  }
                  BOOL v141 = v116 < v140;
                }
                if (v141) {
                  unint64_t v113 = v125;
                }
              }
              else
              {
                if (v41 == 3)
                {
                  uint64_t v115 = *((void *)v40 + 4);
                  uint64_t v114 = *((void *)v40 + 5);
                  BOOL v124 = __OFSUB__(v114, v115);
                  uint64_t v116 = v114 - v115;
                  char v117 = v124;
                  goto LABEL_101;
                }
                uint64_t v142 = *((void *)v40 + 4);
                uint64_t v143 = *((void *)v40 + 5);
                BOOL v124 = __OFSUB__(v143, v142);
                uint64_t v135 = v143 - v142;
                char v136 = v124;
LABEL_113:
                if (v136) {
                  goto LABEL_157;
                }
                v144 = &v111[16 * v113];
                uint64_t v146 = *(void *)v144;
                uint64_t v145 = *((void *)v144 + 1);
                BOOL v124 = __OFSUB__(v145, v146);
                uint64_t v147 = v145 - v146;
                if (v124) {
                  goto LABEL_160;
                }
                if (v147 < v135) {
                  goto LABEL_15;
                }
              }
              unint64_t v152 = v113 - 1;
              if (v113 - 1 >= v41)
              {
                __break(1u);
LABEL_150:
                __break(1u);
LABEL_151:
                __break(1u);
LABEL_152:
                __break(1u);
LABEL_153:
                __break(1u);
LABEL_154:
                __break(1u);
LABEL_155:
                __break(1u);
LABEL_156:
                __break(1u);
LABEL_157:
                __break(1u);
LABEL_158:
                __break(1u);
LABEL_159:
                __break(1u);
LABEL_160:
                __break(1u);
LABEL_161:
                __break(1u);
LABEL_162:
                __break(1u);
LABEL_163:
                __break(1u);
LABEL_164:
                __break(1u);
LABEL_165:
                __break(1u);
LABEL_166:
                __break(1u);
LABEL_167:
                __break(1u);
LABEL_168:
                __break(1u);
LABEL_169:
                __break(1u);
LABEL_170:
                __break(1u);
LABEL_171:
                __break(1u);
LABEL_172:
                __break(1u);
                goto LABEL_173;
              }
              if (!v197) {
                goto LABEL_175;
              }
              v153 = v40;
              v154 = &v111[16 * v152];
              uint64_t v155 = *(void *)v154;
              unint64_t v156 = v113;
              uint64_t v157 = &v111[16 * v113];
              uint64_t v158 = *((void *)v157 + 1);
              uint64_t v159 = v189;
              sub_1AFE0E730((char *)(v197 + 144 * *(void *)v154), (char *)(v197 + 144 * *(void *)v157), v197 + 144 * v158, v187);
              if (v159)
              {
LABEL_132:
                swift_bridgeObjectRelease();
                *(void *)(v171 + 16) = 0;
                swift_bridgeObjectRelease();
                return;
              }
              if (v158 < v155) {
                goto LABEL_150;
              }
              if (v156 > *((void *)v153 + 2)) {
                goto LABEL_151;
              }
              *(void *)v154 = v155;
              *(void *)&v111[16 * v152 + 8] = v158;
              unint64_t v160 = *((void *)v153 + 2);
              if (v156 >= v160) {
                goto LABEL_152;
              }
              uint64_t v189 = 0;
              unint64_t v41 = v160 - 1;
              memmove(v157, v157 + 16, 16 * (v160 - 1 - v156));
              uint64_t v40 = v153;
              *((void *)v153 + 2) = v160 - 1;
              uint64_t v16 = v194;
              uint64_t v39 = v196;
              if (v160 <= 2) {
                goto LABEL_15;
              }
              continue;
            }
          }
          unint64_t v41 = 1;
LABEL_15:
          uint64_t v31 = v185;
          uint64_t v37 = v195;
          if (v195 >= v185)
          {
            uint64_t v36 = v171;
            goto LABEL_134;
          }
          goto LABEL_16;
        }
        uint64_t v86 = (uint64_t)v191;
        v95(v191, 1, 1, v16);
LABEL_79:
        (*v193)(v199, v16);
      }
      else
      {
        uint64_t v86 = (uint64_t)v192;
        (*v209)(v192, 1, 1, v16);
        uint64_t v87 = v39;
      }
      break;
    }
    sub_1AFE131B8(v86, (uint64_t (*)(void))sub_1AFD2C83C);
    sub_1AFD2D03C(v207, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2D0A0);
    sub_1AFD2D03C(v206, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2D0A0);
    uint64_t v39 = v87;
    goto LABEL_67;
  }
LABEL_173:
  __break(1u);
LABEL_174:
  __break(1u);
LABEL_175:
  __break(1u);
LABEL_176:
  __break(1u);
LABEL_177:
  __break(1u);
LABEL_178:
  sub_1AFFCB998();
  __break(1u);
}

uint64_t sub_1AFE0D344(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v24 = *a4;
    uint64_t v5 = (_OWORD *)(v24 + 144 * a3);
    uint64_t v14 = result + 1;
LABEL_6:
    uint64_t v6 = v14;
    uint64_t v16 = v5;
    while (1)
    {
      sub_1AFD2CF70((uint64_t)v5, (uint64_t)v19);
      sub_1AFD2CF70((uint64_t)(v5 - 9), (uint64_t)v20);
      sub_1AFD2CF70((uint64_t)v19, (uint64_t)v21);
      sub_1AFD2CF70((uint64_t)v20, (uint64_t)&v22);
      sub_1AFD2CF70((uint64_t)v19, (uint64_t)v23);
      if (sub_1AFD2D15C((uint64_t)v23) == 1)
      {
        sub_1AFD2D168((uint64_t)v23);
        sub_1AFD2D03C(v20, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
        sub_1AFD2D03C(v19, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
        uint64_t result = sub_1AFE13218((uint64_t)v21);
LABEL_5:
        ++v4;
        uint64_t v5 = v16 + 9;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_6;
      }
      uint64_t v7 = sub_1AFD2D168((uint64_t)v23);
      sub_1AFD2CF70((uint64_t)v20, (uint64_t)v18);
      int v8 = sub_1AFD2D15C((uint64_t)v18);
      uint64_t v9 = sub_1AFD2D168((uint64_t)v18);
      sub_1AFD2D03C(v20, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
      sub_1AFD2D03C(v19, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
      uint64_t result = sub_1AFE13218((uint64_t)v21);
      if (v8 == 1 || *(double *)(v9 + 88) >= *(double *)(v7 + 88)) {
        goto LABEL_5;
      }
      if (!v24) {
        break;
      }
      sub_1AFD2CF70((uint64_t)v5, (uint64_t)v17);
      long long v10 = *(v5 - 2);
      v5[6] = *(v5 - 3);
      v5[7] = v10;
      v5[8] = *(v5 - 1);
      long long v11 = *(v5 - 6);
      v5[2] = *(v5 - 7);
      v5[3] = v11;
      long long v12 = *(v5 - 4);
      void v5[4] = *(v5 - 5);
      v5[5] = v12;
      long long v13 = *(v5 - 8);
      *uint64_t v5 = *(v5 - 9);
      v5[1] = v13;
      uint64_t result = sub_1AFD2CF70((uint64_t)v17, (uint64_t)(v5 - 9));
      if (v4 == v6) {
        goto LABEL_5;
      }
      ++v6;
      v5 -= 9;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1AFE0D548(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v24 = *a4;
    uint64_t v5 = (_OWORD *)(v24 + 144 * a3);
    uint64_t v14 = result + 1;
LABEL_6:
    uint64_t v6 = v14;
    uint64_t v16 = v5;
    while (1)
    {
      sub_1AFD2CF70((uint64_t)v5, (uint64_t)v19);
      sub_1AFD2CF70((uint64_t)(v5 - 9), (uint64_t)v20);
      sub_1AFD2CF70((uint64_t)v19, (uint64_t)v21);
      sub_1AFD2CF70((uint64_t)v20, (uint64_t)&v22);
      sub_1AFD2CF70((uint64_t)v19, (uint64_t)v23);
      if (sub_1AFD2D15C((uint64_t)v23) == 1)
      {
        sub_1AFD2D168((uint64_t)v23);
        sub_1AFD2D03C(v20, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
        sub_1AFD2D03C(v19, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
        uint64_t result = sub_1AFE13218((uint64_t)v21);
LABEL_5:
        ++v4;
        uint64_t v5 = v16 + 9;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_6;
      }
      uint64_t v7 = sub_1AFD2D168((uint64_t)v23);
      sub_1AFD2CF70((uint64_t)v20, (uint64_t)v18);
      int v8 = sub_1AFD2D15C((uint64_t)v18);
      uint64_t v9 = sub_1AFD2D168((uint64_t)v18);
      sub_1AFD2D03C(v20, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
      sub_1AFD2D03C(v19, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
      uint64_t result = sub_1AFE13218((uint64_t)v21);
      if (v8 == 1 || *(double *)(v9 + 72) >= *(double *)(v7 + 72)) {
        goto LABEL_5;
      }
      if (!v24) {
        break;
      }
      sub_1AFD2CF70((uint64_t)v5, (uint64_t)v17);
      long long v10 = *(v5 - 2);
      v5[6] = *(v5 - 3);
      v5[7] = v10;
      v5[8] = *(v5 - 1);
      long long v11 = *(v5 - 6);
      v5[2] = *(v5 - 7);
      v5[3] = v11;
      long long v12 = *(v5 - 4);
      void v5[4] = *(v5 - 5);
      v5[5] = v12;
      long long v13 = *(v5 - 8);
      *uint64_t v5 = *(v5 - 9);
      v5[1] = v13;
      uint64_t result = sub_1AFD2CF70((uint64_t)v17, (uint64_t)(v5 - 9));
      if (v4 == v6) {
        goto LABEL_5;
      }
      ++v6;
      v5 -= 9;
    }
    __break(1u);
  }
  return result;
}

void sub_1AFE0D74C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  sub_1AFD2C83C();
  MEMORY[0x1F4188790](v8 - 8);
  long long v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  long long v13 = (char *)&v49 - v12;
  uint64_t v14 = sub_1AFFC98F8();
  MEMORY[0x1F4188790](v14);
  uint64_t v54 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  BOOL v64 = (char *)&v49 - v17;
  MEMORY[0x1F4188790](v18);
  id v63 = (char *)&v49 - v20;
  uint64_t v58 = a3;
  uint64_t v51 = a2;
  if (a3 != a2)
  {
    uint64_t v21 = *a4;
    uint64_t v22 = (void (**)(char *, char *, uint64_t))(v19 + 32);
    uint64_t v70 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56);
    uint64_t v62 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
    uint64_t v56 = (void (**)(char *, uint64_t))(v19 + 8);
    char v57 = v13;
    uint64_t v53 = v21;
    uint64_t v23 = (_OWORD *)(v21 + 144 * v58);
    uint64_t v50 = a1 + 1;
    uint64_t v55 = v10;
    uint64_t v60 = (void (**)(char *, char *, uint64_t))(v19 + 32);
LABEL_8:
    uint64_t v26 = v50;
    id v52 = v23;
    for (uint64_t i = v23; ; i -= 9)
    {
      sub_1AFD2CF70((uint64_t)i, (uint64_t)v67);
      sub_1AFD2CF70((uint64_t)(i - 9), (uint64_t)v68);
      sub_1AFD2CF70((uint64_t)v67, (uint64_t)v69);
      sub_1AFD2D15C((uint64_t)v69);
      uint64_t v28 = *(void **)sub_1AFD2D168((uint64_t)v69);
      sub_1AFD2D03C(v68, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
      sub_1AFD2D03C(v67, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
      id v29 = objc_msgSend(v28, sel_publishDate);
      if (!v29) {
        break;
      }
      uint64_t v30 = v29;
      uint64_t v61 = v26;
      uint64_t v31 = v64;
      sub_1AFFC98A8();

      uint64_t v32 = *v22;
      uint64_t v24 = (uint64_t)v57;
      (*v22)(v57, v31, v14);
      uint64_t v33 = *v70;
      (*v70)((char *)v24, 0, 1, v14);
      uint64_t v34 = *v62;
      if ((*v62)(v24, 1, v14) == 1) {
        goto LABEL_5;
      }
      v32(v63, (char *)v24, v14);
      sub_1AFD2CF70((uint64_t)v68, (uint64_t)v66);
      sub_1AFD2D15C((uint64_t)v66);
      id v35 = objc_msgSend(*(id *)sub_1AFD2D168((uint64_t)v66), sel_publishDate);
      if (!v35)
      {
        long long v48 = v55;
        v33(v55, 1, 1, v14);
        uint64_t v40 = (uint64_t)v48;
LABEL_18:
        (*v56)(v63, v14);
        uint64_t v25 = v40;
        goto LABEL_6;
      }
      uint64_t v36 = v35;
      uint64_t v37 = v64;
      sub_1AFFC98A8();

      uint64_t v38 = v55;
      uint64_t v39 = v37;
      uint64_t v22 = v60;
      v32(v55, v39, v14);
      v33(v38, 0, 1, v14);
      uint64_t v40 = (uint64_t)v38;
      if (v34((uint64_t)v38, 1, v14) == 1) {
        goto LABEL_18;
      }
      unint64_t v41 = v54;
      v32(v54, v38, v14);
      uint64_t v42 = v63;
      int v59 = sub_1AFFC9858();
      uint64_t v43 = *v56;
      (*v56)(v41, v14);
      v43(v42, v14);
      sub_1AFD2D03C(v68, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2D0A0);
      sub_1AFD2D03C(v67, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2D0A0);
      if ((v59 & 1) == 0)
      {
        uint64_t v22 = v60;
LABEL_7:
        uint64_t v23 = v52 + 9;
        if (++v58 == v51) {
          return;
        }
        goto LABEL_8;
      }
      if (!v53)
      {
        __break(1u);
        return;
      }
      sub_1AFD2CF70((uint64_t)i, (uint64_t)v65);
      long long v44 = *(i - 2);
      i[6] = *(i - 3);
      i[7] = v44;
      i[8] = *(i - 1);
      long long v45 = *(i - 6);
      i[2] = *(i - 7);
      i[3] = v45;
      long long v46 = *(i - 4);
      i[4] = *(i - 5);
      i[5] = v46;
      long long v47 = *(i - 8);
      *uint64_t i = *(i - 9);
      i[1] = v47;
      sub_1AFD2CF70((uint64_t)v65, (uint64_t)(i - 9));
      uint64_t v22 = v60;
      if (v58 == v61) {
        goto LABEL_7;
      }
      uint64_t v26 = v61 + 1;
    }
    uint64_t v24 = (uint64_t)v57;
    (*v70)(v57, 1, 1, v14);
LABEL_5:
    uint64_t v25 = v24;
LABEL_6:
    sub_1AFE131B8(v25, (uint64_t (*)(void))sub_1AFD2C83C);
    sub_1AFD2D03C(v68, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2D0A0);
    sub_1AFD2D03C(v67, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2D0A0);
    goto LABEL_7;
  }
}

uint64_t sub_1AFE0DD08(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  unint64_t v5 = a3;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = (a2 - __src) / 144;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 144;
  uint64_t v38 = __src;
  uint64_t v37 = __dst;
  if (v9 >= v11)
  {
    if (v10 < -143) {
      goto LABEL_52;
    }
    if (__dst != a2 || &a2[144 * v11] <= __dst) {
      memmove(__dst, a2, 144 * v11);
    }
    uint64_t v18 = &v4[144 * v11];
    uint64_t v36 = v18;
    uint64_t v38 = v6;
    if (v7 >= v6 || v10 < 144) {
      goto LABEL_51;
    }
    uint64_t v19 = (char *)(v5 - 144);
    uint64_t v26 = v7;
    id v29 = v4;
    while (1)
    {
      uint64_t v20 = v19 + 144;
      sub_1AFD2CF70((uint64_t)(v18 - 144), (uint64_t)v31);
      uint64_t v21 = v6 - 144;
      sub_1AFD2CF70((uint64_t)(v6 - 144), (uint64_t)v32);
      sub_1AFD2CF70((uint64_t)v31, (uint64_t)v33);
      sub_1AFD2CF70((uint64_t)v32, (uint64_t)v34);
      sub_1AFD2CF70((uint64_t)v31, (uint64_t)v35);
      if (sub_1AFD2D15C((uint64_t)v35) == 1)
      {
        sub_1AFD2D168((uint64_t)v35);
        sub_1AFD2D03C(v32, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
        sub_1AFD2D03C(v31, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
        sub_1AFE13218((uint64_t)v33);
      }
      else
      {
        uint64_t v28 = sub_1AFD2D168((uint64_t)v35);
        sub_1AFD2CF70((uint64_t)v32, (uint64_t)v30);
        int v22 = sub_1AFD2D15C((uint64_t)v30);
        uint64_t v23 = sub_1AFD2D168((uint64_t)v30);
        sub_1AFD2D03C(v32, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
        sub_1AFD2D03C(v31, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
        sub_1AFE13218((uint64_t)v33);
        if (v22 != 1 && *(double *)(v23 + 88) < *(double *)(v28 + 88))
        {
          uint64_t v7 = v26;
          if (v20 != v6 || v19 >= v6) {
            memmove(v19, v6 - 144, 0x90uLL);
          }
          uint64_t v38 = v6 - 144;
          uint64_t v24 = v29;
          goto LABEL_46;
        }
        uint64_t v7 = v26;
      }
      uint64_t v36 = v18 - 144;
      if (v20 < v18 || v19 >= v18 || v20 != v18) {
        memmove(v19, v18 - 144, 0x90uLL);
      }
      uint64_t v21 = v6;
      v18 -= 144;
      uint64_t v24 = v29;
LABEL_46:
      if (v18 > v24)
      {
        v19 -= 144;
        uint64_t v6 = v21;
        if (v21 > v7) {
          continue;
        }
      }
      goto LABEL_51;
    }
  }
  if (v8 < -143)
  {
LABEL_52:
    uint64_t result = sub_1AFFCBA28();
    __break(1u);
    return result;
  }
  if (__dst != __src || &__src[144 * v9] <= __dst) {
    memmove(__dst, __src, 144 * v9);
  }
  uint64_t v12 = &v4[144 * v9];
  uint64_t v36 = v12;
  if ((unint64_t)v6 >= v5 || v8 < 144) {
    goto LABEL_51;
  }
  unint64_t v27 = v5;
  while (1)
  {
    sub_1AFD2CF70((uint64_t)v6, (uint64_t)v31);
    sub_1AFD2CF70((uint64_t)v4, (uint64_t)v32);
    sub_1AFD2CF70((uint64_t)v31, (uint64_t)v33);
    sub_1AFD2CF70((uint64_t)v32, (uint64_t)v34);
    sub_1AFD2CF70((uint64_t)v31, (uint64_t)v35);
    if (sub_1AFD2D15C((uint64_t)v35) == 1)
    {
      sub_1AFD2D168((uint64_t)v35);
      sub_1AFD2D03C(v32, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
      sub_1AFD2D03C(v31, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
      sub_1AFE13218((uint64_t)v33);
      goto LABEL_18;
    }
    long long v13 = v4;
    uint64_t v14 = sub_1AFD2D168((uint64_t)v35);
    sub_1AFD2CF70((uint64_t)v32, (uint64_t)v30);
    int v15 = sub_1AFD2D15C((uint64_t)v30);
    uint64_t v16 = sub_1AFD2D168((uint64_t)v30);
    sub_1AFD2D03C(v32, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
    sub_1AFD2D03C(v31, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
    sub_1AFE13218((uint64_t)v33);
    if (v15 == 1 || *(double *)(v16 + 88) >= *(double *)(v14 + 88))
    {
      uint64_t v4 = v13;
      unint64_t v5 = v27;
LABEL_18:
      if (v7 != v4 || v7 >= v4 + 144) {
        memmove(v7, v4, 0x90uLL);
      }
      uint64_t v37 = v4 + 144;
      v4 += 144;
      goto LABEL_22;
    }
    uint64_t v4 = v13;
    if (v7 != v6 || v7 >= v6 + 144) {
      memmove(v7, v6, 0x90uLL);
    }
    v6 += 144;
    unint64_t v5 = v27;
LABEL_22:
    uint64_t v17 = v7 + 144;
    if (v4 >= v12) {
      goto LABEL_50;
    }
    if ((unint64_t)v6 >= v5) {
      break;
    }
    v7 += 144;
  }
  uint64_t v17 = v7 + 144;
LABEL_50:
  uint64_t v38 = v17;
LABEL_51:
  sub_1AFEE60F4((void **)&v38, &v37, &v36);
  return 1;
}

uint64_t sub_1AFE0E21C(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  unint64_t v5 = a3;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = (a2 - __src) / 144;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 144;
  uint64_t v38 = __src;
  uint64_t v37 = __dst;
  if (v9 >= v11)
  {
    if (v10 < -143) {
      goto LABEL_52;
    }
    if (__dst != a2 || &a2[144 * v11] <= __dst) {
      memmove(__dst, a2, 144 * v11);
    }
    uint64_t v18 = &v4[144 * v11];
    uint64_t v36 = v18;
    uint64_t v38 = v6;
    if (v7 >= v6 || v10 < 144) {
      goto LABEL_51;
    }
    uint64_t v19 = (char *)(v5 - 144);
    uint64_t v26 = v7;
    id v29 = v4;
    while (1)
    {
      uint64_t v20 = v19 + 144;
      sub_1AFD2CF70((uint64_t)(v18 - 144), (uint64_t)v31);
      uint64_t v21 = v6 - 144;
      sub_1AFD2CF70((uint64_t)(v6 - 144), (uint64_t)v32);
      sub_1AFD2CF70((uint64_t)v31, (uint64_t)v33);
      sub_1AFD2CF70((uint64_t)v32, (uint64_t)v34);
      sub_1AFD2CF70((uint64_t)v31, (uint64_t)v35);
      if (sub_1AFD2D15C((uint64_t)v35) == 1)
      {
        sub_1AFD2D168((uint64_t)v35);
        sub_1AFD2D03C(v32, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
        sub_1AFD2D03C(v31, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
        sub_1AFE13218((uint64_t)v33);
      }
      else
      {
        uint64_t v28 = sub_1AFD2D168((uint64_t)v35);
        sub_1AFD2CF70((uint64_t)v32, (uint64_t)v30);
        int v22 = sub_1AFD2D15C((uint64_t)v30);
        uint64_t v23 = sub_1AFD2D168((uint64_t)v30);
        sub_1AFD2D03C(v32, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
        sub_1AFD2D03C(v31, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
        sub_1AFE13218((uint64_t)v33);
        if (v22 != 1 && *(double *)(v23 + 72) < *(double *)(v28 + 72))
        {
          uint64_t v7 = v26;
          if (v20 != v6 || v19 >= v6) {
            memmove(v19, v6 - 144, 0x90uLL);
          }
          uint64_t v38 = v6 - 144;
          uint64_t v24 = v29;
          goto LABEL_46;
        }
        uint64_t v7 = v26;
      }
      uint64_t v36 = v18 - 144;
      if (v20 < v18 || v19 >= v18 || v20 != v18) {
        memmove(v19, v18 - 144, 0x90uLL);
      }
      uint64_t v21 = v6;
      v18 -= 144;
      uint64_t v24 = v29;
LABEL_46:
      if (v18 > v24)
      {
        v19 -= 144;
        uint64_t v6 = v21;
        if (v21 > v7) {
          continue;
        }
      }
      goto LABEL_51;
    }
  }
  if (v8 < -143)
  {
LABEL_52:
    uint64_t result = sub_1AFFCBA28();
    __break(1u);
    return result;
  }
  if (__dst != __src || &__src[144 * v9] <= __dst) {
    memmove(__dst, __src, 144 * v9);
  }
  uint64_t v12 = &v4[144 * v9];
  uint64_t v36 = v12;
  if ((unint64_t)v6 >= v5 || v8 < 144) {
    goto LABEL_51;
  }
  unint64_t v27 = v5;
  while (1)
  {
    sub_1AFD2CF70((uint64_t)v6, (uint64_t)v31);
    sub_1AFD2CF70((uint64_t)v4, (uint64_t)v32);
    sub_1AFD2CF70((uint64_t)v31, (uint64_t)v33);
    sub_1AFD2CF70((uint64_t)v32, (uint64_t)v34);
    sub_1AFD2CF70((uint64_t)v31, (uint64_t)v35);
    if (sub_1AFD2D15C((uint64_t)v35) == 1)
    {
      sub_1AFD2D168((uint64_t)v35);
      sub_1AFD2D03C(v32, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
      sub_1AFD2D03C(v31, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
      sub_1AFE13218((uint64_t)v33);
      goto LABEL_18;
    }
    long long v13 = v4;
    uint64_t v14 = sub_1AFD2D168((uint64_t)v35);
    sub_1AFD2CF70((uint64_t)v32, (uint64_t)v30);
    int v15 = sub_1AFD2D15C((uint64_t)v30);
    uint64_t v16 = sub_1AFD2D168((uint64_t)v30);
    sub_1AFD2D03C(v32, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
    sub_1AFD2D03C(v31, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
    sub_1AFE13218((uint64_t)v33);
    if (v15 == 1 || *(double *)(v16 + 72) >= *(double *)(v14 + 72))
    {
      uint64_t v4 = v13;
      unint64_t v5 = v27;
LABEL_18:
      if (v7 != v4 || v7 >= v4 + 144) {
        memmove(v7, v4, 0x90uLL);
      }
      uint64_t v37 = v4 + 144;
      v4 += 144;
      goto LABEL_22;
    }
    uint64_t v4 = v13;
    if (v7 != v6 || v7 >= v6 + 144) {
      memmove(v7, v6, 0x90uLL);
    }
    v6 += 144;
    unint64_t v5 = v27;
LABEL_22:
    uint64_t v17 = v7 + 144;
    if (v4 >= v12) {
      goto LABEL_50;
    }
    if ((unint64_t)v6 >= v5) {
      break;
    }
    v7 += 144;
  }
  uint64_t v17 = v7 + 144;
LABEL_50:
  uint64_t v38 = v17;
LABEL_51:
  sub_1AFEE60F4((void **)&v38, &v37, &v36);
  return 1;
}

uint64_t sub_1AFE0E730(char *a1, char *a2, unint64_t a3, char *a4)
{
  sub_1AFD2C83C();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v85 = (char *)&v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v86 = (char *)&v82 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v89 = (char *)&v82 - v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v82 - v15;
  uint64_t v97 = sub_1AFFC98F8();
  MEMORY[0x1F4188790](v97);
  uint64_t v83 = (char *)&v82 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  id v91 = (char *)&v82 - v19;
  MEMORY[0x1F4188790](v20);
  uint64_t v84 = (char *)&v82 - v21;
  MEMORY[0x1F4188790](v22);
  unsigned __int8 v94 = (char *)&v82 - v23;
  MEMORY[0x1F4188790](v24);
  uint64_t v90 = (char *)&v82 - v26;
  uint64_t v27 = a2 - a1;
  uint64_t v28 = (a2 - a1) / 144;
  id v29 = a2;
  unint64_t v88 = a3;
  uint64_t v30 = a3 - (void)a2;
  uint64_t v31 = v30 / 144;
  uint64_t v93 = a1;
  long long v106 = a1;
  unint64_t v98 = a4;
  long long v105 = a4;
  if (v28 >= v30 / 144)
  {
    if (v30 < -143) {
      goto LABEL_58;
    }
    uint64_t v55 = v98;
    uint64_t v56 = v29;
    if (v98 != v29 || &v29[144 * v31] <= v98)
    {
      char v57 = v29;
      uint64_t v58 = v25;
      memmove(v98, v57, 144 * v31);
      uint64_t v25 = v58;
    }
    int v59 = &v55[144 * v31];
    uint64_t v104 = v59;
    long long v106 = v56;
    uint64_t v60 = (uint64_t)v86;
    if (v30 < 144 || v93 >= v56)
    {
LABEL_57:
      sub_1AFEE60F4((void **)&v106, (const void **)&v105, &v104);
      return 1;
    }
    uint64_t v61 = (void (**)(uint64_t, char *, uint64_t))(v25 + 32);
    unint64_t v92 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 56);
    uint64_t v89 = (char *)(v25 + 48);
    uint64_t v84 = (char *)(v25 + 8);
    uint64_t v62 = (char *)(v88 - 144);
    uint64_t v87 = (char *)(v25 + 32);
    while (1)
    {
      uint64_t v95 = v62 + 144;
      uint64_t v96 = v59;
      v59 -= 144;
      sub_1AFD2CF70((uint64_t)v59, (uint64_t)v101);
      uint64_t v99 = v56;
      id v63 = v56 - 144;
      sub_1AFD2CF70((uint64_t)(v56 - 144), (uint64_t)v102);
      sub_1AFD2CF70((uint64_t)v101, (uint64_t)v103);
      sub_1AFD2D15C((uint64_t)v103);
      BOOL v64 = *(void **)sub_1AFD2D168((uint64_t)v103);
      sub_1AFD2D03C(v102, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
      sub_1AFD2D03C(v101, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
      id v65 = objc_msgSend(v64, sel_publishDate);
      if (!v65) {
        break;
      }
      uint64_t v66 = v65;
      uint64_t v67 = v94;
      sub_1AFFC98A8();

      uint64_t v68 = *v61;
      uint64_t v69 = v97;
      (*v61)(v60, v67, v97);
      uint64_t v90 = (char *)*v92;
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v90)(v60, 0, 1, v69);
      uint64_t v70 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))v89;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v89)(v60, 1, v69) == 1) {
        goto LABEL_47;
      }
      v68((uint64_t)v91, (char *)v60, v69);
      sub_1AFD2CF70((uint64_t)v102, (uint64_t)v100);
      sub_1AFD2D15C((uint64_t)v100);
      id v71 = objc_msgSend(*(id *)sub_1AFD2D168((uint64_t)v100), sel_publishDate);
      uint64_t v72 = v69;
      if (!v71)
      {
        uint64_t v75 = (uint64_t)v85;
        ((void (*)(char *, uint64_t, uint64_t, uint64_t))v90)(v85, 1, 1, v72);
LABEL_49:
        (*(void (**)(char *, uint64_t))v84)(v91, v72);
        sub_1AFE131B8(v75, (uint64_t (*)(void))sub_1AFD2C83C);
        sub_1AFD2D03C(v102, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2D0A0);
        sub_1AFD2D03C(v101, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2D0A0);
        uint64_t v79 = v93;
LABEL_50:
        uint64_t v80 = v98;
        id v63 = v99;
        uint64_t v61 = (void (**)(uint64_t, char *, uint64_t))v87;
LABEL_51:
        uint64_t v104 = v59;
        if (v95 < v96 || v62 >= v96 || v95 != v96) {
          memmove(v62, v59, 0x90uLL);
        }
        goto LABEL_55;
      }
      uint64_t v73 = v71;
      BOOL v74 = v94;
      sub_1AFFC98A8();

      uint64_t v75 = (uint64_t)v85;
      char v76 = v74;
      uint64_t v60 = (uint64_t)v86;
      v68((uint64_t)v85, v76, v72);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v90)(v75, 0, 1, v72);
      if (v70(v75, 1, v72) == 1) {
        goto LABEL_49;
      }
      uint64_t v77 = v83;
      v68((uint64_t)v83, (char *)v75, v72);
      LODWORD(v90) = sub_1AFFC9858();
      uint64_t v78 = *(void (**)(char *, uint64_t))v84;
      (*(void (**)(char *, uint64_t))v84)(v77, v72);
      v78(v91, v72);
      sub_1AFD2D03C(v102, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2D0A0);
      sub_1AFD2D03C(v101, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2D0A0);
      uint64_t v79 = v93;
      if ((v90 & 1) == 0) {
        goto LABEL_50;
      }
      uint64_t v80 = v98;
      if (v95 != v99 || v62 >= v99) {
        memmove(v62, v63, 0x90uLL);
      }
      long long v106 = v63;
      uint64_t v61 = (void (**)(uint64_t, char *, uint64_t))v87;
      int v59 = v96;
LABEL_55:
      if (v59 > v80)
      {
        v62 -= 144;
        uint64_t v56 = v63;
        if (v63 > v79) {
          continue;
        }
      }
      goto LABEL_57;
    }
    (*v92)(v60, 1, 1, v97);
LABEL_47:
    sub_1AFE131B8(v60, (uint64_t (*)(void))sub_1AFD2C83C);
    sub_1AFD2D03C(v102, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2D0A0);
    sub_1AFD2D03C(v101, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2D0A0);
    uint64_t v79 = v93;
    uint64_t v80 = v98;
    id v63 = v99;
    goto LABEL_51;
  }
  if (v27 >= -143)
  {
    uint64_t v32 = v93;
    uint64_t v33 = v98;
    unint64_t v34 = v88;
    if (v98 != v93 || &v93[144 * v28] <= v98)
    {
      uint64_t v35 = v25;
      memmove(v98, v93, 144 * v28);
      uint64_t v25 = v35;
    }
    uint64_t v36 = &v33[144 * v28];
    uint64_t v104 = v36;
    if (v27 >= 144 && (unint64_t)v29 < v34)
    {
      uint64_t v95 = (char *)(v25 + 32);
      uint64_t v96 = (char *)(v25 + 56);
      id v91 = (char *)(v25 + 8);
      unint64_t v92 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 48);
      uint64_t v86 = &v33[144 * v28];
      uint64_t v87 = v16;
      while (1)
      {
        uint64_t v99 = v29;
        sub_1AFD2CF70((uint64_t)v29, (uint64_t)v101);
        unint64_t v98 = v33;
        sub_1AFD2CF70((uint64_t)v33, (uint64_t)v102);
        sub_1AFD2CF70((uint64_t)v101, (uint64_t)v103);
        sub_1AFD2D15C((uint64_t)v103);
        uint64_t v37 = *(void **)sub_1AFD2D168((uint64_t)v103);
        sub_1AFD2D03C(v102, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
        sub_1AFD2D03C(v101, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
        id v38 = objc_msgSend(v37, sel_publishDate);
        if (!v38) {
          break;
        }
        uint64_t v39 = v38;
        uint64_t v40 = v94;
        sub_1AFFC98A8();

        unint64_t v41 = *(void (**)(char *, char *, uint64_t))v95;
        uint64_t v42 = v97;
        (*(void (**)(char *, char *, uint64_t))v95)(v16, v40, v97);
        uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v96;
        (*(void (**)(char *, void, uint64_t, uint64_t))v96)(v16, 0, 1, v42);
        long long v44 = *v92;
        if (((unsigned int (*)(char *, uint64_t, uint64_t))*v92)(v16, 1, v42) == 1) {
          goto LABEL_19;
        }
        v41(v90, v16, v42);
        sub_1AFD2CF70((uint64_t)v102, (uint64_t)v100);
        sub_1AFD2D15C((uint64_t)v100);
        id v45 = objc_msgSend(*(id *)sub_1AFD2D168((uint64_t)v100), sel_publishDate);
        uint64_t v46 = v42;
        if (!v45)
        {
          uint64_t v49 = (uint64_t)v89;
          v43(v89, 1, 1, v46);
LABEL_21:
          (*(void (**)(char *, uint64_t))v91)(v90, v46);
          sub_1AFE131B8(v49, (uint64_t (*)(void))sub_1AFD2C83C);
          sub_1AFD2D03C(v102, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2D0A0);
          sub_1AFD2D03C(v101, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2D0A0);
          uint64_t v33 = v98;
          id v29 = v99;
          uint64_t v36 = v86;
          uint64_t v16 = v87;
LABEL_22:
          if (v32 != v33 || v32 >= v33 + 144) {
            memmove(v32, v33, 0x90uLL);
          }
          long long v105 = v33 + 144;
          v33 += 144;
          goto LABEL_26;
        }
        long long v47 = v45;
        long long v48 = v94;
        sub_1AFFC98A8();

        uint64_t v49 = (uint64_t)v89;
        uint64_t v50 = v48;
        unint64_t v34 = v88;
        v41(v89, v50, v46);
        v43((char *)v49, 0, 1, v46);
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v44)(v49, 1, v46) == 1) {
          goto LABEL_21;
        }
        uint64_t v51 = v84;
        v41(v84, (char *)v49, v46);
        id v52 = v90;
        char v53 = sub_1AFFC9858();
        uint64_t v54 = *(void (**)(char *, uint64_t))v91;
        (*(void (**)(char *, uint64_t))v91)(v51, v46);
        v54(v52, v46);
        sub_1AFD2D03C(v102, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2D0A0);
        sub_1AFD2D03C(v101, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2D0A0);
        uint64_t v33 = v98;
        id v29 = v99;
        uint64_t v16 = v87;
        if ((v53 & 1) == 0)
        {
          uint64_t v36 = v86;
          goto LABEL_22;
        }
        uint64_t v36 = v86;
        if (v32 != v99 || v32 >= v99 + 144) {
          memmove(v32, v99, 0x90uLL);
        }
        v29 += 144;
LABEL_26:
        v32 += 144;
        long long v106 = v32;
        if (v33 >= v36 || (unint64_t)v29 >= v34) {
          goto LABEL_57;
        }
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))v96)(v16, 1, 1, v97);
LABEL_19:
      sub_1AFE131B8((uint64_t)v16, (uint64_t (*)(void))sub_1AFD2C83C);
      sub_1AFD2D03C(v102, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2D0A0);
      sub_1AFD2D03C(v101, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2D0A0);
      uint64_t v33 = v98;
      id v29 = v99;
      goto LABEL_22;
    }
    goto LABEL_57;
  }
LABEL_58:
  uint64_t result = sub_1AFFCBA28();
  __break(1u);
  return result;
}

uint64_t sub_1AFE0F318(unint64_t a1, uint64_t a2)
{
  unint64_t v3 = a1;
  if (a1 >> 62)
  {
    sub_1AFFC8E38();
    uint64_t v4 = sub_1AFFCB9C8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v5 = MEMORY[0x1E4FBC860];
  if (!v4) {
    return v5;
  }
  uint64_t v45 = MEMORY[0x1E4FBC860];
  sub_1AFD9D8F0(0, v4 & ~(v4 >> 63), 0);
  if (v4 < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v24 = v3;
    uint64_t v6 = 0;
    unint64_t v25 = v3 & 0xC000000000000001;
    uint64_t v5 = v45;
    while (1)
    {
      if (v25)
      {
        uint64_t v7 = MEMORY[0x1B3E8DC70](v6, v3);
      }
      else
      {
        uint64_t v7 = *(void *)(v3 + 8 * v6 + 32);
        swift_unknownObjectRetain();
      }
      id v8 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
      uint64_t v9 = sub_1AFFCAE98();
      uint64_t v11 = v10;

      if (!*(void *)(a2 + 16)) {
        break;
      }
      unint64_t v12 = sub_1AFD79CC8(v9, v11);
      if ((v13 & 1) == 0) {
        break;
      }
      uint64_t v14 = *(void *)(a2 + 56) + 136 * v12;
      long long v36 = *(_OWORD *)v14;
      long long v15 = *(_OWORD *)(v14 + 64);
      long long v17 = *(_OWORD *)(v14 + 16);
      long long v16 = *(_OWORD *)(v14 + 32);
      long long v39 = *(_OWORD *)(v14 + 48);
      long long v40 = v15;
      long long v37 = v17;
      long long v38 = v16;
      long long v19 = *(_OWORD *)(v14 + 96);
      long long v18 = *(_OWORD *)(v14 + 112);
      long long v20 = *(_OWORD *)(v14 + 80);
      uint64_t v44 = *(void *)(v14 + 128);
      long long v42 = v19;
      long long v43 = v18;
      long long v41 = v20;
      sub_1AFD2D470((uint64_t)&v36);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v45 = v5;
      unint64_t v22 = *(void *)(v5 + 16);
      unint64_t v21 = *(void *)(v5 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_1AFD9D8F0(v21 > 1, v22 + 1, 1);
        uint64_t v5 = v45;
      }
      ++v6;
      long long v33 = v42;
      long long v34 = v43;
      uint64_t v35 = v44;
      long long v29 = v38;
      long long v30 = v39;
      long long v31 = v40;
      long long v32 = v41;
      long long v27 = v36;
      long long v28 = v37;
      uint64_t v26 = v7;
      sub_1AFD2D460((uint64_t)&v26);
      *(void *)(v5 + 16) = v22 + 1;
      sub_1AFD2CF70((uint64_t)&v26, v5 + 144 * v22 + 32);
      unint64_t v3 = v24;
      if (v4 == v6) {
        return v5;
      }
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

BOOL sub_1AFE0F568(uint64_t a1, uint64_t a2)
{
  sub_1AFE0F8F8(a1, (uint64_t)v20);
  sub_1AFE0F8F8(a2, (uint64_t)&v21);
  switch(v20[57])
  {
    case 1:
      sub_1AFE0F8F8((uint64_t)v20, (uint64_t)v12);
      unint64_t v3 = (void *)v12[0];
      if (v23 != 1) {
        goto LABEL_21;
      }
      goto LABEL_5;
    case 2:
      sub_1AFE0F8F8((uint64_t)v20, (uint64_t)&v18);
      if (v23 != 2)
      {
        sub_1AFE134A4((uint64_t)v19);
        goto LABEL_24;
      }
      uint64_t v5 = v18;
      uint64_t v6 = v21;
      sub_1AFE130E4((uint64_t)v19, (uint64_t)v17, &qword_1E9AFB0C8, (uint64_t)&type metadata for HeadlineCondition);
      sub_1AFE130E4((uint64_t)v22, (uint64_t)v16, &qword_1E9AFB0C8, (uint64_t)&type metadata for HeadlineCondition);
      if (v5 == v6)
      {
        sub_1AFE1341C((uint64_t)v17, (uint64_t)v12);
        sub_1AFE1341C((uint64_t)v16, (uint64_t)v14);
        if (v13 == 255)
        {
          sub_1AFE134A4((uint64_t)v16);
          sub_1AFE134A4((uint64_t)v17);
          if (v15 == 255)
          {
            sub_1AFE134A4((uint64_t)v12);
            goto LABEL_30;
          }
        }
        else
        {
          sub_1AFE1341C((uint64_t)v12, (uint64_t)v11);
          if (v15 != 255)
          {
            sub_1AFE133B8((uint64_t)v14, (uint64_t)v10);
            BOOL v7 = sub_1AFF71AA4((uint64_t)v11, (uint64_t)v10);
            sub_1AFD2D108((uint64_t)v10);
            sub_1AFE134A4((uint64_t)v16);
            sub_1AFE134A4((uint64_t)v17);
            sub_1AFD2D108((uint64_t)v11);
            sub_1AFE134A4((uint64_t)v12);
            if (!v7) {
              goto LABEL_33;
            }
LABEL_30:
            sub_1AFE0F930((uint64_t)v20);
            return 1;
          }
          sub_1AFE134A4((uint64_t)v16);
          sub_1AFE134A4((uint64_t)v17);
          sub_1AFD2D108((uint64_t)v11);
        }
        sub_1AFE131B8((uint64_t)v12, (uint64_t (*)(void))sub_1AFE135F8);
      }
      else
      {
        sub_1AFE134A4((uint64_t)v16);
        sub_1AFE134A4((uint64_t)v17);
      }
LABEL_33:
      sub_1AFE0F930((uint64_t)v20);
      return 0;
    case 3:
      sub_1AFE0F8F8((uint64_t)v20, (uint64_t)v12);
      if (v23 != 3) {
        goto LABEL_24;
      }
      if ((void *)v12[0] != v21) {
        goto LABEL_33;
      }
      BOOL v8 = *(double *)&v12[1] == v22[0];
      goto LABEL_20;
    case 4:
      sub_1AFE0F8F8((uint64_t)v20, (uint64_t)v12);
      if (v23 == 4)
      {
        sub_1AFE133B8((uint64_t)&v21, (uint64_t)&v18);
        BOOL v8 = sub_1AFF71AA4((uint64_t)v12, (uint64_t)&v18);
        sub_1AFD2D108((uint64_t)&v18);
        sub_1AFD2D108((uint64_t)v12);
        goto LABEL_20;
      }
      sub_1AFD2D108((uint64_t)v12);
      goto LABEL_24;
    case 5:
      sub_1AFE0F8F8((uint64_t)v20, (uint64_t)v12);
      if (v23 != 5) {
        goto LABEL_21;
      }
      char v4 = sub_1AFF23150(v12[0], (uint64_t)v21);
      goto LABEL_19;
    default:
      sub_1AFE0F8F8((uint64_t)v20, (uint64_t)v12);
      unint64_t v3 = (void *)v12[0];
      if (!v23)
      {
LABEL_5:
        char v4 = sub_1AFF22B0C(v3, v21);
LABEL_19:
        BOOL v8 = v4;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_20:
        sub_1AFE0F930((uint64_t)v20);
        return v8;
      }
LABEL_21:
      swift_bridgeObjectRelease();
LABEL_24:
      sub_1AFE131B8((uint64_t)v20, (uint64_t (*)(void))sub_1AFE13594);
      return 0;
  }
}

_OWORD *sub_1AFE0F8D8(long long *a1, _OWORD *a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  long long v4 = a1[2];
  *(_OWORD *)((char *)a2 + 42) = *(long long *)((char *)a1 + 42);
  a2[1] = v3;
  a2[2] = v4;
  *a2 = v2;
  return a2;
}

uint64_t sub_1AFE0F8F8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1AFE0F930(uint64_t a1)
{
  return a1;
}

BOOL sub_1AFE0F960(uint64_t a1)
{
  return !sub_1AFE0F568(a1, *(void *)(v1 + 16));
}

uint64_t type metadata accessor for NewsFeedRequest()
{
  uint64_t result = qword_1EB816F30;
  if (!qword_1EB816F30) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1AFE0F9E0()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

void *sub_1AFE0FA18@<X0>(uint64_t a1@<X8>)
{
  return sub_1AFE07F84(v1, a1);
}

void sub_1AFE0FA20()
{
  if (!qword_1E9AFB048)
  {
    uint64_t v0 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBBD98];
    sub_1AFE13524(255, &qword_1E9AFB050, (uint64_t)&type metadata for Headline, MEMORY[0x1E4FBBD98]);
    sub_1AFE0FDC0(&qword_1E9AFB058, &qword_1E9AFB050, v0);
    unint64_t v1 = sub_1AFFCB838();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1E9AFB048);
    }
  }
}

uint64_t sub_1AFE0FADC(unint64_t *a1, uint64_t *a2)
{
  return sub_1AFE0A35C(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_1AFE0FAFC(unint64_t *a1, _OWORD *a2)
{
  return sub_1AFE0A60C(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

unint64_t sub_1AFE0FB1C()
{
  unint64_t result = qword_1E9AFB060;
  if (!qword_1E9AFB060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB060);
  }
  return result;
}

unint64_t sub_1AFE0FB74()
{
  unint64_t result = qword_1EB810CB8;
  if (!qword_1EB810CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB810CB8);
  }
  return result;
}

uint64_t sub_1AFE0FBC8()
{
  return MEMORY[0x1E4FBB568];
}

uint64_t sub_1AFE0FBD4()
{
  return sub_1AFE0FC24(&qword_1E9AFB070, &qword_1E9AFB078, MEMORY[0x1E4FBAF10]);
}

uint64_t sub_1AFE0FC24(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1AFE0FD0C(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1AFE0FC68()
{
  unint64_t result = qword_1E9AFB080;
  if (!qword_1E9AFB080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB080);
  }
  return result;
}

uint64_t sub_1AFE0FCBC()
{
  return sub_1AFE0FC24(&qword_1E9AFB088, &qword_1E9AFB090, MEMORY[0x1E4FBC320]);
}

void sub_1AFE0FD0C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1AFE0FC68();
    unint64_t v7 = a3(a1, &type metadata for StockNewsFeed, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1AFE0FD70()
{
  return sub_1AFE0FDC0(&qword_1E9AFB098, &qword_1E9AFB0A0, MEMORY[0x1E4FBB978]);
}

uint64_t sub_1AFE0FDC0(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(void, uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1AFE13524(255, a2, (uint64_t)&type metadata for Headline, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for NewsFeedFilterOptions()
{
  return &type metadata for NewsFeedFilterOptions;
}

uint64_t destroy for NewsFeedFilterOptions.Option(uint64_t result)
{
  uint64_t v1 = result;
  unsigned int v2 = *(unsigned __int8 *)(result + 57);
  if (v2 >= 6) {
    unsigned int v2 = *(_DWORD *)result + 6;
  }
  switch(v2)
  {
    case 2u:
      int v3 = *(unsigned __int8 *)(result + 56);
      result += 8;
      switch(v3)
      {
        case 0:
          swift_unknownObjectRelease();
          uint64_t result = v1 + 16;
          goto LABEL_14;
        case 1:
          goto LABEL_17;
        case 2:
          goto LABEL_14;
        case 3:
        case 6:
        case 7:
        case 8:
          goto LABEL_4;
        default:
          return result;
      }
    case 3u:
      return result;
    case 4u:
      unsigned int v4 = *(unsigned __int8 *)(result + 48);
      if (v4 >= 9) {
        unsigned int v4 = *(_DWORD *)result + 9;
      }
      switch(v4)
      {
        case 0u:
          uint64_t v1 = result + 8;
          swift_unknownObjectRelease();
          goto LABEL_12;
        case 1u:
LABEL_17:
          return swift_unknownObjectRelease();
        case 2u:
LABEL_12:
          uint64_t result = v1;
LABEL_14:
          uint64_t result = __swift_destroy_boxed_opaque_existential_1(result);
          break;
        case 3u:
        case 6u:
        case 7u:
        case 8u:
          goto LABEL_4;
        default:
          return result;
      }
      break;
    default:
LABEL_4:
      uint64_t result = swift_bridgeObjectRelease();
      break;
  }
  return result;
}

uint64_t initializeWithCopy for NewsFeedFilterOptions.Option(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(unsigned __int8 *)(a2 + 57);
  if (v3 >= 6) {
    unsigned int v3 = *(_DWORD *)a2 + 6;
  }
  switch(v3)
  {
    case 1u:
      *(void *)a1 = *(void *)a2;
      char v4 = 1;
      goto LABEL_14;
    case 2u:
      *(void *)a1 = *(void *)a2;
      uint64_t v5 = (_OWORD *)(a1 + 8);
      unint64_t v6 = (void *)(a2 + 8);
      switch(*(unsigned char *)(a2 + 56))
      {
        case 0:
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          uint64_t v7 = a2 + 16;
          long long v8 = *(_OWORD *)(a2 + 40);
          *(_OWORD *)(a1 + 40) = v8;
          uint64_t v9 = v8;
          uint64_t v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
          swift_unknownObjectRetain();
          v10(a1 + 16, v7, v9);
          *(unsigned char *)(a1 + 56) = 0;
          break;
        case 1:
          *(void *)(a1 + 8) = *v6;
          *(unsigned char *)(a1 + 56) = 1;
          swift_unknownObjectRetain();
          break;
        case 2:
          long long v18 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 32) = v18;
          (**(void (***)(_OWORD *, uint64_t))(v18 - 8))(v5, a2 + 8);
          *(unsigned char *)(a1 + 56) = 2;
          break;
        case 3:
          *(void *)(a1 + 8) = *v6;
          char v19 = 3;
          goto LABEL_23;
        case 6:
          *(void *)(a1 + 8) = *v6;
          char v19 = 6;
          goto LABEL_23;
        case 7:
          *(void *)(a1 + 8) = *v6;
          char v19 = 7;
          goto LABEL_23;
        case 8:
          *(void *)(a1 + 8) = *v6;
          char v19 = 8;
LABEL_23:
          *(unsigned char *)(a1 + 56) = v19;
          sub_1AFFC8E38();
          break;
        default:
          long long v17 = *(_OWORD *)(a2 + 24);
          *uint64_t v5 = *(_OWORD *)v6;
          *(_OWORD *)(a1 + 24) = v17;
          *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
          *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
          break;
      }
      char v11 = 2;
      goto LABEL_37;
    case 3u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      char v11 = 3;
      goto LABEL_37;
    case 4u:
      unsigned int v12 = *(unsigned __int8 *)(a2 + 48);
      if (v12 >= 9) {
        unsigned int v12 = *(_DWORD *)a2 + 9;
      }
      switch(v12)
      {
        case 0u:
          *(void *)a1 = *(void *)a2;
          uint64_t v13 = a2 + 8;
          long long v14 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 32) = v14;
          uint64_t v15 = v14;
          long long v16 = **(void (***)(uint64_t, uint64_t, uint64_t))(v14 - 8);
          swift_unknownObjectRetain();
          v16(a1 + 8, v13, v15);
          *(unsigned char *)(a1 + 48) = 0;
          break;
        case 1u:
          *(void *)a1 = *(void *)a2;
          *(unsigned char *)(a1 + 48) = 1;
          swift_unknownObjectRetain();
          break;
        case 2u:
          long long v22 = *(_OWORD *)(a2 + 24);
          *(_OWORD *)(a1 + 24) = v22;
          (**(void (***)(uint64_t))(v22 - 8))(a1);
          char v21 = 2;
          goto LABEL_31;
        case 3u:
          *(void *)a1 = *(void *)a2;
          char v23 = 3;
          goto LABEL_35;
        case 4u:
          *(void *)a1 = *(void *)a2;
          char v21 = 4;
          goto LABEL_31;
        case 5u:
          *(void *)a1 = *(void *)a2;
          char v21 = 5;
          goto LABEL_31;
        case 6u:
          *(void *)a1 = *(void *)a2;
          char v23 = 6;
          goto LABEL_35;
        case 7u:
          *(void *)a1 = *(void *)a2;
          char v23 = 7;
          goto LABEL_35;
        case 8u:
          *(void *)a1 = *(void *)a2;
          char v23 = 8;
LABEL_35:
          *(unsigned char *)(a1 + 48) = v23;
          sub_1AFFC8E38();
          break;
        default:
          long long v20 = *(_OWORD *)(a2 + 16);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(_OWORD *)(a1 + 16) = v20;
          *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
          char v21 = *(unsigned char *)(a2 + 48);
LABEL_31:
          *(unsigned char *)(a1 + 48) = v21;
          break;
      }
      char v11 = 4;
LABEL_37:
      *(unsigned char *)(a1 + 57) = v11;
      return a1;
    case 5u:
      *(void *)a1 = *(void *)a2;
      char v4 = 5;
LABEL_14:
      *(unsigned char *)(a1 + 57) = v4;
      goto LABEL_15;
    default:
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 57) = 0;
LABEL_15:
      sub_1AFFC8E38();
      return a1;
  }
}

uint64_t assignWithCopy for NewsFeedFilterOptions.Option(uint64_t a1, long long *a2)
{
  uint64_t v2 = a1;
  if ((long long *)a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 57);
    if (v4 >= 6) {
      unsigned int v4 = *(_DWORD *)a1 + 6;
    }
    switch(v4)
    {
      case 2u:
        int v6 = *(unsigned __int8 *)(a1 + 56);
        a1 += 8;
        switch(v6)
        {
          case 0:
            swift_unknownObjectRelease();
            __swift_destroy_boxed_opaque_existential_1(v2 + 16);
            break;
          case 1:
            goto LABEL_28;
          case 2:
            goto LABEL_29;
          case 3:
          case 6:
          case 7:
          case 8:
            goto LABEL_5;
          default:
            goto LABEL_6;
        }
        break;
      case 3u:
        break;
      case 4u:
        unsigned int v7 = *(unsigned __int8 *)(a1 + 48);
        if (v7 >= 9) {
          unsigned int v7 = *(_DWORD *)a1 + 9;
        }
        switch(v7)
        {
          case 0u:
            swift_unknownObjectRelease();
            __swift_destroy_boxed_opaque_existential_1(v2 + 8);
            break;
          case 1u:
LABEL_28:
            swift_unknownObjectRelease();
            break;
          case 2u:
LABEL_29:
            __swift_destroy_boxed_opaque_existential_1(a1);
            break;
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            goto LABEL_5;
          default:
            goto LABEL_6;
        }
        break;
      default:
LABEL_5:
        swift_bridgeObjectRelease();
        break;
    }
LABEL_6:
    unsigned int v5 = *((unsigned __int8 *)a2 + 57);
    if (v5 >= 6) {
      unsigned int v5 = *(_DWORD *)a2 + 6;
    }
    switch(v5)
    {
      case 1u:
        *(void *)uint64_t v2 = *(void *)a2;
        char v8 = 1;
        goto LABEL_24;
      case 2u:
        *(void *)uint64_t v2 = *(void *)a2;
        uint64_t v9 = (_OWORD *)(v2 + 8);
        uint64_t v10 = (void *)a2 + 1;
        switch(*((unsigned char *)a2 + 56))
        {
          case 0:
            *(void *)(v2 + 8) = *((void *)a2 + 1);
            char v11 = a2 + 1;
            uint64_t v12 = *((void *)a2 + 5);
            *(void *)(v2 + 40) = v12;
            *(void *)(v2 + 48) = *((void *)a2 + 6);
            uint64_t v13 = **(void (***)(uint64_t, long long *, uint64_t))(v12 - 8);
            swift_unknownObjectRetain();
            v13(v2 + 16, v11, v12);
            *(unsigned char *)(v2 + 56) = 0;
            break;
          case 1:
            *(void *)(v2 + 8) = *v10;
            *(unsigned char *)(v2 + 56) = 1;
            swift_unknownObjectRetain();
            break;
          case 2:
            uint64_t v22 = *((void *)a2 + 4);
            *(void *)(v2 + 32) = v22;
            *(void *)(v2 + 40) = *((void *)a2 + 5);
            (**(void (***)(_OWORD *, void *))(v22 - 8))(v9, v10);
            *(unsigned char *)(v2 + 56) = 2;
            break;
          case 3:
            *(void *)(v2 + 8) = *v10;
            char v23 = 3;
            goto LABEL_36;
          case 6:
            *(void *)(v2 + 8) = *v10;
            char v23 = 6;
            goto LABEL_36;
          case 7:
            *(void *)(v2 + 8) = *v10;
            char v23 = 7;
            goto LABEL_36;
          case 8:
            *(void *)(v2 + 8) = *v10;
            char v23 = 8;
LABEL_36:
            *(unsigned char *)(v2 + 56) = v23;
            sub_1AFFC8E38();
            break;
          default:
            long long v19 = *(_OWORD *)v10;
            long long v20 = *(long long *)((char *)a2 + 24);
            long long v21 = *(long long *)((char *)a2 + 40);
            *(unsigned char *)(v2 + 56) = *((unsigned char *)a2 + 56);
            *(_OWORD *)(v2 + 24) = v20;
            *(_OWORD *)(v2 + 40) = v21;
            *uint64_t v9 = v19;
            break;
        }
        char v14 = 2;
        goto LABEL_49;
      case 3u:
        *(_OWORD *)uint64_t v2 = *a2;
        char v14 = 3;
        goto LABEL_49;
      case 4u:
        unsigned int v15 = *((unsigned __int8 *)a2 + 48);
        if (v15 >= 9) {
          unsigned int v15 = *(_DWORD *)a2 + 9;
        }
        switch(v15)
        {
          case 0u:
            *(void *)uint64_t v2 = *(void *)a2;
            uint64_t v16 = (uint64_t)a2 + 8;
            uint64_t v17 = *((void *)a2 + 4);
            *(void *)(v2 + 32) = v17;
            *(void *)(v2 + 40) = *((void *)a2 + 5);
            long long v18 = **(void (***)(uint64_t, uint64_t, uint64_t))(v17 - 8);
            swift_unknownObjectRetain();
            v18(v2 + 8, v16, v17);
            *(unsigned char *)(v2 + 48) = 0;
            break;
          case 1u:
            *(void *)uint64_t v2 = *(void *)a2;
            *(unsigned char *)(v2 + 48) = 1;
            swift_unknownObjectRetain();
            break;
          case 2u:
            uint64_t v27 = *((void *)a2 + 3);
            *(void *)(v2 + 24) = v27;
            *(void *)(v2 + 32) = *((void *)a2 + 4);
            (**(void (***)(uint64_t, long long *))(v27 - 8))(v2, a2);
            *(unsigned char *)(v2 + 48) = 2;
            break;
          case 3u:
            *(void *)uint64_t v2 = *(void *)a2;
            char v28 = 3;
            goto LABEL_47;
          case 4u:
            *(void *)uint64_t v2 = *(void *)a2;
            *(unsigned char *)(v2 + 48) = 4;
            break;
          case 5u:
            *(void *)uint64_t v2 = *(void *)a2;
            *(unsigned char *)(v2 + 48) = 5;
            break;
          case 6u:
            *(void *)uint64_t v2 = *(void *)a2;
            char v28 = 6;
            goto LABEL_47;
          case 7u:
            *(void *)uint64_t v2 = *(void *)a2;
            char v28 = 7;
            goto LABEL_47;
          case 8u:
            *(void *)uint64_t v2 = *(void *)a2;
            char v28 = 8;
LABEL_47:
            *(unsigned char *)(v2 + 48) = v28;
            sub_1AFFC8E38();
            break;
          default:
            long long v24 = *a2;
            long long v25 = a2[1];
            long long v26 = a2[2];
            *(unsigned char *)(v2 + 48) = *((unsigned char *)a2 + 48);
            *(_OWORD *)(v2 + 16) = v25;
            *(_OWORD *)(v2 + 32) = v26;
            *(_OWORD *)uint64_t v2 = v24;
            break;
        }
        char v14 = 4;
LABEL_49:
        *(unsigned char *)(v2 + 57) = v14;
        return v2;
      case 5u:
        *(void *)uint64_t v2 = *(void *)a2;
        char v8 = 5;
LABEL_24:
        *(unsigned char *)(v2 + 57) = v8;
        goto LABEL_25;
      default:
        *(void *)uint64_t v2 = *(void *)a2;
        *(unsigned char *)(v2 + 57) = 0;
LABEL_25:
        sub_1AFFC8E38();
        break;
    }
  }
  return v2;
}

__n128 __swift_memcpy58_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 42) = *(_OWORD *)(a2 + 42);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for NewsFeedFilterOptions.Option(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1;
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 57);
    if (v4 >= 6) {
      unsigned int v4 = *(_DWORD *)a1 + 6;
    }
    switch(v4)
    {
      case 2u:
        int v7 = *(unsigned __int8 *)(a1 + 56);
        a1 += 8;
        switch(v7)
        {
          case 0:
            swift_unknownObjectRelease();
            __swift_destroy_boxed_opaque_existential_1(v2 + 16);
            break;
          case 1:
            goto LABEL_24;
          case 2:
            goto LABEL_25;
          case 3:
          case 6:
          case 7:
          case 8:
            goto LABEL_5;
          default:
            goto LABEL_6;
        }
        break;
      case 3u:
        break;
      case 4u:
        unsigned int v8 = *(unsigned __int8 *)(a1 + 48);
        if (v8 >= 9) {
          unsigned int v8 = *(_DWORD *)a1 + 9;
        }
        switch(v8)
        {
          case 0u:
            swift_unknownObjectRelease();
            __swift_destroy_boxed_opaque_existential_1(v2 + 8);
            break;
          case 1u:
LABEL_24:
            swift_unknownObjectRelease();
            break;
          case 2u:
LABEL_25:
            __swift_destroy_boxed_opaque_existential_1(a1);
            break;
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            goto LABEL_5;
          default:
            goto LABEL_6;
        }
        break;
      default:
LABEL_5:
        swift_bridgeObjectRelease();
        break;
    }
LABEL_6:
    unsigned int v5 = *(unsigned __int8 *)(a2 + 57);
    if (v5 >= 6) {
      unsigned int v5 = *(_DWORD *)a2 + 6;
    }
    switch(v5)
    {
      case 1u:
        *(void *)uint64_t v2 = *(void *)a2;
        char v6 = 1;
        break;
      case 2u:
        long long v9 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)uint64_t v2 = *(_OWORD *)a2;
        *(_OWORD *)(v2 + 16) = v9;
        *(_OWORD *)(v2 + 32) = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(v2 + 41) = *(_OWORD *)(a2 + 41);
        char v6 = 2;
        break;
      case 3u:
        *(_OWORD *)uint64_t v2 = *(_OWORD *)a2;
        char v6 = 3;
        break;
      case 4u:
        unsigned int v10 = *(unsigned __int8 *)(a2 + 48);
        if (v10 >= 9) {
          unsigned int v10 = *(_DWORD *)a2 + 9;
        }
        switch(v10)
        {
          case 0u:
            long long v11 = *(_OWORD *)(a2 + 16);
            *(_OWORD *)uint64_t v2 = *(_OWORD *)a2;
            *(_OWORD *)(v2 + 16) = v11;
            *(_OWORD *)(v2 + 32) = *(_OWORD *)(a2 + 32);
            *(unsigned char *)(v2 + 48) = 0;
            goto LABEL_36;
          case 1u:
            *(void *)uint64_t v2 = *(void *)a2;
            char v13 = 1;
            goto LABEL_35;
          case 2u:
            long long v14 = *(_OWORD *)(a2 + 16);
            *(_OWORD *)uint64_t v2 = *(_OWORD *)a2;
            *(_OWORD *)(v2 + 16) = v14;
            *(void *)(v2 + 32) = *(void *)(a2 + 32);
            char v13 = 2;
            goto LABEL_35;
          case 3u:
            *(void *)uint64_t v2 = *(void *)a2;
            char v13 = 3;
            goto LABEL_35;
          case 4u:
            *(void *)uint64_t v2 = *(void *)a2;
            char v6 = 4;
            *(unsigned char *)(v2 + 48) = 4;
            goto LABEL_37;
          case 5u:
            *(void *)uint64_t v2 = *(void *)a2;
            char v13 = 5;
            goto LABEL_35;
          case 6u:
            *(void *)uint64_t v2 = *(void *)a2;
            char v13 = 6;
            goto LABEL_35;
          case 7u:
            *(void *)uint64_t v2 = *(void *)a2;
            char v13 = 7;
            goto LABEL_35;
          case 8u:
            *(void *)uint64_t v2 = *(void *)a2;
            char v13 = 8;
            goto LABEL_35;
          default:
            long long v12 = *(_OWORD *)(a2 + 16);
            *(_OWORD *)uint64_t v2 = *(_OWORD *)a2;
            *(_OWORD *)(v2 + 16) = v12;
            *(_OWORD *)(v2 + 32) = *(_OWORD *)(a2 + 32);
            char v13 = *(unsigned char *)(a2 + 48);
LABEL_35:
            *(unsigned char *)(v2 + 48) = v13;
LABEL_36:
            char v6 = 4;
            break;
        }
        break;
      case 5u:
        *(void *)uint64_t v2 = *(void *)a2;
        char v6 = 5;
        break;
      default:
        char v6 = 0;
        *(void *)uint64_t v2 = *(void *)a2;
        break;
    }
LABEL_37:
    *(unsigned char *)(v2 + 57) = v6;
  }
  return v2;
}

uint64_t getEnumTagSinglePayload for NewsFeedFilterOptions.Option(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFB && *(unsigned char *)(a1 + 58)) {
    return (*(_DWORD *)a1 + 251);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 57);
  if (v3 >= 6) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for NewsFeedFilterOptions.Option(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(_OWORD *)(result + 42) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)__n128 result = 0u;
    *(_DWORD *)__n128 result = a2 - 251;
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 58) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 58) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 57) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1AFE10D70(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 57);
  if (result >= 6) {
    return (*(_DWORD *)a1 + 6);
  }
  return result;
}

uint64_t sub_1AFE10D8C(uint64_t result, unsigned int a2)
{
  if (a2 > 5)
  {
    *(_OWORD *)(result + 41) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_DWORD *)uint64_t result = a2 - 6;
    LOBYTE(a2) = 6;
  }
  *(unsigned char *)(result + 57) = a2;
  return result;
}

ValueMetadata *type metadata accessor for NewsFeedFilterOptions.Option()
{
  return &type metadata for NewsFeedFilterOptions.Option;
}

unsigned char *storeEnumTagSinglePayload for NewsFeedSortMethod(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFE10E94);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NewsFeedSortMethod()
{
  return &type metadata for NewsFeedSortMethod;
}

ValueMetadata *type metadata accessor for NewsFeedType()
{
  return &type metadata for NewsFeedType;
}

char *initializeBufferWithCopyOfBuffer for NewsFeedRequest(char *a1, char *a2, int *a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *(void *)a2;
    *(void *)unsigned int v4 = *(void *)a2;
    unsigned int v4 = (char *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1AFFC8E48();
  }
  else
  {
    uint64_t v7 = *((void *)a2 + 1);
    *(void *)a1 = *(void *)a2;
    *((void *)a1 + 1) = v7;
    *((void *)a1 + 2) = *((void *)a2 + 2);
    uint64_t v8 = a3[6];
    long long v9 = &a1[v8];
    unsigned int v10 = &a2[v8];
    uint64_t v11 = sub_1AFFC98F8();
    long long v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    sub_1AFFC8E38();
    v12(v9, v10, v11);
    v12(&v4[a3[7]], &a2[a3[7]], v11);
    uint64_t v13 = a3[8];
    long long v14 = &v4[v13];
    unsigned int v15 = &a2[v13];
    uint64_t v16 = *((void *)v15 + 1);
    *(void *)long long v14 = *(void *)v15;
    *((void *)v14 + 1) = v16;
    uint64_t v17 = *((void *)v15 + 3);
    *((void *)v14 + 2) = *((void *)v15 + 2);
    *((void *)v14 + 3) = v17;
    uint64_t v18 = *((void *)v15 + 5);
    *((void *)v14 + 4) = *((void *)v15 + 4);
    *((void *)v14 + 5) = v18;
    uint64_t v19 = *((void *)v15 + 7);
    *((void *)v14 + 6) = *((void *)v15 + 6);
    *((void *)v14 + 7) = v19;
    v14[64] = v15[64];
    uint64_t v20 = *((void *)v15 + 10);
    *((void *)v14 + 9) = *((void *)v15 + 9);
    *((void *)v14 + 10) = v20;
    uint64_t v21 = *((void *)v15 + 12);
    *((void *)v14 + 11) = *((void *)v15 + 11);
    *((void *)v14 + 12) = v21;
    uint64_t v22 = *((void *)v15 + 14);
    *((void *)v14 + 13) = *((void *)v15 + 13);
    *((void *)v14 + 14) = v22;
    uint64_t v23 = *((void *)v15 + 16);
    *((void *)v14 + 15) = *((void *)v15 + 15);
    *((void *)v14 + 16) = v23;
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
  }
  return v4;
}

uint64_t destroy for NewsFeedRequest(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1AFFC98F8();
  unsigned int v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(a1 + *(int *)(a2 + 28), v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for NewsFeedRequest(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  *((void *)a1 + 2) = *((void *)a2 + 2);
  uint64_t v7 = a3[6];
  uint64_t v8 = &a1[v7];
  long long v9 = &a2[v7];
  uint64_t v10 = sub_1AFFC98F8();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  sub_1AFFC8E38();
  v11(v8, v9, v10);
  v11(&a1[a3[7]], &a2[a3[7]], v10);
  uint64_t v12 = a3[8];
  uint64_t v13 = &a1[v12];
  long long v14 = &a2[v12];
  uint64_t v15 = *((void *)v14 + 1);
  *(void *)uint64_t v13 = *(void *)v14;
  *((void *)v13 + 1) = v15;
  uint64_t v16 = *((void *)v14 + 3);
  *((void *)v13 + 2) = *((void *)v14 + 2);
  *((void *)v13 + 3) = v16;
  uint64_t v17 = *((void *)v14 + 5);
  *((void *)v13 + 4) = *((void *)v14 + 4);
  *((void *)v13 + 5) = v17;
  uint64_t v18 = *((void *)v14 + 7);
  *((void *)v13 + 6) = *((void *)v14 + 6);
  *((void *)v13 + 7) = v18;
  v13[64] = v14[64];
  uint64_t v19 = *((void *)v14 + 10);
  *((void *)v13 + 9) = *((void *)v14 + 9);
  *((void *)v13 + 10) = v19;
  uint64_t v20 = *((void *)v14 + 12);
  *((void *)v13 + 11) = *((void *)v14 + 11);
  *((void *)v13 + 12) = v20;
  uint64_t v21 = *((void *)v14 + 14);
  *((void *)v13 + 13) = *((void *)v14 + 13);
  *((void *)v13 + 14) = v21;
  uint64_t v22 = *((void *)v14 + 16);
  *((void *)v13 + 15) = *((void *)v14 + 15);
  *((void *)v13 + 16) = v22;
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  return a1;
}

char *assignWithCopy for NewsFeedRequest(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = *((void *)a2 + 1);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *((void *)a1 + 2) = *((void *)a2 + 2);
  uint64_t v6 = a3[6];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1AFFC98F8();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(&a1[a3[7]], &a2[a3[7]], v9);
  uint64_t v11 = a3[8];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  *(void *)uint64_t v12 = *(void *)v13;
  *((void *)v12 + 1) = *((void *)v13 + 1);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *((void *)v12 + 2) = *((void *)v13 + 2);
  *((void *)v12 + 3) = *((void *)v13 + 3);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *((void *)v12 + 4) = *((void *)v13 + 4);
  *((void *)v12 + 5) = *((void *)v13 + 5);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *((void *)v12 + 6) = *((void *)v13 + 6);
  *((void *)v12 + 7) = *((void *)v13 + 7);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  v12[64] = v13[64];
  *((void *)v12 + 9) = *((void *)v13 + 9);
  *((void *)v12 + 10) = *((void *)v13 + 10);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *((void *)v12 + 11) = *((void *)v13 + 11);
  *((void *)v12 + 12) = *((void *)v13 + 12);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *((void *)v12 + 13) = *((void *)v13 + 13);
  *((void *)v12 + 14) = *((void *)v13 + 14);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *((void *)v12 + 15) = *((void *)v13 + 15);
  *((void *)v12 + 16) = *((void *)v13 + 16);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for NewsFeedRequest(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = a3[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1AFFC98F8();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(a1 + a3[7], a2 + a3[7], v9);
  uint64_t v11 = a3[8];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  long long v14 = *(_OWORD *)(v13 + 112);
  *(_OWORD *)(v12 + 96) = *(_OWORD *)(v13 + 96);
  *(_OWORD *)(v12 + 112) = v14;
  *(void *)(v12 + 128) = *(void *)(v13 + 128);
  long long v15 = *(_OWORD *)(v13 + 48);
  *(_OWORD *)(v12 + 32) = *(_OWORD *)(v13 + 32);
  *(_OWORD *)(v12 + 48) = v15;
  long long v16 = *(_OWORD *)(v13 + 80);
  *(_OWORD *)(v12 + 64) = *(_OWORD *)(v13 + 64);
  *(_OWORD *)(v12 + 80) = v16;
  long long v17 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v17;
  return a1;
}

char *assignWithTake for NewsFeedRequest(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  *((void *)a1 + 2) = *((void *)a2 + 2);
  uint64_t v7 = a3[6];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = sub_1AFFC98F8();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v11(&a1[a3[7]], &a2[a3[7]], v10);
  uint64_t v12 = a3[8];
  uint64_t v13 = &a1[v12];
  long long v14 = &a2[v12];
  uint64_t v15 = *((void *)v14 + 1);
  *(void *)uint64_t v13 = *(void *)v14;
  *((void *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = *((void *)v14 + 3);
  *((void *)v13 + 2) = *((void *)v14 + 2);
  *((void *)v13 + 3) = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = *((void *)v14 + 5);
  *((void *)v13 + 4) = *((void *)v14 + 4);
  *((void *)v13 + 5) = v17;
  swift_bridgeObjectRelease();
  uint64_t v18 = *((void *)v14 + 7);
  *((void *)v13 + 6) = *((void *)v14 + 6);
  *((void *)v13 + 7) = v18;
  swift_bridgeObjectRelease();
  v13[64] = v14[64];
  uint64_t v19 = *((void *)v14 + 10);
  *((void *)v13 + 9) = *((void *)v14 + 9);
  *((void *)v13 + 10) = v19;
  swift_bridgeObjectRelease();
  uint64_t v20 = *((void *)v14 + 12);
  *((void *)v13 + 11) = *((void *)v14 + 11);
  *((void *)v13 + 12) = v20;
  swift_bridgeObjectRelease();
  uint64_t v21 = *((void *)v14 + 14);
  *((void *)v13 + 13) = *((void *)v14 + 13);
  *((void *)v13 + 14) = v21;
  swift_bridgeObjectRelease();
  uint64_t v22 = *((void *)v14 + 16);
  *((void *)v13 + 15) = *((void *)v14 + 15);
  *((void *)v13 + 16) = v22;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for NewsFeedRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1AFE11714);
}

uint64_t sub_1AFE11714(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1AFFC98F8();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for NewsFeedRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1AFE117D8);
}

uint64_t sub_1AFE117D8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1AFFC98F8();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1AFE11880()
{
  uint64_t result = sub_1AFFC98F8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for StockNewsFeed()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StockNewsFeed(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  uint64_t v8 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v8;
  uint64_t v9 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v9;
  uint64_t v10 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v10;
  uint64_t v11 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v11;
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  return a1;
}

uint64_t assignWithCopy for StockNewsFeed(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy160_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  __n128 result = *(__n128 *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(__n128 *)(a1 + 96) = result;
  *(_OWORD *)(a1 + 112) = v7;
  return result;
}

uint64_t assignWithTake for StockNewsFeed(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v8;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  uint64_t v9 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v12;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StockNewsFeed(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 160)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StockNewsFeed(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 152) = 0;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 160) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 160) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StockNewsFeed()
{
  return &type metadata for StockNewsFeed;
}

uint64_t sub_1AFE11DC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t type metadata accessor for NewsFeedService()
{
  return self;
}

uint64_t method lookup function for NewsFeedService(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for NewsFeedService);
}

uint64_t dispatch thunk of NewsFeedService.__allocating_init(contentContext:headlineScorerFactory:appConfigurationManager:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_1AFE11E24(uint64_t a1)
{
  return a1;
}

uint64_t sub_1AFE11EDC(uint64_t a1)
{
  if ((*(void *)(a1 + 104) >> 1) > 0x80000000) {
    return -(*(void *)(a1 + 104) >> 1);
  }
  else {
    return 0;
  }
}

void *sub_1AFE11EF4(uint64_t a1, void *a2)
{
  unint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  long long v3 = a2;
  unint64_t v4 = 0;
  uint64_t v5 = a1 + 32;
  __n128 result = (void *)MEMORY[0x1E4FBC860];
  uint64_t v21 = v5;
  do
  {
    uint64_t v22 = result;
    if (v4 <= v2) {
      unint64_t v7 = v2;
    }
    else {
      unint64_t v7 = v4;
    }
    unint64_t v24 = v7;
    uint64_t v8 = v5 + 144 * v4;
    unint64_t v9 = v4;
    while (1)
    {
      if (v24 == v9)
      {
        __break(1u);
        return result;
      }
      sub_1AFD2CF70(v8, (uint64_t)v25);
      sub_1AFD2CF70((uint64_t)v25, (uint64_t)v26);
      sub_1AFD2D15C((uint64_t)v26);
      uint64_t v10 = *(void **)sub_1AFD2D168((uint64_t)v26);
      sub_1AFD2D03C(v25, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
      id v11 = objc_msgSend(v10, sel_articleID);
      uint64_t v12 = v11;
      uint64_t v13 = v11;
      if (!v11)
      {
        sub_1AFFCAE98();
        uint64_t v13 = (void *)sub_1AFFCAE68();
        swift_bridgeObjectRelease();
        sub_1AFFCAE98();
        uint64_t v12 = (void *)sub_1AFFCAE68();
        long long v3 = a2;
        swift_bridgeObjectRelease();
      }
      id v14 = v11;
      objc_msgSend(v3, sel_addObject_, v13);

      uint64_t v15 = (uint64_t)objc_msgSend(v3, sel_countForObject_, v12);
      if (v15 <= 1) {
        break;
      }
      ++v9;
      __n128 result = sub_1AFD2D03C(v25, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2D0A0);
      v8 += 144;
      if (v2 == v9) {
        return v22;
      }
    }
    uint64_t v16 = v22;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v27 = v22;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1AFD9D8F0(0, v22[2] + 1, 1);
      uint64_t v16 = v27;
    }
    unint64_t v19 = v16[2];
    unint64_t v18 = v16[3];
    uint64_t v20 = v16;
    if (v19 >= v18 >> 1)
    {
      sub_1AFD9D8F0(v18 > 1, v19 + 1, 1);
      uint64_t v20 = v27;
    }
    unint64_t v4 = v9 + 1;
    v20[2] = v19 + 1;
    sub_1AFD2CF70((uint64_t)v25, (uint64_t)&v20[18 * v19 + 4]);
    uint64_t v5 = v21;
    __n128 result = v20;
  }
  while (v2 - 1 != v9);
  return result;
}

uint64_t sub_1AFE12190(uint64_t result, void *a2)
{
  unint64_t v2 = *(void *)(result + 16);
  if (!v2) {
    return MEMORY[0x1E4FBC860];
  }
  unint64_t v4 = 0;
  uint64_t v19 = result + 32;
  uint64_t v5 = MEMORY[0x1E4FBC860];
  do
  {
    if (v4 <= v2) {
      unint64_t v6 = v2;
    }
    else {
      unint64_t v6 = v4;
    }
    unint64_t v20 = v6;
    uint64_t v7 = v19 + 144 * v4;
    for (unint64_t i = v4; ; ++i)
    {
      if (v20 == i)
      {
        __break(1u);
        return result;
      }
      sub_1AFD2CF70(v7, (uint64_t)v21);
      unint64_t v4 = i + 1;
      sub_1AFD2CF70((uint64_t)v21, (uint64_t)v22);
      sub_1AFD2D15C((uint64_t)v22);
      unint64_t v9 = *(void **)sub_1AFD2D168((uint64_t)v22);
      unsigned __int8 v10 = objc_msgSend(v9, sel_respondsToSelector_, sel_stocksFields);
      sub_1AFD2D03C(v21, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
      if ((v10 & 1) == 0) {
        break;
      }
      sub_1AFD2D03C(v21, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
      id v11 = objc_msgSend(v9, sel_stocksFields);
      if (!v11
        || (id v12 = objc_msgSend(v11, sel_stocksClusterID),
            swift_unknownObjectRelease(),
            !v12))
      {
        sub_1AFD2D03C(v21, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2D0A0);
        break;
      }
      sub_1AFFCAE98();

      sub_1AFD2D03C(v21, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2D0A0);
      uint64_t v13 = (void *)sub_1AFFCAE68();
      objc_msgSend(a2, sel_addObject_, v13);

      id v14 = (void *)sub_1AFFCAE68();
      swift_bridgeObjectRelease();
      uint64_t v15 = (uint64_t)objc_msgSend(a2, sel_countForObject_, v14);

      if (v15 <= 1) {
        break;
      }
      __n128 result = (uint64_t)sub_1AFD2D03C(v21, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2D0A0);
      v7 += 144;
      if (v2 == v4) {
        return v5;
      }
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v23 = v5;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1AFD9D8F0(0, *(void *)(v5 + 16) + 1, 1);
      uint64_t v5 = v23;
    }
    unint64_t v18 = *(void *)(v5 + 16);
    unint64_t v17 = *(void *)(v5 + 24);
    if (v18 >= v17 >> 1)
    {
      sub_1AFD9D8F0(v17 > 1, v18 + 1, 1);
      uint64_t v5 = v23;
    }
    *(void *)(v5 + 16) = v18 + 1;
    __n128 result = sub_1AFD2CF70((uint64_t)v21, v5 + 144 * v18 + 32);
  }
  while (v2 - 1 != i);
  return v5;
}

uint64_t sub_1AFE12480(uint64_t result, uint64_t a2)
{
  unint64_t v2 = *(void *)(result + 16);
  if (!v2) {
    return MEMORY[0x1E4FBC860];
  }
  unint64_t v4 = 0;
  uint64_t v5 = result + 32;
  uint64_t v13 = a2 + 32;
  uint64_t v6 = MEMORY[0x1E4FBC860];
  do
  {
    if (v4 <= v2) {
      unint64_t v7 = v2;
    }
    else {
      unint64_t v7 = v4;
    }
    while (1)
    {
      if (v4 == v7)
      {
        __break(1u);
        return result;
      }
      __n128 result = sub_1AFD2CF70(v5 + 144 * v4++, (uint64_t)v15);
      uint64_t v8 = *(void *)(a2 + 16);
      if (v8) {
        break;
      }
LABEL_6:
      if (v4 == v2) {
        return v6;
      }
    }
    sub_1AFD2D03C(v15, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
    sub_1AFFC8E38();
    uint64_t v9 = v13;
    while (1)
    {
      sub_1AFD2CF70((uint64_t)v15, (uint64_t)v14);
      if ((sub_1AFF709CC() & 1) == 0) {
        break;
      }
      v9 += 56;
      if (!--v8)
      {
        swift_bridgeObjectRelease();
        __n128 result = (uint64_t)sub_1AFD2D03C(v15, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2D0A0);
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v16 = v6;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1AFD9D8F0(0, *(void *)(v6 + 16) + 1, 1);
      uint64_t v6 = v16;
    }
    unint64_t v12 = *(void *)(v6 + 16);
    unint64_t v11 = *(void *)(v6 + 24);
    if (v12 >= v11 >> 1)
    {
      sub_1AFD9D8F0(v11 > 1, v12 + 1, 1);
      uint64_t v6 = v16;
    }
    *(void *)(v6 + 16) = v12 + 1;
    __n128 result = sub_1AFD2CF70((uint64_t)v15, v6 + 144 * v12 + 32);
  }
  while (v4 != v2);
  return v6;
}

uint64_t sub_1AFE12630(unint64_t a1, void *a2)
{
  uint64_t v11 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  sub_1AFFC8E38();
  for (; v4; uint64_t v4 = sub_1AFFCB9C8())
  {
    for (uint64_t i = 4; ; ++i)
    {
      id v6 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1B3E8DC70](i - 4, a1) : *(id *)(a1 + 8 * i);
      unint64_t v7 = v6;
      uint64_t v8 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      id v9 = objc_msgSend(a2, sel_objectForKey_, v6);

      if (v9)
      {
        MEMORY[0x1B3E8D5F0]();
        if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1AFFCB228();
        }
        sub_1AFFCB278();
        sub_1AFFCB1E8();
      }
      if (v8 == v4)
      {
        swift_bridgeObjectRelease();
        return v11;
      }
    }
    __break(1u);
LABEL_15:
    sub_1AFFC8E38();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1AFE127B8(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (a2 < 0)
  {
LABEL_21:
    __break(1u);
    return result;
  }
  if (a2)
  {
    unint64_t v3 = a3 - result;
    if (a3 - result >= (unint64_t)(a2 - 1)) {
      unint64_t v3 = a2 - 1;
    }
    if (v3 >= (result ^ 0x7FFFFFFFFFFFFFFFuLL)) {
      unint64_t v3 = result ^ 0x7FFFFFFFFFFFFFFFLL;
    }
    unint64_t v4 = v3 + 1;
    if (v4 >= 5)
    {
      uint64_t v7 = v4 & 3;
      if ((v4 & 3) == 0) {
        uint64_t v7 = 4;
      }
      unint64_t v5 = v4 - v7;
      int64x2_t v8 = 0uLL;
      int64x2_t v9 = (int64x2_t)(unint64_t)result;
      int64x2_t v10 = vdupq_n_s64(1uLL);
      unint64_t v11 = v5;
      do
      {
        int64x2_t v8 = vaddq_s64(v8, v10);
        int64x2_t v9 = vaddq_s64(v9, v10);
        v11 -= 4;
      }
      while (v11);
      uint64_t v6 = vaddvq_s64(vaddq_s64(vzip2q_s64(v9, v8), vzip1q_s64(v9, v8)));
    }
    else
    {
      unint64_t v5 = 0;
      uint64_t v6 = result;
    }
    uint64_t v12 = v5 + result - 0x7FFFFFFFFFFFFFFFLL;
    uint64_t v13 = v5 + result - a3;
    uint64_t v14 = a2 - v5;
    __n128 result = v6;
    while (1)
    {
      if (!v13) {
        return 0;
      }
      if (!v12) {
        break;
      }
      ++result;
      ++v12;
      ++v13;
      if (!--v14) {
        return result;
      }
    }
    __break(1u);
    goto LABEL_21;
  }
  return result;
}

uint64_t sub_1AFE12890(uint64_t a1)
{
  return a1;
}

uint64_t sub_1AFE12938(uint64_t a1)
{
  return a1;
}

uint64_t sub_1AFE129E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AFE08D7C(a1, a2, a3, a4, v4[2], v4[3], v4[4], v4[5], v4[6]);
}

void sub_1AFE12A14()
{
  if (!qword_1EB817D90)
  {
    sub_1AFE13524(255, &qword_1EB816AB8, (uint64_t)&type metadata for StockNewsFeed, MEMORY[0x1E4FBB320]);
    unint64_t v0 = sub_1AFFCA788();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB817D90);
    }
  }
}

uint64_t sub_1AFE12A90()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1AFE12AC8()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1AFE12B00()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 104, 7);
}

void sub_1AFE12B68(uint64_t a1, uint64_t a2, void *a3)
{
  sub_1AFE09258(a1, a2, a3, *(void *)(v3 + 16), *(void (**)(void))(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 40), *(void *)(v3 + 48), *(void (**)(uint64_t))(v3 + 56), *(void *)(v3 + 64), *(void *)(v3 + 72), *(void *)(v3 + 80), *(void *)(v3 + 88), *(void *)(v3 + 96));
}

uint64_t sub_1AFE12BA8(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1AFE12BF0()
{
  unint64_t result = qword_1E9AFB0B8;
  if (!qword_1E9AFB0B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB0B8);
  }
  return result;
}

uint64_t sub_1AFE12C44()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 72, 7);
}

void sub_1AFE12C9C(void *a1, void *a2)
{
  sub_1AFE0973C(a1, a2, *(void *)(v2 + 16), *(void (**)(void))(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 64));
}

uint64_t sub_1AFE12CD0(uint64_t a1, void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v37 = type metadata accessor for NewsFeedRequest();
  uint64_t v6 = *(void *)(v37 - 8);
  MEMORY[0x1F4188790](v37);
  int64x2_t v8 = (uint64_t *)((char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  int64_t v9 = *(void *)(a1 + 16);
  if (v9)
  {
    uint64_t v32 = a3;
    long long v33 = a2;
    uint64_t v52 = MEMORY[0x1E4FBC860];
    sub_1AFD9DBA0(0, v9, 0);
    uint64_t v10 = sub_1AFD8F6AC(0, (unint64_t *)&qword_1EB819EA0);
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v35 = *(void *)(v6 + 72);
    uint64_t v36 = v10;
    uint64_t v12 = MEMORY[0x1E4FBB1A0];
    long long v34 = xmmword_1AFFD0610;
    do
    {
      sub_1AFDF981C(v11, (uint64_t)v8);
      sub_1AFD2CD48();
      uint64_t v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = v34;
      sub_1AFDF97C0((uint64_t)v8 + *(int *)(v37 + 32), (uint64_t)v40);
      sub_1AFDF97C0((uint64_t)v40, (uint64_t)v41);
      uint64_t v15 = v41[2];
      uint64_t v14 = v41[3];
      *(void *)(v13 + 56) = v12;
      unint64_t v16 = sub_1AFD2CE00();
      *(void *)(v13 + 32) = v15;
      *(void *)(v13 + 40) = v14;
      uint64_t v18 = *v8;
      uint64_t v17 = v8[1];
      *(void *)(v13 + 96) = v12;
      *(void *)(v13 + 104) = v16;
      *(void *)(v13 + 64) = v16;
      *(void *)(v13 + 72) = v18;
      *(void *)(v13 + 80) = v17;
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      uint64_t v19 = (void *)sub_1AFFCB638();
      sub_1AFFCB478();
      sub_1AFFCA878();
      swift_bridgeObjectRelease();

      *(void *)&long long v38 = MEMORY[0x1E4FBC860];
      *((void *)&v38 + 1) = v18;
      *(void *)&v39[0] = v17;
      sub_1AFDF97C0((uint64_t)v40, (uint64_t)v39 + 8);
      sub_1AFFC8E38();
      sub_1AFD76370((uint64_t)v40);
      sub_1AFE131B8((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for NewsFeedRequest);
      long long v48 = v39[5];
      long long v49 = v39[6];
      long long v50 = v39[7];
      long long v51 = v39[8];
      long long v44 = v39[1];
      long long v45 = v39[2];
      long long v46 = v39[3];
      long long v47 = v39[4];
      long long v42 = v38;
      long long v43 = v39[0];
      uint64_t v20 = v52;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1AFD9DBA0(0, *(void *)(v20 + 16) + 1, 1);
        uint64_t v20 = v52;
      }
      unint64_t v22 = *(void *)(v20 + 16);
      unint64_t v21 = *(void *)(v20 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_1AFD9DBA0(v21 > 1, v22 + 1, 1);
        uint64_t v20 = v52;
      }
      *(void *)(v20 + 16) = v22 + 1;
      uint64_t v23 = (_OWORD *)(v20 + 160 * v22);
      long long v24 = v43;
      v23[2] = v42;
      v23[3] = v24;
      long long v25 = v44;
      long long v26 = v45;
      long long v27 = v47;
      v23[6] = v46;
      v23[7] = v27;
      v23[4] = v25;
      v23[5] = v26;
      long long v28 = v48;
      long long v29 = v49;
      long long v30 = v51;
      v23[10] = v50;
      v23[11] = v30;
      v23[8] = v28;
      _OWORD v23[9] = v29;
      v11 += v35;
      --v9;
    }
    while (v9);
    v33(v20);
  }
  else
  {
    a2(MEMORY[0x1E4FBC860]);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFE13008()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();

  return MEMORY[0x1F4186498](v0, 80, 7);
}

void sub_1AFE13068(uint64_t a1)
{
  sub_1AFE09A94(a1, *(void *)(v1 + 16), *(void (**)(void *))(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void (**)(void))(v1 + 64));
}

uint64_t sub_1AFE1309C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1AFE130C4@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1AFE09C44(a1, *(void *)(v2 + 16), *(void **)(v2 + 24), *(void **)(v2 + 32), a2);
}

uint64_t sub_1AFE130E4(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1AFE13524(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1AFE13164(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

double sub_1AFE1317C(_OWORD *a1)
{
  double result = 0.0;
  a1[8] = 0u;
  a1[9] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

double sub_1AFE13198(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0x1FFFFFFFELL;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  return result;
}

uint64_t sub_1AFE131B8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1AFE13218(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 152);
  uint64_t v13 = *(void *)(a1 + 144);
  uint64_t v3 = *(void *)(a1 + 160);
  uint64_t v4 = *(void *)(a1 + 168);
  uint64_t v5 = *(void *)(a1 + 176);
  uint64_t v6 = *(void *)(a1 + 184);
  uint64_t v7 = *(void *)(a1 + 192);
  uint64_t v8 = *(void *)(a1 + 200);
  long long v12 = *(_OWORD *)(a1 + 208);
  long long v10 = *(_OWORD *)(a1 + 240);
  long long v11 = *(_OWORD *)(a1 + 224);
  sub_1AFD2D0A0(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void **)(a1 + 96), *(void *)(a1 + 104));
  sub_1AFD2D0A0(v13, v2, v3, v4, v5, v6, v7, v8, v12, *((uint64_t *)&v12 + 1), v11, *((uint64_t *)&v11 + 1), (void *)v10, *((uint64_t *)&v10 + 1));
  return a1;
}

uint64_t sub_1AFE1330C()
{
  uint64_t v1 = v0 + 16;
  switch(*(unsigned char *)(v0 + 64))
  {
    case 0:
      swift_unknownObjectRelease();
      uint64_t v1 = v0 + 24;
      goto LABEL_4;
    case 1:
      swift_unknownObjectRelease();
      break;
    case 2:
LABEL_4:
      __swift_destroy_boxed_opaque_existential_1(v1);
      break;
    case 3:
    case 6:
    case 7:
    case 8:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }

  return MEMORY[0x1F4186498](v0, 65, 7);
}

uint64_t sub_1AFE133B8(uint64_t a1, uint64_t a2)
{
  return a2;
}

BOOL sub_1AFE13414(uint64_t a1)
{
  return sub_1AFF71A50(a1);
}

uint64_t sub_1AFE1341C(uint64_t a1, uint64_t a2)
{
  sub_1AFE13524(0, &qword_1E9AFB0C8, (uint64_t)&type metadata for HeadlineCondition, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AFE134A4(uint64_t a1)
{
  sub_1AFE13524(0, &qword_1E9AFB0C8, (uint64_t)&type metadata for HeadlineCondition, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1AFE13524(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1AFE13570(uint64_t a1)
{
  return sub_1AFE0A8B0(a1, *(void *)(v1 + 16), *(uint64_t **)(v1 + 24), *(void *)(v1 + 32)) & 1;
}

void sub_1AFE13594()
{
  if (!qword_1EB8176C8)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB8176C8);
    }
  }
}

void sub_1AFE135F8()
{
  if (!qword_1E9AFB0D0)
  {
    sub_1AFE13524(255, &qword_1E9AFB0C8, (uint64_t)&type metadata for HeadlineCondition, MEMORY[0x1E4FBB718]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1E9AFB0D0);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for NewsFeedServiceError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *double result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFE1374CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NewsFeedServiceError()
{
  return &type metadata for NewsFeedServiceError;
}

unint64_t sub_1AFE13788()
{
  unint64_t result = qword_1E9AFB0D8;
  if (!qword_1E9AFB0D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB0D8);
  }
  return result;
}

BOOL sub_1AFE137F4(uint64_t a1)
{
  return sub_1AFE0F960(a1);
}

uint64_t sub_1AFE13810(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Quote();
  MEMORY[0x1F4188790](v4 - 8);
  unsigned int v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Chart(0);
  MEMORY[0x1F4188790](v7 - 8);
  int64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v10 = *(unsigned __int8 *)(a1 + 128);
  sub_1AFE1396C(v2, (uint64_t)v9, type metadata accessor for Chart);
  sub_1AFE1396C(a1, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for Quote);
  if (v10 <= 1) {
    char v11 = sub_1AFE139D4((uint64_t)v6);
  }
  else {
    char v11 = 1;
  }
  sub_1AFE143FC((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for Quote);
  sub_1AFE143FC((uint64_t)v9, type metadata accessor for Chart);
  return v11 & 1;
}

uint64_t sub_1AFE1396C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1AFE139D4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v79 = a1;
  sub_1AFD30DA8();
  uint64_t v4 = v3;
  uint64_t v72 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v66 = (uint64_t)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v65 = (uint64_t)&v64 - v7;
  MEMORY[0x1F4188790](v8);
  uint64_t v67 = (uint64_t)&v64 - v9;
  sub_1AFE1445C();
  uint64_t v71 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v74 = (uint64_t)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFE144DC(0, &qword_1EB817EF0, (void (*)(uint64_t))sub_1AFD30DA8);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v68 = (uint64_t)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v76 = (uint64_t)&v64 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v75 = (uint64_t)&v64 - v17;
  uint64_t v18 = type metadata accessor for Chart(0);
  MEMORY[0x1F4188790](v18);
  uint64_t v81 = (uint64_t)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for Quote();
  MEMORY[0x1F4188790](v20);
  uint64_t v80 = (uint64_t)&v64 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v78 = (char *)&v64 - v23;
  long long v24 = (void (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1AFE144DC(0, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928]);
  MEMORY[0x1F4188790](v25 - 8);
  long long v27 = (char *)&v64 - v26;
  uint64_t v28 = sub_1AFFC98F8();
  uint64_t v29 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  long long v31 = (char *)&v64 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v33 = MEMORY[0x1F4188790](v32);
  uint64_t v35 = (char *)&v64 - v34;
  uint64_t v70 = v18;
  uint64_t v36 = *(int *)(v18 + 20);
  uint64_t v77 = v2;
  uint64_t v73 = v4;
  uint64_t v37 = v2 + v36 + *(int *)(v4 + 36);
  long long v38 = *(void (**)(char *, uint64_t, uint64_t, double))(v29 + 16);
  v38((char *)&v64 - v34, v37, v28, v33);
  uint64_t v69 = v20;
  uint64_t v39 = *(int *)(v20 + 92);
  uint64_t v41 = (uint64_t)v78;
  uint64_t v40 = v79;
  sub_1AFE14530(v79 + v39, (uint64_t)v27, (unint64_t *)&qword_1EB818BA0, v24);
  sub_1AFE1396C(v40, v41, (uint64_t (*)(void))type metadata accessor for Quote);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28) == 1)
  {
    ((void (*)(char *, uint64_t, uint64_t))v38)(v31, v41 + *(int *)(v69 + 88), v28);
    sub_1AFE143FC(v41, (uint64_t (*)(void))type metadata accessor for Quote);
    sub_1AFE1459C((uint64_t)v27, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928]);
  }
  else
  {
    sub_1AFE143FC(v41, (uint64_t (*)(void))type metadata accessor for Quote);
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v31, v27, v28);
  }
  uint64_t v42 = v80;
  uint64_t v43 = v81;
  uint64_t v44 = v40;
  uint64_t v45 = v77;
  sub_1AFE1465C((unint64_t *)&qword_1EB816CA0);
  char v46 = sub_1AFFCAD98();
  long long v47 = *(void (**)(char *, uint64_t))(v29 + 8);
  v47(v31, v28);
  v47(v35, v28);
  sub_1AFE1396C(v45, v43, type metadata accessor for Chart);
  sub_1AFE1396C(v44, v42, (uint64_t (*)(void))type metadata accessor for Quote);
  if ((v46 & 1) == 0)
  {
    sub_1AFE143FC(v42, (uint64_t (*)(void))type metadata accessor for Quote);
    sub_1AFE143FC(v43, type metadata accessor for Chart);
    goto LABEL_9;
  }
  uint64_t v48 = v75;
  sub_1AFE1396C(v43 + *(int *)(v70 + 20), v75, (uint64_t (*)(void))sub_1AFD30DA8);
  uint64_t v50 = v72;
  uint64_t v49 = v73;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v72 + 56))(v48, 0, 1, v73);
  uint64_t v51 = v76;
  sub_1AFE77068(v76);
  uint64_t v52 = v74;
  uint64_t v53 = v74 + *(int *)(v71 + 48);
  sub_1AFE14530(v48, v74, &qword_1EB817EF0, (void (*)(uint64_t))sub_1AFD30DA8);
  sub_1AFE14530(v51, v53, &qword_1EB817EF0, (void (*)(uint64_t))sub_1AFD30DA8);
  uint64_t v54 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48);
  if (v54(v52, 1, v49) == 1)
  {
    sub_1AFE1459C(v51, &qword_1EB817EF0, (void (*)(uint64_t))sub_1AFD30DA8);
    sub_1AFE1459C(v48, &qword_1EB817EF0, (void (*)(uint64_t))sub_1AFD30DA8);
    sub_1AFE143FC(v42, (uint64_t (*)(void))type metadata accessor for Quote);
    sub_1AFE143FC(v81, type metadata accessor for Chart);
    if (v54(v53, 1, v49) == 1)
    {
      sub_1AFE1459C(v52, &qword_1EB817EF0, (void (*)(uint64_t))sub_1AFD30DA8);
LABEL_9:
      char v55 = 1;
      return v55 & 1;
    }
LABEL_12:
    sub_1AFE143FC(v52, (uint64_t (*)(void))sub_1AFE1445C);
    char v55 = 0;
    return v55 & 1;
  }
  uint64_t v56 = v81;
  uint64_t v57 = v68;
  sub_1AFE14530(v52, v68, &qword_1EB817EF0, (void (*)(uint64_t))sub_1AFD30DA8);
  if (v54(v53, 1, v49) == 1)
  {
    sub_1AFE1459C(v76, &qword_1EB817EF0, (void (*)(uint64_t))sub_1AFD30DA8);
    sub_1AFE1459C(v48, &qword_1EB817EF0, (void (*)(uint64_t))sub_1AFD30DA8);
    sub_1AFE143FC(v80, (uint64_t (*)(void))type metadata accessor for Quote);
    sub_1AFE143FC(v56, type metadata accessor for Chart);
    sub_1AFE143FC(v57, (uint64_t (*)(void))sub_1AFD30DA8);
    goto LABEL_12;
  }
  uint64_t v58 = v67;
  sub_1AFE145F8(v53, v67);
  sub_1AFE1465C(&qword_1EB816CA8);
  char v59 = sub_1AFFCADD8();
  uint64_t v60 = v65;
  sub_1AFE1396C(v57, v65, (uint64_t (*)(void))sub_1AFD30DA8);
  uint64_t v61 = v58;
  uint64_t v62 = v66;
  sub_1AFE1396C(v61, v66, (uint64_t (*)(void))sub_1AFD30DA8);
  if (v59) {
    char v55 = sub_1AFFCADD8();
  }
  else {
    char v55 = 0;
  }
  sub_1AFE143FC(v62, (uint64_t (*)(void))sub_1AFD30DA8);
  sub_1AFE143FC(v60, (uint64_t (*)(void))sub_1AFD30DA8);
  sub_1AFE143FC(v67, (uint64_t (*)(void))sub_1AFD30DA8);
  sub_1AFE1459C(v76, &qword_1EB817EF0, (void (*)(uint64_t))sub_1AFD30DA8);
  sub_1AFE1459C(v75, &qword_1EB817EF0, (void (*)(uint64_t))sub_1AFD30DA8);
  sub_1AFE143FC(v80, (uint64_t (*)(void))type metadata accessor for Quote);
  sub_1AFE143FC(v56, type metadata accessor for Chart);
  sub_1AFE143FC(v57, (uint64_t (*)(void))sub_1AFD30DA8);
  sub_1AFE1459C(v52, &qword_1EB817EF0, (void (*)(uint64_t))sub_1AFD30DA8);
  return v55 & 1;
}

uint64_t sub_1AFE143FC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1AFE1445C()
{
  if (!qword_1EB811AE0)
  {
    sub_1AFE144DC(255, &qword_1EB817EF0, (void (*)(uint64_t))sub_1AFD30DA8);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB811AE0);
    }
  }
}

void sub_1AFE144DC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1AFFCB658();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1AFE14530(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1AFE144DC(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1AFE1459C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1AFE144DC(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1AFE145F8(uint64_t a1, uint64_t a2)
{
  sub_1AFD30DA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AFE1465C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1AFFC98F8();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for YahooStockMetadataService()
{
  return self;
}

uint64_t sub_1AFE146C4(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v56 = a1;
  uint64_t v49 = a4;
  uint64_t v53 = a3;
  uint64_t v7 = sub_1AFFC9E18();
  uint64_t v48 = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1AFFC98F8();
  uint64_t v52 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a2[1];
  uint64_t v50 = *a2;
  uint64_t v16 = v50;
  uint64_t v44 = v15;
  uint64_t v17 = a2[2];
  uint64_t v18 = a2[3];
  uint64_t v46 = v17;
  uint64_t v57 = sub_1AFFC9EF8();
  uint64_t v54 = v55 + 16;
  sub_1AFD2CEB0(v55 + 16, (uint64_t)v58);
  uint64_t v51 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v51(v14, a3, v11);
  long long v47 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v47(v10, a4, v7);
  uint64_t v19 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v58, v59);
  double v20 = MEMORY[0x1F4188790](v19);
  uint64_t v22 = (uint64_t *)((char *)&v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v23 + 16))(v22, v20);
  uint64_t v24 = *v22;
  uint64_t v25 = v56;
  sub_1AFFC8E38();
  uint64_t v26 = v44;
  sub_1AFFC8E38();
  uint64_t v45 = v18;
  sub_1AFFC8E38();
  uint64_t v27 = v16;
  uint64_t v28 = v46;
  id v29 = sub_1AFE157CC(v25, v24, v27, v26, v46, v18, (uint64_t)v14, (uint64_t)v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
  uint64_t v55 = sub_1AFFC9EC8();

  sub_1AFD2CEB0(v54, (uint64_t)v58);
  v51(v14, v53, v52);
  v47(v10, v49, v48);
  uint64_t v30 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v58, v59);
  double v31 = MEMORY[0x1F4188790](v30);
  double v33 = (uint64_t *)((char *)&v44 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v34 + 16))(v33, v31);
  uint64_t v35 = *v33;
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  uint64_t v36 = v45;
  sub_1AFFC8E38();
  id v37 = sub_1AFE1553C(v25, v35, v50, v26, v28, v36, (uint64_t)v14, (uint64_t)v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
  sub_1AFFC9EC8();

  long long v38 = (void *)sub_1AFFCA5E8();
  sub_1AFFCA5D8();
  swift_release();
  swift_release();

  uint64_t v39 = swift_allocObject();
  *(void *)(v39 + 16) = v25;
  uint64_t v40 = swift_allocObject();
  *(void *)(v40 + 16) = sub_1AFE15A94;
  *(void *)(v40 + 24) = v39;
  sub_1AFFC8E38();
  uint64_t v41 = (void *)sub_1AFFCA5E8();
  sub_1AFD8169C();
  uint64_t v42 = sub_1AFFCA678();
  swift_release();
  swift_release();

  return v42;
}

uint64_t sub_1AFE14B9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = MEMORY[0x1E4FBC868];
  uint64_t v11 = MEMORY[0x1E4FBC868];
  uint64_t v5 = *(void *)(a3 + 16);
  if (v5)
  {
    sub_1AFFC8E38();
    uint64_t v8 = (uint64_t *)(a3 + 40);
    do
    {
      uint64_t v9 = *v8;
      v10[0] = *(v8 - 1);
      v10[1] = v9;
      sub_1AFFC8E38();
      sub_1AFE14C70(&v11, v10, a1, a2);
      v8 += 2;
      swift_bridgeObjectRelease();
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
    return v11;
  }
  return result;
}

uint64_t sub_1AFE14C70(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v64 = a1;
  sub_1AFE15B1C(0, &qword_1EB81B2B0, (void (*)(uint64_t))type metadata accessor for YahooMultiQuoteItem);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v61 = (uint64_t)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  id v63 = (char *)&v57 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v57 - v12;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v57 - v15;
  MEMORY[0x1F4188790](v17);
  uint64_t v65 = (uint64_t)&v57 - v18;
  sub_1AFE15B1C(0, &qword_1EB81B2B8, (void (*)(uint64_t))type metadata accessor for YahooQuoteDetailItem);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v21 = (char *)&v57 - v20;
  uint64_t v22 = type metadata accessor for YahooQuoteDetailItem(0);
  uint64_t v23 = *(void *)(v22 - 8);
  double v24 = MEMORY[0x1F4188790](v22);
  uint64_t v26 = (uint64_t *)((char *)&v57 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a3 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v23 + 56))(v21, 1, 1, v22, v24);
    return sub_1AFE15C54((uint64_t)v21, &qword_1EB81B2B8, (void (*)(uint64_t))type metadata accessor for YahooQuoteDetailItem);
  }
  uint64_t v27 = *a2;
  uint64_t v28 = a2[1];
  sub_1AFFC8E38();
  uint64_t v62 = v27;
  unint64_t v29 = sub_1AFD79CC8(v27, v28);
  if (v30)
  {
    sub_1AFE15D90(*(void *)(a3 + 56) + *(void *)(v23 + 72) * v29, (uint64_t)v21, type metadata accessor for YahooQuoteDetailItem);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v21, 0, 1, v22);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v21, 1, 1, v22);
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1) {
    return sub_1AFE15C54((uint64_t)v21, &qword_1EB81B2B8, (void (*)(uint64_t))type metadata accessor for YahooQuoteDetailItem);
  }
  sub_1AFE15B70((uint64_t)v21, (uint64_t)v26);
  if (*(void *)(a4 + 16))
  {
    sub_1AFFC8E38();
    unint64_t v32 = sub_1AFD79CC8(v62, v28);
    if (v33)
    {
      unint64_t v34 = v32;
      uint64_t v35 = *(void *)(a4 + 56);
      uint64_t v36 = type metadata accessor for YahooMultiQuoteItem(0);
      uint64_t v37 = *(void *)(v36 - 8);
      uint64_t v38 = v35 + *(void *)(v37 + 72) * v34;
      uint64_t v39 = v65;
      sub_1AFE15D90(v38, v65, type metadata accessor for YahooMultiQuoteItem);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v37 + 56))(v39, 0, 1, v36);
    }
    else
    {
      uint64_t v42 = type metadata accessor for YahooMultiQuoteItem(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v65, 1, 1, v42);
    }
    swift_bridgeObjectRelease();
    uint64_t v41 = v26[1];
    if (v41) {
      goto LABEL_15;
    }
LABEL_12:
    sub_1AFFC8E38();
    uint64_t v58 = v62;
    uint64_t v57 = v28;
    goto LABEL_16;
  }
  uint64_t v40 = type metadata accessor for YahooMultiQuoteItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v65, 1, 1, v40);
  uint64_t v41 = v26[1];
  if (!v41) {
    goto LABEL_12;
  }
LABEL_15:
  uint64_t v58 = *v26;
  uint64_t v57 = v41;
LABEL_16:
  uint64_t v43 = v26[3];
  uint64_t v59 = v26[2];
  uint64_t v44 = *(uint64_t *)((char *)v26 + *(int *)(v22 + 84) + 8);
  sub_1AFE15BD4(v65, (uint64_t)v16);
  uint64_t v60 = v43;
  if (!v44)
  {
    sub_1AFE15BD4((uint64_t)v16, (uint64_t)v13);
    uint64_t v46 = type metadata accessor for YahooMultiQuoteItem(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v46 - 8) + 48))(v13, 1, v46) == 1)
    {
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      swift_bridgeObjectRetain_n();
      sub_1AFE15C54((uint64_t)v13, &qword_1EB81B2B0, (void (*)(uint64_t))type metadata accessor for YahooMultiQuoteItem);
      uint64_t v45 = (uint64_t)v63;
    }
    else
    {
      uint64_t v47 = *(void *)&v13[*(int *)(v46 + 64) + 8];
      sub_1AFFC8E38();
      swift_bridgeObjectRetain_n();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFE15D30((uint64_t)v13, type metadata accessor for YahooMultiQuoteItem);
      uint64_t v45 = (uint64_t)v63;
      if (v47)
      {
        sub_1AFE15C54((uint64_t)v16, &qword_1EB81B2B0, (void (*)(uint64_t))type metadata accessor for YahooMultiQuoteItem);
        goto LABEL_23;
      }
    }
    sub_1AFE15C54((uint64_t)v16, &qword_1EB81B2B0, (void (*)(uint64_t))type metadata accessor for YahooMultiQuoteItem);
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  sub_1AFFC8E38();
  swift_bridgeObjectRetain_n();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFE15C54((uint64_t)v16, &qword_1EB81B2B0, (void (*)(uint64_t))type metadata accessor for YahooMultiQuoteItem);
  uint64_t v45 = (uint64_t)v63;
LABEL_23:
  sub_1AFF39F88((char *)&v67);
  swift_bridgeObjectRelease();
  uint64_t v48 = (uint64_t *)((char *)v26 + *(int *)(v22 + 80));
  uint64_t v49 = *v48;
  uint64_t v50 = v48[1];
  sub_1AFE15BD4(v65, v45);
  if (v50)
  {
    sub_1AFFC8E38();
    sub_1AFE15C54(v45, &qword_1EB81B2B0, (void (*)(uint64_t))type metadata accessor for YahooMultiQuoteItem);
  }
  else
  {
    uint64_t v51 = v61;
    sub_1AFE15CB0(v45, v61);
    uint64_t v52 = type metadata accessor for YahooMultiQuoteItem(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 48))(v51, 1, v52) == 1)
    {
      sub_1AFE15C54(v51, &qword_1EB81B2B0, (void (*)(uint64_t))type metadata accessor for YahooMultiQuoteItem);
      uint64_t v49 = 0;
      uint64_t v50 = 0;
    }
    else
    {
      uint64_t v53 = (uint64_t *)(v51 + *(int *)(v52 + 60));
      uint64_t v49 = *v53;
      uint64_t v50 = v53[1];
      sub_1AFFC8E38();
      sub_1AFE15D30(v51, type metadata accessor for YahooMultiQuoteItem);
    }
  }
  uint64_t v54 = v64;
  uint64_t v55 = v62;
  sub_1AFD789F8(v62, v28, v58, v57, v59, v60, (char *)&v67, v49, (uint64_t)v66, v50, 0, 0, 0, 0, 0, 0);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v67 = *v54;
  *uint64_t v54 = 0x8000000000000000;
  sub_1AFE03CB0((uint64_t)v66, v55, v28, isUniquelyReferenced_nonNull_native);
  *uint64_t v54 = v67;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1AFE15C54(v65, &qword_1EB81B2B0, (void (*)(uint64_t))type metadata accessor for YahooMultiQuoteItem);
  return sub_1AFE15D30((uint64_t)v26, type metadata accessor for YahooQuoteDetailItem);
}

uint64_t sub_1AFE15518(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1AFE146C4(a1, a2, a3, a4);
}

id sub_1AFE1553C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v34 = a7;
  uint64_t v35 = a8;
  uint64_t v14 = type metadata accessor for YahooBaseOperationFactory();
  v38[3] = v14;
  v38[4] = &off_1F0877A08;
  v38[0] = a2;
  uint64_t v15 = (objc_class *)type metadata accessor for YahooMultiQuoteOperation(0);
  uint64_t v16 = (char *)objc_allocWithZone(v15);
  uint64_t v17 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v38, v14);
  double v18 = MEMORY[0x1F4188790](v17);
  uint64_t v20 = (uint64_t *)((char *)&v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v21 + 16))(v20, v18);
  uint64_t v22 = *v20;
  _OWORD v37[3] = v14;
  v37[4] = &off_1F0877A08;
  v37[0] = v22;
  *(void *)&v16[qword_1EB81B530] = a1;
  sub_1AFD2CEB0((uint64_t)v37, (uint64_t)&v16[qword_1EB81B538]);
  uint64_t v23 = &v16[qword_1EB81B540];
  *(void *)uint64_t v23 = a3;
  *((void *)v23 + 1) = a4;
  *((void *)v23 + 2) = a5;
  *((void *)v23 + 3) = a6;
  double v24 = &v16[qword_1E9AFCA00];
  uint64_t v25 = sub_1AFFC98F8();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = v34;
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v24, v34, v25);
  uint64_t v28 = &v16[qword_1EB81B548];
  uint64_t v29 = sub_1AFFC9E18();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = v35;
  (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v28, v35, v29);
  v36.receiver = v16;
  v36.super_class = v15;
  id v32 = objc_msgSendSuper2(&v36, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v31, v29);
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v27, v25);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  return v32;
}

id sub_1AFE157CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v34 = a7;
  uint64_t v35 = a8;
  uint64_t v14 = type metadata accessor for YahooBaseOperationFactory();
  v38[3] = v14;
  v38[4] = &off_1F0877A08;
  v38[0] = a2;
  uint64_t v15 = (objc_class *)type metadata accessor for YahooQuoteDetailOperation(0);
  uint64_t v16 = (char *)objc_allocWithZone(v15);
  uint64_t v17 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v38, v14);
  double v18 = MEMORY[0x1F4188790](v17);
  uint64_t v20 = (uint64_t *)((char *)&v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v21 + 16))(v20, v18);
  uint64_t v22 = *v20;
  _OWORD v37[3] = v14;
  v37[4] = &off_1F0877A08;
  v37[0] = v22;
  *(void *)&v16[qword_1EB81B828] = a1;
  sub_1AFD2CEB0((uint64_t)v37, (uint64_t)&v16[qword_1EB81B830]);
  uint64_t v23 = &v16[qword_1EB81B838];
  *(void *)uint64_t v23 = a3;
  *((void *)v23 + 1) = a4;
  *((void *)v23 + 2) = a5;
  *((void *)v23 + 3) = a6;
  double v24 = &v16[qword_1E9AFD260];
  uint64_t v25 = sub_1AFFC98F8();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = v34;
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v24, v34, v25);
  uint64_t v28 = &v16[qword_1EB81B840];
  uint64_t v29 = sub_1AFFC9E18();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = v35;
  (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v28, v35, v29);
  v36.receiver = v16;
  v36.super_class = v15;
  id v32 = objc_msgSendSuper2(&v36, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v31, v29);
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v27, v25);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  return v32;
}

uint64_t sub_1AFE15A5C()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1AFE15A94(uint64_t a1, uint64_t a2)
{
  return sub_1AFE14B9C(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_1AFE15A9C()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1AFE15AD4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void))(v2 + 16))(*a1, a1[1]);
  *a2 = result;
  return result;
}

void sub_1AFE15B1C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1AFFCB658();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1AFE15B70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for YahooQuoteDetailItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AFE15BD4(uint64_t a1, uint64_t a2)
{
  sub_1AFE15B1C(0, &qword_1EB81B2B0, (void (*)(uint64_t))type metadata accessor for YahooMultiQuoteItem);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AFE15C54(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1AFE15B1C(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1AFE15CB0(uint64_t a1, uint64_t a2)
{
  sub_1AFE15B1C(0, &qword_1EB81B2B0, (void (*)(uint64_t))type metadata accessor for YahooMultiQuoteItem);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AFE15D30(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1AFE15D90(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1AFE15DF8(uint64_t a1, long long *a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  sub_1AFD80454(a2, v4 + 24);
  return v4;
}

uint64_t sub_1AFE15E4C@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_1AFE15E54()
{
  uint64_t v1 = *v0;
  uint64_t v2 = sub_1AFFCAF28();
  if (*(void *)(v1 + 16) && (unint64_t v4 = sub_1AFD79CC8(v2, v3), (v5 & 1) != 0))
  {
    uint64_t v6 = *(void *)(*(void *)(v1 + 56) + 16 * v4);
    sub_1AFFC8E38();
  }
  else
  {
    uint64_t v6 = 0;
  }
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1AFE15EC8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = a1 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  sub_1AFFC8E38();
  int64_t v8 = 0;
  uint64_t v9 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v36 = v3;
  int64_t v37 = v7;
  if (!v6) {
    goto LABEL_7;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (unint64_t i = v10 | (v8 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v8 << 6))
  {
    uint64_t v12 = *(void *)(a1 + 56) + 104 * i;
    uint64_t v13 = *(void *)(v12 + 72);
    if (!v13)
    {
      if (v6) {
        goto LABEL_4;
      }
      goto LABEL_7;
    }
    uint64_t v38 = *(void *)(v12 + 64);
    uint64_t v39 = sub_1AFFCAF28();
    uint64_t v40 = v17;
    sub_1AFFC8E38();
    swift_bridgeObjectRetain_n();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v20 = sub_1AFD79CC8(v39, v40);
    uint64_t v21 = v9[2];
    BOOL v22 = (v19 & 1) == 0;
    uint64_t v23 = v21 + v22;
    if (__OFADD__(v21, v22)) {
      goto LABEL_39;
    }
    char v24 = v19;
    if (v9[3] >= v23)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_1AFEB8068();
      }
      uint64_t v25 = v40;
      if ((v24 & 1) == 0) {
        goto LABEL_25;
      }
    }
    else
    {
      sub_1AFEB2018(v23, isUniquelyReferenced_nonNull_native);
      uint64_t v25 = v40;
      unint64_t v26 = sub_1AFD79CC8(v39, v40);
      if ((v24 & 1) != (v27 & 1)) {
        goto LABEL_42;
      }
      unint64_t v20 = v26;
      if ((v24 & 1) == 0)
      {
LABEL_25:
        v9[(v20 >> 6) + 8] |= 1 << v20;
        uint64_t v28 = (uint64_t *)(v9[6] + 16 * v20);
        *uint64_t v28 = v39;
        v28[1] = v25;
        uint64_t v29 = (void *)(v9[7] + 16 * v20);
        void *v29 = v38;
        v29[1] = v13;
        uint64_t v30 = v9[2];
        BOOL v31 = __OFADD__(v30, 1);
        uint64_t v32 = v30 + 1;
        if (v31) {
          goto LABEL_40;
        }
        void v9[2] = v32;
        sub_1AFFC8E38();
        goto LABEL_31;
      }
    }
    char v33 = (void *)(v9[7] + 16 * v20);
    swift_bridgeObjectRelease();
    *char v33 = v38;
    v33[1] = v13;
LABEL_31:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v3 = v36;
    int64_t v7 = v37;
    if (v6) {
      goto LABEL_4;
    }
LABEL_7:
    int64_t v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    if (v14 >= v7) {
      goto LABEL_37;
    }
    unint64_t v15 = *(void *)(v3 + 8 * v14);
    ++v8;
    if (!v15)
    {
      int64_t v8 = v14 + 1;
      if (v14 + 1 >= v7) {
        goto LABEL_37;
      }
      unint64_t v15 = *(void *)(v3 + 8 * v8);
      if (!v15)
      {
        int64_t v8 = v14 + 2;
        if (v14 + 2 >= v7) {
          goto LABEL_37;
        }
        unint64_t v15 = *(void *)(v3 + 8 * v8);
        if (!v15)
        {
          int64_t v8 = v14 + 3;
          if (v14 + 3 >= v7) {
            goto LABEL_37;
          }
          unint64_t v15 = *(void *)(v3 + 8 * v8);
          if (!v15)
          {
            int64_t v8 = v14 + 4;
            if (v14 + 4 >= v7) {
              goto LABEL_37;
            }
            unint64_t v15 = *(void *)(v3 + 8 * v8);
            if (!v15) {
              break;
            }
          }
        }
      }
    }
LABEL_36:
    unint64_t v6 = (v15 - 1) & v15;
  }
  int64_t v16 = v14 + 5;
  if (v16 >= v7)
  {
LABEL_37:
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
    *a2 = v9;
    return result;
  }
  unint64_t v15 = *(void *)(v3 + 8 * v16);
  if (v15)
  {
    int64_t v8 = v16;
    goto LABEL_36;
  }
  while (1)
  {
    int64_t v8 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v8 >= v7) {
      goto LABEL_37;
    }
    unint64_t v15 = *(void *)(v3 + 8 * v8);
    ++v16;
    if (v15) {
      goto LABEL_36;
    }
  }
LABEL_41:
  __break(1u);
LABEL_42:
  uint64_t result = sub_1AFFCBD68();
  __break(1u);
  return result;
}

uint64_t sub_1AFE16258(uint64_t a1, long long *a2)
{
  *(void *)(v2 + 16) = a1;
  sub_1AFD80454(a2, v2 + 24);
  return v2;
}

uint64_t sub_1AFE16284()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return v0;
}

uint64_t sub_1AFE162AC()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);

  return swift_deallocClassInstance();
}

uint64_t sub_1AFE162EC()
{
  sub_1AFE16598();
  sub_1AFFCA7C8();
  uint64_t v0 = (void *)sub_1AFFCA5E8();
  uint64_t v1 = sub_1AFFCA668();
  swift_release();

  return v1;
}

uint64_t sub_1AFE16388(uint64_t a1, uint64_t a2)
{
  sub_1AFE166CC();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  uint64_t v6 = sub_1AFFC9DE8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  uint64_t v7 = sub_1AFE58214(a2);
  sub_1AFD562CC((uint64_t)v5);
  return v7;
}

uint64_t sub_1AFE16480()
{
  uint64_t v0 = sub_1AFFC8E38();
  sub_1AFE15EC8(v0, &v2);
  sub_1AFE16674();
  swift_allocObject();
  return sub_1AFFCA6F8();
}

uint64_t sub_1AFE164DC()
{
  sub_1AFE16598();
  sub_1AFFCA7C8();
  uint64_t v0 = (void *)sub_1AFFCA5E8();
  uint64_t v1 = sub_1AFFCA668();
  swift_release();

  return v1;
}

uint64_t sub_1AFE1657C()
{
  return sub_1AFE16388(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_1AFE16598()
{
  if (!qword_1EB817E58)
  {
    unint64_t v0 = sub_1AFFCAD18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB817E58);
    }
  }
}

ValueMetadata *type metadata accessor for StockEntityTable()
{
  return &type metadata for StockEntityTable;
}

uint64_t sub_1AFE16610(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t type metadata accessor for StockEntityService()
{
  return self;
}

uint64_t sub_1AFE16648(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for StockEntityService);
}

uint64_t sub_1AFE16660()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

void sub_1AFE16674()
{
  if (!qword_1EB817D70)
  {
    unint64_t v0 = sub_1AFFCA788();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB817D70);
    }
  }
}

void sub_1AFE166CC()
{
  if (!qword_1EB817C98)
  {
    sub_1AFFC9DE8();
    unint64_t v0 = sub_1AFFCB658();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB817C98);
    }
  }
}

uint64_t sub_1AFE16724()
{
  return sub_1AFE1657C();
}

uint64_t SymbolEntity.init(from:)@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1AFE17D7C(0, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v44 = (char *)&v38 - v5;
  uint64_t v40 = sub_1AFFC9368();
  uint64_t v39 = *(void *)(v40 - 8);
  MEMORY[0x1F4188790](v40);
  uint64_t v43 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_1AFFC96E8();
  uint64_t v41 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v38 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1AFFC9528();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1AFFC9A78();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v13 = sub_1AFFCAE58();
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v14 = sub_1AFFC9548();
  MEMORY[0x1F4188790](v14 - 8);
  int64_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v17 = a1[7];
  long long v52 = a1[6];
  long long v53 = v17;
  uint64_t v54 = *((void *)a1 + 16);
  long long v18 = a1[3];
  long long v48 = a1[2];
  long long v49 = v18;
  long long v19 = a1[5];
  long long v50 = a1[4];
  long long v51 = v19;
  long long v20 = a1[1];
  long long v46 = *a1;
  long long v47 = v20;
  sub_1AFD823E8();
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  uint64_t v21 = *MEMORY[0x1E4F275D0];
  BOOL v22 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v22(v11, v21, v8);
  sub_1AFFC9558();
  *(void *)(a2 + 16) = MEMORY[0x1B3E8AFE0](v16);
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  v22(v11, v21, v8);
  sub_1AFFC9558();
  *(void *)(a2 + 24) = MEMORY[0x1B3E8AFE0](v16);
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  uint64_t v23 = v8;
  char v24 = v43;
  v22(v11, v21, v23);
  uint64_t v25 = v41;
  uint64_t v26 = v42;
  sub_1AFFC9558();
  uint64_t v27 = MEMORY[0x1B3E8AFE0](v16);
  long long v28 = v47;
  *(_OWORD *)a2 = v47;
  uint64_t v29 = *((void *)&v50 + 1);
  uint64_t v30 = v51;
  *(void *)(a2 + 32) = v27;
  *(void *)(a2 + 40) = v29;
  uint64_t v31 = *((void *)&v51 + 1);
  uint64_t v32 = v52;
  *(void *)(a2 + 48) = v30;
  *(void *)(a2 + 56) = v31;
  *(void *)(a2 + 64) = v32;
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  char v33 = v44;
  sub_1AFFC8E38();
  sub_1AFD76370((uint64_t)&v46);
  sub_1AFFC9358();
  sub_1AFFC9348();
  MEMORY[0x1B3E8B780](0xD000000000000010, 0x80000001AFFF10B0);
  *(void *)&long long v45 = 0x2F6C6F626D79732FLL;
  *((void *)&v45 + 1) = 0xE800000000000000;
  sub_1AFFCAFA8();
  sub_1AFFC9338();
  sub_1AFFC9318();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48))(v33, 1, v26);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v39 + 8))(v24, v40);
    uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
    uint64_t v36 = v38;
    v35(v38, v33, v26);
    sub_1AFD76408((uint64_t)&v46);
    uint64_t v37 = type metadata accessor for SymbolEntity();
    v35((char *)(a2 + *(int *)(v37 + 40)), v36, v26);
    long long v45 = v28;
    sub_1AFFC8E38();
    sub_1AFFC8B38();
    long long v45 = v48;
    sub_1AFFC8E38();
    sub_1AFFC8B38();
    long long v45 = v49;
    sub_1AFFC8E38();
    sub_1AFFC8B38();
    return sub_1AFD76408((uint64_t)&v46);
  }
  return result;
}

uint64_t SymbolEntity.id.getter()
{
  uint64_t v1 = *v0;
  sub_1AFFC8E38();
  return v1;
}

uint64_t SymbolEntity.symbol.getter()
{
  sub_1AFFC8B28();
  return v1;
}

uint64_t SymbolEntity.symbol.setter()
{
  return sub_1AFFC8B38();
}

uint64_t (*SymbolEntity.symbol.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1AFFC8B18();
  return sub_1AFD3325C;
}

uint64_t SymbolEntity.$symbol.getter()
{
  return sub_1AFFC8B48();
}

uint64_t SymbolEntity.name.getter()
{
  sub_1AFFC8B28();
  return v1;
}

uint64_t SymbolEntity.name.setter()
{
  return sub_1AFFC8B38();
}

uint64_t (*SymbolEntity.name.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1AFFC8B18();
  return sub_1AFD3325C;
}

uint64_t SymbolEntity.$name.getter()
{
  return sub_1AFFC8B48();
}

uint64_t SymbolEntity.exchange.getter()
{
  sub_1AFFC8B28();
  return v1;
}

uint64_t SymbolEntity.exchange.setter()
{
  return sub_1AFFC8B38();
}

uint64_t (*SymbolEntity.exchange.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1AFFC8B18();
  return sub_1AFD3325C;
}

uint64_t SymbolEntity.$exchange.getter()
{
  return sub_1AFFC8B48();
}

uint64_t SymbolEntity.shortName.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  sub_1AFFC8E38();
  return v1;
}

uint64_t SymbolEntity.compactName.getter()
{
  uint64_t v1 = *(void *)(v0 + 56);
  sub_1AFFC8E38();
  return v1;
}

uint64_t type metadata accessor for SymbolEntity()
{
  uint64_t result = qword_1EB8167E8;
  if (!qword_1EB8167E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1AFE17138@<X0>(void *a1@<X8>)
{
  if (qword_1EB810A48 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1E9AFB0E8;
  uint64_t v3 = qword_1E9AFB0F0;
  *a1 = qword_1E9AFB0E0;
  a1[1] = v2;
  a1[2] = v3;
  sub_1AFFC8E48();
  sub_1AFFC8E48();

  return sub_1AFFC8E48();
}

uint64_t static SymbolEntity.defaultQuery.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EB810A48 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1E9AFB0E8;
  uint64_t v3 = qword_1E9AFB0F0;
  *a1 = qword_1E9AFB0E0;
  a1[1] = v2;
  a1[2] = v3;
  sub_1AFFC8E48();
  sub_1AFFC8E48();

  return sub_1AFFC8E48();
}

uint64_t sub_1AFE17258@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E9AF8D10 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1AFFC8FA8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1E9AFB0F8);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t static SymbolEntity.typeDisplayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E9AF8D10 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1AFFC8FA8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1E9AFB0F8);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1AFE173A8(uint64_t a1)
{
  uint64_t v2 = sub_1AFE18EB8(&qword_1EB810BC0, (void (*)(uint64_t))type metadata accessor for SymbolEntity);

  return MEMORY[0x1F40D3BC8](a1, v2);
}

uint64_t SymbolEntity.displayRepresentation.getter()
{
  uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1AFE17D7C(0, &qword_1EB810BA8, MEMORY[0x1E4F18628], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v13 - v2;
  sub_1AFE17D7C(0, &qword_1EB816B00, MEMORY[0x1E4F27608], v0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v13 - v5;
  uint64_t v7 = sub_1AFFC9548();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = sub_1AFFCAE38();
  MEMORY[0x1F4188790](v9 - 8);
  MEMORY[0x1F4188790](v10);
  sub_1AFFCAE28();
  sub_1AFFCAE18();
  sub_1AFFCAE08();
  sub_1AFFCAE18();
  sub_1AFFC9538();
  sub_1AFFCAE28();
  sub_1AFFCAE18();
  sub_1AFFC8B28();
  sub_1AFFCAE08();
  swift_bridgeObjectRelease();
  sub_1AFFCAE18();
  sub_1AFFC9538();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  uint64_t v11 = sub_1AFFC8DB8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v3, 1, 1, v11);
  return sub_1AFFC8DC8();
}

uint64_t sub_1AFE17730(uint64_t a1)
{
  uint64_t v2 = sub_1AFE18EB8(&qword_1EB816B40, (void (*)(uint64_t))type metadata accessor for SymbolEntity);

  return MEMORY[0x1F40D4970](a1, v2);
}

uint64_t sub_1AFE177AC()
{
  sub_1AFD5A2B4(0, &qword_1EB810A30, (unint64_t *)&unk_1EB81A7F8);
  sub_1AFFC8A08();
  sub_1AFFC89F8();
  uint64_t v0 = sub_1AFFC89C8();
  sub_1AFD5A2B4(0, (unint64_t *)&unk_1EB810A38, &qword_1EB81A9D8);
  sub_1AFFC89F8();
  uint64_t v1 = sub_1AFFC89C8();
  sub_1AFD5A2B4(0, (unint64_t *)&qword_1EB8167E0, (unint64_t *)&qword_1EB81A890);
  sub_1AFFC89F8();
  uint64_t result = sub_1AFFC89C8();
  qword_1E9AFB0E0 = v0;
  *(void *)algn_1E9AFB0E8 = v1;
  qword_1E9AFB0F0 = result;
  return result;
}

uint64_t sub_1AFE178DC()
{
  uint64_t v14 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27608];
  sub_1AFE17D7C(0, &qword_1EB816B00, MEMORY[0x1E4F27608], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v13 = (char *)&v12 - v1;
  uint64_t v2 = sub_1AFFC9528();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1AFFC9A78();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v7 = sub_1AFFCAE58();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v8 = sub_1AFFC9548();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = sub_1AFFC8FA8();
  __swift_allocate_value_buffer(v10, qword_1E9AFB0F8);
  __swift_project_value_buffer(v10, (uint64_t)qword_1E9AFB0F8);
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4F275D0], v2);
  sub_1AFFC9558();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v13, 1, 1, v8);
  sub_1AFE17D7C(0, &qword_1E9AFA0E0, v14, MEMORY[0x1E4FBBE00]);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1AFFD8510;
  sub_1AFFC9518();
  sub_1AFFC9518();
  sub_1AFFC9518();
  sub_1AFFC9518();
  sub_1AFFC9518();
  sub_1AFFC9518();
  sub_1AFFC9518();
  sub_1AFFC9518();
  sub_1AFFC9518();
  sub_1AFFC9518();
  return sub_1AFFC8F88();
}

void sub_1AFE17D7C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t static SymbolEntity.transferRepresentation.getter()
{
  uint64_t v0 = type metadata accessor for SymbolEntity();
  uint64_t v1 = sub_1AFFC96E8();
  uint64_t v2 = sub_1AFE18EB8(&qword_1E9AFB110, (void (*)(uint64_t))type metadata accessor for SymbolEntity);
  uint64_t v3 = sub_1AFE18EB8(&qword_1E9AFB118, MEMORY[0x1E4F276F0]);

  return MEMORY[0x1F40DFA60](sub_1AFE17EC8, 0, v0, v1, v2, v3);
}

uint64_t sub_1AFE17EC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1 + *(int *)(type metadata accessor for SymbolEntity() + 40);
  uint64_t v4 = sub_1AFFC96E8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, v3, v4);
}

uint64_t sub_1AFE17F48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1AFFC96E8();
  uint64_t v5 = sub_1AFE18EB8(&qword_1E9AFB118, MEMORY[0x1E4F276F0]);

  return MEMORY[0x1F40DFA60](sub_1AFE17EC8, 0, a1, v4, a2, v5);
}

__n128 sub_1AFE17FF4@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1AFFC8B28();
  sub_1AFFC8B28();
  sub_1AFFC8B28();
  uint64_t v4 = a1[5];
  uint64_t v5 = a1[6];
  uint64_t v7 = a1[7];
  uint64_t v6 = a1[8];
  char v12 = 0;
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFD789F8(*(uint64_t *)&v13[0], *((uint64_t *)&v13[0] + 1), *(uint64_t *)&v13[0], *((uint64_t *)&v13[0] + 1), *(uint64_t *)&v13[0], *((uint64_t *)&v13[0] + 1), &v12, v4, (uint64_t)v13, v5, v7, v6, 0, 0, 0, 0);
  sub_1AFD2E05C((uint64_t)a1);
  long long v8 = v13[7];
  *(_OWORD *)(a2 + 96) = v13[6];
  *(_OWORD *)(a2 + 112) = v8;
  *(void *)(a2 + 128) = v14;
  long long v9 = v13[3];
  *(_OWORD *)(a2 + 32) = v13[2];
  *(_OWORD *)(a2 + 48) = v9;
  long long v10 = v13[5];
  *(_OWORD *)(a2 + 64) = v13[4];
  *(_OWORD *)(a2 + 80) = v10;
  __n128 result = (__n128)v13[1];
  *(_OWORD *)a2 = v13[0];
  *(__n128 *)(a2 + 16) = result;
  return result;
}

uint64_t sub_1AFE180FC()
{
  return sub_1AFE18EB8(&qword_1EB816B18, (void (*)(uint64_t))type metadata accessor for SymbolEntity);
}

uint64_t sub_1AFE18144()
{
  return sub_1AFE18EB8(&qword_1EB816B28, (void (*)(uint64_t))type metadata accessor for SymbolEntity);
}

uint64_t sub_1AFE1818C()
{
  return sub_1AFE18EB8(&qword_1EB816B50, (void (*)(uint64_t))type metadata accessor for SymbolEntity);
}

unint64_t sub_1AFE181D8()
{
  unint64_t result = qword_1E9AFB120;
  if (!qword_1E9AFB120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB120);
  }
  return result;
}

uint64_t sub_1AFE1822C()
{
  return sub_1AFE18EB8(&qword_1EB816B30, (void (*)(uint64_t))type metadata accessor for SymbolEntity);
}

uint64_t sub_1AFE18274()
{
  return sub_1AFE18EB8(&qword_1EB816B38, (void (*)(uint64_t))type metadata accessor for SymbolEntity);
}

uint64_t sub_1AFE182BC()
{
  return sub_1AFE18EB8((unint64_t *)&qword_1EB816B20, (void (*)(uint64_t))type metadata accessor for SymbolEntity);
}

uint64_t sub_1AFE18304()
{
  return sub_1AFE18EB8(&qword_1EB816B40, (void (*)(uint64_t))type metadata accessor for SymbolEntity);
}

uint64_t sub_1AFE1834C()
{
  return sub_1AFE18EB8(&qword_1E9AFB128, (void (*)(uint64_t))sub_1AFE18394);
}

void sub_1AFE18394()
{
  if (!qword_1E9AFB130)
  {
    type metadata accessor for SymbolEntity();
    sub_1AFE18EB8((unint64_t *)&qword_1EB816B20, (void (*)(uint64_t))type metadata accessor for SymbolEntity);
    unint64_t v0 = sub_1AFFC8FB8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9AFB130);
    }
  }
}

uint64_t sub_1AFE18428()
{
  return sub_1AFE18EB8(&qword_1EB816B48, (void (*)(uint64_t))type metadata accessor for SymbolEntity);
}

uint64_t sub_1AFE18470()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1AFE1848C@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_1AFFC8B28();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_1AFE184C8()
{
  return sub_1AFFC8B38();
}

uint64_t sub_1AFE18504@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_1AFFC8B28();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_1AFE18540()
{
  return sub_1AFFC8B38();
}

uint64_t sub_1AFE1857C@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_1AFFC8B28();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_1AFE185B8()
{
  return sub_1AFFC8B38();
}

uint64_t *initializeBufferWithCopyOfBuffer for SymbolEntity(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    uint64_t *v3 = *a2;
    uint64_t v3 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    sub_1AFFC8E48();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = a2[5];
    a1[4] = a2[4];
    a1[5] = v7;
    uint64_t v8 = a2[7];
    a1[6] = a2[6];
    a1[7] = v8;
    uint64_t v9 = *(int *)(a3 + 40);
    uint64_t v14 = (char *)a2 + v9;
    uint64_t v15 = (char *)a1 + v9;
    a1[8] = a2[8];
    uint64_t v10 = sub_1AFFC96E8();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    sub_1AFFC8E38();
    sub_1AFFC8E48();
    sub_1AFFC8E48();
    sub_1AFFC8E48();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    v11(v15, v14, v10);
  }
  return v3;
}

uint64_t destroy for SymbolEntity(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 40);
  uint64_t v5 = sub_1AFFC96E8();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *initializeWithCopy for SymbolEntity(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  uint64_t v8 = *(int *)(a3 + 40);
  uint64_t v12 = (char *)a2 + v8;
  uint64_t v13 = (char *)a1 + v8;
  a1[8] = a2[8];
  uint64_t v9 = sub_1AFFC96E8();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  sub_1AFFC8E38();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  v10(v13, v12, v9);
  return a1;
}

void *assignWithCopy for SymbolEntity(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  sub_1AFFC8E48();
  swift_release();
  a1[3] = a2[3];
  sub_1AFFC8E48();
  swift_release();
  a1[4] = a2[4];
  sub_1AFFC8E48();
  swift_release();
  a1[5] = a2[5];
  a1[6] = a2[6];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 40);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1AFFC96E8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for SymbolEntity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v5 = *(int *)(a3 + 40);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_1AFFC96E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

void *assignWithTake for SymbolEntity(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  swift_release();
  a1[4] = a2[4];
  swift_release();
  uint64_t v7 = a2[6];
  a1[5] = a2[5];
  a1[6] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[8];
  a1[7] = a2[7];
  a1[8] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(a3 + 40);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_1AFFC96E8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for SymbolEntity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1AFE18B6C);
}

uint64_t sub_1AFE18B6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1AFFC96E8();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 40);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for SymbolEntity(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1AFE18C30);
}

uint64_t sub_1AFE18C30(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1AFFC96E8();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 40);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1AFE18CD8()
{
  uint64_t result = sub_1AFFC96E8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1AFE18D84()
{
  return sub_1AFE18EB8(&qword_1E9AFB138, (void (*)(uint64_t))sub_1AFE18DCC);
}

void sub_1AFE18DCC()
{
  if (!qword_1E9AFB140[0])
  {
    type metadata accessor for SymbolEntity();
    sub_1AFFC96E8();
    sub_1AFE18EB8(&qword_1E9AFB110, (void (*)(uint64_t))type metadata accessor for SymbolEntity);
    sub_1AFE18EB8(&qword_1E9AFB118, MEMORY[0x1E4F276F0]);
    unint64_t v0 = sub_1AFFCA858();
    if (!v1) {
      atomic_store(v0, qword_1E9AFB140);
    }
  }
}

uint64_t sub_1AFE18EB8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AFE18F00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 8) + **(int **)(a5 + 8));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_1AFD3503C;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t sub_1AFE19020(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t type metadata accessor for NewsHeadlineService()
{
  return self;
}

uint64_t sub_1AFE19058(uint64_t a1, uint64_t a2)
{
  sub_1AFD2D884(a2, (uint64_t)v12);
  sub_1AFE19B1C(0, (unint64_t *)&unk_1EB818748, (uint64_t (*)(uint64_t))sub_1AFE1975C, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  sub_1AFFCA758();
  uint64_t v4 = v2[6];
  uint64_t v3 = v2[7];
  __swift_project_boxed_opaque_existential_1(v2 + 3, v4);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v3);
  uint64_t v5 = (void *)sub_1AFFCA5E8();
  sub_1AFFCA5D8();
  swift_release();
  swift_release();

  uint64_t v6 = swift_allocObject();
  sub_1AFD2D884((uint64_t)v12, v6 + 16);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_1AFE19860;
  *(void *)(v7 + 24) = v6;
  sub_1AFE198E8((uint64_t)v12);
  uint64_t v8 = (void *)sub_1AFFCA5E8();
  sub_1AFE199EC();
  sub_1AFFCA678();
  swift_release();
  swift_release();

  uint64_t v9 = (void *)sub_1AFFCA5E8();
  sub_1AFD2D58C();
  uint64_t v10 = sub_1AFFCA668();
  swift_release();

  return v10;
}

uint64_t sub_1AFE19258(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[3];
  uint64_t v6 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v5);
  sub_1AFD2D884(a3, (uint64_t)v10);
  uint64_t v7 = *(void (**)(uint64_t, unsigned char *, uint64_t, uint64_t))(v6 + 16);
  uint64_t v8 = sub_1AFFC8E38();
  v7(v8, v10, v5, v6);
  return a1;
}

uint64_t sub_1AFE192E4(unint64_t *a1)
{
  unint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  sub_1AFFC8E38();
  sub_1AFE0F318(v1, v2);
  swift_bridgeObjectRelease();
  sub_1AFE19B1C(0, &qword_1EB817DB0, (uint64_t (*)(uint64_t))sub_1AFD2D58C, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1AFFCA6F8();
}

uint64_t sub_1AFE19398(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a2;
  uint64_t v13 = *(void *)(a5 + 16);
  sub_1AFFC8E48();
  swift_unknownObjectRetain();
  sub_1AFD895E8(a6);
  id v14 = objc_allocWithZone(MEMORY[0x1E4F7E238]);
  uint64_t v15 = (void *)sub_1AFFCB1B8();
  swift_bridgeObjectRelease();
  int64_t v16 = (void *)sub_1AFFCB1B8();
  id v17 = objc_msgSend(v14, sel_initWithContext_articleIDs_ignoreCacheForArticleIDs_, v13, v15, v16);

  swift_unknownObjectRelease();
  long long v18 = (void *)swift_allocObject();
  _OWORD v18[2] = a3;
  void v18[3] = a4;
  v18[4] = sub_1AFD8173C;
  v18[5] = v12;
  v22[4] = sub_1AFE19BC0;
  v22[5] = v18;
  v22[0] = MEMORY[0x1E4F143A8];
  v22[1] = 1107296256;
  v22[2] = sub_1AFE196C8;
  v22[3] = &block_descriptor_12;
  long long v19 = _Block_copy(v22);
  id v20 = v17;
  sub_1AFFC8E48();
  swift_release();
  objc_msgSend(v20, sel_setFetchCompletionBlock_, v19);
  _Block_release(v19);

  sub_1AFFC9EF8();
  sub_1AFFC9EA8();
  sub_1AFFC9ED8();

  return swift_release();
}

void sub_1AFE19594(void *a1, void (*a2)(void), uint64_t a3, void (*a4)())
{
  id v7 = objc_msgSend(a1, sel_error);
  if (v7)
  {
    id v9 = v7;
    a2();
  }
  else if (objc_msgSend(a1, sel_fetchedObject) {
         && (sub_1AFE1975C(0), (swift_dynamicCast() & 1) != 0))
  }
  {
    a4();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1AFE19BCC();
    uint64_t v8 = (void *)swift_allocError();
    a2();
  }
}

void sub_1AFE196C8(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  sub_1AFFC8E48();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t sub_1AFE19730(uint64_t a1, uint64_t a2)
{
  return sub_1AFE19058(a1, a2);
}

uint64_t sub_1AFE19754(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AFE19398(a1, a2, a3, a4, *(void *)(v4 + 16), *(void *)(v4 + 24));
}

void sub_1AFE1975C(uint64_t a1)
{
}

unint64_t sub_1AFE19790()
{
  unint64_t result = qword_1EB818100;
  if (!qword_1EB818100)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB818100);
  }
  return result;
}

uint64_t sub_1AFE197E8()
{
  if (*(void *)(v0 + 24) >= 2uLL)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return MEMORY[0x1F4186498](v0, 152, 7);
}

uint64_t sub_1AFE19860(uint64_t a1, void *a2)
{
  return sub_1AFE19258(a1, a2, v2 + 16);
}

uint64_t sub_1AFE19868()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1AFE198A0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void *))(v2 + 16))(*a1, a1 + 1);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_1AFE198E8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1AFE19944(uint64_t a1, unint64_t a2)
{
  if (a2 >= 2)
  {
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    return sub_1AFFC8E38();
  }
  return result;
}

void sub_1AFE199EC()
{
  if (!qword_1EB818770)
  {
    sub_1AFE1975C(255);
    sub_1AFE19A5C();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB818770);
    }
  }
}

void sub_1AFE19A5C()
{
  if (!qword_1EB818758)
  {
    unint64_t v0 = sub_1AFFCAD18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB818758);
    }
  }
}

void sub_1AFE19AC4()
{
  if (!qword_1EB818000)
  {
    unint64_t v0 = sub_1AFFCB288();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB818000);
    }
  }
}

void sub_1AFE19B1C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1AFE19B80()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

void sub_1AFE19BC0(void *a1)
{
  sub_1AFE19594(a1, *(void (**)(void))(v1 + 16), *(void *)(v1 + 24), *(void (**)())(v1 + 32));
}

unint64_t sub_1AFE19BCC()
{
  unint64_t result = qword_1E9AFB158;
  if (!qword_1E9AFB158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB158);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for NewsHeadlineService.Errors(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1AFE19CBCLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for NewsHeadlineService.Errors()
{
  return &type metadata for NewsHeadlineService.Errors;
}

unint64_t sub_1AFE19CF8()
{
  unint64_t result = qword_1E9AFB160;
  if (!qword_1E9AFB160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB160);
  }
  return result;
}

uint64_t sub_1AFE19D50()
{
  uint64_t v0 = sub_1AFFC9528();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1AFFC9A78();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v5 = sub_1AFFCAE58();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v6 = sub_1AFFC9548();
  __swift_allocate_value_buffer(v6, qword_1E9AFB170);
  __swift_project_value_buffer(v6, (uint64_t)qword_1E9AFB170);
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4F275D0], v0);
  return sub_1AFFC9558();
}

uint64_t sub_1AFE19F30()
{
  uint64_t v0 = sub_1AFFC9528();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1AFFC9A78();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v5 = sub_1AFFCAE58();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v6 = sub_1AFFC9548();
  __swift_allocate_value_buffer(v6, qword_1E9AFB188);
  __swift_project_value_buffer(v6, (uint64_t)qword_1E9AFB188);
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4F275D0], v0);
  return sub_1AFFC9558();
}

uint64_t sub_1AFE1A10C@<X0>(uint64_t *a1@<X8>)
{
  sub_1AFD5A2B4(0, &qword_1EB810A30, (unint64_t *)&unk_1EB81A7F8);
  sub_1AFFC8A08();
  sub_1AFFC89F8();
  uint64_t v2 = sub_1AFFC89C8();
  sub_1AFD5A2B4(0, (unint64_t *)&unk_1EB810A38, &qword_1EB81A9D8);
  sub_1AFFC89F8();
  uint64_t v3 = sub_1AFFC89C8();
  sub_1AFD5A2B4(0, (unint64_t *)&qword_1EB8167E0, (unint64_t *)&qword_1EB81A890);
  sub_1AFFC89F8();
  uint64_t result = sub_1AFFC89C8();
  *a1 = v2;
  a1[1] = v3;
  a1[2] = result;
  return result;
}

uint64_t sub_1AFE1A238(uint64_t a1)
{
  *(void *)(v2 + 120) = a1;
  uint64_t v3 = sub_1AFFC9E18();
  *(void *)(v2 + 128) = v3;
  *(void *)(v2 + 136) = *(void *)(v3 - 8);
  *(void *)(v2 + 144) = swift_task_alloc();
  uint64_t v4 = sub_1AFFC98F8();
  *(void *)(v2 + 152) = v4;
  *(void *)(v2 + 160) = *(void *)(v4 - 8);
  *(void *)(v2 + 168) = swift_task_alloc();
  uint64_t v5 = sub_1AFFC9F58();
  *(void *)(v2 + 176) = v5;
  *(void *)(v2 + 184) = *(void *)(v5 - 8);
  *(void *)(v2 + 192) = swift_task_alloc();
  uint64_t v6 = sub_1AFFC9DE8();
  *(void *)(v2 + 200) = v6;
  *(void *)(v2 + 208) = *(void *)(v6 - 8);
  *(void *)(v2 + 216) = swift_task_alloc();
  *(_OWORD *)(v2 + 224) = *(_OWORD *)v1;
  *(void *)(v2 + 240) = *(void *)(v1 + 16);
  return MEMORY[0x1F4188298](sub_1AFE1A41C, 0, 0);
}

uint64_t sub_1AFE1A41C()
{
  long long v28 = v0;
  if (qword_1EB810B30 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1AFFCA8A8();
  v0[31] = __swift_project_value_buffer(v1, (uint64_t)qword_1EB810AF0);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_1AFFCA888();
  os_log_type_t v3 = sub_1AFFCB448();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = v0[15];
  if (v4)
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v27 = v7;
    *(_DWORD *)uint64_t v6 = 136315138;
    v0[13] = v5;
    sub_1AFE28A20(0, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1AFD371B8();
    uint64_t v8 = sub_1AFFCAD88();
    v0[14] = sub_1AFD36BA8(v8, v9, &v27);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AFD01000, v2, v3, "Fetching stocks for symbol query with identifiers=[%s]", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v7, -1, -1);
    MEMORY[0x1B3E8F0D0](v6, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v26 = v0[27];
  uint64_t v11 = v0[25];
  uint64_t v10 = v0[26];
  uint64_t v19 = v0[24];
  uint64_t v12 = v0[21];
  uint64_t v24 = v0[23];
  uint64_t v25 = v0[22];
  uint64_t v13 = v0[18];
  uint64_t v22 = v0[20];
  uint64_t v23 = v0[19];
  uint64_t v14 = v0[17];
  uint64_t v20 = v0[16];
  uint64_t v21 = v0[15];
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8998();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v15 = v0[5];
  uint64_t v16 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v15);
  (*(void (**)(uint64_t, void, uint64_t))(v10 + 104))(v26, *MEMORY[0x1E4FAA8A8], v11);
  sub_1AFFC9F48();
  sub_1AFFC98E8();
  (*(void (**)(uint64_t, void, uint64_t))(v14 + 104))(v13, *MEMORY[0x1E4FAA980], v20);
  v0[32] = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 8))(v21, v26, v19, v12, v13, v15, v16);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v20);
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v12, v23);
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v19, v25);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v26, v11);
  id v17 = (void *)swift_task_alloc();
  v0[33] = v17;
  *id v17 = v0;
  v17[1] = sub_1AFE1A83C;
  return MEMORY[0x1F415EBC8](v0 + 7);
}

uint64_t sub_1AFE1A83C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 272) = v0;
  swift_task_dealloc();
  if (v0)
  {
    os_log_type_t v3 = sub_1AFE1AC74;
  }
  else
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v2 + 16);
    os_log_type_t v3 = sub_1AFE1A964;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1AFE1A964()
{
  uint64_t v20 = v0;
  uint64_t v1 = v0[7];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_1AFFCA888();
  os_log_type_t v3 = sub_1AFFCB448();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[15];
    uint64_t v5 = swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    v19[0] = v18;
    *(_DWORD *)uint64_t v5 = 136315394;
    os_log_type_t type = v3;
    v0[8] = v4;
    sub_1AFE28A20(0, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1AFD371B8();
    uint64_t v6 = sub_1AFFCAD88();
    v0[9] = sub_1AFD36BA8(v6, v7, v19);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v5 + 12) = 2080;
    uint64_t v8 = sub_1AFFC8E38();
    uint64_t v9 = sub_1AFD90240(v8);
    swift_bridgeObjectRelease();
    v0[11] = v9;
    uint64_t v10 = sub_1AFFCAD88();
    unint64_t v12 = v11;
    swift_bridgeObjectRelease();
    v0[12] = sub_1AFD36BA8(v10, v12, v19);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AFD01000, v2, type, "Fetched stocks for symbol query with identifiers=[%s], stocks=[%s]", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v18, -1, -1);
    MEMORY[0x1B3E8F0D0](v5, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v13 = v0[15];
  sub_1AFFC8E38();
  uint64_t v14 = sub_1AFE265EC(v13, v1);
  swift_bridgeObjectRelease_n();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(void *))v0[1];
  return v15(v14);
}

uint64_t sub_1AFE1AC74()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1AFE1AD24(uint64_t a1)
{
  *(void *)(v2 + 80) = a1;
  *(_OWORD *)(v2 + 88) = *(_OWORD *)v1;
  *(void *)(v2 + 104) = *(void *)(v1 + 16);
  return MEMORY[0x1F4188298](sub_1AFE1AD54, 0, 0);
}

uint64_t sub_1AFE1AD54()
{
  if (qword_1EB810B30 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1AFFCA8A8();
  v0[14] = __swift_project_value_buffer(v1, (uint64_t)qword_1EB810AF0);
  uint64_t v2 = sub_1AFFCA888();
  os_log_type_t v3 = sub_1AFFCB448();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_1AFD01000, v2, v3, "Fetching watched stocks for suggested symbol entities.", v4, 2u);
    MEMORY[0x1B3E8F0D0](v4, -1, -1);
  }

  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8998();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v5 = v0[5];
  uint64_t v6 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v5);
  v0[15] = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 120))(v5, v6);
  unint64_t v7 = (void *)swift_task_alloc();
  v0[16] = v7;
  *unint64_t v7 = v0;
  v7[1] = sub_1AFE1AF38;
  return MEMORY[0x1F415EBC8](v0 + 7);
}

uint64_t sub_1AFE1AF38()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 136) = v0;
  swift_task_dealloc();
  if (v0)
  {
    os_log_type_t v3 = sub_1AFE1B060;
  }
  else
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v2 + 16);
    os_log_type_t v3 = sub_1AFE1B0D0;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1AFE1B060()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1AFE1B0D0()
{
  uint64_t v29 = v0;
  uint64_t v1 = v0[7];
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_1AFFCA888();
  os_log_type_t v3 = sub_1AFFCB448();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = v5;
    uint64_t v28 = v5;
    *(_DWORD *)uint64_t v4 = 136315138;
    int64_t v7 = *(void *)(v1 + 16);
    uint64_t v8 = MEMORY[0x1E4FBC860];
    if (v7)
    {
      uint64_t v22 = v5;
      os_log_type_t v23 = v3;
      uint64_t v24 = v4;
      uint64_t v25 = v2;
      uint64_t v27 = MEMORY[0x1E4FBC860];
      sub_1AFD9DA10(0, v7, 0);
      uint64_t v8 = v27;
      unint64_t v9 = *(void *)(v27 + 16);
      uint64_t v10 = 16 * v9;
      uint64_t v26 = v1;
      unint64_t v11 = (uint64_t *)(v1 + 40);
      do
      {
        uint64_t v12 = *(v11 - 1);
        uint64_t v13 = *v11;
        int64_t v14 = v9 + 1;
        unint64_t v15 = *(void *)(v27 + 24);
        sub_1AFFC8E38();
        if (v9 >= v15 >> 1) {
          sub_1AFD9DA10(v15 > 1, v14, 1);
        }
        *(void *)(v27 + 16) = v14;
        uint64_t v16 = v27 + v10;
        *(void *)(v16 + 32) = v12;
        *(void *)(v16 + 40) = v13;
        v10 += 16;
        v11 += 17;
        ++v9;
        --v7;
      }
      while (v7);
      uint64_t v2 = v25;
      uint64_t v1 = v26;
      uint64_t v4 = v24;
      os_log_type_t v3 = v23;
      uint64_t v6 = v22;
    }
    v0[8] = v8;
    sub_1AFE28A20(0, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1AFD371B8();
    uint64_t v17 = sub_1AFFCAD88();
    unint64_t v19 = v18;
    swift_bridgeObjectRelease();
    v0[9] = sub_1AFD36BA8(v17, v19, &v28);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AFD01000, v2, v3, "Fetched watched stocks for suggested symbol entities, stocks=[%s]", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v6, -1, -1);
    MEMORY[0x1B3E8F0D0](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  sub_1AFE1B3A8(v1, MEMORY[0x1E4FBC860], v0[10]);
  swift_bridgeObjectRelease();
  uint64_t v20 = (uint64_t (*)(void))v0[1];
  return v20();
}

uint64_t sub_1AFE1B3A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v71 = a3;
  sub_1AFE28CBC(0, &qword_1EB816B00, MEMORY[0x1E4F27608], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v70 = (char *)&v63 - v6;
  uint64_t v7 = sub_1AFFC9548();
  uint64_t v68 = *(void *)(v7 - 8);
  uint64_t v69 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v73 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFE28E88(0, &qword_1E9AF9D20, (uint64_t (*)(void))sub_1AFD38AA0, (uint64_t)&type metadata for SymbolWidgetEntity, MEMORY[0x1E4F18518]);
  uint64_t v66 = *(void *)(v9 - 8);
  uint64_t v67 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v65 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v72 = (char *)&v63 - v12;
  sub_1AFE28E88(0, &qword_1E9AFA410, (uint64_t (*)(void))sub_1AFD38AA0, (uint64_t)&type metadata for SymbolWidgetEntity, MEMORY[0x1E4F182A0]);
  uint64_t v74 = v13;
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  unint64_t v19 = (char *)&v63 - v18;
  int64_t v20 = *(void *)(a1 + 16);
  uint64_t v21 = MEMORY[0x1E4FBC860];
  if (v20)
  {
    uint64_t v63 = a2;
    uint64_t v64 = v16;
    uint64_t v97 = MEMORY[0x1E4FBC860];
    sub_1AFD9DBC0(0, v20, 0);
    uint64_t v21 = v97;
    uint64_t v22 = a1 + 32;
    do
    {
      long long v23 = *(_OWORD *)(v22 + 80);
      long long v24 = *(_OWORD *)(v22 + 112);
      long long v94 = *(_OWORD *)(v22 + 96);
      long long v95 = v24;
      long long v25 = *(_OWORD *)(v22 + 16);
      long long v26 = *(_OWORD *)(v22 + 48);
      long long v90 = *(_OWORD *)(v22 + 32);
      long long v91 = v26;
      long long v27 = *(_OWORD *)(v22 + 48);
      long long v28 = *(_OWORD *)(v22 + 80);
      long long v92 = *(_OWORD *)(v22 + 64);
      long long v93 = v28;
      long long v29 = *(_OWORD *)(v22 + 16);
      long long v88 = *(_OWORD *)v22;
      long long v89 = v29;
      long long v30 = *(_OWORD *)(v22 + 112);
      long long v81 = v94;
      long long v82 = v30;
      long long v77 = v90;
      long long v78 = v27;
      long long v79 = v92;
      long long v80 = v23;
      uint64_t v96 = *(void *)(v22 + 128);
      uint64_t v83 = *(void *)(v22 + 128);
      long long v75 = v88;
      long long v76 = v25;
      sub_1AFD76370((uint64_t)&v88);
      sub_1AFD76370((uint64_t)&v88);
      sub_1AFE4275C(&v75, (uint64_t *)&v84);
      long long v75 = v84;
      long long v76 = v85;
      long long v77 = v86;
      long long v78 = v87;
      sub_1AFD38AA0();
      sub_1AFFC8AA8();
      sub_1AFD76408((uint64_t)&v88);
      uint64_t v97 = v21;
      unint64_t v32 = *(void *)(v21 + 16);
      unint64_t v31 = *(void *)(v21 + 24);
      if (v32 >= v31 >> 1)
      {
        sub_1AFD9DBC0(v31 > 1, v32 + 1, 1);
        uint64_t v21 = v97;
      }
      *(void *)(v21 + 16) = v32 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v21+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(void *)(v14 + 72) * v32, v19, v74);
      v22 += 136;
      --v20;
    }
    while (v20);
    a2 = v63;
    uint64_t v16 = v64;
  }
  int64_t v33 = *(void *)(a2 + 16);
  uint64_t v34 = MEMORY[0x1E4FBC860];
  if (v33)
  {
    uint64_t v97 = MEMORY[0x1E4FBC860];
    sub_1AFD9DBC0(0, v33, 0);
    uint64_t v34 = v97;
    uint64_t v35 = a2 + 32;
    do
    {
      long long v36 = *(_OWORD *)(v35 + 80);
      long long v37 = *(_OWORD *)(v35 + 112);
      long long v94 = *(_OWORD *)(v35 + 96);
      long long v95 = v37;
      long long v38 = *(_OWORD *)(v35 + 16);
      long long v39 = *(_OWORD *)(v35 + 48);
      long long v90 = *(_OWORD *)(v35 + 32);
      long long v91 = v39;
      long long v40 = *(_OWORD *)(v35 + 48);
      long long v41 = *(_OWORD *)(v35 + 80);
      long long v92 = *(_OWORD *)(v35 + 64);
      long long v93 = v41;
      long long v42 = *(_OWORD *)(v35 + 16);
      long long v88 = *(_OWORD *)v35;
      long long v89 = v42;
      long long v43 = *(_OWORD *)(v35 + 112);
      long long v81 = v94;
      long long v82 = v43;
      long long v77 = v90;
      long long v78 = v40;
      long long v79 = v92;
      long long v80 = v36;
      uint64_t v96 = *(void *)(v35 + 128);
      uint64_t v83 = *(void *)(v35 + 128);
      long long v75 = v88;
      long long v76 = v38;
      sub_1AFD76370((uint64_t)&v88);
      sub_1AFD76370((uint64_t)&v88);
      sub_1AFE4275C(&v75, (uint64_t *)&v84);
      long long v75 = v84;
      long long v76 = v85;
      long long v77 = v86;
      long long v78 = v87;
      sub_1AFD38AA0();
      sub_1AFFC8AA8();
      sub_1AFD76408((uint64_t)&v88);
      uint64_t v97 = v34;
      unint64_t v45 = *(void *)(v34 + 16);
      unint64_t v44 = *(void *)(v34 + 24);
      if (v45 >= v44 >> 1)
      {
        sub_1AFD9DBC0(v44 > 1, v45 + 1, 1);
        uint64_t v34 = v97;
      }
      *(void *)(v34 + 16) = v45 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v34+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(void *)(v14 + 72) * v45, v16, v74);
      v35 += 136;
      --v33;
    }
    while (v33);
  }
  uint64_t v47 = v68;
  uint64_t v46 = v69;
  uint64_t v49 = v66;
  uint64_t v48 = v67;
  if (*(void *)(v21 + 16))
  {
    if (qword_1E9AF8D18 != -1) {
      swift_once();
    }
    uint64_t v50 = __swift_project_value_buffer(v46, (uint64_t)qword_1E9AFB170);
    long long v51 = v73;
    (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v73, v50, v46);
    unint64_t v52 = sub_1AFD38AA0();
    MEMORY[0x1B3E8B160](v51, v21, &type metadata for SymbolWidgetEntity, v52);
    unint64_t v53 = sub_1AFD35D10(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v55 = *(void *)(v53 + 16);
    unint64_t v54 = *(void *)(v53 + 24);
    if (v55 >= v54 >> 1) {
      unint64_t v53 = sub_1AFD35D10(v54 > 1, v55 + 1, 1, v53);
    }
    uint64_t v56 = v65;
    *(void *)(v53 + 16) = v55 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v49 + 32))(v53+ ((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80))+ *(void *)(v49 + 72) * v55, v72, v48);
    if (*(void *)(v34 + 16)) {
      goto LABEL_18;
    }
LABEL_26:
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
  swift_bridgeObjectRelease();
  unint64_t v53 = MEMORY[0x1E4FBC860];
  uint64_t v56 = v65;
  if (!*(void *)(v34 + 16)) {
    goto LABEL_26;
  }
LABEL_18:
  if (qword_1E9AF8D20 != -1) {
    swift_once();
  }
  uint64_t v57 = __swift_project_value_buffer(v46, (uint64_t)qword_1E9AFB188);
  uint64_t v58 = v73;
  (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v73, v57, v46);
  unint64_t v59 = sub_1AFD38AA0();
  MEMORY[0x1B3E8B160](v58, v34, &type metadata for SymbolWidgetEntity, v59);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v53 = sub_1AFD35D10(0, *(void *)(v53 + 16) + 1, 1, v53);
  }
  unint64_t v61 = *(void *)(v53 + 16);
  unint64_t v60 = *(void *)(v53 + 24);
  if (v61 >= v60 >> 1) {
    unint64_t v53 = sub_1AFD35D10(v60 > 1, v61 + 1, 1, v53);
  }
  *(void *)(v53 + 16) = v61 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v49 + 32))(v53+ ((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80))+ *(void *)(v49 + 72) * v61, v56, v48);
LABEL_27:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v47 + 56))(v70, 1, 1, v46);
  sub_1AFD38AA0();
  return sub_1AFFC8D98();
}

uint64_t sub_1AFE1BBDC(uint64_t a1)
{
  *(void *)(v2 + 208) = a1;
  *(_OWORD *)(v2 + 216) = *(_OWORD *)v1;
  *(void *)(v2 + 232) = *(void *)(v1 + 16);
  return MEMORY[0x1F4188298](sub_1AFE1BC0C, 0, 0);
}

uint64_t sub_1AFE1BC0C()
{
  if (qword_1EB810B30 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1AFFCA8A8();
  v0[30] = __swift_project_value_buffer(v1, (uint64_t)qword_1EB810AF0);
  uint64_t v2 = sub_1AFFCA888();
  os_log_type_t v3 = sub_1AFFCB448();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_1AFD01000, v2, v3, "Default symbol entity requested", v4, 2u);
    MEMORY[0x1B3E8F0D0](v4, -1, -1);
  }

  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8998();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v5 = v0[22];
  uint64_t v6 = v0[23];
  __swift_project_boxed_opaque_existential_1(v0 + 19, v5);
  v0[31] = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 120))(v5, v6);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[32] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1AFE1BDF0;
  return MEMORY[0x1F415EBC8](v0 + 24);
}

uint64_t sub_1AFE1BDF0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 264) = v0;
  swift_task_dealloc();
  if (v0)
  {
    os_log_type_t v3 = sub_1AFE1C2D8;
  }
  else
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v2 + 152);
    os_log_type_t v3 = sub_1AFE1BF18;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1AFE1BF18()
{
  uint64_t v60 = v0;
  uint64_t v1 = *(void *)(v0 + 192);
  if (*(void *)(v1 + 16))
  {
    *(_OWORD *)(v0 + 16) = *(_OWORD *)(v1 + 32);
    long long v2 = *(_OWORD *)(v1 + 96);
    long long v4 = *(_OWORD *)(v1 + 48);
    long long v3 = *(_OWORD *)(v1 + 64);
    *(_OWORD *)(v0 + 64) = *(_OWORD *)(v1 + 80);
    *(_OWORD *)(v0 + 80) = v2;
    *(_OWORD *)(v0 + 32) = v4;
    *(_OWORD *)(v0 + 48) = v3;
    long long v6 = *(_OWORD *)(v1 + 128);
    long long v5 = *(_OWORD *)(v1 + 144);
    long long v7 = *(_OWORD *)(v1 + 112);
    *(void *)(v0 + 144) = *(void *)(v1 + 160);
    *(_OWORD *)(v0 + 112) = v6;
    *(_OWORD *)(v0 + 128) = v5;
    *(_OWORD *)(v0 + 96) = v7;
    sub_1AFD76370(v0 + 16);
    swift_bridgeObjectRelease();
    long long v40 = *(_OWORD *)(v0 + 120);
    long long v41 = *(_OWORD *)(v0 + 136);
    uint64_t v8 = *(void *)(v0 + 104);
    uint64_t v9 = *(void *)(v0 + 88);
    uint64_t v10 = *(void *)(v0 + 96);
    char v11 = *(unsigned char *)(v0 + 80);
    uint64_t v43 = *(void *)(v0 + 64);
    uint64_t v44 = *(void *)(v0 + 112);
    uint64_t v38 = *(void *)(v0 + 72);
    uint64_t v39 = *(void *)(v0 + 48);
    unint64_t v12 = *(void *)(v0 + 24);
    uint64_t v36 = *(void *)(v0 + 56);
    uint64_t v37 = *(void *)(v0 + 32);
    uint64_t v35 = *(void *)(v0 + 40);
    uint64_t v42 = *(void *)(v0 + 16);
    sub_1AFD76370(v0 + 16);
    uint64_t v13 = sub_1AFFCA888();
    os_log_type_t v14 = sub_1AFFCB448();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v34 = v9;
      uint64_t v16 = swift_slowAlloc();
      *(void *)&long long v46 = v16;
      *(_DWORD *)uint64_t v15 = 136315138;
      sub_1AFFC8E38();
      *(void *)(v0 + 200) = sub_1AFD36BA8(v42, v12, (uint64_t *)&v46);
      sub_1AFFCB688();
      swift_bridgeObjectRelease();
      sub_1AFD76408(v0 + 16);
      _os_log_impl(&dword_1AFD01000, v13, v14, "Returning first watched stock for default symbol entity, stock=%s", v15, 0xCu);
      swift_arrayDestroy();
      uint64_t v17 = v16;
      uint64_t v9 = v34;
      MEMORY[0x1B3E8F0D0](v17, -1, -1);
      MEMORY[0x1B3E8F0D0](v15, -1, -1);
    }
    else
    {
      sub_1AFD76408(v0 + 16);
    }

    long long v27 = v40;
    long long v28 = v41;
    uint64_t v26 = v38;
    uint64_t v24 = v39;
    uint64_t v25 = v36;
    uint64_t v22 = v37;
    uint64_t v21 = v42;
    uint64_t v23 = v35;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v18 = sub_1AFFCA888();
    os_log_type_t v19 = sub_1AFFCB468();
    if (os_log_type_enabled(v18, v19))
    {
      int64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int64_t v20 = 0;
      _os_log_impl(&dword_1AFD01000, v18, v19, "No watched symbols to return as default symbol entity, falling back to AAPL", v20, 2u);
      MEMORY[0x1B3E8F0D0](v20, -1, -1);
    }

    LOBYTE(v45[0]) = 3;
    sub_1AFD789F8(1280328001, 0xE400000000000000, 0x6E4920656C707041, 0xEA00000000002E63, 0x51414453414ELL, 0xE600000000000000, (char *)v45, 0, (uint64_t)&v46, 0, 0, 0, 0, 0, 0, 0);
    unint64_t v12 = *((void *)&v46 + 1);
    uint64_t v21 = v46;
    uint64_t v22 = v47;
    uint64_t v23 = v48;
    uint64_t v24 = v49;
    uint64_t v25 = v50;
    uint64_t v26 = v52;
    uint64_t v43 = v51;
    char v11 = v53;
    uint64_t v9 = v54;
    uint64_t v10 = v55;
    uint64_t v8 = v56;
    uint64_t v44 = v57;
    long long v27 = v58;
    long long v28 = v59;
  }
  long long v29 = *(_OWORD **)(v0 + 208);
  *(void *)&long long v46 = v21;
  *((void *)&v46 + 1) = v12;
  uint64_t v47 = v22;
  uint64_t v48 = v23;
  uint64_t v49 = v24;
  uint64_t v50 = v25;
  uint64_t v51 = v43;
  uint64_t v52 = v26;
  char v53 = v11;
  uint64_t v54 = v9;
  uint64_t v55 = v10;
  uint64_t v56 = v8;
  uint64_t v57 = v44;
  long long v58 = v27;
  long long v59 = v28;
  sub_1AFE4275C(&v46, (uint64_t *)v45);
  long long v30 = v45[1];
  _OWORD *v29 = v45[0];
  v29[1] = v30;
  long long v31 = v45[3];
  v29[2] = v45[2];
  v29[3] = v31;
  unint64_t v32 = *(uint64_t (**)(void))(v0 + 8);
  return v32();
}

uint64_t sub_1AFE1C2D8()
{
  unint64_t v12 = v0;
  uint64_t v1 = (void *)v0[33];
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 19));

  long long v2 = sub_1AFFCA888();
  os_log_type_t v3 = sub_1AFFCB468();
  if (os_log_type_enabled(v2, v3))
  {
    long long v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v4 = 0;
    _os_log_impl(&dword_1AFD01000, v2, v3, "No watched symbols to return as default symbol entity, falling back to AAPL", v4, 2u);
    MEMORY[0x1B3E8F0D0](v4, -1, -1);
  }

  LOBYTE(v10[0]) = 3;
  sub_1AFD789F8(1280328001, 0xE400000000000000, 0x6E4920656C707041, 0xEA00000000002E63, 0x51414453414ELL, 0xE600000000000000, (char *)v10, 0, (uint64_t)&v11, 0, 0, 0, 0, 0, 0, 0);
  long long v5 = (_OWORD *)v0[26];
  sub_1AFE4275C(&v11, (uint64_t *)v10);
  long long v6 = v10[1];
  *long long v5 = v10[0];
  v5[1] = v6;
  long long v7 = v10[3];
  v5[2] = v10[2];
  v5[3] = v7;
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1AFE1C49C(uint64_t a1)
{
  os_log_type_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_1AFD6A894;
  return sub_1AFE1A238(a1);
}

uint64_t sub_1AFE1C530(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_1AFD56424;
  *(void *)(v4 + 80) = a1;
  *(_OWORD *)(v4 + 88) = *(_OWORD *)v1;
  *(void *)(v4 + 104) = *(void *)(v1 + 16);
  return MEMORY[0x1F4188298](sub_1AFE1AD54, 0, 0);
}

uint64_t sub_1AFE1C5EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  *(void *)uint64_t v8 = v4;
  *(void *)(v8 + 8) = sub_1AFD3503C;
  *(void *)(v8 + 128) = a2;
  *(void *)(v8 + 136) = a3;
  *(void *)(v8 + 120) = a1;
  *(_OWORD *)(v8 + 144) = *(_OWORD *)v3;
  *(void *)(v8 + 160) = *(void *)(v3 + 16);
  return MEMORY[0x1F4188298](sub_1AFE1C6F0, 0, 0);
}

uint64_t sub_1AFE1C6BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v4 + 128) = a2;
  *(void *)(v4 + 136) = a3;
  *(void *)(v4 + 120) = a1;
  *(_OWORD *)(v4 + 144) = *(_OWORD *)v3;
  *(void *)(v4 + 160) = *(void *)(v3 + 16);
  return MEMORY[0x1F4188298](sub_1AFE1C6F0, 0, 0);
}

uint64_t sub_1AFE1C6F0()
{
  uint64_t v16 = v0;
  if (qword_1EB810B30 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1AFFCA8A8();
  v0[21] = __swift_project_value_buffer(v1, (uint64_t)qword_1EB810AF0);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_1AFFCA888();
  os_log_type_t v3 = sub_1AFFCB478();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = v0[17];
  if (v4)
  {
    uint64_t v6 = v0[16];
    long long v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v15 = v8;
    *(_DWORD *)long long v7 = 136315138;
    sub_1AFFC8E38();
    v0[14] = sub_1AFD36BA8(v6, v5, &v15);
    sub_1AFFCB688();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AFD01000, v2, v3, "Fetching stocks for symbol entities matching string='%s'", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v8, -1, -1);
    MEMORY[0x1B3E8F0D0](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v9 = v0[17];
  uint64_t v10 = v0[16];
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8998();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v11 = v0[5];
  uint64_t v12 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v11);
  v0[22] = sub_1AFD4EE28(v10, v9, v11, v12);
  uint64_t v13 = (void *)swift_task_alloc();
  v0[23] = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_1AFE1C99C;
  return MEMORY[0x1F415EBC8](v0 + 10);
}

uint64_t sub_1AFE1C99C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 192) = v0;
  swift_task_dealloc();
  if (v0)
  {
    os_log_type_t v3 = sub_1AFE1CF74;
  }
  else
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v2 + 16);
    os_log_type_t v3 = sub_1AFE1CAC4;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1AFE1CAC4()
{
  uint64_t v31 = v0;
  uint64_t v1 = *(void *)(v0 + 80);
  *(void *)(v0 + 200) = v1;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_1AFFCA888();
  os_log_type_t v3 = sub_1AFFCB478();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v5 = *(void *)(v0 + 128);
    unint64_t v4 = *(void *)(v0 + 136);
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v29 = v7;
    *(_DWORD *)uint64_t v6 = 136315394;
    sub_1AFFC8E38();
    *(void *)(v0 + 88) = sub_1AFD36BA8(v5, v4, &v29);
    sub_1AFFCB688();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v6 + 12) = 2080;
    int64_t v8 = *(void *)(v1 + 16);
    uint64_t v9 = MEMORY[0x1E4FBC860];
    if (v8)
    {
      uint64_t v24 = v7;
      os_log_type_t v25 = v3;
      uint64_t v26 = v6;
      long long v27 = v2;
      uint64_t v30 = MEMORY[0x1E4FBC860];
      sub_1AFD9DA10(0, v8, 0);
      uint64_t v9 = v30;
      unint64_t v10 = *(void *)(v30 + 16);
      uint64_t v11 = 16 * v10;
      uint64_t v28 = v1;
      uint64_t v12 = (uint64_t *)(v1 + 40);
      do
      {
        uint64_t v13 = *(v12 - 1);
        uint64_t v14 = *v12;
        uint64_t v30 = v9;
        int64_t v15 = v10 + 1;
        unint64_t v16 = *(void *)(v9 + 24);
        sub_1AFFC8E38();
        if (v10 >= v16 >> 1)
        {
          sub_1AFD9DA10(v16 > 1, v15, 1);
          uint64_t v9 = v30;
        }
        *(void *)(v9 + 16) = v15;
        uint64_t v17 = v9 + v11;
        *(void *)(v17 + 32) = v13;
        *(void *)(v17 + 40) = v14;
        v11 += 16;
        v12 += 17;
        ++v10;
        --v8;
      }
      while (v8);
      uint64_t v2 = v27;
      uint64_t v1 = v28;
      uint64_t v6 = v26;
      os_log_type_t v3 = v25;
      uint64_t v7 = v24;
    }
    *(void *)(v0 + 96) = v9;
    sub_1AFE28A20(0, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1AFD371B8();
    uint64_t v18 = sub_1AFFCAD88();
    unint64_t v20 = v19;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 104) = sub_1AFD36BA8(v18, v20, &v29);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AFD01000, v2, v3, "Fetched stocks for symbol entities matching string='%s', stocks=[%s]", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v7, -1, -1);
    MEMORY[0x1B3E8F0D0](v6, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  uint64_t v21 = *(void *)(v0 + 160);
  *(_OWORD *)(v0 + 56) = *(_OWORD *)(v0 + 144);
  *(void *)(v0 + 72) = v21;
  uint64_t v22 = swift_task_alloc();
  *(void *)(v0 + 208) = v22;
  *(void *)uint64_t v22 = v0;
  *(void *)(v22 + 8) = sub_1AFE1CE60;
  *(void *)(v22 + 312) = *(void *)(v0 + 120);
  *(void *)(v22 + 320) = v1;
  *(_OWORD *)(v22 + 328) = *(_OWORD *)(v0 + 56);
  *(void *)(v22 + 344) = *(void *)(v0 + 72);
  return MEMORY[0x1F4188298](sub_1AFE1D188, 0, 0);
}

uint64_t sub_1AFE1CE60()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1AFE1CF74()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1AFE1CFE4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_1AFE285AC();
  *uint64_t v5 = v2;
  v5[1] = sub_1AFD56424;
  return MEMORY[0x1F40D3D68](a1, a2, v6);
}

uint64_t sub_1AFE1D098(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_1AFD3503C;
  *(void *)(v4 + 208) = a1;
  *(_OWORD *)(v4 + 216) = *(_OWORD *)v1;
  *(void *)(v4 + 232) = *(void *)(v1 + 16);
  return MEMORY[0x1F4188298](sub_1AFE1BC0C, 0, 0);
}

uint64_t sub_1AFE1D154(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 312) = a1;
  *(void *)(v3 + 320) = a2;
  *(_OWORD *)(v3 + 328) = *(_OWORD *)v2;
  *(void *)(v3 + 344) = *(void *)(v2 + 16);
  return MEMORY[0x1F4188298](sub_1AFE1D188, 0, 0);
}

uint64_t sub_1AFE1D188()
{
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8998();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = v0[22];
  uint64_t v2 = v0[23];
  __swift_project_boxed_opaque_existential_1(v0 + 19, v1);
  v0[44] = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 120))(v1, v2);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[45] = v3;
  void *v3 = v0;
  v3[1] = sub_1AFE1D2B4;
  return MEMORY[0x1F415EBC8](v0 + 32);
}

uint64_t sub_1AFE1D2B4()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {

    swift_release();
    uint64_t v3 = sub_1AFE1DC0C;
  }
  else
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v2 + 152);
    uint64_t v3 = sub_1AFE1D3EC;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1AFE1D3EC()
{
  long long v95 = v0;
  uint64_t v1 = MEMORY[0x1E4FBC860];
  v0[30] = MEMORY[0x1E4FBC860];
  v0[31] = v1;
  long long v89 = v0 + 31;
  long long v90 = v0 + 30;
  uint64_t v2 = v0[32];
  uint64_t v3 = v0[40];
  int64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = v0 + 2;
    uint64_t v6 = v3 + 32;
    sub_1AFFC8E38();
    uint64_t v7 = (void *)MEMORY[0x1E4FBC860];
    int64_t v8 = v4;
    uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      *(_OWORD *)uint64_t v5 = *(_OWORD *)v6;
      long long v17 = *(_OWORD *)(v6 + 16);
      long long v18 = *(_OWORD *)(v6 + 32);
      long long v19 = *(_OWORD *)(v6 + 64);
      *((_OWORD *)v90 - 11) = *(_OWORD *)(v6 + 48);
      *((_OWORD *)v90 - 10) = v19;
      *((_OWORD *)v90 - 13) = v17;
      *((_OWORD *)v90 - 12) = v18;
      long long v20 = *(_OWORD *)(v6 + 80);
      long long v21 = *(_OWORD *)(v6 + 96);
      long long v22 = *(_OWORD *)(v6 + 112);
      *(v90 - 12) = *(void *)(v6 + 128);
      *((_OWORD *)v90 - 8) = v21;
      *((_OWORD *)v90 - 7) = v22;
      *((_OWORD *)v90 - 9) = v20;
      sub_1AFD76370((uint64_t)v5);
      if (sub_1AFF70434(v5, v2))
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v9 = sub_1AFD35574(0, v9[2] + 1, 1, v9);
        }
        unint64_t v24 = v9[2];
        unint64_t v23 = v9[3];
        if (v24 >= v23 >> 1) {
          uint64_t v9 = sub_1AFD35574((void *)(v23 > 1), v24 + 1, 1, v9);
        }
        void v9[2] = v24 + 1;
        unint64_t v10 = &v9[17 * v24];
        *((_OWORD *)v10 + 2) = *(_OWORD *)v5;
        long long v11 = *((_OWORD *)v90 - 13);
        long long v12 = *((_OWORD *)v90 - 12);
        long long v13 = *((_OWORD *)v90 - 10);
        *((_OWORD *)v10 + 5) = *((_OWORD *)v90 - 11);
        *((_OWORD *)v10 + 6) = v13;
        *((_OWORD *)v10 + 3) = v11;
        *((_OWORD *)v10 + 4) = v12;
        long long v14 = *((_OWORD *)v90 - 9);
        long long v15 = *((_OWORD *)v90 - 8);
        long long v16 = *((_OWORD *)v90 - 7);
        v10[20] = *(v90 - 12);
        *((_OWORD *)v10 + 8) = v15;
        *((_OWORD *)v10 + 9) = v16;
        *((_OWORD *)v10 + 7) = v14;
        *long long v89 = v9;
      }
      else
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v7 = sub_1AFD35574(0, v7[2] + 1, 1, v7);
        }
        unint64_t v26 = v7[2];
        unint64_t v25 = v7[3];
        if (v26 >= v25 >> 1) {
          uint64_t v7 = sub_1AFD35574((void *)(v25 > 1), v26 + 1, 1, v7);
        }
        void v7[2] = v26 + 1;
        long long v27 = &v7[17 * v26];
        *((_OWORD *)v27 + 2) = *(_OWORD *)v5;
        long long v28 = *((_OWORD *)v90 - 13);
        long long v29 = *((_OWORD *)v90 - 12);
        long long v30 = *((_OWORD *)v90 - 10);
        *((_OWORD *)v27 + 5) = *((_OWORD *)v90 - 11);
        *((_OWORD *)v27 + 6) = v30;
        *((_OWORD *)v27 + 3) = v28;
        *((_OWORD *)v27 + 4) = v29;
        long long v31 = *((_OWORD *)v90 - 9);
        long long v32 = *((_OWORD *)v90 - 8);
        long long v33 = *((_OWORD *)v90 - 7);
        v27[20] = *(v90 - 12);
        *((_OWORD *)v27 + 8) = v32;
        *((_OWORD *)v27 + 9) = v33;
        *((_OWORD *)v27 + 7) = v31;
        *long long v90 = v7;
      }
      v6 += 136;
      --v8;
    }
    while (v8);
    uint64_t v0 = v88;
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (qword_1EB810B30 != -1) {
    swift_once();
  }
  uint64_t v34 = sub_1AFFCA8A8();
  __swift_project_value_buffer(v34, (uint64_t)qword_1EB810AF0);
  uint64_t v35 = v0[30];
  uint64_t v36 = v0[31];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v37 = sub_1AFFCA888();
  os_log_type_t v38 = sub_1AFFCB478();
  if (os_log_type_enabled(v37, v38))
  {
    os_log_type_t v84 = v38;
    log = v37;
    uint64_t v39 = swift_slowAlloc();
    uint64_t v83 = swift_slowAlloc();
    uint64_t v94 = v83;
    *(_DWORD *)uint64_t v39 = 136315650;
    uint64_t v40 = MEMORY[0x1E4FBC860];
    uint64_t v87 = v39;
    uint64_t v85 = v35;
    if (v4)
    {
      uint64_t v41 = v0[40];
      uint64_t v91 = MEMORY[0x1E4FBC860];
      sub_1AFD9DA10(0, v4, 0);
      uint64_t v40 = v91;
      unint64_t v42 = *(void *)(v91 + 16);
      uint64_t v43 = 16 * v42;
      uint64_t v44 = (uint64_t *)(v41 + 40);
      do
      {
        uint64_t v45 = *(v44 - 1);
        uint64_t v46 = *v44;
        int64_t v47 = v42 + 1;
        unint64_t v48 = *(void *)(v91 + 24);
        sub_1AFFC8E38();
        if (v42 >= v48 >> 1) {
          sub_1AFD9DA10(v48 > 1, v47, 1);
        }
        *(void *)(v91 + 16) = v47;
        uint64_t v49 = v91 + v43;
        *(void *)(v49 + 32) = v45;
        *(void *)(v49 + 40) = v46;
        v43 += 16;
        v44 += 17;
        ++v42;
        --v4;
      }
      while (v4);
      uint64_t v0 = v88;
      uint64_t v39 = v87;
    }
    v0[33] = v40;
    sub_1AFE28A20(0, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1AFD371B8();
    uint64_t v50 = sub_1AFFCAD88();
    unint64_t v52 = v51;
    swift_bridgeObjectRelease();
    v0[34] = sub_1AFD36BA8(v50, v52, &v94);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v39 + 12) = 2080;
    int64_t v53 = *(void *)(v36 + 16);
    uint64_t v54 = MEMORY[0x1E4FBC860];
    if (v53)
    {
      uint64_t v92 = MEMORY[0x1E4FBC860];
      sub_1AFFC8E38();
      sub_1AFD9DA10(0, v53, 0);
      uint64_t v55 = 0;
      uint64_t v54 = v92;
      unint64_t v56 = *(void *)(v92 + 16);
      uint64_t v57 = 16 * v56;
      do
      {
        uint64_t v58 = *(void *)(v36 + v55 + 32);
        uint64_t v59 = *(void *)(v36 + v55 + 40);
        unint64_t v60 = *(void *)(v92 + 24);
        int64_t v61 = v56 + 1;
        sub_1AFFC8E38();
        if (v56 >= v60 >> 1) {
          sub_1AFD9DA10(v60 > 1, v61, 1);
        }
        *(void *)(v92 + 16) = v61;
        uint64_t v62 = v92 + v57;
        *(void *)(v62 + 32) = v58;
        *(void *)(v62 + 40) = v59;
        v57 += 16;
        v55 += 136;
        ++v56;
        --v53;
      }
      while (v53);
      swift_bridgeObjectRelease();
      uint64_t v0 = v88;
      uint64_t v39 = v87;
    }
    v90[5] = v54;
    uint64_t v63 = sub_1AFFCAD88();
    unint64_t v65 = v64;
    swift_bridgeObjectRelease();
    v90[6] = sub_1AFD36BA8(v63, v65, &v94);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v39 + 22) = 2080;
    int64_t v66 = *(void *)(v85 + 16);
    uint64_t v67 = MEMORY[0x1E4FBC860];
    if (v66)
    {
      uint64_t v93 = MEMORY[0x1E4FBC860];
      sub_1AFFC8E38();
      sub_1AFD9DA10(0, v66, 0);
      uint64_t v68 = 0;
      uint64_t v67 = v93;
      unint64_t v69 = *(void *)(v93 + 16);
      uint64_t v70 = 16 * v69;
      do
      {
        uint64_t v71 = *(void *)(v85 + v68 + 32);
        uint64_t v72 = *(void *)(v85 + v68 + 40);
        unint64_t v73 = *(void *)(v93 + 24);
        int64_t v74 = v69 + 1;
        sub_1AFFC8E38();
        if (v69 >= v73 >> 1) {
          sub_1AFD9DA10(v73 > 1, v74, 1);
        }
        *(void *)(v93 + 16) = v74;
        uint64_t v75 = v93 + v70;
        *(void *)(v75 + 32) = v71;
        *(void *)(v75 + 40) = v72;
        v70 += 16;
        v68 += 136;
        ++v69;
        --v66;
      }
      while (v66);
      swift_bridgeObjectRelease();
      uint64_t v0 = v88;
      uint64_t v39 = v87;
    }
    v0[37] = v67;
    uint64_t v76 = sub_1AFFCAD88();
    unint64_t v78 = v77;
    swift_bridgeObjectRelease();
    v0[38] = sub_1AFD36BA8(v76, v78, &v94);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    uint64_t v37 = log;
    _os_log_impl(&dword_1AFD01000, log, v84, "Sectioned stocks=[%s] into watched=[%s], notWatched=[%s]", (uint8_t *)v39, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v83, -1, -1);
    MEMORY[0x1B3E8F0D0](v39, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  uint64_t v79 = v0[39];
  swift_beginAccess();
  uint64_t v80 = v0[31];
  swift_beginAccess();
  sub_1AFE1B3A8(v80, v0[30], v79);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v81 = (uint64_t (*)(void))v0[1];
  return v81();
}

uint64_t sub_1AFE1DC0C()
{
  long long v95 = v0;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 19));
  uint64_t v1 = MEMORY[0x1E4FBC860];
  v0[30] = MEMORY[0x1E4FBC860];
  v0[31] = v1;
  long long v89 = v0 + 31;
  long long v90 = v0 + 30;
  uint64_t v2 = v0[40];
  int64_t v3 = *(void *)(v2 + 16);
  long long v88 = v0;
  if (v3)
  {
    int64_t v4 = v0 + 2;
    uint64_t v5 = v2 + 32;
    sub_1AFFC8E38();
    uint64_t v6 = MEMORY[0x1E4FBC860];
    int64_t v7 = v3;
    int64_t v8 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      *(_OWORD *)int64_t v4 = *(_OWORD *)v5;
      long long v17 = *(_OWORD *)(v5 + 16);
      long long v18 = *(_OWORD *)(v5 + 32);
      long long v19 = *(_OWORD *)(v5 + 64);
      *((_OWORD *)v90 - 11) = *(_OWORD *)(v5 + 48);
      *((_OWORD *)v90 - 10) = v19;
      *((_OWORD *)v90 - 13) = v17;
      *((_OWORD *)v90 - 12) = v18;
      long long v20 = *(_OWORD *)(v5 + 80);
      long long v21 = *(_OWORD *)(v5 + 96);
      long long v22 = *(_OWORD *)(v5 + 112);
      *(v90 - 12) = *(void *)(v5 + 128);
      *((_OWORD *)v90 - 8) = v21;
      *((_OWORD *)v90 - 7) = v22;
      *((_OWORD *)v90 - 9) = v20;
      sub_1AFD76370((uint64_t)v4);
      if (sub_1AFF70434(v4, v6))
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v9 = sub_1AFD35574(0, v9[2] + 1, 1, v9);
        }
        unint64_t v24 = v9[2];
        unint64_t v23 = v9[3];
        if (v24 >= v23 >> 1) {
          uint64_t v9 = sub_1AFD35574((void *)(v23 > 1), v24 + 1, 1, v9);
        }
        void v9[2] = v24 + 1;
        unint64_t v10 = &v9[17 * v24];
        *((_OWORD *)v10 + 2) = *(_OWORD *)v4;
        long long v11 = *((_OWORD *)v90 - 13);
        long long v12 = *((_OWORD *)v90 - 12);
        long long v13 = *((_OWORD *)v90 - 10);
        *((_OWORD *)v10 + 5) = *((_OWORD *)v90 - 11);
        *((_OWORD *)v10 + 6) = v13;
        *((_OWORD *)v10 + 3) = v11;
        *((_OWORD *)v10 + 4) = v12;
        long long v14 = *((_OWORD *)v90 - 9);
        long long v15 = *((_OWORD *)v90 - 8);
        long long v16 = *((_OWORD *)v90 - 7);
        v10[20] = *(v90 - 12);
        *((_OWORD *)v10 + 8) = v15;
        *((_OWORD *)v10 + 9) = v16;
        *((_OWORD *)v10 + 7) = v14;
        *long long v89 = v9;
      }
      else
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          int64_t v8 = sub_1AFD35574(0, v8[2] + 1, 1, v8);
        }
        unint64_t v26 = v8[2];
        unint64_t v25 = v8[3];
        if (v26 >= v25 >> 1) {
          int64_t v8 = sub_1AFD35574((void *)(v25 > 1), v26 + 1, 1, v8);
        }
        void v8[2] = v26 + 1;
        long long v27 = &v8[17 * v26];
        *((_OWORD *)v27 + 2) = *(_OWORD *)v4;
        long long v28 = *((_OWORD *)v90 - 13);
        long long v29 = *((_OWORD *)v90 - 12);
        long long v30 = *((_OWORD *)v90 - 10);
        *((_OWORD *)v27 + 5) = *((_OWORD *)v90 - 11);
        *((_OWORD *)v27 + 6) = v30;
        *((_OWORD *)v27 + 3) = v28;
        *((_OWORD *)v27 + 4) = v29;
        long long v31 = *((_OWORD *)v90 - 9);
        long long v32 = *((_OWORD *)v90 - 8);
        long long v33 = *((_OWORD *)v90 - 7);
        v27[20] = *(v90 - 12);
        *((_OWORD *)v27 + 8) = v32;
        *((_OWORD *)v27 + 9) = v33;
        *((_OWORD *)v27 + 7) = v31;
        *long long v90 = v8;
      }
      v5 += 136;
      --v7;
    }
    while (v7);
    uint64_t v0 = v88;
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (qword_1EB810B30 != -1) {
    swift_once();
  }
  uint64_t v34 = sub_1AFFCA8A8();
  __swift_project_value_buffer(v34, (uint64_t)qword_1EB810AF0);
  uint64_t v35 = v0[30];
  uint64_t v36 = v0[31];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v37 = sub_1AFFCA888();
  os_log_type_t v38 = sub_1AFFCB478();
  if (os_log_type_enabled(v37, v38))
  {
    os_log_type_t v84 = v38;
    log = v37;
    uint64_t v39 = swift_slowAlloc();
    uint64_t v83 = swift_slowAlloc();
    uint64_t v94 = v83;
    *(_DWORD *)uint64_t v39 = 136315650;
    uint64_t v40 = MEMORY[0x1E4FBC860];
    uint64_t v87 = v39;
    uint64_t v85 = v35;
    if (v3)
    {
      uint64_t v41 = v0[40];
      uint64_t v91 = MEMORY[0x1E4FBC860];
      sub_1AFD9DA10(0, v3, 0);
      uint64_t v40 = v91;
      unint64_t v42 = *(void *)(v91 + 16);
      uint64_t v43 = 16 * v42;
      uint64_t v44 = (uint64_t *)(v41 + 40);
      do
      {
        uint64_t v45 = *(v44 - 1);
        uint64_t v46 = *v44;
        int64_t v47 = v42 + 1;
        unint64_t v48 = *(void *)(v91 + 24);
        sub_1AFFC8E38();
        if (v42 >= v48 >> 1) {
          sub_1AFD9DA10(v48 > 1, v47, 1);
        }
        *(void *)(v91 + 16) = v47;
        uint64_t v49 = v91 + v43;
        *(void *)(v49 + 32) = v45;
        *(void *)(v49 + 40) = v46;
        v43 += 16;
        v44 += 17;
        ++v42;
        --v3;
      }
      while (v3);
      uint64_t v0 = v88;
      uint64_t v39 = v87;
    }
    v0[33] = v40;
    sub_1AFE28A20(0, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1AFD371B8();
    uint64_t v50 = sub_1AFFCAD88();
    unint64_t v52 = v51;
    swift_bridgeObjectRelease();
    v0[34] = sub_1AFD36BA8(v50, v52, &v94);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v39 + 12) = 2080;
    int64_t v53 = *(void *)(v36 + 16);
    uint64_t v54 = MEMORY[0x1E4FBC860];
    if (v53)
    {
      uint64_t v92 = MEMORY[0x1E4FBC860];
      sub_1AFFC8E38();
      sub_1AFD9DA10(0, v53, 0);
      uint64_t v55 = 0;
      uint64_t v54 = v92;
      unint64_t v56 = *(void *)(v92 + 16);
      uint64_t v57 = 16 * v56;
      do
      {
        uint64_t v58 = *(void *)(v36 + v55 + 32);
        uint64_t v59 = *(void *)(v36 + v55 + 40);
        unint64_t v60 = *(void *)(v92 + 24);
        int64_t v61 = v56 + 1;
        sub_1AFFC8E38();
        if (v56 >= v60 >> 1) {
          sub_1AFD9DA10(v60 > 1, v61, 1);
        }
        *(void *)(v92 + 16) = v61;
        uint64_t v62 = v92 + v57;
        *(void *)(v62 + 32) = v58;
        *(void *)(v62 + 40) = v59;
        v57 += 16;
        v55 += 136;
        ++v56;
        --v53;
      }
      while (v53);
      swift_bridgeObjectRelease();
      uint64_t v0 = v88;
      uint64_t v39 = v87;
    }
    v90[5] = v54;
    uint64_t v63 = sub_1AFFCAD88();
    unint64_t v65 = v64;
    swift_bridgeObjectRelease();
    v90[6] = sub_1AFD36BA8(v63, v65, &v94);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v39 + 22) = 2080;
    int64_t v66 = *(void *)(v85 + 16);
    uint64_t v67 = MEMORY[0x1E4FBC860];
    if (v66)
    {
      uint64_t v93 = MEMORY[0x1E4FBC860];
      sub_1AFFC8E38();
      sub_1AFD9DA10(0, v66, 0);
      uint64_t v68 = 0;
      uint64_t v67 = v93;
      unint64_t v69 = *(void *)(v93 + 16);
      uint64_t v70 = 16 * v69;
      do
      {
        uint64_t v71 = *(void *)(v85 + v68 + 32);
        uint64_t v72 = *(void *)(v85 + v68 + 40);
        unint64_t v73 = *(void *)(v93 + 24);
        int64_t v74 = v69 + 1;
        sub_1AFFC8E38();
        if (v69 >= v73 >> 1) {
          sub_1AFD9DA10(v73 > 1, v74, 1);
        }
        *(void *)(v93 + 16) = v74;
        uint64_t v75 = v93 + v70;
        *(void *)(v75 + 32) = v71;
        *(void *)(v75 + 40) = v72;
        v70 += 16;
        v68 += 136;
        ++v69;
        --v66;
      }
      while (v66);
      swift_bridgeObjectRelease();
      uint64_t v0 = v88;
      uint64_t v39 = v87;
    }
    v0[37] = v67;
    uint64_t v76 = sub_1AFFCAD88();
    unint64_t v78 = v77;
    swift_bridgeObjectRelease();
    v0[38] = sub_1AFD36BA8(v76, v78, &v94);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    uint64_t v37 = log;
    _os_log_impl(&dword_1AFD01000, log, v84, "Sectioned stocks=[%s] into watched=[%s], notWatched=[%s]", (uint8_t *)v39, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v83, -1, -1);
    MEMORY[0x1B3E8F0D0](v39, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  uint64_t v79 = v0[39];
  swift_beginAccess();
  uint64_t v80 = v0[31];
  swift_beginAccess();
  sub_1AFE1B3A8(v80, v0[30], v79);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v81 = (uint64_t (*)(void))v0[1];
  return v81();
}

uint64_t sub_1AFE1E438()
{
  sub_1AFE267D4();
  uint64_t v1 = v0;
  __swift_allocate_value_buffer(v0, qword_1E9AFB1A0);
  __swift_project_value_buffer(v1, (uint64_t)qword_1E9AFB1A0);
  sub_1AFE26838();
  return sub_1AFFC8DE8();
}

uint64_t sub_1AFE1E4B8()
{
  sub_1AFE2894C();
  swift_getKeyPath();
  sub_1AFFC8D68();
  sub_1AFE26838();
  uint64_t v0 = sub_1AFFC8E48();
  swift_release();
  swift_getKeyPath();
  sub_1AFFC8E48();
  sub_1AFFC8D68();
  uint64_t v1 = sub_1AFFC8E48();
  swift_release();
  sub_1AFE28A20(0, (unint64_t *)&qword_1EB8183E0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1AFFD88D0;
  *(void *)(v2 + 32) = v0;
  *(void *)(v2 + 40) = v1;
  sub_1AFFCB1E8();
  sub_1AFFC8E48();
  uint64_t v3 = sub_1AFFC8FE8();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v3;
}

uint64_t sub_1AFE1E62C@<X0>(uint64_t *a1@<X8>)
{
  sub_1AFFC8E38();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E38();
  uint64_t v2 = sub_1AFFC8B48();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v2;
  return result;
}

uint64_t sub_1AFE1E6E0()
{
  return sub_1AFE1E884();
}

uint64_t sub_1AFE1E70C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_1AFE1EB98(a1, a2, (uint64_t)sub_1AFE28DB8, a3);
}

uint64_t sub_1AFE1E72C()
{
  return sub_1AFFCB6E8() & 1;
}

uint64_t sub_1AFE1E784@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1AFE1EC6C(a1, (uint64_t)sub_1AFE28D8C, a2);
}

uint64_t sub_1AFE1E7A4@<X0>(uint64_t *a1@<X8>)
{
  sub_1AFFC8E38();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E38();
  uint64_t v2 = sub_1AFFC8B48();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v2;
  return result;
}

uint64_t sub_1AFE1E858()
{
  return sub_1AFE1E884();
}

uint64_t sub_1AFE1E884()
{
  sub_1AFE28A6C();
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  uint64_t v3 = v2;
  MEMORY[0x1F4188790](v0);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  int64_t v8 = (char *)&v17 - v7;
  sub_1AFE28B34();
  swift_allocObject();
  sub_1AFFC8D18();
  sub_1AFE26838();
  sub_1AFFC9028();
  swift_release();
  sub_1AFE28BF4();
  swift_allocObject();
  sub_1AFFC8CB8();
  sub_1AFFC9028();
  swift_release();
  sub_1AFE28CBC(0, &qword_1E9AFB2B0, (uint64_t (*)(uint64_t))sub_1AFE28A6C, MEMORY[0x1E4FBBE00]);
  uint64_t v9 = *(void *)(v2 + 72);
  unint64_t v10 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1AFFD0610;
  unint64_t v12 = v11 + v10;
  long long v13 = *(void (**)(unint64_t, char *, uint64_t))(v3 + 16);
  v13(v12, v8, v1);
  v13(v12 + v9, v5, v1);
  sub_1AFE28E88(0, (unint64_t *)&qword_1EB816AF8, (uint64_t (*)(void))sub_1AFD74388, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4F183F8]);
  sub_1AFD74388();
  uint64_t v14 = sub_1AFFC9018();
  swift_bridgeObjectRelease();
  long long v15 = *(void (**)(char *, uint64_t))(v3 + 8);
  v15(v5, v1);
  v15(v8, v1);
  return v14;
}

uint64_t sub_1AFE1EB78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_1AFE1EB98(a1, a2, (uint64_t)sub_1AFE28D84, a3);
}

uint64_t sub_1AFE1EB98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, void *a4@<X8>)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  *a4 = a1;
  a4[1] = a2;
  a4[2] = a3;
  a4[3] = v8;
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_1AFE1EBF4()
{
  return sub_1AFFCB6E8() & 1;
}

uint64_t sub_1AFE1EC4C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1AFE1EC6C(a1, (uint64_t)sub_1AFE28D58, a2);
}

uint64_t sub_1AFE1EC6C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, void *a3@<X8>)
{
  uint64_t v6 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = v5;
  *a3 = v6;
  a3[1] = v5;
  a3[2] = a2;
  a3[3] = v7;
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_1AFE1ECC4@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E9AF8D28 != -1) {
    swift_once();
  }
  sub_1AFE267D4();
  uint64_t v3 = v2;
  uint64_t v4 = __swift_project_value_buffer(v2, (uint64_t)qword_1E9AFB1A0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v5(a1, v4, v3);
}

uint64_t sub_1AFE1ED6C()
{
  sub_1AFE28E88(0, &qword_1E9AFB208, (uint64_t (*)(void))sub_1AFE26838, (uint64_t)&type metadata for SymbolWidgetEntity, MEMORY[0x1E4F18730]);
  uint64_t v1 = v0;
  __swift_allocate_value_buffer(v0, qword_1E9AFB1B8);
  __swift_project_value_buffer(v1, (uint64_t)qword_1E9AFB1B8);
  sub_1AFE26838();
  return sub_1AFFC8F48();
}

uint64_t sub_1AFE1EE24()
{
  sub_1AFE28E88(0, &qword_1E9AFB280, (uint64_t (*)(void))sub_1AFE26838, (uint64_t)&type metadata for SymbolWidgetEntity, MEMORY[0x1E4F187D0]);
  uint64_t v1 = v0;
  uint64_t v30 = *(void *)(v0 - 8);
  uint64_t v2 = v30;
  uint64_t v28 = v30;
  MEMORY[0x1F4188790](v0);
  uint64_t v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  long long v31 = (char *)&v27 - v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v27 - v8;
  MEMORY[0x1F4188790](v10);
  long long v32 = (char *)&v27 - v11;
  swift_getKeyPath();
  sub_1AFE26838();
  sub_1AFD76990();
  sub_1AFFC9038();
  sub_1AFFC9088();
  unint64_t v12 = *(void (**)(char *, uint64_t))(v2 + 8);
  long long v29 = v9;
  v12(v9, v1);
  swift_getKeyPath();
  long long v13 = v31;
  sub_1AFFC9038();
  sub_1AFFC9088();
  long long v27 = v12;
  v12(v13, v1);
  swift_getKeyPath();
  sub_1AFFC9038();
  sub_1AFFC9088();
  v12(v4, v1);
  sub_1AFE288BC();
  uint64_t v14 = *(void *)(v30 + 72);
  uint64_t v15 = v28;
  unint64_t v16 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  uint64_t v17 = 2 * v14;
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1AFFD0DC0;
  unint64_t v19 = v18 + v16;
  long long v20 = *(void (**)(unint64_t, char *, uint64_t))(v15 + 16);
  v20(v19, v32, v1);
  unint64_t v21 = v19 + v14;
  long long v22 = v29;
  v20(v21, v29, v1);
  unint64_t v23 = v31;
  v20(v19 + v17, v31, v1);
  uint64_t v24 = sub_1AFFC9078();
  swift_bridgeObjectRelease();
  unint64_t v25 = v27;
  v27(v23, v1);
  v25(v22, v1);
  v25(v32, v1);
  return v24;
}

uint64_t sub_1AFE1F194@<X0>(uint64_t *a1@<X8>)
{
  sub_1AFFC8E38();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E38();
  uint64_t v2 = sub_1AFFC8B48();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v2;
  return result;
}

uint64_t sub_1AFE1F248@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E9AF8D30 != -1) {
    swift_once();
  }
  sub_1AFE28E88(0, &qword_1E9AFB208, (uint64_t (*)(void))sub_1AFE26838, (uint64_t)&type metadata for SymbolWidgetEntity, MEMORY[0x1E4F18730]);
  uint64_t v3 = v2;
  uint64_t v4 = __swift_project_value_buffer(v2, (uint64_t)qword_1E9AFB1B8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v5(a1, v4, v3);
}

uint64_t sub_1AFE1F328(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  *(unsigned char *)(v7 + 721) = a6;
  *(void *)(v7 + 584) = a5;
  *(void *)(v7 + 576) = a4;
  *(unsigned char *)(v7 + 720) = a3;
  *(void *)(v7 + 568) = a2;
  *(void *)(v7 + 560) = a1;
  *(_OWORD *)(v7 + 592) = *(_OWORD *)v6;
  *(void *)(v7 + 608) = *(void *)(v6 + 16);
  return MEMORY[0x1F4188298](sub_1AFE1F36C, 0, 0);
}

uint64_t sub_1AFE1F36C()
{
  uint64_t v30 = v0;
  if (qword_1EB810B30 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1AFFCA8A8();
  *(void *)(v0 + 616) = __swift_project_value_buffer(v1, (uint64_t)qword_1EB810AF0);
  swift_bridgeObjectRetain_n();
  sub_1AFFC8E38();
  uint64_t v2 = sub_1AFFCA888();
  os_log_type_t v3 = sub_1AFFCB478();
  if (os_log_type_enabled(v2, v3))
  {
    char v27 = *(unsigned char *)(v0 + 721);
    uint64_t v28 = *(void *)(v0 + 584);
    uint64_t v4 = *(void *)(v0 + 576);
    uint64_t v5 = *(void *)(v0 + 568);
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v29 = v7;
    *(_DWORD *)uint64_t v6 = 134218754;
    *(void *)(v0 + 528) = *(void *)(v5 + 16);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    char v8 = sub_1AFFC8F38();
    BOOL v9 = (v8 & 1) == 0;
    if (v8) {
      uint64_t v10 = 6581857;
    }
    else {
      uint64_t v10 = 29295;
    }
    if (v9) {
      unint64_t v11 = 0xE200000000000000;
    }
    else {
      unint64_t v11 = 0xE300000000000000;
    }
    *(void *)(v0 + 536) = sub_1AFD36BA8(v10, v11, &v29);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 22) = 2048;
    uint64_t v12 = *(void *)(v4 + 16);
    swift_bridgeObjectRelease();
    *(void *)(v0 + 544) = v12;
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 32) = 2048;
    uint64_t v13 = v28;
    if (v27) {
      uint64_t v13 = 0;
    }
    *(void *)(v0 + 552) = v13;
    sub_1AFFCB688();
    _os_log_impl(&dword_1AFD01000, v2, v3, "Querying stocks for symbol entities matching property queryCount=%ld, comparatorMode=%s, sortCount=%ld, limit=%ld", (uint8_t *)v6, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v7, -1, -1);
    MEMORY[0x1B3E8F0D0](v6, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
  }

  uint64_t v14 = *(void **)(v0 + 568);
  uint64_t v15 = v14[2];
  *(void *)(v0 + 624) = v15;
  if (v15)
  {
    *(_OWORD *)(v0 + 632) = 0u;
    uint64_t v16 = v14[4];
    *(void *)(v0 + 648) = v16;
    unint64_t v17 = v14[5];
    *(void *)(v0 + 656) = v17;
    *(void *)(v0 + 664) = v14[6];
    *(void *)(v0 + 672) = v14[7];
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    sub_1AFFC8E38();
    uint64_t v18 = sub_1AFFCA888();
    os_log_type_t v19 = sub_1AFFCB458();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      uint64_t v29 = v21;
      *(_DWORD *)uint64_t v20 = 136315138;
      sub_1AFFC8E38();
      *(void *)(v20 + 4) = sub_1AFD36BA8(v16, v17, &v29);
      swift_bridgeObjectRelease_n();
      swift_release();
      _os_log_impl(&dword_1AFD01000, v18, v19, "Querying stocks for symbol entities matching property query=%s", (uint8_t *)v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1B3E8F0D0](v21, -1, -1);
      MEMORY[0x1B3E8F0D0](v20, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_release();
    }

    sub_1AFFC8E48();
    sub_1AFFC8E48();
    sub_1AFFC8E48();
    sub_1AFFC8998();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v24 = *(void *)(v0 + 312);
    uint64_t v25 = *(void *)(v0 + 320);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 288), v24);
    *(void *)(v0 + 680) = sub_1AFD4EE28(v16, v17, v24, v25);
    unint64_t v26 = (void *)swift_task_alloc();
    *(void *)(v0 + 688) = v26;
    *unint64_t v26 = v0;
    v26[1] = sub_1AFE1F8B8;
    return MEMORY[0x1F415EBC8](v0 + 360);
  }
  else
  {
    sub_1AFD38AA0();
    sub_1AFFC8DA8();
    long long v22 = *(uint64_t (**)(void))(v0 + 8);
    return v22();
  }
}

uint64_t sub_1AFE1F8B8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 696) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    os_log_type_t v3 = sub_1AFE211E4;
  }
  else
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v2 + 288);
    os_log_type_t v3 = sub_1AFE1FA08;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1AFE1FA08()
{
  unint64_t v204 = v0;
  uint64_t v1 = *(void *)(v0 + 360);
  uint64_t v2 = *(void *)(v1 + 16);
  sub_1AFD764A0();
  uint64_t v3 = sub_1AFFCB378();
  *(void *)(v0 + 352) = v3;
  if (v2)
  {
    uint64_t v4 = v2 - 1;
    for (uint64_t i = 32; ; i += 136)
    {
      *(_OWORD *)(v0 + 16) = *(_OWORD *)(v1 + i);
      long long v6 = *(_OWORD *)(v1 + i + 16);
      long long v7 = *(_OWORD *)(v1 + i + 32);
      long long v8 = *(_OWORD *)(v1 + i + 64);
      *(_OWORD *)(v0 + 64) = *(_OWORD *)(v1 + i + 48);
      *(_OWORD *)(v0 + 80) = v8;
      *(_OWORD *)(v0 + 32) = v6;
      *(_OWORD *)(v0 + 48) = v7;
      long long v9 = *(_OWORD *)(v1 + i + 80);
      long long v10 = *(_OWORD *)(v1 + i + 96);
      long long v11 = *(_OWORD *)(v1 + i + 112);
      *(void *)(v0 + 144) = *(void *)(v1 + i + 128);
      *(_OWORD *)(v0 + 112) = v10;
      *(_OWORD *)(v0 + 128) = v11;
      *(_OWORD *)(v0 + 96) = v9;
      sub_1AFD76370(v0 + 16);
      sub_1AFE227C0((uint64_t)v201, v0 + 16);
      long long v12 = v201[7];
      *(_OWORD *)(v0 + 248) = v201[6];
      *(_OWORD *)(v0 + 264) = v12;
      *(void *)(v0 + 280) = v202;
      long long v13 = v201[3];
      *(_OWORD *)(v0 + 184) = v201[2];
      *(_OWORD *)(v0 + 200) = v13;
      long long v14 = v201[5];
      *(_OWORD *)(v0 + 216) = v201[4];
      *(_OWORD *)(v0 + 232) = v14;
      long long v15 = v201[1];
      *(_OWORD *)(v0 + 152) = v201[0];
      *(_OWORD *)(v0 + 168) = v15;
      sub_1AFD76408(v0 + 152);
      if (!v4) {
        break;
      }
      --v4;
    }
    swift_bridgeObjectRelease();
    uint64_t v16 = *(void *)(v0 + 352);
  }
  else
  {
    uint64_t v16 = v3;
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain_n();
  sub_1AFFC8E38();
  sub_1AFFC8E48();
  unint64_t v17 = sub_1AFFCA888();
  os_log_type_t v18 = sub_1AFFCB458();
  BOOL v19 = os_log_type_enabled(v17, v18);
  unint64_t v20 = *(void *)(v0 + 656);
  uint64_t v185 = (uint64_t *)(v0 + 488);
  unint64_t v188 = v0;
  if (v19)
  {
    os_log_type_t v174 = v18;
    log = v17;
    int64_t v21 = v0 + 496;
    uint64_t v22 = *(void *)(v0 + 648);
    uint64_t v23 = swift_slowAlloc();
    uint64_t v170 = swift_slowAlloc();
    *(void *)(v0 + 488) = v170;
    *(_DWORD *)uint64_t v23 = 136315394;
    sub_1AFFC8E38();
    uint64_t v24 = v22;
    unint64_t v25 = v0 + 504;
    *(void *)(v0 + 496) = sub_1AFD36BA8(v24, v20, (uint64_t *)(v0 + 488));
    sub_1AFFCB688();
    swift_bridgeObjectRelease_n();
    swift_release();
    uint64_t v178 = (uint8_t *)v23;
    *(_WORD *)(v23 + 12) = 2080;
    int64_t v26 = *(void *)(v16 + 16);
    uint64_t v27 = MEMORY[0x1E4FBC860];
    if (v26)
    {
      *(void *)unint64_t v25 = MEMORY[0x1E4FBC860];
      sub_1AFD9DA10(0, v26, 0);
      uint64_t v28 = *(void *)v25;
      uint64_t v29 = sub_1AFD73DB0(v16);
      uint64_t v31 = v30;
      char v33 = v32 & 1;
      uint64_t v189 = (uint64_t *)(v0 + 504);
      uint64_t v193 = v16 + 56;
      while ((v29 & 0x8000000000000000) == 0 && v29 < 1 << *(unsigned char *)(v16 + 32))
      {
        if (((*(void *)(v193 + (((unint64_t)v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v29) & 1) == 0) {
          goto LABEL_109;
        }
        if (*(_DWORD *)(v16 + 36) != v31) {
          goto LABEL_110;
        }
        char v196 = v33;
        uint64_t v34 = (unint64_t *)(*(void *)(v16 + 48) + 136 * v29);
        unint64_t v0 = *v34;
        int64_t v21 = v34[1];
        *(void *)unint64_t v25 = v28;
        uint64_t v35 = v16;
        unint64_t v36 = *(void *)(v28 + 16);
        unint64_t v37 = *(void *)(v28 + 24);
        sub_1AFFC8E38();
        if (v36 >= v37 >> 1)
        {
          sub_1AFD9DA10(v37 > 1, v36 + 1, 1);
          uint64_t v28 = *v189;
        }
        *(void *)(v28 + 16) = v36 + 1;
        uint64_t v38 = v28 + 16 * v36;
        *(void *)(v38 + 32) = v0;
        *(void *)(v38 + 40) = v21;
        uint64_t v39 = sub_1AFD73E54(v29, v31, v196 & 1, v35);
        uint64_t v29 = v39;
        uint64_t v31 = v40;
        char v33 = v41 & 1;
        --v26;
        uint64_t v16 = v35;
        unint64_t v25 = (unint64_t)v189;
        if (!v26)
        {
          uint64_t v27 = v28;
          sub_1AFD76098(v39, v40, v33);
          goto LABEL_19;
        }
      }
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
      goto LABEL_111;
    }
LABEL_19:
    unint64_t v0 = v188;
    *(void *)(v188 + 512) = v27;
    sub_1AFE28A20(0, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1AFD371B8();
    uint64_t v42 = sub_1AFFCAD88();
    unint64_t v44 = v43;
    swift_bridgeObjectRelease();
    *(void *)(v188 + 520) = sub_1AFD36BA8(v42, v44, v185);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    unint64_t v17 = log;
    _os_log_impl(&dword_1AFD01000, log, v174, "Successfully found stocks for symbol entities matching property query=%s, results=[%s]", v178, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v170, -1, -1);
    MEMORY[0x1B3E8F0D0](v178, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease_n();
  }

  uint64_t v45 = *(NSObject **)(v0 + 696);
  uint64_t v46 = *(void *)(v0 + 672);
  uint64_t v47 = *(void *)(v0 + 664);
  sub_1AFFC8E48();
  uint64_t v48 = sub_1AFE26220(v47, v46, v16);
  os_log_t loga = v45;
  swift_release();
  swift_retain_n();
  sub_1AFFC8E38();
  sub_1AFFC8E48();
  uint64_t v49 = sub_1AFFCA888();
  os_log_type_t v50 = sub_1AFFCB458();
  BOOL v51 = os_log_type_enabled(v49, v50);
  int64_t v21 = *(void *)(v0 + 672);
  unint64_t v52 = *(void *)(v0 + 656);
  if (v51)
  {
    os_log_type_t v167 = v50;
    uint64_t v175 = v49;
    int64_t v53 = (uint64_t *)(v0 + 464);
    uint64_t v54 = *(void *)(v0 + 648);
    uint64_t v55 = swift_slowAlloc();
    uint64_t v165 = swift_slowAlloc();
    *(void *)(v0 + 448) = v165;
    *(_DWORD *)uint64_t v55 = 136315394;
    sub_1AFFC8E38();
    uint64_t v56 = v54;
    uint64_t v57 = (uint64_t *)(v0 + 448);
    *(void *)(v0 + 456) = sub_1AFD36BA8(v56, v52, (uint64_t *)(v0 + 448));
    sub_1AFFCB688();
    swift_bridgeObjectRelease_n();
    swift_release();
    uint64_t v171 = (uint8_t *)v55;
    *(_WORD *)(v55 + 12) = 2080;
    unint64_t v25 = *(void *)(v48 + 16);
    uint64_t v58 = MEMORY[0x1E4FBC860];
    if (v25)
    {
      uint64_t v179 = (uint64_t *)(v0 + 448);
      *int64_t v53 = MEMORY[0x1E4FBC860];
      sub_1AFD9DA10(0, v25, 0);
      uint64_t v59 = *v53;
      uint64_t v60 = sub_1AFD73DB0(v48);
      uint64_t v62 = v61;
      char v64 = v63 & 1;
      v190 = (void *)(v0 + 464);
      unint64_t v65 = (void *)(v0 + 464);
      while ((v60 & 0x8000000000000000) == 0 && v60 < 1 << *(unsigned char *)(v48 + 32))
      {
        if (((*(void *)(v48 + 56 + (((unint64_t)v60 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v60) & 1) == 0) {
          goto LABEL_112;
        }
        if (*(_DWORD *)(v48 + 36) != v62) {
          goto LABEL_113;
        }
        char v197 = v64;
        int64_t v66 = (int64_t *)(*(void *)(v48 + 48) + 136 * v60);
        int64_t v21 = *v66;
        int64_t v67 = v66[1];
        *unint64_t v65 = v59;
        unint64_t v0 = *(void *)(v59 + 16);
        unint64_t v68 = *(void *)(v59 + 24);
        sub_1AFFC8E38();
        if (v0 >= v68 >> 1)
        {
          sub_1AFD9DA10(v68 > 1, v0 + 1, 1);
          uint64_t v59 = *v190;
        }
        *(void *)(v59 + 16) = v0 + 1;
        uint64_t v69 = v59 + 16 * v0;
        *(void *)(v69 + 32) = v21;
        *(void *)(v69 + 40) = v67;
        uint64_t v70 = sub_1AFD73E54(v60, v62, v197 & 1, v48);
        uint64_t v60 = v70;
        uint64_t v62 = v71;
        char v64 = v72 & 1;
        --v25;
        unint64_t v65 = v190;
        if (!v25)
        {
          uint64_t v58 = v59;
          sub_1AFD76098(v70, v71, v64);
          unint64_t v0 = v188;
          uint64_t v57 = v179;
          goto LABEL_32;
        }
      }
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
      goto LABEL_114;
    }
LABEL_32:
    *(void *)(v0 + 472) = v58;
    sub_1AFE28A20(0, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1AFD371B8();
    uint64_t v73 = sub_1AFFCAD88();
    unint64_t v75 = v74;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 480) = sub_1AFD36BA8(v73, v75, v57);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    swift_release_n();
    uint64_t v49 = v175;
    _os_log_impl(&dword_1AFD01000, v175, v167, "Filtered stocks for symbol entities matching property query=%s, filtered=[%s]", v171, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v165, -1, -1);
    MEMORY[0x1B3E8F0D0](v171, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release_n();
  }

  uint64_t v76 = *(void *)(v0 + 632);
  if (v76)
  {
    if (*(unsigned char *)(v0 + 720))
    {
      uint64_t v48 = sub_1AFD6EE90(v48, v76);
    }
    else
    {
      uint64_t v77 = sub_1AFD70C00(v48, v76);
      swift_release();
      uint64_t v48 = v77;
    }
    swift_bridgeObjectRetain_n();
    long long v81 = sub_1AFFCA888();
    os_log_type_t v82 = sub_1AFFCB458();
    if (os_log_type_enabled(v81, v82))
    {
      os_log_type_t v168 = v82;
      v176 = v81;
      uint64_t v83 = (_DWORD *)swift_slowAlloc();
      long long v186 = (uint64_t *)(v0 + 408);
      uint64_t v166 = swift_slowAlloc();
      *(void *)(v0 + 408) = v166;
      uint64_t v172 = v83;
      _DWORD *v83 = 136315394;
      int64_t v21 = *(void *)(v48 + 16);
      uint64_t v84 = MEMORY[0x1E4FBC860];
      if (v21)
      {
        uint64_t v85 = (uint64_t *)(v0 + 416);
        *(void *)(v0 + 416) = MEMORY[0x1E4FBC860];
        sub_1AFFC8E38();
        sub_1AFD9DA10(0, v21, 0);
        uint64_t v84 = *(void *)(v0 + 416);
        unint64_t v25 = sub_1AFD73DB0(v48);
        uint64_t v87 = v86;
        char v89 = v88 & 1;
        while ((v25 & 0x8000000000000000) == 0 && (uint64_t)v25 < 1 << *(unsigned char *)(v48 + 32))
        {
          if (((*(void *)(v48 + 56 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v25) & 1) == 0) {
            goto LABEL_115;
          }
          if (*(_DWORD *)(v48 + 36) != v87) {
            goto LABEL_116;
          }
          char v198 = v89;
          long long v90 = (uint64_t *)(*(void *)(v48 + 48) + 136 * v25);
          uint64_t v91 = v90[1];
          uint64_t v194 = *v90;
          *uint64_t v85 = v84;
          unint64_t v0 = *(void *)(v84 + 16);
          unint64_t v92 = *(void *)(v84 + 24);
          sub_1AFFC8E38();
          if (v0 >= v92 >> 1)
          {
            sub_1AFD9DA10(v92 > 1, v0 + 1, 1);
            uint64_t v84 = *v85;
          }
          *(void *)(v84 + 16) = v0 + 1;
          uint64_t v93 = v84 + 16 * v0;
          *(void *)(v93 + 32) = v194;
          *(void *)(v93 + 40) = v91;
          uint64_t v94 = sub_1AFD73E54(v25, v87, v198 & 1, v48);
          unint64_t v25 = v94;
          uint64_t v87 = v95;
          char v89 = v96 & 1;
          if (!--v21)
          {
            sub_1AFD76098(v94, v95, v89);
            swift_bridgeObjectRelease();
            unint64_t v0 = v188;
            goto LABEL_52;
          }
        }
LABEL_114:
        __break(1u);
LABEL_115:
        __break(1u);
LABEL_116:
        __break(1u);
        goto LABEL_117;
      }
LABEL_52:
      *(void *)(v0 + 424) = v84;
      sub_1AFE28A20(0, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
      sub_1AFD371B8();
      uint64_t v97 = sub_1AFFCAD88();
      unint64_t v99 = v98;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 432) = sub_1AFD36BA8(v97, v99, v186);
      sub_1AFFCB688();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      *((_WORD *)v172 + 6) = 2080;
      char v100 = sub_1AFFC8F38();
      BOOL v101 = (v100 & 1) == 0;
      if (v100) {
        uint64_t v102 = 6581857;
      }
      else {
        uint64_t v102 = 29295;
      }
      if (v101) {
        unint64_t v103 = 0xE200000000000000;
      }
      else {
        unint64_t v103 = 0xE300000000000000;
      }
      *(void *)(v0 + 440) = sub_1AFD36BA8(v102, v103, v186);
      sub_1AFFCB688();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AFD01000, v176, v168, "Combined stock query results into accumulated results=[%s], comparatorMode=%s", (uint8_t *)v172, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1B3E8F0D0](v166, -1, -1);
      MEMORY[0x1B3E8F0D0](v172, -1, -1);

      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    unint64_t v78 = sub_1AFFCA888();
    os_log_type_t v79 = sub_1AFFCB458();
    if (os_log_type_enabled(v78, v79))
    {
      uint64_t v80 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v80 = 0;
      _os_log_impl(&dword_1AFD01000, v78, v79, "No existing result for symbol property queries, so storing first results", v80, 2u);
      MEMORY[0x1B3E8F0D0](v80, -1, -1);

      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_release();
    }
  }
  uint64_t v104 = *(void *)(v0 + 640) + 1;
  if (v104 == *(void *)(v0 + 624))
  {
    p_isa = (void *)(v0 + 392);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain_n();
    long long v106 = sub_1AFFCA888();
    os_log_type_t v107 = sub_1AFFCB478();
    if (os_log_type_enabled(v106, v107))
    {
      os_log_type_t v191 = v107;
      long long v108 = (uint8_t *)swift_slowAlloc();
      uint64_t v180 = swift_slowAlloc();
      v203[0] = v180;
      *(_DWORD *)long long v108 = 136315138;
      int64_t v21 = *(void *)(v48 + 16);
      uint64_t v109 = MEMORY[0x1E4FBC860];
      if (v21)
      {
        uint64_t v169 = v108;
        uint64_t v173 = v106;
        os_log_t v177 = (os_log_t)(v0 + 392);
        *(void *)&v201[0] = MEMORY[0x1E4FBC860];
        sub_1AFD9DA10(0, v21, 0);
        uint64_t v109 = *(void *)&v201[0];
        unint64_t v25 = sub_1AFD73DB0(v48);
        uint64_t v111 = v110;
        char v113 = v112 & 1;
        while ((v25 & 0x8000000000000000) == 0 && (uint64_t)v25 < 1 << *(unsigned char *)(v48 + 32))
        {
          if (((*(void *)(v48 + 56 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v25) & 1) == 0) {
            goto LABEL_118;
          }
          if (*(_DWORD *)(v48 + 36) != v111) {
            goto LABEL_119;
          }
          char v199 = v113;
          uint64_t v114 = (uint64_t *)(*(void *)(v48 + 48) + 136 * v25);
          uint64_t v115 = *v114;
          uint64_t v116 = v114[1];
          *(void *)&v201[0] = v109;
          unint64_t v0 = *(void *)(v109 + 16);
          unint64_t v117 = *(void *)(v109 + 24);
          sub_1AFFC8E38();
          if (v0 >= v117 >> 1)
          {
            sub_1AFD9DA10(v117 > 1, v0 + 1, 1);
            uint64_t v109 = *(void *)&v201[0];
          }
          *(void *)(v109 + 16) = v0 + 1;
          uint64_t v118 = v109 + 16 * v0;
          *(void *)(v118 + 32) = v115;
          *(void *)(v118 + 40) = v116;
          uint64_t v119 = sub_1AFD73E54(v25, v111, v199 & 1, v48);
          unint64_t v25 = v119;
          uint64_t v111 = v120;
          char v113 = v121 & 1;
          if (!--v21)
          {
            sub_1AFD76098(v119, v120, v113);
            unint64_t v0 = v188;
            long long v106 = v173;
            p_isa = &v177->isa;
            long long v108 = v169;
            goto LABEL_78;
          }
        }
LABEL_117:
        __break(1u);
LABEL_118:
        __break(1u);
LABEL_119:
        __break(1u);
        goto LABEL_120;
      }
LABEL_78:
      void *p_isa = v109;
      sub_1AFE28A20(0, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
      sub_1AFD371B8();
      uint64_t v132 = sub_1AFFCAD88();
      unint64_t v134 = v133;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 400) = sub_1AFD36BA8(v132, v134, v203);
      sub_1AFFCB688();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1AFD01000, v106, v191, "Successfully applied all queries, found stocks=[%s]", v108, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1B3E8F0D0](v180, -1, -1);
      MEMORY[0x1B3E8F0D0](v108, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v135 = *(void *)(v0 + 576);
    uint64_t v136 = sub_1AFD70334(v48);
    swift_bridgeObjectRelease();
    *(void *)&v201[0] = v136;
    sub_1AFFC8E38();
    sub_1AFFC8E48();
    sub_1AFE28450((uint64_t *)v201, v135);
    if (loga)
    {
      swift_bridgeObjectRelease();
      return swift_release();
    }
    double v137 = (void *)(v0 + 376);
    swift_bridgeObjectRelease();
    swift_release();
    int64_t v21 = *(void *)&v201[0];
    swift_retain_n();
    uint64_t v138 = sub_1AFFCA888();
    os_log_type_t v139 = sub_1AFFCB478();
    if (os_log_type_enabled(v138, v139))
    {
      os_log_type_t v200 = v139;
      char v192 = (uint64_t *)(v0 + 384);
      uint64_t v140 = (uint8_t *)swift_slowAlloc();
      uint64_t v195 = swift_slowAlloc();
      v203[0] = v195;
      *(_DWORD *)uint64_t v140 = 136315138;
      int64_t v141 = *(void *)(v21 + 16);
      uint64_t v142 = MEMORY[0x1E4FBC860];
      if (v141)
      {
        uint64_t v181 = v140;
        os_log_t logb = v138;
        long long v187 = (void *)(v0 + 376);
        *(void *)&v201[0] = MEMORY[0x1E4FBC860];
        sub_1AFD9DA10(0, v141, 0);
        uint64_t v142 = *(void *)&v201[0];
        unint64_t v143 = *(void *)(*(void *)&v201[0] + 16);
        uint64_t v144 = 16 * v143;
        uint64_t v145 = (uint64_t *)(v21 + 40);
        do
        {
          uint64_t v146 = *(v145 - 1);
          uint64_t v147 = *v145;
          *(void *)&v201[0] = v142;
          int64_t v148 = v143 + 1;
          unint64_t v149 = *(void *)(v142 + 24);
          sub_1AFFC8E38();
          if (v143 >= v149 >> 1)
          {
            sub_1AFD9DA10(v149 > 1, v148, 1);
            uint64_t v142 = *(void *)&v201[0];
          }
          *(void *)(v142 + 16) = v148;
          uint64_t v150 = v142 + v144;
          *(void *)(v150 + 32) = v146;
          *(void *)(v150 + 40) = v147;
          v144 += 16;
          v145 += 17;
          ++v143;
          --v141;
        }
        while (v141);
        double v137 = v187;
        unint64_t v0 = v188;
        uint64_t v140 = v181;
        uint64_t v138 = logb;
      }
      *double v137 = v142;
      sub_1AFE28A20(0, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
      sub_1AFD371B8();
      uint64_t v151 = sub_1AFFCAD88();
      unint64_t v153 = v152;
      swift_bridgeObjectRelease();
      *char v192 = sub_1AFD36BA8(v151, v153, v203);
      sub_1AFFCB688();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_1AFD01000, v138, v200, "Applied sorts to sortedStocks=[%s]", v140, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1B3E8F0D0](v195, -1, -1);
      MEMORY[0x1B3E8F0D0](v140, -1, -1);
    }
    else
    {
      swift_release_n();
    }

    if (*(unsigned char *)(v0 + 721))
    {
      uint64_t v156 = v21;
LABEL_105:
      *(void *)(v0 + 704) = v156;
      uint64_t v162 = *(void *)(v0 + 608);
      *(_OWORD *)(v0 + 328) = *(_OWORD *)(v0 + 592);
      *(void *)(v0 + 344) = v162;
      uint64_t v163 = swift_task_alloc();
      *(void *)(v0 + 712) = v163;
      *(void *)uint64_t v163 = v0;
      *(void *)(v163 + 8) = sub_1AFE210D0;
      *(void *)(v163 + 312) = *(void *)(v0 + 560);
      *(void *)(v163 + 320) = v156;
      *(_OWORD *)(v163 + 328) = *(_OWORD *)(v0 + 328);
      *(void *)(v163 + 344) = *(void *)(v0 + 344);
      return MEMORY[0x1F4188298](sub_1AFE1D188, 0, 0);
    }
    unint64_t v25 = *(void *)(v0 + 584);
    if ((v25 & 0x8000000000000000) == 0)
    {
      if (*(void *)(v21 + 16) >= v25)
      {
        sub_1AFFCBD08();
        swift_unknownObjectRetain_n();
        uint64_t v154 = swift_dynamicCastClass();
        if (v154)
        {
          unint64_t v155 = v25;
        }
        else
        {
          swift_release();
          unint64_t v155 = *(void *)(v0 + 584);
          uint64_t v154 = MEMORY[0x1E4FBC860];
        }
        uint64_t v157 = *(void *)(v154 + 16);
        swift_release();
        if (v157 == v155)
        {
          uint64_t v156 = swift_dynamicCastClass();
          if (!v156)
          {
            swift_release();
            uint64_t v156 = MEMORY[0x1E4FBC860];
          }
          goto LABEL_102;
        }
LABEL_122:
        swift_release();
        uint64_t v156 = sub_1AFD70188(v21, v21 + 32, 0, (2 * v25) | 1);
LABEL_102:
        swift_release();
        uint64_t v158 = sub_1AFFCA888();
        os_log_type_t v159 = sub_1AFFCB478();
        if (os_log_type_enabled(v158, v159))
        {
          uint64_t v160 = *(void *)(v0 + 584);
          uint64_t v161 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)uint64_t v161 = 134217984;
          *(void *)(v0 + 368) = v160;
          sub_1AFFCB688();
          _os_log_impl(&dword_1AFD01000, v158, v159, "Limited results down to limit=%ld", v161, 0xCu);
          MEMORY[0x1B3E8F0D0](v161, -1, -1);
        }

        goto LABEL_105;
      }
LABEL_121:
      __break(1u);
      goto LABEL_122;
    }
LABEL_120:
    __break(1u);
    goto LABEL_121;
  }
  *(void *)(v0 + 640) = v104;
  *(void *)(v0 + 632) = v48;
  uint64_t v122 = (void *)(*(void *)(v0 + 568) + 32 * v104);
  uint64_t v123 = v122[4];
  *(void *)(v0 + 648) = v123;
  unint64_t v124 = v122[5];
  *(void *)(v0 + 656) = v124;
  *(void *)(v0 + 664) = v122[6];
  *(void *)(v0 + 672) = v122[7];
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  unint64_t v125 = sub_1AFFCA888();
  os_log_type_t v126 = sub_1AFFCB458();
  if (os_log_type_enabled(v125, v126))
  {
    uint64_t v127 = swift_slowAlloc();
    uint64_t v128 = swift_slowAlloc();
    *(void *)&v201[0] = v128;
    *(_DWORD *)uint64_t v127 = 136315138;
    sub_1AFFC8E38();
    *(void *)(v127 + 4) = sub_1AFD36BA8(v123, v124, (uint64_t *)v201);
    swift_bridgeObjectRelease_n();
    swift_release();
    _os_log_impl(&dword_1AFD01000, v125, v126, "Querying stocks for symbol entities matching property query=%s", (uint8_t *)v127, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v128, -1, -1);
    MEMORY[0x1B3E8F0D0](v127, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
  }

  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8998();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v129 = *(void *)(v0 + 312);
  uint64_t v130 = *(void *)(v0 + 320);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 288), v129);
  *(void *)(v0 + 680) = sub_1AFD4EE28(v123, v124, v129, v130);
  uint64_t v131 = (void *)swift_task_alloc();
  *(void *)(v0 + 688) = v131;
  *uint64_t v131 = v0;
  v131[1] = sub_1AFE1F8B8;
  return MEMORY[0x1F415EBC8](v0 + 360);
}

uint64_t sub_1AFE210D0()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1AFE211E4()
{
  swift_bridgeObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 288);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1AFE21260@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E9AF8D28 != -1) {
    swift_once();
  }
  sub_1AFE267D4();
  uint64_t v3 = v2;
  uint64_t v4 = __swift_project_value_buffer(v2, (uint64_t)qword_1E9AFB1A0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v5(a1, v4, v3);
}

uint64_t sub_1AFE21308@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E9AF8D30 != -1) {
    swift_once();
  }
  sub_1AFE28E88(0, &qword_1E9AFB208, (uint64_t (*)(void))sub_1AFE26838, (uint64_t)&type metadata for SymbolWidgetEntity, MEMORY[0x1E4F18730]);
  uint64_t v3 = v2;
  uint64_t v4 = __swift_project_value_buffer(v2, (uint64_t)qword_1E9AFB1B8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v5(a1, v4, v3);
}

uint64_t sub_1AFE213EC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  char v12 = a3 & 1;
  char v13 = a6 & 1;
  uint64_t v14 = swift_task_alloc();
  *(void *)(v7 + 16) = v14;
  *(void *)uint64_t v14 = v7;
  *(void *)(v14 + 8) = sub_1AFD56424;
  *(unsigned char *)(v14 + 721) = v13;
  *(void *)(v14 + 584) = a5;
  *(void *)(v14 + 576) = a4;
  *(unsigned char *)(v14 + 720) = v12;
  *(void *)(v14 + 568) = a2;
  *(void *)(v14 + 560) = a1;
  *(_OWORD *)(v14 + 592) = *(_OWORD *)v6;
  *(void *)(v14 + 608) = *(void *)(v6 + 16);
  return MEMORY[0x1F4188298](sub_1AFE1F36C, 0, 0);
}

uint64_t sub_1AFE214E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1AFE28E88(0, &qword_1E9AFB278, (uint64_t (*)(void))sub_1AFE26838, (uint64_t)&type metadata for SymbolWidgetEntity, MEMORY[0x1E4F18450]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  long long v10 = (char *)v41 - v9;
  long long v11 = *(_OWORD *)(a1 + 112);
  long long v78 = *(_OWORD *)(a1 + 96);
  long long v79 = v11;
  uint64_t v80 = *(void *)(a1 + 128);
  long long v12 = *(_OWORD *)(a1 + 48);
  long long v74 = *(_OWORD *)(a1 + 32);
  long long v75 = v12;
  long long v13 = *(_OWORD *)(a1 + 80);
  long long v76 = *(_OWORD *)(a1 + 64);
  long long v77 = v13;
  long long v14 = *(_OWORD *)(a1 + 16);
  long long v72 = *(_OWORD *)a1;
  long long v73 = v14;
  long long v15 = *(_OWORD *)(a2 + 112);
  long long v87 = *(_OWORD *)(a2 + 96);
  long long v88 = v15;
  uint64_t v89 = *(void *)(a2 + 128);
  long long v16 = *(_OWORD *)(a2 + 48);
  long long v83 = *(_OWORD *)(a2 + 32);
  long long v84 = v16;
  long long v17 = *(_OWORD *)(a2 + 80);
  long long v85 = *(_OWORD *)(a2 + 64);
  long long v86 = v17;
  long long v18 = *(_OWORD *)(a2 + 16);
  long long v81 = *(_OWORD *)a2;
  long long v82 = v18;
  uint64_t v19 = *(void *)(a3 + 16);
  if (v19)
  {
    int64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    uint64_t v20 = v8 + 16;
    uint64_t v22 = a3 + ((*(unsigned __int8 *)(v20 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 64));
    uint64_t v45 = v21;
    uint64_t v46 = (void (**)(char *, uint64_t))(v20 - 8);
    uint64_t v42 = *(void *)(v20 + 56);
    v41[1] = a3;
    sub_1AFFC8E38();
    uint64_t v43 = v20;
    uint64_t v44 = MEMORY[0x1E4FBC840] + 8;
    uint64_t v90 = v7;
    while (1)
    {
      uint64_t v48 = v22;
      uint64_t v49 = v19;
      v45(v10, v22, v7);
      long long v61 = v78;
      long long v62 = v79;
      uint64_t v63 = v80;
      long long v57 = v74;
      long long v58 = v75;
      long long v59 = v76;
      long long v60 = v77;
      long long v55 = v72;
      long long v56 = v73;
      sub_1AFD76370((uint64_t)&v72);
      sub_1AFE4275C(&v55, &v64);
      uint64_t v24 = v64;
      uint64_t v25 = v65;
      uint64_t v26 = v66;
      uint64_t v27 = v67;
      uint64_t v28 = v69;
      uint64_t v29 = v71;
      uint64_t v51 = v70;
      uint64_t v52 = v68;
      sub_1AFFC8BC8();
      *(void *)&long long v55 = v24;
      *((void *)&v55 + 1) = v25;
      *(void *)&long long v56 = v26;
      *((void *)&v56 + 1) = v27;
      *(void *)&long long v57 = v52;
      *((void *)&v57 + 1) = v28;
      *(void *)&long long v58 = v51;
      *((void *)&v58 + 1) = v29;
      swift_getAtPartialKeyPath();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((swift_dynamicCast() & 1) == 0)
      {
        uint64_t v39 = v90;
        goto LABEL_18;
      }
      uint64_t v47 = v53;
      uint64_t v52 = v54;
      long long v61 = v87;
      long long v62 = v88;
      uint64_t v63 = v89;
      long long v57 = v83;
      long long v58 = v84;
      long long v59 = v85;
      long long v60 = v86;
      long long v55 = v81;
      long long v56 = v82;
      sub_1AFD76370((uint64_t)&v81);
      sub_1AFE4275C(&v55, &v64);
      uint64_t v30 = v64;
      uint64_t v31 = v65;
      uint64_t v32 = v66;
      uint64_t v33 = v67;
      uint64_t v34 = v69;
      uint64_t v35 = v71;
      uint64_t v50 = v70;
      uint64_t v51 = v68;
      sub_1AFFC8BC8();
      *(void *)&long long v55 = v30;
      *((void *)&v55 + 1) = v31;
      *(void *)&long long v56 = v32;
      *((void *)&v56 + 1) = v33;
      *(void *)&long long v57 = v51;
      *((void *)&v57 + 1) = v34;
      *(void *)&long long v58 = v50;
      *((void *)&v58 + 1) = v35;
      swift_getAtPartialKeyPath();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((swift_dynamicCast() & 1) == 0) {
        break;
      }
      uint64_t v37 = v53;
      uint64_t v36 = v54;
      uint64_t v7 = v90;
      if (sub_1AFFC8BD8())
      {
        if (v47 == v37 && v52 == v36)
        {
          swift_bridgeObjectRelease_n();
          (*v46)(v10, v7);
        }
        else
        {
          char v23 = sub_1AFFCBCE8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          (*v46)(v10, v7);
          if (v23) {
            goto LABEL_15;
          }
        }
      }
      else if (v37 == v47 && v36 == v52)
      {
        (*v46)(v10, v7);
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v38 = sub_1AFFCBCE8();
        (*v46)(v10, v7);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v38)
        {
LABEL_15:
          swift_bridgeObjectRelease();
          return 1;
        }
      }
      uint64_t v22 = v48 + v42;
      uint64_t v19 = v49 - 1;
      if (v49 == 1) {
        goto LABEL_15;
      }
    }
    uint64_t v39 = v90;
    swift_bridgeObjectRelease();
LABEL_18:
    swift_bridgeObjectRelease();
    MEMORY[0x1B3E8C360]("Encountered a SymbolWidgetEntity value in SymbolQuery which is not a String. We need to add explicit support for this in the property queries.", 142, 2, MEMORY[0x1E4FBC860]);
    (*v46)(v10, v39);
  }
  return 1;
}

uint64_t sub_1AFE21A2C(char *a1, char *__src, unint64_t a3, char *__dst, uint64_t a5)
{
  uint64_t v7 = __dst;
  uint64_t v9 = __src;
  uint64_t v10 = __src - a1;
  uint64_t v11 = (__src - a1) / 136;
  uint64_t v12 = a3 - (void)__src;
  uint64_t v13 = (uint64_t)(a3 - (void)__src) / 136;
  uint64_t v80 = a1;
  long long v79 = __dst;
  if (v11 >= v13)
  {
    if (v12 < -135) {
      goto LABEL_50;
    }
    if (__dst != __src || &__src[136 * v13] <= __dst) {
      memmove(__dst, __src, 136 * v13);
    }
    uint64_t v34 = &v7[136 * v13];
    long long v78 = v34;
    uint64_t v80 = v9;
    if (a1 >= v9 || v12 < 136) {
      goto LABEL_49;
    }
    uint64_t v35 = (char *)(a3 - 136);
    long long v56 = v7;
    while (1)
    {
      long long v60 = *(_OWORD *)(v34 - 136);
      long long v36 = *(_OWORD *)(v34 - 120);
      long long v37 = *(_OWORD *)(v34 - 104);
      long long v38 = *(_OWORD *)(v34 - 72);
      long long v63 = *(_OWORD *)(v34 - 88);
      long long v64 = v38;
      long long v61 = v36;
      long long v62 = v37;
      long long v39 = *(_OWORD *)(v34 - 56);
      long long v40 = *(_OWORD *)(v34 - 40);
      long long v41 = *(_OWORD *)(v34 - 24);
      uint64_t v68 = *((void *)v34 - 1);
      long long v66 = v40;
      long long v67 = v41;
      long long v65 = v39;
      memmove(__dsta, v34 - 136, 0x88uLL);
      uint64_t v42 = v9 - 136;
      long long v69 = *(_OWORD *)(v9 - 136);
      long long v43 = *(_OWORD *)(v9 - 120);
      long long v44 = *(_OWORD *)(v9 - 104);
      long long v45 = *(_OWORD *)(v9 - 72);
      long long v72 = *(_OWORD *)(v9 - 88);
      long long v73 = v45;
      long long v70 = v43;
      long long v71 = v44;
      long long v46 = *(_OWORD *)(v9 - 56);
      long long v47 = *(_OWORD *)(v9 - 40);
      long long v48 = *(_OWORD *)(v9 - 24);
      uint64_t v77 = *((void *)v9 - 1);
      long long v75 = v47;
      long long v76 = v48;
      long long v74 = v46;
      memmove(v58, v9 - 136, 0x88uLL);
      sub_1AFD76370((uint64_t)&v60);
      sub_1AFD76370((uint64_t)&v69);
      char v49 = sub_1AFE214E8((uint64_t)__dsta, (uint64_t)v58, a5);
      if (v5)
      {
        long long v78 = v34;
        uint64_t v80 = v9;
LABEL_45:
        sub_1AFD76408((uint64_t)&v69);
        sub_1AFD76408((uint64_t)&v60);
        goto LABEL_49;
      }
      char v50 = v49;
      uint64_t v51 = a5;
      uint64_t v52 = v35 + 136;
      sub_1AFD76408((uint64_t)&v69);
      sub_1AFD76408((uint64_t)&v60);
      if (v50)
      {
        if (v52 == v9)
        {
          BOOL v53 = v35 >= v9;
          v9 -= 136;
          goto LABEL_32;
        }
        v9 -= 136;
      }
      else
      {
        uint64_t v42 = v34 - 136;
        if (v52 == v34)
        {
          BOOL v53 = v35 >= v34;
          v34 -= 136;
LABEL_32:
          a5 = v51;
          uint64_t v54 = a1;
          if (!v53) {
            goto LABEL_39;
          }
          goto LABEL_38;
        }
        v34 -= 136;
      }
      a5 = v51;
      uint64_t v54 = a1;
LABEL_38:
      memmove(v35, v42, 0x88uLL);
LABEL_39:
      if (v34 <= v56 || v9 <= v54)
      {
        long long v78 = v34;
        uint64_t v80 = v9;
        goto LABEL_49;
      }
      v35 -= 136;
    }
  }
  if (v10 < -135)
  {
LABEL_50:
    swift_bridgeObjectRelease();
    uint64_t result = sub_1AFFCBA28();
    __break(1u);
    return result;
  }
  long long v14 = a1;
  if (__dst != a1 || &a1[136 * v11] <= __dst) {
    memmove(__dst, a1, 136 * v11);
  }
  long long v15 = &v7[136 * v11];
  long long v78 = v15;
  if ((unint64_t)v9 >= a3 || v10 < 136) {
    goto LABEL_49;
  }
  long long v16 = v7;
  while (1)
  {
    long long v60 = *(_OWORD *)v9;
    long long v17 = *((_OWORD *)v9 + 1);
    long long v18 = *((_OWORD *)v9 + 2);
    long long v19 = *((_OWORD *)v9 + 4);
    long long v63 = *((_OWORD *)v9 + 3);
    long long v64 = v19;
    long long v61 = v17;
    long long v62 = v18;
    long long v20 = *((_OWORD *)v9 + 5);
    long long v21 = *((_OWORD *)v9 + 6);
    long long v22 = *((_OWORD *)v9 + 7);
    uint64_t v68 = *((void *)v9 + 16);
    long long v66 = v21;
    long long v67 = v22;
    long long v65 = v20;
    memmove(__dsta, v9, 0x88uLL);
    long long v69 = *(_OWORD *)v16;
    long long v23 = *((_OWORD *)v16 + 1);
    long long v24 = *((_OWORD *)v16 + 2);
    long long v25 = *((_OWORD *)v16 + 4);
    long long v72 = *((_OWORD *)v16 + 3);
    long long v73 = v25;
    long long v70 = v23;
    long long v71 = v24;
    long long v26 = *((_OWORD *)v16 + 5);
    long long v27 = *((_OWORD *)v16 + 6);
    long long v28 = *((_OWORD *)v16 + 7);
    uint64_t v77 = *((void *)v16 + 16);
    long long v75 = v27;
    long long v76 = v28;
    long long v74 = v26;
    memmove(v58, v16, 0x88uLL);
    sub_1AFD76370((uint64_t)&v60);
    sub_1AFD76370((uint64_t)&v69);
    char v29 = sub_1AFE214E8((uint64_t)__dsta, (uint64_t)v58, a5);
    if (v5)
    {
      long long v79 = v7;
      uint64_t v80 = v14;
      goto LABEL_45;
    }
    char v30 = v29;
    sub_1AFD76408((uint64_t)&v69);
    sub_1AFD76408((uint64_t)&v60);
    if ((v30 & 1) == 0)
    {
      uint64_t v7 = v16 + 136;
      uint64_t v31 = v16;
      BOOL v32 = v14 == v16;
      v16 += 136;
      if (v32) {
        goto LABEL_16;
      }
LABEL_15:
      memmove(v14, v31, 0x88uLL);
      goto LABEL_16;
    }
    uint64_t v31 = v9;
    BOOL v32 = v14 == v9;
    v9 += 136;
    if (!v32) {
      goto LABEL_15;
    }
LABEL_16:
    uint64_t v33 = v14 + 136;
    if (v16 >= v15)
    {
      long long v79 = v7;
      goto LABEL_48;
    }
    if ((unint64_t)v9 >= a3) {
      break;
    }
    v14 += 136;
  }
  long long v79 = v7;
  uint64_t v33 = v14 + 136;
LABEL_48:
  uint64_t v80 = v33;
LABEL_49:
  sub_1AFEE61C8((void **)&v80, (const void **)&v79, &v78);
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_1AFE21EAC(uint64_t a1, long long *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = (uint64_t)a2;
  uint64_t v6 = *v2;
  long long v7 = a2[1];
  long long v47 = *a2;
  v48[0] = v7;
  *(_OWORD *)((char *)v48 + 10) = *(long long *)((char *)a2 + 26);
  sub_1AFFCBDF8();
  sub_1AFFC8E38();
  sub_1AFEAB9DC();
  uint64_t v8 = sub_1AFFCBE38();
  uint64_t v9 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v10 = v8 & ~v9;
  uint64_t v43 = v6 + 56;
  if ((*(void *)(v6 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    long long v36 = v2;
    uint64_t v41 = ~v9;
    uint64_t v11 = *(void *)(v4 + 8);
    uint64_t v45 = *(void *)v4;
    uint64_t v12 = *(void **)(v4 + 16);
    uint64_t v39 = *(void *)(v4 + 32);
    uint64_t v40 = *(void *)(v4 + 24);
    sub_1AFD8D5B8(v4 + 40, (uint64_t)&v49);
    uint64_t v37 = v4;
    int v38 = *(unsigned __int8 *)(v4 + 41);
    uint64_t v42 = *(void *)(v6 + 48);
    while (1)
    {
      uint64_t v13 = v42 + 48 * v10;
      long long v14 = *(void **)(v13 + 16);
      uint64_t v15 = *(void *)(v13 + 24);
      uint64_t v16 = *(void *)(v13 + 32);
      unsigned int v17 = *(unsigned __int8 *)(v13 + 40);
      int v44 = *(unsigned __int8 *)(v13 + 41);
      BOOL v18 = *(void *)v13 == v45 && *(void *)(v13 + 8) == v11;
      if (!v18 && (sub_1AFFCBCE8() & 1) == 0) {
        goto LABEL_52;
      }
      uint64_t v19 = v14[2];
      if (v19 != v12[2]) {
        goto LABEL_52;
      }
      if (v19) {
        BOOL v20 = v14 == v12;
      }
      else {
        BOOL v20 = 1;
      }
      if (!v20)
      {
        BOOL v21 = v14[4] == v12[4] && v14[5] == v12[5];
        if (!v21 && (sub_1AFFCBCE8() & 1) == 0) {
          goto LABEL_52;
        }
        if (v19 != 1)
        {
          BOOL v22 = v14[6] == v12[6] && v14[7] == v12[7];
          if (!v22 && (sub_1AFFCBCE8() & 1) == 0) {
            goto LABEL_52;
          }
          uint64_t v23 = v19 - 2;
          if (v23)
          {
            long long v24 = v14 + 9;
            long long v25 = v12 + 9;
            do
            {
              BOOL v26 = *(v24 - 1) == *(v25 - 1) && *v24 == *v25;
              if (!v26 && (sub_1AFFCBCE8() & 1) == 0) {
                goto LABEL_52;
              }
              v25 += 2;
              v24 += 2;
            }
            while (--v23);
          }
        }
      }
      if (v15 == v40 && v16 == v39 || (sub_1AFFCBCE8() & 1) != 0)
      {
        switch(v17 >> 5)
        {
          case 1u:
            sub_1AFD8D5B8((uint64_t)&v49, (uint64_t)&v52);
            if ((v52 & 0xE0) != 0x20) {
              goto LABEL_52;
            }
            v52 &= 0x1Fu;
            goto LABEL_3;
          case 2u:
            sub_1AFD8D5B8((uint64_t)&v49, (uint64_t)&v53);
            if ((v53 & 0xE0) != 0x40) {
              goto LABEL_52;
            }
            v53 &= 0x1Fu;
            goto LABEL_3;
          case 3u:
            sub_1AFD8D5B8((uint64_t)&v49, (uint64_t)v54);
            if ((v54[0] & 0xE0) != 0x60) {
              goto LABEL_52;
            }
            v54[0] &= 0x1Fu;
            goto LABEL_3;
          case 4u:
            sub_1AFD8D5B8((uint64_t)&v49, (uint64_t)&v47);
            if ((v47 & 0xE0) != 0x80) {
              goto LABEL_52;
            }
            LOBYTE(v47) = v47 & 0x1F;
LABEL_3:
            if (v44 == v38) {
              goto LABEL_56;
            }
            goto LABEL_52;
          case 5u:
            sub_1AFD8D5B8((uint64_t)&v49, (uint64_t)&v50);
            if (v50 != 160) {
              goto LABEL_52;
            }
            goto LABEL_51;
          default:
            sub_1AFD8D5B8((uint64_t)&v49, (uint64_t)&v51);
            if (v51 > 0x1Fu) {
              goto LABEL_52;
            }
LABEL_51:
            if (v44 != v38) {
              goto LABEL_52;
            }
LABEL_56:
            swift_bridgeObjectRelease();
            sub_1AFE28E40(v37);
            uint64_t v30 = *(void *)(*v36 + 48) + 48 * v10;
            uint64_t v32 = *(void *)v30;
            uint64_t v31 = *(void *)(v30 + 8);
            uint64_t v34 = *(void *)(v30 + 16);
            uint64_t v33 = *(void *)(v30 + 24);
            uint64_t v35 = *(void *)(v30 + 32);
            LOWORD(v30) = *(_WORD *)(v30 + 40);
            *(void *)a1 = v32;
            *(void *)(a1 + 8) = v31;
            *(void *)(a1 + 16) = v34;
            *(void *)(a1 + 24) = v33;
            *(void *)(a1 + 32) = v35;
            *(_WORD *)(a1 + 40) = v30;
            sub_1AFFC8E38();
            sub_1AFFC8E38();
            sub_1AFFC8E38();
            uint64_t result = 0;
            break;
        }
        return result;
      }
LABEL_52:
      unint64_t v10 = (v10 + 1) & v41;
      if (((*(void *)(v43 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v4 = v37;
        uint64_t v3 = v36;
        goto LABEL_55;
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_55:
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v46 = *v3;
  uint64_t *v3 = 0x8000000000000000;
  sub_1AFD768D8(v4);
  sub_1AFE23D28(v4, v10, isUniquelyReferenced_nonNull_native);
  uint64_t *v3 = v46;
  swift_bridgeObjectRelease();
  long long v28 = *(_OWORD *)(v4 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v4;
  *(_OWORD *)(a1 + 16) = v28;
  *(_OWORD *)(a1 + 26) = *(_OWORD *)(v4 + 26);
  return 1;
}

uint64_t sub_1AFE22314(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_1AFFCBDF8();
  sub_1AFFC8E38();
  sub_1AFFCAF68();
  uint64_t v8 = sub_1AFFCBE38();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1AFFCBCE8() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      long long v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      sub_1AFFC8E38();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      BOOL v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1AFFCBCE8() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  uint64_t *v3 = 0x8000000000000000;
  sub_1AFFC8E38();
  sub_1AFE24128(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  uint64_t *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1AFE224C4(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1AFFC99F8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1AFDC2380((unint64_t *)&qword_1EB818BB0);
  sub_1AFFC8E38();
  uint64_t v34 = a2;
  uint64_t v11 = sub_1AFFCAD58();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v33 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    char v29 = v2;
    uint64_t v30 = a1;
    uint64_t v31 = ~v12;
    uint64_t v28 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    long long v14 = v16;
    uint64_t v32 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v27[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v32 * v13;
      unint64_t v20 = *(void *)(v10 + 48) + v32 * v13;
      uint64_t v21 = v14;
      v14(v9, v20, v6);
      sub_1AFDC2380(&qword_1EB818BB8);
      char v22 = sub_1AFFCADD8();
      uint64_t v23 = *v17;
      (*v17)(v9, v6);
      if (v22) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v31;
      long long v14 = v21;
      uint64_t v10 = v18;
      if (((*(void *)(v33 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v29;
        a1 = v30;
        uint64_t v7 = v28;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v23(v34, v6);
    v21(v30, *(void *)(*v29 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    long long v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    long long v25 = v34;
    v14(v9, v34, v6);
    uint64_t v35 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    sub_1AFE242C4((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    uint64_t *v3 = v35;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_1AFE227C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = a2;
  uint64_t v6 = *v2;
  long long v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)long long v79 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)&v79[16] = v7;
  *(void *)&v79[32] = *(void *)(a2 + 128);
  long long v8 = *(_OWORD *)(a2 + 48);
  long long v76 = *(_OWORD *)(a2 + 32);
  long long v77 = v8;
  long long v9 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)long long v78 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)&v78[16] = v9;
  long long v10 = *(_OWORD *)(a2 + 16);
  long long v74 = *(_OWORD *)a2;
  long long v75 = v10;
  sub_1AFFCBDF8();
  sub_1AFFC8E38();
  sub_1AFD78C34();
  uint64_t v11 = sub_1AFFCBE38();
  uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v14 = v6 + 56;
  if (((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_51:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v74 = *v3;
    void *v3 = 0x8000000000000000;
    sub_1AFD76370(v4);
    sub_1AFE2453C(v4, v13, isUniquelyReferenced_nonNull_native);
    void *v3 = v74;
    swift_bridgeObjectRelease();
    long long v41 = *(_OWORD *)(v4 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(v4 + 96);
    *(_OWORD *)(a1 + 112) = v41;
    *(void *)(a1 + 128) = *(void *)(v4 + 128);
    long long v42 = *(_OWORD *)(v4 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(v4 + 32);
    *(_OWORD *)(a1 + 48) = v42;
    long long v43 = *(_OWORD *)(v4 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(v4 + 64);
    *(_OWORD *)(a1 + 80) = v43;
    long long v44 = *(_OWORD *)(v4 + 16);
    uint64_t result = 1;
    *(_OWORD *)a1 = *(_OWORD *)v4;
    *(_OWORD *)(a1 + 16) = v44;
    return result;
  }
  long long v58 = v2;
  uint64_t v59 = a1;
  uint64_t v15 = ~v12;
  unint64_t v16 = *(void *)v4;
  unint64_t v17 = *(void *)(v4 + 8);
  unint64_t v19 = *(void *)(v4 + 16);
  unint64_t v18 = *(void *)(v4 + 24);
  *((void *)&v70 + 1) = *(void *)(v4 + 48);
  unint64_t v71 = *(void *)(v4 + 40);
  uint64_t v66 = v6;
  uint64_t v67 = *(unsigned __int8 *)(v4 + 64);
  unint64_t v69 = *(void *)(v4 + 72);
  *(void *)&long long v70 = *(void *)(v4 + 56);
  *((void *)&v64 + 1) = *(void *)(v4 + 88);
  unint64_t v65 = *(void *)(v4 + 80);
  unint64_t v63 = *(void *)(v4 + 112);
  *(void *)&long long v64 = *(void *)(v4 + 96);
  unint64_t v60 = *(void *)(v4 + 120);
  unint64_t v61 = *(void *)(v4 + 104);
  uint64_t v57 = v4;
  unint64_t v62 = *(void *)(v4 + 128);
  unint64_t v20 = *(void *)(v4 + 32);
  unint64_t v68 = v16;
  while (1)
  {
    uint64_t v21 = *(void *)(v6 + 48) + 136 * v13;
    long long v74 = *(_OWORD *)v21;
    long long v22 = *(_OWORD *)(v21 + 48);
    long long v23 = *(_OWORD *)(v21 + 64);
    long long v24 = *(_OWORD *)(v21 + 32);
    long long v75 = *(_OWORD *)(v21 + 16);
    long long v76 = v24;
    long long v77 = v22;
    *(_OWORD *)long long v78 = v23;
    long long v25 = *(_OWORD *)(v21 + 80);
    long long v26 = *(_OWORD *)(v21 + 96);
    long long v27 = *(_OWORD *)(v21 + 112);
    *(void *)&v79[32] = *(void *)(v21 + 128);
    *(_OWORD *)long long v79 = v26;
    *(_OWORD *)&v79[16] = v27;
    *(_OWORD *)&v78[16] = v25;
    if (v74 != __PAIR128__(v17, v16) && (sub_1AFFCBCE8() & 1) == 0
      || v75 != __PAIR128__(v18, v19) && (sub_1AFFCBCE8() & 1) == 0
      || v76 != __PAIR128__(v71, v20) && (sub_1AFFCBCE8() & 1) == 0
      || __PAIR128__(v77, *((unint64_t *)&v77 + 1)) != v70 && (sub_1AFFCBCE8() & 1) == 0)
    {
      goto LABEL_5;
    }
    unint64_t v28 = 0xE700000000000000;
    unint64_t v29 = v17;
    unint64_t v30 = v20;
    unint64_t v31 = v19;
    unint64_t v32 = v18;
    uint64_t v33 = 0x6E776F6E6B6E75;
    switch(v78[0])
    {
      case 1:
        unint64_t v28 = 0xE800000000000000;
        uint64_t v33 = 0x79636E6572727563;
        break;
      case 2:
        uint64_t v33 = 0x75636F7470797263;
        unint64_t v28 = 0xEE0079636E657272;
        break;
      case 3:
        unint64_t v28 = 0xE600000000000000;
        uint64_t v33 = 0x797469757165;
        break;
      case 4:
        unint64_t v28 = 0xE300000000000000;
        uint64_t v33 = 6714469;
        break;
      case 5:
        uint64_t v33 = 0x73657275747566;
        break;
      case 6:
        unint64_t v28 = 0xE500000000000000;
        uint64_t v33 = 0x7865646E69;
        break;
      case 7:
        uint64_t v33 = 0x75466C617574756DLL;
        unint64_t v28 = 0xEA0000000000646ELL;
        break;
      default:
        break;
    }
    unint64_t v34 = 0xE700000000000000;
    uint64_t v35 = v14;
    uint64_t v36 = 0x6E776F6E6B6E75;
    switch(v67)
    {
      case 1:
        unint64_t v34 = 0xE800000000000000;
        uint64_t v36 = 0x79636E6572727563;
        break;
      case 2:
        uint64_t v36 = 0x75636F7470797263;
        unint64_t v34 = 0xEE0079636E657272;
        break;
      case 3:
        unint64_t v34 = 0xE600000000000000;
        uint64_t v36 = 0x797469757165;
        break;
      case 4:
        unint64_t v34 = 0xE300000000000000;
        uint64_t v36 = 6714469;
        break;
      case 5:
        uint64_t v36 = 0x73657275747566;
        break;
      case 6:
        unint64_t v34 = 0xE500000000000000;
        uint64_t v36 = 0x7865646E69;
        break;
      case 7:
        uint64_t v36 = 0x75466C617574756DLL;
        unint64_t v34 = 0xEA0000000000646ELL;
        break;
      default:
        break;
    }
    uint64_t v37 = v15;
    if (v33 == v36 && v28 == v34)
    {
      sub_1AFD76370((uint64_t)&v74);
      swift_bridgeObjectRelease_n();
      unint64_t v18 = v32;
      unint64_t v19 = v31;
      unint64_t v20 = v30;
      unint64_t v17 = v29;
      unint64_t v16 = v68;
    }
    else
    {
      char v38 = sub_1AFFCBCE8();
      sub_1AFD76370((uint64_t)&v74);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v18 = v32;
      unint64_t v19 = v31;
      unint64_t v20 = v30;
      unint64_t v17 = v29;
      unint64_t v16 = v68;
      if ((v38 & 1) == 0) {
        goto LABEL_4;
      }
    }
    if (*(_OWORD *)&v78[8] != __PAIR128__(v65, v69) && (sub_1AFFCBCE8() & 1) == 0
      || __PAIR128__(*(unint64_t *)&v78[24], *(unint64_t *)v79) != v64 && (sub_1AFFCBCE8() & 1) == 0)
    {
      goto LABEL_4;
    }
    if (*(void *)&v79[16])
    {
      if (!v63 || *(_OWORD *)&v79[8] != __PAIR128__(v63, v61) && (sub_1AFFCBCE8() & 1) == 0) {
        goto LABEL_4;
      }
    }
    else if (v63)
    {
      goto LABEL_4;
    }
    if (!*(void *)&v79[32])
    {
      if (!v62) {
        break;
      }
LABEL_4:
      sub_1AFD76408((uint64_t)&v74);
      uint64_t v15 = v37;
      uint64_t v14 = v35;
      uint64_t v6 = v66;
      goto LABEL_5;
    }
    if (!v62) {
      goto LABEL_4;
    }
    if (*(_OWORD *)&v79[24] == __PAIR128__(v62, v60)) {
      break;
    }
    char v39 = sub_1AFFCBCE8();
    sub_1AFD76408((uint64_t)&v74);
    uint64_t v15 = v37;
    uint64_t v14 = v35;
    uint64_t v6 = v66;
    if (v39) {
      goto LABEL_53;
    }
LABEL_5:
    unint64_t v13 = (v13 + 1) & v15;
    if (((*(void *)(v14 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v3 = v58;
      a1 = v59;
      uint64_t v4 = v57;
      goto LABEL_51;
    }
  }
  sub_1AFD76408((uint64_t)&v74);
LABEL_53:
  swift_bridgeObjectRelease();
  sub_1AFD76408(v57);
  uint64_t v46 = *(void *)(*v58 + 48) + 136 * v13;
  v72[0] = *(_OWORD *)v46;
  long long v47 = *(_OWORD *)(v46 + 64);
  long long v49 = *(_OWORD *)(v46 + 16);
  long long v48 = *(_OWORD *)(v46 + 32);
  v72[3] = *(_OWORD *)(v46 + 48);
  v72[4] = v47;
  v72[1] = v49;
  v72[2] = v48;
  long long v51 = *(_OWORD *)(v46 + 96);
  long long v50 = *(_OWORD *)(v46 + 112);
  long long v52 = *(_OWORD *)(v46 + 80);
  uint64_t v73 = *(void *)(v46 + 128);
  v72[6] = v51;
  v72[7] = v50;
  v72[5] = v52;
  long long v53 = *(_OWORD *)(v46 + 112);
  *(_OWORD *)(v59 + 96) = *(_OWORD *)(v46 + 96);
  *(_OWORD *)(v59 + 112) = v53;
  *(void *)(v59 + 128) = *(void *)(v46 + 128);
  long long v54 = *(_OWORD *)(v46 + 48);
  *(_OWORD *)(v59 + 32) = *(_OWORD *)(v46 + 32);
  *(_OWORD *)(v59 + 48) = v54;
  long long v55 = *(_OWORD *)(v46 + 80);
  *(_OWORD *)(v59 + 64) = *(_OWORD *)(v46 + 64);
  *(_OWORD *)(v59 + 80) = v55;
  long long v56 = *(_OWORD *)(v46 + 16);
  *(_OWORD *)uint64_t v59 = *(_OWORD *)v46;
  *(_OWORD *)(v59 + 16) = v56;
  sub_1AFD76370((uint64_t)v72);
  return 0;
}

uint64_t sub_1AFE22ECC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1AFE28E88(0, &qword_1E9AFA168, (uint64_t (*)(void))sub_1AFD76884, (uint64_t)&type metadata for Watchlist, MEMORY[0x1E4FBB9A8]);
  uint64_t v3 = sub_1AFFCB7A8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_43;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  char v38 = (void *)(v2 + 56);
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  uint64_t v36 = v0;
  int64_t v37 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  sub_1AFFC8E48();
  for (int64_t i = 0; ; int64_t i = v40)
  {
    if (v7)
    {
      uint64_t v39 = (v7 - 1) & v7;
      int64_t v40 = i;
      unint64_t v12 = __clz(__rbit64(v7)) | (i << 6);
      goto LABEL_24;
    }
    int64_t v13 = i + 1;
    if (__OFADD__(i, 1)) {
      goto LABEL_44;
    }
    if (v13 >= v37) {
      break;
    }
    unint64_t v14 = v38[v13];
    int64_t v15 = i + 1;
    if (!v14)
    {
      int64_t v15 = i + 2;
      if (i + 2 >= v37) {
        break;
      }
      unint64_t v14 = v38[v15];
      if (!v14)
      {
        int64_t v15 = i + 3;
        if (i + 3 >= v37) {
          break;
        }
        unint64_t v14 = v38[v15];
        if (!v14)
        {
          uint64_t v16 = i + 4;
          if (i + 4 >= v37) {
            break;
          }
          unint64_t v14 = v38[v16];
          if (!v14)
          {
            while (1)
            {
              int64_t v15 = v16 + 1;
              if (__OFADD__(v16, 1)) {
                goto LABEL_45;
              }
              if (v15 >= v37) {
                goto LABEL_39;
              }
              unint64_t v14 = v38[v15];
              ++v16;
              if (v14) {
                goto LABEL_23;
              }
            }
          }
          int64_t v15 = i + 4;
        }
      }
    }
LABEL_23:
    uint64_t v39 = (v14 - 1) & v14;
    int64_t v40 = v15;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
LABEL_24:
    uint64_t v17 = *(void *)(v2 + 48) + 48 * v12;
    uint64_t v18 = *(void *)v17;
    uint64_t v19 = *(void *)(v17 + 8);
    uint64_t v20 = *(void *)(v17 + 16);
    uint64_t v21 = *(void *)(v17 + 32);
    unsigned int v42 = *(unsigned __int8 *)(v17 + 40);
    uint64_t v43 = *(void *)(v17 + 24);
    char v41 = *(unsigned char *)(v17 + 41);
    sub_1AFFCBDF8();
    sub_1AFFC8E38();
    sub_1AFFCAF68();
    swift_bridgeObjectRelease();
    sub_1AFFCBE08();
    uint64_t v22 = *(void *)(v20 + 16);
    if (v22)
    {
      uint64_t v23 = v4;
      uint64_t v24 = v2;
      sub_1AFFC8E38();
      uint64_t v25 = v20 + 40;
      do
      {
        sub_1AFFC8E38();
        sub_1AFFCAF68();
        swift_bridgeObjectRelease();
        v25 += 16;
        --v22;
      }
      while (v22);
      swift_bridgeObjectRelease();
      uint64_t v2 = v24;
      uint64_t v4 = v23;
    }
    sub_1AFFC8E38();
    sub_1AFFCAF68();
    swift_bridgeObjectRelease();
    switch(v42 >> 5)
    {
      case 5u:
        break;
      default:
        sub_1AFFCBE08();
        break;
    }
    sub_1AFFCBE08();
    sub_1AFFCBE08();
    uint64_t v26 = sub_1AFFCBE38();
    uint64_t v27 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v28 = v26 & ~v27;
    unint64_t v29 = v28 >> 6;
    if (((-1 << v28) & ~*(void *)(v8 + 8 * (v28 >> 6))) != 0)
    {
      unint64_t v10 = __clz(__rbit64((-1 << v28) & ~*(void *)(v8 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_7;
    }
    char v30 = 0;
    unint64_t v31 = (unint64_t)(63 - v27) >> 6;
    do
    {
      if (++v29 == v31 && (v30 & 1) != 0)
      {
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
        JUMPOUT(0x1AFE2334CLL);
      }
      BOOL v32 = v29 == v31;
      if (v29 == v31) {
        unint64_t v29 = 0;
      }
      v30 |= v32;
      uint64_t v33 = *(void *)(v8 + 8 * v29);
    }
    while (v33 == -1);
    unint64_t v10 = __clz(__rbit64(~v33)) + (v29 << 6);
LABEL_7:
    *(void *)(v8 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
    uint64_t v11 = *(void *)(v4 + 48) + 48 * v10;
    *(void *)uint64_t v11 = v18;
    *(void *)(v11 + 8) = v19;
    *(void *)(v11 + 16) = v20;
    *(void *)(v11 + 24) = v43;
    *(void *)(v11 + 32) = v21;
    *(unsigned char *)(v11 + 40) = v42;
    *(unsigned char *)(v11 + 41) = v41;
    ++*(void *)(v4 + 16);
    unint64_t v7 = v39;
  }
LABEL_39:
  swift_release();
  uint64_t v1 = v36;
  uint64_t v34 = 1 << *(unsigned char *)(v2 + 32);
  if (v34 > 63) {
    bzero(v38, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *char v38 = -1 << v34;
  }
  *(void *)(v2 + 16) = 0;
LABEL_43:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1AFE23364()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1AFE28850();
  uint64_t v3 = sub_1AFFCB7A8();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    char v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = sub_1AFFC8E48();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *char v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_1AFFCBDF8();
      sub_1AFFCAF68();
      uint64_t result = sub_1AFFCBE38();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      int64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *int64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1AFE23640()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_1AFFC99F8();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  char v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_1AFE28DC0();
  uint64_t v5 = sub_1AFFCB7A8();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    int64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = sub_1AFFC8E48();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      unint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_1AFDC2380((unint64_t *)&qword_1EB818BB0);
      uint64_t result = sub_1AFFCAD58();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

unint64_t sub_1AFE23A24()
{
  uint64_t v1 = *v0;
  sub_1AFE28E88(0, &qword_1E9AFA160, (uint64_t (*)(void))sub_1AFD764A0, (uint64_t)&type metadata for Stock, MEMORY[0x1E4FBB9A8]);
  uint64_t v2 = sub_1AFFCB7A8();
  if (*(void *)(v1 + 16))
  {
    uint64_t v3 = 1 << *(unsigned char *)(v1 + 32);
    uint64_t v4 = (void *)(v1 + 56);
    if (v3 < 64) {
      uint64_t v5 = ~(-1 << v3);
    }
    else {
      uint64_t v5 = -1;
    }
    unint64_t v6 = v5 & *(void *)(v1 + 56);
    int64_t v7 = (unint64_t)(v3 + 63) >> 6;
    unint64_t result = sub_1AFFC8E48();
    int64_t v9 = 0;
    while (1)
    {
      if (v6)
      {
        unint64_t v10 = __clz(__rbit64(v6));
        v6 &= v6 - 1;
        unint64_t v11 = v10 | (v9 << 6);
      }
      else
      {
        int64_t v14 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return result;
        }
        if (v14 >= v7) {
          goto LABEL_23;
        }
        unint64_t v15 = v4[v14];
        ++v9;
        if (!v15)
        {
          int64_t v9 = v14 + 1;
          if (v14 + 1 >= v7) {
            goto LABEL_23;
          }
          unint64_t v15 = v4[v9];
          if (!v15)
          {
            int64_t v9 = v14 + 2;
            if (v14 + 2 >= v7) {
              goto LABEL_23;
            }
            unint64_t v15 = v4[v9];
            if (!v15)
            {
              int64_t v16 = v14 + 3;
              if (v16 >= v7)
              {
LABEL_23:
                swift_release();
                uint64_t v17 = 1 << *(unsigned char *)(v1 + 32);
                if (v17 > 63) {
                  bzero((void *)(v1 + 56), ((unint64_t)(v17 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v4 = -1 << v17;
                }
                *(void *)(v1 + 16) = 0;
                break;
              }
              unint64_t v15 = v4[v16];
              if (!v15)
              {
                while (1)
                {
                  int64_t v9 = v16 + 1;
                  if (__OFADD__(v16, 1)) {
                    goto LABEL_29;
                  }
                  if (v9 >= v7) {
                    goto LABEL_23;
                  }
                  unint64_t v15 = v4[v9];
                  ++v16;
                  if (v15) {
                    goto LABEL_22;
                  }
                }
              }
              int64_t v9 = v16;
            }
          }
        }
LABEL_22:
        unint64_t v6 = (v15 - 1) & v15;
        unint64_t v11 = __clz(__rbit64(v15)) + (v9 << 6);
      }
      uint64_t v12 = *(void *)(v1 + 48) + 136 * v11;
      long long v24 = *(_OWORD *)(v12 + 96);
      long long v25 = *(_OWORD *)(v12 + 112);
      long long v20 = *(_OWORD *)(v12 + 32);
      long long v21 = *(_OWORD *)(v12 + 48);
      long long v22 = *(_OWORD *)(v12 + 64);
      long long v23 = *(_OWORD *)(v12 + 80);
      long long v18 = *(_OWORD *)v12;
      long long v19 = *(_OWORD *)(v12 + 16);
      uint64_t v26 = *(void *)(v12 + 128);
      sub_1AFFCBDF8();
      sub_1AFD78C34();
      sub_1AFFCBE38();
      unint64_t result = sub_1AFFCB758();
      *(void *)(v2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
      uint64_t v13 = *(void *)(v2 + 48) + 136 * result;
      *(_OWORD *)(v13 + 96) = v24;
      *(_OWORD *)(v13 + 112) = v25;
      *(void *)(v13 + 128) = v26;
      *(_OWORD *)(v13 + 32) = v20;
      *(_OWORD *)(v13 + 48) = v21;
      *(_OWORD *)(v13 + 64) = v22;
      *(_OWORD *)(v13 + 80) = v23;
      *(_OWORD *)uint64_t v13 = v18;
      *(_OWORD *)(v13 + 16) = v19;
      ++*(void *)(v2 + 16);
    }
  }
  unint64_t result = swift_release();
  *uint64_t v0 = v2;
  return result;
}

uint64_t sub_1AFE23D28(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  int64_t v37 = (long long *)result;
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_1AFE22ECC();
    }
    else
    {
      if (v7 > v6)
      {
        unint64_t result = (uint64_t)sub_1AFE24BE4();
        goto LABEL_59;
      }
      sub_1AFE25480();
    }
    uint64_t v8 = *v3;
    long long v9 = *(_OWORD *)(v5 + 16);
    long long v45 = *(_OWORD *)v5;
    v46[0] = v9;
    *(_OWORD *)((char *)v46 + 10) = *(_OWORD *)(v5 + 26);
    sub_1AFFCBDF8();
    sub_1AFEAB9DC();
    unint64_t result = sub_1AFFCBE38();
    uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
    a2 = result & ~v10;
    uint64_t v42 = v8 + 56;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v40 = ~v10;
      uint64_t v11 = *(void *)v5;
      uint64_t v12 = *(void *)(v5 + 8);
      uint64_t v13 = *(void **)(v5 + 16);
      uint64_t v38 = *(void *)(v5 + 32);
      uint64_t v39 = *(void *)(v5 + 24);
      sub_1AFD8D5B8(v5 + 40, (uint64_t)&v47);
      int v35 = *(unsigned __int8 *)(v5 + 41);
      uint64_t v41 = *(void *)(v8 + 48);
      do
      {
        uint64_t v14 = v41 + 48 * a2;
        unint64_t result = *(void *)v14;
        int64_t v16 = *(void **)(v14 + 16);
        uint64_t v15 = *(void *)(v14 + 24);
        uint64_t v17 = *(void *)(v14 + 32);
        unsigned int v18 = *(unsigned __int8 *)(v14 + 40);
        int v43 = *(unsigned __int8 *)(v14 + 41);
        if (*(void *)v14 != v11 || *(void *)(v14 + 8) != v12)
        {
          unint64_t result = sub_1AFFCBCE8();
          if ((result & 1) == 0) {
            goto LABEL_11;
          }
        }
        uint64_t v20 = v16[2];
        if (v20 != v13[2]) {
          goto LABEL_11;
        }
        if (v20) {
          BOOL v21 = v16 == v13;
        }
        else {
          BOOL v21 = 1;
        }
        if (!v21)
        {
          if (v16[4] != v13[4] || v16[5] != v13[5])
          {
            unint64_t result = sub_1AFFCBCE8();
            if ((result & 1) == 0) {
              goto LABEL_11;
            }
          }
          if (v20 != 1)
          {
            if (v16[6] != v13[6] || v16[7] != v13[7])
            {
              unint64_t result = sub_1AFFCBCE8();
              if ((result & 1) == 0) {
                goto LABEL_11;
              }
            }
            uint64_t v24 = v20 - 2;
            if (v24)
            {
              long long v25 = v16 + 9;
              uint64_t v26 = v13 + 9;
              do
              {
                if (*(v25 - 1) != *(v26 - 1) || *v25 != *v26)
                {
                  unint64_t result = sub_1AFFCBCE8();
                  if ((result & 1) == 0) {
                    goto LABEL_11;
                  }
                }
                v26 += 2;
                v25 += 2;
              }
              while (--v24);
            }
          }
        }
        if (v15 == v39 && v17 == v38 || (unint64_t result = sub_1AFFCBCE8(), (result & 1) != 0))
        {
          switch(v18 >> 5)
          {
            case 1u:
              unint64_t result = sub_1AFD8D5B8((uint64_t)&v47, (uint64_t)&v50);
              if ((v50 & 0xE0) != 0x20) {
                goto LABEL_11;
              }
              v50 &= 0x1Fu;
              break;
            case 2u:
              unint64_t result = sub_1AFD8D5B8((uint64_t)&v47, (uint64_t)v51);
              if ((v51[0] & 0xE0) != 0x40) {
                goto LABEL_11;
              }
              v51[0] &= 0x1Fu;
              break;
            case 3u:
              unint64_t result = sub_1AFD8D5B8((uint64_t)&v47, (uint64_t)&v45);
              if ((v45 & 0xE0) != 0x60) {
                goto LABEL_11;
              }
              LOBYTE(v45) = v45 & 0x1F;
              break;
            case 4u:
              unint64_t result = sub_1AFD8D5B8((uint64_t)&v47, (uint64_t)v44);
              if ((v44[0] & 0xE0) != 0x80) {
                goto LABEL_11;
              }
              v44[0] &= 0x1Fu;
              break;
            case 5u:
              unint64_t result = sub_1AFD8D5B8((uint64_t)&v47, (uint64_t)&v48);
              if (v48 != 160) {
                goto LABEL_11;
              }
              break;
            default:
              unint64_t result = sub_1AFD8D5B8((uint64_t)&v47, (uint64_t)&v49);
              if (v49 > 0x1Fu) {
                goto LABEL_11;
              }
              break;
          }
          if (v43 == v35) {
            goto LABEL_62;
          }
        }
LABEL_11:
        a2 = (a2 + 1) & v40;
      }
      while (((*(void *)(v42 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
    }
  }
LABEL_59:
  uint64_t v28 = *v36;
  *(void *)(*v36 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  unint64_t v29 = (_OWORD *)(*(void *)(v28 + 48) + 48 * a2);
  long long v30 = *v37;
  long long v31 = v37[1];
  *(_OWORD *)((char *)v29 + 26) = *(long long *)((char *)v37 + 26);
  _OWORD *v29 = v30;
  v29[1] = v31;
  uint64_t v32 = *(void *)(v28 + 16);
  BOOL v33 = __OFADD__(v32, 1);
  uint64_t v34 = v32 + 1;
  if (v33)
  {
    __break(1u);
LABEL_62:
    sub_1AFFCBD58();
    __break(1u);
    JUMPOUT(0x1AFE24110);
  }
  *(void *)(v28 + 16) = v34;
  return result;
}

uint64_t sub_1AFE24128(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_1AFE23364();
  }
  else
  {
    if (v10 > v9)
    {
      unint64_t result = (uint64_t)sub_1AFE24E00();
      goto LABEL_22;
    }
    sub_1AFE258F8();
  }
  uint64_t v11 = *v4;
  sub_1AFFCBDF8();
  sub_1AFFCAF68();
  unint64_t result = sub_1AFFCBE38();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    uint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (unint64_t result = sub_1AFFCBCE8(), (result & 1) != 0))
    {
LABEL_21:
      unint64_t result = sub_1AFFCBD58();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        unsigned int v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          unint64_t result = sub_1AFFCBCE8();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  BOOL v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  *BOOL v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_1AFE242C4(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v32 = a1;
  uint64_t v6 = sub_1AFFC99F8();
  uint64_t v7 = *(void *)(v6 - 8);
  v8.n128_f64[0] = MEMORY[0x1F4188790](v6);
  unint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v11 = *(void *)(*v3 + 16);
  unint64_t v12 = *(void *)(*v3 + 24);
  unint64_t v29 = v3;
  uint64_t v30 = v7;
  if (v12 > v11 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1AFE23640();
  }
  else
  {
    if (v12 > v11)
    {
      sub_1AFE24FB0();
      goto LABEL_12;
    }
    sub_1AFE25BA4();
  }
  uint64_t v13 = *v3;
  sub_1AFDC2380((unint64_t *)&qword_1EB818BB0);
  uint64_t v14 = sub_1AFFCAD58();
  uint64_t v15 = -1 << *(unsigned char *)(v13 + 32);
  a2 = v14 & ~v15;
  uint64_t v31 = v13;
  uint64_t v16 = v13 + 56;
  if ((*(void *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v17 = ~v15;
    uint64_t v20 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v19 = v7 + 16;
    unsigned int v18 = v20;
    uint64_t v21 = *(void *)(v19 + 56);
    do
    {
      v18(v10, *(void *)(v31 + 48) + v21 * a2, v6);
      sub_1AFDC2380(&qword_1EB818BB8);
      char v22 = sub_1AFFCADD8();
      (*(void (**)(char *, uint64_t))(v19 - 8))(v10, v6);
      if (v22) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v17;
    }
    while (((*(void *)(v16 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v23 = v30;
  uint64_t v24 = *v29;
  *(void *)(v24 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, __n128))(v23 + 32))(*(void *)(v24 + 48) + *(void *)(v23 + 72) * a2, v32, v6, v8);
  uint64_t v26 = *(void *)(v24 + 16);
  BOOL v27 = __OFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (!v27)
  {
    *(void *)(v24 + 16) = v28;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_1AFFCBD58();
  __break(1u);
  return result;
}

uint64_t sub_1AFE2453C(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  uint64_t v51 = result;
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_1AFE23A24();
    }
    else
    {
      if (v7 > v6)
      {
        uint64_t result = (uint64_t)sub_1AFE25258();
        goto LABEL_56;
      }
      sub_1AFE25F3C();
    }
    uint64_t v8 = *v3;
    long long v9 = *(_OWORD *)(v5 + 112);
    *(_OWORD *)&v65[32] = *(_OWORD *)(v5 + 96);
    *(_OWORD *)&v65[48] = v9;
    *(void *)&v65[64] = *(void *)(v5 + 128);
    long long v10 = *(_OWORD *)(v5 + 48);
    long long v63 = *(_OWORD *)(v5 + 32);
    long long v64 = v10;
    long long v11 = *(_OWORD *)(v5 + 80);
    *(_OWORD *)unint64_t v65 = *(_OWORD *)(v5 + 64);
    *(_OWORD *)&v65[16] = v11;
    long long v12 = *(_OWORD *)(v5 + 16);
    long long v61 = *(_OWORD *)v5;
    long long v62 = v12;
    sub_1AFFCBDF8();
    sub_1AFD78C34();
    uint64_t result = sub_1AFFCBE38();
    uint64_t v13 = -1 << *(unsigned char *)(v8 + 32);
    a2 = result & ~v13;
    uint64_t v14 = v8 + 56;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v15 = ~v13;
      unint64_t v16 = *(void *)v5;
      unint64_t v17 = *(void *)(v5 + 8);
      unint64_t v18 = *(void *)(v5 + 16);
      *((void *)&v59 + 1) = *(void *)(v5 + 32);
      unint64_t v60 = *(void *)(v5 + 24);
      *((void *)&v58 + 1) = *(void *)(v5 + 48);
      *(void *)&long long v59 = *(void *)(v5 + 40);
      uint64_t v55 = ~v13;
      uint64_t v56 = *(unsigned __int8 *)(v5 + 64);
      unint64_t v57 = *(void *)(v5 + 72);
      *(void *)&long long v58 = *(void *)(v5 + 56);
      unint64_t v53 = *(void *)(v5 + 88);
      unint64_t v54 = *(void *)(v5 + 80);
      unint64_t v49 = *(void *)(v5 + 112);
      unint64_t v50 = *(void *)(v5 + 96);
      unint64_t v46 = *(void *)(v5 + 120);
      unint64_t v47 = *(void *)(v5 + 104);
      unint64_t v48 = *(void *)(v5 + 128);
      while (1)
      {
        uint64_t v19 = *(void *)(v8 + 48) + 136 * a2;
        long long v61 = *(_OWORD *)v19;
        long long v20 = *(_OWORD *)(v19 + 48);
        long long v21 = *(_OWORD *)(v19 + 64);
        long long v22 = *(_OWORD *)(v19 + 32);
        long long v62 = *(_OWORD *)(v19 + 16);
        long long v63 = v22;
        *(_OWORD *)unint64_t v65 = v21;
        long long v64 = v20;
        long long v23 = *(_OWORD *)(v19 + 80);
        long long v24 = *(_OWORD *)(v19 + 96);
        long long v25 = *(_OWORD *)(v19 + 112);
        *(void *)&v65[64] = *(void *)(v19 + 128);
        *(_OWORD *)&v65[32] = v24;
        *(_OWORD *)&v65[48] = v25;
        *(_OWORD *)&v65[16] = v23;
        if (v61 != __PAIR128__(v17, v16))
        {
          uint64_t result = sub_1AFFCBCE8();
          if ((result & 1) == 0) {
            goto LABEL_12;
          }
        }
        if (v62 != __PAIR128__(v60, v18))
        {
          uint64_t result = sub_1AFFCBCE8();
          if ((result & 1) == 0) {
            goto LABEL_12;
          }
        }
        if (__PAIR128__(v63, *((unint64_t *)&v63 + 1)) != v59)
        {
          uint64_t result = sub_1AFFCBCE8();
          if ((result & 1) == 0) {
            goto LABEL_12;
          }
        }
        if (__PAIR128__(v64, *((unint64_t *)&v64 + 1)) != v58)
        {
          uint64_t result = sub_1AFFCBCE8();
          if ((result & 1) == 0) {
            goto LABEL_12;
          }
        }
        unint64_t v26 = 0xE700000000000000;
        unint64_t v27 = v16;
        unint64_t v28 = v17;
        unint64_t v29 = v18;
        uint64_t v30 = 0x6E776F6E6B6E75;
        switch(v65[0])
        {
          case 1:
            unint64_t v26 = 0xE800000000000000;
            uint64_t v30 = 0x79636E6572727563;
            break;
          case 2:
            uint64_t v30 = 0x75636F7470797263;
            unint64_t v26 = 0xEE0079636E657272;
            break;
          case 3:
            unint64_t v26 = 0xE600000000000000;
            uint64_t v30 = 0x797469757165;
            break;
          case 4:
            unint64_t v26 = 0xE300000000000000;
            uint64_t v30 = 6714469;
            break;
          case 5:
            uint64_t v30 = 0x73657275747566;
            break;
          case 6:
            unint64_t v26 = 0xE500000000000000;
            uint64_t v30 = 0x7865646E69;
            break;
          case 7:
            uint64_t v30 = 0x75466C617574756DLL;
            unint64_t v26 = 0xEA0000000000646ELL;
            break;
          default:
            break;
        }
        unint64_t v31 = 0xE700000000000000;
        uint64_t v32 = v8;
        uint64_t v33 = 0x6E776F6E6B6E75;
        switch(v56)
        {
          case 1:
            unint64_t v31 = 0xE800000000000000;
            uint64_t v33 = 0x79636E6572727563;
            break;
          case 2:
            uint64_t v33 = 0x75636F7470797263;
            unint64_t v31 = 0xEE0079636E657272;
            break;
          case 3:
            unint64_t v31 = 0xE600000000000000;
            uint64_t v33 = 0x797469757165;
            break;
          case 4:
            unint64_t v31 = 0xE300000000000000;
            uint64_t v33 = 6714469;
            break;
          case 5:
            uint64_t v33 = 0x73657275747566;
            break;
          case 6:
            unint64_t v31 = 0xE500000000000000;
            uint64_t v33 = 0x7865646E69;
            break;
          case 7:
            uint64_t v33 = 0x75466C617574756DLL;
            unint64_t v31 = 0xEA0000000000646ELL;
            break;
          default:
            break;
        }
        uint64_t v34 = v14;
        if (v30 == v33 && v26 == v31)
        {
          sub_1AFD76370((uint64_t)&v61);
          swift_bridgeObjectRelease_n();
          unint64_t v18 = v29;
          unint64_t v17 = v28;
          unint64_t v16 = v27;
        }
        else
        {
          char v35 = sub_1AFFCBCE8();
          sub_1AFD76370((uint64_t)&v61);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v18 = v29;
          unint64_t v17 = v28;
          unint64_t v16 = v27;
          if ((v35 & 1) == 0) {
            break;
          }
        }
        if (*(_OWORD *)&v65[8] != __PAIR128__(v54, v57) && (sub_1AFFCBCE8() & 1) == 0
          || *(_OWORD *)&v65[24] != __PAIR128__(v50, v53) && (sub_1AFFCBCE8() & 1) == 0)
        {
          break;
        }
        if (*(void *)&v65[48])
        {
          if (!v49 || *(_OWORD *)&v65[40] != __PAIR128__(v49, v47) && (sub_1AFFCBCE8() & 1) == 0) {
            break;
          }
        }
        else if (v49)
        {
          break;
        }
        if (*(void *)&v65[64])
        {
          if (!v48) {
            break;
          }
          if (*(_OWORD *)&v65[56] == __PAIR128__(v48, v46)) {
            goto LABEL_59;
          }
          char v36 = sub_1AFFCBCE8();
          uint64_t result = sub_1AFD76408((uint64_t)&v61);
          uint64_t v14 = v34;
          uint64_t v8 = v32;
          uint64_t v15 = v55;
          if (v36) {
            goto LABEL_60;
          }
        }
        else
        {
          uint64_t result = sub_1AFD76408((uint64_t)&v61);
          uint64_t v14 = v34;
          uint64_t v8 = v32;
          uint64_t v15 = v55;
          if (!v48) {
            goto LABEL_60;
          }
        }
LABEL_12:
        a2 = (a2 + 1) & v15;
        if (((*(void *)(v14 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_56;
        }
      }
      uint64_t result = sub_1AFD76408((uint64_t)&v61);
      uint64_t v14 = v34;
      uint64_t v8 = v32;
      uint64_t v15 = v55;
      goto LABEL_12;
    }
  }
LABEL_56:
  uint64_t v37 = *v52;
  *(void *)(*v52 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t v38 = *(void *)(v37 + 48) + 136 * a2;
  long long v39 = *(_OWORD *)(v51 + 48);
  *(_OWORD *)(v38 + 32) = *(_OWORD *)(v51 + 32);
  *(_OWORD *)(v38 + 48) = v39;
  *(void *)(v38 + 128) = *(void *)(v51 + 128);
  long long v40 = *(_OWORD *)(v51 + 112);
  *(_OWORD *)(v38 + 96) = *(_OWORD *)(v51 + 96);
  *(_OWORD *)(v38 + 112) = v40;
  long long v41 = *(_OWORD *)(v51 + 80);
  *(_OWORD *)(v38 + 64) = *(_OWORD *)(v51 + 64);
  *(_OWORD *)(v38 + 80) = v41;
  long long v42 = *(_OWORD *)(v51 + 16);
  *(_OWORD *)uint64_t v38 = *(_OWORD *)v51;
  *(_OWORD *)(v38 + 16) = v42;
  uint64_t v43 = *(void *)(v37 + 16);
  BOOL v44 = __OFADD__(v43, 1);
  uint64_t v45 = v43 + 1;
  if (v44)
  {
    __break(1u);
LABEL_59:
    sub_1AFD76408((uint64_t)&v61);
LABEL_60:
    sub_1AFFCBD58();
    __break(1u);
    JUMPOUT(0x1AFE24BA4);
  }
  *(void *)(v37 + 16) = v45;
  return result;
}

void *sub_1AFE24BE4()
{
  uint64_t v1 = v0;
  sub_1AFE28E88(0, &qword_1E9AFA168, (uint64_t (*)(void))sub_1AFD76884, (uint64_t)&type metadata for Watchlist, MEMORY[0x1E4FBB9A8]);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1AFFCB798();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v24 >= v13) {
      goto LABEL_28;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      int64_t v9 = v24 + 1;
      if (v24 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v25 = *(void *)(v6 + 8 * v9);
      if (!v25)
      {
        int64_t v9 = v24 + 2;
        if (v24 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v25 = *(void *)(v6 + 8 * v9);
        if (!v25) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v25 - 1) & v25;
    unint64_t v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 48 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + v16;
    uint64_t v19 = *(void *)v17;
    uint64_t v18 = *(void *)(v17 + 8);
    uint64_t v21 = *(void *)(v17 + 16);
    uint64_t v20 = *(void *)(v17 + 24);
    uint64_t v22 = *(void *)(v17 + 32);
    LOWORD(v17) = *(_WORD *)(v17 + 40);
    uint64_t v23 = *(void *)(v4 + 48) + v16;
    *(void *)uint64_t v23 = v19;
    *(void *)(v23 + 8) = v18;
    *(void *)(v23 + 16) = v21;
    *(void *)(v23 + 24) = v20;
    *(void *)(v23 + 32) = v22;
    *(_WORD *)(v23 + 40) = v17;
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    uint64_t result = (void *)sub_1AFFC8E38();
  }
  int64_t v26 = v24 + 3;
  if (v26 >= v13) {
    goto LABEL_28;
  }
  unint64_t v25 = *(void *)(v6 + 8 * v26);
  if (v25)
  {
    int64_t v9 = v26;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v9);
    ++v26;
    if (v25) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1AFE24E00()
{
  uint64_t v1 = v0;
  sub_1AFE28850();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1AFFCB798();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    uint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    void *v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)sub_1AFFC8E38();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1AFE24FB0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1AFFC99F8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFE28DC0();
  uint64_t v6 = *v0;
  uint64_t v7 = sub_1AFFCB798();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_30:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t result = (void *)(v7 + 56);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  uint64_t v23 = v1;
  int64_t v24 = (const void *)(v6 + 56);
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v10) {
    uint64_t result = memmove(result, v24, 8 * v10);
  }
  int64_t v12 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v6 + 56);
  int64_t v25 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      unint64_t v16 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v17 = v16 | (v12 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v19 >= v25) {
      goto LABEL_28;
    }
    unint64_t v20 = *((void *)v24 + v19);
    ++v12;
    if (!v20)
    {
      int64_t v12 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_28;
      }
      unint64_t v20 = *((void *)v24 + v12);
      if (!v20)
      {
        int64_t v12 = v19 + 2;
        if (v19 + 2 >= v25) {
          goto LABEL_28;
        }
        unint64_t v20 = *((void *)v24 + v12);
        if (!v20) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v15 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v12 << 6);
LABEL_12:
    unint64_t v18 = *(void *)(v3 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v18, v2);
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v8 + 48) + v18, v5, v2);
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v25)
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v23;
    goto LABEL_30;
  }
  unint64_t v20 = *((void *)v24 + v21);
  if (v20)
  {
    int64_t v12 = v21;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v12 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v12 >= v25) {
      goto LABEL_28;
    }
    unint64_t v20 = *((void *)v24 + v12);
    ++v21;
    if (v20) {
      goto LABEL_27;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

void *sub_1AFE25258()
{
  uint64_t v1 = v0;
  sub_1AFE28E88(0, &qword_1E9AFA160, (uint64_t (*)(void))sub_1AFD764A0, (uint64_t)&type metadata for Stock, MEMORY[0x1E4FBB9A8]);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1AFFCB798();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v24 >= v13) {
      goto LABEL_28;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      int64_t v9 = v24 + 1;
      if (v24 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v25 = *(void *)(v6 + 8 * v9);
      if (!v25)
      {
        int64_t v9 = v24 + 2;
        if (v24 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v25 = *(void *)(v6 + 8 * v9);
        if (!v25) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v25 - 1) & v25;
    unint64_t v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 136 * v15;
    unint64_t v17 = (_OWORD *)(*(void *)(v2 + 48) + v16);
    long long v19 = v17[1];
    long long v18 = v17[2];
    long long v20 = v17[4];
    v27[3] = v17[3];
    v27[4] = v20;
    long long v21 = v17[5];
    long long v22 = v17[6];
    long long v23 = v17[7];
    uint64_t v28 = *((void *)v17 + 16);
    v27[6] = v22;
    v27[7] = v23;
    v27[5] = v21;
    v27[0] = *v17;
    v27[1] = v19;
    void v27[2] = v18;
    memmove((void *)(*(void *)(v4 + 48) + v16), v17, 0x88uLL);
    uint64_t result = (void *)sub_1AFD76370((uint64_t)v27);
  }
  int64_t v26 = v24 + 3;
  if (v26 >= v13) {
    goto LABEL_28;
  }
  unint64_t v25 = *(void *)(v6 + 8 * v26);
  if (v25)
  {
    int64_t v9 = v26;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v9);
    ++v26;
    if (v25) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1AFE25480()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1AFE28E88(0, &qword_1E9AFA168, (uint64_t (*)(void))sub_1AFD76884, (uint64_t)&type metadata for Watchlist, MEMORY[0x1E4FBB9A8]);
  uint64_t v3 = sub_1AFFCB7A8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_41;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v36 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v37 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  sub_1AFFC8E48();
  int64_t v9 = 0;
  uint64_t v10 = v2;
  while (1)
  {
    if (v7)
    {
      uint64_t v38 = (v7 - 1) & v7;
      int64_t v39 = v9;
      unint64_t v13 = __clz(__rbit64(v7)) | (v9 << 6);
      goto LABEL_24;
    }
    int64_t v14 = v9 + 1;
    if (__OFADD__(v9, 1)) {
      goto LABEL_42;
    }
    if (v14 >= v37) {
      break;
    }
    unint64_t v15 = *(void *)(v36 + 8 * v14);
    int64_t v16 = v9 + 1;
    if (!v15)
    {
      int64_t v16 = v9 + 2;
      if (v9 + 2 >= v37) {
        break;
      }
      unint64_t v15 = *(void *)(v36 + 8 * v16);
      if (!v15)
      {
        int64_t v16 = v9 + 3;
        if (v9 + 3 >= v37) {
          break;
        }
        unint64_t v15 = *(void *)(v36 + 8 * v16);
        if (!v15)
        {
          uint64_t v17 = v9 + 4;
          if (v9 + 4 >= v37) {
            break;
          }
          unint64_t v15 = *(void *)(v36 + 8 * v17);
          if (!v15)
          {
            while (1)
            {
              int64_t v16 = v17 + 1;
              if (__OFADD__(v17, 1)) {
                goto LABEL_43;
              }
              if (v16 >= v37) {
                goto LABEL_39;
              }
              unint64_t v15 = *(void *)(v36 + 8 * v16);
              ++v17;
              if (v15) {
                goto LABEL_23;
              }
            }
          }
          int64_t v16 = v9 + 4;
        }
      }
    }
LABEL_23:
    uint64_t v38 = (v15 - 1) & v15;
    int64_t v39 = v16;
    unint64_t v13 = __clz(__rbit64(v15)) + (v16 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(v10 + 48) + 48 * v13;
    uint64_t v19 = *(void *)v18;
    uint64_t v20 = *(void *)(v18 + 8);
    uint64_t v21 = *(void *)(v18 + 16);
    uint64_t v22 = *(void *)(v18 + 32);
    unsigned int v41 = *(unsigned __int8 *)(v18 + 40);
    uint64_t v42 = *(void *)(v18 + 24);
    char v40 = *(unsigned char *)(v18 + 41);
    sub_1AFFCBDF8();
    swift_bridgeObjectRetain_n();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFCAF68();
    swift_bridgeObjectRelease();
    sub_1AFFCBE08();
    uint64_t v23 = *(void *)(v21 + 16);
    if (v23)
    {
      uint64_t v24 = v10;
      uint64_t v25 = v4;
      sub_1AFFC8E38();
      uint64_t v26 = v21 + 40;
      do
      {
        sub_1AFFC8E38();
        sub_1AFFCAF68();
        swift_bridgeObjectRelease();
        v26 += 16;
        --v23;
      }
      while (v23);
      swift_bridgeObjectRelease();
      uint64_t v4 = v25;
      uint64_t v10 = v24;
    }
    sub_1AFFC8E38();
    sub_1AFFCAF68();
    swift_bridgeObjectRelease();
    switch(v41 >> 5)
    {
      case 5u:
        break;
      default:
        sub_1AFFCBE08();
        break;
    }
    sub_1AFFCBE08();
    sub_1AFFCBE08();
    uint64_t v27 = sub_1AFFCBE38();
    uint64_t v28 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v29 = v27 & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v8 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v29) & ~*(void *)(v8 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_7;
    }
    char v31 = 0;
    unint64_t v32 = (unint64_t)(63 - v28) >> 6;
    do
    {
      if (++v30 == v32 && (v31 & 1) != 0)
      {
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
        JUMPOUT(0x1AFE258E0);
      }
      BOOL v33 = v30 == v32;
      if (v30 == v32) {
        unint64_t v30 = 0;
      }
      v31 |= v33;
      uint64_t v34 = *(void *)(v8 + 8 * v30);
    }
    while (v34 == -1);
    unint64_t v11 = __clz(__rbit64(~v34)) + (v30 << 6);
LABEL_7:
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    uint64_t v12 = *(void *)(v4 + 48) + 48 * v11;
    *(void *)uint64_t v12 = v19;
    *(void *)(v12 + 8) = v20;
    *(void *)(v12 + 16) = v21;
    *(void *)(v12 + 24) = v42;
    *(void *)(v12 + 32) = v22;
    *(unsigned char *)(v12 + 40) = v41;
    *(unsigned char *)(v12 + 41) = v40;
    ++*(void *)(v4 + 16);
    unint64_t v7 = v38;
    int64_t v9 = v39;
  }
LABEL_39:
  uint64_t result = swift_release_n();
  uint64_t v1 = v0;
LABEL_41:
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1AFE258F8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1AFE28850();
  uint64_t v3 = sub_1AFFCB7A8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = sub_1AFFC8E48();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_1AFFCBDF8();
    sub_1AFFC8E38();
    sub_1AFFCAF68();
    uint64_t result = sub_1AFFCBE38();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *unint64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1AFE25BA4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1AFFC99F8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_1AFE28DC0();
  uint64_t v7 = sub_1AFFCB7A8();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = sub_1AFFC8E48();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_1AFDC2380((unint64_t *)&qword_1EB818BB0);
    uint64_t result = sub_1AFFCAD58();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

unint64_t sub_1AFE25F3C()
{
  uint64_t v1 = *v0;
  sub_1AFE28E88(0, &qword_1E9AFA160, (uint64_t (*)(void))sub_1AFD764A0, (uint64_t)&type metadata for Stock, MEMORY[0x1E4FBB9A8]);
  uint64_t v2 = sub_1AFFCB7A8();
  if (!*(void *)(v1 + 16))
  {
    unint64_t result = swift_release();
LABEL_25:
    *uint64_t v0 = v2;
    return result;
  }
  uint64_t v3 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v4 = v1 + 56;
  if (v3 < 64) {
    uint64_t v5 = ~(-1 << v3);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(v1 + 56);
  int64_t v7 = (unint64_t)(v3 + 63) >> 6;
  unint64_t result = sub_1AFFC8E48();
  int64_t v9 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v10 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v11 = v10 | (v9 << 6);
      goto LABEL_7;
    }
    int64_t v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v26 >= v7) {
      goto LABEL_23;
    }
    unint64_t v27 = *(void *)(v4 + 8 * v26);
    ++v9;
    if (!v27)
    {
      int64_t v9 = v26 + 1;
      if (v26 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v27 = *(void *)(v4 + 8 * v9);
      if (!v27)
      {
        int64_t v9 = v26 + 2;
        if (v26 + 2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v27 = *(void *)(v4 + 8 * v9);
        if (!v27) {
          break;
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v27 - 1) & v27;
    unint64_t v11 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_7:
    uint64_t v12 = *(void *)(v1 + 48) + 136 * v11;
    long long v13 = *(_OWORD *)(v12 + 64);
    long long v14 = *(_OWORD *)(v12 + 16);
    long long v15 = *(_OWORD *)(v12 + 32);
    long long v32 = *(_OWORD *)(v12 + 48);
    long long v33 = v13;
    long long v31 = v15;
    long long v16 = *(_OWORD *)(v12 + 80);
    long long v17 = *(_OWORD *)(v12 + 96);
    long long v18 = *(_OWORD *)(v12 + 112);
    uint64_t v37 = *(void *)(v12 + 128);
    long long v35 = v17;
    long long v36 = v18;
    long long v34 = v16;
    long long v29 = *(_OWORD *)v12;
    long long v30 = v14;
    sub_1AFFCBDF8();
    sub_1AFD76370((uint64_t)&v29);
    sub_1AFD78C34();
    sub_1AFFCBE38();
    unint64_t result = sub_1AFFCB758();
    *(void *)(v2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v19 = *(void *)(v2 + 48) + 136 * result;
    *(_OWORD *)uint64_t v19 = v29;
    long long v20 = v33;
    long long v22 = v30;
    long long v21 = v31;
    *(_OWORD *)(v19 + 48) = v32;
    *(_OWORD *)(v19 + 64) = v20;
    *(_OWORD *)(v19 + 16) = v22;
    *(_OWORD *)(v19 + 32) = v21;
    long long v23 = v34;
    long long v24 = v35;
    long long v25 = v36;
    *(void *)(v19 + 128) = v37;
    *(_OWORD *)(v19 + 96) = v24;
    *(_OWORD *)(v19 + 112) = v25;
    *(_OWORD *)(v19 + 80) = v23;
    ++*(void *)(v2 + 16);
  }
  int64_t v28 = v26 + 3;
  if (v28 >= v7)
  {
LABEL_23:
    unint64_t result = swift_release_n();
    goto LABEL_25;
  }
  unint64_t v27 = *(void *)(v4 + 8 * v28);
  if (v27)
  {
    int64_t v9 = v28;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v9 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v9 >= v7) {
      goto LABEL_23;
    }
    unint64_t v27 = *(void *)(v4 + 8 * v9);
    ++v28;
    if (v27) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

unint64_t sub_1AFE26220(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (uint64_t (*)(_OWORD *))isStackAllocationSafe;
  v12[1] = *MEMORY[0x1E4F143B8];
  char v6 = *(unsigned char *)(a3 + 32);
  unint64_t v7 = (unint64_t)((1 << v6) + 63) >> 6;
  size_t v8 = 8 * v7;
  if ((v6 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    unint64_t v9 = sub_1AFE263A4((unint64_t)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v7, a3, v5);
    swift_release();
    if (v3) {
      swift_willThrow();
    }
  }
  else
  {
    unint64_t v10 = (void *)swift_slowAlloc();
    bzero(v10, v8);
    unint64_t v9 = sub_1AFE263A4((unint64_t)v10, v7, a3, v5);
    swift_release();
    MEMORY[0x1B3E8F0D0](v10, -1, -1);
  }
  return v9;
}

unint64_t sub_1AFE263A4(unint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(_OWORD *))
{
  long long v30 = (unint64_t *)result;
  uint64_t v31 = 0;
  int64_t v7 = 0;
  uint64_t v8 = a3 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(a3 + 56);
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  while (v11)
  {
    unint64_t v12 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    unint64_t v13 = v12 | (v7 << 6);
LABEL_17:
    uint64_t v17 = *(void *)(a3 + 48) + 136 * v13;
    v34[0] = *(_OWORD *)v17;
    long long v18 = *(_OWORD *)(v17 + 64);
    long long v20 = *(_OWORD *)(v17 + 16);
    long long v19 = *(_OWORD *)(v17 + 32);
    v34[3] = *(_OWORD *)(v17 + 48);
    v34[4] = v18;
    v34[1] = v20;
    v34[2] = v19;
    long long v22 = *(_OWORD *)(v17 + 96);
    long long v21 = *(_OWORD *)(v17 + 112);
    long long v23 = *(_OWORD *)(v17 + 80);
    uint64_t v35 = *(void *)(v17 + 128);
    v34[6] = v22;
    v34[7] = v21;
    v34[5] = v23;
    long long v24 = *(_OWORD *)(v17 + 112);
    v32[6] = *(_OWORD *)(v17 + 96);
    v32[7] = v24;
    uint64_t v33 = *(void *)(v17 + 128);
    long long v25 = *(_OWORD *)(v17 + 48);
    _OWORD v32[2] = *(_OWORD *)(v17 + 32);
    uint64_t v32[3] = v25;
    long long v26 = *(_OWORD *)(v17 + 80);
    v32[4] = *(_OWORD *)(v17 + 64);
    v32[5] = v26;
    long long v27 = *(_OWORD *)(v17 + 16);
    v32[0] = *(_OWORD *)v17;
    v32[1] = v27;
    sub_1AFD76370((uint64_t)v34);
    char v28 = a4(v32);
    unint64_t result = sub_1AFD76408((uint64_t)v34);
    if (v4) {
      return result;
    }
    if (v28)
    {
      *(unint64_t *)((char *)v30 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      if (__OFADD__(v31, 1)) {
        goto LABEL_29;
      }
      ++v31;
    }
  }
  if (__OFADD__(v7++, 1))
  {
    __break(1u);
    goto LABEL_28;
  }
  if (v7 >= v36) {
    goto LABEL_26;
  }
  unint64_t v15 = *(void *)(v8 + 8 * v7);
  if (v15)
  {
LABEL_16:
    unint64_t v11 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v7 << 6);
    goto LABEL_17;
  }
  int64_t v16 = v7 + 1;
  if (v7 + 1 >= v36) {
    goto LABEL_26;
  }
  unint64_t v15 = *(void *)(v8 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v7 + 2;
  if (v7 + 2 >= v36) {
    goto LABEL_26;
  }
  unint64_t v15 = *(void *)(v8 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v7 + 3;
  if (v7 + 3 >= v36)
  {
LABEL_26:
    sub_1AFFC8E48();
    return sub_1AFD72E20(v30, a2, v31, a3);
  }
  unint64_t v15 = *(void *)(v8 + 8 * v16);
  if (v15)
  {
LABEL_15:
    int64_t v7 = v16;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v7 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v7 >= v36) {
      goto LABEL_26;
    }
    unint64_t v15 = *(void *)(v8 + 8 * v7);
    ++v16;
    if (v15) {
      goto LABEL_16;
    }
  }
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

void *sub_1AFE265EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v4 = (uint64_t *)(sub_1AFFC8E38() + 40);
  uint64_t v5 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    if (*(void *)(a2 + 16))
    {
      uint64_t v7 = *(v4 - 1);
      uint64_t v6 = *v4;
      swift_bridgeObjectRetain_n();
      unint64_t v8 = sub_1AFD79CC8(v7, v6);
      if (v9)
      {
        uint64_t v10 = *(void *)(a2 + 56) + 136 * v8;
        long long v34 = *(_OWORD *)v10;
        long long v11 = *(_OWORD *)(v10 + 64);
        long long v13 = *(_OWORD *)(v10 + 16);
        long long v12 = *(_OWORD *)(v10 + 32);
        long long v37 = *(_OWORD *)(v10 + 48);
        long long v38 = v11;
        long long v35 = v13;
        long long v36 = v12;
        long long v15 = *(_OWORD *)(v10 + 96);
        long long v14 = *(_OWORD *)(v10 + 112);
        long long v16 = *(_OWORD *)(v10 + 80);
        uint64_t v42 = *(void *)(v10 + 128);
        long long v40 = v15;
        long long v41 = v14;
        long long v39 = v16;
        sub_1AFD76370((uint64_t)&v34);
        swift_bridgeObjectRelease();
        v27[6] = v40;
        v27[7] = v41;
        uint64_t v28 = v42;
        void v27[2] = v36;
        v27[3] = v37;
        v27[4] = v38;
        v27[5] = v39;
        v27[0] = v34;
        v27[1] = v35;
        sub_1AFE4275C(v27, (uint64_t *)v29);
        swift_bridgeObjectRelease();
        long long v25 = v29[1];
        long long v26 = v29[0];
        uint64_t v17 = v30;
        uint64_t v43 = v31;
        uint64_t v19 = v32;
        uint64_t v18 = v33;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v5 = sub_1AFD35BE0(0, v5[2] + 1, 1, v5);
        }
        unint64_t v21 = v5[2];
        unint64_t v20 = v5[3];
        if (v21 >= v20 >> 1) {
          uint64_t v5 = sub_1AFD35BE0((void *)(v20 > 1), v21 + 1, 1, v5);
        }
        v5[2] = v21 + 1;
        long long v22 = &v5[8 * v21];
        *((_OWORD *)v22 + 2) = v26;
        *((_OWORD *)v22 + 3) = v25;
        uint64_t v23 = v43;
        v22[8] = v17;
        v22[9] = v23;
        v22[10] = v19;
        v22[11] = v18;
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }
    }
    v4 += 2;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease();
  return v5;
}

void sub_1AFE267D4()
{
  if (!qword_1E9AFB1F8)
  {
    sub_1AFE26838();
    unint64_t v0 = sub_1AFFC8DF8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9AFB1F8);
    }
  }
}

unint64_t sub_1AFE26838()
{
  unint64_t result = qword_1E9AFB200;
  if (!qword_1E9AFB200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB200);
  }
  return result;
}

void sub_1AFE2688C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v59 = a1;
  sub_1AFE28E88(0, &qword_1E9AFB278, (uint64_t (*)(void))sub_1AFE26838, (uint64_t)&type metadata for SymbolWidgetEntity, MEMORY[0x1E4F18450]);
  uint64_t v72 = v9;
  uint64_t v58 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  long long v11 = (char *)&v53 - v10;
  uint64_t v54 = a2;
  if (a3 != a2)
  {
    uint64_t v12 = *a4;
    uint64_t v62 = *(void *)(a5 + 16);
    long long v64 = (void (**)(char *, uint64_t))(v58 + 8);
    uint64_t v65 = v58 + 16;
    uint64_t v63 = MEMORY[0x1E4FBC840] + 8;
    unint64_t v71 = (char *)&v53 - v10;
    uint64_t v56 = v12;
    uint64_t v57 = a5;
    while (2)
    {
      uint64_t v55 = a3;
      uint64_t v13 = a3;
      uint64_t v14 = v72;
      do
      {
        uint64_t v15 = v12 + 136 * v13;
        long long v94 = *(_OWORD *)v15;
        long long v16 = *(_OWORD *)(v15 + 16);
        long long v17 = *(_OWORD *)(v15 + 32);
        long long v18 = *(_OWORD *)(v15 + 64);
        long long v97 = *(_OWORD *)(v15 + 48);
        long long v98 = v18;
        long long v95 = v16;
        long long v96 = v17;
        long long v19 = *(_OWORD *)(v15 + 80);
        long long v20 = *(_OWORD *)(v15 + 96);
        long long v21 = *(_OWORD *)(v15 + 112);
        uint64_t v102 = *(void *)(v15 + 128);
        long long v100 = v20;
        long long v101 = v21;
        long long v99 = v19;
        long long v103 = *(_OWORD *)(v15 - 136);
        long long v22 = *(_OWORD *)(v15 - 120);
        long long v23 = *(_OWORD *)(v15 - 104);
        long long v24 = *(_OWORD *)(v15 - 72);
        long long v106 = *(_OWORD *)(v15 - 88);
        long long v107 = v24;
        long long v104 = v22;
        long long v105 = v23;
        long long v25 = *(_OWORD *)(v15 - 56);
        long long v26 = *(_OWORD *)(v15 - 40);
        long long v27 = *(_OWORD *)(v15 - 24);
        uint64_t v111 = *(void *)(v15 - 8);
        long long v109 = v26;
        long long v110 = v27;
        long long v108 = v25;
        if (v62)
        {
          uint64_t v60 = v12 + 136 * v13;
          uint64_t v61 = v13;
          uint64_t v28 = v58;
          uint64_t v29 = a5 + ((*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80));
          sub_1AFD76370((uint64_t)&v94);
          sub_1AFD76370((uint64_t)&v103);
          uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v28 + 16);
          uint64_t v66 = *(void *)(v28 + 72);
          uint64_t v67 = v30;
          sub_1AFFC8E38();
          uint64_t v31 = v62;
          while (1)
          {
            uint64_t v69 = v31;
            uint64_t v70 = v29;
            v67(v11, v29, v14);
            long long v83 = v100;
            long long v84 = v101;
            uint64_t v85 = v102;
            long long v79 = v96;
            long long v80 = v97;
            long long v81 = v98;
            long long v82 = v99;
            long long v77 = v94;
            long long v78 = v95;
            sub_1AFD76370((uint64_t)&v94);
            sub_1AFE4275C(&v77, &v86);
            uint64_t v33 = v86;
            uint64_t v34 = v87;
            uint64_t v112 = v86;
            uint64_t v35 = v88;
            uint64_t v36 = v89;
            uint64_t v37 = v91;
            uint64_t v38 = v93;
            uint64_t v73 = v92;
            uint64_t v74 = v90;
            sub_1AFFC8BC8();
            *(void *)&long long v77 = v33;
            *((void *)&v77 + 1) = v34;
            *(void *)&long long v78 = v35;
            *((void *)&v78 + 1) = v36;
            *(void *)&long long v79 = v74;
            *((void *)&v79 + 1) = v37;
            *(void *)&long long v80 = v73;
            *((void *)&v80 + 1) = v38;
            swift_getAtPartialKeyPath();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (!swift_dynamicCast())
            {
              a5 = v57;
              goto LABEL_21;
            }
            uint64_t v68 = v75;
            uint64_t v112 = v76;
            long long v83 = v109;
            long long v84 = v110;
            uint64_t v85 = v111;
            long long v79 = v105;
            long long v80 = v106;
            long long v81 = v107;
            long long v82 = v108;
            long long v77 = v103;
            long long v78 = v104;
            sub_1AFD76370((uint64_t)&v103);
            sub_1AFE4275C(&v77, &v86);
            uint64_t v40 = v86;
            uint64_t v39 = v87;
            uint64_t v41 = v88;
            uint64_t v42 = v89;
            uint64_t v43 = v91;
            uint64_t v44 = v93;
            uint64_t v73 = v92;
            uint64_t v74 = v90;
            sub_1AFFC8BC8();
            *(void *)&long long v77 = v40;
            *((void *)&v77 + 1) = v39;
            *(void *)&long long v78 = v41;
            *((void *)&v78 + 1) = v42;
            *(void *)&long long v79 = v74;
            *((void *)&v79 + 1) = v43;
            *(void *)&long long v80 = v73;
            *((void *)&v80 + 1) = v44;
            swift_getAtPartialKeyPath();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((swift_dynamicCast() & 1) == 0) {
              break;
            }
            uint64_t v45 = v75;
            uint64_t v46 = v76;
            long long v11 = v71;
            uint64_t v14 = v72;
            if (sub_1AFFC8BD8())
            {
              if (v68 == v45 && v112 == v46)
              {
                swift_bridgeObjectRelease_n();
                (*v64)(v11, v14);
              }
              else
              {
                char v32 = sub_1AFFCBCE8();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                (*v64)(v11, v14);
                if (v32) {
                  goto LABEL_18;
                }
              }
            }
            else if (v45 == v68 && v46 == v112)
            {
              (*v64)(v11, v14);
              swift_bridgeObjectRelease_n();
            }
            else
            {
              char v47 = sub_1AFFCBCE8();
              (*v64)(v11, v14);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (v47)
              {
LABEL_18:
                a5 = v57;
                swift_bridgeObjectRelease();
                uint64_t v12 = v56;
                goto LABEL_22;
              }
            }
            uint64_t v29 = v70 + v66;
            uint64_t v31 = v69 - 1;
            if (v69 == 1) {
              goto LABEL_18;
            }
          }
          a5 = v57;
          swift_bridgeObjectRelease();
LABEL_21:
          swift_bridgeObjectRelease();
          uint64_t v12 = v56;
          MEMORY[0x1B3E8C360]("Encountered a SymbolWidgetEntity value in SymbolQuery which is not a String. We need to add explicit support for this in the property queries.", 142, 2, MEMORY[0x1E4FBC860]);
          long long v11 = v71;
          uint64_t v14 = v72;
          (*v64)(v71, v72);
LABEL_22:
          sub_1AFD76408((uint64_t)&v103);
          sub_1AFD76408((uint64_t)&v94);
          uint64_t v15 = v60;
          uint64_t v13 = v61;
        }
        if (!v12)
        {
          __break(1u);
          return;
        }
        --v13;
        uint64_t v48 = v15 - 136;
        long long v82 = *(_OWORD *)(v15 + 80);
        long long v83 = *(_OWORD *)(v15 + 96);
        long long v84 = *(_OWORD *)(v15 + 112);
        uint64_t v85 = *(void *)(v15 + 128);
        long long v78 = *(_OWORD *)(v15 + 16);
        long long v79 = *(_OWORD *)(v15 + 32);
        long long v80 = *(_OWORD *)(v15 + 48);
        long long v81 = *(_OWORD *)(v15 + 64);
        long long v77 = *(_OWORD *)v15;
        long long v49 = *(_OWORD *)(v15 - 56);
        *(_OWORD *)(v15 + 64) = *(_OWORD *)(v15 - 72);
        *(_OWORD *)(v15 + 80) = v49;
        long long v50 = *(_OWORD *)(v15 - 24);
        *(_OWORD *)(v15 + 96) = *(_OWORD *)(v15 - 40);
        *(_OWORD *)(v15 + 112) = v50;
        *(void *)(v15 + 128) = *(void *)(v15 - 8);
        long long v51 = *(_OWORD *)(v15 - 88);
        *(_OWORD *)(v15 + 32) = *(_OWORD *)(v15 - 104);
        *(_OWORD *)(v15 + 48) = v51;
        long long v52 = *(_OWORD *)(v15 - 120);
        *(_OWORD *)uint64_t v15 = *(_OWORD *)(v15 - 136);
        *(_OWORD *)(v15 + 16) = v52;
        *(_OWORD *)(v48 + 64) = v81;
        *(_OWORD *)(v48 + 80) = v82;
        *(_OWORD *)(v48 + 96) = v83;
        *(_OWORD *)(v48 + 112) = v84;
        *(void *)(v48 + 128) = v85;
        *(_OWORD *)(v48 + 16) = v78;
        *(_OWORD *)(v48 + 32) = v79;
        *(_OWORD *)(v48 + 48) = v80;
        *(_OWORD *)uint64_t v48 = v77;
      }
      while (v13 != v59);
      a3 = v55 + 1;
      if (v55 + 1 != v54) {
        continue;
      }
      break;
    }
  }
}

uint64_t sub_1AFE26F54(uint64_t *a1, uint64_t a2)
{
  sub_1AFE28E88(0, &qword_1E9AFB278, (uint64_t (*)(void))sub_1AFE26838, (uint64_t)&type metadata for SymbolWidgetEntity, MEMORY[0x1E4F18450]);
  uint64_t v6 = v5;
  uint64_t v210 = *((void *)v5 - 1);
  MEMORY[0x1F4188790](v5);
  unint64_t v8 = (char *)&v195 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  v207 = (char *)&v195 - v10;
  char v198 = a1;
  uint64_t v11 = a1[1];
  uint64_t v214 = a2;
  swift_bridgeObjectRetain_n();
  uint64_t v12 = sub_1AFFCBC78();
  if (v12 >= v11)
  {
    if (v11 < 0) {
      goto LABEL_181;
    }
    if (v11)
    {
      uint64_t v16 = v214;
      sub_1AFFC8E38();
      sub_1AFE2688C(0, v11, 1, v198, v16);
    }
    return swift_bridgeObjectRelease_n();
  }
  uint64_t v197 = v12;
  if (v11 >= 0) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v11 + 1;
  }
  if (v11 < -1) {
    goto LABEL_189;
  }
  uint64_t v199 = v11;
  uint64_t v204 = v2;
  if (v11 < 2)
  {
    uint64_t v202 = (char *)(MEMORY[0x1E4FBC860] + 32);
    uint64_t v196 = MEMORY[0x1E4FBC860];
    if (v11 != 1)
    {
      unint64_t v125 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      long long v21 = (char *)MEMORY[0x1E4FBC860];
LABEL_146:
      if (v125 >= 2)
      {
        uint64_t v181 = (char *)*v198;
        v226 = (char *)*v198;
        while (1)
        {
          unint64_t v182 = v125 - 2;
          if (v125 < 2) {
            goto LABEL_175;
          }
          if (!v181) {
            goto LABEL_188;
          }
          uint64_t v183 = v21;
          uint64_t v184 = *(void *)&v21[16 * v182 + 32];
          uint64_t v185 = *(void *)&v21[16 * v125 + 24];
          long long v186 = &v181[136 * v184];
          v282 = &v181[136 * *(void *)&v21[16 * v125 + 16]];
          unint64_t v187 = (unint64_t)&v181[136 * v185];
          uint64_t v188 = v214;
          sub_1AFFC8E38();
          uint64_t v189 = v186;
          uint64_t v190 = v204;
          sub_1AFE21A2C(v189, v282, v187, v202, v188);
          uint64_t v204 = v190;
          if (v190) {
            goto LABEL_157;
          }
          if (v185 < v184) {
            goto LABEL_177;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v183 = sub_1AFEE6294((uint64_t)v183);
          }
          if (v182 >= *((void *)v183 + 2)) {
            goto LABEL_178;
          }
          os_log_type_t v191 = v183;
          char v192 = v183 + 32;
          uint64_t v193 = &v183[16 * v182 + 32];
          *(void *)uint64_t v193 = v184;
          *((void *)v193 + 1) = v185;
          unint64_t v194 = *((void *)v183 + 2);
          if (v125 > v194) {
            goto LABEL_179;
          }
          memmove(&v192[16 * v125 - 16], &v192[16 * v125], 16 * (v194 - v125));
          *((void *)v191 + 2) = v194 - 1;
          unint64_t v125 = v194 - 1;
          long long v21 = v191;
          uint64_t v181 = v226;
          if (v194 <= 2) {
            goto LABEL_157;
          }
        }
      }
      goto LABEL_157;
    }
  }
  else
  {
    uint64_t v14 = v13 >> 1;
    uint64_t v15 = sub_1AFFCB258();
    *(void *)(v15 + 16) = v14;
    uint64_t v196 = v15;
    uint64_t v202 = (char *)(v15 + 32);
  }
  uint64_t v18 = 0;
  uint64_t v19 = *v198;
  v216 = (void (**)(char *, char *))(v210 + 8);
  uint64_t v217 = v210 + 16;
  uint64_t v20 = v199;
  uint64_t v201 = v199 - 1;
  uint64_t v195 = v19 - 136;
  long long v21 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v206 = MEMORY[0x1E4FBC840] + 8;
  v282 = v6;
  v224 = v8;
  uint64_t v211 = v19;
  while (1)
  {
    uint64_t v22 = v18;
    uint64_t v23 = v18 + 1;
    uint64_t v205 = v21;
    uint64_t v209 = v18;
    if (v18 + 1 >= v20)
    {
      uint64_t v39 = v18 + 1;
      goto LABEL_41;
    }
    uint64_t v24 = v19 + 136 * v23;
    long long v264 = *(_OWORD *)v24;
    long long v25 = *(_OWORD *)(v24 + 16);
    long long v26 = *(_OWORD *)(v24 + 32);
    long long v27 = *(_OWORD *)(v24 + 64);
    long long v267 = *(_OWORD *)(v24 + 48);
    long long v268 = v27;
    long long v265 = v25;
    long long v266 = v26;
    long long v28 = *(_OWORD *)(v24 + 80);
    long long v29 = *(_OWORD *)(v24 + 96);
    long long v30 = *(_OWORD *)(v24 + 112);
    uint64_t v272 = *(void *)(v24 + 128);
    long long v270 = v29;
    long long v271 = v30;
    long long v269 = v28;
    long long v260 = *(_OWORD *)(v24 + 80);
    long long v261 = *(_OWORD *)(v24 + 96);
    long long v262 = *(_OWORD *)(v24 + 112);
    uint64_t v263 = *(void *)(v24 + 128);
    long long v256 = *(_OWORD *)(v24 + 16);
    long long v257 = *(_OWORD *)(v24 + 32);
    long long v258 = *(_OWORD *)(v24 + 48);
    long long v259 = *(_OWORD *)(v24 + 64);
    long long v255 = *(_OWORD *)v24;
    uint64_t v31 = v19 + 136 * v18;
    long long v273 = *(_OWORD *)v31;
    long long v32 = *(_OWORD *)(v31 + 16);
    long long v33 = *(_OWORD *)(v31 + 32);
    long long v34 = *(_OWORD *)(v31 + 64);
    long long v276 = *(_OWORD *)(v31 + 48);
    long long v277 = v34;
    long long v274 = v32;
    long long v275 = v33;
    long long v35 = *(_OWORD *)(v31 + 80);
    long long v36 = *(_OWORD *)(v31 + 96);
    long long v37 = *(_OWORD *)(v31 + 112);
    uint64_t v281 = *(void *)(v31 + 128);
    long long v279 = v36;
    long long v280 = v37;
    long long v278 = v35;
    long long v251 = *(_OWORD *)(v31 + 80);
    long long v252 = *(_OWORD *)(v31 + 96);
    long long v253 = *(_OWORD *)(v31 + 112);
    uint64_t v254 = *(void *)(v31 + 128);
    long long v247 = *(_OWORD *)(v31 + 16);
    long long v248 = *(_OWORD *)(v31 + 32);
    long long v249 = *(_OWORD *)(v31 + 48);
    long long v250 = *(_OWORD *)(v31 + 64);
    long long v246 = *(_OWORD *)v31;
    sub_1AFD76370((uint64_t)&v264);
    sub_1AFD76370((uint64_t)&v273);
    uint64_t v38 = v204;
    LODWORD(v212) = sub_1AFE214E8((uint64_t)&v255, (uint64_t)&v246, v214);
    uint64_t v204 = v38;
    if (v38)
    {
      sub_1AFD76408((uint64_t)&v273);
      sub_1AFD76408((uint64_t)&v264);
LABEL_157:
      swift_bridgeObjectRelease();
      *(void *)(v196 + 16) = 0;
      swift_bridgeObjectRelease_n();
      return swift_bridgeObjectRelease();
    }
    sub_1AFD76408((uint64_t)&v273);
    sub_1AFD76408((uint64_t)&v264);
    uint64_t v39 = v22 + 2;
    if (v22 + 2 < v199)
    {
      uint64_t v215 = *(void *)(v214 + 16);
      uint64_t v203 = v22 + 2;
      for (uint64_t i = v22 + 2; ; ++i)
      {
        uint64_t v41 = v19 + 136 * i;
        long long v246 = *(_OWORD *)v41;
        long long v42 = *(_OWORD *)(v41 + 16);
        long long v43 = *(_OWORD *)(v41 + 32);
        long long v44 = *(_OWORD *)(v41 + 64);
        long long v249 = *(_OWORD *)(v41 + 48);
        long long v250 = v44;
        long long v247 = v42;
        long long v248 = v43;
        long long v45 = *(_OWORD *)(v41 + 80);
        long long v46 = *(_OWORD *)(v41 + 96);
        long long v47 = *(_OWORD *)(v41 + 112);
        uint64_t v254 = *(void *)(v41 + 128);
        long long v252 = v46;
        long long v253 = v47;
        long long v251 = v45;
        uint64_t v48 = v19 + 136 * v23;
        long long v255 = *(_OWORD *)v48;
        long long v49 = *(_OWORD *)(v48 + 16);
        long long v50 = *(_OWORD *)(v48 + 32);
        long long v51 = *(_OWORD *)(v48 + 64);
        long long v258 = *(_OWORD *)(v48 + 48);
        long long v259 = v51;
        long long v256 = v49;
        long long v257 = v50;
        long long v52 = *(_OWORD *)(v48 + 80);
        long long v53 = *(_OWORD *)(v48 + 96);
        long long v54 = *(_OWORD *)(v48 + 112);
        uint64_t v263 = *(void *)(v48 + 128);
        long long v261 = v53;
        long long v262 = v54;
        long long v260 = v52;
        if (v215)
        {
          uint64_t v213 = i;
          uint64_t v55 = v210;
          uint64_t v56 = (char *)(v214
                       + ((*(unsigned __int8 *)(v210 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v210 + 80)));
          sub_1AFFC8E38();
          sub_1AFD76370((uint64_t)&v246);
          sub_1AFD76370((uint64_t)&v255);
          uint64_t v57 = *(char **)(v55 + 16);
          v218 = *(void (**)(char *, uint64_t, char *))(v55 + 72);
          v219 = v57;
          uint64_t v58 = v215;
          uint64_t v59 = v207;
          while (1)
          {
            uint64_t v221 = v58;
            v222 = v56;
            ((void (*)(char *, char *, char *))v219)(v59, v56, v6);
            long long v235 = v252;
            long long v236 = v253;
            uint64_t v237 = v254;
            long long v231 = v248;
            long long v232 = v249;
            long long v233 = v250;
            long long v234 = v251;
            long long v229 = v246;
            long long v230 = v247;
            sub_1AFD76370((uint64_t)&v246);
            sub_1AFE4275C(&v229, (uint64_t *)&v238);
            uint64_t v62 = v238;
            uint64_t v61 = v239;
            uint64_t v63 = v240;
            uint64_t v64 = v241;
            uint64_t v65 = v242;
            uint64_t v66 = v243;
            uint64_t v67 = v245;
            v225 = v244;
            v226 = v238;
            sub_1AFFC8BC8();
            *(void *)&long long v229 = v62;
            *((void *)&v229 + 1) = v61;
            *(void *)&long long v230 = v63;
            *((void *)&v230 + 1) = v64;
            *(void *)&long long v231 = v65;
            *((void *)&v231 + 1) = v66;
            *(void *)&long long v232 = v225;
            *((void *)&v232 + 1) = v67;
            swift_getAtPartialKeyPath();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (!swift_dynamicCast()) {
              break;
            }
            uint64_t v220 = v227;
            v226 = v228;
            long long v235 = v261;
            long long v236 = v262;
            uint64_t v237 = v263;
            long long v231 = v257;
            long long v232 = v258;
            long long v233 = v259;
            long long v234 = v260;
            long long v229 = v255;
            long long v230 = v256;
            sub_1AFD76370((uint64_t)&v255);
            sub_1AFE4275C(&v229, (uint64_t *)&v238);
            uint64_t v69 = v238;
            uint64_t v68 = v239;
            v225 = v238;
            uint64_t v71 = v240;
            uint64_t v70 = v241;
            uint64_t v72 = v243;
            uint64_t v223 = v242;
            uint64_t v74 = v244;
            uint64_t v73 = v245;
            sub_1AFFC8BC8();
            *(void *)&long long v229 = v69;
            *((void *)&v229 + 1) = v68;
            *(void *)&long long v230 = v71;
            *((void *)&v230 + 1) = v70;
            *(void *)&long long v231 = v223;
            *((void *)&v231 + 1) = v72;
            *(void *)&long long v232 = v74;
            *((void *)&v232 + 1) = v73;
            swift_getAtPartialKeyPath();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((swift_dynamicCast() & 1) == 0)
            {
              swift_bridgeObjectRelease();
              break;
            }
            uint64_t v76 = v227;
            uint64_t v75 = v228;
            uint64_t v6 = v282;
            uint64_t v59 = v207;
            if (sub_1AFFC8BD8())
            {
              if (v220 == v76 && v226 == v75)
              {
                swift_bridgeObjectRelease_n();
                (*v216)(v59, v6);
              }
              else
              {
                char v60 = sub_1AFFCBCE8();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                (*v216)(v59, v6);
                if (v60) {
                  goto LABEL_32;
                }
              }
            }
            else if (v76 == v220 && v75 == v226)
            {
              (*v216)(v59, v6);
              swift_bridgeObjectRelease_n();
            }
            else
            {
              char v77 = sub_1AFFCBCE8();
              (*v216)(v59, v6);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (v77)
              {
LABEL_32:
                swift_bridgeObjectRelease();
                unint64_t v8 = v224;
                uint64_t v19 = v211;
                goto LABEL_36;
              }
            }
            uint64_t v56 = (char *)v218 + (void)v222;
            uint64_t v58 = v221 - 1;
            if (v221 == 1) {
              goto LABEL_32;
            }
          }
          swift_bridgeObjectRelease();
          unint64_t v8 = v224;
          uint64_t v19 = v211;
          MEMORY[0x1B3E8C360]("Encountered a SymbolWidgetEntity value in SymbolQuery which is not a String. We need to add explicit support for this in the property queries.", 142, 2, MEMORY[0x1E4FBC860]);
          uint64_t v6 = v282;
          (*v216)(v207, v282);
LABEL_36:
          uint64_t v22 = v209;
          sub_1AFD76408((uint64_t)&v255);
          sub_1AFD76408((uint64_t)&v246);
          uint64_t i = v213;
        }
        if ((v212 & 1) == 0) {
          break;
        }
        if (i == v201)
        {
          uint64_t v39 = v199;
          if (v199 < v22) {
            goto LABEL_182;
          }
          goto LABEL_58;
        }
        uint64_t v23 = i;
      }
      uint64_t v39 = v203;
      uint64_t v78 = v203 - v22;
      if (__OFSUB__(v203, v22)) {
        goto LABEL_180;
      }
      goto LABEL_48;
    }
    if (v212)
    {
LABEL_58:
      if (v22 < v39)
      {
        long long v81 = (_OWORD *)(v195 + 136 * v39);
        uint64_t v82 = v19;
        uint64_t v83 = v39;
        uint64_t v84 = v39;
        uint64_t v85 = v22;
        uint64_t v86 = (_OWORD *)(v82 + 136 * v22);
        do
        {
          if (v85 != --v84)
          {
            if (!v211) {
              goto LABEL_187;
            }
            long long v260 = v86[5];
            long long v261 = v86[6];
            long long v262 = v86[7];
            uint64_t v263 = *((void *)v86 + 16);
            long long v256 = v86[1];
            long long v257 = v86[2];
            long long v258 = v86[3];
            long long v259 = v86[4];
            long long v255 = *v86;
            memmove(v86, v81, 0x88uLL);
            v81[5] = v260;
            v81[6] = v261;
            v81[7] = v262;
            *((void *)v81 + 16) = v263;
            v81[1] = v256;
            v81[2] = v257;
            v81[3] = v258;
            v81[4] = v259;
            *long long v81 = v255;
          }
          ++v85;
          long long v81 = (_OWORD *)((char *)v81 - 136);
          uint64_t v86 = (_OWORD *)((char *)v86 + 136);
        }
        while (v85 < v84);
        uint64_t v19 = v211;
        uint64_t v39 = v83;
      }
      goto LABEL_91;
    }
LABEL_41:
    if (v39 >= v199) {
      goto LABEL_91;
    }
    uint64_t v78 = v39 - v22;
    if (__OFSUB__(v39, v22)) {
      goto LABEL_180;
    }
LABEL_48:
    uint64_t v79 = v39;
    if (v78 >= v197) {
      goto LABEL_91;
    }
    uint64_t v80 = v22 + v197;
    if (__OFADD__(v22, v197)) {
      goto LABEL_183;
    }
    if (v80 >= v199) {
      uint64_t v80 = v199;
    }
    if (v80 < v22) {
      break;
    }
    if (v39 != v80)
    {
      uint64_t v200 = v80;
      uint64_t v87 = *(void *)(v214 + 16);
      uint64_t v208 = v87;
      do
      {
        uint64_t v203 = v79;
        uint64_t v88 = v79;
        do
        {
          uint64_t v89 = v19 + 136 * v88;
          long long v264 = *(_OWORD *)v89;
          long long v90 = *(_OWORD *)(v89 + 16);
          long long v91 = *(_OWORD *)(v89 + 32);
          long long v92 = *(_OWORD *)(v89 + 64);
          long long v267 = *(_OWORD *)(v89 + 48);
          long long v268 = v92;
          long long v265 = v90;
          long long v266 = v91;
          long long v93 = *(_OWORD *)(v89 + 80);
          long long v94 = *(_OWORD *)(v89 + 96);
          long long v95 = *(_OWORD *)(v89 + 112);
          uint64_t v272 = *(void *)(v89 + 128);
          long long v270 = v94;
          long long v271 = v95;
          long long v269 = v93;
          long long v273 = *(_OWORD *)(v89 - 136);
          long long v96 = *(_OWORD *)(v89 - 120);
          long long v97 = *(_OWORD *)(v89 - 104);
          long long v98 = *(_OWORD *)(v89 - 72);
          long long v276 = *(_OWORD *)(v89 - 88);
          long long v277 = v98;
          long long v274 = v96;
          long long v275 = v97;
          long long v99 = *(_OWORD *)(v89 - 56);
          long long v100 = *(_OWORD *)(v89 - 40);
          long long v101 = *(_OWORD *)(v89 - 24);
          uint64_t v281 = *(void *)(v89 - 8);
          long long v279 = v100;
          long long v280 = v101;
          long long v278 = v99;
          if (v87)
          {
            uint64_t v212 = v19 + 136 * v88;
            uint64_t v213 = v88;
            uint64_t v102 = v210;
            uint64_t v103 = v214
                 + ((*(unsigned __int8 *)(v210 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v210 + 80));
            sub_1AFFC8E38();
            sub_1AFD76370((uint64_t)&v264);
            sub_1AFD76370((uint64_t)&v273);
            uint64_t v215 = *(void *)(v102 + 72);
            v218 = *(void (**)(char *, uint64_t, char *))(v102 + 16);
            while (1)
            {
              uint64_t v220 = v87;
              uint64_t v221 = v103;
              v218(v8, v103, v6);
              long long v261 = v270;
              long long v262 = v271;
              uint64_t v263 = v272;
              long long v257 = v266;
              long long v258 = v267;
              long long v259 = v268;
              long long v260 = v269;
              long long v255 = v264;
              long long v256 = v265;
              sub_1AFD76370((uint64_t)&v264);
              sub_1AFE4275C(&v255, (uint64_t *)&v246);
              long long v105 = v246;
              long long v106 = v247;
              v225 = (char *)v248;
              v226 = (char *)v246;
              uint64_t v107 = *((void *)&v248 + 1);
              long long v108 = v249;
              sub_1AFFC8BC8();
              long long v255 = v105;
              long long v256 = v106;
              *(void *)&long long v257 = v225;
              *((void *)&v257 + 1) = v107;
              long long v258 = v108;
              swift_getAtPartialKeyPath();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v109 = MEMORY[0x1E4FBC840] + 8;
              if (!swift_dynamicCast()) {
                break;
              }
              v219 = v238;
              v226 = v239;
              long long v261 = v279;
              long long v262 = v280;
              uint64_t v263 = v281;
              long long v257 = v275;
              long long v258 = v276;
              long long v259 = v277;
              long long v260 = v278;
              long long v255 = v273;
              long long v256 = v274;
              sub_1AFD76370((uint64_t)&v273);
              sub_1AFE4275C(&v255, (uint64_t *)&v246);
              long long v110 = v246;
              long long v111 = v247;
              v222 = (char *)v248;
              uint64_t v223 = v246;
              uint64_t v112 = *((void *)&v248 + 1);
              long long v113 = v249;
              v225 = (char *)v109;
              sub_1AFFC8BC8();
              long long v255 = v110;
              long long v256 = v111;
              *(void *)&long long v257 = v222;
              *((void *)&v257 + 1) = v112;
              long long v258 = v113;
              swift_getAtPartialKeyPath();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((swift_dynamicCast() & 1) == 0)
              {
                swift_bridgeObjectRelease();
                break;
              }
              uint64_t v115 = v238;
              uint64_t v114 = v239;
              uint64_t v6 = v282;
              unint64_t v8 = v224;
              if (sub_1AFFC8BD8())
              {
                if (v219 == v115 && v226 == v114)
                {
                  swift_bridgeObjectRelease_n();
                  (*v216)(v8, v6);
                }
                else
                {
                  char v104 = sub_1AFFCBCE8();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  (*v216)(v8, v6);
                  if (v104) {
                    goto LABEL_82;
                  }
                }
              }
              else if (v115 == v219 && v114 == v226)
              {
                (*v216)(v8, v6);
                swift_bridgeObjectRelease_n();
              }
              else
              {
                char v116 = sub_1AFFCBCE8();
                (*v216)(v8, v6);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v116)
                {
LABEL_82:
                  swift_bridgeObjectRelease();
                  uint64_t v19 = v211;
                  goto LABEL_86;
                }
              }
              uint64_t v103 = v221 + v215;
              uint64_t v87 = v220 - 1;
              if (v220 == 1) {
                goto LABEL_82;
              }
            }
            swift_bridgeObjectRelease();
            uint64_t v19 = v211;
            MEMORY[0x1B3E8C360]("Encountered a SymbolWidgetEntity value in SymbolQuery which is not a String. We need to add explicit support for this in the property queries.", 142, 2, MEMORY[0x1E4FBC860]);
            unint64_t v8 = v224;
            uint64_t v6 = v282;
            (*v216)(v224, v282);
LABEL_86:
            uint64_t v87 = v208;
            uint64_t v22 = v209;
            uint64_t v88 = v213;
            sub_1AFD76408((uint64_t)&v273);
            sub_1AFD76408((uint64_t)&v264);
            uint64_t v89 = v212;
          }
          if (!v19) {
            goto LABEL_185;
          }
          --v88;
          uint64_t v117 = v89 - 136;
          long long v260 = *(_OWORD *)(v89 + 80);
          long long v261 = *(_OWORD *)(v89 + 96);
          long long v262 = *(_OWORD *)(v89 + 112);
          uint64_t v263 = *(void *)(v89 + 128);
          long long v256 = *(_OWORD *)(v89 + 16);
          long long v257 = *(_OWORD *)(v89 + 32);
          long long v258 = *(_OWORD *)(v89 + 48);
          long long v259 = *(_OWORD *)(v89 + 64);
          long long v255 = *(_OWORD *)v89;
          long long v118 = *(_OWORD *)(v89 - 56);
          *(_OWORD *)(v89 + 64) = *(_OWORD *)(v89 - 72);
          *(_OWORD *)(v89 + 80) = v118;
          long long v119 = *(_OWORD *)(v89 - 24);
          *(_OWORD *)(v89 + 96) = *(_OWORD *)(v89 - 40);
          *(_OWORD *)(v89 + 112) = v119;
          *(void *)(v89 + 128) = *(void *)(v89 - 8);
          long long v120 = *(_OWORD *)(v89 - 88);
          *(_OWORD *)(v89 + 32) = *(_OWORD *)(v89 - 104);
          *(_OWORD *)(v89 + 48) = v120;
          long long v121 = *(_OWORD *)(v89 - 120);
          *(_OWORD *)uint64_t v89 = *(_OWORD *)(v89 - 136);
          *(_OWORD *)(v89 + 16) = v121;
          *(_OWORD *)(v117 + 64) = v259;
          *(_OWORD *)(v117 + 80) = v260;
          *(_OWORD *)(v117 + 96) = v261;
          *(_OWORD *)(v117 + 112) = v262;
          *(void *)(v117 + 128) = v263;
          *(_OWORD *)(v117 + 16) = v256;
          *(_OWORD *)(v117 + 32) = v257;
          *(_OWORD *)(v117 + 48) = v258;
          *(_OWORD *)uint64_t v117 = v255;
        }
        while (v88 != v22);
        uint64_t v79 = v203 + 1;
      }
      while (v203 + 1 != v200);
      uint64_t v39 = v200;
    }
LABEL_91:
    if (v39 < v22) {
      goto LABEL_176;
    }
    uint64_t v203 = v39;
    if (swift_isUniquelyReferenced_nonNull_native()) {
      uint64_t v122 = v205;
    }
    else {
      uint64_t v122 = sub_1AFEE5E44(0, *((void *)v205 + 2) + 1, 1, v205);
    }
    unint64_t v124 = *((void *)v122 + 2);
    unint64_t v123 = *((void *)v122 + 3);
    unint64_t v125 = v124 + 1;
    if (v124 >= v123 >> 1) {
      uint64_t v122 = sub_1AFEE5E44((char *)(v123 > 1), v124 + 1, 1, v122);
    }
    *((void *)v122 + 2) = v125;
    uint64_t v205 = v122;
    v225 = v122 + 32;
    os_log_type_t v126 = &v122[16 * v124 + 32];
    uint64_t v18 = v203;
    *(void *)os_log_type_t v126 = v22;
    *((void *)v126 + 1) = v18;
    if (v124)
    {
      long long v21 = v205;
      uint64_t v127 = v225;
      while (1)
      {
        unint64_t v128 = v125 - 1;
        if (v125 >= 4)
        {
          unint64_t v133 = &v127[16 * v125];
          uint64_t v134 = *((void *)v133 - 8);
          uint64_t v135 = *((void *)v133 - 7);
          BOOL v139 = __OFSUB__(v135, v134);
          uint64_t v136 = v135 - v134;
          if (v139) {
            goto LABEL_164;
          }
          uint64_t v138 = *((void *)v133 - 6);
          uint64_t v137 = *((void *)v133 - 5);
          BOOL v139 = __OFSUB__(v137, v138);
          uint64_t v131 = v137 - v138;
          char v132 = v139;
          if (v139) {
            goto LABEL_165;
          }
          unint64_t v140 = v125 - 2;
          int64_t v141 = &v127[16 * v125 - 32];
          uint64_t v143 = *(void *)v141;
          uint64_t v142 = *((void *)v141 + 1);
          BOOL v139 = __OFSUB__(v142, v143);
          uint64_t v144 = v142 - v143;
          if (v139) {
            goto LABEL_167;
          }
          BOOL v139 = __OFADD__(v131, v144);
          uint64_t v145 = v131 + v144;
          if (v139) {
            goto LABEL_170;
          }
          if (v145 >= v136)
          {
            uint64_t v163 = &v127[16 * v128];
            uint64_t v165 = *(void *)v163;
            uint64_t v164 = *((void *)v163 + 1);
            BOOL v139 = __OFSUB__(v164, v165);
            uint64_t v166 = v164 - v165;
            if (v139) {
              goto LABEL_174;
            }
            BOOL v156 = v131 < v166;
            goto LABEL_129;
          }
        }
        else
        {
          if (v125 != 3)
          {
            uint64_t v157 = *((void *)v21 + 4);
            uint64_t v158 = *((void *)v21 + 5);
            BOOL v139 = __OFSUB__(v158, v157);
            uint64_t v150 = v158 - v157;
            char v151 = v139;
            goto LABEL_123;
          }
          uint64_t v130 = *((void *)v21 + 4);
          uint64_t v129 = *((void *)v21 + 5);
          BOOL v139 = __OFSUB__(v129, v130);
          uint64_t v131 = v129 - v130;
          char v132 = v139;
        }
        if (v132) {
          goto LABEL_166;
        }
        unint64_t v140 = v125 - 2;
        uint64_t v146 = &v127[16 * v125 - 32];
        uint64_t v148 = *(void *)v146;
        uint64_t v147 = *((void *)v146 + 1);
        BOOL v149 = __OFSUB__(v147, v148);
        uint64_t v150 = v147 - v148;
        char v151 = v149;
        if (v149) {
          goto LABEL_169;
        }
        unint64_t v152 = &v127[16 * v128];
        uint64_t v154 = *(void *)v152;
        uint64_t v153 = *((void *)v152 + 1);
        BOOL v139 = __OFSUB__(v153, v154);
        uint64_t v155 = v153 - v154;
        if (v139) {
          goto LABEL_172;
        }
        if (__OFADD__(v150, v155)) {
          goto LABEL_173;
        }
        if (v150 + v155 >= v131)
        {
          BOOL v156 = v131 < v155;
LABEL_129:
          if (v156) {
            unint64_t v128 = v140;
          }
          goto LABEL_131;
        }
LABEL_123:
        if (v151) {
          goto LABEL_168;
        }
        os_log_type_t v159 = &v127[16 * v128];
        uint64_t v161 = *(void *)v159;
        uint64_t v160 = *((void *)v159 + 1);
        BOOL v139 = __OFSUB__(v160, v161);
        uint64_t v162 = v160 - v161;
        if (v139) {
          goto LABEL_171;
        }
        if (v162 < v150)
        {
          long long v21 = v205;
          uint64_t v18 = v203;
          goto LABEL_140;
        }
LABEL_131:
        unint64_t v167 = v128 - 1;
        if (v128 - 1 >= v125)
        {
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
LABEL_164:
          __break(1u);
LABEL_165:
          __break(1u);
LABEL_166:
          __break(1u);
LABEL_167:
          __break(1u);
LABEL_168:
          __break(1u);
LABEL_169:
          __break(1u);
LABEL_170:
          __break(1u);
LABEL_171:
          __break(1u);
LABEL_172:
          __break(1u);
LABEL_173:
          __break(1u);
LABEL_174:
          __break(1u);
LABEL_175:
          __break(1u);
LABEL_176:
          __break(1u);
LABEL_177:
          __break(1u);
LABEL_178:
          __break(1u);
LABEL_179:
          __break(1u);
LABEL_180:
          __break(1u);
LABEL_181:
          __break(1u);
LABEL_182:
          __break(1u);
LABEL_183:
          __break(1u);
          goto LABEL_184;
        }
        if (!v19) {
          goto LABEL_186;
        }
        os_log_type_t v168 = v127;
        uint64_t v169 = &v127[16 * v167];
        uint64_t v170 = *(void *)v169;
        unint64_t v171 = v128;
        uint64_t v172 = &v168[16 * v128];
        uint64_t v173 = *((void *)v172 + 1);
        os_log_type_t v174 = (char *)(v19 + 136 * *(void *)v169);
        v226 = (char *)(v19 + 136 * *(void *)v172);
        uint64_t v175 = v214;
        sub_1AFFC8E38();
        v176 = v174;
        uint64_t v177 = v204;
        sub_1AFE21A2C(v176, v226, v19 + 136 * v173, v202, v175);
        if (v177) {
          goto LABEL_157;
        }
        uint64_t v178 = v205;
        if (v173 < v170) {
          goto LABEL_161;
        }
        if (v171 > *((void *)v205 + 2)) {
          goto LABEL_162;
        }
        unint64_t v179 = v171;
        *(void *)uint64_t v169 = v170;
        uint64_t v127 = v225;
        *(void *)&v225[16 * v167 + 8] = v173;
        unint64_t v180 = *((void *)v178 + 2);
        if (v171 >= v180) {
          goto LABEL_163;
        }
        uint64_t v204 = 0;
        unint64_t v125 = v180 - 1;
        memmove(v172, v172 + 16, 16 * (v180 - 1 - v179));
        long long v21 = v205;
        *((void *)v205 + 2) = v180 - 1;
        BOOL v156 = v180 > 2;
        uint64_t v6 = v282;
        unint64_t v8 = v224;
        uint64_t v19 = v211;
        uint64_t v18 = v203;
        if (!v156) {
          goto LABEL_140;
        }
      }
    }
    unint64_t v125 = 1;
    long long v21 = v205;
LABEL_140:
    uint64_t v20 = v199;
    if (v18 >= v199) {
      goto LABEL_146;
    }
  }
LABEL_184:
  __break(1u);
LABEL_185:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_186:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_187:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_188:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_189:
  swift_bridgeObjectRelease_n();
  uint64_t result = sub_1AFFCB998();
  __break(1u);
  return result;
}

uint64_t sub_1AFE28450(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  swift_bridgeObjectRetain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v4 = sub_1AFEE62E4(v4);
  }
  uint64_t v5 = *(void *)(v4 + 16);
  v7[0] = v4 + 32;
  v7[1] = v5;
  sub_1AFFC8E38();
  sub_1AFE26F54(v7, a2);
  swift_bridgeObjectRelease();
  *a1 = v4;
  return swift_bridgeObjectRelease_n();
}

unint64_t sub_1AFE284F8()
{
  unint64_t result = qword_1E9AFB218;
  if (!qword_1E9AFB218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB218);
  }
  return result;
}

unint64_t sub_1AFE28550()
{
  unint64_t result = qword_1E9AFB220[0];
  if (!qword_1E9AFB220[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9AFB220);
  }
  return result;
}

unint64_t sub_1AFE285AC()
{
  unint64_t result = qword_1E9AFB238;
  if (!qword_1E9AFB238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB238);
  }
  return result;
}

unint64_t sub_1AFE28604()
{
  unint64_t result = qword_1E9AFB248;
  if (!qword_1E9AFB248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB248);
  }
  return result;
}

unint64_t sub_1AFE28660()
{
  unint64_t result = qword_1E9AFB250;
  if (!qword_1E9AFB250)
  {
    sub_1AFE28E88(255, qword_1E9AFB258, (uint64_t (*)(void))sub_1AFD38AA0, (uint64_t)&type metadata for SymbolWidgetEntity, MEMORY[0x1E4F185D8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB250);
  }
  return result;
}

ValueMetadata *type metadata accessor for SymbolWidgetQuery()
{
  return &type metadata for SymbolWidgetQuery;
}

uint64_t destroy for SymbolWidgetQuery.FilteredStockQuery()
{
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for SymbolWidgetQuery.FilteredStockQuery(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v3;
  sub_1AFFC8E38();
  sub_1AFFC8E48();
  return a1;
}

void *assignWithCopy for SymbolWidgetQuery.FilteredStockQuery(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  sub_1AFFC8E48();
  swift_release();
  return a1;
}

uint64_t assignWithTake for SymbolWidgetQuery.FilteredStockQuery(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v4;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for SymbolWidgetQuery.FilteredStockQuery()
{
  return &type metadata for SymbolWidgetQuery.FilteredStockQuery;
}

void sub_1AFE28850()
{
  if (!qword_1EB816910)
  {
    unint64_t v0 = sub_1AFFCB7C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB816910);
    }
  }
}

void sub_1AFE288BC()
{
  if (!qword_1E9AFB288)
  {
    sub_1AFE28E88(255, &qword_1E9AFB280, (uint64_t (*)(void))sub_1AFE26838, (uint64_t)&type metadata for SymbolWidgetEntity, MEMORY[0x1E4F187D0]);
    unint64_t v0 = sub_1AFFCBC98();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9AFB288);
    }
  }
}

void sub_1AFE2894C()
{
  if (!qword_1E9AFB290)
  {
    sub_1AFE28E88(255, (unint64_t *)&qword_1EB816AF8, (uint64_t (*)(void))sub_1AFD74388, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4F183F8]);
    sub_1AFE26838();
    sub_1AFD74388();
    unint64_t v0 = sub_1AFFC8D58();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9AFB290);
    }
  }
}

void sub_1AFE28A20(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1AFE28A6C()
{
  if (!qword_1E9AFB298)
  {
    sub_1AFE28E88(255, (unint64_t *)&qword_1EB816AF8, (uint64_t (*)(void))sub_1AFD74388, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4F183F8]);
    sub_1AFD74388();
    unint64_t v0 = sub_1AFFC8F08();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9AFB298);
    }
  }
}

void sub_1AFE28B34()
{
  if (!qword_1E9AFB2A0)
  {
    sub_1AFE28E88(255, (unint64_t *)&qword_1EB816AF8, (uint64_t (*)(void))sub_1AFD74388, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4F183F8]);
    sub_1AFD74388();
    unint64_t v0 = sub_1AFFC8D28();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9AFB2A0);
    }
  }
}

void sub_1AFE28BF4()
{
  if (!qword_1E9AFB2A8)
  {
    sub_1AFE28E88(255, (unint64_t *)&qword_1EB816AF8, (uint64_t (*)(void))sub_1AFD74388, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4F183F8]);
    sub_1AFD74388();
    unint64_t v0 = sub_1AFFC8CC8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9AFB2A8);
    }
  }
}

void sub_1AFE28CBC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1AFE28D20()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1AFE28D58(uint64_t a1)
{
  if (*(void *)(a1 + 32) == *(void *)(v1 + 16) && *(void *)(a1 + 40) == *(void *)(v1 + 24)) {
    return 1;
  }
  else {
    return sub_1AFFCBCE8();
  }
}

uint64_t sub_1AFE28D84()
{
  return sub_1AFE1EBF4();
}

uint64_t sub_1AFE28D8C(uint64_t a1)
{
  if (*(void *)(a1 + 16) == *(void *)(v1 + 16) && *(void *)(a1 + 24) == *(void *)(v1 + 24)) {
    return 1;
  }
  else {
    return sub_1AFFCBCE8();
  }
}

uint64_t sub_1AFE28DB8()
{
  return sub_1AFE1E72C();
}

void sub_1AFE28DC0()
{
  if (!qword_1E9AFB2B8)
  {
    sub_1AFFC99F8();
    sub_1AFDC2380((unint64_t *)&qword_1EB818BB0);
    unint64_t v0 = sub_1AFFCB7C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9AFB2B8);
    }
  }
}

uint64_t sub_1AFE28E40(uint64_t a1)
{
  return a1;
}

void sub_1AFE28E88(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t dispatch thunk of ArticleCohort.tag.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ArticleCohort.clicks.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ArticleCohort.impressions.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ArticleCohort.updatedDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_1AFE28F4C()
{
  sub_1AFE290EC(v0 + OBJC_IVAR____TtC10StocksCore18UserRegionProvider_currentRegion);

  return swift_deallocClassInstance();
}

uint64_t sub_1AFE28FB0()
{
  return type metadata accessor for UserRegionProvider();
}

uint64_t type metadata accessor for UserRegionProvider()
{
  uint64_t result = qword_1EB817518;
  if (!qword_1EB817518) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1AFE29004()
{
  sub_1AFE29094();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1AFE29094()
{
  if (!qword_1EB818BC0)
  {
    sub_1AFFC99F8();
    unint64_t v0 = sub_1AFFCB658();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB818BC0);
    }
  }
}

uint64_t sub_1AFE290EC(uint64_t a1)
{
  sub_1AFE29094();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1AFE29148(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1AFFC9938();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFFC8E38();
  sub_1AFFC8978();
  uint64_t v10 = sub_1AFFC9918();
  uint64_t v12 = v11;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  os_unfair_lock_lock((os_unfair_lock_t)(v3 + 72));
  uint64_t v13 = *(void **)(v3 + 80);
  sub_1AFFC8E38();
  uint64_t v14 = MEMORY[0x1E4FBC860];
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v3 + 80) = v13;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v13 = sub_1AFD35170(0, v13[2] + 1, 1, v13);
    *(void *)(v3 + 80) = v13;
  }
  unint64_t v17 = v13[2];
  unint64_t v16 = v13[3];
  if (v17 >= v16 >> 1)
  {
    uint64_t v13 = sub_1AFD35170((void *)(v16 > 1), v17 + 1, 1, v13);
    *(void *)(v3 + 80) = v13;
  }
  void v13[2] = v17 + 1;
  uint64_t v18 = &v13[6 * v17];
  v18[4] = a1;
  v18[5] = a2;
  v18[6] = v14;
  v18[7] = v10;
  v18[8] = v12;
  *((_WORD *)v18 + 36) = 160;
  os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 72));
  v20[0] = a1;
  v20[1] = a2;
  v20[2] = v14;
  v20[3] = v10;
  v20[4] = v12;
  __int16 v21 = 160;
  sub_1AFE29E38(0, &qword_1EB818780, (uint64_t)&type metadata for Watchlist, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1AFFCA6F8();
}

uint64_t sub_1AFE2935C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  char v7 = *((unsigned char *)a1 + 40);
  char v8 = *((unsigned char *)a1 + 41);
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 72));
  uint64_t v9 = *(void *)(v1 + 80);
  uint64_t v13 = v5;
  uint64_t v14 = v2;
  uint64_t v17 = v2;
  uint64_t v18 = v3;
  uint64_t v19 = v4;
  uint64_t v20 = v5;
  uint64_t v21 = v6;
  char v22 = v7;
  char v23 = v8;
  unint64_t v16 = &v17;
  sub_1AFFC8E38();
  unint64_t v10 = sub_1AFE29C9C((uint64_t (*)(void *))sub_1AFE29E18, (uint64_t)v15, v9);
  LOBYTE(v5) = v11;
  swift_bridgeObjectRelease();
  if ((v5 & 1) == 0)
  {
    sub_1AFF9F02C(v10, (uint64_t)&v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 72));
  uint64_t v17 = v14;
  uint64_t v18 = v3;
  uint64_t v19 = v4;
  uint64_t v20 = v13;
  uint64_t v21 = v6;
  char v22 = v7;
  char v23 = v8;
  sub_1AFE29E38(0, &qword_1EB818780, (uint64_t)&type metadata for Watchlist, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  return sub_1AFFCA6F8();
}

uint64_t sub_1AFE29518()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1AFE29E84(v0 + 72);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StubWatchlistManager()
{
  return self;
}

void sub_1AFE295A8()
{
  if (MEMORY[0x1E4FBC8F0]) {
    sub_1AFE29C20(0, (unint64_t *)&unk_1E9AFB2C0, &qword_1EB818008, (uint64_t)&type metadata for Watchlist, MEMORY[0x1E4FBCDD8]);
  }
}

uint64_t sub_1AFE29610()
{
  return sub_1AFFC8E48();
}

uint64_t sub_1AFE2961C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *v1;
  uint64_t v4 = *(void *)(*v1 + 16);
  uint64_t v3 = *(void *)(*v1 + 24);
  uint64_t v6 = *(void *)(*v1 + 32);
  uint64_t v5 = *(void *)(*v1 + 40);
  uint64_t v7 = *(void *)(*v1 + 48);
  LOWORD(v2) = *(_WORD *)(v2 + 56);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v7;
  *(_WORD *)(a1 + 40) = v2;
  sub_1AFFC8E38();
  sub_1AFFC8E38();

  return sub_1AFFC8E38();
}

uint64_t sub_1AFE2967C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = (os_unfair_lock_s *)(v1 + 72);
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 72));
  uint64_t v3 = *(void *)(v1 + 80);
  sub_1AFFC8E38();
  os_unfair_lock_unlock(v2);
  return v3;
}

uint64_t sub_1AFE296C0()
{
  return sub_1AFFCA6F8();
}

uint64_t sub_1AFE2973C()
{
  return sub_1AFFCA6F8();
}

uint64_t sub_1AFE2979C(uint64_t a1, uint64_t a2)
{
  return sub_1AFE29148(a1, a2);
}

uint64_t sub_1AFE297C0(uint64_t *a1)
{
  return sub_1AFE2935C(a1);
}

uint64_t sub_1AFE297E4()
{
  return sub_1AFFCA6F8();
}

uint64_t sub_1AFE29894()
{
  return sub_1AFFCA6F8();
}

uint64_t sub_1AFE29910(uint64_t a1, uint64_t a2)
{
  return sub_1AFE29948(a1, a2, (unint64_t *)&unk_1EB817DA0, &qword_1EB817FE8, (uint64_t)&type metadata for Stock);
}

uint64_t sub_1AFE2992C(uint64_t a1, uint64_t a2)
{
  return sub_1AFE29948(a1, a2, &qword_1EB817DB8, &qword_1EB818008, (uint64_t)&type metadata for Watchlist);
}

uint64_t sub_1AFE29948(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, uint64_t a5)
{
  return sub_1AFFCA6F8();
}

uint64_t sub_1AFE299B8()
{
  return sub_1AFFCA6F8();
}

uint64_t sub_1AFE29A64()
{
  return sub_1AFFCA6F8();
}

uint64_t sub_1AFE29ADC(uint64_t a1)
{
  long long v1 = *(_OWORD *)(a1 + 112);
  v6[6] = *(_OWORD *)(a1 + 96);
  v6[7] = v1;
  long long v2 = *(_OWORD *)(a1 + 48);
  v6[2] = *(_OWORD *)(a1 + 32);
  v6[3] = v2;
  long long v3 = *(_OWORD *)(a1 + 80);
  void v6[4] = *(_OWORD *)(a1 + 64);
  v6[5] = v3;
  long long v4 = *(_OWORD *)(a1 + 16);
  v6[0] = *(_OWORD *)a1;
  v6[1] = v4;
  uint64_t v7 = *(void *)(a1 + 128);
  sub_1AFE29E38(0, &qword_1E9AFA328, (uint64_t)&type metadata for Stock, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  sub_1AFD76370((uint64_t)v6);
  return sub_1AFFCA6F8();
}

uint64_t sub_1AFE29BA0()
{
  return sub_1AFFCA6F8();
}

void sub_1AFE29C20(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_1AFE29E38(255, a3, a4, MEMORY[0x1E4FBB320]);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1AFE29C9C(uint64_t (*a1)(void *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  if (v4)
  {
    uint64_t v6 = (uint64_t *)(a3 + 48 * v4);
    do
    {
      uint64_t v7 = *(v6 - 1);
      uint64_t v9 = *v6;
      uint64_t v8 = v6[1];
      uint64_t v10 = v6[2];
      __int16 v11 = *((_WORD *)v6 + 12);
      v14[0] = *(v6 - 2);
      v14[1] = v7;
      void v14[2] = v9;
      v14[3] = v8;
      v14[4] = v10;
      __int16 v15 = v11;
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      char v12 = a1(v14);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v3) {
        break;
      }
      --v4;
      v6 -= 6;
    }
    while (!(v12 & 1 | (v4 == 0)));
  }
  return v4;
}

BOOL sub_1AFE29D9C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  __int16 v4 = *((_WORD *)a1 + 20);
  uint64_t v5 = *a2;
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  __int16 v8 = *((_WORD *)a2 + 20);
  uint64_t v15 = *a1;
  long long v16 = *(_OWORD *)(a1 + 1);
  uint64_t v17 = v2;
  uint64_t v18 = v3;
  __int16 v19 = v4;
  uint64_t v10 = v5;
  long long v11 = *(_OWORD *)(a2 + 1);
  uint64_t v12 = v6;
  uint64_t v13 = v7;
  __int16 v14 = v8;
  return sub_1AFEAC4AC((uint64_t)&v15, (uint64_t)&v10);
}

BOOL sub_1AFE29E18(uint64_t *a1)
{
  return sub_1AFE29D9C(a1, *(uint64_t **)(v1 + 16));
}

void sub_1AFE29E38(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1AFE29E84(uint64_t a1)
{
  sub_1AFE29C20(0, (unint64_t *)&unk_1E9AFB2C0, &qword_1EB818008, (uint64_t)&type metadata for Watchlist, MEMORY[0x1E4FBCDD8]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1AFE29F0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a6 + 8)
                                                                                     + **(int **)(a6 + 8));
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *uint64_t v13 = v6;
  v13[1] = sub_1AFD56424;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1AFE2A034@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1AFE2A19C(a1, type metadata accessor for Chart, type metadata accessor for Chart, type metadata accessor for Chart, a2);
}

uint64_t sub_1AFE2A074@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1AFE2A19C(a1, (uint64_t (*)(void))type metadata accessor for Quote, (uint64_t (*)(void))type metadata accessor for Quote, (uint64_t (*)(void))type metadata accessor for Quote, a2);
}

uint64_t sub_1AFE2A0B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1AFE2A19C(a1, (uint64_t (*)(void))type metadata accessor for SDSAuthToken, (uint64_t (*)(void))type metadata accessor for SDSAuthToken, (uint64_t (*)(void))type metadata accessor for SDSAuthToken, a2);
}

uint64_t sub_1AFE2A0F4(uint64_t a1)
{
  uint64_t result = sub_1AFE2BE10(a1);
  if (v4) {
    goto LABEL_7;
  }
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  if (result == 1 << *(unsigned char *)(a1 + 32)) {
    return 0;
  }
  sub_1AFE2C684(result, v3, 0, a1);
  return sub_1AFFC8E38();
}

uint64_t sub_1AFE2A15C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1AFE2A19C(a1, (uint64_t (*)(void))type metadata accessor for QuoteDetail, (uint64_t (*)(void))type metadata accessor for QuoteDetail, (uint64_t (*)(void))type metadata accessor for QuoteDetail, a2);
}

uint64_t sub_1AFE2A19C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t (*a4)(void)@<X3>, uint64_t a5@<X8>)
{
  uint64_t result = sub_1AFE2BE10(a1);
  if (v12) {
    goto LABEL_10;
  }
  if (*(_DWORD *)(a1 + 36) != v11)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    return result;
  }
  if (result == 1 << *(unsigned char *)(a1 + 32))
  {
    uint64_t v13 = a2(0);
    __int16 v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
    uint64_t v15 = v13;
    uint64_t v16 = a5;
    uint64_t v17 = 1;
  }
  else
  {
    sub_1AFE2BE98(result, v11, a1, a3, a4, a5);
    uint64_t v18 = a2(0);
    __int16 v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v15 = v18;
    uint64_t v16 = a5;
    uint64_t v17 = 0;
  }

  return v14(v16, v17, 1, v15);
}

uint64_t sub_1AFE2A2AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v25 = a2;
  uint64_t v32 = a1;
  uint64_t v31 = sub_1AFFC9F58();
  uint64_t v27 = *(void *)(v31 - 8);
  uint64_t v28 = v27;
  MEMORY[0x1F4188790](v31);
  long long v30 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1AFFC9E18();
  uint64_t v24 = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = sub_1AFFC98F8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](v8);
  int v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFE2BFB4(0, &qword_1EB811700, MEMORY[0x1E4FAB070]);
  uint64_t v29 = v12;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v25, v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v5);
  unint64_t v13 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v14 = (v10 + *(unsigned __int8 *)(v6 + 80) + v13) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v26;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v15 + v13, v11, v8);
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v15 + v14, (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v24);
  uint64_t v16 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAA28];
  sub_1AFE2BB84(0, &qword_1EB8117E8, MEMORY[0x1E4FAAA28], MEMORY[0x1E4FBBE00]);
  uint64_t v17 = v28;
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1AFFD05F0;
  swift_retain_n();
  sub_1AFFC9F38();
  uint64_t v33 = v18;
  sub_1AFE2BBE8();
  sub_1AFE2BB84(0, &qword_1EB81AC38, v16, MEMORY[0x1E4FBB320]);
  sub_1AFE2BC40();
  __int16 v19 = v30;
  uint64_t v20 = v31;
  sub_1AFFCB738();
  sub_1AFFCA618();
  swift_release();
  swift_release_n();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v20);
  uint64_t v21 = (void *)sub_1AFFCA5E8();
  type metadata accessor for CurrencyResponse();
  uint64_t v22 = sub_1AFFCA678();
  swift_release();

  return v22;
}

uint64_t sub_1AFE2A740(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v19 = a2;
  uint64_t v6 = sub_1AFFC9E18();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = sub_1AFFC98F8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFE2BF40();
  uint64_t v18 = v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a3, v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v6);
  unint64_t v14 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v15 = (v11 + *(unsigned __int8 *)(v7 + 80) + v14) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v19;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v16 + v14, v12, v9);
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v16 + v15, (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  sub_1AFFC8E48();
  return sub_1AFFCA658();
}

uint64_t sub_1AFE2A96C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[7] = a3;
  v4[8] = a4;
  v4[5] = a1;
  v4[6] = a2;
  sub_1AFE2BB84(0, &qword_1EB8115B8, (uint64_t (*)(uint64_t))type metadata accessor for CurrencyResponse, MEMORY[0x1E4FBB718]);
  v4[9] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for CurrencyResponse();
  v4[10] = v5;
  v4[11] = *(void *)(v5 - 8);
  v4[12] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1AFE2AA8C, 0, 0);
}

uint64_t sub_1AFE2AA8C()
{
  uint64_t v1 = (void *)v0[6];
  uint64_t v2 = v1[5];
  uint64_t v3 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v2);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 8) + **(int **)(v3 + 8));
  uint64_t v4 = (void *)swift_task_alloc();
  v0[13] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1AFE2AB9C;
  uint64_t v5 = v0[12];
  uint64_t v6 = v0[7];
  uint64_t v7 = v0[8];
  return v9(v5, v6, v7, v2, v3);
}

uint64_t sub_1AFE2AB9C()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1AFE2AEC8;
  }
  else {
    uint64_t v2 = sub_1AFE2ACB0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1AFE2ACB0()
{
  uint64_t v2 = v0[11];
  uint64_t v1 = v0[12];
  uint64_t v3 = v0[9];
  uint64_t v4 = v0[10];
  uint64_t v5 = (unint64_t *)v0[5];
  uint64_t v6 = v0[6];
  sub_1AFE2C6D4(v1, v3, (uint64_t (*)(void))type metadata accessor for CurrencyResponse);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v2 + 56))(v3, 0, 1, v4);
  uint64_t v7 = v6 + OBJC_IVAR____TtC10StocksCore15CurrencyManager_inMemory;
  swift_beginAccess();
  sub_1AFE2C5F0(v3, v7);
  swift_endAccess();
  sub_1AFE2BB84(0, &qword_1EB8117E0, (uint64_t (*)(uint64_t))sub_1AFE2C2E4, MEMORY[0x1E4FBBE00]);
  sub_1AFE2C2E4();
  unint64_t v9 = (*(unsigned __int8 *)(*(void *)(v8 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v8 - 8) + 80);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1AFFD05F0;
  sub_1AFE2C6D4(v1, v10 + v9, (uint64_t (*)(void))type metadata accessor for CurrencyResponse);
  unint64_t v11 = sub_1AFE0529C(v10);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1AFE2C288(v1);
  *uint64_t v5 = v11;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_1AFE2AEC8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1AFE2AF38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1AFFC9DD8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](v5);
  sub_1AFE2BF40();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v5);
  unint64_t v8 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v9 + v8, (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  sub_1AFFC8E48();
  return sub_1AFFCA6A8();
}

uint64_t sub_1AFE2B088@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  v23[1] = a2;
  uint64_t v24 = a3;
  uint64_t v4 = sub_1AFFC98F8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFE2BB84(0, &qword_1EB8115B8, (uint64_t (*)(uint64_t))type metadata accessor for CurrencyResponse, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v23 - v9;
  uint64_t v11 = type metadata accessor for CurrencyResponse();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a1 + OBJC_IVAR____TtC10StocksCore15CurrencyManager_inMemory;
  swift_beginAccess();
  sub_1AFE2C1F4(v15, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1AFE2BCC8((uint64_t)v10);
LABEL_6:
    __swift_project_boxed_opaque_existential_1((void *)(a1 + 56), *(void *)(a1 + 80));
    (*(void (**)(void))(a1 + 104))();
    unint64_t v21 = sub_1AFF97A00();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    goto LABEL_7;
  }
  uint64_t v16 = sub_1AFE2BDA8((uint64_t)v10, (uint64_t)v14);
  (*(void (**)(uint64_t))(a1 + 104))(v16);
  char v17 = sub_1AFF97098((uint64_t)v14);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if ((v17 & 1) == 0)
  {
    sub_1AFE2C288((uint64_t)v14);
    goto LABEL_6;
  }
  sub_1AFE2BB84(0, &qword_1EB8117E0, (uint64_t (*)(uint64_t))sub_1AFE2C2E4, MEMORY[0x1E4FBBE00]);
  sub_1AFE2C2E4();
  unint64_t v19 = (*(unsigned __int8 *)(*(void *)(v18 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v18 - 8) + 80);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1AFFD05F0;
  sub_1AFE2C6D4((uint64_t)v14, v20 + v19, (uint64_t (*)(void))type metadata accessor for CurrencyResponse);
  unint64_t v21 = sub_1AFE0529C(v20);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t result = sub_1AFE2C288((uint64_t)v14);
LABEL_7:
  *uint64_t v24 = v21;
  return result;
}

uint64_t sub_1AFE2B468(uint64_t a1, uint64_t a2)
{
  sub_1AFE2BF40();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a2;
  *(void *)(v4 + 24) = a1;
  sub_1AFFC8E48();
  sub_1AFFC8E38();
  return sub_1AFFCA6A8();
}

uint64_t sub_1AFE2B4EC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1AFE2BB84(0, &qword_1EB8115B8, (uint64_t (*)(uint64_t))type metadata accessor for CurrencyResponse, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v9 - v5;
  sub_1AFE2A19C(*a1, (uint64_t (*)(void))type metadata accessor for CurrencyResponse, (uint64_t (*)(void))type metadata accessor for CurrencyResponse, (uint64_t (*)(void))type metadata accessor for CurrencyResponse, (uint64_t)&v9 - v5);
  uint64_t v7 = type metadata accessor for CurrencyResponse();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7) != 1) {
    return sub_1AFE2BDA8((uint64_t)v6, a2);
  }
  sub_1AFE2BCC8((uint64_t)v6);
  sub_1AFE2BD54();
  swift_allocError();
  return swift_willThrow();
}

uint64_t sub_1AFE2B660()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_release();
  swift_release();
  sub_1AFE2BCC8(v0 + OBJC_IVAR____TtC10StocksCore15CurrencyManager_inMemory);

  return swift_deallocClassInstance();
}

uint64_t sub_1AFE2B6E4()
{
  return type metadata accessor for CurrencyManager();
}

uint64_t type metadata accessor for CurrencyManager()
{
  uint64_t result = qword_1EB811570;
  if (!qword_1EB811570) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1AFE2B738()
{
  sub_1AFE2BB84(319, &qword_1EB8115B8, (uint64_t (*)(uint64_t))type metadata accessor for CurrencyResponse, MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_1AFE2B820(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void v5[4] = a3;
  v5[5] = a4;
  v5[2] = a1;
  v5[3] = a2;
  v5[6] = *v4;
  return MEMORY[0x1F4188298](sub_1AFE2B84C, 0, 0);
}

uint64_t sub_1AFE2B84C()
{
  v0[7] = sub_1AFE2A2AC(v0[3], v0[4], v0[5]);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[8] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1AFE2B8F8;
  uint64_t v2 = v0[2];
  return MEMORY[0x1F415EBC8](v2);
}

uint64_t sub_1AFE2B8F8()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1AFE2BA34, 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1AFE2BA34()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1AFE2BA9C(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_1AFFC98F8() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(sub_1AFFC9E18() - 8);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v8 = v1 + ((v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return sub_1AFE2A740(a1, v7, v1 + v4, v8);
}

uint64_t sub_1AFE2BB74(uint64_t a1, uint64_t a2)
{
  return sub_1AFE2AF38(a1, a2, v2);
}

uint64_t sub_1AFE2BB7C(uint64_t a1)
{
  return sub_1AFE2B468(a1, v1);
}

void sub_1AFE2BB84(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1AFE2BBE8()
{
  unint64_t result = qword_1EB81ABC8;
  if (!qword_1EB81ABC8)
  {
    sub_1AFFC9F58();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB81ABC8);
  }
  return result;
}

unint64_t sub_1AFE2BC40()
{
  unint64_t result = qword_1EB81AC40;
  if (!qword_1EB81AC40)
  {
    sub_1AFE2BB84(255, &qword_1EB81AC38, MEMORY[0x1E4FAAA28], MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB81AC40);
  }
  return result;
}

uint64_t sub_1AFE2BCC8(uint64_t a1)
{
  sub_1AFE2BB84(0, &qword_1EB8115B8, (uint64_t (*)(uint64_t))type metadata accessor for CurrencyResponse, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1AFE2BD54()
{
  unint64_t result = qword_1EB811560;
  if (!qword_1EB811560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB811560);
  }
  return result;
}

uint64_t sub_1AFE2BDA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CurrencyResponse();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AFE2BE10(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_1AFE2BE98@<X0>(uint64_t result@<X0>, int a2@<W1>, uint64_t a3@<X3>, uint64_t (*a4)(void)@<X4>, uint64_t (*a5)(void)@<X5>, uint64_t a6@<X8>)
{
  if (result < 0 || (uint64_t v6 = result, 1 << *(unsigned char *)(a3 + 32) <= result))
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a3 + 8 * ((unint64_t)result >> 6) + 64) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a3 + 36) == a2)
  {
    uint64_t v9 = *(void *)(a3 + 56);
    uint64_t v10 = a4(0);
    return sub_1AFE2C6D4(v9 + *(void *)(*(void *)(v10 - 8) + 72) * v6, a6, a5);
  }
LABEL_8:
  __break(1u);
  return result;
}

void sub_1AFE2BF40()
{
  if (!qword_1EB811710)
  {
    sub_1AFE2BFB4(255, (unint64_t *)&qword_1EB811748, MEMORY[0x1E4FBAEA0]);
    unint64_t v0 = sub_1AFFCA788();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB811710);
    }
  }
}

void sub_1AFE2BFB4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, uint64_t, unint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = type metadata accessor for CurrencyResponse();
    unint64_t v7 = sub_1AFE054C4();
    unint64_t v8 = a3(a1, &type metadata for CurrencyManagerCacheKey, v6, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1AFE2C028()
{
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1AFE2C068@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  __swift_project_boxed_opaque_existential_1((void *)(v3 + 56), *(void *)(v3 + 80));
  uint64_t result = sub_1AFF97728(v4);
  *a1 = result;
  return result;
}

uint64_t sub_1AFE2C0B8()
{
  uint64_t v1 = sub_1AFFC9DD8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1AFE2C184@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_1AFFC9DD8() - 8);
  return sub_1AFE2B088(*(void *)(v1 + 16), v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), a1);
}

uint64_t sub_1AFE2C1F4(uint64_t a1, uint64_t a2)
{
  sub_1AFE2BB84(0, &qword_1EB8115B8, (uint64_t (*)(uint64_t))type metadata accessor for CurrencyResponse, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AFE2C288(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CurrencyResponse();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1AFE2C2E4()
{
  if (!qword_1EB811660)
  {
    type metadata accessor for CurrencyResponse();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB811660);
    }
  }
}

uint64_t objectdestroyTm_0()
{
  uint64_t v1 = sub_1AFFC98F8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = sub_1AFFC9E18();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return MEMORY[0x1F4186498](v0, v10, v11);
}

uint64_t sub_1AFE2C4A8(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1AFFC98F8() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(sub_1AFFC9E18() - 8) + 80);
  unint64_t v8 = v5 + v6 + v7;
  uint64_t v9 = *(void *)(v1 + 16);
  uint64_t v10 = v1 + v5;
  uint64_t v11 = v1 + (v8 & ~v7);
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  *uint64_t v12 = v2;
  v12[1] = sub_1AFD3503C;
  return sub_1AFE2A96C(a1, v9, v10, v11);
}

uint64_t sub_1AFE2C5F0(uint64_t a1, uint64_t a2)
{
  sub_1AFE2BB84(0, &qword_1EB8115B8, (uint64_t (*)(uint64_t))type metadata accessor for CurrencyResponse, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AFE2C684(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(unsigned char *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)result >> 6) + 64) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    return *(void *)(*(void *)(a4 + 56) + 8 * result);
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_1AFE2C6D4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for CurrencyManager.Errors(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1AFE2C7D8);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CurrencyManager.Errors()
{
  return &type metadata for CurrencyManager.Errors;
}

unint64_t sub_1AFE2C814()
{
  unint64_t result = qword_1E9AFB2E8;
  if (!qword_1E9AFB2E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB2E8);
  }
  return result;
}

uint64_t sub_1AFE2C868()
{
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1AFE2C874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v25 = a3;
  uint64_t v22 = a4;
  uint64_t v23 = a1;
  uint64_t v24 = a2;
  uint64_t v19 = sub_1AFFC9E18();
  uint64_t v4 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1AFFC98F8();
  uint64_t v20 = *(void *)(v7 - 8);
  uint64_t v21 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1AFFC9F58();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x1E4FBC860];
  sub_1AFE304B0((unint64_t *)&qword_1EB81ABC8, MEMORY[0x1E4FAAA28]);
  uint64_t v14 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAA28];
  sub_1AFE2DC08(0, &qword_1EB81AC38, MEMORY[0x1E4FAAA28], MEMORY[0x1E4FBB320]);
  sub_1AFE3037C((unint64_t *)&qword_1EB81AC40, &qword_1EB81AC38, v14);
  sub_1AFFCB738();
  sub_1AFFC98E8();
  uint64_t v15 = v19;
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FAA980], v19);
  uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t, char *, char *, char *, uint64_t))(v22 + 8))(v23, v24, v13, v9, v6, v25);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v15);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v21);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return v16;
}

uint64_t sub_1AFE2CB94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v8[9] = a7;
  _OWORD v8[10] = v7;
  v8[7] = a5;
  v8[8] = a6;
  v8[5] = a3;
  void v8[6] = a4;
  v8[3] = a1;
  v8[4] = a2;
  return MEMORY[0x1F4188298](sub_1AFE2CBC0, 0, 0);
}

uint64_t sub_1AFE2CBC0()
{
  v0[11] = (*(uint64_t (**)(void, void, void, void, void, void))(v0[9] + 8))(v0[3], v0[4], v0[5], v0[6], v0[7], v0[8]);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[12] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1AFE2CC88;
  return MEMORY[0x1F415EBC8](v0 + 2);
}

uint64_t sub_1AFE2CC88()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1AFE2CDA4;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1AFD4F160;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1AFE2CDA4()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1AFE2CE08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 8))();
}

uint64_t sub_1AFE2CE1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_1AFE2CE30(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_1AFE2CE44()
{
  return 0x656D5F6B636F7473;
}

uint64_t sub_1AFE2CE68()
{
  return 0x33312E302E31;
}

double sub_1AFE2CE7C@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  v30[0] = 59;
  v30[1] = 0xE100000000000000;
  _OWORD v29[2] = v30;
  swift_bridgeObjectRetain_n();
  uint64_t v6 = (void *)sub_1AFE30664(0x7FFFFFFFFFFFFFFFLL, 1, sub_1AFE31444, (uint64_t)v29, a1, a2);
  swift_bridgeObjectRelease();
  if (v6[2] == 3)
  {
    swift_bridgeObjectRelease();
    if (v6[2])
    {
      uint64_t v7 = v6[4];
      uint64_t v8 = v6[5];
      a1 = v6[6];
      uint64_t v9 = v6[7];
      sub_1AFFC8E38();
      uint64_t v10 = MEMORY[0x1B3E8D390](v7, v8, a1, v9);
      a2 = v11;
      swift_bridgeObjectRelease();
      if (v6[2] >= 2uLL)
      {
        uint64_t v12 = v6[8];
        uint64_t v13 = v6[9];
        uint64_t v14 = v6[10];
        uint64_t v15 = v6[11];
        sub_1AFFC8E38();
        a1 = MEMORY[0x1B3E8D390](v12, v13, v14, v15);
        uint64_t v17 = v16;
        swift_bridgeObjectRelease();
        if (v6[2] >= 3uLL)
        {
          uint64_t v18 = v6[12];
          uint64_t v19 = v6[13];
          uint64_t v20 = v6[14];
          uint64_t v21 = v6[15];
          sub_1AFFC8E38();
          swift_bridgeObjectRelease();
          uint64_t v22 = MEMORY[0x1B3E8D390](v18, v19, v20, v21);
          uint64_t v24 = v23;
          swift_bridgeObjectRelease();
          *a3 = v10;
          a3[1] = a2;
          a3[2] = a1;
          a3[3] = v17;
          a3[4] = v22;
          a3[5] = v24;
          return result;
        }
        goto LABEL_10;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (qword_1EB817668 != -1) {
LABEL_11:
  }
    swift_once();
  uint64_t v26 = (void *)qword_1EB831AC0;
  sub_1AFD2CD48();
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1AFFD05F0;
  *(void *)(v27 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v27 + 64) = sub_1AFD2CE00();
  *(void *)(v27 + 32) = a1;
  *(void *)(v27 + 40) = a2;
  sub_1AFFC8E38();
  id v28 = v26;
  sub_1AFFCB478();
  sub_1AFFCA878();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  double result = 0.0;
  *((_OWORD *)a3 + 1) = 0u;
  *((_OWORD *)a3 + 2) = 0u;
  *(_OWORD *)a3 = 0u;
  return result;
}

uint64_t sub_1AFE2D0F4()
{
  uint64_t v2 = *v0;
  sub_1AFFC8E38();
  sub_1AFFCAFA8();
  sub_1AFFC8E38();
  sub_1AFFCAFA8();
  swift_bridgeObjectRelease();
  sub_1AFFCAFA8();
  sub_1AFFC8E38();
  sub_1AFFCAFA8();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1AFE2D1A0(void *a1)
{
  sub_1AFE31B84(0, &qword_1EB81B2C0, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v9 - v6;
  sub_1AFE30CCC(v1, (uint64_t)v11);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFE31ADC();
  sub_1AFFCBE78();
  sub_1AFE30CCC((uint64_t)v11, (uint64_t)&v10);
  sub_1AFE31BE8();
  sub_1AFFCBBE8();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1AFE2D314@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v19 = a2;
  sub_1AFE31B84(0, &qword_1EB8182E8, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = &v15[-v7];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFE31ADC();
  sub_1AFFCBE68();
  if (!v2)
  {
    uint64_t v9 = v19;
    sub_1AFE31B30();
    sub_1AFFCBAF8();
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
    sub_1AFE30CCC((uint64_t)v18, (uint64_t)v15);
    sub_1AFE30CCC((uint64_t)v15, (uint64_t)v16);
    long long v10 = v16[7];
    *(_OWORD *)(v9 + 96) = v16[6];
    *(_OWORD *)(v9 + 112) = v10;
    *(void *)(v9 + 128) = v17;
    long long v11 = v16[3];
    *(_OWORD *)(v9 + 32) = v16[2];
    *(_OWORD *)(v9 + 48) = v11;
    long long v12 = v16[5];
    *(_OWORD *)(v9 + 64) = v16[4];
    *(_OWORD *)(v9 + 80) = v12;
    long long v13 = v16[1];
    *(_OWORD *)uint64_t v9 = v16[0];
    *(_OWORD *)(v9 + 16) = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1AFE2D4F4()
{
  return 0x6B636F7473;
}

uint64_t sub_1AFE2D508@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6B636F7473 && a2 == 0xE500000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1AFFCBCE8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1AFE2D598(uint64_t a1)
{
  unint64_t v2 = sub_1AFE31ADC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFE2D5D4(uint64_t a1)
{
  unint64_t v2 = sub_1AFE31ADC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFE2D610@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1AFE2D314(a1, a2);
}

uint64_t sub_1AFE2D628(void *a1)
{
  return sub_1AFE2D1A0(a1);
}

uint64_t sub_1AFE2D640()
{
  sub_1AFE30CCC(v0, (uint64_t)v3);
  sub_1AFE30CCC((uint64_t)v3, (uint64_t)&v2);
  sub_1AFE31C3C(v3, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD8CCFC);
  sub_1AFE30D4C(0, &qword_1EB817B30, MEMORY[0x1E4FBB718]);
  return sub_1AFFCAF08();
}

uint64_t sub_1AFE2D6C8(uint64_t a1, uint64_t a2)
{
  uint64_t v18 = a2;
  uint64_t v3 = v2;
  uint64_t v14 = a1;
  uint64_t v17 = sub_1AFFC9E08();
  uint64_t v15 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v16 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1AFFCA2F8();
  MEMORY[0x1F4188790](v5);
  uint64_t v19 = MEMORY[0x1E4FBC860];
  sub_1AFE304B0((unint64_t *)&unk_1EB81ABD0, MEMORY[0x1E4FAACC8]);
  uint64_t v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAACC8];
  long long v13 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB320];
  sub_1AFE2DC08(0, &qword_1EB81AC50, MEMORY[0x1E4FAACC8], MEMORY[0x1E4FBB320]);
  sub_1AFE3037C((unint64_t *)&qword_1EB81AC58, &qword_1EB81AC50, v6);
  sub_1AFFCB738();
  sub_1AFE303E0();
  swift_allocObject();
  *(void *)(v2 + 56) = sub_1AFFC9F68();
  *(_DWORD *)(v2 + 64) = 0;
  *(void *)(v2 + 72) = MEMORY[0x1E4FBC870];
  uint64_t v7 = v14;
  sub_1AFD2CEB0(v14, v2 + 16);
  uint64_t v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAA910];
  sub_1AFE2DC08(0, &qword_1EB81A450, MEMORY[0x1E4FAA910], MEMORY[0x1E4FBBE00]);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1AFFD05F0;
  sub_1AFFC9DF8();
  uint64_t v19 = v9;
  sub_1AFE304B0((unint64_t *)&unk_1EB81ABB0, MEMORY[0x1E4FAA910]);
  sub_1AFE2DC08(0, (unint64_t *)&unk_1EB81AC20, v8, v13);
  sub_1AFE3037C((unint64_t *)&qword_1EB81AC30, (unint64_t *)&unk_1EB81AC20, v8);
  sub_1AFFCB738();
  sub_1AFE30500(0, &qword_1EB816C38, (unint64_t *)&unk_1EB817E18, MEMORY[0x1E4FAA660], MEMORY[0x1E4FAAFF0]);
  swift_allocObject();
  uint64_t v10 = sub_1AFFCA528();
  __swift_destroy_boxed_opaque_existential_1(v7);
  *(void *)(v3 + 80) = v10;
  return v3;
}

uint64_t sub_1AFE2DA7C@<X0>(uint64_t *a1@<X8>)
{
  sub_1AFFCA508();
  sub_1AFE315AC(0, (unint64_t *)&unk_1EB817E18, MEMORY[0x1E4FAA660]);
  swift_allocObject();
  uint64_t result = sub_1AFFCA988();
  *a1 = result;
  return result;
}

uint64_t sub_1AFE2DB28()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  sub_1AFE31CA0(v0 + 64);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StockMetadataManager()
{
  return self;
}

void sub_1AFE2DB9C()
{
  if (MEMORY[0x1E4FBC8F0]) {
    sub_1AFE2DC08(0, &qword_1E9AFB2F8, (uint64_t (*)(uint64_t))sub_1AFD67340, MEMORY[0x1E4FBCDD8]);
  }
}

void sub_1AFE2DC08(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

ValueMetadata *type metadata accessor for StockMetadataManager.StoreDescriptor()
{
  return &type metadata for StockMetadataManager.StoreDescriptor;
}

uint64_t destroy for StockMetadataManager.CacheEntry(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 8);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for StockMetadataManager.CacheEntry(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3)
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    uint64_t v4 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v4;
    uint64_t v5 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v5;
    uint64_t v6 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = v6;
    *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
    uint64_t v7 = *(void *)(a2 + 80);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = v7;
    uint64_t v8 = *(void *)(a2 + 96);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = v8;
    uint64_t v9 = *(void *)(a2 + 112);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = v9;
    uint64_t v10 = *(void *)(a2 + 128);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = v10;
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
  }
  else
  {
    long long v11 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v11;
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    long long v12 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v12;
    long long v13 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v13;
    long long v14 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v14;
  }
  return a1;
}

uint64_t assignWithCopy for StockMetadataManager.CacheEntry(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  if (*(void *)(a1 + 8))
  {
    if (v4)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AFE2E07C(a1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      long long v5 = *(_OWORD *)(a2 + 64);
      long long v7 = *(_OWORD *)(a2 + 16);
      long long v6 = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 64) = v5;
      *(_OWORD *)(a1 + 16) = v7;
      *(_OWORD *)(a1 + 32) = v6;
      long long v9 = *(_OWORD *)(a2 + 96);
      long long v8 = *(_OWORD *)(a2 + 112);
      long long v10 = *(_OWORD *)(a2 + 80);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(_OWORD *)(a1 + 96) = v9;
      *(_OWORD *)(a1 + 112) = v8;
      *(_OWORD *)(a1 + 80) = v10;
    }
  }
  else if (v4)
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    long long v11 = *(_OWORD *)(a2 + 16);
    long long v12 = *(_OWORD *)(a2 + 32);
    long long v13 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v13;
    *(_OWORD *)(a1 + 16) = v11;
    *(_OWORD *)(a1 + 32) = v12;
    long long v14 = *(_OWORD *)(a2 + 80);
    long long v15 = *(_OWORD *)(a2 + 96);
    long long v16 = *(_OWORD *)(a2 + 112);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(_OWORD *)(a1 + 96) = v15;
    *(_OWORD *)(a1 + 112) = v16;
    *(_OWORD *)(a1 + 80) = v14;
  }
  return a1;
}

uint64_t sub_1AFE2E07C(uint64_t a1)
{
  return a1;
}

uint64_t assignWithTake for StockMetadataManager.CacheEntry(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a1 + 8)) {
    goto LABEL_5;
  }
  uint64_t v4 = *(void *)(a2 + 8);
  if (!v4)
  {
    sub_1AFE2E07C(a1);
LABEL_5:
    long long v12 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v12;
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    long long v13 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v13;
    long long v14 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v14;
    long long v15 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v15;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v8 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v11;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StockMetadataManager.CacheEntry(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 136)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for StockMetadataManager.CacheEntry(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 136) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 136) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StockMetadataManager.CacheEntry()
{
  return &type metadata for StockMetadataManager.CacheEntry;
}

uint64_t sub_1AFE2E2A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v9 = objc_msgSend(self, sel_sharedPreferences);
  uint64_t v10 = v9;
  uint64_t v21 = a5;
  if (!v9) {
    goto LABEL_7;
  }
  id v11 = objc_msgSend(v9, sel_stocksLanguageCode);
  if (v11)
  {
    long long v12 = v11;
    sub_1AFFCAE98();
  }
  id v13 = objc_msgSend(v10, sel_stocksCountryCode, a2, a3, v21);
  if (v13)
  {
    long long v14 = v13;
    sub_1AFFCAE98();
  }
  else
  {
LABEL_7:
  }
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFE3114C(a1);
  swift_bridgeObjectRelease();
  uint64_t v15 = swift_bridgeObjectRelease();
  MEMORY[0x1F4188790](v15);
  long long v16 = (uint64_t (*)(void, void, uint64_t, void))MEMORY[0x1E4FBAEA0];
  sub_1AFE31894(0, &qword_1EB817E78, (uint64_t)&type metadata for StockMetadataManager.CacheEntry, MEMORY[0x1E4FBAEA0]);
  sub_1AFFCA7C8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1AFFC8E48();
  uint64_t v17 = (void *)sub_1AFFCA5E8();
  sub_1AFFCA678();
  swift_release();
  swift_release();

  uint64_t v18 = (void *)sub_1AFFCA5E8();
  sub_1AFE31894(0, (unint64_t *)&qword_1EB817EA0, (uint64_t)&type metadata for Stock, v16);
  sub_1AFE31324();
  uint64_t v19 = sub_1AFFCA778();
  swift_release();

  return v19;
}

uint64_t sub_1AFE2E588(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (qword_1EB817668 != -1) {
    swift_once();
  }
  id v9 = (void *)qword_1EB831AC0;
  sub_1AFD2CD48();
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1AFFD05F0;
  id v11 = v9;
  uint64_t v12 = MEMORY[0x1E4FBB1A0];
  uint64_t v13 = MEMORY[0x1B3E8D630](a1, MEMORY[0x1E4FBB1A0]);
  uint64_t v15 = v14;
  *(void *)(v10 + 56) = v12;
  *(void *)(v10 + 64) = sub_1AFD2CE00();
  *(void *)(v10 + 32) = v13;
  *(void *)(v10 + 40) = v15;
  sub_1AFFCB478();
  sub_1AFFCA878();

  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(a1 + 16);
  if (v16)
  {
    sub_1AFFC8E38();
    uint64_t v17 = (unint64_t *)(a1 + 40);
    uint64_t v18 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v20 = *(v17 - 1);
      unint64_t v21 = *v17;
      sub_1AFFC8E38();
      sub_1AFE2CE7C(v20, v21, &v53);
      uint64_t v22 = v54;
      if (v54)
      {
        uint64_t v23 = v53;
        uint64_t v24 = v55;
        uint64_t v25 = v56;
        uint64_t v27 = v57;
        uint64_t v26 = v58;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v18 = sub_1AFD3614C(0, v18[2] + 1, 1, v18);
        }
        id v28 = v18;
        unint64_t v29 = v18[2];
        long long v30 = v28;
        unint64_t v31 = v28[3];
        if (v29 >= v31 >> 1) {
          long long v30 = sub_1AFD3614C((void *)(v31 > 1), v29 + 1, 1, v30);
        }
        void v30[2] = v29 + 1;
        uint64_t v19 = &v30[6 * v29];
        uint64_t v18 = v30;
        v19[4] = v23;
        v19[5] = v22;
        v19[6] = v24;
        void v19[7] = v25;
        v19[8] = v27;
        v19[9] = v26;
      }
      v17 += 2;
      --v16;
    }
    while (v16);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v18 = (void *)MEMORY[0x1E4FBC860];
  }
  int64_t v32 = v18[2];
  uint64_t v33 = MEMORY[0x1E4FBC860];
  if (v32)
  {
    uint64_t v53 = MEMORY[0x1E4FBC860];
    sub_1AFD9DA10(0, v32, 0);
    uint64_t v33 = v53;
    long long v34 = v18 + 5;
    do
    {
      uint64_t v36 = *(v34 - 1);
      uint64_t v35 = *v34;
      uint64_t v53 = v33;
      unint64_t v38 = *(void *)(v33 + 16);
      unint64_t v37 = *(void *)(v33 + 24);
      sub_1AFFC8E38();
      if (v38 >= v37 >> 1)
      {
        sub_1AFD9DA10(v37 > 1, v38 + 1, 1);
        uint64_t v33 = v53;
      }
      v34 += 6;
      *(void *)(v33 + 16) = v38 + 1;
      uint64_t v39 = v33 + 16 * v38;
      *(void *)(v39 + 32) = v36;
      *(void *)(v39 + 40) = v35;
      --v32;
    }
    while (v32);
  }
  uint64_t v40 = a2[5];
  uint64_t v41 = a2[6];
  __swift_project_boxed_opaque_existential_1(a2 + 2, v40);
  uint64_t v53 = a3;
  uint64_t v54 = a4;
  uint64_t v55 = a5;
  uint64_t v56 = a6;
  (*(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 8))(v33, &v53, a7, a8, v40, v41);
  swift_bridgeObjectRelease();
  *(void *)(swift_allocObject() + 16) = v18;
  long long v42 = (void *)sub_1AFFCA5E8();
  sub_1AFE31894(0, &qword_1EB817E78, (uint64_t)&type metadata for StockMetadataManager.CacheEntry, MEMORY[0x1E4FBAEA0]);
  sub_1AFFCA678();
  swift_release();
  swift_release();

  long long v43 = (void *)sub_1AFFCA5E8();
  uint64_t v44 = sub_1AFFCA6B8();
  swift_release();

  return v44;
}

uint64_t sub_1AFE2E958@<X0>(unint64_t *a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  unint64_t v5 = *a1;
  if (qword_1EB817668 != -1) {
LABEL_27:
  }
    swift_once();
  uint64_t v6 = (void *)qword_1EB831AC0;
  sub_1AFD2CD48();
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1AFFD05F0;
  id v8 = v6;
  uint64_t v9 = MEMORY[0x1E4FBB1A0];
  unint64_t v61 = v5;
  uint64_t v10 = sub_1AFFCAC98();
  uint64_t v12 = v11;
  *(void *)(v7 + 56) = v9;
  *(void *)(v7 + 64) = sub_1AFD2CE00();
  *(void *)(v7 + 32) = v10;
  *(void *)(v7 + 40) = v12;
  sub_1AFFCB478();
  sub_1AFFCA878();

  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v14 = a2[2];
  if (v14)
  {
    char v60 = a3;
    sub_1AFFC8E38();
    uint64_t v63 = v14 - 1;
    uint64_t v15 = a2 + 9;
    a2 = (void *)MEMORY[0x1E4FBC868];
    unint64_t v16 = v61;
    while (1)
    {
      uint64_t v17 = *(v15 - 5);
      uint64_t v18 = *(v15 - 4);
      uint64_t v62 = v15;
      *(void *)&long long __dst = v17;
      *((void *)&__dst + 1) = v18;
      swift_bridgeObjectRetain_n();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFCAFA8();
      sub_1AFFC8E38();
      sub_1AFFCAFA8();
      swift_bridgeObjectRelease();
      sub_1AFFCAFA8();
      sub_1AFFC8E38();
      sub_1AFFCAFA8();
      swift_bridgeObjectRelease();
      long long v19 = __dst;
      if (*(void *)(v16 + 16))
      {
        sub_1AFFC8E38();
        unint64_t v20 = sub_1AFD79CC8(v17, v18);
        if (v21)
        {
          uint64_t v22 = (_OWORD *)(*(void *)(v16 + 56) + 136 * v20);
          long long v64 = *v22;
          long long v23 = v22[3];
          long long v24 = v22[4];
          long long v25 = v22[2];
          long long v65 = v22[1];
          long long v66 = v25;
          long long v67 = v23;
          long long v68 = v24;
          long long v26 = v22[5];
          long long v27 = v22[6];
          long long v28 = v22[7];
          uint64_t v72 = *((void *)v22 + 16);
          long long v70 = v27;
          long long v71 = v28;
          long long v69 = v26;
          memmove(&__dst, v22, 0x88uLL);
          nullsub_1(&__dst);
          sub_1AFD76370((uint64_t)&v64);
          swift_bridgeObjectRelease();
          goto LABEL_10;
        }
        swift_bridgeObjectRelease();
      }
      sub_1AFD2D868((uint64_t)&__dst);
LABEL_10:
      sub_1AFE30CCC((uint64_t)&__dst, (uint64_t)v82);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v83 = a2;
      a3 = (void *)v19;
      unint64_t v5 = sub_1AFD79CC8(v19, *((uint64_t *)&v19 + 1));
      uint64_t v31 = a2[2];
      BOOL v32 = (v30 & 1) == 0;
      uint64_t v33 = v31 + v32;
      if (__OFADD__(v31, v32))
      {
        __break(1u);
LABEL_26:
        __break(1u);
        goto LABEL_27;
      }
      char v34 = v30;
      if (a2[3] >= v33)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_1AFEB8F78();
        }
      }
      else
      {
        sub_1AFEB3988(v33, isUniquelyReferenced_nonNull_native);
        unint64_t v35 = sub_1AFD79CC8(v19, *((uint64_t *)&v19 + 1));
        if ((v34 & 1) != (v36 & 1))
        {
          uint64_t result = sub_1AFFCBD68();
          __break(1u);
          return result;
        }
        unint64_t v5 = v35;
      }
      sub_1AFE30CCC((uint64_t)v82, (uint64_t)&__dst);
      if (v34)
      {
        a2 = v83;
        uint64_t v37 = v83[7] + 136 * v5;
        long long v64 = *(_OWORD *)v37;
        long long v38 = *(_OWORD *)(v37 + 64);
        long long v40 = *(_OWORD *)(v37 + 16);
        long long v39 = *(_OWORD *)(v37 + 32);
        long long v67 = *(_OWORD *)(v37 + 48);
        long long v68 = v38;
        long long v65 = v40;
        long long v66 = v39;
        long long v42 = *(_OWORD *)(v37 + 96);
        long long v41 = *(_OWORD *)(v37 + 112);
        long long v43 = *(_OWORD *)(v37 + 80);
        uint64_t v72 = *(void *)(v37 + 128);
        long long v70 = v42;
        long long v71 = v41;
        long long v69 = v43;
        sub_1AFE31C3C(&v64, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFE313A0);
        *(_OWORD *)uint64_t v37 = __dst;
        long long v44 = v77;
        long long v45 = v75;
        long long v46 = v74;
        *(_OWORD *)(v37 + 48) = v76;
        *(_OWORD *)(v37 + 64) = v44;
        *(_OWORD *)(v37 + 16) = v46;
        *(_OWORD *)(v37 + 32) = v45;
        long long v47 = v80;
        long long v48 = v79;
        long long v49 = v78;
        *(void *)(v37 + 128) = v81;
        *(_OWORD *)(v37 + 96) = v48;
        *(_OWORD *)(v37 + 112) = v47;
        *(_OWORD *)(v37 + 80) = v49;
      }
      else
      {
        a2 = v83;
        v83[(v5 >> 6) + 8] |= 1 << v5;
        *(_OWORD *)(a2[6] + 16 * v5) = v19;
        uint64_t v50 = a2[7] + 136 * v5;
        uint64_t v51 = v81;
        long long v52 = v80;
        long long v53 = v79;
        *(_OWORD *)(v50 + 80) = v78;
        *(_OWORD *)(v50 + 96) = v53;
        *(_OWORD *)(v50 + 112) = v52;
        *(void *)(v50 + 128) = v51;
        long long v54 = v77;
        long long v55 = v76;
        long long v56 = v75;
        *(_OWORD *)(v50 + 16) = v74;
        *(_OWORD *)(v50 + 32) = v56;
        *(_OWORD *)(v50 + 48) = v55;
        *(_OWORD *)(v50 + 64) = v54;
        *(_OWORD *)uint64_t v50 = __dst;
        uint64_t v57 = a2[2];
        BOOL v58 = __OFADD__(v57, 1);
        uint64_t v59 = v57 + 1;
        if (v58) {
          goto LABEL_26;
        }
        a2[2] = v59;
        sub_1AFFC8E38();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v16 = v61;
      if (!v63)
      {
        uint64_t result = swift_bridgeObjectRelease();
        a3 = v60;
        goto LABEL_24;
      }
      uint64_t v15 = v62 + 6;
      --v63;
    }
  }
  a2 = (void *)MEMORY[0x1E4FBC868];
LABEL_24:
  *a3 = a2;
  return result;
}

uint64_t sub_1AFE2EE70()
{
  return sub_1AFE2F370();
}

uint64_t sub_1AFE2EE80(uint64_t a1)
{
  if (qword_1EB817668 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_1EB831AC0;
  sub_1AFD2CD48();
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1AFFD05F0;
  id v4 = v2;
  uint64_t v5 = MEMORY[0x1E4FBB1A0];
  uint64_t v6 = MEMORY[0x1B3E8D630](a1, MEMORY[0x1E4FBB1A0]);
  uint64_t v8 = v7;
  *(void *)(v3 + 56) = v5;
  *(void *)(v3 + 64) = sub_1AFD2CE00();
  *(void *)(v3 + 32) = v6;
  *(void *)(v3 + 40) = v8;
  sub_1AFFCB478();
  sub_1AFFCA878();

  uint64_t v9 = swift_bridgeObjectRelease();
  MEMORY[0x1F4188790](v9);
  sub_1AFE31894(0, &qword_1EB817E78, (uint64_t)&type metadata for StockMetadataManager.CacheEntry, MEMORY[0x1E4FBAEA0]);
  sub_1AFFCA7C8();
  uint64_t v10 = (void *)sub_1AFFCA5E8();
  sub_1AFFCA668();
  swift_release();

  uint64_t v11 = (void *)sub_1AFFCA5E8();
  uint64_t v12 = sub_1AFFCA6B8();
  swift_release();

  return v12;
}

uint64_t sub_1AFE2F08C()
{
  uint64_t v0 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAA650];
  sub_1AFE30500(0, &qword_1EB817DF8, &qword_1EB817DF0, MEMORY[0x1E4FAA650], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  sub_1AFFCA508();
  sub_1AFFCA998();
  swift_release();
  sub_1AFE315AC(0, &qword_1EB817DF0, v0);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v3, 1, v4);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v8 = sub_1AFFCA948();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v3, v5);
    return v8;
  }
  return result;
}

uint64_t sub_1AFE2F218()
{
  if (qword_1EB817668 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EB831AC0;
  sub_1AFD2CD48();
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1AFFD05F0;
  id v2 = v0;
  uint64_t v3 = MEMORY[0x1E4FBB1A0];
  uint64_t v4 = sub_1AFFCAC98();
  uint64_t v6 = v5;
  *(void *)(v1 + 56) = v3;
  *(void *)(v1 + 64) = sub_1AFD2CE00();
  *(void *)(v1 + 32) = v4;
  *(void *)(v1 + 40) = v6;
  sub_1AFFCB478();
  sub_1AFFCA878();

  swift_bridgeObjectRelease();
  sub_1AFE31A44();
  swift_allocObject();
  sub_1AFFC8E38();
  return sub_1AFFCA6F8();
}

uint64_t sub_1AFE2F360()
{
  return sub_1AFE2F370();
}

uint64_t sub_1AFE2F370()
{
  if (qword_1EB817668 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EB831AC0;
  sub_1AFFCB468();
  sub_1AFD2CD48();
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1AFFD05F0;
  sub_1AFD2CDB0(0, (unint64_t *)&qword_1EB81A110);
  sub_1AFFCB928();
  *(void *)(v1 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v1 + 64) = sub_1AFD2CE00();
  *(void *)(v1 + 32) = 0;
  *(void *)(v1 + 40) = 0xE000000000000000;
  sub_1AFFCA878();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFE2F4B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v43 = a5;
  uint64_t v46 = a8;
  uint64_t v47 = a3;
  uint64_t v53 = a6;
  uint64_t v54 = a7;
  uint64_t v52 = a4;
  uint64_t v41 = a1;
  uint64_t v42 = a2;
  uint64_t v48 = a9;
  uint64_t v11 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAA650];
  sub_1AFE315AC(0, &qword_1EB817DF0, MEMORY[0x1E4FAA650]);
  uint64_t v50 = *(void *)(v12 - 8);
  uint64_t v51 = v12;
  v39[1] = *(void *)(v50 + 64);
  MEMORY[0x1F4188790](v12);
  long long v40 = (char *)v39 - v13;
  sub_1AFE30500(0, &qword_1EB817DF8, &qword_1EB817DF0, v11, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  long long v49 = (char *)v39 - v15;
  uint64_t v16 = sub_1AFFC9E18();
  uint64_t v44 = v16;
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void *)(v17 + 64);
  MEMORY[0x1F4188790](v16);
  long long v45 = (char *)v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1AFFC98F8();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(void *)(v20 + 64);
  double v22 = MEMORY[0x1F4188790](v19);
  long long v23 = (char *)v39 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v20 + 16))(v23, v46, v19, v22);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))((char *)v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), v48, v16);
  unint64_t v24 = (*(unsigned __int8 *)(v20 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  unint64_t v25 = (v21 + *(unsigned __int8 *)(v17 + 80) + v24) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  long long v26 = (char *)swift_allocObject();
  uint64_t v27 = v52;
  *((void *)v26 + 2) = v47;
  *((void *)v26 + 3) = v27;
  uint64_t v28 = v53;
  *((void *)v26 + 4) = a5;
  *((void *)v26 + 5) = v28;
  *((void *)v26 + 6) = v54;
  unint64_t v29 = v23;
  uint64_t v30 = v50;
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(&v26[v24], v29, v19);
  uint64_t v31 = &v26[v25];
  uint64_t v32 = v51;
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v31, v45, v44);
  swift_retain_n();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFCA508();
  uint64_t v33 = v49;
  sub_1AFFCA998();
  swift_release();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48))(v33, 1, v32);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v54 = a10;
    sub_1AFE31894(0, &qword_1EB817D38, (uint64_t)&type metadata for StockMetadataManager.CacheEntry, MEMORY[0x1E4FAB070]);
    unint64_t v35 = v40;
    (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v40, v33, v32);
    unint64_t v36 = (*(unsigned __int8 *)(v30 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
    uint64_t v37 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v30 + 32))(v37 + v36, v35, v32);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v33, v32);
    uint64_t v38 = sub_1AFFCA608();
    swift_release();
    swift_release();
    swift_release();
    return v38;
  }
  return result;
}

uint64_t sub_1AFE2F99C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t v6 = (os_unfair_lock_s *)(a2 + 64);
  sub_1AFFC8E38();
  os_unfair_lock_lock(v6);
  sub_1AFE2FA20(v5, (uint64_t *)(a2 + 72));
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(v6);
  *a3 = v5;
  return sub_1AFFC8E38();
}

uint64_t sub_1AFE2FA20(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v30 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = sub_1AFFC8E38();
  int64_t v7 = 0;
  if (v5) {
    goto LABEL_30;
  }
LABEL_6:
  int64_t v8 = v7 + 1;
  if (!__OFADD__(v7, 1))
  {
    if (v8 < v30)
    {
      unint64_t v9 = *(void *)(v29 + 8 * v8);
      ++v7;
      if (v9) {
        goto LABEL_21;
      }
      int64_t v7 = v8 + 1;
      if (v8 + 1 >= v30) {
        return swift_release();
      }
      unint64_t v9 = *(void *)(v29 + 8 * v7);
      if (v9) {
        goto LABEL_21;
      }
      int64_t v7 = v8 + 2;
      if (v8 + 2 >= v30) {
        return swift_release();
      }
      unint64_t v9 = *(void *)(v29 + 8 * v7);
      if (v9) {
        goto LABEL_21;
      }
      int64_t v7 = v8 + 3;
      if (v8 + 3 >= v30) {
        return swift_release();
      }
      unint64_t v9 = *(void *)(v29 + 8 * v7);
      if (v9)
      {
LABEL_21:
        unint64_t v5 = (v9 - 1) & v9;
        for (unint64_t i = __clz(__rbit64(v9)) + (v7 << 6); ; unint64_t i = v28 | (v7 << 6))
        {
          uint64_t v12 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
          uint64_t v13 = *v12;
          unint64_t v14 = v12[1];
          uint64_t v15 = *(void *)(a1 + 56) + 136 * i;
          long long v36 = *(_OWORD *)v15;
          long long v16 = *(_OWORD *)(v15 + 16);
          long long v17 = *(_OWORD *)(v15 + 32);
          long long v18 = *(_OWORD *)(v15 + 64);
          long long v39 = *(_OWORD *)(v15 + 48);
          long long v40 = v18;
          long long v37 = v16;
          long long v38 = v17;
          long long v19 = *(_OWORD *)(v15 + 80);
          long long v20 = *(_OWORD *)(v15 + 96);
          long long v21 = *(_OWORD *)(v15 + 112);
          uint64_t v44 = *(void *)(v15 + 128);
          long long v42 = v20;
          long long v43 = v21;
          long long v41 = v19;
          v45[0] = v13;
          v45[1] = v14;
          long long v46 = v36;
          long long v47 = v37;
          long long v48 = v38;
          long long v49 = v39;
          long long v50 = v18;
          long long v51 = v19;
          long long v52 = v20;
          long long v53 = v21;
          uint64_t v54 = v44;
          sub_1AFFC8E38();
          sub_1AFE0556C((uint64_t)v45);
          sub_1AFE2CE7C(v13, v14, &v34);
          uint64_t v22 = v35;
          if (v35)
          {
            int64_t v55 = v7;
            uint64_t v23 = v34;
            sub_1AFFC8E38();
            sub_1AFD5F574(v23, v22);
            sub_1AFE0556C((uint64_t)v45);
            swift_bridgeObjectRelease();
            sub_1AFE31C3C(&v36, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFE313A0);
            sub_1AFE30CCC((uint64_t)&v36, (uint64_t)v33);
            if (sub_1AFD48F48((uint64_t)v33) == 1)
            {
              uint64_t v24 = *a2;
              sub_1AFFC8E38();
              char v25 = sub_1AFDC0F04(v23, v22, v24);
              swift_bridgeObjectRelease();
              if ((v25 & 1) == 0)
              {
                sub_1AFFC8E38();
                sub_1AFE22314(&v32, v23, v22);
                swift_bridgeObjectRelease();
              }
            }
            sub_1AFE0556C((uint64_t)v45);
            swift_bridgeObjectRelease();
            sub_1AFE31C3C(&v36, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFE313A0);
            sub_1AFE30CCC((uint64_t)&v36, (uint64_t)&v32);
            if (sub_1AFD48F48((uint64_t)&v32) != 1)
            {
              uint64_t v26 = *a2;
              sub_1AFFC8E38();
              char v27 = sub_1AFDC0F04(v23, v22, v26);
              swift_bridgeObjectRelease();
              if (v27)
              {
                sub_1AFE30D9C(v23, v22);
                swift_bridgeObjectRelease();
              }
            }
            swift_bridgeObjectRelease();
            uint64_t result = sub_1AFE314E4((uint64_t)v45);
            int64_t v7 = v55;
            if (!v5) {
              goto LABEL_6;
            }
          }
          else
          {
            uint64_t result = sub_1AFE314E4((uint64_t)v45);
            if (!v5) {
              goto LABEL_6;
            }
          }
LABEL_30:
          unint64_t v28 = __clz(__rbit64(v5));
          v5 &= v5 - 1;
        }
      }
      int64_t v10 = v8 + 4;
      if (v10 < v30)
      {
        unint64_t v9 = *(void *)(v29 + 8 * v10);
        if (v9)
        {
          int64_t v7 = v10;
          goto LABEL_21;
        }
        while (1)
        {
          int64_t v7 = v10 + 1;
          if (__OFADD__(v10, 1)) {
            goto LABEL_33;
          }
          if (v7 >= v30) {
            return swift_release();
          }
          unint64_t v9 = *(void *)(v29 + 8 * v7);
          ++v10;
          if (v9) {
            goto LABEL_21;
          }
        }
      }
    }
    return swift_release();
  }
  __break(1u);
LABEL_33:
  __break(1u);
  return result;
}

void *sub_1AFE2FDD4(uint64_t *a1, long long *a2)
{
  long long v3 = a2[7];
  v17[5] = a2[6];
  v17[6] = v3;
  v17[7] = a2[8];
  uint64_t v18 = *((void *)a2 + 18);
  long long v4 = a2[3];
  v17[1] = a2[2];
  void v17[2] = v4;
  long long v5 = a2[5];
  v17[3] = a2[4];
  v17[4] = v5;
  long long v6 = a2[1];
  long long v16 = *a2;
  v17[0] = v6;
  long long v7 = v16;
  sub_1AFE0556C((uint64_t)&v16);
  swift_bridgeObjectRelease();
  sub_1AFE30CCC((uint64_t)v17, (uint64_t)v19);
  uint64_t result = (void *)sub_1AFD48F48((uint64_t)v19);
  if (result != 1)
  {
    v14[6] = v19[6];
    void v14[7] = v19[7];
    uint64_t v15 = v20;
    void v14[2] = v19[2];
    v14[3] = v19[3];
    v14[4] = v19[4];
    void v14[5] = v19[5];
    v14[0] = v19[0];
    v14[1] = v19[1];
    sub_1AFE0556C((uint64_t)&v16);
    sub_1AFE31C3C(v17, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFE313A0);
    sub_1AFE2CE7C(v7, *((unint64_t *)&v7 + 1), &v12);
    uint64_t v9 = v13;
    if (v13)
    {
      uint64_t v10 = v12;
      sub_1AFFC8E38();
      sub_1AFD5F574(v10, v9);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v12 = *a1;
      *a1 = 0x8000000000000000;
      sub_1AFE03CB0((uint64_t)v14, v10, v9, isUniquelyReferenced_nonNull_native);
      *a1 = v12;
      swift_bridgeObjectRelease();
      return (void *)swift_bridgeObjectRelease();
    }
    else
    {
      return sub_1AFE31C3C(v17, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFE313A0);
    }
  }
  return result;
}

uint64_t sub_1AFE2FF88(long long *a1)
{
  long long v1 = a1[7];
  long long v31 = a1[6];
  long long v32 = v1;
  uint64_t v33 = *((void *)a1 + 16);
  long long v2 = a1[3];
  long long v27 = a1[2];
  long long v28 = v2;
  long long v3 = a1[5];
  long long v29 = a1[4];
  long long v30 = v3;
  long long v4 = a1[1];
  long long v25 = *a1;
  long long v26 = v4;
  long long v5 = v4;
  long long v6 = self;
  sub_1AFFC8E38();
  id v7 = objc_msgSend(v6, sel_sharedPreferences);
  int64_t v8 = v7;
  if (!v7) {
    goto LABEL_7;
  }
  id v9 = objc_msgSend(v7, sel_stocksLanguageCode);
  if (v9)
  {
    uint64_t v10 = v9;
    sub_1AFFCAE98();
  }
  id v11 = objc_msgSend(v8, sel_stocksCountryCode);
  if (v11)
  {
    uint64_t v12 = v11;
    sub_1AFFCAE98();
  }
  else
  {
LABEL_7:
  }
  v23[0] = v5;
  sub_1AFFC8E38();
  sub_1AFFCAFA8();
  sub_1AFFC8E38();
  sub_1AFFCAFA8();
  swift_bridgeObjectRelease();
  sub_1AFFCAFA8();
  sub_1AFFC8E38();
  sub_1AFFCAFA8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  sub_1AFFCA508();
  sub_1AFE2DC08(0, &qword_1E9AFB300, (uint64_t (*)(uint64_t))sub_1AFE30C64, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AFFD05F0;
  *(_OWORD *)(inited + 32) = v5;
  v21[0] = v25;
  v21[1] = v26;
  void v21[2] = v27;
  v21[3] = v28;
  v21[4] = v29;
  v21[5] = v30;
  v21[6] = v31;
  v21[7] = v32;
  uint64_t v22 = v33;
  nullsub_1(v21);
  sub_1AFE30CCC((uint64_t)v21, (uint64_t)v23);
  long long v14 = v23[4];
  long long v15 = v23[0];
  *(_OWORD *)(inited + 64) = v23[1];
  uint64_t v16 = v24;
  long long v17 = v23[5];
  long long v18 = v23[7];
  *(_OWORD *)(inited + 144) = v23[6];
  *(_OWORD *)(inited + 160) = v18;
  long long v19 = v23[3];
  *(_OWORD *)(inited + 80) = v23[2];
  *(_OWORD *)(inited + 96) = v19;
  *(void *)(inited + 176) = v16;
  *(_OWORD *)(inited + 112) = v14;
  *(_OWORD *)(inited + 128) = v17;
  *(_OWORD *)(inited + 48) = v15;
  sub_1AFD76370((uint64_t)&v25);
  sub_1AFDFA2E8(inited);
  sub_1AFFCA938();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1AFE30D4C(0, &qword_1E9AFA328, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  sub_1AFD76370((uint64_t)&v25);
  return sub_1AFFCA6F8();
}

uint64_t sub_1AFE302DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1AFE2E2A0(a1, a2, a3, a4, a5);
}

uint64_t sub_1AFE30300(long long *a1)
{
  return sub_1AFE2FF88(a1);
}

void *sub_1AFE30324()
{
  uint64_t v1 = *v0;
  long long v2 = (os_unfair_lock_s *)(v1 + 64);
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 64));
  uint64_t v3 = *(void *)(v1 + 72);
  sub_1AFFC8E38();
  os_unfair_lock_unlock(v2);
  long long v4 = sub_1AFD70448(v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1AFE3037C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1AFE2DC08(255, a2, a3, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1AFE303E0()
{
  if (!qword_1EB817CB0)
  {
    sub_1AFD67340();
    sub_1AFE31894(255, &qword_1EB817E78, (uint64_t)&type metadata for StockMetadataManager.CacheEntry, MEMORY[0x1E4FBAEA0]);
    sub_1AFE304B0(&qword_1EB818048, (void (*)(uint64_t))sub_1AFD67340);
    unint64_t v0 = sub_1AFFC9F88();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB817CB0);
    }
  }
}

uint64_t sub_1AFE304B0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AFE304F8@<X0>(uint64_t *a1@<X8>)
{
  return sub_1AFE2DA7C(a1);
}

void sub_1AFE30500(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t, void *), uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_1AFE315AC(255, a3, a4);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

unint64_t sub_1AFE30568()
{
  unint64_t result = qword_1EB817698;
  if (!qword_1EB817698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817698);
  }
  return result;
}

unint64_t sub_1AFE305BC()
{
  unint64_t result = qword_1EB817690;
  if (!qword_1EB817690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817690);
  }
  return result;
}

unint64_t sub_1AFE30610()
{
  unint64_t result = qword_1EB817688;
  if (!qword_1EB817688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817688);
  }
  return result;
}

uint64_t sub_1AFE30664(uint64_t a1, char a2, uint64_t (*a3)(void *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  v50[3] = a4;
  if (a1 < 0) {
    goto LABEL_42;
  }
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = MEMORY[0x1E4FBC860];
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = 15;
  uint64_t v11 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (uint64_t v12 = HIBYTE(a6) & 0xF) : (uint64_t v12 = a5 & 0xFFFFFFFFFFFFLL), !v12))
  {
    if ((a6 & 0x2000000000000000) == 0) {
      uint64_t v11 = a5 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v30 = 7;
    if (((a6 >> 60) & ((a5 & 0x800000000000000) == 0)) != 0) {
      uint64_t v30 = 11;
    }
    sub_1AFE30B08(v30 | (v11 << 16), v47, a2 & 1, v10);
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void **)(v10 + 16);
    sub_1AFFC8E38();
    swift_release();
LABEL_39:
    swift_release();
    return (uint64_t)v13;
  }
  uint64_t v42 = a1;
  uint64_t v43 = v10;
  unint64_t v48 = 4 * v12;
  uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
  unint64_t v14 = 15;
  unint64_t v15 = 15;
  unint64_t v16 = 15;
  while (1)
  {
    v50[0] = sub_1AFFCB028();
    v50[1] = v17;
    char v18 = a3(v50);
    if (v6)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v13;
    }
    char v19 = v18;
    swift_bridgeObjectRelease();
    if (v19) {
      break;
    }
    unint64_t v14 = sub_1AFFCAF88();
LABEL_9:
    if (v48 == v14 >> 14) {
      goto LABEL_29;
    }
  }
  if (v15 >> 14 == v14 >> 14 && (a2 & 1) != 0)
  {
    unint64_t v14 = sub_1AFFCAF88();
    *(void *)(v47 + 16) = v14;
    unint64_t v15 = v14;
    unint64_t v16 = v14;
    goto LABEL_9;
  }
  if (v14 >> 14 < v15 >> 14) {
    goto LABEL_41;
  }
  uint64_t v20 = sub_1AFFCB048();
  uint64_t v44 = v21;
  uint64_t v45 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v13 = sub_1AFD3601C(0, v13[2] + 1, 1, v13);
  }
  unint64_t v27 = v13[2];
  unint64_t v26 = v13[3];
  if (v27 >= v26 >> 1) {
    uint64_t v13 = sub_1AFD3601C((void *)(v26 > 1), v27 + 1, 1, v13);
  }
  void v13[2] = v27 + 1;
  long long v28 = &v13[4 * v27];
  v28[4] = v45;
  v28[5] = v23;
  v28[6] = v25;
  v28[7] = v44;
  *(void *)(v43 + 16) = v13;
  uint64_t v29 = sub_1AFFCAF88();
  unint64_t v14 = v29;
  *(void *)(v47 + 16) = v29;
  if (v13[2] != v42)
  {
    unint64_t v15 = v29;
    unint64_t v16 = v29;
    goto LABEL_9;
  }
  unint64_t v16 = v29;
  unint64_t v15 = v29;
LABEL_29:
  if (v48 == v15 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_38:
    sub_1AFFC8E38();
    swift_release();
    goto LABEL_39;
  }
  if (v48 >= v16 >> 14)
  {
    uint64_t v31 = sub_1AFFCB048();
    uint64_t v33 = v32;
    uint64_t v35 = v34;
    uint64_t v37 = v36;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v13 = sub_1AFD3601C(0, v13[2] + 1, 1, v13);
    }
    unint64_t v39 = v13[2];
    unint64_t v38 = v13[3];
    if (v39 >= v38 >> 1) {
      uint64_t v13 = sub_1AFD3601C((void *)(v38 > 1), v39 + 1, 1, v13);
    }
    void v13[2] = v39 + 1;
    long long v40 = &v13[4 * v39];
    v40[4] = v31;
    v40[5] = v33;
    v40[6] = v35;
    v40[7] = v37;
    *(void *)(v43 + 16) = v13;
    goto LABEL_38;
  }
LABEL_41:
  sub_1AFFCB998();
  __break(1u);
LABEL_42:
  uint64_t result = sub_1AFFCB998();
  __break(1u);
  return result;
}

uint64_t sub_1AFE30B08(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4 = *(void *)(a2 + 16) >> 14;
  int v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1) {
    return v5 ^ 1u;
  }
  if (a1 >> 14 >= v4)
  {
    uint64_t v7 = sub_1AFFCB048();
    uint64_t v9 = v8;
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    unint64_t v14 = *(void **)(a4 + 16);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(a4 + 16) = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v14 = sub_1AFD3601C(0, v14[2] + 1, 1, v14);
      *(void *)(a4 + 16) = v14;
    }
    unint64_t v17 = v14[2];
    unint64_t v16 = v14[3];
    if (v17 >= v16 >> 1)
    {
      unint64_t v14 = sub_1AFD3601C((void *)(v16 > 1), v17 + 1, 1, v14);
      *(void *)(a4 + 16) = v14;
    }
    void v14[2] = v17 + 1;
    char v18 = &v14[4 * v17];
    v18[4] = v7;
    v18[5] = v9;
    v18[6] = v11;
    v18[7] = v13;
    return v5 ^ 1u;
  }
  uint64_t result = sub_1AFFCB998();
  __break(1u);
  return result;
}

void sub_1AFE30C64()
{
  if (!qword_1E9AFB308)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1E9AFB308);
    }
  }
}

uint64_t sub_1AFE30CCC(uint64_t a1, uint64_t a2)
{
  sub_1AFE30D4C(0, &qword_1EB817B30, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1AFE30D4C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, ValueMetadata *))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, &type metadata for Stock);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1AFE30D9C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_1AFFCBDF8();
  sub_1AFFC8E38();
  sub_1AFFCAF68();
  uint64_t v6 = sub_1AFFCBE38();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  uint64_t v10 = (void *)(v9 + 16 * v8);
  BOOL v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (sub_1AFFCBCE8() & 1) == 0)
  {
    uint64_t v15 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v15;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_18;
      }
      unint64_t v16 = (void *)(v9 + 16 * v8);
      BOOL v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (sub_1AFFCBCE8() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *v2;
  uint64_t v19 = *v2;
  *long long v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1AFE24E00();
    uint64_t v13 = v19;
  }
  uint64_t v14 = *(void *)(*(void *)(v13 + 48) + 16 * v8);
  sub_1AFE30F2C(v8);
  *long long v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

unint64_t sub_1AFE30F2C(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    sub_1AFFC8E48();
    uint64_t v8 = sub_1AFFCB748();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        sub_1AFFCBDF8();
        sub_1AFFC8E38();
        sub_1AFFCAF68();
        uint64_t v10 = sub_1AFFCBE38();
        swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(v3 + 48);
          uint64_t v13 = (_OWORD *)(v12 + 16 * v2);
          uint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v13 >= v14 + 1))
          {
            *uint64_t v13 = *v14;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v15 = *(void *)(v3 + 16);
  BOOL v16 = __OFSUB__(v15, 1);
  uint64_t v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_1AFE310F4(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_1AFFCBCE8() & 1;
  }
}

uint64_t sub_1AFE3114C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v11 = MEMORY[0x1E4FBC860];
    sub_1AFD9DA10(0, v1, 0);
    uint64_t v2 = v11;
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v9 = *(v4 - 1);
      uint64_t v10 = *v4;
      swift_bridgeObjectRetain_n();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFCAFA8();
      sub_1AFFC8E38();
      sub_1AFFCAFA8();
      swift_bridgeObjectRelease();
      sub_1AFFCAFA8();
      sub_1AFFC8E38();
      sub_1AFFCAFA8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      unint64_t v6 = *(void *)(v11 + 16);
      unint64_t v5 = *(void *)(v11 + 24);
      if (v6 >= v5 >> 1) {
        sub_1AFD9DA10(v5 > 1, v6 + 1, 1);
      }
      v4 += 2;
      *(void *)(v11 + 16) = v6 + 1;
      uint64_t v7 = v11 + 16 * v6;
      *(void *)(v7 + 32) = v9;
      *(void *)(v7 + 40) = v10;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1AFE312D0()
{
  return sub_1AFE2F4B4(v0[2], v0[3], v0[4], v0[5], v0[6], v0[7], v0[8], v0[9], v0[10], v0[11]);
}

uint64_t sub_1AFE31308@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1AFE2F99C(a1, v2, a2);
}

unint64_t sub_1AFE31324()
{
  unint64_t result = qword_1EB817E80;
  if (!qword_1EB817E80)
  {
    sub_1AFE31894(255, &qword_1EB817E78, (uint64_t)&type metadata for StockMetadataManager.CacheEntry, MEMORY[0x1E4FBAEA0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817E80);
  }
  return result;
}

uint64_t sub_1AFE313A0(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1AFE31444(void *a1)
{
  uint64_t v2 = *(void **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1]) {
    return 1;
  }
  else {
    return sub_1AFFCBCE8() & 1;
  }
}

uint64_t sub_1AFE3149C()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1AFE314D4()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1AFE314E4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  swift_bridgeObjectRelease();
  sub_1AFE313A0(v2, v3);
  return a1;
}

void sub_1AFE315AC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for StockMetadataManager.StoreDescriptor;
    v8[1] = &type metadata for StockMetadataManager.CacheEntry;
    void v8[2] = sub_1AFE30568();
    v8[3] = sub_1AFE305BC();
    v8[4] = sub_1AFE30610();
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1AFE31644()
{
  uint64_t v1 = sub_1AFFC98F8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = sub_1AFFC9E18();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return MEMORY[0x1F4186498](v0, v10, v11);
}

uint64_t sub_1AFE317AC(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_1AFFC98F8() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(sub_1AFFC9E18() - 8);
  uint64_t v7 = (void *)v1[2];
  uint64_t v8 = v1[3];
  uint64_t v9 = v1[4];
  uint64_t v10 = v1[5];
  uint64_t v11 = v1[6];
  uint64_t v12 = (uint64_t)v1 + ((v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return sub_1AFE2E588(a1, v7, v8, v9, v10, v11, (uint64_t)v1 + v4, v12);
}

uint64_t sub_1AFE3188C(uint64_t a1)
{
  return sub_1AFE2EE80(a1);
}

void sub_1AFE31894(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, void, uint64_t, void))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, MEMORY[0x1E4FBB1A0], a3, MEMORY[0x1E4FBB1B0]);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1AFE318F0()
{
  sub_1AFE315AC(0, &qword_1EB817DF0, MEMORY[0x1E4FAA650]);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1AFE3199C()
{
  return sub_1AFFCA958();
}

uint64_t sub_1AFE31A24()
{
  return sub_1AFE2F08C();
}

void sub_1AFE31A44()
{
  if (!qword_1EB817D80)
  {
    sub_1AFE31894(255, &qword_1EB817E78, (uint64_t)&type metadata for StockMetadataManager.CacheEntry, MEMORY[0x1E4FBAEA0]);
    unint64_t v0 = sub_1AFFCA788();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB817D80);
    }
  }
}

uint64_t sub_1AFE31AC0@<X0>(unint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1AFE2E958(a1, *(void **)(v2 + 16), a2);
}

unint64_t sub_1AFE31ADC()
{
  unint64_t result = qword_1EB817670;
  if (!qword_1EB817670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817670);
  }
  return result;
}

unint64_t sub_1AFE31B30()
{
  unint64_t result = qword_1EB817B28;
  if (!qword_1EB817B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817B28);
  }
  return result;
}

void sub_1AFE31B84(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1AFE31ADC();
    unint64_t v7 = a3(a1, &type metadata for StockMetadataManager.CacheEntry.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1AFE31BE8()
{
  unint64_t result = qword_1EB81B2C8;
  if (!qword_1EB81B2C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB81B2C8);
  }
  return result;
}

void *sub_1AFE31C3C(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_1AFE31CA0(uint64_t a1)
{
  sub_1AFE2DC08(0, &qword_1E9AFB2F8, (uint64_t (*)(uint64_t))sub_1AFD67340, MEMORY[0x1E4FBCDD8]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for StockMetadataManager.CacheEntry.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1AFE31DC8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for StockMetadataManager.CacheEntry.CodingKeys()
{
  return &type metadata for StockMetadataManager.CacheEntry.CodingKeys;
}

ValueMetadata *type metadata accessor for StockMetadataManager.CacheKey()
{
  return &type metadata for StockMetadataManager.CacheKey;
}

unint64_t sub_1AFE31E14()
{
  unint64_t result = qword_1E9AFB310;
  if (!qword_1E9AFB310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB310);
  }
  return result;
}

unint64_t sub_1AFE31E6C()
{
  unint64_t result = qword_1EB817680;
  if (!qword_1EB817680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817680);
  }
  return result;
}

unint64_t sub_1AFE31EC4()
{
  unint64_t result = qword_1EB817678;
  if (!qword_1EB817678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817678);
  }
  return result;
}

uint64_t type metadata accessor for Localized()
{
  return self;
}

void sub_1AFE31F40(void *a1)
{
  uint64_t v2 = v1;
  unsigned int v4 = (void *)sub_1AFFCAE68();
  uint64_t v5 = (void *)sub_1AFFCAE68();
  objc_msgSend(a1, sel_encodeObject_forKey_, v4, v5);

  unint64_t v6 = (void *)sub_1AFFC9838();
  unint64_t v7 = (void *)sub_1AFFCAE68();
  objc_msgSend(a1, sel_encodeObject_forKey_, v6, v7);

  uint64_t v8 = *(unsigned __int8 *)(v2 + OBJC_IVAR___SCUpdateAdsUserIDCommand_overwrite);
  id v9 = (id)sub_1AFFCAE68();
  objc_msgSend(a1, sel_encodeBool_forKey_, v8, v9);
}

id sub_1AFE320DC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  sub_1AFD2C83C();
  MEMORY[0x1F4188790](v5 - 8);
  unint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1AFFC98F8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = v2;
  uint64_t v13 = (void *)sub_1AFFCAE68();
  id v14 = objc_msgSend(a1, sel_decodeObjectForKey_, v13);

  if (v14)
  {
    sub_1AFFCB6F8();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v34 = 0u;
    long long v35 = 0u;
  }
  sub_1AFD3BCF4((uint64_t)&v34, (uint64_t)v36);
  if (!v37)
  {

    uint64_t v19 = sub_1AFD3BD58;
    uint64_t v20 = v36;
LABEL_16:
    sub_1AFD779F8((uint64_t)v20, (uint64_t (*)(void))v19);
    goto LABEL_17;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {

LABEL_17:
    swift_deallocPartialClassInstance();
    return 0;
  }
  uint64_t v15 = (objc_class *)ObjectType;
  uint64_t v29 = v32;
  uint64_t v30 = v9;
  uint64_t v16 = v33;
  uint64_t v17 = (void *)sub_1AFFCAE68();
  id v18 = objc_msgSend(a1, sel_decodeObjectForKey_, v17);

  if (v18)
  {
    sub_1AFFCB6F8();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v34 = 0u;
    long long v35 = 0u;
  }
  uint64_t v21 = v15;
  uint64_t v22 = v30;
  sub_1AFD3BCF4((uint64_t)&v34, (uint64_t)v36);
  if (!v37)
  {
    sub_1AFD779F8((uint64_t)v36, (uint64_t (*)(void))sub_1AFD3BD58);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v7, 1, 1, v8);
    goto LABEL_15;
  }
  int v23 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v7, v23 ^ 1u, 1, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v7, 1, v8) == 1)
  {
LABEL_15:

    swift_bridgeObjectRelease();
    uint64_t v19 = sub_1AFD2C83C;
    uint64_t v20 = v7;
    goto LABEL_16;
  }
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v11, v7, v8);
  uint64_t v24 = &v12[OBJC_IVAR___SCUpdateAdsUserIDCommand_userID];
  *(void *)uint64_t v24 = v29;
  *((void *)v24 + 1) = v16;
  (*(void (**)(char *, char *, uint64_t))(v22 + 16))(&v12[OBJC_IVAR___SCUpdateAdsUserIDCommand_userIDCreatedDate], v11, v8);
  uint64_t v25 = (void *)sub_1AFFCAE68();
  unsigned __int8 v26 = objc_msgSend(a1, sel_decodeBoolForKey_, v25);

  (*(void (**)(char *, uint64_t))(v22 + 8))(v11, v8);
  v12[OBJC_IVAR___SCUpdateAdsUserIDCommand_overwrite] = v26;

  v31.receiver = v12;
  v31.super_class = v21;
  id v27 = objc_msgSendSuper2(&v31, sel_init);

  return v27;
}

uint64_t sub_1AFE3263C()
{
  return type metadata accessor for UpdateAdsUserIDCommand();
}

uint64_t type metadata accessor for UpdateAdsUserIDCommand()
{
  uint64_t result = qword_1EB817760;
  if (!qword_1EB817760) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1AFE32690()
{
  uint64_t result = sub_1AFFC98F8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1AFE32734(void *a1, uint64_t a2)
{
  id v4 = objc_msgSend(a1, sel_encryptedValues);
  uint64_t v5 = (void *)sub_1AFFCAE68();
  id v6 = objc_msgSend(v4, sel_objectForKeyedSubscript_, v5);

  swift_unknownObjectRelease();
  if ((*(unsigned char *)(a2 + OBJC_IVAR___SCUpdateAdsUserIDCommand_overwrite) & 1) != 0 || !v6)
  {
    id v7 = objc_msgSend(a1, sel_encryptedValues);
    uint64_t v8 = (void *)sub_1AFFCAE68();
    uint64_t v9 = (void *)sub_1AFFCAE68();
    objc_msgSend(v7, sel_setObject_forKeyedSubscript_, v8, v9);
    swift_unknownObjectRelease();

    id v10 = objc_msgSend(a1, sel_encryptedValues);
    uint64_t v11 = (void *)sub_1AFFC9838();
    uint64_t v12 = (void *)sub_1AFFCAE68();
    objc_msgSend(v10, sel_setObject_forKeyedSubscript_, v11, v12);
    swift_unknownObjectRelease();
  }

  return swift_unknownObjectRelease();
}

uint64_t sub_1AFE32A34()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1AFE32A6C(void *a1)
{
  return sub_1AFE32734(a1, *(void *)(v1 + 16));
}

uint64_t type metadata accessor for NoFavoritesPersonalizer()
{
  return self;
}

uint64_t type metadata accessor for BlankAllowListProvider()
{
  return self;
}

uint64_t sub_1AFE32B48(void *a1, uint64_t a2)
{
  sub_1AFE33FD8(0, &qword_1E9AFB358, (uint64_t (*)(void))sub_1AFE33F84, (uint64_t)&type metadata for TestWatchlistService.TestData.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v10 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFE33F84();
  sub_1AFFCBE78();
  v10[1] = a2;
  sub_1AFE33C04(0, &qword_1EB817FE8, (uint64_t)&type metadata for Stock, MEMORY[0x1E4FBB320]);
  sub_1AFE34040(&qword_1E9AFB360, (void (*)(void))sub_1AFE31BE8);
  sub_1AFFCBC58();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1AFE32D1C()
{
  return 0x736B636F7473;
}

uint64_t sub_1AFE32D30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x736B636F7473 && a2 == 0xE600000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1AFFCBCE8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1AFE32DC0(uint64_t a1)
{
  unint64_t v2 = sub_1AFE33F84();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFE32DFC(uint64_t a1)
{
  unint64_t v2 = sub_1AFE33F84();

  return MEMORY[0x1F41862B0](a1, v2);
}

void *sub_1AFE32E38@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1AFE33D6C(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1AFE32E64(void *a1)
{
  return sub_1AFE32B48(a1, *v1);
}

uint64_t sub_1AFE32E80()
{
  sub_1AFE33BB0();
  sub_1AFFCA008();
  uint64_t v0 = (void *)sub_1AFFCA5E8();
  sub_1AFE33C04(0, &qword_1EB817FE8, (uint64_t)&type metadata for Stock, MEMORY[0x1E4FBB320]);
  uint64_t v1 = sub_1AFFCA678();
  swift_release();

  return v1;
}

uint64_t sub_1AFE32F38@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3 = a2;
  uint64_t v5 = *a1;
  uint64_t v6 = *(void *)(a2 + 40);
  uint64_t v7 = *(void *)(a2 + 48);
  int64_t v8 = *(void *)(*a1 + 16);
  if (v8)
  {
    uint64_t v20 = *(void *)(a2 + 40);
    uint64_t v22 = MEMORY[0x1E4FBC860];
    uint64_t v19 = *(void *)(a2 + 48);
    sub_1AFFC8E38();
    sub_1AFD9DA10(0, v8, 0);
    uint64_t v9 = v22;
    id v10 = (uint64_t *)(v5 + 56);
    do
    {
      uint64_t v12 = *(v10 - 1);
      uint64_t v11 = *v10;
      unint64_t v14 = *(void *)(v22 + 16);
      unint64_t v13 = *(void *)(v22 + 24);
      sub_1AFFC8E38();
      if (v14 >= v13 >> 1) {
        sub_1AFD9DA10(v13 > 1, v14 + 1, 1);
      }
      *(void *)(v22 + 16) = v14 + 1;
      uint64_t v15 = v22 + 16 * v14;
      *(void *)(v15 + 32) = v12;
      *(void *)(v15 + 40) = v11;
      v10 += 17;
      --v8;
    }
    while (v8);
    uint64_t v3 = a2;
    uint64_t v7 = v19;
    uint64_t v6 = v20;
  }
  else
  {
    sub_1AFFC8E38();
    uint64_t v9 = MEMORY[0x1E4FBC860];
  }
  uint64_t v17 = *(void *)(v3 + 24);
  uint64_t v16 = *(void *)(v3 + 32);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v7;
  *(void *)(a3 + 16) = v9;
  *(void *)(a3 + 24) = v17;
  *(void *)(a3 + 32) = v16;
  *(_WORD *)(a3 + 40) = 160;
  return sub_1AFFC8E38();
}

uint64_t sub_1AFE33064()
{
  sub_1AFE33C04(0, &qword_1EB818780, (uint64_t)&type metadata for Watchlist, MEMORY[0x1E4FAB088]);
  sub_1AFE33C04(0, (unint64_t *)&qword_1EB8183E0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1AFFD2CD0;
  sub_1AFE33C04(0, &qword_1EB817FE8, (uint64_t)&type metadata for Stock, MEMORY[0x1E4FBB320]);
  sub_1AFFCA7C8();
  sub_1AFFC8E48();
  uint64_t v1 = (void *)sub_1AFFCA5E8();
  uint64_t v2 = sub_1AFFCA678();
  swift_release();
  swift_release();

  *(void *)(v0 + 32) = v2;
  sub_1AFFCB1E8();
  uint64_t v3 = (void *)sub_1AFFCA5E8();
  sub_1AFE33C88();
  sub_1AFE33D04();
  uint64_t v4 = sub_1AFFCA648();
  swift_bridgeObjectRelease();

  return v4;
}

uint64_t sub_1AFE33214()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TestWatchlistService()
{
  return self;
}

void *sub_1AFE33280()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1AFFC9A78();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v3 = sub_1AFFCAE58();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = &v16[-v8];
  v16[31] = 0;
  sub_1AFE33FD8(0, (unint64_t *)&qword_1E9AFA4D8, (uint64_t (*)(void))sub_1AFDB3CEC, (uint64_t)&type metadata for StockTestDataLocator, MEMORY[0x1E4FAAA58]);
  swift_allocObject();
  v0[2] = sub_1AFFCA028();
  v0[3] = sub_1AFFCAE98();
  v0[4] = v10;
  sub_1AFFCADF8();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v4 + 16))(v6, v9, v3);
  if (qword_1EB819E80 != -1) {
    swift_once();
  }
  id v11 = (id)qword_1EB831AF8;
  sub_1AFFC9A28();
  uint64_t v12 = sub_1AFFCAEF8();
  uint64_t v14 = v13;
  (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v9, v3);
  v1[5] = v12;
  v1[6] = v14;
  return v1;
}

uint64_t sub_1AFE33514(uint64_t a1)
{
  long long v1 = *(_OWORD *)(a1 + 112);
  v6[6] = *(_OWORD *)(a1 + 96);
  v6[7] = v1;
  long long v2 = *(_OWORD *)(a1 + 48);
  v6[2] = *(_OWORD *)(a1 + 32);
  v6[3] = v2;
  long long v3 = *(_OWORD *)(a1 + 80);
  void v6[4] = *(_OWORD *)(a1 + 64);
  v6[5] = v3;
  long long v4 = *(_OWORD *)(a1 + 16);
  v6[0] = *(_OWORD *)a1;
  v6[1] = v4;
  uint64_t v7 = *(void *)(a1 + 128);
  sub_1AFE33C04(0, &qword_1E9AFA328, (uint64_t)&type metadata for Stock, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  sub_1AFD76370((uint64_t)v6);
  return sub_1AFFCA6F8();
}

uint64_t sub_1AFE335D8()
{
  return sub_1AFFCA6F8();
}

uint64_t sub_1AFE33650()
{
  return sub_1AFFCA6F8();
}

uint64_t sub_1AFE336A4()
{
  sub_1AFE33BB0();
  sub_1AFFCA008();
  uint64_t v0 = (void *)sub_1AFFCA5E8();
  sub_1AFE33C04(0, &qword_1EB817FE8, (uint64_t)&type metadata for Stock, MEMORY[0x1E4FBB320]);
  uint64_t v1 = sub_1AFFCA678();
  swift_release();

  return v1;
}

uint64_t sub_1AFE3375C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1AFFC9938();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFFC8E38();
  sub_1AFFC8978();
  uint64_t v8 = sub_1AFFC9918();
  uint64_t v10 = v9;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v12[0] = a1;
  v12[1] = a2;
  void v12[2] = MEMORY[0x1E4FBC860];
  v12[3] = v8;
  void v12[4] = v10;
  __int16 v13 = 160;
  sub_1AFE33C04(0, &qword_1EB818780, (uint64_t)&type metadata for Watchlist, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1AFFCA6F8();
}

uint64_t sub_1AFE338B0()
{
  return sub_1AFFCA6F8();
}

uint64_t sub_1AFE3395C()
{
  return sub_1AFE33064();
}

uint64_t sub_1AFE33980()
{
  sub_1AFE33BB0();
  sub_1AFFCA008();
  uint64_t v0 = (void *)sub_1AFFCA5E8();
  sub_1AFE33C04(0, &qword_1EB817FE8, (uint64_t)&type metadata for Stock, MEMORY[0x1E4FBB320]);
  uint64_t v1 = sub_1AFFCA678();
  swift_release();

  return v1;
}

uint64_t sub_1AFE33A34()
{
  return sub_1AFFCA6F8();
}

uint64_t sub_1AFE33A94()
{
  uint64_t v1 = *v0;
  sub_1AFE33C04(0, (unint64_t *)&qword_1EB81A0E0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1AFFD05F0;
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = *(void *)(v1 + 32);
  *(void *)(v2 + 32) = v3;
  *(void *)(v2 + 40) = v4;
  sub_1AFE33B34();
  swift_allocObject();
  sub_1AFFC8E38();
  return sub_1AFFCA6F8();
}

void sub_1AFE33B34()
{
  if (!qword_1EB817DC0)
  {
    sub_1AFE33C04(255, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    unint64_t v0 = sub_1AFFCA788();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB817DC0);
    }
  }
}

unint64_t sub_1AFE33BB0()
{
  unint64_t result = qword_1E9AFB328;
  if (!qword_1E9AFB328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB328);
  }
  return result;
}

void sub_1AFE33C04(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1AFE33C50()
{
  return sub_1AFE32E80();
}

uint64_t sub_1AFE33C6C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1AFE32F38(a1, v2, a2);
}

void sub_1AFE33C88()
{
  if (!qword_1E9AFB330)
  {
    sub_1AFE33C04(255, &qword_1EB818780, (uint64_t)&type metadata for Watchlist, MEMORY[0x1E4FAB088]);
    unint64_t v0 = sub_1AFFCB288();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9AFB330);
    }
  }
}

unint64_t sub_1AFE33D04()
{
  unint64_t result = qword_1E9AFB338;
  if (!qword_1E9AFB338)
  {
    sub_1AFE33C88();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB338);
  }
  return result;
}

ValueMetadata *type metadata accessor for TestWatchlistService.TestData()
{
  return &type metadata for TestWatchlistService.TestData;
}

void *sub_1AFE33D6C(void *a1)
{
  sub_1AFE33FD8(0, &qword_1E9AFB340, (uint64_t (*)(void))sub_1AFE33F84, (uint64_t)&type metadata for TestWatchlistService.TestData.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v11 - v6;
  uint64_t v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFE33F84();
  uint64_t v9 = v8;
  sub_1AFFCBE68();
  if (!v1)
  {
    sub_1AFE33C04(0, &qword_1EB817FE8, (uint64_t)&type metadata for Stock, MEMORY[0x1E4FBB320]);
    sub_1AFE34040(&qword_1E9AFB350, (void (*)(void))sub_1AFE31B30);
    sub_1AFFCBB58();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v9 = (void *)v11[1];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v9;
}

unint64_t sub_1AFE33F84()
{
  unint64_t result = qword_1E9AFB348;
  if (!qword_1E9AFB348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB348);
  }
  return result;
}

void sub_1AFE33FD8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1AFE34040(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1AFE33C04(255, &qword_1EB817FE8, (uint64_t)&type metadata for Stock, MEMORY[0x1E4FBB320]);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TestWatchlistService.TestData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1AFE3416CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for TestWatchlistService.TestData.CodingKeys()
{
  return &type metadata for TestWatchlistService.TestData.CodingKeys;
}

unint64_t sub_1AFE341A8()
{
  unint64_t result = qword_1E9AFB368;
  if (!qword_1E9AFB368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB368);
  }
  return result;
}

unint64_t sub_1AFE34200()
{
  unint64_t result = qword_1E9AFB370;
  if (!qword_1E9AFB370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB370);
  }
  return result;
}

unint64_t sub_1AFE34258()
{
  unint64_t result = qword_1E9AFB378;
  if (!qword_1E9AFB378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB378);
  }
  return result;
}

uint64_t sub_1AFE342AC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1AFD2AE20(a1, a2);
}

_OWORD *sub_1AFE342C4@<X0>(_OWORD *result@<X0>, long long *a2@<X1>, _OWORD *a3@<X2>, long long *a4@<X3>, _OWORD *a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10, double a11, char a12, uint64_t a13, char a14, uint64_t a15, char a16, uint64_t a17, unint64_t a18, uint64_t a19, unint64_t a20,uint64_t a21,unint64_t a22,uint64_t a23,unint64_t a24,uint64_t a25,unint64_t a26,uint64_t a27,unint64_t a28)
{
  unint64_t v31 = a26;
  unint64_t v33 = a22;
  unint64_t v35 = a20;
  unint64_t v36 = a18;
  if (a7) {
    uint64_t v37 = a6;
  }
  else {
    uint64_t v37 = 0;
  }
  unint64_t v38 = 0xE000000000000000;
  if (a7) {
    unint64_t v38 = a7;
  }
  uint64_t v39 = 0x46464646464623;
  if (a18) {
    uint64_t v40 = a17;
  }
  else {
    uint64_t v40 = 0x46464646464623;
  }
  unint64_t v41 = 0xE700000000000000;
  if (!a18) {
    unint64_t v36 = 0xE700000000000000;
  }
  if (!a20)
  {
    a19 = 0x30303030303023;
    unint64_t v35 = 0xE700000000000000;
  }
  if (!a22)
  {
    a21 = 0x46464646464623;
    unint64_t v33 = 0xE700000000000000;
  }
  if (a24) {
    uint64_t v42 = a23;
  }
  else {
    uint64_t v42 = 0x46464646464623;
  }
  if (a24) {
    unint64_t v43 = a24;
  }
  else {
    unint64_t v43 = 0xE700000000000000;
  }
  if (!a26)
  {
    a25 = 0x46464646464623;
    unint64_t v31 = 0xE700000000000000;
  }
  if (a28)
  {
    uint64_t v39 = a27;
    unint64_t v41 = a28;
  }
  if (a16) {
    a15 = 0;
  }
  if (a14) {
    a13 = 0;
  }
  if (a12) {
    a11 = 0.0;
  }
  long long v45 = result[1];
  uint64_t v46 = a8;
  if (a10) {
    uint64_t v46 = 0;
  }
  *(_OWORD *)a9 = *result;
  *(_OWORD *)(a9 + 16) = v45;
  long long v47 = *a2;
  long long v48 = a2[1];
  *(_OWORD *)(a9 + 32) = result[2];
  *(_OWORD *)(a9 + 48) = v47;
  long long v49 = a2[2];
  *(_OWORD *)(a9 + 64) = v48;
  *(_OWORD *)(a9 + 80) = v49;
  long long v50 = a3[1];
  *(_OWORD *)(a9 + 96) = *a3;
  *(_OWORD *)(a9 + 112) = v50;
  long long v51 = *a4;
  long long v52 = a4[1];
  *(_OWORD *)(a9 + 128) = a3[2];
  *(_OWORD *)(a9 + 144) = v51;
  long long v53 = a4[2];
  *(_OWORD *)(a9 + 160) = v52;
  *(_OWORD *)(a9 + 176) = v53;
  long long v54 = a5[1];
  *(_OWORD *)(a9 + 192) = *a5;
  *(_OWORD *)(a9 + 208) = v54;
  *(void *)(a9 + 224) = v37;
  *(void *)(a9 + 232) = v38;
  *(void *)(a9 + 240) = v46;
  *(double *)(a9 + 248) = a11;
  *(void *)(a9 + 256) = a13;
  *(void *)(a9 + 264) = a15;
  *(void *)(a9 + 272) = v40;
  *(void *)(a9 + 280) = v36;
  *(void *)(a9 + 288) = a19;
  *(void *)(a9 + 296) = v35;
  *(void *)(a9 + 304) = a21;
  *(void *)(a9 + 312) = v33;
  *(void *)(a9 + 320) = v42;
  *(void *)(a9 + 328) = v43;
  *(void *)(a9 + 336) = a25;
  *(void *)(a9 + 344) = v31;
  *(void *)(a9 + 352) = v39;
  *(void *)(a9 + 360) = v41;
  return result;
}

uint64_t sub_1AFE34444(char a1)
{
  uint64_t result = 0x616D496567646162;
  switch(a1)
  {
    case 1:
    case 9:
      uint64_t result = 0xD000000000000013;
      break;
    case 2:
      uint64_t result = 0x6567616D69;
      break;
    case 3:
      uint64_t result = 0x74616E7265746C61;
      break;
    case 4:
      uint64_t result = 0x6F65646976;
      break;
    case 5:
      uint64_t result = 0x4C52556F65646976;
      break;
    case 6:
      uint64_t result = 0x6469576F65646976;
      break;
    case 7:
      uint64_t result = 0xD000000000000015;
      break;
    case 8:
      uint64_t result = 0x50706F5474786574;
      break;
    case 10:
      uint64_t result = 0x756F72676B636162;
      break;
    case 11:
      uint64_t result = 0xD000000000000018;
      break;
    case 12:
      uint64_t result = 0x646165687473616DLL;
      break;
    case 13:
      uint64_t v3 = 0x54656772616CLL;
      goto LABEL_16;
    case 14:
      uint64_t v3 = 0x546C6C616D73;
LABEL_16:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x7865000000000000;
      break;
    case 15:
      uint64_t result = 0x655473726566666FLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1AFE34664(char a1)
{
  uint64_t result = 0x616D496567646162;
  switch(a1)
  {
    case 1:
    case 9:
      uint64_t result = 0xD000000000000013;
      break;
    case 2:
      uint64_t result = 0x6567616D69;
      break;
    case 3:
      uint64_t result = 0x74616E7265746C61;
      break;
    case 4:
      uint64_t result = 0x6F65646976;
      break;
    case 5:
      uint64_t result = 0x4C52556F65646976;
      break;
    case 6:
      uint64_t result = 0x6469576F65646976;
      break;
    case 7:
      uint64_t result = 0xD000000000000015;
      break;
    case 8:
      uint64_t result = 0x50706F5474786574;
      break;
    case 10:
      uint64_t result = 0x756F72676B636162;
      break;
    case 11:
      uint64_t result = 0xD000000000000018;
      break;
    case 12:
      uint64_t result = 0x646165687473616DLL;
      break;
    case 13:
      uint64_t v3 = 0x54656772616CLL;
      goto LABEL_16;
    case 14:
      uint64_t v3 = 0x546C6C616D73;
LABEL_16:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x7865000000000000;
      break;
    case 15:
      uint64_t result = 0x655473726566666FLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1AFE34884(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = sub_1AFE34444(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1AFE34444(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1AFFCBCE8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1AFE34910()
{
  char v1 = *v0;
  sub_1AFFCBDF8();
  sub_1AFE34444(v1);
  sub_1AFFCAF68();
  swift_bridgeObjectRelease();
  return sub_1AFFCBE38();
}

uint64_t sub_1AFE34974()
{
  sub_1AFE34444(*v0);
  sub_1AFFCAF68();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFE349C8()
{
  char v1 = *v0;
  sub_1AFFCBDF8();
  sub_1AFE34444(v1);
  sub_1AFFCAF68();
  swift_bridgeObjectRelease();
  return sub_1AFFCBE38();
}

uint64_t sub_1AFE34A28@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFE386DC();
  *a1 = result;
  return result;
}

uint64_t sub_1AFE34A58@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1AFE34444(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1AFE34A84()
{
  return sub_1AFE34664(*v0);
}

uint64_t sub_1AFE34A8C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFE386DC();
  *a1 = result;
  return result;
}

uint64_t sub_1AFE34AB4(uint64_t a1)
{
  unint64_t v2 = sub_1AFE36520();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFE34AF0(uint64_t a1)
{
  unint64_t v2 = sub_1AFE36520();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFE34B2C@<X0>(void *a1@<X0>, double *a2@<X8>)
{
  sub_1AFE37798(0, &qword_1EB819F78, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v132 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFE36520();
  sub_1AFFCBE68();
  if (!v2)
  {
    char v192 = (void *)MEMORY[0x1E4FBC860];
    char v191 = 0;
    sub_1AFE36574();
    sub_1AFFCBAF8();
    uint64_t v177 = a2;
    uint64_t v178 = v185;
    uint64_t v10 = v189;
    uint64_t v180 = v187;
    uint64_t v181 = v188;
    uint64_t v11 = *(void *)&v190;
    uint64_t v179 = v186;
    if (v186)
    {
      unint64_t v182 = (void *)MEMORY[0x1E4FBC860];
    }
    else
    {
      uint64_t v176 = v7;
      uint64_t v12 = v189;
      swift_beginAccess();
      unint64_t v182 = v192;
      uint64_t v13 = v11;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v182 = sub_1AFD352FC(0, v182[2] + 1, 1, v182);
      }
      unint64_t v15 = v182[2];
      unint64_t v14 = v182[3];
      if (v15 >= v14 >> 1) {
        unint64_t v182 = sub_1AFD352FC((void *)(v14 > 1), v15 + 1, 1, v182);
      }
      uint64_t v16 = v182;
      v182[2] = v15 + 1;
      uint64_t v17 = &v16[2 * v15];
      v17[4] = 0x616D496567646162;
      v17[5] = 0xEA00000000006567;
      char v192 = v16;
      swift_endAccess();
      uint64_t v11 = v13;
      uint64_t v10 = v12;
      uint64_t v7 = v176;
    }
    char v191 = 1;
    sub_1AFFCBAF8();
    uint64_t v170 = v185;
    uint64_t v172 = v187;
    uint64_t v173 = v188;
    uint64_t v174 = v189;
    double v175 = v190;
    uint64_t v171 = v186;
    if (!v186)
    {
      swift_beginAccess();
      unint64_t v182 = v192;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v169 = v11;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        unint64_t v182 = sub_1AFD352FC(0, v182[2] + 1, 1, v182);
      }
      unint64_t v20 = v182[2];
      unint64_t v19 = v182[3];
      if (v20 >= v19 >> 1) {
        unint64_t v182 = sub_1AFD352FC((void *)(v19 > 1), v20 + 1, 1, v182);
      }
      uint64_t v21 = v182;
      v182[2] = v20 + 1;
      uint64_t v22 = &v21[2 * v20];
      v22[4] = 0xD000000000000013;
      v22[5] = 0x80000001AFFECB30;
      char v192 = v21;
      swift_endAccess();
      uint64_t v11 = v169;
    }
    char v191 = 2;
    sub_1AFFCBAF8();
    uint64_t v163 = v185;
    uint64_t v165 = v187;
    uint64_t v166 = v188;
    uint64_t v167 = v189;
    double v168 = v190;
    uint64_t v164 = v186;
    if (!v186)
    {
      uint64_t v176 = v7;
      uint64_t v23 = v10;
      swift_beginAccess();
      unint64_t v182 = v192;
      uint64_t v24 = v11;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v182 = sub_1AFD352FC(0, v182[2] + 1, 1, v182);
      }
      unint64_t v26 = v182[2];
      unint64_t v25 = v182[3];
      if (v26 >= v25 >> 1) {
        unint64_t v182 = sub_1AFD352FC((void *)(v25 > 1), v26 + 1, 1, v182);
      }
      id v27 = v182;
      v182[2] = v26 + 1;
      long long v28 = &v27[2 * v26];
      v28[4] = 0x6567616D69;
      v28[5] = 0xE500000000000000;
      char v192 = v27;
      swift_endAccess();
      uint64_t v11 = v24;
      uint64_t v10 = v23;
      uint64_t v7 = v176;
    }
    char v191 = 3;
    sub_1AFFCBAF8();
    uint64_t v159 = v185;
    uint64_t v161 = v187;
    uint64_t v162 = v188;
    double v29 = v190;
    uint64_t v176 = v189;
    uint64_t v160 = v186;
    if (!v186)
    {
      double v158 = v190;
      swift_beginAccess();
      unint64_t v182 = v192;
      uint64_t v30 = v11;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v182 = sub_1AFD352FC(0, v182[2] + 1, 1, v182);
      }
      unint64_t v32 = v182[2];
      unint64_t v31 = v182[3];
      if (v32 >= v31 >> 1) {
        unint64_t v182 = sub_1AFD352FC((void *)(v31 > 1), v32 + 1, 1, v182);
      }
      unint64_t v33 = v182;
      v182[2] = v32 + 1;
      long long v34 = (char *)&v33[2 * v32];
      strcpy(v34 + 32, "alternateImage");
      v34[47] = -18;
      char v192 = v33;
      swift_endAccess();
      uint64_t v11 = v30;
      double v29 = v158;
    }
    char v191 = 4;
    sub_1AFE36CEC();
    sub_1AFFCBAF8();
    uint64_t v154 = v185;
    uint64_t v156 = v187;
    uint64_t v157 = v188;
    uint64_t v155 = v186;
    if (!v186)
    {
      double v158 = v29;
      swift_beginAccess();
      unint64_t v182 = v192;
      uint64_t v35 = v11;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v182 = sub_1AFD352FC(0, v182[2] + 1, 1, v182);
      }
      unint64_t v37 = v182[2];
      unint64_t v36 = v182[3];
      if (v37 >= v36 >> 1) {
        unint64_t v182 = sub_1AFD352FC((void *)(v36 > 1), v37 + 1, 1, v182);
      }
      unint64_t v38 = v182;
      v182[2] = v37 + 1;
      uint64_t v39 = &v38[2 * v37];
      v39[4] = 0x6F65646976;
      v39[5] = 0xE500000000000000;
      char v192 = v38;
      swift_endAccess();
      uint64_t v11 = v35;
      double v29 = v158;
    }
    char v191 = 5;
    sub_1AFFCBAF8();
    unint64_t v152 = *(void *)&v183;
    unint64_t v153 = v184;
    if (!v184)
    {
      double v158 = v29;
      swift_beginAccess();
      unint64_t v182 = v192;
      uint64_t v40 = v11;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v182 = sub_1AFD352FC(0, v182[2] + 1, 1, v182);
      }
      unint64_t v42 = v182[2];
      unint64_t v41 = v182[3];
      if (v42 >= v41 >> 1) {
        unint64_t v182 = sub_1AFD352FC((void *)(v41 > 1), v42 + 1, 1, v182);
      }
      unint64_t v43 = v182;
      v182[2] = v42 + 1;
      uint64_t v44 = &v43[2 * v42];
      v44[4] = 0x4C52556F65646976;
      v44[5] = 0xE800000000000000;
      char v192 = v43;
      swift_endAccess();
      uint64_t v11 = v40;
      double v29 = v158;
    }
    char v191 = 6;
    sub_1AFFCBAF8();
    double v151 = v183;
    int v150 = v184;
    if (v184)
    {
      double v158 = v29;
      swift_beginAccess();
      unint64_t v182 = v192;
      uint64_t v45 = v11;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v182 = sub_1AFD352FC(0, v182[2] + 1, 1, v182);
      }
      unint64_t v47 = v182[2];
      unint64_t v46 = v182[3];
      if (v47 >= v46 >> 1) {
        unint64_t v182 = sub_1AFD352FC((void *)(v46 > 1), v47 + 1, 1, v182);
      }
      long long v48 = v182;
      v182[2] = v47 + 1;
      long long v49 = &v48[2 * v47];
      v49[4] = 0x6469576F65646976;
      v49[5] = 0xEA00000000006874;
      char v192 = v48;
      swift_endAccess();
      uint64_t v11 = v45;
      double v29 = v158;
    }
    char v191 = 7;
    sub_1AFFCBAF8();
    double v50 = v183;
    int v149 = v184;
    if (v184)
    {
      double v158 = v29;
      uint64_t v51 = v11;
      swift_beginAccess();
      unint64_t v182 = v192;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v182 = sub_1AFD352FC(0, v182[2] + 1, 1, v182);
      }
      unint64_t v53 = v182[2];
      unint64_t v52 = v182[3];
      if (v53 >= v52 >> 1) {
        unint64_t v182 = sub_1AFD352FC((void *)(v52 > 1), v53 + 1, 1, v182);
      }
      long long v54 = v182;
      v182[2] = v53 + 1;
      int64_t v55 = &v54[2 * v53];
      v55[4] = 0xD000000000000015;
      v55[5] = 0x80000001AFFECB80;
      char v192 = v54;
      swift_endAccess();
      uint64_t v11 = v51;
      double v29 = v158;
    }
    char v191 = 8;
    sub_1AFFCBAF8();
    uint64_t v169 = v11;
    double v158 = v183;
    int v148 = v184;
    if (v184)
    {
      swift_beginAccess();
      unint64_t v182 = v192;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v182 = sub_1AFD352FC(0, v182[2] + 1, 1, v182);
      }
      unint64_t v58 = v182[2];
      unint64_t v57 = v182[3];
      if (v58 >= v57 >> 1) {
        unint64_t v182 = sub_1AFD352FC((void *)(v57 > 1), v58 + 1, 1, v182);
      }
      uint64_t v59 = v182;
      v182[2] = v58 + 1;
      char v60 = (char *)&v59[2 * v58];
      strcpy(v60 + 32, "textTopPadding");
      v60[47] = -18;
      char v192 = v59;
      swift_endAccess();
    }
    char v191 = 9;
    sub_1AFFCBAF8();
    double v147 = v183;
    int v146 = v184;
    if (v184)
    {
      swift_beginAccess();
      unint64_t v182 = v192;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v182 = sub_1AFD352FC(0, v182[2] + 1, 1, v182);
      }
      unint64_t v62 = v182[2];
      unint64_t v61 = v182[3];
      if (v62 >= v61 >> 1) {
        unint64_t v182 = sub_1AFD352FC((void *)(v61 > 1), v62 + 1, 1, v182);
      }
      uint64_t v63 = v182;
      v182[2] = v62 + 1;
      long long v64 = &v63[2 * v62];
      v64[4] = 0xD000000000000013;
      v64[5] = 0x80000001AFFECBB0;
      char v192 = v63;
      swift_endAccess();
    }
    char v191 = 10;
    sub_1AFFCBAF8();
    unint64_t v144 = *(void *)&v183;
    unint64_t v145 = v184;
    if (!v184)
    {
      swift_beginAccess();
      unint64_t v182 = v192;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v182 = sub_1AFD352FC(0, v182[2] + 1, 1, v182);
      }
      unint64_t v66 = v182[2];
      unint64_t v65 = v182[3];
      if (v66 >= v65 >> 1) {
        unint64_t v182 = sub_1AFD352FC((void *)(v65 > 1), v66 + 1, 1, v182);
      }
      long long v67 = v182;
      v182[2] = v66 + 1;
      long long v68 = &v67[2 * v66];
      v68[4] = 0x756F72676B636162;
      v68[5] = 0xEF726F6C6F43646ELL;
      char v192 = v67;
      swift_endAccess();
    }
    char v191 = 11;
    sub_1AFFCBAF8();
    unint64_t v142 = *(void *)&v183;
    unint64_t v143 = v184;
    if (!v184)
    {
      swift_beginAccess();
      unint64_t v182 = v192;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v182 = sub_1AFD352FC(0, v182[2] + 1, 1, v182);
      }
      unint64_t v70 = v182[2];
      unint64_t v69 = v182[3];
      if (v70 >= v69 >> 1) {
        unint64_t v182 = sub_1AFD352FC((void *)(v69 > 1), v70 + 1, 1, v182);
      }
      long long v71 = v182;
      v182[2] = v70 + 1;
      uint64_t v72 = &v71[2 * v70];
      v72[4] = 0xD000000000000018;
      v72[5] = 0x80000001AFFECBE0;
      char v192 = v71;
      swift_endAccess();
    }
    char v191 = 12;
    sub_1AFFCBAF8();
    unint64_t v140 = *(void *)&v183;
    unint64_t v141 = v184;
    if (!v184)
    {
      swift_beginAccess();
      unint64_t v182 = v192;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v182 = sub_1AFD352FC(0, v182[2] + 1, 1, v182);
      }
      unint64_t v74 = v182[2];
      unint64_t v73 = v182[3];
      if (v74 >= v73 >> 1) {
        unint64_t v182 = sub_1AFD352FC((void *)(v73 > 1), v74 + 1, 1, v182);
      }
      long long v75 = v182;
      v182[2] = v74 + 1;
      long long v76 = (char *)&v75[2 * v74];
      strcpy(v76 + 32, "mastheadColor");
      *((_WORD *)v76 + 23) = -4864;
      char v192 = v75;
      swift_endAccess();
    }
    char v191 = 13;
    sub_1AFFCBAF8();
    unint64_t v138 = *(void *)&v183;
    unint64_t v139 = v184;
    if (!v184)
    {
      swift_beginAccess();
      unint64_t v182 = v192;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v182 = sub_1AFD352FC(0, v182[2] + 1, 1, v182);
      }
      unint64_t v78 = v182[2];
      unint64_t v77 = v182[3];
      if (v78 >= v77 >> 1) {
        unint64_t v182 = sub_1AFD352FC((void *)(v77 > 1), v78 + 1, 1, v182);
      }
      long long v79 = v182;
      v182[2] = v78 + 1;
      long long v80 = (char *)&v79[2 * v78];
      strcpy(v80 + 32, "largeTextColor");
      v80[47] = -18;
      char v192 = v79;
      swift_endAccess();
    }
    char v191 = 14;
    sub_1AFFCBAF8();
    uint64_t v136 = *(void *)&v183;
    unint64_t v137 = v184;
    if (!v184)
    {
      swift_beginAccess();
      unint64_t v182 = v192;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v182 = sub_1AFD352FC(0, v182[2] + 1, 1, v182);
      }
      unint64_t v82 = v182[2];
      unint64_t v81 = v182[3];
      if (v82 >= v81 >> 1) {
        unint64_t v182 = sub_1AFD352FC((void *)(v81 > 1), v82 + 1, 1, v182);
      }
      uint64_t v83 = v182;
      v182[2] = v82 + 1;
      uint64_t v84 = (char *)&v83[2 * v82];
      strcpy(v84 + 32, "smallTextColor");
      v84[47] = -18;
      char v192 = v83;
      swift_endAccess();
    }
    char v191 = 15;
    sub_1AFFCBAF8();
    unint64_t v85 = v184;
    if (v184)
    {
      int64_t v86 = *(void *)&v183;
    }
    else
    {
      swift_beginAccess();
      unint64_t v182 = v192;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v182 = sub_1AFD352FC(0, v182[2] + 1, 1, v182);
      }
      unint64_t v88 = v182[2];
      unint64_t v87 = v182[3];
      unint64_t v135 = v88 + 1;
      if (v88 >= v87 >> 1) {
        unint64_t v182 = sub_1AFD352FC((void *)(v87 > 1), v135, 1, v182);
      }
      uint64_t v89 = v182;
      v182[2] = v135;
      long long v90 = &v89[2 * v88];
      v90[4] = 0x655473726566666FLL;
      v90[5] = 0xEF726F6C6F437478;
      char v192 = v89;
      swift_endAccess();
      int64_t v86 = 0x46464646464623;
    }
    unint64_t v135 = v86;
    unint64_t v91 = v152;
    if (!v153) {
      unint64_t v91 = 0;
    }
    unint64_t v134 = v91;
    unint64_t v92 = 0xE000000000000000;
    if (v153) {
      unint64_t v92 = v153;
    }
    unint64_t v133 = v92;
    unint64_t v93 = v145;
    uint64_t v94 = v144;
    if (!v145) {
      uint64_t v94 = 0x46464646464623;
    }
    unint64_t v153 = v94;
    unint64_t v95 = 0xE700000000000000;
    if (!v145) {
      unint64_t v93 = 0xE700000000000000;
    }
    unint64_t v152 = v93;
    uint64_t v96 = 0x30303030303023;
    if (v143) {
      uint64_t v96 = v142;
    }
    unint64_t v145 = v96;
    if (v143) {
      unint64_t v97 = v143;
    }
    else {
      unint64_t v97 = 0xE700000000000000;
    }
    unint64_t v144 = v97;
    unint64_t v98 = v141;
    uint64_t v99 = v140;
    if (!v141) {
      uint64_t v99 = 0x46464646464623;
    }
    unint64_t v143 = v99;
    if (!v141) {
      unint64_t v98 = 0xE700000000000000;
    }
    unint64_t v142 = v98;
    unint64_t v100 = v139;
    uint64_t v101 = v138;
    if (!v139) {
      uint64_t v101 = 0x46464646464623;
    }
    unint64_t v141 = v101;
    if (!v139) {
      unint64_t v100 = 0xE700000000000000;
    }
    unint64_t v140 = v100;
    unint64_t v102 = v137;
    uint64_t v103 = v136;
    if (!v137) {
      uint64_t v103 = 0x46464646464623;
    }
    unint64_t v139 = v103;
    if (!v137) {
      unint64_t v102 = 0xE700000000000000;
    }
    unint64_t v138 = v102;
    if (v85) {
      unint64_t v95 = v85;
    }
    unint64_t v137 = v95;
    double v104 = v147;
    if (v146) {
      double v104 = 0.0;
    }
    double v147 = v104;
    double v105 = v158;
    if (v148) {
      double v105 = 0.0;
    }
    double v158 = v105;
    if (v149) {
      double v50 = 0.0;
    }
    double v106 = v151;
    if (v150) {
      double v106 = 0.0;
    }
    double v151 = v106;
    if (v182[2])
    {
      sub_1AFD2CD48();
      uint64_t v107 = swift_allocObject();
      *(_OWORD *)(v107 + 16) = xmmword_1AFFD05F0;
      sub_1AFD3ABD0();
      *(void *)(v107 + 56) = v108;
      *(void *)(v107 + 64) = sub_1AFD5CDA0();
      *(void *)(v107 + 32) = v182;
      sub_1AFD2C4F4();
      sub_1AFFC8E38();
      uint64_t v109 = (void *)sub_1AFFCB638();
      sub_1AFFCB478();
      sub_1AFFCA878();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AFD2C4F4();
      uint64_t v109 = (void *)sub_1AFFCB638();
      sub_1AFFCB478();
      sub_1AFFCA878();
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_bridgeObjectRelease();
    long long v110 = v177;
    uint64_t v111 = v179;
    *(void *)uint64_t v177 = v178;
    *((void *)v110 + 1) = v111;
    uint64_t v112 = v181;
    *((void *)v110 + 2) = v180;
    *((void *)v110 + 3) = v112;
    uint64_t v113 = v169;
    *((void *)v110 + 4) = v10;
    *((void *)v110 + 5) = v113;
    uint64_t v114 = v171;
    *((void *)v110 + 6) = v170;
    *((void *)v110 + 7) = v114;
    uint64_t v115 = v173;
    *((void *)v110 + 8) = v172;
    *((void *)v110 + 9) = v115;
    double v116 = v175;
    *((void *)v110 + 10) = v174;
    v110[11] = v116;
    uint64_t v117 = v164;
    *((void *)v110 + 12) = v163;
    *((void *)v110 + 13) = v117;
    uint64_t v118 = v166;
    *((void *)v110 + 14) = v165;
    *((void *)v110 + 15) = v118;
    double v119 = v168;
    *((void *)v110 + 16) = v167;
    v110[17] = v119;
    uint64_t v120 = v160;
    *((void *)v110 + 18) = v159;
    *((void *)v110 + 19) = v120;
    uint64_t v121 = v162;
    *((void *)v110 + 20) = v161;
    *((void *)v110 + 21) = v121;
    *((void *)v110 + 22) = v176;
    v110[23] = v29;
    uint64_t v122 = v155;
    *((void *)v110 + 24) = v154;
    *((void *)v110 + 25) = v122;
    uint64_t v123 = v157;
    *((void *)v110 + 26) = v156;
    *((void *)v110 + 27) = v123;
    unint64_t v124 = v133;
    *((void *)v110 + 28) = v134;
    *((void *)v110 + 29) = v124;
    v110[30] = v151;
    v110[31] = v50;
    double v125 = v147;
    v110[32] = v158;
    v110[33] = v125;
    unint64_t v126 = v152;
    *((void *)v110 + 34) = v153;
    *((void *)v110 + 35) = v126;
    unint64_t v127 = v144;
    *((void *)v110 + 36) = v145;
    *((void *)v110 + 37) = v127;
    unint64_t v128 = v142;
    *((void *)v110 + 38) = v143;
    *((void *)v110 + 39) = v128;
    unint64_t v129 = v140;
    *((void *)v110 + 40) = v141;
    *((void *)v110 + 41) = v129;
    unint64_t v130 = v138;
    *((void *)v110 + 42) = v139;
    *((void *)v110 + 43) = v130;
    unint64_t v131 = v137;
    *((void *)v110 + 44) = v135;
    *((void *)v110 + 45) = v131;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1AFE36520()
{
  unint64_t result = qword_1EB819178;
  if (!qword_1EB819178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819178);
  }
  return result;
}

unint64_t sub_1AFE36574()
{
  unint64_t result = qword_1EB8193C8;
  if (!qword_1EB8193C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8193C8);
  }
  return result;
}

uint64_t sub_1AFE365CC(void *a1)
{
  sub_1AFE37798(0, &qword_1EB81A030, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v21 - v6;
  long long v8 = *v1;
  long long v40 = v1[1];
  long long v41 = v8;
  uint64_t v10 = *((void *)v1 + 4);
  uint64_t v9 = *((void *)v1 + 5);
  uint64_t v11 = *((void *)v1 + 6);
  uint64_t v38 = *((void *)v1 + 7);
  uint64_t v39 = v11;
  uint64_t v12 = *((void *)v1 + 8);
  uint64_t v36 = *((void *)v1 + 9);
  uint64_t v37 = v12;
  uint64_t v13 = *((void *)v1 + 10);
  uint64_t v34 = *((void *)v1 + 11);
  uint64_t v35 = v13;
  uint64_t v14 = *((void *)v1 + 12);
  uint64_t v32 = *((void *)v1 + 13);
  uint64_t v33 = v14;
  uint64_t v31 = *((void *)v1 + 14);
  uint64_t v30 = *((void *)v1 + 15);
  uint64_t v29 = *((void *)v1 + 16);
  uint64_t v28 = *((void *)v1 + 17);
  long long v24 = v1[9];
  long long v25 = v1[10];
  uint64_t v27 = *((void *)v1 + 22);
  uint64_t v26 = *((void *)v1 + 23);
  long long v22 = v1[12];
  long long v23 = v1[13];
  v21[16] = *((void *)v1 + 28);
  v21[17] = *((void *)v1 + 29);
  v21[15] = *((void *)v1 + 30);
  v21[14] = *((void *)v1 + 32);
  v21[13] = *((void *)v1 + 33);
  v21[12] = *((void *)v1 + 34);
  v21[11] = *((void *)v1 + 35);
  v21[10] = *((void *)v1 + 36);
  v21[9] = *((void *)v1 + 37);
  _OWORD v21[8] = *((void *)v1 + 38);
  v21[7] = *((void *)v1 + 39);
  v21[6] = *((void *)v1 + 40);
  v21[5] = *((void *)v1 + 41);
  v21[3] = *((void *)v1 + 42);
  v21[4] = *((void *)v1 + 43);
  void v21[2] = *((void *)v1 + 44);
  v21[1] = *((void *)v1 + 45);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFE36520();
  sub_1AFFCBE78();
  long long v44 = v41;
  long long v45 = v40;
  uint64_t v46 = v10;
  uint64_t v47 = v9;
  char v43 = 0;
  sub_1AFE377FC();
  uint64_t v15 = v42;
  sub_1AFFCBBE8();
  if (!v15)
  {
    uint64_t v16 = v30;
    uint64_t v17 = v31;
    uint64_t v18 = v32;
    uint64_t v19 = v33;
    *(void *)&long long v44 = v39;
    *((void *)&v44 + 1) = v38;
    *(void *)&long long v45 = v37;
    *((void *)&v45 + 1) = v36;
    uint64_t v46 = v35;
    uint64_t v47 = v34;
    char v43 = 1;
    sub_1AFFCBBE8();
    *(void *)&long long v44 = v19;
    *((void *)&v44 + 1) = v18;
    *(void *)&long long v45 = v17;
    *((void *)&v45 + 1) = v16;
    uint64_t v46 = v29;
    uint64_t v47 = v28;
    char v43 = 2;
    sub_1AFFCBBE8();
    long long v44 = v24;
    long long v45 = v25;
    uint64_t v46 = v27;
    uint64_t v47 = v26;
    char v43 = 3;
    sub_1AFFCBBE8();
    long long v44 = v22;
    long long v45 = v23;
    char v43 = 4;
    sub_1AFE37850();
    sub_1AFFCBBE8();
    LOBYTE(v44) = 5;
    sub_1AFFCBC08();
    LOBYTE(v44) = 6;
    sub_1AFFCBC38();
    LOBYTE(v44) = 7;
    sub_1AFFCBC28();
    LOBYTE(v44) = 8;
    sub_1AFFCBC38();
    LOBYTE(v44) = 9;
    sub_1AFFCBC38();
    LOBYTE(v44) = 10;
    sub_1AFFCBC08();
    LOBYTE(v44) = 11;
    sub_1AFFCBC08();
    LOBYTE(v44) = 12;
    sub_1AFFCBC08();
    LOBYTE(v44) = 13;
    sub_1AFFCBC08();
    LOBYTE(v44) = 14;
    sub_1AFFCBC08();
    LOBYTE(v44) = 15;
    sub_1AFFCBC08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1AFE36CB8@<X0>(void *a1@<X0>, double *a2@<X8>)
{
  return sub_1AFE34B2C(a1, a2);
}

uint64_t sub_1AFE36CD0(void *a1)
{
  return sub_1AFE365CC(a1);
}

unint64_t sub_1AFE36CEC()
{
  unint64_t result = qword_1EB818E70;
  if (!qword_1EB818E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818E70);
  }
  return result;
}

uint64_t sub_1AFE36D40(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v136 = *(void *)(a1 + 32);
  uint64_t v137 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 56);
  uint64_t v134 = *(void *)(a1 + 48);
  uint64_t v135 = *(void *)(a1 + 72);
  uint64_t v129 = *(void *)(a1 + 80);
  uint64_t v132 = *(void *)(a1 + 64);
  uint64_t v133 = *(void *)(a1 + 88);
  uint64_t v126 = *(void *)(a1 + 104);
  uint64_t v120 = *(void *)(a1 + 112);
  uint64_t v123 = *(void *)(a1 + 96);
  uint64_t v124 = *(void *)(a1 + 120);
  uint64_t v117 = *(void *)(a1 + 128);
  uint64_t v121 = *(void *)(a1 + 136);
  uint64_t v114 = *(void *)(a1 + 152);
  uint64_t v111 = *(void *)(a1 + 144);
  uint64_t v112 = *(void *)(a1 + 168);
  uint64_t v105 = *(void *)(a1 + 176);
  uint64_t v108 = *(void *)(a1 + 160);
  uint64_t v109 = *(void *)(a1 + 184);
  uint64_t v102 = *(void *)(a1 + 200);
  uint64_t v97 = *(void *)(a1 + 208);
  uint64_t v99 = *(void *)(a1 + 192);
  uint64_t v100 = *(void *)(a1 + 216);
  double v7 = *(double *)(a1 + 248);
  uint64_t v93 = *(void *)(a1 + 224);
  uint64_t v94 = *(void *)(a1 + 232);
  uint64_t v90 = *(void *)(a1 + 240);
  uint64_t v88 = *(void *)(a1 + 256);
  uint64_t v85 = *(void *)(a1 + 264);
  uint64_t v86 = *(void *)(a1 + 272);
  uint64_t v82 = *(void *)(a1 + 280);
  uint64_t v80 = *(void *)(a1 + 288);
  uint64_t v77 = *(void *)(a1 + 304);
  uint64_t v78 = *(void *)(a1 + 296);
  uint64_t v75 = *(void *)(a1 + 320);
  uint64_t v76 = *(void *)(a1 + 312);
  uint64_t v73 = *(void *)(a1 + 336);
  uint64_t v74 = *(void *)(a1 + 328);
  uint64_t v72 = *(void *)(a1 + 344);
  double v8 = *(double *)(a2 + 248);
  uint64_t v9 = *(void *)a2;
  uint64_t v10 = *(void *)(a2 + 8);
  uint64_t v12 = *(void *)(a2 + 16);
  uint64_t v11 = *(void *)(a2 + 24);
  uint64_t v14 = *(void *)(a2 + 32);
  uint64_t v13 = *(void *)(a2 + 40);
  uint64_t v16 = *(void *)(a2 + 48);
  uint64_t v15 = *(void *)(a2 + 56);
  uint64_t v130 = *(void *)(a2 + 72);
  uint64_t v131 = *(void *)(a2 + 64);
  uint64_t v127 = *(void *)(a2 + 88);
  uint64_t v128 = *(void *)(a2 + 80);
  uint64_t v122 = *(void *)(a2 + 96);
  uint64_t v125 = *(void *)(a2 + 104);
  uint64_t v119 = *(void *)(a2 + 112);
  uint64_t v118 = *(void *)(a2 + 120);
  uint64_t v115 = *(void *)(a2 + 136);
  uint64_t v116 = *(void *)(a2 + 128);
  uint64_t v110 = *(void *)(a2 + 144);
  uint64_t v113 = *(void *)(a2 + 152);
  uint64_t v106 = *(void *)(a2 + 168);
  uint64_t v107 = *(void *)(a2 + 160);
  uint64_t v103 = *(void *)(a2 + 184);
  uint64_t v104 = *(void *)(a2 + 176);
  uint64_t v98 = *(void *)(a2 + 192);
  uint64_t v101 = *(void *)(a2 + 200);
  uint64_t v95 = *(void *)(a2 + 216);
  uint64_t v96 = *(void *)(a2 + 208);
  uint64_t v91 = *(void *)(a2 + 224);
  uint64_t v92 = *(void *)(a2 + 232);
  uint64_t v89 = *(void *)(a2 + 240);
  uint64_t v87 = *(void *)(a2 + 256);
  uint64_t v83 = *(void *)(a2 + 264);
  uint64_t v84 = *(void *)(a2 + 272);
  uint64_t v81 = *(void *)(a2 + 280);
  uint64_t v79 = *(void *)(a2 + 288);
  if (!v3)
  {
    uint64_t v70 = *(void *)(a2 + 304);
    uint64_t v71 = *(void *)(a2 + 296);
    uint64_t v68 = *(void *)(a2 + 320);
    uint64_t v69 = *(void *)(a2 + 312);
    uint64_t v66 = *(void *)(a2 + 336);
    uint64_t v67 = *(void *)(a2 + 328);
    uint64_t v64 = *(void *)(a2 + 352);
    uint64_t v65 = *(void *)(a2 + 344);
    uint64_t v62 = *(void *)(a2 + 360);
    uint64_t v63 = *(void *)(a1 + 360);
    uint64_t v61 = *(void *)(a1 + 352);
    if (!v10) {
      goto LABEL_14;
    }
LABEL_27:
    sub_1AFD61E44(v9, v10);
    sub_1AFD5F574(v2, v3);
    uint64_t v36 = v9;
    uint64_t v37 = v10;
LABEL_71:
    sub_1AFD5F574(v36, v37);
    return 0;
  }
  if (!v10)
  {
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    goto LABEL_27;
  }
  uint64_t v70 = *(void *)(a2 + 304);
  uint64_t v71 = *(void *)(a2 + 296);
  uint64_t v68 = *(void *)(a2 + 320);
  uint64_t v69 = *(void *)(a2 + 312);
  uint64_t v66 = *(void *)(a2 + 336);
  uint64_t v67 = *(void *)(a2 + 328);
  uint64_t v64 = *(void *)(a2 + 352);
  uint64_t v65 = *(void *)(a2 + 344);
  uint64_t v62 = *(void *)(a2 + 360);
  uint64_t v63 = *(void *)(a1 + 360);
  uint64_t v61 = *(void *)(a1 + 352);
  if (v2 != v9 || v3 != v10)
  {
    uint64_t v17 = *(void *)(a1 + 56);
    uint64_t v18 = *(void *)(a2 + 56);
    uint64_t v19 = *(void *)(a2 + 48);
    char v20 = sub_1AFFCBCE8();
    uint64_t v16 = v19;
    uint64_t v15 = v18;
    uint64_t v6 = v17;
    char v21 = v20;
    uint64_t result = 0;
    if ((v21 & 1) == 0) {
      return result;
    }
  }
  if (v5 != v12 || v4 != v11)
  {
    uint64_t v23 = v6;
    uint64_t v24 = v15;
    uint64_t v25 = v16;
    char v26 = sub_1AFFCBCE8();
    uint64_t v16 = v25;
    uint64_t v15 = v24;
    uint64_t v6 = v23;
    char v27 = v26;
    uint64_t result = 0;
    if ((v27 & 1) == 0) {
      return result;
    }
  }
  if (v136 != v14 || v137 != v13)
  {
    uint64_t v28 = v6;
    uint64_t v29 = v15;
    uint64_t v30 = v16;
    char v31 = sub_1AFFCBCE8();
    uint64_t v16 = v30;
    uint64_t v15 = v29;
    uint64_t v6 = v28;
    char v32 = v31;
    uint64_t result = 0;
    if ((v32 & 1) == 0) {
      return result;
    }
  }
LABEL_14:
  if (!v6)
  {
    if (!v15) {
      goto LABEL_29;
    }
    goto LABEL_42;
  }
  if (!v15)
  {
    uint64_t v41 = v6;
    uint64_t v42 = v16;
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    uint64_t v16 = v42;
    uint64_t v15 = 0;
    uint64_t v6 = v41;
LABEL_42:
    uint64_t v43 = v6;
    uint64_t v44 = v15;
    uint64_t v45 = v16;
    sub_1AFD61E44(v16, v15);
    sub_1AFD5F574(v134, v43);
    uint64_t v36 = v45;
    uint64_t v37 = v44;
    goto LABEL_71;
  }
  if (v134 != v16 || v6 != v15)
  {
    char v33 = sub_1AFFCBCE8();
    uint64_t result = 0;
    if ((v33 & 1) == 0) {
      return result;
    }
  }
  if (v132 != v131 || v135 != v130)
  {
    char v34 = sub_1AFFCBCE8();
    uint64_t result = 0;
    if ((v34 & 1) == 0) {
      return result;
    }
  }
  if (v129 != v128 || v133 != v127)
  {
    char v35 = sub_1AFFCBCE8();
    uint64_t result = 0;
    if ((v35 & 1) == 0) {
      return result;
    }
  }
LABEL_29:
  if (!v126)
  {
    if (!v125) {
      goto LABEL_44;
    }
LABEL_57:
    uint64_t v49 = v122;
    uint64_t v50 = v125;
    sub_1AFD61E44(v122, v125);
    uint64_t v51 = v123;
    uint64_t v52 = v126;
LABEL_70:
    sub_1AFD5F574(v51, v52);
    uint64_t v36 = v49;
    uint64_t v37 = v50;
    goto LABEL_71;
  }
  if (!v125)
  {
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    goto LABEL_57;
  }
  if (v123 != v122 || v126 != v125)
  {
    char v38 = sub_1AFFCBCE8();
    uint64_t result = 0;
    if ((v38 & 1) == 0) {
      return result;
    }
  }
  if (v120 != v119 || v124 != v118)
  {
    char v39 = sub_1AFFCBCE8();
    uint64_t result = 0;
    if ((v39 & 1) == 0) {
      return result;
    }
  }
  if (v117 != v116 || v121 != v115)
  {
    char v40 = sub_1AFFCBCE8();
    uint64_t result = 0;
    if ((v40 & 1) == 0) {
      return result;
    }
  }
LABEL_44:
  if (!v114)
  {
    if (!v113) {
      goto LABEL_59;
    }
    goto LABEL_69;
  }
  if (!v113)
  {
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
LABEL_69:
    uint64_t v49 = v110;
    uint64_t v50 = v113;
    sub_1AFD61E44(v110, v113);
    uint64_t v51 = v111;
    uint64_t v52 = v114;
    goto LABEL_70;
  }
  if (v111 != v110 || v114 != v113)
  {
    char v46 = sub_1AFFCBCE8();
    uint64_t result = 0;
    if ((v46 & 1) == 0) {
      return result;
    }
  }
  if (v108 != v107 || v112 != v106)
  {
    char v47 = sub_1AFFCBCE8();
    uint64_t result = 0;
    if ((v47 & 1) == 0) {
      return result;
    }
  }
  if (v105 != v104 || v109 != v103)
  {
    char v48 = sub_1AFFCBCE8();
    uint64_t result = 0;
    if ((v48 & 1) == 0) {
      return result;
    }
  }
LABEL_59:
  if (v102)
  {
    if (v101)
    {
      if (v99 != v98 || v102 != v101)
      {
        char v53 = sub_1AFFCBCE8();
        uint64_t result = 0;
        if ((v53 & 1) == 0) {
          return result;
        }
      }
      if (v97 != v96 || v100 != v95)
      {
        char v54 = sub_1AFFCBCE8();
        uint64_t result = 0;
        if ((v54 & 1) == 0) {
          return result;
        }
      }
      goto LABEL_75;
    }
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    goto LABEL_79;
  }
  if (v101)
  {
LABEL_79:
    sub_1AFD61E94(v98, v101);
    sub_1AFD5F5C4(v99, v102);
    sub_1AFD5F5C4(v98, v101);
    return 0;
  }
LABEL_75:
  if (v93 == v91 && v94 == v92)
  {
    uint64_t result = 0;
  }
  else
  {
    char v55 = sub_1AFFCBCE8();
    uint64_t result = 0;
    if ((v55 & 1) == 0) {
      return result;
    }
  }
  if (v90 == v89 && v7 == v8 && v88 == v87 && v85 == v83)
  {
    if (v86 == v84 && v82 == v81 || (v56 = sub_1AFFCBCE8(), uint64_t result = 0, (v56 & 1) != 0))
    {
      if (v80 == v79 && v78 == v71 || (v57 = sub_1AFFCBCE8(), uint64_t result = 0, (v57 & 1) != 0))
      {
        if (v77 == v70 && v76 == v69 || (v58 = sub_1AFFCBCE8(), uint64_t result = 0, (v58 & 1) != 0))
        {
          if (v75 == v68 && v74 == v67 || (v59 = sub_1AFFCBCE8(), uint64_t result = 0, (v59 & 1) != 0))
          {
            if (v73 == v66 && v72 == v65 || (v60 = sub_1AFFCBCE8(), uint64_t result = 0, (v60 & 1) != 0))
            {
              if (v61 == v64 && v63 == v62)
              {
                return 1;
              }
              else
              {
                return sub_1AFFCBCE8();
              }
            }
          }
        }
      }
    }
  }
  return result;
}

void sub_1AFE37798(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1AFE36520();
    unint64_t v7 = a3(a1, &type metadata for PaywallVisualSpec.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1AFE377FC()
{
  unint64_t result = qword_1EB8193C0;
  if (!qword_1EB8193C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8193C0);
  }
  return result;
}

unint64_t sub_1AFE37850()
{
  unint64_t result = qword_1EB818A18;
  if (!qword_1EB818A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818A18);
  }
  return result;
}

uint64_t destroy for PaywallVisualSpec(void *a1)
{
  if (a1[1])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[7])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[13])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[19])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[25])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PaywallVisualSpec(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4)
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v4;
    uint64_t v5 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v5;
    uint64_t v6 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v6;
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    uint64_t v7 = *(void *)(a2 + 56);
    if (v7) {
      goto LABEL_3;
    }
  }
  else
  {
    long long v18 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v18;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    uint64_t v7 = *(void *)(a2 + 56);
    if (v7)
    {
LABEL_3:
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v7;
      uint64_t v8 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = v8;
      uint64_t v9 = *(void *)(a2 + 88);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = v9;
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      uint64_t v10 = *(void *)(a2 + 104);
      if (v10) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  long long v19 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v19;
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  uint64_t v10 = *(void *)(a2 + 104);
  if (v10)
  {
LABEL_4:
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = v10;
    uint64_t v11 = *(void *)(a2 + 120);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = v11;
    uint64_t v12 = *(void *)(a2 + 136);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = v12;
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    uint64_t v13 = *(void *)(a2 + 152);
    if (v13) {
      goto LABEL_5;
    }
LABEL_10:
    long long v21 = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = v21;
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    uint64_t v16 = *(void *)(a2 + 200);
    if (v16) {
      goto LABEL_6;
    }
LABEL_11:
    long long v22 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v22;
    goto LABEL_12;
  }
LABEL_9:
  long long v20 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v20;
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  uint64_t v13 = *(void *)(a2 + 152);
  if (!v13) {
    goto LABEL_10;
  }
LABEL_5:
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v13;
  uint64_t v14 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v14;
  uint64_t v15 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v15;
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  uint64_t v16 = *(void *)(a2 + 200);
  if (!v16) {
    goto LABEL_11;
  }
LABEL_6:
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v16;
  uint64_t v17 = *(void *)(a2 + 216);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = v17;
  sub_1AFFC8E38();
  sub_1AFFC8E38();
LABEL_12:
  uint64_t v23 = *(void *)(a2 + 232);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = v23;
  long long v24 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = v24;
  uint64_t v25 = *(void *)(a2 + 280);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = v25;
  uint64_t v26 = *(void *)(a2 + 296);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = v26;
  uint64_t v27 = *(void *)(a2 + 312);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(void *)(a1 + 312) = v27;
  uint64_t v28 = *(void *)(a2 + 328);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(void *)(a1 + 328) = v28;
  uint64_t v29 = *(void *)(a2 + 344);
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  *(void *)(a1 + 344) = v29;
  uint64_t v30 = *(void *)(a2 + 352);
  uint64_t v31 = *(void *)(a2 + 360);
  *(void *)(a1 + 352) = v30;
  *(void *)(a1 + 360) = v31;
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  return a1;
}

void *assignWithCopy for PaywallVisualSpec(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  if (a1[1])
  {
    if (v4)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      a1[2] = a2[2];
      a1[3] = a2[3];
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      a1[4] = a2[4];
      a1[5] = a2[5];
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AFD61068((uint64_t)a1);
      long long v6 = *((_OWORD *)a2 + 1);
      long long v5 = *((_OWORD *)a2 + 2);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v6;
      *((_OWORD *)a1 + 2) = v5;
    }
  }
  else if (v4)
  {
    *a1 = *a2;
    a1[1] = a2[1];
    a1[2] = a2[2];
    a1[3] = a2[3];
    a1[4] = a2[4];
    a1[5] = a2[5];
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
  }
  else
  {
    long long v7 = *(_OWORD *)a2;
    long long v8 = *((_OWORD *)a2 + 2);
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    *((_OWORD *)a1 + 2) = v8;
    *(_OWORD *)a1 = v7;
  }
  uint64_t v9 = a1 + 6;
  uint64_t v10 = a2 + 6;
  uint64_t v11 = a2[7];
  if (a1[7])
  {
    if (v11)
    {
      a1[6] = a2[6];
      a1[7] = a2[7];
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      a1[8] = a2[8];
      a1[9] = a2[9];
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      a1[10] = a2[10];
      a1[11] = a2[11];
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AFD61068((uint64_t)(a1 + 6));
      long long v13 = *((_OWORD *)a2 + 4);
      long long v12 = *((_OWORD *)a2 + 5);
      *uint64_t v9 = *v10;
      *((_OWORD *)a1 + 4) = v13;
      *((_OWORD *)a1 + 5) = v12;
    }
  }
  else if (v11)
  {
    a1[6] = a2[6];
    a1[7] = a2[7];
    a1[8] = a2[8];
    a1[9] = a2[9];
    a1[10] = a2[10];
    a1[11] = a2[11];
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
  }
  else
  {
    long long v14 = *v10;
    long long v15 = *((_OWORD *)a2 + 5);
    *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
    *((_OWORD *)a1 + 5) = v15;
    *uint64_t v9 = v14;
  }
  uint64_t v16 = a1 + 12;
  uint64_t v17 = a2 + 12;
  uint64_t v18 = a2[13];
  if (a1[13])
  {
    if (v18)
    {
      a1[12] = a2[12];
      a1[13] = a2[13];
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      a1[14] = a2[14];
      a1[15] = a2[15];
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      a1[16] = a2[16];
      a1[17] = a2[17];
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AFD61068((uint64_t)(a1 + 12));
      long long v20 = *((_OWORD *)a2 + 7);
      long long v19 = *((_OWORD *)a2 + 8);
      *uint64_t v16 = *v17;
      *((_OWORD *)a1 + 7) = v20;
      *((_OWORD *)a1 + 8) = v19;
    }
  }
  else if (v18)
  {
    a1[12] = a2[12];
    a1[13] = a2[13];
    a1[14] = a2[14];
    a1[15] = a2[15];
    a1[16] = a2[16];
    a1[17] = a2[17];
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
  }
  else
  {
    long long v21 = *v17;
    long long v22 = *((_OWORD *)a2 + 8);
    *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
    *((_OWORD *)a1 + 8) = v22;
    *uint64_t v16 = v21;
  }
  uint64_t v23 = a1 + 18;
  long long v24 = a2 + 18;
  uint64_t v25 = a2[19];
  if (a1[19])
  {
    if (v25)
    {
      a1[18] = a2[18];
      a1[19] = a2[19];
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      a1[20] = a2[20];
      a1[21] = a2[21];
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      a1[22] = a2[22];
      a1[23] = a2[23];
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AFD61068((uint64_t)(a1 + 18));
      long long v27 = *((_OWORD *)a2 + 10);
      long long v26 = *((_OWORD *)a2 + 11);
      *uint64_t v23 = *v24;
      *((_OWORD *)a1 + 10) = v27;
      *((_OWORD *)a1 + 11) = v26;
    }
  }
  else if (v25)
  {
    a1[18] = a2[18];
    a1[19] = a2[19];
    a1[20] = a2[20];
    a1[21] = a2[21];
    a1[22] = a2[22];
    a1[23] = a2[23];
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
  }
  else
  {
    long long v28 = *v24;
    long long v29 = *((_OWORD *)a2 + 11);
    *((_OWORD *)a1 + 10) = *((_OWORD *)a2 + 10);
    *((_OWORD *)a1 + 11) = v29;
    *uint64_t v23 = v28;
  }
  uint64_t v30 = a1 + 24;
  uint64_t v31 = a2 + 24;
  uint64_t v32 = a2[25];
  if (a1[25])
  {
    if (v32)
    {
      a1[24] = a2[24];
      a1[25] = a2[25];
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      a1[26] = a2[26];
      a1[27] = a2[27];
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AFD610BC((uint64_t)(a1 + 24));
      long long v33 = *((_OWORD *)a2 + 13);
      *uint64_t v30 = *v31;
      *((_OWORD *)a1 + 13) = v33;
    }
  }
  else if (v32)
  {
    a1[24] = a2[24];
    a1[25] = a2[25];
    a1[26] = a2[26];
    a1[27] = a2[27];
    sub_1AFFC8E38();
    sub_1AFFC8E38();
  }
  else
  {
    long long v34 = *((_OWORD *)a2 + 13);
    *uint64_t v30 = *v31;
    *((_OWORD *)a1 + 13) = v34;
  }
  a1[28] = a2[28];
  a1[29] = a2[29];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[30] = a2[30];
  a1[31] = a2[31];
  a1[32] = a2[32];
  a1[33] = a2[33];
  a1[34] = a2[34];
  a1[35] = a2[35];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[36] = a2[36];
  a1[37] = a2[37];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[38] = a2[38];
  a1[39] = a2[39];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[40] = a2[40];
  a1[41] = a2[41];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[42] = a2[42];
  a1[43] = a2[43];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[44] = a2[44];
  a1[45] = a2[45];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy368_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x170uLL);
}

uint64_t assignWithTake for PaywallVisualSpec(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8))
  {
    uint64_t v4 = *(void *)(a2 + 8);
    if (v4)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v4;
      swift_bridgeObjectRelease();
      uint64_t v5 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v5;
      swift_bridgeObjectRelease();
      uint64_t v6 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v6;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1AFD61068(a1);
  }
  long long v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v7;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
LABEL_6:
  if (*(void *)(a1 + 56))
  {
    uint64_t v8 = *(void *)(a2 + 56);
    if (v8)
    {
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v8;
      swift_bridgeObjectRelease();
      uint64_t v9 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = v9;
      swift_bridgeObjectRelease();
      uint64_t v10 = *(void *)(a2 + 88);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = v10;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1AFD61068(a1 + 48);
  }
  long long v11 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v11;
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
LABEL_11:
  if (*(void *)(a1 + 104))
  {
    uint64_t v12 = *(void *)(a2 + 104);
    if (v12)
    {
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = v12;
      swift_bridgeObjectRelease();
      uint64_t v13 = *(void *)(a2 + 120);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = v13;
      swift_bridgeObjectRelease();
      uint64_t v14 = *(void *)(a2 + 136);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = v14;
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    sub_1AFD61068(a1 + 96);
  }
  long long v15 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v15;
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
LABEL_16:
  if (*(void *)(a1 + 152))
  {
    uint64_t v16 = *(void *)(a2 + 152);
    if (v16)
    {
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = v16;
      swift_bridgeObjectRelease();
      uint64_t v17 = *(void *)(a2 + 168);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(void *)(a1 + 168) = v17;
      swift_bridgeObjectRelease();
      uint64_t v18 = *(void *)(a2 + 184);
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      *(void *)(a1 + 184) = v18;
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
    sub_1AFD61068(a1 + 144);
  }
  long long v19 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v19;
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
LABEL_21:
  if (!*(void *)(a1 + 200))
  {
LABEL_25:
    long long v22 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v22;
    goto LABEL_26;
  }
  uint64_t v20 = *(void *)(a2 + 200);
  if (!v20)
  {
    sub_1AFD610BC(a1 + 192);
    goto LABEL_25;
  }
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v20;
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void *)(a2 + 216);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = v21;
  swift_bridgeObjectRelease();
LABEL_26:
  uint64_t v23 = *(void *)(a2 + 232);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = v23;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  uint64_t v24 = *(void *)(a2 + 280);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = v24;
  swift_bridgeObjectRelease();
  uint64_t v25 = *(void *)(a2 + 296);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = v25;
  swift_bridgeObjectRelease();
  uint64_t v26 = *(void *)(a2 + 312);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(void *)(a1 + 312) = v26;
  swift_bridgeObjectRelease();
  uint64_t v27 = *(void *)(a2 + 328);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(void *)(a1 + 328) = v27;
  swift_bridgeObjectRelease();
  uint64_t v28 = *(void *)(a2 + 344);
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  *(void *)(a1 + 344) = v28;
  swift_bridgeObjectRelease();
  uint64_t v29 = *(void *)(a2 + 360);
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  *(void *)(a1 + 360) = v29;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PaywallVisualSpec(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 368)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 232);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PaywallVisualSpec(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 360) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 368) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 232) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 368) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PaywallVisualSpec()
{
  return &type metadata for PaywallVisualSpec;
}

unsigned char *storeEnumTagSinglePayload for PaywallVisualSpec.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 15 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 15) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF1) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF0)
  {
    unsigned int v6 = ((a2 - 241) >> 8) + 1;
    *unint64_t result = a2 + 15;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFE3859CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 15;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PaywallVisualSpec.CodingKeys()
{
  return &type metadata for PaywallVisualSpec.CodingKeys;
}

unint64_t sub_1AFE385D8()
{
  unint64_t result = qword_1E9AFB380;
  if (!qword_1E9AFB380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB380);
  }
  return result;
}

unint64_t sub_1AFE38630()
{
  unint64_t result = qword_1EB819188;
  if (!qword_1EB819188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819188);
  }
  return result;
}

unint64_t sub_1AFE38688()
{
  unint64_t result = qword_1EB819180;
  if (!qword_1EB819180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819180);
  }
  return result;
}

uint64_t sub_1AFE386DC()
{
  unint64_t v0 = sub_1AFFCBA78();
  swift_bridgeObjectRelease();
  if (v0 >= 0x10) {
    return 16;
  }
  else {
    return v0;
  }
}

uint64_t sub_1AFE38728()
{
  uint64_t v1 = *v0;
  sub_1AFFC8E38();
  return v1;
}

uint64_t sub_1AFE38758()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_1AFFC8E38();
  return v1;
}

uint64_t sub_1AFE3878C()
{
  if (*v0) {
    return 0x74754179786F7270;
  }
  else {
    return 0x736F4879786F7270;
  }
}

uint64_t sub_1AFE387D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1AFE39088(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AFE38800(uint64_t a1)
{
  unint64_t v2 = sub_1AFE38D04();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFE3883C(uint64_t a1)
{
  unint64_t v2 = sub_1AFE38D04();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFE38878(void *a1)
{
  sub_1AFE38D58(0, &qword_1EB81A050, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  long long v7 = (char *)v11 - v6;
  uint64_t v8 = *(void *)(v1 + 16);
  v11[1] = *(void *)(v1 + 24);
  void v11[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFE38D04();
  sub_1AFFCBE78();
  char v13 = 0;
  uint64_t v9 = v11[3];
  sub_1AFFCBB98();
  if (!v9)
  {
    char v12 = 1;
    sub_1AFFCBB98();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1AFE38A04@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1AFE38D58(0, &qword_1EB819F98, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v18 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFE38D04();
  sub_1AFFCBE68();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v21 = 0;
  uint64_t v10 = sub_1AFFCBAA8();
  uint64_t v12 = v11;
  char v20 = 1;
  sub_1AFFC8E38();
  uint64_t v13 = sub_1AFFCBAA8();
  uint64_t v15 = v14;
  uint64_t v16 = *(void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v19 = v13;
  v16(v9, v6);
  *a2 = v10;
  a2[1] = v12;
  a2[2] = v19;
  a2[3] = v15;
  sub_1AFFC8E38();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFE38C1C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1AFE38A04(a1, a2);
}

uint64_t sub_1AFE38C34(void *a1)
{
  return sub_1AFE38878(a1);
}

uint64_t sub_1AFE38C50(void *a1, void *a2)
{
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  uint64_t v6 = a2[1];
  uint64_t v7 = a2[2];
  uint64_t v8 = a2[3];
  if (!v3)
  {
    if (v6) {
      return 0;
    }
    goto LABEL_10;
  }
  if (!v6) {
    return 0;
  }
  BOOL v9 = *a1 == *a2 && v3 == v6;
  if (v9 || (v10 = sub_1AFFCBCE8(), uint64_t result = 0, (v10 & 1) != 0))
  {
LABEL_10:
    if (v5)
    {
      if (v8 && (v4 == v7 && v5 == v8 || (sub_1AFFCBCE8() & 1) != 0)) {
        return 1;
      }
    }
    else if (!v8)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

unint64_t sub_1AFE38D04()
{
  unint64_t result = qword_1EB819568;
  if (!qword_1EB819568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819568);
  }
  return result;
}

void sub_1AFE38D58(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1AFE38D04();
    unint64_t v7 = a3(a1, &type metadata for EmbedProxyConfiguration.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t getEnumTagSinglePayload for EmbedProxyConfiguration(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for EmbedProxyConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EmbedProxyConfiguration()
{
  return &type metadata for EmbedProxyConfiguration;
}

unsigned char *storeEnumTagSinglePayload for EmbedProxyConfiguration.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFE38F48);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EmbedProxyConfiguration.CodingKeys()
{
  return &type metadata for EmbedProxyConfiguration.CodingKeys;
}

unint64_t sub_1AFE38F84()
{
  unint64_t result = qword_1E9AFB388;
  if (!qword_1E9AFB388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB388);
  }
  return result;
}

unint64_t sub_1AFE38FDC()
{
  unint64_t result = qword_1EB819578;
  if (!qword_1EB819578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819578);
  }
  return result;
}

unint64_t sub_1AFE39034()
{
  unint64_t result = qword_1EB819570;
  if (!qword_1EB819570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819570);
  }
  return result;
}

uint64_t sub_1AFE39088(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x736F4879786F7270 && a2 == 0xE900000000000074;
  if (v2 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74754179786F7270 && a2 == 0xEF6769666E6F436FLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1AFFCBCE8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1AFE391AC()
{
  return sub_1AFFC9518();
}

uint64_t sub_1AFE391C8()
{
  return 0x746E496B636F7453;
}

uint64_t sub_1AFE391E8()
{
  uint64_t v0 = sub_1AFFC9528();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1AFFC9A78();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v5 = sub_1AFFCAE58();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v6 = sub_1AFFC9548();
  __swift_allocate_value_buffer(v6, qword_1E9AFB390);
  __swift_project_value_buffer(v6, (uint64_t)qword_1E9AFB390);
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4F275D0], v0);
  return sub_1AFFC9558();
}

uint64_t sub_1AFE393C8@<X0>(uint64_t a1@<X8>)
{
  return sub_1AFD32B4C(&qword_1E9AF8D38, MEMORY[0x1E4F27608], (uint64_t)qword_1E9AFB390, a1);
}

uint64_t sub_1AFE39400()
{
  sub_1AFE3AB74(0, &qword_1EB816B00, MEMORY[0x1E4F27608], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)v12 - v1;
  v12[0] = sub_1AFFC9528();
  uint64_t v3 = *(void *)(v12[0] - 8);
  MEMORY[0x1F4188790](v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1AFFC9A78();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v7 = sub_1AFFCAE58();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v8 = sub_1AFFC9548();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = sub_1AFFC8CD8();
  __swift_allocate_value_buffer(v10, qword_1E9AFB3A8);
  __swift_project_value_buffer(v10, (uint64_t)qword_1E9AFB3A8);
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, *MEMORY[0x1E4F275D0], v12[0]);
  sub_1AFFC9558();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_1AFFC8CE8();
}

uint64_t sub_1AFE39708@<X0>(uint64_t a1@<X8>)
{
  return sub_1AFD32B4C(&qword_1E9AF8D40, MEMORY[0x1E4F18510], (uint64_t)qword_1E9AFB3A8, a1);
}

uint64_t sub_1AFE39740()
{
  return 1;
}

uint64_t sub_1AFE39748()
{
  return 0;
}

uint64_t sub_1AFE39750()
{
  uint64_t v0 = sub_1AFFC8ED8();
  double v1 = MEMORY[0x1F4188790](v0);
  (*(void (**)(char *, void, double))(v3 + 104))((char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F18700], v1);
  sub_1AFE3AB74(0, &qword_1E9AFB3C0, MEMORY[0x1E4F18588], MEMORY[0x1E4FBBE00]);
  uint64_t v4 = sub_1AFFC8D38();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 72);
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1AFFD0600;
  unint64_t v9 = v8 + v7;
  uint64_t v10 = *(void (**)(unint64_t, void, uint64_t))(v5 + 104);
  v10(v9, *MEMORY[0x1E4F18570], v4);
  v10(v9 + v6, *MEMORY[0x1E4F18578], v4);
  v10(v9 + 2 * v6, *MEMORY[0x1E4F18568], v4);
  v10(v9 + 3 * v6, *MEMORY[0x1E4F18580], v4);
  sub_1AFE3BBD0(0, &qword_1E9AFB3C8, MEMORY[0x1E4F186A8]);
  sub_1AFE3A028();
  sub_1AFE3A07C();
  return sub_1AFFC9048();
}

uint64_t sub_1AFE39A04()
{
  sub_1AFE3BBD0(0, &qword_1E9AFB3C8, MEMORY[0x1E4F186A8]);
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  unint64_t v7 = (char *)&v11 - v6;
  sub_1AFE3A028();
  sub_1AFFC8E78();
  unint64_t v8 = sub_1AFE3A07C();
  MEMORY[0x1B3E8B350](v4, &type metadata for SymbolWidgetConfigurationIntent, v1, v8);
  unint64_t v9 = *(void (**)(char *, uint64_t))(v2 + 8);
  v9(v4, v1);
  MEMORY[0x1B3E8B340](v7, &type metadata for SymbolWidgetConfigurationIntent, v1, v8);
  return ((uint64_t (*)(char *, uint64_t))v9)(v7, v1);
}

uint64_t sub_1AFE39B8C()
{
  swift_getKeyPath();
  sub_1AFE3A028();
  uint64_t v0 = sub_1AFFC8E48();
  swift_release();
  swift_getKeyPath();
  sub_1AFFC8E48();
  uint64_t v1 = sub_1AFFC8E48();
  swift_release();
  sub_1AFE3BC9C(0, (unint64_t *)&qword_1EB8183E0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1AFFD88D0;
  *(void *)(v2 + 32) = v0;
  *(void *)(v2 + 40) = v1;
  sub_1AFFCB1E8();
  sub_1AFFC8E48();
  uint64_t v3 = sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v3;
}

uint64_t sub_1AFE39CB0()
{
  return sub_1AFFC8C28();
}

uint64_t sub_1AFE39CD4()
{
  return sub_1AFFC8C28();
}

uint64_t sub_1AFE39CF8@<X0>(uint64_t *a1@<X8>)
{
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  uint64_t v2 = sub_1AFFC8C28();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v2;
  return result;
}

uint64_t sub_1AFE39D50@<X0>(uint64_t a1@<X8>)
{
  v14[1] = a1;
  sub_1AFE3BBD0(0, &qword_1E9AFB420, MEMORY[0x1E4F186C8]);
  MEMORY[0x1F4188790](v1 - 8);
  sub_1AFE3BBD0(0, &qword_1E9AFB428, MEMORY[0x1E4F186C0]);
  MEMORY[0x1F4188790](v2);
  sub_1AFE3BBD0(0, &qword_1E9AFB3C8, MEMORY[0x1E4F186A8]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v14 - v9;
  sub_1AFE3A028();
  sub_1AFFC8EA8();
  sub_1AFFC8E98();
  swift_getKeyPath();
  sub_1AFE3BC38();
  sub_1AFFC8E88();
  swift_release();
  sub_1AFFC8E98();
  sub_1AFFC8EB8();
  sub_1AFFC8E58();
  unint64_t v11 = sub_1AFE3A07C();
  MEMORY[0x1B3E8B350](v7, &type metadata for SymbolWidgetConfigurationIntent, v4, v11);
  uint64_t v12 = *(void (**)(char *, uint64_t))(v5 + 8);
  v12(v7, v4);
  MEMORY[0x1B3E8B340](v10, &type metadata for SymbolWidgetConfigurationIntent, v4, v11);
  return ((uint64_t (*)(char *, uint64_t))v12)(v10, v4);
}

unint64_t sub_1AFE3A028()
{
  unint64_t result = qword_1EB811910;
  if (!qword_1EB811910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB811910);
  }
  return result;
}

unint64_t sub_1AFE3A07C()
{
  unint64_t result = qword_1E9AFB3D0;
  if (!qword_1E9AFB3D0)
  {
    sub_1AFE3BBD0(255, &qword_1E9AFB3C8, MEMORY[0x1E4F186A8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB3D0);
  }
  return result;
}

uint64_t sub_1AFE3A0F0()
{
  return sub_1AFFC8C08();
}

double sub_1AFE3A114@<D0>(_OWORD *a1@<X8>)
{
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8C08();
  swift_release();
  swift_release();
  *a1 = v3;
  a1[1] = v4;
  double result = *(double *)&v5;
  a1[2] = v5;
  a1[3] = v6;
  return result;
}

uint64_t sub_1AFE3A180(uint64_t *a1)
{
  return swift_release();
}

uint64_t sub_1AFE3A1FC()
{
  return sub_1AFFC8C18();
}

uint64_t (*sub_1AFE3A23C(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1AFFC8BF8();
  return sub_1AFD3325C;
}

uint64_t sub_1AFE3A298()
{
  return sub_1AFFC8C08();
}

uint64_t sub_1AFE3A2BC@<X0>(unsigned char *a1@<X8>)
{
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8C08();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1AFE3A320()
{
  return swift_release();
}

uint64_t sub_1AFE3A378()
{
  return sub_1AFFC8C18();
}

uint64_t (*sub_1AFE3A3B0(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1AFFC8BF8();
  return sub_1AFD3325C;
}

uint64_t sub_1AFE3A40C@<X0>(uint64_t *a1@<X8>)
{
  char v55 = a1;
  uint64_t v1 = sub_1AFFC8EC8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v59 = v1;
  uint64_t v60 = v2;
  MEMORY[0x1F4188790](v1);
  char v54 = &v39[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  long long v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1AFE3AB74(0, &qword_1EB816AF0, MEMORY[0x1E4F182D8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  char v58 = &v39[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v7);
  char v57 = &v39[-v8];
  sub_1AFE3AB74(0, &qword_1EB816B00, MEMORY[0x1E4F27608], v4);
  MEMORY[0x1F4188790](v9 - 8);
  char v56 = &v39[-v10];
  uint64_t v11 = sub_1AFFC9528();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = &v39[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = sub_1AFFC9A78();
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v16 = sub_1AFFCAE58();
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v17 = sub_1AFFC9548();
  uint64_t v51 = v17;
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v41 = &v39[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1AFE3ABD8();
  uint64_t v53 = v20;
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  long long v22 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v12 + 104);
  unsigned int v40 = *MEMORY[0x1E4F275D0];
  uint64_t v21 = v40;
  uint64_t v42 = v11;
  v22(v14, v40, v11);
  uint64_t v43 = v22;
  uint64_t v44 = v12 + 104;
  sub_1AFFC9558();
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  v22(v14, v21, v11);
  uint64_t v23 = v56;
  sub_1AFFC9558();
  uint64_t v24 = *(void (**)(unsigned char *, void, uint64_t, uint64_t))(v18 + 56);
  uint64_t v50 = v18 + 56;
  uint64_t v52 = v24;
  v24(v23, 0, 1, v17);
  uint64_t v25 = sub_1AFFC8AD8();
  long long v61 = 0u;
  long long v62 = 0u;
  long long v63 = 0u;
  long long v64 = 0u;
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v26 + 56);
  char v46 = v27;
  uint64_t v47 = v26 + 56;
  v27(v57, 1, 1, v25);
  v27(v58, 1, 1, v25);
  unsigned int v48 = *MEMORY[0x1E4F186F0];
  uint64_t v28 = *(void (**)(void))(v60 + 104);
  v60 += 104;
  uint64_t v49 = (void (*)(unsigned char *, void, uint64_t))v28;
  uint64_t v29 = v54;
  v28(v54);
  sub_1AFE26838();
  uint64_t v30 = v29;
  uint64_t v53 = sub_1AFFC8C68();
  sub_1AFE3AC94();
  uint64_t v45 = v31;
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  uint64_t v32 = v40;
  uint64_t v33 = v42;
  long long v34 = v43;
  v43(v14, v40, v42);
  sub_1AFFC9558();
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  v34(v14, v32, v33);
  char v35 = v56;
  sub_1AFFC9558();
  v52(v35, 0, 1, v51);
  LOBYTE(v61) = 0;
  uint64_t v36 = v46;
  v46(v57, 1, 1, v25);
  v36(v58, 1, 1, v25);
  v49(v30, v48, v59);
  sub_1AFE3B5AC();
  uint64_t result = sub_1AFFC8C38();
  char v38 = v55;
  uint64_t *v55 = v53;
  v38[1] = result;
  return result;
}

void sub_1AFE3AB74(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1AFE3ABD8()
{
  if (!qword_1E9AFB3D8)
  {
    sub_1AFE3BC9C(255, &qword_1E9AFB3E0, (uint64_t)&type metadata for SymbolWidgetEntity, MEMORY[0x1E4FBB718]);
    sub_1AFE3AD50(&qword_1E9AFB3E8, &qword_1E9AFB3E0, (uint64_t)&type metadata for SymbolWidgetEntity, (void (*)(void))sub_1AFD38AA0);
    unint64_t v0 = sub_1AFFC8C98();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9AFB3D8);
    }
  }
}

void sub_1AFE3AC94()
{
  if (!qword_1EB8117F8)
  {
    sub_1AFE3BC9C(255, &qword_1EB8118C0, (uint64_t)&type metadata for NewsDisplayConfiguration, MEMORY[0x1E4FBB718]);
    sub_1AFE3AD50(&qword_1EB8118C8, &qword_1EB8118C0, (uint64_t)&type metadata for NewsDisplayConfiguration, (void (*)(void))sub_1AFE3ADDC);
    unint64_t v0 = sub_1AFFC8C98();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8117F8);
    }
  }
}

uint64_t sub_1AFE3AD50(unint64_t *a1, unint64_t *a2, uint64_t a3, void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1AFE3BC9C(255, a2, a3, MEMORY[0x1E4FBB718]);
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1AFE3ADDC()
{
  unint64_t result = qword_1EB816810;
  if (!qword_1EB816810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816810);
  }
  return result;
}

uint64_t sub_1AFE3AE30(uint64_t a1)
{
  *(void *)(v2 + 144) = a1;
  type metadata accessor for SymbolEntity();
  *(void *)(v2 + 152) = swift_task_alloc();
  *(_OWORD *)(v2 + 160) = *v1;
  return MEMORY[0x1F4188298](sub_1AFE3AEC8, 0, 0);
}

uint64_t sub_1AFE3AEC8()
{
  uint64_t v18 = v0;
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8C08();
  swift_release();
  swift_release();
  uint64_t v1 = v0[2];
  if (v1)
  {
    uint64_t v3 = v0[8];
    uint64_t v2 = v0[9];
    uint64_t v4 = v0[7];
    uint64_t v14 = v0[6];
    uint64_t v15 = v0[19];
    sub_1AFFC8E38();
    sub_1AFFC8E48();
    sub_1AFFC8E48();
    sub_1AFFC8E48();
    sub_1AFFC8E48();
    sub_1AFFC8E38();
    sub_1AFFC8B28();
    uint64_t v12 = v0[11];
    uint64_t v13 = v0[10];
    sub_1AFFC8B28();
    uint64_t v10 = v0[13];
    uint64_t v11 = v0[12];
    sub_1AFFC8B28();
    uint64_t v5 = v0[14];
    uint64_t v6 = v0[15];
    char v16 = 0;
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFD789F8(v13, v12, v11, v10, v5, v6, &v16, v14, (uint64_t)v17, v4, v3, v2, 0, 0, 0, 0);
    sub_1AFE3B654(v1);
    SymbolEntity.init(from:)(v17, v15);
    sub_1AFF31EC4(v15, (uint64_t *)v17);
    uint64_t v7 = *((void *)&v17[0] + 1);
    v0[16] = *(void *)&v17[0];
    v0[17] = v7;
    sub_1AFE3B6D4();
    sub_1AFFC8AE8();
    sub_1AFE3B654(v1);
    swift_release();
    swift_release();
    swift_task_dealloc();
  }
  else
  {
    sub_1AFE3B600();
    swift_allocError();
    swift_willThrow();
    swift_task_dealloc();
  }
  unint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1AFE3B158()
{
  return 0x746E496B636F7453;
}

uint64_t sub_1AFE3B178@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E9AF8D38 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1AFFC9548();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1E9AFB390);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1AFE3B220(uint64_t a1)
{
  v13[1] = a1;
  uint64_t v1 = sub_1AFFC8ED8();
  double v2 = MEMORY[0x1F4188790](v1);
  (*(void (**)(char *, void, double))(v4 + 104))((char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F18700], v2);
  sub_1AFE3AB74(0, &qword_1E9AFB3C0, MEMORY[0x1E4F18588], MEMORY[0x1E4FBBE00]);
  uint64_t v5 = sub_1AFFC8D38();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 72);
  unint64_t v8 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1AFFD0600;
  unint64_t v10 = v9 + v8;
  uint64_t v11 = *(void (**)(unint64_t, void, uint64_t))(v6 + 104);
  v11(v10, *MEMORY[0x1E4F18570], v5);
  v11(v10 + v7, *MEMORY[0x1E4F18578], v5);
  v11(v10 + 2 * v7, *MEMORY[0x1E4F18568], v5);
  v11(v10 + 3 * v7, *MEMORY[0x1E4F18580], v5);
  sub_1AFE3BBD0(0, &qword_1E9AFB3C8, MEMORY[0x1E4F186A8]);
  sub_1AFE3A07C();
  return sub_1AFFC9048();
}

uint64_t sub_1AFE3B4D4(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_1AFD3503C;
  return sub_1AFE3AE30(a1);
}

void sub_1AFE3B570()
{
  sub_1AFE3BB7C();

  JUMPOUT(0x1B3E8ADB0);
}

unint64_t sub_1AFE3B5AC()
{
  unint64_t result = qword_1EB816BD8;
  if (!qword_1EB816BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816BD8);
  }
  return result;
}

unint64_t sub_1AFE3B600()
{
  unint64_t result = qword_1E9AFB3F8;
  if (!qword_1E9AFB3F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB3F8);
  }
  return result;
}

uint64_t sub_1AFE3B654(uint64_t result)
{
  if (result)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1AFE3B6D4()
{
  unint64_t result = qword_1EB816B80;
  if (!qword_1EB816B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816B80);
  }
  return result;
}

unint64_t sub_1AFE3B730()
{
  unint64_t result = qword_1EB811918;
  if (!qword_1EB811918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB811918);
  }
  return result;
}

unint64_t sub_1AFE3B788()
{
  unint64_t result = qword_1EB811908;
  if (!qword_1EB811908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB811908);
  }
  return result;
}

uint64_t sub_1AFE3B7DC()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1AFE3B810()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for SymbolWidgetConfigurationIntent()
{
  return &type metadata for SymbolWidgetConfigurationIntent;
}

uint64_t sub_1AFE3B84C()
{
  return sub_1AFE3B894(&qword_1E9AFB408, (void (*)(uint64_t))sub_1AFE3B8DC);
}

uint64_t sub_1AFE3B894(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1AFE3B8DC()
{
  if (!qword_1E9AFB410)
  {
    sub_1AFE3BBD0(255, &qword_1E9AFB3C8, MEMORY[0x1E4F186A8]);
    sub_1AFE3A028();
    sub_1AFE3A07C();
    unint64_t v0 = sub_1AFFC9068();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9AFB410);
    }
  }
}

uint64_t sub_1AFE3B984()
{
  return sub_1AFE3B894(&qword_1E9AFA4B8, (void (*)(uint64_t))sub_1AFD3765C);
}

unsigned char *storeEnumTagSinglePayload for SymbolWidgetConfigurationIntent._Error(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1AFE3BA68);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SymbolWidgetConfigurationIntent._Error()
{
  return &type metadata for SymbolWidgetConfigurationIntent._Error;
}

unint64_t sub_1AFE3BAA4()
{
  unint64_t result = qword_1E9AFB418;
  if (!qword_1E9AFB418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB418);
  }
  return result;
}

uint64_t sub_1AFE3BAF8(uint64_t result)
{
  if (result)
  {
    sub_1AFFC8E38();
    sub_1AFFC8E48();
    sub_1AFFC8E48();
    sub_1AFFC8E48();
    sub_1AFFC8E48();
    return sub_1AFFC8E38();
  }
  return result;
}

unint64_t sub_1AFE3BB7C()
{
  unint64_t result = qword_1EB811900;
  if (!qword_1EB811900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB811900);
  }
  return result;
}

void sub_1AFE3BBD0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1AFE3A028();
    unint64_t v7 = a3(a1, &type metadata for SymbolWidgetConfigurationIntent, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_1AFE3BC38()
{
  if (!qword_1E9AFB430)
  {
    sub_1AFE3ABD8();
    unint64_t v0 = sub_1AFFCBE88();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9AFB430);
    }
  }
}

void sub_1AFE3BC9C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1AFE3BCE8()
{
  uint64_t v0 = sub_1AFFC9A78();
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v1 = sub_1AFFCAE58();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  unsigned int v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v5);
  unint64_t v7 = &v16[-v6];
  uint64_t v8 = sub_1AFFCAE98();
  uint64_t v10 = v9;
  sub_1AFFCADF8();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v4, v7, v1);
  if (qword_1EB819E80 != -1) {
    swift_once();
  }
  id v11 = (id)qword_1EB831AF8;
  sub_1AFFC9A28();
  uint64_t v12 = sub_1AFFCAEF8();
  uint64_t v14 = v13;
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  return sub_1AFE3BF00(v8, v10, v12, v14, &qword_1E9AFB438);
}

uint64_t sub_1AFE3BF00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v22 = a3;
  uint64_t v23 = a4;
  uint64_t v20 = a1;
  uint64_t v21 = a2;
  uint64_t v24 = a5;
  uint64_t v5 = sub_1AFFC9528();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1AFFC9A78();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v10 = sub_1AFFCAE58();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v11 = sub_1AFFC9548();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFE3D860(0, (unint64_t *)&qword_1EB816AF8, (uint64_t (*)(void))sub_1AFD74388, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4F183F8]);
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  uint64_t v14 = *MEMORY[0x1E4F275D0];
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 104);
  v15(v8, v14, v5);
  sub_1AFFC9558();
  uint64_t v16 = MEMORY[0x1B3E8AFE0](v13);
  sub_1AFFC8E48();
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  v15(v8, v14, v5);
  sub_1AFFC9558();
  uint64_t v17 = MEMORY[0x1B3E8AFE0](v13);
  uint64_t v25 = v20;
  uint64_t v26 = v21;
  swift_retain_n();
  sub_1AFFC8E48();
  sub_1AFFC8B38();
  swift_release();
  swift_release();
  uint64_t v25 = v22;
  uint64_t v26 = v23;
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8B38();
  swift_release_n();
  uint64_t result = swift_release_n();
  uint64_t v19 = v24;
  *uint64_t v24 = v16;
  v19[1] = v17;
  return result;
}

uint64_t sub_1AFE3C250@<X0>(void *a1@<X8>)
{
  if (qword_1E9AF8D48 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_1E9AFB440;
  *a1 = qword_1E9AFB438;
  a1[1] = v2;
  sub_1AFFC8E48();

  return sub_1AFFC8E48();
}

uint64_t sub_1AFE3C2C8()
{
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8B28();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1AFE3C328()
{
  sub_1AFFC8B28();
  return v1;
}

uint64_t sub_1AFE3C35C@<X0>(void *a1@<X8>)
{
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8B28();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_1AFE3C3C0()
{
  return swift_release();
}

uint64_t sub_1AFE3C41C()
{
  return sub_1AFFC8B38();
}

uint64_t (*sub_1AFE3C450(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1AFFC8B18();
  return sub_1AFD3325C;
}

uint64_t sub_1AFE3C4AC()
{
  return sub_1AFFC8B48();
}

uint64_t sub_1AFE3C4D0()
{
  sub_1AFFC8B28();
  return v1;
}

uint64_t sub_1AFE3C504@<X0>(void *a1@<X8>)
{
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8B28();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_1AFE3C568()
{
  return swift_release();
}

uint64_t sub_1AFE3C5C4()
{
  return sub_1AFFC8B38();
}

uint64_t (*sub_1AFE3C5F8(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1AFFC8B18();
  return sub_1AFD3325C;
}

uint64_t sub_1AFE3C654()
{
  return sub_1AFFC8B48();
}

uint64_t sub_1AFE3C678@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v3 = sub_1AFFC9528();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1AFFC9A78();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v8 = sub_1AFFCAE58();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v9 = sub_1AFFC9548();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = *(void *)a1;
  uint64_t v12 = *(void *)(a1 + 8);
  uint64_t v28 = *(void *)(a1 + 16);
  uint64_t v29 = v12;
  uint64_t v13 = *(void *)(a1 + 32);
  uint64_t v26 = *(void *)(a1 + 24);
  uint64_t v27 = v13;
  int v30 = *(unsigned __int16 *)(a1 + 40);
  sub_1AFE3D860(0, (unint64_t *)&qword_1EB816AF8, (uint64_t (*)(void))sub_1AFD74388, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4F183F8]);
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  uint64_t v14 = *MEMORY[0x1E4F275D0];
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
  v15(v6, v14, v3);
  sub_1AFFC9558();
  uint64_t v16 = MEMORY[0x1B3E8AFE0](v11);
  sub_1AFFC8E48();
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  v15(v6, v14, v3);
  sub_1AFFC9558();
  uint64_t v17 = MEMORY[0x1B3E8AFE0](v11);
  uint64_t v18 = v26;
  uint64_t v19 = v27;
  uint64_t v33 = v26;
  uint64_t v34 = v27;
  swift_retain_n();
  sub_1AFFC8E48();
  sub_1AFFC8E38();
  sub_1AFFC8B38();
  swift_release();
  swift_release();
  uint64_t v33 = v31;
  uint64_t v34 = v29;
  uint64_t v35 = v28;
  uint64_t v36 = v18;
  uint64_t v37 = v19;
  __int16 v38 = v30;
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  uint64_t v20 = sub_1AFEAB700();
  uint64_t v22 = v21;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v33 = v20;
  uint64_t v34 = v22;
  sub_1AFFC8B38();
  swift_release_n();
  uint64_t result = swift_release_n();
  uint64_t v24 = v32;
  *uint64_t v32 = v16;
  v24[1] = v17;
  return result;
}

uint64_t sub_1AFE3CA2C@<X0>(void *a1@<X8>)
{
  if (qword_1EB811860 != -1) {
    swift_once();
  }
  *a1 = qword_1E9AFB448;

  return sub_1AFFC8E48();
}

uint64_t sub_1AFE3CA98@<X0>(void *a1@<X8>)
{
  if (qword_1EB811860 != -1) {
    swift_once();
  }
  *a1 = qword_1E9AFB448;

  return sub_1AFFC8E48();
}

uint64_t sub_1AFE3CB04@<X0>(void *a1@<X8>)
{
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8B28();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_1AFE3CB6C@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E9AF8D58 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1AFFC8FA8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1E9AFB450);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1AFE3CC14@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E9AF8D58 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1AFFC8FA8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1E9AFB450);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1AFE3CCBC(uint64_t a1)
{
  unint64_t v2 = sub_1AFE3D940();

  return MEMORY[0x1F40D3BC8](a1, v2);
}

uint64_t sub_1AFE3CD0C()
{
  uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1AFD97028(0, &qword_1EB810BA8, MEMORY[0x1E4F18628], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v12 - v2;
  sub_1AFD97028(0, &qword_1EB816B00, MEMORY[0x1E4F27608], v0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v12 - v5;
  uint64_t v7 = sub_1AFFC9548();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = sub_1AFFCAE38();
  MEMORY[0x1F4188790](v9 - 8);
  sub_1AFFCAE28();
  sub_1AFFCAE18();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8B28();
  swift_release();
  swift_release();
  sub_1AFFCAE08();
  swift_bridgeObjectRelease();
  sub_1AFFCAE18();
  sub_1AFFC9538();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
  uint64_t v10 = sub_1AFFC8DB8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v3, 1, 1, v10);
  return sub_1AFFC8DC8();
}

uint64_t sub_1AFE3CFD8(uint64_t a1)
{
  unint64_t v2 = sub_1AFE3D778();

  return MEMORY[0x1F40D4970](a1, v2);
}

uint64_t sub_1AFE3D024()
{
  sub_1AFD97028(0, (unint64_t *)&qword_1EB8167E0, (uint64_t (*)(uint64_t))sub_1AFD33A98, MEMORY[0x1E4F18188]);
  sub_1AFFC8A08();
  sub_1AFFC89F8();
  uint64_t result = sub_1AFFC89C8();
  qword_1E9AFB448 = result;
  return result;
}

uint64_t sub_1AFE3D0B8()
{
  uint64_t v14 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27608];
  sub_1AFD97028(0, &qword_1EB816B00, MEMORY[0x1E4F27608], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v13 = (char *)&v12 - v1;
  uint64_t v2 = sub_1AFFC9528();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1AFFC9A78();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v7 = sub_1AFFCAE58();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v8 = sub_1AFFC9548();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = sub_1AFFC8FA8();
  __swift_allocate_value_buffer(v10, qword_1E9AFB450);
  __swift_project_value_buffer(v10, (uint64_t)qword_1E9AFB450);
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4F275D0], v2);
  sub_1AFFC9558();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v13, 1, 1, v8);
  sub_1AFD97028(0, &qword_1E9AFA0E0, v14, MEMORY[0x1E4FBBE00]);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1AFFD2CC0;
  sub_1AFFC9518();
  sub_1AFFC9518();
  sub_1AFFC9518();
  sub_1AFFC9518();
  sub_1AFFC9518();
  sub_1AFFC9518();
  return sub_1AFFC8F88();
}

unint64_t sub_1AFE3D510()
{
  unint64_t result = qword_1EB811868;
  if (!qword_1EB811868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB811868);
  }
  return result;
}

unint64_t sub_1AFE3D568()
{
  unint64_t result = qword_1EB811880;
  if (!qword_1EB811880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB811880);
  }
  return result;
}

unint64_t sub_1AFE3D5C0()
{
  unint64_t result = qword_1EB8118A8;
  if (!qword_1EB8118A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8118A8);
  }
  return result;
}

unint64_t sub_1AFE3D618()
{
  unint64_t result = qword_1E9AFB468;
  if (!qword_1E9AFB468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB468);
  }
  return result;
}

unint64_t sub_1AFE3D670()
{
  unint64_t result = qword_1EB811888;
  if (!qword_1EB811888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB811888);
  }
  return result;
}

unint64_t sub_1AFE3D6C8()
{
  unint64_t result = qword_1EB811890;
  if (!qword_1EB811890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB811890);
  }
  return result;
}

unint64_t sub_1AFE3D720()
{
  unint64_t result = qword_1EB811878;
  if (!qword_1EB811878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB811878);
  }
  return result;
}

unint64_t sub_1AFE3D778()
{
  unint64_t result = qword_1EB811898;
  if (!qword_1EB811898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB811898);
  }
  return result;
}

unint64_t sub_1AFE3D7D0()
{
  unint64_t result = qword_1EB811808;
  if (!qword_1EB811808)
  {
    sub_1AFE3D860(255, &qword_1EB811810, (uint64_t (*)(void))sub_1AFE3D720, (uint64_t)&type metadata for WatchlistWidgetEntity, MEMORY[0x1E4F18768]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB811808);
  }
  return result;
}

void sub_1AFE3D860(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_1AFE3D8CC()
{
  unint64_t result = qword_1EB8118A0;
  if (!qword_1EB8118A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8118A0);
  }
  return result;
}

ValueMetadata *type metadata accessor for WatchlistWidgetEntity()
{
  return &type metadata for WatchlistWidgetEntity;
}

unint64_t sub_1AFE3D940()
{
  unint64_t result = qword_1EB811870;
  if (!qword_1EB811870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB811870);
  }
  return result;
}

unint64_t sub_1AFE3D994()
{
  return 0xD000000000000014;
}

uint64_t sub_1AFE3D9B0()
{
  uint64_t v0 = sub_1AFFC9528();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1AFFC9A78();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v5 = sub_1AFFCAE58();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v6 = sub_1AFFC9548();
  __swift_allocate_value_buffer(v6, qword_1E9AFB470);
  __swift_project_value_buffer(v6, (uint64_t)qword_1E9AFB470);
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4F275D0], v0);
  return sub_1AFFC9558();
}

uint64_t sub_1AFE3DB98@<X0>(uint64_t a1@<X8>)
{
  return sub_1AFD32B4C(&qword_1E9AF8D60, MEMORY[0x1E4F27608], (uint64_t)qword_1E9AFB470, a1);
}

uint64_t sub_1AFE3DBD0()
{
  sub_1AFE40D50(0, &qword_1EB816B00, MEMORY[0x1E4F27608], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)v12 - v1;
  v12[0] = sub_1AFFC9528();
  uint64_t v3 = *(void *)(v12[0] - 8);
  MEMORY[0x1F4188790](v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1AFFC9A78();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v7 = sub_1AFFCAE58();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v8 = sub_1AFFC9548();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = sub_1AFFC8CD8();
  __swift_allocate_value_buffer(v10, qword_1E9AFB488);
  __swift_project_value_buffer(v10, (uint64_t)qword_1E9AFB488);
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, *MEMORY[0x1E4F275D0], v12[0]);
  sub_1AFFC9558();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_1AFFC8CE8();
}

uint64_t sub_1AFE3DED8@<X0>(uint64_t a1@<X8>)
{
  return sub_1AFD32B4C(&qword_1E9AF8D68, MEMORY[0x1E4F18510], (uint64_t)qword_1E9AFB488, a1);
}

uint64_t sub_1AFE3DF10()
{
  return 1;
}

uint64_t sub_1AFE3DF18()
{
  return 0;
}

uint64_t sub_1AFE3DF20()
{
  uint64_t v0 = sub_1AFFC8ED8();
  double v1 = MEMORY[0x1F4188790](v0);
  (*(void (**)(char *, void, double))(v3 + 104))((char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F18700], v1);
  sub_1AFE40D50(0, &qword_1E9AFB3C0, MEMORY[0x1E4F18588], MEMORY[0x1E4FBBE00]);
  uint64_t v4 = sub_1AFFC8D38();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 72);
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1AFFD0610;
  unint64_t v9 = v8 + v7;
  uint64_t v10 = *(void (**)(unint64_t, void, uint64_t))(v5 + 104);
  v10(v9, *MEMORY[0x1E4F18578], v4);
  v10(v9 + v6, *MEMORY[0x1E4F18568], v4);
  sub_1AFE41100(0, &qword_1E9AFB4A0, MEMORY[0x1E4F186A8]);
  sub_1AFE3E9B4();
  sub_1AFE3E960();
  sub_1AFE3EA5C();
  sub_1AFE3EAD0(&qword_1E9AFB4B8, (void (*)(uint64_t))sub_1AFE3E9B4);
  return sub_1AFFC9048();
}

uint64_t sub_1AFE3E1C8()
{
  return sub_1AFE3EB30();
}

uint64_t sub_1AFE3E1E0()
{
  swift_getKeyPath();
  sub_1AFE3E960();
  uint64_t v0 = sub_1AFFC8E48();
  swift_release();
  swift_getKeyPath();
  sub_1AFFC8E48();
  uint64_t v1 = sub_1AFFC8E48();
  swift_release();
  swift_getKeyPath();
  sub_1AFFC8E48();
  uint64_t v2 = sub_1AFFC8E48();
  swift_release();
  swift_getKeyPath();
  sub_1AFFC8E48();
  uint64_t v3 = sub_1AFFC8E48();
  swift_release();
  sub_1AFE411D0(0, (unint64_t *)&qword_1EB8183E0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1AFFD9A10;
  *(void *)(v4 + 32) = v0;
  *(void *)(v4 + 40) = v1;
  *(void *)(v4 + 48) = v2;
  *(void *)(v4 + 56) = v3;
  sub_1AFFCB1E8();
  sub_1AFFC8E48();
  uint64_t v5 = sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v5;
}

uint64_t sub_1AFE3E380()
{
  return sub_1AFFC8C28();
}

uint64_t sub_1AFE3E3A4@<X0>(uint64_t *a1@<X8>)
{
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  uint64_t v2 = sub_1AFFC8C28();
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v2;
  return result;
}

uint64_t sub_1AFE3E428()
{
  return sub_1AFFC8C28();
}

uint64_t sub_1AFE3E44C@<X0>(uint64_t *a1@<X8>)
{
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  uint64_t v2 = sub_1AFFC8C28();
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v2;
  return result;
}

uint64_t sub_1AFE3E4D0()
{
  return sub_1AFFC8C28();
}

uint64_t sub_1AFE3E4F4@<X0>(uint64_t *a1@<X8>)
{
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  uint64_t v2 = sub_1AFFC8C28();
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v2;
  return result;
}

uint64_t sub_1AFE3E578()
{
  return sub_1AFFC8C28();
}

uint64_t sub_1AFE3E59C@<X0>(uint64_t *a1@<X8>)
{
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  uint64_t v2 = sub_1AFFC8C28();
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v2;
  return result;
}

uint64_t sub_1AFE3E620@<X0>(uint64_t a1@<X8>)
{
  v21[1] = a1;
  uint64_t v1 = sub_1AFFC8D38();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1AFFC8FD8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFE3E9B4();
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v15 = MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)v21 - v16;
  (*(void (**)(char *, void, uint64_t, double))(v6 + 104))(v8, *MEMORY[0x1E4F187A8], v5, v15);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4F18570], v1);
  sub_1AFE41100(0, &qword_1E9AFB4A0, MEMORY[0x1E4F186A8]);
  sub_1AFE3E960();
  sub_1AFE3EA5C();
  sub_1AFFC9058();
  uint64_t v18 = sub_1AFE3EAD0(&qword_1E9AFB4B8, (void (*)(uint64_t))sub_1AFE3E9B4);
  MEMORY[0x1B3E8B350](v13, &type metadata for WatchlistWidgetConfigurationIntent, v10, v18);
  uint64_t v19 = *(void (**)(char *, uint64_t))(v11 + 8);
  v19(v13, v10);
  MEMORY[0x1B3E8B340](v17, &type metadata for WatchlistWidgetConfigurationIntent, v10, v18);
  return ((uint64_t (*)(char *, uint64_t))v19)(v17, v10);
}

unint64_t sub_1AFE3E960()
{
  unint64_t result = qword_1EB811930;
  if (!qword_1EB811930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB811930);
  }
  return result;
}

void sub_1AFE3E9B4()
{
  if (!qword_1E9AFB4A8)
  {
    sub_1AFE41100(255, &qword_1E9AFB4A0, MEMORY[0x1E4F186A8]);
    sub_1AFE3E960();
    sub_1AFE3EA5C();
    unint64_t v0 = sub_1AFFC9068();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9AFB4A8);
    }
  }
}

unint64_t sub_1AFE3EA5C()
{
  unint64_t result = qword_1E9AFB4B0;
  if (!qword_1E9AFB4B0)
  {
    sub_1AFE41100(255, &qword_1E9AFB4A0, MEMORY[0x1E4F186A8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB4B0);
  }
  return result;
}

uint64_t sub_1AFE3EAD0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AFE3EB18()
{
  return sub_1AFE3EB30();
}

uint64_t sub_1AFE3EB30()
{
  sub_1AFE41100(0, &qword_1E9AFB4A0, MEMORY[0x1E4F186A8]);
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v11 - v6;
  sub_1AFE3E960();
  sub_1AFFC8E78();
  unint64_t v8 = sub_1AFE3EA5C();
  MEMORY[0x1B3E8B350](v4, &type metadata for WatchlistWidgetConfigurationIntent, v1, v8);
  uint64_t v9 = *(void (**)(char *, uint64_t))(v2 + 8);
  v9(v4, v1);
  MEMORY[0x1B3E8B340](v7, &type metadata for WatchlistWidgetConfigurationIntent, v1, v8);
  return ((uint64_t (*)(char *, uint64_t))v9)(v7, v1);
}

uint64_t sub_1AFE3ECAC()
{
  swift_getKeyPath();
  sub_1AFE3E960();
  uint64_t v0 = sub_1AFFC8E48();
  swift_release();
  swift_getKeyPath();
  sub_1AFFC8E48();
  uint64_t v1 = sub_1AFFC8E48();
  swift_release();
  swift_getKeyPath();
  sub_1AFFC8E48();
  uint64_t v2 = sub_1AFFC8E48();
  swift_release();
  sub_1AFE411D0(0, (unint64_t *)&qword_1EB8183E0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1AFFD9A20;
  *(void *)(v3 + 32) = v0;
  *(void *)(v3 + 40) = v1;
  *(void *)(v3 + 48) = v2;
  sub_1AFFCB1E8();
  sub_1AFFC8E48();
  uint64_t v4 = sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return v4;
}

uint64_t sub_1AFE3EE14@<X0>(uint64_t a1@<X8>)
{
  v14[1] = a1;
  sub_1AFE41100(0, &qword_1E9AFB4E0, MEMORY[0x1E4F186C8]);
  MEMORY[0x1F4188790](v1 - 8);
  sub_1AFE41100(0, &qword_1E9AFB4E8, MEMORY[0x1E4F186C0]);
  MEMORY[0x1F4188790](v2);
  sub_1AFE41100(0, &qword_1E9AFB4A0, MEMORY[0x1E4F186A8]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v14 - v9;
  sub_1AFE3E960();
  sub_1AFFC8EA8();
  sub_1AFFC8E98();
  swift_getKeyPath();
  sub_1AFE41168();
  sub_1AFFC8E88();
  swift_release();
  sub_1AFFC8E98();
  sub_1AFFC8EB8();
  sub_1AFFC8E58();
  unint64_t v11 = sub_1AFE3EA5C();
  MEMORY[0x1B3E8B350](v7, &type metadata for WatchlistWidgetConfigurationIntent, v4, v11);
  uint64_t v12 = *(void (**)(char *, uint64_t))(v5 + 8);
  v12(v7, v4);
  MEMORY[0x1B3E8B340](v10, &type metadata for WatchlistWidgetConfigurationIntent, v4, v11);
  return ((uint64_t (*)(char *, uint64_t))v12)(v10, v4);
}

uint64_t sub_1AFE3F0E4()
{
  return sub_1AFFC8C08();
}

double sub_1AFE3F108@<D0>(_OWORD *a1@<X8>)
{
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8C08();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_1AFE3F198(uint64_t *a1)
{
  return swift_release();
}

uint64_t sub_1AFE3F228()
{
  return sub_1AFFC8C18();
}

uint64_t (*sub_1AFE3F260(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1AFFC8BF8();
  return sub_1AFD3325C;
}

uint64_t sub_1AFE3F2BC()
{
  return sub_1AFFC8C08();
}

uint64_t sub_1AFE3F2E0@<X0>(unsigned char *a1@<X8>)
{
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8C08();
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1AFE3F370()
{
  return swift_release();
}

uint64_t sub_1AFE3F3F4()
{
  return sub_1AFFC8C18();
}

uint64_t (*sub_1AFE3F42C(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1AFFC8BF8();
  return sub_1AFD3325C;
}

uint64_t sub_1AFE3F488()
{
  sub_1AFFC8C08();
  return v1;
}

uint64_t sub_1AFE3F4BC@<X0>(unsigned char *a1@<X8>)
{
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8C08();
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1AFE3F54C()
{
  return swift_release();
}

uint64_t sub_1AFE3F5D0()
{
  return sub_1AFFC8C18();
}

uint64_t (*sub_1AFE3F604(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1AFFC8BF8();
  return sub_1AFD3325C;
}

uint64_t sub_1AFE3F660()
{
  sub_1AFFC8C08();
  return v1;
}

uint64_t sub_1AFE3F694@<X0>(unsigned char *a1@<X8>)
{
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8C08();
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1AFE3F724()
{
  return swift_release();
}

uint64_t sub_1AFE3F7A8()
{
  return sub_1AFFC8C18();
}

uint64_t (*sub_1AFE3F7DC(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1AFFC8BF8();
  return sub_1AFD3325C;
}

uint64_t sub_1AFE3F838@<X0>(uint64_t *a1@<X8>)
{
  char v56 = a1;
  unsigned __int8 v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1AFE40D50(0, &qword_1EB811408, MEMORY[0x1E4F188F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v59 = (char *)v52 - v3;
  uint64_t v4 = sub_1AFFC8EC8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v74 = v4;
  uint64_t v75 = v5;
  MEMORY[0x1F4188790](v4);
  uint64_t v73 = (char *)v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFE40D50(0, &qword_1EB816AF0, MEMORY[0x1E4F182D8], v1);
  MEMORY[0x1F4188790](v7 - 8);
  char v57 = (char *)v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v67 = (char *)v52 - v10;
  sub_1AFE40D50(0, &qword_1EB816B00, MEMORY[0x1E4F27608], v1);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v66 = (char *)v52 - v12;
  uint64_t v13 = sub_1AFFC9528();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1AFFC9A78();
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v18 = sub_1AFFCAE58();
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v19 = sub_1AFFC9548();
  uint64_t v64 = v19;
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  sub_1AFE40398();
  uint64_t v55 = v21;
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 104);
  unsigned int v60 = *MEMORY[0x1E4F275D0];
  uint64_t v22 = v60;
  uint64_t v62 = v13;
  v23(v16, v60, v13);
  long long v61 = v23;
  uint64_t v63 = v14 + 104;
  sub_1AFFC9558();
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  v23(v16, v22, v13);
  uint64_t v24 = v66;
  sub_1AFFC9558();
  uint64_t v65 = *(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56);
  uint64_t v72 = v20 + 56;
  v65(v24, 0, 1, v19);
  uint64_t v25 = sub_1AFFC8AD8();
  uint64_t v76 = 0;
  uint64_t v77 = 0;
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56);
  uint64_t v68 = v27;
  uint64_t v69 = v26 + 56;
  uint64_t v28 = v67;
  v27(v67, 1, 1, v25);
  v27(v57, 1, 1, v25);
  unsigned int v71 = *MEMORY[0x1E4F186F0];
  uint64_t v70 = *(void (**)(char *))(v75 + 104);
  v75 += 104;
  v70(v73);
  sub_1AFE3D940();
  uint64_t v29 = v28;
  uint64_t v55 = sub_1AFFC8C68();
  sub_1AFE3AC94();
  uint64_t v54 = v30;
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  uint64_t v31 = v60;
  uint64_t v32 = v61;
  uint64_t v33 = v62;
  v61(v16, v60, v62);
  sub_1AFFC9558();
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  v32(v16, v31, v33);
  uint64_t v34 = v66;
  sub_1AFFC9558();
  v65(v34, 0, 1, v64);
  LOBYTE(v76) = 0;
  uint64_t v35 = v29;
  uint64_t v36 = v25;
  uint64_t v58 = v25;
  uint64_t v37 = v25;
  __int16 v38 = v68;
  v68(v35, 1, 1, v37);
  v38(v57, 1, 1, v36);
  ((void (*)(char *, void, uint64_t))v70)(v73, v71, v74);
  sub_1AFE3B5AC();
  uint64_t v54 = sub_1AFFC8C38();
  sub_1AFE40C40();
  char v57 = v39;
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  uint64_t v40 = v60;
  uint64_t v41 = v62;
  uint64_t v42 = v61;
  v61(v16, v60, v62);
  sub_1AFFC9558();
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  v42(v16, v40, v41);
  uint64_t v43 = v66;
  sub_1AFFC9558();
  v65(v43, 0, 1, v64);
  LOBYTE(v76) = 0;
  uint64_t v44 = sub_1AFFCB298();
  uint64_t v45 = *(void *)(v44 - 8);
  v52[0] = *(void *)(v45 + 56);
  v52[1] = v45 + 56;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v52[0])(v59, 1, 1, v44);
  v68(v67, 1, 1, v58);
  ((void (*)(char *, void, uint64_t))v70)(v73, v71, v74);
  uint64_t v53 = sub_1AFFC8C88();
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  uint64_t v46 = v60;
  uint64_t v47 = v61;
  uint64_t v48 = v62;
  v61(v16, v60, v62);
  sub_1AFFC9558();
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  v47(v16, v46, v48);
  sub_1AFFC9558();
  v65(v43, 0, 1, v64);
  LOBYTE(v76) = 0;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v52[0])(v59, 1, 1, v44);
  v68(v67, 1, 1, v58);
  ((void (*)(char *, void, uint64_t))v70)(v73, v71, v74);
  uint64_t result = sub_1AFFC8C88();
  uint64_t v50 = v56;
  uint64_t v51 = v54;
  *char v56 = v55;
  v50[1] = v51;
  v50[2] = v53;
  v50[3] = result;
  return result;
}

void sub_1AFE40398()
{
  if (!qword_1EB8117F0)
  {
    sub_1AFE411D0(255, &qword_1EB8118B0, (uint64_t)&type metadata for WatchlistWidgetEntity, MEMORY[0x1E4FBB718]);
    sub_1AFE40454(&qword_1EB8118B8, &qword_1EB8118B0, (uint64_t)&type metadata for WatchlistWidgetEntity, (void (*)(void))sub_1AFE3D720);
    unint64_t v0 = sub_1AFFC8C98();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8117F0);
    }
  }
}

uint64_t sub_1AFE40454(unint64_t *a1, unint64_t *a2, uint64_t a3, void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1AFE411D0(255, a2, a3, MEMORY[0x1E4FBB718]);
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AFE404E0(uint64_t a1)
{
  *(void *)(v2 + 88) = a1;
  sub_1AFE40D50(0, &qword_1EB810BC8, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity, MEMORY[0x1E4FBB718]);
  *(void *)(v2 + 96) = swift_task_alloc();
  long long v3 = v1[1];
  *(_OWORD *)(v2 + 104) = *v1;
  *(_OWORD *)(v2 + 120) = v3;
  return MEMORY[0x1F4188298](sub_1AFE405AC, 0, 0);
}

uint64_t sub_1AFE405AC()
{
  uint64_t v11 = v0;
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8C08();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  if (!v0[5])
  {
    if (qword_1E9AF8D48 != -1) {
      swift_once();
    }
    sub_1AFFC8E48();
    sub_1AFFC8E48();
  }
  uint64_t v1 = v0[12];
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8B28();
  swift_release();
  swift_release();
  uint64_t v2 = v0[7];
  uint64_t v3 = v0[8];
  sub_1AFFC8B28();
  swift_release();
  swift_release();
  WatchlistEntity.init(id:name:)(v2, v3, v0[9], v0[10], &v10);
  uint64_t v4 = type metadata accessor for SymbolEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v1, 1, 1, v4);
  sub_1AFD5A49C(&v10, v1, v9);
  uint64_t v5 = v9[1];
  uint64_t v6 = v9[2];
  v0[2] = v9[0];
  v0[3] = v5;
  v0[4] = v6;
  sub_1AFD5907C();
  sub_1AFFC8AE8();
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

unint64_t sub_1AFE407F8()
{
  return 0xD000000000000014;
}

uint64_t sub_1AFE40814@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E9AF8D60 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1AFFC9548();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1E9AFB470);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1AFE408BC()
{
  uint64_t v0 = sub_1AFFC8ED8();
  double v1 = MEMORY[0x1F4188790](v0);
  (*(void (**)(char *, void, double))(v3 + 104))((char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F18700], v1);
  sub_1AFE40D50(0, &qword_1E9AFB3C0, MEMORY[0x1E4F18588], MEMORY[0x1E4FBBE00]);
  uint64_t v4 = sub_1AFFC8D38();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 72);
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1AFFD0610;
  unint64_t v9 = v8 + v7;
  uint64_t v10 = *(void (**)(unint64_t, void, uint64_t))(v5 + 104);
  v10(v9, *MEMORY[0x1E4F18578], v4);
  v10(v9 + v6, *MEMORY[0x1E4F18568], v4);
  sub_1AFE41100(0, &qword_1E9AFB4A0, MEMORY[0x1E4F186A8]);
  sub_1AFE3E9B4();
  sub_1AFE3EA5C();
  sub_1AFE3EAD0(&qword_1E9AFB4B8, (void (*)(uint64_t))sub_1AFE3E9B4);
  return sub_1AFFC9048();
}

uint64_t sub_1AFE40B68(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_1AFD3503C;
  return sub_1AFE404E0(a1);
}

void sub_1AFE40C04()
{
  sub_1AFE410AC();

  JUMPOUT(0x1B3E8ADB0);
}

void sub_1AFE40C40()
{
  if (!qword_1EB811800)
  {
    uint64_t v0 = MEMORY[0x1E4FBB390];
    sub_1AFE411D0(255, &qword_1EB811970, MEMORY[0x1E4FBB390], MEMORY[0x1E4FBB718]);
    sub_1AFE40454(&qword_1EB811978, &qword_1EB811970, v0, (void (*)(void))sub_1AFE40CFC);
    unint64_t v1 = sub_1AFFC8C98();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EB811800);
    }
  }
}

unint64_t sub_1AFE40CFC()
{
  unint64_t result = qword_1EB811400;
  if (!qword_1EB811400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB811400);
  }
  return result;
}

void sub_1AFE40D50(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1AFE40DBC()
{
  unint64_t result = qword_1EB811938;
  if (!qword_1EB811938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB811938);
  }
  return result;
}

unint64_t sub_1AFE40E14()
{
  unint64_t result = qword_1EB811928;
  if (!qword_1EB811928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB811928);
  }
  return result;
}

uint64_t sub_1AFE40E68()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1AFE40E9C()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for WatchlistWidgetConfigurationIntent()
{
  return &type metadata for WatchlistWidgetConfigurationIntent;
}

uint64_t sub_1AFE40EE8()
{
  return sub_1AFE3EAD0(&qword_1E9AFB4D0, (void (*)(uint64_t))sub_1AFE40F30);
}

void sub_1AFE40F30()
{
  if (!qword_1E9AFB4D8)
  {
    sub_1AFE41100(255, &qword_1E9AFB4A0, MEMORY[0x1E4F186A8]);
    sub_1AFE3E9B4();
    sub_1AFE3E960();
    sub_1AFE3EA5C();
    sub_1AFE3EAD0(&qword_1E9AFB4B8, (void (*)(uint64_t))sub_1AFE3E9B4);
    unint64_t v0 = sub_1AFFC9068();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9AFB4D8);
    }
  }
}

uint64_t sub_1AFE41024()
{
  return sub_1AFE3EAD0(&qword_1E9AFA4B8, (void (*)(uint64_t))sub_1AFD3765C);
}

uint64_t sub_1AFE4106C(uint64_t result)
{
  if (result)
  {
    sub_1AFFC8E48();
    return sub_1AFFC8E48();
  }
  return result;
}

unint64_t sub_1AFE410AC()
{
  unint64_t result = qword_1EB811920;
  if (!qword_1EB811920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB811920);
  }
  return result;
}

void sub_1AFE41100(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1AFE3E960();
    unint64_t v7 = a3(a1, &type metadata for WatchlistWidgetConfigurationIntent, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_1AFE41168()
{
  if (!qword_1E9AFB4F0)
  {
    sub_1AFE40398();
    unint64_t v0 = sub_1AFFCBE88();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9AFB4F0);
    }
  }
}

void sub_1AFE411D0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1AFE41220()
{
  sub_1AFE42690(0, &qword_1EB816B00, MEMORY[0x1E4F27608], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)v12 - v1;
  v12[0] = sub_1AFFC9528();
  uint64_t v3 = *(void *)(v12[0] - 8);
  MEMORY[0x1F4188790](v12[0]);
  unint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1AFFC9A78();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v7 = sub_1AFFCAE58();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v8 = sub_1AFFC9548();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = sub_1AFFC8FA8();
  __swift_allocate_value_buffer(v10, qword_1E9AFB4F8);
  __swift_project_value_buffer(v10, (uint64_t)qword_1E9AFB4F8);
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, *MEMORY[0x1E4F275D0], v12[0]);
  sub_1AFFC9558();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_1AFFC8F98();
}

uint64_t sub_1AFE41524@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E9AF8D70 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1AFFC8FA8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1E9AFB4F8);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

unint64_t sub_1AFE415CC()
{
  uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1AFE42690(0, &qword_1EB810BA8, MEMORY[0x1E4F18628], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v42 = (char *)&v28 - v2;
  sub_1AFE42690(0, &qword_1EB816B00, MEMORY[0x1E4F27608], v0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v41 = (char *)&v28 - v4;
  uint64_t v44 = sub_1AFFC9528();
  uint64_t v5 = *(void *)(v44 - 8);
  MEMORY[0x1F4188790](v44);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1AFFC9A78();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v9 = sub_1AFFCAE58();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_1AFFC9548();
  uint64_t v45 = *(void *)(v43 - 8);
  MEMORY[0x1F4188790](v43);
  sub_1AFE42690(0, &qword_1E9AFB528, (uint64_t (*)(uint64_t))sub_1AFE426F4, MEMORY[0x1E4FBBE00]);
  sub_1AFE426F4();
  uint64_t v13 = v12 - 8;
  uint64_t v14 = *(void *)(*(void *)(v12 - 8) + 72);
  unint64_t v15 = (*(unsigned __int8 *)(*(void *)(v12 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v12 - 8) + 80);
  uint64_t v35 = 2 * v14;
  uint64_t v16 = swift_allocObject();
  uint64_t v36 = v16;
  *(_OWORD *)(v16 + 16) = xmmword_1AFFD0DC0;
  unint64_t v34 = v16 + v15;
  unint64_t v32 = v16 + v15 + *(int *)(v13 + 56);
  *(unsigned char *)(v16 + v15) = 0;
  uint64_t v28 = v11;
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  uint64_t v17 = *MEMORY[0x1E4F275D0];
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
  uint64_t v33 = v5 + 104;
  uint64_t v40 = v18;
  uint64_t v29 = v7;
  unsigned int v31 = v17;
  v18(v7, v17, v44);
  sub_1AFFC9558();
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v45 + 56);
  v45 += 56;
  char v39 = v19;
  v19(v41, 1, 1, v43);
  uint64_t v38 = sub_1AFFC8DB8();
  uint64_t v20 = *(void *)(v38 - 8);
  uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56);
  uint64_t v21 = v20 + 56;
  v37(v42, 1, 1, v38);
  uint64_t v30 = v21;
  sub_1AFFC8DC8();
  unint64_t v22 = v34;
  unint64_t v32 = v34 + v14 + *(int *)(v13 + 56);
  *(unsigned char *)(v34 + v14) = 1;
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  uint64_t v23 = v29;
  v40(v29, v17, v44);
  uint64_t v24 = v23;
  sub_1AFFC9558();
  uint64_t v25 = v41;
  v39(v41, 1, 1, v43);
  uint64_t v26 = v42;
  v37(v42, 1, 1, v38);
  sub_1AFFC8DC8();
  *(unsigned char *)(v22 + v35) = 2;
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  v40(v24, v31, v44);
  sub_1AFFC9558();
  v39(v25, 1, 1, v43);
  v37(v26, 1, 1, v38);
  sub_1AFFC8DC8();
  unint64_t result = sub_1AFDFA640(v36);
  qword_1E9AFB510 = result;
  return result;
}

uint64_t sub_1AFE41C58()
{
  if (qword_1E9AF8D78 != -1) {
    swift_once();
  }

  return sub_1AFFC8E38();
}

uint64_t sub_1AFE41CB4@<X0>(char *a1@<X8>)
{
  unint64_t v2 = sub_1AFFCBA78();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 3;
  if (v2 < 3) {
    char v4 = v2;
  }
  *a1 = v4;
  return result;
}

void *sub_1AFE41D10()
{
  return &unk_1F0876580;
}

uint64_t sub_1AFE41D1C()
{
  uint64_t v1 = 0x737961776C61;
  if (*v0 != 1) {
    uint64_t v1 = 0x726576656ELL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x756F487265746661;
  }
}

uint64_t sub_1AFE41D74(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1AFDED1F8(*a1, *a2);
}

unint64_t sub_1AFE41D84()
{
  unint64_t result = qword_1EB816C00;
  if (!qword_1EB816C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816C00);
  }
  return result;
}

uint64_t sub_1AFE41DD8()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFE41E78()
{
  sub_1AFFCAF68();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFE41F04()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFE41FA0@<X0>(char *a1@<X8>)
{
  return sub_1AFE41CB4(a1);
}

void sub_1AFE41FAC(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xEA00000000007372;
  unint64_t v4 = 0xE600000000000000;
  uint64_t v5 = 0x737961776C61;
  if (v2 != 1)
  {
    uint64_t v5 = 0x726576656ELL;
    unint64_t v4 = 0xE500000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x756F487265746661;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

unint64_t sub_1AFE4200C()
{
  unint64_t result = qword_1EB816BE0;
  if (!qword_1EB816BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816BE0);
  }
  return result;
}

unint64_t sub_1AFE42064()
{
  unint64_t result = qword_1EB816BD0;
  if (!qword_1EB816BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816BD0);
  }
  return result;
}

unint64_t sub_1AFE420BC()
{
  unint64_t result = qword_1EB816C08;
  if (!qword_1EB816C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816C08);
  }
  return result;
}

uint64_t sub_1AFE42110()
{
  return MEMORY[0x1E4FBB210];
}

unint64_t sub_1AFE42120()
{
  unint64_t result = qword_1EB816BE8;
  if (!qword_1EB816BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816BE8);
  }
  return result;
}

unint64_t sub_1AFE42178()
{
  unint64_t result = qword_1EB816BC8;
  if (!qword_1EB816BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816BC8);
  }
  return result;
}

unint64_t sub_1AFE421D4()
{
  unint64_t result = qword_1EB816BC0;
  if (!qword_1EB816BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816BC0);
  }
  return result;
}

uint64_t sub_1AFE42228@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E9AF8D70 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1AFFC8FA8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1E9AFB4F8);
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1AFE422D0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1AFE42320(uint64_t a1)
{
  unint64_t v2 = sub_1AFE3B5AC();

  return MEMORY[0x1F40D3B98](a1, v2);
}

unint64_t sub_1AFE42370()
{
  unint64_t result = qword_1EB816BF0;
  if (!qword_1EB816BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816BF0);
  }
  return result;
}

unint64_t sub_1AFE423C8()
{
  unint64_t result = qword_1EB816C10;
  if (!qword_1EB816C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816C10);
  }
  return result;
}

uint64_t sub_1AFE42420()
{
  if (qword_1E9AF8D78 != -1) {
    swift_once();
  }

  return sub_1AFFC8E38();
}

uint64_t sub_1AFE4247C(uint64_t a1)
{
  unint64_t v2 = sub_1AFE421D4();

  return MEMORY[0x1F40D47F0](a1, v2);
}

unint64_t sub_1AFE424CC()
{
  unint64_t result = qword_1E9AFB518;
  if (!qword_1E9AFB518)
  {
    sub_1AFE42524();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB518);
  }
  return result;
}

void sub_1AFE42524()
{
  if (!qword_1E9AFB520)
  {
    unint64_t v0 = sub_1AFFCB288();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9AFB520);
    }
  }
}

void sub_1AFE4257C(void *a1@<X8>)
{
  *a1 = &unk_1F08766A0;
}

unsigned char *storeEnumTagSinglePayload for NewsDisplayConfiguration(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFE42658);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NewsDisplayConfiguration()
{
  return &type metadata for NewsDisplayConfiguration;
}

void sub_1AFE42690(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1AFE426F4()
{
  if (!qword_1E9AFB018)
  {
    sub_1AFFC8DD8();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1E9AFB018);
    }
  }
}

uint64_t sub_1AFE4275C@<X0>(long long *a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v32 = a2;
  uint64_t v3 = sub_1AFFC9528();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unsigned int v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1AFFC9A78();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v8 = sub_1AFFCAE58();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v9 = sub_1AFFC9548();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v12 = a1[7];
  long long v40 = a1[6];
  long long v41 = v12;
  uint64_t v42 = *((void *)a1 + 16);
  long long v13 = a1[3];
  long long v36 = a1[2];
  long long v37 = v13;
  long long v14 = a1[5];
  long long v38 = a1[4];
  long long v39 = v14;
  long long v15 = a1[1];
  long long v34 = *a1;
  long long v35 = v15;
  sub_1AFE44AFC(0, (unint64_t *)&qword_1EB816AF8, (uint64_t (*)(void))sub_1AFD74388, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4F183F8]);
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  uint64_t v16 = *MEMORY[0x1E4F275D0];
  uint64_t v17 = v4 + 104;
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
  uint64_t v19 = v3;
  v18(v6, v16, v3);
  sub_1AFFC9558();
  uint64_t v30 = MEMORY[0x1B3E8AFE0](v11);
  sub_1AFFC8E48();
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  v18(v6, v16, v3);
  uint64_t v31 = v17;
  sub_1AFFC9558();
  uint64_t v20 = MEMORY[0x1B3E8AFE0](v11);
  sub_1AFFC8E48();
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  v18(v6, v16, v19);
  sub_1AFFC9558();
  uint64_t v21 = MEMORY[0x1B3E8AFE0](v11);
  sub_1AFFC8E48();
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  v18(v6, v16, v19);
  sub_1AFFC9558();
  uint64_t v22 = MEMORY[0x1B3E8AFE0](v11);
  uint64_t v23 = v39;
  uint64_t v31 = *((void *)&v38 + 1);
  uint64_t v25 = *((void *)&v39 + 1);
  uint64_t v24 = v40;
  long long v26 = v35;
  long long v33 = v35;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v27 = v30;
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E38();
  sub_1AFFC8B38();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  long long v33 = v26;
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8B38();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  long long v33 = v36;
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8B38();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  long long v33 = v37;
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8B38();
  sub_1AFD76408((uint64_t)&v34);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_release_n();
  swift_release_n();
  swift_release_n();
  swift_release();
  uint64_t result = swift_release();
  uint64_t v29 = v32;
  *unint64_t v32 = v27;
  v29[1] = v20;
  _OWORD v29[2] = v21;
  v29[3] = v22;
  void v29[4] = v31;
  v29[5] = v23;
  v29[6] = v25;
  v29[7] = v24;
  return result;
}

uint64_t sub_1AFE42DA8()
{
  return sub_1AFFC8B48();
}

uint64_t sub_1AFE42DCC()
{
  return sub_1AFFC8B48();
}

uint64_t sub_1AFE42DF0()
{
  return sub_1AFFC8B48();
}

__n128 sub_1AFE42E14@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1[5];
  uint64_t v4 = a1[7];
  uint64_t v9 = a1[6];
  uint64_t v10 = a1[4];
  sub_1AFFC8E38();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E38();
  sub_1AFFC8B28();
  sub_1AFFC8B28();
  sub_1AFFC8B28();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  char v11 = 0;
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFD789F8(*(uint64_t *)&v12[0], *((uint64_t *)&v12[0] + 1), *(uint64_t *)&v12[0], *((uint64_t *)&v12[0] + 1), *(uint64_t *)&v12[0], *((uint64_t *)&v12[0] + 1), &v11, v10, (uint64_t)v12, v3, v9, v4, 0, 0, 0, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  long long v5 = v12[7];
  *(_OWORD *)(a2 + 96) = v12[6];
  *(_OWORD *)(a2 + 112) = v5;
  *(void *)(a2 + 128) = v13;
  long long v6 = v12[3];
  *(_OWORD *)(a2 + 32) = v12[2];
  *(_OWORD *)(a2 + 48) = v6;
  long long v7 = v12[5];
  *(_OWORD *)(a2 + 64) = v12[4];
  *(_OWORD *)(a2 + 80) = v7;
  __n128 result = (__n128)v12[1];
  *(_OWORD *)a2 = v12[0];
  *(__n128 *)(a2 + 16) = result;
  return result;
}

uint64_t sub_1AFE42FB0()
{
  sub_1AFFC8E38();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E38();
  sub_1AFFC8B28();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1AFE4306C()
{
  sub_1AFFC8B28();
  return v1;
}

uint64_t sub_1AFE430A0@<X0>(void *a1@<X8>)
{
  sub_1AFFC8E38();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E38();
  sub_1AFFC8B28();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_1AFE43160()
{
  return swift_release();
}

uint64_t sub_1AFE43224()
{
  return sub_1AFFC8B38();
}

uint64_t (*sub_1AFE43258(void *a1))()
{
  unint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1AFFC8B18();
  return sub_1AFD3325C;
}

uint64_t sub_1AFE432B4()
{
  return sub_1AFFC8B48();
}

uint64_t sub_1AFE432D8()
{
  sub_1AFFC8B28();
  return v1;
}

uint64_t sub_1AFE4330C@<X0>(void *a1@<X8>)
{
  sub_1AFFC8E38();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E38();
  sub_1AFFC8B28();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_1AFE433CC()
{
  return swift_release();
}

uint64_t sub_1AFE43494()
{
  return sub_1AFFC8B38();
}

uint64_t (*sub_1AFE434C8(void *a1))()
{
  unint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1AFFC8B18();
  return sub_1AFD3325C;
}

uint64_t sub_1AFE43524()
{
  sub_1AFFC8B28();
  return v1;
}

uint64_t sub_1AFE43558@<X0>(void *a1@<X8>)
{
  sub_1AFFC8E38();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E38();
  sub_1AFFC8B28();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_1AFE43618()
{
  return swift_release();
}

uint64_t sub_1AFE436E0()
{
  return sub_1AFFC8B38();
}

uint64_t (*sub_1AFE43714(void *a1))()
{
  unint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1AFFC8B18();
  return sub_1AFD3325C;
}

uint64_t sub_1AFE43770()
{
  sub_1AFFC8B28();
  return v1;
}

uint64_t sub_1AFE437A4@<X0>(void *a1@<X8>)
{
  sub_1AFFC8E38();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E38();
  sub_1AFFC8B28();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_1AFE43864()
{
  return swift_release();
}

uint64_t sub_1AFE4392C()
{
  return sub_1AFFC8B38();
}

uint64_t (*sub_1AFE43960(void *a1))()
{
  unint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1AFFC8B18();
  return sub_1AFD3325C;
}

uint64_t sub_1AFE439BC()
{
  uint64_t v1 = *(void *)(v0 + 32);
  sub_1AFFC8E38();
  return v1;
}

uint64_t sub_1AFE439EC()
{
  uint64_t v1 = *(void *)(v0 + 48);
  sub_1AFFC8E38();
  return v1;
}

uint64_t sub_1AFE43A1C@<X0>(void *a1@<X8>)
{
  if (qword_1E9AF8D80 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1E9AFB538;
  uint64_t v3 = qword_1E9AFB540;
  *a1 = qword_1E9AFB530;
  a1[1] = v2;
  a1[2] = v3;
  sub_1AFFC8E48();
  sub_1AFFC8E48();

  return sub_1AFFC8E48();
}

uint64_t sub_1AFE43AAC@<X0>(void *a1@<X8>)
{
  if (qword_1E9AF8D80 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1E9AFB538;
  uint64_t v3 = qword_1E9AFB540;
  *a1 = qword_1E9AFB530;
  a1[1] = v2;
  a1[2] = v3;
  sub_1AFFC8E48();
  sub_1AFFC8E48();

  return sub_1AFFC8E48();
}

uint64_t sub_1AFE43B3C@<X0>(void *a1@<X8>)
{
  sub_1AFFC8E38();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E38();
  sub_1AFFC8B28();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_1AFE43C00@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E9AF8D88 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1AFFC8FA8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1E9AFB548);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1AFE43CA8@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E9AF8D88 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1AFFC8FA8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1E9AFB548);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1AFE43D50(uint64_t a1)
{
  unint64_t v2 = sub_1AFE26838();

  return MEMORY[0x1F40D3BC8](a1, v2);
}

uint64_t sub_1AFE43DA0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v22 = a1;
  unint64_t v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1AFE447F4(0, &qword_1EB810BA8, MEMORY[0x1E4F18628], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v21 = (char *)&v16 - v4;
  sub_1AFE447F4(0, &qword_1EB816B00, MEMORY[0x1E4F27608], v2);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v20 = (char *)&v16 - v6;
  uint64_t v7 = sub_1AFFC9548();
  uint64_t v17 = *(void *)(v7 - 8);
  uint64_t v18 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v19 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1AFFCAE38();
  MEMORY[0x1F4188790](v9 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v23 = *v1;
  uint64_t v11 = v1[5];
  uint64_t v12 = v1[7];
  sub_1AFFCAE28();
  sub_1AFFCAE18();
  if (!v11)
  {
    if (!v12)
    {
      sub_1AFFC8E48();
      sub_1AFFC8E48();
      sub_1AFFC8E48();
      sub_1AFFC8E48();
      sub_1AFFC8B28();
      swift_bridgeObjectRelease_n();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
    sub_1AFFC8E38();
  }
  sub_1AFFC8E38();
  sub_1AFFCAE08();
  swift_bridgeObjectRelease();
  sub_1AFFCAE18();
  sub_1AFFC9538();
  sub_1AFFCAE28();
  sub_1AFFCAE18();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8B28();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1AFFCAE08();
  swift_bridgeObjectRelease();
  sub_1AFFCAE18();
  uint64_t v13 = v20;
  sub_1AFFC9538();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v18);
  uint64_t v14 = sub_1AFFC8DB8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v21, 1, 1, v14);
  return sub_1AFFC8DC8();
}

uint64_t sub_1AFE441D8(uint64_t a1)
{
  unint64_t v2 = sub_1AFE44A14();

  return MEMORY[0x1F40D4970](a1, v2);
}

uint64_t sub_1AFE44224()
{
  sub_1AFD5A2B4(0, &qword_1EB810A30, (unint64_t *)&unk_1EB81A7F8);
  sub_1AFFC8A08();
  sub_1AFFC89F8();
  uint64_t v0 = sub_1AFFC89C8();
  sub_1AFD5A2B4(0, (unint64_t *)&unk_1EB810A38, &qword_1EB81A9D8);
  sub_1AFFC89F8();
  uint64_t v1 = sub_1AFFC89C8();
  sub_1AFD5A2B4(0, (unint64_t *)&qword_1EB8167E0, (unint64_t *)&qword_1EB81A890);
  sub_1AFFC89F8();
  uint64_t result = sub_1AFFC89C8();
  qword_1E9AFB530 = v0;
  *(void *)algn_1E9AFB538 = v1;
  qword_1E9AFB540 = result;
  return result;
}

uint64_t sub_1AFE44354()
{
  uint64_t v14 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27608];
  sub_1AFE447F4(0, &qword_1EB816B00, MEMORY[0x1E4F27608], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v13 = (char *)&v12 - v1;
  uint64_t v2 = sub_1AFFC9528();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1AFFC9A78();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v7 = sub_1AFFCAE58();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v8 = sub_1AFFC9548();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = sub_1AFFC8FA8();
  __swift_allocate_value_buffer(v10, qword_1E9AFB548);
  __swift_project_value_buffer(v10, (uint64_t)qword_1E9AFB548);
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4F275D0], v2);
  sub_1AFFC9558();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v13, 1, 1, v8);
  sub_1AFE447F4(0, &qword_1E9AFA0E0, v14, MEMORY[0x1E4FBBE00]);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1AFFD8510;
  sub_1AFFC9518();
  sub_1AFFC9518();
  sub_1AFFC9518();
  sub_1AFFC9518();
  sub_1AFFC9518();
  sub_1AFFC9518();
  sub_1AFFC9518();
  sub_1AFFC9518();
  sub_1AFFC9518();
  sub_1AFFC9518();
  return sub_1AFFC8F88();
}

void sub_1AFE447F4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1AFE4485C()
{
  unint64_t result = qword_1EB811818;
  if (!qword_1EB811818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB811818);
  }
  return result;
}

unint64_t sub_1AFE448B4()
{
  unint64_t result = qword_1EB811828;
  if (!qword_1EB811828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB811828);
  }
  return result;
}

unint64_t sub_1AFE4490C()
{
  unint64_t result = qword_1EB811850;
  if (!qword_1EB811850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB811850);
  }
  return result;
}

unint64_t sub_1AFE44964()
{
  unint64_t result = qword_1EB811830;
  if (!qword_1EB811830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB811830);
  }
  return result;
}

unint64_t sub_1AFE449BC()
{
  unint64_t result = qword_1EB811838;
  if (!qword_1EB811838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB811838);
  }
  return result;
}

unint64_t sub_1AFE44A14()
{
  unint64_t result = qword_1EB811840;
  if (!qword_1EB811840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB811840);
  }
  return result;
}

unint64_t sub_1AFE44A6C()
{
  unint64_t result = qword_1E9AFB560;
  if (!qword_1E9AFB560)
  {
    sub_1AFE44AFC(255, &qword_1E9AFB568, (uint64_t (*)(void))sub_1AFD38AA0, (uint64_t)&type metadata for SymbolWidgetEntity, MEMORY[0x1E4F18768]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB560);
  }
  return result;
}

void sub_1AFE44AFC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_1AFE44B68()
{
  unint64_t result = qword_1EB811848;
  if (!qword_1EB811848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB811848);
  }
  return result;
}

uint64_t destroy for SymbolWidgetEntity()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for SymbolWidgetEntity(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  return a1;
}

void *assignWithCopy for SymbolWidgetEntity(void *a1, void *a2)
{
  *a1 = *a2;
  sub_1AFFC8E48();
  swift_release();
  a1[1] = a2[1];
  sub_1AFFC8E48();
  swift_release();
  a1[2] = a2[2];
  sub_1AFFC8E48();
  swift_release();
  a1[3] = a2[3];
  sub_1AFFC8E48();
  swift_release();
  a1[4] = a2[4];
  a1[5] = a2[5];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for SymbolWidgetEntity(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SymbolWidgetEntity(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SymbolWidgetEntity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SymbolWidgetEntity()
{
  return &type metadata for SymbolWidgetEntity;
}

uint64_t sub_1AFE44EBC@<X0>(uint64_t *a1@<X8>)
{
  sub_1AFE44F28();
  sub_1AFFC8A08();
  sub_1AFFC89F8();
  uint64_t result = sub_1AFFC89C8();
  *a1 = result;
  return result;
}

void sub_1AFE44F28()
{
  if (!qword_1EB8167E0)
  {
    sub_1AFD33A98();
    unint64_t v0 = sub_1AFFC89D8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8167E0);
    }
  }
}

uint64_t sub_1AFE44F80(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 + 112) = a1;
  *(void *)(v2 + 120) = v3;
  return MEMORY[0x1F4188298](sub_1AFE44FA4, 0, 0);
}

uint64_t sub_1AFE44FA4()
{
  long long v15 = v0;
  if (qword_1EB810B30 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1AFFCA8A8();
  v0[16] = __swift_project_value_buffer(v1, (uint64_t)qword_1EB810AF0);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_1AFFCA888();
  os_log_type_t v3 = sub_1AFFCB478();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = v0[14];
  if (v4)
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v14 = v7;
    *(_DWORD *)uint64_t v6 = 136315138;
    v0[12] = v5;
    sub_1AFD40AA0(0, (unint64_t *)&qword_1EB819DC0);
    sub_1AFD371B8();
    uint64_t v8 = sub_1AFFCAD88();
    v0[13] = sub_1AFD36BA8(v8, v9, &v14);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AFD01000, v2, v3, "Fetching watchlists for entities with identifiers=[%s]", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v7, -1, -1);
    MEMORY[0x1B3E8F0D0](v6, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  sub_1AFFC8E48();
  sub_1AFFC8998();
  swift_release();
  uint64_t v10 = v0[5];
  uint64_t v11 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v10);
  v0[17] = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 40))(1, v10, v11);
  uint64_t v12 = (void *)swift_task_alloc();
  v0[18] = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_1AFE45270;
  return MEMORY[0x1F415EBC8](v0 + 7);
}

uint64_t sub_1AFE45270()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 152) = v0;
  swift_task_dealloc();
  if (v0)
  {
    os_log_type_t v3 = sub_1AFE456F4;
  }
  else
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v2 + 16);
    os_log_type_t v3 = sub_1AFE45398;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1AFE45398()
{
  long long v33 = v0;
  uint64_t v1 = v0[7];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_1AFFCA888();
  os_log_type_t v3 = sub_1AFFCB478();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[14];
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v31 = v6;
    *(_DWORD *)uint64_t v5 = 136315394;
    v0[8] = v4;
    sub_1AFD40AA0(0, (unint64_t *)&qword_1EB819DC0);
    sub_1AFD371B8();
    uint64_t v7 = sub_1AFFCAD88();
    v0[9] = sub_1AFD36BA8(v7, v8, &v31);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v5 + 12) = 2080;
    int64_t v9 = *(void *)(v1 + 16);
    uint64_t v10 = MEMORY[0x1E4FBC860];
    if (v9)
    {
      uint64_t v26 = v6;
      os_log_type_t v27 = v3;
      uint64_t v28 = v5;
      uint64_t v29 = v2;
      uint64_t v32 = MEMORY[0x1E4FBC860];
      sub_1AFD9DA10(0, v9, 0);
      uint64_t v10 = v32;
      unint64_t v11 = *(void *)(v32 + 16);
      uint64_t v12 = 16 * v11;
      uint64_t v30 = v1;
      uint64_t v13 = (uint64_t *)(v1 + 40);
      do
      {
        uint64_t v14 = *(v13 - 1);
        uint64_t v15 = *v13;
        uint64_t v32 = v10;
        int64_t v16 = v11 + 1;
        unint64_t v17 = *(void *)(v10 + 24);
        sub_1AFFC8E38();
        if (v11 >= v17 >> 1)
        {
          sub_1AFD9DA10(v17 > 1, v16, 1);
          uint64_t v10 = v32;
        }
        *(void *)(v10 + 16) = v16;
        uint64_t v18 = v10 + v12;
        *(void *)(v18 + 32) = v14;
        *(void *)(v18 + 40) = v15;
        v12 += 16;
        v13 += 6;
        ++v11;
        --v9;
      }
      while (v9);
      uint64_t v2 = v29;
      uint64_t v1 = v30;
      uint64_t v5 = v28;
      os_log_type_t v3 = v27;
      uint64_t v6 = v26;
    }
    v0[10] = v10;
    uint64_t v19 = sub_1AFFCAD88();
    unint64_t v21 = v20;
    swift_bridgeObjectRelease();
    v0[11] = sub_1AFD36BA8(v19, v21, &v31);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AFD01000, v2, v3, "Fetching watchlists for entities with identifiers=[%s], watchlists=[%s]", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v6, -1, -1);
    MEMORY[0x1B3E8F0D0](v5, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  uint64_t v22 = v0[14];
  sub_1AFFC8E38();
  uint64_t v23 = sub_1AFE46FDC(v22, v1);
  swift_bridgeObjectRelease_n();
  uint64_t v24 = (uint64_t (*)(void *))v0[1];
  return v24(v23);
}

uint64_t sub_1AFE456F4()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1AFE45764()
{
  *(void *)(v1 + 80) = *v0;
  return MEMORY[0x1F4188298](sub_1AFE45788, 0, 0);
}

uint64_t sub_1AFE45788()
{
  if (qword_1EB810B30 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1AFFCA8A8();
  v0[11] = __swift_project_value_buffer(v1, (uint64_t)qword_1EB810AF0);
  uint64_t v2 = sub_1AFFCA888();
  os_log_type_t v3 = sub_1AFFCB478();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_1AFD01000, v2, v3, "Fetching watchlists for suggested entities.", v4, 2u);
    MEMORY[0x1B3E8F0D0](v4, -1, -1);
  }

  sub_1AFFC8E48();
  sub_1AFFC8998();
  swift_release();
  uint64_t v5 = v0[5];
  uint64_t v6 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v5);
  v0[12] = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 40))(1, v5, v6);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[13] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1AFE4594C;
  return MEMORY[0x1F415EBC8](v0 + 7);
}

uint64_t sub_1AFE4594C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    os_log_type_t v3 = sub_1AFE45E0C;
  }
  else
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v2 + 16);
    os_log_type_t v3 = sub_1AFE45A74;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1AFE45A74()
{
  uint64_t v43 = v0;
  uint64_t v1 = v0[7];
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_1AFFCA888();
  os_log_type_t v3 = sub_1AFFCB478();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = v5;
    v40[0] = v5;
    *(_DWORD *)uint64_t v4 = 136315138;
    int64_t v7 = *(void *)(v1 + 16);
    uint64_t v8 = MEMORY[0x1E4FBC860];
    if (v7)
    {
      uint64_t v33 = v5;
      os_log_type_t v34 = v3;
      long long v35 = v4;
      long long v36 = v2;
      v41[0] = MEMORY[0x1E4FBC860];
      sub_1AFD9DA10(0, v7, 0);
      uint64_t v8 = v41[0];
      unint64_t v9 = *(void *)(v41[0] + 16);
      uint64_t v10 = 16 * v9;
      uint64_t v37 = v1;
      unint64_t v11 = (uint64_t *)(v1 + 40);
      do
      {
        uint64_t v12 = *(v11 - 1);
        uint64_t v13 = *v11;
        v41[0] = v8;
        int64_t v14 = v9 + 1;
        unint64_t v15 = *(void *)(v8 + 24);
        sub_1AFFC8E38();
        if (v9 >= v15 >> 1)
        {
          sub_1AFD9DA10(v15 > 1, v14, 1);
          uint64_t v8 = v41[0];
        }
        *(void *)(v8 + 16) = v14;
        uint64_t v16 = v8 + v10;
        *(void *)(v16 + 32) = v12;
        *(void *)(v16 + 40) = v13;
        v10 += 16;
        v11 += 6;
        ++v9;
        --v7;
      }
      while (v7);
      uint64_t v2 = v36;
      uint64_t v1 = v37;
      uint64_t v4 = v35;
      os_log_type_t v3 = v34;
      uint64_t v6 = v33;
    }
    v0[8] = v8;
    sub_1AFD40AA0(0, (unint64_t *)&qword_1EB819DC0);
    sub_1AFD371B8();
    uint64_t v17 = sub_1AFFCAD88();
    unint64_t v19 = v18;
    swift_bridgeObjectRelease();
    v0[9] = sub_1AFD36BA8(v17, v19, v40);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AFD01000, v2, v3, "Fetched watchlists for suggested entities, watchlists=[%s]", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v6, -1, -1);
    MEMORY[0x1B3E8F0D0](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  int64_t v20 = *(void *)(v1 + 16);
  if (v20)
  {
    uint64_t v39 = MEMORY[0x1E4FBC860];
    sub_1AFD9DC00(0, v20, 0);
    uint64_t v21 = v39;
    uint64_t v22 = v1 + 73;
    do
    {
      uint64_t v23 = *(void *)(v22 - 33);
      uint64_t v24 = *(void *)(v22 - 25);
      uint64_t v25 = *(void *)(v22 - 17);
      uint64_t v26 = *(void *)(v22 - 9);
      __int16 v27 = *(_WORD *)(v22 - 1);
      v41[0] = *(void *)(v22 - 41);
      v41[1] = v23;
      void v41[2] = v24;
      v41[3] = v25;
      v41[4] = v26;
      __int16 v42 = v27;
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFE3C678((uint64_t)v41, v40);
      long long v28 = *(_OWORD *)v40;
      unint64_t v30 = *(void *)(v39 + 16);
      unint64_t v29 = *(void *)(v39 + 24);
      if (v30 >= v29 >> 1)
      {
        long long v38 = *(_OWORD *)v40;
        sub_1AFD9DC00(v29 > 1, v30 + 1, 1);
        long long v28 = v38;
      }
      v22 += 48;
      *(void *)(v39 + 16) = v30 + 1;
      *(_OWORD *)(v39 + 16 * v30 + 32) = v28;
      --v20;
    }
    while (v20);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v21 = MEMORY[0x1E4FBC860];
  }
  uint64_t v31 = (uint64_t (*)(uint64_t))v0[1];
  return v31(v21);
}

uint64_t sub_1AFE45E0C()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1AFE45E7C(uint64_t a1)
{
  *(void *)(v1 + 32) = a1;
  return MEMORY[0x1F4188298](sub_1AFE45E9C, 0, 0);
}

uint64_t sub_1AFE45E9C()
{
  uint64_t v13 = v0;
  if (qword_1E9AF8D48 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_1E9AFB438;
  uint64_t v2 = unk_1E9AFB440;
  uint64_t v3 = qword_1EB810B30;
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  if (v3 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1AFFCA8A8();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EB810AF0);
  swift_retain_n();
  swift_retain_n();
  uint64_t v5 = sub_1AFFCA888();
  os_log_type_t v6 = sub_1AFFCB478();
  if (os_log_type_enabled(v5, v6))
  {
    int64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = v11;
    *(_DWORD *)int64_t v7 = 136315138;
    sub_1AFFC8E48();
    sub_1AFFC8E48();
    sub_1AFFC8B28();
    swift_release();
    swift_release();
    v0[2] = sub_1AFD36BA8(v0[2], v0[3], &v12);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_release_n();
    _os_log_impl(&dword_1AFD01000, v5, v6, "Default watchlist entity requested, returning '%s' watchlist", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v11, -1, -1);
    MEMORY[0x1B3E8F0D0](v7, -1, -1);
  }
  else
  {
    swift_release_n();
    swift_release_n();
  }

  uint64_t v8 = (uint64_t *)v0[4];
  *uint64_t v8 = v1;
  v8[1] = v2;
  unint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_1AFE46124@<X0>(uint64_t *a1@<X8>)
{
  sub_1AFE44F28();
  sub_1AFFC8A08();
  sub_1AFFC89F8();
  uint64_t result = sub_1AFFC89C8();
  *a1 = result;
  return result;
}

uint64_t sub_1AFE46190(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1AFD6A894;
  uint64_t v5 = *v1;
  v4[14] = a1;
  v4[15] = v5;
  return MEMORY[0x1F4188298](sub_1AFE44FA4, 0, 0);
}

uint64_t sub_1AFE46240(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  void *v3 = v2;
  v3[1] = sub_1AFD76E80;
  v3[10] = *v1;
  return MEMORY[0x1F4188298](sub_1AFE45788, 0, 0);
}

uint64_t sub_1AFE462F0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_1AFE3D618();
  *uint64_t v5 = v2;
  v5[1] = sub_1AFD3503C;
  return MEMORY[0x1F40D3D68](a1, a2, v6);
}

uint64_t sub_1AFE463A4(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_1AFD3503C;
  v3[4] = a1;
  return MEMORY[0x1F4188298](sub_1AFE45E9C, 0, 0);
}

uint64_t sub_1AFE46450(uint64_t a1, uint64_t a2)
{
  v3[14] = a1;
  v3[15] = a2;
  v3[16] = *v2;
  return MEMORY[0x1F4188298](sub_1AFE46478, 0, 0);
}

uint64_t sub_1AFE46478()
{
  uint64_t v14 = v0;
  if (qword_1EB810B30 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1AFFCA8A8();
  v0[17] = __swift_project_value_buffer(v1, (uint64_t)qword_1EB810AF0);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_1AFFCA888();
  os_log_type_t v3 = sub_1AFFCB478();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = v0[15];
  if (v4)
  {
    uint64_t v6 = v0[14];
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v13 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    sub_1AFFC8E38();
    v0[13] = sub_1AFD36BA8(v6, v5, &v13);
    sub_1AFFCB688();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AFD01000, v2, v3, "Querying watchlists matching string=%s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v8, -1, -1);
    MEMORY[0x1B3E8F0D0](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  sub_1AFFC8E48();
  sub_1AFFC8998();
  swift_release();
  uint64_t v9 = v0[5];
  uint64_t v10 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v9);
  v0[18] = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 40))(1, v9, v10);
  uint64_t v11 = (void *)swift_task_alloc();
  v0[19] = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_1AFE4670C;
  return MEMORY[0x1F415EBC8](v0 + 7);
}

uint64_t sub_1AFE4670C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 160) = v0;
  swift_task_dealloc();
  if (v0)
  {
    os_log_type_t v3 = sub_1AFE46EA8;
  }
  else
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v2 + 16);
    os_log_type_t v3 = sub_1AFE46834;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1AFE46834()
{
  uint64_t v67 = v0;
  uint64_t v1 = v0[7];
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_1AFFCA888();
  os_log_type_t v3 = sub_1AFFCB478();
  if (os_log_type_enabled(v2, v3))
  {
    os_log_type_t v60 = v3;
    BOOL v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v58 = swift_slowAlloc();
    *(void *)&long long v64 = v58;
    *(_DWORD *)BOOL v4 = 136315138;
    int64_t v5 = *(void *)(v1 + 16);
    uint64_t v6 = MEMORY[0x1E4FBC860];
    if (v5)
    {
      uint64_t v53 = v4;
      uint64_t v55 = v2;
      v65[0] = MEMORY[0x1E4FBC860];
      sub_1AFD9DA10(0, v5, 0);
      uint64_t v6 = v65[0];
      unint64_t v7 = *(void *)(v65[0] + 16);
      uint64_t v8 = 16 * v7;
      uint64_t v57 = v1;
      uint64_t v9 = (uint64_t *)(v1 + 40);
      do
      {
        uint64_t v10 = *(v9 - 1);
        uint64_t v11 = *v9;
        v65[0] = v6;
        int64_t v12 = v7 + 1;
        unint64_t v13 = *(void *)(v6 + 24);
        sub_1AFFC8E38();
        if (v7 >= v13 >> 1)
        {
          sub_1AFD9DA10(v13 > 1, v12, 1);
          uint64_t v6 = v65[0];
        }
        *(void *)(v6 + 16) = v12;
        uint64_t v14 = v6 + v8;
        *(void *)(v14 + 32) = v10;
        *(void *)(v14 + 40) = v11;
        v8 += 16;
        v9 += 6;
        ++v7;
        --v5;
      }
      while (v5);
      uint64_t v2 = v55;
      uint64_t v1 = v57;
      BOOL v4 = v53;
    }
    v0[11] = v6;
    sub_1AFD40AA0(0, (unint64_t *)&qword_1EB819DC0);
    sub_1AFD371B8();
    uint64_t v15 = sub_1AFFCAD88();
    unint64_t v17 = v16;
    swift_bridgeObjectRelease();
    v0[12] = sub_1AFD36BA8(v15, v17, (uint64_t *)&v64);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AFD01000, v2, v60, "Fetched all watchlists for property query, watchlists=[%s]", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v58, -1, -1);
    MEMORY[0x1B3E8F0D0](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  sub_1AFFC8E38();
  uint64_t v18 = sub_1AFD73F3C(v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  unint64_t v19 = sub_1AFFCA888();
  os_log_type_t v20 = sub_1AFFCB478();
  BOOL v21 = os_log_type_enabled(v19, v20);
  unint64_t v22 = v0[15];
  if (v21)
  {
    os_log_type_t v61 = v20;
    uint64_t v23 = v0[14];
    uint64_t v24 = swift_slowAlloc();
    uint64_t v59 = swift_slowAlloc();
    *(void *)&long long v64 = v59;
    *(_DWORD *)uint64_t v24 = 136315394;
    sub_1AFFC8E38();
    v0[8] = sub_1AFD36BA8(v23, v22, (uint64_t *)&v64);
    sub_1AFFCB688();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v24 + 12) = 2080;
    int64_t v25 = *(void *)(v18 + 16);
    uint64_t v26 = MEMORY[0x1E4FBC860];
    if (v25)
    {
      uint64_t v52 = v24;
      uint64_t v54 = v19;
      v65[0] = MEMORY[0x1E4FBC860];
      sub_1AFD9DA10(0, v25, 0);
      uint64_t v26 = v65[0];
      unint64_t v27 = *(void *)(v65[0] + 16);
      uint64_t v28 = v18;
      uint64_t v29 = 16 * v27;
      uint64_t v56 = v28;
      unint64_t v30 = (uint64_t *)(v28 + 40);
      do
      {
        uint64_t v31 = *(v30 - 1);
        uint64_t v32 = *v30;
        v65[0] = v26;
        int64_t v33 = v27 + 1;
        unint64_t v34 = *(void *)(v26 + 24);
        sub_1AFFC8E38();
        if (v27 >= v34 >> 1)
        {
          sub_1AFD9DA10(v34 > 1, v33, 1);
          uint64_t v26 = v65[0];
        }
        *(void *)(v26 + 16) = v33;
        uint64_t v35 = v26 + v29;
        *(void *)(v35 + 32) = v31;
        *(void *)(v35 + 40) = v32;
        v29 += 16;
        v30 += 6;
        ++v27;
        --v25;
      }
      while (v25);
      unint64_t v19 = v54;
      uint64_t v18 = v56;
      uint64_t v24 = v52;
    }
    v0[9] = v26;
    sub_1AFD40AA0(0, (unint64_t *)&qword_1EB819DC0);
    sub_1AFD371B8();
    uint64_t v36 = sub_1AFFCAD88();
    unint64_t v38 = v37;
    swift_bridgeObjectRelease();
    v0[10] = sub_1AFD36BA8(v36, v38, (uint64_t *)&v64);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AFD01000, v19, v61, "Filtered down watchlists matching string=%s, watchlists=[%s]", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v59, -1, -1);
    MEMORY[0x1B3E8F0D0](v24, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  int64_t v39 = *(void *)(v18 + 16);
  if (v39)
  {
    uint64_t v63 = MEMORY[0x1E4FBC860];
    sub_1AFD9DC00(0, v39, 0);
    uint64_t v40 = v63;
    uint64_t v41 = v18 + 73;
    do
    {
      uint64_t v42 = *(void *)(v41 - 33);
      uint64_t v43 = *(void *)(v41 - 25);
      uint64_t v44 = *(void *)(v41 - 17);
      uint64_t v45 = *(void *)(v41 - 9);
      __int16 v46 = *(_WORD *)(v41 - 1);
      v65[0] = *(void *)(v41 - 41);
      v65[1] = v42;
      v65[2] = v43;
      v65[3] = v44;
      v65[4] = v45;
      __int16 v66 = v46;
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFE3C678((uint64_t)v65, (uint64_t *)&v64);
      long long v47 = v64;
      unint64_t v49 = *(void *)(v63 + 16);
      unint64_t v48 = *(void *)(v63 + 24);
      if (v49 >= v48 >> 1)
      {
        long long v62 = v64;
        sub_1AFD9DC00(v48 > 1, v49 + 1, 1);
        long long v47 = v62;
      }
      v41 += 48;
      *(void *)(v63 + 16) = v49 + 1;
      *(_OWORD *)(v63 + 16 * v49 + 32) = v47;
      --v39;
    }
    while (v39);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v40 = MEMORY[0x1E4FBC860];
  }
  uint64_t v50 = (uint64_t (*)(uint64_t))v0[1];
  return v50(v40);
}

uint64_t sub_1AFE46EA8()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1AFE46F18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v4 + 16) = a1;
  unint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v4 + 24) = v7;
  *unint64_t v7 = v4;
  v7[1] = sub_1AFD6BBC4;
  v7[14] = a2;
  v7[15] = a3;
  v7[16] = *v3;
  return MEMORY[0x1F4188298](sub_1AFE46478, 0, 0);
}

void *sub_1AFE46FDC(uint64_t a1, uint64_t a2)
{
  uint64_t v25 = *(void *)(a1 + 16);
  if (!v25) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v23 = *(void *)(a2 + 16);
  uint64_t v24 = a1 + 32;
  sub_1AFFC8E38();
  uint64_t v3 = 0;
  unint64_t v22 = (char *)(a2 + 73);
  uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v26 = v3;
    unint64_t v27 = v4;
    int64_t v5 = (uint64_t *)(v24 + 16 * v3);
    uint64_t v7 = *v5;
    uint64_t v6 = v5[1];
    uint64_t v8 = v22;
    uint64_t v9 = v23;
    if (v23)
    {
      while (1)
      {
        uint64_t v28 = *(void *)(v8 - 41);
        uint64_t v10 = *(void *)(v8 - 33);
        uint64_t v11 = *(void *)(v8 - 25);
        uint64_t v12 = *(void *)(v8 - 17);
        uint64_t v13 = *(void *)(v8 - 9);
        int v37 = *(v8 - 1);
        char v14 = *v8;
        if (v12 == v7 && v13 == v6) {
          break;
        }
        uint64_t v16 = v6;
        if (sub_1AFFCBCE8()) {
          goto LABEL_12;
        }
        v8 += 48;
        --v9;
        uint64_t v6 = v16;
        if (!v9) {
          goto LABEL_10;
        }
      }
      uint64_t v12 = v7;
      uint64_t v13 = v6;
LABEL_12:
      *(void *)&long long v30 = v28;
      *((void *)&v30 + 1) = v10;
      uint64_t v31 = v11;
      uint64_t v32 = v12;
      uint64_t v33 = v13;
      char v34 = v37;
      char v35 = v14;
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFE3C678((uint64_t)&v30, (uint64_t *)&v36);
      long long v18 = v36;
    }
    else
    {
LABEL_10:
      uint64_t v17 = v6;
      sub_1AFFC8E38();
      sub_1AFE3BF00(v7, v17, 0, 0xE000000000000000, (uint64_t *)&v30);
      long long v18 = v30;
    }
    long long v29 = v18;
    uint64_t v4 = v27;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v4 = sub_1AFD36294(0, v27[2] + 1, 1, v27);
    }
    unint64_t v20 = v4[2];
    unint64_t v19 = v4[3];
    if (v20 >= v19 >> 1) {
      uint64_t v4 = sub_1AFD36294((void *)(v19 > 1), v20 + 1, 1, v4);
    }
    uint64_t v3 = v26 + 1;
    v4[2] = v20 + 1;
    *(_OWORD *)&v4[2 * v20 + 4] = v29;
  }
  while (v26 + 1 != v25);
  swift_bridgeObjectRelease();
  return v4;
}

unint64_t sub_1AFE471FC()
{
  unint64_t result = qword_1E9AFB590;
  if (!qword_1E9AFB590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB590);
  }
  return result;
}

unint64_t sub_1AFE47254()
{
  unint64_t result = qword_1E9AFB598[0];
  if (!qword_1E9AFB598[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9AFB598);
  }
  return result;
}

unint64_t sub_1AFE472B0()
{
  unint64_t result = qword_1E9AFB5B0;
  if (!qword_1E9AFB5B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB5B0);
  }
  return result;
}

unint64_t sub_1AFE47308()
{
  unint64_t result = qword_1E9AFB5B8;
  if (!qword_1E9AFB5B8)
  {
    sub_1AFD40AA0(255, qword_1E9AFB5C0);
    sub_1AFE3D720();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB5B8);
  }
  return result;
}

ValueMetadata *type metadata accessor for WatchlistWidgetQuery()
{
  return &type metadata for WatchlistWidgetQuery;
}

ValueMetadata *type metadata accessor for Clock()
{
  return &type metadata for Clock;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)unint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for SDSQuoteResponse.SDSQuoteResponseQuoteItem.TimeZoneOffset(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for SDSQuoteResponse.SDSQuoteResponseQuoteItem.TimeZoneOffset(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

ValueMetadata *type metadata accessor for SDSQuoteResponse.SDSQuoteResponseQuoteItem.TimeZoneOffset()
{
  return &type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem.TimeZoneOffset;
}

ValueMetadata *type metadata accessor for SDSQuoteResponse.SDSQuoteSource()
{
  return &type metadata for SDSQuoteResponse.SDSQuoteSource;
}

ValueMetadata *type metadata accessor for SDSQuoteResponse.SDSQuoteResponseQuoteItem.SDSQuoteResponseQuoteItemExchangeStatus()
{
  return &type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem.SDSQuoteResponseQuoteItemExchangeStatus;
}

uint64_t destroy for SDSQuoteResponse.SDSQuoteResponseQuoteItem(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 536))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SDSQuoteResponse.SDSQuoteResponseQuoteItem(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  uint64_t v4 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v4;
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  uint64_t v5 = *(void *)(a2 + 128);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(void *)(a1 + 128) = v5;
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  uint64_t v6 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v6;
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  uint64_t v7 = *(void *)(a2 + 216);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = v7;
  uint64_t v8 = *(void *)(a2 + 232);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = v8;
  uint64_t v9 = *(void *)(a2 + 248);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = v9;
  *(unsigned char *)(a1 + 256) = *(unsigned char *)(a2 + 256);
  uint64_t v10 = *(void *)(a2 + 264);
  *(unsigned char *)(a1 + 272) = *(unsigned char *)(a2 + 272);
  *(void *)(a1 + 264) = v10;
  uint64_t v11 = *(void *)(a2 + 288);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  *(void *)(a1 + 288) = v11;
  uint64_t v12 = *(void *)(a2 + 296);
  *(unsigned char *)(a1 + 304) = *(unsigned char *)(a2 + 304);
  *(void *)(a1 + 296) = v12;
  uint64_t v13 = *(void *)(a2 + 312);
  *(unsigned char *)(a1 + 320) = *(unsigned char *)(a2 + 320);
  *(void *)(a1 + 312) = v13;
  uint64_t v14 = *(void *)(a2 + 328);
  *(unsigned char *)(a1 + 336) = *(unsigned char *)(a2 + 336);
  *(void *)(a1 + 328) = v14;
  uint64_t v15 = *(void *)(a2 + 344);
  *(unsigned char *)(a1 + 352) = *(unsigned char *)(a2 + 352);
  *(void *)(a1 + 344) = v15;
  *(unsigned char *)(a1 + 353) = *(unsigned char *)(a2 + 353);
  uint64_t v16 = *(void *)(a2 + 360);
  *(unsigned char *)(a1 + 368) = *(unsigned char *)(a2 + 368);
  *(void *)(a1 + 360) = v16;
  uint64_t v17 = *(void *)(a2 + 376);
  *(unsigned char *)(a1 + 384) = *(unsigned char *)(a2 + 384);
  *(void *)(a1 + 376) = v17;
  uint64_t v18 = *(void *)(a2 + 392);
  *(unsigned char *)(a1 + 400) = *(unsigned char *)(a2 + 400);
  *(void *)(a1 + 392) = v18;
  uint64_t v19 = *(void *)(a2 + 416);
  *(void *)(a1 + 408) = *(void *)(a2 + 408);
  *(void *)(a1 + 416) = v19;
  uint64_t v20 = *(void *)(a2 + 432);
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  *(void *)(a1 + 432) = v20;
  uint64_t v21 = *(void *)(a2 + 440);
  *(_WORD *)(a1 + 448) = *(_WORD *)(a2 + 448);
  *(void *)(a1 + 440) = v21;
  uint64_t v22 = *(void *)(a2 + 464);
  *(void *)(a1 + 456) = *(void *)(a2 + 456);
  *(void *)(a1 + 464) = v22;
  uint64_t v23 = *(void *)(a2 + 480);
  *(void *)(a1 + 472) = *(void *)(a2 + 472);
  *(void *)(a1 + 480) = v23;
  uint64_t v24 = *(void *)(a2 + 496);
  *(void *)(a1 + 488) = *(void *)(a2 + 488);
  *(void *)(a1 + 496) = v24;
  uint64_t v25 = *(void *)(a2 + 512);
  *(void *)(a1 + 504) = *(void *)(a2 + 504);
  *(void *)(a1 + 512) = v25;
  *(void *)(a1 + 520) = *(void *)(a2 + 520);
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  uint64_t v26 = *(void *)(a2 + 536);
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  if (v26)
  {
    *(void *)(a1 + 536) = v26;
    *(void *)(a1 + 544) = *(void *)(a2 + 544);
    sub_1AFFC8E38();
    sub_1AFFC8E38();
  }
  else
  {
    *(_OWORD *)(a1 + 536) = *(_OWORD *)(a2 + 536);
  }
  *(void *)(a1 + 552) = *(void *)(a2 + 552);
  *(void *)(a1 + 560) = *(void *)(a2 + 560);
  *(void *)(a1 + 568) = *(void *)(a2 + 568);
  *(void *)(a1 + 576) = *(void *)(a2 + 576);
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  return a1;
}

uint64_t assignWithCopy for SDSQuoteResponse.SDSQuoteResponseQuoteItem(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v4;
  uint64_t v5 = a2[2];
  *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 25) = *((unsigned char *)a2 + 25);
  uint64_t v6 = a2[4];
  *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
  *(void *)(a1 + 32) = v6;
  uint64_t v7 = a2[6];
  *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
  *(void *)(a1 + 48) = v7;
  *(unsigned char *)(a1 + 57) = *((unsigned char *)a2 + 57);
  uint64_t v8 = a2[8];
  *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
  *(void *)(a1 + 64) = v8;
  uint64_t v9 = a2[10];
  *(unsigned char *)(a1 + 88) = *((unsigned char *)a2 + 88);
  *(void *)(a1 + 80) = v9;
  *(void *)(a1 + 96) = a2[12];
  *(void *)(a1 + 104) = a2[13];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[14];
  *(unsigned char *)(a1 + 120) = *((unsigned char *)a2 + 120);
  *(void *)(a1 + 112) = v10;
  uint64_t v11 = a2[16];
  *(unsigned char *)(a1 + 136) = *((unsigned char *)a2 + 136);
  *(void *)(a1 + 128) = v11;
  uint64_t v12 = a2[18];
  *(unsigned char *)(a1 + 152) = *((unsigned char *)a2 + 152);
  *(void *)(a1 + 144) = v12;
  *(void *)(a1 + 160) = a2[20];
  *(void *)(a1 + 168) = a2[21];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  uint64_t v13 = a2[22];
  *(unsigned char *)(a1 + 184) = *((unsigned char *)a2 + 184);
  *(void *)(a1 + 176) = v13;
  uint64_t v14 = a2[24];
  *(unsigned char *)(a1 + 200) = *((unsigned char *)a2 + 200);
  *(void *)(a1 + 192) = v14;
  *(void *)(a1 + 208) = a2[26];
  *(void *)(a1 + 216) = a2[27];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 224) = a2[28];
  *(void *)(a1 + 232) = a2[29];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 240) = a2[30];
  *(void *)(a1 + 248) = a2[31];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 256) = *((unsigned char *)a2 + 256);
  uint64_t v15 = a2[33];
  *(unsigned char *)(a1 + 272) = *((unsigned char *)a2 + 272);
  *(void *)(a1 + 264) = v15;
  *(void *)(a1 + 280) = a2[35];
  *(void *)(a1 + 288) = a2[36];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  uint64_t v16 = a2[37];
  *(unsigned char *)(a1 + 304) = *((unsigned char *)a2 + 304);
  *(void *)(a1 + 296) = v16;
  uint64_t v17 = a2[39];
  *(unsigned char *)(a1 + 320) = *((unsigned char *)a2 + 320);
  *(void *)(a1 + 312) = v17;
  uint64_t v18 = a2[41];
  *(unsigned char *)(a1 + 336) = *((unsigned char *)a2 + 336);
  *(void *)(a1 + 328) = v18;
  uint64_t v19 = a2[43];
  *(unsigned char *)(a1 + 352) = *((unsigned char *)a2 + 352);
  *(void *)(a1 + 344) = v19;
  *(unsigned char *)(a1 + 353) = *((unsigned char *)a2 + 353);
  uint64_t v20 = a2[45];
  *(unsigned char *)(a1 + 368) = *((unsigned char *)a2 + 368);
  *(void *)(a1 + 360) = v20;
  uint64_t v21 = a2[47];
  *(unsigned char *)(a1 + 384) = *((unsigned char *)a2 + 384);
  *(void *)(a1 + 376) = v21;
  uint64_t v22 = a2[49];
  *(unsigned char *)(a1 + 400) = *((unsigned char *)a2 + 400);
  *(void *)(a1 + 392) = v22;
  *(void *)(a1 + 408) = a2[51];
  *(void *)(a1 + 416) = a2[52];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 424) = a2[53];
  *(void *)(a1 + 432) = a2[54];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  uint64_t v23 = a2[55];
  *(_WORD *)(a1 + 448) = *((_WORD *)a2 + 224);
  *(void *)(a1 + 440) = v23;
  *(void *)(a1 + 456) = a2[57];
  *(void *)(a1 + 464) = a2[58];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 472) = a2[59];
  *(void *)(a1 + 480) = a2[60];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 488) = a2[61];
  *(void *)(a1 + 496) = a2[62];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 504) = a2[63];
  *(void *)(a1 + 512) = a2[64];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 520) = a2[65];
  *(void *)(a1 + 528) = a2[66];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  uint64_t v24 = a2[67];
  if (!*(void *)(a1 + 536))
  {
    if (v24)
    {
      *(void *)(a1 + 536) = v24;
      *(void *)(a1 + 544) = a2[68];
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 536) = *(_OWORD *)(a2 + 67);
    goto LABEL_8;
  }
  if (!v24)
  {
    sub_1AFE47BDC(a1 + 536);
    goto LABEL_7;
  }
  *(void *)(a1 + 536) = v24;
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 544) = a2[68];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
LABEL_8:
  *(void *)(a1 + 552) = a2[69];
  *(void *)(a1 + 560) = a2[70];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 568) = a2[71];
  *(void *)(a1 + 576) = a2[72];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AFE47BDC(uint64_t a1)
{
  return a1;
}

void *__swift_memcpy584_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x248uLL);
}

uint64_t assignWithTake for SDSQuoteResponse.SDSQuoteResponseQuoteItem(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  uint64_t v4 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  uint64_t v5 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  uint64_t v6 = *(void *)(a2 + 216);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 232);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 248);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = v8;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 256) = *(unsigned char *)(a2 + 256);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(unsigned char *)(a1 + 272) = *(unsigned char *)(a2 + 272);
  uint64_t v9 = *(void *)(a2 + 288);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  *(void *)(a1 + 288) = v9;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  *(unsigned char *)(a1 + 304) = *(unsigned char *)(a2 + 304);
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  *(unsigned char *)(a1 + 320) = *(unsigned char *)(a2 + 320);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  *(unsigned char *)(a1 + 336) = *(unsigned char *)(a2 + 336);
  *(void *)(a1 + 344) = *(void *)(a2 + 344);
  *(_WORD *)(a1 + 352) = *(_WORD *)(a2 + 352);
  uint64_t v10 = *(void *)(a2 + 360);
  *(unsigned char *)(a1 + 368) = *(unsigned char *)(a2 + 368);
  *(void *)(a1 + 360) = v10;
  *(void *)(a1 + 376) = *(void *)(a2 + 376);
  *(unsigned char *)(a1 + 384) = *(unsigned char *)(a2 + 384);
  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  *(unsigned char *)(a1 + 400) = *(unsigned char *)(a2 + 400);
  uint64_t v11 = *(void *)(a2 + 416);
  *(void *)(a1 + 408) = *(void *)(a2 + 408);
  *(void *)(a1 + 416) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 432);
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  *(void *)(a1 + 432) = v12;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 440) = *(void *)(a2 + 440);
  *(_WORD *)(a1 + 448) = *(_WORD *)(a2 + 448);
  uint64_t v13 = *(void *)(a2 + 464);
  *(void *)(a1 + 456) = *(void *)(a2 + 456);
  *(void *)(a1 + 464) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 480);
  *(void *)(a1 + 472) = *(void *)(a2 + 472);
  *(void *)(a1 + 480) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a2 + 496);
  *(void *)(a1 + 488) = *(void *)(a2 + 488);
  *(void *)(a1 + 496) = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(a2 + 512);
  *(void *)(a1 + 504) = *(void *)(a2 + 504);
  *(void *)(a1 + 512) = v16;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 520) = *(void *)(a2 + 520);
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 536)) {
    goto LABEL_5;
  }
  uint64_t v17 = *(void *)(a2 + 536);
  if (!v17)
  {
    sub_1AFE47BDC(a1 + 536);
LABEL_5:
    *(_OWORD *)(a1 + 536) = *(_OWORD *)(a2 + 536);
    goto LABEL_6;
  }
  *(void *)(a1 + 536) = v17;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  swift_bridgeObjectRelease();
LABEL_6:
  *(void *)(a1 + 552) = *(void *)(a2 + 552);
  *(void *)(a1 + 560) = *(void *)(a2 + 560);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 568) = *(void *)(a2 + 568);
  *(void *)(a1 + 576) = *(void *)(a2 + 576);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SDSQuoteResponse.SDSQuoteResponseQuoteItem(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 584)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 104);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SDSQuoteResponse.SDSQuoteResponseQuoteItem(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 584) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 584) = 0;
    }
    if (a2) {
      *(void *)(result + 104) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SDSQuoteResponse.SDSQuoteResponseQuoteItem()
{
  return &type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem;
}

uint64_t destroy for SDSQuoteResponse.SDSFundComposition()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s10StocksCore16SDSQuoteResponseV18SDSFundCompositionVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  return a1;
}

void *assignWithCopy for SDSQuoteResponse.SDSFundComposition(void *a1, void *a2)
{
  *a1 = *a2;
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for SDSQuoteResponse.SDSFundComposition(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SDSQuoteResponse.SDSFundComposition()
{
  return &type metadata for SDSQuoteResponse.SDSFundComposition;
}

uint64_t destroy for SDSQuoteResponse.SDSQuoteResponseItem(void *a1)
{
  if (a1[2])
  {
    swift_bridgeObjectRelease();
    if (a1[4] != 1) {
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[26] != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (a1[80])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SDSQuoteResponse.SDSQuoteResponseItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  if (v4)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = v4;
    uint64_t v5 = *(void *)(a2 + 32);
    sub_1AFFC8E38();
    if (v5 == 1)
    {
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 33) = *(_OWORD *)(a2 + 33);
    }
    else
    {
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = v5;
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
      sub_1AFFC8E38();
    }
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  }
  else
  {
    long long v6 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v6;
    *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
    long long v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
  }
  uint64_t v8 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v8;
  uint64_t v9 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v9;
  uint64_t v10 = *(void *)(a2 + 208);
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  if (v10 == 1)
  {
    memcpy((void *)(a1 + 104), (const void *)(a2 + 104), 0x248uLL);
  }
  else
  {
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(_WORD *)(a1 + 128) = *(_WORD *)(a2 + 128);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
    *(unsigned char *)(a1 + 161) = *(unsigned char *)(a2 + 161);
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
    *(void *)(a1 + 200) = *(void *)(a2 + 200);
    *(void *)(a1 + 208) = v10;
    *(void *)(a1 + 216) = *(void *)(a2 + 216);
    *(unsigned char *)(a1 + 224) = *(unsigned char *)(a2 + 224);
    uint64_t v11 = *(void *)(a2 + 232);
    *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
    *(void *)(a1 + 232) = v11;
    *(unsigned char *)(a1 + 256) = *(unsigned char *)(a2 + 256);
    *(void *)(a1 + 248) = *(void *)(a2 + 248);
    uint64_t v12 = *(void *)(a2 + 272);
    *(void *)(a1 + 264) = *(void *)(a2 + 264);
    *(void *)(a1 + 272) = v12;
    *(unsigned char *)(a1 + 288) = *(unsigned char *)(a2 + 288);
    *(void *)(a1 + 280) = *(void *)(a2 + 280);
    *(unsigned char *)(a1 + 304) = *(unsigned char *)(a2 + 304);
    *(void *)(a1 + 296) = *(void *)(a2 + 296);
    uint64_t v13 = *(void *)(a2 + 320);
    *(void *)(a1 + 312) = *(void *)(a2 + 312);
    *(void *)(a1 + 320) = v13;
    uint64_t v14 = *(void *)(a2 + 336);
    *(void *)(a1 + 328) = *(void *)(a2 + 328);
    *(void *)(a1 + 336) = v14;
    uint64_t v15 = *(void *)(a2 + 352);
    *(void *)(a1 + 344) = *(void *)(a2 + 344);
    *(void *)(a1 + 352) = v15;
    *(unsigned char *)(a1 + 360) = *(unsigned char *)(a2 + 360);
    uint64_t v16 = *(void *)(a2 + 368);
    *(unsigned char *)(a1 + 376) = *(unsigned char *)(a2 + 376);
    *(void *)(a1 + 368) = v16;
    uint64_t v17 = *(void *)(a2 + 392);
    *(void *)(a1 + 384) = *(void *)(a2 + 384);
    *(void *)(a1 + 392) = v17;
    uint64_t v18 = *(void *)(a2 + 400);
    *(unsigned char *)(a1 + 408) = *(unsigned char *)(a2 + 408);
    *(void *)(a1 + 400) = v18;
    uint64_t v19 = *(void *)(a2 + 416);
    *(unsigned char *)(a1 + 424) = *(unsigned char *)(a2 + 424);
    *(void *)(a1 + 416) = v19;
    uint64_t v20 = *(void *)(a2 + 432);
    *(unsigned char *)(a1 + 440) = *(unsigned char *)(a2 + 440);
    *(void *)(a1 + 432) = v20;
    uint64_t v21 = *(void *)(a2 + 448);
    *(unsigned char *)(a1 + 456) = *(unsigned char *)(a2 + 456);
    *(void *)(a1 + 448) = v21;
    *(unsigned char *)(a1 + 457) = *(unsigned char *)(a2 + 457);
    uint64_t v22 = *(void *)(a2 + 464);
    *(unsigned char *)(a1 + 472) = *(unsigned char *)(a2 + 472);
    *(void *)(a1 + 464) = v22;
    uint64_t v23 = *(void *)(a2 + 480);
    *(unsigned char *)(a1 + 488) = *(unsigned char *)(a2 + 488);
    *(void *)(a1 + 480) = v23;
    uint64_t v24 = *(void *)(a2 + 496);
    *(unsigned char *)(a1 + 504) = *(unsigned char *)(a2 + 504);
    *(void *)(a1 + 496) = v24;
    *(void *)(a1 + 512) = *(void *)(a2 + 512);
    *(void *)(a1 + 520) = *(void *)(a2 + 520);
    *(void *)(a1 + 528) = *(void *)(a2 + 528);
    *(void *)(a1 + 536) = *(void *)(a2 + 536);
    uint64_t v25 = *(void *)(a2 + 544);
    *(_WORD *)(a1 + 552) = *(_WORD *)(a2 + 552);
    *(void *)(a1 + 544) = v25;
    *(void *)(a1 + 560) = *(void *)(a2 + 560);
    *(void *)(a1 + 568) = *(void *)(a2 + 568);
    *(void *)(a1 + 576) = *(void *)(a2 + 576);
    *(void *)(a1 + 584) = *(void *)(a2 + 584);
    *(void *)(a1 + 592) = *(void *)(a2 + 592);
    *(void *)(a1 + 600) = *(void *)(a2 + 600);
    *(void *)(a1 + 608) = *(void *)(a2 + 608);
    *(void *)(a1 + 616) = *(void *)(a2 + 616);
    *(void *)(a1 + 624) = *(void *)(a2 + 624);
    *(void *)(a1 + 632) = *(void *)(a2 + 632);
    uint64_t v26 = *(void *)(a2 + 640);
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    if (v26)
    {
      *(void *)(a1 + 640) = v26;
      *(void *)(a1 + 648) = *(void *)(a2 + 648);
      sub_1AFFC8E38();
      sub_1AFFC8E38();
    }
    else
    {
      *(_OWORD *)(a1 + 640) = *(_OWORD *)(a2 + 640);
    }
    *(void *)(a1 + 656) = *(void *)(a2 + 656);
    *(void *)(a1 + 664) = *(void *)(a2 + 664);
    *(void *)(a1 + 672) = *(void *)(a2 + 672);
    *(void *)(a1 + 680) = *(void *)(a2 + 680);
    sub_1AFFC8E38();
    sub_1AFFC8E38();
  }
  *(void *)(a1 + 688) = *(void *)(a2 + 688);
  *(void *)(a1 + 696) = *(void *)(a2 + 696);
  *(void *)(a1 + 704) = *(void *)(a2 + 704);
  *(void *)(a1 + 712) = *(void *)(a2 + 712);
  *(void *)(a1 + 720) = *(void *)(a2 + 720);
  *(void *)(a1 + 728) = *(void *)(a2 + 728);
  *(unsigned char *)(a1 + 736) = *(unsigned char *)(a2 + 736);
  *(void *)(a1 + 744) = *(void *)(a2 + 744);
  *(void *)(a1 + 752) = *(void *)(a2 + 752);
  *(void *)(a1 + 760) = *(void *)(a2 + 760);
  *(void *)(a1 + 768) = *(void *)(a2 + 768);
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  return a1;
}

uint64_t assignWithCopy for SDSQuoteResponse.SDSQuoteResponseItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  if (!*(void *)(a1 + 16))
  {
    if (!v4)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      long long v16 = *(_OWORD *)(a2 + 16);
      long long v17 = *(_OWORD *)(a2 + 32);
      long long v18 = *(_OWORD *)(a2 + 48);
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      *(_OWORD *)(a1 + 32) = v17;
      *(_OWORD *)(a1 + 48) = v18;
      *(_OWORD *)(a1 + 16) = v16;
      goto LABEL_16;
    }
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    uint64_t v9 = *(void *)(a2 + 32);
    sub_1AFFC8E38();
    if (v9 == 1)
    {
      long long v10 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 33) = *(_OWORD *)(a2 + 33);
      *(_OWORD *)(a1 + 24) = v10;
      goto LABEL_15;
    }
LABEL_10:
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    uint64_t v14 = *(void *)(a2 + 40);
    *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
    *(void *)(a1 + 40) = v14;
    sub_1AFFC8E38();
    goto LABEL_15;
  }
  if (!v4)
  {
    sub_1AFE490A8(a1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    long long v12 = *(_OWORD *)(a2 + 32);
    long long v11 = *(_OWORD *)(a2 + 48);
    long long v13 = *(_OWORD *)(a2 + 16);
    *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
    *(_OWORD *)(a1 + 32) = v12;
    *(_OWORD *)(a1 + 48) = v11;
    *(_OWORD *)(a1 + 16) = v13;
    goto LABEL_16;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  uint64_t v5 = (_OWORD *)(a1 + 24);
  long long v6 = (_OWORD *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  if (*(void *)(a1 + 32) != 1)
  {
    if (v7 == 1)
    {
      sub_1AFDF3958(a1 + 24);
      long long v15 = *(_OWORD *)(a2 + 33);
      *uint64_t v5 = *v6;
      *(_OWORD *)(a1 + 33) = v15;
    }
    else
    {
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      uint64_t v19 = *(void *)(a2 + 40);
      *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
      *(void *)(a1 + 40) = v19;
    }
    goto LABEL_15;
  }
  if (v7 != 1) {
    goto LABEL_10;
  }
  long long v8 = *v6;
  *(_OWORD *)(a1 + 33) = *(_OWORD *)(a2 + 33);
  *uint64_t v5 = v8;
LABEL_15:
  uint64_t v20 = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 56) = v20;
LABEL_16:
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  uint64_t v21 = (void *)(a1 + 104);
  uint64_t v22 = (uint64_t *)(a2 + 104);
  uint64_t v23 = *(void *)(a2 + 208);
  if (*(void *)(a1 + 208) != 1)
  {
    if (v23 == 1)
    {
      sub_1AFE490D8(a1 + 104);
      goto LABEL_22;
    }
    uint64_t v45 = *v22;
    *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
    *uint64_t v21 = v45;
    uint64_t v46 = *(void *)(a2 + 120);
    *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
    *(void *)(a1 + 120) = v46;
    *(unsigned char *)(a1 + 129) = *(unsigned char *)(a2 + 129);
    uint64_t v47 = *(void *)(a2 + 136);
    *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
    *(void *)(a1 + 136) = v47;
    uint64_t v48 = *(void *)(a2 + 152);
    *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
    *(void *)(a1 + 152) = v48;
    *(unsigned char *)(a1 + 161) = *(unsigned char *)(a2 + 161);
    uint64_t v49 = *(void *)(a2 + 168);
    *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
    *(void *)(a1 + 168) = v49;
    uint64_t v50 = *(void *)(a2 + 184);
    *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
    *(void *)(a1 + 184) = v50;
    *(void *)(a1 + 200) = *(void *)(a2 + 200);
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
    sub_1AFFC8E38();
    swift_bridgeObjectRelease();
    uint64_t v51 = *(void *)(a2 + 216);
    *(unsigned char *)(a1 + 224) = *(unsigned char *)(a2 + 224);
    *(void *)(a1 + 216) = v51;
    uint64_t v52 = *(void *)(a2 + 232);
    *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
    *(void *)(a1 + 232) = v52;
    uint64_t v53 = *(void *)(a2 + 248);
    *(unsigned char *)(a1 + 256) = *(unsigned char *)(a2 + 256);
    *(void *)(a1 + 248) = v53;
    *(void *)(a1 + 264) = *(void *)(a2 + 264);
    *(void *)(a1 + 272) = *(void *)(a2 + 272);
    sub_1AFFC8E38();
    swift_bridgeObjectRelease();
    uint64_t v54 = *(void *)(a2 + 280);
    *(unsigned char *)(a1 + 288) = *(unsigned char *)(a2 + 288);
    *(void *)(a1 + 280) = v54;
    uint64_t v55 = *(void *)(a2 + 296);
    *(unsigned char *)(a1 + 304) = *(unsigned char *)(a2 + 304);
    *(void *)(a1 + 296) = v55;
    *(void *)(a1 + 312) = *(void *)(a2 + 312);
    *(void *)(a1 + 320) = *(void *)(a2 + 320);
    sub_1AFFC8E38();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 328) = *(void *)(a2 + 328);
    *(void *)(a1 + 336) = *(void *)(a2 + 336);
    sub_1AFFC8E38();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 344) = *(void *)(a2 + 344);
    *(void *)(a1 + 352) = *(void *)(a2 + 352);
    sub_1AFFC8E38();
    swift_bridgeObjectRelease();
    *(unsigned char *)(a1 + 360) = *(unsigned char *)(a2 + 360);
    uint64_t v56 = *(void *)(a2 + 368);
    *(unsigned char *)(a1 + 376) = *(unsigned char *)(a2 + 376);
    *(void *)(a1 + 368) = v56;
    *(void *)(a1 + 384) = *(void *)(a2 + 384);
    *(void *)(a1 + 392) = *(void *)(a2 + 392);
    sub_1AFFC8E38();
    swift_bridgeObjectRelease();
    uint64_t v57 = *(void *)(a2 + 400);
    *(unsigned char *)(a1 + 408) = *(unsigned char *)(a2 + 408);
    *(void *)(a1 + 400) = v57;
    uint64_t v58 = *(void *)(a2 + 416);
    *(unsigned char *)(a1 + 424) = *(unsigned char *)(a2 + 424);
    *(void *)(a1 + 416) = v58;
    uint64_t v59 = *(void *)(a2 + 432);
    *(unsigned char *)(a1 + 440) = *(unsigned char *)(a2 + 440);
    *(void *)(a1 + 432) = v59;
    uint64_t v60 = *(void *)(a2 + 448);
    *(unsigned char *)(a1 + 456) = *(unsigned char *)(a2 + 456);
    *(void *)(a1 + 448) = v60;
    *(unsigned char *)(a1 + 457) = *(unsigned char *)(a2 + 457);
    uint64_t v61 = *(void *)(a2 + 464);
    *(unsigned char *)(a1 + 472) = *(unsigned char *)(a2 + 472);
    *(void *)(a1 + 464) = v61;
    uint64_t v62 = *(void *)(a2 + 480);
    *(unsigned char *)(a1 + 488) = *(unsigned char *)(a2 + 488);
    *(void *)(a1 + 480) = v62;
    uint64_t v63 = *(void *)(a2 + 496);
    *(unsigned char *)(a1 + 504) = *(unsigned char *)(a2 + 504);
    *(void *)(a1 + 496) = v63;
    *(void *)(a1 + 512) = *(void *)(a2 + 512);
    *(void *)(a1 + 520) = *(void *)(a2 + 520);
    sub_1AFFC8E38();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 528) = *(void *)(a2 + 528);
    *(void *)(a1 + 536) = *(void *)(a2 + 536);
    sub_1AFFC8E38();
    swift_bridgeObjectRelease();
    uint64_t v64 = *(void *)(a2 + 544);
    *(_WORD *)(a1 + 552) = *(_WORD *)(a2 + 552);
    *(void *)(a1 + 544) = v64;
    *(void *)(a1 + 560) = *(void *)(a2 + 560);
    *(void *)(a1 + 568) = *(void *)(a2 + 568);
    sub_1AFFC8E38();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 576) = *(void *)(a2 + 576);
    *(void *)(a1 + 584) = *(void *)(a2 + 584);
    sub_1AFFC8E38();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 592) = *(void *)(a2 + 592);
    *(void *)(a1 + 600) = *(void *)(a2 + 600);
    sub_1AFFC8E38();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 608) = *(void *)(a2 + 608);
    *(void *)(a1 + 616) = *(void *)(a2 + 616);
    sub_1AFFC8E38();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 624) = *(void *)(a2 + 624);
    *(void *)(a1 + 632) = *(void *)(a2 + 632);
    sub_1AFFC8E38();
    swift_bridgeObjectRelease();
    uint64_t v65 = *(void *)(a2 + 640);
    if (*(void *)(a1 + 640))
    {
      if (v65)
      {
        *(void *)(a1 + 640) = v65;
        sub_1AFFC8E38();
        swift_bridgeObjectRelease();
        *(void *)(a1 + 648) = *(void *)(a2 + 648);
        sub_1AFFC8E38();
        swift_bridgeObjectRelease();
LABEL_32:
        *(void *)(a1 + 656) = *(void *)(a2 + 656);
        *(void *)(a1 + 664) = *(void *)(a2 + 664);
        sub_1AFFC8E38();
        swift_bridgeObjectRelease();
        *(void *)(a1 + 672) = *(void *)(a2 + 672);
        *(void *)(a1 + 680) = *(void *)(a2 + 680);
        sub_1AFFC8E38();
        swift_bridgeObjectRelease();
        goto LABEL_33;
      }
      sub_1AFE47BDC(a1 + 640);
    }
    else if (v65)
    {
      *(void *)(a1 + 640) = v65;
      *(void *)(a1 + 648) = *(void *)(a2 + 648);
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      goto LABEL_32;
    }
    *(_OWORD *)(a1 + 640) = *(_OWORD *)(a2 + 640);
    goto LABEL_32;
  }
  if (v23 == 1)
  {
LABEL_22:
    memcpy((void *)(a1 + 104), (const void *)(a2 + 104), 0x248uLL);
    goto LABEL_33;
  }
  uint64_t v24 = *v22;
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *uint64_t v21 = v24;
  uint64_t v25 = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 120) = v25;
  *(unsigned char *)(a1 + 129) = *(unsigned char *)(a2 + 129);
  uint64_t v26 = *(void *)(a2 + 136);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(void *)(a1 + 136) = v26;
  uint64_t v27 = *(void *)(a2 + 152);
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  *(void *)(a1 + 152) = v27;
  *(unsigned char *)(a1 + 161) = *(unsigned char *)(a2 + 161);
  uint64_t v28 = *(void *)(a2 + 168);
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  *(void *)(a1 + 168) = v28;
  uint64_t v29 = *(void *)(a2 + 184);
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  *(void *)(a1 + 184) = v29;
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  uint64_t v30 = *(void *)(a2 + 216);
  *(unsigned char *)(a1 + 224) = *(unsigned char *)(a2 + 224);
  *(void *)(a1 + 216) = v30;
  uint64_t v31 = *(void *)(a2 + 232);
  *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
  *(void *)(a1 + 232) = v31;
  uint64_t v32 = *(void *)(a2 + 248);
  *(unsigned char *)(a1 + 256) = *(unsigned char *)(a2 + 256);
  *(void *)(a1 + 248) = v32;
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  uint64_t v33 = *(void *)(a2 + 280);
  *(unsigned char *)(a1 + 288) = *(unsigned char *)(a2 + 288);
  *(void *)(a1 + 280) = v33;
  uint64_t v34 = *(void *)(a2 + 296);
  *(unsigned char *)(a1 + 304) = *(unsigned char *)(a2 + 304);
  *(void *)(a1 + 296) = v34;
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  *(void *)(a1 + 344) = *(void *)(a2 + 344);
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  *(unsigned char *)(a1 + 360) = *(unsigned char *)(a2 + 360);
  uint64_t v35 = *(void *)(a2 + 368);
  *(unsigned char *)(a1 + 376) = *(unsigned char *)(a2 + 376);
  *(void *)(a1 + 368) = v35;
  *(void *)(a1 + 384) = *(void *)(a2 + 384);
  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  uint64_t v36 = *(void *)(a2 + 400);
  *(unsigned char *)(a1 + 408) = *(unsigned char *)(a2 + 408);
  *(void *)(a1 + 400) = v36;
  uint64_t v37 = *(void *)(a2 + 416);
  *(unsigned char *)(a1 + 424) = *(unsigned char *)(a2 + 424);
  *(void *)(a1 + 416) = v37;
  uint64_t v38 = *(void *)(a2 + 432);
  *(unsigned char *)(a1 + 440) = *(unsigned char *)(a2 + 440);
  *(void *)(a1 + 432) = v38;
  uint64_t v39 = *(void *)(a2 + 448);
  *(unsigned char *)(a1 + 456) = *(unsigned char *)(a2 + 456);
  *(void *)(a1 + 448) = v39;
  *(unsigned char *)(a1 + 457) = *(unsigned char *)(a2 + 457);
  uint64_t v40 = *(void *)(a2 + 464);
  *(unsigned char *)(a1 + 472) = *(unsigned char *)(a2 + 472);
  *(void *)(a1 + 464) = v40;
  uint64_t v41 = *(void *)(a2 + 480);
  *(unsigned char *)(a1 + 488) = *(unsigned char *)(a2 + 488);
  *(void *)(a1 + 480) = v41;
  uint64_t v42 = *(void *)(a2 + 496);
  *(unsigned char *)(a1 + 504) = *(unsigned char *)(a2 + 504);
  *(void *)(a1 + 496) = v42;
  *(void *)(a1 + 512) = *(void *)(a2 + 512);
  *(void *)(a1 + 520) = *(void *)(a2 + 520);
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  *(void *)(a1 + 536) = *(void *)(a2 + 536);
  uint64_t v43 = *(void *)(a2 + 544);
  *(_WORD *)(a1 + 552) = *(_WORD *)(a2 + 552);
  *(void *)(a1 + 544) = v43;
  *(void *)(a1 + 560) = *(void *)(a2 + 560);
  *(void *)(a1 + 568) = *(void *)(a2 + 568);
  *(void *)(a1 + 576) = *(void *)(a2 + 576);
  *(void *)(a1 + 584) = *(void *)(a2 + 584);
  *(void *)(a1 + 592) = *(void *)(a2 + 592);
  *(void *)(a1 + 600) = *(void *)(a2 + 600);
  *(void *)(a1 + 608) = *(void *)(a2 + 608);
  *(void *)(a1 + 616) = *(void *)(a2 + 616);
  *(void *)(a1 + 624) = *(void *)(a2 + 624);
  *(void *)(a1 + 632) = *(void *)(a2 + 632);
  uint64_t v44 = *(void *)(a2 + 640);
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  if (v44)
  {
    *(void *)(a1 + 640) = v44;
    *(void *)(a1 + 648) = *(void *)(a2 + 648);
    sub_1AFFC8E38();
    sub_1AFFC8E38();
  }
  else
  {
    *(_OWORD *)(a1 + 640) = *(_OWORD *)(a2 + 640);
  }
  *(void *)(a1 + 656) = *(void *)(a2 + 656);
  *(void *)(a1 + 664) = *(void *)(a2 + 664);
  *(void *)(a1 + 672) = *(void *)(a2 + 672);
  *(void *)(a1 + 680) = *(void *)(a2 + 680);
  sub_1AFFC8E38();
  sub_1AFFC8E38();
LABEL_33:
  *(void *)(a1 + 688) = *(void *)(a2 + 688);
  *(void *)(a1 + 696) = *(void *)(a2 + 696);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 704) = *(void *)(a2 + 704);
  *(void *)(a1 + 712) = *(void *)(a2 + 712);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 720) = *(void *)(a2 + 720);
  *(void *)(a1 + 728) = *(void *)(a2 + 728);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 736) = *(unsigned char *)(a2 + 736);
  *(void *)(a1 + 744) = *(void *)(a2 + 744);
  *(void *)(a1 + 752) = *(void *)(a2 + 752);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 760) = *(void *)(a2 + 760);
  *(void *)(a1 + 768) = *(void *)(a2 + 768);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AFE490A8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1AFE490D8(uint64_t a1)
{
  return a1;
}

void *__swift_memcpy776_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x308uLL);
}

uint64_t assignWithTake for SDSQuoteResponse.SDSQuoteResponseItem(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a1 + 16)) {
    goto LABEL_8;
  }
  uint64_t v4 = *(void *)(a2 + 16);
  if (!v4)
  {
    sub_1AFE490A8(a1);
LABEL_8:
    long long v6 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v6;
    *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
    long long v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    goto LABEL_11;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 32) != 1)
  {
    uint64_t v5 = *(void *)(a2 + 32);
    if (v5 != 1)
    {
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = v5;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
      goto LABEL_10;
    }
    sub_1AFDF3958(a1 + 24);
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 33) = *(_OWORD *)(a2 + 33);
LABEL_10:
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
LABEL_11:
  uint64_t v8 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v9;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 208) != 1)
  {
    uint64_t v10 = *(void *)(a2 + 208);
    if (v10 == 1)
    {
      sub_1AFE490D8(a1 + 104);
      goto LABEL_14;
    }
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(_WORD *)(a1 + 128) = *(_WORD *)(a2 + 128);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
    *(unsigned char *)(a1 + 161) = *(unsigned char *)(a2 + 161);
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
    *(void *)(a1 + 200) = *(void *)(a2 + 200);
    *(void *)(a1 + 208) = v10;
    swift_bridgeObjectRelease();
    *(void *)(a1 + 216) = *(void *)(a2 + 216);
    *(unsigned char *)(a1 + 224) = *(unsigned char *)(a2 + 224);
    *(void *)(a1 + 232) = *(void *)(a2 + 232);
    *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
    *(void *)(a1 + 248) = *(void *)(a2 + 248);
    *(unsigned char *)(a1 + 256) = *(unsigned char *)(a2 + 256);
    uint64_t v11 = *(void *)(a2 + 272);
    *(void *)(a1 + 264) = *(void *)(a2 + 264);
    *(void *)(a1 + 272) = v11;
    swift_bridgeObjectRelease();
    *(void *)(a1 + 280) = *(void *)(a2 + 280);
    *(unsigned char *)(a1 + 288) = *(unsigned char *)(a2 + 288);
    *(void *)(a1 + 296) = *(void *)(a2 + 296);
    *(unsigned char *)(a1 + 304) = *(unsigned char *)(a2 + 304);
    uint64_t v12 = *(void *)(a2 + 320);
    *(void *)(a1 + 312) = *(void *)(a2 + 312);
    *(void *)(a1 + 320) = v12;
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void *)(a2 + 336);
    *(void *)(a1 + 328) = *(void *)(a2 + 328);
    *(void *)(a1 + 336) = v13;
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void *)(a2 + 352);
    *(void *)(a1 + 344) = *(void *)(a2 + 344);
    *(void *)(a1 + 352) = v14;
    swift_bridgeObjectRelease();
    *(unsigned char *)(a1 + 360) = *(unsigned char *)(a2 + 360);
    *(void *)(a1 + 368) = *(void *)(a2 + 368);
    *(unsigned char *)(a1 + 376) = *(unsigned char *)(a2 + 376);
    uint64_t v15 = *(void *)(a2 + 392);
    *(void *)(a1 + 384) = *(void *)(a2 + 384);
    *(void *)(a1 + 392) = v15;
    swift_bridgeObjectRelease();
    *(void *)(a1 + 400) = *(void *)(a2 + 400);
    *(unsigned char *)(a1 + 408) = *(unsigned char *)(a2 + 408);
    *(void *)(a1 + 416) = *(void *)(a2 + 416);
    *(unsigned char *)(a1 + 424) = *(unsigned char *)(a2 + 424);
    *(void *)(a1 + 432) = *(void *)(a2 + 432);
    *(unsigned char *)(a1 + 440) = *(unsigned char *)(a2 + 440);
    *(void *)(a1 + 448) = *(void *)(a2 + 448);
    *(_WORD *)(a1 + 456) = *(_WORD *)(a2 + 456);
    uint64_t v16 = *(void *)(a2 + 464);
    *(unsigned char *)(a1 + 472) = *(unsigned char *)(a2 + 472);
    *(void *)(a1 + 464) = v16;
    *(void *)(a1 + 480) = *(void *)(a2 + 480);
    *(unsigned char *)(a1 + 488) = *(unsigned char *)(a2 + 488);
    *(void *)(a1 + 496) = *(void *)(a2 + 496);
    *(unsigned char *)(a1 + 504) = *(unsigned char *)(a2 + 504);
    *(void *)(a1 + 512) = *(void *)(a2 + 512);
    *(void *)(a1 + 520) = *(void *)(a2 + 520);
    swift_bridgeObjectRelease();
    *(void *)(a1 + 528) = *(void *)(a2 + 528);
    *(void *)(a1 + 536) = *(void *)(a2 + 536);
    swift_bridgeObjectRelease();
    *(void *)(a1 + 544) = *(void *)(a2 + 544);
    *(_WORD *)(a1 + 552) = *(_WORD *)(a2 + 552);
    *(void *)(a1 + 560) = *(void *)(a2 + 560);
    *(void *)(a1 + 568) = *(void *)(a2 + 568);
    swift_bridgeObjectRelease();
    *(void *)(a1 + 576) = *(void *)(a2 + 576);
    *(void *)(a1 + 584) = *(void *)(a2 + 584);
    swift_bridgeObjectRelease();
    *(void *)(a1 + 592) = *(void *)(a2 + 592);
    *(void *)(a1 + 600) = *(void *)(a2 + 600);
    swift_bridgeObjectRelease();
    *(void *)(a1 + 608) = *(void *)(a2 + 608);
    *(void *)(a1 + 616) = *(void *)(a2 + 616);
    swift_bridgeObjectRelease();
    *(void *)(a1 + 624) = *(void *)(a2 + 624);
    *(void *)(a1 + 632) = *(void *)(a2 + 632);
    swift_bridgeObjectRelease();
    if (*(void *)(a1 + 640))
    {
      uint64_t v17 = *(void *)(a2 + 640);
      if (v17)
      {
        *(void *)(a1 + 640) = v17;
        swift_bridgeObjectRelease();
        *(void *)(a1 + 648) = *(void *)(a2 + 648);
        swift_bridgeObjectRelease();
LABEL_20:
        *(void *)(a1 + 656) = *(void *)(a2 + 656);
        *(void *)(a1 + 664) = *(void *)(a2 + 664);
        swift_bridgeObjectRelease();
        *(void *)(a1 + 672) = *(void *)(a2 + 672);
        *(void *)(a1 + 680) = *(void *)(a2 + 680);
        swift_bridgeObjectRelease();
        goto LABEL_21;
      }
      sub_1AFE47BDC(a1 + 640);
    }
    *(_OWORD *)(a1 + 640) = *(_OWORD *)(a2 + 640);
    goto LABEL_20;
  }
LABEL_14:
  memcpy((void *)(a1 + 104), (const void *)(a2 + 104), 0x248uLL);
LABEL_21:
  *(void *)(a1 + 688) = *(void *)(a2 + 688);
  *(void *)(a1 + 696) = *(void *)(a2 + 696);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 704) = *(void *)(a2 + 704);
  *(void *)(a1 + 712) = *(void *)(a2 + 712);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 720) = *(void *)(a2 + 720);
  *(void *)(a1 + 728) = *(void *)(a2 + 728);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 736) = *(unsigned char *)(a2 + 736);
  *(void *)(a1 + 744) = *(void *)(a2 + 744);
  *(void *)(a1 + 752) = *(void *)(a2 + 752);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 760) = *(void *)(a2 + 760);
  *(void *)(a1 + 768) = *(void *)(a2 + 768);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SDSQuoteResponse.SDSQuoteResponseItem(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 776)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 728);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SDSQuoteResponse.SDSQuoteResponseItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 776) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 728) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 776) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SDSQuoteResponse.SDSQuoteResponseItem()
{
  return &type metadata for SDSQuoteResponse.SDSQuoteResponseItem;
}

uint64_t destroy for SDSQuoteResponse.SDSQuoteResponseChartItem(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 32);
  if (result != 1)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for SDSQuoteResponse.SDSQuoteResponseChartItem(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  sub_1AFFC8E38();
  if (v4 == 1)
  {
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 33) = *(_OWORD *)(a2 + 33);
  }
  else
  {
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = v4;
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
    sub_1AFFC8E38();
  }
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

uint64_t assignWithCopy for SDSQuoteResponse.SDSQuoteResponseChartItem(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  uint64_t v4 = (long long *)(a1 + 24);
  uint64_t v5 = (long long *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  if (*(void *)(a1 + 32) == 1)
  {
    if (v6 == 1)
    {
      long long v7 = *v5;
      *(_OWORD *)(a1 + 33) = *(_OWORD *)(a2 + 33);
      *uint64_t v4 = v7;
    }
    else
    {
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      uint64_t v9 = *(void *)(a2 + 40);
      *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
      *(void *)(a1 + 40) = v9;
      sub_1AFFC8E38();
    }
  }
  else if (v6 == 1)
  {
    sub_1AFDF3958(a1 + 24);
    long long v8 = *(_OWORD *)(a2 + 33);
    *uint64_t v4 = *v5;
    *(_OWORD *)(a1 + 33) = v8;
  }
  else
  {
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    sub_1AFFC8E38();
    swift_bridgeObjectRelease();
    uint64_t v10 = *(void *)(a2 + 40);
    *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
    *(void *)(a1 + 40) = v10;
  }
  uint64_t v11 = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 56) = v11;
  return a1;
}

__n128 __swift_memcpy65_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for SDSQuoteResponse.SDSQuoteResponseChartItem(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 32) != 1)
  {
    uint64_t v4 = *(void *)(a2 + 32);
    if (v4 != 1)
    {
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = v4;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
      goto LABEL_6;
    }
    sub_1AFDF3958(a1 + 24);
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 33) = *(_OWORD *)(a2 + 33);
LABEL_6:
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for SDSQuoteResponse.SDSQuoteResponseChartItem(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 65)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SDSQuoteResponse.SDSQuoteResponseChartItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 65) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SDSQuoteResponse.SDSQuoteResponseChartItem()
{
  return &type metadata for SDSQuoteResponse.SDSQuoteResponseChartItem;
}

uint64_t initializeWithCopy for SDSQuoteResponse.SDSQuoteResponseChartItem.TimeZoneOffset(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  sub_1AFFC8E38();
  return a1;
}

uint64_t assignWithCopy for SDSQuoteResponse.SDSQuoteResponseChartItem.TimeZoneOffset(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for SDSQuoteResponse.SDSQuoteResponseChartItem.TimeZoneOffset(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for SDSQuoteResponse.SDSQuoteResponseChartItem.TimeZoneOffset(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SDSQuoteResponse.SDSQuoteResponseChartItem.TimeZoneOffset(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SDSQuoteResponse.SDSQuoteResponseChartItem.TimeZoneOffset()
{
  return &type metadata for SDSQuoteResponse.SDSQuoteResponseChartItem.TimeZoneOffset;
}

ValueMetadata *type metadata accessor for SDSQuoteResponse()
{
  return &type metadata for SDSQuoteResponse;
}

uint64_t sub_1AFE49C48(char *a1, char *a2)
{
  return sub_1AFDEEC44(*a1, *a2);
}

uint64_t sub_1AFE49C54()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFE49CDC()
{
  sub_1AFFCAF68();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFE49D50()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFE49DD4@<X0>(char *a1@<X8>)
{
  return sub_1AFDF621C(a1);
}

void sub_1AFE49DE0(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x7365746F7571;
  if (*v1) {
    uint64_t v2 = 0x646174654D736473;
  }
  unint64_t v3 = 0xE600000000000000;
  if (*v1) {
    unint64_t v3 = 0xEB00000000617461;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1AFE49E24()
{
  if (*v0) {
    return 0x646174654D736473;
  }
  else {
    return 0x7365746F7571;
  }
}

uint64_t sub_1AFE49E64@<X0>(char *a1@<X8>)
{
  return sub_1AFDF6300(a1);
}

uint64_t sub_1AFE49E70(uint64_t a1)
{
  unint64_t v2 = sub_1AFE505E8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFE49EAC(uint64_t a1)
{
  unint64_t v2 = sub_1AFE505E8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFE49EE8(void *a1)
{
  unint64_t v3 = v1;
  sub_1AFE56068(0, &qword_1E9AFB718, (uint64_t (*)(void))sub_1AFE505E8, (uint64_t)&type metadata for SDSQuoteResponse.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFE505E8();
  sub_1AFFCBE78();
  v11[0] = *v3;
  char v13 = 0;
  sub_1AFE54F90(0, &qword_1EB817F78, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseItem, MEMORY[0x1E4FBB320]);
  sub_1AFE54EA8();
  sub_1AFFCBC58();
  if (!v2)
  {
    sub_1AFE53774((uint64_t)(v3 + 1), (uint64_t)v12, &qword_1EB818CA0, (uint64_t)&type metadata for SDSMetadata);
    sub_1AFE53774((uint64_t)v12, (uint64_t)v11, &qword_1EB818CA0, (uint64_t)&type metadata for SDSMetadata);
    char v13 = 1;
    sub_1AFD57DF8();
    sub_1AFFCBBE8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1AFE4A108(unsigned __int8 *a1, char *a2)
{
  return sub_1AFDEF01C(*a1, *a2);
}

uint64_t sub_1AFE4A114()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFE4A20C()
{
  sub_1AFFCAF68();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFE4A2EC()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFE4A3E0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFE533F0();
  *a1 = result;
  return result;
}

void sub_1AFE4A418(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE900000000000065;
  uint64_t v3 = 0x676E615265746164;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE700000000000000;
      uint64_t v3 = 0x73656972746E65;
      goto LABEL_3;
    case 2:
      strcpy((char *)a1, "marketTimeZone");
      *(unsigned char *)(a1 + 15) = -18;
      break;
    case 3:
      strcpy((char *)a1, "previousClose");
      *(_WORD *)(a1 + 14) = -4864;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_1AFE4A4D0()
{
  uint64_t result = 0x676E615265746164;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x73656972746E65;
      break;
    case 2:
      uint64_t result = 0x695474656B72616DLL;
      break;
    case 3:
      uint64_t result = 0x73756F6976657270;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1AFE4A57C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFE533F0();
  *a1 = result;
  return result;
}

uint64_t sub_1AFE4A5AC(uint64_t a1)
{
  unint64_t v2 = sub_1AFE54A4C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFE4A5E8(uint64_t a1)
{
  unint64_t v2 = sub_1AFE54A4C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFE4A624(void *a1)
{
  uint64_t v3 = v1;
  sub_1AFE56068(0, &qword_1E9AFB6D8, (uint64_t (*)(void))sub_1AFE54A4C, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseChartItem.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFE54A4C();
  sub_1AFFCBE78();
  v11[0] = *(_OWORD *)v3;
  char v13 = 0;
  sub_1AFE54C30();
  sub_1AFFCBC58();
  if (!v2)
  {
    *(void *)&v11[0] = *(void *)(v3 + 16);
    char v13 = 1;
    sub_1AFE54F90(0, &qword_1EB811250, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseEntryItem, MEMORY[0x1E4FBB320]);
    sub_1AFE54C84();
    sub_1AFFCBC58();
    sub_1AFE53774(v3 + 24, (uint64_t)v12, &qword_1E9AFB6F8, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseChartItem.TimeZoneOffset);
    sub_1AFE53774((uint64_t)v12, (uint64_t)v11, &qword_1E9AFB6F8, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseChartItem.TimeZoneOffset);
    char v13 = 2;
    sub_1AFE54F90(0, &qword_1E9AFB6F8, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseChartItem.TimeZoneOffset, MEMORY[0x1E4FBB718]);
    sub_1AFE54D6C();
    sub_1AFFCBC58();
    LOBYTE(v11[0]) = 3;
    sub_1AFFCBBB8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1AFE4A8D8(char *a1, char *a2)
{
  return sub_1AFDEEF80(*a1, *a2);
}

uint64_t sub_1AFE4A8E4()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFE4A95C()
{
  sub_1AFFCAF68();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFE4A9C0()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFE4AA34@<X0>(char *a1@<X8>)
{
  return sub_1AFDF621C(a1);
}

void sub_1AFE4AA40(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1701080931;
  if (*v1) {
    uint64_t v2 = 0x74657366666FLL;
  }
  unint64_t v3 = 0xE400000000000000;
  if (*v1) {
    unint64_t v3 = 0xE600000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1AFE4AA74()
{
  if (*v0) {
    return 0x74657366666FLL;
  }
  else {
    return 1701080931;
  }
}

uint64_t sub_1AFE4AAA4@<X0>(char *a1@<X8>)
{
  return sub_1AFDF6300(a1);
}

uint64_t sub_1AFE4AAB0(uint64_t a1)
{
  unint64_t v2 = sub_1AFE54E54();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFE4AAEC(uint64_t a1)
{
  unint64_t v2 = sub_1AFE54E54();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFE4AB28(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  v17[0] = a4;
  int v20 = a5;
  sub_1AFE56068(0, &qword_1E9AFB710, (uint64_t (*)(void))sub_1AFE54E54, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseChartItem.TimeZoneOffset.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)v17 - v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFE54E54();
  sub_1AFFCBE78();
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  char v21 = 0;
  uint64_t v13 = MEMORY[0x1E4FBB1A0];
  sub_1AFE54F90(0, (unint64_t *)&qword_1EB819C90, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
  sub_1AFE54474((unint64_t *)&qword_1E9AFB6B8, (unint64_t *)&qword_1EB819C90, v13);
  uint64_t v14 = v17[1];
  sub_1AFFCBC58();
  if (!v14)
  {
    uint64_t v18 = v17[0];
    LOBYTE(v19) = v20 & 1;
    char v21 = 1;
    uint64_t v15 = MEMORY[0x1E4FBB550];
    sub_1AFE54F90(0, &qword_1EB818050, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB718]);
    sub_1AFE54474(&qword_1E9AFB5F8, &qword_1EB818050, v15);
    sub_1AFFCBC58();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1AFE4AD98@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1AFE50AC0(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(void *)(a2 + 16) = v6;
    *(unsigned char *)(a2 + 24) = v7 & 1;
  }
  return result;
}

uint64_t sub_1AFE4ADD0(void *a1)
{
  return sub_1AFE4AB28(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(unsigned __int8 *)(v1 + 24));
}

uint64_t sub_1AFE4ADF4(void *a1, void *a2)
{
  uint64_t v3 = a1[1];
  uint64_t v4 = a2[1];
  if (v3)
  {
    if (v4)
    {
      BOOL v5 = *a1 == *a2 && v3 == v4;
      if (v5 || (sub_1AFFCBCE8() & 1) != 0) {
        return 1;
      }
    }
  }
  else if (!v4)
  {
    return 1;
  }
  return 0;
}

__n128 sub_1AFE4AE50@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1AFE50778(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(unsigned char *)(a2 + 64) = v7;
    __n128 result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_1AFE4AEA4(void *a1)
{
  return sub_1AFE4A624(a1);
}

uint64_t sub_1AFE4AEE8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 48);
  uint64_t v7[2] = *(_OWORD *)(a1 + 32);
  v7[3] = v2;
  char v8 = *(unsigned char *)(a1 + 64);
  long long v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  void v9[2] = *(_OWORD *)(a2 + 32);
  uint64_t v9[3] = v4;
  char v10 = *(unsigned char *)(a2 + 64);
  long long v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return sub_1AFE4FFF8((uint64_t)v7, (uint64_t)v9) & 1;
}

uint64_t sub_1AFE4AF44(char *a1, char *a2)
{
  return sub_1AFDEEED4(*a1, *a2);
}

uint64_t sub_1AFE4AF50()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFE4AFD8()
{
  sub_1AFFCAF68();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFE4B04C()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFE4B0D0@<X0>(char *a1@<X8>)
{
  return sub_1AFDF621C(a1);
}

void sub_1AFE4B0DC(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x65746144646E65;
  if (*v1) {
    uint64_t v2 = 0x7461447472617473;
  }
  unint64_t v3 = 0xE700000000000000;
  if (*v1) {
    unint64_t v3 = 0xE900000000000065;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1AFE4B120()
{
  if (*v0) {
    return 0x7461447472617473;
  }
  else {
    return 0x65746144646E65;
  }
}

uint64_t sub_1AFE4B160@<X0>(char *a1@<X8>)
{
  return sub_1AFDF6300(a1);
}

uint64_t sub_1AFE4B16C(uint64_t a1)
{
  unint64_t v2 = sub_1AFE55FC0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFE4B1A8(uint64_t a1)
{
  unint64_t v2 = sub_1AFE55FC0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFE4B1E4(void *a1, uint64_t a2, uint64_t a3)
{
  v11[1] = a3;
  sub_1AFE56068(0, &qword_1E9AFB7B8, (uint64_t (*)(void))sub_1AFE55FC0, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseDateRange.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFE55FC0();
  sub_1AFFCBE78();
  char v13 = 0;
  sub_1AFFCBC38();
  if (!v3)
  {
    char v12 = 1;
    sub_1AFFCBC38();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1AFE4B380@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1AFE50CCC(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_1AFE4B3AC(void *a1)
{
  return sub_1AFE4B1E4(a1, *v1, v1[1]);
}

BOOL sub_1AFE4B3C8(void *a1, void *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

uint64_t sub_1AFE4B3E0(unsigned __int8 *a1, char *a2)
{
  return sub_1AFDEECF0(*a1, *a2);
}

uint64_t sub_1AFE4B3EC()
{
  return sub_1AFF9A890();
}

uint64_t sub_1AFE4B3F4()
{
  sub_1AFFCAF68();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFE4B4DC()
{
  return sub_1AFF9B784();
}

uint64_t sub_1AFE4B4E4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFE53438();
  *a1 = result;
  return result;
}

void sub_1AFE4B51C(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE500000000000000;
  uint64_t v3 = 0x65736F6C63;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE400000000000000;
      uint64_t v3 = 1751607656;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 7827308;
      *(void *)(a1 + 8) = 0xE300000000000000;
      break;
    case 3:
      *(void *)a1 = 1852141679;
      *(void *)(a1 + 8) = 0xE400000000000000;
      break;
    case 4:
      strcpy((char *)a1, "referenceDate");
      *(_WORD *)(a1 + 14) = -4864;
      break;
    case 5:
      *(void *)a1 = 0x656D756C6F76;
      *(void *)(a1 + 8) = 0xE600000000000000;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_1AFE4B5E4()
{
  uint64_t result = 0x65736F6C63;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1751607656;
      break;
    case 2:
      uint64_t result = 7827308;
      break;
    case 3:
      uint64_t result = 1852141679;
      break;
    case 4:
      uint64_t result = 0x636E657265666572;
      break;
    case 5:
      uint64_t result = 0x656D756C6F76;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1AFE4B698@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFE53438();
  *a1 = result;
  return result;
}

uint64_t sub_1AFE4B6C8(uint64_t a1)
{
  unint64_t v2 = sub_1AFE56014();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFE4B704(uint64_t a1)
{
  unint64_t v2 = sub_1AFE56014();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFE4B740(void *a1)
{
  sub_1AFE56068(0, &qword_1E9AFB7C0, (uint64_t (*)(void))sub_1AFE56014, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseEntryItem.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFE56014();
  sub_1AFFCBE78();
  char v15 = 0;
  sub_1AFFCBBB8();
  if (!v1)
  {
    char v14 = 1;
    sub_1AFFCBBB8();
    char v13 = 2;
    sub_1AFFCBBB8();
    char v12 = 3;
    sub_1AFFCBBB8();
    char v11 = 4;
    sub_1AFFCBC38();
    char v10 = 5;
    sub_1AFFCBBB8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1AFE4B988(char a1)
{
  uint64_t result = 0x7472616863;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x65676E6168637865;
      break;
    case 2:
      uint64_t result = 1701667182;
      break;
    case 3:
      uint64_t result = 0x74654465746F7571;
      break;
    case 4:
      uint64_t result = 0x6D614E74726F6873;
      break;
    case 5:
      uint64_t result = 0x4E746361706D6F63;
      break;
    case 6:
      uint64_t result = 0x6C6F626D7973;
      break;
    case 7:
      uint64_t result = 0x79546C6F626D7973;
      break;
    case 8:
      uint64_t result = 0x4164657461657263;
      break;
    case 9:
      uint64_t result = 0x7243656372756F73;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1AFE4BAE0(char a1)
{
  uint64_t result = 0x7472616863;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x65676E6168637865;
      break;
    case 2:
      uint64_t result = 1701667182;
      break;
    case 3:
      uint64_t result = 0x74654465746F7571;
      break;
    case 4:
      uint64_t result = 0x6D614E74726F6873;
      break;
    case 5:
      uint64_t result = 0x4E746361706D6F63;
      break;
    case 6:
      uint64_t result = 0x6C6F626D7973;
      break;
    case 7:
      uint64_t result = 0x79546C6F626D7973;
      break;
    case 8:
      uint64_t result = 0x4164657461657263;
      break;
    case 9:
      uint64_t result = 0x7243656372756F73;
      break;
    default:
      return result;
  }
  return result;
}

double sub_1AFE4BC38@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1AFE50EA4(a1, (uint64_t *)v7);
  if (!v2)
  {
    long long v5 = v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 64) = v7[4];
    *(unsigned char *)(a2 + 80) = v8;
    double result = *(double *)v7;
    long long v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_1AFE4BC94(void *a1)
{
  return sub_1AFE4B740(a1);
}

uint64_t sub_1AFE4BCAC(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 48);
  uint64_t v7[2] = *(_OWORD *)(a1 + 32);
  v7[3] = v2;
  _OWORD v7[4] = *(_OWORD *)(a1 + 64);
  char v8 = *(unsigned char *)(a1 + 80);
  long long v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  void v9[2] = *(_OWORD *)(a2 + 32);
  uint64_t v9[3] = v4;
  _OWORD v9[4] = *(_OWORD *)(a2 + 64);
  char v10 = *(unsigned char *)(a2 + 80);
  long long v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return sub_1AFE500D4((uint64_t)v7, (uint64_t)v9) & 1;
}

uint64_t sub_1AFE4BD18(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_1AFE4CAD8(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_1AFE4B988);
}

uint64_t sub_1AFE4BD30(uint64_t a1, uint64_t a2)
{
  return sub_1AFE4CB88(a1, a2, (void (*)(uint64_t))sub_1AFE4B988);
}

uint64_t sub_1AFE4BD48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AFE4CC0C(a1, a2, a3, (void (*)(void))sub_1AFE4B988);
}

uint64_t sub_1AFE4BD60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AFE4CC7C(a1, a2, a3, (void (*)(uint64_t))sub_1AFE4B988);
}

uint64_t sub_1AFE4BD78@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFE51194();
  *a1 = result;
  return result;
}

uint64_t sub_1AFE4BDA8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1AFE4B988(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1AFE4BDD4()
{
  return sub_1AFE4BAE0(*v0);
}

uint64_t sub_1AFE4BDDC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFE51194();
  *a1 = result;
  return result;
}

void sub_1AFE4BE04(unsigned char *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_1AFE4BE10(uint64_t a1)
{
  unint64_t v2 = sub_1AFE542D0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFE4BE4C(uint64_t a1)
{
  unint64_t v2 = sub_1AFE542D0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFE4BE88(void *a1)
{
  uint64_t v2 = v1;
  sub_1AFE56068(0, &qword_1E9AFB6A0, (uint64_t (*)(void))sub_1AFE542D0, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseItem.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v8 = (char *)v12 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFE542D0();
  sub_1AFFCBE78();
  sub_1AFE53774(v2, (uint64_t)v16, &qword_1E9AFB6A8, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseChartItem);
  sub_1AFE53774((uint64_t)v16, (uint64_t)v13, &qword_1E9AFB6A8, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseChartItem);
  char v17 = 0;
  sub_1AFE54420();
  uint64_t v9 = v12[1];
  sub_1AFFCBBE8();
  if (v9) {
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  uint64_t v10 = MEMORY[0x1E4FBB1A0];
  sub_1AFE53774(v2 + 72, (uint64_t)v15, (unint64_t *)&qword_1EB819C90, MEMORY[0x1E4FBB1A0]);
  sub_1AFE53774((uint64_t)v15, (uint64_t)v13, (unint64_t *)&qword_1EB819C90, v10);
  char v17 = 1;
  sub_1AFE54F90(0, (unint64_t *)&qword_1EB819C90, v10, MEMORY[0x1E4FBB718]);
  sub_1AFE54474((unint64_t *)&qword_1E9AFB6B8, (unint64_t *)&qword_1EB819C90, v10);
  sub_1AFFCBC58();
  v13[0] = 2;
  sub_1AFFCBB98();
  sub_1AFE53774(v2 + 104, (uint64_t)v14, &qword_1EB816930, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem);
  sub_1AFE53774((uint64_t)v14, (uint64_t)v13, &qword_1EB816930, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem);
  char v17 = 3;
  sub_1AFE544EC();
  sub_1AFFCBBE8();
  v13[0] = 4;
  sub_1AFFCBB98();
  v13[0] = 5;
  sub_1AFFCBB98();
  v13[0] = 6;
  sub_1AFFCBC08();
  sub_1AFE53774(v2 + 736, (uint64_t)&v18, &qword_1E9AFB6C8, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseItemType);
  sub_1AFE53774((uint64_t)&v18, (uint64_t)v13, &qword_1E9AFB6C8, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseItemType);
  char v17 = 7;
  sub_1AFE54540();
  sub_1AFFCBBE8();
  v13[0] = 8;
  sub_1AFFCBB98();
  v13[0] = 9;
  sub_1AFFCBB98();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void *sub_1AFE4C2E0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1AFE511E0(a1, __src);
  if (!v2) {
    return memcpy(a2, __src, 0x308uLL);
  }
  return result;
}

uint64_t sub_1AFE4C334(void *a1)
{
  memcpy(__dst, v1, sizeof(__dst));
  return sub_1AFE4BE88(a1);
}

uint64_t sub_1AFE4C388(void *__src, const void *a2)
{
  memcpy(v4, __src, sizeof(v4));
  memcpy(__dst, a2, sizeof(__dst));
  return sub_1AFE4FA24((uint64_t)v4) & 1;
}

unint64_t sub_1AFE4C3E0(char a1)
{
  unint64_t result = 0x756F487265746661;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000015;
      break;
    case 2:
    case 11:
    case 14:
    case 17:
    case 28:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0x5665676172657661;
      break;
    case 4:
      unint64_t result = 1635018082;
      break;
    case 5:
      unint64_t result = 0x79636E6572727563;
      break;
    case 6:
      unint64_t result = 0x5068676948796164;
      break;
    case 7:
      unint64_t result = 0x7250776F4C796164;
      break;
    case 8:
      unint64_t result = 0x506E65704F796164;
      break;
    case 9:
      unint64_t result = 0x55736C6961746564;
      break;
    case 10:
      unint64_t result = 0x646E656469766964;
      break;
    case 12:
    case 13:
    case 15:
      unint64_t result = 0x65676E6168637865;
      break;
    case 16:
      unint64_t result = 0xD000000000000016;
      break;
    case 18:
      unint64_t result = 0xD000000000000014;
      break;
    case 19:
      unint64_t result = 0x6563697270;
      break;
    case 20:
      unint64_t result = 0x6168436563697270;
      break;
    case 21:
      unint64_t result = 0xD000000000000012;
      break;
    case 22:
      unint64_t result = 0x756F536563697270;
      break;
    case 23:
      unint64_t result = 0x656D756C6F76;
      break;
    case 24:
      unint64_t result = 0x6867694872616579;
      break;
    case 25:
      unint64_t result = 0x50776F4C72616579;
      break;
    case 26:
      unint64_t result = 0xD000000000000011;
      break;
    case 27:
      unint64_t result = 0x73676E696E726165;
      break;
    case 29:
      unint64_t result = 0x65737341646E7566;
      break;
    case 30:
      unint64_t result = 0x65746143646E7566;
      break;
    case 31:
      unint64_t result = 0x75636F46646E7566;
      break;
    case 32:
      unint64_t result = 0x6863694E646E7566;
      break;
    case 33:
      unint64_t result = 0x69676552646E7566;
      break;
    case 34:
      unint64_t result = 0x706D6F43646E7566;
      break;
    case 35:
      unint64_t result = 0x726F74636573;
      break;
    case 36:
      unint64_t result = 0x7972747375646E69;
      break;
    case 37:
    case 39:
      unint64_t result = 0x656B72614D657270;
      break;
    case 38:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1AFE4C8D0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1AFDEE894(*a1, *a2);
}

uint64_t sub_1AFE4C8DC()
{
  return sub_1AFF9B780(0, *v0);
}

uint64_t sub_1AFE4C8E8(uint64_t a1)
{
  return sub_1AFD77F6C(a1, *v1);
}

uint64_t sub_1AFE4C8F0(uint64_t a1)
{
  return sub_1AFF9B780(a1, *v1);
}

uint64_t sub_1AFE4C8F8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFE519E4();
  *a1 = result;
  return result;
}

void sub_1AFE4C928(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE800000000000000;
      uint64_t v3 = 0x59434E4552525543;
      goto LABEL_3;
    case 2:
      *a1 = 0x435F4F5450595243;
      a1[1] = 0xEF59434E45525255;
      break;
    case 3:
      *a1 = 0x595449555145;
      a1[1] = 0xE600000000000000;
      break;
    case 4:
      *a1 = 4609093;
      a1[1] = 0xE300000000000000;
      break;
    case 5:
      *a1 = 0x53455255545546;
      a1[1] = 0xE700000000000000;
      break;
    case 6:
      *a1 = 0x5845444E49;
      a1[1] = 0xE500000000000000;
      break;
    case 7:
      *a1 = 0x465F4C415554554DLL;
      a1[1] = 0xEB00000000444E55;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

unint64_t sub_1AFE4CA44@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1AFE51A30(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1AFE4CA70()
{
  return sub_1AFFCB128();
}

uint64_t sub_1AFE4CAC0(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_1AFE4CAD8(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_1AFE4C3E0);
}

uint64_t sub_1AFE4CAD8(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v6 = *a2;
  uint64_t v7 = a5(*a1);
  uint64_t v9 = v8;
  if (v7 == a5(v6) && v9 == v10) {
    char v12 = 1;
  }
  else {
    char v12 = sub_1AFFCBCE8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12 & 1;
}

uint64_t sub_1AFE4CB70(uint64_t a1, uint64_t a2)
{
  return sub_1AFE4CB88(a1, a2, (void (*)(uint64_t))sub_1AFE4C3E0);
}

uint64_t sub_1AFE4CB88(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v5 = *v3;
  sub_1AFFCBDF8();
  a3(v5);
  sub_1AFFCAF68();
  swift_bridgeObjectRelease();
  return sub_1AFFCBE38();
}

uint64_t sub_1AFE4CBF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AFE4CC0C(a1, a2, a3, (void (*)(void))sub_1AFE4C3E0);
}

uint64_t sub_1AFE4CC0C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  a4(*v4);
  sub_1AFFCAF68();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFE4CC64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AFE4CC7C(a1, a2, a3, (void (*)(uint64_t))sub_1AFE4C3E0);
}

uint64_t sub_1AFE4CC7C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v6 = *v4;
  sub_1AFFCBDF8();
  a4(v6);
  sub_1AFFCAF68();
  swift_bridgeObjectRelease();
  return sub_1AFFCBE38();
}

uint64_t sub_1AFE4CCE4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFE51B04();
  *a1 = result;
  return result;
}

unint64_t sub_1AFE4CD14@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1AFE4C3E0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1AFE4CD40()
{
  return sub_1AFE4C3E0(*v0);
}

uint64_t sub_1AFE4CD48@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFE51B04();
  *a1 = result;
  return result;
}

void sub_1AFE4CD70(unsigned char *a1@<X8>)
{
  *a1 = 40;
}

uint64_t sub_1AFE4CD7C(uint64_t a1)
{
  unint64_t v2 = sub_1AFE53528();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFE4CDB8(uint64_t a1)
{
  unint64_t v2 = sub_1AFE53528();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFE4CDF4()
{
  uint64_t v1 = v0;
  sub_1AFE56068(0, &qword_1EB818288, (uint64_t (*)(void))sub_1AFE53528, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v2 = sub_1AFFCBB08();
  if (!v0)
  {
    uint64_t v1 = v2;
    if ((v3 & 1) == 0 && v2 < 0)
    {
      sub_1AFFCB7F8();
      sub_1AFFCAFA8();
      sub_1AFFCBC88();
      sub_1AFFCAFA8();
      swift_bridgeObjectRelease();
      sub_1AFFCAFA8();
      uint64_t v1 = 0;
      sub_1AFE536CC();
      swift_allocError();
      strcpy(v4, "averageVolume");
      *((_WORD *)v4 + 7) = -4864;
      *((void *)v4 + 2) = 0;
      *((void *)v4 + 3) = 0xE000000000000000;
      swift_willThrow();
    }
  }
  return v1;
}

uint64_t sub_1AFE4CF84()
{
  uint64_t v1 = v0;
  sub_1AFE56068(0, &qword_1EB818288, (uint64_t (*)(void))sub_1AFE53528, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v2 = sub_1AFFCBB08();
  if (!v0)
  {
    uint64_t v1 = v2;
    if ((v3 & 1) == 0 && v2 < 0)
    {
      sub_1AFFCB7F8();
      sub_1AFFCAFA8();
      sub_1AFFCBC88();
      sub_1AFFCAFA8();
      swift_bridgeObjectRelease();
      sub_1AFFCAFA8();
      uint64_t v1 = 0;
      sub_1AFE536CC();
      swift_allocError();
      *unint64_t v4 = 0x656D756C6F76;
      v4[1] = 0xE600000000000000;
      v4[2] = 0;
      v4[3] = 0xE000000000000000;
      swift_willThrow();
    }
  }
  return v1;
}

uint64_t sub_1AFE4D104(void *a1)
{
  uint64_t v3 = v1;
  sub_1AFE56068(0, &qword_1E9AFB608, (uint64_t (*)(void))sub_1AFE53528, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFE53528();
  sub_1AFFCBE78();
  v11[0] = 0;
  sub_1AFFCBBB8();
  if (!v2)
  {
    v11[0] = 1;
    sub_1AFFCBBB8();
    sub_1AFE53774(v3 + 25, (uint64_t)&v18, &qword_1EB816FB0, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteSource);
    sub_1AFE53774((uint64_t)&v18, (uint64_t)v11, &qword_1EB816FB0, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteSource);
    char v14 = 2;
    sub_1AFE53720();
    sub_1AFFCBBE8();
    v11[0] = 37;
    sub_1AFFCBBB8();
    v11[0] = 38;
    sub_1AFFCBBB8();
    sub_1AFE53774(v3 + 57, (uint64_t)&v17, &qword_1EB816FB0, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteSource);
    sub_1AFE53774((uint64_t)&v17, (uint64_t)v11, &qword_1EB816FB0, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteSource);
    char v14 = 39;
    sub_1AFFCBBE8();
    v11[0] = 3;
    sub_1AFFCBBF8();
    v11[0] = 4;
    sub_1AFFCBBB8();
    v11[0] = 5;
    sub_1AFFCBB98();
    v11[0] = 6;
    sub_1AFFCBBB8();
    v11[0] = 7;
    sub_1AFFCBBB8();
    v11[0] = 8;
    sub_1AFFCBBB8();
    v11[0] = 9;
    sub_1AFFCBB98();
    v11[0] = 10;
    sub_1AFFCBBB8();
    v11[0] = 11;
    sub_1AFFCBBB8();
    v11[0] = 12;
    sub_1AFFCBB98();
    v11[0] = 13;
    sub_1AFFCBB98();
    v11[0] = 14;
    sub_1AFFCBB98();
    sub_1AFE53774(v3 + 256, (uint64_t)&v16, &qword_1EB816FF8, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem.SDSQuoteResponseQuoteItemExchangeStatus);
    sub_1AFE53774((uint64_t)&v16, (uint64_t)v11, &qword_1EB816FF8, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem.SDSQuoteResponseQuoteItemExchangeStatus);
    char v14 = 15;
    sub_1AFE537F4();
    sub_1AFFCBBE8();
    v11[0] = 16;
    sub_1AFFCBBB8();
    v11[0] = 17;
    sub_1AFFCBB98();
    v11[0] = 18;
    sub_1AFFCBBB8();
    v11[0] = 19;
    sub_1AFFCBBB8();
    v11[0] = 20;
    sub_1AFFCBBB8();
    v11[0] = 21;
    sub_1AFFCBBB8();
    sub_1AFE53774(v3 + 353, (uint64_t)&v15, &qword_1EB816FB0, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteSource);
    sub_1AFE53774((uint64_t)&v15, (uint64_t)v11, &qword_1EB816FB0, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteSource);
    char v14 = 22;
    sub_1AFFCBBE8();
    v11[0] = 23;
    sub_1AFFCBBF8();
    v11[0] = 24;
    sub_1AFFCBBB8();
    v11[0] = 25;
    sub_1AFFCBBB8();
    v11[0] = 26;
    sub_1AFFCBB98();
    v11[0] = 27;
    sub_1AFFCBB98();
    sub_1AFE53774(v3 + 440, (uint64_t)v13, &qword_1EB817038, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem.TimeZoneOffset);
    sub_1AFE53774((uint64_t)v13, (uint64_t)v11, &qword_1EB817038, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem.TimeZoneOffset);
    char v14 = 28;
    sub_1AFE53848();
    sub_1AFFCBBE8();
    v11[0] = 29;
    sub_1AFFCBB98();
    v11[0] = 30;
    sub_1AFFCBB98();
    v11[0] = 31;
    sub_1AFFCBB98();
    v11[0] = 32;
    sub_1AFFCBB98();
    v11[0] = 33;
    sub_1AFFCBB98();
    sub_1AFE53774(v3 + 536, (uint64_t)v12, &qword_1E9AFB628, (uint64_t)&type metadata for SDSQuoteResponse.SDSFundComposition);
    sub_1AFE53774((uint64_t)v12, (uint64_t)v11, &qword_1E9AFB628, (uint64_t)&type metadata for SDSQuoteResponse.SDSFundComposition);
    char v14 = 34;
    sub_1AFE5389C();
    sub_1AFFCBBE8();
    v11[0] = 35;
    sub_1AFFCBB98();
    v11[0] = 36;
    sub_1AFFCBB98();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1AFE4DA74(unsigned __int8 *a1, char *a2)
{
  return sub_1AFDEF470(*a1, *a2);
}

uint64_t sub_1AFE4DA80()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFE4DB5C()
{
  sub_1AFFCAF68();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFE4DC20()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFE4DCF8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFE533F0();
  *a1 = result;
  return result;
}

void sub_1AFE4DD30(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE400000000000000;
  uint64_t v3 = 1313165391;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE600000000000000;
      uint64_t v3 = 0x4445534F4C43;
      goto LABEL_3;
    case 2:
      *a1 = 0x4B52414D5F455250;
      a1[1] = 0xEA00000000005445;
      break;
    case 3:
      *a1 = 0x4F485F5245544641;
      a1[1] = 0xEB00000000535255;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1AFE4DDCC()
{
  return sub_1AFFCB178();
}

uint64_t sub_1AFE4DE2C()
{
  return sub_1AFFCB128();
}

uint64_t sub_1AFE4DE7C()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFE4DECC()
{
  return sub_1AFFCAF68();
}

uint64_t sub_1AFE4DEE0()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFE4DF2C@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1AFFCBA78();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1AFE4DF80(void *a1@<X8>)
{
  *a1 = 0x74657366666FLL;
  a1[1] = 0xE600000000000000;
}

uint64_t sub_1AFE4DF98()
{
  return 0x74657366666FLL;
}

uint64_t sub_1AFE4DFAC@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1AFFCBA78();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1AFE4E004(uint64_t a1)
{
  unint64_t v2 = sub_1AFE50724();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFE4E040(uint64_t a1)
{
  unint64_t v2 = sub_1AFE50724();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFE4E07C(void *a1, uint64_t a2, char a3)
{
  sub_1AFE56068(0, &qword_1E9AFB5F0, (uint64_t (*)(void))sub_1AFE50724, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem.TimeZoneOffset.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v13 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFE50724();
  sub_1AFFCBE78();
  uint64_t v13 = a2;
  char v14 = a3 & 1;
  uint64_t v11 = MEMORY[0x1E4FBB550];
  sub_1AFE54F90(0, &qword_1EB818050, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB718]);
  sub_1AFE54474(&qword_1E9AFB5F8, &qword_1EB818050, v11);
  sub_1AFFCBC58();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

unint64_t sub_1AFE4E250(char a1)
{
  unint64_t result = 0x5F434952454E4547;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x525F51414453414ELL;
      break;
    case 2:
      unint64_t result = 0x4145525F4553594ELL;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1AFE4E34C(void *a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t (*a5)(void), uint64_t a6, void (*a7)(void))
{
  v16[1] = a3;
  sub_1AFE56068(0, a4, a5, a6, MEMORY[0x1E4FBBDE0]);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)v16 - v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a7();
  sub_1AFFCBE78();
  char v18 = 0;
  uint64_t v14 = v16[2];
  sub_1AFFCBC08();
  if (!v14)
  {
    char v17 = 1;
    sub_1AFFCBC28();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_1AFE4E4E4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v12 = a3;
  sub_1AFE56068(0, &qword_1E9AFB678, (uint64_t (*)(void))sub_1AFE53EDC, (uint64_t)&type metadata for SDSQuoteResponse.SDSFundComposition.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v12 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFE53EDC();
  sub_1AFFCBE78();
  uint64_t v14 = a2;
  char v13 = 0;
  sub_1AFE54F90(0, &qword_1E9AFB648, (uint64_t)&type metadata for SDSQuoteResponse.SDSFundComposition.Holding, MEMORY[0x1E4FBB320]);
  sub_1AFE54100();
  sub_1AFFCBC58();
  if (!v3)
  {
    uint64_t v14 = v12;
    char v13 = 1;
    sub_1AFE54F90(0, &qword_1E9AFB660, (uint64_t)&type metadata for SDSQuoteResponse.SDSFundComposition.Sector, MEMORY[0x1E4FBB320]);
    sub_1AFE541E8();
    sub_1AFFCBC58();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1AFE4E704@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v15 = a2;
  sub_1AFE56068(0, &qword_1EB818290, (uint64_t (*)(void))sub_1AFE50724, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem.TimeZoneOffset.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v14 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFE50724();
  sub_1AFFCBE68();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v15;
  uint64_t v10 = sub_1AFFCBAD8();
  char v12 = v11;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *(void *)uint64_t v9 = v10;
  *(unsigned char *)(v9 + 8) = v12 & 1;
  return result;
}

uint64_t sub_1AFE4E8BC(void *a1)
{
  return sub_1AFE4E07C(a1, *(void *)v1, *(unsigned char *)(v1 + 8));
}

void *sub_1AFE4E8DC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = (void *)sub_1AFE51B58(a1, __src);
  if (!v2) {
    return memcpy(a2, __src, 0x248uLL);
  }
  return result;
}

uint64_t sub_1AFE4E930(void *a1)
{
  memcpy(__dst, v1, sizeof(__dst));
  return sub_1AFE4D104(a1);
}

uint64_t sub_1AFE4E984(void *__src, const void *a2)
{
  memcpy(v4, __src, sizeof(v4));
  memcpy(__dst, a2, sizeof(__dst));
  return sub_1AFE4F098((uint64_t)v4, (uint64_t)__dst) & 1;
}

uint64_t sub_1AFE4E9DC(unsigned __int8 *a1, char *a2)
{
  return sub_1AFDEF600(*a1, *a2);
}

uint64_t sub_1AFE4E9E8()
{
  return sub_1AFF9A990();
}

uint64_t sub_1AFE4E9F0()
{
  return sub_1AFD780A8();
}

uint64_t sub_1AFE4E9F8()
{
  return sub_1AFF9B640();
}

uint64_t sub_1AFE4EA00@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFE53438();
  *a1 = result;
  return result;
}

unint64_t sub_1AFE4EA38@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1AFE4E250(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1AFE4EA64()
{
  return sub_1AFFCB178();
}

uint64_t sub_1AFE4EAC4()
{
  return sub_1AFFCB128();
}

uint64_t sub_1AFE4EB14(uint64_t a1)
{
  unint64_t v2 = sub_1AFE55EC4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFE4EB50(uint64_t a1)
{
  unint64_t v2 = sub_1AFE55EC4();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1AFE4EB8C(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_1AFE4EBDC(void *a1)
{
  return sub_1AFE4E34C(a1, *v1, v1[1], &qword_1E9AFB7A0, (uint64_t (*)(void))sub_1AFE55EC4, (uint64_t)&type metadata for SDSQuoteResponse.SDSFundComposition.Holding.CodingKeys, (void (*)(void))sub_1AFE55EC4);
}

uint64_t sub_1AFE4EC34(uint64_t a1)
{
  unint64_t v2 = sub_1AFE55F18();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFE4EC70(uint64_t a1)
{
  unint64_t v2 = sub_1AFE55F18();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1AFE4ECAC(void *a1@<X0>, uint64_t a2@<X8>)
{
}

void sub_1AFE4ECFC(void *a1@<X0>, unint64_t *a2@<X3>, uint64_t (*a3)(void)@<X4>, uint64_t a4@<X5>, void (*a5)(void)@<X6>, uint64_t a6@<X8>)
{
  double v10 = sub_1AFE538F0(a1, a2, a3, a4, a5);
  if (!v6)
  {
    *(void *)a6 = v8;
    *(void *)(a6 + 8) = v9;
    *(double *)(a6 + 16) = v10;
  }
}

uint64_t sub_1AFE4ED3C(void *a1)
{
  return sub_1AFE4E34C(a1, *v1, v1[1], &qword_1E9AFB7A8, (uint64_t (*)(void))sub_1AFE55F18, (uint64_t)&type metadata for SDSQuoteResponse.SDSFundComposition.Sector.CodingKeys, (void (*)(void))sub_1AFE55F18);
}

uint64_t sub_1AFE4ED94()
{
  if (*v0) {
    return 0x6F74636553706F74;
  }
  else {
    return 0x69646C6F48706F74;
  }
}

uint64_t sub_1AFE4EDDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1AFE53B08(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AFE4EE04(uint64_t a1)
{
  unint64_t v2 = sub_1AFE53EDC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFE4EE40(uint64_t a1)
{
  unint64_t v2 = sub_1AFE53EDC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFE4EE7C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1AFE53C20(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_1AFE4EEA8(void *a1)
{
  return sub_1AFE4E4E4(a1, *v1, v1[1]);
}

uint64_t sub_1AFE4EEC4(void *a1, void *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a2[1];
  if ((sub_1AFF23880(*a1, *a2) & 1) == 0) {
    return 0;
  }

  return sub_1AFF23880(v2, v3);
}

double sub_1AFE4EF20@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1AFE50364(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    double result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_1AFE4EF64(void *a1)
{
  return sub_1AFE49EE8(a1);
}

BOOL sub_1AFE4EFA0(_OWORD *a1, long long *a2)
{
  long long v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  long long v3 = *a2;
  long long v4 = a2[1];
  uint64_t v7[2] = a1[2];
  v8[0] = v3;
  long long v5 = a2[2];
  v8[1] = v4;
  void v8[2] = v5;
  return sub_1AFE501BC((uint64_t *)v7, (uint64_t *)v8);
}

unint64_t sub_1AFE4EFEC()
{
  unint64_t result = qword_1E9AFB5E0;
  if (!qword_1E9AFB5E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB5E0);
  }
  return result;
}

unint64_t sub_1AFE4F044()
{
  unint64_t result = qword_1E9AFB5E8;
  if (!qword_1E9AFB5E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB5E8);
  }
  return result;
}

uint64_t sub_1AFE4F098(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 8);
  if (*(unsigned char *)(a1 + 8))
  {
    if (!*(unsigned char *)(a2 + 8)) {
      goto LABEL_236;
    }
  }
  else
  {
    if (*(double *)a1 != *(double *)a2) {
      char v4 = 1;
    }
    if (v4) {
      goto LABEL_236;
    }
  }
  char v5 = *(unsigned char *)(a2 + 24);
  if (*(unsigned char *)(a1 + 24))
  {
    if (!*(unsigned char *)(a2 + 24)) {
      goto LABEL_236;
    }
  }
  else
  {
    if (*(double *)(a1 + 16) != *(double *)(a2 + 16)) {
      char v5 = 1;
    }
    if (v5) {
      goto LABEL_236;
    }
  }
  int v6 = *(unsigned __int8 *)(a1 + 25);
  int v7 = *(unsigned __int8 *)(a2 + 25);
  if (v6 == 6)
  {
    if (v7 != 6) {
      goto LABEL_236;
    }
  }
  else if (v7 == 6 || (sub_1AFDEF600(v6, v7) & 1) == 0)
  {
    goto LABEL_236;
  }
  char v8 = *(unsigned char *)(a2 + 40);
  if (*(unsigned char *)(a1 + 40))
  {
    if (!*(unsigned char *)(a2 + 40)) {
      goto LABEL_236;
    }
  }
  else
  {
    if (*(double *)(a1 + 32) != *(double *)(a2 + 32)) {
      char v8 = 1;
    }
    if (v8) {
      goto LABEL_236;
    }
  }
  char v9 = *(unsigned char *)(a2 + 56);
  if (*(unsigned char *)(a1 + 56))
  {
    if (!*(unsigned char *)(a2 + 56)) {
      goto LABEL_236;
    }
  }
  else
  {
    if (*(double *)(a1 + 48) != *(double *)(a2 + 48)) {
      char v9 = 1;
    }
    if (v9) {
      goto LABEL_236;
    }
  }
  int v10 = *(unsigned __int8 *)(a1 + 57);
  int v11 = *(unsigned __int8 *)(a2 + 57);
  if (v10 == 6)
  {
    if (v11 != 6) {
      goto LABEL_236;
    }
  }
  else if (v11 == 6 || (sub_1AFDEF600(v10, v11) & 1) == 0)
  {
    goto LABEL_236;
  }
  char v12 = *(unsigned char *)(a2 + 72);
  if (*(unsigned char *)(a1 + 72))
  {
    if (!*(unsigned char *)(a2 + 72)) {
      goto LABEL_236;
    }
  }
  else
  {
    if (*(void *)(a1 + 64) != *(void *)(a2 + 64)) {
      char v12 = 1;
    }
    if (v12) {
      goto LABEL_236;
    }
  }
  char v13 = *(unsigned char *)(a2 + 88);
  if (*(unsigned char *)(a1 + 88))
  {
    if (!*(unsigned char *)(a2 + 88)) {
      goto LABEL_236;
    }
  }
  else
  {
    if (*(double *)(a1 + 80) != *(double *)(a2 + 80)) {
      char v13 = 1;
    }
    if (v13) {
      goto LABEL_236;
    }
  }
  uint64_t v14 = *(void *)(a1 + 104);
  uint64_t v15 = *(void *)(a2 + 104);
  if (v14)
  {
    if (!v15) {
      goto LABEL_236;
    }
    if (*(void *)(a1 + 96) != *(void *)(a2 + 96) || v14 != v15)
    {
      char v16 = sub_1AFFCBCE8();
      char v17 = 0;
      if ((v16 & 1) == 0) {
        return v17 & 1;
      }
    }
  }
  else if (v15)
  {
    goto LABEL_236;
  }
  char v18 = *(unsigned char *)(a2 + 120);
  if (*(unsigned char *)(a1 + 120))
  {
    if (!*(unsigned char *)(a2 + 120)) {
      goto LABEL_236;
    }
  }
  else
  {
    if (*(double *)(a1 + 112) != *(double *)(a2 + 112)) {
      char v18 = 1;
    }
    if (v18) {
      goto LABEL_236;
    }
  }
  char v19 = *(unsigned char *)(a2 + 136);
  if (*(unsigned char *)(a1 + 136))
  {
    if (!*(unsigned char *)(a2 + 136)) {
      goto LABEL_236;
    }
  }
  else
  {
    if (*(double *)(a1 + 128) != *(double *)(a2 + 128)) {
      char v19 = 1;
    }
    if (v19) {
      goto LABEL_236;
    }
  }
  char v20 = *(unsigned char *)(a2 + 152);
  if (*(unsigned char *)(a1 + 152))
  {
    if (!*(unsigned char *)(a2 + 152)) {
      goto LABEL_236;
    }
  }
  else
  {
    if (*(double *)(a1 + 144) != *(double *)(a2 + 144)) {
      char v20 = 1;
    }
    if (v20) {
      goto LABEL_236;
    }
  }
  uint64_t v21 = *(void *)(a1 + 168);
  uint64_t v22 = *(void *)(a2 + 168);
  if (v21)
  {
    if (!v22) {
      goto LABEL_236;
    }
    if (*(void *)(a1 + 160) != *(void *)(a2 + 160) || v21 != v22)
    {
      char v23 = sub_1AFFCBCE8();
      char v17 = 0;
      if ((v23 & 1) == 0) {
        return v17 & 1;
      }
    }
  }
  else if (v22)
  {
    goto LABEL_236;
  }
  char v24 = *(unsigned char *)(a2 + 184);
  if (*(unsigned char *)(a1 + 184))
  {
    if (!*(unsigned char *)(a2 + 184)) {
      goto LABEL_236;
    }
  }
  else
  {
    if (*(double *)(a1 + 176) != *(double *)(a2 + 176)) {
      char v24 = 1;
    }
    if (v24) {
      goto LABEL_236;
    }
  }
  char v25 = *(unsigned char *)(a2 + 200);
  if (*(unsigned char *)(a1 + 200))
  {
    if (!*(unsigned char *)(a2 + 200)) {
      goto LABEL_236;
    }
  }
  else
  {
    if (*(double *)(a1 + 192) != *(double *)(a2 + 192)) {
      char v25 = 1;
    }
    if (v25) {
      goto LABEL_236;
    }
  }
  uint64_t v26 = *(void *)(a1 + 216);
  uint64_t v27 = *(void *)(a2 + 216);
  if (v26)
  {
    if (!v27) {
      goto LABEL_236;
    }
    if (*(void *)(a1 + 208) != *(void *)(a2 + 208) || v26 != v27)
    {
      char v28 = sub_1AFFCBCE8();
      char v17 = 0;
      if ((v28 & 1) == 0) {
        return v17 & 1;
      }
    }
  }
  else if (v27)
  {
    goto LABEL_236;
  }
  uint64_t v29 = *(void *)(a1 + 232);
  uint64_t v30 = *(void *)(a2 + 232);
  if (v29)
  {
    if (!v30) {
      goto LABEL_236;
    }
    if (*(void *)(a1 + 224) != *(void *)(a2 + 224) || v29 != v30)
    {
      char v31 = sub_1AFFCBCE8();
      char v17 = 0;
      if ((v31 & 1) == 0) {
        return v17 & 1;
      }
    }
  }
  else if (v30)
  {
    goto LABEL_236;
  }
  uint64_t v32 = *(void *)(a1 + 248);
  uint64_t v33 = *(void *)(a2 + 248);
  if (v32)
  {
    if (!v33) {
      goto LABEL_236;
    }
    if (*(void *)(a1 + 240) != *(void *)(a2 + 240) || v32 != v33)
    {
      char v34 = sub_1AFFCBCE8();
      char v17 = 0;
      if ((v34 & 1) == 0) {
        return v17 & 1;
      }
    }
  }
  else if (v33)
  {
    goto LABEL_236;
  }
  int v35 = *(unsigned __int8 *)(a1 + 256);
  int v36 = *(unsigned __int8 *)(a2 + 256);
  if (v35 == 4)
  {
    if (v36 != 4) {
      goto LABEL_236;
    }
  }
  else if (v36 == 4 || (sub_1AFDEF470(v35, v36) & 1) == 0)
  {
    goto LABEL_236;
  }
  char v37 = *(unsigned char *)(a2 + 272);
  if (*(unsigned char *)(a1 + 272))
  {
    if (!*(unsigned char *)(a2 + 272)) {
      goto LABEL_236;
    }
  }
  else
  {
    if (*(double *)(a1 + 264) != *(double *)(a2 + 264)) {
      char v37 = 1;
    }
    if (v37) {
      goto LABEL_236;
    }
  }
  uint64_t v38 = *(void *)(a1 + 288);
  uint64_t v39 = *(void *)(a2 + 288);
  if (v38)
  {
    if (!v39) {
      goto LABEL_236;
    }
    if (*(void *)(a1 + 280) != *(void *)(a2 + 280) || v38 != v39)
    {
      char v40 = sub_1AFFCBCE8();
      char v17 = 0;
      if ((v40 & 1) == 0) {
        return v17 & 1;
      }
    }
  }
  else if (v39)
  {
    goto LABEL_236;
  }
  char v41 = *(unsigned char *)(a2 + 304);
  if (*(unsigned char *)(a1 + 304))
  {
    if (!*(unsigned char *)(a2 + 304)) {
      goto LABEL_236;
    }
  }
  else
  {
    if (*(double *)(a1 + 296) != *(double *)(a2 + 296)) {
      char v41 = 1;
    }
    if (v41) {
      goto LABEL_236;
    }
  }
  char v42 = *(unsigned char *)(a2 + 320);
  if (*(unsigned char *)(a1 + 320))
  {
    if (!*(unsigned char *)(a2 + 320)) {
      goto LABEL_236;
    }
  }
  else
  {
    if (*(double *)(a1 + 312) != *(double *)(a2 + 312)) {
      char v42 = 1;
    }
    if (v42) {
      goto LABEL_236;
    }
  }
  char v43 = *(unsigned char *)(a2 + 336);
  if (*(unsigned char *)(a1 + 336))
  {
    if (!*(unsigned char *)(a2 + 336)) {
      goto LABEL_236;
    }
  }
  else
  {
    if (*(double *)(a1 + 328) != *(double *)(a2 + 328)) {
      char v43 = 1;
    }
    if (v43) {
      goto LABEL_236;
    }
  }
  char v44 = *(unsigned char *)(a2 + 352);
  if (*(unsigned char *)(a1 + 352))
  {
    if (!*(unsigned char *)(a2 + 352)) {
      goto LABEL_236;
    }
  }
  else
  {
    if (*(double *)(a1 + 344) != *(double *)(a2 + 344)) {
      char v44 = 1;
    }
    if (v44) {
      goto LABEL_236;
    }
  }
  int v45 = *(unsigned __int8 *)(a1 + 353);
  int v46 = *(unsigned __int8 *)(a2 + 353);
  if (v45 == 6)
  {
    if (v46 != 6) {
      goto LABEL_236;
    }
  }
  else if (v46 == 6 || (sub_1AFDEF600(v45, v46) & 1) == 0)
  {
    goto LABEL_236;
  }
  char v47 = *(unsigned char *)(a2 + 368);
  if (*(unsigned char *)(a1 + 368))
  {
    if (!*(unsigned char *)(a2 + 368)) {
      goto LABEL_236;
    }
  }
  else
  {
    if (*(void *)(a1 + 360) != *(void *)(a2 + 360)) {
      char v47 = 1;
    }
    if (v47) {
      goto LABEL_236;
    }
  }
  char v48 = *(unsigned char *)(a2 + 384);
  if (*(unsigned char *)(a1 + 384))
  {
    if (!*(unsigned char *)(a2 + 384)) {
      goto LABEL_236;
    }
  }
  else
  {
    if (*(double *)(a1 + 376) != *(double *)(a2 + 376)) {
      char v48 = 1;
    }
    if (v48) {
      goto LABEL_236;
    }
  }
  char v49 = *(unsigned char *)(a2 + 400);
  if (*(unsigned char *)(a1 + 400))
  {
    if (!*(unsigned char *)(a2 + 400)) {
      goto LABEL_236;
    }
  }
  else
  {
    if (*(double *)(a1 + 392) != *(double *)(a2 + 392)) {
      char v49 = 1;
    }
    if (v49) {
      goto LABEL_236;
    }
  }
  uint64_t v50 = *(void *)(a1 + 416);
  uint64_t v51 = *(void *)(a2 + 416);
  if (v50)
  {
    if (!v51) {
      goto LABEL_236;
    }
    if (*(void *)(a1 + 408) != *(void *)(a2 + 408) || v50 != v51)
    {
      char v52 = sub_1AFFCBCE8();
      char v17 = 0;
      if ((v52 & 1) == 0) {
        return v17 & 1;
      }
    }
  }
  else if (v51)
  {
    goto LABEL_236;
  }
  uint64_t v53 = *(void *)(a1 + 432);
  uint64_t v54 = *(void *)(a2 + 432);
  if (v53)
  {
    if (!v54) {
      goto LABEL_236;
    }
    if (*(void *)(a1 + 424) != *(void *)(a2 + 424) || v53 != v54)
    {
      char v55 = sub_1AFFCBCE8();
      char v17 = 0;
      if ((v55 & 1) == 0) {
        return v17 & 1;
      }
    }
  }
  else if (v54)
  {
    goto LABEL_236;
  }
  sub_1AFE53774(a1 + 440, (uint64_t)v83, &qword_1EB817038, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem.TimeZoneOffset);
  sub_1AFE53774(a2 + 440, (uint64_t)v82, &qword_1EB817038, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem.TimeZoneOffset);
  sub_1AFE53774((uint64_t)v83, (uint64_t)v84, &qword_1EB817038, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem.TimeZoneOffset);
  if (v84[9])
  {
    sub_1AFE53774((uint64_t)v82, (uint64_t)v85, &qword_1EB817038, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem.TimeZoneOffset);
    if (v86 != 1) {
      goto LABEL_236;
    }
  }
  else
  {
    sub_1AFE53774((uint64_t)v82, (uint64_t)v85, &qword_1EB817038, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem.TimeZoneOffset);
    if (v86) {
      goto LABEL_236;
    }
  }
  uint64_t v56 = *(void *)(a1 + 464);
  uint64_t v57 = *(void *)(a2 + 464);
  if (v56)
  {
    if (!v57) {
      goto LABEL_236;
    }
    if (*(void *)(a1 + 456) != *(void *)(a2 + 456) || v56 != v57)
    {
      char v58 = sub_1AFFCBCE8();
      char v17 = 0;
      if ((v58 & 1) == 0) {
        return v17 & 1;
      }
    }
  }
  else if (v57)
  {
    goto LABEL_236;
  }
  uint64_t v59 = *(void *)(a1 + 480);
  uint64_t v60 = *(void *)(a2 + 480);
  if (v59)
  {
    if (!v60) {
      goto LABEL_236;
    }
    if (*(void *)(a1 + 472) != *(void *)(a2 + 472) || v59 != v60)
    {
      char v61 = sub_1AFFCBCE8();
      char v17 = 0;
      if ((v61 & 1) == 0) {
        return v17 & 1;
      }
    }
  }
  else if (v60)
  {
    goto LABEL_236;
  }
  uint64_t v62 = *(void *)(a1 + 496);
  uint64_t v63 = *(void *)(a2 + 496);
  if (v62)
  {
    if (!v63) {
      goto LABEL_236;
    }
    if (*(void *)(a1 + 488) != *(void *)(a2 + 488) || v62 != v63)
    {
      char v64 = sub_1AFFCBCE8();
      char v17 = 0;
      if ((v64 & 1) == 0) {
        return v17 & 1;
      }
    }
  }
  else if (v63)
  {
    goto LABEL_236;
  }
  uint64_t v65 = *(void *)(a1 + 512);
  uint64_t v66 = *(void *)(a2 + 512);
  if (v65)
  {
    if (!v66) {
      goto LABEL_236;
    }
    if (*(void *)(a1 + 504) != *(void *)(a2 + 504) || v65 != v66)
    {
      char v67 = sub_1AFFCBCE8();
      char v17 = 0;
      if ((v67 & 1) == 0) {
        return v17 & 1;
      }
    }
  }
  else if (v66)
  {
    goto LABEL_236;
  }
  uint64_t v68 = *(void *)(a1 + 528);
  uint64_t v69 = *(void *)(a2 + 528);
  if (v68)
  {
    if (!v69) {
      goto LABEL_236;
    }
    if (*(void *)(a1 + 520) != *(void *)(a2 + 520) || v68 != v69)
    {
      char v70 = sub_1AFFCBCE8();
      char v17 = 0;
      if ((v70 & 1) == 0) {
        return v17 & 1;
      }
    }
  }
  else if (v69)
  {
    goto LABEL_236;
  }
  uint64_t v71 = *(void *)(a1 + 536);
  uint64_t v72 = *(void *)(a2 + 536);
  if (v71)
  {
    if (!v72) {
      goto LABEL_236;
    }
    uint64_t v73 = *(void *)(a1 + 544);
    uint64_t v74 = *(void *)(a2 + 544);
    if ((sub_1AFF23880(*(void *)(a1 + 536), *(void *)(a2 + 536)) & 1) == 0)
    {
      sub_1AFD4855C(v71);
      sub_1AFD4855C(v71);
      sub_1AFD4855C(v72);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1AFD48990(v71);
      char v17 = 0;
      return v17 & 1;
    }
    char v75 = sub_1AFF23880(v73, v74);
    sub_1AFD4855C(v71);
    sub_1AFD4855C(v71);
    sub_1AFD4855C(v72);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1AFD48990(v71);
    if ((v75 & 1) == 0) {
      goto LABEL_236;
    }
  }
  else if (v72)
  {
    goto LABEL_236;
  }
  uint64_t v77 = *(void *)(a1 + 560);
  uint64_t v78 = *(void *)(a2 + 560);
  if (v77)
  {
    if (v78)
    {
      if (*(void *)(a1 + 552) != *(void *)(a2 + 552) || v77 != v78)
      {
        char v79 = sub_1AFFCBCE8();
        char v17 = 0;
        if ((v79 & 1) == 0) {
          return v17 & 1;
        }
      }
      goto LABEL_246;
    }
LABEL_236:
    char v17 = 0;
    return v17 & 1;
  }
  if (v78) {
    goto LABEL_236;
  }
LABEL_246:
  uint64_t v80 = *(void *)(a1 + 576);
  uint64_t v81 = *(void *)(a2 + 576);
  char v17 = (v80 | v81) == 0;
  if (v80 && v81)
  {
    if (*(void *)(a1 + 568) == *(void *)(a2 + 568) && v80 == v81) {
      char v17 = 1;
    }
    else {
      char v17 = sub_1AFFCBCE8();
    }
  }
  return v17 & 1;
}

uint64_t sub_1AFE4FA24(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  uint64_t v6 = *(void *)v1;
  uint64_t v5 = *(void *)(v1 + 8);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v8 = *(void *)(v1 + 24);
  uint64_t v10 = *(void *)(v1 + 32);
  uint64_t v9 = *(void *)(v1 + 40);
  uint64_t v11 = *(void *)(v1 + 48);
  uint64_t v12 = *(void *)(v1 + 56);
  char v13 = *(unsigned char *)(v1 + 64);
  uint64_t v14 = *(void *)v3;
  uint64_t v15 = *(void *)(v3 + 8);
  uint64_t v17 = *(void *)(v3 + 16);
  uint64_t v16 = *(void *)(v3 + 24);
  uint64_t v19 = *(void *)(v3 + 32);
  uint64_t v18 = *(void *)(v3 + 40);
  uint64_t v21 = *(void *)(v3 + 48);
  uint64_t v20 = *(void *)(v3 + 56);
  char v22 = *(unsigned char *)(v3 + 64);
  if (!v7)
  {
    if (!v17) {
      goto LABEL_24;
    }
LABEL_13:
    __dst[0] = *(void *)v1;
    __dst[1] = v5;
    __dst[2] = v7;
    __dst[3] = v8;
    __dst[4] = v10;
    __dst[5] = v9;
    __dst[6] = v11;
    __dst[7] = v12;
    LOBYTE(__dst[8]) = v13;
    __dst[9] = v14;
    __dst[10] = v15;
    __dst[11] = v17;
    __dst[12] = v16;
    __dst[13] = v19;
    __dst[14] = v18;
    __dst[15] = v21;
    __dst[16] = v20;
    LOBYTE(__dst[17]) = v22;
    sub_1AFD483A8(v6, v5, v7, v8, v10);
    sub_1AFD483A8(v14, v15, v17, v16, v19);
    sub_1AFE54594(__dst);
    goto LABEL_14;
  }
  if (!v17) {
    goto LABEL_13;
  }
  char v23 = 0;
  if (v6 != v14 || v5 != v15) {
    return v23 & 1;
  }
  uint64_t v24 = v8;
  char v52 = v13;
  char v25 = *(unsigned char *)(v3 + 64);
  double v26 = *(double *)&v12;
  double v27 = *(double *)(v3 + 56);
  if ((sub_1AFF23998(v7, v17) & 1) == 0) {
    goto LABEL_14;
  }
  if (v10 == 1)
  {
    double v28 = v27;
    double v29 = v26;
    char v30 = v25;
    char v31 = v52;
    if (v19 != 1) {
      goto LABEL_14;
    }
  }
  else
  {
    if (v19 == 1) {
      goto LABEL_14;
    }
    double v28 = v27;
    double v29 = v26;
    char v30 = v25;
    char v31 = v52;
    if (v10)
    {
      if (!v19) {
        goto LABEL_14;
      }
      if (v24 != v16 || v10 != v19)
      {
        char v33 = sub_1AFFCBCE8();
        char v31 = v52;
        char v30 = v25;
        double v29 = v26;
        double v28 = v27;
        char v34 = v33;
        char v23 = 0;
        if ((v34 & 1) == 0) {
          return v23 & 1;
        }
      }
    }
    else if (v19)
    {
      goto LABEL_14;
    }
  }
  if (v31)
  {
    if ((v30 & 1) == 0) {
      goto LABEL_14;
    }
  }
  else if ((v30 & 1) != 0 || v29 != v28)
  {
    goto LABEL_14;
  }
LABEL_24:
  uint64_t v35 = *(void *)(v4 + 80);
  uint64_t v36 = *(void *)(v3 + 80);
  if (v35)
  {
    if (!v36) {
      goto LABEL_14;
    }
    if (*(void *)(v4 + 72) != *(void *)(v3 + 72) || v35 != v36)
    {
      char v37 = sub_1AFFCBCE8();
      char v23 = 0;
      if ((v37 & 1) == 0) {
        return v23 & 1;
      }
    }
  }
  else if (v36)
  {
    goto LABEL_14;
  }
  uint64_t v38 = *(void *)(v4 + 96);
  uint64_t v39 = *(void *)(v3 + 96);
  if (!v38)
  {
    if (v39) {
      goto LABEL_14;
    }
    goto LABEL_38;
  }
  if (!v39) {
    goto LABEL_14;
  }
  if (*(void *)(v4 + 88) == *(void *)(v3 + 88) && v38 == v39 || (v40 = sub_1AFFCBCE8(), char v23 = 0, (v40 & 1) != 0))
  {
LABEL_38:
    sub_1AFE53774(v4 + 104, (uint64_t)v58, &qword_1EB816930, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem);
    sub_1AFE53774(v3 + 104, (uint64_t)v59, &qword_1EB816930, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem);
    sub_1AFE53774((uint64_t)v58, (uint64_t)v60, &qword_1EB816930, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem);
    if (sub_1AFD48B64((uint64_t)v60) == 1)
    {
      sub_1AFE53774((uint64_t)v59, (uint64_t)__dst, &qword_1EB816930, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem);
      if (sub_1AFD48B64((uint64_t)__dst) == 1)
      {
LABEL_46:
        uint64_t v42 = *(void *)(v4 + 696);
        uint64_t v43 = *(void *)(v3 + 696);
        if (v42)
        {
          if (!v43) {
            goto LABEL_14;
          }
          uint64_t v44 = *(void *)(v3 + 688);
          if ((*(void *)(v4 + 688) != v44 || v42 != v43) && (sub_1AFFCBCE8() & 1) == 0) {
            goto LABEL_14;
          }
          uint64_t v45 = *(void *)(v4 + 712);
          if (!v45 || (*(void *)(v4 + 704) != v44 || v45 != v43) && (sub_1AFFCBCE8() & 1) == 0) {
            goto LABEL_14;
          }
        }
        else if (v43 || *(void *)(v4 + 712))
        {
          goto LABEL_14;
        }
        if ((*(void *)(v4 + 720) != *(void *)(v3 + 720) || *(void *)(v4 + 728) != *(void *)(v3 + 728))
          && (sub_1AFFCBCE8() & 1) == 0)
        {
          goto LABEL_14;
        }
        uint64_t v46 = *(unsigned __int8 *)(v4 + 736);
        uint64_t v47 = *(unsigned __int8 *)(v3 + 736);
        if (v46 == 8)
        {
          if (v47 != 8) {
            goto LABEL_14;
          }
        }
        else if (v47 == 8 || (sub_1AFDEE894(v46, v47) & 1) == 0)
        {
          goto LABEL_14;
        }
        uint64_t v48 = *(void *)(v4 + 752);
        uint64_t v49 = *(void *)(v3 + 752);
        if (v48)
        {
          if (!v49 || (*(void *)(v4 + 744) != *(void *)(v3 + 744) || v48 != v49) && (sub_1AFFCBCE8() & 1) == 0) {
            goto LABEL_14;
          }
        }
        else if (v49)
        {
          goto LABEL_14;
        }
        uint64_t v50 = *(void *)(v4 + 768);
        uint64_t v51 = *(void *)(v3 + 768);
        if (v50)
        {
          if (v51)
          {
            if (*(void *)(v4 + 760) != *(void *)(v3 + 760) || v50 != v51)
            {
              char v23 = sub_1AFFCBCE8();
              return v23 & 1;
            }
LABEL_79:
            char v23 = 1;
            return v23 & 1;
          }
        }
        else if (!v51)
        {
          goto LABEL_79;
        }
LABEL_14:
        char v23 = 0;
        return v23 & 1;
      }
    }
    else
    {
      sub_1AFE53774((uint64_t)v59, (uint64_t)v55, &qword_1EB816930, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem);
      if (sub_1AFD48B64((uint64_t)v55) != 1)
      {
        sub_1AFE53774((uint64_t)v58, (uint64_t)__src, &qword_1EB816930, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem);
        memcpy(v61, __src, 0x248uLL);
        sub_1AFE53774((uint64_t)v59, (uint64_t)v54, &qword_1EB816930, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem);
        memcpy(__dst, v54, sizeof(__dst));
        sub_1AFE5463C(v58, sub_1AFD4840C);
        sub_1AFE5463C(v59, sub_1AFD4840C);
        char v41 = sub_1AFE4F098((uint64_t)v61, (uint64_t)__dst);
        sub_1AFE5463C(v59, sub_1AFD48840);
        sub_1AFE5463C(v58, sub_1AFD48840);
        if ((v41 & 1) == 0) {
          goto LABEL_14;
        }
        goto LABEL_46;
      }
    }
    sub_1AFE53774((uint64_t)v58, (uint64_t)__dst, &qword_1EB816930, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem);
    sub_1AFE53774((uint64_t)v59, (uint64_t)&v57, &qword_1EB816930, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem);
    sub_1AFE5463C(v58, sub_1AFD4840C);
    sub_1AFE5463C(v59, sub_1AFD4840C);
    sub_1AFE54730((uint64_t)__dst);
    goto LABEL_14;
  }
  return v23 & 1;
}

uint64_t sub_1AFE4FFF8(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 != *(void *)a2
    || *(void *)(a1 + 8) != *(void *)(a2 + 8)
    || (sub_1AFF23998(*(void *)(a1 + 16), *(void *)(a2 + 16)) & 1) == 0)
  {
    return 0;
  }
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a2 + 32);
  if (v4 == 1)
  {
    if (v5 == 1) {
      goto LABEL_6;
    }
    return 0;
  }
  if (v5 == 1) {
    return 0;
  }
  if (!v4)
  {
    if (!v5)
    {
LABEL_6:
      uint64_t result = *(unsigned __int8 *)(a2 + 64);
      if ((*(unsigned char *)(a1 + 64) & 1) == 0) {
        return (*(double *)(a1 + 56) == *(double *)(a2 + 56)) & ~result;
      }
      return result;
    }
    return 0;
  }
  if (!v5) {
    return 0;
  }
  if (*(void *)(a1 + 24) == *(void *)(a2 + 24) && v4 == v5) {
    goto LABEL_6;
  }
  char v7 = sub_1AFFCBCE8();
  uint64_t result = 0;
  if (v7) {
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_1AFE500D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(unsigned __int8 *)(a2 + 8);
  if (*(unsigned char *)(a1 + 8))
  {
    if (!*(unsigned char *)(a2 + 8)) {
      return v2;
    }
  }
  else
  {
    if (*(double *)a1 != *(double *)a2) {
      LOBYTE(v2) = 1;
    }
    if (v2) {
      return 0;
    }
  }
  uint64_t v2 = *(unsigned __int8 *)(a2 + 24);
  if (*(unsigned char *)(a1 + 24))
  {
    if (!*(unsigned char *)(a2 + 24)) {
      return v2;
    }
  }
  else
  {
    if (*(double *)(a1 + 16) != *(double *)(a2 + 16)) {
      LOBYTE(v2) = 1;
    }
    if (v2) {
      return 0;
    }
  }
  uint64_t v2 = *(unsigned __int8 *)(a2 + 40);
  if (*(unsigned char *)(a1 + 40))
  {
    if (!*(unsigned char *)(a2 + 40)) {
      return v2;
    }
  }
  else
  {
    if (*(double *)(a1 + 32) != *(double *)(a2 + 32)) {
      LOBYTE(v2) = 1;
    }
    if (v2) {
      return 0;
    }
  }
  uint64_t v2 = *(unsigned __int8 *)(a2 + 56);
  if (*(unsigned char *)(a1 + 56))
  {
    if (*(unsigned char *)(a2 + 56)) {
      goto LABEL_25;
    }
    return v2;
  }
  if (*(double *)(a1 + 48) != *(double *)(a2 + 48)) {
    LOBYTE(v2) = 1;
  }
  if (v2) {
    return 0;
  }
LABEL_25:
  if (*(void *)(a1 + 64) != *(void *)(a2 + 64)) {
    return 0;
  }
  uint64_t v2 = *(unsigned __int8 *)(a2 + 80);
  if (*(unsigned char *)(a1 + 80)) {
    return v2;
  }
  return (*(double *)(a1 + 72) == *(double *)(a2 + 72)) & ~v2;
}

BOOL sub_1AFE501BC(uint64_t *a1, uint64_t *a2)
{
  if ((sub_1AFF237A8(*a1, *a2) & 1) == 0) {
    return 0;
  }
  uint64_t v5 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v7 = a1[3];
  uint64_t v6 = a1[4];
  uint64_t v8 = a1[5];
  uint64_t v10 = a2[1];
  uint64_t v9 = a2[2];
  uint64_t v11 = a2[3];
  uint64_t v12 = a2[4];
  uint64_t v13 = a2[5];
  if (!v4)
  {
    if (!v9) {
      return 1;
    }
    goto LABEL_6;
  }
  if (!v9)
  {
LABEL_6:
    sub_1AFD57E4C(v5, v4);
    sub_1AFD57E4C(v10, v9);
    sub_1AFD30C94(v5, v4);
    sub_1AFD30C94(v10, v9);
    return 0;
  }
  v16[0] = v5;
  v16[1] = v4;
  v16[2] = v7;
  void v16[3] = v6;
  long long v16[4] = v8;
  v17[0] = v10;
  v17[1] = v9;
  void v17[2] = v11;
  v17[3] = v12;
  v17[4] = v13;
  sub_1AFD57E4C(v5, v4);
  sub_1AFD57E4C(v5, v4);
  sub_1AFD57E4C(v10, v9);
  BOOL v14 = sub_1AFF2667C(v16, v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1AFD30C94(v5, v4);
  return v14;
}

uint64_t sub_1AFE50364@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v16 = a2;
  sub_1AFE56068(0, &qword_1EB818298, (uint64_t (*)(void))sub_1AFE505E8, (uint64_t)&type metadata for SDSQuoteResponse.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v14 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFE505E8();
  sub_1AFFCBE68();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  uint64_t v10 = v16;
  sub_1AFE54F90(0, &qword_1EB817F78, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseItem, MEMORY[0x1E4FBB320]);
  LOBYTE(v18) = 0;
  sub_1AFE5063C();
  sub_1AFFCBB58();
  uint64_t v11 = v21;
  char v17 = 1;
  sub_1AFD57C74();
  sub_1AFFCBAF8();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  long long v14 = v19;
  long long v15 = v18;
  uint64_t v12 = v20;
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *(void *)uint64_t v10 = v11;
  *(_OWORD *)(v10 + 8) = v15;
  *(_OWORD *)(v10 + 24) = v14;
  *(void *)(v10 + 40) = v12;
  return result;
}

unint64_t sub_1AFE505E8()
{
  unint64_t result = qword_1EB817048;
  if (!qword_1EB817048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817048);
  }
  return result;
}

unint64_t sub_1AFE5063C()
{
  unint64_t result = qword_1EB817F80;
  if (!qword_1EB817F80)
  {
    sub_1AFE54F90(255, &qword_1EB817F78, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseItem, MEMORY[0x1E4FBB320]);
    sub_1AFE506D0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817F80);
  }
  return result;
}

unint64_t sub_1AFE506D0()
{
  unint64_t result = qword_1EB816FD0;
  if (!qword_1EB816FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816FD0);
  }
  return result;
}

unint64_t sub_1AFE50724()
{
  unint64_t result = qword_1EB817018;
  if (!qword_1EB817018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817018);
  }
  return result;
}

uint64_t sub_1AFE50778@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1AFE56068(0, &qword_1EB8112D8, (uint64_t (*)(void))sub_1AFE54A4C, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseChartItem.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v28 = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v22 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFE54A4C();
  sub_1AFFCBE68();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  LOBYTE(v30) = 0;
  sub_1AFE54AA0();
  uint64_t v10 = v28;
  sub_1AFFCBB58();
  uint64_t v12 = v34;
  uint64_t v11 = v35;
  sub_1AFE54F90(0, &qword_1EB811250, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseEntryItem, MEMORY[0x1E4FBB320]);
  LOBYTE(v30) = 1;
  sub_1AFE54AF4();
  sub_1AFFCBB58();
  uint64_t v27 = v11;
  uint64_t v13 = v36;
  char v29 = 2;
  sub_1AFE54BDC();
  sub_1AFFCBAF8();
  uint64_t v23 = v30;
  uint64_t v24 = v31;
  uint64_t v25 = v32;
  uint64_t v26 = v13;
  LOBYTE(v13) = v33;
  char v29 = 3;
  uint64_t v14 = sub_1AFFCBAC8();
  long long v15 = v8;
  char v17 = v16;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v10);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  uint64_t v19 = v27;
  *(void *)a2 = v12;
  *(void *)(a2 + 8) = v19;
  uint64_t v20 = v23;
  *(void *)(a2 + 16) = v26;
  *(void *)(a2 + 24) = v20;
  uint64_t v21 = v25;
  *(void *)(a2 + 32) = v24;
  *(void *)(a2 + 40) = v21;
  *(unsigned char *)(a2 + 48) = v13;
  *(void *)(a2 + 56) = v14;
  *(unsigned char *)(a2 + 64) = v17 & 1;
  return result;
}

uint64_t sub_1AFE50AC0(void *a1)
{
  sub_1AFE56068(0, &qword_1EB8112E0, (uint64_t (*)(void))sub_1AFE54E54, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseChartItem.TimeZoneOffset.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v10 - v6;
  uint64_t v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFE54E54();
  sub_1AFFCBE68();
  if (!v1)
  {
    char v12 = 0;
    uint64_t v8 = sub_1AFFCBAA8();
    char v11 = 1;
    sub_1AFFCBAD8();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v8;
}

uint64_t sub_1AFE50CCC(void *a1)
{
  sub_1AFE56068(0, &qword_1EB8112E8, (uint64_t (*)(void))sub_1AFE55FC0, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseDateRange.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v10 - v6;
  uint64_t v8 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  sub_1AFE55FC0();
  sub_1AFFCBE68();
  if (!v1)
  {
    char v12 = 0;
    uint64_t v8 = sub_1AFFCBB48();
    char v11 = 1;
    sub_1AFFCBB48();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v8;
}

uint64_t sub_1AFE50EA4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v34 = a2;
  sub_1AFE56068(0, &qword_1EB8112F0, (uint64_t (*)(void))sub_1AFE56014, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseEntryItem.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v27 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFE56014();
  sub_1AFFCBE68();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  char v40 = 0;
  uint64_t v10 = v5;
  uint64_t v11 = sub_1AFFCBAC8();
  char v13 = v12;
  char v39 = 1;
  uint64_t v14 = sub_1AFFCBAC8();
  int v33 = v15;
  char v38 = 2;
  uint64_t v16 = sub_1AFFCBAC8();
  int v31 = v17;
  uint64_t v32 = v16;
  char v37 = 3;
  uint64_t v18 = sub_1AFFCBAC8();
  int v29 = v19;
  uint64_t v30 = v18;
  char v36 = 4;
  uint64_t v28 = sub_1AFFCBB48();
  char v35 = 5;
  uint64_t v20 = sub_1AFFCBAC8();
  uint64_t v21 = v8;
  char v23 = v22;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v21, v10);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  uint64_t v25 = v14;
  uint64_t v26 = v34;
  *uint64_t v34 = v11;
  *((unsigned char *)v26 + 8) = v13 & 1;
  void v26[2] = v25;
  *((unsigned char *)v26 + 24) = v33 & 1;
  v26[4] = v32;
  *((unsigned char *)v26 + 40) = v31 & 1;
  v26[6] = v30;
  *((unsigned char *)v26 + 56) = v29 & 1;
  v26[8] = v28;
  _OWORD v26[9] = v20;
  *((unsigned char *)v26 + 80) = v23 & 1;
  return result;
}

uint64_t sub_1AFE51194()
{
  unint64_t v0 = sub_1AFFCBA78();
  swift_bridgeObjectRelease();
  if (v0 >= 0xA) {
    return 10;
  }
  else {
    return v0;
  }
}

void *sub_1AFE511E0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1AFE56068(0, &qword_1EB818280, (uint64_t (*)(void))sub_1AFE542D0, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseItem.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v50 = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v27 - v7;
  uint64_t v9 = a1[3];
  uint64_t v51 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_1AFE542D0();
  sub_1AFFCBE68();
  if (v2) {
    return (void *)__swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
  }
  uint64_t v48 = a2;
  uint64_t v49 = v6;
  LOBYTE(v52[0]) = 0;
  sub_1AFE54324();
  sub_1AFFCBAF8();
  uint64_t v10 = v54[73];
  uint64_t v45 = v54[76];
  uint64_t v11 = v54[78];
  uint64_t v46 = v54[77];
  uint64_t v47 = v54[74];
  uint64_t v12 = v54[80];
  uint64_t v43 = v54[75];
  uint64_t v44 = v54[79];
  int v13 = v55;
  LOBYTE(v52[0]) = 1;
  uint64_t v38 = sub_1AFFCBAA8();
  int v56 = v13;
  uint64_t v41 = v11;
  uint64_t v42 = v10;
  uint64_t v39 = v12;
  uint64_t v40 = v14;
  LOBYTE(v52[0]) = 2;
  uint64_t v15 = sub_1AFFCBAA8();
  uint64_t v17 = v16;
  uint64_t v37 = v15;
  char v59 = 3;
  sub_1AFE54378();
  sub_1AFFCBAF8();
  uint64_t v18 = v45;
  sub_1AFE53774((uint64_t)v54, (uint64_t)v53, &qword_1EB816930, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem);
  LOBYTE(v52[0]) = 4;
  uint64_t v35 = sub_1AFFCBAA8();
  uint64_t v36 = v19;
  LOBYTE(v52[0]) = 5;
  uint64_t v33 = sub_1AFFCBAA8();
  uint64_t v34 = v20;
  LOBYTE(v52[0]) = 6;
  uint64_t v31 = sub_1AFFCBB18();
  uint64_t v32 = v21;
  LOBYTE(v52[0]) = 7;
  sub_1AFE543CC();
  sub_1AFFCBAF8();
  int v29 = v58;
  LOBYTE(v52[0]) = 8;
  uint64_t v28 = sub_1AFFCBAA8();
  uint64_t v30 = v22;
  char v57 = 9;
  uint64_t v23 = sub_1AFFCBAA8();
  uint64_t v25 = v24;
  (*(void (**)(char *, uint64_t))(v49 + 8))(v8, v50);
  v52[0] = v42;
  v52[1] = v47;
  void v52[2] = v43;
  v52[3] = v18;
  v52[4] = v46;
  v52[5] = v41;
  v52[6] = v44;
  v52[7] = v39;
  LOBYTE(v52[8]) = v56;
  v52[9] = v38;
  v52[10] = v40;
  v52[11] = v37;
  v52[12] = v17;
  sub_1AFE53774((uint64_t)v53, (uint64_t)&v52[13], &qword_1EB816930, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem);
  v52[86] = v35;
  v52[87] = v36;
  v52[88] = v33;
  v52[89] = v34;
  v52[90] = v31;
  v52[91] = v32;
  LOBYTE(v52[92]) = v29;
  v52[93] = v28;
  v52[94] = v30;
  v52[95] = v23;
  v52[96] = v25;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
  return memcpy(v48, v52, 0x308uLL);
}

uint64_t sub_1AFE519E4()
{
  unint64_t v0 = sub_1AFFCBA78();
  swift_bridgeObjectRelease();
  if (v0 >= 8) {
    return 8;
  }
  else {
    return v0;
  }
}

unint64_t sub_1AFE51A30(void *a1)
{
  unint64_t v3 = (unint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFFCBE48();
  if (!v1)
  {
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    sub_1AFFCBCF8();
    LODWORD(v3) = sub_1AFE519E4();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
    if (v3 == 8) {
      unint64_t v3 = 0;
    }
    else {
      unint64_t v3 = v3;
    }
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v3;
}

uint64_t sub_1AFE51B04()
{
  unint64_t v0 = sub_1AFFCBD28();
  swift_bridgeObjectRelease();
  if (v0 >= 0x28) {
    return 40;
  }
  else {
    return v0;
  }
}

uint64_t sub_1AFE51B58@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1AFE56068(0, &qword_1EB818288, (uint64_t (*)(void))sub_1AFE53528, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v82 - v8;
  uint64_t v10 = a1[3];
  uint64_t v210 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_1AFE53528();
  sub_1AFFCBE68();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v210);
  }
  uint64_t v11 = v7;
  uint64_t v154 = a2;
  LOBYTE(v201) = 0;
  uint64_t v12 = sub_1AFFCBAC8();
  char v14 = v13;
  LOBYTE(v201) = 1;
  uint64_t v15 = sub_1AFFCBAC8();
  int v17 = v16;
  uint64_t v153 = v12;
  LOBYTE(v201) = 2;
  unint64_t v18 = sub_1AFE5357C();
  sub_1AFFCBAF8();
  unint64_t v152 = v18;
  int v151 = v17;
  int v19 = v209;
  LOBYTE(v201) = 37;
  uint64_t v20 = sub_1AFFCBAC8();
  int v148 = v21;
  uint64_t v149 = v20;
  int v150 = v19;
  LOBYTE(v201) = 38;
  uint64_t v22 = sub_1AFFCBAC8();
  int v147 = v23;
  LOBYTE(v201) = 39;
  sub_1AFFCBAF8();
  int v24 = v208;
  uint64_t v25 = sub_1AFE4CDF4();
  int v144 = v26;
  uint64_t v145 = v25;
  int v146 = v24;
  LOBYTE(v201) = 4;
  uint64_t v27 = sub_1AFFCBAC8();
  int v141 = v28;
  uint64_t v143 = v27;
  LOBYTE(v201) = 5;
  uint64_t v142 = sub_1AFFCBAA8();
  uint64_t v138 = v29;
  LOBYTE(v201) = 6;
  uint64_t v140 = v6;
  unint64_t v139 = v9;
  uint64_t v137 = sub_1AFFCBAC8();
  int v136 = v30;
  LOBYTE(v201) = 7;
  uint64_t v135 = sub_1AFFCBAC8();
  int v134 = v31;
  LOBYTE(v201) = 8;
  uint64_t v133 = sub_1AFFCBAC8();
  int v132 = v32;
  LOBYTE(v201) = 9;
  uint64_t v130 = sub_1AFFCBAA8();
  uint64_t v131 = v33;
  LOBYTE(v201) = 10;
  uint64_t v129 = sub_1AFFCBAC8();
  int v128 = v34;
  LOBYTE(v201) = 11;
  uint64_t v127 = sub_1AFFCBAC8();
  int v126 = v35;
  LOBYTE(v201) = 12;
  uint64_t v124 = sub_1AFFCBAA8();
  uint64_t v125 = v36;
  LOBYTE(v201) = 13;
  uint64_t v122 = sub_1AFFCBAA8();
  uint64_t v123 = v37;
  LOBYTE(v201) = 14;
  uint64_t v120 = sub_1AFFCBAA8();
  uint64_t v121 = v38;
  LOBYTE(v201) = 15;
  sub_1AFE535D0();
  sub_1AFFCBAF8();
  char v39 = v207;
  LOBYTE(v201) = 16;
  uint64_t v119 = sub_1AFFCBAC8();
  int v118 = v40;
  LOBYTE(v201) = 17;
  uint64_t v116 = sub_1AFFCBAA8();
  uint64_t v117 = v41;
  LOBYTE(v201) = 18;
  uint64_t v115 = sub_1AFFCBAC8();
  int v114 = v42;
  LOBYTE(v201) = 19;
  uint64_t v113 = sub_1AFFCBAC8();
  int v112 = v43;
  LOBYTE(v201) = 20;
  uint64_t v111 = sub_1AFFCBAC8();
  int v110 = v44;
  LOBYTE(v201) = 21;
  uint64_t v109 = sub_1AFFCBAC8();
  int v108 = v45;
  LOBYTE(v201) = 22;
  sub_1AFFCBAF8();
  LODWORD(v152) = v206;
  uint64_t v107 = sub_1AFE4CF84();
  char v47 = v46;
  LOBYTE(v201) = 24;
  uint64_t v106 = sub_1AFFCBAC8();
  int v105 = v48;
  LOBYTE(v201) = 25;
  uint64_t v104 = sub_1AFFCBAC8();
  int v103 = v49;
  LOBYTE(v201) = 26;
  uint64_t v101 = sub_1AFFCBAA8();
  uint64_t v102 = v50;
  LOBYTE(v201) = 27;
  uint64_t v99 = sub_1AFFCBAA8();
  uint64_t v100 = v51;
  LOBYTE(v201) = 28;
  sub_1AFE53624();
  sub_1AFFCBAF8();
  uint64_t v97 = v203;
  int v96 = v204;
  int v94 = v205;
  LOBYTE(v201) = 29;
  uint64_t v95 = sub_1AFFCBAA8();
  uint64_t v98 = v52;
  LOBYTE(v201) = 30;
  uint64_t v92 = sub_1AFFCBAA8();
  uint64_t v93 = v53;
  LOBYTE(v201) = 31;
  uint64_t v90 = sub_1AFFCBAA8();
  uint64_t v91 = v54;
  LOBYTE(v201) = 32;
  uint64_t v88 = sub_1AFFCBAA8();
  uint64_t v89 = v55;
  LOBYTE(v201) = 33;
  uint64_t v86 = sub_1AFFCBAA8();
  uint64_t v87 = v56;
  v198[0] = 34;
  sub_1AFE53678();
  sub_1AFFCBAF8();
  uint64_t v85 = v201;
  uint64_t v57 = v202;
  v198[0] = 35;
  uint64_t v83 = sub_1AFFCBAA8();
  uint64_t v84 = v58;
  char v200 = 36;
  uint64_t v59 = sub_1AFFCBAA8();
  uint64_t v82 = v60;
  uint64_t v61 = v59;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v139, v140);
  char v199 = v14 & 1;
  char v197 = v151 & 1;
  char v194 = v148 & 1;
  char v192 = v147 & 1;
  char v189 = v144 & 1;
  char v187 = v141 & 1;
  char v185 = v136 & 1;
  char v183 = v134 & 1;
  char v181 = v132 & 1;
  char v179 = v128 & 1;
  char v177 = v126 & 1;
  char v174 = v118 & 1;
  char v172 = v114 & 1;
  char v170 = v112 & 1;
  char v168 = v110 & 1;
  char v166 = v108 & 1;
  char v163 = v47 & 1;
  char v161 = v105 & 1;
  char v159 = v103 & 1;
  char v157 = v94;
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v210);
  uint64_t v63 = v154;
  uint64_t *v154 = v153;
  v63[2] = v15;
  *((unsigned char *)v63 + 25) = v150;
  v63[4] = v149;
  v63[6] = v22;
  *((unsigned char *)v63 + 57) = v146;
  v63[8] = v145;
  v63[10] = v143;
  uint64_t v64 = v138;
  v63[12] = v142;
  v63[13] = v64;
  v63[14] = v137;
  v63[16] = v135;
  v63[18] = v133;
  uint64_t v65 = v131;
  v63[20] = v130;
  v63[21] = v65;
  v63[22] = v129;
  v63[24] = v127;
  uint64_t v66 = v125;
  v63[26] = v124;
  v63[27] = v66;
  uint64_t v67 = v123;
  v63[28] = v122;
  v63[29] = v67;
  uint64_t v68 = v121;
  v63[30] = v120;
  v63[31] = v68;
  *((unsigned char *)v63 + 256) = v39;
  v63[33] = v119;
  uint64_t v69 = v117;
  v63[35] = v116;
  v63[36] = v69;
  v63[37] = v115;
  *((_DWORD *)v63 + 65) = *(_DWORD *)&v175[3];
  *(_DWORD *)((char *)v63 + 257) = *(_DWORD *)v175;
  *((_DWORD *)v63 + 69) = *(_DWORD *)&v173[3];
  *(_DWORD *)((char *)v63 + 273) = *(_DWORD *)v173;
  *((_DWORD *)v63 + 77) = *(_DWORD *)&v171[3];
  *(_DWORD *)((char *)v63 + 305) = *(_DWORD *)v171;
  *((unsigned char *)v63 + 8) = v199;
  *(_DWORD *)((char *)v63 + 9) = *(_DWORD *)v198;
  *((_DWORD *)v63 + 3) = *(_DWORD *)&v198[3];
  *((unsigned char *)v63 + 24) = v197;
  *(_DWORD *)((char *)v63 + 26) = v195;
  *((_WORD *)v63 + 15) = v196;
  *((unsigned char *)v63 + 40) = v194;
  *((_DWORD *)v63 + 11) = *(_DWORD *)&v193[3];
  *(_DWORD *)((char *)v63 + 41) = *(_DWORD *)v193;
  *((unsigned char *)v63 + 56) = v192;
  *(_DWORD *)((char *)v63 + 58) = v190;
  *((_WORD *)v63 + 31) = v191;
  *((unsigned char *)v63 + 72) = v189;
  *(_DWORD *)((char *)v63 + 73) = *(_DWORD *)v188;
  *((_DWORD *)v63 + 19) = *(_DWORD *)&v188[3];
  *((unsigned char *)v63 + 88) = v187;
  *((_DWORD *)v63 + 23) = *(_DWORD *)&v186[3];
  *(_DWORD *)((char *)v63 + 89) = *(_DWORD *)v186;
  *((unsigned char *)v63 + 120) = v185;
  *((_DWORD *)v63 + 31) = *(_DWORD *)&v184[3];
  *(_DWORD *)((char *)v63 + 121) = *(_DWORD *)v184;
  *((unsigned char *)v63 + 136) = v183;
  *((_DWORD *)v63 + 35) = *(_DWORD *)&v182[3];
  *(_DWORD *)((char *)v63 + 137) = *(_DWORD *)v182;
  *((unsigned char *)v63 + 152) = v181;
  *((_DWORD *)v63 + 39) = *(_DWORD *)&v180[3];
  *(_DWORD *)((char *)v63 + 153) = *(_DWORD *)v180;
  *((unsigned char *)v63 + 184) = v179;
  *((_DWORD *)v63 + 47) = *(_DWORD *)&v178[3];
  *(_DWORD *)((char *)v63 + 185) = *(_DWORD *)v178;
  *((unsigned char *)v63 + 200) = v177;
  *((_DWORD *)v63 + 51) = *(_DWORD *)&v176[3];
  *(_DWORD *)((char *)v63 + 201) = *(_DWORD *)v176;
  *((unsigned char *)v63 + 272) = v174;
  *((unsigned char *)v63 + 304) = v172;
  v63[39] = v113;
  *((unsigned char *)v63 + 320) = v170;
  *((_DWORD *)v63 + 81) = *(_DWORD *)&v169[3];
  *(_DWORD *)((char *)v63 + 321) = *(_DWORD *)v169;
  v63[41] = v111;
  *((unsigned char *)v63 + 336) = v168;
  int v70 = *(_DWORD *)v167;
  *((_DWORD *)v63 + 85) = *(_DWORD *)&v167[3];
  *(_DWORD *)((char *)v63 + 337) = v70;
  v63[43] = v109;
  *((unsigned char *)v63 + 352) = v166;
  *((unsigned char *)v63 + 353) = v152;
  int v71 = v164;
  *((_WORD *)v63 + 179) = v165;
  *(_DWORD *)((char *)v63 + 354) = v71;
  v63[45] = v107;
  *((unsigned char *)v63 + 368) = v163;
  int v72 = *(_DWORD *)v162;
  *((_DWORD *)v63 + 93) = *(_DWORD *)&v162[3];
  *(_DWORD *)((char *)v63 + 369) = v72;
  v63[47] = v106;
  *((unsigned char *)v63 + 384) = v161;
  int v73 = *(_DWORD *)v160;
  *((_DWORD *)v63 + 97) = *(_DWORD *)&v160[3];
  *(_DWORD *)((char *)v63 + 385) = v73;
  v63[49] = v104;
  *((unsigned char *)v63 + 400) = v159;
  int v74 = *(_DWORD *)v158;
  *((_DWORD *)v63 + 101) = *(_DWORD *)&v158[3];
  *(_DWORD *)((char *)v63 + 401) = v74;
  uint64_t v75 = v102;
  v63[51] = v101;
  v63[52] = v75;
  uint64_t v76 = v100;
  v63[53] = v99;
  v63[54] = v76;
  v63[55] = v97;
  *((unsigned char *)v63 + 448) = v96;
  *((unsigned char *)v63 + 449) = v157;
  int v77 = v155;
  *((_WORD *)v63 + 227) = v156;
  *(_DWORD *)((char *)v63 + 450) = v77;
  uint64_t v78 = v98;
  v63[57] = v95;
  v63[58] = v78;
  uint64_t v79 = v93;
  v63[59] = v92;
  v63[60] = v79;
  uint64_t v80 = v91;
  v63[61] = v90;
  v63[62] = v80;
  uint64_t v81 = v89;
  v63[63] = v88;
  v63[64] = v81;
  v63[65] = v86;
  v63[66] = v87;
  v63[67] = v85;
  v63[68] = v57;
  v63[69] = v83;
  v63[70] = v84;
  v63[71] = v61;
  v63[72] = v82;
  return result;
}

uint64_t sub_1AFE533F0()
{
  unint64_t v0 = sub_1AFFCBA78();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t sub_1AFE53438()
{
  unint64_t v0 = sub_1AFFCBA78();
  swift_bridgeObjectRelease();
  if (v0 >= 6) {
    return 6;
  }
  else {
    return v0;
  }
}

unint64_t sub_1AFE53480()
{
  unint64_t result = qword_1EB816FA0;
  if (!qword_1EB816FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816FA0);
  }
  return result;
}

unint64_t sub_1AFE534D4()
{
  unint64_t result = qword_1EB816FE8;
  if (!qword_1EB816FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816FE8);
  }
  return result;
}

unint64_t sub_1AFE53528()
{
  unint64_t result = qword_1EB817000;
  if (!qword_1EB817000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817000);
  }
  return result;
}

unint64_t sub_1AFE5357C()
{
  unint64_t result = qword_1EB816FA8;
  if (!qword_1EB816FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816FA8);
  }
  return result;
}

unint64_t sub_1AFE535D0()
{
  unint64_t result = qword_1EB816FF0;
  if (!qword_1EB816FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816FF0);
  }
  return result;
}

unint64_t sub_1AFE53624()
{
  unint64_t result = qword_1EB817030;
  if (!qword_1EB817030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817030);
  }
  return result;
}

unint64_t sub_1AFE53678()
{
  unint64_t result = qword_1EB817060;
  if (!qword_1EB817060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817060);
  }
  return result;
}

unint64_t sub_1AFE536CC()
{
  unint64_t result = qword_1E9AFB600;
  if (!qword_1E9AFB600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB600);
  }
  return result;
}

unint64_t sub_1AFE53720()
{
  unint64_t result = qword_1E9AFB610;
  if (!qword_1E9AFB610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB610);
  }
  return result;
}

uint64_t sub_1AFE53774(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1AFE54F90(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

unint64_t sub_1AFE537F4()
{
  unint64_t result = qword_1E9AFB618;
  if (!qword_1E9AFB618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB618);
  }
  return result;
}

unint64_t sub_1AFE53848()
{
  unint64_t result = qword_1E9AFB620;
  if (!qword_1E9AFB620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB620);
  }
  return result;
}

unint64_t sub_1AFE5389C()
{
  unint64_t result = qword_1E9AFB630;
  if (!qword_1E9AFB630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB630);
  }
  return result;
}

double sub_1AFE538F0(void *a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, void (*a5)(void))
{
  sub_1AFE56068(0, a2, a3, a4, MEMORY[0x1E4FBBDC0]);
  uint64_t v10 = v9;
  uint64_t v16 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v16 - v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a5();
  sub_1AFFCBE68();
  if (v5)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    uint64_t v13 = v16;
    char v18 = 0;
    sub_1AFFCBB18();
    char v17 = 1;
    sub_1AFFC8E38();
    sub_1AFFCBB38();
    double v6 = v15;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v12, v10);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_1AFE53B08(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x69646C6F48706F74 && a2 == 0xEB0000000073676ELL;
  if (v2 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F74636553706F74 && a2 == 0xEA00000000007372)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1AFFCBCE8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1AFE53C20(void *a1)
{
  sub_1AFE56068(0, &qword_1E9AFB638, (uint64_t (*)(void))sub_1AFE53EDC, (uint64_t)&type metadata for SDSQuoteResponse.SDSFundComposition.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v10 - v6;
  uint64_t v8 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  sub_1AFE53EDC();
  sub_1AFFCBE68();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    sub_1AFE54F90(0, &qword_1E9AFB648, (uint64_t)&type metadata for SDSQuoteResponse.SDSFundComposition.Holding, MEMORY[0x1E4FBB320]);
    char v11 = 0;
    sub_1AFE53F30();
    sub_1AFFCBB58();
    uint64_t v8 = v12;
    sub_1AFE54F90(0, &qword_1E9AFB660, (uint64_t)&type metadata for SDSQuoteResponse.SDSFundComposition.Sector, MEMORY[0x1E4FBB320]);
    char v11 = 1;
    sub_1AFE54018();
    sub_1AFFC8E38();
    sub_1AFFCBB58();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_1AFFC8E38();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v8;
}

unint64_t sub_1AFE53EDC()
{
  unint64_t result = qword_1E9AFB640;
  if (!qword_1E9AFB640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB640);
  }
  return result;
}

unint64_t sub_1AFE53F30()
{
  unint64_t result = qword_1E9AFB650;
  if (!qword_1E9AFB650)
  {
    sub_1AFE54F90(255, &qword_1E9AFB648, (uint64_t)&type metadata for SDSQuoteResponse.SDSFundComposition.Holding, MEMORY[0x1E4FBB320]);
    sub_1AFE53FC4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB650);
  }
  return result;
}

unint64_t sub_1AFE53FC4()
{
  unint64_t result = qword_1E9AFB658;
  if (!qword_1E9AFB658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB658);
  }
  return result;
}

unint64_t sub_1AFE54018()
{
  unint64_t result = qword_1E9AFB668;
  if (!qword_1E9AFB668)
  {
    sub_1AFE54F90(255, &qword_1E9AFB660, (uint64_t)&type metadata for SDSQuoteResponse.SDSFundComposition.Sector, MEMORY[0x1E4FBB320]);
    sub_1AFE540AC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB668);
  }
  return result;
}

unint64_t sub_1AFE540AC()
{
  unint64_t result = qword_1E9AFB670;
  if (!qword_1E9AFB670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB670);
  }
  return result;
}

unint64_t sub_1AFE54100()
{
  unint64_t result = qword_1E9AFB680;
  if (!qword_1E9AFB680)
  {
    sub_1AFE54F90(255, &qword_1E9AFB648, (uint64_t)&type metadata for SDSQuoteResponse.SDSFundComposition.Holding, MEMORY[0x1E4FBB320]);
    sub_1AFE54194();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB680);
  }
  return result;
}

unint64_t sub_1AFE54194()
{
  unint64_t result = qword_1E9AFB688;
  if (!qword_1E9AFB688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB688);
  }
  return result;
}

unint64_t sub_1AFE541E8()
{
  unint64_t result = qword_1E9AFB690;
  if (!qword_1E9AFB690)
  {
    sub_1AFE54F90(255, &qword_1E9AFB660, (uint64_t)&type metadata for SDSQuoteResponse.SDSFundComposition.Sector, MEMORY[0x1E4FBB320]);
    sub_1AFE5427C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB690);
  }
  return result;
}

unint64_t sub_1AFE5427C()
{
  unint64_t result = qword_1E9AFB698;
  if (!qword_1E9AFB698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB698);
  }
  return result;
}

unint64_t sub_1AFE542D0()
{
  unint64_t result = qword_1EB816FB8;
  if (!qword_1EB816FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816FB8);
  }
  return result;
}

unint64_t sub_1AFE54324()
{
  unint64_t result = qword_1EB816FE0;
  if (!qword_1EB816FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816FE0);
  }
  return result;
}

unint64_t sub_1AFE54378()
{
  unint64_t result = qword_1EB817040;
  if (!qword_1EB817040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817040);
  }
  return result;
}

unint64_t sub_1AFE543CC()
{
  unint64_t result = qword_1EB816FD8;
  if (!qword_1EB816FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816FD8);
  }
  return result;
}

unint64_t sub_1AFE54420()
{
  unint64_t result = qword_1E9AFB6B0;
  if (!qword_1E9AFB6B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB6B0);
  }
  return result;
}

uint64_t sub_1AFE54474(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1AFE54F90(255, a2, a3, MEMORY[0x1E4FBB718]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1AFE544EC()
{
  unint64_t result = qword_1E9AFB6C0;
  if (!qword_1E9AFB6C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB6C0);
  }
  return result;
}

unint64_t sub_1AFE54540()
{
  unint64_t result = qword_1E9AFB6D0;
  if (!qword_1E9AFB6D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB6D0);
  }
  return result;
}

uint64_t *sub_1AFE54594(uint64_t *a1)
{
  uint64_t v2 = a1[9];
  uint64_t v3 = a1[10];
  uint64_t v4 = a1[11];
  uint64_t v5 = a1[12];
  uint64_t v6 = a1[13];
  sub_1AFD30ECC(*a1, a1[1], a1[2], a1[3], a1[4]);
  sub_1AFD30ECC(v2, v3, v4, v5, v6);
  return a1;
}

#error "1AFE54708: call analysis failed (funcsize=61)"

uint64_t sub_1AFE54730(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 584);
  uint64_t v3 = *(void *)(a1 + 592);
  uint64_t v4 = *(void *)(a1 + 600);
  uint64_t v5 = *(void *)(a1 + 608);
  uint64_t v6 = *(void *)(a1 + 616);
  uint64_t v7 = *(void *)(a1 + 624);
  uint64_t v8 = *(void *)(a1 + 632);
  uint64_t v9 = *(void *)(a1 + 640);
  long long v53 = *(_OWORD *)(a1 + 664);
  long long v54 = *(_OWORD *)(a1 + 648);
  long long v51 = *(_OWORD *)(a1 + 696);
  long long v52 = *(_OWORD *)(a1 + 680);
  long long v49 = *(_OWORD *)(a1 + 728);
  long long v50 = *(_OWORD *)(a1 + 712);
  long long v47 = *(_OWORD *)(a1 + 760);
  long long v48 = *(_OWORD *)(a1 + 744);
  long long v45 = *(_OWORD *)(a1 + 792);
  long long v46 = *(_OWORD *)(a1 + 776);
  long long v43 = *(_OWORD *)(a1 + 824);
  long long v44 = *(_OWORD *)(a1 + 808);
  long long v41 = *(_OWORD *)(a1 + 856);
  long long v42 = *(_OWORD *)(a1 + 840);
  long long v39 = *(_OWORD *)(a1 + 888);
  long long v40 = *(_OWORD *)(a1 + 872);
  long long v37 = *(_OWORD *)(a1 + 920);
  long long v38 = *(_OWORD *)(a1 + 904);
  long long v35 = *(_OWORD *)(a1 + 952);
  long long v36 = *(_OWORD *)(a1 + 936);
  long long v33 = *(_OWORD *)(a1 + 984);
  long long v34 = *(_OWORD *)(a1 + 968);
  long long v31 = *(_OWORD *)(a1 + 1016);
  long long v32 = *(_OWORD *)(a1 + 1000);
  long long v29 = *(_OWORD *)(a1 + 1048);
  long long v30 = *(_OWORD *)(a1 + 1032);
  long long v27 = *(_OWORD *)(a1 + 1080);
  long long v28 = *(_OWORD *)(a1 + 1064);
  long long v26 = *(_OWORD *)(a1 + 480);
  long long v24 = *(_OWORD *)(a1 + 448);
  long long v25 = *(_OWORD *)(a1 + 464);
  long long v22 = *(_OWORD *)(a1 + 416);
  long long v23 = *(_OWORD *)(a1 + 432);
  long long v20 = *(_OWORD *)(a1 + 384);
  long long v21 = *(_OWORD *)(a1 + 400);
  long long v18 = *(_OWORD *)(a1 + 352);
  long long v19 = *(_OWORD *)(a1 + 368);
  long long v16 = *(_OWORD *)(a1 + 320);
  long long v17 = *(_OWORD *)(a1 + 336);
  long long v14 = *(_OWORD *)(a1 + 288);
  long long v15 = *(_OWORD *)(a1 + 304);
  long long v12 = *(_OWORD *)(a1 + 256);
  long long v13 = *(_OWORD *)(a1 + 272);
  long long v11 = *(_OWORD *)(a1 + 224);
  sub_1AFD48840(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    v11,
    *((uint64_t *)&v11 + 1),
    *(void *)(a1 + 240),
    *(void *)(a1 + 248),
    v12,
    *((uint64_t *)&v12 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v16,
    *((uint64_t *)&v16 + 1),
    v17,
    *((uint64_t *)&v17 + 1),
    v18,
    *((uint64_t *)&v18 + 1),
    v19,
    *((uint64_t *)&v19 + 1),
    v20,
    *((uint64_t *)&v20 + 1),
    v21,
    *((uint64_t *)&v21 + 1),
    v22,
    *((uint64_t *)&v22 + 1),
    v23,
    *((uint64_t *)&v23 + 1),
    v24,
    *((uint64_t *)&v24 + 1),
    v25,
    *((uint64_t *)&v25 + 1),
    v26,
    *((uint64_t *)&v26 + 1),
    *(void *)(a1 + 496));
  sub_1AFD48840(v2, v3, v4, v5, v6, v7, v8, v9, v54, *((uint64_t *)&v54 + 1), v53, *((uint64_t *)&v53 + 1), v52, *((uint64_t *)&v52 + 1), v51, *((uint64_t *)&v51 + 1), v50, *((uint64_t *)&v50 + 1), v49,
    *((uint64_t *)&v49 + 1),
    v48,
    *((uint64_t *)&v48 + 1),
    v47,
    *((uint64_t *)&v47 + 1),
    v46,
    *((uint64_t *)&v46 + 1),
    v45,
    *((uint64_t *)&v45 + 1),
    v44,
    *((uint64_t *)&v44 + 1),
    v43,
    *((uint64_t *)&v43 + 1),
    v42,
    *((uint64_t *)&v42 + 1),
    v41,
    *((uint64_t *)&v41 + 1),
    v40,
    *((uint64_t *)&v40 + 1),
    v39,
    *((uint64_t *)&v39 + 1),
    v38,
    *((uint64_t *)&v38 + 1),
    v37,
    *((uint64_t *)&v37 + 1),
    v36,
    *((uint64_t *)&v36 + 1),
    v35,
    *((uint64_t *)&v35 + 1),
    v34,
    *((uint64_t *)&v34 + 1),
    v33,
    *((uint64_t *)&v33 + 1),
    v32,
    *((uint64_t *)&v32 + 1),
    v31,
    *((uint64_t *)&v31 + 1),
    v30,
    *((uint64_t *)&v30 + 1),
    v29,
    *((uint64_t *)&v29 + 1),
    v28,
    *((uint64_t *)&v28 + 1),
    v27);
  return a1;
}

unint64_t sub_1AFE54A4C()
{
  unint64_t result = qword_1EB810CC0;
  if (!qword_1EB810CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB810CC0);
  }
  return result;
}

unint64_t sub_1AFE54AA0()
{
  unint64_t result = qword_1EB810D10;
  if (!qword_1EB810D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB810D10);
  }
  return result;
}

unint64_t sub_1AFE54AF4()
{
  unint64_t result = qword_1EB811258;
  if (!qword_1EB811258)
  {
    sub_1AFE54F90(255, &qword_1EB811250, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseEntryItem, MEMORY[0x1E4FBB320]);
    sub_1AFE54B88();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB811258);
  }
  return result;
}

unint64_t sub_1AFE54B88()
{
  unint64_t result = qword_1EB810D30;
  if (!qword_1EB810D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB810D30);
  }
  return result;
}

unint64_t sub_1AFE54BDC()
{
  unint64_t result = qword_1EB810CF0;
  if (!qword_1EB810CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB810CF0);
  }
  return result;
}

unint64_t sub_1AFE54C30()
{
  unint64_t result = qword_1E9AFB6E0;
  if (!qword_1E9AFB6E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB6E0);
  }
  return result;
}

unint64_t sub_1AFE54C84()
{
  unint64_t result = qword_1E9AFB6E8;
  if (!qword_1E9AFB6E8)
  {
    sub_1AFE54F90(255, &qword_1EB811250, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseEntryItem, MEMORY[0x1E4FBB320]);
    sub_1AFE54D18();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB6E8);
  }
  return result;
}

unint64_t sub_1AFE54D18()
{
  unint64_t result = qword_1E9AFB6F0;
  if (!qword_1E9AFB6F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB6F0);
  }
  return result;
}

unint64_t sub_1AFE54D6C()
{
  unint64_t result = qword_1E9AFB700;
  if (!qword_1E9AFB700)
  {
    sub_1AFE54F90(255, &qword_1E9AFB6F8, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseChartItem.TimeZoneOffset, MEMORY[0x1E4FBB718]);
    sub_1AFE54E00();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB700);
  }
  return result;
}

unint64_t sub_1AFE54E00()
{
  unint64_t result = qword_1E9AFB708;
  if (!qword_1E9AFB708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB708);
  }
  return result;
}

unint64_t sub_1AFE54E54()
{
  unint64_t result = qword_1EB810CD8;
  if (!qword_1EB810CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB810CD8);
  }
  return result;
}

unint64_t sub_1AFE54EA8()
{
  unint64_t result = qword_1E9AFB720;
  if (!qword_1E9AFB720)
  {
    sub_1AFE54F90(255, &qword_1EB817F78, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseItem, MEMORY[0x1E4FBB320]);
    sub_1AFE54F3C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB720);
  }
  return result;
}

unint64_t sub_1AFE54F3C()
{
  unint64_t result = qword_1E9AFB728;
  if (!qword_1E9AFB728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB728);
  }
  return result;
}

void sub_1AFE54F90(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

ValueMetadata *type metadata accessor for SDSQuoteResponse.SDSQuoteResponseChartItem.TimeZoneOffset.CodingKeys()
{
  return &type metadata for SDSQuoteResponse.SDSQuoteResponseChartItem.TimeZoneOffset.CodingKeys;
}

unsigned char *_s10StocksCore16SDSQuoteResponseV25SDSQuoteResponseQuoteItemV39SDSQuoteResponseQuoteItemExchangeStatusOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFE550BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SDSQuoteResponse.SDSQuoteResponseChartItem.CodingKeys()
{
  return &type metadata for SDSQuoteResponse.SDSQuoteResponseChartItem.CodingKeys;
}

uint64_t getEnumTagSinglePayload for SDSQuoteResponse.SDSQuoteResponseItem.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SDSQuoteResponse.SDSQuoteResponseItem.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *unint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFE55250);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SDSQuoteResponse.SDSQuoteResponseItem.CodingKeys()
{
  return &type metadata for SDSQuoteResponse.SDSQuoteResponseItem.CodingKeys;
}

ValueMetadata *type metadata accessor for SDSQuoteResponse.SDSFundComposition.CodingKeys()
{
  return &type metadata for SDSQuoteResponse.SDSFundComposition.CodingKeys;
}

ValueMetadata *type metadata accessor for SDSQuoteResponse.SDSQuoteResponseQuoteItem.Errors()
{
  return &type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem.Errors;
}

uint64_t getEnumTagSinglePayload for SDSQuoteResponse.SDSQuoteResponseQuoteItem.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xD9) {
    goto LABEL_17;
  }
  if (a2 + 39 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 39) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 39;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 39;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 39;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x28;
  int v8 = v6 - 40;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SDSQuoteResponse.SDSQuoteResponseQuoteItem.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 39 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 39) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xD9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xD8)
  {
    unsigned int v6 = ((a2 - 217) >> 8) + 1;
    *unint64_t result = a2 + 39;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFE55404);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 39;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SDSQuoteResponse.SDSQuoteResponseQuoteItem.CodingKeys()
{
  return &type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for SDSQuoteResponse.SDSQuoteResponseQuoteItem.TimeZoneOffset.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1AFE554D8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SDSQuoteResponse.SDSQuoteResponseQuoteItem.TimeZoneOffset.CodingKeys()
{
  return &type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem.TimeZoneOffset.CodingKeys;
}

ValueMetadata *type metadata accessor for SDSQuoteResponse.CodingKeys()
{
  return &type metadata for SDSQuoteResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for SDSQuoteResponse.SDSFundComposition.Sector()
{
  return &type metadata for SDSQuoteResponse.SDSFundComposition.Sector;
}

ValueMetadata *type metadata accessor for SDSQuoteResponse.SDSFundComposition.Holding()
{
  return &type metadata for SDSQuoteResponse.SDSFundComposition.Holding;
}

unsigned char *storeEnumTagSinglePayload for SDSQuoteResponse.SDSQuoteResponseItemType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFE5560CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SDSQuoteResponse.SDSQuoteResponseItemType()
{
  return &type metadata for SDSQuoteResponse.SDSQuoteResponseItemType;
}

__n128 __swift_memcpy81_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for SDSQuoteResponse.SDSQuoteResponseEntryItem(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 81)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for SDSQuoteResponse.SDSQuoteResponseEntryItem(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 80) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 81) = v3;
  return result;
}

ValueMetadata *type metadata accessor for SDSQuoteResponse.SDSQuoteResponseEntryItem()
{
  return &type metadata for SDSQuoteResponse.SDSQuoteResponseEntryItem;
}

uint64_t getEnumTagSinglePayload for SDSQuoteResponse.SDSQuoteResponseDateRange(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for SDSQuoteResponse.SDSQuoteResponseDateRange(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for SDSQuoteResponse.SDSQuoteResponseDateRange()
{
  return &type metadata for SDSQuoteResponse.SDSQuoteResponseDateRange;
}

unint64_t sub_1AFE55738()
{
  unint64_t result = qword_1E9AFB730;
  if (!qword_1E9AFB730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB730);
  }
  return result;
}

unint64_t sub_1AFE55790()
{
  unint64_t result = qword_1E9AFB738;
  if (!qword_1E9AFB738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB738);
  }
  return result;
}

unint64_t sub_1AFE557E8()
{
  unint64_t result = qword_1E9AFB740;
  if (!qword_1E9AFB740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB740);
  }
  return result;
}

unint64_t sub_1AFE55840()
{
  unint64_t result = qword_1E9AFB748;
  if (!qword_1E9AFB748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB748);
  }
  return result;
}

unint64_t sub_1AFE55898()
{
  unint64_t result = qword_1E9AFB750;
  if (!qword_1E9AFB750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB750);
  }
  return result;
}

unint64_t sub_1AFE558F0()
{
  unint64_t result = qword_1E9AFB758;
  if (!qword_1E9AFB758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB758);
  }
  return result;
}

unint64_t sub_1AFE55948()
{
  unint64_t result = qword_1E9AFB760;
  if (!qword_1E9AFB760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB760);
  }
  return result;
}

unint64_t sub_1AFE559A0()
{
  unint64_t result = qword_1E9AFB768;
  if (!qword_1E9AFB768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB768);
  }
  return result;
}

unint64_t sub_1AFE559F8()
{
  unint64_t result = qword_1EB810CE8;
  if (!qword_1EB810CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB810CE8);
  }
  return result;
}

unint64_t sub_1AFE55A50()
{
  unint64_t result = qword_1EB810CE0;
  if (!qword_1EB810CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB810CE0);
  }
  return result;
}

unint64_t sub_1AFE55AA8()
{
  unint64_t result = qword_1EB810CD0;
  if (!qword_1EB810CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB810CD0);
  }
  return result;
}

unint64_t sub_1AFE55B00()
{
  unint64_t result = qword_1EB810CC8;
  if (!qword_1EB810CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB810CC8);
  }
  return result;
}

unint64_t sub_1AFE55B58()
{
  unint64_t result = qword_1EB816FC8;
  if (!qword_1EB816FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816FC8);
  }
  return result;
}

unint64_t sub_1AFE55BB0()
{
  unint64_t result = qword_1EB816FC0;
  if (!qword_1EB816FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816FC0);
  }
  return result;
}

unint64_t sub_1AFE55C08()
{
  unint64_t result = qword_1E9AFB770;
  if (!qword_1E9AFB770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB770);
  }
  return result;
}

unint64_t sub_1AFE55C60()
{
  unint64_t result = qword_1E9AFB778;
  if (!qword_1E9AFB778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB778);
  }
  return result;
}

unint64_t sub_1AFE55CB8()
{
  unint64_t result = qword_1EB817010;
  if (!qword_1EB817010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817010);
  }
  return result;
}

unint64_t sub_1AFE55D10()
{
  unint64_t result = qword_1EB817008;
  if (!qword_1EB817008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817008);
  }
  return result;
}

unint64_t sub_1AFE55D68()
{
  unint64_t result = qword_1EB817028;
  if (!qword_1EB817028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817028);
  }
  return result;
}

unint64_t sub_1AFE55DC0()
{
  unint64_t result = qword_1EB817020;
  if (!qword_1EB817020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817020);
  }
  return result;
}

unint64_t sub_1AFE55E18()
{
  unint64_t result = qword_1EB817058;
  if (!qword_1EB817058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817058);
  }
  return result;
}

unint64_t sub_1AFE55E70()
{
  unint64_t result = qword_1EB817050;
  if (!qword_1EB817050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817050);
  }
  return result;
}

unint64_t sub_1AFE55EC4()
{
  unint64_t result = qword_1E9AFB788;
  if (!qword_1E9AFB788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB788);
  }
  return result;
}

unint64_t sub_1AFE55F18()
{
  unint64_t result = qword_1E9AFB798;
  if (!qword_1E9AFB798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB798);
  }
  return result;
}

unint64_t sub_1AFE55F6C()
{
  unint64_t result = qword_1E9AFB7B0;
  if (!qword_1E9AFB7B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB7B0);
  }
  return result;
}

unint64_t sub_1AFE55FC0()
{
  unint64_t result = qword_1EB810CF8;
  if (!qword_1EB810CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB810CF8);
  }
  return result;
}

unint64_t sub_1AFE56014()
{
  unint64_t result = qword_1EB810D18;
  if (!qword_1EB810D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB810D18);
  }
  return result;
}

void sub_1AFE56068(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unsigned char *_s10StocksCore16SDSQuoteResponseV14SDSQuoteSourceOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFE5619CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SDSQuoteResponse.SDSQuoteResponseEntryItem.CodingKeys()
{
  return &type metadata for SDSQuoteResponse.SDSQuoteResponseEntryItem.CodingKeys;
}

ValueMetadata *type metadata accessor for SDSQuoteResponse.SDSQuoteResponseDateRange.CodingKeys()
{
  return &type metadata for SDSQuoteResponse.SDSQuoteResponseDateRange.CodingKeys;
}

ValueMetadata *type metadata accessor for SDSQuoteResponse.SDSFundComposition.Sector.CodingKeys()
{
  return &type metadata for SDSQuoteResponse.SDSFundComposition.Sector.CodingKeys;
}

unsigned char *_s10StocksCore16SDSQuoteResponseV25SDSQuoteResponseChartItemV14TimeZoneOffsetV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFE562C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SDSQuoteResponse.SDSFundComposition.Holding.CodingKeys()
{
  return &type metadata for SDSQuoteResponse.SDSFundComposition.Holding.CodingKeys;
}

unint64_t sub_1AFE562FC()
{
  unint64_t result = qword_1E9AFB7C8;
  if (!qword_1E9AFB7C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB7C8);
  }
  return result;
}

unint64_t sub_1AFE56354()
{
  unint64_t result = qword_1E9AFB7D0;
  if (!qword_1E9AFB7D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB7D0);
  }
  return result;
}

unint64_t sub_1AFE563AC()
{
  unint64_t result = qword_1E9AFB7D8;
  if (!qword_1E9AFB7D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB7D8);
  }
  return result;
}

unint64_t sub_1AFE56404()
{
  unint64_t result = qword_1E9AFB7E0;
  if (!qword_1E9AFB7E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB7E0);
  }
  return result;
}

unint64_t sub_1AFE5645C()
{
  unint64_t result = qword_1EB810D28;
  if (!qword_1EB810D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB810D28);
  }
  return result;
}

unint64_t sub_1AFE564B4()
{
  unint64_t result = qword_1EB810D20;
  if (!qword_1EB810D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB810D20);
  }
  return result;
}

unint64_t sub_1AFE5650C()
{
  unint64_t result = qword_1EB810D08;
  if (!qword_1EB810D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB810D08);
  }
  return result;
}

unint64_t sub_1AFE56564()
{
  unint64_t result = qword_1EB810D00;
  if (!qword_1EB810D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB810D00);
  }
  return result;
}

unint64_t sub_1AFE565BC()
{
  unint64_t result = qword_1E9AFB7E8;
  if (!qword_1E9AFB7E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB7E8);
  }
  return result;
}

unint64_t sub_1AFE56614()
{
  unint64_t result = qword_1E9AFB7F0;
  if (!qword_1E9AFB7F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB7F0);
  }
  return result;
}

unint64_t sub_1AFE5666C()
{
  unint64_t result = qword_1E9AFB7F8;
  if (!qword_1E9AFB7F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB7F8);
  }
  return result;
}

unint64_t sub_1AFE566C4()
{
  unint64_t result = qword_1E9AFB800;
  if (!qword_1E9AFB800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB800);
  }
  return result;
}

uint64_t sub_1AFE56718@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t a6@<X5>, uint64_t a7@<X6>, unint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, unint64_t a11, uint64_t a12, unint64_t a13)
{
  unint64_t v14 = a13;
  unint64_t v16 = a11;
  if (a2) {
    uint64_t v17 = a1;
  }
  else {
    uint64_t v17 = 0;
  }
  unint64_t v18 = 0xE000000000000000;
  if (a2) {
    unint64_t v19 = a2;
  }
  else {
    unint64_t v19 = 0xE000000000000000;
  }
  if (a4) {
    uint64_t v20 = a3;
  }
  else {
    uint64_t v20 = 0;
  }
  if (a4) {
    unint64_t v18 = a4;
  }
  if (a6) {
    uint64_t result = a5;
  }
  else {
    uint64_t result = 0x464646464646;
  }
  *a9 = v17;
  a9[1] = v19;
  if (a6) {
    unint64_t v22 = a6;
  }
  else {
    unint64_t v22 = 0xE600000000000000;
  }
  a9[2] = v20;
  a9[3] = v18;
  if (a8) {
    uint64_t v23 = a7;
  }
  else {
    uint64_t v23 = 0x303030303030;
  }
  if (a8) {
    unint64_t v24 = a8;
  }
  else {
    unint64_t v24 = 0xE600000000000000;
  }
  a9[4] = result;
  a9[5] = v22;
  if (!a11)
  {
    a10 = 0x464646464646;
    unint64_t v16 = 0xE600000000000000;
  }
  a9[6] = v23;
  a9[7] = v24;
  if (!a13) {
    a12 = 0x303030303030;
  }
  a9[8] = a10;
  a9[9] = v16;
  if (!a13) {
    unint64_t v14 = 0xE600000000000000;
  }
  a9[10] = a12;
  a9[11] = v14;
  return result;
}

uint64_t sub_1AFE567A0(char a1)
{
  uint64_t result = 1701869940;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6C6562616CLL;
      break;
    case 2:
      unsigned int v3 = 1801675106;
      goto LABEL_5;
    case 3:
      unsigned int v3 = 1701998438;
LABEL_5:
      uint64_t result = v3 | 0x756F726700000000;
      break;
    case 4:
    case 5:
      uint64_t result = 0xD000000000000018;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1AFE56858(char a1)
{
  uint64_t result = 1701869940;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6C6562616CLL;
      break;
    case 2:
      unsigned int v3 = 1801675106;
      goto LABEL_5;
    case 3:
      unsigned int v3 = 1701998438;
LABEL_5:
      uint64_t result = v3 | 0x756F726700000000;
      break;
    case 4:
    case 5:
      uint64_t result = 0xD000000000000018;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1AFE56910(unsigned __int8 *a1, char *a2)
{
  return sub_1AFDECE38(*a1, *a2);
}

uint64_t sub_1AFE5691C()
{
  return sub_1AFF9AAD4();
}

uint64_t sub_1AFE56924()
{
  return sub_1AFD77B8C();
}

uint64_t sub_1AFE5692C()
{
  return sub_1AFF9BE94();
}

uint64_t sub_1AFE56934@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFE57F60();
  *a1 = result;
  return result;
}

uint64_t sub_1AFE56964@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1AFE567A0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1AFE56990()
{
  return sub_1AFE56858(*v0);
}

uint64_t sub_1AFE56998@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFE57F60();
  *a1 = result;
  return result;
}

uint64_t sub_1AFE569C0(uint64_t a1)
{
  unint64_t v2 = sub_1AFE574E0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFE569FC(uint64_t a1)
{
  unint64_t v2 = sub_1AFE574E0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFE56A38@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1AFE579C0(0, &qword_1EB819FD8, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v62 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFE574E0();
  sub_1AFFCBE68();
  if (!v2)
  {
    int v77 = (void *)MEMORY[0x1E4FBC860];
    char v76 = 0;
    sub_1AFFCBAF8();
    unint64_t v10 = (unint64_t)v75;
    uint64_t v72 = v74;
    if (v75)
    {
      uint64_t v11 = (void *)MEMORY[0x1E4FBC860];
    }
    else
    {
      int v73 = a2;
      swift_beginAccess();
      uint64_t v11 = v77;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v11 = sub_1AFD352FC(0, v11[2] + 1, 1, v11);
      }
      unint64_t v13 = v11[2];
      unint64_t v12 = v11[3];
      if (v13 >= v12 >> 1) {
        uint64_t v11 = sub_1AFD352FC((void *)(v12 > 1), v13 + 1, 1, v11);
      }
      void v11[2] = v13 + 1;
      unint64_t v14 = &v11[2 * v13];
      v14[4] = 1701869940;
      void v14[5] = 0xE400000000000000;
      int v77 = v11;
      swift_endAccess();
      unint64_t v10 = 0;
      a2 = v73;
    }
    char v76 = 1;
    sub_1AFFCBAF8();
    uint64_t v70 = v74;
    unint64_t v71 = (unint64_t)v75;
    if (!v75)
    {
      int v73 = a2;
      swift_beginAccess();
      uint64_t v11 = v77;
      unint64_t v15 = v10;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v11 = sub_1AFD352FC(0, v11[2] + 1, 1, v11);
      }
      unint64_t v17 = v11[2];
      unint64_t v16 = v11[3];
      if (v17 >= v16 >> 1) {
        uint64_t v11 = sub_1AFD352FC((void *)(v16 > 1), v17 + 1, 1, v11);
      }
      void v11[2] = v17 + 1;
      unint64_t v18 = &v11[2 * v17];
      v18[4] = 0x6C6562616CLL;
      v18[5] = 0xE500000000000000;
      int v77 = v11;
      swift_endAccess();
      unint64_t v10 = v15;
      a2 = v73;
    }
    char v76 = 2;
    sub_1AFFCBAF8();
    uint64_t v68 = v74;
    unint64_t v69 = (unint64_t)v75;
    if (!v75)
    {
      int v73 = a2;
      swift_beginAccess();
      uint64_t v11 = v77;
      unint64_t v19 = v10;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v11 = sub_1AFD352FC(0, v11[2] + 1, 1, v11);
      }
      unint64_t v21 = v11[2];
      unint64_t v20 = v11[3];
      if (v21 >= v20 >> 1) {
        uint64_t v11 = sub_1AFD352FC((void *)(v20 > 1), v21 + 1, 1, v11);
      }
      void v11[2] = v21 + 1;
      unint64_t v22 = &v11[2 * v21];
      v22[4] = 0x756F72676B636162;
      v22[5] = 0xEF726F6C6F43646ELL;
      int v77 = v11;
      swift_endAccess();
      unint64_t v10 = v19;
      a2 = v73;
    }
    char v76 = 3;
    sub_1AFFCBAF8();
    uint64_t v66 = v74;
    unint64_t v67 = (unint64_t)v75;
    if (!v75)
    {
      int v73 = a2;
      swift_beginAccess();
      uint64_t v11 = v77;
      unint64_t v23 = v10;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v11 = sub_1AFD352FC(0, v11[2] + 1, 1, v11);
      }
      unint64_t v25 = v11[2];
      unint64_t v24 = v11[3];
      if (v25 >= v24 >> 1) {
        uint64_t v11 = sub_1AFD352FC((void *)(v24 > 1), v25 + 1, 1, v11);
      }
      void v11[2] = v25 + 1;
      long long v26 = &v11[2 * v25];
      v26[4] = 0x756F726765726F66;
      v26[5] = 0xEF726F6C6F43646ELL;
      int v77 = v11;
      swift_endAccess();
      unint64_t v10 = v23;
      a2 = v73;
    }
    char v76 = 4;
    sub_1AFFCBAF8();
    uint64_t v65 = v74;
    int v73 = v75;
    if (!v75)
    {
      swift_beginAccess();
      uint64_t v11 = v77;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v64 = v10;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        uint64_t v11 = sub_1AFD352FC(0, v11[2] + 1, 1, v11);
      }
      unint64_t v29 = v11[2];
      unint64_t v28 = v11[3];
      if (v29 >= v28 >> 1) {
        uint64_t v11 = sub_1AFD352FC((void *)(v28 > 1), v29 + 1, 1, v11);
      }
      void v11[2] = v29 + 1;
      long long v30 = &v11[2 * v29];
      v30[4] = 0xD000000000000018;
      v30[5] = 0x80000001AFFECBE0;
      int v77 = v11;
      swift_endAccess();
      unint64_t v10 = v64;
    }
    char v76 = 5;
    sub_1AFFCBAF8();
    unint64_t v32 = (unint64_t)v75;
    if (v75)
    {
      uint64_t v63 = v74;
      uint64_t v33 = v72;
    }
    else
    {
      unint64_t v62 = 0;
      swift_beginAccess();
      uint64_t v11 = v77;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v11 = sub_1AFD352FC(0, v11[2] + 1, 1, v11);
      }
      unint64_t v35 = v11[2];
      unint64_t v34 = v11[3];
      uint64_t v36 = v35 + 1;
      if (v35 >= v34 >> 1)
      {
        uint64_t v63 = v35 + 1;
        uint64_t v61 = sub_1AFD352FC((void *)(v34 > 1), v35 + 1, 1, v11);
        uint64_t v36 = v63;
        uint64_t v11 = v61;
      }
      void v11[2] = v36;
      long long v37 = &v11[2 * v35];
      v37[4] = 0xD000000000000018;
      void v37[5] = 0x80000001AFFED090;
      int v77 = v11;
      swift_endAccess();
      uint64_t v63 = 0x303030303030;
      uint64_t v33 = v72;
      unint64_t v32 = v62;
    }
    if (v10) {
      uint64_t v38 = v33;
    }
    else {
      uint64_t v38 = 0;
    }
    unint64_t v39 = 0xE000000000000000;
    if (v10) {
      unint64_t v40 = v10;
    }
    else {
      unint64_t v40 = 0xE000000000000000;
    }
    unint64_t v64 = v40;
    uint64_t v41 = v70;
    if (!v71) {
      uint64_t v41 = 0;
    }
    uint64_t v70 = v41;
    if (v71) {
      unint64_t v39 = v71;
    }
    unint64_t v71 = v39;
    uint64_t v72 = v38;
    unint64_t v42 = v69;
    uint64_t v43 = 0x464646464646;
    if (v69) {
      uint64_t v44 = v68;
    }
    else {
      uint64_t v44 = 0x464646464646;
    }
    if (!v69) {
      unint64_t v42 = 0xE600000000000000;
    }
    uint64_t v68 = v44;
    unint64_t v69 = v42;
    uint64_t v46 = v66;
    unint64_t v45 = v67;
    if (!v67)
    {
      uint64_t v46 = 0x303030303030;
      unint64_t v45 = 0xE600000000000000;
    }
    uint64_t v66 = v46;
    unint64_t v67 = v45;
    if (v73) {
      uint64_t v43 = v65;
    }
    uint64_t v65 = v43;
    if (v73) {
      unint64_t v47 = (unint64_t)v73;
    }
    else {
      unint64_t v47 = 0xE600000000000000;
    }
    int v73 = (uint64_t *)v47;
    if (v32) {
      unint64_t v48 = v32;
    }
    else {
      unint64_t v48 = 0xE600000000000000;
    }
    unint64_t v62 = v48;
    uint64_t v49 = v11[2];
    sub_1AFD2CD48();
    uint64_t v50 = swift_allocObject();
    if (v49)
    {
      *(_OWORD *)(v50 + 16) = xmmword_1AFFD0610;
      *(void *)(v50 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v50 + 64) = sub_1AFD2CE00();
      unint64_t v51 = v64;
      *(void *)(v50 + 32) = v72;
      *(void *)(v50 + 40) = v51;
      sub_1AFD3ABD0();
      *(void *)(v50 + 96) = v52;
      *(void *)(v50 + 104) = sub_1AFD5CDA0();
      *(void *)(v50 + 72) = v11;
      sub_1AFD2C4F4();
      sub_1AFFC8E38();
    }
    else
    {
      *(_OWORD *)(v50 + 16) = xmmword_1AFFD05F0;
      *(void *)(v50 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v50 + 64) = sub_1AFD2CE00();
      unint64_t v54 = v64;
      *(void *)(v50 + 32) = v72;
      *(void *)(v50 + 40) = v54;
      sub_1AFD2C4F4();
    }
    sub_1AFFC8E38();
    long long v53 = (void *)sub_1AFFCB638();
    sub_1AFFCB478();
    sub_1AFFCA878();
    swift_bridgeObjectRelease();

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_bridgeObjectRelease();
    unint64_t v55 = v64;
    *a2 = v72;
    a2[1] = v55;
    unint64_t v56 = v71;
    a2[2] = v70;
    a2[3] = v56;
    unint64_t v57 = v69;
    a2[4] = v68;
    a2[5] = v57;
    unint64_t v58 = v67;
    a2[6] = v66;
    a2[7] = v58;
    uint64_t v59 = v73;
    a2[8] = v65;
    a2[9] = (uint64_t)v59;
    unint64_t v60 = v62;
    a2[10] = v63;
    a2[11] = v60;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1AFE574E0()
{
  unint64_t result = qword_1EB819840;
  if (!qword_1EB819840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819840);
  }
  return result;
}

uint64_t sub_1AFE57538(void *a1)
{
  sub_1AFE579C0(0, &qword_1EB81A090, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v15 - v6;
  uint64_t v8 = v1[2];
  v15[9] = v1[3];
  _OWORD v15[10] = v8;
  uint64_t v9 = v1[4];
  v15[7] = v1[5];
  v15[8] = v9;
  uint64_t v10 = v1[6];
  uint64_t v15[5] = v1[7];
  v15[6] = v10;
  uint64_t v11 = v1[9];
  v15[3] = v1[8];
  long long v15[4] = v11;
  uint64_t v12 = v1[10];
  v15[1] = v1[11];
  _OWORD v15[2] = v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFE574E0();
  sub_1AFFCBE78();
  char v21 = 0;
  uint64_t v13 = v15[11];
  sub_1AFFCBC08();
  if (!v13)
  {
    char v20 = 1;
    sub_1AFFCBC08();
    char v19 = 2;
    sub_1AFFCBC08();
    char v18 = 3;
    sub_1AFFCBC08();
    char v17 = 4;
    sub_1AFFCBC08();
    char v16 = 5;
    sub_1AFFCBC08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1AFE577A4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1AFE56A38(a1, a2);
}

uint64_t sub_1AFE577BC(void *a1)
{
  return sub_1AFE57538(a1);
}

uint64_t sub_1AFE577D8(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v3 = a1[4];
  uint64_t v5 = a1[5];
  uint64_t v26 = a1[7];
  uint64_t v27 = a1[6];
  uint64_t v23 = a1[9];
  uint64_t v20 = a1[11];
  uint64_t v21 = a1[10];
  uint64_t v7 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v9 = a2[4];
  uint64_t v8 = a2[5];
  uint64_t v11 = a2[6];
  uint64_t v10 = a2[7];
  uint64_t v24 = a2[8];
  uint64_t v25 = a1[8];
  uint64_t v22 = a2[9];
  uint64_t v18 = a2[11];
  uint64_t v19 = a2[10];
  if (*a1 == *a2 && a1[1] == a2[1] || (v12 = sub_1AFFCBCE8(), uint64_t result = 0, (v12 & 1) != 0))
  {
    if (v2 == v7 && v4 == v6 || (v14 = sub_1AFFCBCE8(), uint64_t result = 0, (v14 & 1) != 0))
    {
      if (v3 == v9 && v5 == v8 || (v15 = sub_1AFFCBCE8(), uint64_t result = 0, (v15 & 1) != 0))
      {
        if (v27 == v11 && v26 == v10 || (v16 = sub_1AFFCBCE8(), uint64_t result = 0, (v16 & 1) != 0))
        {
          if (v25 == v24 && v23 == v22 || (v17 = sub_1AFFCBCE8(), uint64_t result = 0, (v17 & 1) != 0))
          {
            if (v21 == v19 && v20 == v18)
            {
              return 1;
            }
            else
            {
              return sub_1AFFCBCE8();
            }
          }
        }
      }
    }
  }
  return result;
}

void sub_1AFE579C0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1AFE574E0();
    unint64_t v7 = a3(a1, &type metadata for TopStoriesStyleConfiguration.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t destroy for TopStoriesStyleConfiguration()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for TopStoriesStyleConfiguration(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  uint64_t v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  return a1;
}

void *assignWithCopy for TopStoriesStyleConfiguration(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy96_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

void *assignWithTake for TopStoriesStyleConfiguration(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TopStoriesStyleConfiguration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TopStoriesStyleConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TopStoriesStyleConfiguration()
{
  return &type metadata for TopStoriesStyleConfiguration;
}

unsigned char *storeEnumTagSinglePayload for TopStoriesStyleConfiguration.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *__n128 result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFE57E20);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TopStoriesStyleConfiguration.CodingKeys()
{
  return &type metadata for TopStoriesStyleConfiguration.CodingKeys;
}

unint64_t sub_1AFE57E5C()
{
  unint64_t result = qword_1E9AFB808;
  if (!qword_1E9AFB808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB808);
  }
  return result;
}

unint64_t sub_1AFE57EB4()
{
  unint64_t result = qword_1EB819850;
  if (!qword_1EB819850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819850);
  }
  return result;
}

unint64_t sub_1AFE57F0C()
{
  unint64_t result = qword_1EB819848;
  if (!qword_1EB819848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819848);
  }
  return result;
}

uint64_t sub_1AFE57F60()
{
  unint64_t v0 = sub_1AFFCBA78();
  swift_bridgeObjectRelease();
  if (v0 >= 6) {
    return 6;
  }
  else {
    return v0;
  }
}

uint64_t sub_1AFE57FAC(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (!v1) {
    return v2;
  }
  uint64_t v24 = MEMORY[0x1E4FBC860];
  sub_1AFD9DA10(0, v1, 0);
  uint64_t v2 = v24;
  uint64_t result = sub_1AFE599C8(a1);
  uint64_t v6 = result;
  uint64_t v7 = 0;
  uint64_t v8 = a1 + 64;
  int64_t v20 = v1;
  int v21 = v5;
  uint64_t v22 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v11 = (unint64_t)v6 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v5) {
      goto LABEL_24;
    }
    uint64_t v23 = v7;
    sub_1AFFC8E38();
    sub_1AFFCAFA8();
    sub_1AFFCAD78();
    sub_1AFFCAFA8();
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v13 = *(void *)(v24 + 16);
    unint64_t v12 = *(void *)(v24 + 24);
    if (v13 >= v12 >> 1) {
      uint64_t result = sub_1AFD9DA10(v12 > 1, v13 + 1, 1);
    }
    *(void *)(v24 + 16) = v13 + 1;
    uint64_t v14 = v24 + 16 * v13;
    *(void *)(v14 + 32) = 0;
    *(void *)(v14 + 40) = 0xE000000000000000;
    int64_t v9 = 1 << *(unsigned char *)(a1 + 32);
    if (v6 >= v9) {
      goto LABEL_25;
    }
    uint64_t v8 = a1 + 64;
    uint64_t v15 = *(void *)(v22 + 8 * v11);
    if ((v15 & (1 << v6)) == 0) {
      goto LABEL_26;
    }
    int v5 = v21;
    if (*(_DWORD *)(a1 + 36) != v21) {
      goto LABEL_27;
    }
    unint64_t v16 = v15 & (-2 << (v6 & 0x3F));
    if (v16)
    {
      int64_t v9 = __clz(__rbit64(v16)) | v6 & 0xFFFFFFFFFFFFFFC0;
      int64_t v10 = v20;
    }
    else
    {
      unint64_t v17 = v11 + 1;
      unint64_t v18 = (unint64_t)(v9 + 63) >> 6;
      int64_t v10 = v20;
      if (v11 + 1 < v18)
      {
        unint64_t v19 = *(void *)(v22 + 8 * v17);
        if (v19)
        {
LABEL_20:
          int64_t v9 = __clz(__rbit64(v19)) + (v17 << 6);
        }
        else
        {
          while (v18 - 2 != v11)
          {
            unint64_t v19 = *(void *)(a1 + 80 + 8 * v11++);
            if (v19)
            {
              unint64_t v17 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    uint64_t v7 = v23 + 1;
    uint64_t v6 = v9;
    if (v23 + 1 == v10) {
      return v2;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1AFE58214(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1)
  {
    int v3 = (void *)MEMORY[0x1E4FBC868];
LABEL_18:
    uint64_t v24 = sub_1AFFC8E38();
    sub_1AFE57FAC(v24);
    swift_bridgeObjectRelease();
    sub_1AFE596AC();
    sub_1AFE584EC();
    swift_bridgeObjectRelease();
    *(void *)(swift_allocObject() + 16) = v3;
    uint64_t v25 = (void *)sub_1AFFCA5E8();
    sub_1AFE16598();
    sub_1AFE59754();
    uint64_t v26 = sub_1AFFCA778();
    swift_release();
    swift_release();

    swift_bridgeObjectRelease();
    return v26;
  }
  uint64_t v2 = (uint64_t *)(sub_1AFFC8E38() + 40);
  int v3 = (void *)MEMORY[0x1E4FBC868];
  while (1)
  {
    uint64_t v28 = v1;
    uint64_t v6 = *(v2 - 1);
    uint64_t v5 = *v2;
    uint64_t v7 = sub_1AFFCAF28();
    uint64_t v9 = v8;
    sub_1AFFC8E38();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v12 = sub_1AFD79CC8(v7, v9);
    uint64_t v13 = v3[2];
    BOOL v14 = (v11 & 1) == 0;
    uint64_t v15 = v13 + v14;
    if (__OFADD__(v13, v14)) {
      break;
    }
    char v16 = v11;
    if (v3[3] >= v15)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v11) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_1AFEB8068();
        if (v16) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_1AFEB2018(v15, isUniquelyReferenced_nonNull_native);
      unint64_t v17 = sub_1AFD79CC8(v7, v9);
      if ((v16 & 1) != (v18 & 1)) {
        goto LABEL_21;
      }
      unint64_t v12 = v17;
      if (v16)
      {
LABEL_3:
        unsigned int v4 = (void *)(v3[7] + 16 * v12);
        swift_bridgeObjectRelease();
        *unsigned int v4 = v6;
        v4[1] = v5;
        goto LABEL_4;
      }
    }
    v3[(v12 >> 6) + 8] |= 1 << v12;
    unint64_t v19 = (uint64_t *)(v3[6] + 16 * v12);
    uint64_t *v19 = v7;
    v19[1] = v9;
    int64_t v20 = (void *)(v3[7] + 16 * v12);
    *int64_t v20 = v6;
    v20[1] = v5;
    uint64_t v21 = v3[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_20;
    }
    v3[2] = v23;
    sub_1AFFC8E38();
LABEL_4:
    v2 += 2;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v1 = v28 - 1;
    if (v28 == 1)
    {
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
  }
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  uint64_t result = sub_1AFFCBD68();
  __break(1u);
  return result;
}

uint64_t sub_1AFE584EC()
{
  return sub_1AFFCA748();
}

void sub_1AFE5858C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  unint64_t v17 = (void *)swift_allocObject();
  void v17[2] = a8;
  v17[3] = a9;
  v17[4] = a10;
  void v17[5] = a1;
  v17[6] = a2;
  sub_1AFFC8E48();
  id v18 = sub_1AFE58720(a5);
  unint64_t v19 = (void *)sub_1AFFCB1B8();
  int64_t v20 = (void *)swift_allocObject();
  v20[2] = a8;
  v20[3] = a9;
  v20[4] = a10;
  void v20[5] = sub_1AFE59814;
  v20[6] = v17;
  v20[7] = a3;
  v20[8] = a4;
  v20[9] = a7;
  aBlock[4] = sub_1AFE59894;
  void aBlock[5] = v20;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1AFE5910C;
  aBlock[3] = &block_descriptor_14;
  uint64_t v21 = _Block_copy(aBlock);
  sub_1AFFC8E48();
  sub_1AFFC8E38();
  swift_release();
  objc_msgSend(a6, sel_fetchRecordsWithIDs_cachePolicy_completion_, v19, v18, v21);
  _Block_release(v21);
}

id sub_1AFE58720(uint64_t a1)
{
  sub_1AFE166CC();
  MEMORY[0x1F4188790](v2 - 8);
  unsigned int v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1AFFC9DE8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (double *)((char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v7);
  char v11 = (char *)&v18 - v10;
  sub_1AFE59964(a1, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v4, v5);
    (*(void (**)(double *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
    int v14 = (*(uint64_t (**)(double *, uint64_t))(v6 + 88))(v9, v5);
    if (v14 == *MEMORY[0x1E4FAA8B8])
    {
      (*(void (**)(double *, uint64_t))(v6 + 96))(v9, v5);
      double v15 = *v9;
      id v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F7E2D8]), sel_init);
      objc_msgSend(v16, sel_setCachePolicy_, 3);
      objc_msgSend(v16, sel_setMaximumCachedAge_, v15);
      goto LABEL_15;
    }
    if (v14 == *MEMORY[0x1E4FAA8C0])
    {
      (*(void (**)(double *, uint64_t))(v6 + 96))(v9, v5);
      id v17 = objc_msgSend(self, sel_cachePolicyWithSoftMaxAge_, *v9);
    }
    else if (v14 == *MEMORY[0x1E4FAA8A0])
    {
      id v17 = objc_msgSend(self, sel_ignoreCacheCachePolicy);
    }
    else
    {
      if (v14 != *MEMORY[0x1E4FAA8B0])
      {
        if (v14 != *MEMORY[0x1E4FAA8A8])
        {
          id result = (id)sub_1AFFCB9A8();
          __break(1u);
          return result;
        }
        id v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F7E2D8]), sel_init);
        objc_msgSend(v16, sel_setCachePolicy_, 2);
        objc_msgSend(v16, sel_setMaximumCachedAge_, 1.79769313e308);
LABEL_15:
        (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
        return v16;
      }
      id v17 = objc_msgSend(self, sel_cachedOnlyCachePolicy);
    }
    id v16 = v17;
    goto LABEL_15;
  }
  sub_1AFD562CC((uint64_t)v4);
  id v12 = objc_msgSend(self, sel_defaultCachePolicy);

  return v12;
}

void sub_1AFE58B1C(uint64_t a1, void *a2, void (*a3)(void), uint64_t a4, void (*a5)(void *))
{
  if (a2)
  {
    swift_getErrorValue();
    id v8 = a2;
    if (sub_1AFE9DC24(v17))
    {
      swift_getTupleTypeMetadata2();
      sub_1AFFCB248();
      sub_1AFFCACC8();
      a3();

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AFFCB468();
      sub_1AFD2CD48();
      uint64_t v10 = swift_allocObject();
      *(_OWORD *)(v10 + 16) = xmmword_1AFFD0610;
      uint64_t v11 = sub_1AFFCBED8();
      uint64_t v13 = v12;
      uint64_t v14 = MEMORY[0x1E4FBB1A0];
      *(void *)(v10 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v15 = sub_1AFD2CE00();
      *(void *)(v10 + 64) = v15;
      *(void *)(v10 + 32) = v11;
      *(void *)(v10 + 40) = v13;
      sub_1AFD2CDB0(0, (unint64_t *)&qword_1EB81A110);
      sub_1AFFCB928();
      *(void *)(v10 + 96) = v14;
      *(void *)(v10 + 104) = v15;
      *(void *)(v10 + 72) = 0;
      *(void *)(v10 + 80) = 0xE000000000000000;
      sub_1AFD2C4F4();
      id v16 = (void *)sub_1AFFCB638();
      sub_1AFFCA878();
      swift_bridgeObjectRelease();

      a5(a2);
    }
  }
  else
  {
    uint64_t v9 = MEMORY[0x1E4FBB1A0];
    uint64_t v18 = sub_1AFFCAC58();
    MEMORY[0x1F4188790](v18);
    sub_1AFE5A428(0, (unint64_t *)&qword_1EB819DC0, v9, MEMORY[0x1E4FBB320]);
    sub_1AFFCAD18();
    sub_1AFE598E8();
    sub_1AFFCB0B8();
    a3();
    swift_bridgeObjectRelease();
  }
}

void sub_1AFE58E20(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_1AFFCB658();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v30 - v11;
  if (*(void *)(a3 + 16))
  {
    uint64_t v13 = *a2;
    uint64_t v14 = a2[1];
    sub_1AFFC8E38();
    unint64_t v15 = sub_1AFD79CC8(v13, v14);
    if (v16)
    {
      uint64_t v30 = a1;
      uint64_t v17 = (uint64_t *)(*(void *)(a3 + 56) + 16 * v15);
      uint64_t v18 = *v17;
      unint64_t v19 = v17[1];
      sub_1AFD4B0E0(*v17, v19);
      swift_bridgeObjectRelease();
      sub_1AFFC9198();
      swift_allocObject();
      sub_1AFFC8E38();
      sub_1AFFC9188();
      uint64_t v31 = v18;
      unint64_t v20 = v19;
      sub_1AFFC9168();
      swift_release();
      if (v5)
      {
        swift_bridgeObjectRelease();
        sub_1AFFCB468();
        sub_1AFD2CD48();
        uint64_t v21 = swift_allocObject();
        *(_OWORD *)(v21 + 16) = xmmword_1AFFD0610;
        uint64_t v22 = sub_1AFFCBED8();
        uint64_t v24 = v23;
        uint64_t v25 = MEMORY[0x1E4FBB1A0];
        *(void *)(v21 + 56) = MEMORY[0x1E4FBB1A0];
        unint64_t v26 = sub_1AFD2CE00();
        *(void *)(v21 + 64) = v26;
        *(void *)(v21 + 32) = v22;
        *(void *)(v21 + 40) = v24;
        uint64_t v32 = 0;
        unint64_t v33 = 0xE000000000000000;
        unint64_t v34 = v5;
        sub_1AFD2CDB0(0, (unint64_t *)&qword_1EB81A110);
        sub_1AFFCB928();
        uint64_t v27 = v32;
        unint64_t v28 = v33;
        *(void *)(v21 + 96) = v25;
        *(void *)(v21 + 104) = v26;
        *(void *)(v21 + 72) = v27;
        *(void *)(v21 + 80) = v28;
        sub_1AFD2C4F4();
        unint64_t v29 = (void *)sub_1AFFCB638();
        sub_1AFFCA878();
        sub_1AFD4B504(v31, v20);
        swift_bridgeObjectRelease();
      }
      else
      {
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(a5 - 8) + 56))(v12, 0, 1, a5);
        uint64_t v32 = v13;
        unint64_t v33 = v14;
        sub_1AFFCAD18();
        sub_1AFFCAD38();
        sub_1AFD4B504(v31, v19);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
}

void sub_1AFE5910C(uint64_t a1, uint64_t a2, void *a3)
{
  unsigned int v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  uint64_t v5 = sub_1AFFCAC88();
  sub_1AFFC8E48();
  id v6 = a3;
  v4(v5, a3);
  swift_release();
  swift_bridgeObjectRelease();
}

uint64_t sub_1AFE591AC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 40);
  uint64_t v8 = *(void *)(a2 + 48);
  uint64_t v9 = *(void *)(a2 + 88);
  char v10 = *(unsigned char *)(a2 + 96);
  uint64_t v11 = *(void *)(a2 + 104);
  uint64_t v12 = *(void *)(a2 + 112);
  v22[0] = *(void *)(a2 + 16);
  v22[1] = v5;
  v22[2] = v6;
  v22[3] = v7;
  v22[4] = v8;
  long long v23 = *(_OWORD *)(a2 + 56);
  long long v24 = *(_OWORD *)(a2 + 72);
  uint64_t v25 = v9;
  char v26 = v10;
  uint64_t v27 = v11;
  uint64_t v28 = v12;
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  uint64_t v13 = sub_1AFFCAF28();
  if (*(void *)(a3 + 16) && (unint64_t v15 = sub_1AFD79CC8(v13, v14), (v16 & 1) != 0))
  {
    uint64_t v17 = (uint64_t *)(*(void *)(a3 + 56) + 16 * v15);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    sub_1AFFC8E38();
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v29 = *a1;
    *a1 = 0x8000000000000000;
    sub_1AFE04318((uint64_t)v22, v18, v19, isUniquelyReferenced_nonNull_native);
    *a1 = v29;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFE5933C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
    uint64_t v5 = (void *)MEMORY[0x1E4FBC868];
LABEL_18:
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFE59A78(MEMORY[0x1E4FBC860], (uint64_t)v5, v2);
    swift_bridgeObjectRelease();
    uint64_t v26 = swift_bridgeObjectRelease();
    MEMORY[0x1F4188790](v26);
    sub_1AFE16598();
    sub_1AFFCA7C8();
    swift_bridgeObjectRelease();
    *(void *)(swift_allocObject() + 16) = v5;
    uint64_t v27 = (void *)sub_1AFFCA5E8();
    sub_1AFE59E20();
    uint64_t v28 = sub_1AFFCA678();
    swift_release();
    swift_release();

    return v28;
  }
  unsigned int v4 = (uint64_t *)(sub_1AFFC8E38() + 40);
  uint64_t v5 = (void *)MEMORY[0x1E4FBC868];
  while (1)
  {
    uint64_t v31 = v3;
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    uint64_t v9 = sub_1AFFCAF28();
    uint64_t v11 = v10;
    sub_1AFFC8E38();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v14 = sub_1AFD79CC8(v9, v11);
    uint64_t v15 = v5[2];
    BOOL v16 = (v13 & 1) == 0;
    uint64_t v17 = v15 + v16;
    if (__OFADD__(v15, v16)) {
      break;
    }
    char v18 = v13;
    if (v5[3] >= v17)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v13) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_1AFEB8068();
        if (v18) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_1AFEB2018(v17, isUniquelyReferenced_nonNull_native);
      unint64_t v19 = sub_1AFD79CC8(v9, v11);
      if ((v18 & 1) != (v20 & 1)) {
        goto LABEL_21;
      }
      unint64_t v14 = v19;
      if (v18)
      {
LABEL_3:
        uint64_t v6 = (void *)(v5[7] + 16 * v14);
        swift_bridgeObjectRelease();
        *uint64_t v6 = v8;
        v6[1] = v7;
        goto LABEL_4;
      }
    }
    v5[(v14 >> 6) + 8] |= 1 << v14;
    uint64_t v21 = (uint64_t *)(v5[6] + 16 * v14);
    *uint64_t v21 = v9;
    v21[1] = v11;
    uint64_t v22 = (void *)(v5[7] + 16 * v14);
    *uint64_t v22 = v8;
    v22[1] = v7;
    uint64_t v23 = v5[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24) {
      goto LABEL_20;
    }
    v5[2] = v25;
    sub_1AFFC8E38();
LABEL_4:
    v4 += 2;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v3 = v31 - 1;
    if (v31 == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v2 = a2;
      goto LABEL_18;
    }
  }
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  uint64_t result = sub_1AFFCBD68();
  __break(1u);
  return result;
}

uint64_t sub_1AFE59648@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = *a1;
  sub_1AFFC8E38();
  uint64_t v6 = sub_1AFE59EAC(MEMORY[0x1E4FBC868], v5, a2);
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v6;
  return result;
}

unint64_t sub_1AFE596AC()
{
  unint64_t result = qword_1EB816820[0];
  if (!qword_1EB816820[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EB816820);
  }
  return result;
}

uint64_t sub_1AFE59700()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1AFE59738(uint64_t *a1, uint64_t a2)
{
  return sub_1AFE591AC(a1, a2, *(void *)(v2 + 16));
}

unint64_t sub_1AFE59754()
{
  unint64_t result = qword_1EB817E60;
  if (!qword_1EB817E60)
  {
    sub_1AFE16598();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817E60);
  }
  return result;
}

void sub_1AFE597AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1AFE5858C(a1, a2, a3, a4, *(void *)(v4 + 40), *(void **)(v4 + 48), *(void *)(v4 + 56), *(void *)(v4 + 16), *(void *)(v4 + 24), *(void *)(v4 + 32));
}

uint64_t sub_1AFE597DC()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1AFE59814(uint64_t a1)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t *))(v1 + 40);
  uint64_t v4 = a1;
  return v2(&v4);
}

uint64_t sub_1AFE5984C()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 80, 7);
}

void sub_1AFE59894(uint64_t a1, void *a2)
{
  sub_1AFE58B1C(a1, a2, *(void (**)(void))(v2 + 40), *(void *)(v2 + 48), *(void (**)(void *))(v2 + 56));
}

void sub_1AFE598C8(uint64_t a1, uint64_t *a2)
{
  sub_1AFE58E20(a1, a2, v2[5], v2[2], v2[3]);
}

unint64_t sub_1AFE598E8()
{
  unint64_t result = qword_1EB818030;
  if (!qword_1EB818030)
  {
    sub_1AFE5A428(255, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818030);
  }
  return result;
}

uint64_t sub_1AFE59964(uint64_t a1, uint64_t a2)
{
  sub_1AFE166CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AFE599C8(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 80);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v1 = *(void *)(a1 + 88);
  if (v1)
  {
    uint64_t v2 = 192;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 4) {
    unint64_t v7 = 4;
  }
  unint64_t v8 = v7 - 4;
  uint64_t v9 = (unint64_t *)(a1 + 96);
  uint64_t v2 = 192;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_1AFE59A78(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a2 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  uint64_t v8 = v7 & *(void *)(a2 + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t result = sub_1AFFC8E38();
  int64_t v11 = 0;
  uint64_t v21 = (void *)(a3 + 40);
  int64_t v22 = v9;
  uint64_t v24 = a3;
  uint64_t v23 = v5;
  if (v8) {
    goto LABEL_4;
  }
  while (1)
  {
    if (__OFADD__(v11++, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v11 >= v9) {
      goto LABEL_34;
    }
    uint64_t v14 = *(void *)(v5 + 8 * v11);
    if (v14) {
      goto LABEL_16;
    }
    int64_t v15 = v11 + 1;
    if (v11 + 1 >= v9) {
      goto LABEL_34;
    }
    uint64_t v14 = *(void *)(v5 + 8 * v15);
    if (!v14)
    {
      int64_t v15 = v11 + 2;
      if (v11 + 2 >= v9) {
        goto LABEL_34;
      }
      uint64_t v14 = *(void *)(v5 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v11 + 3;
        if (v11 + 3 >= v9) {
          goto LABEL_34;
        }
        uint64_t v14 = *(void *)(v5 + 8 * v15);
        if (!v14) {
          break;
        }
      }
    }
    int64_t v11 = v15;
LABEL_16:
    uint64_t v8 = (v14 - 1) & v14;
    uint64_t v12 = *(void *)(a3 + 16);
    if (v12)
    {
LABEL_17:
      int64_t v25 = v11;
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      BOOL v16 = v21;
      do
      {
        if (*v16)
        {
          sub_1AFFC8E38();
          sub_1AFFCAFA8();
          sub_1AFFCAD78();
          sub_1AFFCAFA8();
          sub_1AFFCAD78();
          sub_1AFFCAFA8();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_1AFFCAFA8();
          sub_1AFFCAD78();
          sub_1AFFCAFA8();
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          a1 = sub_1AFD352FC(0, a1[2] + 1, 1, a1);
        }
        unint64_t v18 = a1[2];
        unint64_t v17 = a1[3];
        if (v18 >= v17 >> 1) {
          a1 = sub_1AFD352FC((void *)(v17 > 1), v18 + 1, 1, a1);
        }
        a1[2] = v18 + 1;
        unint64_t v19 = &a1[2 * v18];
        v19[4] = 0;
        v19[5] = 0xE000000000000000;
        v16 += 2;
        --v12;
      }
      while (v12);
      swift_bridgeObjectRelease();
      a3 = v24;
      uint64_t result = swift_bridgeObjectRelease();
      int64_t v11 = v25;
      int64_t v9 = v22;
      uint64_t v5 = v23;
      if (v8) {
        goto LABEL_4;
      }
    }
    else
    {
      while (2)
      {
        if (v8)
        {
LABEL_4:
          v8 &= v8 - 1;
          uint64_t v12 = *(void *)(a3 + 16);
          if (!v12) {
            continue;
          }
          goto LABEL_17;
        }
        break;
      }
    }
  }
  int64_t v20 = v11 + 4;
  if (v11 + 4 >= v9)
  {
LABEL_34:
    swift_release();
    return (uint64_t)a1;
  }
  uint64_t v14 = *(void *)(v5 + 8 * v20);
  v11 += 4;
  if (v14) {
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v11 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v11 >= v9) {
      goto LABEL_34;
    }
    uint64_t v14 = *(void *)(v5 + 8 * v11);
    ++v20;
    if (v14) {
      goto LABEL_16;
    }
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1AFE59DA4()
{
  return sub_1AFE584EC();
}

uint64_t sub_1AFE59E04@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1AFE59648(a1, *(void *)(v2 + 16), a2);
}

void sub_1AFE59E20()
{
  if (!qword_1EB817EA8)
  {
    sub_1AFE5A428(255, (unint64_t *)&unk_1EB816AA8, (uint64_t)&type metadata for StockRecord, MEMORY[0x1E4FBB320]);
    unint64_t v0 = sub_1AFFCAD18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB817EA8);
    }
  }
}

uint64_t sub_1AFE59EAC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v51 = a2 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a2 + 64);
  int64_t v52 = (unint64_t)(v3 + 63) >> 6;
  sub_1AFFC8E38();
  int64_t v6 = 0;
  if (!v5) {
    goto LABEL_5;
  }
LABEL_4:
  uint64_t v61 = (v5 - 1) & v5;
  int64_t v62 = v6;
  for (unint64_t i = __clz(__rbit64(v5)) | (v6 << 6); ; unint64_t i = __clz(__rbit64(v9)) + (v10 << 6))
  {
    uint64_t v12 = *(void *)(a2 + 56) + 104 * i;
    uint64_t v13 = *(void *)v12;
    uint64_t v14 = *(void *)(v12 + 8);
    uint64_t v58 = *(void *)(v12 + 16);
    uint64_t v63 = *(void *)(v12 + 24);
    uint64_t v15 = *(void *)(v12 + 40);
    uint64_t v16 = *(void *)(v12 + 56);
    uint64_t v56 = *(void *)(v12 + 48);
    uint64_t v57 = *(void *)(v12 + 32);
    uint64_t v17 = *(void *)(v12 + 72);
    uint64_t v55 = *(void *)(v12 + 64);
    char v54 = *(unsigned char *)(v12 + 80);
    uint64_t v18 = *(void *)(v12 + 96);
    uint64_t v53 = *(void *)(v12 + 88);
    uint64_t v19 = sub_1AFFCAF28();
    uint64_t v21 = v20;
    if (!*(void *)(a3 + 16)) {
      goto LABEL_24;
    }
    uint64_t v22 = v19;
    swift_bridgeObjectRetain_n();
    sub_1AFFC8E38();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    unint64_t v23 = sub_1AFD79CC8(v22, v21);
    if ((v24 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      goto LABEL_24;
    }
    int64_t v25 = (uint64_t *)(*(void *)(a3 + 56) + 16 * v23);
    uint64_t v26 = v25[1];
    uint64_t v49 = *v25;
    sub_1AFFC8E38();
    swift_bridgeObjectRelease();
    sub_1AFE5A428(0, &qword_1EB818350, (uint64_t)&type metadata for StockRecord, MEMORY[0x1E4FBBE00]);
    uint64_t v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_1AFFD05F0;
    *(void *)(v27 + 32) = v13;
    *(void *)(v27 + 40) = v14;
    *(void *)(v27 + 48) = v58;
    *(void *)(v27 + 56) = v63;
    *(void *)(v27 + 64) = v57;
    *(void *)(v27 + 72) = v15;
    *(void *)(v27 + 80) = v56;
    *(void *)(v27 + 88) = v16;
    *(void *)(v27 + 96) = v55;
    *(void *)(v27 + 104) = v17;
    *(unsigned char *)(v27 + 112) = v54;
    *(void *)(v27 + 120) = v53;
    *(void *)(v27 + 128) = v18;
    if (a1[2])
    {
      sub_1AFFC8E38();
      uint64_t v28 = v49;
      unint64_t v29 = sub_1AFD79CC8(v49, v26);
      uint64_t v30 = MEMORY[0x1E4FBC860];
      if (v31)
      {
        uint64_t v30 = *(void *)(a1[7] + 8 * v29);
        sub_1AFFC8E38();
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v28 = v49;
      uint64_t v30 = MEMORY[0x1E4FBC860];
    }
    uint64_t v32 = v26;
    sub_1AFF0F7DC(v30);
    uint64_t v33 = v27;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v36 = sub_1AFD79CC8(v28, v32);
    uint64_t v37 = a1[2];
    BOOL v38 = (v35 & 1) == 0;
    uint64_t v39 = v37 + v38;
    if (__OFADD__(v37, v38)) {
      goto LABEL_46;
    }
    if (a1[3] >= v39)
    {
      if (isUniquelyReferenced_nonNull_native) {
        goto LABEL_37;
      }
      char v40 = v35;
      sub_1AFEB9404();
    }
    else
    {
      char v40 = v35;
      sub_1AFEB415C(v39, isUniquelyReferenced_nonNull_native);
      unint64_t v41 = sub_1AFD79CC8(v28, v32);
      if ((v40 & 1) != (v42 & 1)) {
        goto LABEL_48;
      }
      unint64_t v36 = v41;
    }
    char v35 = v40;
LABEL_37:
    if (v35)
    {
      uint64_t v43 = a1[7];
      swift_bridgeObjectRelease();
      *(void *)(v43 + 8 * v36) = v33;
    }
    else
    {
      a1[(v36 >> 6) + 8] |= 1 << v36;
      uint64_t v44 = (uint64_t *)(a1[6] + 16 * v36);
      uint64_t *v44 = v28;
      v44[1] = v32;
      *(void *)(a1[7] + 8 * v36) = v33;
      uint64_t v45 = a1[2];
      BOOL v46 = __OFADD__(v45, 1);
      uint64_t v47 = v45 + 1;
      if (v46) {
        goto LABEL_47;
      }
      a1[2] = v47;
      sub_1AFFC8E38();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_24:
    swift_bridgeObjectRelease();
    unint64_t v5 = v61;
    int64_t v6 = v62;
    if (v61) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v8 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_45;
    }
    if (v8 >= v52) {
      goto LABEL_43;
    }
    unint64_t v9 = *(void *)(v51 + 8 * v8);
    int64_t v10 = v6 + 1;
    if (!v9)
    {
      int64_t v10 = v6 + 2;
      if (v6 + 2 >= v52) {
        goto LABEL_43;
      }
      unint64_t v9 = *(void *)(v51 + 8 * v10);
      if (!v9)
      {
        int64_t v10 = v6 + 3;
        if (v6 + 3 >= v52) {
          goto LABEL_43;
        }
        unint64_t v9 = *(void *)(v51 + 8 * v10);
        if (!v9)
        {
          int64_t v10 = v6 + 4;
          if (v6 + 4 >= v52) {
            goto LABEL_43;
          }
          unint64_t v9 = *(void *)(v51 + 8 * v10);
          if (!v9) {
            break;
          }
        }
      }
    }
LABEL_20:
    uint64_t v61 = (v9 - 1) & v9;
    int64_t v62 = v10;
  }
  uint64_t v11 = v6 + 5;
  if (v6 + 5 >= v52)
  {
LABEL_43:
    swift_release();
    return (uint64_t)a1;
  }
  unint64_t v9 = *(void *)(v51 + 8 * v11);
  if (v9)
  {
    int64_t v10 = v6 + 5;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v10 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v10 >= v52) {
      goto LABEL_43;
    }
    unint64_t v9 = *(void *)(v51 + 8 * v10);
    ++v11;
    if (v9) {
      goto LABEL_20;
    }
  }
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  uint64_t result = sub_1AFFCBD68();
  __break(1u);
  return result;
}

void sub_1AFE5A428(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1AFE5A478(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  sub_1AFE60658(0);
  MEMORY[0x1F4188790](v8 - 8);
  int64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for QuoteDetail();
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v14 + 48))(a1, 1) == 1)
  {
    sub_1AFE6068C(a1, (uint64_t (*)(void))sub_1AFE60658);
    sub_1AFE023E8(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_1AFE6068C((uint64_t)v10, (uint64_t (*)(void))sub_1AFE60658);
  }
  else
  {
    sub_1AFE606EC(a1, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for QuoteDetail);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    sub_1AFE039D8((uint64_t)v13, a2, a3, isUniquelyReferenced_nonNull_native);
    *uint64_t v4 = v18;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1AFE5A650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  sub_1AFD66D2C(0);
  MEMORY[0x1F4188790](v8 - 8);
  int64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Quote();
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v14 + 48))(a1, 1) == 1)
  {
    sub_1AFE6068C(a1, (uint64_t (*)(void))sub_1AFD66D2C);
    sub_1AFE0243C(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_1AFE6068C((uint64_t)v10, (uint64_t (*)(void))sub_1AFD66D2C);
  }
  else
  {
    sub_1AFE606EC(a1, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for Quote);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    sub_1AFE03B44((uint64_t)v13, a2, a3, isUniquelyReferenced_nonNull_native);
    *uint64_t v4 = v18;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1AFE5A828(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  sub_1AFE602C4(0);
  MEMORY[0x1F4188790](v8 - 8);
  int64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for EarningsCalendarEventModel();
  double v12 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, double))(v15 + 48))(a1, 1, v12) == 1)
  {
    sub_1AFE6068C(a1, (uint64_t (*)(void))sub_1AFE602C4);
    sub_1AFE029EC(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_1AFE6068C((uint64_t)v10, (uint64_t (*)(void))sub_1AFE602C4);
  }
  else
  {
    sub_1AFE606EC(a1, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for EarningsCalendarEventModel);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    sub_1AFE04464((uint64_t)v14, a2, a3, isUniquelyReferenced_nonNull_native);
    *uint64_t v4 = v19;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1AFE5AA00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  sub_1AFE60624(0);
  MEMORY[0x1F4188790](v8 - 8);
  int64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Chart(0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v14 + 48))(a1, 1) == 1)
  {
    sub_1AFE6068C(a1, (uint64_t (*)(void))sub_1AFE60624);
    sub_1AFE02A40(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_1AFE6068C((uint64_t)v10, (uint64_t (*)(void))sub_1AFE60624);
  }
  else
  {
    sub_1AFE606EC(a1, (uint64_t)v13, type metadata accessor for Chart);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    sub_1AFE045D0((uint64_t)v13, a2, a3, isUniquelyReferenced_nonNull_native);
    *uint64_t v4 = v18;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1AFE5ABD8(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24))
  {
    sub_1AFD8DDEC((_OWORD *)a1, v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_1AFE04EC8(v9, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v8;
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_1AFFCB948();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a2, v5);
  }
  else
  {
    sub_1AFD3BDB4(a1);
    sub_1AFE02A94(a2, v9);
    uint64_t v7 = sub_1AFFCB948();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(a2, v7);
    return sub_1AFD3BDB4((uint64_t)v9);
  }
}

uint64_t sub_1AFE5ACE8()
{
  uint64_t v1 = *v0;
  sub_1AFFC8E38();
  return v1;
}

uint64_t sub_1AFE5AD18()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_1AFFC8E38();
  return v1;
}

uint64_t sub_1AFE5AD48@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EarningsCalendarEventModel() + 24);
  uint64_t v4 = sub_1AFFC98F8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for EarningsCalendarEventModel()
{
  uint64_t result = qword_1EB810FA8;
  if (!qword_1EB810FA8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1AFE5AE0C()
{
  uint64_t v1 = 0x656449746E657665;
  if (*v0 != 1) {
    uint64_t v1 = 0x73676E696E726165;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6D79536B636F7473;
  }
}

uint64_t sub_1AFE5AE84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1AFE5F958(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AFE5AEAC(uint64_t a1)
{
  unint64_t v2 = sub_1AFE5B11C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFE5AEE8(uint64_t a1)
{
  unint64_t v2 = sub_1AFE5B11C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFE5AF24(void *a1)
{
  sub_1AFE5B51C(0, &qword_1E9AFB810, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = &v9[-v6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFE5B11C();
  sub_1AFFCBE78();
  v9[15] = 0;
  sub_1AFFCBC08();
  if (!v1)
  {
    v9[14] = 1;
    sub_1AFFCBC08();
    type metadata accessor for EarningsCalendarEventModel();
    v9[13] = 2;
    sub_1AFFC98F8();
    sub_1AFE6037C((unint64_t *)&unk_1EB818B90, 255, MEMORY[0x1E4F27928]);
    sub_1AFFCBC58();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1AFE5B11C()
{
  unint64_t result = qword_1E9AFB818;
  if (!qword_1E9AFB818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB818);
  }
  return result;
}

uint64_t sub_1AFE5B170@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v23 = sub_1AFFC98F8();
  uint64_t v20 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFE5B51C(0, &qword_1E9AFB820, MEMORY[0x1E4FBBDC0]);
  uint64_t v24 = v6;
  uint64_t v22 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v17 - v7;
  uint64_t v9 = type metadata accessor for EarningsCalendarEventModel();
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (uint64_t *)((char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFE5B11C();
  sub_1AFFCBE68();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v19 = a1;
  uint64_t v12 = v22;
  uint64_t v13 = v23;
  char v27 = 0;
  *uint64_t v11 = sub_1AFFCBB18();
  v11[1] = v14;
  char v26 = 1;
  void v11[2] = sub_1AFFCBB18();
  v11[3] = v15;
  char v25 = 2;
  sub_1AFE6037C(&qword_1EB816CB0, 255, MEMORY[0x1E4F27928]);
  uint64_t v18 = v5;
  sub_1AFFCBB58();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v24);
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))((char *)v11 + *(int *)(v9 + 24), v18, v13);
  sub_1AFE5B580((uint64_t)v11, v21);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  return sub_1AFE6068C((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for EarningsCalendarEventModel);
}

void sub_1AFE5B51C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1AFE5B11C();
    unint64_t v7 = a3(a1, &type metadata for EarningsCalendarEventModel.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1AFE5B580(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EarningsCalendarEventModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AFE5B5E4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1AFE5B170(a1, a2);
}

uint64_t sub_1AFE5B5FC(void *a1)
{
  return sub_1AFE5AF24(a1);
}

uint64_t *sub_1AFE5B614(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    uint64_t *v3 = *a2;
    uint64_t v3 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    sub_1AFFC8E48();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1AFFC98F8();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    v11(v8, v9, v10);
  }
  return v3;
}

uint64_t sub_1AFE5B70C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1AFFC98F8();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_1AFE5B78C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1AFFC98F8();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  v10(v7, v8, v9);
  return a1;
}

void *sub_1AFE5B834(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1AFFC98F8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *sub_1AFE5B8F0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1AFFC98F8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

void *sub_1AFE5B96C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_1AFFC98F8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t sub_1AFE5BA08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1AFE5BA1C);
}

uint64_t sub_1AFE5BA1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1AFFC98F8();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1AFE5BACC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1AFE5BAE0);
}

uint64_t sub_1AFE5BAE0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1AFFC98F8();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1AFE5BB88()
{
  uint64_t result = sub_1AFFC98F8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1AFE5BC20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_1AFE5BC34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t sub_1AFE5BC48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 40))();
}

uint64_t sub_1AFE5BC5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

unint64_t sub_1AFE5BC70()
{
  return 0xD000000000000023;
}

uint64_t sub_1AFE5BC8C()
{
  return 0x302E312E31;
}

uint64_t sub_1AFE5BCA0@<X0>(uint64_t *a1@<X8>)
{
  sub_1AFFCA508();
  sub_1AFE5FFBC(0, &qword_1EB8111B8, MEMORY[0x1E4FAA660]);
  swift_allocObject();
  uint64_t result = sub_1AFFCA988();
  *a1 = result;
  return result;
}

void sub_1AFE5BD4C()
{
  sub_1AFE5FF54(0, &qword_1EB8111B0, &qword_1EB8111A8, MEMORY[0x1E4FAA650], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v10 - v1;
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_1AFFCA508();
    sub_1AFFCA998();
    swift_release();
    sub_1AFE5FFBC(0, &qword_1EB8111A8, MEMORY[0x1E4FAA650]);
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)(v3 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v2, 1, v3) == 1)
    {
      __break(1u);
    }
    else
    {
      sub_1AFFCA978();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v2, v4);
      uint64_t v6 = (void *)sub_1AFFCA5E8();
      sub_1AFE60754(0, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
      sub_1AFFCA668();
      swift_release();

      sub_1AFFC8E48();
      uint64_t v7 = (void *)sub_1AFFCA5E8();
      sub_1AFE600D8();
      sub_1AFFCA668();
      swift_release();
      swift_release();

      sub_1AFFC8E48();
      uint64_t v8 = (void *)sub_1AFFCA5E8();
      sub_1AFFCA678();
      swift_release();
      swift_release();

      uint64_t v9 = (void *)sub_1AFFCA5E8();
      sub_1AFFCA6B8();
      swift_release();
      swift_release();
      swift_release();
    }
  }
}

uint64_t sub_1AFE5C044()
{
  return sub_1AFFCA6F8();
}

uint64_t sub_1AFE5C0A4()
{
  uint64_t v0 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAA650];
  sub_1AFE5FF54(0, &qword_1EB8111B0, &qword_1EB8111A8, MEMORY[0x1E4FAA650], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  sub_1AFFCA508();
  sub_1AFFCA998();
  swift_release();
  sub_1AFE5FFBC(0, &qword_1EB8111A8, v0);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v3, 1, v4);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v8 = sub_1AFFCA948();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v3, v5);
    return v8;
  }
  return result;
}

uint64_t sub_1AFE5C230(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EarningsCalendarEventModel();
  uint64_t v70 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v73 = (uint64_t)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFE6015C(0);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v72 = (uint64_t *)((char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v10);
  unint64_t v71 = (uint64_t *)((char *)&v61 - v11);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (uint64_t *)((char *)&v61 - v13);
  sub_1AFE5FE54(0, &qword_1EB811290, (uint64_t (*)(uint64_t))sub_1AFE6015C, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (uint64_t *)((char *)&v61 - v16);
  uint64_t v18 = *a1;
  uint64_t v62 = a2;
  sub_1AFFC8E48();
  sub_1AFFC9D78();
  swift_release();
  uint64_t v19 = -1 << *(unsigned char *)(v18 + 32);
  uint64_t v20 = *(void *)(v18 + 64);
  uint64_t v21 = ~v19;
  uint64_t v22 = -v19;
  uint64_t v75 = v18;
  uint64_t v76 = v18 + 64;
  if (v22 < 64) {
    uint64_t v23 = ~(-1 << v22);
  }
  else {
    uint64_t v23 = -1;
  }
  uint64_t v77 = v21;
  uint64_t v78 = 0;
  uint64_t v79 = v23 & v20;
  uint64_t v80 = 0;
  sub_1AFFC8E38();
  sub_1AFE5C7E0(v17);
  uint64_t v68 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48);
  uint64_t v69 = v8 + 48;
  if (v68(v17, 1, v7) == 1)
  {
LABEL_5:
    sub_1AFD762B0();
    sub_1AFFC8E48();
    sub_1AFFC9D88();
    return swift_release();
  }
  char v25 = (void *)(v62 + 24);
  sub_1AFE6018C(0);
  uint64_t v65 = v7;
  uint64_t v66 = v26;
  uint64_t v63 = v17;
  unint64_t v64 = v14;
  unint64_t v67 = v25;
  uint64_t v27 = v26;
  while (1)
  {
    uint64_t v28 = *(int *)(v7 + 48);
    unint64_t v29 = (void *)((char *)v14 + v28);
    uint64_t v30 = *(int *)(v27 + 48);
    uint64_t v31 = (uint64_t)v14 + v28 + v30;
    uint64_t v32 = *v17;
    uint64_t v33 = (void *)((char *)v17 + v28);
    uint64_t v35 = *v33;
    uint64_t v34 = v33[1];
    *uint64_t v14 = v32;
    void *v29 = v35;
    v29[1] = v34;
    uint64_t v74 = type metadata accessor for EarningsCalendarEventModel;
    sub_1AFE606EC((uint64_t)v33 + v30, v31, (uint64_t (*)(void))type metadata accessor for EarningsCalendarEventModel);
    unint64_t v36 = (void *)((char *)v71 + *(int *)(v7 + 48));
    void *v71 = v32;
    uint64_t v37 = (void *)((char *)v36 + *(int *)(v27 + 48));
    *unint64_t v36 = v35;
    v36[1] = v34;
    sub_1AFE5B580(v31, (uint64_t)v37);
    uint64_t v38 = *v37;
    uint64_t v39 = v37[1];
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFE6068C((uint64_t)v37, (uint64_t (*)(void))type metadata accessor for EarningsCalendarEventModel);
    uint64_t v40 = *(int *)(v7 + 48);
    uint64_t v41 = v38;
    char v42 = (void *)((char *)v72 + v40);
    void *v72 = v32;
    uint64_t v43 = (uint64_t)v42 + *(int *)(v27 + 48);
    void *v42 = v35;
    v42[1] = v34;
    uint64_t v44 = v67;
    sub_1AFE5B580(v31, v43);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v45 = v73;
    sub_1AFE606EC(v43, v73, (uint64_t (*)(void))v74);
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v81 = (void *)*v44;
    uint64_t v47 = v81;
    void *v44 = 0x8000000000000000;
    unint64_t v49 = sub_1AFD79CC8(v41, v39);
    uint64_t v50 = v47[2];
    BOOL v51 = (v48 & 1) == 0;
    uint64_t v52 = v50 + v51;
    if (__OFADD__(v50, v51)) {
      break;
    }
    char v53 = v48;
    if (v47[3] >= v52)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v56 = v81;
        if (v48) {
          goto LABEL_7;
        }
      }
      else
      {
        sub_1AFEB95E0();
        uint64_t v56 = v81;
        if (v53) {
          goto LABEL_7;
        }
      }
    }
    else
    {
      sub_1AFEB4498(v52, isUniquelyReferenced_nonNull_native);
      unint64_t v54 = sub_1AFD79CC8(v41, v39);
      if ((v53 & 1) != (v55 & 1)) {
        goto LABEL_22;
      }
      unint64_t v49 = v54;
      uint64_t v56 = v81;
      if (v53)
      {
LABEL_7:
        sub_1AFE6022C(v45, v56[7] + *(void *)(v70 + 72) * v49);
        goto LABEL_8;
      }
    }
    v56[(v49 >> 6) + 8] |= 1 << v49;
    uint64_t v57 = (uint64_t *)(v56[6] + 16 * v49);
    *uint64_t v57 = v41;
    v57[1] = v39;
    sub_1AFE606EC(v45, v56[7] + *(void *)(v70 + 72) * v49, (uint64_t (*)(void))type metadata accessor for EarningsCalendarEventModel);
    uint64_t v58 = v56[2];
    BOOL v59 = __OFADD__(v58, 1);
    uint64_t v60 = v58 + 1;
    if (v59) {
      goto LABEL_21;
    }
    v56[2] = v60;
    sub_1AFFC8E38();
LABEL_8:
    void *v44 = v56;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    uint64_t v14 = v64;
    sub_1AFE6068C((uint64_t)v64, (uint64_t (*)(void))sub_1AFE6015C);
    uint64_t v17 = v63;
    sub_1AFE5C7E0(v63);
    uint64_t v7 = v65;
    if (v68(v17, 1, v65) == 1) {
      goto LABEL_5;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  uint64_t result = sub_1AFFCBD68();
  __break(1u);
  return result;
}

uint64_t sub_1AFE5C7E0@<X0>(void *a1@<X8>)
{
  char v53 = a1;
  sub_1AFE6015C(0);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for EarningsCalendarEventModel();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFE60290(0);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (uint64_t *)((char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1AFE6018C(0);
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(v14 - 8);
  v18.n128_f64[0] = MEMORY[0x1F4188790](v14);
  uint64_t v20 = (char *)&v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *v1;
  uint64_t v22 = v1[1];
  uint64_t v24 = v1[2];
  int64_t v23 = v1[3];
  int64_t v25 = v23;
  unint64_t v26 = v1[4];
  unint64_t v49 = v20;
  uint64_t v50 = v6;
  uint64_t v55 = v24;
  if (v26)
  {
    int64_t v54 = v23;
    uint64_t v51 = v22;
    uint64_t v52 = v4;
    uint64_t v27 = v3;
    uint64_t v28 = (v26 - 1) & v26;
    unint64_t v29 = __clz(__rbit64(v26)) | (v23 << 6);
LABEL_3:
    uint64_t v30 = (uint64_t *)(*(void *)(v21 + 48) + 16 * v29);
    uint64_t v31 = *v30;
    uint64_t v32 = v30[1];
    uint64_t v33 = *(void *)(v21 + 56) + *(void *)(v8 + 72) * v29;
    uint64_t v34 = v21;
    sub_1AFE5B580(v33, (uint64_t)v10);
    uint64_t v35 = (uint64_t)v13 + *(int *)(v15 + 48);
    *uint64_t v13 = v31;
    v13[1] = v32;
    sub_1AFE606EC((uint64_t)v10, v35, (uint64_t (*)(void))type metadata accessor for EarningsCalendarEventModel);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    sub_1AFFC8E38();
    uint64_t v3 = v27;
    uint64_t v22 = v51;
    uint64_t v4 = v52;
    goto LABEL_25;
  }
  int64_t v36 = v23 + 1;
  if (__OFADD__(v23, 1))
  {
    __break(1u);
LABEL_23:
    int64_t v25 = v17;
    goto LABEL_24;
  }
  int64_t v37 = (unint64_t)(v24 + 64) >> 6;
  if (v36 < v37)
  {
    unint64_t v38 = *(void *)(v22 + 8 * v36);
    if (v38)
    {
LABEL_7:
      uint64_t v51 = v22;
      uint64_t v52 = v4;
      uint64_t v27 = v3;
      uint64_t v28 = (v38 - 1) & v38;
      unint64_t v29 = __clz(__rbit64(v38)) + (v36 << 6);
      int64_t v54 = v36;
      goto LABEL_3;
    }
    int64_t v39 = v23 + 2;
    int64_t v25 = v23 + 1;
    if (v23 + 2 < v37)
    {
      unint64_t v38 = *(void *)(v22 + 8 * v39);
      if (v38)
      {
LABEL_10:
        int64_t v36 = v39;
        goto LABEL_7;
      }
      int64_t v25 = v23 + 2;
      if (v23 + 3 < v37)
      {
        unint64_t v38 = *(void *)(v22 + 8 * (v23 + 3));
        if (v38)
        {
          int64_t v36 = v23 + 3;
          goto LABEL_7;
        }
        int64_t v39 = v23 + 4;
        int64_t v25 = v23 + 3;
        if (v23 + 4 < v37)
        {
          unint64_t v38 = *(void *)(v22 + 8 * v39);
          if (v38) {
            goto LABEL_10;
          }
          int64_t v36 = v23 + 5;
          int64_t v25 = v23 + 4;
          if (v23 + 5 < v37)
          {
            unint64_t v38 = *(void *)(v22 + 8 * v36);
            if (v38) {
              goto LABEL_7;
            }
            int64_t v17 = v37 - 1;
            uint64_t v40 = v23 + 6;
            while (v37 != v40)
            {
              unint64_t v38 = *(void *)(v22 + 8 * v40++);
              if (v38)
              {
                int64_t v36 = v40 - 1;
                goto LABEL_7;
              }
            }
            goto LABEL_23;
          }
        }
      }
    }
  }
LABEL_24:
  int64_t v54 = v25;
  uint64_t v34 = v21;
  (*(void (**)(void *, uint64_t, uint64_t, uint64_t, __n128))(v16 + 56))(v13, 1, 1, v15, v18);
  uint64_t v28 = 0;
LABEL_25:
  *uint64_t v1 = v34;
  v1[1] = v22;
  int64_t v41 = v54;
  v1[2] = v55;
  v1[3] = v41;
  v1[4] = v28;
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15) == 1)
  {
    sub_1AFE6068C((uint64_t)v13, (uint64_t (*)(void))sub_1AFE60290);
    return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v53, 1, 1, v3);
  }
  else
  {
    uint64_t v43 = (uint64_t)v49;
    sub_1AFE606EC((uint64_t)v13, (uint64_t)v49, (uint64_t (*)(void))sub_1AFE6018C);
    uint64_t v44 = (uint64_t)&v50[*(int *)(v3 + 48)];
    uint64_t v45 = v1[5];
    uint64_t result = sub_1AFE606EC(v43, v44, (uint64_t (*)(void))sub_1AFE6018C);
    if (__OFADD__(v45, 1))
    {
      __break(1u);
    }
    else
    {
      v1[5] = v45 + 1;
      BOOL v46 = v53;
      uint64_t v47 = (uint64_t)v53 + *(int *)(v3 + 48);
      *char v53 = v45;
      sub_1AFE606EC(v44, v47, (uint64_t (*)(void))sub_1AFE6018C);
      return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(v4 + 56))(v46, 0, 1, v3);
    }
  }
  return result;
}

uint64_t sub_1AFE5CCA0()
{
  return sub_1AFE5DB48();
}

uint64_t sub_1AFE5CCB0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for EarningsCalendarEventModel();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFE602C4(0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  sub_1AFFC8E48();
  sub_1AFFC9D78();
  swift_release();
  swift_beginAccess();
  uint64_t v13 = *(void *)(v2 + 24);
  if (*(void *)(v13 + 16))
  {
    sub_1AFFC8E38();
    unint64_t v14 = sub_1AFD79CC8(v12, v11);
    if (v15)
    {
      sub_1AFE5B580(*(void *)(v13 + 56) + *(void *)(v5 + 72) * v14, (uint64_t)v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v10, 0, 1, v4);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v10, 1, 1, v4);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v10, 1, 1, v4);
  }
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4))
  {
    sub_1AFE6068C((uint64_t)v10, (uint64_t (*)(void))sub_1AFE602C4);
    swift_endAccess();
    uint64_t v16 = 0;
  }
  else
  {
    sub_1AFE5B580((uint64_t)v10, (uint64_t)v7);
    sub_1AFE6068C((uint64_t)v10, (uint64_t (*)(void))sub_1AFE602C4);
    swift_endAccess();
    uint64_t v16 = *((void *)v7 + 2);
    sub_1AFFC8E38();
    sub_1AFE6068C((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for EarningsCalendarEventModel);
  }
  sub_1AFFC8E48();
  sub_1AFFC9D88();
  swift_release();
  return v16;
}

uint64_t sub_1AFE5CF48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  sub_1AFFC8E48();
  sub_1AFFC9D78();
  swift_release();
  swift_beginAccess();
  uint64_t v6 = *(void *)(v2 + 24);
  if (*(void *)(v6 + 16))
  {
    sub_1AFFC8E38();
    unint64_t v7 = sub_1AFD79CC8(v5, v4);
    if (v8)
    {
      unint64_t v9 = v7;
      uint64_t v10 = *(void *)(v6 + 56);
      uint64_t v11 = type metadata accessor for EarningsCalendarEventModel();
      uint64_t v12 = *(void *)(v11 - 8);
      sub_1AFE5B580(v10 + *(void *)(v12 + 72) * v9, a2);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(a2, 0, 1, v11);
    }
    else
    {
      uint64_t v14 = type metadata accessor for EarningsCalendarEventModel();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(a2, 1, 1, v14);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = type metadata accessor for EarningsCalendarEventModel();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a2, 1, 1, v13);
  }
  swift_endAccess();
  sub_1AFFC8E48();
  sub_1AFFC9D88();
  return swift_release();
}

uint64_t sub_1AFE5D114(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v47 = a4;
  uint64_t v46 = a3;
  uint64_t v44 = a2;
  uint64_t v52 = sub_1AFFCABC8();
  uint64_t v55 = *(void *)(v52 - 8);
  MEMORY[0x1F4188790](v52);
  uint64_t v51 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_1AFFCAC18();
  uint64_t v53 = *(void *)(v54 - 8);
  MEMORY[0x1F4188790](v54);
  uint64_t v50 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_1AFFCABD8();
  uint64_t v45 = *(void *)(v49 - 8);
  MEMORY[0x1F4188790](v49);
  unint64_t v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFE602C4(0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for EarningsCalendarEventModel();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x1F4188790](v13);
  uint64_t v43 = (uint64_t)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v43 - v17;
  long long v19 = a1[6];
  long long v20 = a1[7];
  long long v21 = a1[4];
  long long v63 = a1[5];
  long long v64 = v19;
  long long v65 = v20;
  uint64_t v66 = *((void *)a1 + 16);
  long long v22 = a1[3];
  long long v60 = a1[2];
  long long v61 = v22;
  long long v62 = v21;
  long long v23 = a1[1];
  long long v58 = *a1;
  long long v59 = v23;
  sub_1AFFC8E48();
  sub_1AFFC9D78();
  swift_release();
  long long v24 = v59;
  int64_t v25 = &v18[*(int *)(v13 + 24)];
  uint64_t v26 = sub_1AFFC98F8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v25, v44, v26);
  *(_OWORD *)uint64_t v18 = v24;
  uint64_t v27 = v47;
  *((void *)v18 + 2) = v46;
  *((void *)v18 + 3) = v27;
  sub_1AFE5B580((uint64_t)v18, (uint64_t)v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
  uint64_t v48 = v4;
  swift_beginAccess();
  swift_bridgeObjectRetain_n();
  sub_1AFFC8E38();
  sub_1AFE5A828((uint64_t)v12, v24, *((uint64_t *)&v24 + 1));
  swift_endAccess();
  sub_1AFD67528();
  uint64_t v28 = v45;
  uint64_t v29 = v49;
  (*(void (**)(char *, void, uint64_t))(v45 + 104))(v9, *MEMORY[0x1E4FBCB28], v49);
  uint64_t v30 = (void *)sub_1AFFCB4E8();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v29);
  uint64_t v31 = swift_allocObject();
  swift_weakInit();
  uint64_t v32 = v43;
  sub_1AFE5B580((uint64_t)v18, v43);
  unint64_t v33 = (*(unsigned __int8 *)(v14 + 80) + 160) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v34 = swift_allocObject();
  long long v35 = v64;
  *(_OWORD *)(v34 + 104) = v63;
  *(_OWORD *)(v34 + 120) = v35;
  *(_OWORD *)(v34 + 136) = v65;
  long long v36 = v58;
  *(_OWORD *)(v34 + 40) = v59;
  long long v37 = v61;
  *(_OWORD *)(v34 + 56) = v60;
  *(_OWORD *)(v34 + 72) = v37;
  *(_OWORD *)(v34 + 88) = v62;
  *(void *)(v34 + 16) = v31;
  *(void *)(v34 + 152) = v66;
  *(_OWORD *)(v34 + 24) = v36;
  sub_1AFE606EC(v32, v34 + v33, (uint64_t (*)(void))type metadata accessor for EarningsCalendarEventModel);
  aBlock[4] = sub_1AFE60508;
  void aBlock[5] = v34;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1AFDB5104;
  aBlock[3] = &block_descriptor_17_0;
  unint64_t v38 = _Block_copy(aBlock);
  sub_1AFFC8E48();
  sub_1AFD76370((uint64_t)&v58);
  int64_t v39 = v50;
  sub_1AFFCABE8();
  uint64_t v56 = MEMORY[0x1E4FBC860];
  sub_1AFE6037C((unint64_t *)&unk_1EB819C20, 255, MEMORY[0x1E4FBCB00]);
  sub_1AFDBE5D0();
  sub_1AFE6037C((unint64_t *)&qword_1EB819DB0, 255, (void (*)(uint64_t))sub_1AFDBE5D0);
  uint64_t v40 = v51;
  uint64_t v41 = v52;
  sub_1AFFCB738();
  MEMORY[0x1B3E8D920](0, v39, v40, v38);
  _Block_release(v38);

  (*(void (**)(char *, uint64_t))(v55 + 8))(v40, v41);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v39, v54);
  sub_1AFE6068C((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for EarningsCalendarEventModel);
  swift_release();
  swift_release();
  sub_1AFFC8E48();
  sub_1AFFC9D88();
  return swift_release();
}

void sub_1AFE5D850(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1AFE5FF54(0, &qword_1EB8111B0, &qword_1EB8111A8, MEMORY[0x1E4FAA650], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v20 - v6;
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_1AFFCA508();
    sub_1AFFCA998();
    swift_release();
    sub_1AFE5FFBC(0, &qword_1EB8111A8, MEMORY[0x1E4FAA650]);
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v8) == 1)
    {
      __break(1u);
    }
    else
    {
      sub_1AFE5FE54(0, (unint64_t *)&unk_1E9AFB840, (uint64_t (*)(uint64_t))sub_1AFE60570, MEMORY[0x1E4FBBE00]);
      sub_1AFE60570();
      uint64_t v12 = v11 - 8;
      unint64_t v13 = (*(unsigned __int8 *)(*(void *)(v11 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v11 - 8) + 80);
      uint64_t v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_1AFFD05F0;
      uint64_t v15 = (void *)(v14 + v13);
      uint64_t v16 = v14 + v13 + *(int *)(v12 + 56);
      uint64_t v17 = *(void *)(a2 + 16);
      uint64_t v18 = *(void *)(a2 + 24);
      void *v15 = v17;
      v15[1] = v18;
      sub_1AFE5B580(a3, v16);
      sub_1AFFC8E38();
      sub_1AFDFA8BC(v14);
      sub_1AFFCA958();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
      long long v19 = (void *)sub_1AFFCA5E8();
      sub_1AFFCA6B8();
      swift_release();
      swift_release();
      swift_release();
    }
  }
}

uint64_t sub_1AFE5DB38()
{
  return sub_1AFE5DB48();
}

uint64_t sub_1AFE5DB48()
{
  if (qword_1EB810AB8 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EB8319E8;
  sub_1AFFCB468();
  sub_1AFD2CD48();
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1AFFD05F0;
  sub_1AFD2CDB0(0, (unint64_t *)&qword_1EB81A110);
  sub_1AFFCB928();
  *(void *)(v1 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v1 + 64) = sub_1AFD2CE00();
  *(void *)(v1 + 32) = 0;
  *(void *)(v1 + 40) = 0xE000000000000000;
  sub_1AFFCA878();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFE5DC8C(long long *a1)
{
  uint64_t v29 = sub_1AFFCABC8();
  uint64_t v32 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  uint64_t v3 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1AFFCAC18();
  uint64_t v30 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1AFFCABD8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFE602C4(0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v13 = a1[6];
  long long v14 = a1[7];
  long long v15 = a1[4];
  long long v40 = a1[5];
  long long v41 = v13;
  long long v42 = v14;
  uint64_t v43 = *((void *)a1 + 16);
  long long v16 = a1[3];
  long long v37 = a1[2];
  long long v38 = v16;
  long long v39 = v15;
  long long v17 = a1[1];
  long long v35 = *a1;
  long long v36 = v17;
  sub_1AFFC8E48();
  sub_1AFFC9D78();
  swift_release();
  long long v18 = v36;
  swift_beginAccess();
  sub_1AFFC8E38();
  sub_1AFE029EC(v18, *((uint64_t *)&v18 + 1), (uint64_t)v12);
  swift_endAccess();
  swift_bridgeObjectRelease();
  sub_1AFE6068C((uint64_t)v12, (uint64_t (*)(void))sub_1AFE602C4);
  sub_1AFD67528();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FBCB10], v6);
  long long v19 = (void *)sub_1AFFCB4E8();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v20 = swift_allocObject();
  swift_weakInit();
  uint64_t v21 = swift_allocObject();
  long long v22 = v41;
  *(_OWORD *)(v21 + 104) = v40;
  *(_OWORD *)(v21 + 120) = v22;
  *(_OWORD *)(v21 + 136) = v42;
  long long v23 = v35;
  *(_OWORD *)(v21 + 40) = v36;
  long long v24 = v38;
  *(_OWORD *)(v21 + 56) = v37;
  *(_OWORD *)(v21 + 72) = v24;
  *(_OWORD *)(v21 + 88) = v39;
  *(void *)(v21 + 16) = v20;
  *(void *)(v21 + 152) = v43;
  *(_OWORD *)(v21 + 24) = v23;
  aBlock[4] = sub_1AFE60370;
  void aBlock[5] = v21;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1AFDB5104;
  aBlock[3] = &block_descriptor_15;
  int64_t v25 = _Block_copy(aBlock);
  sub_1AFFC8E48();
  sub_1AFD76370((uint64_t)&v35);
  sub_1AFFCABE8();
  uint64_t v33 = MEMORY[0x1E4FBC860];
  sub_1AFE6037C((unint64_t *)&unk_1EB819C20, 255, MEMORY[0x1E4FBCB00]);
  sub_1AFDBE5D0();
  sub_1AFE6037C((unint64_t *)&qword_1EB819DB0, 255, (void (*)(uint64_t))sub_1AFDBE5D0);
  uint64_t v26 = v29;
  sub_1AFFCB738();
  MEMORY[0x1B3E8D920](0, v5, v3, v25);
  _Block_release(v25);

  (*(void (**)(char *, uint64_t))(v32 + 8))(v3, v26);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v5, v31);
  swift_release();
  swift_release();
  sub_1AFFC8E48();
  sub_1AFFC9D88();
  return swift_release();
}

void sub_1AFE5E1EC(uint64_t a1, uint64_t a2)
{
  sub_1AFE5FF54(0, &qword_1EB8111B0, &qword_1EB8111A8, MEMORY[0x1E4FAA650], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v12 - v4;
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_1AFFCA508();
    sub_1AFFCA998();
    swift_release();
    sub_1AFE5FFBC(0, &qword_1EB8111A8, MEMORY[0x1E4FAA650]);
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
    {
      __break(1u);
    }
    else
    {
      sub_1AFE60754(0, (unint64_t *)&qword_1EB81A0E0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
      uint64_t v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_1AFFD05F0;
      uint64_t v10 = *(void *)(a2 + 24);
      *(void *)(v9 + 32) = *(void *)(a2 + 16);
      *(void *)(v9 + 40) = v10;
      sub_1AFFC8E38();
      sub_1AFFCA968();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v5, v7);
      uint64_t v11 = (void *)sub_1AFFCA5E8();
      sub_1AFFCA6B8();
      swift_release();
      swift_release();
      swift_release();
    }
  }
}

uint64_t sub_1AFE5E43C()
{
  return sub_1AFE5DB48();
}

void sub_1AFE5E44C()
{
  uint64_t v60 = sub_1AFFC98F8();
  uint64_t v1 = *(void *)(v60 - 8);
  MEMORY[0x1F4188790](v60);
  uint64_t v3 = (char *)&v49 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFE60290(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (uint64_t *)((char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (uint64_t *)((char *)&v49 - v8);
  if (qword_1EB810AB8 != -1) {
LABEL_39:
  }
    swift_once();
  id v10 = (id)qword_1EB8319E8;
  sub_1AFFCB478();
  uint64_t v54 = (void *)MEMORY[0x1E4FBC860];
  sub_1AFFCA878();

  swift_beginAccess();
  unint64_t v53 = v0;
  uint64_t v11 = *(void *)(v0 + 24);
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v55 = v11 + 64;
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v12;
  unint64_t v0 = (unint64_t)(v13 + 63) >> 6;
  long long v58 = (void (**)(char *, uint64_t))(v1 + 8);
  long long v59 = (void (**)(char *, uint64_t, uint64_t))(v1 + 16);
  unint64_t v50 = v0 - 1;
  uint64_t v16 = sub_1AFFC8E38();
  unint64_t v17 = 0;
  int64_t v56 = v0;
  uint64_t v57 = v16;
  uint64_t v51 = v16 + 104;
  unint64_t v52 = v0 - 5;
  uint64_t v18 = v60;
  while (1)
  {
    if (v15)
    {
      unint64_t v19 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v20 = v19 | (v17 << 6);
LABEL_7:
      uint64_t v21 = *(void *)(v57 + 56);
      long long v22 = (void *)(*(void *)(v57 + 48) + 16 * v20);
      uint64_t v23 = v22[1];
      *uint64_t v6 = *v22;
      v6[1] = v23;
      uint64_t v24 = v21 + *(void *)(*(void *)(type metadata accessor for EarningsCalendarEventModel() - 8) + 72) * v20;
      sub_1AFE6018C(0);
      uint64_t v26 = v25;
      sub_1AFE5B580(v24, (uint64_t)v6 + *(int *)(v25 + 48));
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v6, 0, 1, v26);
      sub_1AFFC8E38();
      goto LABEL_14;
    }
    int64_t v27 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v27 >= v56)
    {
      unint64_t v29 = v17;
    }
    else
    {
      unint64_t v28 = *(void *)(v55 + 8 * v27);
      if (v28) {
        goto LABEL_11;
      }
      unint64_t v29 = v17 + 1;
      if ((uint64_t)(v17 + 2) < v56)
      {
        unint64_t v28 = *(void *)(v55 + 8 * (v17 + 2));
        if (v28)
        {
          int64_t v27 = v17 + 2;
LABEL_11:
          unint64_t v15 = (v28 - 1) & v28;
          unint64_t v20 = __clz(__rbit64(v28)) + (v27 << 6);
          unint64_t v17 = v27;
          goto LABEL_7;
        }
        unint64_t v29 = v17 + 2;
        if ((uint64_t)(v17 + 3) < v56)
        {
          unint64_t v28 = *(void *)(v55 + 8 * (v17 + 3));
          if (v28)
          {
            int64_t v27 = v17 + 3;
            goto LABEL_11;
          }
          int64_t v27 = v17 + 4;
          unint64_t v29 = v17 + 3;
          if ((uint64_t)(v17 + 4) < v56)
          {
            unint64_t v28 = *(void *)(v55 + 8 * v27);
            if (v28) {
              goto LABEL_11;
            }
            while (v52 != v17)
            {
              unint64_t v28 = *(void *)(v51 + 8 * v17++);
              if (v28)
              {
                int64_t v27 = v17 + 4;
                goto LABEL_11;
              }
            }
            unint64_t v29 = v50;
          }
        }
      }
    }
    sub_1AFE6018C(0);
    uint64_t v26 = v30;
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v6, 1, 1, v30);
    unint64_t v15 = 0;
    unint64_t v17 = v29;
LABEL_14:
    sub_1AFE606EC((uint64_t)v6, (uint64_t)v9, (uint64_t (*)(void))sub_1AFE60290);
    sub_1AFE6018C(0);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 48))(v9, 1, v26) == 1) {
      break;
    }
    uint64_t v31 = *v9;
    uint64_t v1 = v9[1];
    uint64_t v32 = (uint64_t)v9 + *(int *)(v26 + 48);
    uint64_t v33 = type metadata accessor for EarningsCalendarEventModel();
    (*v59)(v3, v32 + *(int *)(v33 + 24), v18);
    sub_1AFE6068C(v32, (uint64_t (*)(void))type metadata accessor for EarningsCalendarEventModel);
    unint64_t v0 = (unint64_t)v3;
    sub_1AFFC9868();
    double v35 = v34;
    (*v58)(v3, v18);
    if (v35 < 0.0)
    {
      if (swift_isUniquelyReferenced_nonNull_native()) {
        long long v36 = v54;
      }
      else {
        long long v36 = sub_1AFD352FC(0, v54[2] + 1, 1, v54);
      }
      unint64_t v38 = v36[2];
      unint64_t v37 = v36[3];
      unint64_t v0 = v38 + 1;
      if (v38 >= v37 >> 1) {
        long long v36 = sub_1AFD352FC((void *)(v37 > 1), v38 + 1, 1, v36);
      }
      _OWORD v36[2] = v0;
      uint64_t v54 = v36;
      long long v39 = &v36[2 * v38];
      unsigned char v39[4] = v31;
      v39[5] = v1;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  swift_release();
  long long v40 = v54;
  if (v54[2])
  {
    long long v41 = (void *)qword_1EB8319E8;
    sub_1AFD2CD48();
    uint64_t v42 = swift_allocObject();
    *(_OWORD *)(v42 + 16) = xmmword_1AFFD05F0;
    long long v61 = v40;
    uint64_t v43 = MEMORY[0x1E4FBB1A0];
    sub_1AFE60754(0, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1AFD371B8();
    id v44 = v41;
    sub_1AFFC8E38();
    uint64_t v45 = sub_1AFFCAD88();
    uint64_t v47 = v46;
    swift_bridgeObjectRelease();
    *(void *)(v42 + 56) = v43;
    *(void *)(v42 + 64) = sub_1AFD2CE00();
    *(void *)(v42 + 32) = v45;
    *(void *)(v42 + 40) = v47;
    sub_1AFFCB478();
    sub_1AFFCA878();

    swift_bridgeObjectRelease();
    sub_1AFE5EB04((uint64_t)v40);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    id v48 = (id)qword_1EB8319E8;
    sub_1AFFCB478();
    sub_1AFFCA878();
  }
}

uint64_t sub_1AFE5EB04(uint64_t a1)
{
  uint64_t v3 = sub_1AFFCABC8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v46 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1AFFCAC18();
  uint64_t v44 = *(void *)(v6 - 8);
  uint64_t v45 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v43 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1AFFCABD8();
  uint64_t v42 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  long long v41 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFE602C4(0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFFC8E48();
  sub_1AFFC9D78();
  swift_release();
  uint64_t v13 = *(void *)(a1 + 16);
  if (v13)
  {
    uint64_t v36 = v8;
    uint64_t v38 = v4;
    uint64_t v39 = v3;
    uint64_t v40 = v1;
    uint64_t v14 = (uint64_t *)(v1 + 24);
    sub_1AFFC8E38();
    uint64_t v37 = a1;
    unint64_t v15 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v18 = *(v15 - 1);
      uint64_t v17 = *v15;
      swift_beginAccess();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      unint64_t v19 = sub_1AFD79CC8(v18, v17);
      char v21 = v20;
      swift_bridgeObjectRelease();
      if (v21)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v23 = *v14;
        uint64_t v47 = *v14;
        *uint64_t v14 = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1AFEB95E0();
          uint64_t v23 = v47;
        }
        swift_bridgeObjectRelease();
        uint64_t v24 = *(void *)(v23 + 56);
        uint64_t v25 = type metadata accessor for EarningsCalendarEventModel();
        uint64_t v26 = *(void *)(v25 - 8);
        sub_1AFE606EC(v24 + *(void *)(v26 + 72) * v19, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for EarningsCalendarEventModel);
        sub_1AFE03394(v19, v23);
        *uint64_t v14 = v23;
        swift_bridgeObjectRelease();
        (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v12, 0, 1, v25);
      }
      else
      {
        uint64_t v16 = type metadata accessor for EarningsCalendarEventModel();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v12, 1, 1, v16);
      }
      v15 += 2;
      swift_endAccess();
      sub_1AFE6068C((uint64_t)v12, (uint64_t (*)(void))sub_1AFE602C4);
      swift_bridgeObjectRelease();
      --v13;
    }
    while (v13);
    a1 = v37;
    swift_bridgeObjectRelease();
    uint64_t v3 = v39;
    uint64_t v4 = v38;
    uint64_t v8 = v36;
  }
  sub_1AFD67528();
  unint64_t v28 = v41;
  uint64_t v27 = v42;
  (*(void (**)(char *, void, uint64_t))(v42 + 104))(v41, *MEMORY[0x1E4FBCB10], v8);
  unint64_t v29 = (void *)sub_1AFFCB4E8();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v8);
  uint64_t v30 = swift_allocObject();
  swift_weakInit();
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = v30;
  *(void *)(v31 + 24) = a1;
  aBlock[4] = sub_1AFE6061C;
  void aBlock[5] = v31;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1AFDB5104;
  aBlock[3] = &block_descriptor_24_0;
  uint64_t v32 = _Block_copy(aBlock);
  sub_1AFFC8E38();
  sub_1AFFC8E48();
  uint64_t v33 = v43;
  sub_1AFFCABE8();
  uint64_t v47 = MEMORY[0x1E4FBC860];
  sub_1AFE6037C((unint64_t *)&unk_1EB819C20, 255, MEMORY[0x1E4FBCB00]);
  sub_1AFDBE5D0();
  sub_1AFE6037C((unint64_t *)&qword_1EB819DB0, 255, (void (*)(uint64_t))sub_1AFDBE5D0);
  double v34 = v46;
  sub_1AFFCB738();
  MEMORY[0x1B3E8D920](0, v33, v34, v32);
  _Block_release(v32);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v34, v3);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v33, v45);
  swift_release();
  swift_release();
  sub_1AFFC8E48();
  sub_1AFFC9D88();
  return swift_release();
}

void sub_1AFE5F158()
{
  sub_1AFE5FF54(0, &qword_1EB8111B0, &qword_1EB8111A8, MEMORY[0x1E4FAA650], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v7 - v1;
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_1AFFCA508();
    sub_1AFFCA998();
    swift_release();
    sub_1AFE5FFBC(0, &qword_1EB8111A8, MEMORY[0x1E4FAA650]);
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)(v3 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v2, 1, v3) == 1)
    {
      __break(1u);
    }
    else
    {
      sub_1AFFCA968();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v2, v4);
      uint64_t v6 = (void *)sub_1AFFCA5E8();
      sub_1AFFCA6B8();
      swift_release();
      swift_release();
      swift_release();
    }
  }
}

uint64_t sub_1AFE5F344()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for EarningsCalendarEventManager()
{
  return self;
}

ValueMetadata *type metadata accessor for EarningsCalendarEventManager.StoreDescriptor()
{
  return &type metadata for EarningsCalendarEventManager.StoreDescriptor;
}

unsigned char *storeEnumTagSinglePayload for EarningsCalendarEventModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFE5F48CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EarningsCalendarEventModel.CodingKeys()
{
  return &type metadata for EarningsCalendarEventModel.CodingKeys;
}

unint64_t sub_1AFE5F4C8()
{
  unint64_t result = qword_1E9AFB828;
  if (!qword_1E9AFB828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB828);
  }
  return result;
}

uint64_t sub_1AFE5F52C()
{
  return MEMORY[0x1F415E3A0](*v0);
}

uint64_t sub_1AFE5F558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x1F415E3A8](a1, a2, a3, a4, a5, *v5);
}

uint64_t sub_1AFE5F584()
{
  return MEMORY[0x1F415E3A0](*v0);
}

uint64_t sub_1AFE5F5B0(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F415E3B8](a1, a2, *v2);
}

uint64_t sub_1AFE5F5DC()
{
  if (*(unsigned char *)(v0 + 40) == 1)
  {
    *(unsigned char *)(v0 + 40) = 0;
  }
  else
  {
    sub_1AFFC9EF8();
    sub_1AFFC8E48();
    sub_1AFFC9EE8();
    return swift_release();
  }
  return result;
}

uint64_t sub_1AFE5F65C()
{
  return MEMORY[0x1F415E3A0](*v0);
}

uint64_t sub_1AFE5F688(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F415E3B8](a1, a2, *v2);
}

uint64_t sub_1AFE5F6B4(uint64_t a1)
{
  return MEMORY[0x1F415E3E0](a1, *v1);
}

uint64_t sub_1AFE5F6E0()
{
  return MEMORY[0x1F415E3A0](*v0);
}

uint64_t sub_1AFE5F710@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x1E4FAAE88];
  uint64_t v3 = sub_1AFFCA498();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t sub_1AFE5F788()
{
  return sub_1AFFCA6F8();
}

uint64_t sub_1AFE5F824(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = sub_1AFE6037C(&qword_1EB810FD8, a2, (void (*)(uint64_t))type metadata accessor for EarningsCalendarEventManager);
  uint64_t result = sub_1AFE6037C(&qword_1EB810FD0, v3, (void (*)(uint64_t))type metadata accessor for EarningsCalendarEventManager);
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1AFE5F8AC()
{
  unint64_t result = qword_1E9AFB830;
  if (!qword_1E9AFB830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB830);
  }
  return result;
}

unint64_t sub_1AFE5F904()
{
  unint64_t result = qword_1E9AFB838;
  if (!qword_1E9AFB838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB838);
  }
  return result;
}

uint64_t sub_1AFE5F958(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D79536B636F7473 && a2 == 0xEB000000006C6F62;
  if (v2 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656449746E657665 && a2 == 0xEF7265696669746ELL || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x73676E696E726165 && a2 == 0xEC00000065746144)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1AFFCBCE8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1AFE5FB04()
{
  uint64_t v1 = sub_1AFFC9E08();
  MEMORY[0x1F4188790](v1);
  uint64_t v2 = sub_1AFFC9DA8();
  MEMORY[0x1F4188790](v2 - 8);
  *(void *)(v0 + 24) = MEMORY[0x1E4FBC868];
  sub_1AFFC9D98();
  sub_1AFFC9DC8();
  swift_allocObject();
  *(void *)(v0 + 32) = sub_1AFFC9DB8();
  *(unsigned char *)(v0 + 40) = 1;
  sub_1AFE5FE54(0, &qword_1EB81A450, MEMORY[0x1E4FAA910], MEMORY[0x1E4FBBE00]);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1AFFD05F0;
  sub_1AFFC9DF8();
  sub_1AFE6037C((unint64_t *)&unk_1EB81ABB0, 255, MEMORY[0x1E4FAA910]);
  sub_1AFD673A0(0);
  sub_1AFE6037C((unint64_t *)&qword_1EB81AC30, 255, sub_1AFD673A0);
  sub_1AFFCB738();
  sub_1AFE5FF54(0, &qword_1EB810BF0, &qword_1EB8111B8, MEMORY[0x1E4FAA660], MEMORY[0x1E4FAAFF0]);
  swift_allocObject();
  sub_1AFFC8E48();
  *(void *)(v0 + 16) = sub_1AFFCA528();
  sub_1AFFC9EF8();
  swift_allocObject();
  swift_weakInit();
  sub_1AFFC8E48();
  sub_1AFFC9EE8();
  swift_release_n();
  return v0;
}

void sub_1AFE5FE54(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1AFE5FEB8@<X0>(uint64_t *a1@<X8>)
{
  return sub_1AFE5BCA0(a1);
}

unint64_t sub_1AFE5FEC0()
{
  unint64_t result = qword_1EB810FC8;
  if (!qword_1EB810FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB810FC8);
  }
  return result;
}

uint64_t sub_1AFE5FF14()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1AFE5FF4C()
{
}

void sub_1AFE5FF54(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t, void *), uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_1AFE5FFBC(255, a3, a4);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_1AFE5FFBC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for EarningsCalendarEventManager.StoreDescriptor;
    v8[1] = type metadata accessor for EarningsCalendarEventModel();
    void v8[2] = sub_1AFE5FEC0();
    _OWORD v8[3] = sub_1AFE6037C(&qword_1EB810FA0, 255, (void (*)(uint64_t))type metadata accessor for EarningsCalendarEventModel);
    v8[4] = sub_1AFE6037C(&qword_1EB810F98, 255, (void (*)(uint64_t))type metadata accessor for EarningsCalendarEventModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1AFE600BC()
{
  return sub_1AFE5C0A4();
}

void sub_1AFE600D8()
{
  if (!qword_1EB811230)
  {
    type metadata accessor for EarningsCalendarEventModel();
    unint64_t v0 = sub_1AFFCAD18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB811230);
    }
  }
}

uint64_t sub_1AFE60140(uint64_t *a1)
{
  return sub_1AFE5C230(a1, v1);
}

void sub_1AFE6015C(uint64_t a1)
{
}

void sub_1AFE6018C(uint64_t a1)
{
}

void sub_1AFE601BC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_1AFE6022C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EarningsCalendarEventModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1AFE60290(uint64_t a1)
{
}

void sub_1AFE602C4(uint64_t a1)
{
}

uint64_t sub_1AFE602F8()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 160, 7);
}

void sub_1AFE60370()
{
  sub_1AFE5E1EC(*(void *)(v0 + 16), v0 + 24);
}

uint64_t sub_1AFE6037C(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AFE603C4()
{
  uint64_t v1 = (int *)(type metadata accessor for EarningsCalendarEventModel() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 160) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = v0 + v3 + v1[8];
  uint64_t v7 = sub_1AFFC98F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  return MEMORY[0x1F4186498](v0, v4, v5);
}

void sub_1AFE60508()
{
  uint64_t v1 = *(void *)(type metadata accessor for EarningsCalendarEventModel() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 160) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  sub_1AFE5D850(v2, v0 + 24, v3);
}

void sub_1AFE60570()
{
  if (!qword_1E9AFAFF0)
  {
    type metadata accessor for EarningsCalendarEventModel();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1E9AFAFF0);
    }
  }
}

uint64_t sub_1AFE605DC()
{
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1AFE6061C()
{
}

void sub_1AFE60624(uint64_t a1)
{
}

void sub_1AFE60658(uint64_t a1)
{
}

uint64_t sub_1AFE6068C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1AFE606EC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1AFE60754(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1AFE607A4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1AFE607B8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1AFE607CC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_1AFE607E0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_1AFE607F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t sub_1AFE60808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t sub_1AFE6081C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t sub_1AFE60830(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

void destroy for UserIdentitySource(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 40);
  if (v1 >= 2) {
    unsigned int v1 = *(_DWORD *)a1 + 2;
  }
  if (v1 == 1)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
  }
  else if (!v1)
  {
  }
}

uint64_t initializeWithCopy for UserIdentitySource(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(unsigned __int8 *)(a2 + 40);
  if (v3 >= 2) {
    unsigned int v3 = *(_DWORD *)a2 + 2;
  }
  if (v3 == 1)
  {
    long long v6 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v6;
    (**(void (***)(uint64_t))(v6 - 8))(a1);
    *(unsigned char *)(a1 + 40) = 1;
  }
  else if (v3)
  {
    long long v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  }
  else
  {
    uint64_t v4 = *(void **)a2;
    *(void *)a1 = *(void *)a2;
    *(unsigned char *)(a1 + 40) = 0;
    id v5 = v4;
  }
  return a1;
}

uint64_t assignWithCopy for UserIdentitySource(uint64_t a1, long long *a2)
{
  if ((long long *)a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a1 + 2;
    }
    if (v4 == 1)
    {
      __swift_destroy_boxed_opaque_existential_1(a1);
    }
    else if (!v4)
    {
    }
    unsigned int v5 = *((unsigned __int8 *)a2 + 40);
    if (v5 >= 2) {
      unsigned int v5 = *(_DWORD *)a2 + 2;
    }
    if (v5 == 1)
    {
      uint64_t v8 = *((void *)a2 + 3);
      *(void *)(a1 + 24) = v8;
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      (**(void (***)(uint64_t, long long *))(v8 - 8))(a1, a2);
      *(unsigned char *)(a1 + 40) = 1;
    }
    else if (v5)
    {
      long long v9 = *a2;
      long long v10 = a2[1];
      *(_OWORD *)(a1 + 25) = *(long long *)((char *)a2 + 25);
      *(_OWORD *)a1 = v9;
      *(_OWORD *)(a1 + 16) = v10;
    }
    else
    {
      long long v6 = *(void **)a2;
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 40) = 0;
      id v7 = v6;
    }
  }
  return a1;
}

uint64_t assignWithTake for UserIdentitySource(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a1 + 2;
    }
    if (v4 == 1)
    {
      __swift_destroy_boxed_opaque_existential_1(a1);
    }
    else if (!v4)
    {
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 2) {
      unsigned int v5 = *(_DWORD *)a2 + 2;
    }
    if (v5 == 1)
    {
      long long v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(unsigned char *)(a1 + 40) = 1;
    }
    else if (v5)
    {
      long long v7 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
      *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 40) = 0;
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for UserIdentitySource(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 >= 3) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for UserIdentitySource(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 40) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1AFE60B5C(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 40);
  if (result >= 2) {
    return (*(_DWORD *)a1 + 2);
  }
  return result;
}

uint64_t sub_1AFE60B78(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(void *)(result + 32) = 0;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for UserIdentitySource()
{
  return &type metadata for UserIdentitySource;
}

id sub_1AFE60BB0()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = &v0[OBJC_IVAR____TtC10StocksCore21IdentificationService_lockedSource];
  uint64_t v15 = 0;
  memset(v14, 0, sizeof(v14));
  char v16 = 2;
  *(_DWORD *)uint64_t v2 = 0;
  *(_OWORD *)(v2 + 24) = 0u;
  *(_OWORD *)(v2 + 33) = 0u;
  *(_OWORD *)(v2 + 8) = 0u;
  unsigned int v3 = v0;
  sub_1AFE641E8(v14, v2 + 8);
  uint64_t v4 = OBJC_IVAR____TtC10StocksCore21IdentificationService_sensitiveUserDefaults;
  if (qword_1EB818A50 != -1) {
    swift_once();
  }
  swift_beginAccess();
  unsigned int v5 = (void *)qword_1EB818A40;
  *(void *)&v3[v4] = qword_1EB818A40;
  uint64_t v6 = OBJC_IVAR____TtC10StocksCore21IdentificationService_stocksKitDefaults;
  uint64_t v7 = qword_1EB819E50;
  id v8 = v5;
  if (v7 != -1) {
    swift_once();
  }
  long long v9 = (void *)qword_1EB831AF0;
  *(void *)&v3[v6] = qword_1EB831AF0;
  long long v10 = &v3[OBJC_IVAR____TtC10StocksCore21IdentificationService_lockedObservers];
  *(_DWORD *)long long v10 = 0;
  *((void *)v10 + 1) = MEMORY[0x1E4FBC860];
  id v11 = v9;

  v13.receiver = v3;
  v13.super_class = ObjectType;
  return objc_msgSendSuper2(&v13, sel_init);
}

uint64_t type metadata accessor for IdentificationService()
{
  return self;
}

void sub_1AFE60DD8()
{
  if (MEMORY[0x1E4FBC8F0]) {
    sub_1AFE60E14();
  }
}

void sub_1AFE60E14()
{
  if (!qword_1E9AFB878)
  {
    unint64_t v0 = sub_1AFFCA838();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9AFB878);
    }
  }
}

void sub_1AFE60E6C()
{
  if (MEMORY[0x1E4FBC8F0]) {
    sub_1AFE60EA8(0);
  }
}

void sub_1AFE60EA8(uint64_t a1)
{
}

void sub_1AFE60EDC(uint64_t a1)
{
}

void sub_1AFE60F10(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t _s10StocksCore13ObserverProxyCMa_0()
{
  return self;
}

void sub_1AFE60F98(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_1AFE638F4(a1, (uint64_t)v26);
  uint64_t v4 = (os_unfair_lock_s *)&v2[OBJC_IVAR____TtC10StocksCore21IdentificationService_lockedSource];
  os_unfair_lock_lock((os_unfair_lock_t)&v2[OBJC_IVAR____TtC10StocksCore21IdentificationService_lockedSource]);
  sub_1AFDB3E34((uint64_t)&v4[2]);
  sub_1AFE638F4((uint64_t)v26, (uint64_t)&v4[2]);
  os_unfair_lock_unlock(v4);
  sub_1AFDB3E34((uint64_t)v26);
  sub_1AFE638F4(a1, (uint64_t)v24);
  if (v25)
  {
    if (v25 == 1)
    {
      sub_1AFD80454(v24, (uint64_t)aBlock);
      unsigned int v5 = v20;
      uint64_t v6 = v21;
      __swift_project_boxed_opaque_existential_1(aBlock, (uint64_t)v20);
      (*((void (**)(void *, void))v6 + 1))(v5, v6);
      sub_1AFD2CEB0((uint64_t)aBlock, (uint64_t)v23);
      uint64_t v7 = swift_allocObject();
      *(void *)(v7 + 16) = v2;
      sub_1AFD80454(v23, v7 + 24);
      unint64_t v8 = v2;
      uint64_t v9 = (void *)sub_1AFFCA5E8();
      sub_1AFFCA678();
      swift_release();
      swift_release();
      swift_release();

      long long v10 = v20;
      id v11 = v21;
      __swift_project_boxed_opaque_existential_1(aBlock, (uint64_t)v20);
      (*((void (**)(void *, void))v11 + 3))(v10, v11);
      *(void *)(swift_allocObject() + 16) = v8;
      uint64_t v12 = v8;
      objc_super v13 = (void *)sub_1AFFCA5E8();
      sub_1AFFCA678();
      swift_release();
      swift_release();
      swift_release();

      __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
    }
  }
  else
  {
    uint64_t v14 = *(void **)&v24[0];
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = v2;
    *(void *)(v15 + 24) = v14;
    char v21 = sub_1AFE63A20;
    uint64_t v22 = v15;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1AFE617C0;
    char v20 = &block_descriptor_16;
    char v16 = _Block_copy(aBlock);
    uint64_t v17 = v2;
    id v18 = v14;
    swift_release();
    objc_msgSend(v18, sel_syncWithCompletion_, v16);
    _Block_release(v16);
  }
}

void sub_1AFE61254(int a1, int a2, char *a3, id a4)
{
  id v4 = a4;
  id v6 = objc_msgSend(a4, sel_stocks_generateFeldsparIDIfNeeded);
  uint64_t v7 = sub_1AFFCAE98();
  uint64_t v9 = v8;

  if (v7 == sub_1AFE61E1C() && v9 == v10)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_23;
  }
  char v12 = sub_1AFFCBCE8();
  swift_bridgeObjectRelease();
  if (v12) {
    goto LABEL_22;
  }
  objc_super v13 = *(void **)&a3[OBJC_IVAR____TtC10StocksCore21IdentificationService_sensitiveUserDefaults];
  uint64_t v14 = (void *)sub_1AFFCAE68();
  uint64_t v15 = (void *)sub_1AFFCAE68();
  objc_msgSend(v13, sel_setObject_forKey_, v14, v15);

  char v16 = *(void **)&a3[OBJC_IVAR____TtC10StocksCore21IdentificationService_stocksKitDefaults];
  uint64_t v17 = (void *)sub_1AFFCAE68();
  id v18 = (void *)sub_1AFFCAE68();
  objc_msgSend(v16, sel_setObject_forKey_, v17, v18);

  unint64_t v19 = &a3[OBJC_IVAR____TtC10StocksCore21IdentificationService_lockedObservers];
  os_unfair_lock_lock((os_unfair_lock_t)&a3[OBJC_IVAR____TtC10StocksCore21IdentificationService_lockedObservers]);
  unint64_t v20 = *((void *)v19 + 1);
  sub_1AFFC8E38();
  os_unfair_lock_unlock((os_unfair_lock_t)v19);
  if (v20 >> 62)
  {
    sub_1AFFC8E38();
    uint64_t v21 = sub_1AFFCB9C8();
    swift_bridgeObjectRelease();
    if (v21) {
      goto LABEL_10;
    }
LABEL_21:
    swift_bridgeObjectRelease();
LABEL_22:
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v21) {
    goto LABEL_21;
  }
LABEL_10:
  uint64_t v51 = v7;
  uint64_t v53 = v9;
  id v49 = v4;
  if (v21 < 1)
  {
    __break(1u);
    goto LABEL_45;
  }
  uint64_t v22 = 0;
  do
  {
    if ((v20 & 0xC000000000000001) != 0)
    {
      uint64_t v24 = MEMORY[0x1B3E8DC70](v22, v20);
    }
    else
    {
      uint64_t v24 = *(void *)(v20 + 8 * v22 + 32);
      sub_1AFFC8E48();
    }
    uint64_t v55 = type metadata accessor for IdentificationService();
    int64_t v56 = &off_1F0873E78;
    v54[0] = a3;
    if (MEMORY[0x1B3E8F200](v24 + 16))
    {
      uint64_t v25 = *(void *)(v24 + 24);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v27 = v21;
      unint64_t v28 = *(void (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 8);
      unint64_t v29 = a3;
      v28(v54, v51, v53, ObjectType, v25);
      uint64_t v21 = v27;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v23 = a3;
    }
    ++v22;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);

    swift_release();
  }
  while (v21 != v22);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v4 = v49;
LABEL_23:
  id v30 = objc_msgSend(v4, sel_adsUserID);
  if (!v30) {
    id v30 = objc_msgSend(v4, sel_stocks_resetAdsUserID);
  }
  uint64_t v31 = sub_1AFFCAE98();
  uint64_t v33 = v32;

  if (v31 == sub_1AFE62528() && v33 == v34) {
    goto LABEL_40;
  }
  char v35 = sub_1AFFCBCE8();
  swift_bridgeObjectRelease();
  if (v35)
  {
LABEL_41:
    swift_bridgeObjectRelease();
    objc_msgSend(v4, sel_addObserver_, a3);
    return;
  }
  uint64_t v36 = *(void **)&a3[OBJC_IVAR____TtC10StocksCore21IdentificationService_sensitiveUserDefaults];
  uint64_t v37 = (void *)sub_1AFFCAE68();
  uint64_t v38 = (void *)sub_1AFFCAE68();
  objc_msgSend(v36, sel_setObject_forKey_, v37, v38);

  uint64_t v39 = &a3[OBJC_IVAR____TtC10StocksCore21IdentificationService_lockedObservers];
  os_unfair_lock_lock((os_unfair_lock_t)&a3[OBJC_IVAR____TtC10StocksCore21IdentificationService_lockedObservers]);
  unint64_t v40 = *((void *)v39 + 1);
  sub_1AFFC8E38();
  os_unfair_lock_unlock((os_unfair_lock_t)v39);
  if (!(v40 >> 62))
  {
    uint64_t v41 = *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v41) {
      goto LABEL_30;
    }
LABEL_40:
    swift_bridgeObjectRelease();
    goto LABEL_41;
  }
  sub_1AFFC8E38();
  uint64_t v41 = sub_1AFFCB9C8();
  swift_bridgeObjectRelease();
  if (!v41) {
    goto LABEL_40;
  }
LABEL_30:
  uint64_t v52 = v31;
  id v50 = v4;
  if (v41 >= 1)
  {
    uint64_t v42 = 0;
    do
    {
      if ((v40 & 0xC000000000000001) != 0)
      {
        uint64_t v44 = MEMORY[0x1B3E8DC70](v42, v40);
      }
      else
      {
        uint64_t v44 = *(void *)(v40 + 8 * v42 + 32);
        sub_1AFFC8E48();
      }
      uint64_t v55 = type metadata accessor for IdentificationService();
      int64_t v56 = &off_1F0873E78;
      v54[0] = a3;
      if (MEMORY[0x1B3E8F200](v44 + 16))
      {
        uint64_t v45 = *(void *)(v44 + 24);
        uint64_t v46 = swift_getObjectType();
        uint64_t v47 = *(void (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(v45 + 16);
        id v48 = a3;
        v47(v54, v52, v33, v46, v45);
        swift_unknownObjectRelease();
      }
      else
      {
        uint64_t v43 = a3;
      }
      ++v42;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);

      swift_release();
    }
    while (v41 != v42);
    id v4 = v50;
    goto LABEL_40;
  }
LABEL_45:
  __break(1u);
}

void sub_1AFE617C0(uint64_t a1, uint64_t a2, void *a3)
{
  unsigned int v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  sub_1AFFC8E48();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

void sub_1AFE61838(uint64_t *a1, char *a2, void *a3)
{
  uint64_t v6 = *a1;
  uint64_t v5 = a1[1];
  sub_1AFFC8E38();
  if (v6 == sub_1AFE61E1C() && v5 == v7)
  {
    swift_bridgeObjectRelease_n();
LABEL_23:
    uint64_t v27 = a3[3];
    uint64_t v28 = a3[4];
    __swift_project_boxed_opaque_existential_1(a3, v27);
    (*(void (**)(char *, _UNKNOWN **, uint64_t, uint64_t))(v28 + 120))(a2, &off_1F0873EB0, v27, v28);
    return;
  }
  char v9 = sub_1AFFCBCE8();
  swift_bridgeObjectRelease();
  if (v9)
  {
LABEL_22:
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  uint64_t v10 = *(void **)&a2[OBJC_IVAR____TtC10StocksCore21IdentificationService_sensitiveUserDefaults];
  id v11 = (void *)sub_1AFFCAE68();
  char v12 = (void *)sub_1AFFCAE68();
  objc_msgSend(v10, sel_setObject_forKey_, v11, v12);

  objc_super v13 = *(void **)&a2[OBJC_IVAR____TtC10StocksCore21IdentificationService_stocksKitDefaults];
  uint64_t v14 = (void *)sub_1AFFCAE68();
  uint64_t v15 = (void *)sub_1AFFCAE68();
  objc_msgSend(v13, sel_setObject_forKey_, v14, v15);

  char v16 = &a2[OBJC_IVAR____TtC10StocksCore21IdentificationService_lockedObservers];
  os_unfair_lock_lock((os_unfair_lock_t)&a2[OBJC_IVAR____TtC10StocksCore21IdentificationService_lockedObservers]);
  unint64_t v17 = *((void *)v16 + 1);
  sub_1AFFC8E38();
  os_unfair_lock_unlock((os_unfair_lock_t)v16);
  if (!(v17 >> 62))
  {
    uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v18) {
      goto LABEL_10;
    }
LABEL_21:
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  sub_1AFFC8E38();
  uint64_t v18 = sub_1AFFCB9C8();
  swift_bridgeObjectRelease();
  if (!v18) {
    goto LABEL_21;
  }
LABEL_10:
  uint64_t v31 = v6;
  unint64_t v29 = a3;
  if (v18 >= 1)
  {
    uint64_t v19 = 0;
    unint64_t v33 = v17 & 0xC000000000000001;
    uint64_t v30 = v18;
    do
    {
      if (v33)
      {
        uint64_t v21 = MEMORY[0x1B3E8DC70](v19, v17);
      }
      else
      {
        uint64_t v21 = *(void *)(v17 + 8 * v19 + 32);
        sub_1AFFC8E48();
      }
      uint64_t v32[3] = type metadata accessor for IdentificationService();
      v32[4] = &off_1F0873E78;
      v32[0] = a2;
      if (MEMORY[0x1B3E8F200](v21 + 16))
      {
        uint64_t v22 = *(void *)(v21 + 24);
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v24 = *(void (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 8);
        uint64_t v25 = a2;
        uint64_t v26 = v22;
        uint64_t v18 = v30;
        v24(v32, v31, v5, ObjectType, v26);
        swift_unknownObjectRelease();
      }
      else
      {
        unint64_t v20 = a2;
      }
      ++v19;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);

      swift_release();
    }
    while (v18 != v19);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a3 = v29;
    goto LABEL_23;
  }
  __break(1u);
}

void sub_1AFE61B58(uint64_t *a1, char *a2)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = *a1;
  uint64_t v4 = a1[1];
  sub_1AFFC8E38();
  if (v5 == sub_1AFE62528() && v4 == v6)
  {
    swift_bridgeObjectRelease_n();
    return;
  }
  char v8 = sub_1AFFCBCE8();
  swift_bridgeObjectRelease();
  if (v8) {
    goto LABEL_22;
  }
  char v9 = *(void **)&a2[OBJC_IVAR____TtC10StocksCore21IdentificationService_sensitiveUserDefaults];
  uint64_t v10 = (void *)sub_1AFFCAE68();
  id v11 = (void *)sub_1AFFCAE68();
  objc_msgSend(v9, sel_setObject_forKey_, v10, v11);

  char v12 = &a2[OBJC_IVAR____TtC10StocksCore21IdentificationService_lockedObservers];
  os_unfair_lock_lock((os_unfair_lock_t)&a2[OBJC_IVAR____TtC10StocksCore21IdentificationService_lockedObservers]);
  unint64_t v13 = *((void *)v12 + 1);
  sub_1AFFC8E38();
  os_unfair_lock_unlock((os_unfair_lock_t)v12);
  if (!(v13 >> 62))
  {
    uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v14) {
      goto LABEL_10;
    }
LABEL_21:
    swift_bridgeObjectRelease();
LABEL_22:
    swift_bridgeObjectRelease();
    return;
  }
  sub_1AFFC8E38();
  uint64_t v14 = sub_1AFFCB9C8();
  swift_bridgeObjectRelease();
  if (!v14) {
    goto LABEL_21;
  }
LABEL_10:
  uint64_t v25 = v4;
  if (v14 < 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v15 = 0;
    unint64_t v26 = v13 & 0xC000000000000001;
    unint64_t v24 = v13;
    do
    {
      if (v26)
      {
        uint64_t v17 = MEMORY[0x1B3E8DC70](v15, v13);
      }
      else
      {
        uint64_t v17 = *(void *)(v13 + 8 * v15 + 32);
        sub_1AFFC8E48();
      }
      v27[3] = ObjectType;
      v27[4] = &off_1F0873E78;
      v27[0] = a2;
      if (MEMORY[0x1B3E8F200](v17 + 16))
      {
        uint64_t v18 = *(void *)(v17 + 24);
        uint64_t v19 = swift_getObjectType();
        uint64_t v20 = v14;
        uint64_t v21 = *(void (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 16);
        uint64_t v22 = a2;
        uint64_t v23 = v18;
        unint64_t v13 = v24;
        v21(v27, v5, v25, v19, v23);
        uint64_t v14 = v20;
        swift_unknownObjectRelease();
      }
      else
      {
        char v16 = a2;
      }
      ++v15;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);

      swift_release();
    }
    while (v14 != v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

void sub_1AFE61DF8(uint64_t a1)
{
}

uint64_t sub_1AFE61E1C()
{
  uint64_t v1 = sub_1AFFC9938();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC10StocksCore21IdentificationService_sensitiveUserDefaults);
  uint64_t v6 = (void *)sub_1AFFCAE68();
  id v7 = objc_msgSend(v5, sel_stringForKey_, v6);

  if (v7)
  {
    uint64_t v8 = sub_1AFFCAE98();
    char v9 = *(void **)(v0 + OBJC_IVAR____TtC10StocksCore21IdentificationService_stocksKitDefaults);
    uint64_t v10 = (void *)sub_1AFFCAE68();
    id v11 = objc_msgSend(v9, sel_stringForKey_, v10);

    if (!v11)
    {
      id v11 = (id)sub_1AFFCAE68();
      objc_msgSend(v9, sel_setObject_forKey_, v7, v11);
    }
  }
  else
  {
    sub_1AFFC8978();
    uint64_t v8 = sub_1AFFC9918();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    char v12 = (void *)sub_1AFFCAE68();
    unint64_t v13 = (void *)sub_1AFFCAE68();
    objc_msgSend(v5, sel_setObject_forKey_, v12, v13);

    uint64_t v14 = *(void **)(v0 + OBJC_IVAR____TtC10StocksCore21IdentificationService_stocksKitDefaults);
    id v7 = (id)sub_1AFFCAE68();
    id v11 = (id)sub_1AFFCAE68();
    objc_msgSend(v14, sel_setObject_forKey_, v7, v11);
  }

  return v8;
}

void sub_1AFE62084()
{
  uint64_t v1 = (char *)v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = sub_1AFE62384(v0);
  uint64_t v4 = v3;
  if (v2 == sub_1AFE61E1C() && v4 == v5)
  {
    swift_bridgeObjectRelease_n();
    return;
  }
  char v6 = sub_1AFFCBCE8();
  swift_bridgeObjectRelease();
  if ((v6 & 1) == 0)
  {
    id v7 = *(void **)(v0 + OBJC_IVAR____TtC10StocksCore21IdentificationService_sensitiveUserDefaults);
    uint64_t v8 = (void *)sub_1AFFCAE68();
    char v9 = (void *)sub_1AFFCAE68();
    objc_msgSend(v7, sel_setObject_forKey_, v8, v9);

    uint64_t v10 = *(void **)&v1[OBJC_IVAR____TtC10StocksCore21IdentificationService_stocksKitDefaults];
    id v11 = (void *)sub_1AFFCAE68();
    char v12 = (void *)sub_1AFFCAE68();
    objc_msgSend(v10, sel_setObject_forKey_, v11, v12);

    unint64_t v13 = &v1[OBJC_IVAR____TtC10StocksCore21IdentificationService_lockedObservers];
    os_unfair_lock_lock((os_unfair_lock_t)&v1[OBJC_IVAR____TtC10StocksCore21IdentificationService_lockedObservers]);
    unint64_t v14 = *((void *)v13 + 1);
    sub_1AFFC8E38();
    os_unfair_lock_unlock((os_unfair_lock_t)v13);
    if (v14 >> 62)
    {
      sub_1AFFC8E38();
      uint64_t v15 = sub_1AFFCB9C8();
      swift_bridgeObjectRelease();
      if (v15)
      {
LABEL_7:
        uint64_t v24 = v2;
        uint64_t v25 = v4;
        if (v15 < 1)
        {
          __break(1u);
        }
        else
        {
          uint64_t v16 = 0;
          do
          {
            if ((v14 & 0xC000000000000001) != 0)
            {
              uint64_t v18 = MEMORY[0x1B3E8DC70](v16, v14);
            }
            else
            {
              uint64_t v18 = *(void *)(v14 + 8 * v16 + 32);
              sub_1AFFC8E48();
            }
            v27[3] = ObjectType;
            v27[4] = &off_1F0873E78;
            v27[0] = v1;
            if (MEMORY[0x1B3E8F200](v18 + 16))
            {
              uint64_t v19 = *(void *)(v18 + 24);
              uint64_t v20 = swift_getObjectType();
              uint64_t v21 = v15;
              uint64_t v22 = *(void (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 8);
              uint64_t v23 = v1;
              v22(v27, v24, v25, v20, v19);
              uint64_t v15 = v21;
              swift_unknownObjectRelease();
            }
            else
            {
              uint64_t v17 = v1;
            }
            ++v16;
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);

            swift_release();
          }
          while (v15 != v16);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        return;
      }
    }
    else
    {
      uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v15) {
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
}

uint64_t sub_1AFE62384(uint64_t a1)
{
  uint64_t v2 = sub_1AFFC9938();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v14[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v6 = (os_unfair_lock_s *)(a1 + OBJC_IVAR____TtC10StocksCore21IdentificationService_lockedSource);
  os_unfair_lock_lock(v6);
  sub_1AFE638F4((uint64_t)&v6[2], (uint64_t)v17);
  os_unfair_lock_unlock(v6);
  if (v18)
  {
    if (v18 == 1)
    {
      sub_1AFD80454(v17, (uint64_t)v14);
      uint64_t v7 = v15;
      uint64_t v8 = v16;
      __swift_project_boxed_opaque_existential_1(v14, v15);
      uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 16))(v7, v8);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    }
    else
    {
      sub_1AFFC8978();
      uint64_t v9 = sub_1AFFC9918();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
  }
  else
  {
    uint64_t v10 = *(void **)&v17[0];
    id v11 = objc_msgSend(*(id *)&v17[0], sel_stocks_resetFeldsparID);
    uint64_t v9 = sub_1AFFCAE98();
  }
  return v9;
}

uint64_t sub_1AFE62528()
{
  uint64_t v1 = sub_1AFFC9938();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC10StocksCore21IdentificationService_sensitiveUserDefaults);
  char v6 = (void *)sub_1AFFCAE68();
  id v7 = objc_msgSend(v5, sel_stringForKey_, v6);

  if (v7)
  {
    uint64_t v8 = sub_1AFFCAE98();

    return v8;
  }
  else
  {
    sub_1AFFC8978();
    uint64_t v10 = sub_1AFFC9918();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    id v11 = (void *)sub_1AFFCAE68();
    char v12 = (void *)sub_1AFFCAE68();
    objc_msgSend(v5, sel_setObject_forKey_, v11, v12);

    return v10;
  }
}

void sub_1AFE626CC()
{
  uint64_t v1 = (char *)v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = sub_1AFE6297C(v0);
  uint64_t v4 = v3;
  if (v2 == sub_1AFE62528() && v4 == v5)
  {
    swift_bridgeObjectRelease_n();
    return;
  }
  char v6 = sub_1AFFCBCE8();
  swift_bridgeObjectRelease();
  if ((v6 & 1) == 0)
  {
    id v7 = *(void **)(v0 + OBJC_IVAR____TtC10StocksCore21IdentificationService_sensitiveUserDefaults);
    uint64_t v8 = (void *)sub_1AFFCAE68();
    uint64_t v9 = (void *)sub_1AFFCAE68();
    objc_msgSend(v7, sel_setObject_forKey_, v8, v9);

    uint64_t v10 = &v1[OBJC_IVAR____TtC10StocksCore21IdentificationService_lockedObservers];
    os_unfair_lock_lock((os_unfair_lock_t)&v1[OBJC_IVAR____TtC10StocksCore21IdentificationService_lockedObservers]);
    unint64_t v11 = *((void *)v10 + 1);
    sub_1AFFC8E38();
    os_unfair_lock_unlock((os_unfair_lock_t)v10);
    if (v11 >> 62)
    {
      sub_1AFFC8E38();
      uint64_t v12 = sub_1AFFCB9C8();
      swift_bridgeObjectRelease();
      if (v12)
      {
LABEL_7:
        uint64_t v21 = v2;
        uint64_t v22 = v4;
        if (v12 < 1)
        {
          __break(1u);
        }
        else
        {
          uint64_t v13 = 0;
          do
          {
            if ((v11 & 0xC000000000000001) != 0)
            {
              uint64_t v15 = MEMORY[0x1B3E8DC70](v13, v11);
            }
            else
            {
              uint64_t v15 = *(void *)(v11 + 8 * v13 + 32);
              sub_1AFFC8E48();
            }
            v24[3] = ObjectType;
            void v24[4] = &off_1F0873E78;
            v24[0] = v1;
            if (MEMORY[0x1B3E8F200](v15 + 16))
            {
              uint64_t v16 = *(void *)(v15 + 24);
              uint64_t v17 = swift_getObjectType();
              uint64_t v18 = v12;
              uint64_t v19 = *(void (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 16);
              uint64_t v20 = v1;
              v19(v24, v21, v22, v17, v16);
              uint64_t v12 = v18;
              swift_unknownObjectRelease();
            }
            else
            {
              unint64_t v14 = v1;
            }
            ++v13;
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);

            swift_release();
          }
          while (v12 != v13);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        return;
      }
    }
    else
    {
      uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v12) {
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
}

uint64_t sub_1AFE6297C(uint64_t a1)
{
  uint64_t v2 = sub_1AFFC9938();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v14[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v6 = (os_unfair_lock_s *)(a1 + OBJC_IVAR____TtC10StocksCore21IdentificationService_lockedSource);
  os_unfair_lock_lock(v6);
  sub_1AFE638F4((uint64_t)&v6[2], (uint64_t)v17);
  os_unfair_lock_unlock(v6);
  if (v18)
  {
    if (v18 == 1)
    {
      sub_1AFD80454(v17, (uint64_t)v14);
      uint64_t v7 = v15;
      uint64_t v8 = v16;
      __swift_project_boxed_opaque_existential_1(v14, v15);
      uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 32))(v7, v8);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    }
    else
    {
      sub_1AFFC8978();
      uint64_t v9 = sub_1AFFC9918();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
  }
  else
  {
    uint64_t v10 = *(void **)&v17[0];
    id v11 = objc_msgSend(*(id *)&v17[0], sel_stocks_resetAdsUserID);
    uint64_t v9 = sub_1AFFCAE98();
  }
  return v9;
}

uint64_t sub_1AFE62B20(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5 = *a1;
  if ((unint64_t)*a1 >> 62) {
    goto LABEL_65;
  }
  uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  sub_1AFFC8E38();
  if (!v6)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    if ((unint64_t)*a1 >> 62)
    {
      sub_1AFFC8E38();
      uint64_t v7 = sub_1AFFCB9C8();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v7 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    goto LABEL_12;
  }
LABEL_3:
  uint64_t v7 = 0;
  while (1)
  {
    if ((v5 & 0xC000000000000001) != 0)
    {
      uint64_t v8 = MEMORY[0x1B3E8DC70](v7, v5);
    }
    else
    {
      uint64_t v8 = *(void *)(v5 + 8 * v7 + 32);
      sub_1AFFC8E48();
    }
    uint64_t v9 = MEMORY[0x1B3E8F200](v8 + 16);
    swift_release();
    swift_unknownObjectRelease();
    if (!v9) {
      break;
    }
    uint64_t v10 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
LABEL_62:
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      sub_1AFFC8E38();
      uint64_t v6 = sub_1AFFCB9C8();
      if (!v6) {
        goto LABEL_10;
      }
      goto LABEL_3;
    }
    ++v7;
    if (v10 == v6) {
      goto LABEL_10;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v15 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
LABEL_72:
    sub_1AFFC8E38();
    uint64_t v29 = sub_1AFFCB9C8();
    swift_bridgeObjectRelease();
    if (v15 != v29) {
      goto LABEL_19;
    }
    goto LABEL_12;
  }
  if ((unint64_t)*a1 >> 62) {
    goto LABEL_72;
  }
  if (v15 != *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_19:
    uint64_t v16 = v7 + 5;
    while (1)
    {
      unint64_t v5 = v16 - 4;
      uint64_t v17 = *a1;
      if ((*a1 & 0xC000000000000001) != 0)
      {
        uint64_t v18 = MEMORY[0x1B3E8DC70](v16 - 4);
      }
      else
      {
        if ((v5 & 0x8000000000000000) != 0) {
          goto LABEL_55;
        }
        if (v5 >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_56;
        }
        uint64_t v18 = *(void *)(v17 + 8 * v16);
        sub_1AFFC8E48();
      }
      uint64_t v19 = MEMORY[0x1B3E8F200](v18 + 16);
      swift_release();
      swift_unknownObjectRelease();
      if (!v19) {
        goto LABEL_45;
      }
      if (v5 != v7) {
        break;
      }
LABEL_44:
      if (__OFADD__(v7++, 1)) {
        goto LABEL_58;
      }
LABEL_45:
      uint64_t v27 = v16 - 3;
      if (__OFADD__(v5, 1)) {
        goto LABEL_57;
      }
      if ((unint64_t)*a1 >> 62)
      {
        sub_1AFFC8E38();
        uint64_t v28 = sub_1AFFCB9C8();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v28 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      ++v16;
      if (v27 == v28) {
        goto LABEL_12;
      }
    }
    uint64_t v20 = *a1;
    if ((*a1 & 0xC000000000000001) != 0)
    {
      uint64_t v21 = MEMORY[0x1B3E8DC70](v7, *a1);
      uint64_t v20 = *a1;
      if ((*a1 & 0xC000000000000001) == 0)
      {
LABEL_30:
        if ((v5 & 0x8000000000000000) != 0) {
          goto LABEL_61;
        }
        if (v5 >= *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_62;
        }
        uint64_t v22 = *(void *)(v20 + 8 * v16);
        sub_1AFFC8E48();
        goto LABEL_33;
      }
    }
    else
    {
      if (v7 < 0) {
        goto LABEL_59;
      }
      if ((unint64_t)v7 >= *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_60;
      }
      uint64_t v21 = *(void *)(v20 + 8 * v7 + 32);
      sub_1AFFC8E48();
      if ((v20 & 0xC000000000000001) == 0) {
        goto LABEL_30;
      }
    }
    uint64_t v22 = MEMORY[0x1B3E8DC70](v16 - 4, v20);
    uint64_t v20 = *a1;
LABEL_33:
    int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
    *a1 = v20;
    if (!isUniquelyReferenced_nonNull_bridgeObject || v20 < 0 || (v20 & 0x4000000000000000) != 0)
    {
      uint64_t v20 = sub_1AFFB2E54(v20);
      *a1 = v20;
    }
    *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 8 * v7 + 0x20) = v22;
    swift_release();
    sub_1AFFCB1E8();
    uint64_t v24 = *a1;
    int v25 = swift_isUniquelyReferenced_nonNull_bridgeObject();
    *a1 = v24;
    if (!v25 || v24 < 0 || (v24 & 0x4000000000000000) != 0)
    {
      uint64_t v24 = sub_1AFFB2E54(v24);
      *a1 = v24;
    }
    if ((v5 & 0x8000000000000000) != 0) {
      goto LABEL_63;
    }
    if (v5 >= *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_64;
    }
    *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 8 * v16) = v21;
    swift_release();
    sub_1AFFCB1E8();
    goto LABEL_44;
  }
LABEL_12:
  if (!((unint64_t)*a1 >> 62))
  {
    uint64_t v11 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v11 >= v7) {
      goto LABEL_14;
    }
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  sub_1AFFC8E38();
  uint64_t v11 = sub_1AFFCB9C8();
  swift_bridgeObjectRelease();
  if (v11 < v7) {
    goto LABEL_68;
  }
LABEL_14:
  sub_1AFFB40A4(v7, v11);
  _s10StocksCore13ObserverProxyCMa_0();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v12 + 24) = a3;
  uint64_t v13 = swift_unknownObjectWeakAssign();
  MEMORY[0x1B3E8D5F0](v13);
  if (*(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
LABEL_69:
  }
    sub_1AFFCB228();
  sub_1AFFCB278();
  return sub_1AFFCB1E8();
}

void sub_1AFE62FB0(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC10StocksCore21IdentificationService_lockedObservers;
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + OBJC_IVAR____TtC10StocksCore21IdentificationService_lockedObservers));
  swift_unknownObjectRetain();
  uint64_t v4 = sub_1AFD67DB8((uint64_t *)(v3 + 8), a1);
  swift_unknownObjectRelease();
  unint64_t v5 = *(void *)(v3 + 8);
  if (v5 >> 62)
  {
    sub_1AFFC8E38();
    uint64_t v6 = sub_1AFFCB9C8();
    swift_bridgeObjectRelease();
    if (v6 >= v4) {
      goto LABEL_3;
    }
LABEL_7:
    __break(1u);
    return;
  }
  uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v6 < v4) {
    goto LABEL_7;
  }
LABEL_3:
  sub_1AFFB40A4(v4, v6);

  os_unfair_lock_unlock((os_unfair_lock_t)v3);
}

uint64_t sub_1AFE6309C()
{
  return sub_1AFE61E1C();
}

void sub_1AFE630C0()
{
}

uint64_t sub_1AFE630E4()
{
  return sub_1AFE62528();
}

void sub_1AFE63108()
{
}

void sub_1AFE6312C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2 + OBJC_IVAR____TtC10StocksCore21IdentificationService_lockedObservers;
  os_unfair_lock_lock((os_unfair_lock_t)v5);
  sub_1AFE62B20((uint64_t *)(v5 + 8), a1, a2);

  os_unfair_lock_unlock((os_unfair_lock_t)v5);
}

void sub_1AFE631A0(uint64_t a1)
{
}

void sub_1AFE63294(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t ObjectType = swift_getObjectType();
  sub_1AFFC8E38();
  if (sub_1AFE61E1C() == a2 && v7 == a3)
  {
    swift_bridgeObjectRelease_n();
    return;
  }
  char v8 = sub_1AFFCBCE8();
  swift_bridgeObjectRelease();
  if ((v8 & 1) == 0)
  {
    uint64_t v9 = *(void **)&v3[OBJC_IVAR____TtC10StocksCore21IdentificationService_sensitiveUserDefaults];
    uint64_t v10 = (void *)sub_1AFFCAE68();
    uint64_t v11 = (void *)sub_1AFFCAE68();
    objc_msgSend(v9, sel_setObject_forKey_, v10, v11);

    uint64_t v12 = *(void **)&v4[OBJC_IVAR____TtC10StocksCore21IdentificationService_stocksKitDefaults];
    uint64_t v13 = (void *)sub_1AFFCAE68();
    unint64_t v14 = (void *)sub_1AFFCAE68();
    objc_msgSend(v12, sel_setObject_forKey_, v13, v14);

    uint64_t v15 = &v4[OBJC_IVAR____TtC10StocksCore21IdentificationService_lockedObservers];
    os_unfair_lock_lock((os_unfair_lock_t)&v4[OBJC_IVAR____TtC10StocksCore21IdentificationService_lockedObservers]);
    unint64_t v16 = *((void *)v15 + 1);
    sub_1AFFC8E38();
    os_unfair_lock_unlock((os_unfair_lock_t)v15);
    if (v16 >> 62)
    {
      sub_1AFFC8E38();
      uint64_t v17 = sub_1AFFCB9C8();
      swift_bridgeObjectRelease();
      if (v17)
      {
LABEL_7:
        uint64_t v26 = a2;
        uint64_t v27 = a3;
        if (v17 < 1)
        {
          __break(1u);
        }
        else
        {
          uint64_t v18 = 0;
          unint64_t v28 = v16 & 0xC000000000000001;
          do
          {
            if (v28)
            {
              uint64_t v20 = MEMORY[0x1B3E8DC70](v18, v16);
            }
            else
            {
              uint64_t v20 = *(void *)(v16 + 8 * v18 + 32);
              sub_1AFFC8E48();
            }
            v30[3] = ObjectType;
            v30[4] = &off_1F0873E78;
            v30[0] = v4;
            if (MEMORY[0x1B3E8F200](v20 + 16))
            {
              uint64_t v21 = *(void *)(v20 + 24);
              uint64_t v22 = swift_getObjectType();
              unint64_t v23 = v16;
              uint64_t v24 = *(void (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 8);
              int v25 = v4;
              v24(v30, v26, v27, v22, v21);
              unint64_t v16 = v23;
              swift_unknownObjectRelease();
            }
            else
            {
              uint64_t v19 = v4;
            }
            ++v18;
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);

            swift_release();
          }
          while (v17 != v18);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        return;
      }
    }
    else
    {
      uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v17) {
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
}

void sub_1AFE63594(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t ObjectType = swift_getObjectType();
  sub_1AFFC8E38();
  if (sub_1AFE62528() == a2 && v7 == a3)
  {
    swift_bridgeObjectRelease_n();
    return;
  }
  char v8 = sub_1AFFCBCE8();
  swift_bridgeObjectRelease();
  if ((v8 & 1) == 0)
  {
    uint64_t v9 = *(void **)&v3[OBJC_IVAR____TtC10StocksCore21IdentificationService_sensitiveUserDefaults];
    uint64_t v10 = (void *)sub_1AFFCAE68();
    uint64_t v11 = (void *)sub_1AFFCAE68();
    objc_msgSend(v9, sel_setObject_forKey_, v10, v11);

    uint64_t v12 = &v4[OBJC_IVAR____TtC10StocksCore21IdentificationService_lockedObservers];
    os_unfair_lock_lock((os_unfair_lock_t)&v4[OBJC_IVAR____TtC10StocksCore21IdentificationService_lockedObservers]);
    unint64_t v13 = *((void *)v12 + 1);
    sub_1AFFC8E38();
    os_unfair_lock_unlock((os_unfair_lock_t)v12);
    if (v13 >> 62)
    {
      sub_1AFFC8E38();
      uint64_t v14 = sub_1AFFCB9C8();
      swift_bridgeObjectRelease();
      if (v14)
      {
LABEL_7:
        uint64_t v23 = a2;
        uint64_t v24 = a3;
        if (v14 < 1)
        {
          __break(1u);
        }
        else
        {
          uint64_t v15 = 0;
          unint64_t v25 = v13 & 0xC000000000000001;
          do
          {
            if (v25)
            {
              uint64_t v17 = MEMORY[0x1B3E8DC70](v15, v13);
            }
            else
            {
              uint64_t v17 = *(void *)(v13 + 8 * v15 + 32);
              sub_1AFFC8E48();
            }
            v27[3] = ObjectType;
            v27[4] = &off_1F0873E78;
            v27[0] = v4;
            if (MEMORY[0x1B3E8F200](v17 + 16))
            {
              uint64_t v18 = *(void *)(v17 + 24);
              uint64_t v19 = swift_getObjectType();
              unint64_t v20 = v13;
              uint64_t v21 = *(void (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 16);
              uint64_t v22 = v4;
              v21(v27, v23, v24, v19, v18);
              unint64_t v13 = v20;
              swift_unknownObjectRelease();
            }
            else
            {
              unint64_t v16 = v4;
            }
            ++v15;
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);

            swift_release();
          }
          while (v14 != v15);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        return;
      }
    }
    else
    {
      uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v14) {
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
}

uint64_t sub_1AFE6384C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1AFE6387C(a1, a2, a3, a4, a5, (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AFE63A28);
}

uint64_t sub_1AFE63864(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1AFE6387C(a1, a2, a3, a4, a5, (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AFE63B00);
}

uint64_t sub_1AFE6387C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  uint64_t v11 = __swift_project_boxed_opaque_existential_1(a1, v9);

  return a6(v11, a2, a3, v6, v9, v10);
}

uint64_t sub_1AFE638F4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1AFE6392C()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);

  return MEMORY[0x1F4186498](v0, 64, 7);
}

void sub_1AFE6396C(uint64_t *a1)
{
  sub_1AFE61838(a1, *(char **)(v1 + 16), (void *)(v1 + 24));
}

uint64_t sub_1AFE6398C()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1AFE639C4(uint64_t *a1)
{
  sub_1AFE61B58(a1, *(char **)(v1 + 16));
}

uint64_t sub_1AFE639E0()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1AFE63A20(int a1, int a2)
{
  sub_1AFE61254(a1, a2, *(char **)(v2 + 16), *(id *)(v2 + 24));
}

uint64_t sub_1AFE63A28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v15[3] = a5;
  long long v15[4] = a6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v15);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 16))(boxed_opaque_existential_1, a1, a5);
  if (MEMORY[0x1B3E8F200](a4 + 16))
  {
    uint64_t v12 = *(void *)(a4 + 24);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 8))(v15, a2, a3, ObjectType, v12);
    swift_unknownObjectRelease();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
}

uint64_t sub_1AFE63B00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v15[3] = a5;
  long long v15[4] = a6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v15);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 16))(boxed_opaque_existential_1, a1, a5);
  if (MEMORY[0x1B3E8F200](a4 + 16))
  {
    uint64_t v12 = *(void *)(a4 + 24);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 16))(v15, a2, a3, ObjectType, v12);
    swift_unknownObjectRelease();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
}

void sub_1AFE63BD8(void *a1)
{
  uint64_t ObjectType = swift_getObjectType();
  id v4 = objc_msgSend(a1, sel_feldsparID);
  if (!v4) {
    return;
  }
  uint64_t v5 = v4;
  uint64_t v6 = sub_1AFFCAE98();
  uint64_t v8 = v7;

  if (v6 == sub_1AFE61E1C() && v8 == v9)
  {
    swift_bridgeObjectRelease_n();
    return;
  }
  char v11 = sub_1AFFCBCE8();
  swift_bridgeObjectRelease();
  if (v11) {
    goto LABEL_24;
  }
  uint64_t v12 = *(void **)&v1[OBJC_IVAR____TtC10StocksCore21IdentificationService_sensitiveUserDefaults];
  unint64_t v13 = (void *)sub_1AFFCAE68();
  uint64_t v14 = (void *)sub_1AFFCAE68();
  objc_msgSend(v12, sel_setObject_forKey_, v13, v14);

  uint64_t v15 = *(void **)&v1[OBJC_IVAR____TtC10StocksCore21IdentificationService_stocksKitDefaults];
  unint64_t v16 = (void *)sub_1AFFCAE68();
  uint64_t v17 = (void *)sub_1AFFCAE68();
  objc_msgSend(v15, sel_setObject_forKey_, v16, v17);

  uint64_t v18 = &v1[OBJC_IVAR____TtC10StocksCore21IdentificationService_lockedObservers];
  os_unfair_lock_lock((os_unfair_lock_t)&v1[OBJC_IVAR____TtC10StocksCore21IdentificationService_lockedObservers]);
  unint64_t v19 = *((void *)v18 + 1);
  sub_1AFFC8E38();
  os_unfair_lock_unlock((os_unfair_lock_t)v18);
  if (!(v19 >> 62))
  {
    uint64_t v20 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v20) {
      goto LABEL_11;
    }
LABEL_23:
    swift_bridgeObjectRelease();
LABEL_24:
    swift_bridgeObjectRelease();
    return;
  }
  sub_1AFFC8E38();
  uint64_t v20 = sub_1AFFCB9C8();
  swift_bridgeObjectRelease();
  if (!v20) {
    goto LABEL_23;
  }
LABEL_11:
  uint64_t v33 = v6;
  uint64_t v34 = v8;
  if (v20 < 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v21 = 0;
    unint64_t v35 = v19 & 0xC000000000000001;
    uint64_t v31 = v20;
    uint64_t v32 = ObjectType;
    do
    {
      if (v35)
      {
        uint64_t v23 = MEMORY[0x1B3E8DC70](v21, v19);
      }
      else
      {
        uint64_t v23 = *(void *)(v19 + 8 * v21 + 32);
        sub_1AFFC8E48();
      }
      v36[3] = ObjectType;
      v36[4] = &off_1F0873E78;
      v36[0] = v1;
      if (MEMORY[0x1B3E8F200](v23 + 16))
      {
        uint64_t v24 = *(void *)(v23 + 24);
        unint64_t v25 = v19;
        uint64_t v26 = swift_getObjectType();
        uint64_t v27 = *(void (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 8);
        unint64_t v28 = v1;
        uint64_t v29 = v26;
        unint64_t v19 = v25;
        uint64_t v30 = v24;
        uint64_t ObjectType = v32;
        v27(v36, v33, v34, v29, v30);
        uint64_t v20 = v31;
        swift_unknownObjectRelease();
      }
      else
      {
        uint64_t v22 = v1;
      }
      ++v21;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);

      swift_release();
    }
    while (v20 != v21);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

void sub_1AFE63F08(void *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  id v5 = objc_msgSend(a1, sel_adsUserID);
  if (!v5) {
    return;
  }
  uint64_t v6 = v5;
  uint64_t v7 = sub_1AFFCAE98();
  uint64_t v9 = v8;

  if (v7 == sub_1AFE62528() && v9 == v10)
  {
    swift_bridgeObjectRelease_n();
    return;
  }
  char v12 = sub_1AFFCBCE8();
  swift_bridgeObjectRelease();
  if (v12) {
    goto LABEL_24;
  }
  unint64_t v13 = *(void **)&v2[OBJC_IVAR____TtC10StocksCore21IdentificationService_sensitiveUserDefaults];
  uint64_t v14 = (void *)sub_1AFFCAE68();
  uint64_t v15 = (void *)sub_1AFFCAE68();
  objc_msgSend(v13, sel_setObject_forKey_, v14, v15);

  unint64_t v16 = &v2[OBJC_IVAR____TtC10StocksCore21IdentificationService_lockedObservers];
  os_unfair_lock_lock((os_unfair_lock_t)&v2[OBJC_IVAR____TtC10StocksCore21IdentificationService_lockedObservers]);
  unint64_t v17 = *((void *)v16 + 1);
  sub_1AFFC8E38();
  os_unfair_lock_unlock((os_unfair_lock_t)v16);
  if (!(v17 >> 62))
  {
    uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v18) {
      goto LABEL_11;
    }
LABEL_23:
    swift_bridgeObjectRelease();
LABEL_24:
    swift_bridgeObjectRelease();
    return;
  }
  sub_1AFFC8E38();
  uint64_t v18 = sub_1AFFCB9C8();
  swift_bridgeObjectRelease();
  if (!v18) {
    goto LABEL_23;
  }
LABEL_11:
  uint64_t v30 = v7;
  uint64_t v31 = v9;
  if (v18 < 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v19 = 0;
    unint64_t v32 = v17 & 0xC000000000000001;
    uint64_t v29 = v18;
    do
    {
      if (v32)
      {
        uint64_t v21 = MEMORY[0x1B3E8DC70](v19, v17);
      }
      else
      {
        uint64_t v21 = *(void *)(v17 + 8 * v19 + 32);
        sub_1AFFC8E48();
      }
      v33[3] = ObjectType;
      v33[4] = &off_1F0873E78;
      v33[0] = v2;
      if (MEMORY[0x1B3E8F200](v21 + 16))
      {
        uint64_t v22 = ObjectType;
        uint64_t v23 = *(void *)(v21 + 24);
        uint64_t v24 = swift_getObjectType();
        unint64_t v25 = v17;
        uint64_t v26 = *(void (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 16);
        uint64_t v27 = v2;
        uint64_t v28 = v23;
        uint64_t ObjectType = v22;
        uint64_t v18 = v29;
        v26(v33, v30, v31, v24, v28);
        unint64_t v17 = v25;
        swift_unknownObjectRelease();
      }
      else
      {
        uint64_t v20 = v2;
      }
      ++v19;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);

      swift_release();
    }
    while (v18 != v19);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

_OWORD *sub_1AFE641E8(long long *a1, _OWORD *a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(_OWORD *)((char *)a2 + 25) = *(long long *)((char *)a1 + 25);
  *a2 = v2;
  a2[1] = v3;
  return a2;
}

uint64_t sub_1AFE64200(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1AFE64260()
{
  uint64_t v1 = sub_1AFFCAED8();
  uint64_t v2 = *(void *)(v1 - 8);
  double v3 = MEMORY[0x1F4188790](v1);
  id v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(v0, sel_stocksFields, v3);
  if (!v6) {
    return MEMORY[0x1E4FBC860];
  }
  id v7 = objc_msgSend(v6, sel_stocksFeedConfigJSON);
  swift_unknownObjectRelease();
  if (!v7) {
    return MEMORY[0x1E4FBC860];
  }
  sub_1AFFCAE98();

  sub_1AFFC9198();
  swift_allocObject();
  sub_1AFFC9188();
  sub_1AFFCAEC8();
  uint64_t v8 = sub_1AFFCAEA8();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  if (v10 >> 60 == 15)
  {
    __break(1u);
  }
  else
  {
    sub_1AFE6444C();
    sub_1AFFC9168();
    sub_1AFDE6658(v8, v10);
    swift_release();
    return v12[1];
  }
  return result;
}

unint64_t sub_1AFE6444C()
{
  unint64_t result = qword_1EB810C90;
  if (!qword_1EB810C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB810C90);
  }
  return result;
}

uint64_t sub_1AFE644A0()
{
  uint64_t v0 = sub_1AFFC9528();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  double v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1AFFC9A78();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v5 = sub_1AFFCAE58();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v6 = sub_1AFFC9548();
  __swift_allocate_value_buffer(v6, qword_1E9AFB8F0);
  __swift_project_value_buffer(v6, (uint64_t)qword_1E9AFB8F0);
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4F275D0], v0);
  return sub_1AFFC9558();
}

uint64_t sub_1AFE64680@<X0>(uint64_t a1@<X8>)
{
  return sub_1AFD32B4C(&qword_1E9AF8D90, MEMORY[0x1E4F27608], (uint64_t)qword_1E9AFB8F0, a1);
}

uint64_t sub_1AFE646B8()
{
  sub_1AFE67D70(0, &qword_1EB816B00, MEMORY[0x1E4F27608], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)v12 - v1;
  v12[0] = sub_1AFFC9528();
  uint64_t v3 = *(void *)(v12[0] - 8);
  MEMORY[0x1F4188790](v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1AFFC9A78();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v7 = sub_1AFFCAE58();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v8 = sub_1AFFC9548();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = sub_1AFFC8CD8();
  __swift_allocate_value_buffer(v10, qword_1E9AFB908);
  __swift_project_value_buffer(v10, (uint64_t)qword_1E9AFB908);
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, *MEMORY[0x1E4F275D0], v12[0]);
  sub_1AFFC9558();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_1AFFC8CE8();
}

uint64_t sub_1AFE649C0@<X0>(uint64_t a1@<X8>)
{
  return sub_1AFD32B4C(&qword_1E9AF8D98, MEMORY[0x1E4F18510], (uint64_t)qword_1E9AFB908, a1);
}

uint64_t sub_1AFE649F8()
{
  uint64_t v0 = sub_1AFFC8AD8();
  __swift_allocate_value_buffer(v0, qword_1E9AFB920);
  __swift_project_value_buffer(v0, (uint64_t)qword_1E9AFB920);
  return sub_1AFFC8AC8();
}

uint64_t sub_1AFE64A5C()
{
  sub_1AFE67FF0(0, &qword_1E9AFB938, (uint64_t (*)(void))sub_1AFE64C4C, (uint64_t)&type metadata for NewWatchlistIntent, MEMORY[0x1E4F186C8]);
  MEMORY[0x1F4188790](v0 - 8);
  sub_1AFE67FF0(0, &qword_1E9AFB940, (uint64_t (*)(void))sub_1AFE64C4C, (uint64_t)&type metadata for NewWatchlistIntent, MEMORY[0x1E4F186C0]);
  MEMORY[0x1F4188790](v1);
  sub_1AFE64C4C();
  sub_1AFFC8EA8();
  sub_1AFFC8E98();
  swift_getKeyPath();
  sub_1AFE64CC8();
  sub_1AFFC8E88();
  swift_release();
  sub_1AFFC8E98();
  sub_1AFFC8EB8();
  return sub_1AFFC8E68();
}

unint64_t sub_1AFE64C4C()
{
  unint64_t result = qword_1EB811390;
  if (!qword_1EB811390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB811390);
  }
  return result;
}

uint64_t sub_1AFE64CA0()
{
  return sub_1AFFC8C28();
}

void sub_1AFE64CC8()
{
  if (!qword_1E9AFB948)
  {
    sub_1AFE67FF0(255, &qword_1E9AFB950, (uint64_t (*)(void))sub_1AFD74388, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4F184C8]);
    unint64_t v0 = sub_1AFFCBE88();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9AFB948);
    }
  }
}

uint64_t sub_1AFE64D60()
{
  swift_getKeyPath();
  sub_1AFE64C4C();
  uint64_t v0 = sub_1AFFC8E48();
  swift_release();
  sub_1AFE28A20(0, (unint64_t *)&qword_1EB8183E0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1AFFD2CD0;
  *(void *)(v1 + 32) = v0;
  sub_1AFFCB1E8();
  sub_1AFFC8E48();
  uint64_t v2 = sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  swift_release();
  return v2;
}

uint64_t sub_1AFE64E4C()
{
  return sub_1AFFC8C28();
}

uint64_t sub_1AFE64E70()
{
  sub_1AFFC8C08();
  return v1;
}

uint64_t sub_1AFE64EA4@<X0>(void *a1@<X8>)
{
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8C08();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_1AFE64F1C()
{
  return swift_release();
}

uint64_t sub_1AFE64F94()
{
  return sub_1AFFC8C18();
}

uint64_t (*sub_1AFE64FC8(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1AFFC8BF8();
  return sub_1AFD3325C;
}

uint64_t sub_1AFE65024()
{
  sub_1AFFC8C08();
  return v1;
}

uint64_t sub_1AFE65058@<X0>(void *a1@<X8>)
{
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8C08();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1AFE650D0()
{
  return swift_release();
}

uint64_t sub_1AFE65148()
{
  return sub_1AFFC8C18();
}

uint64_t (*sub_1AFE6517C(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1AFFC8BF8();
  return sub_1AFD3325C;
}

uint64_t sub_1AFE651D8()
{
  return sub_1AFFC8998();
}

uint64_t sub_1AFE651FC(uint64_t a1)
{
  sub_1AFD2CEB0(a1, (uint64_t)v3);
  sub_1AFFC89A8();
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t (*sub_1AFE65240(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1AFFC8988();
  return sub_1AFD3325C;
}

uint64_t sub_1AFE6529C()
{
  return sub_1AFFC89B8();
}

uint64_t sub_1AFE652C0@<X0>(void *a1@<X8>)
{
  long long v58 = a1;
  uint64_t v1 = sub_1AFFC8EC8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v61 = v1;
  uint64_t v62 = v2;
  MEMORY[0x1F4188790](v1);
  uint64_t v60 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFE65B90(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v57 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  long long v59 = (char *)&v44 - v7;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1AFE67D70(0, &qword_1E9AFB958, MEMORY[0x1E4F188C0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v51 = (char *)&v44 - v10;
  sub_1AFE67D70(0, &qword_1EB816B00, MEMORY[0x1E4F27608], v8);
  MEMORY[0x1F4188790](v11 - 8);
  long long v63 = (char *)&v44 - v12;
  uint64_t v13 = sub_1AFFC9528();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  unint64_t v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1AFFC9A78();
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v18 = sub_1AFFCAE58();
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v19 = sub_1AFFC9548();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v22 = (char *)&v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFE67FF0(0, &qword_1E9AFB950, (uint64_t (*)(void))sub_1AFD74388, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4F184C8]);
  uint64_t v47 = v23;
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  uint64_t v24 = *MEMORY[0x1E4F275D0];
  unint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 104);
  v25(v16, v24, v13);
  id v49 = v22;
  sub_1AFFC9558();
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  unsigned int v52 = v24;
  uint64_t v55 = v14 + 104;
  uint64_t v56 = v13;
  id v50 = v25;
  v25(v16, v24, v13);
  uint64_t v26 = v63;
  uint64_t v27 = v16;
  sub_1AFFC9558();
  uint64_t v28 = *(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56);
  uint64_t v53 = v20 + 56;
  uint64_t v54 = v19;
  id v48 = v28;
  v28(v26, 0, 1, v19);
  uint64_t v29 = sub_1AFFCADE8();
  long long v64 = 0uLL;
  (*(void (**)(void))(*(void *)(v29 - 8) + 56))();
  if (qword_1E9AF8DA0 != -1) {
    swift_once();
  }
  uint64_t v30 = sub_1AFFC8AD8();
  uint64_t v31 = __swift_project_value_buffer(v30, (uint64_t)qword_1E9AFB920);
  uint64_t v32 = *(void *)(v30 - 8);
  uint64_t v33 = v59;
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v59, v31, v30);
  uint64_t v44 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56);
  v44(v33, 0, 1, v30);
  unsigned int v46 = *MEMORY[0x1E4F186F0];
  uint64_t v34 = *(void (**)(void))(v62 + 104);
  v62 += 104;
  uint64_t v45 = (void (*)(char *, void, uint64_t))v34;
  v34(v60);
  uint64_t v51 = (char *)sub_1AFFC8C78();
  sub_1AFE65BC4();
  uint64_t v47 = v35;
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  uint64_t v36 = v52;
  uint64_t v37 = v56;
  uint64_t v38 = v50;
  v50(v27, v52, v56);
  sub_1AFFC9558();
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  v38(v27, v36, v37);
  uint64_t v39 = v63;
  sub_1AFFC9558();
  v48(v39, 0, 1, v54);
  *(void *)&long long v64 = 0;
  unint64_t v40 = v44;
  v44(v59, 1, 1, v30);
  v40(v57, 1, 1, v30);
  v45(v60, v46, v61);
  sub_1AFE65DCC(&qword_1EB810BC0, (void (*)(uint64_t))type metadata accessor for SymbolEntity);
  uint64_t v41 = sub_1AFFC8C68();
  sub_1AFE67D70(0, (unint64_t *)&qword_1EB8167E0, (uint64_t (*)(uint64_t))sub_1AFD33A98, MEMORY[0x1E4F18188]);
  sub_1AFFC8A08();
  long long v64 = 0u;
  long long v65 = 0u;
  uint64_t v66 = 0;
  sub_1AFFC89F8();
  uint64_t result = sub_1AFFC89C8();
  uint64_t v43 = v58;
  void *v58 = v51;
  v43[1] = v41;
  v43[2] = result;
  return result;
}

void sub_1AFE65B90(uint64_t a1)
{
}

void sub_1AFE65BC4()
{
  if (!qword_1E9AFB960)
  {
    sub_1AFE67D70(255, &qword_1E9AFB968, (uint64_t (*)(uint64_t))sub_1AFE65C58, MEMORY[0x1E4FBB718]);
    sub_1AFE65C8C();
    unint64_t v0 = sub_1AFFC8C98();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9AFB960);
    }
  }
}

void sub_1AFE65C58(uint64_t a1)
{
}

unint64_t sub_1AFE65C8C()
{
  unint64_t result = qword_1E9AFB970;
  if (!qword_1E9AFB970)
  {
    sub_1AFE67D70(255, &qword_1E9AFB968, (uint64_t (*)(uint64_t))sub_1AFE65C58, MEMORY[0x1E4FBB718]);
    sub_1AFE65D2C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB970);
  }
  return result;
}

unint64_t sub_1AFE65D2C()
{
  unint64_t result = qword_1E9AFB978;
  if (!qword_1E9AFB978)
  {
    sub_1AFE65C58(255);
    sub_1AFE65DCC((unint64_t *)&qword_1EB816B20, (void (*)(uint64_t))type metadata accessor for SymbolEntity);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1E9AFB978);
  }
  return result;
}

uint64_t sub_1AFE65DCC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AFE65E14(uint64_t a1)
{
  *(void *)(v2 + 456) = a1;
  sub_1AFE67D70(0, &qword_1EB810BC8, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity, MEMORY[0x1E4FBB718]);
  *(void *)(v2 + 464) = swift_task_alloc();
  uint64_t v3 = type metadata accessor for SymbolEntity();
  *(void *)(v2 + 472) = v3;
  *(void *)(v2 + 480) = *(void *)(v3 - 8);
  *(void *)(v2 + 488) = swift_task_alloc();
  *(void *)(v2 + 496) = swift_task_alloc();
  sub_1AFE65B90(0);
  *(void *)(v2 + 504) = swift_task_alloc();
  uint64_t v4 = sub_1AFFC92A8();
  *(void *)(v2 + 512) = v4;
  *(void *)(v2 + 520) = *(void *)(v4 - 8);
  *(void *)(v2 + 528) = swift_task_alloc();
  *(_OWORD *)(v2 + 536) = *(_OWORD *)v1;
  *(void *)(v2 + 552) = *(void *)(v1 + 16);
  return MEMORY[0x1F4188298](sub_1AFE65FDC, 0, 0);
}

uint64_t sub_1AFE65FDC()
{
  uint64_t v26 = v0;
  if (qword_1EB810B30 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1AFFCA8A8();
  v0[70] = __swift_project_value_buffer(v1, (uint64_t)qword_1EB810AF0);
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  uint64_t v2 = sub_1AFFCA888();
  os_log_type_t v3 = sub_1AFFCB478();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    uint64_t v25 = v5;
    *(_DWORD *)uint64_t v4 = 136315138;
    sub_1AFFC8E48();
    sub_1AFFC8E48();
    sub_1AFFC8E48();
    sub_1AFFC8C08();
    swift_release();
    swift_release();
    swift_release();
    v0[56] = sub_1AFD36BA8(v0[38], v0[39], &v25);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    _os_log_impl(&dword_1AFD01000, v2, v3, "Creating watchlist name=%s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v5, -1, -1);
    MEMORY[0x1B3E8F0D0](v4, -1, -1);
  }
  else
  {
    swift_release_n();
    swift_release_n();
    swift_release_n();
  }

  uint64_t v6 = v0[66];
  uint64_t v7 = v0[65];
  uint64_t v8 = v0[64];
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8C08();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v9 = v0[49];
  v0[46] = v0[48];
  v0[47] = v9;
  sub_1AFFC9268();
  v0[71] = sub_1AFD3AE10();
  uint64_t v10 = sub_1AFFCB6B8();
  unint64_t v12 = v11;
  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v0[72] = v13;
  v0[73] = (v7 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v13(v6, v8);
  swift_bridgeObjectRelease();
  uint64_t v14 = HIBYTE(v12) & 0xF;
  if ((v12 & 0x2000000000000000) == 0) {
    uint64_t v14 = v10 & 0xFFFFFFFFFFFFLL;
  }
  if (v14)
  {
    sub_1AFFC8E48();
    sub_1AFFC8E48();
    sub_1AFFC8E48();
    sub_1AFFC8998();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v15 = v0[22];
    uint64_t v16 = v0[23];
    __swift_project_boxed_opaque_existential_1(v0 + 19, v15);
    v0[77] = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v16 + 72))(v10, v12, v15, v16);
    swift_bridgeObjectRelease();
    uint64_t v17 = (void *)swift_task_alloc();
    v0[78] = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_1AFE66A48;
    return MEMORY[0x1F415EBC8](v0 + 8);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1AFFC8E48();
    sub_1AFFC8E48();
    sub_1AFFC8E48();
    v0[74] = sub_1AFFC8C28();
    swift_release();
    swift_release();
    swift_release();
    if (qword_1E9AF8DA0 != -1) {
      swift_once();
    }
    uint64_t v18 = v0[63];
    uint64_t v19 = sub_1AFFC8AD8();
    uint64_t v20 = __swift_project_value_buffer(v19, (uint64_t)qword_1E9AFB920);
    uint64_t v21 = *(void *)(v19 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v18, v20, v19);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v19);
    uint64_t v22 = (void *)swift_task_alloc();
    v0[75] = v22;
    *uint64_t v22 = v0;
    v22[1] = sub_1AFE665A4;
    uint64_t v23 = v0[63];
    return MEMORY[0x1F40D4070](v0 + 50, v23);
  }
}

uint64_t sub_1AFE665A4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 608) = v0;
  swift_task_dealloc();
  sub_1AFE67DD4(*(void *)(v2 + 504), (uint64_t (*)(void))sub_1AFE65B90);
  swift_release();
  if (v0) {
    os_log_type_t v3 = sub_1AFE679D4;
  }
  else {
    os_log_type_t v3 = sub_1AFE66708;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1AFE66708()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[72];
  uint64_t v2 = v0[66];
  uint64_t v3 = v0[64];
  uint64_t v4 = v0[51];
  v0[40] = v0[50];
  v0[41] = v4;
  sub_1AFFC9268();
  uint64_t v5 = sub_1AFFCB6B8();
  unint64_t v7 = v6;
  v1(v2, v3);
  swift_bridgeObjectRelease();
  uint64_t v8 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0) {
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v8)
  {
    sub_1AFFC8E48();
    sub_1AFFC8E48();
    sub_1AFFC8E48();
    sub_1AFFC8998();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v9 = v0[22];
    uint64_t v10 = v0[23];
    __swift_project_boxed_opaque_existential_1(v0 + 19, v9);
    v0[77] = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v10 + 72))(v5, v7, v9, v10);
    swift_bridgeObjectRelease();
    unint64_t v11 = (void *)swift_task_alloc();
    v0[78] = v11;
    *unint64_t v11 = v0;
    v11[1] = sub_1AFE66A48;
    return MEMORY[0x1F415EBC8](v0 + 8);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1AFFC8E48();
    sub_1AFFC8E48();
    sub_1AFFC8E48();
    v0[74] = sub_1AFFC8C28();
    swift_release();
    swift_release();
    swift_release();
    if (qword_1E9AF8DA0 != -1) {
      swift_once();
    }
    uint64_t v12 = v0[63];
    uint64_t v13 = sub_1AFFC8AD8();
    uint64_t v14 = __swift_project_value_buffer(v13, (uint64_t)qword_1E9AFB920);
    uint64_t v15 = *(void *)(v13 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v12, v14, v13);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v13);
    uint64_t v16 = (void *)swift_task_alloc();
    v0[75] = v16;
    *uint64_t v16 = v0;
    v16[1] = sub_1AFE665A4;
    uint64_t v17 = v0[63];
    return MEMORY[0x1F40D4070](v0 + 50, v17);
  }
}

uint64_t sub_1AFE66A48()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 632) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0)
  {
    uint64_t v3 = sub_1AFE67A74;
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1(v2 + 152);
    uint64_t v3 = sub_1AFE66B88;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1AFE66B88()
{
  int v103 = v0;
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8C08();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = v0[54];
  uint64_t v77 = v0;
  if (v1)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v2 = sub_1AFFCA888();
    os_log_type_t v3 = sub_1AFFCB478();
    uint64_t v75 = v1;
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v84 = v0 + 53;
      uint64_t v86 = v0 + 52;
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      uint64_t v88 = swift_slowAlloc();
      uint64_t v90 = v88;
      *(_DWORD *)uint64_t v4 = 136315138;
      int64_t v5 = *(void *)(v1 + 16);
      uint64_t v6 = MEMORY[0x1E4FBC860];
      if (v5)
      {
        os_log_type_t v78 = v3;
        uint64_t v80 = v4;
        uint64_t v82 = v2;
        unint64_t v7 = v0;
        uint64_t v8 = v0[62];
        uint64_t v9 = v7[60];
        *(void *)&long long v93 = MEMORY[0x1E4FBC860];
        sub_1AFD9DA10(0, v5, 0);
        uint64_t v10 = v1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
        uint64_t v11 = *(void *)(v9 + 72);
        uint64_t v6 = v93;
        do
        {
          uint64_t v12 = (uint64_t *)v77[62];
          sub_1AFD5BCD0(v10, (uint64_t)v12);
          uint64_t v13 = *v12;
          uint64_t v14 = *(void *)(v8 + 8);
          sub_1AFFC8E38();
          sub_1AFE67DD4((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for SymbolEntity);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1AFD9DA10(0, *(void *)(v6 + 16) + 1, 1);
            uint64_t v6 = v93;
          }
          unint64_t v16 = *(void *)(v6 + 16);
          unint64_t v15 = *(void *)(v6 + 24);
          if (v16 >= v15 >> 1)
          {
            sub_1AFD9DA10(v15 > 1, v16 + 1, 1);
            uint64_t v6 = v93;
          }
          *(void *)(v6 + 16) = v16 + 1;
          uint64_t v17 = v6 + 16 * v16;
          *(void *)(v17 + 32) = v13;
          *(void *)(v17 + 40) = v14;
          v10 += v11;
          --v5;
        }
        while (v5);
        uint64_t v0 = v77;
        uint64_t v1 = v75;
        uint64_t v4 = v80;
        uint64_t v2 = v82;
        os_log_type_t v3 = v78;
      }
      *uint64_t v84 = v6;
      sub_1AFE28A20(0, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
      sub_1AFD371B8();
      uint64_t v40 = sub_1AFFCAD88();
      unint64_t v42 = v41;
      swift_bridgeObjectRelease();
      uint64_t *v86 = sub_1AFD36BA8(v40, v42, &v90);
      sub_1AFFCB688();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1AFD01000, v2, v3, "Adding symbols to new watchlist symbols=[%s]", v4, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1B3E8F0D0](v88, -1, -1);
      MEMORY[0x1B3E8F0D0](v4, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    int64_t v43 = *(void *)(v1 + 16);
    if (v43)
    {
      uint64_t v44 = (void *)v0[61];
      uint64_t v45 = v77[60];
      uint64_t v90 = MEMORY[0x1E4FBC860];
      sub_1AFD9DAD0(0, v43, 0);
      uint64_t v46 = v1 + ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80));
      uint64_t v76 = *(void *)(v45 + 72);
      uint64_t v47 = v77;
      int64_t v81 = v43 - 1;
      uint64_t v83 = v90;
      while (1)
      {
        uint64_t v49 = v47[61];
        uint64_t v48 = v47[62];
        uint64_t v79 = v46;
        sub_1AFD5BCD0(v46, v48);
        sub_1AFD5BCD0(v48, v49);
        sub_1AFFC8B28();
        uint64_t v87 = v47[37];
        uint64_t v89 = v47[36];
        sub_1AFFC8B28();
        uint64_t v50 = v47[43];
        uint64_t v85 = v47[42];
        sub_1AFFC8B28();
        uint64_t v51 = v47[44];
        uint64_t v52 = v47[45];
        uint64_t v54 = v44[5];
        uint64_t v53 = v44[6];
        uint64_t v56 = v44[7];
        uint64_t v55 = v44[8];
        v102[0] = 0;
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFD789F8(v89, v87, v85, v50, v51, v52, v102, v54, (uint64_t)&v93, v53, v56, v55, 0, 0, 0, 0);
        sub_1AFE67DD4(v49, (uint64_t (*)(void))type metadata accessor for SymbolEntity);
        sub_1AFE67DD4(v48, (uint64_t (*)(void))type metadata accessor for SymbolEntity);
        uint64_t v57 = v83;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1AFD9DAD0(0, *(void *)(v83 + 16) + 1, 1);
          uint64_t v57 = v90;
        }
        unint64_t v59 = *(void *)(v57 + 16);
        unint64_t v58 = *(void *)(v57 + 24);
        if (v59 >= v58 >> 1)
        {
          sub_1AFD9DAD0(v58 > 1, v59 + 1, 1);
          uint64_t v57 = v90;
        }
        *(void *)(v57 + 16) = v59 + 1;
        uint64_t v60 = v57 + 136 * v59;
        *(_OWORD *)(v60 + 32) = v93;
        long long v61 = v94;
        long long v62 = v95;
        long long v63 = v97;
        *(_OWORD *)(v60 + 80) = v96;
        *(_OWORD *)(v60 + 96) = v63;
        *(_OWORD *)(v60 + 48) = v61;
        *(_OWORD *)(v60 + 64) = v62;
        long long v64 = v98;
        long long v65 = v99;
        long long v66 = v100;
        *(void *)(v60 + 160) = v101;
        *(_OWORD *)(v60 + 128) = v65;
        *(_OWORD *)(v60 + 144) = v66;
        *(_OWORD *)(v60 + 112) = v64;
        if (!v81) {
          break;
        }
        --v81;
        uint64_t v83 = v57;
        uint64_t v47 = v77;
        uint64_t v46 = v79 + v76;
      }
      swift_bridgeObjectRelease();
      uint64_t v0 = v77;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v57 = MEMORY[0x1E4FBC860];
    }
    sub_1AFFC8E48();
    sub_1AFFC8E48();
    sub_1AFFC8E48();
    sub_1AFFC8998();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v67 = v0[17];
    uint64_t v68 = v0[18];
    __swift_project_boxed_opaque_existential_1(v0 + 14, v67);
    uint64_t v69 = v0[9];
    uint64_t v71 = v0[10];
    uint64_t v70 = v0[11];
    uint64_t v72 = v0[12];
    __int16 v73 = *((_WORD *)v0 + 52);
    *(void *)&long long v93 = v0[8];
    *((void *)&v93 + 1) = v69;
    *(void *)&long long v94 = v71;
    *((void *)&v94 + 1) = v70;
    *(void *)&long long v95 = v72;
    WORD4(v95) = v73;
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    v0[80] = sub_1AFF9F8B8(v57, &v93, v67, v68);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v74 = (void *)swift_task_alloc();
    v0[81] = v74;
    void *v74 = v0;
    v74[1] = sub_1AFE67534;
    return MEMORY[0x1F415EBC8](v0 + 2);
  }
  else
  {
    uint64_t v18 = sub_1AFFCA888();
    uint64_t v19 = sub_1AFFCB478();
    if (os_log_type_enabled(v18, (os_log_type_t)v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      *(void *)&long long v93 = v21;
      *(_DWORD *)uint64_t v20 = 136315138;
      swift_beginAccess();
      uint64_t v22 = v0[11];
      unint64_t v23 = v77[12];
      sub_1AFFC8E38();
      uint64_t v24 = v22;
      uint64_t v0 = v77;
      v77[55] = sub_1AFD36BA8(v24, v23, (uint64_t *)&v93);
      sub_1AFFCB688();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AFD01000, v18, (os_log_type_t)v19, "Successfully created new watchlist id=%s", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1B3E8F0D0](v21, -1, -1);
      MEMORY[0x1B3E8F0D0](v20, -1, -1);
    }

    uint64_t v25 = v0[60];
    uint64_t v26 = v0[58];
    uint64_t v27 = v0[59];
    swift_beginAccess();
    uint64_t v28 = v0[9];
    uint64_t v30 = v0[10];
    uint64_t v29 = v0[11];
    uint64_t v31 = v0[12];
    __int16 v32 = *((_WORD *)v0 + 52);
    *(void *)&long long v93 = v0[8];
    *((void *)&v93 + 1) = v28;
    *(void *)&long long v94 = v30;
    *((void *)&v94 + 1) = v29;
    *(void *)&long long v95 = v31;
    WORD4(v95) = v32;
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    WatchlistEntity.init(from:)((uint64_t)&v93, &v90);
    uint64_t v33 = v90;
    uint64_t v34 = v91;
    uint64_t v35 = v92;
    v0[30] = v90;
    v0[31] = v34;
    v0[32] = v35;
    *(void *)&long long v93 = v33;
    *((void *)&v93 + 1) = v34;
    *(void *)&long long v94 = v35;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 56))(v26, 1, 1, v27);
    sub_1AFFC8E38();
    sub_1AFFC8E48();
    sub_1AFD5A49C((uint64_t *)&v93, v26, &v90);
    uint64_t v36 = v91;
    uint64_t v37 = v92;
    v0[33] = v90;
    v0[34] = v36;
    v0[35] = v37;
    sub_1AFD33084();
    sub_1AFD5907C();
    sub_1AFFC8AF8();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v38 = (uint64_t (*)(void))v0[1];
    return v38();
  }
}