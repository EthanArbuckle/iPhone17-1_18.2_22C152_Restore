__n128 __swift_memcpy136_8(uint64_t a1, uint64_t a2)
{
  long long v2;
  long long v3;
  long long v4;
  __n128 result;
  long long v6;
  long long v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  result = *(__n128 *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t objectdestroy_3Tm()
{
  sub_1AFF02ACC(0, &qword_1EB817DD8, MEMORY[0x1E4FAA650]);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x1F4186498](v0, v5, v6);
}

__n128 __swift_memcpy144_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(__n128 *)(a1 + 80) = result;
  *(_OWORD *)(a1 + 96) = v6;
  return result;
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

uint64_t block_destroy_helper_13()
{
  return swift_release();
}

uint64_t block_destroy_helper_14()
{
  return swift_release();
}

uint64_t block_destroy_helper_15()
{
  return swift_release();
}

uint64_t block_destroy_helper_16()
{
  return swift_release();
}

uint64_t block_destroy_helper_17()
{
  return swift_release();
}

uint64_t block_destroy_helper_18()
{
  return swift_release();
}

uint64_t block_destroy_helper_19()
{
  return swift_release();
}

uint64_t block_destroy_helper_20()
{
  return swift_release();
}

uint64_t block_destroy_helper_21()
{
  return swift_release();
}

uint64_t block_destroy_helper_22()
{
  return swift_release();
}

uint64_t block_destroy_helper_23()
{
  return swift_release();
}

uint64_t block_destroy_helper_24()
{
  return swift_release();
}

uint64_t block_destroy_helper_25()
{
  return swift_release();
}

uint64_t block_destroy_helper_26()
{
  return swift_release();
}

uint64_t block_destroy_helper_27()
{
  return swift_release();
}

uint64_t block_destroy_helper_28()
{
  return swift_release();
}

uint64_t block_destroy_helper_29()
{
  return swift_release();
}

uint64_t block_destroy_helper_30()
{
  return swift_release();
}

uint64_t block_destroy_helper_31()
{
  return swift_release();
}

uint64_t block_destroy_helper_32()
{
  return swift_release();
}

uint64_t block_destroy_helper_33()
{
  return swift_release();
}

uint64_t block_destroy_helper_34()
{
  return swift_release();
}

uint64_t block_destroy_helper_35()
{
  return swift_release();
}

uint64_t block_destroy_helper_36()
{
  return swift_release();
}

uint64_t block_destroy_helper_37()
{
  return swift_release();
}

uint64_t block_destroy_helper_38()
{
  return swift_release();
}

uint64_t block_destroy_helper_39()
{
  return swift_release();
}

uint64_t block_destroy_helper_40()
{
  return swift_release();
}

uint64_t block_destroy_helper_41()
{
  return swift_release();
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *__n128 result = *a2;
  return result;
}

__n128 __swift_memcpy104_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

__n128 __swift_memcpy42_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 26) = *(_OWORD *)(a2 + 26);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t objectdestroy_4Tm()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t objectdestroy_4Tm_0()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t objectdestroy_4Tm_1(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v1, a1, 7);
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

id SCWDatabaseLog()
{
  if (SCWDatabaseLog_onceToken != -1) {
    dispatch_once(&SCWDatabaseLog_onceToken, &__block_literal_global);
  }
  uint64_t v0 = (void *)SCWDatabaseLog_databaseLog;

  return v0;
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t objectdestroy_16Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

void sub_1AFD08708(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_1AFD0896C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1AFFC8E48();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1AFFC8E48();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1AFFC8E48();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1AFFC8E48();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1AFFC8E48();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1AFFC8E48();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1AFFC8E48();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1AFFC8E48();
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1AFFC8E48();
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1AFFC8E48();
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1AFFC8E48();
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1AFFC8E48();
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1AFFC8E48();
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1AFFC8E48();
}

uint64_t block_copy_helper_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1AFFC8E48();
}

uint64_t block_copy_helper_14(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1AFFC8E48();
}

uint64_t block_copy_helper_15(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1AFFC8E48();
}

uint64_t block_copy_helper_16(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1AFFC8E48();
}

uint64_t block_copy_helper_17(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1AFFC8E48();
}

uint64_t block_copy_helper_18(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1AFFC8E48();
}

uint64_t block_copy_helper_19(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1AFFC8E48();
}

uint64_t block_copy_helper_20(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1AFFC8E48();
}

uint64_t block_copy_helper_21(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1AFFC8E48();
}

uint64_t block_copy_helper_22(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1AFFC8E48();
}

uint64_t block_copy_helper_23(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1AFFC8E48();
}

uint64_t block_copy_helper_24(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1AFFC8E48();
}

uint64_t block_copy_helper_25(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1AFFC8E48();
}

uint64_t block_copy_helper_26(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1AFFC8E48();
}

uint64_t block_copy_helper_27(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1AFFC8E48();
}

uint64_t block_copy_helper_28(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1AFFC8E48();
}

uint64_t block_copy_helper_29(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1AFFC8E48();
}

uint64_t block_copy_helper_30(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1AFFC8E48();
}

uint64_t block_copy_helper_31(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1AFFC8E48();
}

uint64_t block_copy_helper_32(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1AFFC8E48();
}

uint64_t block_copy_helper_33(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1AFFC8E48();
}

uint64_t block_copy_helper_34(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1AFFC8E48();
}

uint64_t block_copy_helper_35(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1AFFC8E48();
}

uint64_t block_copy_helper_36(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1AFFC8E48();
}

uint64_t block_copy_helper_37(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1AFFC8E48();
}

uint64_t block_copy_helper_38(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1AFFC8E48();
}

uint64_t block_copy_helper_39(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1AFFC8E48();
}

uint64_t block_copy_helper_40(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1AFFC8E48();
}

uint64_t block_copy_helper_41(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1AFFC8E48();
}

uint64_t __SCWDatabaseLog_block_invoke()
{
  SCWDatabaseLog_databaseLog = (uint64_t)os_log_create("com.apple.stocks", "SCWDatabase");

  return MEMORY[0x1F41817F8]();
}

void __Block_byref_object_dispose_(uint64_t a1)
{
}

void sub_1AFD10B24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_1(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0x16u);
}

void sub_1AFD12218(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
}

void sub_1AFD13C30(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1AFD14148(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_1AFD15CF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  _Block_object_dispose(&a39, 8);
  _Block_object_dispose((const void *)(v39 - 208), 8);
  _Block_object_dispose((const void *)(v39 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_1AFD165AC(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_1AFD16B20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_0_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void OUTLINED_FUNCTION_1_0(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0x16u);
}

void sub_1AFD21B70(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_1AFD250E4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1AFD251FC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

__CFString *OAuthURLEncodedString(CFStringRef originalString)
{
  uint64_t v1 = (__CFString *)CFURLCreateStringByAddingPercentEscapes((CFAllocatorRef)*MEMORY[0x1E4F1CF80], originalString, 0, @":/?#[]@!$&’()*+,;='",
                       0x8000100u);

  return v1;
}

id ParameterString(void *a1)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  id v2 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id obj = [v1 allKeys];
  uint64_t v3 = [obj countByEnumeratingWithState:&v16 objects:v20 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v17;
    do
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        if (*(void *)v17 != v5) {
          objc_enumerationMutation(obj);
        }
        uint64_t v7 = *(void *)(*((void *)&v16 + 1) + 8 * i);
        v8 = NSString;
        uint64_t v9 = [v1 objectForKeyedSubscript:v7];
        uint64_t v10 = OAuthURLEncodedString(v9);
        v11 = [v8 stringWithFormat:@"%@=%@", v7, v10];
        [v2 addObject:v11];
      }
      uint64_t v4 = [obj countByEnumeratingWithState:&v16 objects:v20 count:16];
    }
    while (v4);
  }

  v12 = [v2 sortedArrayUsingSelector:sel_compare_];
  v13 = [v12 componentsJoinedByString:@"&"];

  return v13;
}

id ProductVersion()
{
  if (ProductVersion_onceToken != -1) {
    dispatch_once(&ProductVersion_onceToken, &__block_literal_global_62);
  }
  uint64_t v0 = (void *)ProductVersion_ProductVersion;

  return v0;
}

void __ProductVersion_block_invoke()
{
  id v3 = (id)[objc_alloc(MEMORY[0x1E4F1C9E8]) initWithContentsOfFile:@"/System/Library/CoreServices/SystemVersion.plist"];
  uint64_t v0 = [v3 objectForKey:@"ProductVersion"];
  uint64_t v1 = [v0 copy];
  id v2 = (void *)ProductVersion_ProductVersion;
  ProductVersion_ProductVersion = v1;
}

id ClientInfo()
{
  if (ClientInfo_onceToken != -1) {
    dispatch_once(&ClientInfo_onceToken, &__block_literal_global_70);
  }
  uint64_t v0 = (void *)ClientInfo_ClientInfo;

  return v0;
}

void __ClientInfo_block_invoke()
{
  uint64_t v0 = NSString;
  ProductVersion();
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v1 = [v0 stringWithFormat:@"vendor=\"Apple\" model=\"Stocks\"; version=\"1.0.0.%@\"", v3];;
  id v2 = (void *)ClientInfo_ClientInfo;
  ClientInfo_ClientInfo = v1;
}

id DeviceInfo()
{
  if (DeviceInfo_onceToken != -1) {
    dispatch_once(&DeviceInfo_onceToken, &__block_literal_global_75);
  }
  uint64_t v0 = (void *)DeviceInfo_DeviceInfo;

  return v0;
}

void __DeviceInfo_block_invoke()
{
  uint64_t v0 = NSString;
  ProductVersion();
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v1 = [v0 stringWithFormat:@"make=\"Apple\" model=\"iPhone\"; os=\"iPhone\"; osver=\"%@\"", v3];;
  id v2 = (void *)DeviceInfo_DeviceInfo;
  DeviceInfo_DeviceInfo = v1;
}

id _ConsumerSecret()
{
  if (_ConsumerSecret_onceToken != -1) {
    dispatch_once(&_ConsumerSecret_onceToken, &__block_literal_global_80);
  }
  uint64_t v0 = (void *)_ConsumerSecret_ConsumerSecretString;

  return v0;
}

__CFString *_ConsumerKey()
{
  return @"dj0yJmk9cU51ZlhUZ2ZneDBJJmQ9WVdrOU1rOVVlWE5vTkhNbWNHbzlNQS0tJnM9Y29uc3VtZXJzZWNyZXQmeD1hNw--";
}

id CreateCredential()
{
  id v0 = objc_alloc_init(MEMORY[0x1E4F83910]);
  [v0 setConsumerKey:@"dj0yJmk9cU51ZlhUZ2ZneDBJJmQ9WVdrOU1rOVVlWE5vTkhNbWNHbzlNQS0tJnM9Y29uc3VtZXJzZWNyZXQmeD1hNw--"];
  uint64_t v1 = _ConsumerSecret();
  [v0 setConsumerSecret:v1];

  id v2 = [v0 consumerKey];
  if (!v2) {
    CreateCredential_cold_1();
  }

  id v3 = [v0 consumerSecret];
  if (!v3) {
    CreateCredential_cold_2();
  }

  return v0;
}

id StocksLogForCategory(uint64_t a1)
{
  if (StocksLogForCategory_onceToken[0] != -1) {
    dispatch_once(StocksLogForCategory_onceToken, &__block_literal_global_2);
  }
  id v2 = (void *)StocksLogForCategory_loggingTypes;
  id v3 = [NSNumber numberWithUnsignedInteger:a1];
  uint64_t v4 = [v2 objectForKey:v3];
  uint64_t v5 = v4;
  if (!v4) {
    uint64_t v4 = (void *)MEMORY[0x1E4F14500];
  }
  id v6 = v4;

  return v6;
}

void __StocksLogForCategory_block_invoke()
{
  id v7 = [MEMORY[0x1E4F1CA60] dictionaryWithCapacity:5];
  os_log_t v0 = os_log_create("com.apple.stocks", "serviceLogging");
  objc_msgSend(v7, "scw_safelySetObjectAllowingNil:forKey:", v0, &unk_1F089A050);

  os_log_t v1 = os_log_create("com.apple.stocks", "syncLogging");
  objc_msgSend(v7, "scw_safelySetObjectAllowingNil:forKey:", v1, &unk_1F089A068);

  os_log_t v2 = os_log_create("com.apple.stocks", "duetLogging");
  objc_msgSend(v7, "scw_safelySetObjectAllowingNil:forKey:", v2, &unk_1F089A080);

  os_log_t v3 = os_log_create("com.apple.stocks", "widgetLogging");
  objc_msgSend(v7, "scw_safelySetObjectAllowingNil:forKey:", v3, &unk_1F089A098);

  os_log_t v4 = os_log_create("com.apple.stocks", "watchlistLogging");
  objc_msgSend(v7, "scw_safelySetObjectAllowingNil:forKey:", v4, &unk_1F089A0B0);

  uint64_t v5 = [v7 copy];
  id v6 = (void *)StocksLogForCategory_loggingTypes;
  StocksLogForCategory_loggingTypes = v5;
}

void *char_from_uchar(uint64_t a1, int a2)
{
  if (!ucnv_open()) {
    return 0;
  }
  int MaxCharSize = ucnv_getMaxCharSize();
  os_log_t v4 = malloc_type_malloc((a2 + 10) * MaxCharSize, 0xFF9FF06BuLL);
  if (v4)
  {
    ucnv_fromUChars();
    ucnv_close();
  }
  return v4;
}

void *formattedCountWithLocale(uint64_t a1, uint64_t a2, int a3, int a4)
{
  unum_open();
  unum_setAttribute();
  if (a4)
  {
    unum_setAttribute();
LABEL_4:
    unum_setAttribute();
    goto LABEL_5;
  }
  unum_setAttribute();
  if (!a3) {
    goto LABEL_4;
  }
LABEL_5:
  unum_formatInt64();
  id v6 = char_from_uchar(0, 0);
  free(0);
  unum_close();
  return v6;
}

BOOL SCIsCJKCharacter()
{
  return uscript_hasScript()
      || uscript_hasScript()
      || uscript_hasScript()
      || uscript_hasScript()
      || uscript_hasScript() != 0;
}

void OUTLINED_FUNCTION_1_1(void *a1, NSObject *a2, int a3, const char *a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint8_t buf)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &buf, 0x26u);
}

uint64_t sub_1AFD29EB0()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  swift_unknownObjectRelease();
  return v0;
}

uint64_t sub_1AFD29EF0()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1AFD29F48()
{
  uint64_t v1 = v0;
  sub_1AFD2C4F4();
  os_log_t v2 = (void *)sub_1AFFCB638();
  sub_1AFFCB478();
  sub_1AFFCA878();

  type metadata accessor for ForYouConfigRecord(0);
  sub_1AFFCA7C8();
  sub_1AFFC8E48();
  os_log_t v3 = (void *)sub_1AFFCA5E8();
  sub_1AFD2C5AC();
  sub_1AFFCA668();
  swift_release();
  swift_release();

  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = sub_1AFD2C640;
  *(void *)(v4 + 24) = v1;
  sub_1AFFC8E48();
  uint64_t v5 = (void *)sub_1AFFCA5E8();
  sub_1AFD2D980(0, (unint64_t *)&qword_1EB818000, (uint64_t)&type metadata for Headline, MEMORY[0x1E4FBB320]);
  sub_1AFFCA678();
  swift_release();
  swift_release();

  sub_1AFFC8E48();
  id v6 = (void *)sub_1AFFCA5E8();
  sub_1AFFCA668();
  swift_release();
  swift_release();

  id v7 = (void *)sub_1AFFCA5E8();
  sub_1AFFCA678();
  swift_release();

  v8 = (void *)sub_1AFFCA5E8();
  uint64_t v9 = sub_1AFFCA6B8();
  swift_release();

  return v9;
}

uint64_t sub_1AFD2A1AC()
{
  return sub_1AFFCB638();
}

uint64_t sub_1AFD2A1DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(type metadata accessor for ForYouConfigRecord(0) - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x1F4188790]();
  sub_1AFD2CD48();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1AFFD05F0;
  uint64_t v17 = 0;
  unint64_t v18 = 0xE000000000000000;
  sub_1AFFCB928();
  *(void *)(v6 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v6 + 64) = sub_1AFD2CE00();
  *(void *)(v6 + 32) = 0;
  *(void *)(v6 + 40) = 0xE000000000000000;
  sub_1AFD2C4F4();
  id v7 = (void *)sub_1AFFCB638();
  sub_1AFFCB478();
  sub_1AFFCA878();
  swift_bridgeObjectRelease();

  uint64_t v15 = a2;
  uint64_t v16 = a1;
  sub_1AFD2D58C();
  sub_1AFFCA7C8();
  v8 = (void *)sub_1AFFCA5E8();
  sub_1AFD2D980(0, (unint64_t *)&qword_1EB818000, (uint64_t)&type metadata for Headline, MEMORY[0x1E4FBB320]);
  sub_1AFFCA678();
  swift_release();

  sub_1AFD2D4A8(a1, (uint64_t)&v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)], type metadata accessor for ForYouConfigRecord);
  unint64_t v9 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v10 = swift_allocObject();
  sub_1AFD2D750((uint64_t)&v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)], v10 + v9);
  uint64_t v11 = (void *)sub_1AFFCA5E8();
  sub_1AFD2C5AC();
  uint64_t v12 = sub_1AFFCA678();
  swift_release();
  swift_release();

  return v12;
}

uint64_t sub_1AFD2A498(uint64_t a1, uint64_t a2)
{
  sub_1AFD2CD48();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1AFFD05F0;
  uint64_t v5 = sub_1AFFCBC88();
  uint64_t v7 = v6;
  *(void *)(v4 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v4 + 64) = sub_1AFD2CE00();
  *(void *)(v4 + 32) = v5;
  *(void *)(v4 + 40) = v7;
  sub_1AFD2C4F4();
  v8 = (void *)sub_1AFFCB638();
  sub_1AFFCB478();
  sub_1AFFCA878();
  swift_bridgeObjectRelease();

  return sub_1AFD2A598(a1, a2);
}

uint64_t sub_1AFD2A598(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v40 = a2;
  if (v3)
  {
    v44[18] = MEMORY[0x1E4FBC860];
    sub_1AFFCB8B8();
    uint64_t v5 = a2 + 32;
    for (uint64_t i = v3 - 1; ; --i)
    {
      sub_1AFD2CF70(v5, (uint64_t)v43);
      sub_1AFD2CF70((uint64_t)v43, (uint64_t)v44);
      sub_1AFD2D15C((uint64_t)v44);
      sub_1AFD2D168((uint64_t)v44);
      swift_unknownObjectRetain();
      sub_1AFFCB888();
      sub_1AFFCB8C8();
      sub_1AFFCB8D8();
      sub_1AFFCB898();
      if (!i) {
        break;
      }
      v5 += 144;
    }
  }
  id v7 = objc_msgSend(*(id *)(v2 + 152), sel_configuration);
  sub_1AFD2D178(0, (unint64_t *)&qword_1EB818100);
  v8 = (void *)sub_1AFFCB1B8();
  swift_bridgeObjectRelease();
  sub_1AFD2AE40();
  sub_1AFD2D178(0, (unint64_t *)&unk_1EB811A50);
  unint64_t v9 = (void *)sub_1AFFCAC78();
  swift_bridgeObjectRelease();
  id v39 = v7;
  id v10 = (id)FCAssignHeadlineMetadata();

  if (v10)
  {
    unint64_t v11 = sub_1AFFCB1C8();

    if (v11 >> 62) {
      goto LABEL_30;
    }
    uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    sub_1AFFC8E38();
    while (v12)
    {
      unint64_t v42 = v11 & 0xC000000000000001;
      v13 = (void *)MEMORY[0x1E4FBC868];
      uint64_t v14 = 4;
      unint64_t v41 = v11;
      while (1)
      {
        uint64_t v16 = v14 - 4;
        if (!v42) {
          break;
        }
        uint64_t v17 = (void *)MEMORY[0x1B3E8DC70](v14 - 4, v11);
        uint64_t v18 = v14 - 3;
        if (__OFADD__(v16, 1)) {
          goto LABEL_27;
        }
LABEL_16:
        unint64_t v11 = v12;
        long long v19 = v17;
        id v20 = objc_msgSend(v17, sel_identifier, v39, v40);
        uint64_t v21 = sub_1AFFCAE98();
        uint64_t v23 = v22;

        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v44[0] = v13;
        unint64_t v26 = sub_1AFD79CC8(v21, v23);
        uint64_t v27 = v13[2];
        BOOL v28 = (v25 & 1) == 0;
        uint64_t v29 = v27 + v28;
        if (__OFADD__(v27, v28)) {
          goto LABEL_28;
        }
        char v30 = v25;
        if (v13[3] >= v29)
        {
          if (isUniquelyReferenced_nonNull_native)
          {
            v13 = (void *)v44[0];
            if (v25) {
              goto LABEL_9;
            }
          }
          else
          {
            sub_1AFEB7E90();
            v13 = (void *)v44[0];
            if (v30) {
              goto LABEL_9;
            }
          }
        }
        else
        {
          sub_1AFEB1CEC(v29, isUniquelyReferenced_nonNull_native);
          unint64_t v31 = sub_1AFD79CC8(v21, v23);
          if ((v30 & 1) != (v32 & 1)) {
            goto LABEL_34;
          }
          unint64_t v26 = v31;
          v13 = (void *)v44[0];
          if (v30)
          {
LABEL_9:
            *(void *)(v13[7] + 8 * v26) = v19;
            swift_unknownObjectRelease();
            goto LABEL_10;
          }
        }
        v13[(v26 >> 6) + 8] |= 1 << v26;
        v33 = (uint64_t *)(v13[6] + 16 * v26);
        uint64_t *v33 = v21;
        v33[1] = v23;
        *(void *)(v13[7] + 8 * v26) = v19;
        uint64_t v34 = v13[2];
        BOOL v35 = __OFADD__(v34, 1);
        uint64_t v36 = v34 + 1;
        if (v35) {
          goto LABEL_29;
        }
        v13[2] = v36;
        sub_1AFFC8E38();
LABEL_10:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        ++v14;
        uint64_t v12 = v11;
        BOOL v15 = v18 == v11;
        unint64_t v11 = v41;
        if (v15) {
          goto LABEL_32;
        }
      }
      uint64_t v17 = (void *)swift_unknownObjectRetain();
      uint64_t v18 = v14 - 3;
      if (!__OFADD__(v16, 1)) {
        goto LABEL_16;
      }
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      swift_bridgeObjectRetain_n();
      uint64_t v12 = sub_1AFFCB9C8();
      swift_bridgeObjectRelease();
    }
    v13 = (void *)MEMORY[0x1E4FBC868];
LABEL_32:
    swift_bridgeObjectRelease_n();
    sub_1AFFC8E38();
    uint64_t v37 = sub_1AFD2D1CC(v40, (uint64_t)v13);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease_n();
    return v37;
  }
  else
  {
    __break(1u);
LABEL_34:
    uint64_t result = sub_1AFFCBD68();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AFD2A9BC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  sub_1AFD2CD48();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1AFFD05F0;
  uint64_t v5 = sub_1AFFCBC88();
  uint64_t v7 = v6;
  *(void *)(v4 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v4 + 64) = sub_1AFD2CE00();
  *(void *)(v4 + 32) = v5;
  *(void *)(v4 + 40) = v7;
  sub_1AFD2C4F4();
  v8 = (void *)sub_1AFFCB638();
  sub_1AFFCB478();
  sub_1AFFCA878();
  swift_bridgeObjectRelease();

  uint64_t v9 = *(void *)(a2 + 104);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v9 + 24))(ObjectType, v9);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  *(void *)(v11 + 24) = v3;
  sub_1AFFC8E48();
  sub_1AFFC8E38();
  uint64_t v12 = (void *)sub_1AFFCA5E8();
  sub_1AFD2D980(0, (unint64_t *)&qword_1EB818000, (uint64_t)&type metadata for Headline, MEMORY[0x1E4FBB320]);
  uint64_t v13 = sub_1AFFCA668();
  swift_release();
  swift_release();

  return v13;
}

uint64_t sub_1AFD2AB78@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  sub_1AFD2CD48();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1AFFD05F0;
  uint64_t v5 = sub_1AFFCBC88();
  uint64_t v7 = v6;
  *(void *)(v4 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v4 + 64) = sub_1AFD2CE00();
  *(void *)(v4 + 32) = v5;
  *(void *)(v4 + 40) = v7;
  sub_1AFD2C4F4();
  v8 = (void *)sub_1AFFCB638();
  sub_1AFFCB478();
  sub_1AFFCA878();
  swift_bridgeObjectRelease();

  *a2 = v3;
  return sub_1AFFC8E38();
}

void sub_1AFD2AC78()
{
  sub_1AFFCB468();
  sub_1AFD2CD48();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1AFFD05F0;
  sub_1AFD2CDB0(0, (unint64_t *)&qword_1EB81A110);
  sub_1AFFCB928();
  *(void *)(v0 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v0 + 64) = sub_1AFD2CE00();
  *(void *)(v0 + 32) = 0;
  *(void *)(v0 + 40) = 0xE000000000000000;
  sub_1AFD2C4F4();
  uint64_t v1 = (void *)sub_1AFFCB638();
  sub_1AFFCA878();
  swift_bridgeObjectRelease();
}

uint64_t sub_1AFD2AD7C(void *a1, uint64_t a2)
{
  uint64_t v3 = a1[10];
  uint64_t v4 = a1[11];
  __swift_project_boxed_opaque_existential_1(a1 + 7, v3);
  uint64_t v5 = *(void *)(a2 + *(int *)(type metadata accessor for ForYouConfigRecord(0) + 24));
  sub_1AFD2D868((uint64_t)v8);
  sub_1AFD2D884((uint64_t)v8, (uint64_t)v7);
  return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t, uint64_t))(v4 + 8))(v5, v7, v3, v4);
}

uint64_t sub_1AFD2AE20@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return sub_1AFFC8E38();
}

uint64_t sub_1AFD2AE40()
{
  sub_1AFD2C83C();
  MEMORY[0x1F4188790]();
  v43 = (char *)v39 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for ForYouConfigRecord.Configuration.TopStories.Article(0);
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v4 = (void *)((char *)v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for ForYouConfigRecord.Configuration(0);
  MEMORY[0x1F4188790]();
  uint64_t v6 = (void *)((char *)v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for ForYouConfigRecord(0);
  sub_1AFD2D4A8(v0 + *(int *)(v7 + 20), (uint64_t)v6, type metadata accessor for ForYouConfigRecord.Configuration);
  uint64_t v8 = *v6;
  sub_1AFFC8E38();
  sub_1AFD2D510((uint64_t)v6, type metadata accessor for ForYouConfigRecord.Configuration.TopStories);
  uint64_t v9 = *(void *)(v8 + 16);
  if (!v9)
  {
    uint64_t v12 = (void *)MEMORY[0x1E4FBC868];
LABEL_18:
    swift_bridgeObjectRelease();
    return (uint64_t)v12;
  }
  uint64_t v10 = v8 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v11 = *(void *)(v2 + 72);
  v39[1] = v8;
  uint64_t v40 = v11;
  sub_1AFFC8E38();
  uint64_t v12 = (void *)MEMORY[0x1E4FBC868];
  unint64_t v41 = v4;
  uint64_t v13 = (uint64_t)v43;
  while (1)
  {
    uint64_t v44 = v9;
    sub_1AFD2D4A8(v10, (uint64_t)v4, type metadata accessor for ForYouConfigRecord.Configuration.TopStories.Article);
    uint64_t v15 = *v4;
    uint64_t v14 = v4[1];
    uint64_t v16 = v42;
    sub_1AFD2D4A8((uint64_t)v4 + *(int *)(v42 + 20), v13, (uint64_t (*)(void))sub_1AFD2C83C);
    uint64_t v17 = (uint64_t *)((char *)v4 + *(int *)(v16 + 24));
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    id v20 = (objc_class *)_s16HeadlineMetadataCMa();
    uint64_t v21 = (char *)objc_allocWithZone(v20);
    sub_1AFD2D4A8(v13, (uint64_t)&v21[OBJC_IVAR____TtCV10StocksCore18ForYouConfigRecordP33_FB30AEA7B56282916E4430A3993C597516HeadlineMetadata_displayDate], (uint64_t (*)(void))sub_1AFD2C83C);
    uint64_t v22 = &v21[OBJC_IVAR____TtCV10StocksCore18ForYouConfigRecordP33_FB30AEA7B56282916E4430A3993C597516HeadlineMetadata_storyType];
    *(void *)uint64_t v22 = v18;
    *((void *)v22 + 1) = v19;
    uint64_t v23 = &v21[OBJC_IVAR____TtCV10StocksCore18ForYouConfigRecordP33_FB30AEA7B56282916E4430A3993C597516HeadlineMetadata_title];
    *(void *)uint64_t v23 = 0;
    *((void *)v23 + 1) = 0;
    v46.receiver = v21;
    v46.super_class = v20;
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    id v24 = objc_msgSendSuper2(&v46, sel_init);
    sub_1AFD2D510(v13, (uint64_t (*)(void))sub_1AFD2C83C);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v45 = v12;
    unint64_t v27 = sub_1AFD79CC8(v15, v14);
    uint64_t v28 = v12[2];
    BOOL v29 = (v26 & 1) == 0;
    uint64_t v30 = v28 + v29;
    if (__OFADD__(v28, v29)) {
      break;
    }
    char v31 = v26;
    if (v12[3] >= v30)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v12 = v45;
        if (v26) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_1AFEB7E74();
        uint64_t v12 = v45;
        if (v31) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_1AFEB1CD0(v30, isUniquelyReferenced_nonNull_native);
      unint64_t v32 = sub_1AFD79CC8(v15, v14);
      if ((v31 & 1) != (v33 & 1)) {
        goto LABEL_21;
      }
      unint64_t v27 = v32;
      uint64_t v12 = v45;
      if (v31)
      {
LABEL_3:
        *(void *)(v12[7] + 8 * v27) = v24;
        swift_unknownObjectRelease();
        goto LABEL_4;
      }
    }
    v12[(v27 >> 6) + 8] |= 1 << v27;
    uint64_t v34 = (uint64_t *)(v12[6] + 16 * v27);
    *uint64_t v34 = v15;
    v34[1] = v14;
    *(void *)(v12[7] + 8 * v27) = v24;
    uint64_t v35 = v12[2];
    BOOL v36 = __OFADD__(v35, 1);
    uint64_t v37 = v35 + 1;
    if (v36) {
      goto LABEL_20;
    }
    v12[2] = v37;
    sub_1AFFC8E38();
LABEL_4:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = v41;
    sub_1AFD2D510((uint64_t)v41, type metadata accessor for ForYouConfigRecord.Configuration.TopStories.Article);
    v10 += v40;
    uint64_t v9 = v44 - 1;
    if (v44 == 1)
    {
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
  }
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  uint64_t result = sub_1AFFCBD68();
  __break(1u);
  return result;
}

uint64_t sub_1AFD2B28C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v7 = a1[2];
  uint64_t v8 = a1[3];
  uint64_t v9 = (void *)a1[4];
  uint64_t v10 = *(void *)(a2 + 152);
  uint64_t v11 = (objc_class *)type metadata accessor for NewsUserProfileShim();
  uint64_t v12 = (char *)objc_allocWithZone(v11);
  uint64_t v13 = &v12[OBJC_IVAR____TtC10StocksCoreP33_6F15235305946077A82EB95D8E9A724719NewsUserProfileShim_userProfile];
  *(void *)uint64_t v13 = v6;
  *((void *)v13 + 1) = v5;
  *((void *)v13 + 2) = v7;
  *((void *)v13 + 3) = v8;
  *((void *)v13 + 4) = v9;
  v45.receiver = v12;
  v45.super_class = v11;
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  id v14 = v9;
  swift_unknownObjectRetain();
  id v15 = objc_msgSendSuper2(&v45, sel_init);
  id v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F7E618]), sel_initWithPurchaseProvider_bundleSubscriptionProvider_configurationManager_, v15, v15, v10);

  swift_unknownObjectRelease();
  sub_1AFD2D980(0, &qword_1EB818370, (uint64_t)&type metadata for HeadlineCondition, MEMORY[0x1E4FBBE00]);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1AFFD0600;
  *(void *)(v17 + 32) = v16;
  sub_1AFD2CEB0(a2 + 112, v17 + 40);
  *(unsigned char *)(v17 + 80) = 0;
  *(void *)(v17 + 88) = v5;
  *(unsigned char *)(v17 + 136) = 3;
  *(void *)(v17 + 144) = 3;
  *(_OWORD *)(v17 + 152) = 0u;
  *(_OWORD *)(v17 + 168) = 0u;
  *(void *)(v17 + 184) = 0;
  *(unsigned char *)(v17 + 192) = 9;
  *(_OWORD *)(v17 + 200) = 0u;
  *(_OWORD *)(v17 + 216) = 0u;
  *(_OWORD *)(v17 + 232) = 0u;
  *(unsigned char *)(v17 + 248) = 9;
  v43[0] = v17;
  char v44 = 6;
  sub_1AFD2CF14((uint64_t)v43, (uint64_t)v42);
  uint64_t v46 = MEMORY[0x1E4FBC860];
  unint64_t v18 = *(void *)(a3 + 16);
  id v39 = v16;
  sub_1AFFC8E38();
  uint64_t result = sub_1AFFC8E38();
  if (v18)
  {
    unint64_t v20 = 0;
    uint64_t v21 = MEMORY[0x1E4FBC860];
    do
    {
      if (v20 <= v18) {
        unint64_t v22 = v18;
      }
      else {
        unint64_t v22 = v20;
      }
      uint64_t v23 = a3 + 32 + 144 * v20;
      unint64_t v24 = v20;
      while (1)
      {
        if (v22 == v24)
        {
          __break(1u);
          return result;
        }
        sub_1AFD2CF70(v23, (uint64_t)v41);
        unint64_t v20 = v24 + 1;
        sub_1AFD2CF70((uint64_t)v41, (uint64_t)v40);
        sub_1AFD2D03C(v41, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
        if ((sub_1AFF709CC() & 1) == 0) {
          break;
        }
        uint64_t result = (uint64_t)sub_1AFD2D03C(v41, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2D0A0);
        v23 += 144;
        ++v24;
        if (v18 == v20) {
          goto LABEL_16;
        }
      }
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v46 = v21;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1AFD9D8F0(0, *(void *)(v21 + 16) + 1, 1);
        uint64_t v21 = v46;
      }
      unint64_t v27 = *(void *)(v21 + 16);
      unint64_t v26 = *(void *)(v21 + 24);
      if (v27 >= v26 >> 1)
      {
        sub_1AFD9D8F0(v26 > 1, v27 + 1, 1);
        uint64_t v21 = v46;
      }
      *(void *)(v21 + 16) = v27 + 1;
      uint64_t result = sub_1AFD2CF70((uint64_t)v41, v21 + 144 * v27 + 32);
    }
    while (v18 - 1 != v24);
  }
LABEL_16:
  sub_1AFD2D108((uint64_t)v42);
  swift_bridgeObjectRelease();
  uint64_t v28 = v46;
  sub_1AFD2CD48();
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_1AFFD0610;
  v41[0] = v18;
  uint64_t v30 = sub_1AFFCBC88();
  uint64_t v32 = v31;
  uint64_t v33 = MEMORY[0x1E4FBB1A0];
  *(void *)(v29 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v34 = sub_1AFD2CE00();
  *(void *)(v29 + 64) = v34;
  *(void *)(v29 + 32) = v30;
  *(void *)(v29 + 40) = v32;
  v41[0] = *(void *)(v28 + 16);
  uint64_t v35 = sub_1AFFCBC88();
  *(void *)(v29 + 96) = v33;
  *(void *)(v29 + 104) = v34;
  *(void *)(v29 + 72) = v35;
  *(void *)(v29 + 80) = v36;
  sub_1AFD2C4F4();
  uint64_t v37 = (void *)sub_1AFFCB638();
  sub_1AFFCB478();
  sub_1AFFCA878();
  swift_bridgeObjectRelease();

  v41[0] = v28;
  sub_1AFD2CC30();
  swift_allocObject();
  uint64_t v38 = sub_1AFFCA6F8();

  sub_1AFD2D108((uint64_t)v43);
  return v38;
}

uint64_t sub_1AFD2B6C8()
{
  return sub_1AFD29F48();
}

uint64_t sub_1AFD2B6EC()
{
  return sub_1AFFC9BB8();
}

uint64_t sub_1AFD2B71C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return MEMORY[0x1F415F240](a1, a2, *v6, a6);
}

uint64_t sub_1AFD2B74C()
{
  return sub_1AFFC9BC8();
}

uint64_t sub_1AFD2B77C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return MEMORY[0x1F415F238](a1, a2, a3, a4, *v8, a8);
}

id sub_1AFD2B8F4(uint64_t a1, uint64_t a2, void *a3)
{
  if (*(void *)(a1 + *a3 + 8))
  {
    sub_1AFFC8E38();
    uint64_t v3 = (void *)sub_1AFFCAE68();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id sub_1AFD2B990()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s16HeadlineMetadataCMa();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1AFD2BA40()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1AFD2BA50()
{
  return sub_1AFFCA6F8();
}

uint64_t sub_1AFD2BAA0(uint64_t a1, uint64_t a2)
{
  return sub_1AFD2BC44(a1, a2, MEMORY[0x1E4F27EB8]);
}

id sub_1AFD2BACC()
{
  return *v0;
}

uint64_t sub_1AFD2BAD4@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

BOOL sub_1AFD2BADC(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1AFD2BAF0(uint64_t a1, id *a2)
{
  uint64_t result = sub_1AFFCAE78();
  *a2 = 0;
  return result;
}

uint64_t sub_1AFD2BB68(uint64_t a1, id *a2)
{
  char v3 = sub_1AFFCAE88();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_1AFD2BBE8@<X0>(uint64_t *a1@<X8>)
{
  sub_1AFFCAE98();
  uint64_t v2 = sub_1AFFCAE68();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1AFD2BC2C(uint64_t a1, uint64_t a2)
{
  return sub_1AFD2BC44(a1, a2, MEMORY[0x1E4FBB198]);
}

uint64_t sub_1AFD2BC44(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_1AFFCAE98();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1AFD2BC88()
{
  sub_1AFFCAE98();
  sub_1AFFCAF68();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFD2BCDC()
{
  sub_1AFFCAE98();
  sub_1AFFCBDF8();
  sub_1AFFCAF68();
  uint64_t v0 = sub_1AFFCBE38();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1AFD2BD54()
{
  return sub_1AFFCAE98();
}

uint64_t sub_1AFD2BD64(uint64_t a1)
{
  uint64_t v2 = sub_1AFD2C970((unint64_t *)&qword_1EB8119C0, type metadata accessor for CKError);

  return MEMORY[0x1F40E44F0](a1, v2);
}

uint64_t sub_1AFD2BDD0(uint64_t a1)
{
  uint64_t v2 = sub_1AFD2C970((unint64_t *)&qword_1EB8119C0, type metadata accessor for CKError);

  return MEMORY[0x1F40E44A8](a1, v2);
}

uint64_t sub_1AFD2BE3C(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_1AFD2C970((unint64_t *)&qword_1EB8119C0, type metadata accessor for CKError);
  id v5 = a1;

  return MEMORY[0x1F40E4498](v5, a2, v4);
}

uint64_t sub_1AFD2BECC()
{
  id v1 = *v0;
  uint64_t v2 = sub_1AFFCB618();

  return v2;
}

uint64_t sub_1AFD2BF04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1AFD2C970((unint64_t *)&qword_1EB8119C0, type metadata accessor for CKError);

  return MEMORY[0x1F40E44D8](a1, a2, v4);
}

uint64_t sub_1AFD2BF80()
{
  return sub_1AFFCBE38();
}

void *sub_1AFD2BFE0@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_1AFD2BFF0(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_1AFD2BFFC()
{
  uint64_t v0 = sub_1AFFCAE98();
  uint64_t v2 = v1;
  if (v0 == sub_1AFFCAE98() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_1AFFCBCE8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1AFD2C08C(uint64_t a1)
{
  uint64_t v2 = sub_1AFD2C970((unint64_t *)&unk_1EB811518, type metadata accessor for CIImageRepresentationOption);
  uint64_t v3 = sub_1AFD2C970((unint64_t *)&unk_1E9AF9660, type metadata accessor for CIImageRepresentationOption);
  uint64_t v4 = MEMORY[0x1E4FBB1B0];

  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

uint64_t sub_1AFD2C148(uint64_t a1)
{
  uint64_t v2 = sub_1AFD2C970(&qword_1EB8119B8, type metadata accessor for CKError);

  return MEMORY[0x1F40E6E20](a1, v2);
}

uint64_t sub_1AFD2C1B4(uint64_t a1)
{
  uint64_t v2 = sub_1AFD2C970(&qword_1EB8119B8, type metadata accessor for CKError);

  return MEMORY[0x1F40E6E10](a1, v2);
}

uint64_t sub_1AFD2C224(uint64_t a1)
{
  uint64_t v2 = sub_1AFD2C970((unint64_t *)&qword_1EB8119C0, type metadata accessor for CKError);

  return MEMORY[0x1F40E4480](a1, v2);
}

uint64_t sub_1AFD2C290(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1AFD2C970((unint64_t *)&qword_1EB8119C0, type metadata accessor for CKError);

  return MEMORY[0x1F40E44B8](a1, a2, a3, v6);
}

uint64_t sub_1AFD2C314@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1AFFCAE68();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1AFD2C35C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1AFFCAE98();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1AFD2C388(uint64_t a1)
{
  uint64_t v2 = sub_1AFD2C970((unint64_t *)&unk_1EB8180C0, type metadata accessor for FileAttributeKey);
  uint64_t v3 = sub_1AFD2C970((unint64_t *)&unk_1E9AF9670, type metadata accessor for FileAttributeKey);
  uint64_t v4 = MEMORY[0x1E4FBB1B0];

  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

uint64_t sub_1AFD2C444(uint64_t a1)
{
  if (a1 < 0)
  {
    uint64_t result = sub_1AFFCB998();
    __break(1u);
  }
  else if (a1)
  {
    sub_1AFD2CDB0(0, (unint64_t *)&qword_1EB81A120);
    uint64_t result = sub_1AFFCB258();
    *(void *)(result + 16) = a1;
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

unint64_t sub_1AFD2C4F4()
{
  unint64_t result = qword_1EB819EA0;
  if (!qword_1EB819EA0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB819EA0);
  }
  return result;
}

uint64_t sub_1AFD2C534()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
}

uint64_t sub_1AFD2C590(uint64_t a1)
{
  return sub_1AFD2A1DC(a1, v1);
}

void sub_1AFD2C5AC()
{
  if (!qword_1EB811A30)
  {
    type metadata accessor for ForYouConfigRecord(255);
    sub_1AFD2D980(255, (unint64_t *)&qword_1EB818000, (uint64_t)&type metadata for Headline, MEMORY[0x1E4FBB320]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB811A30);
    }
  }
}

uint64_t sub_1AFD2C640(uint64_t a1, uint64_t a2)
{
  return sub_1AFD2A498(a1, a2);
}

uint64_t sub_1AFD2C648()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1AFD2C680@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  char v5 = *(uint64_t (**)(uint64_t, void))(v2 + 16);
  sub_1AFD2C5AC();
  uint64_t result = v5(a1, *(void *)(a1 + *(int *)(v6 + 48)));
  *a2 = result;
  return result;
}

uint64_t sub_1AFD2C6E0(uint64_t *a1)
{
  return sub_1AFD2A9BC(a1, v1);
}

uint64_t sub_1AFD2C6FC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t type metadata accessor for TopStoriesService()
{
  return self;
}

uint64_t sub_1AFD2C734(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for TopStoriesService);
}

uint64_t sub_1AFD2C74C()
{
  return _s16HeadlineMetadataCMa();
}

uint64_t _s16HeadlineMetadataCMa()
{
  uint64_t result = qword_1EB811A20;
  if (!qword_1EB811A20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1AFD2C7A0()
{
  sub_1AFD2C83C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1AFD2C83C()
{
  if (!qword_1EB818BA0)
  {
    sub_1AFFC98F8();
    unint64_t v0 = sub_1AFFCB658();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB818BA0);
    }
  }
}

uint64_t type metadata accessor for EmptyTopStoriesService()
{
  return self;
}

void type metadata accessor for CKError(uint64_t a1)
{
}

uint64_t sub_1AFD2C8E0()
{
  return sub_1AFD2C970(&qword_1EB8119E8, type metadata accessor for CKError);
}

uint64_t sub_1AFD2C928()
{
  return sub_1AFD2C970(&qword_1EB8119F0, type metadata accessor for CKError);
}

uint64_t sub_1AFD2C970(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AFD2C9B8()
{
  return sub_1AFD2C970(&qword_1EB8119B8, type metadata accessor for CKError);
}

uint64_t sub_1AFD2CA00()
{
  return sub_1AFD2C970(&qword_1EB8119D0, type metadata accessor for CKError);
}

uint64_t sub_1AFD2CA48()
{
  return sub_1AFD2C970((unint64_t *)&unk_1EB8119D8, type metadata accessor for CKError);
}

uint64_t sub_1AFD2CA90()
{
  return sub_1AFD2C970(&qword_1E9AF9430, type metadata accessor for Code);
}

void type metadata accessor for Code(uint64_t a1)
{
}

uint64_t sub_1AFD2CB00()
{
  return sub_1AFD2C970(&qword_1EB8119F8, type metadata accessor for Code);
}

unint64_t sub_1AFD2CB4C()
{
  unint64_t result = qword_1EB8119B0;
  if (!qword_1EB8119B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8119B0);
  }
  return result;
}

uint64_t sub_1AFD2CBA0()
{
  return sub_1AFD2C970((unint64_t *)&unk_1E9AF9438, type metadata accessor for Code);
}

uint64_t sub_1AFD2CBE8()
{
  return sub_1AFD2C970((unint64_t *)&qword_1EB8119C0, type metadata accessor for CKError);
}

void sub_1AFD2CC30()
{
  if (!qword_1EB811A48)
  {
    sub_1AFD2D980(255, (unint64_t *)&qword_1EB818000, (uint64_t)&type metadata for Headline, MEMORY[0x1E4FBB320]);
    unint64_t v0 = sub_1AFFCA788();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB811A48);
    }
  }
}

uint64_t sub_1AFD2CCAC(uint64_t a1)
{
  if (a1 < 0)
  {
    uint64_t result = sub_1AFFCB998();
    __break(1u);
  }
  else if (a1)
  {
    uint64_t result = sub_1AFFCB258();
    *(void *)(result + 16) = a1;
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

void sub_1AFD2CD48()
{
  if (!qword_1EB81A100)
  {
    sub_1AFD2CDB0(255, (unint64_t *)&qword_1EB81A120);
    unint64_t v0 = sub_1AFFCBC98();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB81A100);
    }
  }
}

uint64_t sub_1AFD2CDB0(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    uint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_1AFD2CE00()
{
  unint64_t result = qword_1EB819C40;
  if (!qword_1EB819C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819C40);
  }
  return result;
}

uint64_t sub_1AFD2CE54()
{
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1AFD2CE94(uint64_t *a1)
{
  return sub_1AFD2B28C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1AFD2CEB0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1AFD2CF14(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1AFD2CF70(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1AFD2CFCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14)
{
  if (a14 < 0)
  {
    return swift_unknownObjectRetain();
  }
  else
  {
    id v14 = a13;
    swift_unknownObjectRetain();
    return sub_1AFFC8E38();
  }
}

void *sub_1AFD2D03C(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  return a1;
}

void sub_1AFD2D0A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14)
{
  swift_unknownObjectRelease();
  if ((a14 & 0x8000000000000000) == 0)
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1AFD2D108(uint64_t a1)
{
  return a1;
}

uint64_t sub_1AFD2D15C(uint64_t a1)
{
  return *(void *)(a1 + 104) >> 63;
}

uint64_t sub_1AFD2D168(uint64_t result)
{
  *(void *)(result + 104) &= ~0x8000000000000000;
  return result;
}

uint64_t sub_1AFD2D178(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    uint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1AFD2D1CC(uint64_t a1, uint64_t a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v27 = MEMORY[0x1E4FBC860];
    sub_1AFD9D8F0(0, v2, 0);
    uint64_t v6 = a1 + 32;
    uint64_t v3 = v27;
    for (int64_t i = v2 - 1; ; --i)
    {
      sub_1AFD2CF70(v6, (uint64_t)v25);
      sub_1AFD2CF70((uint64_t)v25, (uint64_t)v26);
      sub_1AFD2D15C((uint64_t)v26);
      uint64_t v8 = *(void **)sub_1AFD2D168((uint64_t)v26);
      sub_1AFD2D03C(v25, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
      sub_1AFD2D03C(v25, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
      id v9 = objc_msgSend(v8, sel_identifier);
      uint64_t v10 = sub_1AFFCAE98();
      uint64_t v12 = v11;

      sub_1AFD2D03C(v25, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2D0A0);
      if (!*(void *)(a2 + 16)) {
        goto LABEL_7;
      }
      unint64_t v13 = sub_1AFD79CC8(v10, v12);
      if (v14)
      {
        uint64_t v15 = *(void *)(*(void *)(a2 + 56) + 8 * v13);
        swift_unknownObjectRetain();
        swift_bridgeObjectRelease();
        sub_1AFD2CF70((uint64_t)v25, (uint64_t)v23);
        if (sub_1AFD2D15C((uint64_t)v23) == 1)
        {
          sub_1AFD2D168((uint64_t)v23);
          sub_1AFD2D03C(v25, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2D0A0);
          uint64_t v21 = v15;
          sub_1AFD2D44C((uint64_t)&v21);
        }
        else
        {
          uint64_t v17 = (const void *)(sub_1AFD2D168((uint64_t)v23) + 8);
          uint64_t v21 = v15;
          memmove(&v22, v17, 0x88uLL);
          sub_1AFD2D460((uint64_t)&v21);
          sub_1AFD2D470((uint64_t)v17);
          sub_1AFD2D03C(v25, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2D0A0);
        }
        id v16 = &v21;
      }
      else
      {
LABEL_7:
        swift_bridgeObjectRelease();
        id v16 = v25;
      }
      sub_1AFD2CF70((uint64_t)v16, (uint64_t)v24);
      uint64_t v27 = v3;
      unint64_t v19 = *(void *)(v3 + 16);
      unint64_t v18 = *(void *)(v3 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_1AFD9D8F0(v18 > 1, v19 + 1, 1);
        uint64_t v3 = v27;
      }
      *(void *)(v3 + 16) = v19 + 1;
      sub_1AFD2CF70((uint64_t)v24, v3 + 144 * v19 + 32);
      if (!i) {
        break;
      }
      v6 += 144;
    }
  }
  return v3;
}

uint64_t sub_1AFD2D44C(uint64_t result)
{
  *(void *)(result + 104) = *(void *)(result + 104) & 1 | 0x8000000000000000;
  return result;
}

uint64_t sub_1AFD2D460(uint64_t result)
{
  *(void *)(result + 104) &= 1uLL;
  return result;
}

uint64_t sub_1AFD2D470(uint64_t a1)
{
  id v2 = *(id *)(a1 + 88);
  sub_1AFFC8E38();
  return a1;
}

uint64_t sub_1AFD2D4A8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1AFD2D510(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1AFD2D570()
{
  return sub_1AFD2AD7C(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

void sub_1AFD2D58C()
{
  if (!qword_1EB817FF0)
  {
    sub_1AFD2D980(255, (unint64_t *)&qword_1EB818000, (uint64_t)&type metadata for Headline, MEMORY[0x1E4FBB320]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB817FF0);
    }
  }
}

uint64_t sub_1AFD2D61C()
{
  uint64_t v1 = (int *)(type metadata accessor for ForYouConfigRecord(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  swift_bridgeObjectRelease();
  uint64_t v7 = v6 + v1[7];
  swift_bridgeObjectRelease();
  uint64_t v8 = v7 + *(int *)(type metadata accessor for ForYouConfigRecord.Configuration.TopStories(0) + 20);
  uint64_t v9 = sub_1AFFC98F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, v4, v5);
}

uint64_t sub_1AFD2D750(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ForYouConfigRecord(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AFD2D7B4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for ForYouConfigRecord(0) - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  uint64_t v7 = *a1;
  sub_1AFD2C5AC();
  uint64_t v9 = *(int *)(v8 + 48);
  sub_1AFD2D4A8(v6, a2, type metadata accessor for ForYouConfigRecord);
  *(void *)(a2 + v9) = v7;
  return sub_1AFFC8E38();
}

double sub_1AFD2D868(uint64_t a1)
{
  *(void *)(a1 + 128) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t sub_1AFD2D884(uint64_t a1, uint64_t a2)
{
  return a2;
}

void type metadata accessor for CIImageRepresentationOption(uint64_t a1)
{
}

void type metadata accessor for FCFetchResult(uint64_t a1)
{
}

void type metadata accessor for FCContextEnvironment(uint64_t a1)
{
}

void type metadata accessor for FileAttributeKey(uint64_t a1)
{
}

void sub_1AFD2D980(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1AFD2D9CC()
{
  return sub_1AFD2C970(&qword_1E9AF9638, type metadata accessor for FileAttributeKey);
}

uint64_t sub_1AFD2DA14()
{
  return sub_1AFD2C970(&qword_1E9AF9640, type metadata accessor for FileAttributeKey);
}

uint64_t sub_1AFD2DA5C()
{
  return sub_1AFD2C970(&qword_1E9AF9648, type metadata accessor for CIImageRepresentationOption);
}

uint64_t sub_1AFD2DAA4()
{
  return sub_1AFD2C970((unint64_t *)&unk_1E9AF9650, type metadata accessor for CIImageRepresentationOption);
}

uint64_t sub_1AFD2DAEC()
{
  return sub_1AFD2C970(&qword_1EB811528, type metadata accessor for CIImageRepresentationOption);
}

uint64_t sub_1AFD2DB34()
{
  return sub_1AFD2C970(&qword_1EB8180D0, type metadata accessor for FileAttributeKey);
}

unint64_t StocksIntentType.debugDescription.getter()
{
  unint64_t v1 = 0xD000000000000010;
  uint64_t v2 = type metadata accessor for SymbolEntity();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  uint64_t v5 = v0[1];
  unint64_t v7 = v0[2];
  switch(v7 >> 61)
  {
    case 1uLL:
      unint64_t v10 = 0;
      unint64_t v11 = 0xE000000000000000;
      sub_1AFFC8E48();
      sub_1AFFC8E48();
      sub_1AFFC8E48();
      sub_1AFFCB7F8();
      swift_bridgeObjectRelease();
      unint64_t v12 = 0xD000000000000021;
      unint64_t v13 = 0x80000001AFFEE7D0;
      sub_1AFFC8E48();
      sub_1AFFC8E48();
      sub_1AFFC8E48();
      sub_1AFFC8C08();
      sub_1AFD2DFD0(v6, v5, v7);
      sub_1AFFC8E38();
      sub_1AFD2E05C((uint64_t)v4);
      sub_1AFFCAFA8();
      swift_bridgeObjectRelease();
      sub_1AFFCAFA8();
      sub_1AFFC8E48();
      sub_1AFFC8E48();
      goto LABEL_4;
    case 2uLL:
      unint64_t v10 = 0;
      unint64_t v11 = 0xE000000000000000;
      sub_1AFFC8E48();
      sub_1AFFC8E48();
      sub_1AFFCB7F8();
      swift_bridgeObjectRelease();
      unint64_t v10 = 0xD000000000000018;
      unint64_t v11 = 0x80000001AFFEE790;
      sub_1AFFC8E48();
      sub_1AFFC8E48();
      sub_1AFFC8C08();
      sub_1AFD2DFD0(v6, v5, v7);
      sub_1AFFC8E38();
      sub_1AFD2E05C((uint64_t)v4);
      sub_1AFFCAFA8();
      swift_bridgeObjectRelease();
      sub_1AFFCAFA8();
      sub_1AFD2DFD0(v6, v5, v7);
      return v10;
    case 3uLL:
      unint64_t v10 = 0;
      unint64_t v11 = 0xE000000000000000;
      sub_1AFFC8E48();
      sub_1AFFC8E48();
      sub_1AFFC8E48();
      sub_1AFFCB7F8();
      swift_bridgeObjectRelease();
      unint64_t v12 = 0xD00000000000001ELL;
      unint64_t v13 = 0x80000001AFFEE770;
      sub_1AFFC8E48();
      sub_1AFFC8E48();
      sub_1AFFC8E48();
      goto LABEL_7;
    case 4uLL:
      return v1;
    default:
      unint64_t v10 = 0;
      unint64_t v11 = 0xE000000000000000;
      sub_1AFFC8E48();
      sub_1AFFC8E48();
      sub_1AFFC8E48();
      sub_1AFFCB7F8();
      swift_bridgeObjectRelease();
      unint64_t v12 = 0xD00000000000001CLL;
      unint64_t v13 = 0x80000001AFFEE800;
      sub_1AFFC8E48();
      sub_1AFFC8E48();
      sub_1AFFC8E48();
      sub_1AFFC8C08();
      sub_1AFD2DFD0(v6, v5, v7);
      sub_1AFFC8E38();
      sub_1AFD2E05C((uint64_t)v4);
      sub_1AFFCAFA8();
      swift_bridgeObjectRelease();
      sub_1AFFCAFA8();
      sub_1AFFC8E48();
      sub_1AFFC8E48();
LABEL_4:
      sub_1AFFC8E48();
LABEL_7:
      sub_1AFFC8C08();
      sub_1AFD2DFD0(v6, v5, v7);
      sub_1AFFC8B28();
      swift_release();
      swift_bridgeObjectRelease();
      sub_1AFFCAFA8();
      swift_bridgeObjectRelease();
      sub_1AFFCAFA8();
      sub_1AFD2DFD0(v6, v5, v7);
      return v12;
  }
}

uint64_t sub_1AFD2DFD0(uint64_t a1, uint64_t a2, unint64_t a3)
{
  switch(a3 >> 61)
  {
    case 0uLL:
    case 1uLL:
    case 3uLL:
      swift_release();
      goto LABEL_3;
    case 2uLL:
LABEL_3:
      swift_release();
      uint64_t result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1AFD2E05C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SymbolEntity();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1AFD2E0C0(uint64_t a1, uint64_t a2, unint64_t a3)
{
  switch(a3 >> 61)
  {
    case 0uLL:
    case 1uLL:
    case 3uLL:
      sub_1AFFC8E48();
      goto LABEL_3;
    case 2uLL:
LABEL_3:
      sub_1AFFC8E48();
      uint64_t result = sub_1AFFC8E48();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t destroy for StocksIntentType(uint64_t a1)
{
  return sub_1AFD2DFD0(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16));
}

uint64_t *_s10StocksCore16StocksIntentTypeOwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  unint64_t v5 = a2[2];
  sub_1AFD2E0C0(*a2, v4, v5);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  return a1;
}

uint64_t *assignWithCopy for StocksIntentType(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  unint64_t v5 = a2[2];
  sub_1AFD2E0C0(*a2, v4, v5);
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  unint64_t v8 = a1[2];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  sub_1AFD2DFD0(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t *assignWithTake for StocksIntentType(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *a1;
  uint64_t v6 = a1[1];
  unint64_t v5 = a1[2];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[2] = v3;
  sub_1AFD2DFD0(v4, v6, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for StocksIntentType(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x1FFFFB && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 2097148);
  }
  if (((((*(void *)(a1 + 16) >> 43) >> 18) | (8
                                                             * ((*(void *)a1 >> 57) & 0x78 | *(void *)a1 & 7 | (*(void *)(a1 + 8) >> 50) & 0x3C00 | ((*(void *)(a1 + 8) & 7) << 7) | (*(void *)(a1 + 16) >> 43) & 0x20000 | ((*(void *)(a1 + 16) & 7) << 14)))) ^ 0x1FFFFF) >= 0x1FFFFB)
    int v3 = -1;
  else {
    int v3 = (((*(void *)(a1 + 16) >> 43) >> 18) | (8
  }
                                                              * ((*(void *)a1 >> 57) & 0x78 | *(void *)a1 & 7 | (*(void *)(a1 + 8) >> 50) & 0x3C00 | ((*(void *)(a1 + 8) & 7) << 7) | (*(void *)(a1 + 16) >> 43) & 0x20000 | ((*(void *)(a1 + 16) & 7) << 14)))) ^ 0x1FFFFF;
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for StocksIntentType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x1FFFFB)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 2097148;
    if (a3 >= 0x1FFFFC) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x1FFFFC) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2)
    {
      unint64_t v3 = ((-a2 >> 3) & 0x3FFFF) - (a2 << 18);
      *(void *)__n128 result = (v3 | (v3 << 57)) & 0xF000000000000007;
      uint64x2_t v4 = (uint64x2_t)vdupq_n_s64(v3);
      *(int8x16_t *)(result + 8) = vorrq_s8(vandq_s8((int8x16_t)vshlq_u64(v4, (uint64x2_t)xmmword_1AFFD0D30), (int8x16_t)vdupq_n_s64(7uLL)), vandq_s8((int8x16_t)vshlq_u64(v4, (uint64x2_t)xmmword_1AFFD0D40), (int8x16_t)vdupq_n_s64(0xF000000000000000)));
    }
  }
  return result;
}

uint64_t sub_1AFD2E388(void *a1)
{
  uint64_t v1 = a1[2] >> 61;
  if (v1 <= 3) {
    return v1;
  }
  else {
    return (*a1 >> 3) + 4;
  }
}

uint64_t sub_1AFD2E3A8(uint64_t result)
{
  *(void *)(result + 16) &= 0x1FFFFFFFFFFFFFFFuLL;
  return result;
}

int8x16_t sub_1AFD2E3B8(uint64_t a1, uint64_t a2)
{
  if (a2 < 4)
  {
    uint64_t v3 = *(void *)(a1 + 16) & 0xFFFFFFFFFFFFFF8 | (a2 << 61);
    int8x16_t result = vandq_s8(*(int8x16_t *)a1, (int8x16_t)vdupq_n_s64(0xFFFFFFFFFFFFFF8uLL));
    *(int8x16_t *)a1 = result;
    *(void *)(a1 + 16) = v3;
  }
  else
  {
    *(void *)a1 = 8 * (a2 - 4);
    result.i64[0] = 0;
    *(_OWORD *)(a1 + 8) = xmmword_1AFFD0D50;
  }
  return result;
}

ValueMetadata *type metadata accessor for StocksIntentType()
{
  return &type metadata for StocksIntentType;
}

uint64_t type metadata accessor for SDSChartOperation()
{
  uint64_t result = qword_1EB810DE8;
  if (!qword_1EB810DE8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1AFD2E45C()
{
  uint64_t result = sub_1AFFC98F8();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1AFFC9E18();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_initClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1AFD2E558(uint64_t a1, uint64_t a2)
{
  return sub_1AFD317F0(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

void sub_1AFD2E574(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  __swift_project_boxed_opaque_existential_1(&v2[qword_1EB810DC0], *(void *)&v2[qword_1EB810DC0 + 24]);
  sub_1AFD314EC(0, (unint64_t *)&qword_1EB81A0E8, (uint64_t (*)(uint64_t))sub_1AFD306F8, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AFFD0DC0;
  *(void *)(inited + 32) = 0x6C6F626D7973;
  *(void *)(inited + 40) = 0xE600000000000000;
  uint64_t v7 = *(void *)&v2[qword_1EB810DE0 + 8];
  *(void *)(inited + 48) = *(void *)&v2[qword_1EB810DE0];
  *(void *)(inited + 56) = v7;
  *(void *)(inited + 64) = 0x65676E6172;
  *(void *)(inited + 72) = 0xE500000000000000;
  unint64_t v8 = 0xE200000000000000;
  uint64_t v9 = 25649;
  switch(v2[qword_1EB810DD8])
  {
    case 1:
      uint64_t v9 = 25653;
      break;
    case 2:
      uint64_t v9 = 27953;
      break;
    case 3:
      uint64_t v9 = 27955;
      break;
    case 4:
      uint64_t v9 = 27958;
      break;
    case 5:
      unint64_t v8 = 0xE300000000000000;
      uint64_t v9 = 6583417;
      break;
    case 6:
      uint64_t v9 = 31025;
      break;
    case 7:
      uint64_t v9 = 31026;
      break;
    case 8:
      uint64_t v9 = 31029;
      break;
    case 9:
      unint64_t v8 = 0xE300000000000000;
      uint64_t v9 = 7942193;
      break;
    case 10:
      unint64_t v8 = 0xE300000000000000;
      uint64_t v9 = 7889261;
      break;
    default:
      break;
  }
  *(void *)(inited + 80) = v9;
  *(void *)(inited + 88) = v8;
  *(void *)(inited + 96) = 0x74655361746164;
  *(void *)(inited + 104) = 0xE700000000000000;
  *(void *)(inited + 112) = 0x7472616863;
  *(void *)(inited + 120) = 0xE500000000000000;
  sub_1AFFC8E38();
  sub_1AFDF9B10(inited);
  unint64_t v10 = sub_1AFEC5E2C(2);
  swift_bridgeObjectRelease();
  unint64_t v11 = (void *)((char *)v10 + *(void *)(qword_1EB831B00 + (*MEMORY[0x1E4FBC8C8] & *v10) + 16));
  uint64_t v12 = *v11;
  uint64_t *v11 = (uint64_t)sub_1AFD2E860;
  v11[1] = 0;
  sub_1AFD309C0(v12);
  unint64_t v13 = (void *)swift_allocObject();
  v13[2] = a1;
  v13[3] = a2;
  v13[4] = v3;
  char v14 = v10;
  sub_1AFFC8E48();
  id v15 = v3;
  sub_1AFFC9F18();

  objc_msgSend(v14, sel_start);
}

uint64_t sub_1AFD2E860(uint64_t a1, uint64_t a2)
{
  v3[2] = a1;
  return sub_1AFF9DE90((void (*)(uint64_t))sub_1AFD31550, (uint64_t)v3, a2);
}

uint64_t sub_1AFD2E8B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1AFD30A1C();
  MEMORY[0x1F4188790](v6 - 8);
  unint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFD314EC(0, (unint64_t *)&qword_1EB818570, (uint64_t (*)(uint64_t))sub_1AFD30A1C, MEMORY[0x1E4FAB068]);
  MEMORY[0x1F4188790](v9);
  unint64_t v11 = (id *)((char *)&v25 - v10);
  sub_1AFD30ACC(a2, (uint64_t)&v25 - v10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {

    sub_1AFD31570();
    uint64_t v13 = a3 + *(int *)(v12 + 48);
    uint64_t v14 = sub_1AFFCA368();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(a3, a1, v14);
    *(_OWORD *)uint64_t v13 = xmmword_1AFFD0DD0;
    uint64_t v15 = MEMORY[0x1E4FBC860];
    *(void *)(v13 + 16) = MEMORY[0x1E4FBC860];
    *(void *)(v13 + 24) = v15;
    type metadata accessor for NetworkEvent();
    *(void *)(v13 + 32) = 0;
    *(void *)(v13 + 40) = 0;
  }
  else
  {
    sub_1AFD31484((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(void))sub_1AFD30A1C);
    uint64_t v16 = sub_1AFFCA368();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(a3, a1, v16);
    sub_1AFD30C14(0, &qword_1EB818560, (uint64_t)&type metadata for SDSQuoteResponse, MEMORY[0x1E4FAAE30]);
    sub_1AFFCA3A8();
    uint64_t v17 = v25;
    sub_1AFD30C94(v26, v27);
    uint64_t v18 = *(void *)(v17 + 16);
    swift_bridgeObjectRelease();
    sub_1AFFCA3A8();
    swift_bridgeObjectRelease();
    uint64_t v19 = v27;
    if (v27)
    {
      uint64_t v20 = v26;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v20 = 0;
    }
    sub_1AFD31570();
    uint64_t v22 = (void *)(a3 + *(int *)(v21 + 48));
    sub_1AFD30CE4((uint64_t)v8, (uint64_t (*)(void))sub_1AFD30A1C);
    *uint64_t v22 = 1;
    v22[1] = v18;
    uint64_t v23 = MEMORY[0x1E4FBC860];
    v22[2] = MEMORY[0x1E4FBC860];
    v22[3] = v23;
    v22[4] = v20;
    v22[5] = v19;
    type metadata accessor for NetworkEvent();
  }
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1AFD2EBA4(uint64_t a1, void (*a2)(void **))
{
  uint64_t v4 = type metadata accessor for Chart(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1AFD30A1C();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = &v20[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FAB068];
  sub_1AFD314EC(0, (unint64_t *)&unk_1EB811110, type metadata accessor for Chart, MEMORY[0x1E4FAB068]);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (void **)&v20[-v12];
  sub_1AFD314EC(0, (unint64_t *)&qword_1EB818570, (uint64_t (*)(uint64_t))sub_1AFD30A1C, v10);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (void **)&v20[-v15];
  sub_1AFD30ACC(a1, (uint64_t)&v20[-v15]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = *v16;
    void *v13 = *v16;
    swift_storeEnumTagMultiPayload();
    id v18 = v17;
    a2(v13);

    return sub_1AFD30F44((uint64_t)v13, (unint64_t *)&unk_1EB811110, type metadata accessor for Chart, MEMORY[0x1E4FAB068]);
  }
  else
  {
    sub_1AFD31484((uint64_t)v16, (uint64_t)v9, (uint64_t (*)(void))sub_1AFD30A1C);
    sub_1AFD30C14(0, &qword_1EB818560, (uint64_t)&type metadata for SDSQuoteResponse, MEMORY[0x1E4FAAE30]);
    sub_1AFFCA3A8();
    sub_1AFD2EFC0(&v21, v6);
    uint64_t v24 = v21;
    sub_1AFD30B60((uint64_t)&v24);
    sub_1AFD30B8C((uint64_t)&v22, (uint64_t)v23);
    sub_1AFD30C60(v23);
    sub_1AFD30D44((uint64_t)v6, (uint64_t)v13);
    swift_storeEnumTagMultiPayload();
    a2(v13);
    sub_1AFD30F44((uint64_t)v13, (unint64_t *)&unk_1EB811110, type metadata accessor for Chart, MEMORY[0x1E4FAB068]);
    sub_1AFD30CE4((uint64_t)v6, type metadata accessor for Chart);
    return sub_1AFD30CE4((uint64_t)v9, (uint64_t (*)(void))sub_1AFD30A1C);
  }
}

void sub_1AFD2EFC0(uint64_t *a1@<X0>, void *a2@<X8>)
{
  v61 = a2;
  uint64_t v4 = sub_1AFFC98F8();
  MEMORY[0x1F4188790](v4 - 8);
  v60 = (char *)v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFD30DA8();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v64 = (uint64_t)v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFD314EC(0, &qword_1EB816CF8, MEMORY[0x1E4F27D68], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  v69 = (char *)v57 - v9;
  uint64_t v67 = sub_1AFFC9B88();
  uint64_t v65 = *(void *)(v67 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v67);
  uint64_t v62 = v11;
  v63 = (char *)v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  v66 = (char *)v57 - v12;
  uint64_t v13 = *a1;
  uint64_t v14 = *(void *)(v13 + 16);
  if (!v14)
  {
LABEL_7:
    sub_1AFD30E64();
    swift_allocError();
    *(void *)uint64_t v23 = 0;
    *(void *)(v23 + 8) = 0;
LABEL_14:
    *(unsigned char *)(v23 + 16) = 3;
    swift_willThrow();
    return;
  }
  uint64_t v16 = *(void *)&v2[qword_1EB810DE0];
  uint64_t v15 = *(void *)&v2[qword_1EB810DE0 + 8];
  while (1)
  {
    id v18 = *(char **)(v13 + 32);
    uint64_t v17 = *(void *)(v13 + 40);
    uint64_t v19 = *(void *)(v13 + 48);
    uint64_t v20 = *(void *)(v13 + 64);
    uint64_t v70 = *(void *)(v13 + 56);
    uint64_t v71 = v20;
    uint64_t v21 = *(void *)(v13 + 80);
    uint64_t v72 = *(void *)(v13 + 72);
    uint64_t v73 = v21;
    uint64_t v74 = *(void *)(v13 + 88);
    char v22 = *(unsigned char *)(v13 + 96);
    if (*(void *)(v13 + 752) == v16 && *(void *)(v13 + 760) == v15) {
      break;
    }
    if (sub_1AFFCBCE8()) {
      break;
    }
    v13 += 776;
    if (!--v14) {
      goto LABEL_7;
    }
  }
  if (!v19)
  {
    sub_1AFD30E64();
    swift_allocError();
    *(_OWORD *)uint64_t v23 = xmmword_1AFFD0DD0;
    goto LABEL_14;
  }
  LODWORD(v59) = v22 & 1;
  sub_1AFFC8E38();
  uint64_t v25 = v70;
  uint64_t v24 = v71;
  uint64_t v27 = v72;
  char v26 = v73;
  sub_1AFD30EB8(v70, v71);
  int v28 = v2[qword_1EB810DD8];
  int v29 = v28 | v59;
  BOOL v30 = v28 == 0;
  uint64_t v31 = v74;
  if (!v30) {
    uint64_t v31 = 0;
  }
  uint64_t v59 = v31;
  BOOL v58 = v29 != 0;
  uint64_t v32 = v68;
  sub_1AFD2F994(v25, v24, v27, v26, v69);
  uint64_t v68 = v32;
  if (v32)
  {
    sub_1AFD30ECC((uint64_t)v18, v17, v19, v25, v24);
  }
  else
  {
    uint64_t v33 = v65;
    unint64_t v34 = v69;
    uint64_t v35 = v67;
    int v36 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v65 + 48))(v69, 1, v67);
    v57[1] = v2;
    if (v36 == 1)
    {
      sub_1AFD30F44((uint64_t)v34, &qword_1EB816CF8, MEMORY[0x1E4F27D68], MEMORY[0x1E4FBB718]);
      if (qword_1EB8184F8 != -1) {
        swift_once();
      }
      uint64_t v37 = __swift_project_value_buffer(v35, (uint64_t)qword_1EB831AD8);
      uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t))(v33 + 16);
      v38(v66, v37, v35);
      id v39 = v63;
      v38(v63, v37, v35);
      uint64_t v33 = v65;
      unint64_t v40 = (*(unsigned __int8 *)(v65 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80);
      uint64_t v41 = swift_allocObject();
      uint64_t v42 = v39;
      uint64_t v43 = v41;
      (*(void (**)(unint64_t, char *, uint64_t))(v33 + 32))(v41 + v40, v42, v35);
      char v44 = (void (*)(uint64_t))sub_1AFD31030;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v66, v34, v35);
      uint64_t v45 = swift_allocObject();
      uint64_t v46 = v2;
      uint64_t v43 = v45;
      *(void *)(v45 + 16) = v46;
      id v47 = v46;
      char v44 = (void (*)(uint64_t))sub_1AFD313F0;
    }
    v48 = (uint64_t (*)(uint64_t))v44;
    uint64_t v49 = v68;
    v50 = (char *)sub_1AFD310AC(v19, v44, v43);
    uint64_t v51 = v64;
    if (v49)
    {
      sub_1AFD30ECC((uint64_t)v18, v17, v19, v70, v71);
      (*(void (**)(char *, uint64_t))(v33 + 8))(v66, v67);
    }
    else
    {
      v69 = v50;
      sub_1AFD2F660(v18, v17, v48, v64);
      sub_1AFD30ECC((uint64_t)v18, v17, v19, v70, v71);
      uint64_t v52 = (uint64_t)v63;
      v53 = v66;
      uint64_t v54 = v67;
      (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v63, v66, v67);
      uint64_t v55 = v51;
      uint64_t v56 = (uint64_t)v60;
      sub_1AFFC98E8();
      sub_1AFD9B700((uint64_t)v69, v55, v59, v58, v52, v56, v61);
      (*(void (**)(char *, uint64_t))(v33 + 8))(v53, v54);
    }
    swift_release();
  }
}

uint64_t sub_1AFD2F660@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v35 = a1;
  uint64_t v33 = a4;
  sub_1AFD3141C();
  uint64_t v34 = v6;
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v31 - v10;
  uint64_t v12 = sub_1AFFC98F8();
  uint64_t v36 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = v37;
  uint64_t result = a3(a2);
  if (!v16)
  {
    uint64_t v32 = v11;
    uint64_t v37 = v9;
    uint64_t v18 = v36;
    a3((uint64_t)v35);
    sub_1AFD30E0C();
    uint64_t result = sub_1AFFCADB8();
    if (result)
    {
      uint64_t v19 = v18;
      uint64_t v20 = v34;
      uint64_t v21 = &v32[*(int *)(v34 + 48)];
      char v22 = *(void (**)(void))(v19 + 32);
      v22();
      uint64_t v35 = v21;
      ((void (*)(char *, char *, uint64_t))v22)(v21, v15, v12);
      uint64_t v23 = *(int *)(v20 + 48);
      uint64_t v24 = v37;
      uint64_t v25 = &v37[v23];
      char v26 = *(void (**)(char *, char *, uint64_t))(v36 + 16);
      v26(v37, v32, v12);
      v26(v25, v21, v12);
      uint64_t v27 = v33;
      ((void (*)(uint64_t, char *, uint64_t))v22)(v33, v24, v12);
      int v28 = *(void (**)(char *, uint64_t))(v36 + 8);
      v28(v25, v12);
      int v29 = &v24[*(int *)(v34 + 48)];
      ((void (*)(char *, char *, uint64_t))v22)(v24, v32, v12);
      ((void (*)(char *, char *, uint64_t))v22)(v29, v35, v12);
      sub_1AFD30DA8();
      ((void (*)(uint64_t, char *, uint64_t))v22)(v27 + *(int *)(v30 + 36), v29, v12);
      return ((uint64_t (*)(char *, uint64_t))v28)(v24, v12);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1AFD2F994@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, char *a5@<X8>)
{
  int v28 = a5;
  uint64_t v29 = a3;
  sub_1AFD314EC(0, &qword_1EB816CF8, MEMORY[0x1E4F27D68], MEMORY[0x1E4FBB718]);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v28 - v12;
  uint64_t v14 = sub_1AFFC9B88();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v28 - v19;
  if (a2 == 1) {
    goto LABEL_2;
  }
  if (a4)
  {
    if (!a2)
    {
LABEL_2:
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v28, 1, 1, v14);
      return sub_1AFD30EB8(a1, a2);
    }
    sub_1AFFC8E38();
    sub_1AFFC9B28();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v11, 1, v14) == 1)
    {
      sub_1AFD30F44((uint64_t)v11, &qword_1EB816CF8, MEMORY[0x1E4F27D68], MEMORY[0x1E4FBB718]);
      sub_1AFD30E64();
      swift_allocError();
      *(void *)uint64_t v23 = a1;
      char v24 = 1;
      goto LABEL_9;
    }
    sub_1AFD30F30(a1, a2);
    uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v27(v18, v11, v14);
    char v26 = v28;
    v27(v28, v18, v14);
  }
  else
  {
    uint64_t v22 = v29;
    sub_1AFFC9B58();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
    {
      sub_1AFD30F44((uint64_t)v13, &qword_1EB816CF8, MEMORY[0x1E4F27D68], MEMORY[0x1E4FBB718]);
      sub_1AFD30E64();
      swift_allocError();
      a2 = 0;
      *(void *)uint64_t v23 = v22;
      char v24 = 2;
LABEL_9:
      *(void *)(v23 + 8) = a2;
      *(unsigned char *)(v23 + 16) = v24;
      return swift_willThrow();
    }
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v25(v20, v13, v14);
    char v26 = v28;
    v25(v28, v20, v14);
  }
  return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v26, 0, 1, v14);
}

uint64_t sub_1AFD2FD6C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v34 = a1;
  uint64_t v35 = a2;
  unint64_t v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1AFD314EC(0, &qword_1EB816CF8, MEMORY[0x1E4F27D68], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v33 = (char *)&v28 - v4;
  uint64_t v32 = sub_1AFFC9B88();
  uint64_t v5 = *(void *)(v32 - 8);
  MEMORY[0x1F4188790](v32);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1AFFC9418();
  uint64_t v30 = *(void *)(v8 - 8);
  uint64_t v31 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1AFFC9B18();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFD314EC(0, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928], v2);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v28 - v16;
  uint64_t v18 = sub_1AFFC98F8();
  uint64_t v28 = *(void *)(v18 - 8);
  uint64_t v29 = v18;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFFC9878();
  if (qword_1EB811480 != -1) {
    swift_once();
  }
  uint64_t v21 = __swift_project_value_buffer(v11, (uint64_t)qword_1EB811460);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v21, v11);
  sub_1AFFC9AE8();
  sub_1AFFC9AA8();
  uint64_t v22 = v7;
  uint64_t v23 = v32;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v22, v32);
  char v24 = v33;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v33, v34, v23);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v24, 0, 1, v23);
  sub_1AFFC9408();
  sub_1AFFC9AC8();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v10, v31);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  uint64_t v26 = v28;
  uint64_t v25 = v29;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v17, 1, v29) == 1)
  {
    sub_1AFD30F44((uint64_t)v17, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v20, v25);
    uint64_t v20 = v17;
  }
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v26 + 32))(v35, v20, v25);
}

void sub_1AFD30248()
{
}

uint64_t sub_1AFD30278()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + qword_1EB810DD0;
  uint64_t v2 = sub_1AFFC98F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + qword_1EB810DC8;
  uint64_t v4 = sub_1AFFC9E18();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v0 + qword_1EB810DC0;

  return __swift_destroy_boxed_opaque_existential_1(v5);
}

id sub_1AFD3034C()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1AFD30384(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = a1 + qword_1EB810DD0;
  uint64_t v3 = sub_1AFFC98F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  uint64_t v4 = a1 + qword_1EB810DC8;
  uint64_t v5 = sub_1AFFC9E18();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + qword_1EB810DC0;

  return __swift_destroy_boxed_opaque_existential_1(v6);
}

uint64_t sub_1AFD30460()
{
  return type metadata accessor for SDSChartOperation();
}

uint64_t sub_1AFD30468()
{
  sub_1AFD314EC(0, &qword_1EB816CF8, MEMORY[0x1E4F27D68], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v7 - v1;
  uint64_t v3 = sub_1AFFC9B88();
  __swift_allocate_value_buffer(v3, qword_1EB831A48);
  uint64_t v4 = __swift_project_value_buffer(v3, (uint64_t)qword_1EB831A48);
  sub_1AFFC9B58();
  uint64_t v5 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v2, 1, v3);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(v4, v2, v3);
  }
  __break(1u);
  return result;
}

uint64_t sub_1AFD305AC()
{
  sub_1AFD314EC(0, &qword_1EB816CF8, MEMORY[0x1E4F27D68], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v7 - v1;
  uint64_t v3 = sub_1AFFC9B88();
  __swift_allocate_value_buffer(v3, qword_1EB831AD8);
  uint64_t v4 = __swift_project_value_buffer(v3, (uint64_t)qword_1EB831AD8);
  sub_1AFFC9B48();
  uint64_t v5 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v2, 1, v3);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(v4, v2, v3);
  }
  __break(1u);
  return result;
}

void sub_1AFD306F8()
{
  if (!qword_1EB819C98)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB819C98);
    }
  }
}

uint64_t sub_1AFD3075C()
{
  uint64_t v0 = sub_1AFFC9B88();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x1F4188790](v0);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v15 - v5;
  uint64_t v7 = sub_1AFFC9A88();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1AFFC9B18();
  __swift_allocate_value_buffer(v11, qword_1EB811460);
  __swift_project_value_buffer(v11, (uint64_t)qword_1EB811460);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4F27B20], v7);
  if (qword_1EB811490 != -1) {
    swift_once();
  }
  uint64_t v12 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB831A48);
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 16);
  v13(v6, v12, v0);
  sub_1AFFC9A98();
  v13(v4, (uint64_t)v6, v0);
  sub_1AFFC9AF8();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1AFD309C0(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_1AFD309D0()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1AFD30A10(uint64_t a1)
{
  return sub_1AFD2EBA4(a1, *(void (**)(void **))(v1 + 16));
}

void sub_1AFD30A1C()
{
  if (!qword_1EB818558)
  {
    sub_1AFD30A78();
    unint64_t v0 = type metadata accessor for SDSBaseOperationResponse();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB818558);
    }
  }
}

unint64_t sub_1AFD30A78()
{
  unint64_t result = qword_1EB817068;
  if (!qword_1EB817068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817068);
  }
  return result;
}

uint64_t sub_1AFD30ACC(uint64_t a1, uint64_t a2)
{
  sub_1AFD314EC(0, (unint64_t *)&qword_1EB818570, (uint64_t (*)(uint64_t))sub_1AFD30A1C, MEMORY[0x1E4FAB068]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AFD30B60(uint64_t a1)
{
  return a1;
}

uint64_t sub_1AFD30B8C(uint64_t a1, uint64_t a2)
{
  sub_1AFD30C14(0, &qword_1EB818CA0, (uint64_t)&type metadata for SDSMetadata, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1AFD30C14(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t *sub_1AFD30C60(uint64_t *a1)
{
  return a1;
}

uint64_t sub_1AFD30C94(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1AFD30CE4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1AFD30D44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Chart(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1AFD30DA8()
{
  if (!qword_1EB817ED8)
  {
    sub_1AFFC98F8();
    sub_1AFD30E0C();
    unint64_t v0 = sub_1AFFCADC8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB817ED8);
    }
  }
}

unint64_t sub_1AFD30E0C()
{
  unint64_t result = qword_1EB816CA0;
  if (!qword_1EB816CA0)
  {
    sub_1AFFC98F8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816CA0);
  }
  return result;
}

unint64_t sub_1AFD30E64()
{
  unint64_t result = qword_1E9AF9C20;
  if (!qword_1E9AF9C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AF9C20);
  }
  return result;
}

uint64_t sub_1AFD30EB8(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return sub_1AFFC8E38();
  }
  return result;
}

void sub_1AFD30ECC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a3)
  {
    swift_bridgeObjectRelease();
    sub_1AFD30F30(a4, a5);
  }
}

uint64_t sub_1AFD30F30(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1AFD30F44(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  sub_1AFD314EC(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_1AFD30FA0()
{
  uint64_t v1 = sub_1AFFC9B88();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1AFD31030@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_1AFFC9B88() - 8);
  return sub_1AFD2FD6C(v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), a1);
}

uint64_t sub_1AFD310AC(uint64_t a1, void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v35 = a2;
  uint64_t v36 = a3;
  uint64_t v34 = sub_1AFFC98F8();
  uint64_t v5 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  uint64_t v30 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Chart.Entry(0);
  uint64_t v32 = *(void *)(v7 - 8);
  uint64_t v33 = (int *)v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = MEMORY[0x1E4FBC860];
  if (v10)
  {
    uint64_t v44 = v3;
    uint64_t v45 = MEMORY[0x1E4FBC860];
    sub_1AFD9D960(0, v10, 0);
    uint64_t v11 = v45;
    uint64_t v31 = (void (**)(char *, char *, uint64_t))(v5 + 32);
    uint64_t v12 = (unsigned __int8 *)(a1 + 112);
    uint64_t v13 = v30;
    while (1)
    {
      int64_t v42 = v10;
      uint64_t v43 = v11;
      uint64_t v14 = *((void *)v12 - 10);
      char v15 = *(v12 - 72);
      uint64_t v37 = *((void *)v12 - 8);
      uint64_t v11 = *(v12 - 56);
      uint64_t v41 = *((void *)v12 - 6);
      int v40 = *(v12 - 40);
      uint64_t v16 = *((void *)v12 - 4);
      char v17 = *(v12 - 24);
      uint64_t v18 = *((void *)v12 - 2);
      uint64_t v39 = *((void *)v12 - 1);
      int v38 = *v12;
      uint64_t v19 = v44;
      v35(v18);
      if (v19) {
        break;
      }
      uint64_t v44 = 0;
      (*v31)(v9, v13, v34);
      uint64_t v20 = v33;
      uint64_t v21 = &v9[v33[5]];
      *(void *)uint64_t v21 = v16;
      v21[8] = v17;
      uint64_t v22 = &v9[v20[6]];
      *(void *)uint64_t v22 = v14;
      v22[8] = v15;
      uint64_t v23 = &v9[v20[7]];
      *(void *)uint64_t v23 = v37;
      v23[8] = v11;
      char v24 = &v9[v20[8]];
      *(void *)char v24 = v41;
      v24[8] = v40;
      uint64_t v25 = &v9[v20[9]];
      *(void *)uint64_t v25 = v39;
      v25[8] = v38;
      uint64_t v11 = v43;
      uint64_t v45 = v43;
      unint64_t v27 = *(void *)(v43 + 16);
      unint64_t v26 = *(void *)(v43 + 24);
      if (v27 >= v26 >> 1)
      {
        sub_1AFD9D960(v26 > 1, v27 + 1, 1);
        uint64_t v13 = v30;
        uint64_t v11 = v45;
      }
      v12 += 88;
      *(void *)(v11 + 16) = v27 + 1;
      sub_1AFD31484((uint64_t)v9, v11+ ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80))+ *(void *)(v32 + 72) * v27, type metadata accessor for Chart.Entry);
      int64_t v10 = v42 - 1;
      if (v42 == 1) {
        return v11;
      }
    }
    swift_release();
  }
  return v11;
}

uint64_t sub_1AFD313B8()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1AFD313F0()
{
  return sub_1AFFC9878();
}

void sub_1AFD3141C()
{
  if (!qword_1EB816C98)
  {
    sub_1AFFC98F8();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB816C98);
    }
  }
}

uint64_t sub_1AFD31484(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1AFD314EC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1AFD31550@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1AFD2E8B0(a1, *(void *)(v2 + 16), a2);
}

void sub_1AFD31570()
{
  if (!qword_1EB817CE8)
  {
    sub_1AFFCA368();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB817CE8);
    }
  }
}

uint64_t sub_1AFD315E0(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return sub_1AFFC8E38();
  }
  return result;
}

uint64_t destroy for SDSChartOperationError(uint64_t a1)
{
  return sub_1AFD31608(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_1AFD31608(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s10StocksCore22SDSChartOperationErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1AFD315E0(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for SDSChartOperationError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1AFD315E0(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1AFD31608(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for SDSChartOperationError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1AFD31608(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for SDSChartOperationError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SDSChartOperationError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 253;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1AFD317AC(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 2u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 3);
  }
}

uint64_t sub_1AFD317C8(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(void *)__n128 result = a2 - 3;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 3;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for SDSChartOperationError()
{
  return &type metadata for SDSChartOperationError;
}

uint64_t sub_1AFD317F0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  switch(a3)
  {
    case 1:
      if (a6 != 1) {
        goto LABEL_26;
      }
      if (a1 != a4 || a2 != a5) {
        goto LABEL_18;
      }
      uint64_t result = 1;
      break;
    case 2:
      if (a6 != 2) {
        goto LABEL_26;
      }
      uint64_t result = a1 == a4;
      break;
    case 3:
      if (a1 | a2)
      {
        if (a1 ^ 1 | a2)
        {
          if (a6 != 3 || a4 != 2 || a5) {
            goto LABEL_26;
          }
          uint64_t result = 1;
        }
        else
        {
          if (a6 != 3 || a4 != 1 || a5) {
            goto LABEL_26;
          }
          uint64_t result = 1;
        }
      }
      else
      {
        if (a6 != 3 || a5 | a4) {
          goto LABEL_26;
        }
        uint64_t result = 1;
      }
      break;
    default:
      if (a6)
      {
LABEL_26:
        uint64_t result = 0;
      }
      else if (a1 == a4 && a2 == a5)
      {
        uint64_t result = 1;
      }
      else
      {
LABEL_18:
        uint64_t result = sub_1AFFCBCE8();
      }
      break;
  }
  return result;
}

uint64_t ScoredArticle.article.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

double ScoredArticle.score.getter@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2 + *(int *)(a1 + 36);
  uint64_t v4 = *(void *)(v3 + 32);
  char v5 = *(unsigned char *)(v3 + 56);
  double result = *(double *)(v3 + 112);
  long long v7 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a2 = *(_OWORD *)v3;
  *(_OWORD *)(a2 + 16) = v7;
  *(void *)(a2 + 32) = v4;
  *(_OWORD *)(a2 + 40) = *(_OWORD *)(v3 + 40);
  *(unsigned char *)(a2 + 56) = v5;
  long long v8 = *(_OWORD *)(v3 + 80);
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(v3 + 64);
  *(_OWORD *)(a2 + 80) = v8;
  *(_OWORD *)(a2 + 96) = *(_OWORD *)(v3 + 96);
  *(double *)(a2 + 112) = result;
  return result;
}

uint64_t sub_1AFD31980(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 24);
}

uint64_t sub_1AFD31988()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1AFD31A20(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 120 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    sub_1AFFC8E48();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v10 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v11 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    long long v12 = *(_OWORD *)(v11 + 48);
    long long v14 = *(_OWORD *)v11;
    long long v13 = *(_OWORD *)(v11 + 16);
    *(_OWORD *)(v10 + 32) = *(_OWORD *)(v11 + 32);
    *(_OWORD *)(v10 + 48) = v12;
    *(_OWORD *)unint64_t v10 = v14;
    *(_OWORD *)(v10 + 16) = v13;
    long long v16 = *(_OWORD *)(v11 + 80);
    long long v15 = *(_OWORD *)(v11 + 96);
    long long v17 = *(_OWORD *)(v11 + 64);
    *(void *)(v10 + 112) = *(void *)(v11 + 112);
    *(_OWORD *)(v10 + 80) = v16;
    *(_OWORD *)(v10 + 96) = v15;
    *(_OWORD *)(v10 + 64) = v17;
  }
  return v4;
}

uint64_t sub_1AFD31B38(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_1AFD31B64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  long long v9 = *(_OWORD *)(v8 + 48);
  long long v11 = *(_OWORD *)v8;
  long long v10 = *(_OWORD *)(v8 + 16);
  *(_OWORD *)(v7 + 32) = *(_OWORD *)(v8 + 32);
  *(_OWORD *)(v7 + 48) = v9;
  *(_OWORD *)unint64_t v7 = v11;
  *(_OWORD *)(v7 + 16) = v10;
  long long v13 = *(_OWORD *)(v8 + 80);
  long long v12 = *(_OWORD *)(v8 + 96);
  long long v14 = *(_OWORD *)(v8 + 64);
  *(void *)(v7 + 112) = *(void *)(v8 + 112);
  *(_OWORD *)(v7 + 80) = v13;
  *(_OWORD *)(v7 + 96) = v12;
  *(_OWORD *)(v7 + 64) = v14;
  return a1;
}

uint64_t sub_1AFD31C00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v7 = *(void *)v8;
  *(void *)(v7 + 8) = *(void *)(v8 + 8);
  *(void *)(v7 + 16) = *(void *)(v8 + 16);
  *(void *)(v7 + 24) = *(void *)(v8 + 24);
  *(void *)(v7 + 32) = *(void *)(v8 + 32);
  *(void *)(v7 + 40) = *(void *)(v8 + 40);
  *(void *)(v7 + 48) = *(void *)(v8 + 48);
  *(unsigned char *)(v7 + 56) = *(unsigned char *)(v8 + 56);
  *(void *)(v7 + 64) = *(void *)(v8 + 64);
  *(void *)(v7 + 72) = *(void *)(v8 + 72);
  *(void *)(v7 + 80) = *(void *)(v8 + 80);
  *(void *)(v7 + 88) = *(void *)(v8 + 88);
  *(void *)(v7 + 96) = *(void *)(v8 + 96);
  *(void *)(v7 + 104) = *(void *)(v8 + 104);
  *(void *)(v7 + 112) = *(void *)(v8 + 112);
  return a1;
}

uint64_t sub_1AFD31CEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  long long v9 = *(_OWORD *)(v8 + 48);
  long long v11 = *(_OWORD *)v8;
  long long v10 = *(_OWORD *)(v8 + 16);
  *(_OWORD *)(v7 + 32) = *(_OWORD *)(v8 + 32);
  *(_OWORD *)(v7 + 48) = v9;
  *(_OWORD *)unint64_t v7 = v11;
  *(_OWORD *)(v7 + 16) = v10;
  long long v13 = *(_OWORD *)(v8 + 80);
  long long v12 = *(_OWORD *)(v8 + 96);
  long long v14 = *(_OWORD *)(v8 + 64);
  *(void *)(v7 + 112) = *(void *)(v8 + 112);
  *(_OWORD *)(v7 + 80) = v13;
  *(_OWORD *)(v7 + 96) = v12;
  *(_OWORD *)(v7 + 64) = v14;
  return a1;
}

uint64_t sub_1AFD31D88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v7 = *(void *)v8;
  *(void *)(v7 + 8) = *(void *)(v8 + 8);
  *(void *)(v7 + 16) = *(void *)(v8 + 16);
  *(void *)(v7 + 24) = *(void *)(v8 + 24);
  *(void *)(v7 + 32) = *(void *)(v8 + 32);
  *(void *)(v7 + 40) = *(void *)(v8 + 40);
  *(void *)(v7 + 48) = *(void *)(v8 + 48);
  *(unsigned char *)(v7 + 56) = *(unsigned char *)(v8 + 56);
  *(void *)(v7 + 64) = *(void *)(v8 + 64);
  *(void *)(v7 + 72) = *(void *)(v8 + 72);
  *(void *)(v7 + 80) = *(void *)(v8 + 80);
  *(void *)(v7 + 88) = *(void *)(v8 + 88);
  *(void *)(v7 + 96) = *(void *)(v8 + 96);
  *(void *)(v7 + 104) = *(void *)(v8 + 104);
  *(void *)(v7 + 112) = *(void *)(v8 + 112);
  return a1;
}

uint64_t sub_1AFD31E74(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0xFE) {
    unsigned int v7 = 254;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 120;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_21;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_21;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1AFD31FC4);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_21:
        int v15 = v14 - 1;
        if (v10)
        {
          int v15 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v15) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0xFE) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unsigned int v17 = *(unsigned __int8 *)((((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 56);
  if (v17 >= 2) {
    return ((v17 + 2147483646) & 0x7FFFFFFF) + 1;
  }
  else {
    return 0;
  }
}

double sub_1AFD31FD8(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0xFE) {
    unsigned int v8 = 254;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 120;
  if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFF88) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFF88) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((v9 + 7) & 0xFFFFFFF8) != 0xFFFFFF88)
    {
      unsigned int v16 = ~v8 + a2;
      bzero(a1, ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 120);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return result;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return result;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return result;
      default:
        return result;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return result;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return result;
      }
      goto LABEL_33;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x1AFD321D8);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0xFE)
        {
          unint64_t v19 = (unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8;
          if (a2 > 0xFE)
          {
            double result = 0.0;
            *(_OWORD *)(v19 + 104) = 0u;
            *(_OWORD *)(v19 + 88) = 0u;
            *(_OWORD *)(v19 + 72) = 0u;
            *(_OWORD *)(v19 + 56) = 0u;
            *(_OWORD *)(v19 + 40) = 0u;
            *(_OWORD *)(v19 + 24) = 0u;
            *(_OWORD *)(v19 + 8) = 0u;
            *(void *)unint64_t v19 = a2 - 255;
          }
          else
          {
            *(unsigned char *)(v19 + 56) = a2 + 1;
          }
        }
        else
        {
          uint64_t v18 = *(void (**)(void))(v6 + 56);
          v18();
        }
      }
      return result;
  }
}

uint64_t type metadata accessor for ScoredArticle()
{
  return __swift_instantiateGenericMetadata();
}

__n128 sub_1AFD32218@<Q0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = *((void *)a2 + 2);
  uint64_t v6 = *((void *)a2 + 3);
  uint64_t v7 = *((void *)a2 + 4);
  uint64_t v8 = *((void *)a2 + 5);
  uint64_t v9 = *((void *)a2 + 6);
  char v10 = *((unsigned char *)a2 + 56);
  uint64_t v11 = *((void *)a2 + 8);
  uint64_t v12 = *((void *)a2 + 9);
  uint64_t v13 = *((void *)a2 + 10);
  uint64_t v14 = *((void *)a2 + 11);
  __n128 v18 = (__n128)a2[6];
  long long v19 = *a2;
  uint64_t v15 = *((void *)a2 + 14);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a4, a1);
  uint64_t v16 = a4 + *(int *)(type metadata accessor for ScoredArticle() + 36);
  *(_OWORD *)uint64_t v16 = v19;
  *(void *)(v16 + 16) = v5;
  *(void *)(v16 + 24) = v6;
  *(void *)(v16 + 32) = v7;
  *(void *)(v16 + 40) = v8;
  *(void *)(v16 + 48) = v9;
  *(unsigned char *)(v16 + 56) = v10;
  *(void *)(v16 + 64) = v11;
  *(void *)(v16 + 72) = v12;
  *(void *)(v16 + 80) = v13;
  *(void *)(v16 + 88) = v14;
  __n128 result = v18;
  *(__n128 *)(v16 + 96) = v18;
  *(void *)(v16 + 112) = v15;
  return result;
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1AFD32350@<X0>(uint64_t a1@<X8>)
{
  uint64_t v9 = a1;
  uint64_t v1 = sub_1AFFC9528();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1AFFC9A78();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v6 = sub_1AFFCAE58();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v7 = sub_1AFFCAE38();
  MEMORY[0x1F4188790](v7 - 8);
  sub_1AFFC8E38();
  sub_1AFFC8E48();
  sub_1AFFCAE28();
  sub_1AFFCAE18();
  sub_1AFFC8E38();
  sub_1AFFC8E48();
  sub_1AFFC8B28();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1AFFCAE08();
  swift_bridgeObjectRelease();
  sub_1AFFCAE18();
  sub_1AFFCAE48();
  sub_1AFFC9A28();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4F275D0], v1);
  sub_1AFFC9558();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFD325F4()
{
  uint64_t v0 = sub_1AFFC9528();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1AFFC9A78();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v5 = sub_1AFFCAE58();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v6 = sub_1AFFC9548();
  __swift_allocate_value_buffer(v6, qword_1E9AF9C28);
  __swift_project_value_buffer(v6, (uint64_t)qword_1E9AF9C28);
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4F275D0], v0);
  return sub_1AFFC9558();
}

uint64_t sub_1AFD327D4@<X0>(uint64_t a1@<X8>)
{
  return sub_1AFD32B4C(&qword_1E9AF8BF8, MEMORY[0x1E4F27608], (uint64_t)qword_1E9AF9C28, a1);
}

uint64_t sub_1AFD3280C()
{
  sub_1AFD33A34(0, &qword_1EB816B00, MEMORY[0x1E4F27608], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)v12 - v1;
  v12[0] = sub_1AFFC9528();
  uint64_t v3 = *(void *)(v12[0] - 8);
  MEMORY[0x1F4188790](v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1AFFC9A78();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v7 = sub_1AFFCAE58();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v8 = sub_1AFFC9548();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = sub_1AFFC8CD8();
  __swift_allocate_value_buffer(v10, qword_1E9AF9C40);
  __swift_project_value_buffer(v10, (uint64_t)qword_1E9AF9C40);
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, *MEMORY[0x1E4F275D0], v12[0]);
  sub_1AFFC9558();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_1AFFC8CE8();
}

uint64_t sub_1AFD32B14@<X0>(uint64_t a1@<X8>)
{
  return sub_1AFD32B4C(&qword_1E9AF8C00, MEMORY[0x1E4F18510], (uint64_t)qword_1E9AF9C40, a1);
}

uint64_t sub_1AFD32B4C@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = a2(0);
  uint64_t v8 = __swift_project_value_buffer(v7, a3);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v9(a4, v8, v7);
}

uint64_t sub_1AFD32BEC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x1E4F18790];
  uint64_t v3 = sub_1AFFC8FC8();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t sub_1AFD32C60()
{
  sub_1AFD38A38(0, &qword_1E9AF9C58, (uint64_t (*)(void))sub_1AFD32E34, (uint64_t)&type metadata for DeleteWatchlistsIntent, MEMORY[0x1E4F186C8]);
  MEMORY[0x1F4188790](v0 - 8);
  sub_1AFD38A38(0, &qword_1E9AF9C68, (uint64_t (*)(void))sub_1AFD32E34, (uint64_t)&type metadata for DeleteWatchlistsIntent, MEMORY[0x1E4F186C0]);
  MEMORY[0x1F4188790](v1);
  sub_1AFD32E34();
  sub_1AFFC8EA8();
  sub_1AFFC8E98();
  swift_getKeyPath();
  sub_1AFD32F08();
  sub_1AFFC8E88();
  swift_release();
  sub_1AFFC8E98();
  sub_1AFFC8EB8();
  return sub_1AFFC8E58();
}

unint64_t sub_1AFD32E34()
{
  unint64_t result = qword_1E9AF9C60;
  if (!qword_1E9AF9C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AF9C60);
  }
  return result;
}

uint64_t sub_1AFD32E88()
{
  return sub_1AFFC8C28();
}

uint64_t sub_1AFD32EAC@<X0>(uint64_t *a1@<X8>)
{
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  uint64_t v2 = sub_1AFFC8C28();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v2;
  return result;
}

void sub_1AFD32F08()
{
  if (!qword_1E9AF9C70)
  {
    sub_1AFD32F68();
    unint64_t v0 = sub_1AFFCBE88();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9AF9C70);
    }
  }
}

void sub_1AFD32F68()
{
  if (!qword_1E9AF9C78)
  {
    sub_1AFD38B50(255, &qword_1E9AF9C80, (uint64_t)&type metadata for WatchlistEntity, MEMORY[0x1E4FBB320]);
    sub_1AFD32FF0();
    unint64_t v0 = sub_1AFFC8C98();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9AF9C78);
    }
  }
}

unint64_t sub_1AFD32FF0()
{
  unint64_t result = qword_1E9AF9C88;
  if (!qword_1E9AF9C88)
  {
    sub_1AFD38B50(255, &qword_1E9AF9C80, (uint64_t)&type metadata for WatchlistEntity, MEMORY[0x1E4FBB320]);
    sub_1AFD33084();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AF9C88);
  }
  return result;
}

unint64_t sub_1AFD33084()
{
  unint64_t result = qword_1EB818430;
  if (!qword_1EB818430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818430);
  }
  return result;
}

uint64_t sub_1AFD330D8()
{
  sub_1AFFC8C08();
  return v1;
}

uint64_t sub_1AFD3310C@<X0>(void *a1@<X8>)
{
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8C08();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1AFD33170()
{
  return swift_release();
}

uint64_t sub_1AFD331CC()
{
  return sub_1AFFC8C18();
}

uint64_t (*sub_1AFD33200(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1AFFC8BF8();
  return sub_1AFD3325C;
}

uint64_t sub_1AFD33260()
{
  return sub_1AFFC8998();
}

uint64_t sub_1AFD33284()
{
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8998();
  swift_release();

  return swift_release();
}

uint64_t sub_1AFD332E4(uint64_t a1)
{
  sub_1AFD2CEB0(a1, (uint64_t)v3);
  sub_1AFD2CEB0((uint64_t)v3, (uint64_t)&v2);
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC89A8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  swift_release();
  return swift_release();
}

uint64_t sub_1AFD3335C(uint64_t a1)
{
  sub_1AFD2CEB0(a1, (uint64_t)v3);
  sub_1AFFC89A8();
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t (*sub_1AFD333A0(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1AFFC8988();
  return sub_1AFD3325C;
}

void sub_1AFD333FC(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 32))(*a1, 0);

  free(v1);
}

uint64_t sub_1AFD33448()
{
  return sub_1AFFC89B8();
}

uint64_t sub_1AFD3346C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v33 = a1;
  uint64_t v1 = sub_1AFFC8EC8();
  uint64_t v31 = *(void *)(v1 - 8);
  uint64_t v32 = v1;
  MEMORY[0x1F4188790](v1);
  uint64_t v30 = (char *)v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1AFD33A34(0, &qword_1EB816AF0, MEMORY[0x1E4F182D8], MEMORY[0x1E4FBB718]);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v29 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v28 = (char *)v27 - v7;
  sub_1AFD33A34(0, &qword_1EB816B00, MEMORY[0x1E4F27608], v3);
  MEMORY[0x1F4188790](v8 - 8);
  v27[0] = (char *)v27 - v9;
  uint64_t v10 = sub_1AFFC9528();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1AFFC9A78();
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v15 = sub_1AFFCAE58();
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v16 = sub_1AFFC9548();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  sub_1AFD32F68();
  v27[1] = v18;
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  uint64_t v19 = *MEMORY[0x1E4F275D0];
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
  v20(v13, v19, v10);
  sub_1AFFC9558();
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  v20(v13, v19, v10);
  uint64_t v21 = v27[0];
  sub_1AFFC9558();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v21, 0, 1, v16);
  uint64_t v37 = 0;
  uint64_t v22 = sub_1AFFC8AD8();
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  v23(v28, 1, 1, v22);
  v23(v29, 1, 1, v22);
  sub_1AFD33A34(0, (unint64_t *)&qword_1EB8167E0, (uint64_t (*)(uint64_t))sub_1AFD33A98, MEMORY[0x1E4F18188]);
  sub_1AFFC8A08();
  long long v34 = 0u;
  long long v35 = 0u;
  uint64_t v36 = 0;
  sub_1AFFC89F8();
  *(void *)&long long v34 = sub_1AFFC89C8();
  (*(void (**)(char *, void, uint64_t))(v31 + 104))(v30, *MEMORY[0x1E4F186F0], v32);
  sub_1AFD33AF0();
  sub_1AFD33B44();
  uint64_t v24 = sub_1AFFC8C48();
  uint64_t v36 = 0;
  long long v34 = 0u;
  long long v35 = 0u;
  sub_1AFFC89F8();
  uint64_t result = sub_1AFFC89C8();
  unint64_t v26 = v33;
  uint64_t *v33 = v24;
  v26[1] = result;
  return result;
}

void sub_1AFD33A34(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1AFD33A98()
{
  unint64_t result = qword_1EB81A890;
  if (!qword_1EB81A890)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB81A890);
  }
  return result;
}

unint64_t sub_1AFD33AF0()
{
  unint64_t result = qword_1E9AF9C90;
  if (!qword_1E9AF9C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1E9AF9C90);
  }
  return result;
}

unint64_t sub_1AFD33B44()
{
  unint64_t result = qword_1EB811380;
  if (!qword_1EB811380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB811380);
  }
  return result;
}

uint64_t sub_1AFD33B98(uint64_t a1)
{
  *(void *)(v2 + 232) = a1;
  *(_OWORD *)(v2 + 240) = *v1;
  return MEMORY[0x1F4188298](sub_1AFD33BC0, 0, 0);
}

uint64_t sub_1AFD33BC0()
{
  uint64_t v30 = v0;
  if (qword_1EB810B30 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1AFFCA8A8();
  v0[32] = __swift_project_value_buffer(v1, (uint64_t)qword_1EB810AF0);
  swift_retain_n();
  swift_retain_n();
  uint64_t v2 = sub_1AFFCA888();
  os_log_type_t v3 = sub_1AFFCB478();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    uint64_t v28 = v27;
    *(_DWORD *)uint64_t v4 = 136315138;
    sub_1AFFC8E48();
    sub_1AFFC8E48();
    sub_1AFFC8C08();
    swift_release();
    swift_release();
    uint64_t v5 = v0[26];
    int64_t v6 = *(void *)(v5 + 16);
    if (v6)
    {
      os_log_type_t v23 = v3;
      uint64_t v24 = v4;
      uint64_t v25 = v2;
      unint64_t v26 = v0;
      uint64_t v29 = MEMORY[0x1E4FBC860];
      sub_1AFD9DA10(0, v6, 0);
      uint64_t v7 = 0;
      uint64_t v8 = v29;
      unint64_t v9 = *(void *)(v29 + 16);
      uint64_t v10 = 16 * v9;
      do
      {
        uint64_t v11 = *(void *)(v5 + v7 + 32);
        uint64_t v12 = *(void *)(v5 + v7 + 40);
        uint64_t v29 = v8;
        unint64_t v13 = *(void *)(v8 + 24);
        int64_t v14 = v9 + 1;
        sub_1AFFC8E38();
        if (v9 >= v13 >> 1)
        {
          sub_1AFD9DA10(v13 > 1, v14, 1);
          uint64_t v8 = v29;
        }
        *(void *)(v8 + 16) = v14;
        uint64_t v15 = v8 + v10;
        *(void *)(v15 + 32) = v11;
        *(void *)(v15 + 40) = v12;
        v10 += 16;
        v7 += 24;
        ++v9;
        --v6;
      }
      while (v6);
      swift_bridgeObjectRelease();
      uint64_t v2 = v25;
      unint64_t v0 = v26;
      uint64_t v4 = v24;
      os_log_type_t v3 = v23;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v8 = MEMORY[0x1E4FBC860];
    }
    v0[27] = v8;
    sub_1AFD38B50(0, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1AFD371B8();
    uint64_t v16 = sub_1AFFCAD88();
    unint64_t v18 = v17;
    swift_bridgeObjectRelease();
    v0[28] = sub_1AFD36BA8(v16, v18, &v28);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_release_n();
    _os_log_impl(&dword_1AFD01000, v2, v3, "Deleting watchlists, ids=[%s]", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v27, -1, -1);
    MEMORY[0x1B3E8F0D0](v4, -1, -1);
  }
  else
  {
    swift_release_n();
    swift_release_n();
  }

  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8998();
  swift_release();
  swift_release();
  uint64_t v19 = v0[22];
  uint64_t v20 = v0[23];
  __swift_project_boxed_opaque_existential_1(v0 + 19, v19);
  uint64_t v21 = (void *)swift_task_alloc();
  v0[33] = v21;
  *uint64_t v21 = v0;
  v21[1] = sub_1AFD33FC4;
  return sub_1AFF9E8A0(v19, v20);
}

uint64_t sub_1AFD33FC4(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 272) = a1;
  *(void *)(v3 + 280) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_1AFD34B90;
  }
  else {
    uint64_t v4 = sub_1AFD340D8;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1AFD340D8()
{
  uint64_t v53 = v0;
  __swift_destroy_boxed_opaque_existential_1(v0 + 152);
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8C08();
  swift_release();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v2 = *(void *)(v0 + 272);
  uint64_t v41 = *(void *)(v1 + 16);
  if (v41)
  {
    unint64_t v3 = 0;
    uint64_t v44 = v1 + 32;
    uint64_t v45 = *(void *)(v2 + 16);
    uint64_t v43 = (char *)(v2 + 73);
    uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v46 = v0;
    uint64_t v42 = *(void *)(v0 + 192);
    while (1)
    {
      if (v3 >= *(void *)(v1 + 16))
      {
        __break(1u);
        return MEMORY[0x1F415EBC8](v1);
      }
      uint64_t v5 = v43;
      uint64_t v6 = (uint64_t *)(v44 + 24 * v3);
      uint64_t v8 = *v6;
      unint64_t v7 = v6[1];
      v48 = v4;
      uint64_t v49 = v6[2];
      unint64_t v47 = v3 + 1;
      uint64_t v9 = v45;
      if (!v45) {
        break;
      }
      while (1)
      {
        uint64_t v10 = *(void *)(v5 - 41);
        uint64_t v11 = *(void *)(v5 - 33);
        uint64_t v12 = *(void *)(v5 - 25);
        uint64_t v13 = *(void *)(v5 - 17);
        unint64_t v14 = *(void *)(v5 - 9);
        char v51 = *(v5 - 1);
        char v15 = *v5;
        if (v13 == v8 && v14 == v7) {
          break;
        }
        uint64_t v17 = v8;
        unint64_t v18 = v7;
        char v19 = sub_1AFFCBCE8();
        unint64_t v7 = v18;
        if (v19) {
          goto LABEL_13;
        }
        v5 += 48;
        --v9;
        uint64_t v8 = v17;
        if (!v9)
        {
          unint64_t v23 = v7;
          sub_1AFFC8E38();
          uint64_t v24 = v49;
          sub_1AFFC8E48();
          swift_bridgeObjectRelease();
          goto LABEL_19;
        }
      }
      uint64_t v13 = v8;
      unint64_t v14 = v7;
LABEL_13:
      sub_1AFFC8E38();
      sub_1AFFC8E48();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      uint64_t v4 = v48;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v4 = sub_1AFD35170(0, v48[2] + 1, 1, v48);
      }
      unint64_t v21 = v4[2];
      unint64_t v20 = v4[3];
      if (v21 >= v20 >> 1) {
        uint64_t v4 = sub_1AFD35170((void *)(v20 > 1), v21 + 1, 1, v4);
      }
      v4[2] = v21 + 1;
      uint64_t v22 = &v4[6 * v21];
      v22[4] = v10;
      v22[5] = v11;
      v22[6] = v12;
      v22[7] = v13;
      v22[8] = v14;
      *((unsigned char *)v22 + 72) = v51;
      *((unsigned char *)v22 + 73) = v15;
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v0 = v46;
      unint64_t v3 = v47;
      uint64_t v1 = v42;
      if (v47 == v41)
      {
        swift_bridgeObjectRelease();
        goto LABEL_22;
      }
    }
    unint64_t v23 = v6[1];
    sub_1AFFC8E38();
    uint64_t v24 = v49;
    sub_1AFFC8E48();
    swift_bridgeObjectRelease();
LABEL_19:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1AFFC8E38();
    sub_1AFFC8E48();
    uint64_t v25 = sub_1AFFCA888();
    os_log_type_t v26 = sub_1AFFCB468();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      uint64_t v52 = v28;
      *(_DWORD *)uint64_t v27 = 136315138;
      sub_1AFFC8E38();
      *(void *)(v46 + 200) = sub_1AFD36BA8(v8, v23, &v52);
      sub_1AFFCB688();
      swift_bridgeObjectRelease_n();
      swift_release();
      _os_log_impl(&dword_1AFD01000, v25, v26, "No watchlist found matching id=%s", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1B3E8F0D0](v28, -1, -1);
      MEMORY[0x1B3E8F0D0](v27, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_release();
    }

    sub_1AFD36B54();
    swift_allocError();
    *int v38 = v8;
    v38[1] = v23;
    v38[2] = v24;
    swift_willThrow();
    uint64_t v39 = *(uint64_t (**)(void))(v46 + 8);
    goto LABEL_29;
  }
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
LABEL_22:
  swift_bridgeObjectRelease();
  *(void *)(v0 + 288) = v4;
  uint64_t v29 = v4[2];
  *(void *)(v0 + 296) = v29;
  if (!v29)
  {
    swift_bridgeObjectRelease();
    sub_1AFFC8B08();
    uint64_t v39 = *(uint64_t (**)(void))(v0 + 8);
LABEL_29:
    return v39();
  }
  *(void *)(v0 + 304) = 0;
  uint64_t v30 = v4[5];
  *(void *)(v0 + 312) = v30;
  uint64_t v31 = v4[6];
  *(void *)(v0 + 320) = v31;
  uint64_t v32 = v4[7];
  *(void *)(v0 + 328) = v32;
  uint64_t v33 = v4[8];
  *(void *)(v0 + 336) = v33;
  __int16 v50 = *((_WORD *)v4 + 36);
  uint64_t v34 = v4[4];
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8998();
  swift_release();
  swift_release();
  uint64_t v35 = *(void *)(v0 + 136);
  uint64_t v36 = *(void *)(v0 + 144);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 112), v35);
  *(void *)(v0 + 16) = v34;
  *(void *)(v0 + 24) = v30;
  *(void *)(v0 + 32) = v31;
  *(void *)(v0 + 40) = v32;
  *(void *)(v0 + 48) = v33;
  *(_WORD *)(v0 + 56) = v50;
  *(void *)(v0 + 344) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 80))(v0 + 16, v35, v36);
  uint64_t v37 = (void *)swift_task_alloc();
  *(void *)(v0 + 352) = v37;
  *uint64_t v37 = v0;
  v37[1] = sub_1AFD346C8;
  uint64_t v1 = v0 + 64;
  return MEMORY[0x1F415EBC8](v1);
}

uint64_t sub_1AFD346C8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 360) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v3 = sub_1AFD34BF4;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v2 + 112);
    unint64_t v3 = sub_1AFD34850;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1AFD34850()
{
  uint64_t v22 = v0;
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  uint64_t v1 = sub_1AFFCA888();
  os_log_type_t v2 = sub_1AFFCB478();
  BOOL v3 = os_log_type_enabled(v1, v2);
  unint64_t v4 = *(void *)(v0 + 336);
  if (v3)
  {
    uint64_t v5 = *(void *)(v0 + 328);
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v21 = v7;
    *(_DWORD *)uint64_t v6 = 136315138;
    sub_1AFFC8E38();
    *(void *)(v6 + 4) = sub_1AFD36BA8(v5, v4, &v21);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AFD01000, v1, v2, "Successfully deleted watchlist id=%s", (uint8_t *)v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v7, -1, -1);
    MEMORY[0x1B3E8F0D0](v6, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  uint64_t v8 = *(void *)(v0 + 304) + 1;
  if (v8 == *(void *)(v0 + 296))
  {
    swift_bridgeObjectRelease();
    sub_1AFFC8B08();
    uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
    return v9();
  }
  else
  {
    *(void *)(v0 + 304) = v8;
    uint64_t v11 = *(void *)(v0 + 288) + 48 * v8;
    uint64_t v12 = *(void *)(v11 + 40);
    *(void *)(v0 + 312) = v12;
    uint64_t v13 = *(void *)(v11 + 48);
    *(void *)(v0 + 320) = v13;
    uint64_t v14 = *(void *)(v11 + 56);
    *(void *)(v0 + 328) = v14;
    uint64_t v15 = *(void *)(v11 + 64);
    *(void *)(v0 + 336) = v15;
    __int16 v20 = *(_WORD *)(v11 + 72);
    uint64_t v16 = *(void *)(v11 + 32);
    sub_1AFFC8E48();
    sub_1AFFC8E48();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8998();
    swift_release();
    swift_release();
    uint64_t v17 = *(void *)(v0 + 136);
    uint64_t v18 = *(void *)(v0 + 144);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 112), v17);
    *(void *)(v0 + 16) = v16;
    *(void *)(v0 + 24) = v12;
    *(void *)(v0 + 32) = v13;
    *(void *)(v0 + 40) = v14;
    *(void *)(v0 + 48) = v15;
    *(_WORD *)(v0 + 56) = v20;
    *(void *)(v0 + 344) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 80))(v0 + 16, v17, v18);
    char v19 = (void *)swift_task_alloc();
    *(void *)(v0 + 352) = v19;
    *char v19 = v0;
    v19[1] = sub_1AFD346C8;
    return MEMORY[0x1F415EBC8](v0 + 64);
  }
}

uint64_t sub_1AFD34B90()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 152);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1AFD34BF4()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1AFD34C58()
{
  sub_1AFFC8C08();
  return v1;
}

uint64_t sub_1AFD34C8C@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E9AF8BF8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1AFFC9548();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1E9AF9C28);
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1AFD34D38@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x1E4F18790];
  uint64_t v3 = sub_1AFFC8FC8();
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t sub_1AFD34DB0()
{
  sub_1AFD38A38(0, &qword_1E9AF9C58, (uint64_t (*)(void))sub_1AFD32E34, (uint64_t)&type metadata for DeleteWatchlistsIntent, MEMORY[0x1E4F186C8]);
  MEMORY[0x1F4188790](v0 - 8);
  sub_1AFD38A38(0, &qword_1E9AF9C68, (uint64_t (*)(void))sub_1AFD32E34, (uint64_t)&type metadata for DeleteWatchlistsIntent, MEMORY[0x1E4F186C0]);
  MEMORY[0x1F4188790](v1);
  sub_1AFFC8EA8();
  sub_1AFFC8E98();
  swift_getKeyPath();
  sub_1AFD32F08();
  sub_1AFFC8E88();
  swift_release();
  sub_1AFFC8E98();
  sub_1AFFC8EB8();
  return sub_1AFFC8E58();
}

uint64_t sub_1AFD34F88(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_1AFD3503C;
  *(void *)(v4 + 232) = a1;
  *(_OWORD *)(v4 + 240) = *v1;
  return MEMORY[0x1F4188298](sub_1AFD33BC0, 0, 0);
}

uint64_t sub_1AFD3503C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1AFD35134(uint64_t a1)
{
  unint64_t v2 = sub_1AFD32E34();

  return MEMORY[0x1F40D3C90](a1, v2);
}

void *sub_1AFD35170(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1AFD38B50(0, &qword_1EB818398, (uint64_t)&type metadata for Watchlist, MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4]) {
          memmove(v12, a4 + 4, 48 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1AFD37B74(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1AFD352B4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1AFD368B8(a1, a2, a3, a4, &qword_1E9AF9CF8, (uint64_t (*)(uint64_t))type metadata accessor for YahooHeadline, (uint64_t (*)(void))type metadata accessor for YahooHeadline, (uint64_t (*)(void))type metadata accessor for YahooHeadline);
}

void *sub_1AFD352FC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1AFD38B50(0, (unint64_t *)&qword_1EB81A0E0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1AFD3798C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1AFD3542C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1AFD38B50(0, &qword_1EB811410, (uint64_t)&type metadata for WatchlistEntity, MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1AFD37C6C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1AFD35574(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1AFD38B50(0, &qword_1EB818388, (uint64_t)&type metadata for Stock, MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 136);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[17 * v8 + 4]) {
          memmove(v12, a4 + 4, 136 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1AFD37D64(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1AFD356B8(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  sub_1AFD38830();
  sub_1AFD38A38(0, (unint64_t *)&qword_1EB818790, (uint64_t (*)(void))sub_1AFD388C0, (uint64_t)&type metadata for Stock, MEMORY[0x1E4FAAAC8]);
  uint64_t v11 = *(void *)(*(void *)(v10 - 8) + 72);
  unint64_t v12 = (*(unsigned __int8 *)(*(void *)(v10 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v10 - 8) + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = sub_1AFFCB998();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  sub_1AFD38A38(0, (unint64_t *)&qword_1EB818790, (uint64_t (*)(void))sub_1AFD388C0, (uint64_t)&type metadata for Stock, MEMORY[0x1E4FAAAC8]);
  uint64_t v17 = *(void *)(v16 - 8);
  unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  unint64_t v19 = (unint64_t)v13 + v18;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v19 >= a4 + v18 + *(void *)(v17 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1AFD38298(0, v8, v19, a4, (unint64_t *)&qword_1EB818790, (uint64_t (*)(void))sub_1AFD388C0, (uint64_t)&type metadata for Stock, MEMORY[0x1E4FAAAC8]);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

uint64_t sub_1AFD359C4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1AFD368B8(a1, a2, a3, a4, (unint64_t *)&unk_1EB8184E8, (uint64_t (*)(uint64_t))sub_1AFD387D0, (uint64_t (*)(void))sub_1AFD387D0, (uint64_t (*)(void))sub_1AFD387D0);
}

uint64_t sub_1AFD35A0C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1AFD368B8(a1, a2, a3, a4, &qword_1E9AF9D00, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity, (uint64_t (*)(void))type metadata accessor for SymbolEntity, (uint64_t (*)(void))type metadata accessor for SymbolEntity);
}

void *sub_1AFD35A54(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1AFD38B50(0, (unint64_t *)&unk_1EB818360, (uint64_t)&type metadata for StockNewsFeed, MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 160);
      unint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[20 * v8 + 4]) {
          memmove(v12, a4 + 4, 160 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      unint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1AFD37FB8(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1AFD35B98(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1AFD368B8(a1, a2, a3, a4, &qword_1EB816AD8, (uint64_t (*)(uint64_t))type metadata accessor for NewsFeedRequest, (uint64_t (*)(void))type metadata accessor for NewsFeedRequest, (uint64_t (*)(void))type metadata accessor for NewsFeedRequest);
}

void *sub_1AFD35BE0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1AFD38B50(0, &qword_1E9AF9D28, (uint64_t)&type metadata for SymbolWidgetEntity, MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 + 31;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 6);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[8 * v8 + 4]) {
          memmove(v13, a4 + 4, v8 << 6);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1AFD380B0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1AFD35D10(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  sub_1AFD389A8();
  sub_1AFD38A38(0, &qword_1E9AF9D20, (uint64_t (*)(void))sub_1AFD38AA0, (uint64_t)&type metadata for SymbolWidgetEntity, MEMORY[0x1E4F18518]);
  uint64_t v11 = *(void *)(*(void *)(v10 - 8) + 72);
  unint64_t v12 = (*(unsigned __int8 *)(*(void *)(v10 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v10 - 8) + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = sub_1AFFCB998();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  sub_1AFD38A38(0, &qword_1E9AF9D20, (uint64_t (*)(void))sub_1AFD38AA0, (uint64_t)&type metadata for SymbolWidgetEntity, MEMORY[0x1E4F18518]);
  uint64_t v17 = *(void *)(v16 - 8);
  unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  unint64_t v19 = (unint64_t)v13 + v18;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v19 >= a4 + v18 + *(void *)(v17 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1AFD38298(0, v8, v19, a4, &qword_1E9AF9D20, (uint64_t (*)(void))sub_1AFD38AA0, (uint64_t)&type metadata for SymbolWidgetEntity, MEMORY[0x1E4F18518]);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

void *sub_1AFD3601C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1AFD38B50(0, &qword_1EB818980, MEMORY[0x1E4FBB7A8], MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1AFD38400(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1AFD3614C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1AFD38B50(0, &qword_1EB81B1C0, (uint64_t)&type metadata for StockMetadataManager.CacheKey, MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4]) {
          memmove(v12, a4 + 4, 48 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1AFD384F4(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1AFD36294(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1AFD38B50(0, &qword_1EB811998, (uint64_t)&type metadata for WatchlistWidgetEntity, MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1AFD381A4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1AFD363C4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1AFD38B50(0, &qword_1EB818350, (uint64_t)&type metadata for StockRecord, MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 104);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[13 * v8 + 4]) {
          memmove(v12, a4 + 4, 104 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1AFD37A80(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1AFD36510(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1AFD38B50(0, &qword_1EB818390, (uint64_t)&type metadata for Headline, MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 144);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[18 * v8 + 4]) {
          memmove(v12, a4 + 4, 144 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1AFD385EC(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1AFD3665C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1AFD368B8(a1, a2, a3, a4, &qword_1EB818978, MEMORY[0x1E4FAAD88], MEMORY[0x1E4FAAD88], MEMORY[0x1E4FAAD88]);
}

uint64_t sub_1AFD366A4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1AFD368B8(a1, a2, a3, a4, &qword_1EB816928, type metadata accessor for Chart.Entry, type metadata accessor for Chart.Entry, type metadata accessor for Chart.Entry);
}

void *sub_1AFD366EC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1AFD33A34(0, &qword_1EB8183E8, (uint64_t (*)(uint64_t))sub_1AFD3794C, MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1AFD386E4(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1AFD36828(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1AFD368B8(a1, a2, a3, a4, &qword_1E9AF9D08, (uint64_t (*)(uint64_t))sub_1AFD38914, (uint64_t (*)(void))sub_1AFD38914, (uint64_t (*)(void))sub_1AFD38914);
}

uint64_t sub_1AFD36870(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1AFD368B8(a1, a2, a3, a4, &qword_1EB81A0B8, MEMORY[0x1E4F26EA0], MEMORY[0x1E4F26EA0], MEMORY[0x1E4F26EA0]);
}

uint64_t sub_1AFD368B8(char a1, int64_t a2, char a3, unint64_t a4, unint64_t *a5, uint64_t (*a6)(uint64_t), uint64_t (*a7)(void), uint64_t (*a8)(void))
{
  if (a3)
  {
    unint64_t v12 = *(void *)(a4 + 24);
    uint64_t v13 = v12 >> 1;
    if ((uint64_t)(v12 >> 1) < a2)
    {
      if (v13 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v13 = v12 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v12 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v13 = a2;
      }
    }
  }
  else
  {
    uint64_t v13 = a2;
  }
  uint64_t v14 = *(void *)(a4 + 16);
  if (v13 <= v14) {
    uint64_t v15 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v15 = v13;
  }
  if (!v15)
  {
    unint64_t v19 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  sub_1AFD33A34(0, a5, a6, MEMORY[0x1E4FBBE00]);
  uint64_t v16 = *(void *)(a7(0) - 8);
  uint64_t v17 = *(void *)(v16 + 72);
  unint64_t v18 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v19 = (void *)swift_allocObject();
  size_t v20 = _swift_stdlib_malloc_size(v19);
  if (!v17 || (v20 - v18 == 0x8000000000000000 ? (BOOL v21 = v17 == -1) : (BOOL v21 = 0), v21))
  {
LABEL_29:
    uint64_t result = sub_1AFFCB998();
    __break(1u);
    return result;
  }
  v19[2] = v14;
  v19[3] = 2 * ((uint64_t)(v20 - v18) / v17);
LABEL_19:
  uint64_t v22 = *(void *)(a7(0) - 8);
  unint64_t v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  unint64_t v24 = (unint64_t)v19 + v23;
  if (a1)
  {
    if ((unint64_t)v19 < a4 || v24 >= a4 + v23 + *(void *)(v22 + 72) * v14)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v19 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1AFD37E5C(0, v14, v24, a4, a8);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v19;
}

unint64_t sub_1AFD36B54()
{
  unint64_t result = qword_1E9AF9CA0;
  if (!qword_1E9AF9CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AF9CA0);
  }
  return result;
}

uint64_t sub_1AFD36BA8(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_1AFD36C7C(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_1AFD38AF4((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x1E4FBB9B0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_1AFD38AF4((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    sub_1AFFC8E38();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_1AFD36C7C(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1AFFCB698();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_1AFD36E38(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_1AFFCB878();
  if (!v8)
  {
    sub_1AFFCB998();
    __break(1u);
LABEL_17:
    uint64_t result = sub_1AFFCBA28();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_1AFD36E38(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_1AFD36ED0(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1AFD37048(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_1AFD37048(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1AFD36ED0(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_1AFE6FD84(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_1AFFCB808();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_1AFFCB998();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_1AFFCAFB8();
      if (!v2) {
        return MEMORY[0x1E4FBC860];
      }
    }
    sub_1AFFCBA28();
    __break(1u);
LABEL_14:
    uint64_t result = sub_1AFFCB998();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

uint64_t sub_1AFD37048(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_1AFD38B50(0, (unint64_t *)&qword_1EB8183D0, MEMORY[0x1E4FBC358], MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1AFFCBA28();
  __break(1u);
  return result;
}

unint64_t sub_1AFD371B8()
{
  unint64_t result = qword_1EB819DD0;
  if (!qword_1EB819DD0)
  {
    sub_1AFD38B50(255, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819DD0);
  }
  return result;
}

unint64_t sub_1AFD37238()
{
  unint64_t result = qword_1E9AF9CA8;
  if (!qword_1E9AF9CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AF9CA8);
  }
  return result;
}

unint64_t sub_1AFD37298()
{
  unint64_t result = qword_1E9AF9CB0;
  if (!qword_1E9AF9CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AF9CB0);
  }
  return result;
}

unint64_t sub_1AFD372F0()
{
  unint64_t result = qword_1E9AF9CB8;
  if (!qword_1E9AF9CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AF9CB8);
  }
  return result;
}

uint64_t sub_1AFD37344()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1AFD37360()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for OpenSymbolIntent()
{
  swift_release();

  return swift_release();
}

void *_s10StocksCore16OpenSymbolIntentVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  return a1;
}

void *assignWithCopy for OpenSymbolIntent(void *a1, void *a2)
{
  *a1 = *a2;
  sub_1AFFC8E48();
  swift_release();
  a1[1] = a2[1];
  sub_1AFFC8E48();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for OpenSymbolIntent(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for OpenSymbolIntent(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OpenSymbolIntent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DeleteWatchlistsIntent()
{
  return &type metadata for DeleteWatchlistsIntent;
}

unint64_t sub_1AFD3753C()
{
  unint64_t result = qword_1E9AF9CC8;
  if (!qword_1E9AF9CC8)
  {
    sub_1AFD38A38(255, &qword_1E9AF9CD0, (uint64_t (*)(void))sub_1AFD32E34, (uint64_t)&type metadata for DeleteWatchlistsIntent, MEMORY[0x1E4F186A8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AF9CC8);
  }
  return result;
}

uint64_t sub_1AFD375CC()
{
  return sub_1AFD37614((unint64_t *)&qword_1E9AF9CD8, (void (*)(uint64_t))sub_1AFD3765C);
}

uint64_t sub_1AFD37614(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1AFD3765C()
{
  if (!qword_1E9AF9CE0)
  {
    sub_1AFD376D4();
    sub_1AFD37728();
    unint64_t v0 = sub_1AFFC8E08();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9AF9CE0);
    }
  }
}

unint64_t sub_1AFD376D4()
{
  unint64_t result = qword_1E9AF9CE8;
  if (!qword_1E9AF9CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AF9CE8);
  }
  return result;
}

unint64_t sub_1AFD37728()
{
  unint64_t result = qword_1E9AF9CF0;
  if (!qword_1E9AF9CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AF9CF0);
  }
  return result;
}

uint64_t destroy for WatchlistEntity()
{
  swift_bridgeObjectRelease();

  return swift_release();
}

void *_s10StocksCore15WatchlistEntityVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  sub_1AFFC8E38();
  sub_1AFFC8E48();
  return a1;
}

void *assignWithCopy for WatchlistEntity(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  sub_1AFFC8E48();
  swift_release();
  return a1;
}

uint64_t assignWithTake for WatchlistEntity(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for WatchlistEntity(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WatchlistEntity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_1AFD37934()
{
  return 0;
}

ValueMetadata *type metadata accessor for DeleteWatchlistsIntent.Error()
{
  return &type metadata for DeleteWatchlistsIntent.Error;
}

unint64_t sub_1AFD3794C()
{
  unint64_t result = qword_1EB8183F8;
  if (!qword_1EB8183F8)
  {
    unint64_t result = swift_getExistentialMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB8183F8);
  }
  return result;
}

uint64_t sub_1AFD3798C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1AFFCBA28();
  __break(1u);
  return result;
}

uint64_t sub_1AFD37A80(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 104 * a1 + 32;
    unint64_t v6 = a3 + 104 * v4;
    if (v5 >= v6 || v5 + 104 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1AFFCBA28();
  __break(1u);
  return result;
}

uint64_t sub_1AFD37B74(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1AFFCBA28();
  __break(1u);
  return result;
}

uint64_t sub_1AFD37C6C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1AFFCBA28();
  __break(1u);
  return result;
}

uint64_t sub_1AFD37D64(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 136 * a1 + 32;
    unint64_t v6 = a3 + 136 * v4;
    if (v5 >= v6 || v5 + 136 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1AFFCBA28();
  __break(1u);
  return result;
}

uint64_t sub_1AFD37E5C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_1AFFCBA28();
  __break(1u);
  return result;
}

uint64_t sub_1AFD37FB8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 160 * a1 + 32;
    unint64_t v6 = a3 + 160 * v4;
    if (v5 >= v6 || v5 + 160 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1AFFCBA28();
  __break(1u);
  return result;
}

uint64_t sub_1AFD380B0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + (a1 << 6) + 32;
    unint64_t v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1AFFCBA28();
  __break(1u);
  return result;
}

uint64_t sub_1AFD381A4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1AFFCBA28();
  __break(1u);
  return result;
}

uint64_t sub_1AFD38298(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t *a5, uint64_t (*a6)(void), uint64_t a7, uint64_t (*a8)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v8 & 0x8000000000000000) == 0)
  {
    sub_1AFD38A38(0, a5, a6, a7, a8);
    uint64_t v13 = *(void *)(*(void *)(v12 - 8) + 72);
    unint64_t v14 = a4
        + ((*(unsigned __int8 *)(*(void *)(v12 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v12 - 8) + 80))
        + v13 * a1;
    unint64_t v15 = a3 + v13 * v8;
    if (v14 >= v15 || v14 + v13 * v8 <= a3)
    {
      swift_arrayInitWithCopy();
      return v15;
    }
  }
  uint64_t result = sub_1AFFCBA28();
  __break(1u);
  return result;
}

uint64_t sub_1AFD38400(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1AFFCBA28();
  __break(1u);
  return result;
}

uint64_t sub_1AFD384F4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1AFFCBA28();
  __break(1u);
  return result;
}

uint64_t sub_1AFD385EC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 144 * a1 + 32;
    unint64_t v6 = a3 + 144 * v4;
    if (v5 >= v6 || v5 + 144 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1AFFCBA28();
  __break(1u);
  return result;
}

char *sub_1AFD386E4(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    int64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_1AFFCBA28();
  __break(1u);
  return result;
}

void sub_1AFD387D0()
{
  if (!qword_1EB818470)
  {
    unint64_t v0 = sub_1AFFCA0B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB818470);
    }
  }
}

void sub_1AFD38830()
{
  if (!qword_1EB8187A0)
  {
    sub_1AFD38A38(255, (unint64_t *)&qword_1EB818790, (uint64_t (*)(void))sub_1AFD388C0, (uint64_t)&type metadata for Stock, MEMORY[0x1E4FAAAC8]);
    unint64_t v0 = sub_1AFFCBC98();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8187A0);
    }
  }
}

unint64_t sub_1AFD388C0()
{
  unint64_t result = qword_1EB818788;
  if (!qword_1EB818788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818788);
  }
  return result;
}

void sub_1AFD38914()
{
  if (!qword_1E9AF9D10)
  {
    type metadata accessor for SymbolEntity();
    sub_1AFD37614((unint64_t *)&qword_1EB816B20, (void (*)(uint64_t))type metadata accessor for SymbolEntity);
    unint64_t v0 = sub_1AFFC8CF8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9AF9D10);
    }
  }
}

void sub_1AFD389A8()
{
  if (!qword_1E9AF9D18)
  {
    sub_1AFD38A38(255, &qword_1E9AF9D20, (uint64_t (*)(void))sub_1AFD38AA0, (uint64_t)&type metadata for SymbolWidgetEntity, MEMORY[0x1E4F18518]);
    unint64_t v0 = sub_1AFFCBC98();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9AF9D18);
    }
  }
}

void sub_1AFD38A38(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_1AFD38AA0()
{
  unint64_t result = qword_1EB811820;
  if (!qword_1EB811820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB811820);
  }
  return result;
}

uint64_t sub_1AFD38AF4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void sub_1AFD38B50(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1AFD38B9C()
{
  uint64_t v0 = sub_1AFFCA8A8();
  __swift_allocate_value_buffer(v0, qword_1E9AF9D30);
  __swift_project_value_buffer(v0, (uint64_t)qword_1E9AF9D30);
  id v1 = objc_msgSend(self, sel_mainBundle);
  id v2 = objc_msgSend(v1, sel_bundleIdentifier);

  if (v2)
  {
    sub_1AFFCAE98();
  }
  return sub_1AFFCA898();
}

uint64_t sub_1AFD38C84@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E9AF8C08 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1AFFCA8A8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1E9AF9D30);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

BOOL sub_1AFD38D2C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1AFD38D40()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFD38D88()
{
  return sub_1AFFCBE08();
}

uint64_t sub_1AFD38DB4()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFD38DF8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v15 = a1;
  uint64_t v2 = sub_1AFFC96E8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFD392D8();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(*(unsigned char *)(v1 + 16))
  {
    case 3:
    case 4:
      break;
    default:
      sub_1AFFCAE98();
      break;
  }
  uint64_t v9 = (void *)sub_1AFFCAE68();
  unint64_t v10 = (void *)sub_1AFFCAE68();
  swift_bridgeObjectRelease();
  id v11 = (id)FCPermanentURLForRecordID();

  if (!v11)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v8, 1, 1, v2);
    goto LABEL_7;
  }
  sub_1AFFC9678();

  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
  v12(v8, v5, v2);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v8, 0, 1, v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
LABEL_7:
    __break(1u);
    JUMPOUT(0x1AFD39094);
  }
  return ((uint64_t (*)(uint64_t, char *, uint64_t))v12)(v15, v8, v2);
}

uint64_t sub_1AFD390A8()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PermanentURLFactory()
{
  return self;
}

uint64_t getEnumTagSinglePayload for PermanentURLFactory.Container(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for PermanentURLFactory.Container(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFD39238);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

uint64_t sub_1AFD39260(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_1AFD39268(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for PermanentURLFactory.Container()
{
  return &type metadata for PermanentURLFactory.Container;
}

unint64_t sub_1AFD39284()
{
  unint64_t result = qword_1E9AF9D48;
  if (!qword_1E9AF9D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AF9D48);
  }
  return result;
}

void sub_1AFD392D8()
{
  if (!qword_1EB81A490)
  {
    sub_1AFFC96E8();
    unint64_t v0 = sub_1AFFCB658();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB81A490);
    }
  }
}

uint64_t type metadata accessor for YahooNewsOperation()
{
  uint64_t result = qword_1E9AF9D88;
  if (!qword_1E9AF9D88) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1AFD3937C()
{
  uint64_t result = sub_1AFFC9E18();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void sub_1AFD3942C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v20 = a1;
  uint64_t v21 = a2;
  uint64_t v4 = sub_1AFFC98F8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  BOOL v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v2 + qword_1E9AF9D78 + 24);
  v19[2] = *(void *)(v2 + qword_1E9AF9D78 + 32);
  v19[1] = __swift_project_boxed_opaque_existential_1((void *)(v2 + qword_1E9AF9D78), v8);
  sub_1AFD3AF2C(0, (unint64_t *)&qword_1EB81A0E8, (uint64_t (*)(uint64_t))sub_1AFD306F8, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AFFD05F0;
  *(void *)(inited + 32) = 0x7372656B636974;
  *(void *)(inited + 40) = 0xE700000000000000;
  uint64_t v22 = *(void *)(v2 + qword_1E9AF9D70);
  sub_1AFD3ABD0();
  sub_1AFD3AD64((unint64_t *)&qword_1EB819DD0, (void (*)(uint64_t))sub_1AFD3ABD0);
  sub_1AFFC8E38();
  uint64_t v10 = sub_1AFFCAD88();
  uint64_t v12 = v11;
  swift_bridgeObjectRelease();
  *(void *)(inited + 48) = v10;
  *(void *)(inited + 56) = v12;
  unint64_t v13 = sub_1AFDF9B10(inited);
  uint64_t v14 = v3 + qword_1E9AF9D80;
  sub_1AFD3AC28();
  sub_1AFEA2718();
  uint64_t v15 = (void *)sub_1AFEA271C(3u, 0x6677656C7070612FLL, 0xED00007377656E2FLL, v13, (uint64_t)v7, v14);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = v21;
  *(void *)(v16 + 16) = v20;
  *(void *)(v16 + 24) = v17;
  id v18 = v15;
  sub_1AFFC8E48();
  sub_1AFFC9F18();

  objc_msgSend(v18, sel_start);
}

void sub_1AFD396FC(uint64_t a1, void (*a2)(void *, uint64_t), uint64_t a3)
{
  sub_1AFD3AF2C(0, &qword_1E9AF9DA0, (uint64_t (*)(uint64_t))type metadata accessor for YahooHeadline, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v34 - v7;
  uint64_t v9 = type metadata accessor for YahooHeadline();
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v15 = (char *)v34 - v14;
  uint64_t v16 = *(void *)(a1 + 8);
  if (*(unsigned char *)(a1 + 32))
  {
    uint64_t v18 = *(void *)(a1 + 16);
    uint64_t v17 = *(void *)(a1 + 24);
    unint64_t v19 = *(void **)a1;
    id v20 = v19;
    a2(v19, 1);
    sub_1AFD3AC84(v19, v16, v18, v17, 1);
  }
  else
  {
    v34[1] = a3;
    uint64_t v21 = *(void *)(v16 + 16);
    if (v21)
    {
      v34[0] = a2;
      uint64_t v36 = v13;
      uint64_t v22 = (unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
      sub_1AFFC8E38();
      uint64_t v23 = 0;
      unint64_t v24 = MEMORY[0x1E4FBC860];
      uint64_t v37 = v9;
      uint64_t v35 = v12;
      do
      {
        uint64_t v25 = *(void *)(v16 + v23 + 48);
        uint64_t v26 = *(void *)(v16 + v23 + 56);
        long long v27 = *(_OWORD *)(v16 + v23 + 96);
        uint64_t v28 = *(void *)(v16 + v23 + 112);
        uint64_t v29 = *(void *)(v16 + v23 + 120);
        long long v38 = *(_OWORD *)(v16 + v23 + 32);
        uint64_t v39 = v25;
        uint64_t v40 = v26;
        long long v41 = *(_OWORD *)(v16 + v23 + 64);
        long long v42 = *(_OWORD *)(v16 + v23 + 80);
        long long v43 = v27;
        uint64_t v44 = v28;
        uint64_t v45 = v29;
        sub_1AFD39B38((uint64_t *)&v38, (uint64_t)v8);
        if ((*v22)(v8, 1, v9) == 1)
        {
          sub_1AFD3AEBC((uint64_t)v8, &qword_1E9AF9DA0, (uint64_t (*)(uint64_t))type metadata accessor for YahooHeadline);
        }
        else
        {
          sub_1AFD3ADAC((uint64_t)v8, (uint64_t)v15);
          sub_1AFD3ADAC((uint64_t)v15, (uint64_t)v12);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v24 = sub_1AFD352B4(0, *(void *)(v24 + 16) + 1, 1, v24);
          }
          unint64_t v31 = *(void *)(v24 + 16);
          unint64_t v30 = *(void *)(v24 + 24);
          if (v31 >= v30 >> 1) {
            unint64_t v24 = sub_1AFD352B4(v30 > 1, v31 + 1, 1, v24);
          }
          *(void *)(v24 + 16) = v31 + 1;
          uint64_t v32 = v24
              + ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))
              + *(void *)(v36 + 72) * v31;
          uint64_t v12 = v35;
          sub_1AFD3ADAC((uint64_t)v35, v32);
          uint64_t v9 = v37;
        }
        v23 += 96;
        --v21;
      }
      while (v21);
      swift_bridgeObjectRelease();
      a2 = (void (*)(void *, uint64_t))v34[0];
    }
    else
    {
      unint64_t v24 = MEMORY[0x1E4FBC860];
    }
    *(void *)&long long v38 = v24;
    sub_1AFD3AF2C(0, &qword_1E9AF9DA8, (uint64_t (*)(uint64_t))type metadata accessor for YahooHeadline, MEMORY[0x1E4FBB320]);
    sub_1AFFC96E8();
    sub_1AFD3ACDC();
    sub_1AFD3AD64((unint64_t *)&qword_1EB81A618, MEMORY[0x1E4F276F0]);
    uint64_t v33 = sub_1AFFCB068();
    swift_bridgeObjectRelease();
    a2((void *)v33, 0);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1AFD39B38@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v83 = a2;
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1AFD3AF2C(0, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v65 - v5;
  uint64_t v7 = sub_1AFFC98F8();
  uint64_t v76 = *(void *)(v7 - 8);
  uint64_t v77 = v7;
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  v75 = (char *)&v65 - v11;
  sub_1AFD3AF2C(0, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0], v3);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v65 - v13;
  uint64_t v15 = sub_1AFFC96E8();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v81 = v15;
  uint64_t v82 = v16;
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  unint64_t v19 = (char *)&v65 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  v80 = (char *)&v65 - v20;
  uint64_t v21 = *a1;
  uint64_t v22 = a1[1];
  uint64_t v23 = a1[2];
  uint64_t v24 = a1[3];
  uint64_t v70 = a1[4];
  uint64_t v71 = v21;
  uint64_t v25 = a1[5];
  uint64_t v67 = a1[6];
  unint64_t v68 = a1[7];
  uint64_t v69 = v25;
  uint64_t v72 = a1[8];
  uint64_t v73 = a1[9];
  uint64_t v74 = v22;
  uint64_t v26 = a1[11];
  unint64_t v78 = a1[10];
  uint64_t v79 = v26;
  uint64_t v84 = v23;
  uint64_t v85 = v24;
  uint64_t v27 = qword_1E9AF8C18;
  sub_1AFFC8E38();
  if (v27 != -1) {
    swift_once();
  }
  uint64_t v28 = sub_1AFFC92A8();
  __swift_project_value_buffer(v28, (uint64_t)qword_1E9AF9D58);
  sub_1AFD3AE10();
  uint64_t v29 = MEMORY[0x1E4FBB1A0];
  sub_1AFFCB6C8();
  uint64_t v31 = v30;
  swift_bridgeObjectRelease();
  if (!v31)
  {
    sub_1AFD3AF2C(0, (unint64_t *)&qword_1EB81A100, (uint64_t (*)(uint64_t))sub_1AFD3AE64, MEMORY[0x1E4FBBE00]);
    uint64_t v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_1AFFD05F0;
    *(void *)(v36 + 56) = v29;
    *(void *)(v36 + 64) = sub_1AFD2CE00();
    *(void *)(v36 + 32) = v23;
    *(void *)(v36 + 40) = v24;
    sub_1AFD2C4F4();
    sub_1AFFC8E38();
    uint64_t v35 = (void *)sub_1AFFCB638();
    sub_1AFFCB478();
    goto LABEL_7;
  }
  sub_1AFFC96C8();
  swift_bridgeObjectRelease();
  uint64_t v33 = v81;
  uint64_t v32 = v82;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v82 + 48))(v14, 1, v81) == 1)
  {
    sub_1AFD3AEBC((uint64_t)v14, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
    sub_1AFD3AF2C(0, (unint64_t *)&qword_1EB81A100, (uint64_t (*)(uint64_t))sub_1AFD3AE64, MEMORY[0x1E4FBBE00]);
    uint64_t v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_1AFFD05F0;
    *(void *)(v34 + 56) = v29;
    *(void *)(v34 + 64) = sub_1AFD2CE00();
    *(void *)(v34 + 32) = v23;
    *(void *)(v34 + 40) = v24;
    sub_1AFD2C4F4();
    sub_1AFFC8E38();
    uint64_t v35 = (void *)sub_1AFFCB638();
    sub_1AFFCB478();
LABEL_7:
    sub_1AFFCA878();
    swift_bridgeObjectRelease();

LABEL_20:
    uint64_t v64 = type metadata accessor for YahooHeadline();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v83, 1, 1, v64);
  }
  uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
  v37(v80, v14, v33);
  if (qword_1E9AF8C10 != -1) {
    swift_once();
  }
  long long v38 = (void *)qword_1E9AF9D50;
  uint64_t v39 = (void *)sub_1AFFCAE68();
  id v40 = objc_msgSend(v38, sel_dateFromString_, v39);

  if (!v40)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v76 + 56))(v6, 1, 1, v77);
    goto LABEL_19;
  }
  v66 = (void (*)(uint64_t, char *, uint64_t))v37;
  sub_1AFFC98A8();

  uint64_t v42 = v76;
  uint64_t v41 = v77;
  long long v43 = *(void (**)(char *, char *, uint64_t))(v76 + 32);
  v43(v6, v10, v77);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v6, 0, 1, v41);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v6, 1, v41) == 1)
  {
LABEL_19:
    sub_1AFD3AEBC((uint64_t)v6, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928]);
    sub_1AFD3AF2C(0, (unint64_t *)&qword_1EB81A100, (uint64_t (*)(uint64_t))sub_1AFD3AE64, MEMORY[0x1E4FBBE00]);
    uint64_t v61 = swift_allocObject();
    *(_OWORD *)(v61 + 16) = xmmword_1AFFD05F0;
    *(void *)(v61 + 56) = v29;
    *(void *)(v61 + 64) = sub_1AFD2CE00();
    uint64_t v62 = v79;
    *(void *)(v61 + 32) = v78;
    *(void *)(v61 + 40) = v62;
    sub_1AFD2C4F4();
    sub_1AFFC8E38();
    v63 = (void *)sub_1AFFCB638();
    sub_1AFFCB478();
    sub_1AFFCA878();
    swift_bridgeObjectRelease();

    (*(void (**)(char *, uint64_t))(v82 + 8))(v80, v81);
    goto LABEL_20;
  }
  v43(v75, v6, v41);
  uint64_t v45 = v81;
  uint64_t v44 = v82;
  uint64_t v46 = v80;
  (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v19, v80, v81);
  if (v68) {
    uint64_t v47 = v67;
  }
  else {
    uint64_t v47 = 0;
  }
  unint64_t v48 = 0xE000000000000000;
  if (v68) {
    unint64_t v48 = v68;
  }
  unint64_t v78 = v48;
  uint64_t v79 = v47;
  uint64_t v49 = *(void (**)(char *, uint64_t))(v44 + 8);
  sub_1AFFC8E38();
  uint64_t v50 = v69;
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  v49(v46, v45);
  char v51 = (int *)type metadata accessor for YahooHeadline();
  uint64_t v52 = v83;
  v43((char *)(v83 + v51[8]), v75, v77);
  v66(v52, v19, v45);
  uint64_t v53 = (void *)(v52 + v51[5]);
  uint64_t v55 = v73;
  uint64_t v54 = v74;
  void *v53 = v71;
  v53[1] = v54;
  uint64_t v56 = (void *)(v52 + v51[6]);
  *uint64_t v56 = v70;
  v56[1] = v50;
  v57 = (void *)(v52 + v51[7]);
  unint64_t v58 = v78;
  void *v57 = v79;
  v57[1] = v58;
  uint64_t v59 = (void *)(v52 + v51[9]);
  *uint64_t v59 = v72;
  v59[1] = v55;
  (*(void (**)(uint64_t, void, uint64_t, int *))(*((void *)v51 - 1) + 56))(v52, 0, 1, v51);
  return sub_1AFFC8E38();
}

uint64_t sub_1AFD3A3E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1AFFC96E8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
}

id sub_1AFD3A450()
{
  id result = sub_1AFD3A470();
  qword_1E9AF9D50 = (uint64_t)result;
  return result;
}

id sub_1AFD3A470()
{
  uint64_t v0 = sub_1AFFC9A78();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFD3AF2C(0, &qword_1EB816CF8, MEMORY[0x1E4F27D68], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v14 - v5;
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
  uint64_t v8 = (void *)sub_1AFFCAE68();
  objc_msgSend(v7, sel_setDateFormat_, v8);

  sub_1AFFC9B58();
  uint64_t v9 = sub_1AFFC9B88();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9) != 1)
  {
    uint64_t v11 = (void *)sub_1AFFC9B68();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v6, v9);
  }
  objc_msgSend(v7, sel_setTimeZone_, v11);

  sub_1AFFC9948();
  uint64_t v12 = (void *)sub_1AFFC99A8();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  objc_msgSend(v7, sel_setLocale_, v12);

  return v7;
}

uint64_t sub_1AFD3A6F0()
{
  uint64_t v0 = sub_1AFFC92A8();
  __swift_allocate_value_buffer(v0, qword_1E9AF9D58);
  __swift_project_value_buffer(v0, (uint64_t)qword_1E9AF9D58);
  return sub_1AFD3A73C();
}

uint64_t sub_1AFD3A73C()
{
  uint64_t v0 = sub_1AFFC92A8();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x1F4188790](v0);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x1F4188790](v2);
  id v7 = (char *)&v13 - v6;
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v13 - v8;
  sub_1AFFC9298();
  sub_1AFFC9218();
  sub_1AFFC9278();
  uint64_t v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v4, v0);
  v10(v9, v0);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v1 + 32);
  v11(v9, v7, v0);
  sub_1AFFC9228();
  sub_1AFFC9278();
  v10(v4, v0);
  v10(v9, v0);
  v11(v9, v7, v0);
  sub_1AFFC9238();
  sub_1AFFC9278();
  v10(v4, v0);
  v10(v9, v0);
  v11(v9, v7, v0);
  sub_1AFFC9248();
  sub_1AFFC9278();
  v10(v7, v0);
  return ((uint64_t (*)(char *, uint64_t))v10)(v9, v0);
}

void sub_1AFD3A984()
{
}

uint64_t sub_1AFD3A9B4()
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + qword_1E9AF9D78);
  uint64_t v1 = v0 + qword_1E9AF9D80;
  uint64_t v2 = sub_1AFFC9E18();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(v1, v2);
}

uint64_t sub_1AFD3AA40(uint64_t a1)
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + qword_1E9AF9D78);
  uint64_t v2 = a1 + qword_1E9AF9D80;
  uint64_t v3 = sub_1AFFC9E18();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

uint64_t sub_1AFD3AAD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  sub_1AFFC8E48();
  sub_1AFD3942C((uint64_t)sub_1AFD3AB90, v4);

  return swift_release();
}

uint64_t sub_1AFD3AB50()
{
  return type metadata accessor for YahooNewsOperation();
}

uint64_t sub_1AFD3AB58()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1AFD3AB90(uint64_t a1, char a2)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t *))(v2 + 16);
  uint64_t v5 = a1;
  char v6 = a2 & 1;
  return v3(&v5);
}

void sub_1AFD3ABD0()
{
  if (!qword_1EB819DC0)
  {
    unint64_t v0 = sub_1AFFCB288();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB819DC0);
    }
  }
}

unint64_t sub_1AFD3AC28()
{
  unint64_t result = qword_1E9AF9D98;
  if (!qword_1E9AF9D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AF9D98);
  }
  return result;
}

void sub_1AFD3AC7C(uint64_t a1)
{
  sub_1AFD396FC(a1, *(void (**)(void *, uint64_t))(v1 + 16), *(void *)(v1 + 24));
}

void sub_1AFD3AC84(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5)
  {
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

unint64_t sub_1AFD3ACDC()
{
  unint64_t result = qword_1E9AF9DB0;
  if (!qword_1E9AF9DB0)
  {
    sub_1AFD3AF2C(255, &qword_1E9AF9DA8, (uint64_t (*)(uint64_t))type metadata accessor for YahooHeadline, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AF9DB0);
  }
  return result;
}

uint64_t sub_1AFD3AD64(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AFD3ADAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for YahooHeadline();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1AFD3AE10()
{
  unint64_t result = qword_1EB819C30;
  if (!qword_1EB819C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819C30);
  }
  return result;
}

unint64_t sub_1AFD3AE64()
{
  unint64_t result = qword_1EB81A120;
  if (!qword_1EB81A120)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB81A120);
  }
  return result;
}

uint64_t sub_1AFD3AEBC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1AFD3AF2C(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1AFD3AF2C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1AFD3AF94(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1AFD3AFA8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_1AFD3AFBC(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_1AFD3BE9C(0, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  char v6 = (char *)v30 - v5;
  uint64_t v7 = sub_1AFFC98F8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v30 - v12;
  if (qword_1EB818A50 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v14 = (void *)qword_1EB818A40;
  *(void *)(v2 + 56) = qword_1EB818A40;
  sub_1AFD2CEB0(a1, v2 + 16);
  uint64_t v15 = *(void **)(v2 + 56);
  id v16 = v14;
  id v17 = v15;
  uint64_t v18 = (void *)sub_1AFFCAE68();
  id v19 = objc_msgSend(v17, sel_objectForKey_, v18);

  if (v19)
  {
    sub_1AFFCB6F8();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v30, 0, sizeof(v30));
  }
  sub_1AFD3BCF4((uint64_t)v30, (uint64_t)v31);
  if (!v32)
  {
    sub_1AFD3BDB4((uint64_t)v31);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    goto LABEL_10;
  }
  int v20 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, v20 ^ 1u, 1, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
LABEL_10:
    sub_1AFD3BE10((uint64_t)v6);
    sub_1AFD2C4F4();
    uint64_t v28 = (void *)sub_1AFFCB638();
    sub_1AFFCB478();
    sub_1AFFCA878();

    sub_1AFFC98E8();
    __swift_destroy_boxed_opaque_existential_1(a1);
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v2 + OBJC_IVAR____TtC10StocksCore17UserLaunchHistory_startDate, v10, v7);
    char v27 = 1;
    goto LABEL_11;
  }
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v21(v13, v6, v7);
  sub_1AFD3BE9C(0, (unint64_t *)&qword_1EB81A100, (uint64_t (*)(uint64_t))sub_1AFD3AE64, MEMORY[0x1E4FBBE00]);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1AFFD05F0;
  sub_1AFD3BF00(&qword_1EB816CB8, MEMORY[0x1E4F27928]);
  uint64_t v23 = sub_1AFFCBC88();
  uint64_t v25 = v24;
  *(void *)(v22 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v22 + 64) = sub_1AFD2CE00();
  *(void *)(v22 + 32) = v23;
  *(void *)(v22 + 40) = v25;
  sub_1AFD2C4F4();
  uint64_t v26 = (void *)sub_1AFFCB638();
  sub_1AFFCB478();
  sub_1AFFCA878();
  swift_bridgeObjectRelease();

  __swift_destroy_boxed_opaque_existential_1(a1);
  v21((char *)(v2 + OBJC_IVAR____TtC10StocksCore17UserLaunchHistory_startDate), v13, v7);
  char v27 = 0;
LABEL_11:
  *(unsigned char *)(v2 + OBJC_IVAR____TtC10StocksCore17UserLaunchHistory_isFirstLaunch) = v27;
  return v2;
}

uint64_t sub_1AFD3B488()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  uint64_t v1 = v0 + OBJC_IVAR____TtC10StocksCore17UserLaunchHistory_startDate;
  uint64_t v2 = sub_1AFFC98F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_1AFD3B538()
{
  return type metadata accessor for UserLaunchHistory();
}

uint64_t type metadata accessor for UserLaunchHistory()
{
  uint64_t result = qword_1EB810E08;
  if (!qword_1EB810E08) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1AFD3B58C()
{
  uint64_t result = sub_1AFFC98F8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1AFD3B63C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC10StocksCore17UserLaunchHistory_startDate;
  swift_beginAccess();
  uint64_t v4 = sub_1AFFC98F8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1AFD3B6C0()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC10StocksCore17UserLaunchHistory_isFirstLaunch);
}

void sub_1AFD3B6D0(uint64_t a1, void *a2, uint64_t a3)
{
  sub_1AFD3BE9C(0, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v34 - v7;
  uint64_t v9 = sub_1AFFC98F8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v34 - v14;
  sub_1AFD3C27C(a1, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1AFD3BE10((uint64_t)v8);
    sub_1AFD3BE9C(0, (unint64_t *)&qword_1EB81A100, (uint64_t (*)(uint64_t))sub_1AFD3AE64, MEMORY[0x1E4FBBE00]);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1AFFD05F0;
    sub_1AFD3BF00(&qword_1EB816CB8, MEMORY[0x1E4F27928]);
    uint64_t v17 = sub_1AFFCBC88();
    uint64_t v19 = v18;
    *(void *)(v16 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v16 + 64) = sub_1AFD2CE00();
    *(void *)(v16 + 32) = v17;
    *(void *)(v16 + 40) = v19;
    sub_1AFD2C4F4();
    int v20 = (void *)sub_1AFFCB638();
    sub_1AFFCB478();
    sub_1AFFCA878();
    swift_bridgeObjectRelease();

    uint64_t v21 = (char *)a2 + OBJC_IVAR____TtC10StocksCore17UserLaunchHistory_startDate;
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 24))(v21, a3, v9);
    swift_endAccess();
    *((unsigned char *)a2 + OBJC_IVAR____TtC10StocksCore17UserLaunchHistory_isFirstLaunch) = 1;
    uint64_t v22 = a2[5];
    uint64_t v23 = a2[6];
    __swift_project_boxed_opaque_existential_1(a2 + 2, v22);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v23 + 48))(a3, 0, v22, v23);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v8, v9);
    sub_1AFD3BE9C(0, (unint64_t *)&qword_1EB81A100, (uint64_t (*)(uint64_t))sub_1AFD3AE64, MEMORY[0x1E4FBBE00]);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_1AFFD05F0;
    sub_1AFD3BF00(&qword_1EB816CB8, MEMORY[0x1E4F27928]);
    uint64_t v25 = sub_1AFFCBC88();
    uint64_t v27 = v26;
    *(void *)(v24 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v24 + 64) = sub_1AFD2CE00();
    *(void *)(v24 + 32) = v25;
    *(void *)(v24 + 40) = v27;
    sub_1AFD2C4F4();
    uint64_t v28 = (void *)sub_1AFFCB638();
    sub_1AFFCB478();
    sub_1AFFCA878();
    swift_bridgeObjectRelease();

    uint64_t v29 = (char *)a2 + OBJC_IVAR____TtC10StocksCore17UserLaunchHistory_startDate;
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v29, v15, v9);
    swift_endAccess();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    *((unsigned char *)a2 + OBJC_IVAR____TtC10StocksCore17UserLaunchHistory_isFirstLaunch) = 0;
  }
  uint64_t v30 = (void *)a2[7];
  uint64_t v31 = (char *)a2 + OBJC_IVAR____TtC10StocksCore17UserLaunchHistory_startDate;
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v31, v9);
  uint64_t v32 = (void *)sub_1AFFC9838();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  uint64_t v33 = (void *)sub_1AFFCAE68();
  objc_msgSend(v30, sel_setObject_forKey_, v32, v33);
}

uint64_t sub_1AFD3BC40()
{
  return MEMORY[0x1F415E7C8](*v0);
}

uint64_t sub_1AFD3BC6C()
{
  return MEMORY[0x1F415E7C8](*v0);
}

uint64_t sub_1AFD3BC9C(uint64_t a1)
{
  uint64_t result = sub_1AFD3BF00(&qword_1EB810DF8, (void (*)(uint64_t))type metadata accessor for UserLaunchHistory);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1AFD3BCF4(uint64_t a1, uint64_t a2)
{
  sub_1AFD3BD58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1AFD3BD58()
{
  if (!qword_1EB816AE0)
  {
    unint64_t v0 = sub_1AFFCB658();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB816AE0);
    }
  }
}

uint64_t sub_1AFD3BDB4(uint64_t a1)
{
  sub_1AFD3BD58();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1AFD3BE10(uint64_t a1)
{
  sub_1AFD3BE9C(0, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1AFD3BE9C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1AFD3BF00(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AFD3BF48()
{
  uint64_t v1 = sub_1AFFC98F8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v4 = MEMORY[0x1F4188790](v1);
  uint64_t v5 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v14 - v6;
  sub_1AFFC98E8();
  uint64_t v8 = v0[5];
  uint64_t v9 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v8);
  (*(void (**)(uint64_t, uint64_t))(v9 + 40))(v8, v9);
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v5, v7, v1);
  unint64_t v10 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v0;
  (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v11 + v10, v5, v1);
  sub_1AFFC8E48();
  uint64_t v12 = (void *)sub_1AFFCA5E8();
  sub_1AFFCA678();
  swift_release();
  swift_release();
  swift_release();

  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v7, v1);
}

uint64_t sub_1AFD3C130()
{
  uint64_t v1 = sub_1AFFC98F8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x1F4186498](v0, v5, v6);
}

void sub_1AFD3C1FC(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_1AFFC98F8() - 8);
  sub_1AFD3B6D0(a1, *(void **)(v1 + 16), v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
}

uint64_t sub_1AFD3C27C(uint64_t a1, uint64_t a2)
{
  sub_1AFD3BE9C(0, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t QuoteDetail.dayOpenPrice.getter()
{
  return *(void *)v0;
}

uint64_t QuoteDetail.dayLowPrice.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t QuoteDetail.dayHighPrice.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t QuoteDetail.yearLowPrice.getter()
{
  return *(void *)(v0 + 48);
}

uint64_t QuoteDetail.yearHighPrice.getter()
{
  return *(void *)(v0 + 64);
}

uint64_t QuoteDetail.dividendYield.getter()
{
  return *(void *)(v0 + 80);
}

uint64_t QuoteDetail.volume.getter()
{
  return *(void *)(v0 + 96);
}

uint64_t QuoteDetail.averageVolume.getter()
{
  return *(void *)(v0 + 112);
}

uint64_t QuoteDetail.priceEarningsRatio.getter()
{
  return *(void *)(v0 + 128);
}

uint64_t QuoteDetail.beta.getter()
{
  return *(void *)(v0 + 144);
}

uint64_t QuoteDetail.earningsPerShare.getter()
{
  return *(void *)(v0 + 160);
}

uint64_t QuoteDetail.earningsStartDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for QuoteDetail();
  return sub_1AFD3C51C(v1 + *(int *)(v3 + 60), a1, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928]);
}

uint64_t type metadata accessor for QuoteDetail()
{
  uint64_t result = qword_1EB816D70;
  if (!qword_1EB816D70) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t QuoteDetail.earningsEndDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for QuoteDetail();
  return sub_1AFD3C51C(v1 + *(int *)(v3 + 64), a1, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928]);
}

uint64_t QuoteDetail.currencyCode.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for QuoteDetail() + 68));
  sub_1AFFC8E38();
  return v1;
}

uint64_t QuoteDetail.detailsURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for QuoteDetail();
  return sub_1AFD3C51C(v1 + *(int *)(v3 + 72), a1, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
}

uint64_t sub_1AFD3C51C(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1AFD3C630(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t QuoteDetail.keyStatisticsURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for QuoteDetail();
  return sub_1AFD3C51C(v1 + *(int *)(v3 + 76), a1, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
}

uint64_t QuoteDetail.marketTimeZone.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for QuoteDetail();
  return sub_1AFD3C51C(v1 + *(int *)(v3 + 80), a1, &qword_1EB816CF8, MEMORY[0x1E4F27D68]);
}

void sub_1AFD3C630(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1AFFCB658();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t QuoteDetail.fundAssetClass.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for QuoteDetail() + 84));
  sub_1AFFC8E38();
  return v1;
}

uint64_t QuoteDetail.fundCategory.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for QuoteDetail() + 88));
  sub_1AFFC8E38();
  return v1;
}

uint64_t QuoteDetail.fundFocus.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for QuoteDetail() + 92));
  sub_1AFFC8E38();
  return v1;
}

uint64_t QuoteDetail.fundNiche.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for QuoteDetail() + 96));
  sub_1AFFC8E38();
  return v1;
}

uint64_t QuoteDetail.fundRegion.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for QuoteDetail() + 100));
  sub_1AFFC8E38();
  return v1;
}

uint64_t QuoteDetail.fundTopHoldings.getter()
{
  type metadata accessor for QuoteDetail();

  return sub_1AFFC8E38();
}

uint64_t QuoteDetail.fundSectors.getter()
{
  type metadata accessor for QuoteDetail();

  return sub_1AFFC8E38();
}

uint64_t QuoteDetail.dateLastRefreshed.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for QuoteDetail() + 112);
  uint64_t v4 = sub_1AFFC98F8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t QuoteDetail.init(dayOpenPrice:dayLowPrice:dayHighPrice:yearLowPrice:yearHighPrice:dividendYield:volume:averageVolume:priceEarningsRatio:beta:earningsPerShare:earningsStartDate:earningsEndDate:currencyCode:detailsURL:keyStatisticsURL:marketTimeZone:fundAssetClass:fundCategory:fundFocus:fundNiche:fundRegion:fundTopHoldings:fundSectors:dateLastRefreshed:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, uint64_t a10, char a11, uint64_t a12, char a13, uint64_t a14, char a15, uint64_t a16, char a17, uint64_t a18, char a19, uint64_t a20,char a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43)
{
  *(void *)a9 = a1;
  *(unsigned char *)(a9 + 8) = a2 & 1;
  *(void *)(a9 + 16) = a3;
  *(unsigned char *)(a9 + 24) = a4 & 1;
  *(void *)(a9 + 32) = a5;
  *(unsigned char *)(a9 + 40) = a6 & 1;
  *(void *)(a9 + 48) = a7;
  *(unsigned char *)(a9 + 56) = a8 & 1;
  *(void *)(a9 + 64) = a10;
  *(unsigned char *)(a9 + 72) = a11 & 1;
  *(void *)(a9 + 80) = a12;
  *(unsigned char *)(a9 + 88) = a13 & 1;
  *(void *)(a9 + 96) = a14;
  *(unsigned char *)(a9 + 104) = a15 & 1;
  *(void *)(a9 + 112) = a16;
  *(unsigned char *)(a9 + 120) = a17 & 1;
  *(void *)(a9 + 128) = a18;
  *(unsigned char *)(a9 + 136) = a19 & 1;
  *(void *)(a9 + 144) = a20;
  *(unsigned char *)(a9 + 152) = a21 & 1;
  *(void *)(a9 + 160) = a22;
  *(unsigned char *)(a9 + 168) = a23 & 1;
  uint64_t v44 = (int *)type metadata accessor for QuoteDetail();
  uint64_t v45 = (void (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1AFD3CBCC(a24, a9 + v44[15], (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928]);
  sub_1AFD3CBCC(a25, a9 + v44[16], (unint64_t *)&qword_1EB818BA0, v45);
  uint64_t v46 = (void *)(a9 + v44[17]);
  *uint64_t v46 = a26;
  v46[1] = a27;
  uint64_t v47 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
  sub_1AFD3CBCC(a28, a9 + v44[18], (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
  sub_1AFD3CBCC(a29, a9 + v44[19], (unint64_t *)&qword_1EB81A490, v47);
  sub_1AFD3CBCC(a30, a9 + v44[20], &qword_1EB816CF8, MEMORY[0x1E4F27D68]);
  unint64_t v48 = (void *)(a9 + v44[21]);
  void *v48 = a31;
  v48[1] = a32;
  uint64_t v49 = (void *)(a9 + v44[22]);
  *uint64_t v49 = a33;
  v49[1] = a34;
  uint64_t v50 = (void *)(a9 + v44[23]);
  void *v50 = a35;
  v50[1] = a36;
  char v51 = (void *)(a9 + v44[24]);
  *char v51 = a37;
  v51[1] = a38;
  uint64_t v52 = (void *)(a9 + v44[25]);
  *uint64_t v52 = a39;
  v52[1] = a40;
  *(void *)(a9 + v44[26]) = a41;
  *(void *)(a9 + v44[27]) = a42;
  uint64_t v53 = a9 + v44[28];
  uint64_t v54 = sub_1AFFC98F8();
  uint64_t v55 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 32);

  return v55(v53, a43, v54);
}

uint64_t sub_1AFD3CBCC(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1AFD3C630(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

unint64_t sub_1AFD3CC3C(char a1)
{
  unint64_t result = 0x506E65704F796164;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7250776F4C796164;
      break;
    case 2:
      unint64_t result = 0x5068676948796164;
      break;
    case 3:
      unint64_t result = 0x50776F4C72616579;
      break;
    case 4:
      unint64_t result = 0x6867694872616579;
      break;
    case 5:
      unint64_t result = 0x646E656469766964;
      break;
    case 6:
      unint64_t result = 0x656D756C6F76;
      break;
    case 7:
      unint64_t result = 0x5665676172657661;
      break;
    case 8:
      unint64_t result = 0xD000000000000012;
      break;
    case 9:
      unint64_t result = 1635018082;
      break;
    case 10:
    case 15:
      unint64_t result = 0xD000000000000010;
      break;
    case 11:
      unint64_t result = 0xD000000000000011;
      break;
    case 12:
      unint64_t result = 0x73676E696E726165;
      break;
    case 13:
      unint64_t result = 0x79636E6572727563;
      break;
    case 14:
      unint64_t result = 0x55736C6961746564;
      break;
    case 16:
      unint64_t result = 0x695474656B72616DLL;
      break;
    case 17:
      unint64_t result = 0x65737341646E7566;
      break;
    case 18:
      unint64_t result = 0x65746143646E7566;
      break;
    case 19:
      unint64_t result = 0x75636F46646E7566;
      break;
    case 20:
      unint64_t result = 0x6863694E646E7566;
      break;
    case 21:
      unint64_t result = 0x69676552646E7566;
      break;
    case 22:
      unint64_t result = 0x48706F54646E7566;
      break;
    case 23:
      unint64_t result = 0x74636553646E7566;
      break;
    case 24:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1AFD3CF98()
{
  return sub_1AFD3CC3C(*v0);
}

uint64_t sub_1AFD3CFA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1AFD4430C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AFD3CFC8()
{
  return 0;
}

void sub_1AFD3CFD4(unsigned char *a1@<X8>)
{
  *a1 = 25;
}

uint64_t sub_1AFD3CFE0(uint64_t a1)
{
  unint64_t v2 = sub_1AFD409F8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFD3D01C(uint64_t a1)
{
  unint64_t v2 = sub_1AFD409F8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t QuoteDetail.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1AFD40EA0(0, &qword_1EB818310, (uint64_t (*)(void))sub_1AFD409F8, (uint64_t)&type metadata for QuoteDetail.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFD409F8();
  sub_1AFFCBE78();
  LOBYTE(v16) = 0;
  sub_1AFFCBBB8();
  if (!v2)
  {
    LOBYTE(v16) = 1;
    sub_1AFFCBBB8();
    LOBYTE(v16) = 2;
    sub_1AFFCBBB8();
    LOBYTE(v16) = 3;
    sub_1AFFCBBB8();
    LOBYTE(v16) = 4;
    sub_1AFFCBBB8();
    LOBYTE(v16) = 5;
    sub_1AFFCBBB8();
    LOBYTE(v16) = 6;
    sub_1AFFCBBD8();
    LOBYTE(v16) = 7;
    sub_1AFFCBBD8();
    LOBYTE(v16) = 8;
    sub_1AFFCBBB8();
    LOBYTE(v16) = 9;
    sub_1AFFCBBB8();
    LOBYTE(v16) = 10;
    sub_1AFFCBBB8();
    unint64_t v10 = (int *)type metadata accessor for QuoteDetail();
    LOBYTE(v16) = 11;
    sub_1AFFC98F8();
    sub_1AFD450E8((unint64_t *)&unk_1EB818B90, MEMORY[0x1E4F27928]);
    sub_1AFFCBBE8();
    LOBYTE(v16) = 12;
    sub_1AFFCBBE8();
    LOBYTE(v16) = 13;
    sub_1AFFCBB98();
    uint64_t v14 = v3 + v10[18];
    LOBYTE(v16) = 14;
    uint64_t v11 = sub_1AFFC96E8();
    v13[1] = sub_1AFD450E8(&qword_1EB818B68, MEMORY[0x1E4F276F0]);
    uint64_t v14 = v11;
    sub_1AFFCBBE8();
    LOBYTE(v16) = 15;
    sub_1AFFCBBE8();
    uint64_t v14 = v3 + v10[20];
    LOBYTE(v16) = 16;
    sub_1AFFC9B88();
    sub_1AFD450E8(&qword_1EB816CE0, MEMORY[0x1E4F27D68]);
    sub_1AFFCBBE8();
    LOBYTE(v16) = 17;
    sub_1AFFCBB98();
    LOBYTE(v16) = 18;
    sub_1AFFCBB98();
    LOBYTE(v16) = 19;
    sub_1AFFCBB98();
    LOBYTE(v16) = 20;
    sub_1AFFCBB98();
    LOBYTE(v16) = 21;
    sub_1AFFCBB98();
    uint64_t v16 = *(void *)(v3 + v10[26]);
    char v15 = 22;
    sub_1AFD40AA0(0, &qword_1EB817F38);
    sub_1AFD40B98(&qword_1EB817F40, (void (*)(void))sub_1AFD40A4C);
    sub_1AFFCBC58();
    uint64_t v16 = *(void *)(v3 + v10[27]);
    char v15 = 23;
    sub_1AFD40AA0(0, &qword_1EB817F20);
    sub_1AFD40C68(&qword_1EB817F28, (void (*)(void))sub_1AFD40AE8);
    sub_1AFFCBC58();
    LOBYTE(v16) = 24;
    sub_1AFFCBC58();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t QuoteDetail.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v67 = a2;
  uint64_t v68 = sub_1AFFC98F8();
  uint64_t v66 = *(void *)(v68 - 8);
  MEMORY[0x1F4188790](v68);
  uint64_t v65 = (char *)&v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFD3C630(0, &qword_1EB816CF8, MEMORY[0x1E4F27D68]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v64 = (uint64_t)&v63 - v5;
  sub_1AFD3C630(0, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v63 - v10;
  sub_1AFD3C630(0, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928]);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  char v15 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v63 - v16;
  sub_1AFD40EA0(0, &qword_1EB818238, (uint64_t (*)(void))sub_1AFD409F8, (uint64_t)&type metadata for QuoteDetail.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v71 = v18;
  uint64_t v69 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  int v20 = (char *)&v63 - v19;
  uint64_t v74 = (int *)type metadata accessor for QuoteDetail();
  MEMORY[0x1F4188790](v74);
  v75 = (uint64_t *)((char *)&v63 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v22 = a1[3];
  uint64_t v73 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v22);
  sub_1AFD409F8();
  uint64_t v70 = v20;
  uint64_t v23 = (uint64_t)v72;
  sub_1AFFCBE68();
  if (v23) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v73);
  }
  uint64_t v24 = (uint64_t)v17;
  uint64_t v72 = v11;
  uint64_t v25 = v69;
  LOBYTE(v77) = 0;
  uint64_t v26 = sub_1AFFCBAC8();
  uint64_t v27 = v75;
  uint64_t *v75 = v26;
  *((unsigned char *)v27 + 8) = v28 & 1;
  LOBYTE(v77) = 1;
  void v27[2] = sub_1AFFCBAC8();
  *((unsigned char *)v27 + 24) = v29 & 1;
  LOBYTE(v77) = 2;
  v27[4] = sub_1AFFCBAC8();
  *((unsigned char *)v27 + 40) = v30 & 1;
  LOBYTE(v77) = 3;
  v27[6] = sub_1AFFCBAC8();
  *((unsigned char *)v27 + 56) = v31 & 1;
  LOBYTE(v77) = 4;
  v27[8] = sub_1AFFCBAC8();
  *((unsigned char *)v27 + 72) = v32 & 1;
  LOBYTE(v77) = 5;
  v27[10] = sub_1AFFCBAC8();
  *((unsigned char *)v27 + 88) = v33 & 1;
  LOBYTE(v77) = 6;
  v27[12] = sub_1AFFCBAE8();
  *((unsigned char *)v27 + 104) = v34 & 1;
  LOBYTE(v77) = 7;
  v27[14] = sub_1AFFCBAE8();
  *((unsigned char *)v27 + 120) = v35 & 1;
  LOBYTE(v77) = 8;
  v27[16] = sub_1AFFCBAC8();
  *((unsigned char *)v27 + 136) = v36 & 1;
  LOBYTE(v77) = 9;
  uint64_t v37 = sub_1AFFCBAC8();
  long long v38 = v75;
  v75[18] = v37;
  *((unsigned char *)v38 + 152) = v39 & 1;
  LOBYTE(v77) = 10;
  uint64_t v40 = sub_1AFFCBAC8();
  uint64_t v41 = v75;
  v75[20] = v40;
  *((unsigned char *)v41 + 168) = v42 & 1;
  LOBYTE(v77) = 11;
  sub_1AFD450E8(&qword_1EB816CB0, MEMORY[0x1E4F27928]);
  sub_1AFFCBAF8();
  sub_1AFD3CBCC(v24, (uint64_t)v75 + v74[15], (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928]);
  LOBYTE(v77) = 12;
  sub_1AFFCBAF8();
  sub_1AFD3CBCC((uint64_t)v15, (uint64_t)v75 + v74[16], (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928]);
  LOBYTE(v77) = 13;
  uint64_t v43 = sub_1AFFCBAA8();
  uint64_t v44 = (uint64_t *)((char *)v75 + v74[17]);
  *uint64_t v44 = v43;
  v44[1] = v45;
  sub_1AFFC96E8();
  LOBYTE(v77) = 14;
  sub_1AFD450E8(&qword_1EB818B78, MEMORY[0x1E4F276F0]);
  sub_1AFFCBAF8();
  sub_1AFD3CBCC((uint64_t)v72, (uint64_t)v75 + v74[18], (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
  LOBYTE(v77) = 15;
  sub_1AFFCBAF8();
  sub_1AFD3CBCC((uint64_t)v9, (uint64_t)v75 + v74[19], (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
  sub_1AFFC9B88();
  LOBYTE(v77) = 16;
  sub_1AFD450E8(&qword_1EB816CE8, MEMORY[0x1E4F27D68]);
  sub_1AFFCBAF8();
  sub_1AFD3CBCC(v64, (uint64_t)v75 + v74[20], &qword_1EB816CF8, MEMORY[0x1E4F27D68]);
  LOBYTE(v77) = 17;
  uint64_t v46 = sub_1AFFCBAA8();
  uint64_t v47 = (uint64_t *)((char *)v75 + v74[21]);
  *uint64_t v47 = v46;
  v47[1] = v48;
  LOBYTE(v77) = 18;
  uint64_t v49 = sub_1AFFCBAA8();
  uint64_t v50 = (uint64_t *)((char *)v75 + v74[22]);
  uint64_t *v50 = v49;
  v50[1] = v51;
  LOBYTE(v77) = 19;
  uint64_t v52 = sub_1AFFCBAA8();
  uint64_t v53 = (uint64_t *)((char *)v75 + v74[23]);
  uint64_t *v53 = v52;
  v53[1] = v54;
  LOBYTE(v77) = 20;
  uint64_t v55 = sub_1AFFCBAA8();
  uint64_t v56 = (uint64_t *)((char *)v75 + v74[24]);
  *uint64_t v56 = v55;
  v56[1] = v57;
  LOBYTE(v77) = 21;
  uint64_t v58 = sub_1AFFCBAA8();
  uint64_t v59 = (uint64_t *)((char *)v75 + v74[25]);
  *uint64_t v59 = v58;
  v59[1] = v60;
  sub_1AFD40AA0(0, &qword_1EB817F38);
  char v76 = 22;
  sub_1AFD40B98(&qword_1EB817F48, (void (*)(void))sub_1AFD40C14);
  sub_1AFFCBB58();
  *(uint64_t *)((char *)v75 + v74[26]) = v77;
  sub_1AFD40AA0(0, &qword_1EB817F20);
  char v76 = 23;
  sub_1AFD40C68(&qword_1EB817F30, (void (*)(void))sub_1AFD40CE4);
  sub_1AFFCBB58();
  *(uint64_t *)((char *)v75 + v74[27]) = v77;
  LOBYTE(v77) = 24;
  sub_1AFFCBB58();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v70, v71);
  uint64_t v61 = (uint64_t)v75;
  (*(void (**)(char *, char *, uint64_t))(v66 + 32))((char *)v75 + v74[28], v65, v68);
  sub_1AFD40D38(v61, v67);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v73);
  return sub_1AFD40D9C(v61);
}

uint64_t sub_1AFD3E770@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return QuoteDetail.init(from:)(a1, a2);
}

uint64_t sub_1AFD3E788(void *a1)
{
  return QuoteDetail.encode(to:)(a1);
}

uint64_t sub_1AFD3E7B0()
{
  if (*v0) {
    return 0xD000000000000012;
  }
  else {
    return 0x6C6F626D7973;
  }
}

uint64_t sub_1AFD3E7EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1AFD44E58(a1, a2);
  *a3 = result;
  return result;
}

void sub_1AFD3E814(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1AFD3E820(uint64_t a1)
{
  unint64_t v2 = sub_1AFD40DF8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFD3E85C(uint64_t a1)
{
  unint64_t v2 = sub_1AFD40DF8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FundHolding.encode(to:)(void *a1)
{
  return sub_1AFD3EB4C(a1, &qword_1E9AF9DB8, (uint64_t (*)(void))sub_1AFD40DF8, (uint64_t)&type metadata for FundHolding.CodingKeys, (void (*)(void))sub_1AFD40DF8);
}

uint64_t FundHolding.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1AFD3ED2C(a1, &qword_1E9AF9DC8, (uint64_t (*)(void))sub_1AFD40DF8, (uint64_t)&type metadata for FundHolding.CodingKeys, (void (*)(void))sub_1AFD40DF8, a2);
}

uint64_t sub_1AFD3E93C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return FundHolding.init(from:)(a1, a2);
}

uint64_t sub_1AFD3E954(void *a1)
{
  return FundHolding.encode(to:)(a1);
}

uint64_t FundSector.sector.getter()
{
  uint64_t v1 = *v0;
  sub_1AFFC8E38();
  return v1;
}

double FundSector.percentageOfAssets.getter()
{
  return *(double *)(v0 + 16);
}

BOOL _s10StocksCore11FundHoldingV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)(a1 + 16);
  double v3 = *(double *)(a2 + 16);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)) {
    return v2 == v3;
  }
  char v5 = sub_1AFFCBCE8();
  BOOL result = 0;
  if (v5) {
    return v2 == v3;
  }
  return result;
}

BOOL sub_1AFD3EA08(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1AFD3EA20()
{
  if (*v0) {
    return 0xD000000000000012;
  }
  else {
    return 0x726F74636573;
  }
}

uint64_t sub_1AFD3EA5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1AFD44F40(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AFD3EA84(uint64_t a1)
{
  unint64_t v2 = sub_1AFD40E4C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFD3EAC0(uint64_t a1)
{
  unint64_t v2 = sub_1AFD40E4C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FundSector.encode(to:)(void *a1)
{
  return sub_1AFD3EB4C(a1, &qword_1E9AF9DD0, (uint64_t (*)(void))sub_1AFD40E4C, (uint64_t)&type metadata for FundSector.CodingKeys, (void (*)(void))sub_1AFD40E4C);
}

uint64_t sub_1AFD3EB4C(void *a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, void (*a5)(void))
{
  char v15 = a5;
  sub_1AFD40EA0(0, a2, a3, a4, MEMORY[0x1E4FBBDE0]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v14 - v10;
  uint64_t v14 = *v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v15();
  sub_1AFFCBE78();
  char v18 = 0;
  uint64_t v12 = v16;
  sub_1AFFCBC08();
  if (!v12)
  {
    char v17 = 1;
    sub_1AFFCBC28();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t FundSector.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1AFD3ED2C(a1, &qword_1E9AF9DE0, (uint64_t (*)(void))sub_1AFD40E4C, (uint64_t)&type metadata for FundSector.CodingKeys, (void (*)(void))sub_1AFD40E4C, a2);
}

uint64_t sub_1AFD3ED2C@<X0>(void *a1@<X0>, unint64_t *a2@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t a4@<X3>, void (*a5)(void)@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v23 = a6;
  sub_1AFD40EA0(0, a2, a3, a4, MEMORY[0x1E4FBBDC0]);
  uint64_t v10 = v9;
  uint64_t v22 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v21 - v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a5();
  sub_1AFFCBE68();
  if (v6) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v14 = v22;
  uint64_t v13 = v23;
  char v25 = 0;
  uint64_t v15 = sub_1AFFCBB18();
  uint64_t v17 = v16;
  char v24 = 1;
  sub_1AFFC8E38();
  sub_1AFFCBB38();
  uint64_t v19 = v18;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v12, v10);
  uint64_t *v13 = v15;
  v13[1] = v17;
  void v13[2] = v19;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFD3EF30@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return FundSector.init(from:)(a1, a2);
}

uint64_t sub_1AFD3EF48(void *a1)
{
  return FundSector.encode(to:)(a1);
}

uint64_t _s10StocksCore11QuoteDetailV2eeoiySbAC_ACtFZ_0()
{
  uint64_t v192 = sub_1AFFC9B88();
  uint64_t v187 = *(void *)(v192 - 8);
  MEMORY[0x1F4188790](v192);
  v184 = &v175[-((v0 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v1 = (void (*)(uint64_t))MEMORY[0x1E4F27D68];
  sub_1AFD45028(0, &qword_1EB810A88, &qword_1EB816CF8, MEMORY[0x1E4F27D68]);
  uint64_t v185 = v2;
  MEMORY[0x1F4188790](v2);
  v191 = &v175[-v3];
  sub_1AFD3C630(0, &qword_1EB816CF8, v1);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  v186 = &v175[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  v188 = &v175[-v8];
  MEMORY[0x1F4188790](v7);
  v189 = &v175[-v9];
  uint64_t v203 = sub_1AFFC96E8();
  uint64_t v199 = *(void *)(v203 - 8);
  MEMORY[0x1F4188790](v203);
  v190 = &v175[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
  sub_1AFD45028(0, (unint64_t *)&qword_1EB818B80, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
  uint64_t v198 = v12;
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  v196 = &v175[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v13);
  v202 = &v175[-v15];
  sub_1AFD3C630(0, (unint64_t *)&qword_1EB81A490, v11);
  uint64_t v17 = MEMORY[0x1F4188790](v16 - 8);
  v193 = &v175[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  v194 = &v175[-v20];
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  v195 = &v175[-v22];
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  v197 = &v175[-v24];
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  v200 = &v175[-v26];
  MEMORY[0x1F4188790](v25);
  v201 = &v175[-v27];
  uint64_t v28 = sub_1AFFC98F8();
  uint64_t v205 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  char v30 = &v175[-((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  char v31 = (void (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1AFD45028(0, (unint64_t *)&qword_1EB816CC0, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928]);
  uint64_t v33 = v32;
  uint64_t v34 = MEMORY[0x1F4188790](v32);
  v204 = &v175[-((v35 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v34);
  uint64_t v37 = &v175[-v36];
  sub_1AFD3C630(0, (unint64_t *)&qword_1EB818BA0, v31);
  uint64_t v39 = MEMORY[0x1F4188790](v38 - 8);
  uint64_t v41 = &v175[-((v40 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v42 = MEMORY[0x1F4188790](v39);
  uint64_t v44 = &v175[-v43];
  uint64_t v45 = MEMORY[0x1F4188790](v42);
  uint64_t v47 = &v175[-v46];
  uint64_t v48 = MEMORY[0x1F4188790](v45);
  uint64_t v50 = &v175[-v49];
  uint64_t v51 = MEMORY[0x1F4188790](v48);
  uint64_t v53 = &v175[-v52];
  MEMORY[0x1F4188790](v51);
  uint64_t v57 = &v175[-v56];
  char v58 = *(unsigned char *)(v54 + 8);
  if (*(unsigned char *)(v55 + 8))
  {
    if (!*(unsigned char *)(v54 + 8)) {
      goto LABEL_81;
    }
  }
  else
  {
    if (*(double *)v55 != *(double *)v54) {
      char v58 = 1;
    }
    if (v58) {
      goto LABEL_81;
    }
  }
  char v59 = *(unsigned char *)(v54 + 24);
  if (*(unsigned char *)(v55 + 24))
  {
    if (!*(unsigned char *)(v54 + 24)) {
      goto LABEL_81;
    }
  }
  else
  {
    if (*(double *)(v55 + 16) != *(double *)(v54 + 16)) {
      char v59 = 1;
    }
    if (v59) {
      goto LABEL_81;
    }
  }
  char v60 = *(unsigned char *)(v54 + 40);
  if (*(unsigned char *)(v55 + 40))
  {
    if (!*(unsigned char *)(v54 + 40)) {
      goto LABEL_81;
    }
  }
  else
  {
    if (*(double *)(v55 + 32) != *(double *)(v54 + 32)) {
      char v60 = 1;
    }
    if (v60) {
      goto LABEL_81;
    }
  }
  char v61 = *(unsigned char *)(v54 + 56);
  if (*(unsigned char *)(v55 + 56))
  {
    if (!*(unsigned char *)(v54 + 56)) {
      goto LABEL_81;
    }
  }
  else
  {
    if (*(double *)(v55 + 48) != *(double *)(v54 + 48)) {
      char v61 = 1;
    }
    if (v61) {
      goto LABEL_81;
    }
  }
  char v62 = *(unsigned char *)(v54 + 72);
  if (*(unsigned char *)(v55 + 72))
  {
    if (!*(unsigned char *)(v54 + 72)) {
      goto LABEL_81;
    }
  }
  else
  {
    if (*(double *)(v55 + 64) != *(double *)(v54 + 64)) {
      char v62 = 1;
    }
    if (v62) {
      goto LABEL_81;
    }
  }
  char v63 = *(unsigned char *)(v54 + 88);
  if (*(unsigned char *)(v55 + 88))
  {
    if (!*(unsigned char *)(v54 + 88)) {
      goto LABEL_81;
    }
  }
  else
  {
    if (*(double *)(v55 + 80) != *(double *)(v54 + 80)) {
      char v63 = 1;
    }
    if (v63) {
      goto LABEL_81;
    }
  }
  char v64 = *(unsigned char *)(v54 + 104);
  if (*(unsigned char *)(v55 + 104))
  {
    if (!*(unsigned char *)(v54 + 104)) {
      goto LABEL_81;
    }
  }
  else
  {
    if (*(void *)(v55 + 96) != *(void *)(v54 + 96)) {
      char v64 = 1;
    }
    if (v64) {
      goto LABEL_81;
    }
  }
  char v65 = *(unsigned char *)(v54 + 120);
  if (*(unsigned char *)(v55 + 120))
  {
    if (!*(unsigned char *)(v54 + 120)) {
      goto LABEL_81;
    }
  }
  else
  {
    if (*(void *)(v55 + 112) != *(void *)(v54 + 112)) {
      char v65 = 1;
    }
    if (v65) {
      goto LABEL_81;
    }
  }
  char v66 = *(unsigned char *)(v54 + 136);
  if (*(unsigned char *)(v55 + 136))
  {
    if (!*(unsigned char *)(v54 + 136)) {
      goto LABEL_81;
    }
  }
  else
  {
    if (*(double *)(v55 + 128) != *(double *)(v54 + 128)) {
      char v66 = 1;
    }
    if (v66) {
      goto LABEL_81;
    }
  }
  char v67 = *(unsigned char *)(v54 + 152);
  if (*(unsigned char *)(v55 + 152))
  {
    if (!*(unsigned char *)(v54 + 152)) {
      goto LABEL_81;
    }
  }
  else
  {
    if (*(double *)(v55 + 144) != *(double *)(v54 + 144)) {
      char v67 = 1;
    }
    if (v67) {
      goto LABEL_81;
    }
  }
  char v68 = *(unsigned char *)(v54 + 168);
  if (*(unsigned char *)(v55 + 168))
  {
    if (!*(unsigned char *)(v54 + 168)) {
      goto LABEL_81;
    }
  }
  else
  {
    if (*(double *)(v55 + 160) != *(double *)(v54 + 160)) {
      char v68 = 1;
    }
    if (v68) {
      goto LABEL_81;
    }
  }
  uint64_t v180 = v55;
  uint64_t v181 = v54;
  v179 = (int *)type metadata accessor for QuoteDetail();
  uint64_t v69 = v180 + v179[15];
  v183 = (void (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1AFD3C51C(v69, (uint64_t)v57, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928]);
  sub_1AFD3C51C(v181 + v179[15], (uint64_t)v53, (unint64_t *)&qword_1EB818BA0, v183);
  v182 = &v37[*(int *)(v33 + 48)];
  sub_1AFD3C51C((uint64_t)v57, (uint64_t)v37, (unint64_t *)&qword_1EB818BA0, v183);
  sub_1AFD3C51C((uint64_t)v53, (uint64_t)v182, (unint64_t *)&qword_1EB818BA0, v183);
  v178 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v205 + 48);
  v183 = (void (*)(uint64_t))(v205 + 48);
  if (v178((uint64_t)v37, 1, v28) == 1)
  {
    uint64_t v70 = (void (*)(uint64_t))MEMORY[0x1E4F27928];
    sub_1AFD40B3C((uint64_t)v53, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928]);
    sub_1AFD40B3C((uint64_t)v57, (unint64_t *)&qword_1EB818BA0, v70);
    if (v178((uint64_t)v182, 1, v28) == 1)
    {
      sub_1AFD40B3C((uint64_t)v37, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928]);
      goto LABEL_74;
    }
LABEL_72:
    uint64_t v72 = &qword_1EB816CC0;
    uint64_t v73 = (unint64_t *)&qword_1EB818BA0;
    uint64_t v74 = (void (*)(uint64_t))MEMORY[0x1E4F27928];
    v75 = v37;
LABEL_80:
    sub_1AFD4508C((uint64_t)v75, (unint64_t *)v72, v73, v74);
    goto LABEL_81;
  }
  sub_1AFD3C51C((uint64_t)v37, (uint64_t)v50, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928]);
  if (v178((uint64_t)v182, 1, v28) == 1)
  {
    uint64_t v71 = (void (*)(uint64_t))MEMORY[0x1E4F27928];
    sub_1AFD40B3C((uint64_t)v53, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928]);
    sub_1AFD40B3C((uint64_t)v57, (unint64_t *)&qword_1EB818BA0, v71);
    (*(void (**)(unsigned char *, uint64_t))(v205 + 8))(v50, v28);
    goto LABEL_72;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v205 + 32))(v30, v182, v28);
  sub_1AFD450E8(&qword_1EB816CA8, MEMORY[0x1E4F27928]);
  int v176 = sub_1AFFCADD8();
  char v76 = *(unsigned char **)(v205 + 8);
  uint64_t v177 = v205 + 8;
  v182 = v76;
  ((void (*)(unsigned char *, uint64_t))v76)(v30, v28);
  uint64_t v77 = (uint64_t)v53;
  unint64_t v78 = (void (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1AFD40B3C(v77, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928]);
  sub_1AFD40B3C((uint64_t)v57, (unint64_t *)&qword_1EB818BA0, v78);
  ((void (*)(unsigned char *, uint64_t))v182)(v50, v28);
  sub_1AFD40B3C((uint64_t)v37, (unint64_t *)&qword_1EB818BA0, v78);
  if ((v176 & 1) == 0) {
    goto LABEL_81;
  }
LABEL_74:
  uint64_t v79 = v179;
  v80 = (void (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1AFD3C51C(v180 + v179[16], (uint64_t)v47, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928]);
  sub_1AFD3C51C(v181 + v79[16], (uint64_t)v44, (unint64_t *)&qword_1EB818BA0, v80);
  uint64_t v81 = v204;
  uint64_t v82 = (uint64_t)&v204[*(int *)(v33 + 48)];
  sub_1AFD3C51C((uint64_t)v47, (uint64_t)v204, (unint64_t *)&qword_1EB818BA0, v80);
  sub_1AFD3C51C((uint64_t)v44, v82, (unint64_t *)&qword_1EB818BA0, v80);
  uint64_t v83 = v178;
  if (v178((uint64_t)v81, 1, v28) == 1)
  {
    uint64_t v84 = (void (*)(uint64_t))MEMORY[0x1E4F27928];
    sub_1AFD40B3C((uint64_t)v44, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928]);
    sub_1AFD40B3C((uint64_t)v47, (unint64_t *)&qword_1EB818BA0, v84);
    if (v83(v82, 1, v28) == 1)
    {
      sub_1AFD40B3C((uint64_t)v81, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928]);
      goto LABEL_84;
    }
    goto LABEL_79;
  }
  sub_1AFD3C51C((uint64_t)v81, (uint64_t)v41, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928]);
  if (v83(v82, 1, v28) == 1)
  {
    uint64_t v85 = (void (*)(uint64_t))MEMORY[0x1E4F27928];
    sub_1AFD40B3C((uint64_t)v44, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928]);
    sub_1AFD40B3C((uint64_t)v47, (unint64_t *)&qword_1EB818BA0, v85);
    (*(void (**)(unsigned char *, uint64_t))(v205 + 8))(v41, v28);
    uint64_t v81 = v204;
LABEL_79:
    uint64_t v72 = &qword_1EB816CC0;
    uint64_t v73 = (unint64_t *)&qword_1EB818BA0;
    uint64_t v74 = (void (*)(uint64_t))MEMORY[0x1E4F27928];
    v75 = v81;
    goto LABEL_80;
  }
  uint64_t v88 = v205;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v205 + 32))(v30, v82, v28);
  sub_1AFD450E8(&qword_1EB816CA8, MEMORY[0x1E4F27928]);
  char v89 = sub_1AFFCADD8();
  v90 = *(void (**)(unsigned char *, uint64_t))(v88 + 8);
  v90(v30, v28);
  v91 = (void (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1AFD40B3C((uint64_t)v44, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928]);
  sub_1AFD40B3C((uint64_t)v47, (unint64_t *)&qword_1EB818BA0, v91);
  v90(v41, v28);
  sub_1AFD40B3C((uint64_t)v204, (unint64_t *)&qword_1EB818BA0, v91);
  if ((v89 & 1) == 0) {
    goto LABEL_81;
  }
LABEL_84:
  uint64_t v92 = v179[17];
  v93 = (void *)(v180 + v92);
  uint64_t v94 = *(void *)(v180 + v92 + 8);
  v95 = (void *)(v181 + v92);
  uint64_t v96 = v95[1];
  if (v94)
  {
    if (!v96) {
      goto LABEL_81;
    }
    if (*v93 != *v95 || v94 != v96)
    {
      char v97 = sub_1AFFCBCE8();
      char v86 = 0;
      if ((v97 & 1) == 0) {
        return v86 & 1;
      }
    }
  }
  else if (v96)
  {
    goto LABEL_81;
  }
  v98 = v179;
  v99 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
  v100 = v201;
  sub_1AFD3C51C(v180 + v179[18], (uint64_t)v201, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
  v101 = v200;
  sub_1AFD3C51C(v181 + v98[18], (uint64_t)v200, (unint64_t *)&qword_1EB81A490, v99);
  v102 = v202;
  uint64_t v103 = (uint64_t)&v202[*(int *)(v198 + 48)];
  sub_1AFD3C51C((uint64_t)v100, (uint64_t)v202, (unint64_t *)&qword_1EB81A490, v99);
  sub_1AFD3C51C((uint64_t)v101, v103, (unint64_t *)&qword_1EB81A490, v99);
  v104 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v199 + 48);
  if (v104((uint64_t)v102, 1, v203) == 1)
  {
    v105 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
    sub_1AFD40B3C((uint64_t)v200, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
    sub_1AFD40B3C((uint64_t)v201, (unint64_t *)&qword_1EB81A490, v105);
    if (v104(v103, 1, v203) == 1)
    {
      sub_1AFD40B3C((uint64_t)v202, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
      goto LABEL_98;
    }
    goto LABEL_96;
  }
  sub_1AFD3C51C((uint64_t)v202, (uint64_t)v197, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
  if (v104(v103, 1, v203) == 1)
  {
    v106 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
    sub_1AFD40B3C((uint64_t)v200, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
    sub_1AFD40B3C((uint64_t)v201, (unint64_t *)&qword_1EB81A490, v106);
    (*(void (**)(unsigned char *, uint64_t))(v199 + 8))(v197, v203);
LABEL_96:
    uint64_t v72 = &qword_1EB818B80;
    uint64_t v73 = (unint64_t *)&qword_1EB81A490;
    uint64_t v74 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
    v75 = v202;
    goto LABEL_80;
  }
  uint64_t v107 = v199;
  v108 = v190;
  uint64_t v109 = v203;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v199 + 32))(v190, v103, v203);
  sub_1AFD450E8(&qword_1EB818B70, MEMORY[0x1E4F276F0]);
  v110 = v197;
  char v111 = sub_1AFFCADD8();
  v112 = *(void (**)(unsigned char *, uint64_t))(v107 + 8);
  v112(v108, v109);
  v113 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
  sub_1AFD40B3C((uint64_t)v200, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
  sub_1AFD40B3C((uint64_t)v201, (unint64_t *)&qword_1EB81A490, v113);
  v112(v110, v109);
  sub_1AFD40B3C((uint64_t)v202, (unint64_t *)&qword_1EB81A490, v113);
  if ((v111 & 1) == 0) {
    goto LABEL_81;
  }
LABEL_98:
  v114 = v179;
  v115 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
  v116 = v195;
  sub_1AFD3C51C(v180 + v179[19], (uint64_t)v195, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
  v117 = v194;
  sub_1AFD3C51C(v181 + v114[19], (uint64_t)v194, (unint64_t *)&qword_1EB81A490, v115);
  v118 = v196;
  uint64_t v119 = (uint64_t)&v196[*(int *)(v198 + 48)];
  sub_1AFD3C51C((uint64_t)v116, (uint64_t)v196, (unint64_t *)&qword_1EB81A490, v115);
  sub_1AFD3C51C((uint64_t)v117, v119, (unint64_t *)&qword_1EB81A490, v115);
  if (v104((uint64_t)v118, 1, v203) == 1)
  {
    v120 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
    sub_1AFD40B3C((uint64_t)v194, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
    sub_1AFD40B3C((uint64_t)v195, (unint64_t *)&qword_1EB81A490, v120);
    if (v104(v119, 1, v203) == 1)
    {
      sub_1AFD40B3C((uint64_t)v196, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
      goto LABEL_105;
    }
    goto LABEL_103;
  }
  sub_1AFD3C51C((uint64_t)v196, (uint64_t)v193, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
  if (v104(v119, 1, v203) == 1)
  {
    v121 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
    sub_1AFD40B3C((uint64_t)v194, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
    sub_1AFD40B3C((uint64_t)v195, (unint64_t *)&qword_1EB81A490, v121);
    (*(void (**)(unsigned char *, uint64_t))(v199 + 8))(v193, v203);
LABEL_103:
    uint64_t v72 = &qword_1EB818B80;
    uint64_t v73 = (unint64_t *)&qword_1EB81A490;
    uint64_t v74 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
    v75 = v196;
    goto LABEL_80;
  }
  uint64_t v122 = v199;
  v123 = v190;
  uint64_t v124 = v203;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v199 + 32))(v190, v119, v203);
  sub_1AFD450E8(&qword_1EB818B70, MEMORY[0x1E4F276F0]);
  v125 = v193;
  char v126 = sub_1AFFCADD8();
  v127 = *(void (**)(unsigned char *, uint64_t))(v122 + 8);
  v127(v123, v124);
  v128 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
  sub_1AFD40B3C((uint64_t)v194, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
  sub_1AFD40B3C((uint64_t)v195, (unint64_t *)&qword_1EB81A490, v128);
  v127(v125, v124);
  sub_1AFD40B3C((uint64_t)v196, (unint64_t *)&qword_1EB81A490, v128);
  if ((v126 & 1) == 0) {
    goto LABEL_81;
  }
LABEL_105:
  v129 = v179;
  v130 = (void (*)(uint64_t))MEMORY[0x1E4F27D68];
  v131 = v189;
  sub_1AFD3C51C(v180 + v179[20], (uint64_t)v189, &qword_1EB816CF8, MEMORY[0x1E4F27D68]);
  v132 = v188;
  sub_1AFD3C51C(v181 + v129[20], (uint64_t)v188, &qword_1EB816CF8, v130);
  v133 = v191;
  uint64_t v134 = (uint64_t)&v191[*(int *)(v185 + 48)];
  sub_1AFD3C51C((uint64_t)v131, (uint64_t)v191, &qword_1EB816CF8, v130);
  sub_1AFD3C51C((uint64_t)v132, v134, &qword_1EB816CF8, v130);
  v135 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v187 + 48);
  if (v135((uint64_t)v133, 1, v192) == 1)
  {
    v136 = (void (*)(uint64_t))MEMORY[0x1E4F27D68];
    sub_1AFD40B3C((uint64_t)v188, &qword_1EB816CF8, MEMORY[0x1E4F27D68]);
    sub_1AFD40B3C((uint64_t)v189, &qword_1EB816CF8, v136);
    if (v135(v134, 1, v192) == 1)
    {
      sub_1AFD40B3C((uint64_t)v191, &qword_1EB816CF8, MEMORY[0x1E4F27D68]);
      goto LABEL_112;
    }
    goto LABEL_110;
  }
  sub_1AFD3C51C((uint64_t)v191, (uint64_t)v186, &qword_1EB816CF8, MEMORY[0x1E4F27D68]);
  if (v135(v134, 1, v192) == 1)
  {
    v137 = (void (*)(uint64_t))MEMORY[0x1E4F27D68];
    sub_1AFD40B3C((uint64_t)v188, &qword_1EB816CF8, MEMORY[0x1E4F27D68]);
    sub_1AFD40B3C((uint64_t)v189, &qword_1EB816CF8, v137);
    (*(void (**)(unsigned char *, uint64_t))(v187 + 8))(v186, v192);
LABEL_110:
    uint64_t v72 = (uint64_t *)&qword_1EB810A88;
    uint64_t v73 = &qword_1EB816CF8;
    uint64_t v74 = (void (*)(uint64_t))MEMORY[0x1E4F27D68];
    v75 = v191;
    goto LABEL_80;
  }
  uint64_t v138 = v187;
  v139 = v184;
  uint64_t v140 = v192;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v187 + 32))(v184, v134, v192);
  sub_1AFD450E8(&qword_1E9AF9E20, MEMORY[0x1E4F27D68]);
  v141 = v186;
  char v142 = sub_1AFFCADD8();
  v143 = *(void (**)(unsigned char *, uint64_t))(v138 + 8);
  v143(v139, v140);
  v144 = (void (*)(uint64_t))MEMORY[0x1E4F27D68];
  sub_1AFD40B3C((uint64_t)v188, &qword_1EB816CF8, MEMORY[0x1E4F27D68]);
  sub_1AFD40B3C((uint64_t)v189, &qword_1EB816CF8, v144);
  v143(v141, v140);
  sub_1AFD40B3C((uint64_t)v191, &qword_1EB816CF8, v144);
  if ((v142 & 1) == 0) {
    goto LABEL_81;
  }
LABEL_112:
  uint64_t v145 = v179[21];
  v146 = (void *)(v180 + v145);
  uint64_t v147 = *(void *)(v180 + v145 + 8);
  v148 = (void *)(v181 + v145);
  uint64_t v149 = v148[1];
  if (v147)
  {
    if (!v149) {
      goto LABEL_81;
    }
    if (*v146 != *v148 || v147 != v149)
    {
      char v150 = sub_1AFFCBCE8();
      char v86 = 0;
      if ((v150 & 1) == 0) {
        return v86 & 1;
      }
    }
  }
  else if (v149)
  {
    goto LABEL_81;
  }
  uint64_t v151 = v179[22];
  v152 = (void *)(v180 + v151);
  uint64_t v153 = *(void *)(v180 + v151 + 8);
  v154 = (void *)(v181 + v151);
  uint64_t v155 = v154[1];
  if (v153)
  {
    if (!v155) {
      goto LABEL_81;
    }
    if (*v152 != *v154 || v153 != v155)
    {
      char v156 = sub_1AFFCBCE8();
      char v86 = 0;
      if ((v156 & 1) == 0) {
        return v86 & 1;
      }
    }
  }
  else if (v155)
  {
    goto LABEL_81;
  }
  uint64_t v157 = v179[23];
  v158 = (void *)(v180 + v157);
  uint64_t v159 = *(void *)(v180 + v157 + 8);
  v160 = (void *)(v181 + v157);
  uint64_t v161 = v160[1];
  if (v159)
  {
    if (!v161) {
      goto LABEL_81;
    }
    if (*v158 != *v160 || v159 != v161)
    {
      char v162 = sub_1AFFCBCE8();
      char v86 = 0;
      if ((v162 & 1) == 0) {
        return v86 & 1;
      }
    }
  }
  else if (v161)
  {
    goto LABEL_81;
  }
  uint64_t v163 = v179[24];
  v164 = (void *)(v180 + v163);
  uint64_t v165 = *(void *)(v180 + v163 + 8);
  v166 = (void *)(v181 + v163);
  uint64_t v167 = v166[1];
  if (v165)
  {
    if (!v167) {
      goto LABEL_81;
    }
    if (*v164 != *v166 || v165 != v167)
    {
      char v168 = sub_1AFFCBCE8();
      char v86 = 0;
      if ((v168 & 1) == 0) {
        return v86 & 1;
      }
    }
  }
  else if (v167)
  {
    goto LABEL_81;
  }
  uint64_t v169 = v179[25];
  v170 = (void *)(v180 + v169);
  uint64_t v171 = *(void *)(v180 + v169 + 8);
  v172 = (void *)(v181 + v169);
  uint64_t v173 = v172[1];
  if (!v171)
  {
    if (!v173) {
      goto LABEL_147;
    }
LABEL_81:
    char v86 = 0;
    return v86 & 1;
  }
  if (!v173) {
    goto LABEL_81;
  }
  if (*v170 == *v172 && v171 == v173 || (v174 = sub_1AFFCBCE8(), char v86 = 0, (v174 & 1) != 0))
  {
LABEL_147:
    if ((sub_1AFF24BC4(*(void *)(v180 + v179[26]), *(void *)(v181 + v179[26])) & 1) != 0
      && (sub_1AFF24BC4(*(void *)(v180 + v179[27]), *(void *)(v181 + v179[27])) & 1) != 0)
    {
      char v86 = sub_1AFFC9898();
      return v86 & 1;
    }
    goto LABEL_81;
  }
  return v86 & 1;
}

unint64_t sub_1AFD409F8()
{
  unint64_t result = qword_1EB816D48;
  if (!qword_1EB816D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816D48);
  }
  return result;
}

unint64_t sub_1AFD40A4C()
{
  unint64_t result = qword_1EB816D38;
  if (!qword_1EB816D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816D38);
  }
  return result;
}

void sub_1AFD40AA0(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_1AFFCB288();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

unint64_t sub_1AFD40AE8()
{
  unint64_t result = qword_1EB816D28;
  if (!qword_1EB816D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816D28);
  }
  return result;
}

uint64_t sub_1AFD40B3C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1AFD3C630(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1AFD40B98(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1AFD40AA0(255, &qword_1EB817F38);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1AFD40C14()
{
  unint64_t result = qword_1EB816D40;
  if (!qword_1EB816D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816D40);
  }
  return result;
}

uint64_t sub_1AFD40C68(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1AFD40AA0(255, &qword_1EB817F20);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1AFD40CE4()
{
  unint64_t result = qword_1EB816D30;
  if (!qword_1EB816D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816D30);
  }
  return result;
}

uint64_t sub_1AFD40D38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for QuoteDetail();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AFD40D9C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for QuoteDetail();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1AFD40DF8()
{
  unint64_t result = qword_1E9AF9DC0;
  if (!qword_1E9AF9DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AF9DC0);
  }
  return result;
}

unint64_t sub_1AFD40E4C()
{
  unint64_t result = qword_1E9AF9DD8;
  if (!qword_1E9AF9DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AF9DD8);
  }
  return result;
}

void sub_1AFD40EA0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

void *initializeBufferWithCopyOfBuffer for QuoteDetail(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1AFFC8E48();
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    *(void *)(a1 + 16) = a2[2];
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    *(void *)(a1 + 32) = a2[4];
    *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
    *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
    *(void *)(a1 + 48) = a2[6];
    uint64_t v7 = a2[8];
    *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
    *(void *)(a1 + 64) = v7;
    *(unsigned char *)(a1 + 88) = *((unsigned char *)a2 + 88);
    *(void *)(a1 + 80) = a2[10];
    *(unsigned char *)(a1 + 104) = *((unsigned char *)a2 + 104);
    *(void *)(a1 + 96) = a2[12];
    *(unsigned char *)(a1 + 120) = *((unsigned char *)a2 + 120);
    *(void *)(a1 + 112) = a2[14];
    *(unsigned char *)(a1 + 136) = *((unsigned char *)a2 + 136);
    *(void *)(a1 + 128) = a2[16];
    uint64_t v8 = a2[18];
    *(unsigned char *)(a1 + 152) = *((unsigned char *)a2 + 152);
    *(void *)(a1 + 144) = v8;
    uint64_t v9 = a2[20];
    *(unsigned char *)(a1 + 168) = *((unsigned char *)a2 + 168);
    *(void *)(a1 + 160) = v9;
    uint64_t v10 = a3[15];
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = sub_1AFFC98F8();
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    if (v15(v12, 1, v13))
    {
      sub_1AFD3C630(0, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928]);
      memcpy(v11, v12, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    uint64_t v18 = a3[16];
    uint64_t v19 = (char *)v4 + v18;
    uint64_t v20 = (char *)a2 + v18;
    uint64_t v68 = v14;
    uint64_t v70 = v13;
    if (v15((char *)a2 + v18, 1, v13))
    {
      sub_1AFD3C630(0, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928]);
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v19, v20, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v19, 0, 1, v13);
    }
    uint64_t v22 = a3[17];
    uint64_t v23 = a3[18];
    uint64_t v24 = (void *)((char *)v4 + v22);
    uint64_t v25 = (uint64_t *)((char *)a2 + v22);
    uint64_t v26 = v25[1];
    *uint64_t v24 = *v25;
    v24[1] = v26;
    uint64_t v27 = (char *)v4 + v23;
    uint64_t v28 = (char *)a2 + v23;
    uint64_t v29 = sub_1AFFC96E8();
    uint64_t v30 = *(void *)(v29 - 8);
    char v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
    sub_1AFFC8E38();
    if (v31(v28, 1, v29))
    {
      sub_1AFD3C630(0, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
      memcpy(v27, v28, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
    }
    uint64_t v33 = a3[19];
    uint64_t v34 = (char *)v4 + v33;
    uint64_t v35 = (char *)a2 + v33;
    if (v31((char *)a2 + v33, 1, v29))
    {
      sub_1AFD3C630(0, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
      memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v34, v35, v29);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v34, 0, 1, v29);
    }
    uint64_t v37 = a3[20];
    uint64_t v38 = (char *)v4 + v37;
    uint64_t v39 = (char *)a2 + v37;
    uint64_t v40 = sub_1AFFC9B88();
    uint64_t v41 = *(void *)(v40 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
    {
      sub_1AFD3C630(0, &qword_1EB816CF8, MEMORY[0x1E4F27D68]);
      memcpy(v38, v39, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v38, v39, v40);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
    }
    uint64_t v43 = a3[21];
    uint64_t v44 = a3[22];
    uint64_t v45 = (void *)((char *)v4 + v43);
    uint64_t v46 = (uint64_t *)((char *)a2 + v43);
    uint64_t v47 = v46[1];
    void *v45 = *v46;
    v45[1] = v47;
    uint64_t v48 = (void *)((char *)v4 + v44);
    uint64_t v49 = (uint64_t *)((char *)a2 + v44);
    uint64_t v50 = v49[1];
    void *v48 = *v49;
    v48[1] = v50;
    uint64_t v51 = a3[23];
    uint64_t v52 = a3[24];
    uint64_t v53 = (void *)((char *)v4 + v51);
    uint64_t v54 = (uint64_t *)((char *)a2 + v51);
    uint64_t v55 = v54[1];
    void *v53 = *v54;
    v53[1] = v55;
    uint64_t v56 = (void *)((char *)v4 + v52);
    uint64_t v57 = (uint64_t *)((char *)a2 + v52);
    uint64_t v58 = v57[1];
    *uint64_t v56 = *v57;
    v56[1] = v58;
    uint64_t v59 = a3[25];
    uint64_t v60 = a3[26];
    char v61 = (void *)((char *)v4 + v59);
    char v62 = (uint64_t *)((char *)a2 + v59);
    uint64_t v63 = v62[1];
    void *v61 = *v62;
    v61[1] = v63;
    *(void *)((char *)v4 + v60) = *(uint64_t *)((char *)a2 + v60);
    uint64_t v64 = a3[28];
    *(void *)((char *)v4 + a3[27]) = *(uint64_t *)((char *)a2 + a3[27]);
    char v65 = (char *)v4 + v64;
    uint64_t v66 = (uint64_t)a2 + v64;
    uint64_t v69 = *(void (**)(char *, uint64_t, uint64_t))(v68 + 16);
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    v69(v65, v66, v70);
  }
  return v4;
}

uint64_t destroy for QuoteDetail(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[15];
  uint64_t v5 = sub_1AFFC98F8();
  uint64_t v19 = *(void *)(v5 - 8);
  uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
  if (!v6(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v4, v5);
  }
  uint64_t v7 = a1 + a2[16];
  if (!v6(v7, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v7, v5);
  }
  swift_bridgeObjectRelease();
  uint64_t v8 = a1 + a2[18];
  uint64_t v9 = sub_1AFFC96E8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (!v11(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  uint64_t v12 = a1 + a2[19];
  if (!v11(v12, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v12, v9);
  }
  uint64_t v13 = a1 + a2[20];
  uint64_t v14 = sub_1AFFC9B88();
  uint64_t v15 = *(void *)(v14 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14)) {
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v16 = a1 + a2[28];
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(v19 + 8);

  return v17(v16, v5);
}

uint64_t initializeWithCopy for QuoteDetail(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = v6;
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  uint64_t v7 = *(void *)(a2 + 144);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 144) = v7;
  uint64_t v8 = *(void *)(a2 + 160);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(void *)(a1 + 160) = v8;
  uint64_t v9 = a3[15];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  uint64_t v12 = sub_1AFFC98F8();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48);
  if (v14(v11, 1, v12))
  {
    sub_1AFD3C630(0, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928]);
    memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  uint64_t v16 = a3[16];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (const void *)(a2 + v16);
  uint64_t v66 = v13;
  uint64_t v68 = v12;
  if (v14((const void *)(a2 + v16), 1, v12))
  {
    sub_1AFD3C630(0, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928]);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v17, v18, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v17, 0, 1, v12);
  }
  uint64_t v20 = a3[17];
  uint64_t v21 = a3[18];
  uint64_t v22 = (void *)(a1 + v20);
  uint64_t v23 = (void *)(a2 + v20);
  uint64_t v24 = v23[1];
  *uint64_t v22 = *v23;
  v22[1] = v24;
  uint64_t v25 = (void *)(a1 + v21);
  uint64_t v26 = (const void *)(a2 + v21);
  uint64_t v27 = sub_1AFFC96E8();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v28 + 48);
  sub_1AFFC8E38();
  if (v29(v26, 1, v27))
  {
    sub_1AFD3C630(0, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
    memcpy(v25, v26, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v28 + 16))(v25, v26, v27);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  }
  uint64_t v31 = a3[19];
  uint64_t v32 = (void *)(a1 + v31);
  uint64_t v33 = (const void *)(a2 + v31);
  if (v29((const void *)(a2 + v31), 1, v27))
  {
    sub_1AFD3C630(0, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
    memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v28 + 16))(v32, v33, v27);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(v32, 0, 1, v27);
  }
  uint64_t v35 = a3[20];
  uint64_t v36 = (void *)(a1 + v35);
  uint64_t v37 = (const void *)(a2 + v35);
  uint64_t v38 = sub_1AFFC9B88();
  uint64_t v39 = *(void *)(v38 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
  {
    sub_1AFD3C630(0, &qword_1EB816CF8, MEMORY[0x1E4F27D68]);
    memcpy(v36, v37, *(void *)(*(void *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v39 + 16))(v36, v37, v38);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
  }
  uint64_t v41 = a3[21];
  uint64_t v42 = a3[22];
  uint64_t v43 = (void *)(a1 + v41);
  uint64_t v44 = (void *)(a2 + v41);
  uint64_t v45 = v44[1];
  void *v43 = *v44;
  v43[1] = v45;
  uint64_t v46 = (void *)(a1 + v42);
  uint64_t v47 = (void *)(a2 + v42);
  uint64_t v48 = v47[1];
  *uint64_t v46 = *v47;
  v46[1] = v48;
  uint64_t v49 = a3[23];
  uint64_t v50 = a3[24];
  uint64_t v51 = (void *)(a1 + v49);
  uint64_t v52 = (void *)(a2 + v49);
  uint64_t v53 = v52[1];
  *uint64_t v51 = *v52;
  v51[1] = v53;
  uint64_t v54 = (void *)(a1 + v50);
  uint64_t v55 = (void *)(a2 + v50);
  uint64_t v56 = v55[1];
  *uint64_t v54 = *v55;
  v54[1] = v56;
  uint64_t v57 = a3[25];
  uint64_t v58 = a3[26];
  uint64_t v59 = (void *)(a1 + v57);
  uint64_t v60 = (void *)(a2 + v57);
  uint64_t v61 = v60[1];
  *uint64_t v59 = *v60;
  v59[1] = v61;
  *(void *)(a1 + v58) = *(void *)(a2 + v58);
  uint64_t v62 = a3[28];
  *(void *)(a1 + a3[27]) = *(void *)(a2 + a3[27]);
  uint64_t v63 = a1 + v62;
  uint64_t v64 = a2 + v62;
  char v67 = *(void (**)(uint64_t, uint64_t, uint64_t))(v66 + 16);
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  v67(v63, v64, v68);
  return a1;
}

uint64_t assignWithCopy for QuoteDetail(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v6;
  uint64_t v7 = a2[2];
  *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
  *(void *)(a1 + 16) = v7;
  uint64_t v8 = a2[4];
  *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
  *(void *)(a1 + 32) = v8;
  uint64_t v9 = a2[6];
  *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
  *(void *)(a1 + 48) = v9;
  uint64_t v10 = a2[8];
  *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
  *(void *)(a1 + 64) = v10;
  uint64_t v11 = a2[10];
  *(unsigned char *)(a1 + 88) = *((unsigned char *)a2 + 88);
  *(void *)(a1 + 80) = v11;
  uint64_t v12 = a2[12];
  *(unsigned char *)(a1 + 104) = *((unsigned char *)a2 + 104);
  *(void *)(a1 + 96) = v12;
  uint64_t v13 = a2[14];
  *(unsigned char *)(a1 + 120) = *((unsigned char *)a2 + 120);
  *(void *)(a1 + 112) = v13;
  uint64_t v14 = a2[16];
  *(unsigned char *)(a1 + 136) = *((unsigned char *)a2 + 136);
  *(void *)(a1 + 128) = v14;
  uint64_t v15 = a2[18];
  *(unsigned char *)(a1 + 152) = *((unsigned char *)a2 + 152);
  *(void *)(a1 + 144) = v15;
  uint64_t v16 = a2[20];
  *(unsigned char *)(a1 + 168) = *((unsigned char *)a2 + 168);
  *(void *)(a1 + 160) = v16;
  uint64_t v17 = a3[15];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = sub_1AFFC98F8();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v21 + 48);
  int v23 = v22(v18, 1, v20);
  int v24 = v22(v19, 1, v20);
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(void *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v24)
  {
    (*(void (**)(void *, uint64_t))(v21 + 8))(v18, v20);
LABEL_6:
    sub_1AFD3C630(0, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928]);
    memcpy(v18, v19, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(v21 + 24))(v18, v19, v20);
LABEL_7:
  uint64_t v26 = a3[16];
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = (char *)a2 + v26;
  int v29 = v22((void *)(a1 + v26), 1, v20);
  int v30 = v22(v28, 1, v20);
  uint64_t v76 = v20;
  if (v29)
  {
    if (!v30)
    {
      (*(void (**)(void *, char *, uint64_t))(v21 + 16))(v27, v28, v20);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v27, 0, 1, v20);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v30)
  {
    (*(void (**)(void *, uint64_t))(v21 + 8))(v27, v20);
LABEL_12:
    sub_1AFD3C630(0, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928]);
    memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, char *, uint64_t))(v21 + 24))(v27, v28, v20);
LABEL_13:
  uint64_t v32 = a3[17];
  uint64_t v33 = (void *)(a1 + v32);
  uint64_t v34 = (uint64_t *)((char *)a2 + v32);
  void *v33 = *v34;
  v33[1] = v34[1];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  uint64_t v35 = a3[18];
  uint64_t v36 = (void *)(a1 + v35);
  uint64_t v37 = (char *)a2 + v35;
  uint64_t v38 = sub_1AFFC96E8();
  uint64_t v39 = *(void *)(v38 - 8);
  uint64_t v40 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v39 + 48);
  int v41 = v40(v36, 1, v38);
  int v42 = v40(v37, 1, v38);
  if (v41)
  {
    if (!v42)
    {
      (*(void (**)(void *, char *, uint64_t))(v39 + 16))(v36, v37, v38);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v42)
  {
    (*(void (**)(void *, uint64_t))(v39 + 8))(v36, v38);
LABEL_18:
    sub_1AFD3C630(0, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
    memcpy(v36, v37, *(void *)(*(void *)(v43 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(void *, char *, uint64_t))(v39 + 24))(v36, v37, v38);
LABEL_19:
  uint64_t v44 = a3[19];
  uint64_t v45 = (void *)(a1 + v44);
  uint64_t v46 = (char *)a2 + v44;
  int v47 = v40((void *)(a1 + v44), 1, v38);
  int v48 = v40(v46, 1, v38);
  if (v47)
  {
    if (!v48)
    {
      (*(void (**)(void *, char *, uint64_t))(v39 + 16))(v45, v46, v38);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v39 + 56))(v45, 0, 1, v38);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v48)
  {
    (*(void (**)(void *, uint64_t))(v39 + 8))(v45, v38);
LABEL_24:
    sub_1AFD3C630(0, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
    memcpy(v45, v46, *(void *)(*(void *)(v49 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(void *, char *, uint64_t))(v39 + 24))(v45, v46, v38);
LABEL_25:
  uint64_t v50 = a3[20];
  uint64_t v51 = (void *)(a1 + v50);
  uint64_t v52 = (char *)a2 + v50;
  uint64_t v53 = sub_1AFFC9B88();
  uint64_t v54 = *(void *)(v53 - 8);
  uint64_t v55 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v54 + 48);
  int v56 = v55(v51, 1, v53);
  int v57 = v55(v52, 1, v53);
  if (!v56)
  {
    uint64_t v58 = v21;
    if (!v57)
    {
      (*(void (**)(void *, char *, uint64_t))(v54 + 24))(v51, v52, v53);
      goto LABEL_31;
    }
    (*(void (**)(void *, uint64_t))(v54 + 8))(v51, v53);
    goto LABEL_30;
  }
  uint64_t v58 = v21;
  if (v57)
  {
LABEL_30:
    sub_1AFD3C630(0, &qword_1EB816CF8, MEMORY[0x1E4F27D68]);
    memcpy(v51, v52, *(void *)(*(void *)(v59 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(void *, char *, uint64_t))(v54 + 16))(v51, v52, v53);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
LABEL_31:
  uint64_t v60 = a3[21];
  uint64_t v61 = (void *)(a1 + v60);
  uint64_t v62 = (uint64_t *)((char *)a2 + v60);
  void *v61 = *v62;
  v61[1] = v62[1];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  uint64_t v63 = a3[22];
  uint64_t v64 = (void *)(a1 + v63);
  char v65 = (uint64_t *)((char *)a2 + v63);
  *uint64_t v64 = *v65;
  v64[1] = v65[1];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  uint64_t v66 = a3[23];
  char v67 = (void *)(a1 + v66);
  uint64_t v68 = (uint64_t *)((char *)a2 + v66);
  *char v67 = *v68;
  v67[1] = v68[1];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  uint64_t v69 = a3[24];
  uint64_t v70 = (void *)(a1 + v69);
  uint64_t v71 = (uint64_t *)((char *)a2 + v69);
  *uint64_t v70 = *v71;
  v70[1] = v71[1];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  uint64_t v72 = a3[25];
  uint64_t v73 = (void *)(a1 + v72);
  uint64_t v74 = (uint64_t *)((char *)a2 + v72);
  *uint64_t v73 = *v74;
  v73[1] = v74[1];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[26]) = *(uint64_t *)((char *)a2 + a3[26]);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[27]) = *(uint64_t *)((char *)a2 + a3[27]);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v58 + 24))(a1 + a3[28], (uint64_t)a2 + a3[28], v76);
  return a1;
}

uint64_t initializeWithTake for QuoteDetail(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = v6;
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  uint64_t v7 = *(void *)(a2 + 144);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 144) = v7;
  uint64_t v8 = *(void *)(a2 + 160);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(void *)(a1 + 160) = v8;
  uint64_t v9 = a3[15];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  uint64_t v12 = sub_1AFFC98F8();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48);
  if (v14(v11, 1, v12))
  {
    sub_1AFD3C630(0, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928]);
    memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  uint64_t v16 = a3[16];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (const void *)(a2 + v16);
  uint64_t v42 = v12;
  if (v14((const void *)(a2 + v16), 1, v12))
  {
    sub_1AFD3C630(0, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928]);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 32))(v17, v18, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v17, 0, 1, v12);
  }
  uint64_t v20 = a3[18];
  *(_OWORD *)(a1 + a3[17]) = *(_OWORD *)(a2 + a3[17]);
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (const void *)(a2 + v20);
  uint64_t v23 = sub_1AFFC96E8();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v24 + 48);
  if (v25(v22, 1, v23))
  {
    sub_1AFD3C630(0, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
    memcpy(v21, v22, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v24 + 32))(v21, v22, v23);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  uint64_t v27 = a3[19];
  uint64_t v28 = (void *)(a1 + v27);
  int v29 = (const void *)(a2 + v27);
  if (v25((const void *)(a2 + v27), 1, v23))
  {
    sub_1AFD3C630(0, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
    memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v24 + 32))(v28, v29, v23);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v28, 0, 1, v23);
  }
  uint64_t v31 = a3[20];
  uint64_t v32 = (void *)(a1 + v31);
  uint64_t v33 = (const void *)(a2 + v31);
  uint64_t v34 = sub_1AFFC9B88();
  uint64_t v35 = *(void *)(v34 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
  {
    sub_1AFD3C630(0, &qword_1EB816CF8, MEMORY[0x1E4F27D68]);
    memcpy(v32, v33, *(void *)(*(void *)(v36 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v35 + 32))(v32, v33, v34);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
  }
  uint64_t v37 = a3[22];
  *(_OWORD *)(a1 + a3[21]) = *(_OWORD *)(a2 + a3[21]);
  *(_OWORD *)(a1 + v37) = *(_OWORD *)(a2 + v37);
  uint64_t v38 = a3[24];
  *(_OWORD *)(a1 + a3[23]) = *(_OWORD *)(a2 + a3[23]);
  *(_OWORD *)(a1 + v38) = *(_OWORD *)(a2 + v38);
  uint64_t v39 = a3[26];
  *(_OWORD *)(a1 + a3[25]) = *(_OWORD *)(a2 + a3[25]);
  *(void *)(a1 + v39) = *(void *)(a2 + v39);
  uint64_t v40 = a3[28];
  *(void *)(a1 + a3[27]) = *(void *)(a2 + a3[27]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))(a1 + v40, a2 + v40, v42);
  return a1;
}

uint64_t assignWithTake for QuoteDetail(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = v6;
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  uint64_t v7 = *(void *)(a2 + 144);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 144) = v7;
  uint64_t v8 = *(void *)(a2 + 160);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(void *)(a1 + 160) = v8;
  uint64_t v9 = a3[15];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  uint64_t v12 = sub_1AFFC98F8();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    sub_1AFD3C630(0, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928]);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 40))(v10, v11, v12);
LABEL_7:
  uint64_t v18 = a3[16];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (void *)(a2 + v18);
  int v21 = v14((void *)(a1 + v18), 1, v12);
  int v22 = v14(v20, 1, v12);
  uint64_t v80 = v12;
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 32))(v19, v20, v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v19, 0, 1, v12);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v22)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v19, v12);
LABEL_12:
    sub_1AFD3C630(0, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928]);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 40))(v19, v20, v12);
LABEL_13:
  uint64_t v24 = a3[17];
  uint64_t v25 = (void *)(a1 + v24);
  uint64_t v26 = (uint64_t *)(a2 + v24);
  uint64_t v28 = *v26;
  uint64_t v27 = v26[1];
  *uint64_t v25 = v28;
  v25[1] = v27;
  swift_bridgeObjectRelease();
  uint64_t v29 = a3[18];
  uint64_t v30 = (void *)(a1 + v29);
  uint64_t v31 = (void *)(a2 + v29);
  uint64_t v32 = sub_1AFFC96E8();
  uint64_t v33 = *(void *)(v32 - 8);
  uint64_t v34 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v33 + 48);
  int v35 = v34(v30, 1, v32);
  int v36 = v34(v31, 1, v32);
  if (v35)
  {
    if (!v36)
    {
      (*(void (**)(void *, void *, uint64_t))(v33 + 32))(v30, v31, v32);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v36)
  {
    (*(void (**)(void *, uint64_t))(v33 + 8))(v30, v32);
LABEL_18:
    sub_1AFD3C630(0, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
    memcpy(v30, v31, *(void *)(*(void *)(v37 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(void *, void *, uint64_t))(v33 + 40))(v30, v31, v32);
LABEL_19:
  uint64_t v38 = a3[19];
  uint64_t v39 = (void *)(a1 + v38);
  uint64_t v40 = (void *)(a2 + v38);
  int v41 = v34((void *)(a1 + v38), 1, v32);
  int v42 = v34(v40, 1, v32);
  if (v41)
  {
    if (!v42)
    {
      (*(void (**)(void *, void *, uint64_t))(v33 + 32))(v39, v40, v32);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v33 + 56))(v39, 0, 1, v32);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v42)
  {
    (*(void (**)(void *, uint64_t))(v33 + 8))(v39, v32);
LABEL_24:
    sub_1AFD3C630(0, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
    memcpy(v39, v40, *(void *)(*(void *)(v43 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(void *, void *, uint64_t))(v33 + 40))(v39, v40, v32);
LABEL_25:
  uint64_t v44 = a3[20];
  uint64_t v45 = (void *)(a1 + v44);
  uint64_t v46 = (void *)(a2 + v44);
  uint64_t v47 = sub_1AFFC9B88();
  uint64_t v48 = *(void *)(v47 - 8);
  uint64_t v49 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v48 + 48);
  int v50 = v49(v45, 1, v47);
  int v51 = v49(v46, 1, v47);
  if (!v50)
  {
    uint64_t v52 = v13;
    if (!v51)
    {
      (*(void (**)(void *, void *, uint64_t))(v48 + 40))(v45, v46, v47);
      goto LABEL_31;
    }
    (*(void (**)(void *, uint64_t))(v48 + 8))(v45, v47);
    goto LABEL_30;
  }
  uint64_t v52 = v13;
  if (v51)
  {
LABEL_30:
    sub_1AFD3C630(0, &qword_1EB816CF8, MEMORY[0x1E4F27D68]);
    memcpy(v45, v46, *(void *)(*(void *)(v53 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(void *, void *, uint64_t))(v48 + 32))(v45, v46, v47);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
LABEL_31:
  uint64_t v54 = a3[21];
  uint64_t v55 = (void *)(a1 + v54);
  int v56 = (uint64_t *)(a2 + v54);
  uint64_t v58 = *v56;
  uint64_t v57 = v56[1];
  *uint64_t v55 = v58;
  v55[1] = v57;
  swift_bridgeObjectRelease();
  uint64_t v59 = a3[22];
  uint64_t v60 = (void *)(a1 + v59);
  uint64_t v61 = (uint64_t *)(a2 + v59);
  uint64_t v63 = *v61;
  uint64_t v62 = v61[1];
  void *v60 = v63;
  v60[1] = v62;
  swift_bridgeObjectRelease();
  uint64_t v64 = a3[23];
  char v65 = (void *)(a1 + v64);
  uint64_t v66 = (uint64_t *)(a2 + v64);
  uint64_t v68 = *v66;
  uint64_t v67 = v66[1];
  *char v65 = v68;
  v65[1] = v67;
  swift_bridgeObjectRelease();
  uint64_t v69 = a3[24];
  uint64_t v70 = (void *)(a1 + v69);
  uint64_t v71 = (uint64_t *)(a2 + v69);
  uint64_t v73 = *v71;
  uint64_t v72 = v71[1];
  *uint64_t v70 = v73;
  v70[1] = v72;
  swift_bridgeObjectRelease();
  uint64_t v74 = a3[25];
  v75 = (void *)(a1 + v74);
  uint64_t v76 = (uint64_t *)(a2 + v74);
  uint64_t v78 = *v76;
  uint64_t v77 = v76[1];
  void *v75 = v78;
  v75[1] = v77;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[26]) = *(void *)(a2 + a3[26]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[27]) = *(void *)(a2 + a3[27]);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 40))(a1 + a3[28], a2 + a3[28], v80);
  return a1;
}

uint64_t getEnumTagSinglePayload for QuoteDetail(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1AFD43578);
}

uint64_t sub_1AFD43578(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1AFD3C630(0, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928]);
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[15];
LABEL_7:
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v12(a1 + v9, a2, v7);
  }
  sub_1AFD3C630(0, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[18];
    goto LABEL_7;
  }
  sub_1AFD3C630(0, &qword_1EB816CF8, MEMORY[0x1E4F27D68]);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v7 = v11;
    uint64_t v8 = *(void *)(v11 - 8);
    uint64_t v9 = a3[20];
    goto LABEL_7;
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v14 = *(void *)(a1 + a3[26]);
    if (v14 >= 0xFFFFFFFF) {
      LODWORD(v14) = -1;
    }
    return (v14 + 1);
  }
  else
  {
    uint64_t v15 = sub_1AFFC98F8();
    int v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a3[28];
    return v16(v18, a2, v17);
  }
}

uint64_t storeEnumTagSinglePayload for QuoteDetail(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1AFD437A8);
}

void sub_1AFD437A8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_1AFD3C630(0, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928]);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[15];
LABEL_7:
    unint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    v14(a1 + v11, a2, a2, v9);
    return;
  }
  sub_1AFD3C630(0, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[18];
    goto LABEL_7;
  }
  sub_1AFD3C630(0, &qword_1EB816CF8, MEMORY[0x1E4F27D68]);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a4[20];
    goto LABEL_7;
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[26]) = (a2 - 1);
  }
  else
  {
    uint64_t v15 = sub_1AFFC98F8();
    int v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a4[28];
    v16(v18, a2, a2, v17);
  }
}

void sub_1AFD439C4()
{
  sub_1AFD3C630(319, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928]);
  if (v0 <= 0x3F)
  {
    sub_1AFD3C630(319, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
    if (v1 <= 0x3F)
    {
      sub_1AFD3C630(319, &qword_1EB816CF8, MEMORY[0x1E4F27D68]);
      if (v2 <= 0x3F)
      {
        sub_1AFFC98F8();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

ValueMetadata *type metadata accessor for FundHolding()
{
  return &type metadata for FundHolding;
}

uint64_t destroy for FundSector()
{
  return swift_bridgeObjectRelease();
}

void *_s10StocksCore11FundHoldingVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  sub_1AFFC8E38();
  return a1;
}

void *assignWithCopy for NewsHeadlineScore.CohortMembership(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

void *assignWithTake for NewsHeadlineScore.CohortMembership(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

ValueMetadata *type metadata accessor for FundSector()
{
  return &type metadata for FundSector;
}

unsigned char *sub_1AFD43CB0(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for FundSector.CodingKeys()
{
  return &type metadata for FundSector.CodingKeys;
}

uint64_t getEnumTagSinglePayload for SDSNewsResponse.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s10StocksCore10FundSectorV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFD43E28);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FundHolding.CodingKeys()
{
  return &type metadata for FundHolding.CodingKeys;
}

uint64_t getEnumTagSinglePayload for QuoteDetail.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xE8) {
    goto LABEL_17;
  }
  if (a2 + 24 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 24) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 24;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 24;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 24;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x19;
  int v8 = v6 - 25;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for QuoteDetail.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 24 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 24) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE7)
  {
    unsigned int v6 = ((a2 - 232) >> 8) + 1;
    *unint64_t result = a2 + 24;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFD43FBCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 24;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for QuoteDetail.CodingKeys()
{
  return &type metadata for QuoteDetail.CodingKeys;
}

unint64_t sub_1AFD43FF8()
{
  unint64_t result = qword_1E9AF9DE8;
  if (!qword_1E9AF9DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AF9DE8);
  }
  return result;
}

unint64_t sub_1AFD44050()
{
  unint64_t result = qword_1E9AF9DF0;
  if (!qword_1E9AF9DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AF9DF0);
  }
  return result;
}

unint64_t sub_1AFD440A8()
{
  unint64_t result = qword_1E9AF9DF8;
  if (!qword_1E9AF9DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AF9DF8);
  }
  return result;
}

unint64_t sub_1AFD44100()
{
  unint64_t result = qword_1E9AF9E00;
  if (!qword_1E9AF9E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AF9E00);
  }
  return result;
}

unint64_t sub_1AFD44158()
{
  unint64_t result = qword_1E9AF9E08;
  if (!qword_1E9AF9E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AF9E08);
  }
  return result;
}

unint64_t sub_1AFD441B0()
{
  unint64_t result = qword_1E9AF9E10;
  if (!qword_1E9AF9E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AF9E10);
  }
  return result;
}

unint64_t sub_1AFD44208()
{
  unint64_t result = qword_1E9AF9E18;
  if (!qword_1E9AF9E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AF9E18);
  }
  return result;
}

unint64_t sub_1AFD44260()
{
  unint64_t result = qword_1EB816D58;
  if (!qword_1EB816D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816D58);
  }
  return result;
}

unint64_t sub_1AFD442B8()
{
  unint64_t result = qword_1EB816D50;
  if (!qword_1EB816D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816D50);
  }
  return result;
}

uint64_t sub_1AFD4430C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x506E65704F796164 && a2 == 0xEC00000065636972;
  if (v2 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7250776F4C796164 && a2 == 0xEB00000000656369 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x5068676948796164 && a2 == 0xEC00000065636972 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x50776F4C72616579 && a2 == 0xEC00000065636972 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6867694872616579 && a2 == 0xED00006563697250 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x646E656469766964 && a2 == 0xED0000646C656959 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x656D756C6F76 && a2 == 0xE600000000000000 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x5665676172657661 && a2 == 0xED0000656D756C6FLL || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001AFFECEB0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 1635018082 && a2 == 0xE400000000000000 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001AFFECDF0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001AFFECEF0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x73676E696E726165 && a2 == 0xEF65746144646E45 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x79636E6572727563 && a2 == 0xEC00000065646F43 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x55736C6961746564 && a2 == 0xEA00000000004C52 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001AFFECE60 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0x695474656B72616DLL && a2 == 0xEE00656E6F5A656DLL || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0x65737341646E7566 && a2 == 0xEE007373616C4374 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0x65746143646E7566 && a2 == 0xEC00000079726F67 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0x75636F46646E7566 && a2 == 0xE900000000000073 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0x6863694E646E7566 && a2 == 0xE900000000000065 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0x69676552646E7566 && a2 == 0xEA00000000006E6FLL || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0x48706F54646E7566 && a2 == 0xEF73676E69646C6FLL || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 0x74636553646E7566 && a2 == 0xEB0000000073726FLL || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001AFFEF180)
  {
    swift_bridgeObjectRelease();
    return 24;
  }
  else
  {
    char v6 = sub_1AFFCBCE8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 24;
    }
    else {
      return 25;
    }
  }
}

uint64_t sub_1AFD44E58(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C6F626D7973 && a2 == 0xE600000000000000;
  if (v2 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001AFFEF1A0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1AFFCBCE8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1AFD44F40(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x726F74636573 && a2 == 0xE600000000000000;
  if (v2 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001AFFEF1A0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1AFFCBCE8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

void sub_1AFD45028(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_1AFD3C630(255, a3, a4);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v6) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_1AFD4508C(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1AFD45028(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_1AFD450E8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for YahooChartOperation()
{
  uint64_t result = qword_1EB81B1F0;
  if (!qword_1EB81B1F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1AFD45198()
{
  uint64_t result = sub_1AFFC98F8();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1AFFC9E18();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_initClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1AFD4528C()
{
  return 1;
}

uint64_t sub_1AFD45294()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFD452D8()
{
  return sub_1AFFCBE08();
}

uint64_t sub_1AFD45300()
{
  return sub_1AFFCBE38();
}

void sub_1AFD45340(uint64_t a1, uint64_t a2)
{
  int v3 = v2;
  sub_1AFD45E2C(0, (unint64_t *)&qword_1EB81A0E8, (uint64_t (*)(uint64_t))sub_1AFD306F8, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AFFD0DC0;
  *(void *)(inited + 32) = 0x72656B636974;
  *(void *)(inited + 40) = 0xE600000000000000;
  uint64_t v7 = *(void *)&v2[qword_1EB81B1C8 + 8];
  *(void *)(inited + 48) = *(void *)&v2[qword_1EB81B1C8];
  *(void *)(inited + 56) = v7;
  *(void *)(inited + 64) = 0x65676E6172;
  *(void *)(inited + 72) = 0xE500000000000000;
  char v8 = v2[qword_1EB81B1D0];
  unint64_t v9 = 0xE200000000000000;
  uint64_t v10 = 25649;
  switch(v8)
  {
    case 1:
      uint64_t v10 = 25653;
      break;
    case 2:
      uint64_t v10 = 27953;
      break;
    case 3:
      uint64_t v10 = 27955;
      break;
    case 4:
      uint64_t v10 = 27958;
      break;
    case 5:
      unint64_t v9 = 0xE300000000000000;
      uint64_t v10 = 6583417;
      break;
    case 6:
      uint64_t v10 = 31025;
      break;
    case 7:
      uint64_t v10 = 31026;
      break;
    case 8:
      uint64_t v10 = 31029;
      break;
    case 9:
      unint64_t v9 = 0xE300000000000000;
      uint64_t v10 = 7942193;
      break;
    case 10:
      unint64_t v9 = 0xE300000000000000;
      uint64_t v10 = 7889261;
      break;
    default:
      break;
  }
  uint64_t v11 = 0x73752D6E65;
  *(void *)(inited + 80) = v10;
  *(void *)(inited + 88) = v9;
  *(void *)(inited + 96) = 1701869940;
  *(void *)(inited + 104) = 0xE400000000000000;
  uint64_t v12 = 0xE500000000000000;
  *(void *)(inited + 112) = 0x65746F7571;
  *(void *)(inited + 120) = 0xE500000000000000;
  sub_1AFFC8E38();
  unint64_t v13 = sub_1AFDF9B10(inited);
  __swift_project_boxed_opaque_existential_1(&v2[qword_1EB81B1E0], *(void *)&v2[qword_1EB81B1E0 + 24]);
  id v14 = objc_msgSend(self, sel_sharedPreferences);
  uint64_t v15 = v14;
  uint64_t v29 = a1;
  if (!v14) {
    goto LABEL_18;
  }
  uint64_t v16 = 0x73752D6E65;
  id v17 = objc_msgSend(v14, sel_stocksLanguageCode);
  if (v17)
  {
    uint64_t v18 = v17;
    uint64_t v16 = sub_1AFFCAE98();
    uint64_t v12 = v19;
  }
  id v20 = objc_msgSend(v15, sel_stocksCountryCode);
  if (!v20)
  {
    uint64_t v11 = v16;
LABEL_18:

    uint64_t v24 = 0xE200000000000000;
    uint64_t v22 = 21333;
    goto LABEL_19;
  }
  int v21 = v20;
  uint64_t v22 = sub_1AFFCAE98();
  uint64_t v24 = v23;

  uint64_t v11 = v16;
LABEL_19:
  id v25 = sub_1AFFB61FC(1, 0x6677656C7070612FLL, 0xEE0074726168632FLL, v13, v11, v12, v22, v24, (uint64_t)v3 + qword_1E9AF9E28, (uint64_t)v3 + qword_1EB81B1E8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = v3;
  *(unsigned char *)(v26 + 24) = v8;
  *(void *)(v26 + 32) = v29;
  *(void *)(v26 + 40) = a2;
  id v27 = v25;
  id v28 = v3;
  sub_1AFFC8E48();
  sub_1AFFC9F18();

  objc_msgSend(v27, sel_start);
}

uint64_t sub_1AFD456EC(uint64_t a1, uint64_t a2, int a3, void (*a4)(uint64_t *), uint64_t a5)
{
  v39[1] = a5;
  uint64_t v40 = a4;
  sub_1AFD45E2C(0, (unint64_t *)&unk_1EB811110, type metadata accessor for Chart, MEMORY[0x1E4FAB068]);
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (void *)((char *)v39 - v9);
  sub_1AFD45E2C(0, &qword_1EB817AC0, type metadata accessor for Chart, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v11 - 8);
  unint64_t v13 = (char *)v39 - v12;
  uint64_t v14 = type metadata accessor for Chart(0);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  id v17 = (char *)v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void *)(a1 + 8);
  if (*(unsigned char *)(a1 + 32))
  {
    uint64_t v20 = *(void *)(a1 + 16);
    uint64_t v19 = *(void *)(a1 + 24);
    id v21 = *(id *)a1;
    id v22 = *(id *)a1;
    sub_1AFFCB468();
    sub_1AFD45E2C(0, (unint64_t *)&qword_1EB81A100, (uint64_t (*)(uint64_t))sub_1AFD3AE64, MEMORY[0x1E4FBBE00]);
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_1AFFD05F0;
    swift_getErrorValue();
    uint64_t v24 = sub_1AFFCBD98();
    uint64_t v26 = v25;
    *(void *)(v23 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v23 + 64) = sub_1AFD2CE00();
    *(void *)(v23 + 32) = v24;
    *(void *)(v23 + 40) = v26;
    sub_1AFD2C4F4();
    id v27 = (void *)sub_1AFFCB638();
    sub_1AFFCA878();
    swift_bridgeObjectRelease();

    *uint64_t v10 = (uint64_t)v21;
    swift_storeEnumTagMultiPayload();
    id v28 = v21;
    v40(v10);
    sub_1AFD3AC84(v21, v18, v20, v19, 1);
    return sub_1AFD45E90((uint64_t)v10, (unint64_t *)&unk_1EB811110, MEMORY[0x1E4FAB068]);
  }
  v39[0] = v8;
  sub_1AFFC8E38();
  unint64_t v29 = sub_1AFDF9C40(MEMORY[0x1E4FBC860]);
  unint64_t v44 = v29;
  uint64_t v30 = *(void *)(v18 + 16);
  if (v30)
  {
    sub_1AFFC8E38();
    uint64_t v31 = (void *)(v18 + 56);
    do
    {
      uint64_t v32 = *v31;
      char v33 = *((unsigned char *)v31 - 8);
      long long v41 = *(_OWORD *)(v31 - 3);
      char v42 = v33;
      uint64_t v43 = v32;
      sub_1AFF3DB6C((uint64_t)&v41, a3, (uint64_t)&v44);
      v31 += 4;
      --v30;
    }
    while (v30);
    swift_bridgeObjectRelease();
    uint64_t v34 = v44;
  }
  else
  {
    uint64_t v34 = v29;
  }
  sub_1AFE2A034(v34, (uint64_t)v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14);
  int v36 = v40;
  if (v35 == 1)
  {
    sub_1AFD45E90((uint64_t)v13, &qword_1EB817AC0, MEMORY[0x1E4FBB718]);
    sub_1AFFCB468();
    sub_1AFD2C4F4();
    uint64_t v37 = (void *)sub_1AFFCB638();
    sub_1AFFCA878();

    sub_1AFD45F04();
    *uint64_t v10 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    v36(v10);
    return sub_1AFD45E90((uint64_t)v10, (unint64_t *)&unk_1EB811110, MEMORY[0x1E4FAB068]);
  }
  sub_1AFD45F58((uint64_t)v13, (uint64_t)v17);
  sub_1AFD30D44((uint64_t)v17, (uint64_t)v10);
  swift_storeEnumTagMultiPayload();
  v36(v10);
  sub_1AFD45E90((uint64_t)v10, (unint64_t *)&unk_1EB811110, MEMORY[0x1E4FAB068]);
  return sub_1AFD45FBC((uint64_t)v17);
}

void sub_1AFD45BD4()
{
}

uint64_t sub_1AFD45C04()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + qword_1E9AF9E28;
  uint64_t v2 = sub_1AFFC98F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_1(v0 + qword_1EB81B1D8);
  __swift_destroy_boxed_opaque_existential_1(v0 + qword_1EB81B1E0);
  uint64_t v3 = v0 + qword_1EB81B1E8;
  uint64_t v4 = sub_1AFFC9E18();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);

  return v5(v3, v4);
}

uint64_t sub_1AFD45CE8(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = a1 + qword_1E9AF9E28;
  uint64_t v3 = sub_1AFFC98F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  __swift_destroy_boxed_opaque_existential_1(a1 + qword_1EB81B1D8);
  __swift_destroy_boxed_opaque_existential_1(a1 + qword_1EB81B1E0);
  uint64_t v4 = a1 + qword_1EB81B1E8;
  uint64_t v5 = sub_1AFFC9E18();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t sub_1AFD45DD4()
{
  return type metadata accessor for YahooChartOperation();
}

uint64_t sub_1AFD45DDC()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1AFD45E1C(uint64_t a1)
{
  return sub_1AFD456EC(a1, *(void *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), *(void (**)(uint64_t *))(v1 + 32), *(void *)(v1 + 40));
}

void sub_1AFD45E2C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1AFD45E90(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  sub_1AFD45E2C(0, a2, type metadata accessor for Chart, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

unint64_t sub_1AFD45F04()
{
  unint64_t result = qword_1E9AF9E30;
  if (!qword_1E9AF9E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AF9E30);
  }
  return result;
}

uint64_t sub_1AFD45F58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Chart(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AFD45FBC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Chart(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t getEnumTagSinglePayload for YahooChartOperation.OperationError(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for YahooChartOperation.OperationError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1AFD46104);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for YahooChartOperation.OperationError()
{
  return &type metadata for YahooChartOperation.OperationError;
}

unint64_t sub_1AFD46140()
{
  unint64_t result = qword_1E9AF9E38;
  if (!qword_1E9AF9E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AF9E38);
  }
  return result;
}

uint64_t type metadata accessor for SDSQuoteDetailOperation()
{
  uint64_t result = qword_1EB817800;
  if (!qword_1EB817800) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1AFD461E0()
{
  uint64_t result = sub_1AFFC98F8();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1AFFC9E18();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_initClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

void sub_1AFD462CC(uint64_t a1, uint64_t a2)
{
  int v3 = v2;
  uint64_t v13 = *(void *)&v2[qword_1EB8177F8];
  swift_bridgeObjectRetain_n();
  sub_1AFFB6B00(&v13);
  swift_bridgeObjectRelease();
  sub_1AFD48B18(0, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  sub_1AFD47F54((unint64_t *)&qword_1EB818038);
  uint64_t v6 = sub_1AFFCB3B8();
  swift_release();
  id v7 = v3;
  sub_1AFD47D38(v6);
  swift_bridgeObjectRelease();

  unint64_t v8 = (void *)sub_1AFFCA5E8();
  sub_1AFD47E94();
  sub_1AFFCA548();
  swift_bridgeObjectRelease();

  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  *(void *)(v9 + 24) = a2;
  sub_1AFFC8E48();
  uint64_t v10 = (void *)sub_1AFFCA5E8();
  sub_1AFFCA678();
  swift_release();
  swift_release();

  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = a2;
  sub_1AFFC8E48();
  uint64_t v12 = (void *)sub_1AFFCA5E8();
  sub_1AFFCA6B8();
  swift_release();
  swift_release();
  swift_release();
}

uint64_t sub_1AFD464F4(uint64_t a1, void (*a2)(uint64_t, void))
{
  uint64_t v3 = MEMORY[0x1E4FBC868];
  uint64_t v7 = MEMORY[0x1E4FBC868];
  uint64_t v4 = *(void *)(*(void *)a1 + 16);
  if (v4)
  {
    sub_1AFFC8E38();
    type metadata accessor for QuoteDetail();
    uint64_t v5 = 0;
    do
    {
      ++v5;
      sub_1AFFC8E38();
      sub_1AFFCA4D8();
      swift_bridgeObjectRelease();
    }
    while (v4 != v5);
    swift_bridgeObjectRelease();
    uint64_t v3 = v7;
  }
  a2(v3, 0);
  return swift_bridgeObjectRelease();
}

void sub_1AFD465F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5, uint64_t a6)
{
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a2;
  __swift_project_boxed_opaque_existential_1(&a5[qword_1EB8177E0], *(void *)&a5[qword_1EB8177E0 + 24]);
  sub_1AFD48A2C(0, (unint64_t *)&qword_1EB81A0E8, (uint64_t (*)(uint64_t))sub_1AFD306F8, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AFFD0610;
  *(void *)(inited + 32) = 0x74655361746164;
  *(void *)(inited + 40) = 0xE700000000000000;
  *(void *)(inited + 48) = 0x65746F7571;
  *(void *)(inited + 56) = 0xE500000000000000;
  *(void *)(inited + 64) = 0x6C6F626D7973;
  *(void *)(inited + 72) = 0xE600000000000000;
  sub_1AFD48B18(0, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  sub_1AFD47F54((unint64_t *)&qword_1EB819DD0);
  sub_1AFFC8E48();
  *(void *)(inited + 80) = sub_1AFFCAD88();
  *(void *)(inited + 88) = v14;
  sub_1AFDF9B10(inited);
  uint64_t v15 = sub_1AFEC5E2C(2);
  swift_bridgeObjectRelease();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a6;
  id v17 = (void *)((char *)v15 + *(void *)(qword_1EB831B00 + (*MEMORY[0x1E4FBC8C8] & *v15) + 16));
  uint64_t v18 = *v17;
  *id v17 = (uint64_t)sub_1AFD47FF4;
  v17[1] = v16;
  sub_1AFFC8E38();
  sub_1AFD309C0(v18);
  uint64_t v19 = (void *)swift_allocObject();
  v19[2] = a3;
  void v19[3] = a4;
  v19[4] = a5;
  v19[5] = sub_1AFD47F4C;
  v19[6] = v12;
  uint64_t v20 = v15;
  sub_1AFFC8E48();
  id v21 = a5;
  sub_1AFFC9F18();

  objc_msgSend(v20, sel_start);
}

uint64_t sub_1AFD468D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v29 = a3;
  sub_1AFD30A1C();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FAB068];
  sub_1AFD48A2C(0, (unint64_t *)&qword_1EB818570, (uint64_t (*)(uint64_t))sub_1AFD30A1C, MEMORY[0x1E4FAB068]);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (id *)((char *)&v28 - v12);
  sub_1AFD48BDC(a2, (uint64_t)&v28 - v12, (unint64_t *)&qword_1EB818570, (uint64_t (*)(uint64_t))sub_1AFD30A1C, v10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {

    sub_1AFD31570();
    uint64_t v15 = (void *)(a4 + *(int *)(v14 + 48));
    uint64_t v16 = sub_1AFFCA368();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(a4, a1, v16);
    *uint64_t v15 = *(void *)(v29 + 16);
    v15[1] = 0;
    uint64_t v17 = MEMORY[0x1E4FBC860];
    v15[2] = MEMORY[0x1E4FBC860];
    v15[3] = v17;
    type metadata accessor for NetworkEvent();
    v15[4] = 0;
    v15[5] = 0;
  }
  else
  {
    sub_1AFD480A0((uint64_t)v13, (uint64_t)v9);
    uint64_t v18 = sub_1AFFCA368();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(a4, a1, v18);
    uint64_t v19 = *(void *)(v29 + 16);
    sub_1AFD48B18(0, &qword_1EB818560, (uint64_t)&type metadata for SDSQuoteResponse, MEMORY[0x1E4FAAE30]);
    sub_1AFFCA3A8();
    uint64_t v20 = v30;
    sub_1AFD30C94(v31, v32);
    uint64_t v21 = *(void *)(v20 + 16);
    swift_bridgeObjectRelease();
    sub_1AFFCA3A8();
    swift_bridgeObjectRelease();
    uint64_t v22 = v32;
    if (v32)
    {
      uint64_t v23 = v31;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v23 = 0;
    }
    sub_1AFD31570();
    uint64_t v25 = (void *)(a4 + *(int *)(v24 + 48));
    sub_1AFD489D0((uint64_t)v9);
    *uint64_t v25 = v19;
    v25[1] = v21;
    uint64_t v26 = MEMORY[0x1E4FBC860];
    v25[2] = MEMORY[0x1E4FBC860];
    v25[3] = v26;
    v25[4] = v23;
    v25[5] = v22;
    type metadata accessor for NetworkEvent();
  }
  return swift_storeEnumTagMultiPayload();
}

void sub_1AFD46BCC(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v29 = a6;
  uint64_t v30 = a5;
  uint64_t v31 = a4;
  sub_1AFD30A1C();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FAB068];
  sub_1AFD48A2C(0, (unint64_t *)&qword_1EB818570, (uint64_t (*)(uint64_t))sub_1AFD30A1C, MEMORY[0x1E4FAB068]);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (void *)((char *)v24 - v14);
  sub_1AFD48BDC(a1, (uint64_t)v24 - v14, (unint64_t *)&qword_1EB818570, (uint64_t (*)(uint64_t))sub_1AFD30A1C, v12);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = (void *)*v15;
    a2(*v15);
  }
  else
  {
    id v27 = a2;
    uint64_t v28 = a3;
    sub_1AFD480A0((uint64_t)v15, (uint64_t)v11);
    sub_1AFD48B18(0, &qword_1EB818560, (uint64_t)&type metadata for SDSQuoteResponse, MEMORY[0x1E4FAAE30]);
    sub_1AFFCA3A8();
    uint64_t v17 = v33[0];
    uint64_t v18 = v33[1];
    uint64_t v19 = v33[2];
    uint64_t v20 = v33[5];
    v34[0] = MEMORY[0x1E4FBC868];
    uint64_t v21 = *(void *)(v33[0] + 16);
    if (v21)
    {
      uint64_t v25 = v33[2];
      uint64_t v26 = v33[3];
      swift_bridgeObjectRetain_n();
      memcpy(v33, (const void *)(v17 + 32), sizeof(v33));
      memcpy(v32, v33, sizeof(v32));
      sub_1AFD48104((uint64_t)v33);
      sub_1AFD46F24((uint64_t)v34, (uint64_t)v32);
      v24[1] = v20;
      for (uint64_t i = 808; ; i += 776)
      {
        sub_1AFD4859C((uint64_t)v33);
        if (!--v21) {
          break;
        }
        memcpy(v33, (const void *)(v17 + i), sizeof(v33));
        memcpy(v32, v33, sizeof(v32));
        sub_1AFD48104((uint64_t)v33);
        sub_1AFD46F24((uint64_t)v34, (uint64_t)v32);
      }
      swift_bridgeObjectRelease_n();
      sub_1AFD30C94(v18, v25);
      uint64_t v23 = v34[0];
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1AFD30C94(v18, v19);
      uint64_t v23 = MEMORY[0x1E4FBC868];
    }
    v30(v23);
    swift_bridgeObjectRelease();
    sub_1AFD489D0((uint64_t)v11);
  }
}

uint64_t sub_1AFD46F24(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1AFFC98F8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  v91 = &v53[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1AFD48A2C(0, &qword_1EB816CF8, MEMORY[0x1E4F27D68], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  v136 = &v53[-v10];
  sub_1AFD48A2C(0, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928], v8);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  v95 = &v53[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v12);
  uint64_t v94 = &v53[-v14];
  sub_1AFD48A2C(0, &qword_1EB816D80, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail, v8);
  MEMORY[0x1F4188790](v15 - 8);
  v90 = &v53[-v16];
  sub_1AFD48A2C(0, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0], v8);
  uint64_t v18 = MEMORY[0x1F4188790](v17 - 8);
  v93 = &v53[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  uint64_t v92 = &v53[-v21];
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  uint64_t v24 = &v53[-v23];
  MEMORY[0x1F4188790](v22);
  uint64_t v26 = &v53[-v25];
  sub_1AFD48A90(a2 + 104, (uint64_t)v96);
  uint64_t v88 = *(void *)(a2 + 720);
  uint64_t v27 = *(void *)(a2 + 728);
  sub_1AFD48A90((uint64_t)v96, (uint64_t)v97);
  if (sub_1AFD48B64((uint64_t)v97) == 1)
  {
    sub_1AFD48B88();
    swift_allocError();
    *uint64_t v28 = 0;
    v28[1] = 0;
    return swift_willThrow();
  }
  uint64_t v87 = v27;
  sub_1AFD4775C(v110, v111, (uint64_t)v26);
  sub_1AFD4775C(v116, v117, (uint64_t)v24);
  uint64_t v79 = (char *)&v119;
  if (v121)
  {
    uint64_t v30 = 0;
  }
  else
  {
    uint64_t v30 = v120;
    if (v120 < 0) {
      goto LABEL_15;
    }
  }
  int v81 = v99;
  uint64_t v85 = a1;
  char v89 = v24;
  int v83 = v121;
  uint64_t v82 = v30;
  if ((v99 & 1) == 0)
  {
    uint64_t v80 = v98;
    if ((v98 & 0x8000000000000000) == 0) {
      goto LABEL_9;
    }
LABEL_15:
    uint64_t result = sub_1AFFCB998();
    __break(1u);
    return result;
  }
  uint64_t v80 = 0;
LABEL_9:
  uint64_t v86 = v2;
  uint64_t v31 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v31(v94, 1, 1, v5);
  v31(v95, 1, 1, v5);
  uint64_t v32 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F276F0];
  char v33 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1AFD48BDC((uint64_t)v26, (uint64_t)v92, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  sub_1AFD48BDC((uint64_t)v89, (uint64_t)v93, (unint64_t *)&qword_1EB81A490, v32, v33);
  uint64_t v34 = sub_1AFFC9B88();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v136, 1, 1, v34);
  uint64_t v35 = v134;
  uint64_t v36 = v135;
  if (v134) {
    sub_1AFFC8E38();
  }
  uint64_t v78 = v102;
  uint64_t v37 = v103;
  uint64_t v76 = v124;
  uint64_t v38 = v125;
  uint64_t v74 = v126;
  uint64_t v39 = v127;
  uint64_t v72 = v128;
  uint64_t v40 = v129;
  uint64_t v70 = v130;
  uint64_t v41 = v131;
  uint64_t v67 = v133;
  uint64_t v68 = v132;
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  uint64_t v77 = v37;
  sub_1AFFC8E38();
  uint64_t v75 = v38;
  sub_1AFFC8E38();
  uint64_t v73 = v39;
  sub_1AFFC8E38();
  uint64_t v71 = v40;
  sub_1AFFC8E38();
  uint64_t v69 = v41;
  sub_1AFFC8E38();
  uint64_t v58 = sub_1AFD48C4C(v35, (void (*)(BOOL, unint64_t, uint64_t))sub_1AFD9DA30);
  swift_bridgeObjectRelease();
  uint64_t v84 = v26;
  if (v35) {
    sub_1AFFC8E38();
  }
  else {
    uint64_t v36 = 0;
  }
  uint64_t v66 = v108;
  int v65 = v109;
  uint64_t v64 = v106;
  int v63 = v107;
  uint64_t v62 = v104;
  int v61 = v105;
  uint64_t v60 = v123;
  int v59 = v79[48];
  int v57 = v79[32];
  int v54 = v113;
  uint64_t v55 = v112;
  uint64_t v56 = v122;
  uint64_t v42 = v118;
  char v43 = *v79;
  uint64_t v44 = v100;
  char v45 = v101;
  uint64_t v46 = v114;
  char v47 = v115;
  uint64_t v48 = sub_1AFD48C4C(v36, (void (*)(BOOL, unint64_t, uint64_t))sub_1AFD9DA60);
  swift_bridgeObjectRelease();
  uint64_t v49 = (uint64_t)v91;
  sub_1AFFC98E8();
  char v52 = v43;
  int v50 = v90;
  QuoteDetail.init(dayOpenPrice:dayLowPrice:dayHighPrice:yearLowPrice:yearHighPrice:dividendYield:volume:averageVolume:priceEarningsRatio:beta:earningsPerShare:earningsStartDate:earningsEndDate:currencyCode:detailsURL:keyStatisticsURL:marketTimeZone:fundAssetClass:fundCategory:fundFocus:fundNiche:fundRegion:fundTopHoldings:fundSectors:dateLastRefreshed:)(v66, v65, v64, v63, v62, v61, v60, v59, (uint64_t)v90, v56, v57, v55, v54, v82, v83, v80, v81, v42, v52,
    v44,
    v45,
    v46,
    v47,
    (uint64_t)v94,
    (uint64_t)v95,
    v78,
    v77,
    (uint64_t)v92,
    (uint64_t)v93,
    (uint64_t)v136,
    v76,
    v75,
    v74,
    v73,
    v72,
    v71,
    v70,
    v69,
    v68,
    v67,
    v58,
    v48,
    v49);
  uint64_t v51 = type metadata accessor for QuoteDetail();
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v50, 0, 1, v51);
  sub_1AFE5A478((uint64_t)v50, v88, v87);
  sub_1AFD48D50((uint64_t)v89);
  return sub_1AFD48D50((uint64_t)v84);
}

uint64_t sub_1AFD4775C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1AFD48A2C(0, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v21 - v7;
  uint64_t v9 = sub_1AFFC92A8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v21[0] = a1;
    v21[1] = a2;
    sub_1AFFC9248();
    sub_1AFD3AE10();
    sub_1AFFCB6C8();
    uint64_t v14 = v13;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    if (v14)
    {
      sub_1AFFC96C8();
      swift_bridgeObjectRelease();
      uint64_t v15 = sub_1AFFC96E8();
      uint64_t v16 = *(void *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v8, 1, v15) == 1)
      {
        sub_1AFD48D50((uint64_t)v8);
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(a3, 1, 1, v15);
      }
      else
      {
        (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(a3, v8, v15);
        return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v16 + 56))(a3, 0, 1, v15);
      }
    }
    else
    {
      uint64_t v20 = sub_1AFFC96E8();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(a3, 1, 1, v20);
    }
  }
  else
  {
    uint64_t v18 = sub_1AFFC96E8();
    uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    return v19(a3, 1, 1, v18);
  }
}

void sub_1AFD47A58()
{
}

uint64_t sub_1AFD47A88()
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + qword_1EB8177E0);
  uint64_t v1 = v0 + qword_1EB8177F0;
  uint64_t v2 = sub_1AFFC98F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + qword_1EB8177E8;
  uint64_t v4 = sub_1AFFC9E18();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);

  return v5(v3, v4);
}

uint64_t sub_1AFD47B58(uint64_t a1)
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + qword_1EB8177E0);
  uint64_t v2 = a1 + qword_1EB8177F0;
  uint64_t v3 = sub_1AFFC98F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  uint64_t v4 = a1 + qword_1EB8177E8;
  uint64_t v5 = sub_1AFFC9E18();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t sub_1AFD47C2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  sub_1AFFC8E48();
  sub_1AFD462CC((uint64_t)sub_1AFD3AB90, v4);

  return swift_release();
}

uint64_t sub_1AFD47CAC()
{
  return type metadata accessor for SDSQuoteDetailOperation();
}

uint64_t sub_1AFD47CB4()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1AFD47CEC(void *a1, void *a2)
{
  uint64_t v3 = a1[1];
  uint64_t v4 = a2[1];
  if (!v3) {
    return v4 == 0;
  }
  if (!v4) {
    return 0;
  }
  if (*a1 == *a2 && v3 == v4) {
    return 1;
  }
  else {
    return sub_1AFFCBCE8();
  }
}

uint64_t sub_1AFD47D38(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v6 = MEMORY[0x1E4FBC860];
    sub_1AFFCB8B8();
    uint64_t v4 = a1 + 32;
    sub_1AFD48A2C(0, (unint64_t *)&qword_1EB817D78, (uint64_t (*)(uint64_t))sub_1AFD47E94, MEMORY[0x1E4FAB088]);
    do
    {
      v4 += 8;
      MEMORY[0x1F4188790](v5);
      swift_allocObject();
      sub_1AFFC8E38();
      sub_1AFFCA758();
      swift_bridgeObjectRelease();
      sub_1AFFCB888();
      sub_1AFFCB8C8();
      sub_1AFFCB8D8();
      uint64_t v5 = sub_1AFFCB898();
      --v2;
    }
    while (v2);
    return v6;
  }
  return result;
}

void sub_1AFD47E94()
{
  if (!qword_1EB817E50)
  {
    type metadata accessor for QuoteDetail();
    unint64_t v0 = sub_1AFFCAD18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB817E50);
    }
  }
}

uint64_t sub_1AFD47EFC(uint64_t a1)
{
  return sub_1AFD464F4(a1, *(void (**)(uint64_t, void))(v1 + 16));
}

uint64_t sub_1AFD47F18(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 16))(a1, 1);
}

void sub_1AFD47F44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1AFD465F0(a1, a2, a3, a4, *(char **)(v4 + 16), *(void *)(v4 + 24));
}

uint64_t sub_1AFD47F4C(uint64_t a1)
{
  return sub_1AFD80C14(a1, *(uint64_t (**)(uint64_t *))(v1 + 16));
}

uint64_t sub_1AFD47F54(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1AFD48B18(255, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AFD47FBC()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1AFD47FF4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 16);
  v5[2] = a1;
  v5[3] = v3;
  return sub_1AFF9DE90((void (*)(uint64_t))sub_1AFD48DDC, (uint64_t)v5, a2);
}

uint64_t sub_1AFD48048()
{
  swift_release();

  swift_release();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

void sub_1AFD48090(uint64_t a1)
{
  sub_1AFD46BCC(a1, *(void (**)(void))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void (**)(uint64_t))(v1 + 40), *(void *)(v1 + 48));
}

uint64_t sub_1AFD480A0(uint64_t a1, uint64_t a2)
{
  sub_1AFD30A1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AFD48104(uint64_t a1)
{
  uint64_t v37 = *(void *)(a1 + 112);
  uint64_t v38 = *(void *)(a1 + 104);
  uint64_t v35 = *(void *)(a1 + 128);
  uint64_t v36 = *(void *)(a1 + 120);
  uint64_t v33 = *(void *)(a1 + 144);
  uint64_t v34 = *(void *)(a1 + 136);
  uint64_t v2 = *(void *)(a1 + 160);
  uint64_t v32 = *(void *)(a1 + 152);
  long long v30 = *(_OWORD *)(a1 + 184);
  long long v31 = *(_OWORD *)(a1 + 168);
  long long v28 = *(_OWORD *)(a1 + 216);
  long long v29 = *(_OWORD *)(a1 + 200);
  long long v26 = *(_OWORD *)(a1 + 248);
  long long v27 = *(_OWORD *)(a1 + 232);
  long long v25 = *(_OWORD *)(a1 + 264);
  long long v23 = *(_OWORD *)(a1 + 296);
  long long v24 = *(_OWORD *)(a1 + 280);
  long long v21 = *(_OWORD *)(a1 + 328);
  long long v22 = *(_OWORD *)(a1 + 312);
  long long v19 = *(_OWORD *)(a1 + 360);
  long long v20 = *(_OWORD *)(a1 + 344);
  long long v17 = *(_OWORD *)(a1 + 392);
  long long v18 = *(_OWORD *)(a1 + 376);
  long long v15 = *(_OWORD *)(a1 + 424);
  long long v16 = *(_OWORD *)(a1 + 408);
  long long v13 = *(_OWORD *)(a1 + 456);
  long long v14 = *(_OWORD *)(a1 + 440);
  long long v11 = *(_OWORD *)(a1 + 488);
  long long v12 = *(_OWORD *)(a1 + 472);
  long long v9 = *(_OWORD *)(a1 + 520);
  long long v10 = *(_OWORD *)(a1 + 504);
  long long v7 = *(_OWORD *)(a1 + 552);
  long long v8 = *(_OWORD *)(a1 + 536);
  long long v5 = *(_OWORD *)(a1 + 584);
  long long v6 = *(_OWORD *)(a1 + 568);
  long long v4 = *(_OWORD *)(a1 + 600);
  sub_1AFD483A8(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32));
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFD4840C(v38, v37, v36, v35, v34, v33, v32, v2, v31, *((uint64_t *)&v31 + 1), v30, *((uint64_t *)&v30 + 1), v29, *((uint64_t *)&v29 + 1), v28, *((uint64_t *)&v28 + 1), v27, *((uint64_t *)&v27 + 1), v26,
    *((uint64_t *)&v26 + 1),
    v25,
    *((uint64_t *)&v25 + 1),
    v24,
    *((uint64_t *)&v24 + 1),
    v23,
    *((uint64_t *)&v23 + 1),
    v22,
    *((uint64_t *)&v22 + 1),
    v21,
    *((uint64_t *)&v21 + 1),
    v20,
    *((uint64_t *)&v20 + 1),
    v19,
    *((uint64_t *)&v19 + 1),
    v18,
    *((uint64_t *)&v18 + 1),
    v17,
    *((uint64_t *)&v17 + 1),
    v16,
    *((uint64_t *)&v16 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v11,
    *((uint64_t *)&v11 + 1),
    v10,
    *((uint64_t *)&v10 + 1),
    v9,
    *((uint64_t *)&v9 + 1),
    v8,
    *((uint64_t *)&v8 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v4);
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  return a1;
}

void sub_1AFD483A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a3)
  {
    sub_1AFFC8E38();
    sub_1AFD30EB8(a4, a5);
  }
}

uint64_t sub_1AFD4840C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  if (a14 != 1)
  {
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFD4855C(a68);
    sub_1AFFC8E38();
    return sub_1AFFC8E38();
  }
  return result;
}

uint64_t sub_1AFD4855C(uint64_t result)
{
  if (result)
  {
    sub_1AFFC8E38();
    return sub_1AFFC8E38();
  }
  return result;
}

uint64_t sub_1AFD4859C(uint64_t a1)
{
  uint64_t v37 = *(void *)(a1 + 112);
  uint64_t v38 = *(void *)(a1 + 104);
  uint64_t v35 = *(void *)(a1 + 128);
  uint64_t v36 = *(void *)(a1 + 120);
  uint64_t v33 = *(void *)(a1 + 144);
  uint64_t v34 = *(void *)(a1 + 136);
  uint64_t v2 = *(void *)(a1 + 160);
  uint64_t v32 = *(void *)(a1 + 152);
  long long v30 = *(_OWORD *)(a1 + 184);
  long long v31 = *(_OWORD *)(a1 + 168);
  long long v28 = *(_OWORD *)(a1 + 216);
  long long v29 = *(_OWORD *)(a1 + 200);
  long long v26 = *(_OWORD *)(a1 + 248);
  long long v27 = *(_OWORD *)(a1 + 232);
  long long v25 = *(_OWORD *)(a1 + 264);
  long long v23 = *(_OWORD *)(a1 + 296);
  long long v24 = *(_OWORD *)(a1 + 280);
  long long v21 = *(_OWORD *)(a1 + 328);
  long long v22 = *(_OWORD *)(a1 + 312);
  long long v19 = *(_OWORD *)(a1 + 360);
  long long v20 = *(_OWORD *)(a1 + 344);
  long long v17 = *(_OWORD *)(a1 + 392);
  long long v18 = *(_OWORD *)(a1 + 376);
  long long v15 = *(_OWORD *)(a1 + 424);
  long long v16 = *(_OWORD *)(a1 + 408);
  long long v13 = *(_OWORD *)(a1 + 456);
  long long v14 = *(_OWORD *)(a1 + 440);
  long long v11 = *(_OWORD *)(a1 + 488);
  long long v12 = *(_OWORD *)(a1 + 472);
  long long v9 = *(_OWORD *)(a1 + 520);
  long long v10 = *(_OWORD *)(a1 + 504);
  long long v7 = *(_OWORD *)(a1 + 552);
  long long v8 = *(_OWORD *)(a1 + 536);
  long long v5 = *(_OWORD *)(a1 + 584);
  long long v6 = *(_OWORD *)(a1 + 568);
  long long v4 = *(_OWORD *)(a1 + 600);
  sub_1AFD30ECC(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1AFD48840(v38, v37, v36, v35, v34, v33, v32, v2, v31, *((uint64_t *)&v31 + 1), v30, *((uint64_t *)&v30 + 1), v29, *((uint64_t *)&v29 + 1), v28, *((uint64_t *)&v28 + 1), v27, *((uint64_t *)&v27 + 1), v26,
    *((uint64_t *)&v26 + 1),
    v25,
    *((uint64_t *)&v25 + 1),
    v24,
    *((uint64_t *)&v24 + 1),
    v23,
    *((uint64_t *)&v23 + 1),
    v22,
    *((uint64_t *)&v22 + 1),
    v21,
    *((uint64_t *)&v21 + 1),
    v20,
    *((uint64_t *)&v20 + 1),
    v19,
    *((uint64_t *)&v19 + 1),
    v18,
    *((uint64_t *)&v18 + 1),
    v17,
    *((uint64_t *)&v17 + 1),
    v16,
    *((uint64_t *)&v16 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v11,
    *((uint64_t *)&v11 + 1),
    v10,
    *((uint64_t *)&v10 + 1),
    v9,
    *((uint64_t *)&v9 + 1),
    v8,
    *((uint64_t *)&v8 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AFD48840(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t result = a14;
  if (a14 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1AFD48990(a68);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1AFD48990(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1AFD489D0(uint64_t a1)
{
  sub_1AFD30A1C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1AFD48A2C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1AFD48A90(uint64_t a1, uint64_t a2)
{
  sub_1AFD48B18(0, &qword_1EB816930, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1AFD48B18(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1AFD48B64(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 104);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  int v2 = v1 - 1;
  if (v2 < 0) {
    int v2 = -1;
  }
  return (v2 + 1);
}

unint64_t sub_1AFD48B88()
{
  unint64_t result = qword_1E9AF9E40;
  if (!qword_1E9AF9E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AF9E40);
  }
  return result;
}

uint64_t sub_1AFD48BDC(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t))
{
  sub_1AFD48A2C(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

uint64_t sub_1AFD48C4C(uint64_t a1, void (*a2)(BOOL, unint64_t, uint64_t))
{
  if (!a1) {
    return MEMORY[0x1E4FBC860];
  }
  unint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = MEMORY[0x1E4FBC860];
  if (v3)
  {
    uint64_t v14 = MEMORY[0x1E4FBC860];
    a2(0, v3, 0);
    uint64_t v4 = v14;
    uint64_t v6 = (uint64_t *)(a1 + 48);
    do
    {
      uint64_t v8 = *(v6 - 2);
      uint64_t v7 = *(v6 - 1);
      uint64_t v9 = *v6;
      unint64_t v10 = *(void *)(v14 + 16);
      unint64_t v11 = *(void *)(v14 + 24);
      sub_1AFFC8E38();
      if (v10 >= v11 >> 1) {
        a2(v11 > 1, v10 + 1, 1);
      }
      *(void *)(v14 + 16) = v10 + 1;
      long long v12 = (void *)(v14 + 24 * v10);
      v12[4] = v8;
      v12[5] = v7;
      v12[6] = v9;
      v6 += 3;
      --v3;
    }
    while (v3);
  }
  return v4;
}

uint64_t sub_1AFD48D50(uint64_t a1)
{
  sub_1AFD48A2C(0, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1AFD48DDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1AFD468D8(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

void *initializeBufferWithCopyOfBuffer for SDSQuoteDetailOperationError(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  sub_1AFFC8E38();
  return a1;
}

void *assignWithCopy for SDSQuoteDetailOperationError(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for SDSQuoteDetailOperationError(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SDSQuoteDetailOperationError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for SDSQuoteDetailOperationError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

uint64_t sub_1AFD48F48(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_1AFD48F60(void *result, int a2)
{
  if (a2 < 0)
  {
    *unint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for SDSQuoteDetailOperationError()
{
  return &type metadata for SDSQuoteDetailOperationError;
}

uint64_t sub_1AFD48FA0()
{
  return sub_1AFFC8E38();
}

uint64_t sub_1AFD48FA8(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v1 = a1;
  return result;
}

uint64_t (*sub_1AFD48FD4())()
{
  return nullsub_1;
}

uint64_t sub_1AFD48FF4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CurrencyResponse() + 20);
  uint64_t v4 = sub_1AFFC98F8();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for CurrencyResponse()
{
  uint64_t result = qword_1EB8115A8;
  if (!qword_1EB8115A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1AFD490B8(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CurrencyResponse() + 20);
  uint64_t v4 = sub_1AFFC98F8();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*sub_1AFD49130())()
{
  return nullsub_1;
}

uint64_t sub_1AFD49178@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CurrencyResponse() + 24);
  uint64_t v4 = sub_1AFFC98F8();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_1AFD491F0(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CurrencyResponse() + 24);
  uint64_t v4 = sub_1AFFC98F8();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*sub_1AFD49268())()
{
  return nullsub_1;
}

uint64_t sub_1AFD492B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for CurrencyResponse();
  return sub_1AFD4A064(v1 + *(int *)(v3 + 28), a1, type metadata accessor for RawAttributionSource);
}

uint64_t sub_1AFD492FC(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CurrencyResponse() + 28);

  return sub_1AFD49340(a1, v3);
}

uint64_t sub_1AFD49340(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RawAttributionSource(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*sub_1AFD493A4())()
{
  return nullsub_1;
}

uint64_t sub_1AFD493EC()
{
  uint64_t result = 0x69737265766E6F63;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x4164657461657263;
      break;
    case 2:
      uint64_t result = 0x7441656C617473;
      break;
    case 3:
      uint64_t result = 0x656372756F73;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1AFD49484@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1AFD4EADC(a1, a2);
  *a3 = result;
  return result;
}

void sub_1AFD494AC(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1AFD494B8(uint64_t a1)
{
  unint64_t v2 = sub_1AFD49824();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFD494F4(uint64_t a1)
{
  unint64_t v2 = sub_1AFD49824();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFD49530(void *a1)
{
  uint64_t v3 = v1;
  sub_1AFD4A824(0, &qword_1EB8117A0, (uint64_t (*)(void))sub_1AFD49824, (uint64_t)&type metadata for CurrencyResponse.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFD49824();
  sub_1AFFCBE78();
  uint64_t v12 = *v3;
  v11[15] = 0;
  sub_1AFD49878();
  sub_1AFD49EF8(&qword_1EB811758, (void (*)(void))sub_1AFD498D0);
  sub_1AFFCBC58();
  if (!v2)
  {
    type metadata accessor for CurrencyResponse();
    v11[14] = 1;
    sub_1AFFC98F8();
    sub_1AFD49FB8((unint64_t *)&unk_1EB818B90, MEMORY[0x1E4F27928]);
    sub_1AFFCBC58();
    v11[13] = 2;
    sub_1AFFCBC58();
    v11[12] = 3;
    type metadata accessor for RawAttributionSource(0);
    sub_1AFD49FB8((unint64_t *)&unk_1EB811640, (void (*)(uint64_t))type metadata accessor for RawAttributionSource);
    sub_1AFFCBC58();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1AFD49824()
{
  unint64_t result = qword_1EB811580;
  if (!qword_1EB811580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB811580);
  }
  return result;
}

void sub_1AFD49878()
{
  if (!qword_1EB811750)
  {
    unint64_t v0 = sub_1AFFCB288();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB811750);
    }
  }
}

unint64_t sub_1AFD498D0()
{
  unint64_t result = qword_1EB8115E0;
  if (!qword_1EB8115E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8115E0);
  }
  return result;
}

uint64_t sub_1AFD49924@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v29 = type metadata accessor for RawAttributionSource(0);
  MEMORY[0x1F4188790](v29);
  long long v30 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1AFFC98F8();
  uint64_t v33 = *(void *)(v4 - 8);
  uint64_t v34 = v4;
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  long long v31 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v26 - v7;
  sub_1AFD4A824(0, &qword_1E9AF9E48, (uint64_t (*)(void))sub_1AFD49824, (uint64_t)&type metadata for CurrencyResponse.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v35 = v9;
  uint64_t v32 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  unint64_t v11 = (char *)v26 - v10;
  uint64_t v12 = type metadata accessor for CurrencyResponse();
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFD49824();
  uint64_t v36 = v11;
  uint64_t v15 = (uint64_t)v37;
  sub_1AFFCBE68();
  if (v15) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  long long v16 = v8;
  uint64_t v37 = a1;
  uint64_t v18 = v33;
  uint64_t v17 = v34;
  sub_1AFD49878();
  char v41 = 0;
  sub_1AFD49EF8(&qword_1E9AF9E50, (void (*)(void))sub_1AFD49F64);
  sub_1AFFCBB58();
  long long v27 = v14;
  *(void *)uint64_t v14 = v42;
  char v40 = 1;
  sub_1AFD49FB8(&qword_1EB816CB0, MEMORY[0x1E4F27928]);
  sub_1AFFCBB58();
  uint64_t v19 = v12;
  long long v20 = v16;
  long long v21 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
  v21(&v27[*(int *)(v12 + 20)], v20, v17);
  char v39 = 2;
  long long v22 = v31;
  v26[1] = 0;
  sub_1AFFCBB58();
  uint64_t v23 = (uint64_t)v27;
  v21(&v27[*(int *)(v19 + 24)], v22, v17);
  char v38 = 3;
  sub_1AFD49FB8(&qword_1E9AF9E60, (void (*)(uint64_t))type metadata accessor for RawAttributionSource);
  uint64_t v24 = (uint64_t)v30;
  sub_1AFFCBB58();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v36, v35);
  sub_1AFD4A000(v24, v23 + *(int *)(v19 + 28));
  sub_1AFD4A064(v23, v28, (uint64_t (*)(void))type metadata accessor for CurrencyResponse);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  return sub_1AFD4CB0C(v23, (uint64_t (*)(void))type metadata accessor for CurrencyResponse);
}

uint64_t sub_1AFD49EF8(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1AFD49878();
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1AFD49F64()
{
  unint64_t result = qword_1E9AF9E58;
  if (!qword_1E9AF9E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AF9E58);
  }
  return result;
}

uint64_t sub_1AFD49FB8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AFD4A000(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RawAttributionSource(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AFD4A064(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1AFD4A0CC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1AFD49924(a1, a2);
}

uint64_t sub_1AFD4A0E4(void *a1)
{
  return sub_1AFD49530(a1);
}

uint64_t sub_1AFD4A0FC()
{
  uint64_t v1 = *v0;
  sub_1AFFC8E38();
  return v1;
}

uint64_t sub_1AFD4A12C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_1AFFC8E38();
  return v1;
}

double sub_1AFD4A15C()
{
  return *(double *)(v0 + 32);
}

uint64_t sub_1AFD4A164()
{
  return 0;
}

uint64_t sub_1AFD4A238()
{
  uint64_t v1 = 0x6563697270;
  if (*v0 == 1) {
    uint64_t v1 = 0x79636E6572727563;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x79636E6572727563;
  }
}

uint64_t sub_1AFD4A28C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1AFD4ECB4(a1, a2);
  *a3 = result;
  return result;
}

void sub_1AFD4A2B4(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1AFD4A2C0(uint64_t a1)
{
  unint64_t v2 = sub_1AFD4A514();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFD4A2FC(uint64_t a1)
{
  unint64_t v2 = sub_1AFD4A514();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFD4A338(void *a1)
{
  sub_1AFD4A824(0, &qword_1EB8117A8, (uint64_t (*)(void))sub_1AFD4A514, (uint64_t)&type metadata for CurrencyConversion.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v11 - v6;
  uint64_t v8 = *(void *)(v1 + 16);
  v11[0] = *(void *)(v1 + 24);
  v11[1] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFD4A514();
  sub_1AFFCBE78();
  char v14 = 0;
  uint64_t v9 = v11[2];
  sub_1AFFCBC08();
  if (!v9)
  {
    char v13 = 1;
    sub_1AFFCBC08();
    char v12 = 2;
    sub_1AFFCBC28();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1AFD4A514()
{
  unint64_t result = qword_1EB8115C8;
  if (!qword_1EB8115C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8115C8);
  }
  return result;
}

uint64_t sub_1AFD4A568@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v23 = a2;
  sub_1AFD4A824(0, &qword_1E9AF9E68, (uint64_t (*)(void))sub_1AFD4A514, (uint64_t)&type metadata for CurrencyConversion.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v21 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFD4A514();
  sub_1AFFCBE68();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  char v26 = 0;
  uint64_t v10 = sub_1AFFCBB18();
  uint64_t v12 = v11;
  char v25 = 1;
  sub_1AFFC8E38();
  uint64_t v13 = sub_1AFFCBB18();
  uint64_t v15 = v14;
  uint64_t v21 = v13;
  char v24 = 2;
  sub_1AFFC8E38();
  uint64_t v22 = v15;
  sub_1AFFCBB38();
  uint64_t v17 = v16;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  uint64_t v19 = v22;
  uint64_t v18 = v23;
  *uint64_t v23 = v10;
  v18[1] = v12;
  v18[2] = v21;
  v18[3] = v19;
  v18[4] = v17;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1AFD4A824(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1AFD4A88C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1AFD4A568(a1, a2);
}

uint64_t sub_1AFD4A8A4(void *a1)
{
  return sub_1AFD4A338(a1);
}

uint64_t *sub_1AFD4A8C0(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    sub_1AFFC8E48();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    unint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1AFFC98F8();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    sub_1AFFC8E38();
    v12(v9, v10, v11);
    v12((char *)v7 + a3[6], (char *)a2 + a3[6], v11);
    uint64_t v13 = a3[7];
    uint64_t v14 = (uint64_t *)((char *)v7 + v13);
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = *(uint64_t *)((char *)a2 + v13 + 8);
    *uint64_t v14 = *(uint64_t *)((char *)a2 + v13);
    v14[1] = v16;
    uint64_t v17 = type metadata accessor for RawAttributionSource(0);
    uint64_t v18 = *(int *)(v17 + 20);
    uint64_t v19 = (char *)v14 + v18;
    long long v20 = &v15[v18];
    uint64_t v21 = sub_1AFFC96E8();
    uint64_t v22 = *(void *)(v21 - 8);
    uint64_t v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
    uint64_t v24 = v21;
    sub_1AFFC8E38();
    if (v23(v20, 1, v24))
    {
      sub_1AFD4B138(0, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
      memcpy(v19, v20, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v24);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v24);
    }
    uint64_t v26 = *(int *)(v17 + 24);
    long long v27 = (void *)((char *)v14 + v26);
    uint64_t v28 = &v15[v26];
    uint64_t v29 = type metadata accessor for RawAttributionSourceLogo(0);
    uint64_t v30 = *(void *)(v29 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
    {
      sub_1AFD4B138(0, &qword_1EB818B30, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
      memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      uint64_t v82 = v24;
      uint64_t v83 = v30;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v32 = v24;
        uint64_t v33 = *(void *)v28;
        unint64_t v34 = *((void *)v28 + 1);
        sub_1AFD4B0E0(*(void *)v28, v34);
        *long long v27 = v33;
        v27[1] = v34;
        *((_OWORD *)v27 + 1) = *((_OWORD *)v28 + 1);
        uint64_t v35 = type metadata accessor for RawAttributionSourceLogo.Resolved.Variant(0);
        uint64_t v36 = *(int *)(v35 + 28);
        uint64_t v37 = (char *)v27 + v36;
        char v38 = &v28[v36];
        uint64_t v76 = *(void (**)(void))(v22 + 16);
        ((void (*)(char *, char *, uint64_t))v76)((char *)v27 + v36, &v28[v36], v32);
        uint64_t v39 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
        *(void *)&v37[*(int *)(v39 + 20)] = *(void *)&v38[*(int *)(v39 + 20)];
        uint64_t v78 = type metadata accessor for RawAttributionSourceLogo.Resolved(0);
        uint64_t v80 = v35;
        uint64_t v40 = *(int *)(v78 + 20);
        char v41 = (void *)((char *)v27 + v40);
        uint64_t v42 = &v28[v40];
        char v43 = *(void **)(v35 - 8);
        uint64_t v44 = v35;
        char v45 = (unsigned int (*)(char *, uint64_t, uint64_t))v43[6];
        __dst = v43;
        if (v45(&v28[v40], 1, v44))
        {
          sub_1AFD4B138(0, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
          memcpy(v41, v42, *(void *)(*(void *)(v46 - 8) + 64));
        }
        else
        {
          unint64_t v53 = *((void *)v42 + 1);
          uint64_t v73 = *(void *)v42;
          sub_1AFD4B0E0(*(void *)v42, v53);
          *char v41 = v73;
          v41[1] = v53;
          *((_OWORD *)v41 + 1) = *((_OWORD *)v42 + 1);
          uint64_t v54 = *(int *)(v80 + 28);
          uint64_t v72 = (char *)v41 + v54;
          uint64_t v55 = &v42[v54];
          v76();
          *(void *)&v72[*(int *)(v39 + 20)] = *(void *)&v55[*(int *)(v39 + 20)];
          (*((void (**)(void *, void, uint64_t, uint64_t))__dst + 7))(v41, 0, 1, v80);
        }
        uint64_t v56 = *(int *)(v78 + 24);
        int v57 = (void *)((char *)v27 + v56);
        uint64_t v58 = &v28[v56];
        if (v45(v58, 1, v80))
        {
          sub_1AFD4B138(0, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
          memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
        }
        else
        {
          uint64_t v66 = *(void *)v58;
          unint64_t v67 = *((void *)v58 + 1);
          sub_1AFD4B0E0(*(void *)v58, v67);
          void *v57 = v66;
          v57[1] = v67;
          *((_OWORD *)v57 + 1) = *((_OWORD *)v58 + 1);
          uint64_t v68 = *(int *)(v80 + 28);
          uint64_t v69 = (char *)v57 + v68;
          uint64_t v70 = &v58[v68];
          ((void (*)(char *, char *, uint64_t))v76)((char *)v57 + v68, v70, v82);
          *(void *)&v69[*(int *)(v39 + 20)] = *(void *)&v70[*(int *)(v39 + 20)];
          (*((void (**)(void *, void, uint64_t, uint64_t))__dst + 7))(v57, 0, 1, v80);
        }
        uint64_t v64 = v83;
      }
      else
      {
        int v81 = *(void (**)(void *, char *, uint64_t))(v22 + 16);
        v81(v27, v28, v24);
        uint64_t v47 = v24;
        uint64_t v48 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
        *(void *)((char *)v27 + *(int *)(v48 + 20)) = *(void *)&v28[*(int *)(v48 + 20)];
        uint64_t v79 = type metadata accessor for RawAttributionSourceLogo.Unresolved(0);
        uint64_t v49 = *(int *)(v79 + 20);
        int v50 = &v28[v49];
        uint64_t v51 = *(void *)(v48 - 8);
        __dsta = (char *)v27 + v49;
        uint64_t v77 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48);
        if (v77(&v28[v49], 1, v48))
        {
          sub_1AFD4B138(0, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
          memcpy(__dsta, v50, *(void *)(*(void *)(v52 - 8) + 64));
        }
        else
        {
          v81(__dsta, v50, v47);
          *(void *)&__dsta[*(int *)(v48 + 20)] = *(void *)&v50[*(int *)(v48 + 20)];
          (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(__dsta, 0, 1, v48);
        }
        uint64_t v60 = v51;
        uint64_t v61 = *(int *)(v79 + 24);
        uint64_t v62 = (char *)v27 + v61;
        int v63 = &v28[v61];
        uint64_t v64 = v83;
        if (v77(v63, 1, v48))
        {
          sub_1AFD4B138(0, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
          memcpy(v62, v63, *(void *)(*(void *)(v65 - 8) + 64));
        }
        else
        {
          v81(v62, v63, v82);
          *(void *)&v62[*(int *)(v48 + 20)] = *(void *)&v63[*(int *)(v48 + 20)];
          (*(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(v62, 0, 1, v48);
        }
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v64 + 56))(v27, 0, 1, v29);
    }
  }
  return v7;
}

uint64_t sub_1AFD4B0E0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    sub_1AFFC8E48();
  }

  return sub_1AFFC8E48();
}

void sub_1AFD4B138(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1AFFCB658();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1AFD4B18C(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_1AFFC98F8();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(a1 + a2[6], v5);
  uint64_t v7 = a1 + a2[7];
  swift_bridgeObjectRelease();
  uint64_t v8 = type metadata accessor for RawAttributionSource(0);
  uint64_t v9 = v7 + *(int *)(v8 + 20);
  uint64_t v10 = sub_1AFFC96E8();
  uint64_t v26 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v9, v10);
  }
  uint64_t v11 = v7 + *(int *)(v8 + 24);
  uint64_t v12 = type metadata accessor for RawAttributionSourceLogo(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v11, 1, v12);
  if (!result)
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1AFD4B504(*(void *)v11, *(void *)(v11 + 8));
      uint64_t v14 = type metadata accessor for RawAttributionSourceLogo.Resolved.Variant(0);
      uint64_t v25 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
      v25(v11 + *(int *)(v14 + 28), v10);
      uint64_t v15 = type metadata accessor for RawAttributionSourceLogo.Resolved(0);
      uint64_t v16 = v11 + *(int *)(v15 + 20);
      uint64_t v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
      if (!v17(v16, 1, v14))
      {
        sub_1AFD4B504(*(void *)v16, *(void *)(v16 + 8));
        v25(v16 + *(int *)(v14 + 28), v10);
      }
      uint64_t v18 = v11 + *(int *)(v15 + 24);
      uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v17)(v18, 1, v14);
      if (result) {
        return result;
      }
      sub_1AFD4B504(*(void *)v18, *(void *)(v18 + 8));
      uint64_t v19 = v18 + *(int *)(v14 + 28);
    }
    else
    {
      uint64_t v25 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
      v25(v11, v10);
      uint64_t v20 = type metadata accessor for RawAttributionSourceLogo.Unresolved(0);
      uint64_t v21 = v11 + *(int *)(v20 + 20);
      uint64_t v22 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
      uint64_t v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48);
      if (!v23(v21, 1, v22)) {
        v25(v21, v10);
      }
      uint64_t v24 = v11 + *(int *)(v20 + 24);
      uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v23)(v24, 1, v22);
      if (result) {
        return result;
      }
      uint64_t v19 = v24;
    }
    return ((uint64_t (*)(uint64_t, uint64_t))v25)(v19, v10);
  }
  return result;
}

uint64_t sub_1AFD4B504(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

char *sub_1AFD4B55C(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1AFFC98F8();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  sub_1AFFC8E38();
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  uint64_t v11 = a3[7];
  uint64_t v77 = a1;
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = *(void *)&a2[v11 + 8];
  *(void *)uint64_t v12 = *(void *)&a2[v11];
  *((void *)v12 + 1) = v14;
  uint64_t v15 = type metadata accessor for RawAttributionSource(0);
  uint64_t v16 = *(int *)(v15 + 20);
  uint64_t v17 = &v12[v16];
  uint64_t v18 = &v13[v16];
  uint64_t v19 = sub_1AFFC96E8();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
  sub_1AFFC8E38();
  if (v21(v18, 1, v19))
  {
    sub_1AFD4B138(0, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
    memcpy(v17, v18, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  uint64_t v23 = *(int *)(v15 + 24);
  uint64_t v24 = &v12[v23];
  uint64_t v25 = &v13[v23];
  uint64_t v26 = type metadata accessor for RawAttributionSourceLogo(0);
  uint64_t v27 = *(void *)(v26 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    sub_1AFD4B138(0, &qword_1EB818B30, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v71 = v27;
      uint64_t v29 = *(void *)v25;
      unint64_t v30 = *((void *)v25 + 1);
      sub_1AFD4B0E0(*(void *)v25, v30);
      *(void *)uint64_t v24 = v29;
      *((void *)v24 + 1) = v30;
      *((_OWORD *)v24 + 1) = *((_OWORD *)v25 + 1);
      uint64_t v31 = type metadata accessor for RawAttributionSourceLogo.Resolved.Variant(0);
      uint64_t v32 = *(int *)(v31 + 28);
      uint64_t v33 = &v24[v32];
      unint64_t v34 = &v25[v32];
      uint64_t v69 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
      v69(&v24[v32], &v25[v32], v19);
      uint64_t v67 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
      *(void *)&v33[*(int *)(v67 + 20)] = *(void *)&v34[*(int *)(v67 + 20)];
      __dst = (int *)type metadata accessor for RawAttributionSourceLogo.Resolved(0);
      uint64_t v35 = __dst[5];
      uint64_t v36 = &v24[v35];
      uint64_t v37 = &v25[v35];
      uint64_t v73 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 48);
      uint64_t v66 = *(void *)(v31 - 8);
      if (v73(&v25[v35], 1, v31))
      {
        sub_1AFD4B138(0, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
        memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
        uint64_t v39 = v69;
      }
      else
      {
        unint64_t v47 = *((void *)v37 + 1);
        uint64_t v64 = *(void *)v37;
        sub_1AFD4B0E0(*(void *)v37, v47);
        *(void *)uint64_t v36 = v64;
        *((void *)v36 + 1) = v47;
        *((_OWORD *)v36 + 1) = *((_OWORD *)v37 + 1);
        uint64_t v48 = *(int *)(v31 + 28);
        uint64_t v65 = &v36[v48];
        uint64_t v49 = &v37[v48];
        uint64_t v39 = v69;
        ((void (*)(void))v69)();
        *(void *)&v65[*(int *)(v67 + 20)] = *(void *)&v49[*(int *)(v67 + 20)];
        (*(void (**)(char *, void, uint64_t, uint64_t))(v66 + 56))(v36, 0, 1, v31);
      }
      uint64_t v50 = __dst[6];
      uint64_t v51 = &v24[v50];
      uint64_t v52 = &v25[v50];
      if (v73(v52, 1, v31))
      {
        sub_1AFD4B138(0, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
        memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
      }
      else
      {
        uint64_t v58 = *(void *)v52;
        unint64_t v59 = *((void *)v52 + 1);
        sub_1AFD4B0E0(*(void *)v52, v59);
        *(void *)uint64_t v51 = v58;
        *((void *)v51 + 1) = v59;
        *((_OWORD *)v51 + 1) = *((_OWORD *)v52 + 1);
        uint64_t v60 = *(int *)(v31 + 28);
        uint64_t v61 = &v51[v60];
        uint64_t v62 = &v52[v60];
        v39(&v51[v60], v62, v19);
        *(void *)&v61[*(int *)(v67 + 20)] = *(void *)&v62[*(int *)(v67 + 20)];
        (*(void (**)(char *, void, uint64_t, uint64_t))(v66 + 56))(v51, 0, 1, v31);
      }
      uint64_t v27 = v71;
    }
    else
    {
      uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
      v40(v24, v25, v19);
      uint64_t v41 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
      *(void *)&v24[*(int *)(v41 + 20)] = *(void *)&v25[*(int *)(v41 + 20)];
      uint64_t v42 = type metadata accessor for RawAttributionSourceLogo.Unresolved(0);
      uint64_t v43 = *(int *)(v42 + 20);
      uint64_t v74 = v42;
      __dsta = &v24[v43];
      uint64_t v44 = &v25[v43];
      uint64_t v70 = *(void *)(v41 - 8);
      uint64_t v72 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48);
      uint64_t v68 = v40;
      if (v72(&v25[v43], 1, v41))
      {
        sub_1AFD4B138(0, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
        memcpy(__dsta, v44, *(void *)(*(void *)(v45 - 8) + 64));
        uint64_t v46 = v70;
      }
      else
      {
        v40(__dsta, v44, v19);
        *(void *)&__dsta[*(int *)(v41 + 20)] = *(void *)&v44[*(int *)(v41 + 20)];
        uint64_t v46 = v70;
        (*(void (**)(void))(v70 + 56))();
      }
      uint64_t v54 = *(int *)(v74 + 24);
      uint64_t v55 = &v24[v54];
      uint64_t v56 = &v25[v54];
      if (v72(v56, 1, v41))
      {
        sub_1AFD4B138(0, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
        memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64));
      }
      else
      {
        v68(v55, v56, v19);
        *(void *)&v55[*(int *)(v41 + 20)] = *(void *)&v56[*(int *)(v41 + 20)];
        (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v55, 0, 1, v41);
      }
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  }
  return v77;
}

char *sub_1AFD4BCF4(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1AFFC98F8();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  uint64_t v11 = a3[7];
  uint64_t v135 = a1;
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  *(void *)uint64_t v12 = *(void *)&a2[v11];
  *((void *)v12 + 1) = *(void *)&a2[v11 + 8];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  uint64_t v133 = type metadata accessor for RawAttributionSource(0);
  uint64_t v14 = *(int *)(v133 + 20);
  uint64_t v15 = &v12[v14];
  uint64_t v16 = &v13[v14];
  uint64_t v17 = sub_1AFFC96E8();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48);
  LODWORD(v10) = v19(v15, 1, v17);
  uint64_t v134 = v17;
  int v20 = v19(v16, 1, v17);
  if (v10)
  {
    if (v20)
    {
      sub_1AFD4B138(0, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
      memcpy(v15, v16, *(void *)(*(void *)(v21 - 8) + 64));
      uint64_t v22 = v18;
    }
    else
    {
      uint64_t v22 = v18;
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
  }
  else
  {
    uint64_t v22 = v18;
    if (v20)
    {
      (*(void (**)(char *, uint64_t))(v18 + 8))(v15, v17);
      sub_1AFD4B138(0, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
      memcpy(v15, v16, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 24))(v15, v16, v17);
    }
  }
  uint64_t v24 = *(int *)(v133 + 24);
  uint64_t v25 = (uint64_t *)&v12[v24];
  uint64_t v26 = (uint64_t *)&v13[v24];
  uint64_t v27 = type metadata accessor for RawAttributionSourceLogo(0);
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v28 + 48);
  int v30 = v29(v25, 1, v27);
  int v31 = v29(v26, 1, v27);
  if (v30)
  {
    if (!v31)
    {
      uint64_t v130 = v28;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v32 = *v26;
        unint64_t v33 = v26[1];
        sub_1AFD4B0E0(*v26, v33);
        *uint64_t v25 = v32;
        v25[1] = v33;
        v25[2] = v26[2];
        v25[3] = v26[3];
        uint64_t v34 = type metadata accessor for RawAttributionSourceLogo.Resolved.Variant(0);
        uint64_t v35 = *(int *)(v34 + 28);
        uint64_t v36 = (char *)v25 + v35;
        uint64_t v37 = (char *)v26 + v35;
        uint64_t v126 = *(void (**)(char *, char *, uint64_t))(v22 + 16);
        v126((char *)v25 + v35, (char *)v26 + v35, v134);
        uint64_t v38 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
        *(void *)&v36[*(int *)(v38 + 20)] = *(void *)&v37[*(int *)(v38 + 20)];
        uint64_t v122 = type metadata accessor for RawAttributionSourceLogo.Resolved(0);
        uint64_t v39 = *(int *)(v122 + 20);
        uint64_t v40 = (uint64_t *)((char *)v25 + v39);
        uint64_t v41 = (uint64_t *)((char *)v26 + v39);
        uint64_t v119 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 48);
        uint64_t v117 = *(void *)(v34 - 8);
        if (v119((char *)v26 + v39, 1, v34))
        {
          sub_1AFD4B138(0, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
          memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
          uint64_t v43 = v126;
        }
        else
        {
          uint64_t v115 = v34;
          uint64_t v66 = *v41;
          unint64_t v67 = v41[1];
          sub_1AFD4B0E0(*v41, v67);
          *uint64_t v40 = v66;
          v40[1] = v67;
          v40[2] = v41[2];
          v40[3] = v41[3];
          uint64_t v68 = *(int *)(v115 + 28);
          uint64_t v69 = (char *)v40 + v68;
          uint64_t v70 = (char *)v41 + v68;
          uint64_t v71 = (char *)v41 + v68;
          uint64_t v43 = v126;
          v126((char *)v40 + v68, v71, v134);
          *(void *)&v69[*(int *)(v38 + 20)] = *(void *)&v70[*(int *)(v38 + 20)];
          uint64_t v34 = v115;
          (*(void (**)(void *, void, uint64_t, uint64_t))(v117 + 56))(v40, 0, 1, v115);
        }
        uint64_t v72 = *(int *)(v122 + 24);
        uint64_t v73 = (uint64_t *)((char *)v25 + v72);
        uint64_t v74 = (uint64_t *)((char *)v26 + v72);
        if (v119((char *)v74, 1, v34))
        {
          sub_1AFD4B138(0, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
          memcpy(v73, v74, *(void *)(*(void *)(v75 - 8) + 64));
        }
        else
        {
          uint64_t v88 = v34;
          uint64_t v89 = *v74;
          unint64_t v90 = v74[1];
          sub_1AFD4B0E0(*v74, v90);
          *uint64_t v73 = v89;
          v73[1] = v90;
          v73[2] = v74[2];
          v73[3] = v74[3];
          uint64_t v91 = *(int *)(v88 + 28);
          uint64_t v92 = (char *)v73 + v91;
          v93 = (char *)v74 + v91;
          v43((char *)v73 + v91, v93, v134);
          *(void *)&v92[*(int *)(v38 + 20)] = *(void *)&v93[*(int *)(v38 + 20)];
          (*(void (**)(void *, void, uint64_t, uint64_t))(v117 + 56))(v73, 0, 1, v88);
        }
      }
      else
      {
        uint64_t v128 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v22 + 16);
        v128(v25, v26, v134);
        uint64_t v59 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
        *(uint64_t *)((char *)v25 + *(int *)(v59 + 20)) = *(uint64_t *)((char *)v26 + *(int *)(v59 + 20));
        uint64_t v124 = type metadata accessor for RawAttributionSourceLogo.Unresolved(0);
        uint64_t v60 = *(int *)(v124 + 20);
        uint64_t v61 = (char *)v25 + v60;
        uint64_t v62 = (char *)v26 + v60;
        uint64_t v63 = *(void *)(v59 - 8);
        unsigned __int8 v121 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48);
        if (v121((char *)v26 + v60, 1, v59))
        {
          sub_1AFD4B138(0, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
          memcpy(v61, v62, *(void *)(*(void *)(v64 - 8) + 64));
          uint64_t v65 = (void (*)(char *, char *, uint64_t))v128;
        }
        else
        {
          uint64_t v65 = (void (*)(char *, char *, uint64_t))v128;
          v128((uint64_t *)v61, (uint64_t *)v62, v134);
          *(void *)&v61[*(int *)(v59 + 20)] = *(void *)&v62[*(int *)(v59 + 20)];
          (*(void (**)(char *, void, uint64_t, uint64_t))(v63 + 56))(v61, 0, 1, v59);
        }
        uint64_t v83 = v63;
        uint64_t v84 = *(int *)(v124 + 24);
        uint64_t v85 = (char *)v25 + v84;
        uint64_t v86 = (char *)v26 + v84;
        if (v121(v86, 1, v59))
        {
          sub_1AFD4B138(0, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
          memcpy(v85, v86, *(void *)(*(void *)(v87 - 8) + 64));
        }
        else
        {
          v65(v85, v86, v134);
          *(void *)&v85[*(int *)(v59 + 20)] = *(void *)&v86[*(int *)(v59 + 20)];
          (*(void (**)(char *, void, uint64_t, uint64_t))(v83 + 56))(v85, 0, 1, v59);
        }
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v130 + 56))(v25, 0, 1, v27);
      return v135;
    }
LABEL_15:
    sub_1AFD4B138(0, &qword_1EB818B30, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
    memcpy(v25, v26, *(void *)(*(void *)(v44 - 8) + 64));
    return v135;
  }
  if (v31)
  {
    sub_1AFD4CB0C((uint64_t)v25, type metadata accessor for RawAttributionSourceLogo);
    goto LABEL_15;
  }
  if (v135 != a2)
  {
    sub_1AFD4CB0C((uint64_t)v25, type metadata accessor for RawAttributionSourceLogo);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v45 = *v26;
      unint64_t v46 = v26[1];
      sub_1AFD4B0E0(*v26, v46);
      *uint64_t v25 = v45;
      v25[1] = v46;
      v25[2] = v26[2];
      v25[3] = v26[3];
      uint64_t v47 = type metadata accessor for RawAttributionSourceLogo.Resolved.Variant(0);
      uint64_t v48 = *(int *)(v47 + 28);
      uint64_t v49 = (char *)v25 + v48;
      uint64_t v50 = (char *)v26 + v48;
      uint64_t v131 = *(void (**)(char *, char *, uint64_t))(v22 + 16);
      v131((char *)v25 + v48, (char *)v26 + v48, v134);
      uint64_t v51 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
      *(void *)&v49[*(int *)(v51 + 20)] = *(void *)&v50[*(int *)(v51 + 20)];
      uint64_t v52 = type metadata accessor for RawAttributionSourceLogo.Resolved(0);
      uint64_t v53 = *(int *)(v52 + 20);
      uint64_t v54 = (uint64_t *)((char *)v25 + v53);
      uint64_t v55 = (uint64_t *)((char *)v26 + v53);
      uint64_t v123 = *(void *)(v47 - 8);
      uint64_t v127 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v123 + 48);
      uint64_t v120 = v51;
      if (v127((char *)v26 + v53, 1, v47))
      {
        sub_1AFD4B138(0, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
        memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
        uint64_t v57 = v131;
        uint64_t v58 = v123;
      }
      else
      {
        uint64_t v116 = v52;
        uint64_t v118 = v47;
        uint64_t v95 = *v55;
        unint64_t v96 = v55[1];
        sub_1AFD4B0E0(*v55, v96);
        *uint64_t v54 = v95;
        v54[1] = v96;
        v54[2] = v55[2];
        v54[3] = v55[3];
        uint64_t v97 = *(int *)(v118 + 28);
        uint64_t v98 = (char *)v54 + v97;
        unsigned __int8 v99 = (char *)v55 + v97;
        uint64_t v57 = v131;
        v131((char *)v54 + v97, (char *)v55 + v97, v134);
        *(void *)&v98[*(int *)(v51 + 20)] = *(void *)&v99[*(int *)(v51 + 20)];
        uint64_t v52 = v116;
        uint64_t v47 = v118;
        uint64_t v58 = v123;
        (*(void (**)(void *, void, uint64_t, uint64_t))(v123 + 56))(v54, 0, 1, v118);
      }
      uint64_t v100 = *(int *)(v52 + 24);
      char v101 = (uint64_t *)((char *)v25 + v100);
      uint64_t v102 = (uint64_t *)((char *)v26 + v100);
      if (v127((char *)v102, 1, v47))
      {
        sub_1AFD4B138(0, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
        memcpy(v101, v102, *(void *)(*(void *)(v103 - 8) + 64));
      }
      else
      {
        uint64_t v109 = v47;
        uint64_t v110 = *v102;
        unint64_t v111 = v102[1];
        sub_1AFD4B0E0(*v102, v111);
        void *v101 = v110;
        v101[1] = v111;
        v101[2] = v102[2];
        v101[3] = v102[3];
        uint64_t v112 = *(int *)(v109 + 28);
        unsigned __int8 v113 = (char *)v101 + v112;
        uint64_t v114 = (char *)v102 + v112;
        v57((char *)v101 + v112, v114, v134);
        *(void *)&v113[*(int *)(v120 + 20)] = *(void *)&v114[*(int *)(v120 + 20)];
        (*(void (**)(void *, void, uint64_t, uint64_t))(v58 + 56))(v101, 0, 1, v109);
      }
    }
    else
    {
      uint64_t v132 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v22 + 16);
      v132(v25, v26, v134);
      uint64_t v76 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
      *(uint64_t *)((char *)v25 + *(int *)(v76 + 20)) = *(uint64_t *)((char *)v26 + *(int *)(v76 + 20));
      uint64_t v129 = type metadata accessor for RawAttributionSourceLogo.Unresolved(0);
      uint64_t v77 = *(int *)(v129 + 20);
      uint64_t v78 = (char *)v25 + v77;
      uint64_t v79 = (char *)v26 + v77;
      uint64_t v80 = *(void *)(v76 - 8);
      uint64_t v125 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48);
      if (v125((char *)v26 + v77, 1, v76))
      {
        sub_1AFD4B138(0, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
        memcpy(v78, v79, *(void *)(*(void *)(v81 - 8) + 64));
        uint64_t v82 = (void (*)(char *, char *, uint64_t))v132;
      }
      else
      {
        uint64_t v82 = (void (*)(char *, char *, uint64_t))v132;
        v132((uint64_t *)v78, (uint64_t *)v79, v134);
        *(void *)&v78[*(int *)(v76 + 20)] = *(void *)&v79[*(int *)(v76 + 20)];
        (*(void (**)(char *, void, uint64_t, uint64_t))(v80 + 56))(v78, 0, 1, v76);
      }
      uint64_t v104 = v80;
      uint64_t v105 = *(int *)(v129 + 24);
      uint64_t v106 = (char *)v25 + v105;
      unsigned __int8 v107 = (char *)v26 + v105;
      if (v125(v107, 1, v76))
      {
        sub_1AFD4B138(0, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
        memcpy(v106, v107, *(void *)(*(void *)(v108 - 8) + 64));
      }
      else
      {
        v82(v106, v107, v134);
        *(void *)&v106[*(int *)(v76 + 20)] = *(void *)&v107[*(int *)(v76 + 20)];
        (*(void (**)(char *, void, uint64_t, uint64_t))(v104 + 56))(v106, 0, 1, v76);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return v135;
}

uint64_t sub_1AFD4CB0C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

char *sub_1AFD4CB6C(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1AFFC98F8();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  uint64_t v11 = a3[7];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  *(_OWORD *)&a1[v11] = *(_OWORD *)&a2[v11];
  uint64_t v14 = type metadata accessor for RawAttributionSource(0);
  uint64_t v15 = *(int *)(v14 + 20);
  uint64_t v16 = &v12[v15];
  uint64_t v17 = &v13[v15];
  uint64_t v18 = sub_1AFFC96E8();
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    sub_1AFD4B138(0, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  uint64_t v21 = *(int *)(v14 + 24);
  uint64_t v22 = &v12[v21];
  uint64_t v23 = &v13[v21];
  uint64_t v24 = type metadata accessor for RawAttributionSourceLogo(0);
  uint64_t v25 = *(void *)(v24 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
  {
    sub_1AFD4B138(0, &qword_1EB818B30, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
    memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    uint64_t v71 = v25;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      long long v27 = *((_OWORD *)v23 + 1);
      *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
      *((_OWORD *)v22 + 1) = v27;
      uint64_t v28 = type metadata accessor for RawAttributionSourceLogo.Resolved.Variant(0);
      uint64_t v29 = *(int *)(v28 + 28);
      int v30 = &v22[v29];
      int v31 = &v23[v29];
      uint64_t v62 = *(void (**)(void))(v19 + 32);
      ((void (*)(char *, char *, uint64_t))v62)(&v22[v29], &v23[v29], v18);
      uint64_t v61 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
      *(void *)&v30[*(int *)(v61 + 20)] = *(void *)&v31[*(int *)(v61 + 20)];
      uint64_t v68 = type metadata accessor for RawAttributionSourceLogo.Resolved(0);
      uint64_t v32 = *(int *)(v68 + 20);
      unint64_t v33 = &v23[v32];
      uint64_t v34 = *(void *)(v28 - 8);
      __dst = &v22[v32];
      uint64_t v66 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48);
      if (v66(&v23[v32], 1, v28))
      {
        sub_1AFD4B138(0, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
        memcpy(__dst, v33, *(void *)(*(void *)(v35 - 8) + 64));
      }
      else
      {
        long long v43 = *((_OWORD *)v33 + 1);
        *(_OWORD *)__dst = *(_OWORD *)v33;
        *((_OWORD *)__dst + 1) = v43;
        uint64_t v44 = *(int *)(v28 + 28);
        uint64_t v60 = &__dst[v44];
        uint64_t v45 = &v33[v44];
        v62();
        *(void *)&v60[*(int *)(v61 + 20)] = *(void *)&v45[*(int *)(v61 + 20)];
        (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(__dst, 0, 1, v28);
      }
      uint64_t v46 = v34;
      uint64_t v47 = *(int *)(v68 + 24);
      uint64_t v48 = &v22[v47];
      uint64_t v49 = &v23[v47];
      if (v66(v49, 1, v28))
      {
        sub_1AFD4B138(0, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
        memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
      }
      else
      {
        long long v55 = *((_OWORD *)v49 + 1);
        *(_OWORD *)uint64_t v48 = *(_OWORD *)v49;
        *((_OWORD *)v48 + 1) = v55;
        uint64_t v56 = *(int *)(v28 + 28);
        uint64_t v57 = &v48[v56];
        uint64_t v58 = &v49[v56];
        ((void (*)(char *, char *, uint64_t))v62)(&v48[v56], v58, v18);
        *(void *)&v57[*(int *)(v61 + 20)] = *(void *)&v58[*(int *)(v61 + 20)];
        (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v48, 0, 1, v28);
      }
    }
    else
    {
      uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
      v36(v22, v23, v18);
      uint64_t v37 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
      *(void *)&v22[*(int *)(v37 + 20)] = *(void *)&v23[*(int *)(v37 + 20)];
      uint64_t v38 = type metadata accessor for RawAttributionSourceLogo.Unresolved(0);
      uint64_t v39 = *(int *)(v38 + 20);
      uint64_t v69 = v38;
      uint64_t v70 = &v22[v39];
      uint64_t v40 = &v23[v39];
      __dsta = *(void **)(v37 - 8);
      unint64_t v67 = (unsigned int (*)(char *, uint64_t, uint64_t))__dsta[6];
      uint64_t v63 = v36;
      if (v67(&v23[v39], 1, v37))
      {
        sub_1AFD4B138(0, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
        memcpy(v70, v40, *(void *)(*(void *)(v41 - 8) + 64));
        uint64_t v42 = __dsta;
      }
      else
      {
        v36(v70, v40, v18);
        *(void *)&v70[*(int *)(v37 + 20)] = *(void *)&v40[*(int *)(v37 + 20)];
        uint64_t v42 = __dsta;
        ((void (*)(void))__dsta[7])();
      }
      uint64_t v51 = *(int *)(v69 + 24);
      uint64_t v52 = &v22[v51];
      uint64_t v53 = &v23[v51];
      if (v67(v53, 1, v37))
      {
        sub_1AFD4B138(0, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
        memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64));
      }
      else
      {
        v63(v52, v53, v18);
        *(void *)&v52[*(int *)(v37 + 20)] = *(void *)&v53[*(int *)(v37 + 20)];
        ((void (*)(char *, void, uint64_t, uint64_t))v42[7])(v52, 0, 1, v37);
      }
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v71 + 56))(v22, 0, 1, v24);
  }
  return a1;
}

char *sub_1AFD4D2B8(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1AFFC98F8();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  uint64_t v11 = a3[7];
  uint64_t v123 = a1;
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = *(void *)&a2[v11 + 8];
  *(void *)uint64_t v12 = *(void *)&a2[v11];
  *((void *)v12 + 1) = v14;
  swift_bridgeObjectRelease();
  uint64_t v118 = (int *)type metadata accessor for RawAttributionSource(0);
  uint64_t v15 = v118[5];
  uint64_t v16 = &v12[v15];
  uint64_t v17 = &v13[v15];
  uint64_t v18 = sub_1AFFC96E8();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  LODWORD(v10) = v20(v16, 1, v18);
  uint64_t v122 = v18;
  int v21 = v20(v17, 1, v18);
  if (v10)
  {
    if (v21)
    {
      sub_1AFD4B138(0, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
      memcpy(v16, v17, *(void *)(*(void *)(v22 - 8) + 64));
      uint64_t v23 = v19;
    }
    else
    {
      uint64_t v23 = v19;
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
  }
  else
  {
    uint64_t v23 = v19;
    if (v21)
    {
      (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
      sub_1AFD4B138(0, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
      memcpy(v16, v17, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 40))(v16, v17, v18);
    }
  }
  uint64_t v25 = v118[6];
  uint64_t v26 = &v12[v25];
  long long v27 = &v13[v25];
  uint64_t v28 = type metadata accessor for RawAttributionSourceLogo(0);
  uint64_t v29 = *(void **)(v28 - 8);
  int v30 = (uint64_t (*)(char *, uint64_t, uint64_t))v29[6];
  int v31 = v30(v26, 1, v28);
  int v32 = v30(v27, 1, v28);
  if (v31)
  {
    unint64_t v33 = v123;
    if (!v32)
    {
      uint64_t v119 = v29;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        long long v34 = *((_OWORD *)v27 + 1);
        *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
        *((_OWORD *)v26 + 1) = v34;
        uint64_t v35 = type metadata accessor for RawAttributionSourceLogo.Resolved.Variant(0);
        uint64_t v36 = *(int *)(v35 + 28);
        uint64_t v37 = &v26[v36];
        uint64_t v38 = &v27[v36];
        uint64_t v114 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
        v114(&v26[v36], &v27[v36], v122);
        uint64_t v110 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
        *(void *)&v37[*(int *)(v110 + 20)] = *(void *)&v38[*(int *)(v110 + 20)];
        __dst = (int *)type metadata accessor for RawAttributionSourceLogo.Resolved(0);
        uint64_t v39 = __dst[5];
        uint64_t v40 = &v26[v39];
        uint64_t v41 = &v27[v39];
        uint64_t v42 = *(void *)(v35 - 8);
        uint64_t v104 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48);
        if (v104(&v27[v39], 1, v35))
        {
          sub_1AFD4B138(0, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
          memcpy(v40, v41, *(void *)(*(void *)(v43 - 8) + 64));
          uint64_t v45 = v110;
          uint64_t v44 = v114;
        }
        else
        {
          long long v64 = *((_OWORD *)v41 + 1);
          *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
          *((_OWORD *)v40 + 1) = v64;
          uint64_t v65 = *(int *)(v35 + 28);
          uint64_t v103 = &v40[v65];
          uint64_t v66 = &v41[v65];
          ((void (*)(void))v114)();
          uint64_t v44 = v114;
          uint64_t v45 = v110;
          *(void *)&v103[*(int *)(v110 + 20)] = *(void *)&v66[*(int *)(v110 + 20)];
          (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v40, 0, 1, v35);
        }
        uint64_t v67 = v42;
        uint64_t v68 = __dst[6];
        uint64_t v69 = &v26[v68];
        uint64_t v70 = &v27[v68];
        uint64_t v71 = (void (**)(_OWORD *, void, uint64_t, uint64_t))v119;
        if (v104(v70, 1, v35))
        {
          sub_1AFD4B138(0, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
          memcpy(v69, v70, *(void *)(*(void *)(v72 - 8) + 64));
        }
        else
        {
          long long v82 = *((_OWORD *)v70 + 1);
          *(_OWORD *)uint64_t v69 = *(_OWORD *)v70;
          *((_OWORD *)v69 + 1) = v82;
          uint64_t v83 = *(int *)(v35 + 28);
          uint64_t v84 = &v69[v83];
          uint64_t v85 = &v70[v83];
          v44(&v69[v83], v85, v122);
          *(void *)&v84[*(int *)(v45 + 20)] = *(void *)&v85[*(int *)(v45 + 20)];
          (*(void (**)(char *, void, uint64_t, uint64_t))(v67 + 56))(v69, 0, 1, v35);
        }
        unint64_t v33 = v123;
      }
      else
      {
        uint64_t v116 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
        v116(v26, v27, v122);
        uint64_t v58 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
        *(void *)&v26[*(int *)(v58 + 20)] = *(void *)&v27[*(int *)(v58 + 20)];
        uint64_t v112 = type metadata accessor for RawAttributionSourceLogo.Unresolved(0);
        uint64_t v59 = *(int *)(v112 + 20);
        uint64_t v60 = &v26[v59];
        uint64_t v61 = &v27[v59];
        uint64_t v62 = *(void *)(v58 - 8);
        __dstb = *(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48);
        uint64_t v105 = v62;
        if (__dstb(&v27[v59], 1, v58))
        {
          sub_1AFD4B138(0, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
          memcpy(v60, v61, *(void *)(*(void *)(v63 - 8) + 64));
        }
        else
        {
          v116(v60, v61, v122);
          *(void *)&v60[*(int *)(v58 + 20)] = *(void *)&v61[*(int *)(v58 + 20)];
          (*(void (**)(char *, void, uint64_t, uint64_t))(v62 + 56))(v60, 0, 1, v58);
        }
        uint64_t v78 = *(int *)(v112 + 24);
        uint64_t v79 = &v26[v78];
        uint64_t v80 = &v27[v78];
        uint64_t v71 = (void (**)(_OWORD *, void, uint64_t, uint64_t))v29;
        unint64_t v33 = v123;
        if (__dstb(v80, 1, v58))
        {
          sub_1AFD4B138(0, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
          memcpy(v79, v80, *(void *)(*(void *)(v81 - 8) + 64));
        }
        else
        {
          v116(v79, v80, v122);
          *(void *)&v79[*(int *)(v58 + 20)] = *(void *)&v80[*(int *)(v58 + 20)];
          (*(void (**)(char *, void, uint64_t, uint64_t))(v105 + 56))(v79, 0, 1, v58);
        }
      }
      swift_storeEnumTagMultiPayload();
      ((void (**)(char *, void, uint64_t, uint64_t))v71)[7](v26, 0, 1, v28);
      return v33;
    }
LABEL_15:
    sub_1AFD4B138(0, &qword_1EB818B30, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
    memcpy(v26, v27, *(void *)(*(void *)(v46 - 8) + 64));
    return v33;
  }
  unint64_t v33 = v123;
  if (v32)
  {
    sub_1AFD4CB0C((uint64_t)v26, type metadata accessor for RawAttributionSourceLogo);
    goto LABEL_15;
  }
  if (v123 != a2)
  {
    sub_1AFD4CB0C((uint64_t)v26, type metadata accessor for RawAttributionSourceLogo);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      long long v47 = *((_OWORD *)v27 + 1);
      *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
      *((_OWORD *)v26 + 1) = v47;
      uint64_t v48 = type metadata accessor for RawAttributionSourceLogo.Resolved.Variant(0);
      uint64_t v49 = *(int *)(v48 + 28);
      uint64_t v50 = &v26[v49];
      uint64_t v51 = &v27[v49];
      uint64_t v120 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
      v120(&v26[v49], &v27[v49], v122);
      uint64_t v52 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
      *(void *)&v50[*(int *)(v52 + 20)] = *(void *)&v51[*(int *)(v52 + 20)];
      uint64_t v115 = type metadata accessor for RawAttributionSourceLogo.Resolved(0);
      uint64_t v53 = *(int *)(v115 + 20);
      uint64_t v54 = &v27[v53];
      uint64_t v55 = *(void *)(v48 - 8);
      __dsta = &v26[v53];
      unint64_t v111 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48);
      if (v111(&v27[v53], 1, v48))
      {
        sub_1AFD4B138(0, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
        memcpy(__dsta, v54, *(void *)(*(void *)(v56 - 8) + 64));
        uint64_t v57 = v120;
      }
      else
      {
        long long v87 = *((_OWORD *)v54 + 1);
        *(_OWORD *)__dsta = *(_OWORD *)v54;
        *((_OWORD *)__dsta + 1) = v87;
        uint64_t v88 = *(int *)(v48 + 28);
        char v101 = &v54[v88];
        uint64_t v102 = &__dsta[v88];
        uint64_t v57 = v120;
        ((void (*)(void))v120)();
        *(void *)&v102[*(int *)(v52 + 20)] = *(void *)&v101[*(int *)(v52 + 20)];
        (*(void (**)(char *, void, uint64_t, uint64_t))(v55 + 56))(__dsta, 0, 1, v48);
      }
      uint64_t v89 = *(int *)(v115 + 24);
      unint64_t v90 = &v26[v89];
      uint64_t v91 = &v27[v89];
      if (v111(v91, 1, v48))
      {
        sub_1AFD4B138(0, &qword_1EB8188E8, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Resolved.Variant);
        memcpy(v90, v91, *(void *)(*(void *)(v92 - 8) + 64));
      }
      else
      {
        long long v97 = *((_OWORD *)v91 + 1);
        *(_OWORD *)unint64_t v90 = *(_OWORD *)v91;
        *((_OWORD *)v90 + 1) = v97;
        uint64_t v98 = *(int *)(v48 + 28);
        unsigned __int8 v99 = &v90[v98];
        uint64_t v100 = &v91[v98];
        v57(&v90[v98], v100, v122);
        *(void *)&v99[*(int *)(v52 + 20)] = *(void *)&v100[*(int *)(v52 + 20)];
        (*(void (**)(char *, void, uint64_t, uint64_t))(v55 + 56))(v90, 0, 1, v48);
      }
    }
    else
    {
      uint64_t v117 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
      v117(v26, v27, v122);
      uint64_t v73 = type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant(0);
      *(void *)&v26[*(int *)(v73 + 20)] = *(void *)&v27[*(int *)(v73 + 20)];
      uint64_t v113 = type metadata accessor for RawAttributionSourceLogo.Unresolved(0);
      uint64_t v74 = *(int *)(v113 + 20);
      unsigned __int8 v121 = &v26[v74];
      uint64_t v75 = &v27[v74];
      uint64_t v76 = *(void *)(v73 - 8);
      __dstc = *(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48);
      if (__dstc(&v27[v74], 1, v73))
      {
        sub_1AFD4B138(0, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
        memcpy(v121, v75, *(void *)(*(void *)(v77 - 8) + 64));
      }
      else
      {
        v117(v121, v75, v122);
        *(void *)&v121[*(int *)(v73 + 20)] = *(void *)&v75[*(int *)(v73 + 20)];
        (*(void (**)(void))(v76 + 56))();
      }
      uint64_t v93 = *(int *)(v113 + 24);
      uint64_t v94 = &v26[v93];
      uint64_t v95 = &v27[v93];
      if (__dstc(v95, 1, v73))
      {
        sub_1AFD4B138(0, (unint64_t *)&unk_1EB818828, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo.Unresolved.Variant);
        memcpy(v94, v95, *(void *)(*(void *)(v96 - 8) + 64));
      }
      else
      {
        v117(v94, v95, v122);
        *(void *)&v94[*(int *)(v73 + 20)] = *(void *)&v95[*(int *)(v73 + 20)];
        (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v94, 0, 1, v73);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return v33;
}

uint64_t sub_1AFD4E018(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1AFD4E02C);
}

uint64_t sub_1AFD4E02C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1AFFC98F8();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for RawAttributionSource(0);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)a1 + *(int *)(a3 + 28);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_1AFD4E158(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1AFD4E16C);
}

void *sub_1AFD4E16C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_1AFFC98F8();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for RawAttributionSource(0);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 28);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_1AFD4E298()
{
  uint64_t result = sub_1AFFC98F8();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for RawAttributionSource(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for ArticleScore(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  sub_1AFFC8E48();
  return v3;
}

uint64_t destroy for CurrencyConversion()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for CurrencyConversion(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  return a1;
}

void *assignWithCopy for CurrencyConversion(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

void *assignWithTake for CurrencyConversion(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  return a1;
}

uint64_t getEnumTagSinglePayload for CurrencyConversion(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CurrencyConversion(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CurrencyConversion()
{
  return &type metadata for CurrencyConversion;
}

uint64_t getEnumTagSinglePayload for CurrencyConversion.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CurrencyConversion.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFD4E700);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CurrencyConversion.CodingKeys()
{
  return &type metadata for CurrencyConversion.CodingKeys;
}

uint64_t getEnumTagSinglePayload for CurrencyResponse.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CurrencyResponse.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFD4E894);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CurrencyResponse.CodingKeys()
{
  return &type metadata for CurrencyResponse.CodingKeys;
}

unint64_t sub_1AFD4E8D0()
{
  unint64_t result = qword_1E9AF9E70;
  if (!qword_1E9AF9E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AF9E70);
  }
  return result;
}

unint64_t sub_1AFD4E928()
{
  unint64_t result = qword_1E9AF9E78;
  if (!qword_1E9AF9E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AF9E78);
  }
  return result;
}

unint64_t sub_1AFD4E980()
{
  unint64_t result = qword_1EB8115D8;
  if (!qword_1EB8115D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8115D8);
  }
  return result;
}

unint64_t sub_1AFD4E9D8()
{
  unint64_t result = qword_1EB8115D0;
  if (!qword_1EB8115D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8115D0);
  }
  return result;
}

unint64_t sub_1AFD4EA30()
{
  unint64_t result = qword_1EB811590;
  if (!qword_1EB811590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB811590);
  }
  return result;
}

unint64_t sub_1AFD4EA88()
{
  unint64_t result = qword_1EB811588;
  if (!qword_1EB811588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB811588);
  }
  return result;
}

uint64_t sub_1AFD4EADC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x69737265766E6F63 && a2 == 0xEB00000000736E6FLL;
  if (v2 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4164657461657263 && a2 == 0xE900000000000074 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7441656C617473 && a2 == 0xE700000000000000 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656372756F73 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1AFFCBCE8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1AFD4ECB4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x79636E6572727563 && a2 == 0xEC0000006D6F7246;
  if (v2 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x79636E6572727563 && a2 == 0xEA00000000006F54 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6563697270 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1AFFCBCE8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1AFD4EE28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1AFFC9E18();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4FAA980], v8);
  uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t, char *, uint64_t, uint64_t))(a4 + 8))(a1, a2, v11, a3, a4);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v12;
}

uint64_t sub_1AFD4EF58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[7] = a5;
  v6[8] = v5;
  v6[5] = a3;
  v6[6] = a4;
  v6[3] = a1;
  v6[4] = a2;
  return MEMORY[0x1F4188298](sub_1AFD4EF80, 0, 0);
}

uint64_t sub_1AFD4EF80()
{
  v0[9] = (*(uint64_t (**)(void, void, void, void))(v0[7] + 8))(v0[3], v0[4], v0[5], v0[6]);
  unint64_t v1 = (void *)swift_task_alloc();
  v0[10] = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_1AFD4F044;
  return MEMORY[0x1F415EBC8](v0 + 2);
}

uint64_t sub_1AFD4F044()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    BOOL v2 = sub_1AFD4F17C;
  }
  else
  {
    swift_release();
    BOOL v2 = sub_1AFD4F160;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1AFD4F160()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 16));
}

uint64_t sub_1AFD4F17C()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1AFD4F1E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

ValueMetadata *type metadata accessor for TagStocksFeedConfiguration()
{
  return &type metadata for TagStocksFeedConfiguration;
}

uint64_t sub_1AFD4F204(void *a1, uint64_t a2)
{
  sub_1AFD4F71C(0, &qword_1E9AF9E88, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v10 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFD4F6C8();
  sub_1AFFCBE78();
  v10[1] = a2;
  sub_1AFD3ABD0();
  sub_1AFD4F780((unint64_t *)&qword_1EB819DC8);
  sub_1AFFCBC58();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1AFD4F388()
{
  return 0x73444964656566;
}

uint64_t sub_1AFD4F3A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x73444964656566 && a2 == 0xE700000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1AFFCBCE8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

void sub_1AFD4F438(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1AFD4F444(uint64_t a1)
{
  unint64_t v2 = sub_1AFD4F6C8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFD4F480(uint64_t a1)
{
  unint64_t v2 = sub_1AFD4F6C8();

  return MEMORY[0x1F41862B0](a1, v2);
}

void *sub_1AFD4F4BC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1AFD4F504(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1AFD4F4E8(void *a1)
{
  return sub_1AFD4F204(a1, *v1);
}

void *sub_1AFD4F504(void *a1)
{
  sub_1AFD4F71C(0, &qword_1EB8112D0, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v7 = (char *)v10 - v6;
  uint64_t v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFD4F6C8();
  sub_1AFFCBE68();
  if (!v1)
  {
    sub_1AFD3ABD0();
    sub_1AFD4F780((unint64_t *)&qword_1EB819DD8);
    sub_1AFFCBB58();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v8 = (void *)v10[1];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v8;
}

unint64_t sub_1AFD4F6C8()
{
  unint64_t result = qword_1EB810C78;
  if (!qword_1EB810C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB810C78);
  }
  return result;
}

void sub_1AFD4F71C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1AFD4F6C8();
    unint64_t v7 = a3(a1, &type metadata for TagStocksFeedConfiguration.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1AFD4F780(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1AFD3ABD0();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TagStocksFeedConfiguration.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1AFD4F87CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for TagStocksFeedConfiguration.CodingKeys()
{
  return &type metadata for TagStocksFeedConfiguration.CodingKeys;
}

unint64_t sub_1AFD4F8B8()
{
  unint64_t result = qword_1E9AF9E90;
  if (!qword_1E9AF9E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AF9E90);
  }
  return result;
}

unint64_t sub_1AFD4F910()
{
  unint64_t result = qword_1EB810C88;
  if (!qword_1EB810C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB810C88);
  }
  return result;
}

unint64_t sub_1AFD4F968()
{
  unint64_t result = qword_1EB810C80;
  if (!qword_1EB810C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB810C80);
  }
  return result;
}

uint64_t sub_1AFD4F9BC()
{
  uint64_t v0 = sub_1AFFC9528();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1AFFC9A78();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v5 = sub_1AFFCAE58();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v6 = sub_1AFFC9548();
  __swift_allocate_value_buffer(v6, qword_1E9AF9E98);
  __swift_project_value_buffer(v6, (uint64_t)qword_1E9AF9E98);
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4F275D0], v0);
  return sub_1AFFC9558();
}

uint64_t sub_1AFD4FB9C@<X0>(uint64_t a1@<X8>)
{
  return sub_1AFD32B4C(&qword_1E9AF8C20, MEMORY[0x1E4F27608], (uint64_t)qword_1E9AF9E98, a1);
}

uint64_t sub_1AFD4FBD4()
{
  sub_1AFD50900(0, &qword_1EB816B00, MEMORY[0x1E4F27608], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)v12 - v1;
  v12[0] = sub_1AFFC9528();
  uint64_t v3 = *(void *)(v12[0] - 8);
  MEMORY[0x1F4188790](v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1AFFC9A78();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v7 = sub_1AFFCAE58();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v8 = sub_1AFFC9548();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = sub_1AFFC8CD8();
  __swift_allocate_value_buffer(v10, qword_1E9AF9EB0);
  __swift_project_value_buffer(v10, (uint64_t)qword_1E9AF9EB0);
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, *MEMORY[0x1E4F275D0], v12[0]);
  sub_1AFFC9558();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_1AFFC8CE8();
}

uint64_t sub_1AFD4FEDC@<X0>(uint64_t a1@<X8>)
{
  return sub_1AFD32B4C(&qword_1E9AF8C28, MEMORY[0x1E4F18510], (uint64_t)qword_1E9AF9EB0, a1);
}

uint64_t sub_1AFD4FF14()
{
  return 1;
}

uint64_t sub_1AFD4FF1C()
{
  return sub_1AFFC8998();
}

uint64_t sub_1AFD4FF40(uint64_t a1)
{
  sub_1AFD2CEB0(a1, (uint64_t)v3);
  sub_1AFD2CEB0((uint64_t)v3, (uint64_t)&v2);
  sub_1AFFC8E48();
  sub_1AFFC89A8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  return swift_release();
}

uint64_t sub_1AFD4FFA0(uint64_t a1)
{
  sub_1AFD2CEB0(a1, (uint64_t)v3);
  sub_1AFFC89A8();
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

void (*sub_1AFD4FFE4(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1AFFC8988();
  return sub_1AFD333FC;
}

uint64_t sub_1AFD50040()
{
  return sub_1AFFC89B8();
}

uint64_t sub_1AFD50064@<X0>(uint64_t *a1@<X8>)
{
  sub_1AFD50900(0, &qword_1EB8167D8, (uint64_t (*)(uint64_t))sub_1AFD50100, MEMORY[0x1E4F18188]);
  sub_1AFFC8A08();
  sub_1AFFC89F8();
  uint64_t result = sub_1AFFC89C8();
  *a1 = result;
  return result;
}

unint64_t sub_1AFD50100()
{
  unint64_t result = qword_1EB816B10;
  if (!qword_1EB816B10)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB816B10);
  }
  return result;
}

uint64_t sub_1AFD50158(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 + 80) = a1;
  *(void *)(v2 + 88) = v3;
  return MEMORY[0x1F4188298](sub_1AFD5017C, 0, 0);
}

uint64_t sub_1AFD5017C()
{
  sub_1AFFC8E48();
  sub_1AFFC8998();
  swift_release();
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  v0[7] = 0;
  v0[8] = 0;
  v0[9] = 0x8000000000000000;
  uint64_t v5 = (uint64_t (*)(void *, uint64_t, uint64_t))(*(void *)(v2 + 8) + **(int **)(v2 + 8));
  uint64_t v3 = (void *)swift_task_alloc();
  v0[12] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1AFD502B8;
  return v5(v0 + 7, v1, v2);
}

uint64_t sub_1AFD502B8()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1AFD5043C;
  }
  else {
    uint64_t v2 = sub_1AFD503CC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1AFD503CC()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  sub_1AFFC8B08();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1AFD5043C()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

unint64_t sub_1AFD504A4()
{
  unint64_t result = qword_1EB8113E0;
  if (!qword_1EB8113E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8113E0);
  }
  return result;
}

unint64_t sub_1AFD504FC()
{
  unint64_t result = qword_1EB8113D0;
  if (!qword_1EB8113D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8113D0);
  }
  return result;
}

uint64_t sub_1AFD50550()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1AFD5056C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1AFD505BC()
{
  unint64_t result = qword_1EB8113D8;
  if (!qword_1EB8113D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8113D8);
  }
  return result;
}

uint64_t sub_1AFD50610@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E9AF8C20 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1AFFC9548();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1E9AF9E98);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1AFD506C0(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1AFD3503C;
  uint64_t v5 = *v1;
  v4[10] = a1;
  v4[11] = v5;
  return MEMORY[0x1F4188298](sub_1AFD5017C, 0, 0);
}

uint64_t sub_1AFD50770@<X0>(uint64_t *a1@<X8>)
{
  sub_1AFD50900(0, &qword_1EB8167D8, (uint64_t (*)(uint64_t))sub_1AFD50100, MEMORY[0x1E4F18188]);
  sub_1AFFC8A08();
  sub_1AFFC89F8();
  uint64_t result = sub_1AFFC89C8();
  *a1 = result;
  return result;
}

uint64_t sub_1AFD5080C(uint64_t a1)
{
  unint64_t v2 = sub_1AFD505BC();

  return MEMORY[0x1F40D3C90](a1, v2);
}

uint64_t sub_1AFD50848()
{
  sub_1AFFC8E48();
  sub_1AFFC8998();

  return swift_release();
}

ValueMetadata *type metadata accessor for OpenBusinessNewsIntent()
{
  return &type metadata for OpenBusinessNewsIntent;
}

unint64_t sub_1AFD508A8()
{
  unint64_t result = qword_1E9AF9CD8;
  if (!qword_1E9AF9CD8)
  {
    sub_1AFD3765C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AF9CD8);
  }
  return result;
}

void sub_1AFD50900(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1AFD50964(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a1 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](a1);
  sub_1AFD50AA0();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v2, a1);
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v8 + v7, (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_1AFFCA658();
}

void sub_1AFD50AA0()
{
  if (!qword_1EB817DD0)
  {
    unint64_t v0 = sub_1AFFCA788();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB817DD0);
    }
  }
}

uint64_t sub_1AFD50AFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a4 + 8) + **(int **)(a4 + 8));
  unint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v7;
  *unint64_t v7 = v4;
  v7[1] = sub_1AFD56424;
  return v9(a3, a4);
}

uint64_t sub_1AFD50BF4()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);

  return MEMORY[0x1F4186498](v0, v4, v5);
}

uint64_t sub_1AFD50C7C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = v1
     + ((*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80));
  unint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *unint64_t v7 = v2;
  v7[1] = sub_1AFD56424;
  return sub_1AFD50AFC(a1, v6, v4, v5);
}

uint64_t sub_1AFD50D64(uint64_t a1, uint64_t a2)
{
  unint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 8) + **(int **)(a2 + 8));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1AFD3503C;
  return v7(a1, a2);
}

uint64_t sub_1AFD50E54()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WatchlistDeprecationService()
{
  return self;
}

uint64_t sub_1AFD50EC0()
{
  *(void *)(v1 + 80) = v0;
  return MEMORY[0x1F4188298](sub_1AFD50EE0, 0, 0);
}

uint64_t sub_1AFD50EE0()
{
  if (qword_1EB816A98 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1AFFCA8A8();
  v0[11] = __swift_project_value_buffer(v1, (uint64_t)qword_1EB831A98);
  uint64_t v2 = sub_1AFFCA888();
  os_log_type_t v3 = sub_1AFFCB478();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_1AFD01000, v2, v3, "Will check for deprecated stocks...", v4, 2u);
    MEMORY[0x1B3E8F0D0](v4, -1, -1);
  }
  uint64_t v5 = (void *)v0[10];

  uint64_t v6 = v5 + 2;
  uint64_t v7 = v5[5];
  uint64_t v8 = v5[6];
  __swift_project_boxed_opaque_existential_1(v6, v7);
  v0[12] = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 136))(v7, v8);
  uint64_t v9 = (void *)swift_task_alloc();
  v0[13] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_1AFD51078;
  return MEMORY[0x1F415EBC8](v0 + 8);
}

uint64_t sub_1AFD51078()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1AFD516CC;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1AFD51194;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1AFD51194()
{
  uint64_t v21 = v0;
  uint64_t v1 = *(void *)(v0 + 64);
  *(void *)(v0 + 120) = v1;
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_1AFFCA888();
  os_log_type_t v3 = sub_1AFFCB478();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    uint64_t v20 = v5;
    *(_DWORD *)uint64_t v4 = 136315138;
    uint64_t v6 = sub_1AFFC8E38();
    uint64_t v7 = MEMORY[0x1B3E8D630](v6, &type metadata for Watchlist);
    unint64_t v9 = v8;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 72) = sub_1AFD36BA8(v7, v9, &v20);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AFD01000, v2, v3, "Deprecating stocks from watchlists %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v5, -1, -1);
    MEMORY[0x1B3E8F0D0](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v10 = *(void *)(v1 + 16);
  *(void *)(v0 + 128) = v10;
  if (v10)
  {
    *(void *)(v0 + 136) = 0;
    uint64_t v11 = *(void *)(v0 + 120);
    uint64_t v12 = *(void *)(v11 + 40);
    *(void *)(v0 + 144) = v12;
    uint64_t v13 = *(void *)(v11 + 48);
    *(void *)(v0 + 152) = v13;
    uint64_t v14 = *(void *)(v11 + 64);
    *(void *)(v0 + 160) = v14;
    __int16 v15 = *(_WORD *)(v11 + 72);
    uint64_t v16 = *(void *)(v11 + 56);
    *(void *)(v0 + 16) = *(void *)(v11 + 32);
    *(void *)(v0 + 24) = v12;
    *(void *)(v0 + 32) = v13;
    *(void *)(v0 + 40) = v16;
    *(void *)(v0 + 48) = v14;
    *(_WORD *)(v0 + 56) = v15;
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    uint64_t v17 = (void *)swift_task_alloc();
    *(void *)(v0 + 168) = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_1AFD51440;
    return sub_1AFD517A8(v0 + 16);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v19 = *(uint64_t (**)(void))(v0 + 8);
    return v19();
  }
}

uint64_t sub_1AFD51440()
{
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0)
  {
    uint64_t v2 = sub_1AFD51730;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1AFD51580;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1AFD51580()
{
  uint64_t v1 = *(void *)(v0 + 136) + 1;
  if (v1 == *(void *)(v0 + 128))
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
  else
  {
    *(void *)(v0 + 136) = v1;
    uint64_t v4 = *(void *)(v0 + 120) + 48 * v1;
    uint64_t v5 = *(void *)(v4 + 40);
    *(void *)(v0 + 144) = v5;
    uint64_t v6 = *(void *)(v4 + 48);
    *(void *)(v0 + 152) = v6;
    uint64_t v7 = *(void *)(v4 + 64);
    *(void *)(v0 + 160) = v7;
    __int16 v8 = *(_WORD *)(v4 + 72);
    uint64_t v9 = *(void *)(v4 + 56);
    *(void *)(v0 + 16) = *(void *)(v4 + 32);
    *(void *)(v0 + 24) = v5;
    *(void *)(v0 + 32) = v6;
    *(void *)(v0 + 40) = v9;
    *(void *)(v0 + 48) = v7;
    *(_WORD *)(v0 + 56) = v8;
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    uint64_t v10 = (void *)swift_task_alloc();
    *(void *)(v0 + 168) = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_1AFD51440;
    return sub_1AFD517A8(v0 + 16);
  }
}

uint64_t sub_1AFD516CC()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1AFD51730()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1AFD517A8(uint64_t a1)
{
  *(void *)(v2 + 4552) = v1;
  sub_1AFD56344(0, (unint64_t *)&qword_1EB817C98, MEMORY[0x1E4FAA8C8]);
  *(void *)(v2 + 4560) = swift_task_alloc();
  *(void *)(v2 + 4568) = *(void *)a1;
  *(_OWORD *)(v2 + 4576) = *(_OWORD *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 32);
  *(void *)(v2 + 4592) = *(void *)(a1 + 24);
  *(void *)(v2 + 4600) = v4;
  *(_WORD *)(v2 + 4298) = *(_WORD *)(a1 + 40);
  return MEMORY[0x1F4188298](sub_1AFD5187C, 0, 0);
}

uint64_t sub_1AFD5187C()
{
  uint64_t v1 = v0[573];
  uint64_t v2 = (void *)v0[570];
  uint64_t v3 = (void *)v0[569];
  swift_getObjectType();
  uint64_t v4 = v3[11];
  uint64_t v5 = v3[12];
  __swift_project_boxed_opaque_existential_1(v3 + 8, v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  sub_1AFD55D10((uint64_t)(v0 + 2));
  *uint64_t v2 = v0[46];
  uint64_t v6 = *MEMORY[0x1E4FAA8C0];
  uint64_t v7 = sub_1AFFC9DE8();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(void *, uint64_t, uint64_t))(v8 + 104))(v2, v6, v7);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v2, 0, 1, v7);
  v0[576] = sub_1AFE58214(v1);
  sub_1AFD562CC((uint64_t)v2);
  uint64_t v9 = (void *)swift_task_alloc();
  v0[577] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_1AFD51A4C;
  return MEMORY[0x1F415EBC8](v0 + 567);
}

uint64_t sub_1AFD51A4C()
{
  *(void *)(*(void *)v1 + 4624) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1AFD55264;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1AFD51B68;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1AFD51B68()
{
  uint64_t v111 = v0;
  uint64_t v1 = (__int16 *)(v0 + 4298);
  uint64_t v108 = *(void *)(v0 + 4536);
  *(void *)(v0 + 4632) = v108;
  if (qword_1EB816A98 != -1) {
LABEL_71:
  }
    swift_once();
  uint64_t v2 = sub_1AFFCA8A8();
  *(void *)(v0 + 4640) = __swift_project_value_buffer(v2, (uint64_t)qword_1EB831A98);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v3 = sub_1AFFCA888();
  os_log_type_t v4 = sub_1AFFCB478();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v102 = swift_slowAlloc();
    uint64_t v110 = v102;
    *(_DWORD *)uint64_t v5 = 136315138;
    uint64_t v6 = sub_1AFFC8E38();
    uint64_t v7 = MEMORY[0x1B3E8D630](v6, MEMORY[0x1E4FBB1A0]);
    uint64_t v8 = v1;
    unint64_t v10 = v9;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 4544) = sub_1AFD36BA8(v7, v10, &v110);
    sub_1AFFCB688();
    uint64_t v1 = v8;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AFD01000, v3, v4, "Checking records for deprecated stocks, symbols=%s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v102, -1, -1);
    MEMORY[0x1B3E8F0D0](v5, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  int64_t v11 = 0;
  char v12 = *(unsigned char *)(v108 + 32);
  *((unsigned char *)v1 + 2) = v12;
  uint64_t v13 = 1 << v12;
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v108 + 64);
  int64_t v16 = (unint64_t)(v13 + 63) >> 6;
  while (v15)
  {
    unint64_t v17 = __clz(__rbit64(v15));
    v15 &= v15 - 1;
    unint64_t v18 = v17 | (v11 << 6);
    uint64_t v19 = *(void *)(v0 + 4632);
LABEL_9:
    *(void *)(v0 + 4656) = v15;
    *(void *)(v0 + 4648) = v11;
    uint64_t v20 = *(void *)(v19 + 56);
    if (*(unsigned char *)(v20 + 104 * v18 + 80))
    {
      unsigned __int8 v107 = v1;
      uint64_t v25 = (uint64_t *)(*(void *)(v19 + 48) + 16 * v18);
      uint64_t v27 = *v25;
      unint64_t v26 = v25[1];
      uint64_t v28 = v20 + 104 * v18;
      unint64_t v29 = *(void *)(v28 + 96);
      uint64_t v100 = *(void *)(v28 + 88);
      sub_1AFFC8E38();
      swift_bridgeObjectRetain_n();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      int v30 = sub_1AFFCA888();
      os_log_type_t v31 = sub_1AFFCB478();
      if (os_log_type_enabled(v30, v31))
      {
        uint64_t v32 = swift_slowAlloc();
        uint64_t v33 = v27;
        uint64_t v34 = swift_slowAlloc();
        uint64_t v110 = v34;
        *(_DWORD *)uint64_t v32 = 136315138;
        sub_1AFFC8E38();
        *(void *)(v32 + 4) = sub_1AFD36BA8(v33, v26, &v110);
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1AFD01000, v30, v31, "Will deprecated stock, symbol=%s", (uint8_t *)v32, 0xCu);
        swift_arrayDestroy();
        uint64_t v35 = v34;
        uint64_t v36 = v107;
        MEMORY[0x1B3E8F0D0](v35, -1, -1);
        MEMORY[0x1B3E8F0D0](v32, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();

        uint64_t v33 = v27;
        uint64_t v36 = v107;
      }
      uint64_t v99 = v33;
      if (!v29) {
        goto LABEL_41;
      }
      sub_1AFF9ED38(45, 0xE100000000000000, v100, v29);
      if (v39) {
        goto LABEL_41;
      }
      *(void *)(v0 + 4464) = 0;
      *(void *)(v0 + 4472) = 0xE000000000000000;
      sub_1AFFCAFA8();
      sub_1AFFCAD78();
      char v40 = sub_1AFFCB018();
      swift_bridgeObjectRelease();
      if ((v40 & 1) == 0)
      {
        *(void *)(v0 + 4480) = 0;
        *(void *)(v0 + 4488) = 0xE000000000000000;
        sub_1AFFCAFA8();
        sub_1AFFCAD78();
        char v41 = sub_1AFFCB018();
        swift_bridgeObjectRelease();
        if ((v41 & 1) == 0)
        {
LABEL_41:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain_n();
          uint64_t v59 = sub_1AFFCA888();
          os_log_type_t v60 = sub_1AFFCB478();
          if (os_log_type_enabled(v59, v60))
          {
            uint64_t v61 = swift_slowAlloc();
            uint64_t v62 = swift_slowAlloc();
            uint64_t v110 = v62;
            *(_DWORD *)uint64_t v61 = 136315138;
            sub_1AFFC8E38();
            *(void *)(v61 + 4) = sub_1AFD36BA8(v33, v26, &v110);
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_1AFD01000, v59, v60, "Deprecating %s with no replacement", (uint8_t *)v61, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x1B3E8F0D0](v62, -1, -1);
            MEMORY[0x1B3E8F0D0](v61, -1, -1);
          }
          else
          {
            swift_bridgeObjectRelease_n();
          }

          unint64_t v63 = v26;
          uint64_t v109 = v0 + 4448;
          __int16 v64 = *v36;
          uint64_t v65 = *(void *)(v0 + 4600);
          uint64_t v66 = *(void *)(v0 + 4592);
          uint64_t v67 = *(void *)(v0 + 4568);
          uint64_t v68 = *(void **)(v0 + 4552);
          uint64_t v69 = v68[5];
          uint64_t v70 = v68[6];
          long long v105 = *(_OWORD *)(v0 + 4576);
          __swift_project_boxed_opaque_existential_1(v68 + 2, v69);
          *(void *)(v0 + 4400) = v67;
          *(_OWORD *)(v36 + 55) = v105;
          *(void *)(v0 + 4424) = v66;
          *(void *)(v0 + 4432) = v65;
          v36[71] = v64;
          *(void *)(v0 + 4712) = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v70 + 168))(v99, v63, v0 + 4400, v69, v70);
          swift_bridgeObjectRelease();
          uint64_t v71 = (void *)swift_task_alloc();
          *(void *)(v0 + 4720) = v71;
          *uint64_t v71 = v0;
          uint64_t v72 = sub_1AFD544E8;
          goto LABEL_45;
        }
      }
      uint64_t v98 = *(void *)(v0 + 4584);
      sub_1AFFC8E38();
      unint64_t v42 = sub_1AFFCAF88();
      unint64_t v43 = sub_1AFD563D8(v42, v100, v29);
      uint64_t v45 = v44;
      uint64_t v47 = v46;
      uint64_t v49 = v48;
      swift_bridgeObjectRelease();
      uint64_t v104 = MEMORY[0x1B3E8D390](v43, v45, v47, v49);
      unint64_t v51 = v50;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v52 = *(void *)(v98 + 16);
      if (v52)
      {
        uint64_t v53 = *(void *)(v0 + 4584);
        uint64_t v54 = v104;
        if (*(void *)(v53 + 32) == v104 && *(void *)(v53 + 40) == v51 || (sub_1AFFCBCE8() & 1) != 0) {
          goto LABEL_39;
        }
        if (v52 != 1)
        {
          uint64_t v92 = *(void *)(v0 + 4584);
          uint64_t v54 = v104;
          if (*(void *)(v92 + 48) == v104 && *(void *)(v92 + 56) == v51 || (uint64_t v73 = sub_1AFFCBCE8(), (v73 & 1) != 0))
          {
LABEL_39:
            swift_bridgeObjectRetain_n();
            sub_1AFFC8E38();
            uint64_t v55 = sub_1AFFCA888();
            os_log_type_t v56 = sub_1AFFCB478();
            if (os_log_type_enabled(v55, v56))
            {
              uint64_t v57 = swift_slowAlloc();
              uint64_t v58 = swift_slowAlloc();
              uint64_t v110 = v58;
              *(_DWORD *)uint64_t v57 = 136315394;
              sub_1AFFC8E38();
              *(void *)(v57 + 4) = sub_1AFD36BA8(v33, v26, &v110);
              swift_bridgeObjectRelease_n();
              *(_WORD *)(v57 + 12) = 2080;
              sub_1AFFC8E38();
              *(void *)(v57 + 14) = sub_1AFD36BA8(v54, v51, &v110);
              swift_bridgeObjectRelease_n();
              _os_log_impl(&dword_1AFD01000, v55, v56, "Deprecating %s and ignoring its replacement %s because it's already in the watchlist", (uint8_t *)v57, 0x16u);
              swift_arrayDestroy();
              MEMORY[0x1B3E8F0D0](v58, -1, -1);
              MEMORY[0x1B3E8F0D0](v57, -1, -1);
            }
            else
            {
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
            }

            uint64_t v109 = v0 + 4512;
            __int16 v74 = *v107;
            uint64_t v75 = *(void *)(v0 + 4600);
            uint64_t v76 = *(void *)(v0 + 4592);
            uint64_t v77 = *(void *)(v0 + 4568);
            uint64_t v78 = *(void **)(v0 + 4552);
            uint64_t v79 = v78[5];
            uint64_t v80 = v78[6];
            long long v106 = *(_OWORD *)(v0 + 4576);
            __swift_project_boxed_opaque_existential_1(v78 + 2, v79);
            *(void *)(v0 + 4304) = v77;
            *(_OWORD *)(v107 + 7) = v106;
            *(void *)(v0 + 4328) = v76;
            *(void *)(v0 + 4336) = v75;
            v107[23] = v74;
            *(void *)(v0 + 4664) = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v80 + 168))(v99, v26, v0 + 4304, v79, v80);
            swift_bridgeObjectRelease();
            uint64_t v71 = (void *)swift_task_alloc();
            *(void *)(v0 + 4672) = v71;
            *uint64_t v71 = v0;
            uint64_t v72 = sub_1AFD529C4;
LABEL_45:
            v71[1] = v72;
            uint64_t v73 = v109;
            return MEMORY[0x1F415EBC8](v73);
          }
          if (v52 != 2)
          {
            uint64_t v93 = 0;
            uint64_t v94 = 2;
            uint64_t v54 = v104;
            while (1)
            {
              uint64_t v95 = v94 + 1;
              if (__OFADD__(v94, 1)) {
                break;
              }
              uint64_t v96 = *(void *)(v0 + 4584) + v93;
              if (*(void *)(v96 + 64) == v104 && *(void *)(v96 + 72) == v51) {
                goto LABEL_39;
              }
              uint64_t v73 = sub_1AFFCBCE8();
              if (v73) {
                goto LABEL_39;
              }
              ++v94;
              v93 += 16;
              if (v95 == v52) {
                goto LABEL_52;
              }
            }
            __break(1u);
            return MEMORY[0x1F415EBC8](v73);
          }
        }
      }
LABEL_52:
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      uint64_t v81 = sub_1AFFCA888();
      os_log_type_t v82 = sub_1AFFCB478();
      unint64_t v101 = v51;
      if (os_log_type_enabled(v81, v82))
      {
        uint64_t v83 = swift_slowAlloc();
        uint64_t v84 = swift_slowAlloc();
        uint64_t v110 = v84;
        *(_DWORD *)uint64_t v83 = 136315394;
        sub_1AFFC8E38();
        *(void *)(v83 + 4) = sub_1AFD36BA8(v33, v26, &v110);
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v83 + 12) = 2080;
        sub_1AFFC8E38();
        *(void *)(v83 + 14) = sub_1AFD36BA8(v104, v51, &v110);
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1AFD01000, v81, v82, "Deprecating %s and replacing it with %s", (uint8_t *)v83, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1B3E8F0D0](v84, -1, -1);
        MEMORY[0x1B3E8F0D0](v83, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }

      uint64_t v109 = v0 + 4496;
      __int16 v85 = *v107;
      uint64_t v86 = *(void *)(v0 + 4600);
      uint64_t v87 = *(void *)(v0 + 4592);
      uint64_t v88 = *(void *)(v0 + 4568);
      uint64_t v89 = *(void **)(v0 + 4552);
      uint64_t v90 = v89[5];
      uint64_t v91 = v89[6];
      long long v103 = *(_OWORD *)(v0 + 4576);
      __swift_project_boxed_opaque_existential_1(v89 + 2, v90);
      *(void *)(v0 + 4352) = v88;
      *(_OWORD *)(v107 + 31) = v103;
      *(void *)(v0 + 4376) = v87;
      *(void *)(v0 + 4384) = v86;
      v107[47] = v85;
      *(void *)(v0 + 4688) = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v91 + 192))(v99, v26, v104, v101, v0 + 4352, v90, v91);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v71 = (void *)swift_task_alloc();
      *(void *)(v0 + 4696) = v71;
      *uint64_t v71 = v0;
      uint64_t v72 = sub_1AFD53760;
      goto LABEL_45;
    }
  }
  int64_t v21 = v11 + 1;
  if (__OFADD__(v11, 1))
  {
    __break(1u);
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  uint64_t v19 = *(void *)(v0 + 4632);
  if (v21 >= v16) {
    goto LABEL_27;
  }
  uint64_t v22 = v19 + 64;
  unint64_t v23 = *(void *)(v19 + 64 + 8 * v21);
  ++v11;
  if (v23) {
    goto LABEL_24;
  }
  int64_t v11 = v21 + 1;
  if (v21 + 1 >= v16) {
    goto LABEL_27;
  }
  unint64_t v23 = *(void *)(v22 + 8 * v11);
  if (v23) {
    goto LABEL_24;
  }
  int64_t v11 = v21 + 2;
  if (v21 + 2 >= v16) {
    goto LABEL_27;
  }
  unint64_t v23 = *(void *)(v22 + 8 * v11);
  if (v23)
  {
LABEL_24:
    unint64_t v15 = (v23 - 1) & v23;
    unint64_t v18 = __clz(__rbit64(v23)) + (v11 << 6);
    goto LABEL_9;
  }
  int64_t v24 = v21 + 3;
  if (v24 < v16)
  {
    unint64_t v23 = *(void *)(v22 + 8 * v24);
    if (!v23)
    {
      while (1)
      {
        int64_t v11 = v24 + 1;
        if (__OFADD__(v24, 1)) {
          goto LABEL_70;
        }
        if (v11 >= v16) {
          goto LABEL_27;
        }
        unint64_t v23 = *(void *)(v22 + 8 * v11);
        ++v24;
        if (v23) {
          goto LABEL_24;
        }
      }
    }
    int64_t v11 = v24;
    goto LABEL_24;
  }
LABEL_27:
  swift_release();
  swift_task_dealloc();
  uint64_t v37 = *(uint64_t (**)(void))(v0 + 8);
  return v37();
}

uint64_t sub_1AFD529C4()
{
  *(void *)(*(void *)v1 + 4680) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_release();
    uint64_t v2 = sub_1AFD55494;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v2 = sub_1AFD52B0C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1AFD52B0C(uint64_t a1)
{
  uint64_t v99 = v1;
  unint64_t v2 = *(void *)(v1 + 4656);
  int64_t v3 = *(void *)(v1 + 4648);
  while (v2)
  {
    unint64_t v4 = __clz(__rbit64(v2));
    v2 &= v2 - 1;
    unint64_t v5 = v4 | (v3 << 6);
    a1 = *(void *)(v1 + 4632);
LABEL_3:
    *(void *)(v1 + 4656) = v2;
    *(void *)(v1 + 4648) = v3;
    uint64_t v6 = *(void *)(a1 + 56);
    if (*(unsigned char *)(v6 + 104 * v5 + 80))
    {
      char v12 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v5);
      uint64_t v13 = *v12;
      unint64_t v14 = v12[1];
      uint64_t v15 = v6 + 104 * v5;
      unint64_t v16 = *(void *)(v15 + 96);
      uint64_t v91 = (__int16 *)(v1 + 4298);
      uint64_t v92 = *(void *)(v15 + 88);
      sub_1AFFC8E38();
      swift_bridgeObjectRetain_n();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      unint64_t v17 = sub_1AFFCA888();
      os_log_type_t v18 = sub_1AFFCB478();
      if (os_log_type_enabled(v17, v18))
      {
        uint64_t v19 = swift_slowAlloc();
        uint64_t v20 = swift_slowAlloc();
        uint64_t v98 = v20;
        *(_DWORD *)uint64_t v19 = 136315138;
        sub_1AFFC8E38();
        *(void *)(v19 + 4) = sub_1AFD36BA8(v13, v14, &v98);
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1AFD01000, v17, v18, "Will deprecated stock, symbol=%s", (uint8_t *)v19, 0xCu);
        swift_arrayDestroy();
        uint64_t v21 = v20;
        uint64_t v22 = v13;
        MEMORY[0x1B3E8F0D0](v21, -1, -1);
        MEMORY[0x1B3E8F0D0](v19, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();

        uint64_t v22 = v13;
      }
      uint64_t v90 = v22;
      if (!v16) {
        goto LABEL_35;
      }
      sub_1AFF9ED38(45, 0xE100000000000000, v92, v16);
      if (v25) {
        goto LABEL_35;
      }
      *(void *)(v1 + 4464) = 0;
      *(void *)(v1 + 4472) = 0xE000000000000000;
      sub_1AFFCAFA8();
      sub_1AFFCAD78();
      char v26 = sub_1AFFCB018();
      swift_bridgeObjectRelease();
      if ((v26 & 1) == 0)
      {
        *(void *)(v1 + 4480) = 0;
        *(void *)(v1 + 4488) = 0xE000000000000000;
        sub_1AFFCAFA8();
        sub_1AFFCAD78();
        char v27 = sub_1AFFCB018();
        swift_bridgeObjectRelease();
        if ((v27 & 1) == 0)
        {
LABEL_35:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain_n();
          unint64_t v50 = sub_1AFFCA888();
          os_log_type_t v51 = sub_1AFFCB478();
          if (os_log_type_enabled(v50, v51))
          {
            uint64_t v52 = swift_slowAlloc();
            uint64_t v53 = swift_slowAlloc();
            uint64_t v98 = v53;
            *(_DWORD *)uint64_t v52 = 136315138;
            sub_1AFFC8E38();
            *(void *)(v52 + 4) = sub_1AFD36BA8(v22, v14, &v98);
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_1AFD01000, v50, v51, "Deprecating %s with no replacement", (uint8_t *)v52, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x1B3E8F0D0](v53, -1, -1);
            MEMORY[0x1B3E8F0D0](v52, -1, -1);
          }
          else
          {
            swift_bridgeObjectRelease_n();
          }

          unint64_t v54 = v14;
          __int16 v55 = *v91;
          uint64_t v56 = *(void *)(v1 + 4600);
          uint64_t v57 = *(void *)(v1 + 4592);
          uint64_t v58 = *(void *)(v1 + 4568);
          uint64_t v59 = *(void **)(v1 + 4552);
          uint64_t v60 = v59[5];
          uint64_t v61 = v59[6];
          long long v95 = *(_OWORD *)(v1 + 4576);
          __swift_project_boxed_opaque_existential_1(v59 + 2, v60);
          *(void *)(v1 + 4400) = v58;
          *(_OWORD *)(v1 + 4408) = v95;
          *(void *)(v1 + 4424) = v57;
          *(void *)(v1 + 4432) = v56;
          *(_WORD *)(v1 + 4440) = v55;
          *(void *)(v1 + 4712) = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v61 + 168))(v90, v54, v1 + 4400, v60, v61);
          swift_bridgeObjectRelease();
          uint64_t v62 = (void *)swift_task_alloc();
          *(void *)(v1 + 4720) = v62;
          *uint64_t v62 = v1;
          v62[1] = sub_1AFD544E8;
          a1 = v1 + 4448;
          goto LABEL_39;
        }
      }
      uint64_t v28 = v22;
      unint64_t v29 = v14;
      uint64_t v30 = *(void *)(v1 + 4584);
      sub_1AFFC8E38();
      unint64_t v31 = sub_1AFFCAF88();
      unint64_t v32 = sub_1AFD563D8(v31, v92, v16);
      uint64_t v34 = v33;
      uint64_t v36 = v35;
      uint64_t v38 = v37;
      swift_bridgeObjectRelease();
      uint64_t v96 = MEMORY[0x1B3E8D390](v32, v34, v36, v38);
      unint64_t v40 = v39;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v41 = *(void *)(v30 + 16);
      unint64_t v42 = v29;
      uint64_t v43 = v28;
      if (v41)
      {
        uint64_t v44 = *(void *)(v1 + 4584);
        uint64_t v45 = v96;
        if (*(void *)(v44 + 32) == v96 && *(void *)(v44 + 40) == v40 || (sub_1AFFCBCE8() & 1) != 0) {
          goto LABEL_33;
        }
        if (v41 != 1)
        {
          uint64_t v84 = *(void *)(v1 + 4584);
          uint64_t v45 = v96;
          if (*(void *)(v84 + 48) == v96 && *(void *)(v84 + 56) == v40 || (a1 = sub_1AFFCBCE8(), (a1 & 1) != 0))
          {
LABEL_33:
            swift_bridgeObjectRetain_n();
            sub_1AFFC8E38();
            uint64_t v46 = sub_1AFFCA888();
            os_log_type_t v47 = sub_1AFFCB478();
            if (os_log_type_enabled(v46, v47))
            {
              uint64_t v48 = swift_slowAlloc();
              uint64_t v49 = swift_slowAlloc();
              uint64_t v98 = v49;
              *(_DWORD *)uint64_t v48 = 136315394;
              sub_1AFFC8E38();
              *(void *)(v48 + 4) = sub_1AFD36BA8(v43, v42, &v98);
              swift_bridgeObjectRelease_n();
              *(_WORD *)(v48 + 12) = 2080;
              sub_1AFFC8E38();
              *(void *)(v48 + 14) = sub_1AFD36BA8(v45, v40, &v98);
              swift_bridgeObjectRelease_n();
              _os_log_impl(&dword_1AFD01000, v46, v47, "Deprecating %s and ignoring its replacement %s because it's already in the watchlist", (uint8_t *)v48, 0x16u);
              swift_arrayDestroy();
              MEMORY[0x1B3E8F0D0](v49, -1, -1);
              MEMORY[0x1B3E8F0D0](v48, -1, -1);
            }
            else
            {
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
            }

            __int16 v63 = *v91;
            uint64_t v64 = *(void *)(v1 + 4600);
            uint64_t v65 = *(void *)(v1 + 4592);
            uint64_t v66 = *(void *)(v1 + 4568);
            uint64_t v67 = *(void **)(v1 + 4552);
            uint64_t v68 = v67[5];
            uint64_t v69 = v67[6];
            long long v97 = *(_OWORD *)(v1 + 4576);
            __swift_project_boxed_opaque_existential_1(v67 + 2, v68);
            *(void *)(v1 + 4304) = v66;
            *(_OWORD *)(v1 + 4312) = v97;
            *(void *)(v1 + 4328) = v65;
            *(void *)(v1 + 4336) = v64;
            *(_WORD *)(v1 + 4344) = v63;
            *(void *)(v1 + 4664) = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v69 + 168))(v90, v42, v1 + 4304, v68, v69);
            swift_bridgeObjectRelease();
            uint64_t v70 = (void *)swift_task_alloc();
            *(void *)(v1 + 4672) = v70;
            *uint64_t v70 = v1;
            v70[1] = sub_1AFD529C4;
            a1 = v1 + 4512;
LABEL_39:
            return MEMORY[0x1F415EBC8](a1);
          }
          if (v41 != 2)
          {
            uint64_t v85 = 0;
            uint64_t v86 = 2;
            uint64_t v45 = v96;
            do
            {
              uint64_t v87 = v86 + 1;
              if (__OFADD__(v86, 1)) {
                goto LABEL_65;
              }
              uint64_t v88 = *(void *)(v1 + 4584) + v85;
              if (*(void *)(v88 + 64) == v96 && *(void *)(v88 + 72) == v40) {
                goto LABEL_33;
              }
              a1 = sub_1AFFCBCE8();
              if (a1) {
                goto LABEL_33;
              }
              ++v86;
              v85 += 16;
            }
            while (v87 != v41);
          }
        }
      }
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      uint64_t v71 = sub_1AFFCA888();
      os_log_type_t v72 = sub_1AFFCB478();
      unint64_t v93 = v40;
      if (os_log_type_enabled(v71, v72))
      {
        uint64_t v73 = swift_slowAlloc();
        uint64_t v74 = swift_slowAlloc();
        uint64_t v98 = v74;
        *(_DWORD *)uint64_t v73 = 136315394;
        sub_1AFFC8E38();
        *(void *)(v73 + 4) = sub_1AFD36BA8(v43, v42, &v98);
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v73 + 12) = 2080;
        sub_1AFFC8E38();
        *(void *)(v73 + 14) = sub_1AFD36BA8(v96, v40, &v98);
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1AFD01000, v71, v72, "Deprecating %s and replacing it with %s", (uint8_t *)v73, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1B3E8F0D0](v74, -1, -1);
        MEMORY[0x1B3E8F0D0](v73, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }

      unint64_t v75 = v42;
      __int16 v76 = *v91;
      uint64_t v77 = *(void *)(v1 + 4600);
      uint64_t v78 = *(void *)(v1 + 4592);
      uint64_t v79 = *(void *)(v1 + 4568);
      uint64_t v80 = *(void **)(v1 + 4552);
      uint64_t v81 = v80[5];
      uint64_t v82 = v80[6];
      long long v94 = *(_OWORD *)(v1 + 4576);
      __swift_project_boxed_opaque_existential_1(v80 + 2, v81);
      *(void *)(v1 + 4352) = v79;
      *(_OWORD *)(v1 + 4360) = v94;
      *(void *)(v1 + 4376) = v78;
      *(void *)(v1 + 4384) = v77;
      *(_WORD *)(v1 + 4392) = v76;
      *(void *)(v1 + 4688) = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v82 + 192))(v90, v75, v96, v93, v1 + 4352, v81, v82);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v83 = (void *)swift_task_alloc();
      *(void *)(v1 + 4696) = v83;
      *uint64_t v83 = v1;
      v83[1] = sub_1AFD53760;
      a1 = v1 + 4496;
      goto LABEL_39;
    }
  }
  int64_t v7 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
    goto LABEL_64;
  }
  int64_t v8 = (unint64_t)((1 << *(unsigned char *)(v1 + 4300)) + 63) >> 6;
  a1 = *(void *)(v1 + 4632);
  if (v7 >= v8) {
    goto LABEL_21;
  }
  uint64_t v9 = a1 + 64;
  unint64_t v10 = *(void *)(a1 + 64 + 8 * v7);
  ++v3;
  if (v10) {
    goto LABEL_18;
  }
  int64_t v3 = v7 + 1;
  if (v7 + 1 >= v8) {
    goto LABEL_21;
  }
  unint64_t v10 = *(void *)(v9 + 8 * v3);
  if (v10) {
    goto LABEL_18;
  }
  int64_t v3 = v7 + 2;
  if (v7 + 2 >= v8) {
    goto LABEL_21;
  }
  unint64_t v10 = *(void *)(v9 + 8 * v3);
  if (v10)
  {
LABEL_18:
    unint64_t v2 = (v10 - 1) & v10;
    unint64_t v5 = __clz(__rbit64(v10)) + (v3 << 6);
    goto LABEL_3;
  }
  int64_t v11 = v7 + 3;
  if (v11 < v8)
  {
    unint64_t v10 = *(void *)(v9 + 8 * v11);
    if (!v10)
    {
      while (1)
      {
        int64_t v3 = v11 + 1;
        if (__OFADD__(v11, 1)) {
          break;
        }
        if (v3 >= v8) {
          goto LABEL_21;
        }
        unint64_t v10 = *(void *)(v9 + 8 * v3);
        ++v11;
        if (v10) {
          goto LABEL_18;
        }
      }
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
      return MEMORY[0x1F415EBC8](a1);
    }
    int64_t v3 = v11;
    goto LABEL_18;
  }
LABEL_21:
  swift_release();
  swift_task_dealloc();
  unint64_t v23 = *(uint64_t (**)(void))(v1 + 8);
  return v23();
}

uint64_t sub_1AFD53760()
{
  *(void *)(*(void *)v1 + 4704) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_release();
    unint64_t v2 = sub_1AFD556BC;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    unint64_t v2 = sub_1AFD538A8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1AFD538A8(uint64_t a1)
{
  uint64_t v98 = v1;
  unint64_t v2 = *(void *)(v1 + 4656);
  int64_t v3 = *(void *)(v1 + 4648);
  while (v2)
  {
    unint64_t v4 = __clz(__rbit64(v2));
    v2 &= v2 - 1;
    unint64_t v5 = v4 | (v3 << 6);
    a1 = *(void *)(v1 + 4632);
LABEL_3:
    *(void *)(v1 + 4656) = v2;
    *(void *)(v1 + 4648) = v3;
    uint64_t v6 = *(void *)(a1 + 56);
    if (*(unsigned char *)(v6 + 104 * v5 + 80))
    {
      char v12 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v5);
      uint64_t v13 = *v12;
      unint64_t v14 = v12[1];
      uint64_t v15 = v6 + 104 * v5;
      unint64_t v16 = *(void *)(v15 + 96);
      uint64_t v89 = (__int16 *)(v1 + 4298);
      uint64_t v90 = *(void *)(v15 + 88);
      sub_1AFFC8E38();
      swift_bridgeObjectRetain_n();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      unint64_t v17 = sub_1AFFCA888();
      os_log_type_t v18 = sub_1AFFCB478();
      uint64_t v96 = v13;
      if (os_log_type_enabled(v17, v18))
      {
        uint64_t v19 = swift_slowAlloc();
        uint64_t v20 = swift_slowAlloc();
        uint64_t v97 = v20;
        *(_DWORD *)uint64_t v19 = 136315138;
        sub_1AFFC8E38();
        *(void *)(v19 + 4) = sub_1AFD36BA8(v13, v14, &v97);
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1AFD01000, v17, v18, "Will deprecated stock, symbol=%s", (uint8_t *)v19, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1B3E8F0D0](v20, -1, -1);
        MEMORY[0x1B3E8F0D0](v19, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      if (!v16) {
        goto LABEL_35;
      }
      sub_1AFF9ED38(45, 0xE100000000000000, v90, v16);
      if (v23) {
        goto LABEL_35;
      }
      *(void *)(v1 + 4464) = 0;
      *(void *)(v1 + 4472) = 0xE000000000000000;
      sub_1AFFCAFA8();
      sub_1AFFCAD78();
      char v24 = sub_1AFFCB018();
      swift_bridgeObjectRelease();
      if ((v24 & 1) == 0)
      {
        *(void *)(v1 + 4480) = 0;
        *(void *)(v1 + 4488) = 0xE000000000000000;
        sub_1AFFCAFA8();
        sub_1AFFCAD78();
        char v25 = sub_1AFFCB018();
        swift_bridgeObjectRelease();
        if ((v25 & 1) == 0)
        {
LABEL_35:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain_n();
          uint64_t v48 = sub_1AFFCA888();
          os_log_type_t v49 = sub_1AFFCB478();
          if (os_log_type_enabled(v48, v49))
          {
            uint64_t v50 = swift_slowAlloc();
            uint64_t v51 = swift_slowAlloc();
            uint64_t v97 = v51;
            *(_DWORD *)uint64_t v50 = 136315138;
            sub_1AFFC8E38();
            *(void *)(v50 + 4) = sub_1AFD36BA8(v96, v14, &v97);
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_1AFD01000, v48, v49, "Deprecating %s with no replacement", (uint8_t *)v50, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x1B3E8F0D0](v51, -1, -1);
            MEMORY[0x1B3E8F0D0](v50, -1, -1);
          }
          else
          {
            swift_bridgeObjectRelease_n();
          }

          unint64_t v52 = v14;
          uint64_t v95 = v1 + 4448;
          __int16 v53 = *v89;
          uint64_t v54 = *(void *)(v1 + 4600);
          uint64_t v55 = *(void *)(v1 + 4592);
          uint64_t v56 = *(void *)(v1 + 4568);
          uint64_t v57 = *(void **)(v1 + 4552);
          uint64_t v58 = v57[5];
          uint64_t v59 = v57[6];
          long long v92 = *(_OWORD *)(v1 + 4576);
          __swift_project_boxed_opaque_existential_1(v57 + 2, v58);
          *(void *)(v1 + 4400) = v56;
          *(_OWORD *)(v1 + 4408) = v92;
          *(void *)(v1 + 4424) = v55;
          *(void *)(v1 + 4432) = v54;
          *(_WORD *)(v1 + 4440) = v53;
          *(void *)(v1 + 4712) = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v59 + 168))(v96, v52, v1 + 4400, v58, v59);
          swift_bridgeObjectRelease();
          uint64_t v60 = (void *)swift_task_alloc();
          *(void *)(v1 + 4720) = v60;
          void *v60 = v1;
          uint64_t v61 = sub_1AFD544E8;
          goto LABEL_39;
        }
      }
      unint64_t v26 = v14;
      uint64_t v27 = *(void *)(v1 + 4584);
      sub_1AFFC8E38();
      unint64_t v28 = sub_1AFFCAF88();
      unint64_t v29 = sub_1AFD563D8(v28, v90, v16);
      uint64_t v31 = v30;
      uint64_t v33 = v32;
      uint64_t v35 = v34;
      swift_bridgeObjectRelease();
      uint64_t v36 = MEMORY[0x1B3E8D390](v29, v31, v33, v35);
      unint64_t v38 = v37;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v39 = *(void *)(v27 + 16);
      unint64_t v40 = v26;
      unint64_t v41 = v38;
      if (v39)
      {
        uint64_t v42 = *(void *)(v1 + 4584);
        uint64_t v43 = v36;
        if (*(void *)(v42 + 32) == v36 && *(void *)(v42 + 40) == v38 || (sub_1AFFCBCE8() & 1) != 0) {
          goto LABEL_33;
        }
        if (v39 != 1)
        {
          uint64_t v83 = *(void *)(v1 + 4584);
          uint64_t v43 = v36;
          if (*(void *)(v83 + 48) == v36 && *(void *)(v83 + 56) == v38 || (a1 = sub_1AFFCBCE8(), (a1 & 1) != 0))
          {
LABEL_33:
            swift_bridgeObjectRetain_n();
            sub_1AFFC8E38();
            uint64_t v44 = sub_1AFFCA888();
            os_log_type_t v45 = sub_1AFFCB478();
            if (os_log_type_enabled(v44, v45))
            {
              uint64_t v46 = swift_slowAlloc();
              uint64_t v47 = swift_slowAlloc();
              uint64_t v97 = v47;
              *(_DWORD *)uint64_t v46 = 136315394;
              sub_1AFFC8E38();
              *(void *)(v46 + 4) = sub_1AFD36BA8(v96, v40, &v97);
              swift_bridgeObjectRelease_n();
              *(_WORD *)(v46 + 12) = 2080;
              sub_1AFFC8E38();
              *(void *)(v46 + 14) = sub_1AFD36BA8(v43, v41, &v97);
              swift_bridgeObjectRelease_n();
              _os_log_impl(&dword_1AFD01000, v44, v45, "Deprecating %s and ignoring its replacement %s because it's already in the watchlist", (uint8_t *)v46, 0x16u);
              swift_arrayDestroy();
              MEMORY[0x1B3E8F0D0](v47, -1, -1);
              MEMORY[0x1B3E8F0D0](v46, -1, -1);
            }
            else
            {
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
            }

            unint64_t v62 = v40;
            uint64_t v95 = v1 + 4512;
            __int16 v63 = *v89;
            uint64_t v64 = *(void *)(v1 + 4600);
            uint64_t v65 = *(void *)(v1 + 4592);
            uint64_t v66 = *(void *)(v1 + 4568);
            uint64_t v67 = *(void **)(v1 + 4552);
            uint64_t v68 = v67[5];
            uint64_t v69 = v67[6];
            long long v93 = *(_OWORD *)(v1 + 4576);
            __swift_project_boxed_opaque_existential_1(v67 + 2, v68);
            *(void *)(v1 + 4304) = v66;
            *(_OWORD *)(v1 + 4312) = v93;
            *(void *)(v1 + 4328) = v65;
            *(void *)(v1 + 4336) = v64;
            *(_WORD *)(v1 + 4344) = v63;
            *(void *)(v1 + 4664) = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v69 + 168))(v96, v62, v1 + 4304, v68, v69);
            swift_bridgeObjectRelease();
            uint64_t v60 = (void *)swift_task_alloc();
            *(void *)(v1 + 4672) = v60;
            void *v60 = v1;
            uint64_t v61 = sub_1AFD529C4;
LABEL_39:
            v60[1] = v61;
            a1 = v95;
LABEL_40:
            return MEMORY[0x1F415EBC8](a1);
          }
          if (v39 != 2)
          {
            uint64_t v84 = 0;
            uint64_t v85 = 2;
            do
            {
              uint64_t v86 = v85 + 1;
              if (__OFADD__(v85, 1)) {
                goto LABEL_66;
              }
              uint64_t v87 = *(void *)(v1 + 4584) + v84;
              uint64_t v43 = v36;
              if (*(void *)(v87 + 64) == v36 && *(void *)(v87 + 72) == v41) {
                goto LABEL_33;
              }
              a1 = sub_1AFFCBCE8();
              if (a1) {
                goto LABEL_33;
              }
              ++v85;
              v84 += 16;
            }
            while (v86 != v39);
          }
        }
      }
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      uint64_t v70 = sub_1AFFCA888();
      os_log_type_t v71 = sub_1AFFCB478();
      unint64_t v91 = v41;
      if (os_log_type_enabled(v70, v71))
      {
        uint64_t v72 = swift_slowAlloc();
        uint64_t v73 = swift_slowAlloc();
        uint64_t v97 = v73;
        *(_DWORD *)uint64_t v72 = 136315394;
        sub_1AFFC8E38();
        *(void *)(v72 + 4) = sub_1AFD36BA8(v96, v40, &v97);
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v72 + 12) = 2080;
        sub_1AFFC8E38();
        *(void *)(v72 + 14) = sub_1AFD36BA8(v36, v41, &v97);
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1AFD01000, v70, v71, "Deprecating %s and replacing it with %s", (uint8_t *)v72, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1B3E8F0D0](v73, -1, -1);
        MEMORY[0x1B3E8F0D0](v72, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }

      unint64_t v74 = v40;
      __int16 v75 = *v89;
      uint64_t v76 = *(void *)(v1 + 4600);
      uint64_t v77 = *(void *)(v1 + 4592);
      uint64_t v78 = *(void *)(v1 + 4568);
      uint64_t v79 = *(void **)(v1 + 4552);
      uint64_t v80 = v79[5];
      uint64_t v81 = v79[6];
      long long v94 = *(_OWORD *)(v1 + 4576);
      __swift_project_boxed_opaque_existential_1(v79 + 2, v80);
      *(void *)(v1 + 4352) = v78;
      *(_OWORD *)(v1 + 4360) = v94;
      *(void *)(v1 + 4376) = v77;
      *(void *)(v1 + 4384) = v76;
      *(_WORD *)(v1 + 4392) = v75;
      *(void *)(v1 + 4688) = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v81 + 192))(v96, v74, v36, v91, v1 + 4352, v80, v81);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v82 = (void *)swift_task_alloc();
      *(void *)(v1 + 4696) = v82;
      *uint64_t v82 = v1;
      v82[1] = sub_1AFD53760;
      a1 = v1 + 4496;
      goto LABEL_40;
    }
  }
  int64_t v7 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
    goto LABEL_65;
  }
  int64_t v8 = (unint64_t)((1 << *(unsigned char *)(v1 + 4300)) + 63) >> 6;
  a1 = *(void *)(v1 + 4632);
  if (v7 >= v8) {
    goto LABEL_21;
  }
  uint64_t v9 = a1 + 64;
  unint64_t v10 = *(void *)(a1 + 64 + 8 * v7);
  ++v3;
  if (v10) {
    goto LABEL_18;
  }
  int64_t v3 = v7 + 1;
  if (v7 + 1 >= v8) {
    goto LABEL_21;
  }
  unint64_t v10 = *(void *)(v9 + 8 * v3);
  if (v10) {
    goto LABEL_18;
  }
  int64_t v3 = v7 + 2;
  if (v7 + 2 >= v8) {
    goto LABEL_21;
  }
  unint64_t v10 = *(void *)(v9 + 8 * v3);
  if (v10)
  {
LABEL_18:
    unint64_t v2 = (v10 - 1) & v10;
    unint64_t v5 = __clz(__rbit64(v10)) + (v3 << 6);
    goto LABEL_3;
  }
  int64_t v11 = v7 + 3;
  if (v11 < v8)
  {
    unint64_t v10 = *(void *)(v9 + 8 * v11);
    if (!v10)
    {
      while (1)
      {
        int64_t v3 = v11 + 1;
        if (__OFADD__(v11, 1)) {
          break;
        }
        if (v3 >= v8) {
          goto LABEL_21;
        }
        unint64_t v10 = *(void *)(v9 + 8 * v3);
        ++v11;
        if (v10) {
          goto LABEL_18;
        }
      }
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
      return MEMORY[0x1F415EBC8](a1);
    }
    int64_t v3 = v11;
    goto LABEL_18;
  }
LABEL_21:
  swift_release();
  swift_task_dealloc();
  uint64_t v21 = *(uint64_t (**)(void))(v1 + 8);
  return v21();
}

uint64_t sub_1AFD544E8()
{
  *(void *)(*(void *)v1 + 4728) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_release();
    unint64_t v2 = sub_1AFD558E4;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    unint64_t v2 = sub_1AFD54630;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1AFD54630(uint64_t a1)
{
  uint64_t v93 = v1;
  unint64_t v2 = *(void *)(v1 + 4656);
  int64_t v3 = *(void *)(v1 + 4648);
  while (v2)
  {
    unint64_t v4 = __clz(__rbit64(v2));
    v2 &= v2 - 1;
    unint64_t v5 = v4 | (v3 << 6);
    a1 = *(void *)(v1 + 4632);
LABEL_3:
    *(void *)(v1 + 4656) = v2;
    *(void *)(v1 + 4648) = v3;
    uint64_t v6 = *(void *)(a1 + 56);
    if (*(unsigned char *)(v6 + 104 * v5 + 80))
    {
      char v12 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v5);
      uint64_t v13 = *v12;
      unint64_t v14 = v12[1];
      uint64_t v15 = v6 + 104 * v5;
      unint64_t v16 = *(void *)(v15 + 96);
      uint64_t v84 = (__int16 *)(v1 + 4298);
      uint64_t v85 = *(void *)(v15 + 88);
      sub_1AFFC8E38();
      swift_bridgeObjectRetain_n();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      unint64_t v17 = sub_1AFFCA888();
      os_log_type_t v18 = sub_1AFFCB478();
      uint64_t v91 = v13;
      if (os_log_type_enabled(v17, v18))
      {
        uint64_t v19 = swift_slowAlloc();
        uint64_t v20 = swift_slowAlloc();
        uint64_t v92 = v20;
        *(_DWORD *)uint64_t v19 = 136315138;
        sub_1AFFC8E38();
        *(void *)(v19 + 4) = sub_1AFD36BA8(v13, v14, &v92);
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1AFD01000, v17, v18, "Will deprecated stock, symbol=%s", (uint8_t *)v19, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1B3E8F0D0](v20, -1, -1);
        MEMORY[0x1B3E8F0D0](v19, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      if (!v16) {
        goto LABEL_35;
      }
      sub_1AFF9ED38(45, 0xE100000000000000, v85, v16);
      if (v23) {
        goto LABEL_35;
      }
      *(void *)(v1 + 4464) = 0;
      *(void *)(v1 + 4472) = 0xE000000000000000;
      sub_1AFFCAFA8();
      sub_1AFFCAD78();
      char v24 = sub_1AFFCB018();
      swift_bridgeObjectRelease();
      if ((v24 & 1) == 0)
      {
        *(void *)(v1 + 4480) = 0;
        *(void *)(v1 + 4488) = 0xE000000000000000;
        sub_1AFFCAFA8();
        sub_1AFFCAD78();
        char v25 = sub_1AFFCB018();
        swift_bridgeObjectRelease();
        if ((v25 & 1) == 0)
        {
LABEL_35:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain_n();
          uint64_t v46 = sub_1AFFCA888();
          os_log_type_t v47 = sub_1AFFCB478();
          if (os_log_type_enabled(v46, v47))
          {
            uint64_t v48 = swift_slowAlloc();
            uint64_t v49 = swift_slowAlloc();
            uint64_t v92 = v49;
            *(_DWORD *)uint64_t v48 = 136315138;
            sub_1AFFC8E38();
            *(void *)(v48 + 4) = sub_1AFD36BA8(v13, v14, &v92);
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_1AFD01000, v46, v47, "Deprecating %s with no replacement", (uint8_t *)v48, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x1B3E8F0D0](v49, -1, -1);
            MEMORY[0x1B3E8F0D0](v48, -1, -1);
          }
          else
          {
            swift_bridgeObjectRelease_n();
          }

          __int16 v50 = *v84;
          uint64_t v51 = *(void *)(v1 + 4600);
          uint64_t v52 = *(void *)(v1 + 4592);
          uint64_t v53 = *(void *)(v1 + 4568);
          uint64_t v54 = *(void **)(v1 + 4552);
          uint64_t v55 = v54[5];
          uint64_t v56 = v54[6];
          long long v89 = *(_OWORD *)(v1 + 4576);
          __swift_project_boxed_opaque_existential_1(v54 + 2, v55);
          *(void *)(v1 + 4400) = v53;
          *(_OWORD *)(v1 + 4408) = v89;
          *(void *)(v1 + 4424) = v52;
          *(void *)(v1 + 4432) = v51;
          *(_WORD *)(v1 + 4440) = v50;
          *(void *)(v1 + 4712) = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v56 + 168))(v13, v14, v1 + 4400, v55, v56);
          swift_bridgeObjectRelease();
          uint64_t v57 = (void *)swift_task_alloc();
          *(void *)(v1 + 4720) = v57;
          void *v57 = v1;
          v57[1] = sub_1AFD544E8;
          a1 = v1 + 4448;
          goto LABEL_48;
        }
      }
      unint64_t v26 = v14;
      uint64_t v27 = *(void *)(v1 + 4584);
      sub_1AFFC8E38();
      unint64_t v28 = sub_1AFFCAF88();
      unint64_t v29 = sub_1AFD563D8(v28, v85, v16);
      uint64_t v31 = v30;
      uint64_t v33 = v32;
      uint64_t v35 = v34;
      swift_bridgeObjectRelease();
      uint64_t v36 = MEMORY[0x1B3E8D390](v29, v31, v33, v35);
      unint64_t v38 = v37;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v39 = *(void *)(v27 + 16);
      unint64_t v40 = v26;
      if (v39)
      {
        uint64_t v41 = *(void *)(v1 + 4584);
        if (*(void *)(v41 + 32) == v36 && *(void *)(v41 + 40) == v38 || (sub_1AFFCBCE8() & 1) != 0) {
          goto LABEL_33;
        }
        if (v39 != 1)
        {
          uint64_t v78 = *(void *)(v1 + 4584);
          if (*(void *)(v78 + 48) == v36 && *(void *)(v78 + 56) == v38 || (a1 = sub_1AFFCBCE8(), (a1 & 1) != 0))
          {
LABEL_33:
            swift_bridgeObjectRetain_n();
            sub_1AFFC8E38();
            uint64_t v42 = sub_1AFFCA888();
            os_log_type_t v43 = sub_1AFFCB478();
            if (os_log_type_enabled(v42, v43))
            {
              uint64_t v44 = swift_slowAlloc();
              uint64_t v45 = swift_slowAlloc();
              uint64_t v92 = v45;
              *(_DWORD *)uint64_t v44 = 136315394;
              sub_1AFFC8E38();
              *(void *)(v44 + 4) = sub_1AFD36BA8(v91, v40, &v92);
              swift_bridgeObjectRelease_n();
              *(_WORD *)(v44 + 12) = 2080;
              sub_1AFFC8E38();
              *(void *)(v44 + 14) = sub_1AFD36BA8(v36, v38, &v92);
              swift_bridgeObjectRelease_n();
              _os_log_impl(&dword_1AFD01000, v42, v43, "Deprecating %s and ignoring its replacement %s because it's already in the watchlist", (uint8_t *)v44, 0x16u);
              swift_arrayDestroy();
              MEMORY[0x1B3E8F0D0](v45, -1, -1);
              MEMORY[0x1B3E8F0D0](v44, -1, -1);
            }
            else
            {
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
            }

            uint64_t v90 = v1 + 4512;
            __int16 v58 = *v84;
            uint64_t v59 = *(void *)(v1 + 4600);
            uint64_t v60 = *(void *)(v1 + 4592);
            uint64_t v61 = *(void *)(v1 + 4568);
            unint64_t v62 = *(void **)(v1 + 4552);
            uint64_t v63 = v62[5];
            uint64_t v64 = v62[6];
            long long v87 = *(_OWORD *)(v1 + 4576);
            __swift_project_boxed_opaque_existential_1(v62 + 2, v63);
            *(void *)(v1 + 4304) = v61;
            *(_OWORD *)(v1 + 4312) = v87;
            *(void *)(v1 + 4328) = v60;
            *(void *)(v1 + 4336) = v59;
            *(_WORD *)(v1 + 4344) = v58;
            *(void *)(v1 + 4664) = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v64 + 168))(v91, v40, v1 + 4304, v63, v64);
            swift_bridgeObjectRelease();
            uint64_t v65 = (void *)swift_task_alloc();
            *(void *)(v1 + 4672) = v65;
            *uint64_t v65 = v1;
            uint64_t v66 = sub_1AFD529C4;
LABEL_47:
            v65[1] = v66;
            a1 = v90;
LABEL_48:
            return MEMORY[0x1F415EBC8](a1);
          }
          if (v39 != 2)
          {
            uint64_t v79 = 0;
            uint64_t v80 = 2;
            do
            {
              uint64_t v81 = v80 + 1;
              if (__OFADD__(v80, 1)) {
                goto LABEL_66;
              }
              uint64_t v82 = *(void *)(v1 + 4584) + v79;
              if (*(void *)(v82 + 64) == v36 && *(void *)(v82 + 72) == v38) {
                goto LABEL_33;
              }
              a1 = sub_1AFFCBCE8();
              if (a1) {
                goto LABEL_33;
              }
              ++v80;
              v79 += 16;
            }
            while (v81 != v39);
          }
        }
      }
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      uint64_t v67 = sub_1AFFCA888();
      os_log_type_t v68 = sub_1AFFCB478();
      unint64_t v86 = v38;
      if (os_log_type_enabled(v67, v68))
      {
        uint64_t v69 = swift_slowAlloc();
        uint64_t v70 = swift_slowAlloc();
        uint64_t v92 = v70;
        *(_DWORD *)uint64_t v69 = 136315394;
        sub_1AFFC8E38();
        *(void *)(v69 + 4) = sub_1AFD36BA8(v91, v40, &v92);
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v69 + 12) = 2080;
        sub_1AFFC8E38();
        *(void *)(v69 + 14) = sub_1AFD36BA8(v36, v38, &v92);
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1AFD01000, v67, v68, "Deprecating %s and replacing it with %s", (uint8_t *)v69, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1B3E8F0D0](v70, -1, -1);
        MEMORY[0x1B3E8F0D0](v69, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }

      uint64_t v90 = v1 + 4496;
      __int16 v71 = *v84;
      uint64_t v72 = *(void *)(v1 + 4600);
      uint64_t v73 = *(void *)(v1 + 4592);
      uint64_t v74 = *(void *)(v1 + 4568);
      __int16 v75 = *(void **)(v1 + 4552);
      uint64_t v76 = v75[5];
      uint64_t v77 = v75[6];
      long long v88 = *(_OWORD *)(v1 + 4576);
      __swift_project_boxed_opaque_existential_1(v75 + 2, v76);
      *(void *)(v1 + 4352) = v74;
      *(_OWORD *)(v1 + 4360) = v88;
      *(void *)(v1 + 4376) = v73;
      *(void *)(v1 + 4384) = v72;
      *(_WORD *)(v1 + 4392) = v71;
      *(void *)(v1 + 4688) = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v77 + 192))(v91, v40, v36, v86, v1 + 4352, v76, v77);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v65 = (void *)swift_task_alloc();
      *(void *)(v1 + 4696) = v65;
      *uint64_t v65 = v1;
      uint64_t v66 = sub_1AFD53760;
      goto LABEL_47;
    }
  }
  int64_t v7 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
    goto LABEL_65;
  }
  int64_t v8 = (unint64_t)((1 << *(unsigned char *)(v1 + 4300)) + 63) >> 6;
  a1 = *(void *)(v1 + 4632);
  if (v7 >= v8) {
    goto LABEL_21;
  }
  uint64_t v9 = a1 + 64;
  unint64_t v10 = *(void *)(a1 + 64 + 8 * v7);
  ++v3;
  if (v10) {
    goto LABEL_18;
  }
  int64_t v3 = v7 + 1;
  if (v7 + 1 >= v8) {
    goto LABEL_21;
  }
  unint64_t v10 = *(void *)(v9 + 8 * v3);
  if (v10) {
    goto LABEL_18;
  }
  int64_t v3 = v7 + 2;
  if (v7 + 2 >= v8) {
    goto LABEL_21;
  }
  unint64_t v10 = *(void *)(v9 + 8 * v3);
  if (v10)
  {
LABEL_18:
    unint64_t v2 = (v10 - 1) & v10;
    unint64_t v5 = __clz(__rbit64(v10)) + (v3 << 6);
    goto LABEL_3;
  }
  int64_t v11 = v7 + 3;
  if (v11 < v8)
  {
    unint64_t v10 = *(void *)(v9 + 8 * v11);
    if (!v10)
    {
      while (1)
      {
        int64_t v3 = v11 + 1;
        if (__OFADD__(v11, 1)) {
          break;
        }
        if (v3 >= v8) {
          goto LABEL_21;
        }
        unint64_t v10 = *(void *)(v9 + 8 * v3);
        ++v11;
        if (v10) {
          goto LABEL_18;
        }
      }
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
      return MEMORY[0x1F415EBC8](a1);
    }
    int64_t v3 = v11;
    goto LABEL_18;
  }
LABEL_21:
  swift_release();
  swift_task_dealloc();
  uint64_t v21 = *(uint64_t (**)(void))(v1 + 8);
  return v21();
}

uint64_t sub_1AFD55264()
{
  swift_release();
  uint64_t v1 = (void *)v0[578];
  if (qword_1EB816A98 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1AFFCA8A8();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EB831A98);
  id v3 = v1;
  id v4 = v1;
  unint64_t v5 = sub_1AFFCA888();
  os_log_type_t v6 = sub_1AFFCB468();
  if (os_log_type_enabled(v5, v6))
  {
    int64_t v7 = (uint8_t *)swift_slowAlloc();
    int64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)int64_t v7 = 138412290;
    id v9 = v1;
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    v0[566] = v10;
    sub_1AFFCB688();
    void *v8 = v10;

    _os_log_impl(&dword_1AFD01000, v5, v6, "Failed to deprecate stock in watchlist. Error=%@", v7, 0xCu);
    sub_1AFD56344(0, (unint64_t *)&qword_1EB8181B0, (void (*)(uint64_t))sub_1AFD56398);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v8, -1, -1);
    MEMORY[0x1B3E8F0D0](v7, -1, -1);
  }
  else
  {
  }
  swift_willThrow();
  swift_task_dealloc();
  int64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_1AFD55494()
{
  swift_release();
  uint64_t v1 = (void *)v0[585];
  if (qword_1EB816A98 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1AFFCA8A8();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EB831A98);
  id v3 = v1;
  id v4 = v1;
  unint64_t v5 = sub_1AFFCA888();
  os_log_type_t v6 = sub_1AFFCB468();
  if (os_log_type_enabled(v5, v6))
  {
    int64_t v7 = (uint8_t *)swift_slowAlloc();
    int64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)int64_t v7 = 138412290;
    id v9 = v1;
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    v0[566] = v10;
    sub_1AFFCB688();
    void *v8 = v10;

    _os_log_impl(&dword_1AFD01000, v5, v6, "Failed to deprecate stock in watchlist. Error=%@", v7, 0xCu);
    sub_1AFD56344(0, (unint64_t *)&qword_1EB8181B0, (void (*)(uint64_t))sub_1AFD56398);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v8, -1, -1);
    MEMORY[0x1B3E8F0D0](v7, -1, -1);
  }
  else
  {
  }
  swift_willThrow();
  swift_task_dealloc();
  int64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_1AFD556BC()
{
  swift_release();
  uint64_t v1 = (void *)v0[588];
  if (qword_1EB816A98 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1AFFCA8A8();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EB831A98);
  id v3 = v1;
  id v4 = v1;
  unint64_t v5 = sub_1AFFCA888();
  os_log_type_t v6 = sub_1AFFCB468();
  if (os_log_type_enabled(v5, v6))
  {
    int64_t v7 = (uint8_t *)swift_slowAlloc();
    int64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)int64_t v7 = 138412290;
    id v9 = v1;
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    v0[566] = v10;
    sub_1AFFCB688();
    void *v8 = v10;

    _os_log_impl(&dword_1AFD01000, v5, v6, "Failed to deprecate stock in watchlist. Error=%@", v7, 0xCu);
    sub_1AFD56344(0, (unint64_t *)&qword_1EB8181B0, (void (*)(uint64_t))sub_1AFD56398);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v8, -1, -1);
    MEMORY[0x1B3E8F0D0](v7, -1, -1);
  }
  else
  {
  }
  swift_willThrow();
  swift_task_dealloc();
  int64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_1AFD558E4()
{
  swift_release();
  uint64_t v1 = (void *)v0[591];
  if (qword_1EB816A98 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1AFFCA8A8();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EB831A98);
  id v3 = v1;
  id v4 = v1;
  unint64_t v5 = sub_1AFFCA888();
  os_log_type_t v6 = sub_1AFFCB468();
  if (os_log_type_enabled(v5, v6))
  {
    int64_t v7 = (uint8_t *)swift_slowAlloc();
    int64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)int64_t v7 = 138412290;
    id v9 = v1;
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    v0[566] = v10;
    sub_1AFFCB688();
    void *v8 = v10;

    _os_log_impl(&dword_1AFD01000, v5, v6, "Failed to deprecate stock in watchlist. Error=%@", v7, 0xCu);
    sub_1AFD56344(0, (unint64_t *)&qword_1EB8181B0, (void (*)(uint64_t))sub_1AFD56398);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v8, -1, -1);
    MEMORY[0x1B3E8F0D0](v7, -1, -1);
  }
  else
  {
  }
  swift_willThrow();
  swift_task_dealloc();
  int64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_1AFD55B0C()
{
  uint64_t v2 = *v0;
  id v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *id v3 = v1;
  v3[1] = sub_1AFD3503C;
  v3[10] = v2;
  return MEMORY[0x1F4188298](sub_1AFD50EE0, 0, 0);
}

uint64_t type metadata accessor for NoopWatchlistDeprecationService()
{
  return self;
}

uint64_t sub_1AFD55BDC()
{
  return MEMORY[0x1F4188298](sub_1AFD55BF8, 0, 0);
}

uint64_t sub_1AFD55BF8()
{
  if (qword_1EB816A98 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1AFFCA8A8();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EB831A98);
  uint64_t v2 = sub_1AFFCA888();
  os_log_type_t v3 = sub_1AFFCB478();
  if (os_log_type_enabled(v2, v3))
  {
    id v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v4 = 0;
    _os_log_impl(&dword_1AFD01000, v2, v3, "Will fetch for deprecated stocks using noop deprecation service", v4, 2u);
    MEMORY[0x1B3E8F0D0](v4, -1, -1);
  }

  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_1AFD55D10(uint64_t a1)
{
  uint64_t v16 = *(void *)(a1 + 632);
  uint64_t v17 = *(void *)(a1 + 624);
  uint64_t v14 = *(void *)(a1 + 648);
  uint64_t v15 = *(void *)(a1 + 640);
  uint64_t v12 = *(void *)(a1 + 664);
  uint64_t v13 = *(void *)(a1 + 656);
  uint64_t v10 = *(void *)(a1 + 680);
  uint64_t v11 = *(void *)(a1 + 672);
  long long v9 = *(_OWORD *)(a1 + 688);
  long long v7 = *(_OWORD *)(a1 + 720);
  long long v8 = *(_OWORD *)(a1 + 704);
  long long v6 = *(_OWORD *)(a1 + 736);
  long long v4 = *(_OWORD *)(a1 + 768);
  long long v5 = *(_OWORD *)(a1 + 752);
  uint64_t v3 = *(void *)(a1 + 784);
  uint64_t v18 = *(void *)(a1 + 4024);
  uint64_t v19 = *(void *)(a1 + 4016);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1AFD56100(v17, v16, v15, v14, v13, v12, v11, v10, v9, *((uint64_t *)&v9 + 1), v8, *((uint64_t *)&v8 + 1), v7, *((uint64_t *)&v7 + 1), v6, *((uint64_t *)&v6 + 1), v5, *((uint64_t *)&v5 + 1), v4,
    *((uint64_t *)&v4 + 1),
    v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1AFD56284(v19, v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AFD56100(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  if (a21 != 1)
  {
    sub_1AFD56220(result);
    sub_1AFD56220(a5);
    sub_1AFD56220(a9);
    sub_1AFD56220(a13);
    sub_1AFD56220(a17);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1AFD56220(uint64_t result)
{
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1AFD56284(uint64_t a1, uint64_t a2)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1AFD562CC(uint64_t a1)
{
  sub_1AFD56344(0, (unint64_t *)&qword_1EB817C98, MEMORY[0x1E4FAA8C8]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1AFD56344(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1AFFCB658();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_1AFD56398()
{
  unint64_t result = qword_1EB8181A8;
  if (!qword_1EB8181A8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB8181A8);
  }
  return result;
}

unint64_t sub_1AFD563D8(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (4 * v3 >= result >> 14) {
    return sub_1AFFCB048();
  }
  __break(1u);
  return result;
}

uint64_t destroy for SDSNewsResponse(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 16);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *initializeWithCopy for SDSNewsResponse(void *a1, void *a2)
{
  *a1 = *a2;
  unint64_t v4 = a1 + 1;
  uint64_t v5 = a2[2];
  sub_1AFFC8E38();
  if (v5)
  {
    a1[1] = a2[1];
    a1[2] = v5;
    uint64_t v6 = a2[4];
    a1[3] = a2[3];
    a1[4] = v6;
    a1[5] = a2[5];
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 3);
    *unint64_t v4 = *(_OWORD *)(a2 + 1);
    *(_OWORD *)(a1 + 3) = v7;
    a1[5] = a2[5];
  }
  return a1;
}

void *assignWithCopy for SDSNewsResponse(void *a1, void *a2)
{
  *a1 = *a2;
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  unint64_t v4 = a1 + 1;
  uint64_t v5 = a2 + 1;
  uint64_t v6 = a2[2];
  if (a1[2])
  {
    if (v6)
    {
      a1[1] = a2[1];
      a1[2] = a2[2];
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      a1[3] = a2[3];
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      a1[4] = a2[4];
      a1[5] = a2[5];
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AFD56644((uint64_t)(a1 + 1));
      uint64_t v7 = a2[5];
      long long v8 = *(_OWORD *)(a2 + 3);
      *unint64_t v4 = *v5;
      *(_OWORD *)(a1 + 3) = v8;
      a1[5] = v7;
    }
  }
  else if (v6)
  {
    a1[1] = a2[1];
    a1[2] = a2[2];
    a1[3] = a2[3];
    a1[4] = a2[4];
    a1[5] = a2[5];
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
  }
  else
  {
    long long v9 = *v5;
    long long v10 = *(_OWORD *)(a2 + 3);
    a1[5] = a2[5];
    *unint64_t v4 = v9;
    *(_OWORD *)(a1 + 3) = v10;
  }
  return a1;
}

uint64_t sub_1AFD56644(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for SDSNewsResponse(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 16)) {
    goto LABEL_5;
  }
  uint64_t v4 = *(void *)(a2 + 16);
  if (!v4)
  {
    sub_1AFD56644(a1 + 8);
LABEL_5:
    long long v6 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v6;
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    return a1;
  }
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SDSNewsResponse(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SDSNewsResponse(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SDSNewsResponse()
{
  return &type metadata for SDSNewsResponse;
}

uint64_t sub_1AFD567F0(char *a1, char *a2)
{
  return sub_1AFDEFABC(*a1, *a2);
}

uint64_t sub_1AFD567FC()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFD5688C()
{
  sub_1AFFCAF68();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFD56908()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFD56994@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1AFFCBA78();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1AFD569F4(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x6D6574497377656ELL;
  if (*v1) {
    uint64_t v2 = 0x646174654D736473;
  }
  unint64_t v3 = 0xE900000000000073;
  if (*v1) {
    unint64_t v3 = 0xEB00000000617461;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1AFD56A40()
{
  if (*v0) {
    return 0x646174654D736473;
  }
  else {
    return 0x6D6574497377656ELL;
  }
}

uint64_t sub_1AFD56A88@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1AFFCBA78();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1AFD56AEC(uint64_t a1)
{
  unint64_t v2 = sub_1AFD57BCC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFD56B28(uint64_t a1)
{
  unint64_t v2 = sub_1AFD57BCC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFD56B64(void *a1)
{
  unint64_t v3 = v1;
  sub_1AFD58758(0, &qword_1E9AF9F38, (uint64_t (*)(void))sub_1AFD57BCC, (uint64_t)&type metadata for SDSNewsResponse.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  long long v9 = (char *)v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFD57BCC();
  sub_1AFFCBE78();
  v11[0] = *v3;
  char v13 = 0;
  sub_1AFD57DAC(0, &qword_1E9AF9F20, (uint64_t)&type metadata for SDSNewsResponse.SDSNewsResponseItem, MEMORY[0x1E4FBB320]);
  sub_1AFD57CC8(&qword_1E9AF9F40, (void (*)(void))sub_1AFD57D58);
  sub_1AFFCBC58();
  if (!v2)
  {
    sub_1AFD30B8C((uint64_t)(v3 + 1), (uint64_t)v12);
    sub_1AFD30B8C((uint64_t)v12, (uint64_t)v11);
    char v13 = 1;
    sub_1AFD57DF8();
    sub_1AFFCBBE8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1AFD56D98(unsigned __int8 *a1, char *a2)
{
  return sub_1AFDEFB70(*a1, *a2);
}

uint64_t sub_1AFD56DA4()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFD56E98()
{
  sub_1AFFCAF68();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFD56F74()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFD57064@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFD5838C();
  *a1 = result;
  return result;
}

void sub_1AFD57094(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE800000000000000;
  uint64_t v3 = 0x72656469766F7270;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEB00000000657461;
      uint64_t v3 = 0x446873696C627570;
      goto LABEL_3;
    case 2:
      *a1 = 0x7972616D6D7573;
      a1[1] = 0xE700000000000000;
      break;
    case 3:
      *a1 = 0x656C746974;
      a1[1] = 0xE500000000000000;
      break;
    case 4:
      *a1 = 7107189;
      a1[1] = 0xE300000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1AFD5714C()
{
  uint64_t result = 0x72656469766F7270;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x446873696C627570;
      break;
    case 2:
      uint64_t result = 0x7972616D6D7573;
      break;
    case 3:
      uint64_t result = 0x656C746974;
      break;
    case 4:
      uint64_t result = 7107189;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1AFD571F4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFD5838C();
  *a1 = result;
  return result;
}

void sub_1AFD5721C(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_1AFD57228(uint64_t a1)
{
  unint64_t v2 = sub_1AFD58704();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFD57264(uint64_t a1)
{
  unint64_t v2 = sub_1AFD58704();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFD572A0(void *a1)
{
  sub_1AFD58758(0, &qword_1E9AF9F78, (uint64_t (*)(void))sub_1AFD58704, (uint64_t)&type metadata for SDSNewsResponse.SDSNewsResponseItem.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFD58704();
  sub_1AFFCBE78();
  char v14 = 0;
  sub_1AFFCBC08();
  if (!v1)
  {
    char v13 = 1;
    sub_1AFFCBC08();
    char v12 = 2;
    sub_1AFFCBB98();
    char v11 = 3;
    sub_1AFFCBC08();
    char v10 = 4;
    sub_1AFFCBC08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

__n128 sub_1AFD574AC@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1AFD583D8(a1, (uint64_t *)v6);
  if (!v2)
  {
    long long v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 64) = v6[4];
    __n128 result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_1AFD574F8(void *a1)
{
  return sub_1AFD572A0(a1);
}

uint64_t sub_1AFD57510(_OWORD *a1, long long *a2)
{
  long long v2 = a1[3];
  v8[2] = a1[2];
  v8[3] = v2;
  long long v3 = a1[4];
  long long v4 = a1[1];
  v8[0] = *a1;
  v8[1] = v4;
  long long v5 = a2[3];
  v9[2] = a2[2];
  v9[3] = v5;
  v9[4] = a2[4];
  long long v6 = *a2;
  v9[1] = a2[1];
  v8[4] = v3;
  v9[0] = v6;
  return sub_1AFD57634(v8, v9) & 1;
}

double sub_1AFD5756C@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1AFD57908(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    double result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_1AFD575B0(void *a1)
{
  return sub_1AFD56B64(a1);
}

BOOL sub_1AFD575EC(_OWORD *a1, long long *a2)
{
  long long v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  long long v3 = *a2;
  long long v4 = a2[1];
  v7[2] = a1[2];
  v8[0] = v3;
  long long v5 = a2[2];
  v8[1] = v4;
  v8[2] = v5;
  return sub_1AFD57760((uint64_t *)v7, (uint64_t *)v8);
}

uint64_t sub_1AFD57634(void *a1, void *a2)
{
  if (*a1 != *a2 || a1[1] != a2[1])
  {
    char v5 = sub_1AFFCBCE8();
    uint64_t result = 0;
    if ((v5 & 1) == 0) {
      return result;
    }
  }
  if (a1[2] != a2[2] || a1[3] != a2[3])
  {
    char v8 = sub_1AFFCBCE8();
    uint64_t result = 0;
    if ((v8 & 1) == 0) {
      return result;
    }
  }
  uint64_t v9 = a1[5];
  uint64_t v10 = a2[5];
  if (v9)
  {
    if (v10)
    {
      if (a1[4] != a2[4] || v9 != v10)
      {
        char v11 = sub_1AFFCBCE8();
        uint64_t result = 0;
        if ((v11 & 1) == 0) {
          return result;
        }
      }
      goto LABEL_19;
    }
    return 0;
  }
  if (v10) {
    return 0;
  }
LABEL_19:
  if (a1[6] == a2[6] && a1[7] == a2[7] || (v12 = sub_1AFFCBCE8(), uint64_t result = 0, (v12 & 1) != 0))
  {
    if (a1[8] == a2[8] && a1[9] == a2[9])
    {
      return 1;
    }
    else
    {
      return sub_1AFFCBCE8();
    }
  }
  return result;
}

BOOL sub_1AFD57760(uint64_t *a1, uint64_t *a2)
{
  if ((sub_1AFF245BC(*a1, *a2) & 1) == 0) {
    return 0;
  }
  uint64_t v5 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v7 = a1[3];
  uint64_t v6 = a1[4];
  uint64_t v8 = a1[5];
  uint64_t v10 = a2[1];
  uint64_t v9 = a2[2];
  uint64_t v11 = a2[3];
  uint64_t v12 = a2[4];
  uint64_t v13 = a2[5];
  if (!v4)
  {
    if (!v9) {
      return 1;
    }
    goto LABEL_6;
  }
  if (!v9)
  {
LABEL_6:
    sub_1AFD57E4C(v5, v4);
    sub_1AFD57E4C(v10, v9);
    sub_1AFD30C94(v5, v4);
    sub_1AFD30C94(v10, v9);
    return 0;
  }
  v16[0] = v5;
  v16[1] = v4;
  v16[2] = v7;
  v16[3] = v6;
  v16[4] = v8;
  v17[0] = v10;
  v17[1] = v9;
  v17[2] = v11;
  v17[3] = v12;
  v17[4] = v13;
  sub_1AFD57E4C(v5, v4);
  sub_1AFD57E4C(v5, v4);
  sub_1AFD57E4C(v10, v9);
  BOOL v14 = sub_1AFF2667C(v16, v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1AFD30C94(v5, v4);
  return v14;
}

uint64_t sub_1AFD57908@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v16 = a2;
  sub_1AFD58758(0, &qword_1E9AF9F10, (uint64_t (*)(void))sub_1AFD57BCC, (uint64_t)&type metadata for SDSNewsResponse.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v14 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFD57BCC();
  sub_1AFFCBE68();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  uint64_t v10 = v16;
  sub_1AFD57DAC(0, &qword_1E9AF9F20, (uint64_t)&type metadata for SDSNewsResponse.SDSNewsResponseItem, MEMORY[0x1E4FBB320]);
  char v20 = 0;
  sub_1AFD57CC8(&qword_1E9AF9F28, (void (*)(void))sub_1AFD57C20);
  sub_1AFFCBAF8();
  if ((void)v17) {
    uint64_t v11 = v17;
  }
  else {
    uint64_t v11 = MEMORY[0x1E4FBC860];
  }
  char v20 = 1;
  sub_1AFD57C74();
  sub_1AFFCBAF8();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  long long v14 = v18;
  long long v15 = v17;
  uint64_t v12 = v19;
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *(void *)uint64_t v10 = v11;
  *(_OWORD *)(v10 + 8) = v15;
  *(_OWORD *)(v10 + 24) = v14;
  *(void *)(v10 + 40) = v12;
  return result;
}

unint64_t sub_1AFD57BCC()
{
  unint64_t result = qword_1E9AF9F18;
  if (!qword_1E9AF9F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AF9F18);
  }
  return result;
}

unint64_t sub_1AFD57C20()
{
  unint64_t result = qword_1E9AF9F30;
  if (!qword_1E9AF9F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AF9F30);
  }
  return result;
}

unint64_t sub_1AFD57C74()
{
  unint64_t result = qword_1EB818C98;
  if (!qword_1EB818C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818C98);
  }
  return result;
}

uint64_t sub_1AFD57CC8(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1AFD57DAC(255, &qword_1E9AF9F20, (uint64_t)&type metadata for SDSNewsResponse.SDSNewsResponseItem, MEMORY[0x1E4FBB320]);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1AFD57D58()
{
  unint64_t result = qword_1E9AF9F48;
  if (!qword_1E9AF9F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AF9F48);
  }
  return result;
}

void sub_1AFD57DAC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_1AFD57DF8()
{
  unint64_t result = qword_1EB818C90;
  if (!qword_1EB818C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818C90);
  }
  return result;
}

uint64_t sub_1AFD57E4C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    return sub_1AFFC8E38();
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SDSNewsResponse.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFD57F68);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SDSNewsResponse.CodingKeys()
{
  return &type metadata for SDSNewsResponse.CodingKeys;
}

uint64_t destroy for SDSNewsResponse.SDSNewsResponseItem()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for SDSNewsResponse.SDSNewsResponseItem(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  return a1;
}

void *assignWithCopy for SDSNewsResponse.SDSNewsResponseItem(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

void *assignWithTake for SDSNewsResponse.SDSNewsResponseItem(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SDSNewsResponse.SDSNewsResponseItem(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SDSNewsResponse.SDSNewsResponseItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SDSNewsResponse.SDSNewsResponseItem()
{
  return &type metadata for SDSNewsResponse.SDSNewsResponseItem;
}

unint64_t sub_1AFD58288()
{
  unint64_t result = qword_1E9AF9F50;
  if (!qword_1E9AF9F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AF9F50);
  }
  return result;
}

unint64_t sub_1AFD582E0()
{
  unint64_t result = qword_1E9AF9F58;
  if (!qword_1E9AF9F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AF9F58);
  }
  return result;
}

unint64_t sub_1AFD58338()
{
  unint64_t result = qword_1E9AF9F60;
  if (!qword_1E9AF9F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AF9F60);
  }
  return result;
}

uint64_t sub_1AFD5838C()
{
  unint64_t v0 = sub_1AFFCBA78();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

uint64_t sub_1AFD583D8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v33 = a2;
  sub_1AFD58758(0, &qword_1E9AF9F68, (uint64_t (*)(void))sub_1AFD58704, (uint64_t)&type metadata for SDSNewsResponse.SDSNewsResponseItem.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v28 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFD58704();
  sub_1AFFCBE68();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  char v38 = 0;
  uint64_t v10 = v5;
  uint64_t v11 = sub_1AFFCBB18();
  uint64_t v13 = v12;
  char v37 = 1;
  uint64_t v14 = sub_1AFFCBB18();
  uint64_t v16 = v15;
  uint64_t v32 = v14;
  char v36 = 2;
  uint64_t v30 = sub_1AFFCBAA8();
  uint64_t v31 = v17;
  char v35 = 3;
  uint64_t v28 = sub_1AFFCBB18();
  uint64_t v29 = v18;
  char v34 = 4;
  uint64_t v19 = sub_1AFFCBB18();
  char v20 = v8;
  uint64_t v22 = v21;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v20, v10);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  uint64_t v24 = v32;
  char v25 = v33;
  uint64_t *v33 = v11;
  v25[1] = v13;
  v25[2] = v24;
  v25[3] = v16;
  uint64_t v26 = v31;
  v25[4] = v30;
  v25[5] = v26;
  uint64_t v27 = v29;
  v25[6] = v28;
  v25[7] = v27;
  v25[8] = v19;
  v25[9] = v22;
  return result;
}

unint64_t sub_1AFD58704()
{
  unint64_t result = qword_1E9AF9F70;
  if (!qword_1E9AF9F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AF9F70);
  }
  return result;
}

void sub_1AFD58758(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for SDSNewsResponse.SDSNewsResponseItem.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFD5888CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SDSNewsResponse.SDSNewsResponseItem.CodingKeys()
{
  return &type metadata for SDSNewsResponse.SDSNewsResponseItem.CodingKeys;
}

unint64_t sub_1AFD588C8()
{
  unint64_t result = qword_1E9AF9F80;
  if (!qword_1E9AF9F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AF9F80);
  }
  return result;
}

unint64_t sub_1AFD58920()
{
  unint64_t result = qword_1E9AF9F88;
  if (!qword_1E9AF9F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AF9F88);
  }
  return result;
}

unint64_t sub_1AFD58978()
{
  unint64_t result = qword_1E9AF9F90;
  if (!qword_1E9AF9F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AF9F90);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SDSEndpoint(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFD58A9CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SDSEndpoint()
{
  return &type metadata for SDSEndpoint;
}

unint64_t sub_1AFD58AD8()
{
  unint64_t result = qword_1E9AF9F98;
  if (!qword_1E9AF9F98)
  {
    sub_1AFD58B30();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AF9F98);
  }
  return result;
}

void sub_1AFD58B30()
{
  if (!qword_1E9AF9FA0)
  {
    unint64_t v0 = sub_1AFFCB288();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9AF9FA0);
    }
  }
}

void sub_1AFD58B88(void *a1@<X8>)
{
  *a1 = &unk_1F08694B0;
}

unint64_t sub_1AFD58B9C()
{
  unint64_t result = qword_1E9AF9FA8;
  if (!qword_1E9AF9FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AF9FA8);
  }
  return result;
}

uint64_t sub_1AFD58BF0()
{
  return sub_1AFFC8C08();
}

uint64_t sub_1AFD58C14()
{
  uint64_t v0 = sub_1AFFC9528();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1AFFC9A78();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v5 = sub_1AFFCAE58();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v6 = sub_1AFFC9548();
  __swift_allocate_value_buffer(v6, qword_1E9AF9FB0);
  __swift_project_value_buffer(v6, (uint64_t)qword_1E9AF9FB0);
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4F275D0], v0);
  return sub_1AFFC9558();
}

uint64_t sub_1AFD58DFC@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E9AF8C30 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1AFFC9548();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1E9AF9FB0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1AFD58EA4()
{
  return 1;
}

uint64_t sub_1AFD58EAC()
{
  sub_1AFD5C174(0, &qword_1E9AF9FC8, (uint64_t (*)(void))sub_1AFD5907C, (uint64_t)&type metadata for OpenWatchlistIntent, MEMORY[0x1E4F186C8]);
  MEMORY[0x1F4188790](v0 - 8);
  sub_1AFD5C174(0, &qword_1E9AF9FD0, (uint64_t (*)(void))sub_1AFD5907C, (uint64_t)&type metadata for OpenWatchlistIntent, MEMORY[0x1E4F186C0]);
  MEMORY[0x1F4188790](v1);
  sub_1AFD5907C();
  sub_1AFFC8EA8();
  sub_1AFFC8E98();
  swift_getKeyPath();
  sub_1AFD5916C();
  sub_1AFFC8E88();
  swift_release();
  sub_1AFFC8E98();
  sub_1AFFC8EB8();
  return sub_1AFFC8E58();
}

unint64_t sub_1AFD5907C()
{
  unint64_t result = qword_1EB8113A8;
  if (!qword_1EB8113A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8113A8);
  }
  return result;
}

uint64_t sub_1AFD590D0()
{
  return sub_1AFFC8C28();
}

uint64_t sub_1AFD590F4@<X0>(uint64_t *a1@<X8>)
{
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  uint64_t v2 = sub_1AFFC8C28();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v2;
  return result;
}

void sub_1AFD5916C()
{
  if (!qword_1E9AF9FD8)
  {
    sub_1AFD5C174(255, &qword_1EB811368, (uint64_t (*)(void))sub_1AFD33084, (uint64_t)&type metadata for WatchlistEntity, MEMORY[0x1E4F184C8]);
    unint64_t v0 = sub_1AFFCBE88();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9AF9FD8);
    }
  }
}

double sub_1AFD59204@<D0>(uint64_t a1@<X8>)
{
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8C08();
  swift_release();
  swift_release();
  swift_release();
  *(void *)a1 = v3;
  double result = *(double *)&v4;
  *(_OWORD *)(a1 + 8) = v4;
  return result;
}

uint64_t sub_1AFD59284()
{
  return swift_release();
}

uint64_t sub_1AFD59310()
{
  return sub_1AFFC8C18();
}

uint64_t (*sub_1AFD59350(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1AFFC8BF8();
  return sub_1AFD3325C;
}

uint64_t sub_1AFD593AC()
{
  return sub_1AFFC8C08();
}

uint64_t sub_1AFD593D0()
{
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8C08();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_1AFD59444(uint64_t a1)
{
  sub_1AFD5A260(0, &qword_1EB810BC8, (void (*)(uint64_t))type metadata accessor for SymbolEntity);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v9 - v6;
  sub_1AFD59604(a1, (uint64_t)&v9 - v6);
  sub_1AFD59604((uint64_t)v7, (uint64_t)v5);
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8C18();
  sub_1AFD59684((uint64_t)v7);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1AFD5955C(uint64_t a1)
{
  sub_1AFD5A260(0, &qword_1EB810BC8, (void (*)(uint64_t))type metadata accessor for SymbolEntity);
  MEMORY[0x1F4188790](v2 - 8);
  sub_1AFD59604(a1, (uint64_t)&v5 - v3);
  sub_1AFFC8C18();
  return sub_1AFD59684(a1);
}

uint64_t sub_1AFD59604(uint64_t a1, uint64_t a2)
{
  sub_1AFD5A260(0, &qword_1EB810BC8, (void (*)(uint64_t))type metadata accessor for SymbolEntity);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AFD59684(uint64_t a1)
{
  sub_1AFD5A260(0, &qword_1EB810BC8, (void (*)(uint64_t))type metadata accessor for SymbolEntity);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t (*sub_1AFD596FC(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1AFFC8BF8();
  return sub_1AFD3325C;
}

uint64_t sub_1AFD59758()
{
  return sub_1AFFC8C28();
}

uint64_t sub_1AFD5977C()
{
  return sub_1AFFC8998();
}

uint64_t sub_1AFD597A0()
{
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8998();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_1AFD59814(uint64_t a1)
{
  sub_1AFD2CEB0(a1, (uint64_t)v3);
  sub_1AFD2CEB0((uint64_t)v3, (uint64_t)&v2);
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC89A8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1AFD598A0(uint64_t a1)
{
  sub_1AFD2CEB0(a1, (uint64_t)v3);
  sub_1AFFC89A8();
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t (*sub_1AFD598E4(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1AFFC8988();
  return sub_1AFD3325C;
}

uint64_t sub_1AFD59940()
{
  return sub_1AFFC89B8();
}

uint64_t sub_1AFD59964@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v59 = a1;
  sub_1AFD5A260(0, &qword_1EB810BC8, (void (*)(uint64_t))type metadata accessor for SymbolEntity);
  MEMORY[0x1F4188790](v1 - 8);
  __int16 v58 = (char *)&v43 - v2;
  uint64_t v3 = sub_1AFFC8EC8();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v64 = v3;
  uint64_t v65 = v4;
  MEMORY[0x1F4188790](v3);
  uint64_t v63 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFD5A260(0, &qword_1EB816AF0, MEMORY[0x1E4F182D8]);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  unint64_t v62 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v61 = (char *)&v43 - v9;
  sub_1AFD5A260(0, &qword_1EB816B00, MEMORY[0x1E4F27608]);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v60 = (char *)&v43 - v11;
  uint64_t v12 = sub_1AFFC9528();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1AFFC9A78();
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v17 = sub_1AFFCAE58();
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v18 = sub_1AFFC9548();
  uint64_t v54 = v18;
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v48 = (char *)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFD5C174(0, &qword_1EB811368, (uint64_t (*)(void))sub_1AFD33084, (uint64_t)&type metadata for WatchlistEntity, MEMORY[0x1E4F184C8]);
  uint64_t v56 = v21;
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  char v23 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 104);
  unsigned int v44 = *MEMORY[0x1E4F275D0];
  uint64_t v22 = v44;
  uint64_t v45 = v12;
  v23(v15, v44, v12);
  os_log_type_t v47 = v23;
  uint64_t v46 = v13 + 104;
  sub_1AFFC9558();
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  v23(v15, v22, v12);
  uint64_t v24 = v60;
  sub_1AFFC9558();
  char v25 = *(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56);
  uint64_t v53 = v19 + 56;
  uint64_t v55 = v25;
  v25(v24, 0, 1, v18);
  uint64_t v26 = sub_1AFFC8AD8();
  uint64_t v70 = 0;
  uint64_t v71 = 0;
  uint64_t v69 = 0;
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56);
  uint64_t v52 = v28;
  uint64_t v51 = v27 + 56;
  v28(v61, 1, 1, v26);
  v28(v62, 1, 1, v26);
  sub_1AFD5A2B4(0, (unint64_t *)&qword_1EB8167E0, (unint64_t *)&qword_1EB81A890);
  uint64_t v57 = sub_1AFFC8A08();
  long long v66 = 0u;
  long long v67 = 0u;
  uint64_t v68 = 0;
  sub_1AFFC89F8();
  *(void *)&long long v66 = sub_1AFFC89C8();
  unsigned int v49 = *MEMORY[0x1E4F186F0];
  uint64_t v29 = *(void (**)(void))(v65 + 104);
  v65 += 104;
  __int16 v50 = (void (*)(char *, void, uint64_t))v29;
  v29(v63);
  sub_1AFD5A30C();
  sub_1AFD33B44();
  uint64_t v30 = v60;
  uint64_t v56 = sub_1AFFC8C48();
  sub_1AFD5A360();
  uint64_t v43 = v31;
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  uint64_t v32 = v44;
  uint64_t v33 = v45;
  char v34 = v47;
  v47(v15, v44, v45);
  sub_1AFFC9558();
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  v34(v15, v32, v33);
  sub_1AFFC9558();
  v55(v30, 0, 1, v54);
  uint64_t v35 = type metadata accessor for SymbolEntity();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v58, 1, 1, v35);
  char v36 = v52;
  v52(v61, 1, 1, v26);
  v36(v62, 1, 1, v26);
  *(void *)&long long v66 = sub_1AFD910B4();
  *((void *)&v66 + 1) = v37;
  *(void *)&long long v67 = v38;
  *((void *)&v67 + 1) = v39;
  v50(v63, v49, v64);
  sub_1AFD5BC18();
  uint64_t v40 = sub_1AFFC8C58();
  sub_1AFD5A2B4(0, &qword_1EB8167D8, (unint64_t *)&qword_1EB816B10);
  uint64_t v68 = 0;
  long long v66 = 0u;
  long long v67 = 0u;
  sub_1AFFC89F8();
  uint64_t result = sub_1AFFC89C8();
  uint64_t v42 = v59;
  *uint64_t v59 = v56;
  v42[1] = v40;
  v42[2] = result;
  return result;
}

void sub_1AFD5A260(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1AFFCB658();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1AFD5A2B4(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1AFD2CDB0(255, a3);
    unint64_t v4 = sub_1AFFC89D8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_1AFD5A30C()
{
  unint64_t result = qword_1E9AF9FE0;
  if (!qword_1E9AF9FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AF9FE0);
  }
  return result;
}

void sub_1AFD5A360()
{
  if (!qword_1E9AF9FE8)
  {
    sub_1AFD5A260(255, &qword_1EB810BC8, (void (*)(uint64_t))type metadata accessor for SymbolEntity);
    sub_1AFD5A3E0();
    unint64_t v0 = sub_1AFFC8C98();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9AF9FE8);
    }
  }
}

unint64_t sub_1AFD5A3E0()
{
  unint64_t result = qword_1EB810BD0;
  if (!qword_1EB810BD0)
  {
    sub_1AFD5A260(255, &qword_1EB810BC8, (void (*)(uint64_t))type metadata accessor for SymbolEntity);
    sub_1AFD37614((unint64_t *)&qword_1EB816B20, (void (*)(uint64_t))type metadata accessor for SymbolEntity);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB810BD0);
  }
  return result;
}

uint64_t sub_1AFD5A49C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v73 = a2;
  uint64_t v74 = a3;
  sub_1AFD5A260(0, &qword_1EB810BC8, (void (*)(uint64_t))type metadata accessor for SymbolEntity);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v72 = (uint64_t)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v71 = (char *)&v53 - v7;
  uint64_t v8 = sub_1AFFC8EC8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v78 = v8;
  uint64_t v79 = v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v77 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFD5A260(0, &qword_1EB816AF0, MEMORY[0x1E4F182D8]);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v76 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  __int16 v75 = (char *)&v53 - v14;
  sub_1AFD5A260(0, &qword_1EB816B00, MEMORY[0x1E4F27608]);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v60 = (char *)&v53 - v16;
  uint64_t v17 = sub_1AFFC9528();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1AFFC9A78();
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v22 = sub_1AFFCAE58();
  MEMORY[0x1F4188790](v22 - 8);
  uint64_t v23 = sub_1AFFC9548();
  uint64_t v65 = v23;
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v53 = (char *)&v53 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = *a1;
  sub_1AFD5C174(0, &qword_1EB811368, (uint64_t (*)(void))sub_1AFD33084, (uint64_t)&type metadata for WatchlistEntity, MEMORY[0x1E4F184C8]);
  uint64_t v67 = v26;
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  uint64_t v27 = *MEMORY[0x1E4F275D0];
  uint64_t v28 = *(void (**)(char *))(v18 + 104);
  long long v69 = *(_OWORD *)(a1 + 1);
  uint64_t v29 = v27;
  unsigned int v54 = v27;
  uint64_t v55 = v17;
  v28(v20);
  uint64_t v56 = v28;
  uint64_t v57 = v18 + 104;
  sub_1AFFC9558();
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  ((void (*)(char *, uint64_t, uint64_t))v28)(v20, v29, v17);
  uint64_t v30 = v60;
  sub_1AFFC9558();
  uint64_t v31 = *(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56);
  uint64_t v64 = v24 + 56;
  long long v66 = v31;
  v31(v30, 0, 1, v23);
  uint64_t v32 = sub_1AFFC8AD8();
  uint64_t v61 = v32;
  uint64_t v83 = 0;
  uint64_t v84 = 0;
  uint64_t v82 = 0;
  uint64_t v33 = *(void *)(v32 - 8);
  char v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v33 + 56);
  unint64_t v62 = v34;
  uint64_t v63 = v33 + 56;
  v34(v75, 1, 1, v32);
  v34(v76, 1, 1, v32);
  sub_1AFD5A2B4(0, (unint64_t *)&qword_1EB8167E0, (unint64_t *)&qword_1EB81A890);
  uint64_t v68 = sub_1AFFC8A08();
  memset(v80, 0, sizeof(v80));
  uint64_t v81 = 0;
  sub_1AFFC89F8();
  *(void *)&v80[0] = sub_1AFFC89C8();
  unsigned int v58 = *MEMORY[0x1E4F186F0];
  uint64_t v35 = *(void (**)(void))(v79 + 104);
  v79 += 104;
  uint64_t v59 = (void (*)(char *, void, uint64_t))v35;
  v35(v77);
  sub_1AFD5A30C();
  sub_1AFD33B44();
  uint64_t v36 = sub_1AFFC8C48();
  sub_1AFD5A360();
  uint64_t v67 = v37;
  sub_1AFFC8E48();
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  uint64_t v38 = v54;
  uint64_t v39 = v55;
  uint64_t v40 = (void (*)(char *, uint64_t, uint64_t))v56;
  ((void (*)(char *, void, uint64_t))v56)(v20, v54, v55);
  sub_1AFFC9558();
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  v40(v20, v38, v39);
  sub_1AFFC9558();
  v66(v30, 0, 1, v65);
  uint64_t v41 = type metadata accessor for SymbolEntity();
  uint64_t v42 = (uint64_t)v71;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v71, 1, 1, v41);
  uint64_t v43 = v61;
  unsigned int v44 = v62;
  v62(v75, 1, 1, v61);
  v44(v76, 1, 1, v43);
  *(void *)&v80[0] = sub_1AFD910B4();
  *((void *)&v80[0] + 1) = v45;
  *(void *)&v80[1] = v46;
  *((void *)&v80[1] + 1) = v47;
  v59(v77, v58, v78);
  sub_1AFD5BC18();
  uint64_t v48 = sub_1AFFC8C58();
  sub_1AFD5A2B4(0, &qword_1EB8167D8, (unint64_t *)&qword_1EB816B10);
  uint64_t v81 = 0;
  memset(v80, 0, sizeof(v80));
  sub_1AFFC8E48();
  sub_1AFFC89F8();
  uint64_t v49 = sub_1AFFC89C8();
  *(void *)&v80[0] = v70;
  *(_OWORD *)((char *)v80 + 8) = v69;
  swift_retain_n();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8C18();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v50 = v73;
  sub_1AFD59604(v73, v42);
  sub_1AFD59604(v42, v72);
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8C18();
  sub_1AFD59684(v42);
  sub_1AFD59684(v50);
  swift_release_n();
  swift_release_n();
  uint64_t result = swift_release_n();
  uint64_t v52 = v74;
  *uint64_t v74 = v36;
  v52[1] = v48;
  v52[2] = v49;
  return result;
}

uint64_t sub_1AFD5AEDC(uint64_t a1)
{
  *(void *)(v2 + 160) = a1;
  sub_1AFD5A260(0, &qword_1EB810BC8, (void (*)(uint64_t))type metadata accessor for SymbolEntity);
  *(void *)(v2 + 168) = swift_task_alloc();
  uint64_t v3 = type metadata accessor for SymbolEntity();
  *(void *)(v2 + 176) = v3;
  *(void *)(v2 + 184) = *(void *)(v3 - 8);
  *(void *)(v2 + 192) = swift_task_alloc();
  *(void *)(v2 + 200) = swift_task_alloc();
  *(_OWORD *)(v2 + 208) = *(_OWORD *)v1;
  *(void *)(v2 + 224) = *(void *)(v1 + 16);
  return MEMORY[0x1F4188298](sub_1AFD5B004, 0, 0);
}

uint64_t sub_1AFD5B004()
{
  uint64_t v2 = v0[27];
  uint64_t v1 = v0[28];
  uint64_t v3 = v0[26];
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8998();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v4 = v0[5];
  uint64_t v5 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v4);
  v0[12] = v3;
  v0[13] = v2;
  v0[14] = v1 | 0x6000000000000000;
  uint64_t v8 = (uint64_t (*)(void *, uint64_t, uint64_t))(*(void *)(v5 + 8) + **(int **)(v5 + 8));
  uint64_t v6 = (void *)swift_task_alloc();
  v0[29] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1AFD5B170;
  return v8(v0 + 12, v4, v5);
}

uint64_t sub_1AFD5B170()
{
  *(void *)(*(void *)v1 + 240) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1AFD5B6EC;
  }
  else {
    uint64_t v2 = sub_1AFD5B284;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1AFD5B284()
{
  uint64_t v1 = v0[22];
  uint64_t v2 = v0[23];
  uint64_t v3 = v0[21];
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8C08();
  swift_release();
  swift_release();
  swift_release();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_1AFD59684(v0[21]);
    sub_1AFFC8B08();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
  else
  {
    uint64_t v6 = v0[25];
    uint64_t v7 = v0[24];
    sub_1AFD5BC6C(v0[21], v6);
    sub_1AFFC8E48();
    sub_1AFFC8E48();
    sub_1AFFC8E48();
    sub_1AFFC8998();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v8 = v0[10];
    uint64_t v9 = v0[11];
    __swift_project_boxed_opaque_existential_1(v0 + 7, v8);
    sub_1AFD5BCD0(v6, v7);
    sub_1AFF31EC4(v7, v0 + 18);
    uint64_t v10 = v0[18];
    uint64_t v11 = v0[19];
    v0[31] = v10;
    v0[32] = v11;
    v0[15] = v10;
    v0[16] = v11;
    v0[17] = 0x4000000000000000;
    uint64_t v13 = (uint64_t (*)(void *, uint64_t, uint64_t))(*(void *)(v9 + 8) + **(int **)(v9 + 8));
    uint64_t v12 = (void *)swift_task_alloc();
    v0[33] = v12;
    void *v12 = v0;
    v12[1] = sub_1AFD5B500;
    return v13(v0 + 15, v8, v9);
  }
}

uint64_t sub_1AFD5B500()
{
  *(void *)(*(void *)v1 + 272) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_1AFD5B774;
  }
  else {
    uint64_t v2 = sub_1AFD5B654;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1AFD5B654()
{
  uint64_t v1 = *(void *)(v0 + 200);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  sub_1AFFC8B08();
  sub_1AFD2E05C(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1AFD5B6EC()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1AFD5B774()
{
  sub_1AFD2E05C(*(void *)(v0 + 200));
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1AFD5B808()
{
  return sub_1AFFC8C08();
}

uint64_t sub_1AFD5B82C()
{
  return sub_1AFFC8C18();
}

uint64_t (*sub_1AFD5B86C(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1AFFC8BF8();
  return sub_1AFD3325C;
}

uint64_t sub_1AFD5B8C8@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E9AF8C30 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1AFFC9548();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1E9AF9FB0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1AFD5B970()
{
  sub_1AFD5C174(0, &qword_1E9AF9FC8, (uint64_t (*)(void))sub_1AFD5907C, (uint64_t)&type metadata for OpenWatchlistIntent, MEMORY[0x1E4F186C8]);
  MEMORY[0x1F4188790](v0 - 8);
  sub_1AFD5C174(0, &qword_1E9AF9FD0, (uint64_t (*)(void))sub_1AFD5907C, (uint64_t)&type metadata for OpenWatchlistIntent, MEMORY[0x1E4F186C0]);
  MEMORY[0x1F4188790](v1);
  sub_1AFFC8EA8();
  sub_1AFFC8E98();
  swift_getKeyPath();
  sub_1AFD5916C();
  sub_1AFFC8E88();
  swift_release();
  sub_1AFFC8E98();
  sub_1AFFC8EB8();
  return sub_1AFFC8E58();
}

uint64_t sub_1AFD5BB40(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1AFD3503C;
  return sub_1AFD5AEDC(a1);
}

uint64_t sub_1AFD5BBDC(uint64_t a1)
{
  unint64_t v2 = sub_1AFD5907C();

  return MEMORY[0x1F40D3C90](a1, v2);
}

unint64_t sub_1AFD5BC18()
{
  unint64_t result = qword_1E9AF9FF0;
  if (!qword_1E9AF9FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1E9AF9FF0);
  }
  return result;
}

uint64_t sub_1AFD5BC6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SymbolEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AFD5BCD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SymbolEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1AFD5BD38()
{
  unint64_t result = qword_1E9AFA000;
  if (!qword_1E9AFA000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFA000);
  }
  return result;
}

unint64_t sub_1AFD5BD90()
{
  unint64_t result = qword_1EB818428;
  if (!qword_1EB818428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818428);
  }
  return result;
}

unint64_t sub_1AFD5BDEC()
{
  unint64_t result = qword_1EB8113B0;
  if (!qword_1EB8113B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8113B0);
  }
  return result;
}

unint64_t sub_1AFD5BE44()
{
  unint64_t result = qword_1EB8113A0;
  if (!qword_1EB8113A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8113A0);
  }
  return result;
}

uint64_t sub_1AFD5BE98()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1AFD5BEB4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for AddSymbolToWatchlistIntent()
{
  swift_release();
  swift_release();

  return swift_release();
}

void *_s10StocksCore26AddSymbolToWatchlistIntentVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  return a1;
}

void *assignWithCopy for AddSymbolToWatchlistIntent(void *a1, void *a2)
{
  *a1 = *a2;
  sub_1AFFC8E48();
  swift_release();
  a1[1] = a2[1];
  sub_1AFFC8E48();
  swift_release();
  a1[2] = a2[2];
  sub_1AFFC8E48();
  swift_release();
  return a1;
}

uint64_t assignWithTake for AddSymbolToWatchlistIntent(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for AddSymbolToWatchlistIntent(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AddSymbolToWatchlistIntent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OpenWatchlistIntent()
{
  return &type metadata for OpenWatchlistIntent;
}

unint64_t sub_1AFD5C0E4()
{
  unint64_t result = qword_1E9AFA010;
  if (!qword_1E9AFA010)
  {
    sub_1AFD5C174(255, &qword_1E9AFA018, (uint64_t (*)(void))sub_1AFD5907C, (uint64_t)&type metadata for OpenWatchlistIntent, MEMORY[0x1E4F186A8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFA010);
  }
  return result;
}

void sub_1AFD5C174(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1AFD5C1DC()
{
  return sub_1AFD37614((unint64_t *)&qword_1E9AF9CD8, (void (*)(uint64_t))sub_1AFD3765C);
}

StocksCore::AdConfiguration __swiftcall AdConfiguration.init(segmentsEnabled:feedNumberofViewportsBetweenAds:articleNumberofViewportsBetweenAds:)(Swift::Bool_optional segmentsEnabled, Swift::Double_optional feedNumberofViewportsBetweenAds, Swift::Double_optional articleNumberofViewportsBetweenAds)
{
  double v6 = *(double *)&feedNumberofViewportsBetweenAds.is_nil;
  double v7 = 1.0;
  if (articleNumberofViewportsBetweenAds.is_nil) {
    double v6 = 1.0;
  }
  *(unsigned char *)uint64_t v5 = segmentsEnabled.value;
  if ((v4 & 1) == 0) {
    double v7 = v3;
  }
  *(double *)(v5 + 8) = v6;
  *(double *)(v5 + 16) = v7;
  result.articleNumberofViewportsBetweenAds = v7;
  result.feedNumberofViewportsBetweenAds = v6;
  result.segmentsEnabled = segmentsEnabled.value;
  return result;
}

uint64_t AdConfiguration.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1AFD5CDF8(0, &qword_1EB819F58, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v30 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFD5C8AC();
  sub_1AFFCBE68();
  if (!v2)
  {
    uint64_t v36 = (void *)MEMORY[0x1E4FBC860];
    LOBYTE(v33) = 0;
    sub_1AFFCBAF8();
    int v32 = v35;
    if (v35 == 2)
    {
      swift_beginAccess();
      unint64_t v10 = v36;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v10 = sub_1AFD352FC(0, v10[2] + 1, 1, v10);
      }
      unint64_t v12 = v10[2];
      unint64_t v11 = v10[3];
      if (v12 >= v11 >> 1) {
        unint64_t v10 = sub_1AFD352FC((void *)(v11 > 1), v12 + 1, 1, v10);
      }
      void v10[2] = v12 + 1;
      uint64_t v13 = &v10[2 * v12];
      v13[4] = 0x73746E656D676573;
      v13[5] = 0xEF64656C62616E45;
      uint64_t v36 = v10;
      swift_endAccess();
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
    }
    unsigned __int8 v35 = 1;
    sub_1AFFCBAF8();
    double v14 = v33;
    int v15 = v34;
    if (v34)
    {
      swift_beginAccess();
      unint64_t v10 = v36;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      int v31 = v15;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        unint64_t v10 = sub_1AFD352FC(0, v10[2] + 1, 1, v10);
      }
      unint64_t v18 = v10[2];
      unint64_t v17 = v10[3];
      if (v18 >= v17 >> 1) {
        unint64_t v10 = sub_1AFD352FC((void *)(v17 > 1), v18 + 1, 1, v10);
      }
      void v10[2] = v18 + 1;
      uint64_t v19 = &v10[2 * v18];
      v19[4] = 0xD00000000000001FLL;
      v19[5] = 0x80000001AFFEF6B0;
      uint64_t v36 = v10;
      swift_endAccess();
      int v15 = v31;
    }
    unsigned __int8 v35 = 2;
    sub_1AFFCBAF8();
    if (v34)
    {
      swift_beginAccess();
      unint64_t v10 = v36;
      char v21 = swift_isUniquelyReferenced_nonNull_native();
      int v31 = v15;
      if ((v21 & 1) == 0) {
        unint64_t v10 = sub_1AFD352FC(0, v10[2] + 1, 1, v10);
      }
      unint64_t v23 = v10[2];
      unint64_t v22 = v10[3];
      if (v23 >= v22 >> 1) {
        unint64_t v10 = sub_1AFD352FC((void *)(v22 > 1), v23 + 1, 1, v10);
      }
      void v10[2] = v23 + 1;
      uint64_t v24 = &v10[2 * v23];
      v24[4] = 0xD000000000000022;
      v24[5] = 0x80000001AFFEF6D0;
      uint64_t v36 = v10;
      swift_endAccess();
      double v25 = 1.0;
      int v15 = v31;
      char v26 = v32;
    }
    else
    {
      double v25 = v33;
      char v26 = v32;
    }
    int v32 = v26 & 1;
    if (v15) {
      double v14 = 1.0;
    }
    if (v10[2])
    {
      sub_1AFD5D280(0, (unint64_t *)&qword_1EB81A100, (void (*)(uint64_t))sub_1AFD3AE64);
      uint64_t v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = xmmword_1AFFD05F0;
      sub_1AFD3ABD0();
      *(void *)(v27 + 56) = v28;
      *(void *)(v27 + 64) = sub_1AFD5CDA0();
      *(void *)(v27 + 32) = v10;
      sub_1AFD2C4F4();
      sub_1AFFC8E38();
      uint64_t v29 = (void *)sub_1AFFCB638();
      sub_1AFFCB478();
      sub_1AFFCA878();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AFD2C4F4();
      uint64_t v29 = (void *)sub_1AFFCB638();
      sub_1AFFCB478();
      sub_1AFFCA878();
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_bridgeObjectRelease();
    *(unsigned char *)a2 = v32;
    *(double *)(a2 + 8) = v14;
    *(double *)(a2 + 16) = v25;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1AFD5C7EC()
{
  return MEMORY[0x1E4FBC860];
}

BOOL sub_1AFD5C7F8(uint64_t a1)
{
  return *(void *)(a1 + 16) == 0;
}

BOOL static AdConfiguration.== infix(_:_:)(double *a1, double *a2)
{
  return *(unsigned __int8 *)a1 == *(unsigned __int8 *)a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

uint64_t sub_1AFD5C840()
{
  unint64_t v1 = 0xD00000000000001FLL;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000022;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x73746E656D676573;
  }
}

unint64_t sub_1AFD5C8AC()
{
  unint64_t result = qword_1EB818E78;
  if (!qword_1EB818E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818E78);
  }
  return result;
}

uint64_t sub_1AFD5C900@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1AFD5D110(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AFD5C928(uint64_t a1)
{
  unint64_t v2 = sub_1AFD5C8AC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFD5C964(uint64_t a1)
{
  unint64_t v2 = sub_1AFD5C8AC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t AdConfiguration.encode(to:)(void *a1)
{
  sub_1AFD5CDF8(0, &qword_1EB81A018, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFD5C8AC();
  sub_1AFFCBE78();
  char v12 = 0;
  sub_1AFFCBC18();
  if (!v1)
  {
    char v11 = 1;
    sub_1AFFCBC28();
    char v10 = 2;
    sub_1AFFCBC28();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1AFD5CB4C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AdConfiguration.init(from:)(a1, a2);
}

uint64_t sub_1AFD5CB64(void *a1)
{
  return AdConfiguration.encode(to:)(a1);
}

BOOL sub_1AFD5CB7C(double *a1, double *a2)
{
  return *(unsigned __int8 *)a1 == *(unsigned __int8 *)a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

void sub_1AFD5CBB4(char *a1)
{
  char v1 = *a1;
  uint64_t v3 = *((void *)a1 + 1);
  uint64_t v2 = *((void *)a1 + 2);
  id v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  sub_1AFD5D280(0, (unint64_t *)&qword_1EB8183C8, (void (*)(uint64_t))sub_1AFD5D2D4);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AFFD0DC0;
  sub_1AFFCB788();
  *(void *)(inited + 96) = MEMORY[0x1E4FBB390];
  *(unsigned char *)(inited + 72) = v1;
  sub_1AFFCB788();
  uint64_t v6 = MEMORY[0x1E4FBB3D0];
  *(void *)(inited + 168) = MEMORY[0x1E4FBB3D0];
  *(void *)(inited + 144) = v3;
  sub_1AFFCB788();
  *(void *)(inited + 240) = v6;
  *(void *)(inited + 216) = v2;
  sub_1AFDF9EB4(inited);
  uint64_t v7 = (void *)sub_1AFFCAC78();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(v4, sel_initWithConfigDictionary_, v7);

  if (!v8) {
    __break(1u);
  }
}

uint64_t sub_1AFD5CD78(uint64_t result, uint64_t a2)
{
  *(void *)(result + 16) = a2;
  *(void *)(result + 24) = 2 * a2;
  return result;
}

uint64_t sub_1AFD5CD88(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *v3;
  *(void *)(v4 + 16) = result + 1;
  uint64_t v5 = v4 + 16 * result;
  *(void *)(v5 + 32) = a2;
  *(void *)(v5 + 40) = a3;
  return result;
}

unint64_t sub_1AFD5CDA0()
{
  unint64_t result = qword_1EB819DE0;
  if (!qword_1EB819DE0)
  {
    sub_1AFD3ABD0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819DE0);
  }
  return result;
}

void sub_1AFD5CDF8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1AFD5C8AC();
    unint64_t v7 = a3(a1, &type metadata for AdConfiguration.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t getEnumTagSinglePayload for AdConfiguration(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[24]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for AdConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(unsigned char *)unint64_t result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AdConfiguration()
{
  return &type metadata for AdConfiguration;
}

unsigned char *storeEnumTagSinglePayload for AdConfiguration.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFD5CFD0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AdConfiguration.CodingKeys()
{
  return &type metadata for AdConfiguration.CodingKeys;
}

unint64_t sub_1AFD5D00C()
{
  unint64_t result = qword_1E9AFA020;
  if (!qword_1E9AFA020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFA020);
  }
  return result;
}

unint64_t sub_1AFD5D064()
{
  unint64_t result = qword_1EB818E88;
  if (!qword_1EB818E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818E88);
  }
  return result;
}

unint64_t sub_1AFD5D0BC()
{
  unint64_t result = qword_1EB818E80;
  if (!qword_1EB818E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818E80);
  }
  return result;
}

uint64_t sub_1AFD5D110(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73746E656D676573 && a2 == 0xEF64656C62616E45;
  if (v2 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001AFFEF6B0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x80000001AFFEF6D0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1AFFCBCE8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

void sub_1AFD5D280(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1AFFCBC98();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1AFD5D2D4()
{
  if (!qword_1EB8181C0)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB8181C0);
    }
  }
}

void __swiftcall PaywallConfig.init(paywallType:title:descriptionTrial:descriptionNonTrial:learnMoreTitle:learnMoreURL:subscriptionButton:visualSpecification:compactPortraitTopOffsetRatio:compactLandscapeTopOffsetRatio:regularPortraitTopOffsetRatio:regularLandscapeTopOffsetRatio:)(StocksCore::PaywallConfig *__return_ptr retstr, Swift::String_optional paywallType, Swift::String_optional title, Swift::String_optional descriptionTrial, Swift::String_optional descriptionNonTrial, Swift::String_optional learnMoreTitle, Swift::String_optional learnMoreURL, StocksCore::SubscriptionButtonConfig_optional *subscriptionButton, StocksCore::PaywallVisualSpec_optional *visualSpecification, Swift::Double_optional compactPortraitTopOffsetRatio, Swift::Double_optional compactLandscapeTopOffsetRatio, Swift::Double_optional regularPortraitTopOffsetRatio, Swift::Double_optional regularLandscapeTopOffsetRatio)
{
  object = descriptionNonTrial.value._object;
  uint64_t countAndFlagsBits = descriptionNonTrial.value._countAndFlagsBits;
  double v14 = descriptionTrial.value._object;
  uint64_t v15 = descriptionTrial.value._countAndFlagsBits;
  uint64_t v16 = title.value._object;
  uint64_t v17 = title.value._countAndFlagsBits;
  unint64_t v18 = paywallType.value._object;
  uint64_t v19 = paywallType.value._countAndFlagsBits;
  sub_1AFD5D534((uint64_t)subscriptionButton, (uint64_t)v39, &qword_1EB819738, (uint64_t)&type metadata for SubscriptionButtonConfig);
  sub_1AFD5D534((uint64_t)visualSpecification, (uint64_t)v40, (unint64_t *)&unk_1EB8191A0, (uint64_t)&type metadata for PaywallVisualSpec);
  if (v18) {
    uint64_t v20 = v19;
  }
  else {
    uint64_t v20 = 0;
  }
  char v21 = (void *)0xE000000000000000;
  if (v18) {
    unint64_t v22 = (unint64_t)v18;
  }
  else {
    unint64_t v22 = 0xE000000000000000;
  }
  if (v16) {
    uint64_t v23 = v17;
  }
  else {
    uint64_t v23 = 0;
  }
  if (v16) {
    unint64_t v24 = (unint64_t)v16;
  }
  else {
    unint64_t v24 = 0xE000000000000000;
  }
  if (v14) {
    uint64_t v25 = v15;
  }
  else {
    uint64_t v25 = 0;
  }
  if (v14) {
    unint64_t v26 = (unint64_t)v14;
  }
  else {
    unint64_t v26 = 0xE000000000000000;
  }
  uint64_t v28 = learnMoreTitle.value._countAndFlagsBits;
  uint64_t v27 = countAndFlagsBits;
  if (object)
  {
    unint64_t v29 = (unint64_t)object;
  }
  else
  {
    uint64_t v27 = 0;
    unint64_t v29 = 0xE000000000000000;
  }
  if (learnMoreTitle.value._object)
  {
    uint64_t v30 = learnMoreTitle.value._object;
  }
  else
  {
    uint64_t v28 = 0;
    uint64_t v30 = (void *)0xE000000000000000;
  }
  uint64_t v31 = learnMoreURL.value._countAndFlagsBits;
  if (learnMoreURL.value._object) {
    char v21 = learnMoreURL.value._object;
  }
  else {
    uint64_t v31 = 0;
  }
  __src[0] = v20;
  __src[1] = v22;
  if (v41) {
    double v32 = 0.0;
  }
  else {
    double v32 = *(double *)&compactPortraitTopOffsetRatio.is_nil;
  }
  void __src[2] = v23;
  __src[3] = v24;
  if (v43) {
    double v33 = 0.0;
  }
  else {
    double v33 = v42;
  }
  __src[4] = v25;
  __src[5] = v26;
  if (v45) {
    double v34 = 0.0;
  }
  else {
    double v34 = v44;
  }
  __src[6] = v27;
  __src[7] = v29;
  if (v47) {
    double v35 = 0.0;
  }
  else {
    double v35 = v46;
  }
  __src[8] = v28;
  __src[9] = v30;
  __src[10] = v31;
  __src[11] = v21;
  sub_1AFD5D534((uint64_t)v39, (uint64_t)&__src[12], &qword_1EB819738, (uint64_t)&type metadata for SubscriptionButtonConfig);
  sub_1AFD5D534((uint64_t)v40, (uint64_t)&__src[31], (unint64_t *)&unk_1EB8191A0, (uint64_t)&type metadata for PaywallVisualSpec);
  *(double *)&__src[77] = v32;
  *(double *)&__src[78] = v33;
  *(double *)&__src[79] = v34;
  *(double *)&__src[80] = v35;
  memcpy(retstr, __src, sizeof(StocksCore::PaywallConfig));
}

uint64_t sub_1AFD5D534(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1AFD5F608(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

unint64_t sub_1AFD5D5B4(char a1)
{
  unint64_t result = 0x546C6C6177796170;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x656C746974;
      break;
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
    case 7:
      unint64_t result = 0xD000000000000013;
      break;
    case 4:
    case 5:
      unint64_t result = 0x726F4D6E7261656CLL;
      break;
    case 6:
      unint64_t result = 0xD000000000000012;
      break;
    case 8:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 9:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 10:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 11:
      unint64_t result = 0xD00000000000001ELL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1AFD5D730(char a1)
{
  unint64_t result = 0x546C6C6177796170;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x656C746974;
      break;
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
    case 7:
      unint64_t result = 0xD000000000000013;
      break;
    case 4:
    case 5:
      unint64_t result = 0x726F4D6E7261656CLL;
      break;
    case 6:
      unint64_t result = 0xD000000000000012;
      break;
    case 8:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 9:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 10:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 11:
      unint64_t result = 0xD00000000000001ELL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1AFD5D8AC(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_1AFD5D5B4(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1AFD5D5B4(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1AFFCBCE8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1AFD5D938()
{
  char v1 = *v0;
  sub_1AFFCBDF8();
  sub_1AFD5D5B4(v1);
  sub_1AFFCAF68();
  swift_bridgeObjectRelease();
  return sub_1AFFCBE38();
}

uint64_t sub_1AFD5D99C()
{
  sub_1AFD5D5B4(*v0);
  sub_1AFFCAF68();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFD5D9F0()
{
  char v1 = *v0;
  sub_1AFFCBDF8();
  sub_1AFD5D5B4(v1);
  sub_1AFFCAF68();
  swift_bridgeObjectRelease();
  return sub_1AFFCBE38();
}

uint64_t sub_1AFD5DA50@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFD61984();
  *a1 = result;
  return result;
}

unint64_t sub_1AFD5DA80@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1AFD5D5B4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1AFD5DAAC()
{
  return sub_1AFD5D730(*v0);
}

uint64_t sub_1AFD5DAB4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFD61984();
  *a1 = result;
  return result;
}

void sub_1AFD5DADC(unsigned char *a1@<X8>)
{
  *a1 = 12;
}

uint64_t sub_1AFD5DAE8(uint64_t a1)
{
  unint64_t v2 = sub_1AFD5ED7C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFD5DB24(uint64_t a1)
{
  unint64_t v2 = sub_1AFD5ED7C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t PaywallConfig.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1AFD5FD9C(0, &qword_1EB819F40, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v68 - v8;
  uint64_t v10 = a1[3];
  uint64_t v85 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_1AFD5ED7C();
  sub_1AFFCBE68();
  if (!v2)
  {
    uint64_t v83 = a2;
    uint64_t v84 = v7;
    uint64_t v99 = (void *)MEMORY[0x1E4FBC860];
    v92[0] = 0;
    sub_1AFFCBAF8();
    object = v93.value._object;
    uint64_t countAndFlagsBits = v93.value._countAndFlagsBits;
    if (v93.value._object)
    {
      char v12 = (void *)MEMORY[0x1E4FBC860];
    }
    else
    {
      swift_beginAccess();
      char v12 = v99;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        char v12 = sub_1AFD352FC(0, v12[2] + 1, 1, v12);
      }
      unint64_t v14 = v12[2];
      unint64_t v13 = v12[3];
      if (v14 >= v13 >> 1) {
        char v12 = sub_1AFD352FC((void *)(v13 > 1), v14 + 1, 1, v12);
      }
      void v12[2] = v14 + 1;
      uint64_t v15 = &v12[2 * v14];
      v15[4] = 0x546C6C6177796170;
      v15[5] = 0xEB00000000657079;
      uint64_t v99 = v12;
      swift_endAccess();
    }
    v92[0] = 1;
    sub_1AFFCBAF8();
    uint64_t v16 = v93.value._object;
    uint64_t v81 = v93.value._countAndFlagsBits;
    if (!v93.value._object)
    {
      uint64_t v80 = object;
      swift_beginAccess();
      char v12 = v99;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        char v12 = sub_1AFD352FC(0, v12[2] + 1, 1, v12);
      }
      unint64_t v18 = v12[2];
      unint64_t v17 = v12[3];
      if (v18 >= v17 >> 1) {
        char v12 = sub_1AFD352FC((void *)(v17 > 1), v18 + 1, 1, v12);
      }
      void v12[2] = v18 + 1;
      uint64_t v19 = &v12[2 * v18];
      v19[4] = 0x656C746974;
      v19[5] = 0xE500000000000000;
      uint64_t v99 = v12;
      swift_endAccess();
      uint64_t v16 = 0;
      object = v80;
    }
    v92[0] = 2;
    sub_1AFFCBAF8();
    uint64_t v79 = v93.value._object;
    uint64_t v77 = v93.value._countAndFlagsBits;
    if (!v93.value._object)
    {
      swift_beginAccess();
      char v12 = v99;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v78 = v16;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        char v12 = sub_1AFD352FC(0, v12[2] + 1, 1, v12);
      }
      unint64_t v22 = v12[2];
      unint64_t v21 = v12[3];
      if (v22 >= v21 >> 1) {
        char v12 = sub_1AFD352FC((void *)(v21 > 1), v22 + 1, 1, v12);
      }
      void v12[2] = v22 + 1;
      uint64_t v23 = &v12[2 * v22];
      v23[4] = 0xD000000000000010;
      uint64_t v23[5] = 0x80000001AFFEC120;
      uint64_t v99 = v12;
      swift_endAccess();
      uint64_t v16 = v78;
    }
    v92[0] = 3;
    sub_1AFFCBAF8();
    Swift::String_optional v76 = v93;
    if (!v93.value._object)
    {
      swift_beginAccess();
      char v12 = v99;
      char v24 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v78 = v16;
      if ((v24 & 1) == 0) {
        char v12 = sub_1AFD352FC(0, v12[2] + 1, 1, v12);
      }
      unint64_t v26 = v12[2];
      unint64_t v25 = v12[3];
      if (v26 >= v25 >> 1) {
        char v12 = sub_1AFD352FC((void *)(v25 > 1), v26 + 1, 1, v12);
      }
      void v12[2] = v26 + 1;
      uint64_t v27 = &v12[2 * v26];
      v27[4] = 0xD000000000000013;
      v27[5] = 0x80000001AFFEC140;
      uint64_t v99 = v12;
      swift_endAccess();
      uint64_t v16 = v78;
    }
    v92[0] = 4;
    sub_1AFFCBAF8();
    Swift::String_optional learnMoreTitle = v93;
    if (!v93.value._object)
    {
      uint64_t v80 = object;
      swift_beginAccess();
      char v12 = v99;
      uint64_t v28 = v16;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        char v12 = sub_1AFD352FC(0, v12[2] + 1, 1, v12);
      }
      unint64_t v30 = v12[2];
      unint64_t v29 = v12[3];
      if (v30 >= v29 >> 1) {
        char v12 = sub_1AFD352FC((void *)(v29 > 1), v30 + 1, 1, v12);
      }
      void v12[2] = v30 + 1;
      uint64_t v31 = (char *)&v12[2 * v30];
      strcpy(v31 + 32, "learnMoreTitle");
      v31[47] = -18;
      uint64_t v99 = v12;
      swift_endAccess();
      uint64_t v16 = v28;
      object = v80;
    }
    v92[0] = 5;
    sub_1AFFCBAF8();
    Swift::String_optional learnMoreURL = v93;
    if (!v93.value._object)
    {
      uint64_t v80 = object;
      swift_beginAccess();
      char v12 = v99;
      double v32 = v16;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        char v12 = sub_1AFD352FC(0, v12[2] + 1, 1, v12);
      }
      unint64_t v34 = v12[2];
      unint64_t v33 = v12[3];
      if (v34 >= v33 >> 1) {
        char v12 = sub_1AFD352FC((void *)(v33 > 1), v34 + 1, 1, v12);
      }
      void v12[2] = v34 + 1;
      double v35 = (char *)&v12[2 * v34];
      strcpy(v35 + 32, "learnMoreURL");
      v35[45] = 0;
      *((_WORD *)v35 + 23) = -5120;
      uint64_t v99 = v12;
      swift_endAccess();
      uint64_t v16 = v32;
      object = v80;
    }
    v98[159] = 6;
    sub_1AFD5F258();
    sub_1AFFCBAF8();
    sub_1AFD5D534((uint64_t)v98, (uint64_t)v96, &qword_1EB819738, (uint64_t)&type metadata for SubscriptionButtonConfig);
    sub_1AFD5D534((uint64_t)v96, (uint64_t)v97, &qword_1EB819738, (uint64_t)&type metadata for SubscriptionButtonConfig);
    if (sub_1AFD48F48((uint64_t)v97) == 1)
    {
      swift_beginAccess();
      char v12 = v99;
      char v37 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v78 = v16;
      if ((v37 & 1) == 0) {
        char v12 = sub_1AFD352FC(0, v12[2] + 1, 1, v12);
      }
      unint64_t v39 = v12[2];
      unint64_t v38 = v12[3];
      if (v39 >= v38 >> 1) {
        char v12 = sub_1AFD352FC((void *)(v38 > 1), v39 + 1, 1, v12);
      }
      void v12[2] = v39 + 1;
      uint64_t v40 = &v12[2 * v39];
      v40[4] = 0xD000000000000012;
      v40[5] = 0x80000001AFFEC170;
      uint64_t v99 = v12;
      swift_endAccess();
      uint64_t v16 = v78;
    }
    sub_1AFD5D534((uint64_t)v96, (uint64_t)&subscriptionButton, &qword_1EB819738, (uint64_t)&type metadata for SubscriptionButtonConfig);
    char v94 = 7;
    sub_1AFD5F2AC();
    sub_1AFFCBAF8();
    sub_1AFD5D534((uint64_t)&v93, (uint64_t)v91, (unint64_t *)&unk_1EB8191A0, (uint64_t)&type metadata for PaywallVisualSpec);
    sub_1AFD5D534((uint64_t)v91, (uint64_t)v92, (unint64_t *)&unk_1EB8191A0, (uint64_t)&type metadata for PaywallVisualSpec);
    if (sub_1AFD5F3B0((uint64_t)v92) == 1)
    {
      uint64_t v78 = v16;
      swift_beginAccess();
      char v12 = v99;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        char v12 = sub_1AFD352FC(0, v12[2] + 1, 1, v12);
      }
      unint64_t v42 = v12[2];
      unint64_t v41 = v12[3];
      if (v42 >= v41 >> 1) {
        char v12 = sub_1AFD352FC((void *)(v41 > 1), v42 + 1, 1, v12);
      }
      void v12[2] = v42 + 1;
      char v43 = &v12[2 * v42];
      v43[4] = 0xD000000000000013;
      v43[5] = 0x80000001AFFEC190;
      uint64_t v99 = v12;
      swift_endAccess();
      uint64_t v16 = v78;
    }
    sub_1AFD5D534((uint64_t)v91, (uint64_t)&visualSpecification, (unint64_t *)&unk_1EB8191A0, (uint64_t)&type metadata for PaywallVisualSpec);
    char v89 = 8;
    sub_1AFFCBAF8();
    double v44 = v16;
    uint64_t v80 = (void *)v87;
    int v73 = v88;
    if (v88)
    {
      swift_beginAccess();
      char v12 = v99;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        char v12 = sub_1AFD352FC(0, v12[2] + 1, 1, v12);
      }
      unint64_t v46 = v12[2];
      unint64_t v45 = v12[3];
      if (v46 >= v45 >> 1) {
        char v12 = sub_1AFD352FC((void *)(v45 > 1), v46 + 1, 1, v12);
      }
      void v12[2] = v46 + 1;
      char v47 = &v12[2 * v46];
      v47[4] = 0xD00000000000001DLL;
      v47[5] = 0x80000001AFFEC1B0;
      uint64_t v99 = v12;
      swift_endAccess();
    }
    char v89 = 9;
    sub_1AFFCBAF8();
    int64_t v72 = v87;
    int v71 = v88;
    if (v88)
    {
      swift_beginAccess();
      char v12 = v99;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        char v12 = sub_1AFD352FC(0, v12[2] + 1, 1, v12);
      }
      unint64_t v49 = v12[2];
      unint64_t v48 = v12[3];
      if (v49 >= v48 >> 1) {
        char v12 = sub_1AFD352FC((void *)(v48 > 1), v49 + 1, 1, v12);
      }
      void v12[2] = v49 + 1;
      uint64_t v50 = &v12[2 * v49];
      v50[4] = 0xD00000000000001ELL;
      v50[5] = 0x80000001AFFEC1D0;
      uint64_t v99 = v12;
      swift_endAccess();
    }
    char v89 = 10;
    sub_1AFFCBAF8();
    int64_t v70 = v87;
    int v69 = v88;
    if (v88)
    {
      swift_beginAccess();
      char v12 = v99;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        char v12 = sub_1AFD352FC(0, v12[2] + 1, 1, v12);
      }
      unint64_t v52 = v12[2];
      unint64_t v51 = v12[3];
      if (v52 >= v51 >> 1) {
        char v12 = sub_1AFD352FC((void *)(v51 > 1), v52 + 1, 1, v12);
      }
      void v12[2] = v52 + 1;
      uint64_t v53 = &v12[2 * v52];
      v53[4] = 0xD00000000000001DLL;
      v53[5] = 0x80000001AFFEC1F0;
      uint64_t v99 = v12;
      swift_endAccess();
    }
    char v89 = 11;
    sub_1AFFCBAF8();
    v68[1] = v87;
    if (v88)
    {
      swift_beginAccess();
      char v12 = v99;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        char v12 = sub_1AFD352FC(0, v12[2] + 1, 1, v12);
      }
      unint64_t v59 = v12[2];
      unint64_t v58 = v12[3];
      v68[0] = v59 + 1;
      if (v59 >= v58 >> 1) {
        char v12 = sub_1AFD352FC((void *)(v58 > 1), v68[0], 1, v12);
      }
      void v12[2] = v68[0];
      uint64_t v60 = &v12[2 * v59];
      v60[4] = 0xD00000000000001ELL;
      v60[5] = 0x80000001AFFEC210;
      uint64_t v99 = v12;
      swift_endAccess();
    }
    int v67 = (int)v80;
    v62.value._uint64_t countAndFlagsBits = v81;
    v61.value._uint64_t countAndFlagsBits = countAndFlagsBits;
    v61.value._object = object;
    v62.value._object = v44;
    v63.value._uint64_t countAndFlagsBits = v77;
    v63.value._object = v79;
    PaywallConfig.init(paywallType:title:descriptionTrial:descriptionNonTrial:learnMoreTitle:learnMoreURL:subscriptionButton:visualSpecification:compactPortraitTopOffsetRatio:compactLandscapeTopOffsetRatio:regularPortraitTopOffsetRatio:regularLandscapeTopOffsetRatio:)(&v86, v61, v62, v63, v76, learnMoreTitle, learnMoreURL, &subscriptionButton, &visualSpecification, *(Swift::Double_optional *)&v54, *(Swift::Double_optional *)&v55, *(Swift::Double_optional *)&v56, *(Swift::Double_optional *)&v57);
    if (v12[2])
    {
      sub_1AFD2CD48();
      uint64_t v64 = swift_allocObject();
      *(_OWORD *)(v64 + 16) = xmmword_1AFFD05F0;
      sub_1AFD5F608(0, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
      *(void *)(v64 + 56) = v65;
      *(void *)(v64 + 64) = sub_1AFD5CDA0();
      *(void *)(v64 + 32) = v12;
      sub_1AFD2C4F4();
      sub_1AFFC8E38();
      long long v66 = (void *)sub_1AFFCB638();
      sub_1AFFCB478();
      sub_1AFFCA878();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AFD2C4F4();
      long long v66 = (void *)sub_1AFFCB638();
      sub_1AFFCB478();
      sub_1AFFCA878();
    }

    (*(void (**)(char *, uint64_t))(v84 + 8))(v9, v6);
    swift_bridgeObjectRelease();
    memcpy(v83, &v86, 0x288uLL);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v85);
}

unint64_t sub_1AFD5ED7C()
{
  unint64_t result = qword_1EB818DF8;
  if (!qword_1EB818DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818DF8);
  }
  return result;
}

uint64_t PaywallConfig.encode(to:)(void *a1)
{
  sub_1AFD5FD9C(0, &qword_1EB81A008, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v15 - v6;
  uint64_t v8 = *v1;
  v15[9] = v1[2];
  v15[10] = v8;
  uint64_t v9 = v1[3];
  v15[7] = v1[4];
  v15[8] = v9;
  uint64_t v10 = v1[5];
  v15[5] = v1[6];
  v15[6] = v10;
  uint64_t v11 = v1[7];
  v15[3] = v1[8];
  v15[4] = v11;
  uint64_t v12 = v1[9];
  v15[1] = v1[10];
  v15[2] = v12;
  v15[0] = v1[11];
  sub_1AFD5D534((uint64_t)(v1 + 12), (uint64_t)v18, &qword_1EB819738, (uint64_t)&type metadata for SubscriptionButtonConfig);
  sub_1AFD5D534((uint64_t)(v1 + 31), (uint64_t)v19, (unint64_t *)&unk_1EB8191A0, (uint64_t)&type metadata for PaywallVisualSpec);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFD5ED7C();
  sub_1AFFCBE78();
  v17[0] = 0;
  uint64_t v13 = v16;
  sub_1AFFCBC08();
  if (!v13)
  {
    v17[0] = 1;
    sub_1AFFCBC08();
    v17[0] = 2;
    sub_1AFFCBC08();
    uint64_t v16 = v5;
    v17[0] = 3;
    sub_1AFFCBC08();
    v17[0] = 4;
    sub_1AFFCBC08();
    v17[0] = 5;
    sub_1AFFCBC08();
    sub_1AFD5D534((uint64_t)v18, (uint64_t)v17, &qword_1EB819738, (uint64_t)&type metadata for SubscriptionButtonConfig);
    char v20 = 6;
    sub_1AFD5FE00();
    sub_1AFFCBBE8();
    sub_1AFD5D534((uint64_t)v19, (uint64_t)v17, (unint64_t *)&unk_1EB8191A0, (uint64_t)&type metadata for PaywallVisualSpec);
    char v20 = 7;
    sub_1AFD5FE54();
    sub_1AFFCBBE8();
    v17[0] = 8;
    sub_1AFFCBC28();
    v17[0] = 9;
    sub_1AFFCBC28();
    v17[0] = 10;
    sub_1AFFCBC28();
    v17[0] = 11;
    sub_1AFFCBC28();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1AFD5F224@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return PaywallConfig.init(from:)(a1, a2);
}

uint64_t sub_1AFD5F23C(void *a1)
{
  return PaywallConfig.encode(to:)(a1);
}

unint64_t sub_1AFD5F258()
{
  unint64_t result = qword_1EB819730;
  if (!qword_1EB819730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819730);
  }
  return result;
}

unint64_t sub_1AFD5F2AC()
{
  unint64_t result = qword_1EB819198;
  if (!qword_1EB819198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819198);
  }
  return result;
}

uint64_t sub_1AFD5F300(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1AFD5F3B0(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 232);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

uint64_t sub_1AFD5F3C8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  if (a30)
  {
    sub_1AFD5F574(result, a2);
    sub_1AFD5F574(a7, a8);
    sub_1AFD5F574(a13, a14);
    sub_1AFD5F574(a19, a20);
    sub_1AFD5F5C4(a25, a26);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1AFD5F574(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1AFD5F5C4(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1AFD5F608(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

BOOL _s10StocksCore13PaywallConfigV2eeoiySbAC_ACtFZ_0(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  double v6 = *v3;
  uint64_t v5 = *((void *)v3 + 1);
  uint64_t v7 = *((void *)v3 + 2);
  uint64_t v45 = *((void *)v3 + 3);
  uint64_t v43 = *((void *)v3 + 4);
  uint64_t v41 = *((void *)v3 + 5);
  uint64_t v39 = *((void *)v3 + 6);
  uint64_t v37 = *((void *)v3 + 7);
  uint64_t v35 = *((void *)v3 + 8);
  uint64_t v33 = *((void *)v3 + 9);
  uint64_t v31 = *((void *)v3 + 10);
  uint64_t v29 = *((void *)v3 + 11);
  sub_1AFD5D534((uint64_t)(v3 + 12), (uint64_t)v74, &qword_1EB819738, (uint64_t)&type metadata for SubscriptionButtonConfig);
  sub_1AFD5D534((uint64_t)(v4 + 31), (uint64_t)v75, (unint64_t *)&unk_1EB8191A0, (uint64_t)&type metadata for PaywallVisualSpec);
  double v8 = v4[77];
  double v9 = v4[78];
  double v10 = v4[79];
  double v11 = v4[80];
  double v12 = *v2;
  uint64_t v13 = *((void *)v2 + 1);
  uint64_t v44 = *((void *)v2 + 3);
  uint64_t v42 = *((void *)v2 + 4);
  uint64_t v40 = *((void *)v2 + 5);
  uint64_t v38 = *((void *)v2 + 6);
  uint64_t v36 = *((void *)v2 + 7);
  uint64_t v34 = *((void *)v2 + 8);
  uint64_t v32 = *((void *)v2 + 9);
  uint64_t v30 = *((void *)v2 + 10);
  uint64_t v28 = *((void *)v2 + 11);
  uint64_t v14 = *((void *)v2 + 2);
  sub_1AFD5D534((uint64_t)(v2 + 12), (uint64_t)v76, &qword_1EB819738, (uint64_t)&type metadata for SubscriptionButtonConfig);
  sub_1AFD5D534((uint64_t)(v2 + 31), (uint64_t)v77, (unint64_t *)&unk_1EB8191A0, (uint64_t)&type metadata for PaywallVisualSpec);
  double v15 = v2[77];
  double v16 = v2[78];
  double v17 = v2[79];
  double v18 = v2[80];
  if (*(void *)&v6 == *(void *)&v12 && v5 == v13 || (v19 = sub_1AFFCBCE8(), BOOL result = 0, (v19 & 1) != 0))
  {
    if (v7 == v14 && v45 == v44 || (v21 = sub_1AFFCBCE8(), BOOL result = 0, (v21 & 1) != 0))
    {
      if (v43 == v42 && v41 == v40 || (v22 = sub_1AFFCBCE8(), BOOL result = 0, (v22 & 1) != 0))
      {
        if (v39 == v38 && v37 == v36 || (v23 = sub_1AFFCBCE8(), BOOL result = 0, (v23 & 1) != 0))
        {
          if (v35 == v34 && v33 == v32 || (v24 = sub_1AFFCBCE8(), BOOL result = 0, (v24 & 1) != 0))
          {
            if (v31 == v30 && v29 == v28 || (v25 = sub_1AFFCBCE8(), BOOL result = 0, (v25 & 1) != 0))
            {
              sub_1AFD5D534((uint64_t)v74, (uint64_t)v73, &qword_1EB819738, (uint64_t)&type metadata for SubscriptionButtonConfig);
              if (sub_1AFD48F48((uint64_t)v73) == 1)
              {
                sub_1AFD5D534((uint64_t)v76, (uint64_t)v60, &qword_1EB819738, (uint64_t)&type metadata for SubscriptionButtonConfig);
                if (sub_1AFD48F48((uint64_t)v60) == 1)
                {
LABEL_26:
                  sub_1AFD5D534((uint64_t)v75, (uint64_t)&v63, (unint64_t *)&unk_1EB8191A0, (uint64_t)&type metadata for PaywallVisualSpec);
                  if (sub_1AFD5F3B0((uint64_t)&v63) == 1)
                  {
                    sub_1AFD5D534((uint64_t)v77, (uint64_t)v60, (unint64_t *)&unk_1EB8191A0, (uint64_t)&type metadata for PaywallVisualSpec);
                    if (sub_1AFD5F3B0((uint64_t)v60) == 1) {
                      goto LABEL_33;
                    }
                    goto LABEL_31;
                  }
                  sub_1AFD5D534((uint64_t)v75, (uint64_t)__src, (unint64_t *)&unk_1EB8191A0, (uint64_t)&type metadata for PaywallVisualSpec);
                  sub_1AFD5D534((uint64_t)v77, (uint64_t)v60, (unint64_t *)&unk_1EB8191A0, (uint64_t)&type metadata for PaywallVisualSpec);
                  if (sub_1AFD5F3B0((uint64_t)v60) == 1)
                  {
                    memcpy(__dst, __src, sizeof(__dst));
                    sub_1AFD5D534((uint64_t)v75, (uint64_t)&v48, (unint64_t *)&unk_1EB8191A0, (uint64_t)&type metadata for PaywallVisualSpec);
                    sub_1AFD5D534((uint64_t)v75, (uint64_t)v58, (unint64_t *)&unk_1EB8191A0, (uint64_t)&type metadata for PaywallVisualSpec);
                    sub_1AFD620CC((uint64_t *)v58);
                    sub_1AFD620CC((uint64_t *)&v48);
                    sub_1AFD62240((uint64_t *)__dst);
LABEL_31:
                    sub_1AFD5D534((uint64_t)v75, (uint64_t)v60, (unint64_t *)&unk_1EB8191A0, (uint64_t)&type metadata for PaywallVisualSpec);
                    sub_1AFD5D534((uint64_t)v77, (uint64_t)&v62, (unint64_t *)&unk_1EB8191A0, (uint64_t)&type metadata for PaywallVisualSpec);
                    sub_1AFD61BF8((uint64_t)v77, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD61C94);
                    sub_1AFD61ED8((uint64_t)v60);
                    return 0;
                  }
                  sub_1AFD5D534((uint64_t)v77, (uint64_t)__dst, (unint64_t *)&unk_1EB8191A0, (uint64_t)&type metadata for PaywallVisualSpec);
                  memcpy(v46, __dst, sizeof(v46));
                  sub_1AFD5D534((uint64_t)v75, (uint64_t)&v48, (unint64_t *)&unk_1EB8191A0, (uint64_t)&type metadata for PaywallVisualSpec);
                  sub_1AFD61BF8((uint64_t)v75, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD61C94);
                  sub_1AFD620CC((uint64_t *)&v48);
                  char v27 = sub_1AFE36D40((uint64_t)__src, (uint64_t)v46);
                  memcpy(v58, __src, sizeof(v58));
                  sub_1AFD62240((uint64_t *)v58);
                  sub_1AFD61BF8((uint64_t)v75, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD5F3C8);
                  if (v27)
                  {
LABEL_33:
                    if (v8 == v15 && v9 == v16 && v10 == v17) {
                      return v11 == v18;
                    }
                  }
                  return 0;
                }
              }
              else
              {
                sub_1AFD5D534((uint64_t)v74, (uint64_t)&v63, &qword_1EB819738, (uint64_t)&type metadata for SubscriptionButtonConfig);
                sub_1AFD5D534((uint64_t)v76, (uint64_t)v60, &qword_1EB819738, (uint64_t)&type metadata for SubscriptionButtonConfig);
                if (sub_1AFD48F48((uint64_t)v60) != 1)
                {
                  sub_1AFD5D534((uint64_t)v76, (uint64_t)&v48, &qword_1EB819738, (uint64_t)&type metadata for SubscriptionButtonConfig);
                  __dst[6] = v54;
                  __dst[7] = v55;
                  __dst[8] = v56;
                  *(void *)&__dst[9] = v57;
                  __dst[2] = v50;
                  __dst[3] = v51;
                  __dst[4] = v52;
                  __dst[5] = v53;
                  __dst[0] = v48;
                  __dst[1] = v49;
                  char v26 = sub_1AFF6C2BC((uint64_t)&v63, (uint64_t)__dst);
                  v58[6] = v69;
                  v58[7] = v70;
                  v58[8] = v71;
                  *(void *)&v58[9] = v72;
                  v58[2] = v65;
                  v58[3] = v66;
                  v58[4] = v67;
                  v58[5] = v68;
                  v58[0] = v63;
                  v58[1] = v64;
                  sub_1AFD5D534((uint64_t)v74, (uint64_t)__src, &qword_1EB819738, (uint64_t)&type metadata for SubscriptionButtonConfig);
                  sub_1AFD623B4((uint64_t)__src);
                  sub_1AFD62460((uint64_t)v58);
                  if ((v26 & 1) == 0) {
                    return 0;
                  }
                  goto LABEL_26;
                }
                long long v54 = v69;
                long long v55 = v70;
                long long v56 = v71;
                uint64_t v57 = v72;
                long long v50 = v65;
                long long v51 = v66;
                long long v52 = v67;
                long long v53 = v68;
                long long v48 = v63;
                long long v49 = v64;
                sub_1AFD5D534((uint64_t)v74, (uint64_t)v58, &qword_1EB819738, (uint64_t)&type metadata for SubscriptionButtonConfig);
                sub_1AFD5D534((uint64_t)v74, (uint64_t)__src, &qword_1EB819738, (uint64_t)&type metadata for SubscriptionButtonConfig);
                sub_1AFD623B4((uint64_t)__src);
                sub_1AFD623B4((uint64_t)v58);
                sub_1AFD62460((uint64_t)&v48);
              }
              sub_1AFD5D534((uint64_t)v74, (uint64_t)v60, &qword_1EB819738, (uint64_t)&type metadata for SubscriptionButtonConfig);
              sub_1AFD5D534((uint64_t)v76, (uint64_t)&v61, &qword_1EB819738, (uint64_t)&type metadata for SubscriptionButtonConfig);
              sub_1AFD619D0(v76, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD61A3C);
              sub_1AFD61AEC(v60);
              return 0;
            }
          }
        }
      }
    }
  }
  return result;
}

void sub_1AFD5FD9C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1AFD5ED7C();
    unint64_t v7 = a3(a1, &type metadata for PaywallConfig.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1AFD5FE00()
{
  unint64_t result = qword_1EB819728;
  if (!qword_1EB819728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819728);
  }
  return result;
}

unint64_t sub_1AFD5FE54()
{
  unint64_t result = qword_1EB819190;
  if (!qword_1EB819190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819190);
  }
  return result;
}

uint64_t destroy for PaywallConfig(void *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = a1[13];
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  if (a1[60])
  {
    if (a1[32])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (a1[38])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (a1[44])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (a1[50])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (a1[56])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for PaywallConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  uint64_t v10 = *(void *)(a2 + 104);
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  if (v10)
  {
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = v10;
    uint64_t v11 = *(void *)(a2 + 120);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = v11;
    uint64_t v12 = *(void *)(a2 + 136);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = v12;
    uint64_t v13 = *(void *)(a2 + 152);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = v13;
    uint64_t v14 = *(void *)(a2 + 168);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    *(void *)(a1 + 168) = v14;
    *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
    uint64_t v15 = *(void *)(a2 + 192);
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    *(void *)(a1 + 192) = v15;
    uint64_t v16 = *(void *)(a2 + 208);
    *(void *)(a1 + 200) = *(void *)(a2 + 200);
    *(void *)(a1 + 208) = v16;
    uint64_t v17 = *(void *)(a2 + 224);
    *(void *)(a1 + 216) = *(void *)(a2 + 216);
    *(void *)(a1 + 224) = v17;
    uint64_t v18 = *(void *)(a2 + 240);
    *(void *)(a1 + 232) = *(void *)(a2 + 232);
    *(void *)(a1 + 240) = v18;
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
  }
  else
  {
    long long v19 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v19;
    *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
    *(void *)(a1 + 240) = *(void *)(a2 + 240);
    long long v20 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v20;
    long long v21 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v21;
    long long v22 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v22;
  }
  char v23 = (_OWORD *)(a1 + 248);
  char v24 = (_OWORD *)(a2 + 248);
  uint64_t v25 = *(void *)(a2 + 480);
  if (v25)
  {
    uint64_t v26 = *(void *)(a2 + 256);
    if (v26)
    {
      *(void *)(a1 + 248) = *(void *)(a2 + 248);
      *(void *)(a1 + 256) = v26;
      uint64_t v27 = *(void *)(a2 + 272);
      *(void *)(a1 + 264) = *(void *)(a2 + 264);
      *(void *)(a1 + 272) = v27;
      uint64_t v28 = *(void *)(a2 + 288);
      *(void *)(a1 + 280) = *(void *)(a2 + 280);
      *(void *)(a1 + 288) = v28;
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      uint64_t v29 = *(void *)(a2 + 304);
      if (v29) {
        goto LABEL_7;
      }
    }
    else
    {
      long long v40 = *(_OWORD *)(a2 + 264);
      *char v23 = *v24;
      *(_OWORD *)(a1 + 264) = v40;
      *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
      uint64_t v29 = *(void *)(a2 + 304);
      if (v29)
      {
LABEL_7:
        *(void *)(a1 + 296) = *(void *)(a2 + 296);
        *(void *)(a1 + 304) = v29;
        uint64_t v30 = *(void *)(a2 + 320);
        *(void *)(a1 + 312) = *(void *)(a2 + 312);
        *(void *)(a1 + 320) = v30;
        uint64_t v31 = *(void *)(a2 + 336);
        *(void *)(a1 + 328) = *(void *)(a2 + 328);
        *(void *)(a1 + 336) = v31;
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        uint64_t v32 = *(void *)(a2 + 352);
        if (v32) {
          goto LABEL_8;
        }
        goto LABEL_14;
      }
    }
    long long v41 = *(_OWORD *)(a2 + 312);
    *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
    *(_OWORD *)(a1 + 312) = v41;
    *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
    uint64_t v32 = *(void *)(a2 + 352);
    if (v32)
    {
LABEL_8:
      *(void *)(a1 + 344) = *(void *)(a2 + 344);
      *(void *)(a1 + 352) = v32;
      uint64_t v33 = *(void *)(a2 + 368);
      *(void *)(a1 + 360) = *(void *)(a2 + 360);
      *(void *)(a1 + 368) = v33;
      uint64_t v34 = *(void *)(a2 + 384);
      *(void *)(a1 + 376) = *(void *)(a2 + 376);
      *(void *)(a1 + 384) = v34;
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      uint64_t v35 = *(void *)(a2 + 400);
      if (v35) {
        goto LABEL_9;
      }
      goto LABEL_15;
    }
LABEL_14:
    long long v42 = *(_OWORD *)(a2 + 360);
    *(_OWORD *)(a1 + 344) = *(_OWORD *)(a2 + 344);
    *(_OWORD *)(a1 + 360) = v42;
    *(_OWORD *)(a1 + 376) = *(_OWORD *)(a2 + 376);
    uint64_t v35 = *(void *)(a2 + 400);
    if (v35)
    {
LABEL_9:
      *(void *)(a1 + 392) = *(void *)(a2 + 392);
      *(void *)(a1 + 400) = v35;
      uint64_t v36 = *(void *)(a2 + 416);
      *(void *)(a1 + 408) = *(void *)(a2 + 408);
      *(void *)(a1 + 416) = v36;
      uint64_t v37 = *(void *)(a2 + 432);
      *(void *)(a1 + 424) = *(void *)(a2 + 424);
      *(void *)(a1 + 432) = v37;
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      uint64_t v38 = *(void *)(a2 + 448);
      if (v38)
      {
LABEL_10:
        *(void *)(a1 + 440) = *(void *)(a2 + 440);
        *(void *)(a1 + 448) = v38;
        uint64_t v39 = *(void *)(a2 + 464);
        *(void *)(a1 + 456) = *(void *)(a2 + 456);
        *(void *)(a1 + 464) = v39;
        sub_1AFFC8E38();
        sub_1AFFC8E38();
LABEL_17:
        *(void *)(a1 + 472) = *(void *)(a2 + 472);
        *(void *)(a1 + 480) = v25;
        *(void *)(a1 + 488) = *(void *)(a2 + 488);
        long long v45 = *(_OWORD *)(a2 + 512);
        *(_OWORD *)(a1 + 496) = *(_OWORD *)(a2 + 496);
        *(_OWORD *)(a1 + 512) = v45;
        *(void *)(a1 + 528) = *(void *)(a2 + 528);
        *(void *)(a1 + 536) = *(void *)(a2 + 536);
        *(void *)(a1 + 544) = *(void *)(a2 + 544);
        *(void *)(a1 + 552) = *(void *)(a2 + 552);
        *(void *)(a1 + 560) = *(void *)(a2 + 560);
        *(void *)(a1 + 568) = *(void *)(a2 + 568);
        *(void *)(a1 + 576) = *(void *)(a2 + 576);
        *(void *)(a1 + 584) = *(void *)(a2 + 584);
        *(void *)(a1 + 592) = *(void *)(a2 + 592);
        *(void *)(a1 + 600) = *(void *)(a2 + 600);
        *(void *)(a1 + 608) = *(void *)(a2 + 608);
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        goto LABEL_18;
      }
LABEL_16:
      long long v44 = *(_OWORD *)(a2 + 456);
      *(_OWORD *)(a1 + 440) = *(_OWORD *)(a2 + 440);
      *(_OWORD *)(a1 + 456) = v44;
      goto LABEL_17;
    }
LABEL_15:
    long long v43 = *(_OWORD *)(a2 + 408);
    *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
    *(_OWORD *)(a1 + 408) = v43;
    *(_OWORD *)(a1 + 424) = *(_OWORD *)(a2 + 424);
    uint64_t v38 = *(void *)(a2 + 448);
    if (v38) {
      goto LABEL_10;
    }
    goto LABEL_16;
  }
  memcpy(v23, v24, 0x170uLL);
LABEL_18:
  *(void *)(a1 + 616) = *(void *)(a2 + 616);
  *(_OWORD *)(a1 + 624) = *(_OWORD *)(a2 + 624);
  *(void *)(a1 + 640) = *(void *)(a2 + 640);
  return a1;
}

uint64_t assignWithCopy for PaywallConfig(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 96);
  uint64_t v5 = (_OWORD *)(a2 + 96);
  uint64_t v6 = *(void *)(a2 + 104);
  if (*(void *)(a1 + 104))
  {
    if (v6)
    {
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
      *(void *)(a1 + 240) = *(void *)(a2 + 240);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AFD61014(a1 + 96);
      long long v7 = *(_OWORD *)(a2 + 112);
      *uint64_t v4 = *v5;
      *(_OWORD *)(a1 + 112) = v7;
      long long v8 = *(_OWORD *)(a2 + 176);
      long long v10 = *(_OWORD *)(a2 + 128);
      long long v9 = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
      *(_OWORD *)(a1 + 176) = v8;
      *(_OWORD *)(a1 + 128) = v10;
      *(_OWORD *)(a1 + 144) = v9;
      long long v12 = *(_OWORD *)(a2 + 208);
      long long v11 = *(_OWORD *)(a2 + 224);
      long long v13 = *(_OWORD *)(a2 + 192);
      *(void *)(a1 + 240) = *(void *)(a2 + 240);
      *(_OWORD *)(a1 + 208) = v12;
      *(_OWORD *)(a1 + 224) = v11;
      *(_OWORD *)(a1 + 192) = v13;
    }
  }
  else if (v6)
  {
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    *(void *)(a1 + 200) = *(void *)(a2 + 200);
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
    *(void *)(a1 + 216) = *(void *)(a2 + 216);
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    *(void *)(a1 + 232) = *(void *)(a2 + 232);
    *(void *)(a1 + 240) = *(void *)(a2 + 240);
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
  }
  else
  {
    long long v14 = *(_OWORD *)(a2 + 112);
    *uint64_t v4 = *v5;
    *(_OWORD *)(a1 + 112) = v14;
    long long v15 = *(_OWORD *)(a2 + 128);
    long long v16 = *(_OWORD *)(a2 + 144);
    long long v17 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v17;
    *(_OWORD *)(a1 + 128) = v15;
    *(_OWORD *)(a1 + 144) = v16;
    long long v18 = *(_OWORD *)(a2 + 192);
    long long v19 = *(_OWORD *)(a2 + 208);
    long long v20 = *(_OWORD *)(a2 + 224);
    *(void *)(a1 + 240) = *(void *)(a2 + 240);
    *(_OWORD *)(a1 + 208) = v19;
    *(_OWORD *)(a1 + 224) = v20;
    *(_OWORD *)(a1 + 192) = v18;
  }
  long long v21 = (long long *)(a1 + 248);
  long long v22 = (long long *)(a2 + 248);
  uint64_t v23 = *(void *)(a2 + 480);
  if (!*(void *)(a1 + 480))
  {
    if (!v23)
    {
LABEL_21:
      memcpy((void *)(a1 + 248), (const void *)(a2 + 248), 0x170uLL);
      goto LABEL_61;
    }
    if (*(void *)(a2 + 256))
    {
      *(void *)(a1 + 248) = *(void *)(a2 + 248);
      *(void *)(a1 + 256) = *(void *)(a2 + 256);
      *(void *)(a1 + 264) = *(void *)(a2 + 264);
      *(void *)(a1 + 272) = *(void *)(a2 + 272);
      *(void *)(a1 + 280) = *(void *)(a2 + 280);
      *(void *)(a1 + 288) = *(void *)(a2 + 288);
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      if (*(void *)(a2 + 304)) {
        goto LABEL_16;
      }
    }
    else
    {
      long long v27 = *v22;
      long long v28 = *(_OWORD *)(a2 + 280);
      *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
      *(_OWORD *)(a1 + 280) = v28;
      *long long v21 = v27;
      if (*(void *)(a2 + 304))
      {
LABEL_16:
        *(void *)(a1 + 296) = *(void *)(a2 + 296);
        *(void *)(a1 + 304) = *(void *)(a2 + 304);
        *(void *)(a1 + 312) = *(void *)(a2 + 312);
        *(void *)(a1 + 320) = *(void *)(a2 + 320);
        *(void *)(a1 + 328) = *(void *)(a2 + 328);
        *(void *)(a1 + 336) = *(void *)(a2 + 336);
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        if (*(void *)(a2 + 352)) {
          goto LABEL_17;
        }
        goto LABEL_27;
      }
    }
    long long v29 = *(_OWORD *)(a2 + 296);
    long long v30 = *(_OWORD *)(a2 + 328);
    *(_OWORD *)(a1 + 312) = *(_OWORD *)(a2 + 312);
    *(_OWORD *)(a1 + 328) = v30;
    *(_OWORD *)(a1 + 296) = v29;
    if (*(void *)(a2 + 352))
    {
LABEL_17:
      *(void *)(a1 + 344) = *(void *)(a2 + 344);
      *(void *)(a1 + 352) = *(void *)(a2 + 352);
      *(void *)(a1 + 360) = *(void *)(a2 + 360);
      *(void *)(a1 + 368) = *(void *)(a2 + 368);
      *(void *)(a1 + 376) = *(void *)(a2 + 376);
      *(void *)(a1 + 384) = *(void *)(a2 + 384);
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      if (*(void *)(a2 + 400)) {
        goto LABEL_18;
      }
      goto LABEL_28;
    }
LABEL_27:
    long long v31 = *(_OWORD *)(a2 + 344);
    long long v32 = *(_OWORD *)(a2 + 376);
    *(_OWORD *)(a1 + 360) = *(_OWORD *)(a2 + 360);
    *(_OWORD *)(a1 + 376) = v32;
    *(_OWORD *)(a1 + 344) = v31;
    if (*(void *)(a2 + 400))
    {
LABEL_18:
      *(void *)(a1 + 392) = *(void *)(a2 + 392);
      *(void *)(a1 + 400) = *(void *)(a2 + 400);
      *(void *)(a1 + 408) = *(void *)(a2 + 408);
      *(void *)(a1 + 416) = *(void *)(a2 + 416);
      *(void *)(a1 + 424) = *(void *)(a2 + 424);
      *(void *)(a1 + 432) = *(void *)(a2 + 432);
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      if (*(void *)(a2 + 448))
      {
LABEL_19:
        *(void *)(a1 + 440) = *(void *)(a2 + 440);
        *(void *)(a1 + 448) = *(void *)(a2 + 448);
        *(void *)(a1 + 456) = *(void *)(a2 + 456);
        *(void *)(a1 + 464) = *(void *)(a2 + 464);
        sub_1AFFC8E38();
        sub_1AFFC8E38();
LABEL_30:
        *(void *)(a1 + 472) = *(void *)(a2 + 472);
        *(void *)(a1 + 480) = *(void *)(a2 + 480);
        *(void *)(a1 + 488) = *(void *)(a2 + 488);
        *(void *)(a1 + 496) = *(void *)(a2 + 496);
        *(void *)(a1 + 504) = *(void *)(a2 + 504);
        *(void *)(a1 + 512) = *(void *)(a2 + 512);
        *(void *)(a1 + 520) = *(void *)(a2 + 520);
        *(void *)(a1 + 528) = *(void *)(a2 + 528);
        *(void *)(a1 + 536) = *(void *)(a2 + 536);
        *(void *)(a1 + 544) = *(void *)(a2 + 544);
        *(void *)(a1 + 552) = *(void *)(a2 + 552);
        *(void *)(a1 + 560) = *(void *)(a2 + 560);
        *(void *)(a1 + 568) = *(void *)(a2 + 568);
        *(void *)(a1 + 576) = *(void *)(a2 + 576);
        *(void *)(a1 + 584) = *(void *)(a2 + 584);
        *(void *)(a1 + 592) = *(void *)(a2 + 592);
        *(void *)(a1 + 600) = *(void *)(a2 + 600);
        *(void *)(a1 + 608) = *(void *)(a2 + 608);
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        goto LABEL_61;
      }
LABEL_29:
      long long v35 = *(_OWORD *)(a2 + 456);
      *(_OWORD *)(a1 + 440) = *(_OWORD *)(a2 + 440);
      *(_OWORD *)(a1 + 456) = v35;
      goto LABEL_30;
    }
LABEL_28:
    long long v33 = *(_OWORD *)(a2 + 392);
    long long v34 = *(_OWORD *)(a2 + 424);
    *(_OWORD *)(a1 + 408) = *(_OWORD *)(a2 + 408);
    *(_OWORD *)(a1 + 424) = v34;
    *(_OWORD *)(a1 + 392) = v33;
    if (*(void *)(a2 + 448)) {
      goto LABEL_19;
    }
    goto LABEL_29;
  }
  if (!v23)
  {
    sub_1AFD61110(a1 + 248);
    goto LABEL_21;
  }
  uint64_t v24 = *(void *)(a2 + 256);
  if (*(void *)(a1 + 256))
  {
    if (v24)
    {
      *(void *)(a1 + 248) = *(void *)(a2 + 248);
      *(void *)(a1 + 256) = *(void *)(a2 + 256);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 264) = *(void *)(a2 + 264);
      *(void *)(a1 + 272) = *(void *)(a2 + 272);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 280) = *(void *)(a2 + 280);
      *(void *)(a1 + 288) = *(void *)(a2 + 288);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AFD61068(a1 + 248);
      long long v26 = *(_OWORD *)(a2 + 264);
      long long v25 = *(_OWORD *)(a2 + 280);
      *long long v21 = *v22;
      *(_OWORD *)(a1 + 264) = v26;
      *(_OWORD *)(a1 + 280) = v25;
    }
  }
  else if (v24)
  {
    *(void *)(a1 + 248) = *(void *)(a2 + 248);
    *(void *)(a1 + 256) = *(void *)(a2 + 256);
    *(void *)(a1 + 264) = *(void *)(a2 + 264);
    *(void *)(a1 + 272) = *(void *)(a2 + 272);
    *(void *)(a1 + 280) = *(void *)(a2 + 280);
    *(void *)(a1 + 288) = *(void *)(a2 + 288);
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
  }
  else
  {
    long long v36 = *v22;
    long long v37 = *(_OWORD *)(a2 + 280);
    *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
    *(_OWORD *)(a1 + 280) = v37;
    *long long v21 = v36;
  }
  uint64_t v38 = (_OWORD *)(a1 + 296);
  uint64_t v39 = (_OWORD *)(a2 + 296);
  uint64_t v40 = *(void *)(a2 + 304);
  if (*(void *)(a1 + 304))
  {
    if (v40)
    {
      *(void *)(a1 + 296) = *(void *)(a2 + 296);
      *(void *)(a1 + 304) = *(void *)(a2 + 304);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 312) = *(void *)(a2 + 312);
      *(void *)(a1 + 320) = *(void *)(a2 + 320);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 328) = *(void *)(a2 + 328);
      *(void *)(a1 + 336) = *(void *)(a2 + 336);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AFD61068(a1 + 296);
      long long v42 = *(_OWORD *)(a2 + 312);
      long long v41 = *(_OWORD *)(a2 + 328);
      *uint64_t v38 = *v39;
      *(_OWORD *)(a1 + 312) = v42;
      *(_OWORD *)(a1 + 328) = v41;
    }
  }
  else if (v40)
  {
    *(void *)(a1 + 296) = *(void *)(a2 + 296);
    *(void *)(a1 + 304) = *(void *)(a2 + 304);
    *(void *)(a1 + 312) = *(void *)(a2 + 312);
    *(void *)(a1 + 320) = *(void *)(a2 + 320);
    *(void *)(a1 + 328) = *(void *)(a2 + 328);
    *(void *)(a1 + 336) = *(void *)(a2 + 336);
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
  }
  else
  {
    long long v43 = *v39;
    long long v44 = *(_OWORD *)(a2 + 328);
    *(_OWORD *)(a1 + 312) = *(_OWORD *)(a2 + 312);
    *(_OWORD *)(a1 + 328) = v44;
    *uint64_t v38 = v43;
  }
  long long v45 = (_OWORD *)(a1 + 344);
  unint64_t v46 = (_OWORD *)(a2 + 344);
  uint64_t v47 = *(void *)(a2 + 352);
  if (*(void *)(a1 + 352))
  {
    if (v47)
    {
      *(void *)(a1 + 344) = *(void *)(a2 + 344);
      *(void *)(a1 + 352) = *(void *)(a2 + 352);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 360) = *(void *)(a2 + 360);
      *(void *)(a1 + 368) = *(void *)(a2 + 368);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 376) = *(void *)(a2 + 376);
      *(void *)(a1 + 384) = *(void *)(a2 + 384);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AFD61068(a1 + 344);
      long long v49 = *(_OWORD *)(a2 + 360);
      long long v48 = *(_OWORD *)(a2 + 376);
      _OWORD *v45 = *v46;
      *(_OWORD *)(a1 + 360) = v49;
      *(_OWORD *)(a1 + 376) = v48;
    }
  }
  else if (v47)
  {
    *(void *)(a1 + 344) = *(void *)(a2 + 344);
    *(void *)(a1 + 352) = *(void *)(a2 + 352);
    *(void *)(a1 + 360) = *(void *)(a2 + 360);
    *(void *)(a1 + 368) = *(void *)(a2 + 368);
    *(void *)(a1 + 376) = *(void *)(a2 + 376);
    *(void *)(a1 + 384) = *(void *)(a2 + 384);
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
  }
  else
  {
    long long v50 = *v46;
    long long v51 = *(_OWORD *)(a2 + 376);
    *(_OWORD *)(a1 + 360) = *(_OWORD *)(a2 + 360);
    *(_OWORD *)(a1 + 376) = v51;
    _OWORD *v45 = v50;
  }
  long long v52 = (_OWORD *)(a1 + 392);
  long long v53 = (_OWORD *)(a2 + 392);
  uint64_t v54 = *(void *)(a2 + 400);
  if (*(void *)(a1 + 400))
  {
    if (v54)
    {
      *(void *)(a1 + 392) = *(void *)(a2 + 392);
      *(void *)(a1 + 400) = *(void *)(a2 + 400);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 408) = *(void *)(a2 + 408);
      *(void *)(a1 + 416) = *(void *)(a2 + 416);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 424) = *(void *)(a2 + 424);
      *(void *)(a1 + 432) = *(void *)(a2 + 432);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AFD61068(a1 + 392);
      long long v56 = *(_OWORD *)(a2 + 408);
      long long v55 = *(_OWORD *)(a2 + 424);
      *long long v52 = *v53;
      *(_OWORD *)(a1 + 408) = v56;
      *(_OWORD *)(a1 + 424) = v55;
    }
  }
  else if (v54)
  {
    *(void *)(a1 + 392) = *(void *)(a2 + 392);
    *(void *)(a1 + 400) = *(void *)(a2 + 400);
    *(void *)(a1 + 408) = *(void *)(a2 + 408);
    *(void *)(a1 + 416) = *(void *)(a2 + 416);
    *(void *)(a1 + 424) = *(void *)(a2 + 424);
    *(void *)(a1 + 432) = *(void *)(a2 + 432);
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
  }
  else
  {
    long long v57 = *v53;
    long long v58 = *(_OWORD *)(a2 + 424);
    *(_OWORD *)(a1 + 408) = *(_OWORD *)(a2 + 408);
    *(_OWORD *)(a1 + 424) = v58;
    *long long v52 = v57;
  }
  unint64_t v59 = (_OWORD *)(a1 + 440);
  uint64_t v60 = (_OWORD *)(a2 + 440);
  uint64_t v61 = *(void *)(a2 + 448);
  if (*(void *)(a1 + 448))
  {
    if (v61)
    {
      *(void *)(a1 + 440) = *(void *)(a2 + 440);
      *(void *)(a1 + 448) = *(void *)(a2 + 448);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 456) = *(void *)(a2 + 456);
      *(void *)(a1 + 464) = *(void *)(a2 + 464);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AFD610BC(a1 + 440);
      long long v62 = *(_OWORD *)(a2 + 456);
      *unint64_t v59 = *v60;
      *(_OWORD *)(a1 + 456) = v62;
    }
  }
  else if (v61)
  {
    *(void *)(a1 + 440) = *(void *)(a2 + 440);
    *(void *)(a1 + 448) = *(void *)(a2 + 448);
    *(void *)(a1 + 456) = *(void *)(a2 + 456);
    *(void *)(a1 + 464) = *(void *)(a2 + 464);
    sub_1AFFC8E38();
    sub_1AFFC8E38();
  }
  else
  {
    long long v63 = *(_OWORD *)(a2 + 456);
    *unint64_t v59 = *v60;
    *(_OWORD *)(a1 + 456) = v63;
  }
  *(void *)(a1 + 472) = *(void *)(a2 + 472);
  *(void *)(a1 + 480) = *(void *)(a2 + 480);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 488) = *(void *)(a2 + 488);
  *(void *)(a1 + 496) = *(void *)(a2 + 496);
  *(void *)(a1 + 504) = *(void *)(a2 + 504);
  *(void *)(a1 + 512) = *(void *)(a2 + 512);
  *(void *)(a1 + 520) = *(void *)(a2 + 520);
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 536) = *(void *)(a2 + 536);
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 552) = *(void *)(a2 + 552);
  *(void *)(a1 + 560) = *(void *)(a2 + 560);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 568) = *(void *)(a2 + 568);
  *(void *)(a1 + 576) = *(void *)(a2 + 576);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 584) = *(void *)(a2 + 584);
  *(void *)(a1 + 592) = *(void *)(a2 + 592);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 600) = *(void *)(a2 + 600);
  *(void *)(a1 + 608) = *(void *)(a2 + 608);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
LABEL_61:
  *(void *)(a1 + 616) = *(void *)(a2 + 616);
  *(void *)(a1 + 624) = *(void *)(a2 + 624);
  *(void *)(a1 + 632) = *(void *)(a2 + 632);
  *(void *)(a1 + 640) = *(void *)(a2 + 640);
  return a1;
}

uint64_t sub_1AFD61014(uint64_t a1)
{
  return a1;
}

uint64_t sub_1AFD61068(uint64_t a1)
{
  return a1;
}

uint64_t sub_1AFD610BC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1AFD61110(uint64_t a1)
{
  return a1;
}

void *__swift_memcpy648_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x288uLL);
}

uint64_t assignWithTake for PaywallConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 104))
  {
    uint64_t v10 = *(void *)(a2 + 104);
    if (v10)
    {
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = v10;
      swift_bridgeObjectRelease();
      uint64_t v11 = *(void *)(a2 + 120);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = v11;
      swift_bridgeObjectRelease();
      uint64_t v12 = *(void *)(a2 + 136);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = v12;
      swift_bridgeObjectRelease();
      uint64_t v13 = *(void *)(a2 + 152);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = v13;
      swift_bridgeObjectRelease();
      uint64_t v14 = *(void *)(a2 + 168);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(void *)(a1 + 168) = v14;
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
      uint64_t v15 = *(void *)(a2 + 192);
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      *(void *)(a1 + 192) = v15;
      swift_bridgeObjectRelease();
      uint64_t v16 = *(void *)(a2 + 208);
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      *(void *)(a1 + 208) = v16;
      swift_bridgeObjectRelease();
      uint64_t v17 = *(void *)(a2 + 224);
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      *(void *)(a1 + 224) = v17;
      swift_bridgeObjectRelease();
      uint64_t v18 = *(void *)(a2 + 240);
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
      *(void *)(a1 + 240) = v18;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1AFD61014(a1 + 96);
  }
  long long v19 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v19;
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  long long v20 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v20;
  long long v21 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v21;
  long long v22 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v22;
LABEL_6:
  if (*(void *)(a1 + 480))
  {
    if (*(void *)(a2 + 480))
    {
      if (*(void *)(a1 + 256))
      {
        uint64_t v23 = *(void *)(a2 + 256);
        if (v23)
        {
          *(void *)(a1 + 248) = *(void *)(a2 + 248);
          *(void *)(a1 + 256) = v23;
          swift_bridgeObjectRelease();
          uint64_t v24 = *(void *)(a2 + 272);
          *(void *)(a1 + 264) = *(void *)(a2 + 264);
          *(void *)(a1 + 272) = v24;
          swift_bridgeObjectRelease();
          uint64_t v25 = *(void *)(a2 + 288);
          *(void *)(a1 + 280) = *(void *)(a2 + 280);
          *(void *)(a1 + 288) = v25;
          swift_bridgeObjectRelease();
          goto LABEL_15;
        }
        sub_1AFD61068(a1 + 248);
      }
      long long v26 = *(_OWORD *)(a2 + 264);
      *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
      *(_OWORD *)(a1 + 264) = v26;
      *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
LABEL_15:
      if (*(void *)(a1 + 304))
      {
        uint64_t v27 = *(void *)(a2 + 304);
        if (v27)
        {
          *(void *)(a1 + 296) = *(void *)(a2 + 296);
          *(void *)(a1 + 304) = v27;
          swift_bridgeObjectRelease();
          uint64_t v28 = *(void *)(a2 + 320);
          *(void *)(a1 + 312) = *(void *)(a2 + 312);
          *(void *)(a1 + 320) = v28;
          swift_bridgeObjectRelease();
          uint64_t v29 = *(void *)(a2 + 336);
          *(void *)(a1 + 328) = *(void *)(a2 + 328);
          *(void *)(a1 + 336) = v29;
          swift_bridgeObjectRelease();
          goto LABEL_20;
        }
        sub_1AFD61068(a1 + 296);
      }
      long long v30 = *(_OWORD *)(a2 + 312);
      *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
      *(_OWORD *)(a1 + 312) = v30;
      *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
LABEL_20:
      if (*(void *)(a1 + 352))
      {
        uint64_t v31 = *(void *)(a2 + 352);
        if (v31)
        {
          *(void *)(a1 + 344) = *(void *)(a2 + 344);
          *(void *)(a1 + 352) = v31;
          swift_bridgeObjectRelease();
          uint64_t v32 = *(void *)(a2 + 368);
          *(void *)(a1 + 360) = *(void *)(a2 + 360);
          *(void *)(a1 + 368) = v32;
          swift_bridgeObjectRelease();
          uint64_t v33 = *(void *)(a2 + 384);
          *(void *)(a1 + 376) = *(void *)(a2 + 376);
          *(void *)(a1 + 384) = v33;
          swift_bridgeObjectRelease();
          goto LABEL_25;
        }
        sub_1AFD61068(a1 + 344);
      }
      long long v34 = *(_OWORD *)(a2 + 360);
      *(_OWORD *)(a1 + 344) = *(_OWORD *)(a2 + 344);
      *(_OWORD *)(a1 + 360) = v34;
      *(_OWORD *)(a1 + 376) = *(_OWORD *)(a2 + 376);
LABEL_25:
      if (*(void *)(a1 + 400))
      {
        uint64_t v35 = *(void *)(a2 + 400);
        if (v35)
        {
          *(void *)(a1 + 392) = *(void *)(a2 + 392);
          *(void *)(a1 + 400) = v35;
          swift_bridgeObjectRelease();
          uint64_t v36 = *(void *)(a2 + 416);
          *(void *)(a1 + 408) = *(void *)(a2 + 408);
          *(void *)(a1 + 416) = v36;
          swift_bridgeObjectRelease();
          uint64_t v37 = *(void *)(a2 + 432);
          *(void *)(a1 + 424) = *(void *)(a2 + 424);
          *(void *)(a1 + 432) = v37;
          swift_bridgeObjectRelease();
          goto LABEL_30;
        }
        sub_1AFD61068(a1 + 392);
      }
      long long v38 = *(_OWORD *)(a2 + 408);
      *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
      *(_OWORD *)(a1 + 408) = v38;
      *(_OWORD *)(a1 + 424) = *(_OWORD *)(a2 + 424);
LABEL_30:
      if (*(void *)(a1 + 448))
      {
        uint64_t v39 = *(void *)(a2 + 448);
        if (v39)
        {
          *(void *)(a1 + 440) = *(void *)(a2 + 440);
          *(void *)(a1 + 448) = v39;
          swift_bridgeObjectRelease();
          uint64_t v40 = *(void *)(a2 + 464);
          *(void *)(a1 + 456) = *(void *)(a2 + 456);
          *(void *)(a1 + 464) = v40;
          swift_bridgeObjectRelease();
LABEL_35:
          uint64_t v42 = *(void *)(a2 + 480);
          *(void *)(a1 + 472) = *(void *)(a2 + 472);
          *(void *)(a1 + 480) = v42;
          swift_bridgeObjectRelease();
          *(void *)(a1 + 488) = *(void *)(a2 + 488);
          *(void *)(a1 + 496) = *(void *)(a2 + 496);
          *(void *)(a1 + 504) = *(void *)(a2 + 504);
          *(_OWORD *)(a1 + 512) = *(_OWORD *)(a2 + 512);
          *(void *)(a1 + 528) = *(void *)(a2 + 528);
          swift_bridgeObjectRelease();
          *(void *)(a1 + 536) = *(void *)(a2 + 536);
          *(void *)(a1 + 544) = *(void *)(a2 + 544);
          swift_bridgeObjectRelease();
          *(void *)(a1 + 552) = *(void *)(a2 + 552);
          *(void *)(a1 + 560) = *(void *)(a2 + 560);
          swift_bridgeObjectRelease();
          *(void *)(a1 + 568) = *(void *)(a2 + 568);
          *(void *)(a1 + 576) = *(void *)(a2 + 576);
          swift_bridgeObjectRelease();
          *(void *)(a1 + 584) = *(void *)(a2 + 584);
          *(void *)(a1 + 592) = *(void *)(a2 + 592);
          swift_bridgeObjectRelease();
          *(void *)(a1 + 600) = *(void *)(a2 + 600);
          *(void *)(a1 + 608) = *(void *)(a2 + 608);
          swift_bridgeObjectRelease();
          goto LABEL_36;
        }
        sub_1AFD610BC(a1 + 440);
      }
      long long v41 = *(_OWORD *)(a2 + 456);
      *(_OWORD *)(a1 + 440) = *(_OWORD *)(a2 + 440);
      *(_OWORD *)(a1 + 456) = v41;
      goto LABEL_35;
    }
    sub_1AFD61110(a1 + 248);
  }
  memcpy((void *)(a1 + 248), (const void *)(a2 + 248), 0x170uLL);
LABEL_36:
  *(void *)(a1 + 616) = *(void *)(a2 + 616);
  *(_OWORD *)(a1 + 624) = *(_OWORD *)(a2 + 624);
  *(void *)(a1 + 640) = *(void *)(a2 + 640);
  return a1;
}

uint64_t getEnumTagSinglePayload for PaywallConfig(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 648)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PaywallConfig(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 648) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 648) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PaywallConfig()
{
  return &type metadata for PaywallConfig;
}

uint64_t getEnumTagSinglePayload for PaywallConfig.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF5) {
    goto LABEL_17;
  }
  if (a2 + 11 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 11) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 11;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xC;
  int v8 = v6 - 12;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for PaywallConfig.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *uint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFD61844);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PaywallConfig.CodingKeys()
{
  return &type metadata for PaywallConfig.CodingKeys;
}

unint64_t sub_1AFD61880()
{
  unint64_t result = qword_1E9AFA028;
  if (!qword_1E9AFA028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFA028);
  }
  return result;
}

unint64_t sub_1AFD618D8()
{
  unint64_t result = qword_1EB818E08;
  if (!qword_1EB818E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818E08);
  }
  return result;
}

unint64_t sub_1AFD61930()
{
  unint64_t result = qword_1EB818E00;
  if (!qword_1EB818E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818E00);
  }
  return result;
}

uint64_t sub_1AFD61984()
{
  unint64_t v0 = sub_1AFFCBA78();
  swift_bridgeObjectRelease();
  if (v0 >= 0xC) {
    return 12;
  }
  else {
    return v0;
  }
}

void *sub_1AFD619D0(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_1AFD61A3C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    return sub_1AFFC8E38();
  }
  return result;
}

uint64_t *sub_1AFD61AEC(uint64_t *a1)
{
  uint64_t v2 = a1[19];
  uint64_t v3 = a1[20];
  sub_1AFD5F300(*a1, a1[1]);
  sub_1AFD5F300(v2, v3);
  return a1;
}

uint64_t sub_1AFD61BF8(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  long long v10 = *(_OWORD *)(a1 + 320);
  long long v11 = *(_OWORD *)(a1 + 336);
  long long v8 = *(_OWORD *)(a1 + 288);
  long long v9 = *(_OWORD *)(a1 + 304);
  long long v6 = *(_OWORD *)(a1 + 256);
  long long v7 = *(_OWORD *)(a1 + 272);
  long long v4 = *(_OWORD *)(a1 + 224);
  long long v5 = *(_OWORD *)(a1 + 240);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    v4,
    *((void *)&v4 + 1),
    v5,
    *((void *)&v5 + 1),
    v6,
    *((void *)&v6 + 1),
    v7,
    *((void *)&v7 + 1),
    v8,
    *((void *)&v8 + 1),
    v9,
    *((void *)&v9 + 1),
    v10,
    *((void *)&v10 + 1),
    v11,
    *((void *)&v11 + 1),
    *(void *)(a1 + 352),
    *(void *)(a1 + 360));
  return a1;
}

uint64_t sub_1AFD61C94(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  if (a30)
  {
    sub_1AFD61E44(result, a2);
    sub_1AFD61E44(a7, a8);
    sub_1AFD61E44(a13, a14);
    sub_1AFD61E44(a19, a20);
    sub_1AFD61E94(a25, a26);
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    return sub_1AFFC8E38();
  }
  return result;
}

uint64_t sub_1AFD61E44(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    return sub_1AFFC8E38();
  }
  return result;
}

uint64_t sub_1AFD61E94(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_1AFFC8E38();
    return sub_1AFFC8E38();
  }
  return result;
}

uint64_t sub_1AFD61ED8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 376);
  uint64_t v21 = *(void *)(a1 + 368);
  uint64_t v3 = *(void *)(a1 + 384);
  uint64_t v4 = *(void *)(a1 + 392);
  uint64_t v5 = *(void *)(a1 + 400);
  uint64_t v6 = *(void *)(a1 + 408);
  uint64_t v7 = *(void *)(a1 + 416);
  uint64_t v8 = *(void *)(a1 + 424);
  long long v19 = *(_OWORD *)(a1 + 448);
  long long v20 = *(_OWORD *)(a1 + 432);
  long long v17 = *(_OWORD *)(a1 + 480);
  long long v18 = *(_OWORD *)(a1 + 464);
  long long v15 = *(_OWORD *)(a1 + 512);
  long long v16 = *(_OWORD *)(a1 + 496);
  long long v13 = *(_OWORD *)(a1 + 544);
  long long v14 = *(_OWORD *)(a1 + 528);
  long long v11 = *(_OWORD *)(a1 + 576);
  long long v12 = *(_OWORD *)(a1 + 560);
  long long v10 = *(_OWORD *)(a1 + 592);
  sub_1AFD5F3C8(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    *(void *)(a1 + 224),
    *(void *)(a1 + 232));
  sub_1AFD5F3C8(v21, v2, v3, v4, v5, v6, v7, v8, v20, *((uint64_t *)&v20 + 1), v19, *((uint64_t *)&v19 + 1), v18, *((uint64_t *)&v18 + 1), v17, *((uint64_t *)&v17 + 1), v16, *((uint64_t *)&v16 + 1), v15,
    *((uint64_t *)&v15 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v11,
    *((uint64_t *)&v11 + 1),
    v10,
    *((uint64_t *)&v10 + 1));
  return a1;
}

uint64_t *sub_1AFD620CC(uint64_t *a1)
{
  uint64_t v2 = a1[6];
  uint64_t v3 = a1[7];
  uint64_t v4 = a1[12];
  uint64_t v5 = a1[13];
  uint64_t v7 = a1[19];
  uint64_t v8 = a1[18];
  uint64_t v9 = a1[25];
  uint64_t v10 = a1[24];
  sub_1AFD61E44(*a1, a1[1]);
  sub_1AFD61E44(v2, v3);
  sub_1AFD61E44(v4, v5);
  sub_1AFD61E44(v8, v7);
  sub_1AFD61E94(v10, v9);
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  return a1;
}

uint64_t *sub_1AFD62240(uint64_t *a1)
{
  uint64_t v2 = a1[6];
  uint64_t v3 = a1[7];
  uint64_t v4 = a1[12];
  uint64_t v5 = a1[13];
  uint64_t v7 = a1[19];
  uint64_t v8 = a1[18];
  uint64_t v9 = a1[25];
  uint64_t v10 = a1[24];
  sub_1AFD5F574(*a1, a1[1]);
  sub_1AFD5F574(v2, v3);
  sub_1AFD5F574(v4, v5);
  sub_1AFD5F574(v8, v7);
  sub_1AFD5F5C4(v10, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AFD623B4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1AFD62460(uint64_t a1)
{
  return a1;
}

uint64_t sub_1AFD6250C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a3;
  uint64_t v7 = sub_1AFFC9E18();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1AFFC98F8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  long long v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFFC98E8();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FAA980], v7);
  uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t, char *, char *, uint64_t, uint64_t))(a4 + 8))(a1, a2, v14, v10, v18, a4);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return v15;
}

uint64_t sub_1AFD626E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1AFD627C4();
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1AFFD05F0;
  *(void *)(v10 + 32) = a1;
  *(void *)(v10 + 40) = a2;
  sub_1AFFC8E38();
  sub_1AFD6250C(v10, a3, a4, a5);
  swift_bridgeObjectRelease();
  uint64_t v11 = (void *)sub_1AFFCA5E8();
  type metadata accessor for Quote();
  uint64_t v12 = sub_1AFFCA668();
  swift_release();

  return v12;
}

void sub_1AFD627C4()
{
  if (!qword_1EB81A0E0)
  {
    unint64_t v0 = sub_1AFFCBC98();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB81A0E0);
    }
  }
}

uint64_t sub_1AFD6281C(uint64_t *a1)
{
  sub_1AFD66D2C(0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Quote();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v14 - v10;
  sub_1AFE2A074(*a1, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1AFD67654((uint64_t)v4, (uint64_t (*)(void))sub_1AFD66D2C);
    sub_1AFD689FC();
    swift_allocError();
    sub_1AFD66D60(0, &qword_1E9AFA080, (uint64_t (*)(uint64_t))type metadata accessor for Quote, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return sub_1AFFCA6E8();
  }
  else
  {
    sub_1AFD6873C((uint64_t)v4, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for Quote);
    sub_1AFD68808((uint64_t)v11, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for Quote);
    sub_1AFD66D60(0, &qword_1E9AFA080, (uint64_t (*)(uint64_t))type metadata accessor for Quote, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    uint64_t v12 = sub_1AFFCA6F8();
    sub_1AFD67654((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for Quote);
  }
  return v12;
}

uint64_t sub_1AFD62ABC()
{
  return sub_1AFFCA758();
}

void sub_1AFD62B50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_1AFD626E4(a6, a7, a8, a9, a10);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a2;
  sub_1AFFC8E48();
  uint64_t v13 = (void *)sub_1AFFCA5E8();
  sub_1AFFCA678();
  swift_release();
  swift_release();

  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = a2;
  sub_1AFFC8E48();
  id v15 = (id)sub_1AFFCA5E8();
  sub_1AFFCA6B8();
  swift_release();
  swift_release();
  swift_release();
}

uint64_t sub_1AFD62C88(uint64_t a1, void (*a2)(char *))
{
  sub_1AFD66D2C(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFD68808(a1, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for Quote);
  uint64_t v7 = type metadata accessor for Quote();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 0, 1, v7);
  a2(v6);
  return sub_1AFD67654((uint64_t)v6, (uint64_t (*)(void))sub_1AFD66D2C);
}

uint64_t sub_1AFD62D98(uint64_t a1, void (*a2)(char *))
{
  sub_1AFD66D2C(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Quote();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  a2(v5);
  return sub_1AFD67654((uint64_t)v5, (uint64_t (*)(void))sub_1AFD66D2C);
}

uint64_t sub_1AFD62E74()
{
  return sub_1AFFCA758();
}

void sub_1AFD62ED8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = a2;
  sub_1AFFC8E48();
  sub_1AFD6250C(a6, a7, a8, a9);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_1AFD47F4C;
  *(void *)(v15 + 24) = v14;
  sub_1AFFC8E48();
  long long v16 = (void *)sub_1AFFCA5E8();
  sub_1AFFCA678();
  swift_release();
  swift_release();

  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_1AFD47F4C;
  *(void *)(v17 + 24) = v14;
  id v18 = (id)sub_1AFFCA5E8();
  sub_1AFFCA6B8();
  swift_release();
  swift_release();
  swift_release();
}

uint64_t sub_1AFD6305C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AFD6308C(a1, a2, a3, a4, (uint64_t (*)(void, void, void))sub_1AFD6250C);
}

uint64_t sub_1AFD63074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AFD6308C(a1, a2, a3, a4, (uint64_t (*)(void, void, void))sub_1AFD62E74);
}

uint64_t sub_1AFD6308C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, void, void))
{
  int64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = MEMORY[0x1E4FBC860];
  if (v7)
  {
    id v18 = a5;
    uint64_t v19 = MEMORY[0x1E4FBC860];
    sub_1AFD9DA10(0, v7, 0);
    uint64_t v8 = v19;
    uint64_t v10 = (uint64_t *)(a1 + 56);
    do
    {
      uint64_t v11 = *(v10 - 1);
      uint64_t v12 = *v10;
      unint64_t v14 = *(void *)(v19 + 16);
      unint64_t v13 = *(void *)(v19 + 24);
      sub_1AFFC8E38();
      if (v14 >= v13 >> 1) {
        sub_1AFD9DA10(v13 > 1, v14 + 1, 1);
      }
      *(void *)(v19 + 16) = v14 + 1;
      uint64_t v15 = v19 + 16 * v14;
      *(void *)(v15 + 32) = v11;
      *(void *)(v15 + 40) = v12;
      v10 += 17;
      --v7;
    }
    while (v7);
    a5 = v18;
  }
  uint64_t v16 = a5(v8, a2, a3);
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_1AFD63198()
{
  return 0x7365746F7571;
}

uint64_t sub_1AFD631AC()
{
  return 0x322E302E31;
}

uint64_t sub_1AFD631C0(uint64_t a1, uint64_t a2)
{
  uint64_t v18 = a2;
  uint64_t v3 = v2;
  uint64_t v13 = a1;
  uint64_t v17 = sub_1AFFC9E08();
  uint64_t v14 = *(void *)(v17 - 8);
  uint64_t v15 = v14;
  MEMORY[0x1F4188790](v17);
  uint64_t v16 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1AFFCA2F8();
  MEMORY[0x1F4188790](v5);
  uint64_t v6 = sub_1AFFC9DA8();
  MEMORY[0x1F4188790](v6);
  sub_1AFD6818C(0, &qword_1EB817D28, MEMORY[0x1E4FAB018]);
  swift_allocObject();
  *(void *)(v2 + 56) = sub_1AFFCA578();
  uint64_t v19 = MEMORY[0x1E4FBC860];
  sub_1AFD671F8(&qword_1EB817C90, 255, MEMORY[0x1E4FAA868]);
  sub_1AFD671C4(0);
  sub_1AFD671F8(&qword_1EB818020, 255, sub_1AFD671C4);
  sub_1AFFCB738();
  sub_1AFFC9DC8();
  swift_allocObject();
  *(void *)(v2 + 64) = sub_1AFFC9DB8();
  uint64_t v7 = MEMORY[0x1E4FBC860];
  uint64_t v19 = MEMORY[0x1E4FBC860];
  sub_1AFD671F8((unint64_t *)&unk_1EB81ABD0, 255, MEMORY[0x1E4FAACC8]);
  sub_1AFD67240(0);
  sub_1AFD671F8((unint64_t *)&qword_1EB81AC58, 255, sub_1AFD67240);
  sub_1AFFCB738();
  sub_1AFD67274();
  swift_allocObject();
  *(void *)(v2 + 72) = sub_1AFFC9F68();
  *(_DWORD *)(v2 + 80) = 0;
  *(void *)(v2 + 88) = v7;
  uint64_t v8 = v13;
  sub_1AFD2CEB0(v13, v2 + 16);
  sub_1AFD66D60(0, &qword_1EB81A450, MEMORY[0x1E4FAA910], MEMORY[0x1E4FBBE00]);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1AFFD05F0;
  sub_1AFFC9DF8();
  uint64_t v19 = v9;
  sub_1AFD671F8((unint64_t *)&unk_1EB81ABB0, 255, MEMORY[0x1E4FAA910]);
  sub_1AFD673A0(0);
  sub_1AFD671F8((unint64_t *)&qword_1EB81AC30, 255, sub_1AFD673A0);
  sub_1AFFCB738();
  sub_1AFD66D60(0, &qword_1EB816C28, (uint64_t (*)(uint64_t))sub_1AFD673DC, MEMORY[0x1E4FAAFF0]);
  swift_allocObject();
  uint64_t v10 = sub_1AFFCA528();
  __swift_destroy_boxed_opaque_existential_1(v8);
  *(void *)(v3 + 96) = v10;
  return v3;
}

uint64_t sub_1AFD6369C@<X0>(uint64_t *a1@<X8>)
{
  sub_1AFFCA508();
  sub_1AFD673DC();
  swift_allocObject();
  uint64_t result = sub_1AFFCA988();
  *a1 = result;
  return result;
}

uint64_t sub_1AFD6372C()
{
  sub_1AFFC9D78();
  sub_1AFFCA508();
  uint64_t v0 = sub_1AFFCA9B8();
  swift_release();
  if (qword_1EB819BE8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1AFFCA8A8();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EB818A00);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_1AFFCA888();
  os_log_type_t v3 = sub_1AFFCB478();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    uint64_t v12 = v5;
    *(_DWORD *)uint64_t v4 = 136315138;
    uint64_t v6 = sub_1AFFC8E38();
    uint64_t v7 = MEMORY[0x1B3E8D630](v6, MEMORY[0x1E4FBB1A0]);
    unint64_t v9 = v8;
    swift_bridgeObjectRelease();
    sub_1AFD36BA8(v7, v9, &v12);
    sub_1AFFCB688();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AFD01000, v2, v3, "Reading quotes from cache for symbols: %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v5, -1, -1);
    MEMORY[0x1B3E8F0D0](v4, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_1AFD6818C(0, &qword_1EB817D28, MEMORY[0x1E4FAB018]);
  sub_1AFFCA558();
  uint64_t v12 = v0;
  sub_1AFD66DF4();
  swift_allocObject();
  uint64_t v10 = sub_1AFFCA6F8();
  sub_1AFFC9D88();
  return v10;
}

uint64_t sub_1AFD639C0(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_1AFD67620(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 64);
  sub_1AFFC9D78();
  uint64_t v8 = sub_1AFFC8E38();
  sub_1AFD6FC04(v8);
  swift_bridgeObjectRelease();
  uint64_t v9 = sub_1AFFCA598();
  swift_release();
  sub_1AFD6818C(0, &qword_1EB817D28, MEMORY[0x1E4FAB018]);
  sub_1AFFCA558();
  sub_1AFD673DC();
  sub_1AFFCA508();
  sub_1AFFCA928();
  swift_release();
  if (qword_1EB819BE8 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_1AFFCA8A8();
  __swift_project_value_buffer(v10, (uint64_t)qword_1EB818A00);
  swift_bridgeObjectRetain_n();
  uint64_t v11 = sub_1AFFCA888();
  os_log_type_t v12 = sub_1AFFCB478();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v30 = v7;
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    uint64_t v32 = v29;
    *(_DWORD *)uint64_t v13 = 136315138;
    uint64_t v28 = v13 + 4;
    type metadata accessor for Quote();
    uint64_t v14 = v6;
    sub_1AFFC8E38();
    uint64_t v15 = sub_1AFFCAC98();
    uint64_t v16 = v2;
    unint64_t v18 = v17;
    swift_bridgeObjectRelease();
    uint64_t v19 = v15;
    uint64_t v6 = v14;
    uint64_t v31 = sub_1AFD36BA8(v19, v18, &v32);
    sub_1AFFCB688();
    uint64_t v2 = v16;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AFD01000, v11, v12, "Writing quotes to cache: %s", v13, 0xCu);
    uint64_t v20 = v29;
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v20, -1, -1);
    MEMORY[0x1B3E8F0D0](v13, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  sub_1AFFC8E38();
  uint64_t v21 = sub_1AFD67A58(MEMORY[0x1E4FBC868], a1, v9);
  swift_bridgeObjectRelease();
  if (*(void *)(v21 + 16))
  {
    uint64_t v22 = sub_1AFFCB318();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v6, 1, 1, v22);
    sub_1AFFCB2F8();
    sub_1AFFC8E48();
    sub_1AFFC8E38();
    uint64_t v23 = sub_1AFFCB2E8();
    uint64_t v24 = (void *)swift_allocObject();
    uint64_t v25 = MEMORY[0x1E4FBCFD8];
    void v24[2] = v23;
    v24[3] = v25;
    v24[4] = v2;
    v24[5] = v21;
    sub_1AFD646E0((uint64_t)v6, (uint64_t)&unk_1E9AFA070, (uint64_t)v24);
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v32 = a1;
  sub_1AFD66DF4();
  swift_allocObject();
  sub_1AFFC8E38();
  uint64_t v26 = sub_1AFFCA6F8();
  sub_1AFFC9D88();
  return v26;
}

uint64_t sub_1AFD63DE0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v61 = a3;
  uint64_t v58 = a1;
  sub_1AFD687A4();
  uint64_t v62 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v63 = (uint64_t)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFD66D2C(0);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v57 = (uint64_t)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v55 = (uint64_t)&v54 - v10;
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v60 = (char *)&v54 - v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v54 - v13;
  sub_1AFD685C4();
  uint64_t v16 = v15 - 8;
  MEMORY[0x1F4188790](v15);
  unint64_t v18 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for Quote();
  uint64_t v20 = *(void **)(v19 - 8);
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v54 = (uint64_t)&v54 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v24 = (char *)&v54 - v23;
  uint64_t v25 = *(int *)(v16 + 56);
  uint64_t v26 = (uint64_t)&v18[v25];
  uint64_t v27 = *a2;
  uint64_t v28 = a2[1];
  sub_1AFD68808((uint64_t)a2 + v25, (uint64_t)&v18[v25], (uint64_t (*)(void))type metadata accessor for Quote);
  sub_1AFD6873C(v26, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for Quote);
  long long v65 = v24;
  sub_1AFD68808((uint64_t)v24, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for Quote);
  uint64_t v29 = (uint64_t)v14;
  uint64_t v30 = v14;
  uint64_t v31 = (void (*)(char *, void, uint64_t, uint64_t))v20[7];
  v31(v30, 0, 1, v19);
  uint64_t v32 = v61;
  uint64_t v33 = *(void *)(v61 + 16);
  uint64_t v64 = v28;
  uint64_t v59 = v27;
  long long v56 = (void (*)(uint64_t, void, uint64_t, uint64_t))v31;
  if (v33)
  {
    uint64_t v34 = v19;
    uint64_t v35 = (uint64_t)v60;
    swift_bridgeObjectRetain_n();
    unint64_t v36 = sub_1AFD79CC8(v27, v28);
    uint64_t v38 = v35;
    if (v37)
    {
      sub_1AFD68808(*(void *)(v32 + 56) + v20[9] * v36, v35, (uint64_t (*)(void))type metadata accessor for Quote);
      uint64_t v39 = v35;
      uint64_t v40 = 0;
    }
    else
    {
      uint64_t v39 = v35;
      uint64_t v40 = 1;
    }
    uint64_t v19 = v34;
    v31((char *)v39, v40, 1, v34);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v38 = (uint64_t)v60;
    v31(v60, 1, 1, v19);
    sub_1AFFC8E38();
  }
  uint64_t v41 = v29;
  uint64_t v42 = v63;
  uint64_t v43 = v63 + *(int *)(v62 + 48);
  sub_1AFD68808(v29, v63, (uint64_t (*)(void))sub_1AFD66D2C);
  sub_1AFD68808(v38, v43, (uint64_t (*)(void))sub_1AFD66D2C);
  long long v44 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v20[6];
  if (v44(v42, 1, v19) == 1)
  {
    sub_1AFD67654(v38, (uint64_t (*)(void))sub_1AFD66D2C);
    sub_1AFD67654(v41, (uint64_t (*)(void))sub_1AFD66D2C);
    int v45 = v44(v43, 1, v19);
    uint64_t v46 = v64;
    if (v45 == 1)
    {
      sub_1AFD67654(v42, (uint64_t (*)(void))sub_1AFD66D2C);
LABEL_14:
      sub_1AFD67654((uint64_t)v65, (uint64_t (*)(void))type metadata accessor for Quote);
      return swift_bridgeObjectRelease();
    }
    goto LABEL_12;
  }
  uint64_t v47 = v55;
  sub_1AFD68808(v42, v55, (uint64_t (*)(void))sub_1AFD66D2C);
  if (v44(v43, 1, v19) == 1)
  {
    sub_1AFD67654(v38, (uint64_t (*)(void))sub_1AFD66D2C);
    sub_1AFD67654(v41, (uint64_t (*)(void))sub_1AFD66D2C);
    sub_1AFD67654(v47, (uint64_t (*)(void))type metadata accessor for Quote);
    uint64_t v46 = v64;
LABEL_12:
    sub_1AFD67654(v42, (uint64_t (*)(void))sub_1AFD687A4);
    uint64_t v48 = v59;
    goto LABEL_15;
  }
  uint64_t v49 = v54;
  sub_1AFD6873C(v43, v54, (uint64_t (*)(void))type metadata accessor for Quote);
  char v50 = sub_1AFE7B178(v47, v49);
  sub_1AFD67654(v49, (uint64_t (*)(void))type metadata accessor for Quote);
  sub_1AFD67654(v38, (uint64_t (*)(void))sub_1AFD66D2C);
  sub_1AFD67654(v41, (uint64_t (*)(void))sub_1AFD66D2C);
  sub_1AFD67654(v47, (uint64_t (*)(void))type metadata accessor for Quote);
  sub_1AFD67654(v42, (uint64_t (*)(void))sub_1AFD66D2C);
  uint64_t v46 = v64;
  uint64_t v48 = v59;
  if (v50) {
    goto LABEL_14;
  }
LABEL_15:
  uint64_t v52 = (uint64_t)v65;
  uint64_t v53 = v57;
  sub_1AFD68808((uint64_t)v65, v57, (uint64_t (*)(void))type metadata accessor for Quote);
  v56(v53, 0, 1, v19);
  sub_1AFE5A650(v53, v48, v46);
  return sub_1AFD67654(v52, (uint64_t (*)(void))type metadata accessor for Quote);
}

uint64_t sub_1AFD64450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[7] = a4;
  v5[8] = a5;
  sub_1AFFCB2F8();
  v5[9] = sub_1AFFCB2E8();
  uint64_t v7 = sub_1AFFCB2A8();
  return MEMORY[0x1F4188298](sub_1AFD644E8, v7, v6);
}

void sub_1AFD644E8()
{
  uint64_t v1 = v0[7];
  swift_release();
  uint64_t v2 = (os_unfair_lock_s *)(v1 + 80);
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 80));
  unint64_t v3 = *(void *)(v1 + 88);
  sub_1AFFC8E38();
  os_unfair_lock_unlock(v2);
  if (v3 >> 62)
  {
    sub_1AFFC8E38();
    uint64_t v4 = sub_1AFFCB9C8();
    swift_bridgeObjectRelease();
    if (!v4) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v4) {
      goto LABEL_13;
    }
  }
  if (v4 < 1)
  {
    __break(1u);
    return;
  }
  uint64_t v5 = 0;
  uint64_t v6 = (uint64_t)(v0 + 2);
  uint64_t v17 = v4;
  unint64_t v18 = v3 & 0xC000000000000001;
  uint64_t v16 = v0;
  do
  {
    if (v18)
    {
      uint64_t v7 = MEMORY[0x1B3E8DC70](v5, v3);
    }
    else
    {
      uint64_t v7 = *(void *)(v3 + 8 * v5 + 32);
      sub_1AFFC8E48();
    }
    uint64_t v8 = v0[7];
    v0[5] = type metadata accessor for QuoteManager();
    v0[6] = &off_1F086A2D0;
    v0[2] = v8;
    if (MEMORY[0x1B3E8F200](v7 + 16))
    {
      uint64_t v19 = v0[8];
      uint64_t v9 = *(void *)(v7 + 24);
      unint64_t v10 = v3;
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8);
      swift_retain_n();
      uint64_t v13 = ObjectType;
      unint64_t v3 = v10;
      uint64_t v14 = v9;
      uint64_t v0 = v16;
      uint64_t v4 = v17;
      v12(v6, v19, v13, v14);
      swift_unknownObjectRelease();
    }
    else
    {
      swift_retain_n();
    }
    ++v5;
    __swift_destroy_boxed_opaque_existential_1(v6);
    swift_release();
    swift_release();
  }
  while (v4 != v5);
LABEL_13:
  swift_bridgeObjectRelease();
  uint64_t v15 = (void (*)(void))v0[1];
  v15();
}

uint64_t sub_1AFD646E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1AFFCB318();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1AFFCB308();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1AFD67654(a1, (uint64_t (*)(void))sub_1AFD67620);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1AFFCB2A8();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1AFD64898()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  swift_release();
  swift_release();
  sub_1AFD67654(v0 + 80, (uint64_t (*)(void))sub_1AFD67128);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1AFD6490C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v81 = a4;
  uint64_t v71 = a2;
  uint64_t v76 = *v4;
  uint64_t v7 = sub_1AFFC9F58();
  uint64_t v86 = *(void *)(v7 - 8);
  uint64_t v87 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v85 = &v68[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_1AFFC9E18();
  uint64_t v82 = *(void *)(v9 - 8);
  uint64_t v83 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v79 = v10;
  uint64_t v80 = &v68[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v91 = sub_1AFFC9DE8();
  uint64_t v11 = *(void *)(v91 - 8);
  MEMORY[0x1F4188790](v91);
  uint64_t v90 = &v68[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = sub_1AFFC98F8();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v74 = v16;
  __int16 v75 = &v68[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v15);
  unint64_t v18 = &v68[-v17];
  uint64_t v19 = sub_1AFFC9938();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v22 = &v68[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1AFFC8978();
  uint64_t v92 = sub_1AFFC9918();
  unint64_t v24 = v23;
  (*(void (**)(unsigned char *, uint64_t))(v20 + 8))(v22, v19);
  if (qword_1EB819BE8 != -1) {
    swift_once();
  }
  uint64_t v25 = sub_1AFFCA8A8();
  __swift_project_value_buffer(v25, (uint64_t)qword_1EB818A00);
  uint64_t v26 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v14 + 16);
  uint64_t v78 = a3;
  uint64_t v73 = v14 + 16;
  uint64_t v72 = v26;
  v26(v18, a3, v13);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v27 = sub_1AFFCA888();
  os_log_type_t v28 = sub_1AFFCB478();
  int v29 = v28;
  BOOL v30 = os_log_type_enabled(v27, v28);
  uint64_t v84 = a1;
  uint64_t v88 = v11;
  uint64_t v77 = v14;
  if (v30)
  {
    uint64_t v31 = swift_slowAlloc();
    uint64_t v70 = swift_slowAlloc();
    v94[0] = v70;
    *(_DWORD *)uint64_t v31 = 136315650;
    int v69 = v29;
    uint64_t v32 = sub_1AFFC8E38();
    uint64_t v33 = MEMORY[0x1B3E8D630](v32, MEMORY[0x1E4FBB1A0]);
    unint64_t v35 = v34;
    swift_bridgeObjectRelease();
    uint64_t v93 = sub_1AFD36BA8(v33, v35, v94);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v31 + 12) = 2080;
    uint64_t v36 = sub_1AFFC98C8();
    uint64_t v93 = sub_1AFD36BA8(v36, v37, v94);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    uint64_t v38 = *(void (**)(unsigned char *, uint64_t))(v14 + 8);
    uint64_t v39 = v13;
    v38(v18, v13);
    *(_WORD *)(v31 + 22) = 2080;
    sub_1AFFC8E38();
    uint64_t v93 = sub_1AFD36BA8(v92, v24, v94);
    sub_1AFFCB688();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AFD01000, v27, (os_log_type_t)v69, "Preparing stock quote request for symbols: %s, earliestBeginDate: %s, requestID: %s", (uint8_t *)v31, 0x20u);
    uint64_t v40 = v70;
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v40, -1, -1);
    uint64_t v41 = v31;
    uint64_t v11 = v88;
    MEMORY[0x1B3E8F0D0](v41, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    uint64_t v42 = *(void (**)(unsigned char *, uint64_t))(v14 + 8);
    uint64_t v39 = v13;
    v42(v18, v13);
    swift_bridgeObjectRelease_n();
  }

  int v45 = v90;
  uint64_t v44 = v91;
  uint64_t v46 = v78;
  if (qword_1EB817BF0 != -1) {
    swift_once();
  }
  sub_1AFD671F8(&qword_1EB816E48, v43, (void (*)(uint64_t))type metadata accessor for QuoteManager);
  sub_1AFFC9BB8();
  if (LOBYTE(v94[0]) == 1) {
    (*(void (**)(unsigned char *, void, uint64_t))(v11 + 104))(v45, *MEMORY[0x1E4FAA8B0], v44);
  }
  else {
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v11 + 16))(v45, v71, v44);
  }
  sub_1AFD6818C(0, &qword_1EB817D50, MEMORY[0x1E4FAB070]);
  uint64_t v76 = v47;
  uint64_t v48 = v75;
  v72(v75, v46, v39);
  uint64_t v49 = v82;
  char v50 = v80;
  uint64_t v51 = v83;
  (*(void (**)(unsigned char *, unint64_t, uint64_t))(v82 + 16))(v80, v81, v83);
  uint64_t v52 = v77;
  unint64_t v53 = (*(unsigned __int8 *)(v77 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80);
  unint64_t v54 = (v74 + *(unsigned __int8 *)(v49 + 80) + v53) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
  uint64_t v55 = (char *)swift_allocObject();
  *((void *)v55 + 2) = v92;
  *((void *)v55 + 3) = v24;
  unint64_t v81 = v24;
  *((void *)v55 + 4) = v89;
  (*(void (**)(char *, unsigned char *, uint64_t))(v52 + 32))(&v55[v53], v48, v39);
  (*(void (**)(char *, unsigned char *, uint64_t))(v49 + 32))(&v55[v54], v50, v51);
  v94[0] = MEMORY[0x1E4FBC860];
  sub_1AFD671F8((unint64_t *)&qword_1EB81ABC8, 255, MEMORY[0x1E4FAAA28]);
  sub_1AFD68440(0);
  sub_1AFD671F8((unint64_t *)&qword_1EB81AC40, 255, sub_1AFD68440);
  swift_retain_n();
  unint64_t v56 = v81;
  swift_bridgeObjectRetain_n();
  uint64_t v57 = v85;
  uint64_t v58 = v87;
  sub_1AFFCB738();
  uint64_t v59 = v92;
  uint64_t v60 = v90;
  sub_1AFFCA608();
  swift_bridgeObjectRelease();
  swift_release_n();
  swift_release();
  (*(void (**)(unsigned char *, uint64_t))(v86 + 8))(v57, v58);
  (*(void (**)(unsigned char *, uint64_t))(v88 + 8))(v60, v91);
  uint64_t v61 = swift_allocObject();
  *(void *)(v61 + 16) = v59;
  *(void *)(v61 + 24) = v56;
  uint64_t v62 = v59;
  sub_1AFFC8E38();
  uint64_t v63 = (void *)sub_1AFFCA5E8();
  sub_1AFD6818C(0, (unint64_t *)&qword_1EB817E90, MEMORY[0x1E4FBAEA0]);
  sub_1AFFCA668();

  swift_release();
  swift_release();
  uint64_t v64 = swift_allocObject();
  *(void *)(v64 + 16) = v62;
  *(void *)(v64 + 24) = v56;
  long long v65 = (void *)sub_1AFFCA5E8();
  uint64_t v66 = sub_1AFFCA6B8();

  swift_release();
  swift_release();
  return v66;
}

uint64_t sub_1AFD6537C(uint64_t a1, uint64_t a2, unint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  if (qword_1EB819BE8 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1AFFCA8A8();
  __swift_project_value_buffer(v12, (uint64_t)qword_1EB818A00);
  swift_bridgeObjectRetain_n();
  uint64_t v13 = sub_1AFFCA888();
  os_log_type_t v14 = sub_1AFFCB478();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v26 = a1;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v27 = v16;
    *(_DWORD *)uint64_t v15 = 136315138;
    sub_1AFFC8E38();
    sub_1AFD36BA8(a2, a3, &v27);
    sub_1AFFCB688();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AFD01000, v13, v14, "Performing quote fetch with requestID: %s", v15, 0xCu);
    swift_arrayDestroy();
    uint64_t v17 = v16;
    a1 = v26;
    MEMORY[0x1B3E8F0D0](v17, -1, -1);
    MEMORY[0x1B3E8F0D0](v15, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v18 = a4[5];
  uint64_t v19 = a4[6];
  __swift_project_boxed_opaque_existential_1(a4 + 2, v18);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 8))(a1, a5, a6, v18, v19);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = a2;
  *(void *)(v20 + 24) = a3;
  sub_1AFFC8E38();
  uint64_t v21 = (void *)sub_1AFFCA5E8();
  sub_1AFD6818C(0, (unint64_t *)&qword_1EB817E90, MEMORY[0x1E4FBAEA0]);
  sub_1AFFCA668();
  swift_release();
  swift_release();

  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = a2;
  *(void *)(v22 + 24) = a3;
  sub_1AFFC8E38();
  unint64_t v23 = (void *)sub_1AFFCA5E8();
  uint64_t v24 = sub_1AFFCA6B8();
  swift_release();
  swift_release();

  return v24;
}

uint64_t sub_1AFD65688(uint64_t *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5 = *a1;
  if (qword_1EB819BE8 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1AFFCA8A8();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EB818A00);
  swift_bridgeObjectRetain_n();
  uint64_t v7 = sub_1AFFCA888();
  os_log_type_t v8 = sub_1AFFCB478();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v12 = v10;
    *(_DWORD *)uint64_t v9 = 136315138;
    sub_1AFFC8E38();
    sub_1AFD36BA8(a2, a3, &v12);
    sub_1AFFCB688();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AFD01000, v7, v8, "Quote fetch with ID: %s returned success", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v10, -1, -1);
    MEMORY[0x1B3E8F0D0](v9, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v12 = v5;
  sub_1AFD66DF4();
  swift_allocObject();
  sub_1AFFC8E38();
  return sub_1AFFCA6F8();
}

uint64_t sub_1AFD65880(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (qword_1EB819BE8 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1AFFCA8A8();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EB818A00);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v6 = sub_1AFFCA888();
  os_log_type_t v7 = sub_1AFFCB478();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v11 = v9;
    *(_DWORD *)uint64_t v8 = 136315650;
    sub_1AFFC8E38();
    sub_1AFD36BA8(a2, a3, &v11);
    sub_1AFFCB688();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 12) = 2048;
    swift_bridgeObjectRelease();
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 22) = 2080;
    sub_1AFD684C8();
    sub_1AFD671F8(&qword_1EB8185B0, 255, (void (*)(uint64_t))sub_1AFD684C8);
    sub_1AFD3AE10();
    sub_1AFFC8E38();
    sub_1AFFCB0D8();
    swift_bridgeObjectRelease();
    sub_1AFFCAFA8();
    swift_bridgeObjectRelease();
    sub_1AFFCAFA8();
    sub_1AFD36BA8(2651, 0xE200000000000000, &v11);
    sub_1AFFCB688();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AFD01000, v6, v7, "Quote request with ID: %s completed with %ld results: %s", (uint8_t *)v8, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v9, -1, -1);
    MEMORY[0x1B3E8F0D0](v8, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  sub_1AFD66DF4();
  swift_allocObject();
  sub_1AFFC8E38();
  return sub_1AFFCA6F8();
}

void sub_1AFD65BDC(void *a1, uint64_t a2, unint64_t a3, uint64_t (*a4)(void), const char *a5)
{
  if (qword_1EB819BE8 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_1AFFCA8A8();
  __swift_project_value_buffer(v10, (uint64_t)qword_1EB818A00);
  sub_1AFFC8E38();
  id v11 = a1;
  sub_1AFFC8E38();
  id v12 = a1;
  oslog = sub_1AFFCA888();
  os_log_type_t v13 = a4();
  if (os_log_type_enabled(oslog, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    uint64_t v19 = v15;
    *(_DWORD *)uint64_t v14 = 136315394;
    sub_1AFFC8E38();
    sub_1AFD36BA8(a2, a3, &v19);
    sub_1AFFCB688();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v14 + 12) = 2080;
    swift_getErrorValue();
    uint64_t v16 = sub_1AFFCBD98();
    sub_1AFD36BA8(v16, v17, &v19);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1AFD01000, oslog, v13, a5, (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v15, -1, -1);
    MEMORY[0x1B3E8F0D0](v14, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_1AFD65E40(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = *a1;
  if ((unint64_t)*a1 >> 62) {
    goto LABEL_65;
  }
  uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  sub_1AFFC8E38();
  if (!v7)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    if ((unint64_t)*a1 >> 62)
    {
      sub_1AFFC8E38();
      uint64_t v8 = sub_1AFFCB9C8();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v8 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    goto LABEL_12;
  }
LABEL_3:
  uint64_t v8 = 0;
  while (1)
  {
    if ((v6 & 0xC000000000000001) != 0)
    {
      uint64_t v9 = MEMORY[0x1B3E8DC70](v8, v6);
    }
    else
    {
      uint64_t v9 = *(void *)(v6 + 8 * v8 + 32);
      sub_1AFFC8E48();
    }
    uint64_t v10 = MEMORY[0x1B3E8F200](v9 + 16);
    swift_release();
    swift_unknownObjectRelease();
    if (!v10) {
      break;
    }
    uint64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
LABEL_62:
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      sub_1AFFC8E38();
      uint64_t v7 = sub_1AFFCB9C8();
      if (!v7) {
        goto LABEL_10;
      }
      goto LABEL_3;
    }
    ++v8;
    if (v11 == v7) {
      goto LABEL_10;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v16 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
LABEL_72:
    sub_1AFFC8E38();
    uint64_t v30 = sub_1AFFCB9C8();
    swift_bridgeObjectRelease();
    if (v16 != v30) {
      goto LABEL_19;
    }
    goto LABEL_12;
  }
  if ((unint64_t)*a1 >> 62) {
    goto LABEL_72;
  }
  if (v16 != *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_19:
    uint64_t v17 = v8 + 5;
    while (1)
    {
      unint64_t v6 = v17 - 4;
      uint64_t v18 = *a1;
      if ((*a1 & 0xC000000000000001) != 0)
      {
        uint64_t v19 = MEMORY[0x1B3E8DC70](v17 - 4);
      }
      else
      {
        if ((v6 & 0x8000000000000000) != 0) {
          goto LABEL_55;
        }
        if (v6 >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_56;
        }
        uint64_t v19 = *(void *)(v18 + 8 * v17);
        sub_1AFFC8E48();
      }
      uint64_t v20 = MEMORY[0x1B3E8F200](v19 + 16);
      swift_release();
      swift_unknownObjectRelease();
      if (!v20) {
        goto LABEL_45;
      }
      if (v6 != v8) {
        break;
      }
LABEL_44:
      if (__OFADD__(v8++, 1)) {
        goto LABEL_58;
      }
LABEL_45:
      uint64_t v28 = v17 - 3;
      if (__OFADD__(v6, 1)) {
        goto LABEL_57;
      }
      if ((unint64_t)*a1 >> 62)
      {
        sub_1AFFC8E38();
        uint64_t v29 = sub_1AFFCB9C8();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v29 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      ++v17;
      if (v28 == v29) {
        goto LABEL_12;
      }
    }
    uint64_t v21 = *a1;
    if ((*a1 & 0xC000000000000001) != 0)
    {
      uint64_t v22 = MEMORY[0x1B3E8DC70](v8, *a1);
      uint64_t v21 = *a1;
      if ((*a1 & 0xC000000000000001) == 0)
      {
LABEL_30:
        if ((v6 & 0x8000000000000000) != 0) {
          goto LABEL_61;
        }
        if (v6 >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_62;
        }
        uint64_t v23 = *(void *)(v21 + 8 * v17);
        sub_1AFFC8E48();
        goto LABEL_33;
      }
    }
    else
    {
      if (v8 < 0) {
        goto LABEL_59;
      }
      if ((unint64_t)v8 >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_60;
      }
      uint64_t v22 = *(void *)(v21 + 8 * v8 + 32);
      sub_1AFFC8E48();
      if ((v21 & 0xC000000000000001) == 0) {
        goto LABEL_30;
      }
    }
    uint64_t v23 = MEMORY[0x1B3E8DC70](v17 - 4, v21);
    uint64_t v21 = *a1;
LABEL_33:
    int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
    *a1 = v21;
    if (!isUniquelyReferenced_nonNull_bridgeObject || v21 < 0 || (v21 & 0x4000000000000000) != 0)
    {
      uint64_t v21 = sub_1AFFB2E54(v21);
      *a1 = v21;
    }
    *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 8 * v8 + 0x20) = v23;
    swift_release();
    sub_1AFFCB1E8();
    uint64_t v25 = *a1;
    int v26 = swift_isUniquelyReferenced_nonNull_bridgeObject();
    *a1 = v25;
    if (!v26 || v25 < 0 || (v25 & 0x4000000000000000) != 0)
    {
      uint64_t v25 = sub_1AFFB2E54(v25);
      *a1 = v25;
    }
    if ((v6 & 0x8000000000000000) != 0) {
      goto LABEL_63;
    }
    if (v6 >= *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_64;
    }
    *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 8 * v17) = v22;
    swift_release();
    sub_1AFFCB1E8();
    goto LABEL_44;
  }
LABEL_12:
  if (!((unint64_t)*a1 >> 62))
  {
    uint64_t v12 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v12 >= v8) {
      goto LABEL_14;
    }
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  sub_1AFFC8E38();
  uint64_t v12 = sub_1AFFCB9C8();
  swift_bridgeObjectRelease();
  if (v12 < v8) {
    goto LABEL_68;
  }
LABEL_14:
  sub_1AFFB3CF8(v8, v12);
  uint64_t v13 = type metadata accessor for QuoteManagerObserverProxy();
  uint64_t ObjectType = swift_getObjectType();
  sub_1AFD67D58(a2, v13, ObjectType, a3);
  MEMORY[0x1B3E8D5F0]();
  if (*(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
LABEL_69:
  }
    sub_1AFFCB228();
  sub_1AFFCB278();
  return sub_1AFFCB1E8();
}

void sub_1AFD662C8(uint64_t a1)
{
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 80));
  swift_unknownObjectRetain();
  uint64_t v3 = sub_1AFD67DB8((uint64_t *)(v1 + 88), a1);
  swift_unknownObjectRelease();
  unint64_t v4 = *(void *)(v1 + 88);
  if (v4 >> 62)
  {
    sub_1AFFC8E38();
    uint64_t v5 = sub_1AFFCB9C8();
    swift_bridgeObjectRelease();
    if (v5 >= v3) {
      goto LABEL_3;
    }
LABEL_7:
    __break(1u);
    return;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v5 < v3) {
    goto LABEL_7;
  }
LABEL_3:
  sub_1AFFB3CF8(v3, v5);

  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 80));
}

uint64_t sub_1AFD663B0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1AFD6490C(a1, a2, a3, a4);
}

void sub_1AFD663D4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  unint64_t v6 = *v2 + 20;
  os_unfair_lock_lock(v6);
  sub_1AFD65E40((uint64_t *)&v5[22], a1, a2);

  os_unfair_lock_unlock(v6);
}

void sub_1AFD66440(uint64_t a1)
{
}

uint64_t sub_1AFD66464@<X0>(double *a1@<X8>)
{
  return sub_1AFD66478(a1, 60.0);
}

uint64_t sub_1AFD66470@<X0>(double *a1@<X8>)
{
  return sub_1AFD66478(a1, 5.0);
}

uint64_t sub_1AFD66478@<X0>(double *a1@<X8>, double a2@<D0>)
{
  *a1 = a2;
  uint64_t v3 = *MEMORY[0x1E4FAA8C0];
  uint64_t v4 = sub_1AFFC9DE8();
  uint64_t v5 = *(uint64_t (**)(double *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 104);

  return v5(a1, v3, v4);
}

uint64_t sub_1AFD664F0(uint64_t a1, uint64_t a2, double a3)
{
  return sub_1AFD66514(a1, a2, a3);
}

uint64_t sub_1AFD66514(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_1AFFCABD8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFD67528();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4FBCB28], v8);
  uint64_t v12 = (void *)sub_1AFFCB4E8();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = a2;
  sub_1AFD6818C(0, (unint64_t *)&qword_1EB817E90, MEMORY[0x1E4FBAEA0]);
  sub_1AFFC8E38();
  sub_1AFFCA7B8();
  swift_release();

  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = a2;
  *(double *)(v14 + 32) = a3;
  *(void *)(v14 + 40) = v4;
  sub_1AFFC8E38();
  sub_1AFFC8E48();
  uint64_t v15 = (void *)sub_1AFFCA5E8();
  sub_1AFFCA678();

  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1AFD6676C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1AFD627C4();
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1AFFD05F0;
  *(void *)(v5 + 32) = a2;
  *(void *)(v5 + 40) = a3;
  sub_1AFFC8E38();
  uint64_t v6 = sub_1AFD6372C();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1AFD66800(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t v39 = a4;
  sub_1AFD67620(0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFD66D2C(0);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for Quote();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (double *)((char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = *a1;
  if (!*(void *)(v19 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
LABEL_7:
    uint64_t v22 = (uint64_t (*)(void))sub_1AFD66D2C;
    uint64_t v23 = (uint64_t)v14;
    return sub_1AFD67654(v23, v22);
  }
  sub_1AFFC8E38();
  unint64_t v20 = sub_1AFD79CC8(a2, a3);
  if (v21)
  {
    sub_1AFD68808(*(void *)(v19 + 56) + *(void *)(v16 + 72) * v20, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for Quote);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1) {
    goto LABEL_7;
  }
  sub_1AFD6873C((uint64_t)v14, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for Quote);
  if (((_BYTE)v18[1] & 1) == 0 && ((_BYTE)v18[3] & 1) == 0)
  {
    double v24 = v18[2] + a5 - *v18;
    *uint64_t v18 = a5;
    *((unsigned char *)v18 + 8) = 0;
    v18[2] = v24;
    *((unsigned char *)v18 + 24) = 0;
    sub_1AFD66D60(0, &qword_1E9AFA048, (uint64_t (*)(uint64_t))sub_1AFD676B4, MEMORY[0x1E4FBBE00]);
    sub_1AFD676B4();
    uint64_t v26 = v25 - 8;
    unint64_t v27 = (*(unsigned __int8 *)(*(void *)(v25 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v25 - 8) + 80);
    uint64_t v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_1AFFD05F0;
    uint64_t v29 = (uint64_t *)(v28 + v27);
    uint64_t v30 = v28 + v27 + *(int *)(v26 + 56);
    *uint64_t v29 = a2;
    v29[1] = a3;
    sub_1AFD68808((uint64_t)v18, v30, (uint64_t (*)(void))type metadata accessor for Quote);
    sub_1AFFC8E38();
    unint64_t v31 = sub_1AFDFA02C(v28);
    uint64_t v32 = sub_1AFFCB318();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v11, 1, 1, v32);
    sub_1AFFCB2F8();
    uint64_t v33 = v39;
    sub_1AFFC8E48();
    sub_1AFFC8E38();
    uint64_t v34 = sub_1AFFCB2E8();
    unint64_t v35 = (void *)swift_allocObject();
    uint64_t v36 = MEMORY[0x1E4FBCFD8];
    v35[2] = v34;
    v35[3] = v36;
    v35[4] = v33;
    v35[5] = v31;
    sub_1AFD646E0((uint64_t)v11, (uint64_t)&unk_1E9AFA058, (uint64_t)v35);
    swift_release();
    swift_bridgeObjectRelease();
  }
  uint64_t v22 = (uint64_t (*)(void))type metadata accessor for Quote;
  uint64_t v23 = (uint64_t)v18;
  return sub_1AFD67654(v23, v22);
}

uint64_t sub_1AFD66C70()
{
  sub_1AFD68928(v0 + 16);

  return swift_deallocClassInstance();
}

uint64_t sub_1AFD66CA8(void *a1, uint64_t a2)
{
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  uint64_t v6 = __swift_project_boxed_opaque_existential_1(a1, v4);

  return sub_1AFD678D0((uint64_t)v6, a2, v2, v4, v5);
}

void sub_1AFD66CFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1AFD62B50(a1, a2, a3, a4, v4[4], v4[5], v4[6], v4[7], v4[2], v4[3]);
}

void sub_1AFD66D2C(uint64_t a1)
{
}

void sub_1AFD66D60(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1AFD66DC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1AFD62ED8(a1, a2, a3, a4, v4[4], v4[5], v4[6], v4[2], v4[3]);
}

void sub_1AFD66DF4()
{
  if (!qword_1EB817D88)
  {
    sub_1AFD6818C(255, (unint64_t *)&qword_1EB817E90, MEMORY[0x1E4FBAEA0]);
    unint64_t v0 = sub_1AFFCA788();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB817D88);
    }
  }
}

uint64_t sub_1AFD66E68(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1AFD66F44;
  return v6(a1);
}

uint64_t sub_1AFD66F44()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1AFD6703C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t sub_1AFD67050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t sub_1AFD67064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t sub_1AFD67078(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_1AFD6708C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t sub_1AFD670A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t sub_1AFD670B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t type metadata accessor for QuoteManager()
{
  return self;
}

void sub_1AFD670EC()
{
  if (MEMORY[0x1E4FBC8F0]) {
    sub_1AFD67128(0);
  }
}

void sub_1AFD67128(uint64_t a1)
{
}

void sub_1AFD6715C(uint64_t a1)
{
}

uint64_t type metadata accessor for QuoteManagerObserverProxy()
{
  return self;
}

ValueMetadata *type metadata accessor for QuoteManager.StoreDescriptor()
{
  return &type metadata for QuoteManager.StoreDescriptor;
}

void sub_1AFD671C4(uint64_t a1)
{
}

uint64_t sub_1AFD671F8(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1AFD67240(uint64_t a1)
{
}

void sub_1AFD67274()
{
  if (!qword_1EB817CC0)
  {
    sub_1AFD67340();
    sub_1AFD6818C(255, (unint64_t *)&qword_1EB817E90, MEMORY[0x1E4FBAEA0]);
    sub_1AFD671F8(&qword_1EB818048, 255, (void (*)(uint64_t))sub_1AFD67340);
    unint64_t v0 = sub_1AFFC9F88();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB817CC0);
    }
  }
}

void sub_1AFD67340()
{
  if (!qword_1EB819E38)
  {
    unint64_t v0 = sub_1AFFCB388();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB819E38);
    }
  }
}

void sub_1AFD673A0(uint64_t a1)
{
}

uint64_t sub_1AFD673D4@<X0>(uint64_t *a1@<X8>)
{
  return sub_1AFD6369C(a1);
}

void sub_1AFD673DC()
{
  if (!qword_1EB817E00)
  {
    type metadata accessor for Quote();
    sub_1AFD674D4();
    sub_1AFD671F8(&qword_1EB817AE8, 255, (void (*)(uint64_t))type metadata accessor for Quote);
    sub_1AFD671F8(&qword_1EB817AE0, 255, (void (*)(uint64_t))type metadata accessor for Quote);
    unint64_t v0 = sub_1AFFCA9A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB817E00);
    }
  }
}

unint64_t sub_1AFD674D4()
{
  unint64_t result = qword_1EB816E40;
  if (!qword_1EB816E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816E40);
  }
  return result;
}

unint64_t sub_1AFD67528()
{
  unint64_t result = qword_1EB819E68;
  if (!qword_1EB819E68)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB819E68);
  }
  return result;
}

uint64_t sub_1AFD67568()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1AFD675A0(uint64_t a1)
{
  return sub_1AFD6676C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1AFD675BC()
{
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1AFD675FC(uint64_t *a1)
{
  return sub_1AFD66800(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 40), *(double *)(v1 + 32));
}

void sub_1AFD67620(uint64_t a1)
{
}

uint64_t sub_1AFD67654(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1AFD676B4()
{
  if (!qword_1EB811450)
  {
    type metadata accessor for Quote();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB811450);
    }
  }
}

uint64_t sub_1AFD67720(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  unint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_1AFD56424;
  return sub_1AFD64450(a1, v4, v5, v7, v6);
}

uint64_t sub_1AFD677E0()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1AFD67818(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1AFD3503C;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1E9AFA060 + dword_1E9AFA060);
  return v6(a1, v4);
}

uint64_t sub_1AFD678D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v13[3] = a4;
  v13[4] = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v13);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16))(boxed_opaque_existential_1, a1, a4);
  if (MEMORY[0x1B3E8F200](a3 + 16))
  {
    uint64_t v10 = *(void *)(a3 + 24);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v10 + 8))(v13, a2, ObjectType, v10);
    swift_unknownObjectRelease();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
}

uint64_t sub_1AFD67998@<X0>(void *a1@<X8>)
{
  sub_1AFD685C4();
  sub_1AFFCB928();
  sub_1AFFCAFA8();
  type metadata accessor for Quote();
  uint64_t result = sub_1AFFCB928();
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  return result;
}

uint64_t sub_1AFD67A58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v32 = a3;
  sub_1AFD685C4();
  uint64_t v31 = v6;
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v9 = (uint64_t *)((char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (uint64_t *)((char *)&v28 - v10);
  uint64_t v34 = a1;
  uint64_t v12 = *(void *)(a2 + 64);
  uint64_t v29 = a2 + 64;
  uint64_t v13 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v12;
  int64_t v30 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v33 = a2;
  uint64_t result = sub_1AFFC8E38();
  int64_t v17 = 0;
  if (!v15) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v18 = __clz(__rbit64(v15));
  v15 &= v15 - 1;
  for (unint64_t i = v18 | (v17 << 6); ; unint64_t i = __clz(__rbit64(v21)) + (v17 << 6))
  {
    uint64_t v23 = *(void *)(v33 + 56);
    double v24 = (uint64_t *)(*(void *)(v33 + 48) + 16 * i);
    uint64_t v25 = *v24;
    uint64_t v26 = v24[1];
    uint64_t v27 = type metadata accessor for Quote();
    sub_1AFD68808(v23 + *(void *)(*(void *)(v27 - 8) + 72) * i, (uint64_t)v11 + *(int *)(v31 + 48), (uint64_t (*)(void))type metadata accessor for Quote);
    void *v11 = v25;
    v11[1] = v26;
    sub_1AFD6873C((uint64_t)v11, (uint64_t)v9, (uint64_t (*)(void))sub_1AFD685C4);
    sub_1AFFC8E38();
    sub_1AFD63DE0((uint64_t)&v34, v9, v32);
    if (v3)
    {
      swift_bridgeObjectRelease();
      sub_1AFD67654((uint64_t)v9, (uint64_t (*)(void))sub_1AFD685C4);
      return swift_release();
    }
    uint64_t result = sub_1AFD67654((uint64_t)v9, (uint64_t (*)(void))sub_1AFD685C4);
    if (v15) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v17++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v30) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v29 + 8 * v17);
    if (!v21) {
      break;
    }
LABEL_17:
    unint64_t v15 = (v21 - 1) & v21;
  }
  int64_t v22 = v17 + 1;
  if (v17 + 1 >= v30) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v29 + 8 * v22);
  if (v21) {
    goto LABEL_16;
  }
  int64_t v22 = v17 + 2;
  if (v17 + 2 >= v30) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v29 + 8 * v22);
  if (v21) {
    goto LABEL_16;
  }
  int64_t v22 = v17 + 3;
  if (v17 + 3 >= v30) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v29 + 8 * v22);
  if (v21) {
    goto LABEL_16;
  }
  int64_t v22 = v17 + 4;
  if (v17 + 4 >= v30)
  {
LABEL_26:
    swift_release();
    return v34;
  }
  unint64_t v21 = *(void *)(v29 + 8 * v22);
  if (v21)
  {
LABEL_16:
    int64_t v17 = v22;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v17 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v17 >= v30) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v29 + 8 * v17);
    ++v22;
    if (v21) {
      goto LABEL_17;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1AFD67D58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v5 + 24) = a4;
  swift_unknownObjectWeakAssign();
  return v5;
}

uint64_t sub_1AFD67DB8(uint64_t *a1, uint64_t a2)
{
  unint64_t v4 = *a1;
  if ((unint64_t)*a1 >> 62) {
    goto LABEL_64;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  sub_1AFFC8E38();
  if (v5)
  {
LABEL_3:
    unint64_t v6 = 0;
    while (1)
    {
      if ((v4 & 0xC000000000000001) != 0)
      {
        uint64_t v7 = MEMORY[0x1B3E8DC70](v6, v4);
      }
      else
      {
        uint64_t v7 = *(void *)(v4 + 8 * v6 + 32);
        sub_1AFFC8E48();
      }
      uint64_t v8 = MEMORY[0x1B3E8F200](v7 + 16);
      swift_release();
      if (v8)
      {
        swift_unknownObjectRelease();
        if (v8 == a2) {
          break;
        }
      }
      unint64_t v9 = v6 + 1;
      if (__OFADD__(v6, 1))
      {
        __break(1u);
LABEL_54:
        __break(1u);
LABEL_55:
        __break(1u);
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
LABEL_62:
        __break(1u);
LABEL_63:
        __break(1u);
LABEL_64:
        sub_1AFFC8E38();
        uint64_t v5 = sub_1AFFCB9C8();
        if (!v5) {
          goto LABEL_11;
        }
        goto LABEL_3;
      }
      ++v6;
      if (v9 == v5) {
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v12 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
    }
    else if (!((unint64_t)*a1 >> 62))
    {
      if (v12 != *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_17:
        for (unint64_t i = v6 + 5; ; ++i)
        {
          unint64_t v4 = i - 4;
          uint64_t v14 = *a1;
          if ((*a1 & 0xC000000000000001) != 0)
          {
            uint64_t v15 = MEMORY[0x1B3E8DC70](i - 4);
          }
          else
          {
            if ((v4 & 0x8000000000000000) != 0) {
              goto LABEL_54;
            }
            if (v4 >= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_55;
            }
            uint64_t v15 = *(void *)(v14 + 8 * i);
            sub_1AFFC8E48();
          }
          uint64_t v16 = MEMORY[0x1B3E8F200](v15 + 16);
          swift_release();
          if (v16)
          {
            swift_unknownObjectRelease();
            if (v16 == a2) {
              goto LABEL_44;
            }
          }
          if (v4 != v6) {
            break;
          }
LABEL_43:
          if (__OFADD__(v6++, 1)) {
            goto LABEL_57;
          }
LABEL_44:
          unint64_t v24 = i - 3;
          if (__OFADD__(v4, 1)) {
            goto LABEL_56;
          }
          if ((unint64_t)*a1 >> 62)
          {
            sub_1AFFC8E38();
            uint64_t v25 = sub_1AFFCB9C8();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v25 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          if (v24 == v25) {
            return v6;
          }
        }
        uint64_t v17 = *a1;
        if ((*a1 & 0xC000000000000001) != 0)
        {
          uint64_t v18 = MEMORY[0x1B3E8DC70](v6, *a1);
          uint64_t v17 = *a1;
          if ((*a1 & 0xC000000000000001) == 0)
          {
LABEL_29:
            if ((v4 & 0x8000000000000000) != 0) {
              goto LABEL_60;
            }
            if (v4 >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_61;
            }
            uint64_t v19 = *(void *)(v17 + 8 * i);
            sub_1AFFC8E48();
            goto LABEL_32;
          }
        }
        else
        {
          if ((v6 & 0x8000000000000000) != 0) {
            goto LABEL_58;
          }
          if (v6 >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_59;
          }
          uint64_t v18 = *(void *)(v17 + 8 * v6 + 32);
          sub_1AFFC8E48();
          if ((v17 & 0xC000000000000001) == 0) {
            goto LABEL_29;
          }
        }
        uint64_t v19 = MEMORY[0x1B3E8DC70](i - 4, v17);
        uint64_t v17 = *a1;
LABEL_32:
        int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
        *a1 = v17;
        if (!isUniquelyReferenced_nonNull_bridgeObject || v17 < 0 || (v17 & 0x4000000000000000) != 0)
        {
          uint64_t v17 = sub_1AFFB2E54(v17);
          *a1 = v17;
        }
        *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 8 * v6 + 0x20) = v19;
        swift_release();
        sub_1AFFCB1E8();
        uint64_t v21 = *a1;
        int v22 = swift_isUniquelyReferenced_nonNull_bridgeObject();
        *a1 = v21;
        if (!v22 || v21 < 0 || (v21 & 0x4000000000000000) != 0)
        {
          uint64_t v21 = sub_1AFFB2E54(v21);
          *a1 = v21;
        }
        if ((v4 & 0x8000000000000000) != 0) {
          goto LABEL_62;
        }
        if (v4 >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_63;
        }
        *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 8 * i) = v18;
        swift_release();
        sub_1AFFCB1E8();
        goto LABEL_43;
      }
      return v6;
    }
    sub_1AFFC8E38();
    uint64_t v27 = sub_1AFFCB9C8();
    swift_bridgeObjectRelease();
    if (v12 != v27) {
      goto LABEL_17;
    }
    return v6;
  }
LABEL_11:
  swift_bridgeObjectRelease();
  unint64_t v10 = *a1;
  if (!(v10 >> 62)) {
    return *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  sub_1AFFC8E38();
  uint64_t v26 = sub_1AFFCB9C8();
  swift_bridgeObjectRelease();
  return v26;
}

void sub_1AFD6818C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void, uint64_t, void))
{
  if (!*a2)
  {
    uint64_t v6 = type metadata accessor for Quote();
    unint64_t v7 = a3(a1, MEMORY[0x1E4FBB1A0], v6, MEMORY[0x1E4FBB1B0]);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1AFD681FC()
{
  uint64_t v1 = sub_1AFFC98F8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = sub_1AFFC9E18();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return MEMORY[0x1F4186498](v0, v10, v11);
}

uint64_t sub_1AFD6835C(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_1AFFC98F8() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(sub_1AFFC9E18() - 8);
  uint64_t v7 = v1[2];
  unint64_t v8 = v1[3];
  uint64_t v9 = (void *)v1[4];
  uint64_t v10 = (uint64_t)v1 + ((v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return sub_1AFD6537C(a1, v7, v8, v9, (uint64_t)v1 + v4, v10);
}

void sub_1AFD68440(uint64_t a1)
{
}

uint64_t sub_1AFD68474(uint64_t a1)
{
  return sub_1AFD65880(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_1AFD68490(void *a1)
{
  sub_1AFD65BDC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), MEMORY[0x1E4FBD390], "Quote request with ID: %s completed with error: %s");
}

void sub_1AFD684C8()
{
  if (!qword_1EB8185B8)
  {
    sub_1AFD6818C(255, (unint64_t *)&qword_1EB817E90, MEMORY[0x1E4FBAEA0]);
    sub_1AFD68550();
    unint64_t v0 = sub_1AFFCB918();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8185B8);
    }
  }
}

unint64_t sub_1AFD68550()
{
  unint64_t result = qword_1EB818598;
  if (!qword_1EB818598)
  {
    sub_1AFD6818C(255, (unint64_t *)&qword_1EB817E90, MEMORY[0x1E4FBAEA0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818598);
  }
  return result;
}

void sub_1AFD685C4()
{
  if (!qword_1EB817F00)
  {
    type metadata accessor for Quote();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB817F00);
    }
  }
}

uint64_t objectdestroy_12Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1AFD6867C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  unint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_1AFD3503C;
  return sub_1AFD64450(a1, v4, v5, v7, v6);
}

uint64_t sub_1AFD6873C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1AFD687A4()
{
  if (!qword_1EB817B08)
  {
    sub_1AFD66D2C(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB817B08);
    }
  }
}

uint64_t sub_1AFD68808(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1AFD68870(uint64_t *a1)
{
  return sub_1AFD65688(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_1AFD6888C(void *a1)
{
  sub_1AFD65BDC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), MEMORY[0x1E4FBD380], "Quote fetch with ID: %s returned error: %s");
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_1AFD68928(uint64_t a1)
{
  return a1;
}

uint64_t sub_1AFD68950(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_1AFD68984()
{
  uint64_t v1 = *(void (**)(void))(v0 + 16);
  sub_1AFDFA02C(MEMORY[0x1E4FBC860]);
  v1();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFD689D8(uint64_t a1)
{
  return sub_1AFD62C88(a1, *(void (**)(char *))(v1 + 16));
}

uint64_t sub_1AFD689F4(uint64_t a1)
{
  return sub_1AFD62D98(a1, *(void (**)(char *))(v1 + 16));
}

unint64_t sub_1AFD689FC()
{
  unint64_t result = qword_1E9AFA078;
  if (!qword_1E9AFA078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFA078);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for QuoteManagerError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1AFD68AECLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for QuoteManagerError()
{
  return &type metadata for QuoteManagerError;
}

unint64_t sub_1AFD68B28()
{
  unint64_t result = qword_1E9AFA088;
  if (!qword_1E9AFA088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFA088);
  }
  return result;
}

uint64_t WatchlistQuery.init()@<X0>(uint64_t *a1@<X8>)
{
  sub_1AFD743DC(0, (unint64_t *)&qword_1EB8167E0, (uint64_t (*)(uint64_t))sub_1AFD33A98, MEMORY[0x1E4F18188]);
  sub_1AFFC8A08();
  sub_1AFFC89F8();
  uint64_t result = sub_1AFFC89C8();
  *a1 = result;
  return result;
}

uint64_t WatchlistQuery.entities(for:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 + 176) = a1;
  *(void *)(v2 + 184) = v3;
  return MEMORY[0x1F4188298](sub_1AFD68C60, 0, 0);
}

uint64_t sub_1AFD68C60()
{
  uint64_t v15 = v0;
  if (qword_1EB810B30 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1AFFCA8A8();
  v0[24] = __swift_project_value_buffer(v1, (uint64_t)qword_1EB810AF0);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_1AFFCA888();
  os_log_type_t v3 = sub_1AFFCB478();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = v0[22];
  if (v4)
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v14 = v7;
    *(_DWORD *)uint64_t v6 = 136315138;
    v0[20] = v5;
    sub_1AFD76B90(0, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1AFD371B8();
    uint64_t v8 = sub_1AFFCAD88();
    v0[21] = sub_1AFD36BA8(v8, v9, &v14);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AFD01000, v2, v3, "Fetching watchlists for entities with identifiers=[%s]", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v7, -1, -1);
    MEMORY[0x1B3E8F0D0](v6, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  sub_1AFFC8E48();
  sub_1AFFC8998();
  swift_release();
  uint64_t v10 = v0[5];
  uint64_t v11 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v10);
  v0[25] = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 40))(1, v10, v11);
  unint64_t v12 = (void *)swift_task_alloc();
  v0[26] = v12;
  void *v12 = v0;
  v12[1] = sub_1AFD68F40;
  return MEMORY[0x1F415EBC8](v0 + 11);
}

uint64_t sub_1AFD68F40()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 216) = v0;
  swift_task_dealloc();
  if (v0)
  {
    os_log_type_t v3 = sub_1AFD69844;
  }
  else
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v2 + 16);
    os_log_type_t v3 = sub_1AFD69068;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1AFD69068()
{
  long long v65 = v0;
  uint64_t v1 = v0 + 11;
  uint64_t v2 = v0[11];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  os_log_type_t v3 = sub_1AFFCA888();
  os_log_type_t v4 = sub_1AFFCB478();
  if (os_log_type_enabled(v3, v4))
  {
    os_log_type_t v61 = v4;
    uint64_t v5 = v0[22];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v59 = swift_slowAlloc();
    uint64_t v63 = v59;
    *(_DWORD *)uint64_t v6 = 136315394;
    v0[16] = v5;
    sub_1AFD76B90(0, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1AFD371B8();
    uint64_t v7 = sub_1AFFCAD88();
    v0[17] = sub_1AFD36BA8(v7, v8, &v63);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v6 + 12) = 2080;
    int64_t v9 = *(void *)(v2 + 16);
    uint64_t v10 = MEMORY[0x1E4FBC860];
    if (v9)
    {
      uint64_t v52 = v6;
      unint64_t v54 = v3;
      uint64_t v64 = MEMORY[0x1E4FBC860];
      sub_1AFD9DA10(0, v9, 0);
      uint64_t v10 = v64;
      unint64_t v11 = *(void *)(v64 + 16);
      uint64_t v12 = 16 * v11;
      uint64_t v56 = v2;
      uint64_t v13 = (uint64_t *)(v2 + 40);
      do
      {
        uint64_t v14 = *(v13 - 1);
        uint64_t v15 = *v13;
        uint64_t v64 = v10;
        int64_t v16 = v11 + 1;
        unint64_t v17 = *(void *)(v10 + 24);
        sub_1AFFC8E38();
        if (v11 >= v17 >> 1)
        {
          sub_1AFD9DA10(v17 > 1, v16, 1);
          uint64_t v10 = v64;
        }
        *(void *)(v10 + 16) = v16;
        uint64_t v18 = v10 + v12;
        *(void *)(v18 + 32) = v14;
        *(void *)(v18 + 40) = v15;
        v12 += 16;
        v13 += 6;
        ++v11;
        --v9;
      }
      while (v9);
      uint64_t v2 = v56;
      uint64_t v1 = v0 + 11;
      uint64_t v6 = v52;
      os_log_type_t v3 = v54;
    }
    v0[18] = v10;
    uint64_t v19 = sub_1AFFCAD88();
    unint64_t v21 = v20;
    swift_bridgeObjectRelease();
    v0[19] = sub_1AFD36BA8(v19, v21, &v63);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AFD01000, v3, v61, "Fetching watchlists for entities with identifiers=[%s], watchlists=[%s]", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v59, -1, -1);
    MEMORY[0x1B3E8F0D0](v6, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  uint64_t v22 = v0[22];
  sub_1AFFC8E38();
  uint64_t v23 = sub_1AFD74180(v22, v2);
  swift_bridgeObjectRelease_n();
  if (v23[2])
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    unint64_t v24 = sub_1AFFCA888();
    os_log_type_t v25 = sub_1AFFCB478();
    BOOL v26 = os_log_type_enabled(v24, v25);
    uint64_t v27 = v0[22];
    if (v26)
    {
      uint64_t v60 = v1 + 2;
      uint64_t v28 = swift_slowAlloc();
      uint64_t v62 = swift_slowAlloc();
      uint64_t v63 = v62;
      *(_DWORD *)uint64_t v28 = 136315394;
      *(v1 - 2) = v27;
      sub_1AFD76B90(0, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
      sub_1AFD371B8();
      uint64_t v29 = sub_1AFFCAD88();
      *(v1 - 1) = sub_1AFD36BA8(v29, v30, &v63);
      sub_1AFFCB688();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v28 + 12) = 2080;
      int64_t v31 = v23[2];
      uint64_t v32 = MEMORY[0x1E4FBC860];
      if (v31)
      {
        os_log_type_t v53 = v25;
        uint64_t v55 = v28;
        uint64_t v57 = v24;
        uint64_t v64 = MEMORY[0x1E4FBC860];
        sub_1AFD9DA10(0, v31, 0);
        uint64_t v32 = v64;
        uint64_t v58 = v23;
        uint64_t v33 = v23 + 6;
        do
        {
          sub_1AFFC8E38();
          sub_1AFFC8E48();
          sub_1AFFC8B28();
          swift_bridgeObjectRelease();
          swift_release();
          uint64_t v34 = v0[7];
          uint64_t v35 = v0[8];
          uint64_t v64 = v32;
          unint64_t v37 = *(void *)(v32 + 16);
          unint64_t v36 = *(void *)(v32 + 24);
          if (v37 >= v36 >> 1)
          {
            sub_1AFD9DA10(v36 > 1, v37 + 1, 1);
            uint64_t v32 = v64;
          }
          *(void *)(v32 + 16) = v37 + 1;
          uint64_t v38 = v32 + 16 * v37;
          *(void *)(v38 + 32) = v34;
          *(void *)(v38 + 40) = v35;
          v33 += 3;
          --v31;
        }
        while (v31);
        unint64_t v24 = v57;
        uint64_t v23 = v58;
        uint64_t v28 = v55;
        os_log_type_t v25 = v53;
      }
      v1[1] = v32;
      uint64_t v47 = sub_1AFFCAD88();
      unint64_t v49 = v48;
      swift_bridgeObjectRelease();
      uint64_t *v60 = sub_1AFD36BA8(v47, v49, &v63);
      sub_1AFFCB688();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1AFD01000, v24, v25, "Matched watchlist entities to identifiers=[%s], watchlistEntities=[%s]", (uint8_t *)v28, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1B3E8F0D0](v62, -1, -1);
      MEMORY[0x1B3E8F0D0](v28, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain_n();
    uint64_t v39 = sub_1AFFCA888();
    os_log_type_t v40 = sub_1AFFCB468();
    BOOL v41 = os_log_type_enabled(v39, v40);
    uint64_t v42 = v0[22];
    if (v41)
    {
      uint64_t v43 = (uint8_t *)swift_slowAlloc();
      uint64_t v44 = swift_slowAlloc();
      uint64_t v64 = v44;
      *(_DWORD *)uint64_t v43 = 136315138;
      v0[14] = v42;
      sub_1AFD76B90(0, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
      sub_1AFD371B8();
      uint64_t v45 = sub_1AFFCAD88();
      v0[15] = sub_1AFD36BA8(v45, v46, &v64);
      sub_1AFFCB688();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1AFD01000, v39, v40, "No matching watchlists found for identifiers=[%s]", v43, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1B3E8F0D0](v44, -1, -1);
      MEMORY[0x1B3E8F0D0](v43, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v23 = (void *)MEMORY[0x1E4FBC860];
  }
  char v50 = (uint64_t (*)(void *))v0[1];
  return v50(v23);
}

uint64_t sub_1AFD69844()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t WatchlistQuery.suggestedEntities()()
{
  uint64_t v2 = sub_1AFFC9528();
  v1[12] = v2;
  v1[13] = *(void *)(v2 - 8);
  v1[14] = swift_task_alloc();
  sub_1AFFC9A78();
  v1[15] = swift_task_alloc();
  uint64_t v3 = sub_1AFFCAE58();
  v1[16] = v3;
  v1[17] = *(void *)(v3 - 8);
  v1[18] = swift_task_alloc();
  v1[19] = swift_task_alloc();
  sub_1AFFC9548();
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = *v0;
  v1[20] = v4;
  v1[21] = v5;
  return MEMORY[0x1F4188298](sub_1AFD69A38, 0, 0);
}

uint64_t sub_1AFD69A38()
{
  if (qword_1EB810B30 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1AFFCA8A8();
  v0[22] = __swift_project_value_buffer(v1, (uint64_t)qword_1EB810AF0);
  uint64_t v2 = sub_1AFFCA888();
  os_log_type_t v3 = sub_1AFFCB478();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_1AFD01000, v2, v3, "Fetching watchlists for suggested entities.", v4, 2u);
    MEMORY[0x1B3E8F0D0](v4, -1, -1);
  }

  sub_1AFFC8E48();
  sub_1AFFC8998();
  swift_release();
  uint64_t v5 = v0[5];
  uint64_t v6 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v5);
  v0[23] = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 40))(1, v5, v6);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[24] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1AFD69BFC;
  return MEMORY[0x1F415EBC8](v0 + 9);
}

uint64_t sub_1AFD69BFC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 200) = v0;
  swift_task_dealloc();
  if (v0)
  {
    os_log_type_t v3 = sub_1AFD6A3D8;
  }
  else
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v2 + 16);
    os_log_type_t v3 = sub_1AFD69D24;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1AFD69D24()
{
  uint64_t v60 = v0;
  uint64_t v1 = (int64_t *)v0[9];
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_1AFFCA888();
  os_log_type_t v3 = sub_1AFFCB478();
  uint64_t v52 = v0;
  unint64_t v46 = v1;
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v56 = swift_slowAlloc();
    uint64_t v58 = v56;
    *(_DWORD *)uint64_t v4 = 136315138;
    int64_t v5 = v1[2];
    uint64_t v6 = MEMORY[0x1E4FBC860];
    if (v5)
    {
      os_log_type_t v51 = v3;
      os_log_type_t v53 = v2;
      uint64_t v59 = MEMORY[0x1E4FBC860];
      sub_1AFD9DA10(0, v5, 0);
      uint64_t v6 = v59;
      unint64_t v7 = *(void *)(v59 + 16);
      uint64_t v8 = 16 * v7;
      uint64_t v9 = v1 + 5;
      do
      {
        uint64_t v10 = *(v9 - 1);
        uint64_t v11 = *v9;
        uint64_t v59 = v6;
        int64_t v12 = v7 + 1;
        unint64_t v13 = *(void *)(v6 + 24);
        sub_1AFFC8E38();
        if (v7 >= v13 >> 1)
        {
          sub_1AFD9DA10(v13 > 1, v12, 1);
          uint64_t v6 = v59;
        }
        *(void *)(v6 + 16) = v12;
        uint64_t v14 = v6 + v8;
        *(void *)(v14 + 32) = v10;
        *(void *)(v14 + 40) = v11;
        v8 += 16;
        v9 += 6;
        ++v7;
        --v5;
      }
      while (v5);
      uint64_t v1 = v46;
      uint64_t v2 = v53;
      os_log_type_t v3 = v51;
    }
    v52[10] = v6;
    sub_1AFD76B90(0, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1AFD371B8();
    uint64_t v15 = sub_1AFFCAD88();
    unint64_t v17 = v16;
    swift_bridgeObjectRelease();
    v52[11] = sub_1AFD36BA8(v15, v17, &v58);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AFD01000, v2, v3, "Fetched watchlists for suggested entities, watchlists=[%s]", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v56, -1, -1);
    MEMORY[0x1B3E8F0D0](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  int64_t v18 = v1[2];
  if (v18)
  {
    uint64_t v19 = v52;
    uint64_t v20 = v52[17];
    uint64_t v21 = v52[13];
    uint64_t v59 = MEMORY[0x1E4FBC860];
    sub_1AFD9DA90(0, v18, 0);
    sub_1AFD76924(0, (unint64_t *)&qword_1EB816AF8, (uint64_t (*)(void))sub_1AFD74388, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4F183F8]);
    unsigned int v50 = *MEMORY[0x1E4F275D0];
    unint64_t v49 = (void (**)(uint64_t, void, uint64_t))(v21 + 104);
    uint64_t v47 = (void (**)(uint64_t, uint64_t))(v20 + 8);
    unint64_t v48 = (void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16);
    uint64_t v22 = v1 + 8;
    while (1)
    {
      int64_t v57 = v18;
      uint64_t v23 = v19[20];
      uint64_t v24 = v19[14];
      uint64_t v25 = v19[12];
      uint64_t v26 = *(v22 - 4);
      uint64_t v27 = *(v22 - 1);
      uint64_t v28 = *v22;
      uint64_t v54 = *(v22 - 3);
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFCADF8();
      sub_1AFFC9A28();
      (*v49)(v24, v50, v25);
      sub_1AFFC9558();
      uint64_t v29 = MEMORY[0x1B3E8AFE0](v23);
      uint64_t v55 = v27;
      if (v27 == sub_1AFFCAE98() && v28 == v30) {
        break;
      }
      char v31 = sub_1AFFCBCE8();
      swift_bridgeObjectRetain_n();
      swift_retain_n();
      swift_bridgeObjectRelease();
      if (v31) {
        goto LABEL_16;
      }
      uint64_t v19 = v52;
      uint64_t v39 = v54;
LABEL_20:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v19[7] = v26;
      v19[8] = v39;
      sub_1AFFC8B38();
      swift_bridgeObjectRelease_n();
      swift_release_n();
      uint64_t v40 = v59;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1AFD9DA90(0, *(void *)(v40 + 16) + 1, 1);
        uint64_t v40 = v59;
      }
      unint64_t v42 = *(void *)(v40 + 16);
      unint64_t v41 = *(void *)(v40 + 24);
      if (v42 >= v41 >> 1)
      {
        sub_1AFD9DA90(v41 > 1, v42 + 1, 1);
        uint64_t v40 = v59;
      }
      *(void *)(v40 + 16) = v42 + 1;
      uint64_t v43 = (void *)(v40 + 24 * v42);
      v43[4] = v55;
      v43[5] = v28;
      void v43[6] = v29;
      v22 += 6;
      int64_t v18 = v57 - 1;
      if (v57 == 1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_27;
      }
    }
    swift_bridgeObjectRetain_n();
    swift_retain_n();
LABEL_16:
    uint64_t v19 = v52;
    uint64_t v32 = v52[18];
    uint64_t v33 = v52[19];
    uint64_t v34 = v52[16];
    sub_1AFFCADF8();
    (*v48)(v32, v33, v34);
    if (qword_1EB819E80 != -1) {
      swift_once();
    }
    uint64_t v35 = v52[19];
    uint64_t v36 = v52[16];
    id v37 = (id)qword_1EB831AF8;
    sub_1AFFC9A28();
    uint64_t v26 = sub_1AFFCAEF8();
    uint64_t v39 = v38;
    (*v47)(v35, v36);
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  swift_bridgeObjectRelease();
  uint64_t v40 = MEMORY[0x1E4FBC860];
  uint64_t v19 = v52;
LABEL_27:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v44 = (uint64_t (*)(uint64_t))v19[1];
  return v44(v40);
}

uint64_t sub_1AFD6A3D8()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t WatchlistQuery.defaultResult()(uint64_t a1)
{
  *(void *)(v1 + 32) = a1;
  return MEMORY[0x1F4188298](sub_1AFD6A4AC, 0, 0);
}

uint64_t sub_1AFD6A4AC()
{
  unint64_t v16 = v0;
  if (qword_1E9AF8C48 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_1E9AFA390;
  uint64_t v1 = *(void *)algn_1E9AFA398;
  uint64_t v3 = qword_1E9AFA3A0;
  uint64_t v4 = qword_1EB810B30;
  sub_1AFFC8E38();
  sub_1AFFC8E48();
  if (v4 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1AFFCA8A8();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EB810AF0);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v6 = sub_1AFFCA888();
  os_log_type_t v7 = sub_1AFFCB478();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v14 = v2;
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    uint64_t v15 = v13;
    *(_DWORD *)uint64_t v8 = 136315138;
    sub_1AFFC8E38();
    sub_1AFFC8E48();
    sub_1AFFC8B28();
    swift_bridgeObjectRelease();
    swift_release();
    v0[2] = sub_1AFD36BA8(v0[2], v0[3], &v15);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_release_n();
    _os_log_impl(&dword_1AFD01000, v6, v7, "Default watchlist entity requested, returning '%s' watchlist", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v13, -1, -1);
    uint64_t v9 = v8;
    uint64_t v2 = v14;
    MEMORY[0x1B3E8F0D0](v9, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_release_n();
  }

  uint64_t v10 = (uint64_t *)v0[4];
  *uint64_t v10 = v2;
  v10[1] = v1;
  void v10[2] = v3;
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_1AFD6A748@<X0>(uint64_t *a1@<X8>)
{
  sub_1AFD743DC(0, (unint64_t *)&qword_1EB8167E0, (uint64_t (*)(uint64_t))sub_1AFD33A98, MEMORY[0x1E4F18188]);
  sub_1AFFC8A08();
  sub_1AFFC89F8();
  uint64_t result = sub_1AFFC89C8();
  *a1 = result;
  return result;
}

uint64_t sub_1AFD6A7E4(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1AFD6A894;
  uint64_t v5 = *v1;
  v4[22] = a1;
  v4[23] = v5;
  return MEMORY[0x1F4188298](sub_1AFD68C60, 0, 0);
}

uint64_t sub_1AFD6A894(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t sub_1AFD6A994(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1AFD76E80;
  return WatchlistQuery.suggestedEntities()();
}

uint64_t sub_1AFD6AA24(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_1AFD7624C();
  *uint64_t v5 = v2;
  v5[1] = sub_1AFD3503C;
  return MEMORY[0x1F40D3D68](a1, a2, v6);
}

uint64_t sub_1AFD6AAD8(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1AFD3503C;
  void v3[4] = a1;
  return MEMORY[0x1F4188298](sub_1AFD6A4AC, 0, 0);
}

uint64_t WatchlistQuery.entities(matching:)(uint64_t a1, uint64_t a2)
{
  v3[16] = a1;
  v3[17] = a2;
  uint64_t v4 = sub_1AFFC9528();
  v3[18] = v4;
  v3[19] = *(void *)(v4 - 8);
  v3[20] = swift_task_alloc();
  sub_1AFFC9A78();
  v3[21] = swift_task_alloc();
  uint64_t v5 = sub_1AFFCAE58();
  v3[22] = v5;
  v3[23] = *(void *)(v5 - 8);
  v3[24] = swift_task_alloc();
  v3[25] = swift_task_alloc();
  sub_1AFFC9548();
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = *v2;
  v3[26] = v6;
  v3[27] = v7;
  return MEMORY[0x1F4188298](sub_1AFD6AD14, 0, 0);
}

uint64_t sub_1AFD6AD14()
{
  uint64_t v14 = v0;
  if (qword_1EB810B30 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1AFFCA8A8();
  v0[28] = __swift_project_value_buffer(v1, (uint64_t)qword_1EB810AF0);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_1AFFCA888();
  os_log_type_t v3 = sub_1AFFCB478();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = v0[17];
  if (v4)
  {
    uint64_t v6 = v0[16];
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v13 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    sub_1AFFC8E38();
    v0[15] = sub_1AFD36BA8(v6, v5, &v13);
    sub_1AFFCB688();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AFD01000, v2, v3, "Querying watchlists matching string=%s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v8, -1, -1);
    MEMORY[0x1B3E8F0D0](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  sub_1AFFC8E48();
  sub_1AFFC8998();
  swift_release();
  uint64_t v9 = v0[5];
  uint64_t v10 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v9);
  v0[29] = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 40))(1, v9, v10);
  uint64_t v11 = (void *)swift_task_alloc();
  v0[30] = v11;
  void *v11 = v0;
  v11[1] = sub_1AFD6AFA8;
  return MEMORY[0x1F415EBC8](v0 + 9);
}

uint64_t sub_1AFD6AFA8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 248) = v0;
  swift_task_dealloc();
  if (v0)
  {
    os_log_type_t v3 = sub_1AFD6BA68;
  }
  else
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v2 + 16);
    os_log_type_t v3 = sub_1AFD6B0D0;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1AFD6B0D0()
{
  uint64_t v85 = v0;
  uint64_t v1 = v0[9];
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_1AFFCA888();
  os_log_type_t v3 = sub_1AFFCB478();
  __int16 v75 = v0;
  if (os_log_type_enabled(v2, v3))
  {
    os_log_type_t v79 = v3;
    BOOL v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v76 = swift_slowAlloc();
    uint64_t v83 = v76;
    *(_DWORD *)BOOL v4 = 136315138;
    int64_t v5 = *(void *)(v1 + 16);
    uint64_t v6 = MEMORY[0x1E4FBC860];
    if (v5)
    {
      int v69 = v4;
      uint64_t v72 = v2;
      uint64_t v84 = MEMORY[0x1E4FBC860];
      sub_1AFD9DA10(0, v5, 0);
      uint64_t v6 = v84;
      unint64_t v7 = *(void *)(v84 + 16);
      uint64_t v8 = 16 * v7;
      uint64_t v9 = (uint64_t *)(v1 + 40);
      do
      {
        uint64_t v10 = *(v9 - 1);
        uint64_t v11 = *v9;
        uint64_t v84 = v6;
        int64_t v12 = v7 + 1;
        unint64_t v13 = *(void *)(v6 + 24);
        sub_1AFFC8E38();
        if (v7 >= v13 >> 1)
        {
          sub_1AFD9DA10(v13 > 1, v12, 1);
          uint64_t v6 = v84;
        }
        *(void *)(v6 + 16) = v12;
        uint64_t v14 = v6 + v8;
        *(void *)(v14 + 32) = v10;
        *(void *)(v14 + 40) = v11;
        v8 += 16;
        v9 += 6;
        ++v7;
        --v5;
      }
      while (v5);
      uint64_t v0 = v75;
      BOOL v4 = v69;
      uint64_t v2 = v72;
    }
    v0[13] = v6;
    sub_1AFD76B90(0, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1AFD371B8();
    uint64_t v15 = sub_1AFFCAD88();
    unint64_t v17 = v16;
    swift_bridgeObjectRelease();
    v0[14] = sub_1AFD36BA8(v15, v17, &v83);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AFD01000, v2, v79, "Fetched all watchlists for string query, watchlists=[%s]", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v76, -1, -1);
    MEMORY[0x1B3E8F0D0](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  sub_1AFFC8E38();
  uint64_t v18 = sub_1AFD73F3C(v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v19 = sub_1AFFCA888();
  os_log_type_t v20 = sub_1AFFCB478();
  BOOL v21 = os_log_type_enabled(v19, v20);
  unint64_t v22 = v0[17];
  uint64_t v65 = v18;
  if (v21)
  {
    uint64_t v77 = v0 + 12;
    uint64_t v23 = v0[16];
    uint64_t v24 = swift_slowAlloc();
    uint64_t v80 = swift_slowAlloc();
    uint64_t v83 = v80;
    *(_DWORD *)uint64_t v24 = 136315394;
    sub_1AFFC8E38();
    v0[10] = sub_1AFD36BA8(v23, v22, &v83);
    uint64_t v74 = v0 + 11;
    sub_1AFFCB688();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v24 + 12) = 2080;
    int64_t v25 = *(void *)(v18 + 16);
    uint64_t v26 = MEMORY[0x1E4FBC860];
    if (v25)
    {
      os_log_type_t v70 = v20;
      uint64_t v73 = v19;
      uint64_t v84 = MEMORY[0x1E4FBC860];
      sub_1AFD9DA10(0, v25, 0);
      uint64_t v26 = v84;
      unint64_t v27 = *(void *)(v84 + 16);
      uint64_t v28 = 16 * v27;
      uint64_t v29 = (uint64_t *)(v18 + 40);
      do
      {
        uint64_t v31 = *(v29 - 1);
        uint64_t v30 = *v29;
        uint64_t v84 = v26;
        int64_t v32 = v27 + 1;
        unint64_t v33 = *(void *)(v26 + 24);
        sub_1AFFC8E38();
        if (v27 >= v33 >> 1)
        {
          sub_1AFD9DA10(v33 > 1, v32, 1);
          uint64_t v26 = v84;
        }
        *(void *)(v26 + 16) = v32;
        uint64_t v34 = v26 + v28;
        *(void *)(v34 + 32) = v31;
        *(void *)(v34 + 40) = v30;
        v28 += 16;
        v29 += 6;
        ++v27;
        --v25;
      }
      while (v25);
      uint64_t v18 = v65;
      uint64_t v19 = v73;
      os_log_type_t v20 = v70;
    }
    *uint64_t v74 = v26;
    sub_1AFD76B90(0, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1AFD371B8();
    uint64_t v60 = sub_1AFFCAD88();
    unint64_t v62 = v61;
    swift_bridgeObjectRelease();
    *uint64_t v77 = sub_1AFD36BA8(v60, v62, &v83);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AFD01000, v19, v20, "Filtered down watchlists matching string=%s, watchlists=[%s]", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v80, -1, -1);
    MEMORY[0x1B3E8F0D0](v24, -1, -1);

    uint64_t v0 = v75;
    int64_t v35 = *(void *)(v18 + 16);
    if (!v35) {
      goto LABEL_34;
    }
    goto LABEL_18;
  }
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();

  int64_t v35 = *(void *)(v18 + 16);
  if (v35)
  {
LABEL_18:
    uint64_t v36 = v0[23];
    uint64_t v37 = v0[19];
    uint64_t v84 = MEMORY[0x1E4FBC860];
    sub_1AFD9DA90(0, v35, 0);
    sub_1AFD76924(0, (unint64_t *)&qword_1EB816AF8, (uint64_t (*)(void))sub_1AFD74388, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4F183F8]);
    unsigned int v71 = *MEMORY[0x1E4F275D0];
    long long v68 = (void (**)(uint64_t, void, uint64_t))(v37 + 104);
    uint64_t v66 = (void (**)(uint64_t, uint64_t))(v36 + 8);
    long long v67 = (void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16);
    uint64_t v38 = (uint64_t *)(v18 + 64);
    while (1)
    {
      int64_t v82 = v35;
      uint64_t v39 = v0[26];
      uint64_t v40 = v0[20];
      uint64_t v41 = v0[18];
      uint64_t v42 = *(v38 - 4);
      uint64_t v43 = *(v38 - 1);
      uint64_t v44 = *v38;
      uint64_t v78 = *(v38 - 3);
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFCADF8();
      sub_1AFFC9A28();
      (*v68)(v40, v71, v41);
      sub_1AFFC9558();
      uint64_t v45 = MEMORY[0x1B3E8AFE0](v39);
      uint64_t v81 = v43;
      if (v43 == sub_1AFFCAE98() && v44 == v46) {
        break;
      }
      char v47 = sub_1AFFCBCE8();
      swift_bridgeObjectRetain_n();
      swift_retain_n();
      swift_bridgeObjectRelease();
      if (v47) {
        goto LABEL_23;
      }
      uint64_t v0 = v75;
      uint64_t v55 = v78;
LABEL_27:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v0[7] = v42;
      v0[8] = v55;
      sub_1AFFC8B38();
      swift_bridgeObjectRelease_n();
      swift_release_n();
      uint64_t v56 = v84;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1AFD9DA90(0, *(void *)(v56 + 16) + 1, 1);
        uint64_t v56 = v84;
      }
      unint64_t v58 = *(void *)(v56 + 16);
      unint64_t v57 = *(void *)(v56 + 24);
      if (v58 >= v57 >> 1)
      {
        sub_1AFD9DA90(v57 > 1, v58 + 1, 1);
        uint64_t v56 = v84;
      }
      *(void *)(v56 + 16) = v58 + 1;
      uint64_t v59 = (void *)(v56 + 24 * v58);
      v59[4] = v81;
      v59[5] = v44;
      v59[6] = v45;
      v38 += 6;
      --v35;
      if (v82 == 1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_35;
      }
    }
    swift_bridgeObjectRetain_n();
    swift_retain_n();
LABEL_23:
    uint64_t v0 = v75;
    uint64_t v48 = v75[24];
    uint64_t v49 = v75[25];
    uint64_t v50 = v75[22];
    sub_1AFFCADF8();
    (*v67)(v48, v49, v50);
    if (qword_1EB819E80 != -1) {
      swift_once();
    }
    uint64_t v51 = v75[25];
    uint64_t v52 = v75[22];
    id v53 = (id)qword_1EB831AF8;
    sub_1AFFC9A28();
    uint64_t v42 = sub_1AFFCAEF8();
    uint64_t v55 = v54;
    (*v66)(v51, v52);
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
LABEL_34:
  swift_bridgeObjectRelease();
  uint64_t v56 = MEMORY[0x1E4FBC860];
LABEL_35:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v63 = (uint64_t (*)(uint64_t))v0[1];
  return v63(v56);
}

uint64_t sub_1AFD6BA68()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1AFD6BB1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a1;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_1AFD6BBC4;
  return WatchlistQuery.entities(matching:)(a2, a3);
}

uint64_t sub_1AFD6BBC4(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (!v1) {
    **(void **)(v4 + 16) = a1;
  }
  uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
  return v6();
}

uint64_t static WatchlistQuery.findIntentDescription.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v34 = a1;
  uint64_t v31 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27608];
  sub_1AFD743DC(0, &qword_1EB816B00, MEMORY[0x1E4F27608], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v28 - v2;
  int64_t v32 = (char *)&v28 - v2;
  uint64_t v4 = sub_1AFFC9528();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1AFFC9A78();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v9 = sub_1AFFCAE58();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v10 = sub_1AFFC9548();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  unint64_t v33 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  unsigned int v35 = *MEMORY[0x1E4F275D0];
  uint64_t v36 = *(void (**)(char *))(v5 + 104);
  v36(v7);
  sub_1AFFC9558();
  unint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v11 += 56;
  v13(v3, 1, 1, v10);
  sub_1AFD743DC(0, &qword_1E9AFA0E0, v31, MEMORY[0x1E4FBBE00]);
  uint64_t v14 = *(void *)(v11 + 16);
  unint64_t v15 = (*(unsigned __int8 *)(v11 + 24) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 24);
  uint64_t v16 = swift_allocObject();
  uint64_t v31 = (uint64_t (*)(uint64_t))v16;
  *(_OWORD *)(v16 + 16) = xmmword_1AFFD2CC0;
  unint64_t v17 = v16 + v15;
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  uint64_t v18 = v35;
  uint64_t v19 = v4;
  uint64_t v20 = v4;
  BOOL v21 = (void (*)(char *, uint64_t, uint64_t))v36;
  ((void (*)(char *, void, uint64_t))v36)(v7, v35, v20);
  unint64_t v22 = v7;
  sub_1AFFC9558();
  unint64_t v29 = v17 + v14;
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  v21(v7, v18, v19);
  sub_1AFFC9558();
  unint64_t v29 = v17 + 2 * v14;
  uint64_t v30 = v14;
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  uint64_t v23 = v35;
  uint64_t v24 = (void (*)(char *, uint64_t, uint64_t))v36;
  ((void (*)(char *, void, uint64_t))v36)(v22, v35, v19);
  sub_1AFFC9558();
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  v24(v22, v23, v19);
  sub_1AFFC9558();
  unint64_t v29 = v17 + 4 * v30;
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  v24(v22, v23, v19);
  sub_1AFFC9558();
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  v24(v22, v23, v19);
  sub_1AFFC9558();
  uint64_t v25 = v34;
  sub_1AFFC8CE8();
  uint64_t v26 = sub_1AFFC8CD8();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v25, 0, 1, v26);
}

uint64_t sub_1AFD6C368()
{
  sub_1AFD74440();
  uint64_t v1 = v0;
  __swift_allocate_value_buffer(v0, qword_1E9AFA090);
  __swift_project_value_buffer(v1, (uint64_t)qword_1E9AFA090);
  sub_1AFD744AC();
  sub_1AFD33B44();
  return sub_1AFFC8DE8();
}

uint64_t sub_1AFD6C3F0()
{
  sub_1AFD76AB0();
  swift_getKeyPath();
  sub_1AFFC8D68();
  sub_1AFD33B44();
  uint64_t v0 = sub_1AFFC8E48();
  swift_release();
  sub_1AFD76B90(0, (unint64_t *)&qword_1EB8183E0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1AFFD2CD0;
  *(void *)(v1 + 32) = v0;
  sub_1AFFCB1E8();
  sub_1AFD744AC();
  sub_1AFFC8E48();
  uint64_t v2 = sub_1AFFC8FE8();
  swift_bridgeObjectRelease();
  swift_release();
  return v2;
}

uint64_t sub_1AFD6C514@<X0>(uint64_t *a1@<X8>)
{
  sub_1AFFC8E38();
  sub_1AFFC8E48();
  uint64_t v2 = sub_1AFFC8B48();
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1AFD6C56C()
{
  sub_1AFD76BDC();
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  uint64_t v3 = v2;
  uint64_t v4 = MEMORY[0x1F4188790](v0);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v17 - v7;
  sub_1AFD76CA8();
  swift_allocObject();
  sub_1AFFC8D18();
  sub_1AFD33B44();
  sub_1AFFC9028();
  swift_release();
  sub_1AFD76D6C();
  swift_allocObject();
  sub_1AFFC8CB8();
  sub_1AFFC9028();
  swift_release();
  sub_1AFD743DC(0, &qword_1E9AFA1B8, (uint64_t (*)(uint64_t))sub_1AFD76BDC, MEMORY[0x1E4FBBE00]);
  uint64_t v9 = *(void *)(v2 + 72);
  unint64_t v10 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1AFFD0610;
  unint64_t v12 = v11 + v10;
  unint64_t v13 = *(void (**)(unint64_t, char *, uint64_t))(v3 + 16);
  v13(v12, v8, v1);
  v13(v12 + v9, v6, v1);
  sub_1AFD76924(0, (unint64_t *)&qword_1EB816AF8, (uint64_t (*)(void))sub_1AFD74388, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4F183F8]);
  sub_1AFD744AC();
  sub_1AFD74388();
  uint64_t v14 = sub_1AFFC9018();
  swift_bridgeObjectRelease();
  unint64_t v15 = *(void (**)(char *, uint64_t))(v3 + 8);
  v15(v6, v1);
  v15(v8, v1);
  return v14;
}

uint64_t sub_1AFD6C87C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  *a3 = sub_1AFD76E78;
  a3[1] = v6;

  return sub_1AFFC8E38();
}

uint64_t sub_1AFD6C8EC@<X0>(unsigned char *a1@<X8>)
{
  sub_1AFFCAF18();
  sub_1AFFCAF18();
  sub_1AFD3AE10();
  char v2 = sub_1AFFCB6E8();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 & 1;
  return result;
}

uint64_t sub_1AFD6C98C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  *a2 = sub_1AFD76E70;
  a2[1] = v5;

  return sub_1AFFC8E38();
}

uint64_t sub_1AFD6C9F8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v2 = sub_1AFFCAF18();
  uint64_t v4 = v3;
  if (v2 == sub_1AFFCAF18() && v4 == v5) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1AFFCBCE8();
  }
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v7 & 1;
  return result;
}

uint64_t static WatchlistQuery.properties.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E9AF8C38 != -1) {
    swift_once();
  }
  sub_1AFD74440();
  uint64_t v3 = v2;
  uint64_t v4 = __swift_project_value_buffer(v2, (uint64_t)qword_1E9AFA090);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v5(a1, v4, v3);
}

uint64_t sub_1AFD6CB48()
{
  sub_1AFD76924(0, &qword_1E9AFA0F8, (uint64_t (*)(void))sub_1AFD33B44, (uint64_t)&type metadata for WatchlistEntity, MEMORY[0x1E4F18730]);
  uint64_t v1 = v0;
  __swift_allocate_value_buffer(v0, qword_1E9AFA0A8);
  __swift_project_value_buffer(v1, (uint64_t)qword_1E9AFA0A8);
  sub_1AFD33B44();
  return sub_1AFFC8F48();
}

uint64_t sub_1AFD6CC00()
{
  sub_1AFD76924(0, &qword_1E9AFA180, (uint64_t (*)(void))sub_1AFD33B44, (uint64_t)&type metadata for WatchlistEntity, MEMORY[0x1E4F187D0]);
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v0);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  char v7 = (char *)&v13 - v6;
  swift_getKeyPath();
  sub_1AFD33B44();
  sub_1AFD76990();
  sub_1AFFC9038();
  sub_1AFFC9088();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v2 + 8);
  v8(v5, v1);
  sub_1AFD76A20();
  unint64_t v9 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1AFFD05F0;
  (*(void (**)(unint64_t, char *, uint64_t))(v2 + 16))(v10 + v9, v7, v1);
  uint64_t v11 = sub_1AFFC9078();
  swift_bridgeObjectRelease();
  v8(v7, v1);
  return v11;
}

uint64_t static WatchlistQuery.sortingOptions.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E9AF8C40 != -1) {
    swift_once();
  }
  sub_1AFD76924(0, &qword_1E9AFA0F8, (uint64_t (*)(void))sub_1AFD33B44, (uint64_t)&type metadata for WatchlistEntity, MEMORY[0x1E4F18730]);
  uint64_t v3 = v2;
  uint64_t v4 = __swift_project_value_buffer(v2, (uint64_t)qword_1E9AFA0A8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v5(a1, v4, v3);
}

uint64_t WatchlistQuery.entities(matching:mode:sortedBy:limit:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5)
{
  *(unsigned char *)(v6 + 345) = a5;
  *(void *)(v6 + 216) = a3;
  *(void *)(v6 + 224) = a4;
  *(unsigned char *)(v6 + 344) = a2;
  *(void *)(v6 + 208) = a1;
  uint64_t v7 = sub_1AFFC9528();
  *(void *)(v6 + 232) = v7;
  *(void *)(v6 + 240) = *(void *)(v7 - 8);
  *(void *)(v6 + 248) = swift_task_alloc();
  sub_1AFFC9A78();
  *(void *)(v6 + 256) = swift_task_alloc();
  uint64_t v8 = sub_1AFFCAE58();
  *(void *)(v6 + 264) = v8;
  *(void *)(v6 + 272) = *(void *)(v8 - 8);
  *(void *)(v6 + 280) = swift_task_alloc();
  *(void *)(v6 + 288) = swift_task_alloc();
  sub_1AFFC9548();
  uint64_t v9 = swift_task_alloc();
  uint64_t v10 = *v5;
  *(void *)(v6 + 296) = v9;
  *(void *)(v6 + 304) = v10;
  return MEMORY[0x1F4188298](sub_1AFD6D07C, 0, 0);
}

uint64_t sub_1AFD6D07C()
{
  uint64_t v21 = v0;
  if (qword_1EB810B30 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1AFFCA8A8();
  *(void *)(v0 + 312) = __swift_project_value_buffer(v1, (uint64_t)qword_1EB810AF0);
  swift_bridgeObjectRetain_n();
  sub_1AFFC8E38();
  uint64_t v2 = sub_1AFFCA888();
  os_log_type_t v3 = sub_1AFFCB478();
  if (os_log_type_enabled(v2, v3))
  {
    char v17 = *(unsigned char *)(v0 + 345);
    uint64_t v4 = *(void *)(v0 + 216);
    uint64_t v18 = *(void *)(v0 + 224);
    uint64_t v5 = *(void *)(v0 + 208);
    uint64_t v6 = swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    uint64_t v20 = v19;
    *(_DWORD *)uint64_t v6 = 134218754;
    *(void *)(v0 + 176) = *(void *)(v5 + 16);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    char v7 = sub_1AFFC8F38();
    BOOL v8 = (v7 & 1) == 0;
    if (v7) {
      uint64_t v9 = 6581857;
    }
    else {
      uint64_t v9 = 29295;
    }
    if (v8) {
      unint64_t v10 = 0xE200000000000000;
    }
    else {
      unint64_t v10 = 0xE300000000000000;
    }
    *(void *)(v0 + 184) = sub_1AFD36BA8(v9, v10, &v20);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 22) = 2048;
    uint64_t v11 = *(void *)(v4 + 16);
    swift_bridgeObjectRelease();
    *(void *)(v0 + 192) = v11;
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 32) = 2048;
    uint64_t v12 = v18;
    if (v17) {
      uint64_t v12 = 0;
    }
    *(void *)(v0 + 200) = v12;
    sub_1AFFCB688();
    _os_log_impl(&dword_1AFD01000, v2, v3, "Querying watchlists matching property queryCount=%ld, comparatorMode=%s, sortCount=%ld, limit=%ld", (uint8_t *)v6, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v19, -1, -1);
    MEMORY[0x1B3E8F0D0](v6, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
  }

  sub_1AFFC8E48();
  sub_1AFFC8998();
  swift_release();
  uint64_t v13 = *(void *)(v0 + 40);
  uint64_t v14 = *(void *)(v0 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), v13);
  *(void *)(v0 + 320) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 40))(1, v13, v14);
  unint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v0 + 328) = v15;
  *unint64_t v15 = v0;
  v15[1] = sub_1AFD6D3EC;
  return MEMORY[0x1F415EBC8](v0 + 72);
}

uint64_t sub_1AFD6D3EC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 336) = v0;
  swift_task_dealloc();
  if (v0)
  {
    os_log_type_t v3 = sub_1AFD6EC3C;
  }
  else
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v2 + 16);
    os_log_type_t v3 = sub_1AFD6D514;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1AFD6D514()
{
  void (*v24)(void *__return_ptr, void);
  char v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  int64_t v39;
  uint64_t v40;
  int64_t v41;
  int v42;
  int v43;
  char v44;
  char v45;
  uint64_t *v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  int64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  int v61;
  char v62;
  int v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  int64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  NSObject *v74;
  os_log_type_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  char v79;
  BOOL v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t (*v84)(uint64_t);
  NSObject *v86;
  os_log_type_t v87;
  uint8_t *v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  char v92;
  uint64_t *v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  unint64_t v98;
  char v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void *v105;
  uint64_t v106;
  NSObject *v107;
  os_log_type_t v108;
  int64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t *v112;
  uint64_t v113;
  uint64_t v114;
  int64_t v115;
  unint64_t v116;
  int64_t v117;
  uint64_t v118;
  unint64_t v119;
  unint64_t v120;
  uint64_t v121;
  unint64_t v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  NSObject *v126;
  os_log_type_t v127;
  uint64_t v128;
  uint8_t *v129;
  int64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  id v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  unint64_t v152;
  unint64_t v153;
  void *v154;
  uint64_t *v155;
  int64_t *v156;
  uint64_t *v157;
  unint64_t *v158;
  uint64_t *v159;
  os_log_type_t v160;
  uint8_t *v161;
  uint64_t v162;
  NSObject *v163;
  NSObject *v164;
  unint64_t v165;
  uint64_t *v166;
  uint64_t v167;
  uint64_t v168;
  void (**v169)(uint64_t, uint64_t);
  uint64_t v170;
  void (**v171)(uint64_t, uint64_t, uint64_t);
  uint64_t v172;
  uint64_t v173;
  void *v174;
  void (*v175)(void *__return_ptr, void);
  uint64_t v176;
  os_log_type_t v177;
  void (**v178)(uint64_t, void, uint64_t);
  unint64_t v179;
  unsigned int v180;
  NSObject *v181;
  uint8_t *v182;
  NSObject *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  NSObject *v187;
  int64_t v188;
  uint64_t v189;
  char v190;
  uint64_t v191;
  uint64_t v192[5];
  char v193;
  char v194;
  char v195;
  uint64_t v196[3];
  void *v197;
  uint64_t v198;

  v197 = v1;
  unint64_t v3 = (unint64_t)v1;
  unint64_t v4 = v1[9];
  swift_bridgeObjectRetain_n();
  uint64_t v5 = sub_1AFFCA888();
  int v6 = sub_1AFFCB478();
  char v7 = &off_1AFFD0000;
  char v174 = v1;
  v179 = v4;
  if (os_log_type_enabled(v5, (os_log_type_t)v6))
  {
    LODWORD(v189) = v6;
    unint64_t v0 = v4;
    BOOL v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v185 = swift_slowAlloc();
    v196[0] = v185;
    *(_DWORD *)BOOL v8 = 136315138;
    unint64_t v2 = *(void *)(v4 + 16);
    uint64_t v9 = MEMORY[0x1E4FBC860];
    if (v2)
    {
      uint64_t v181 = v5;
      v192[0] = MEMORY[0x1E4FBC860];
      sub_1AFD9DA10(0, v2, 0);
      uint64_t v9 = v192[0];
      unint64_t v10 = *(void *)(v192[0] + 16);
      uint64_t v11 = 16 * v10;
      uint64_t v12 = (uint64_t *)(v0 + 40);
      do
      {
        uint64_t v13 = *(v12 - 1);
        uint64_t v14 = *v12;
        v192[0] = v9;
        int64_t v15 = v10 + 1;
        unint64_t v0 = *(void *)(v9 + 24);
        sub_1AFFC8E38();
        if (v10 >= v0 >> 1)
        {
          sub_1AFD9DA10(v0 > 1, v15, 1);
          uint64_t v9 = v192[0];
        }
        *(void *)(v9 + 16) = v15;
        uint64_t v16 = v9 + v11;
        *(void *)(v16 + 32) = v13;
        *(void *)(v16 + 40) = v14;
        v11 += 16;
        v12 += 6;
        ++v10;
        --v2;
      }
      while (v2);
      unint64_t v3 = (unint64_t)v174;
      char v7 = &off_1AFFD0000;
      uint64_t v5 = v181;
    }
    *(void *)(v3 + 160) = v9;
    sub_1AFD76B90(0, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1AFD371B8();
    uint64_t v17 = sub_1AFFCAD88();
    unint64_t v19 = v18;
    swift_bridgeObjectRelease();
    *(void *)(v3 + 168) = sub_1AFD36BA8(v17, v19, v196);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    unint64_t v4 = v179;
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AFD01000, v5, (os_log_type_t)v189, "Fetched all watchlists for property query, watchlists=[%s]", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v185, -1, -1);
    MEMORY[0x1B3E8F0D0](v8, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v20 = *(void *)(v3 + 208);
  char v168 = *(void *)(v20 + 16);
  if (!v168)
  {
    swift_bridgeObjectRelease();
    sub_1AFD33084();
    uint64_t v83 = sub_1AFFCB1A8();
    goto LABEL_66;
  }
  uint64_t v155 = (uint64_t *)(v3 + 96);
  v158 = (unint64_t *)(v3 + 104);
  char v156 = (int64_t *)(v3 + 88);
  uint64_t v157 = (uint64_t *)(v3 + 112);
  v166 = (uint64_t *)(v3 + 144);
  uint64_t v159 = (uint64_t *)(v3 + 152);
  v182 = *(uint8_t **)(v4 + 16);
  uint64_t v167 = v20 + 32;
  sub_1AFFC8E38();
  uint64_t v21 = 0;
  uint64_t v22 = 0;
  uint64_t v165 = v4 + 73;
  while (1)
  {
    v170 = v22;
    v172 = (uint64_t)v21;
    uint64_t v23 = v167 + 16 * v22;
    uint64_t v24 = *(void (**)(void *__return_ptr, void))v23;
    v183 = *(NSObject **)(v23 + 8);
    swift_retain_n();
    sub_1AFFC8E38();
    if (v182)
    {
      uint64_t v26 = 0;
      unint64_t v3 = v165;
      unint64_t v27 = MEMORY[0x1E4FBC860];
      v175 = v24;
      while ((unint64_t)v26 < *(void *)(v4 + 16))
      {
        char v7 = *(uint64_t (*__ptr32 **)())(v3 - 33);
        uint64_t v28 = *(void *)(v3 - 25);
        unint64_t v29 = *(void *)(v3 - 17);
        unint64_t v0 = *(void *)(v3 - 9);
        uint64_t v30 = *(unsigned char *)(v3 - 1);
        unint64_t v2 = *(unsigned __int8 *)v3;
        v189 = *(void *)(v3 - 41);
        v192[0] = v189;
        v192[1] = (uint64_t)v7;
        v192[2] = v28;
        v186 = v29;
        v192[3] = v29;
        v192[4] = v0;
        v193 = v30;
        v194 = v2;
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        v24(&v195, v192);
        if (v195 == 1)
        {
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v196[0] = v27;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_1AFD9DAB0(0, *(void *)(v27 + 16) + 1, 1);
            unint64_t v27 = v196[0];
          }
          unint64_t v33 = *(void *)(v27 + 16);
          int64_t v32 = *(void *)(v27 + 24);
          uint64_t v34 = v33 + 1;
          if (v33 >= v32 >> 1)
          {
            sub_1AFD9DAB0(v32 > 1, v33 + 1, 1);
            uint64_t v34 = v33 + 1;
            unint64_t v27 = v196[0];
          }
          *(void *)(v27 + 16) = v34;
          unsigned int v35 = v27 + 48 * v33;
          *(void *)(v35 + 32) = v189;
          *(void *)(v35 + 40) = v7;
          *(void *)(v35 + 48) = v28;
          *(void *)(v35 + 56) = v186;
          *(void *)(v35 + 64) = v0;
          *(unsigned char *)(v35 + 72) = v30;
          *(unsigned char *)(v35 + 73) = v2;
          uint64_t v24 = v175;
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        ++v26;
        v3 += 48;
        unint64_t v4 = v179;
        if (v182 == v26) {
          goto LABEL_26;
        }
      }
      __break(1u);
LABEL_82:
      sub_1AFD76098(v2, v3, v25);
      unint64_t v3 = (unint64_t)v174;
      uint64_t v90 = (uint64_t)v175;
      uint64_t v88 = v182;
      uint64_t v86 = v183;
      uint64_t v87 = v179;
      goto LABEL_83;
    }
    unint64_t v27 = MEMORY[0x1E4FBC860];
LABEL_26:
    unint64_t v3 = (unint64_t)v174;
    swift_bridgeObjectRelease();
    char v7 = (uint64_t (*__ptr32 *)())sub_1AFD744F8(v27);
    swift_release();
    swift_bridgeObjectRetain_n();
    uint64_t v36 = sub_1AFFCA888();
    uint64_t v37 = sub_1AFFCB458();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = (uint8_t *)swift_slowAlloc();
      int v176 = swift_slowAlloc();
      v196[0] = v176;
      *(_DWORD *)uint64_t v38 = 136315138;
      uint64_t v39 = *((void *)v7 + 2);
      if (v39)
      {
        v160 = v37;
        uint64_t v161 = v38;
        uint64_t v163 = v36;
        v192[0] = MEMORY[0x1E4FBC860];
        sub_1AFD9DA10(0, v39, 0);
        uint64_t v40 = v192[0];
        uint64_t v41 = sub_1AFD73DB4((uint64_t)v7);
        uint64_t v43 = v42;
        uint64_t v45 = v44 & 1;
        uint64_t v187 = (v7 + 14);
        while ((v41 & 0x8000000000000000) == 0 && v41 < 1 << *((unsigned char *)v7 + 32))
        {
          if (((*(unint64_t *)((char *)&v187->isa + (((unint64_t)v41 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v41) & 1) == 0) {
            goto LABEL_97;
          }
          if (v7[9] != (uint64_t (*__ptr32)())v43) {
            goto LABEL_98;
          }
          uint64_t v46 = (uint64_t *)(*((void *)v7 + 6) + 48 * v41);
          char v47 = v46[1];
          v189 = *v46;
          v192[0] = v40;
          unint64_t v2 = *(void *)(v40 + 16);
          uint64_t v48 = *(void *)(v40 + 24);
          uint64_t v38 = (uint8_t *)(v2 + 1);
          sub_1AFFC8E38();
          if (v2 >= v48 >> 1)
          {
            sub_1AFD9DA10(v48 > 1, v2 + 1, 1);
            uint64_t v40 = v192[0];
          }
          *(void *)(v40 + 16) = v38;
          uint64_t v49 = v40 + 16 * v2;
          *(void *)(v49 + 32) = v189;
          *(void *)(v49 + 40) = v47;
          uint64_t v50 = sub_1AFD73E58(v41, v43, v45 & 1, (uint64_t)v7);
          uint64_t v41 = v50;
          uint64_t v43 = v51;
          uint64_t v45 = v52 & 1;
          if (!--v39)
          {
            sub_1AFD76098(v50, v51, v52 & 1);
            unint64_t v3 = (unint64_t)v174;
            uint64_t v38 = v161;
            uint64_t v36 = v163;
            uint64_t v37 = v160;
            unsigned int v71 = v40;
            goto LABEL_53;
          }
        }
        __break(1u);
LABEL_97:
        __break(1u);
LABEL_98:
        __break(1u);
        goto LABEL_99;
      }
      unsigned int v71 = MEMORY[0x1E4FBC860];
LABEL_53:
      void *v166 = v71;
      sub_1AFD76B90(0, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
      sub_1AFD371B8();
      uint64_t v72 = sub_1AFFCAD88();
      unint64_t v0 = v73;
      swift_bridgeObjectRelease();
      *uint64_t v159 = sub_1AFD36BA8(v72, v0, v196);
      sub_1AFFCB688();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1AFD01000, v36, v37, "Filtered watchlists down to watchlists=[%s]", v38, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1B3E8F0D0](v176, -1, -1);
      MEMORY[0x1B3E8F0D0](v38, -1, -1);

      unint64_t v4 = v179;
      id v53 = v172;
      if (!v172)
      {
LABEL_54:
        uint64_t v74 = sub_1AFFCA888();
        __int16 v75 = sub_1AFFCB458();
        if (os_log_type_enabled(v74, v75))
        {
          unint64_t v0 = swift_slowAlloc();
          *(_WORD *)unint64_t v0 = 0;
          _os_log_impl(&dword_1AFD01000, v74, v75, "No existing result for watchlist filters, so storing first results", (uint8_t *)v0, 2u);
          MEMORY[0x1B3E8F0D0](v0, -1, -1);

          swift_release_n();
        }
        else
        {
          swift_release_n();
        }
        goto LABEL_13;
      }
    }
    else
    {
      swift_bridgeObjectRelease_n();

      id v53 = v172;
      if (!v172) {
        goto LABEL_54;
      }
    }
    if (*(unsigned char *)(v3 + 344))
    {
      char v7 = (uint64_t (*__ptr32 *)())sub_1AFD6ECF0((uint64_t)v7, v53);
    }
    else
    {
      uint64_t v54 = sub_1AFD70C6C((uint64_t)v7, v53, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_1AFD70E08);
      swift_bridgeObjectRelease();
      char v7 = (uint64_t (*__ptr32 *)())v54;
    }
    swift_bridgeObjectRetain_n();
    uint64_t v55 = sub_1AFFCA888();
    uint64_t v56 = sub_1AFFCB458();
    if (os_log_type_enabled(v55, v56)) {
      break;
    }
    swift_release_n();
    swift_bridgeObjectRelease_n();

LABEL_13:
    uint64_t v22 = v170 + 1;
    uint64_t v21 = v7;
    if (v170 + 1 == v168)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain_n();
      uint64_t v86 = sub_1AFFCA888();
      uint64_t v87 = sub_1AFFCB478();
      if (!os_log_type_enabled(v86, v87))
      {
        swift_bridgeObjectRelease_n();
LABEL_84:

        long long v103 = *(void *)(v3 + 336);
        uint64_t v104 = *(void *)(v3 + 216);
        long long v105 = sub_1AFD6FEBC((uint64_t)v7);
        swift_bridgeObjectRelease();
        v192[0] = (uint64_t)v105;
        sub_1AFFC8E38();
        sub_1AFFC8E48();
        sub_1AFD75FF4(v192, v104);
        if (v103)
        {
          swift_bridgeObjectRelease();
          return swift_release();
        }
        swift_bridgeObjectRelease();
        swift_release();
        long long v106 = v192[0];
        swift_retain_n();
        unsigned __int8 v107 = sub_1AFFCA888();
        uint64_t v108 = sub_1AFFCB478();
        if (!os_log_type_enabled(v107, v108))
        {
          swift_release_n();
LABEL_101:

          if (*(unsigned char *)(v3 + 345)) {
            goto LABEL_116;
          }
          char v7 = (uint64_t (*__ptr32 *)())sub_1AFD6F084(*(void *)(v3 + 224), v106);
          unint64_t v58 = v121;
          unint64_t v0 = v122;
          unint64_t v4 = v123;
          if (v123) {
            goto LABEL_107;
          }
LABEL_103:
          long long v106 = sub_1AFD6FD0C((uint64_t)v7, v58, v0, v4);
          goto LABEL_113;
        }
        uint64_t v38 = (uint8_t *)swift_slowAlloc();
        v189 = swift_slowAlloc();
        v196[0] = v189;
        *(_DWORD *)uint64_t v38 = 136315138;
        uint64_t v109 = *(void *)(v106 + 16);
        uint64_t v39 = MEMORY[0x1E4FBC860];
        if (!v109)
        {
LABEL_100:
          *char v156 = v39;
          sub_1AFD76B90(0, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
          sub_1AFD371B8();
          uint64_t v118 = sub_1AFFCAD88();
          uint64_t v120 = v119;
          swift_bridgeObjectRelease();
          *uint64_t v155 = sub_1AFD36BA8(v118, v120, v196);
          sub_1AFFCB688();
          swift_bridgeObjectRelease();
          swift_release_n();
          _os_log_impl(&dword_1AFD01000, v107, v108, "Applied sorts to sortedWatchlists=[%s]", v38, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1B3E8F0D0](v189, -1, -1);
          MEMORY[0x1B3E8F0D0](v38, -1, -1);
          goto LABEL_101;
        }
        LOBYTE(v183) = v108;
        uint64_t v187 = v107;
        v192[0] = MEMORY[0x1E4FBC860];
        sub_1AFD9DA10(0, v109, 0);
        uint64_t v39 = v192[0];
        uint64_t v110 = *(void *)(v192[0] + 16);
        uint64_t v111 = 16 * v110;
        uint64_t v167 = v106;
        uint64_t v112 = (uint64_t *)(v106 + 40);
        do
        {
          uint64_t v113 = *(v112 - 1);
          uint64_t v114 = *v112;
          v192[0] = v39;
          uint64_t v115 = v110 + 1;
          uint64_t v116 = *(void *)(v39 + 24);
          sub_1AFFC8E38();
          if (v110 >= v116 >> 1)
          {
            sub_1AFD9DA10(v116 > 1, v115, 1);
            uint64_t v39 = v192[0];
          }
          *(void *)(v39 + 16) = v115;
          uint64_t v117 = v39 + v111;
          *(void *)(v117 + 32) = v113;
          *(void *)(v117 + 40) = v114;
          v111 += 16;
          v112 += 6;
          ++v110;
          --v109;
        }
        while (v109);
LABEL_99:
        unint64_t v3 = (unint64_t)v174;
        long long v106 = v167;
        unsigned __int8 v107 = v187;
        uint64_t v108 = v183;
        goto LABEL_100;
      }
      uint64_t v88 = (uint8_t *)swift_slowAlloc();
      uint64_t v89 = swift_slowAlloc();
      uint64_t v90 = v89;
      v196[0] = v89;
      *(_DWORD *)uint64_t v88 = 136315138;
      unint64_t v58 = *((void *)v7 + 2);
      unint64_t v4 = MEMORY[0x1E4FBC860];
      if (!v58)
      {
LABEL_83:
        void *v158 = v4;
        sub_1AFD76B90(0, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
        sub_1AFD371B8();
        uint64_t v100 = sub_1AFFCAD88();
        uint64_t v102 = v101;
        swift_bridgeObjectRelease();
        *uint64_t v157 = sub_1AFD36BA8(v100, v102, v196);
        sub_1AFFCB688();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1AFD01000, v86, v87, "Successfully applied all filters, found watchlists=[%s]", v88, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1B3E8F0D0](v90, -1, -1);
        MEMORY[0x1B3E8F0D0](v88, -1, -1);
        goto LABEL_84;
      }
      v175 = (void (*)(void *__return_ptr, void))v89;
      LOBYTE(v179) = v87;
      v182 = v88;
      v183 = v86;
      v192[0] = MEMORY[0x1E4FBC860];
      sub_1AFD9DA10(0, v58, 0);
      unint64_t v4 = v192[0];
      unint64_t v2 = sub_1AFD73DB4((uint64_t)v7);
      unint64_t v3 = v91;
      uint64_t v25 = v92 & 1;
      while ((v2 & 0x8000000000000000) == 0 && (uint64_t)v2 < 1 << *((unsigned char *)v7 + 32))
      {
        if (((*(void *)((char *)v7 + ((v2 >> 3) & 0x1FFFFFFFFFFFFFF8) + 56) >> v2) & 1) == 0) {
          goto LABEL_134;
        }
        if (v7[9] != (uint64_t (*__ptr32)())v3) {
          goto LABEL_135;
        }
        v190 = v25;
        uint64_t v93 = (uint64_t *)(*((void *)v7 + 6) + 48 * v2);
        uint64_t v95 = *v93;
        char v94 = v93[1];
        v192[0] = v4;
        unint64_t v0 = *(void *)(v4 + 16);
        uint64_t v96 = *(void *)(v4 + 24);
        sub_1AFFC8E38();
        if (v0 >= v96 >> 1)
        {
          sub_1AFD9DA10(v96 > 1, v0 + 1, 1);
          unint64_t v4 = v192[0];
        }
        *(void *)(v4 + 16) = v0 + 1;
        uint64_t v97 = v4 + 16 * v0;
        *(void *)(v97 + 32) = v95;
        *(void *)(v97 + 40) = v94;
        unint64_t v2 = sub_1AFD73E58(v2, v3, v190 & 1, (uint64_t)v7);
        unint64_t v3 = v98;
        uint64_t v25 = v99 & 1;
        if (!--v58) {
          goto LABEL_82;
        }
      }
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
      goto LABEL_136;
    }
  }
  uint64_t v177 = v56;
  unint64_t v57 = swift_slowAlloc();
  uint64_t v173 = swift_slowAlloc();
  v196[0] = v173;
  *(_DWORD *)unint64_t v57 = 136315394;
  unint64_t v58 = *((void *)v7 + 2);
  if (!v58)
  {
    uint64_t v59 = MEMORY[0x1E4FBC860];
LABEL_58:
    unint64_t v0 = v57 + 4;
    *(void *)(v3 + 120) = v59;
    sub_1AFD76B90(0, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1AFD371B8();
    uint64_t v76 = sub_1AFFCAD88();
    uint64_t v78 = v77;
    swift_bridgeObjectRelease();
    *(void *)(v3 + 128) = sub_1AFD36BA8(v76, v78, v196);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v57 + 12) = 2080;
    os_log_type_t v79 = sub_1AFFC8F38();
    uint64_t v80 = (v79 & 1) == 0;
    if (v79) {
      uint64_t v81 = 6581857;
    }
    else {
      uint64_t v81 = 29295;
    }
    if (v80) {
      int64_t v82 = 0xE200000000000000;
    }
    else {
      int64_t v82 = 0xE300000000000000;
    }
    *(void *)(v3 + 136) = sub_1AFD36BA8(v81, v82, v196);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AFD01000, v55, v177, "Combined watchlist filter results into accumulated results=[%s], comparatorMode=%s", (uint8_t *)v57, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v173, -1, -1);
    MEMORY[0x1B3E8F0D0](v57, -1, -1);

    swift_release_n();
    unint64_t v4 = v179;
    goto LABEL_13;
  }
  char v162 = v57;
  v164 = v55;
  v192[0] = MEMORY[0x1E4FBC860];
  sub_1AFFC8E38();
  sub_1AFD9DA10(0, v58, 0);
  uint64_t v59 = v192[0];
  unint64_t v0 = sub_1AFD73DB4((uint64_t)v7);
  unint64_t v61 = v60;
  uint64_t v63 = v62 & 1;
  while ((v0 & 0x8000000000000000) == 0 && (uint64_t)v0 < 1 << *((unsigned char *)v7 + 32))
  {
    if (((*(void *)((char *)v7 + ((v0 >> 3) & 0x1FFFFFFFFFFFFFF8) + 56) >> v0) & 1) == 0) {
      goto LABEL_105;
    }
    if (v7[9] != (uint64_t (*__ptr32)())v61) {
      goto LABEL_106;
    }
    LODWORD(v189) = v63;
    uint64_t v64 = (uint64_t *)(*((void *)v7 + 6) + 48 * v0);
    uint64_t v65 = *v64;
    uint64_t v66 = v64[1];
    v192[0] = v59;
    unint64_t v2 = *(void *)(v59 + 16);
    unint64_t v3 = *(void *)(v59 + 24);
    unint64_t v4 = v2 + 1;
    sub_1AFFC8E38();
    if (v2 >= v3 >> 1)
    {
      sub_1AFD9DA10(v3 > 1, v2 + 1, 1);
      uint64_t v59 = v192[0];
    }
    *(void *)(v59 + 16) = v4;
    long long v67 = v59 + 16 * v2;
    *(void *)(v67 + 32) = v65;
    *(void *)(v67 + 40) = v66;
    long long v68 = sub_1AFD73E58(v0, v61, v189 & 1, (uint64_t)v7);
    unint64_t v0 = v68;
    unint64_t v61 = v69;
    uint64_t v63 = v70 & 1;
    if (!--v58)
    {
      sub_1AFD76098(v68, v69, v63);
      swift_bridgeObjectRelease();
      unint64_t v3 = (unint64_t)v174;
      unint64_t v57 = v162;
      uint64_t v55 = v164;
      goto LABEL_58;
    }
  }
  __break(1u);
LABEL_105:
  __break(1u);
LABEL_106:
  __break(1u);
LABEL_107:
  sub_1AFFCBD08();
  swift_unknownObjectRetain_n();
  uint64_t v124 = swift_dynamicCastClass();
  if (!v124)
  {
    swift_unknownObjectRelease();
    uint64_t v124 = MEMORY[0x1E4FBC860];
  }
  uint64_t v125 = *(void *)(v124 + 16);
  swift_release();
  if (__OFSUB__(v4 >> 1, v0))
  {
LABEL_136:
    __break(1u);
    goto LABEL_137;
  }
  if (v125 != (v4 >> 1) - v0)
  {
LABEL_137:
    swift_unknownObjectRelease();
    goto LABEL_103;
  }
  long long v106 = swift_dynamicCastClass();
  if (!v106)
  {
    swift_unknownObjectRelease();
    long long v106 = MEMORY[0x1E4FBC860];
  }
LABEL_113:
  swift_unknownObjectRelease();
  uint64_t v126 = sub_1AFFCA888();
  uint64_t v127 = sub_1AFFCB478();
  if (os_log_type_enabled(v126, v127))
  {
    uint64_t v128 = *(void *)(v3 + 224);
    uint64_t v129 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v129 = 134217984;
    *(void *)(v3 + 80) = v128;
    sub_1AFFCB688();
    _os_log_impl(&dword_1AFD01000, v126, v127, "Limited results down to limit=%ld", v129, 0xCu);
    MEMORY[0x1B3E8F0D0](v129, -1, -1);
  }

LABEL_116:
  uint64_t v130 = *(void *)(v106 + 16);
  if (v130)
  {
    uint64_t v131 = *(void *)(v3 + 272);
    uint64_t v132 = *(void *)(v3 + 240);
    v192[0] = MEMORY[0x1E4FBC860];
    sub_1AFD9DA90(0, v130, 0);
    sub_1AFD76924(0, (unint64_t *)&qword_1EB816AF8, (uint64_t (*)(void))sub_1AFD74388, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4F183F8]);
    uint64_t v180 = *MEMORY[0x1E4F275D0];
    v178 = (void (**)(uint64_t, void, uint64_t))(v132 + 104);
    uint64_t v169 = (void (**)(uint64_t, uint64_t))(v131 + 8);
    uint64_t v171 = (void (**)(uint64_t, uint64_t, uint64_t))(v131 + 16);
    uint64_t v133 = (uint64_t *)(v106 + 64);
    while (1)
    {
      uint64_t v134 = *(void *)(v3 + 296);
      uint64_t v135 = *(void *)(v3 + 248);
      v136 = *(void *)(v3 + 232);
      v184 = *(v133 - 4);
      v188 = v130;
      v137 = *(v133 - 3);
      v139 = *(v133 - 1);
      uint64_t v138 = *v133;
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFCADF8();
      sub_1AFFC9A28();
      (*v178)(v135, v180, v136);
      sub_1AFFC9558();
      uint64_t v140 = MEMORY[0x1B3E8AFE0](v134);
      v191 = v139;
      if (v139 == sub_1AFFCAE98() && v138 == v141) {
        break;
      }
      char v142 = sub_1AFFCBCE8();
      swift_bridgeObjectRetain_n();
      swift_retain_n();
      swift_bridgeObjectRelease();
      if (v142) {
        goto LABEL_122;
      }
      unint64_t v3 = (unint64_t)v174;
      uint64_t v149 = v184;
LABEL_126:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)(v3 + 56) = v149;
      *(void *)(v3 + 64) = v137;
      sub_1AFFC8B38();
      swift_bridgeObjectRelease_n();
      swift_release_n();
      uint64_t v83 = v192[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1AFD9DA90(0, *(void *)(v83 + 16) + 1, 1);
        uint64_t v83 = v192[0];
      }
      uint64_t v153 = *(void *)(v83 + 16);
      v152 = *(void *)(v83 + 24);
      if (v153 >= v152 >> 1)
      {
        sub_1AFD9DA90(v152 > 1, v153 + 1, 1);
        uint64_t v83 = v192[0];
      }
      *(void *)(v83 + 16) = v153 + 1;
      v154 = (void *)(v83 + 24 * v153);
      v154[4] = v191;
      v154[5] = v138;
      v154[6] = v140;
      v133 += 6;
      uint64_t v130 = v188 - 1;
      if (v188 == 1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_66;
      }
    }
    swift_bridgeObjectRetain_n();
    swift_retain_n();
LABEL_122:
    v144 = v174[35];
    v143 = v174[36];
    uint64_t v145 = v174[33];
    sub_1AFFCADF8();
    (*v171)(v144, v143, v145);
    if (qword_1EB819E80 != -1) {
      swift_once();
    }
    v146 = v174[36];
    uint64_t v147 = v174[33];
    v148 = (id)qword_1EB831AF8;
    sub_1AFFC9A28();
    unint64_t v3 = (unint64_t)v174;
    uint64_t v149 = sub_1AFFCAEF8();
    uint64_t v151 = v150;
    (*v169)(v146, v147);
    swift_bridgeObjectRelease();
    v137 = v151;
    goto LABEL_126;
  }
  swift_bridgeObjectRelease();
  uint64_t v83 = MEMORY[0x1E4FBC860];
LABEL_66:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v84 = *(uint64_t (**)(uint64_t))(v3 + 8);
  return v84(v83);
}

uint64_t sub_1AFD6EC3C()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1AFD6ECF0(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  int64_t v3 = 0;
  uint64_t v5 = result + 56;
  uint64_t v4 = *(void *)(result + 56);
  uint64_t v19 = a2;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & v4;
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v15 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v15 >= v9) {
      goto LABEL_23;
    }
    unint64_t v16 = *(void *)(v5 + 8 * v15);
    ++v3;
    if (!v16)
    {
      int64_t v3 = v15 + 1;
      if (v15 + 1 >= v9) {
        goto LABEL_23;
      }
      unint64_t v16 = *(void *)(v5 + 8 * v3);
      if (!v16)
      {
        int64_t v3 = v15 + 2;
        if (v15 + 2 >= v9) {
          goto LABEL_23;
        }
        unint64_t v16 = *(void *)(v5 + 8 * v3);
        if (!v16)
        {
          int64_t v3 = v15 + 3;
          if (v15 + 3 >= v9) {
            goto LABEL_23;
          }
          unint64_t v16 = *(void *)(v5 + 8 * v3);
          if (!v16) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v11 = __clz(__rbit64(v16)) + (v3 << 6);
LABEL_5:
    uint64_t v12 = (long long *)(*(void *)(v2 + 48) + 48 * v11);
    long long v13 = *(long long *)((char *)v12 + 26);
    long long v14 = v12[1];
    long long v20 = *v12;
    v21[0] = v14;
    *(_OWORD *)((char *)v21 + 10) = v13;
    sub_1AFD768D8((uint64_t)&v20);
    sub_1AFE21EAC((uint64_t)v18, &v20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v17 = v15 + 4;
  if (v17 >= v9)
  {
LABEL_23:
    swift_release();
    return v19;
  }
  unint64_t v16 = *(void *)(v5 + 8 * v17);
  if (v16)
  {
    int64_t v3 = v17;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v3 >= v9) {
      goto LABEL_23;
    }
    unint64_t v16 = *(void *)(v5 + 8 * v3);
    ++v17;
    if (v16) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1AFD6EE90(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  int64_t v3 = 0;
  uint64_t v25 = a2;
  uint64_t v4 = result + 56;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v18 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v18 >= v8) {
      goto LABEL_23;
    }
    unint64_t v19 = *(void *)(v4 + 8 * v18);
    ++v3;
    if (!v19)
    {
      int64_t v3 = v18 + 1;
      if (v18 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v19 = *(void *)(v4 + 8 * v3);
      if (!v19)
      {
        int64_t v3 = v18 + 2;
        if (v18 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v19 = *(void *)(v4 + 8 * v3);
        if (!v19)
        {
          int64_t v3 = v18 + 3;
          if (v18 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v19 = *(void *)(v4 + 8 * v3);
          if (!v19) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v19 - 1) & v19;
    unint64_t v10 = __clz(__rbit64(v19)) + (v3 << 6);
LABEL_5:
    uint64_t v11 = *(void *)(v2 + 48) + 136 * v10;
    v26[0] = *(_OWORD *)v11;
    long long v12 = *(_OWORD *)(v11 + 64);
    long long v14 = *(_OWORD *)(v11 + 16);
    long long v13 = *(_OWORD *)(v11 + 32);
    v26[3] = *(_OWORD *)(v11 + 48);
    v26[4] = v12;
    v26[1] = v14;
    void v26[2] = v13;
    long long v16 = *(_OWORD *)(v11 + 96);
    long long v15 = *(_OWORD *)(v11 + 112);
    long long v17 = *(_OWORD *)(v11 + 80);
    uint64_t v27 = *(void *)(v11 + 128);
    v26[6] = v16;
    v26[7] = v15;
    v26[5] = v17;
    sub_1AFD76370((uint64_t)v26);
    sub_1AFE227C0((uint64_t)v21, (uint64_t)v26);
    v23[6] = v21[6];
    v23[7] = v21[7];
    uint64_t v24 = v22;
    v23[2] = v21[2];
    v23[3] = v21[3];
    v23[4] = v21[4];
    uint64_t v23[5] = v21[5];
    v23[0] = v21[0];
    v23[1] = v21[1];
    uint64_t result = sub_1AFD76408((uint64_t)v23);
  }
  int64_t v20 = v18 + 4;
  if (v20 >= v8)
  {
LABEL_23:
    swift_release();
    return v25;
  }
  unint64_t v19 = *(void *)(v4 + 8 * v20);
  if (v19)
  {
    int64_t v3 = v20;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v19 = *(void *)(v4 + 8 * v3);
    ++v20;
    if (v19) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

int64_t sub_1AFD6F084(int64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v2 = *(void *)(a2 + 16);
    if ((uint64_t)v2 >= result) {
      unint64_t v3 = result;
    }
    else {
      unint64_t v3 = *(void *)(a2 + 16);
    }
    if (!result) {
      unint64_t v3 = 0;
    }
    if (v2 >= v3) {
      return a2;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1AFD6F0C8@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E9AF8C38 != -1) {
    swift_once();
  }
  sub_1AFD74440();
  uint64_t v3 = v2;
  uint64_t v4 = __swift_project_value_buffer(v2, (uint64_t)qword_1E9AFA090);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v5(a1, v4, v3);
}

uint64_t sub_1AFD6F170@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E9AF8C40 != -1) {
    swift_once();
  }
  sub_1AFD76924(0, &qword_1E9AFA0F8, (uint64_t (*)(void))sub_1AFD33B44, (uint64_t)&type metadata for WatchlistEntity, MEMORY[0x1E4F18730]);
  uint64_t v3 = v2;
  uint64_t v4 = __swift_project_value_buffer(v2, (uint64_t)qword_1E9AFA0A8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v5(a1, v4, v3);
}

uint64_t sub_1AFD6F254(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  *(void *)(v6 + 16) = a1;
  char v10 = a3 & 1;
  char v11 = a6 & 1;
  long long v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 24) = v12;
  void *v12 = v6;
  v12[1] = sub_1AFD76E80;
  return WatchlistQuery.entities(matching:mode:sortedBy:limit:)(a2, v10, a4, a5, v11);
}

uint64_t sub_1AFD6F31C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1AFD76924(0, &qword_1E9AFA178, (uint64_t (*)(void))sub_1AFD33B44, (uint64_t)&type metadata for WatchlistEntity, MEMORY[0x1E4F18450]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  char v11 = (char *)v41 - v10;
  long long v12 = *(char **)(a3 + 16);
  if (!v12) {
    return 1;
  }
  v41[2] = v3;
  uint64_t v13 = *(void *)a1;
  uint64_t v60 = *(void *)(a1 + 8);
  uint64_t v61 = v13;
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v58 = *(void *)(a1 + 24);
  uint64_t v59 = v14;
  uint64_t v57 = *(void *)(a1 + 32);
  LODWORD(v14) = *(unsigned __int8 *)(a1 + 40);
  int v55 = *(unsigned __int8 *)(a1 + 41);
  int v56 = v14;
  uint64_t v51 = *(void *)a2;
  uint64_t v50 = *(void *)(a2 + 8);
  uint64_t v49 = *(void *)(a2 + 16);
  uint64_t v48 = *(void *)(a2 + 24);
  uint64_t v47 = *(void *)(a2 + 32);
  int v46 = *(unsigned __int8 *)(a2 + 40);
  int v45 = *(unsigned __int8 *)(a2 + 41);
  long long v16 = *(void (**)(char *, uint8_t *, uint64_t))(v9 + 16);
  uint64_t v15 = v9 + 16;
  uint64_t v54 = v16;
  long long v17 = (uint8_t *)(a3 + ((*(unsigned __int8 *)(v15 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 64)));
  uint64_t v52 = (void (**)(char *, uint64_t))(v15 - 8);
  uint64_t v42 = *(void *)(v15 + 56);
  v41[1] = a3;
  sub_1AFFC8E38();
  uint64_t v53 = MEMORY[0x1E4FBC840] + 8;
  uint64_t v44 = v8;
  uint64_t v43 = v15;
  while (1)
  {
    v54(v11, v17, v8);
    uint64_t v67 = v61;
    uint64_t v68 = v60;
    uint64_t v69 = v59;
    uint64_t v70 = v58;
    uint64_t v71 = v57;
    char v72 = v56;
    char v73 = v55;
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    WatchlistEntity.init(from:)((uint64_t)&v67, &v74);
    uint64_t v19 = v74;
    uint64_t v18 = v75;
    uint64_t v20 = v76;
    sub_1AFFC8BC8();
    uint64_t v64 = v19;
    uint64_t v65 = v18;
    uint64_t v66 = v20;
    swift_getAtPartialKeyPath();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    sub_1AFD76924(0, (unint64_t *)&qword_1EB816AF8, (uint64_t (*)(void))sub_1AFD74388, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4F183F8]);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_19;
    }
    unint64_t v62 = v17;
    uint64_t v63 = v12;
    uint64_t v67 = v51;
    uint64_t v68 = v50;
    uint64_t v69 = v49;
    uint64_t v70 = v48;
    uint64_t v71 = v47;
    char v72 = v46;
    char v73 = v45;
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    WatchlistEntity.init(from:)((uint64_t)&v67, &v74);
    uint64_t v22 = v74;
    uint64_t v21 = v75;
    uint64_t v23 = v76;
    sub_1AFFC8BC8();
    uint64_t v64 = v22;
    uint64_t v65 = v21;
    uint64_t v66 = v23;
    swift_getAtPartialKeyPath();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    if ((swift_dynamicCast() & 1) == 0) {
      break;
    }
    sub_1AFFC8B28();
    uint64_t v25 = v67;
    uint64_t v24 = v68;
    sub_1AFFC8B28();
    uint64_t v26 = v67;
    uint64_t v27 = v68;
    if (sub_1AFFC8BD8())
    {
      if (v25 == v26 && v24 == v27)
      {
        swift_bridgeObjectRelease_n();
        swift_release();
        swift_release();
        uint64_t v8 = v44;
        (*v52)(v11, v44);
        goto LABEL_4;
      }
      char v28 = sub_1AFFCBCE8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      uint64_t v8 = v44;
      (*v52)(v11, v44);
    }
    else
    {
      if (v26 == v25 && v27 == v24)
      {
        swift_release();
        swift_release();
        uint64_t v8 = v44;
        (*v52)(v11, v44);
        swift_bridgeObjectRelease_n();
        goto LABEL_4;
      }
      char v28 = sub_1AFFCBCE8();
      swift_release();
      swift_release();
      uint64_t v8 = v44;
      (*v52)(v11, v44);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (v28)
    {
LABEL_16:
      swift_bridgeObjectRelease();
      return 1;
    }
LABEL_4:
    long long v17 = &v62[v42];
    long long v12 = v63 - 1;
    if (v63 == (char *)1) {
      goto LABEL_16;
    }
  }
  swift_bridgeObjectRelease();
  swift_release();
LABEL_19:
  if (qword_1EB810B30 != -1) {
    swift_once();
  }
  uint64_t v29 = sub_1AFFCA8A8();
  __swift_project_value_buffer(v29, (uint64_t)qword_1EB810AF0);
  swift_bridgeObjectRetain_n();
  uint64_t v30 = sub_1AFFCA888();
  os_log_type_t v31 = sub_1AFFCB468();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v63 = v11;
    int64_t v32 = (uint8_t *)swift_slowAlloc();
    uint64_t v33 = swift_slowAlloc();
    uint64_t v67 = v33;
    *(_DWORD *)int64_t v32 = 136315138;
    unint64_t v62 = v32 + 4;
    uint64_t v34 = sub_1AFFC8E38();
    uint64_t v35 = v8;
    uint64_t v36 = MEMORY[0x1B3E8D630](v34, v8);
    unint64_t v38 = v37;
    swift_bridgeObjectRelease();
    uint64_t v39 = v36;
    uint64_t v8 = v35;
    char v11 = v63;
    uint64_t v74 = sub_1AFD36BA8(v39, v38, &v67);
    sub_1AFFCB688();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AFD01000, v30, v31, "Watchlist sorts unexpectedly contained a parameter which is not a String. sorts=%s", v32, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v33, -1, -1);
    MEMORY[0x1B3E8F0D0](v32, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  MEMORY[0x1B3E8C360]("Encountered a WatchlistEntity value in WatchlistQuery which is not a String. We need to add explicit support for this in the property queries.", 142, 2, MEMORY[0x1E4FBC860]);
  (*v52)(v11, v8);
  return 1;
}

void *sub_1AFD6FB18(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1AFD76B90(0, &qword_1EB818390, (uint64_t)&type metadata for Headline, MEMORY[0x1E4FBBE00]);
  uint64_t v3 = (void *)swift_allocObject();
  size_t v4 = _swift_stdlib_malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 144);
  sub_1AFD762B8(a1);
  uint64_t v5 = sub_1AFE08638(&v7, (uint64_t)(v3 + 4), v1);
  swift_release();
  if (v5 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

void *sub_1AFD6FC04(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1AFD76B90(0, (unint64_t *)&qword_1EB81A0E0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_1AFD730F0((uint64_t)&v8, v3 + 4, v1, a1);
  sub_1AFFC8E38();
  sub_1AFD762B0();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

uint64_t sub_1AFD6FD0C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return MEMORY[0x1E4FBC860];
    }
    if (v5 <= 0)
    {
      uint64_t v8 = (void *)MEMORY[0x1E4FBC860];
      if (v4 != a3)
      {
LABEL_5:
        if (v5 < 0) {
          goto LABEL_17;
        }
        unint64_t v10 = a2 + 48 * a3;
        if (v10 < (unint64_t)&v8[6 * v5 + 4] && (unint64_t)(v8 + 4) < v10 + 48 * v5) {
          goto LABEL_17;
        }
        swift_arrayInitWithCopy();
        return (uint64_t)v8;
      }
    }
    else
    {
      sub_1AFD76B90(0, &qword_1EB818398, (uint64_t)&type metadata for Watchlist, MEMORY[0x1E4FBBE00]);
      uint64_t v8 = (void *)swift_allocObject();
      size_t v9 = _swift_stdlib_malloc_size(v8);
      v8[2] = v5;
      _OWORD v8[3] = 2 * ((uint64_t)(v9 - 32) / 48);
      if (v4 != a3) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_17:
  uint64_t result = sub_1AFFCBA28();
  __break(1u);
  return result;
}

void *sub_1AFD6FEBC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1AFD76B90(0, &qword_1EB818398, (uint64_t)&type metadata for Watchlist, MEMORY[0x1E4FBBE00]);
  uint64_t v3 = (void *)swift_allocObject();
  size_t v4 = _swift_stdlib_malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 48);
  uint64_t v5 = sub_1AFD732F0(&v7, (uint64_t)(v3 + 4), v1, a1);
  sub_1AFFC8E38();
  sub_1AFD762B0();
  if (v5 != (void *)v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

uint64_t sub_1AFD6FFD4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return MEMORY[0x1E4FBC860];
    }
    if (v5 <= 0)
    {
      uint64_t v8 = (void *)MEMORY[0x1E4FBC860];
      if (v4 != a3)
      {
LABEL_5:
        if (v5 < 0) {
          goto LABEL_17;
        }
        unint64_t v10 = a2 + 144 * a3;
        if (v10 < (unint64_t)&v8[18 * v5 + 4] && (unint64_t)(v8 + 4) < v10 + 144 * v5) {
          goto LABEL_17;
        }
        swift_arrayInitWithCopy();
        return (uint64_t)v8;
      }
    }
    else
    {
      sub_1AFD76B90(0, &qword_1EB818390, (uint64_t)&type metadata for Headline, MEMORY[0x1E4FBBE00]);
      uint64_t v8 = (void *)swift_allocObject();
      size_t v9 = _swift_stdlib_malloc_size(v8);
      v8[2] = v5;
      _OWORD v8[3] = 2 * ((uint64_t)(v9 - 32) / 144);
      if (v4 != a3) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_17:
  uint64_t result = sub_1AFFCBA28();
  __break(1u);
  return result;
}

uint64_t sub_1AFD70188(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return MEMORY[0x1E4FBC860];
    }
    if (v5 <= 0)
    {
      uint64_t v8 = (void *)MEMORY[0x1E4FBC860];
      if (v4 != a3)
      {
LABEL_5:
        if (v5 < 0) {
          goto LABEL_17;
        }
        unint64_t v10 = a2 + 136 * a3;
        if (v10 < (unint64_t)&v8[17 * v5 + 4] && (unint64_t)(v8 + 4) < v10 + 136 * v5) {
          goto LABEL_17;
        }
        swift_arrayInitWithCopy();
        return (uint64_t)v8;
      }
    }
    else
    {
      sub_1AFD76B90(0, &qword_1EB818388, (uint64_t)&type metadata for Stock, MEMORY[0x1E4FBBE00]);
      uint64_t v8 = (void *)swift_allocObject();
      size_t v9 = _swift_stdlib_malloc_size(v8);
      v8[2] = v5;
      _OWORD v8[3] = 2 * ((uint64_t)(v9 - 32) / 136);
      if (v4 != a3) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_17:
  uint64_t result = sub_1AFFCBA28();
  __break(1u);
  return result;
}

uint64_t sub_1AFD70334(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  sub_1AFD76B90(0, &qword_1EB818388, (uint64_t)&type metadata for Stock, MEMORY[0x1E4FBBE00]);
  uint64_t v3 = swift_allocObject();
  size_t v4 = _swift_stdlib_malloc_size((const void *)v3);
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = 2 * ((uint64_t)(v4 - 32) / 136);
  uint64_t v5 = sub_1AFD73530(&v7, (char *)(v3 + 32), v1, a1);
  sub_1AFFC8E38();
  sub_1AFD762B0();
  if (v5 != (void *)v1)
  {
    __break(1u);
    return MEMORY[0x1E4FBC860];
  }
  return v3;
}

void *sub_1AFD70448(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1AFD76B90(0, (unint64_t *)&qword_1EB81A0E0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_1AFD73774((uint64_t)&v8, v3 + 4, v1, a1);
  sub_1AFFC8E38();
  sub_1AFD762B0();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

size_t sub_1AFD70550(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  sub_1AFD743DC(0, &qword_1EB81AE50, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBBE00]);
  uint64_t v3 = *(void *)(sub_1AFFC96E8() - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (void *)swift_allocObject();
  size_t result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      _OWORD v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      sub_1AFFC8E38();
      sub_1AFD73974(&v11, (uint64_t)v6 + v5, v1, a1);
      uint64_t v10 = v9;
      sub_1AFD762B0();
      if (v10 == v1) {
        return (size_t)v6;
      }
      __break(1u);
      return MEMORY[0x1E4FBC860];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1AFD706B0(char *__src, char *a2, unint64_t a3, char *a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v7 = a2;
  uint64_t v8 = __src;
  int64_t v9 = a2 - __src;
  int64_t v10 = (a2 - __src) / 48;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = (uint64_t)(a3 - (void)a2) / 48;
  uint64_t v90 = __src;
  v89[0] = a4;
  if (v10 < v12)
  {
    if (v9 >= -47)
    {
      size_t v13 = 48 * v10;
      uint64_t v14 = a4;
      if (a4 != __src || &__src[v13] <= a4) {
        memmove(a4, __src, v13);
      }
      uint64_t v69 = &a4[v13];
      uint64_t v88 = &a4[v13];
      if ((unint64_t)v7 < a3 && v9 >= 48)
      {
        while (1)
        {
          uint64_t v74 = v8;
          uint64_t v15 = *((void *)v7 + 1);
          uint64_t v17 = *((void *)v7 + 2);
          uint64_t v16 = *((void *)v7 + 3);
          uint64_t v18 = *((void *)v7 + 4);
          char v19 = v7[40];
          uint64_t v20 = v7;
          char v21 = v7[41];
          uint64_t v82 = *(void *)v7;
          uint64_t v83 = v15;
          uint64_t v84 = v17;
          uint64_t v85 = v16;
          uint64_t v86 = v18;
          LOBYTE(v87) = v19;
          HIBYTE(v87) = v21;
          uint64_t v22 = *((void *)v14 + 1);
          uint64_t v24 = *((void *)v14 + 2);
          uint64_t v23 = *((void *)v14 + 3);
          uint64_t v25 = *((void *)v14 + 4);
          char v26 = v14[40];
          char v27 = v14[41];
          uint64_t v76 = *(void *)v14;
          uint64_t v77 = v22;
          uint64_t v78 = v24;
          uint64_t v79 = v23;
          uint64_t v80 = v25;
          LOBYTE(v81) = v26;
          HIBYTE(v81) = v27;
          sub_1AFFC8E38();
          sub_1AFFC8E38();
          sub_1AFFC8E38();
          sub_1AFFC8E38();
          sub_1AFFC8E38();
          sub_1AFFC8E38();
          char v28 = sub_1AFD6F31C((uint64_t)&v82, (uint64_t)&v76, a5);
          if (v6) {
            goto LABEL_47;
          }
          char v29 = v28;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v29)
          {
            uint64_t v30 = v20 + 48;
            os_log_type_t v31 = v74;
            if (v74 >= v20 && v74 < v30)
            {
              uint64_t v6 = 0;
              if (v74 != v20)
              {
                long long v32 = *(_OWORD *)v20;
                long long v33 = *((_OWORD *)v20 + 2);
                *((_OWORD *)v74 + 1) = *((_OWORD *)v20 + 1);
                *((_OWORD *)v74 + 2) = v33;
                *(_OWORD *)uint64_t v74 = v32;
              }
              goto LABEL_19;
            }
            long long v36 = *(_OWORD *)v20;
            long long v37 = *((_OWORD *)v20 + 2);
            *((_OWORD *)v74 + 1) = *((_OWORD *)v20 + 1);
            *((_OWORD *)v74 + 2) = v37;
            *(_OWORD *)uint64_t v74 = v36;
          }
          else
          {
            os_log_type_t v31 = v74;
            if (v74 != v14)
            {
              long long v34 = *(_OWORD *)v14;
              long long v35 = *((_OWORD *)v14 + 2);
              *((_OWORD *)v74 + 1) = *((_OWORD *)v14 + 1);
              *((_OWORD *)v74 + 2) = v35;
              *(_OWORD *)uint64_t v74 = v34;
            }
            v14 += 48;
            v89[0] = v14;
            uint64_t v30 = v20;
          }
          uint64_t v6 = 0;
LABEL_19:
          uint64_t v8 = v31 + 48;
          uint64_t v90 = v8;
          if (v14 < v69)
          {
            uint64_t v7 = v30;
            if ((unint64_t)v30 < a3) {
              continue;
            }
          }
          break;
        }
      }
LABEL_46:
      sub_1AFEE6028((void **)&v90, v89, &v88);
      swift_bridgeObjectRelease();
      return 1;
    }
LABEL_49:
    swift_bridgeObjectRelease();
    uint64_t result = sub_1AFFCBA28();
    __break(1u);
    return result;
  }
  if (v11 < -47) {
    goto LABEL_49;
  }
  uint64_t v38 = 48 * v12;
  if (a4 != a2 || &a2[v38] <= a4) {
    memmove(a4, a2, 48 * v12);
  }
  uint64_t v39 = &a4[v38];
  uint64_t v88 = &a4[v38];
  uint64_t v90 = v7;
  if (v8 >= v7 || v11 < 48) {
    goto LABEL_46;
  }
  uint64_t v40 = (char *)(a3 - 48);
  uint64_t v41 = v7;
  uint64_t v75 = v8;
  while (1)
  {
    char v73 = v40;
    unint64_t v68 = (unint64_t)v39;
    uint64_t v70 = v7;
    uint64_t v42 = *((void *)v39 - 6);
    uint64_t v44 = *((void *)v39 - 5);
    uint64_t v43 = v39 - 48;
    uint64_t v46 = *((void *)v39 - 4);
    uint64_t v45 = *((void *)v39 - 3);
    uint64_t v47 = *((void *)v39 - 2);
    __int16 v48 = *((_WORD *)v39 - 4);
    uint64_t v82 = v42;
    uint64_t v83 = v44;
    uint64_t v84 = v46;
    uint64_t v85 = v45;
    uint64_t v86 = v47;
    __int16 v87 = v48;
    uint64_t v49 = *((void *)v41 - 6);
    uint64_t v50 = *((void *)v41 - 5);
    v41 -= 48;
    uint64_t v52 = *((void *)v41 + 2);
    uint64_t v51 = *((void *)v41 + 3);
    uint64_t v53 = *((void *)v41 + 4);
    __int16 v54 = *((_WORD *)v41 + 20);
    uint64_t v76 = v49;
    uint64_t v77 = v50;
    uint64_t v78 = v52;
    uint64_t v79 = v51;
    uint64_t v80 = v53;
    __int16 v81 = v54;
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    char v55 = sub_1AFD6F31C((uint64_t)&v82, (uint64_t)&v76, a5);
    if (v6) {
      break;
    }
    char v56 = v55;
    uint64_t v67 = v73 + 48;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v56)
    {
      uint64_t v39 = (char *)v68;
      uint64_t v57 = v73;
      unint64_t v58 = (unint64_t)v75;
      if (v67 != v70 || v73 >= v70)
      {
        long long v59 = *(_OWORD *)v41;
        long long v60 = *((_OWORD *)v41 + 2);
        *((_OWORD *)v73 + 1) = *((_OWORD *)v41 + 1);
        *((_OWORD *)v73 + 2) = v60;
        *(_OWORD *)char v73 = v59;
      }
      uint64_t v90 = v41;
    }
    else
    {
      uint64_t v88 = v43;
      uint64_t v57 = v73;
      unint64_t v58 = (unint64_t)v75;
      uint64_t v41 = v70;
      if ((unint64_t)v67 >= v68 && (unint64_t)v73 < v68)
      {
        uint64_t v6 = 0;
        if (v67 != (char *)v68)
        {
          long long v61 = *(_OWORD *)v43;
          long long v62 = *((_OWORD *)v43 + 2);
          *((_OWORD *)v73 + 1) = *((_OWORD *)v43 + 1);
          *((_OWORD *)v73 + 2) = v62;
          *(_OWORD *)char v73 = v61;
        }
        uint64_t v39 = v43;
        goto LABEL_42;
      }
      long long v63 = *(_OWORD *)v43;
      long long v64 = *((_OWORD *)v43 + 2);
      *((_OWORD *)v73 + 1) = *((_OWORD *)v43 + 1);
      *((_OWORD *)v73 + 2) = v64;
      *(_OWORD *)char v73 = v63;
      uint64_t v39 = v43;
    }
    uint64_t v6 = 0;
LABEL_42:
    if (v39 > a4)
    {
      uint64_t v40 = v57 - 48;
      uint64_t v7 = v41;
      if ((unint64_t)v41 > v58) {
        continue;
      }
    }
    goto LABEL_46;
  }
LABEL_47:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1AFEE6028((void **)&v90, v89, &v88);
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_1AFD70C00(uint64_t a1, uint64_t a2)
{
  return sub_1AFD70C6C(a1, a2, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_1AFD71A64);
}

uint64_t sub_1AFD70C6C(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t (*a3)(char *, unint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = isStackAllocationSafe;
  v12[1] = *MEMORY[0x1E4F143B8];
  char v6 = *(unsigned char *)(a2 + 32);
  unint64_t v7 = (unint64_t)((1 << v6) + 63) >> 6;
  size_t v8 = 8 * v7;
  if ((v6 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    uint64_t v9 = a3((char *)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v7, a2, v5);
    swift_release();
  }
  else
  {
    int64_t v10 = (void *)swift_slowAlloc();
    bzero(v10, v8);
    uint64_t v9 = a3((char *)v10, v7, a2, v5);
    swift_release();
    MEMORY[0x1B3E8F0D0](v10, -1, -1);
  }
  return v9;
}

uint64_t sub_1AFD70E08(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) >= *(void *)(a3 + 16)) {
    goto LABEL_93;
  }
  uint64_t v83 = 0;
  int64_t v6 = 0;
  uint64_t v85 = a4 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(a4 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  int64_t v87 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v113 = a3 + 56;
  while (1)
  {
LABEL_8:
    if (v9)
    {
      uint64_t v97 = (v9 - 1) & v9;
      unint64_t v10 = __clz(__rbit64(v9)) | (v6 << 6);
    }
    else
    {
      int64_t v11 = v6 + 1;
      if (__OFADD__(v6, 1)) {
        goto LABEL_193;
      }
      if (v11 >= v87) {
        goto LABEL_184;
      }
      unint64_t v12 = *(void *)(v85 + 8 * v11);
      ++v6;
      if (!v12)
      {
        int64_t v6 = v11 + 1;
        if (v11 + 1 >= v87) {
          goto LABEL_184;
        }
        unint64_t v12 = *(void *)(v85 + 8 * v6);
        if (!v12)
        {
          int64_t v6 = v11 + 2;
          if (v11 + 2 >= v87) {
            goto LABEL_184;
          }
          unint64_t v12 = *(void *)(v85 + 8 * v6);
          if (!v12)
          {
            int64_t v13 = v11 + 3;
            if (v13 >= v87) {
              goto LABEL_184;
            }
            unint64_t v12 = *(void *)(v85 + 8 * v13);
            if (!v12)
            {
              while (1)
              {
                int64_t v6 = v13 + 1;
                if (__OFADD__(v13, 1)) {
                  goto LABEL_195;
                }
                if (v6 >= v87) {
                  goto LABEL_184;
                }
                unint64_t v12 = *(void *)(v85 + 8 * v6);
                ++v13;
                if (v12) {
                  goto LABEL_23;
                }
              }
            }
            int64_t v6 = v13;
          }
        }
      }
LABEL_23:
      uint64_t v97 = (v12 - 1) & v12;
      unint64_t v10 = __clz(__rbit64(v12)) + (v6 << 6);
    }
    uint64_t v14 = *(void *)(v4 + 48) + 48 * v10;
    uint64_t v16 = *(void *)v14;
    uint64_t v15 = *(void *)(v14 + 8);
    uint64_t v17 = *(void **)(v14 + 16);
    uint64_t v105 = *(void *)(v14 + 24);
    uint64_t v18 = *(void *)(v14 + 32);
    unsigned int v19 = *(unsigned __int8 *)(v14 + 40);
    int v101 = *(unsigned __int8 *)(v14 + 41);
    sub_1AFFCBDF8();
    swift_bridgeObjectRetain_n();
    sub_1AFFC8E38();
    uint64_t v103 = v18;
    sub_1AFFC8E38();
    uint64_t v117 = v16;
    sub_1AFFCAF68();
    uint64_t v119 = v15;
    swift_bridgeObjectRelease();
    uint64_t v115 = v17[2];
    sub_1AFFCBE08();
    uint64_t v20 = v17[2];
    unsigned __int8 v107 = v17;
    if (v20)
    {
      sub_1AFFC8E38();
      char v21 = v17 + 5;
      do
      {
        sub_1AFFC8E38();
        sub_1AFFCAF68();
        swift_bridgeObjectRelease();
        v21 += 2;
        --v20;
      }
      while (v20);
      swift_bridgeObjectRelease();
    }
    sub_1AFFC8E38();
    sub_1AFFCAF68();
    swift_bridgeObjectRelease();
    unsigned int v99 = v19 >> 5;
    switch(v19 >> 5)
    {
      case 5u:
        break;
      default:
        sub_1AFFCBE08();
        break;
    }
    sub_1AFFCBE08();
    sub_1AFFCBE08();
    uint64_t v22 = sub_1AFFCBE38();
    uint64_t v23 = -1 << *(unsigned char *)(v5 + 32);
    unint64_t v24 = v22 & ~v23;
    if ((*(void *)(v113 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24)) {
      break;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_7:
    unint64_t v9 = v97;
    swift_bridgeObjectRelease();
  }
  int64_t v89 = v6;
  uint64_t v109 = ~v23;
  uint64_t v111 = *(void *)(v5 + 48);
  unsigned int v95 = v19;
  BOOL v26 = v19 == 160 && v99 == 5;
  BOOL v91 = v26;
  while (1)
  {
    uint64_t v27 = v111 + 48 * v24;
    char v29 = *(void **)(v27 + 16);
    uint64_t v28 = *(void *)(v27 + 24);
    uint64_t v30 = *(void *)(v27 + 32);
    unsigned int v31 = *(unsigned __int8 *)(v27 + 40);
    int v32 = *(unsigned __int8 *)(v27 + 41);
    BOOL v33 = *(void *)v27 == v117 && *(void *)(v27 + 8) == v119;
    if (v33 || (sub_1AFFCBCE8()) && v29[2] == v115)
    {
      if (v115 && v29 != v107)
      {
        unint64_t v34 = v107[2];
        if (!v34) {
          goto LABEL_189;
        }
        BOOL v35 = v29[4] == v107[4] && v29[5] == v107[5];
        if (!v35 && (sub_1AFFCBCE8() & 1) == 0) {
          goto LABEL_40;
        }
        if (v115 != 1)
        {
          unint64_t v36 = v34 - 2;
          if (v34 < 2) {
            goto LABEL_191;
          }
          BOOL v37 = v29[6] == v107[6] && v29[7] == v107[7];
          if (!v37 && (sub_1AFFCBCE8() & 1) == 0) {
            goto LABEL_40;
          }
          if (v115 != 2)
          {
            uint64_t v39 = v29 + 9;
            uint64_t v40 = v107 + 9;
            uint64_t v41 = v115 - 2;
            while (v41)
            {
              if (!v36) {
                goto LABEL_187;
              }
              BOOL v42 = *(v39 - 1) == *(v40 - 1) && *v39 == *v40;
              if (!v42 && (sub_1AFFCBCE8() & 1) == 0) {
                goto LABEL_40;
              }
              --v36;
              v40 += 2;
              v39 += 2;
              if (!--v41) {
                goto LABEL_63;
              }
            }
            __break(1u);
LABEL_186:
            __break(1u);
LABEL_187:
            __break(1u);
LABEL_188:
            __break(1u);
LABEL_189:
            __break(1u);
LABEL_190:
            __break(1u);
LABEL_191:
            __break(1u);
LABEL_192:
            __break(1u);
LABEL_193:
            __break(1u);
LABEL_194:
            __break(1u);
LABEL_195:
            __break(1u);
            goto LABEL_196;
          }
        }
      }
LABEL_63:
      if (v28 == v105 && v30 == v103 || (sub_1AFFCBCE8() & 1) != 0) {
        break;
      }
    }
LABEL_40:
    unint64_t v24 = (v24 + 1) & v109;
    if (((*(void *)(v113 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24) & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v4 = a4;
      uint64_t v5 = a3;
      int64_t v6 = v89;
      goto LABEL_7;
    }
  }
  switch(v31 >> 5)
  {
    case 1u:
      if (v99 != 1) {
        goto LABEL_40;
      }
      goto LABEL_39;
    case 2u:
      if (v99 != 2) {
        goto LABEL_40;
      }
      goto LABEL_39;
    case 3u:
      if (v99 != 3) {
        goto LABEL_40;
      }
      goto LABEL_39;
    case 4u:
      if (v99 != 4) {
        goto LABEL_40;
      }
      goto LABEL_39;
    case 5u:
      BOOL v38 = v91;
      if (v32 != v101) {
        BOOL v38 = 0;
      }
      if (v38) {
        goto LABEL_90;
      }
      goto LABEL_40;
    default:
      if (v95 > 0x1F) {
        goto LABEL_40;
      }
LABEL_39:
      if (v32 != v101) {
        goto LABEL_40;
      }
LABEL_90:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(unint64_t *)((char *)a1 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
      BOOL v43 = __OFADD__(v83++, 1);
      uint64_t v4 = a4;
      uint64_t v5 = a3;
      int64_t v6 = v89;
      unint64_t v9 = v97;
      if (!v43) {
        goto LABEL_8;
      }
      __break(1u);
      break;
  }
LABEL_93:
  int64_t v44 = 0;
  uint64_t v83 = 0;
  uint64_t v84 = v5 + 56;
  uint64_t v45 = 1 << *(unsigned char *)(v5 + 32);
  if (v45 < 64) {
    uint64_t v46 = ~(-1 << v45);
  }
  else {
    uint64_t v46 = -1;
  }
  unint64_t v47 = v46 & *(void *)(v5 + 56);
  int64_t v86 = (unint64_t)(v45 + 63) >> 6;
  uint64_t v114 = v4 + 56;
LABEL_99:
  while (2)
  {
    if (v47)
    {
      uint64_t v96 = (v47 - 1) & v47;
      unint64_t v48 = __clz(__rbit64(v47)) | (v44 << 6);
    }
    else
    {
      int64_t v49 = v44 + 1;
      if (__OFADD__(v44, 1)) {
        goto LABEL_194;
      }
      if (v49 >= v86) {
        break;
      }
      unint64_t v50 = *(void *)(v84 + 8 * v49);
      ++v44;
      if (!v50)
      {
        int64_t v44 = v49 + 1;
        if (v49 + 1 >= v86) {
          break;
        }
        unint64_t v50 = *(void *)(v84 + 8 * v44);
        if (!v50)
        {
          int64_t v44 = v49 + 2;
          if (v49 + 2 >= v86) {
            break;
          }
          unint64_t v50 = *(void *)(v84 + 8 * v44);
          if (!v50)
          {
            int64_t v51 = v49 + 3;
            if (v51 >= v86) {
              break;
            }
            unint64_t v50 = *(void *)(v84 + 8 * v51);
            if (!v50)
            {
              while (1)
              {
                int64_t v44 = v51 + 1;
                if (__OFADD__(v51, 1)) {
                  break;
                }
                if (v44 >= v86) {
                  goto LABEL_184;
                }
                unint64_t v50 = *(void *)(v84 + 8 * v44);
                ++v51;
                if (v50) {
                  goto LABEL_114;
                }
              }
LABEL_196:
              __break(1u);
              JUMPOUT(0x1AFD71A04);
            }
            int64_t v44 = v51;
          }
        }
      }
LABEL_114:
      uint64_t v96 = (v50 - 1) & v50;
      unint64_t v48 = __clz(__rbit64(v50)) + (v44 << 6);
    }
    uint64_t v52 = *(void *)(v5 + 48) + 48 * v48;
    uint64_t v54 = *(void *)v52;
    uint64_t v53 = *(void *)(v52 + 8);
    char v55 = *(void **)(v52 + 16);
    uint64_t v106 = *(void *)(v52 + 24);
    uint64_t v56 = *(void *)(v52 + 32);
    unsigned int v98 = *(unsigned __int8 *)(v52 + 40);
    int v102 = *(unsigned __int8 *)(v52 + 41);
    sub_1AFFCBDF8();
    swift_bridgeObjectRetain_n();
    sub_1AFFC8E38();
    uint64_t v104 = v56;
    sub_1AFFC8E38();
    uint64_t v118 = v54;
    sub_1AFFCAF68();
    uint64_t v120 = v53;
    swift_bridgeObjectRelease();
    uint64_t v116 = v55[2];
    sub_1AFFCBE08();
    uint64_t v57 = v55[2];
    uint64_t v108 = v55;
    if (v57)
    {
      sub_1AFFC8E38();
      unint64_t v58 = v55 + 5;
      do
      {
        sub_1AFFC8E38();
        sub_1AFFCAF68();
        swift_bridgeObjectRelease();
        v58 += 2;
        --v57;
      }
      while (v57);
      swift_bridgeObjectRelease();
    }
    sub_1AFFC8E38();
    sub_1AFFCAF68();
    swift_bridgeObjectRelease();
    unsigned int v100 = v98 >> 5;
    switch(v98 >> 5)
    {
      case 5u:
        break;
      default:
        sub_1AFFCBE08();
        break;
    }
    sub_1AFFCBE08();
    sub_1AFFCBE08();
    uint64_t v59 = sub_1AFFCBE38();
    uint64_t v60 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v61 = v59 & ~v60;
    if (((*(void *)(v114 + ((v61 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v61) & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_98;
    }
    unint64_t v88 = v48;
    int64_t v90 = v44;
    uint64_t v110 = ~v60;
    uint64_t v112 = *(void *)(v4 + 48);
    BOOL v63 = v98 == 160 && v100 == 5;
    BOOL v92 = v63;
    while (2)
    {
      uint64_t v64 = v112 + 48 * v61;
      uint64_t v66 = *(void **)(v64 + 16);
      uint64_t v65 = *(void *)(v64 + 24);
      uint64_t v67 = *(void *)(v64 + 32);
      unsigned int v68 = *(unsigned __int8 *)(v64 + 40);
      int v69 = *(unsigned __int8 *)(v64 + 41);
      BOOL v70 = *(void *)v64 == v118 && *(void *)(v64 + 8) == v120;
      if (!v70 && (sub_1AFFCBCE8() & 1) == 0 || v66[2] != v116) {
        goto LABEL_131;
      }
      if (!v116 || v66 == v108) {
        goto LABEL_154;
      }
      unint64_t v71 = v108[2];
      if (!v71) {
        goto LABEL_190;
      }
      BOOL v72 = v66[4] == v108[4] && v66[5] == v108[5];
      if (!v72 && (sub_1AFFCBCE8() & 1) == 0) {
        goto LABEL_131;
      }
      if (v116 == 1) {
        goto LABEL_154;
      }
      unint64_t v73 = v71 - 2;
      if (v71 < 2) {
        goto LABEL_192;
      }
      BOOL v74 = v66[6] == v108[6] && v66[7] == v108[7];
      if (!v74 && (sub_1AFFCBCE8() & 1) == 0)
      {
LABEL_131:
        unint64_t v61 = (v61 + 1) & v110;
        if ((*(void *)(v114 + ((v61 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v61)) {
          continue;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v4 = a4;
        uint64_t v5 = a3;
        int64_t v44 = v90;
LABEL_98:
        unint64_t v47 = v96;
        swift_bridgeObjectRelease();
        goto LABEL_99;
      }
      break;
    }
    if (v116 != 2)
    {
      uint64_t v76 = v66 + 9;
      uint64_t v77 = v108 + 9;
      uint64_t v78 = v116 - 2;
      while (v78)
      {
        if (!v73) {
          goto LABEL_188;
        }
        BOOL v79 = *(v76 - 1) == *(v77 - 1) && *v76 == *v77;
        if (!v79 && (sub_1AFFCBCE8() & 1) == 0) {
          goto LABEL_131;
        }
        --v73;
        v77 += 2;
        v76 += 2;
        if (!--v78) {
          goto LABEL_154;
        }
      }
      goto LABEL_186;
    }
LABEL_154:
    if ((v65 != v106 || v67 != v104) && (sub_1AFFCBCE8() & 1) == 0) {
      goto LABEL_131;
    }
    switch(v68 >> 5)
    {
      case 1u:
        if (v100 != 1) {
          goto LABEL_131;
        }
        goto LABEL_130;
      case 2u:
        if (v100 != 2) {
          goto LABEL_131;
        }
        goto LABEL_130;
      case 3u:
        if (v100 != 3) {
          goto LABEL_131;
        }
        goto LABEL_130;
      case 4u:
        if (v100 != 4) {
          goto LABEL_131;
        }
        goto LABEL_130;
      case 5u:
        BOOL v75 = v92;
        if (v69 != v102) {
          BOOL v75 = 0;
        }
        if (v75) {
          goto LABEL_181;
        }
        goto LABEL_131;
      default:
        if (v98 > 0x1F) {
          goto LABEL_131;
        }
LABEL_130:
        if (v69 != v102) {
          goto LABEL_131;
        }
LABEL_181:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(unint64_t *)((char *)a1 + ((v88 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v88;
        BOOL v43 = __OFADD__(v83++, 1);
        uint64_t v4 = a4;
        uint64_t v5 = a3;
        int64_t v44 = v90;
        unint64_t v47 = v96;
        if (!v43) {
          continue;
        }
        __break(1u);
        break;
    }
    break;
  }
LABEL_184:
  sub_1AFFC8E48();
  return sub_1AFD729C8(a1, a2, v83, v5);
}

unint64_t sub_1AFD71A64(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) >= *(void *)(a3 + 16))
  {
    uint64_t v79 = 0;
    int64_t v41 = 0;
    uint64_t v81 = a3 + 56;
    uint64_t v42 = 1 << *(unsigned char *)(a3 + 32);
    if (v42 < 64) {
      uint64_t v43 = ~(-1 << v42);
    }
    else {
      uint64_t v43 = -1;
    }
    unint64_t v44 = v43 & *(void *)(a3 + 56);
    int64_t v83 = (unint64_t)(v42 + 63) >> 6;
    uint64_t v129 = a4 + 56;
LABEL_85:
    while (2)
    {
      if (v44)
      {
        unint64_t v45 = __clz(__rbit64(v44));
        v44 &= v44 - 1;
        unint64_t v46 = v45 | (v41 << 6);
      }
      else
      {
        int64_t v47 = v41 + 1;
        if (__OFADD__(v41, 1))
        {
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
          goto LABEL_163;
        }
        if (v47 >= v83) {
          goto LABEL_159;
        }
        unint64_t v48 = *(void *)(v81 + 8 * v47);
        ++v41;
        if (!v48)
        {
          int64_t v41 = v47 + 1;
          if (v47 + 1 >= v83) {
            goto LABEL_159;
          }
          unint64_t v48 = *(void *)(v81 + 8 * v41);
          if (!v48)
          {
            int64_t v41 = v47 + 2;
            if (v47 + 2 >= v83) {
              goto LABEL_159;
            }
            unint64_t v48 = *(void *)(v81 + 8 * v41);
            if (!v48)
            {
              int64_t v49 = v47 + 3;
              if (v49 >= v83) {
                goto LABEL_159;
              }
              unint64_t v48 = *(void *)(v81 + 8 * v49);
              if (!v48)
              {
                while (1)
                {
                  int64_t v41 = v49 + 1;
                  if (__OFADD__(v49, 1)) {
                    break;
                  }
                  if (v41 >= v83) {
                    goto LABEL_159;
                  }
                  unint64_t v48 = *(void *)(v81 + 8 * v41);
                  ++v49;
                  if (v48) {
                    goto LABEL_100;
                  }
                }
LABEL_163:
                __break(1u);
                goto LABEL_164;
              }
              int64_t v41 = v49;
            }
          }
        }
LABEL_100:
        unint64_t v44 = (v48 - 1) & v48;
        unint64_t v46 = __clz(__rbit64(v48)) + (v41 << 6);
      }
      uint64_t v50 = *(void *)(v5 + 48) + 136 * v46;
      long long v120 = *(_OWORD *)v50;
      long long v51 = *(_OWORD *)(v50 + 64);
      long long v53 = *(_OWORD *)(v50 + 16);
      long long v52 = *(_OWORD *)(v50 + 32);
      long long v123 = *(_OWORD *)(v50 + 48);
      long long v124 = v51;
      long long v121 = v53;
      long long v122 = v52;
      long long v55 = *(_OWORD *)(v50 + 96);
      long long v54 = *(_OWORD *)(v50 + 112);
      long long v56 = *(_OWORD *)(v50 + 80);
      unint64_t v128 = *(void *)(v50 + 128);
      long long v126 = v55;
      long long v127 = v54;
      long long v125 = v56;
      *(_OWORD *)&v118[16] = *(_OWORD *)(v50 + 80);
      *(_OWORD *)uint64_t v119 = *(_OWORD *)(v50 + 96);
      *(_OWORD *)&v119[16] = *(_OWORD *)(v50 + 112);
      *(void *)&v119[32] = *(void *)(v50 + 128);
      long long v115 = *(_OWORD *)(v50 + 16);
      long long v116 = *(_OWORD *)(v50 + 32);
      long long v117 = *(_OWORD *)(v50 + 48);
      *(_OWORD *)uint64_t v118 = *(_OWORD *)(v50 + 64);
      long long v114 = *(_OWORD *)v50;
      sub_1AFFCBDF8();
      sub_1AFD76370((uint64_t)&v120);
      sub_1AFD78C34();
      uint64_t v57 = sub_1AFFCBE38();
      uint64_t v58 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v59 = v57 & ~v58;
      if (((*(void *)(v129 + ((v59 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v59) & 1) == 0)
      {
        sub_1AFD76408((uint64_t)&v120);
        continue;
      }
      break;
    }
    unint64_t v85 = v44;
    int64_t v87 = v41;
    uint64_t v60 = ~v58;
    long long v61 = v120;
    unint64_t v62 = v121;
    *((void *)&v111 + 1) = v122;
    unint64_t v113 = *((void *)&v121 + 1);
    unint64_t v109 = v123;
    *(void *)&long long v111 = *((void *)&v122 + 1);
    uint64_t v101 = v124;
    unint64_t v103 = *((void *)&v124 + 1);
    unint64_t v105 = *((void *)&v123 + 1);
    *((void *)&v97 + 1) = *((void *)&v125 + 1);
    unint64_t v99 = v125;
    unint64_t v95 = v127;
    *(void *)&long long v97 = v126;
    uint64_t v89 = *((void *)&v127 + 1);
    unint64_t v91 = *((void *)&v126 + 1);
    unint64_t v93 = v128;
    while (1)
    {
      uint64_t v63 = *(void *)(v4 + 48) + 136 * v59;
      long long v114 = *(_OWORD *)v63;
      long long v64 = *(_OWORD *)(v63 + 48);
      long long v66 = *(_OWORD *)(v63 + 16);
      long long v65 = *(_OWORD *)(v63 + 32);
      *(_OWORD *)uint64_t v118 = *(_OWORD *)(v63 + 64);
      long long v116 = v65;
      long long v117 = v64;
      long long v115 = v66;
      long long v68 = *(_OWORD *)(v63 + 96);
      long long v67 = *(_OWORD *)(v63 + 112);
      long long v69 = *(_OWORD *)(v63 + 80);
      *(void *)&v119[32] = *(void *)(v63 + 128);
      *(_OWORD *)uint64_t v119 = v68;
      *(_OWORD *)&v119[16] = v67;
      *(_OWORD *)&v118[16] = v69;
      if (v114 != v61 && (sub_1AFFCBCE8() & 1) == 0
        || v115 != __PAIR128__(v113, v62) && (sub_1AFFCBCE8() & 1) == 0
        || __PAIR128__(v116, *((unint64_t *)&v116 + 1)) != v111 && (sub_1AFFCBCE8() & 1) == 0
        || v117 != __PAIR128__(v105, v109) && (sub_1AFFCBCE8() & 1) == 0)
      {
        goto LABEL_105;
      }
      unint64_t v70 = 0xE700000000000000;
      uint64_t v71 = 0x6E776F6E6B6E75;
      switch(v118[0])
      {
        case 1:
          unint64_t v70 = 0xE800000000000000;
          uint64_t v71 = 0x79636E6572727563;
          break;
        case 2:
          uint64_t v71 = 0x75636F7470797263;
          unint64_t v70 = 0xEE0079636E657272;
          break;
        case 3:
          unint64_t v70 = 0xE600000000000000;
          uint64_t v71 = 0x797469757165;
          break;
        case 4:
          unint64_t v70 = 0xE300000000000000;
          uint64_t v71 = 6714469;
          break;
        case 5:
          uint64_t v71 = 0x73657275747566;
          break;
        case 6:
          unint64_t v70 = 0xE500000000000000;
          uint64_t v71 = 0x7865646E69;
          break;
        case 7:
          uint64_t v71 = 0x75466C617574756DLL;
          unint64_t v70 = 0xEA0000000000646ELL;
          break;
        default:
          break;
      }
      unint64_t v72 = 0xE700000000000000;
      uint64_t v73 = 0x6E776F6E6B6E75;
      switch(v101)
      {
        case 1:
          unint64_t v72 = 0xE800000000000000;
          if (v71 != 0x79636E6572727563) {
            goto LABEL_138;
          }
          goto LABEL_135;
        case 2:
          unint64_t v72 = 0xEE0079636E657272;
          if (v71 != 0x75636F7470797263) {
            goto LABEL_138;
          }
          goto LABEL_135;
        case 3:
          unint64_t v72 = 0xE600000000000000;
          if (v71 != 0x797469757165) {
            goto LABEL_138;
          }
          goto LABEL_135;
        case 4:
          unint64_t v72 = 0xE300000000000000;
          if (v71 != 6714469) {
            goto LABEL_138;
          }
          goto LABEL_135;
        case 5:
          if (v71 != 0x73657275747566) {
            goto LABEL_138;
          }
          goto LABEL_135;
        case 6:
          unint64_t v72 = 0xE500000000000000;
          uint64_t v73 = 0x7865646E69;
          goto LABEL_134;
        case 7:
          unint64_t v72 = 0xEA0000000000646ELL;
          if (v71 != 0x75466C617574756DLL) {
            goto LABEL_138;
          }
          goto LABEL_135;
        default:
LABEL_134:
          if (v71 != v73) {
            goto LABEL_138;
          }
LABEL_135:
          if (v70 == v72)
          {
            sub_1AFD76370((uint64_t)&v114);
            swift_bridgeObjectRelease_n();
            uint64_t v4 = a4;
          }
          else
          {
LABEL_138:
            char v74 = sub_1AFFCBCE8();
            sub_1AFD76370((uint64_t)&v114);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v4 = a4;
            if ((v74 & 1) == 0) {
              goto LABEL_104;
            }
          }
          if (*(_OWORD *)&v118[8] != __PAIR128__(v99, v103) && (sub_1AFFCBCE8() & 1) == 0
            || __PAIR128__(*(unint64_t *)&v118[24], *(unint64_t *)v119) != v97
            && (sub_1AFFCBCE8() & 1) == 0)
          {
            goto LABEL_104;
          }
          if (*(void *)&v119[16])
          {
            if (!v95 || *(_OWORD *)&v119[8] != __PAIR128__(v95, v91) && (sub_1AFFCBCE8() & 1) == 0) {
              goto LABEL_104;
            }
          }
          else if (v95)
          {
            goto LABEL_104;
          }
          if (!*(void *)&v119[32])
          {
            if (!v93) {
              goto LABEL_156;
            }
LABEL_104:
            sub_1AFD76408((uint64_t)&v114);
            uint64_t v5 = a3;
            goto LABEL_105;
          }
          if (!v93) {
            goto LABEL_104;
          }
          if (*(void *)&v119[24] == v89 && *(void *)&v119[32] == v93)
          {
LABEL_156:
            sub_1AFD76408((uint64_t)&v114);
            uint64_t v5 = a3;
LABEL_157:
            unint64_t v44 = v85;
            int64_t v41 = v87;
            sub_1AFD76408((uint64_t)&v120);
            *(unint64_t *)((char *)a1 + ((v46 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v46;
            if (!__OFADD__(v79, 1))
            {
              ++v79;
              goto LABEL_85;
            }
LABEL_164:
            __break(1u);
            goto LABEL_165;
          }
          char v75 = sub_1AFFCBCE8();
          sub_1AFD76408((uint64_t)&v114);
          uint64_t v5 = a3;
          if (v75) {
            goto LABEL_157;
          }
LABEL_105:
          unint64_t v59 = (v59 + 1) & v60;
          if (((*(void *)(v129 + ((v59 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v59) & 1) == 0)
          {
            sub_1AFD76408((uint64_t)&v120);
            unint64_t v44 = v85;
            int64_t v41 = v87;
            goto LABEL_85;
          }
          break;
      }
    }
  }
  uint64_t v79 = 0;
  int64_t v6 = 0;
  uint64_t v80 = a4 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(a4 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  int64_t v82 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v129 = a3 + 56;
LABEL_7:
  while (2)
  {
    if (v9)
    {
      unint64_t v10 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v11 = v10 | (v6 << 6);
LABEL_23:
      uint64_t v15 = *(void *)(v4 + 48) + 136 * v11;
      long long v120 = *(_OWORD *)v15;
      long long v16 = *(_OWORD *)(v15 + 64);
      long long v18 = *(_OWORD *)(v15 + 16);
      long long v17 = *(_OWORD *)(v15 + 32);
      long long v123 = *(_OWORD *)(v15 + 48);
      long long v124 = v16;
      long long v121 = v18;
      long long v122 = v17;
      long long v20 = *(_OWORD *)(v15 + 96);
      long long v19 = *(_OWORD *)(v15 + 112);
      long long v21 = *(_OWORD *)(v15 + 80);
      unint64_t v128 = *(void *)(v15 + 128);
      long long v126 = v20;
      long long v127 = v19;
      long long v125 = v21;
      *(_OWORD *)&v118[16] = *(_OWORD *)(v15 + 80);
      *(_OWORD *)uint64_t v119 = *(_OWORD *)(v15 + 96);
      *(_OWORD *)&v119[16] = *(_OWORD *)(v15 + 112);
      *(void *)&v119[32] = *(void *)(v15 + 128);
      long long v115 = *(_OWORD *)(v15 + 16);
      long long v116 = *(_OWORD *)(v15 + 32);
      long long v117 = *(_OWORD *)(v15 + 48);
      *(_OWORD *)uint64_t v118 = *(_OWORD *)(v15 + 64);
      long long v114 = *(_OWORD *)v15;
      sub_1AFFCBDF8();
      sub_1AFD76370((uint64_t)&v120);
      sub_1AFD78C34();
      uint64_t v22 = sub_1AFFCBE38();
      uint64_t v23 = -1 << *(unsigned char *)(v5 + 32);
      unint64_t v24 = v22 & ~v23;
      if (((*(void *)(v129 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24) & 1) == 0)
      {
        sub_1AFD76408((uint64_t)&v120);
        continue;
      }
      unint64_t v84 = v9;
      int64_t v86 = v6;
      uint64_t v25 = ~v23;
      long long v26 = v120;
      unint64_t v27 = v121;
      *((void *)&v110 + 1) = v122;
      unint64_t v112 = *((void *)&v121 + 1);
      unint64_t v108 = v123;
      *(void *)&long long v110 = *((void *)&v122 + 1);
      uint64_t v100 = v124;
      unint64_t v102 = *((void *)&v124 + 1);
      unint64_t v104 = *((void *)&v123 + 1);
      *((void *)&v96 + 1) = *((void *)&v125 + 1);
      unint64_t v98 = v125;
      unint64_t v94 = v127;
      *(void *)&long long v96 = v126;
      unint64_t v88 = *((void *)&v127 + 1);
      unint64_t v90 = *((void *)&v126 + 1);
      unint64_t v92 = v128;
      while (1)
      {
        uint64_t v28 = *(void *)(v5 + 48) + 136 * v24;
        long long v114 = *(_OWORD *)v28;
        long long v29 = *(_OWORD *)(v28 + 48);
        long long v31 = *(_OWORD *)(v28 + 16);
        long long v30 = *(_OWORD *)(v28 + 32);
        *(_OWORD *)uint64_t v118 = *(_OWORD *)(v28 + 64);
        long long v116 = v30;
        long long v117 = v29;
        long long v115 = v31;
        long long v33 = *(_OWORD *)(v28 + 96);
        long long v32 = *(_OWORD *)(v28 + 112);
        long long v34 = *(_OWORD *)(v28 + 80);
        *(void *)&v119[32] = *(void *)(v28 + 128);
        *(_OWORD *)uint64_t v119 = v33;
        *(_OWORD *)&v119[16] = v32;
        *(_OWORD *)&v118[16] = v34;
        if (v114 != v26 && (sub_1AFFCBCE8() & 1) == 0
          || v115 != __PAIR128__(v112, v27) && (sub_1AFFCBCE8() & 1) == 0
          || __PAIR128__(v116, *((unint64_t *)&v116 + 1)) != v110 && (sub_1AFFCBCE8() & 1) == 0
          || v117 != __PAIR128__(v104, v108) && (sub_1AFFCBCE8() & 1) == 0)
        {
          goto LABEL_27;
        }
        unint64_t v35 = 0xE700000000000000;
        uint64_t v36 = 0x6E776F6E6B6E75;
        switch(v118[0])
        {
          case 1:
            unint64_t v35 = 0xE800000000000000;
            uint64_t v36 = 0x79636E6572727563;
            break;
          case 2:
            uint64_t v36 = 0x75636F7470797263;
            unint64_t v35 = 0xEE0079636E657272;
            break;
          case 3:
            unint64_t v35 = 0xE600000000000000;
            uint64_t v36 = 0x797469757165;
            break;
          case 4:
            unint64_t v35 = 0xE300000000000000;
            uint64_t v36 = 6714469;
            break;
          case 5:
            uint64_t v36 = 0x73657275747566;
            break;
          case 6:
            unint64_t v35 = 0xE500000000000000;
            uint64_t v36 = 0x7865646E69;
            break;
          case 7:
            uint64_t v36 = 0x75466C617574756DLL;
            unint64_t v35 = 0xEA0000000000646ELL;
            break;
          default:
            break;
        }
        unint64_t v37 = 0xE700000000000000;
        uint64_t v38 = 0x6E776F6E6B6E75;
        switch(v100)
        {
          case 1:
            unint64_t v37 = 0xE800000000000000;
            if (v36 != 0x79636E6572727563) {
              goto LABEL_60;
            }
            goto LABEL_57;
          case 2:
            unint64_t v37 = 0xEE0079636E657272;
            if (v36 != 0x75636F7470797263) {
              goto LABEL_60;
            }
            goto LABEL_57;
          case 3:
            unint64_t v37 = 0xE600000000000000;
            if (v36 != 0x797469757165) {
              goto LABEL_60;
            }
            goto LABEL_57;
          case 4:
            unint64_t v37 = 0xE300000000000000;
            if (v36 != 6714469) {
              goto LABEL_60;
            }
            goto LABEL_57;
          case 5:
            if (v36 != 0x73657275747566) {
              goto LABEL_60;
            }
            goto LABEL_57;
          case 6:
            unint64_t v37 = 0xE500000000000000;
            uint64_t v38 = 0x7865646E69;
            goto LABEL_56;
          case 7:
            unint64_t v37 = 0xEA0000000000646ELL;
            if (v36 != 0x75466C617574756DLL) {
              goto LABEL_60;
            }
            goto LABEL_57;
          default:
LABEL_56:
            if (v36 != v38) {
              goto LABEL_60;
            }
LABEL_57:
            if (v35 == v37)
            {
              sub_1AFD76370((uint64_t)&v114);
              swift_bridgeObjectRelease_n();
              uint64_t v4 = a4;
            }
            else
            {
LABEL_60:
              char v39 = sub_1AFFCBCE8();
              sub_1AFD76370((uint64_t)&v114);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v4 = a4;
              if ((v39 & 1) == 0) {
                goto LABEL_26;
              }
            }
            if (*(_OWORD *)&v118[8] != __PAIR128__(v98, v102) && (sub_1AFFCBCE8() & 1) == 0
              || __PAIR128__(*(unint64_t *)&v118[24], *(unint64_t *)v119) != v96
              && (sub_1AFFCBCE8() & 1) == 0)
            {
              goto LABEL_26;
            }
            if (*(void *)&v119[16])
            {
              if (!v94 || *(_OWORD *)&v119[8] != __PAIR128__(v94, v90) && (sub_1AFFCBCE8() & 1) == 0) {
                goto LABEL_26;
              }
            }
            else if (v94)
            {
              goto LABEL_26;
            }
            if (!*(void *)&v119[32])
            {
              if (!v92) {
                goto LABEL_77;
              }
LABEL_26:
              sub_1AFD76408((uint64_t)&v114);
              uint64_t v5 = a3;
              goto LABEL_27;
            }
            if (!v92) {
              goto LABEL_26;
            }
            if (*(_OWORD *)&v119[24] == __PAIR128__(v92, v88))
            {
LABEL_77:
              sub_1AFD76408((uint64_t)&v114);
              uint64_t v5 = a3;
LABEL_78:
              unint64_t v9 = v84;
              int64_t v6 = v86;
              sub_1AFD76408((uint64_t)&v120);
              *(unint64_t *)((char *)a1 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
              if (!__OFADD__(v79, 1))
              {
                ++v79;
                goto LABEL_7;
              }
LABEL_165:
              __break(1u);
              JUMPOUT(0x1AFD72948);
            }
            char v40 = sub_1AFFCBCE8();
            sub_1AFD76408((uint64_t)&v114);
            uint64_t v5 = a3;
            if (v40) {
              goto LABEL_78;
            }
LABEL_27:
            unint64_t v24 = (v24 + 1) & v25;
            if (((*(void *)(v129 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24) & 1) == 0)
            {
              sub_1AFD76408((uint64_t)&v120);
              unint64_t v9 = v84;
              int64_t v6 = v86;
              goto LABEL_7;
            }
            break;
        }
      }
    }
    break;
  }
  int64_t v12 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
    goto LABEL_161;
  }
  if (v12 < v82)
  {
    unint64_t v13 = *(void *)(v80 + 8 * v12);
    ++v6;
    if (v13) {
      goto LABEL_22;
    }
    int64_t v6 = v12 + 1;
    if (v12 + 1 >= v82) {
      goto LABEL_159;
    }
    unint64_t v13 = *(void *)(v80 + 8 * v6);
    if (v13) {
      goto LABEL_22;
    }
    int64_t v6 = v12 + 2;
    if (v12 + 2 >= v82) {
      goto LABEL_159;
    }
    unint64_t v13 = *(void *)(v80 + 8 * v6);
    if (v13)
    {
LABEL_22:
      unint64_t v9 = (v13 - 1) & v13;
      unint64_t v11 = __clz(__rbit64(v13)) + (v6 << 6);
      goto LABEL_23;
    }
    int64_t v14 = v12 + 3;
    if (v14 < v82)
    {
      unint64_t v13 = *(void *)(v80 + 8 * v14);
      if (v13)
      {
        int64_t v6 = v14;
        goto LABEL_22;
      }
      while (1)
      {
        int64_t v6 = v14 + 1;
        if (__OFADD__(v14, 1)) {
          goto LABEL_162;
        }
        if (v6 >= v82) {
          break;
        }
        unint64_t v13 = *(void *)(v80 + 8 * v6);
        ++v14;
        if (v13) {
          goto LABEL_22;
        }
      }
    }
  }
LABEL_159:
  sub_1AFFC8E48();
  return sub_1AFD72E20(a1, a2, v79, v5);
}

uint64_t sub_1AFD729C8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v7 = MEMORY[0x1E4FBC870];
    goto LABEL_42;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) != a3)
  {
    sub_1AFD76924(0, &qword_1E9AFA168, (uint64_t (*)(void))sub_1AFD76884, (uint64_t)&type metadata for Watchlist, MEMORY[0x1E4FBB9A8]);
    uint64_t v6 = sub_1AFFCB7B8();
    uint64_t v7 = v6;
    if (a2 < 1) {
      unint64_t v8 = 0;
    }
    else {
      unint64_t v8 = *a1;
    }
    uint64_t v9 = 0;
    uint64_t v10 = v6 + 56;
    while (1)
    {
      if (v8)
      {
        uint64_t v40 = (v8 - 1) & v8;
        uint64_t v41 = v9;
        unint64_t v11 = __clz(__rbit64(v8)) | (v9 << 6);
      }
      else
      {
        uint64_t v12 = v9 + 1;
        if (__OFADD__(v9, 1)) {
          goto LABEL_45;
        }
        if (v12 >= a2) {
          goto LABEL_42;
        }
        unint64_t v13 = a1[v12];
        uint64_t v14 = v9 + 1;
        if (!v13)
        {
          uint64_t v14 = v9 + 2;
          if (v9 + 2 >= a2) {
            goto LABEL_42;
          }
          unint64_t v13 = a1[v14];
          if (!v13)
          {
            uint64_t v14 = v9 + 3;
            if (v9 + 3 >= a2) {
              goto LABEL_42;
            }
            unint64_t v13 = a1[v14];
            if (!v13)
            {
              uint64_t v15 = v9 + 4;
              if (v9 + 4 >= a2) {
                goto LABEL_42;
              }
              unint64_t v13 = a1[v15];
              if (!v13)
              {
                while (1)
                {
                  uint64_t v14 = v15 + 1;
                  if (__OFADD__(v15, 1)) {
                    goto LABEL_46;
                  }
                  if (v14 >= a2) {
                    goto LABEL_42;
                  }
                  unint64_t v13 = a1[v14];
                  ++v15;
                  if (v13) {
                    goto LABEL_23;
                  }
                }
              }
              uint64_t v14 = v9 + 4;
            }
          }
        }
LABEL_23:
        uint64_t v40 = (v13 - 1) & v13;
        uint64_t v41 = v14;
        unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
      }
      uint64_t v16 = *(void *)(v4 + 48) + 48 * v11;
      uint64_t v17 = *(void *)v16;
      uint64_t v18 = *(void *)(v16 + 8);
      uint64_t v19 = *(void *)(v16 + 16);
      uint64_t v20 = *(void *)(v16 + 32);
      unsigned int v43 = *(unsigned __int8 *)(v16 + 40);
      uint64_t v44 = *(void *)(v16 + 24);
      char v42 = *(unsigned char *)(v16 + 41);
      sub_1AFFCBDF8();
      swift_bridgeObjectRetain_n();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFCAF68();
      swift_bridgeObjectRelease();
      sub_1AFFCBE08();
      uint64_t v21 = *(void *)(v19 + 16);
      if (v21)
      {
        uint64_t v39 = v5;
        uint64_t v22 = v7;
        uint64_t v23 = v4;
        sub_1AFFC8E38();
        uint64_t v24 = v19 + 40;
        do
        {
          sub_1AFFC8E38();
          sub_1AFFCAF68();
          swift_bridgeObjectRelease();
          v24 += 16;
          --v21;
        }
        while (v21);
        swift_bridgeObjectRelease();
        uint64_t v4 = v23;
        uint64_t v7 = v22;
        uint64_t v5 = v39;
      }
      sub_1AFFC8E38();
      sub_1AFFCAF68();
      swift_bridgeObjectRelease();
      switch(v43 >> 5)
      {
        case 5u:
          break;
        default:
          sub_1AFFCBE08();
          break;
      }
      sub_1AFFCBE08();
      sub_1AFFCBE08();
      uint64_t v25 = sub_1AFFCBE38();
      uint64_t v26 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v27 = v25 & ~v26;
      unint64_t v28 = v27 >> 6;
      if (((-1 << v27) & ~*(void *)(v10 + 8 * (v27 >> 6))) != 0)
      {
        unint64_t v29 = __clz(__rbit64((-1 << v27) & ~*(void *)(v10 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_40;
      }
      char v30 = 0;
      unint64_t v31 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
          JUMPOUT(0x1AFD72E08);
        }
        BOOL v32 = v28 == v31;
        if (v28 == v31) {
          unint64_t v28 = 0;
        }
        v30 |= v32;
        uint64_t v33 = *(void *)(v10 + 8 * v28);
      }
      while (v33 == -1);
      unint64_t v29 = __clz(__rbit64(~v33)) + (v28 << 6);
LABEL_40:
      *(void *)(v10 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
      uint64_t v34 = *(void *)(v7 + 48) + 48 * v29;
      *(void *)uint64_t v34 = v17;
      *(void *)(v34 + 8) = v18;
      *(void *)(v34 + 16) = v19;
      *(void *)(v34 + 24) = v44;
      *(void *)(v34 + 32) = v20;
      *(unsigned char *)(v34 + 40) = v43;
      *(unsigned char *)(v34 + 41) = v42;
      ++*(void *)(v7 + 16);
      if (__OFSUB__(v5--, 1)) {
        goto LABEL_44;
      }
      unint64_t v8 = v40;
      uint64_t v9 = v41;
      if (!v5)
      {
LABEL_42:
        swift_release();
        return v7;
      }
    }
  }
  return v4;
}

unint64_t sub_1AFD72E20(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3)
  {
    swift_release();
    return MEMORY[0x1E4FBC870];
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return a4;
  }
  sub_1AFD76924(0, &qword_1E9AFA160, (uint64_t (*)(void))sub_1AFD764A0, (uint64_t)&type metadata for Stock, MEMORY[0x1E4FBB9A8]);
  unint64_t result = sub_1AFFCB7B8();
  unint64_t v6 = result;
  uint64_t v33 = a1;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  unint64_t v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
    }
    else
    {
      uint64_t v15 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_30;
      }
      if (v15 >= a2)
      {
LABEL_27:
        swift_release();
        return v6;
      }
      unint64_t v16 = v33[v15];
      ++v11;
      if (!v16)
      {
        uint64_t v11 = v15 + 1;
        if (v15 + 1 >= a2) {
          goto LABEL_27;
        }
        unint64_t v16 = v33[v11];
        if (!v16)
        {
          uint64_t v11 = v15 + 2;
          if (v15 + 2 >= a2) {
            goto LABEL_27;
          }
          unint64_t v16 = v33[v11];
          if (!v16)
          {
            uint64_t v17 = v15 + 3;
            if (v17 >= a2) {
              goto LABEL_27;
            }
            unint64_t v16 = v33[v17];
            if (!v16)
            {
              while (1)
              {
                uint64_t v11 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_31;
                }
                if (v11 >= a2) {
                  goto LABEL_27;
                }
                unint64_t v16 = v33[v11];
                ++v17;
                if (v16) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v11 = v17;
          }
        }
      }
LABEL_24:
      unint64_t v10 = (v16 - 1) & v16;
      unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    uint64_t v18 = *(void *)(a4 + 48) + 136 * v14;
    long long v19 = *(_OWORD *)(v18 + 16);
    long long v20 = *(_OWORD *)(v18 + 32);
    long long v21 = *(_OWORD *)(v18 + 64);
    long long v37 = *(_OWORD *)(v18 + 48);
    long long v38 = v21;
    long long v36 = v20;
    long long v23 = *(_OWORD *)(v18 + 96);
    long long v22 = *(_OWORD *)(v18 + 112);
    long long v24 = *(_OWORD *)(v18 + 80);
    uint64_t v42 = *(void *)(v18 + 128);
    long long v40 = v23;
    long long v41 = v22;
    long long v39 = v24;
    long long v34 = *(_OWORD *)v18;
    long long v35 = v19;
    sub_1AFFCBDF8();
    sub_1AFD76370((uint64_t)&v34);
    sub_1AFD78C34();
    sub_1AFFCBE38();
    unint64_t result = sub_1AFFCB758();
    *(void *)(v12 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v25 = *(void *)(v6 + 48) + 136 * result;
    *(_OWORD *)uint64_t v25 = v34;
    long long v26 = v38;
    long long v28 = v35;
    long long v27 = v36;
    *(_OWORD *)(v25 + 48) = v37;
    *(_OWORD *)(v25 + 64) = v26;
    *(_OWORD *)(v25 + 16) = v28;
    *(_OWORD *)(v25 + 32) = v27;
    long long v29 = v39;
    long long v30 = v40;
    long long v31 = v41;
    *(void *)(v25 + 128) = v42;
    *(_OWORD *)(v25 + 96) = v30;
    *(_OWORD *)(v25 + 112) = v31;
    *(_OWORD *)(v25 + 80) = v29;
    ++*(void *)(v6 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    if (!v5) {
      goto LABEL_27;
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1AFD730F0(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    void v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    long long v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    void *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      sub_1AFFC8E38();
      goto LABEL_38;
    }
    v11 += 2;
    unint64_t result = sub_1AFFC8E38();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void *sub_1AFD732F0(void *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a4 + 56;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v7 = ~(-1 << -(char)v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v11 = 0;
    uint64_t v9 = 0;
LABEL_39:
    *unint64_t result = a4;
    result[1] = v5;
    result[2] = ~v6;
    result[3] = v11;
    result[4] = v8;
    return (void *)v9;
  }
  uint64_t v9 = a3;
  if (!a3)
  {
    int64_t v11 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v10 = a2;
  uint64_t v25 = -1 << *(unsigned char *)(a4 + 32);
  long long v26 = result;
  int64_t v11 = 0;
  uint64_t v12 = 0;
  int64_t v13 = (unint64_t)(63 - v6) >> 6;
  if (!v8) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v14 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  unint64_t v15 = v14 | (v11 << 6);
  while (1)
  {
    ++v12;
    uint64_t v19 = *(void *)(a4 + 48) + 48 * v15;
    uint64_t v21 = *(void *)v19;
    uint64_t v20 = *(void *)(v19 + 8);
    uint64_t v23 = *(void *)(v19 + 16);
    uint64_t v22 = *(void *)(v19 + 24);
    uint64_t v24 = *(void *)(v19 + 32);
    LOWORD(v19) = *(_WORD *)(v19 + 40);
    *(void *)uint64_t v10 = v21;
    *(void *)(v10 + 8) = v20;
    *(void *)(v10 + 16) = v23;
    *(void *)(v10 + 24) = v22;
    *(void *)(v10 + 32) = v24;
    *(_WORD *)(v10 + 40) = v19;
    if (v12 == v9)
    {
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      goto LABEL_38;
    }
    v10 += 48;
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    unint64_t result = (void *)sub_1AFFC8E38();
    if (v8) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v16 >= v13) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v5 + 8 * v16);
    if (!v17)
    {
      v11 += 2;
      if (v16 + 1 >= v13)
      {
        unint64_t v8 = 0;
        int64_t v11 = v16;
      }
      else
      {
        unint64_t v17 = *(void *)(v5 + 8 * v11);
        if (v17) {
          goto LABEL_14;
        }
        int64_t v18 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v5 + 8 * v18);
        if (v17)
        {
LABEL_17:
          int64_t v16 = v18;
          goto LABEL_18;
        }
        int64_t v11 = v16 + 3;
        if (v16 + 3 < v13)
        {
          unint64_t v17 = *(void *)(v5 + 8 * v11);
          if (v17)
          {
LABEL_14:
            int64_t v16 = v11;
            goto LABEL_18;
          }
          int64_t v18 = v16 + 4;
          if (v16 + 4 >= v13)
          {
LABEL_33:
            unint64_t v8 = 0;
            goto LABEL_37;
          }
          unint64_t v17 = *(void *)(v5 + 8 * v18);
          if (!v17)
          {
            while (1)
            {
              int64_t v16 = v18 + 1;
              if (__OFADD__(v18, 1)) {
                goto LABEL_42;
              }
              if (v16 >= v13)
              {
                unint64_t v8 = 0;
                int64_t v11 = v13 - 1;
                goto LABEL_37;
              }
              unint64_t v17 = *(void *)(v5 + 8 * v16);
              ++v18;
              if (v17) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v8 = 0;
        int64_t v11 = v16 + 2;
      }
LABEL_37:
      uint64_t v9 = v12;
LABEL_38:
      uint64_t v6 = v25;
      unint64_t result = v26;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v16 << 6);
    int64_t v11 = v16;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

void *sub_1AFD73530(void *result, char *__dst, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!__dst)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_39:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    void v5[4] = v9;
    return (void *)v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  int64_t v11 = __dst;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  uint64_t v27 = -1 << *(unsigned char *)(a4 + 32);
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (_OWORD *)(*(void *)(a4 + 48) + 136 * v16);
    v28[0] = *v20;
    long long v21 = v20[4];
    long long v23 = v20[1];
    long long v22 = v20[2];
    v28[3] = v20[3];
    v28[4] = v21;
    v28[1] = v23;
    v28[2] = v22;
    long long v25 = v20[6];
    long long v24 = v20[7];
    long long v26 = v20[5];
    uint64_t v29 = *((void *)v20 + 16);
    v28[6] = v25;
    v28[7] = v24;
    v28[5] = v26;
    memmove(v11, v20, 0x88uLL);
    if (v13 == v10)
    {
      sub_1AFD76370((uint64_t)v28);
      goto LABEL_38;
    }
    v11 += 136;
    unint64_t result = (void *)sub_1AFD76370((uint64_t)v28);
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        unint64_t v9 = 0;
        int64_t v12 = v17;
      }
      else
      {
        unint64_t v18 = *(void *)(v6 + 8 * v12);
        if (v18) {
          goto LABEL_14;
        }
        int64_t v19 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_33;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          int64_t v17 = v19;
          goto LABEL_18;
        }
        int64_t v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          unint64_t v18 = *(void *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            int64_t v17 = v12;
            goto LABEL_18;
          }
          int64_t v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            unint64_t v9 = 0;
            goto LABEL_37;
          }
          unint64_t v18 = *(void *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              int64_t v17 = v19 + 1;
              if (__OFADD__(v19, 1)) {
                goto LABEL_42;
              }
              if (v17 >= v14)
              {
                unint64_t v9 = 0;
                int64_t v12 = v14 - 1;
                goto LABEL_37;
              }
              unint64_t v18 = *(void *)(v6 + 8 * v17);
              ++v19;
              if (v18) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v9 = 0;
        int64_t v12 = v17 + 2;
      }
LABEL_37:
      uint64_t v10 = v13;
LABEL_38:
      uint64_t v7 = v27;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1AFD73774(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    void v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  int64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    void *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      sub_1AFFC8E38();
      goto LABEL_38;
    }
    v11 += 2;
    unint64_t result = sub_1AFFC8E38();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void sub_1AFD73974(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1AFD743DC(0, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v30 - v9;
  uint64_t v11 = sub_1AFFC96E8();
  uint64_t v41 = *(void *)(v11 - 8);
  v12.n128_f64[0] = MEMORY[0x1F4188790](v11);
  long long v40 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = a4;
  uint64_t v15 = a4 + 64;
  uint64_t v14 = *(void *)(a4 + 64);
  uint64_t v32 = -1 << *(unsigned char *)(a4 + 32);
  if (-v32 < 64) {
    uint64_t v16 = ~(-1 << -(char)v32);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v14;
  if (!a2)
  {
    int64_t v18 = 0;
LABEL_39:
    uint64_t v29 = ~v32;
    *a1 = v42;
    a1[1] = v15;
    a1[2] = v29;
    a1[3] = v18;
    a1[4] = v17;
    return;
  }
  if (!a3)
  {
    int64_t v18 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  int64_t v18 = 0;
  uint64_t v43 = 0;
  uint64_t v38 = v41 + 16;
  long long v39 = (void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v41 + 56);
  long long v36 = (void (**)(char *))(v41 + 32);
  uint64_t v37 = v41 + 48;
  uint64_t v33 = a4 + 64;
  int64_t v34 = (unint64_t)(63 - v32) >> 6;
  int64_t v30 = v34 - 1;
  long long v31 = a1;
  uint64_t v35 = a3;
  if (!v17) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v19 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  unint64_t v20 = v19 | (v18 << 6);
  while (1)
  {
    uint64_t v24 = v41;
    uint64_t v25 = *(void *)(v41 + 72);
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v41 + 16))(v10, *(void *)(v42 + 48) + v25 * v20, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v10, 0, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v10, 1, v11) == 1)
    {
      uint64_t v15 = v33;
      goto LABEL_38;
    }
    uint64_t v26 = v43 + 1;
    uint64_t v27 = *v36;
    long long v28 = v40;
    (*v36)(v40);
    ((void (*)(uint64_t, char *, uint64_t))v27)(a2, v28, v11);
    uint64_t v43 = v26;
    if (v26 == v35)
    {
      a1 = v31;
      uint64_t v15 = v33;
      goto LABEL_39;
    }
    a2 += v25;
    if (v17) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v21 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    uint64_t v15 = v33;
    if (v21 >= v34) {
      goto LABEL_37;
    }
    unint64_t v22 = *(void *)(v33 + 8 * v21);
    if (!v22)
    {
      int64_t v23 = v18 + 2;
      ++v18;
      if (v21 + 1 >= v34) {
        goto LABEL_37;
      }
      unint64_t v22 = *(void *)(v33 + 8 * v23);
      if (v22) {
        goto LABEL_14;
      }
      int64_t v18 = v21 + 1;
      if (v21 + 2 >= v34) {
        goto LABEL_37;
      }
      unint64_t v22 = *(void *)(v33 + 8 * (v21 + 2));
      if (v22)
      {
        v21 += 2;
      }
      else
      {
        int64_t v18 = v21 + 2;
        if (v21 + 3 >= v34) {
          goto LABEL_37;
        }
        unint64_t v22 = *(void *)(v33 + 8 * (v21 + 3));
        if (!v22)
        {
          int64_t v23 = v21 + 4;
          int64_t v18 = v21 + 3;
          if (v21 + 4 < v34)
          {
            unint64_t v22 = *(void *)(v33 + 8 * v23);
            if (!v22)
            {
              while (1)
              {
                int64_t v21 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_42;
                }
                if (v21 >= v34)
                {
                  int64_t v18 = v30;
                  goto LABEL_37;
                }
                unint64_t v22 = *(void *)(v33 + 8 * v21);
                ++v23;
                if (v22) {
                  goto LABEL_21;
                }
              }
            }
LABEL_14:
            int64_t v21 = v23;
            goto LABEL_21;
          }
LABEL_37:
          (*v39)(v10, 1, 1, v11, v12);
          unint64_t v17 = 0;
LABEL_38:
          sub_1AFD48D50((uint64_t)v10);
          a1 = v31;
          goto LABEL_39;
        }
        v21 += 3;
      }
    }
LABEL_21:
    unint64_t v17 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v21 << 6);
    int64_t v18 = v21;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
}

uint64_t sub_1AFD73DB4(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3;
  }
  unint64_t v8 = v7 - 3;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 128;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

int64_t sub_1AFD73E58(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (unint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  unint64_t v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    unint64_t v11 = *(void *)(v6 + 8 * v9);
    if (v11) {
      return __clz(__rbit64(v11)) + (v9 << 6);
    }
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      unint64_t v11 = *(void *)(v6 + 8 * v9);
      if (v11) {
        return __clz(__rbit64(v11)) + (v9 << 6);
      }
      while (v10 - 3 != v5)
      {
        unint64_t v11 = *(void *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_1AFD73F3C(uint64_t result)
{
  unint64_t v1 = *(void *)(result + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  unint64_t v2 = 0;
  uint64_t v3 = result + 40;
  unint64_t v20 = v1 - 1;
  uint64_t v4 = MEMORY[0x1E4FBC860];
  unint64_t v27 = *(void *)(result + 16);
  uint64_t v21 = result + 40;
  do
  {
    uint64_t v22 = v4;
    if (v2 <= v1) {
      unint64_t v5 = v1;
    }
    else {
      unint64_t v5 = v2;
    }
    unint64_t v28 = v5;
    for (uint64_t i = v3 + 48 * v2; ; i += 48)
    {
      if (v28 == v2)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = *(void *)i;
      uint64_t v8 = *(void *)(i + 8);
      uint64_t v26 = *(void *)(i + 16);
      uint64_t v9 = *(void *)(i + 24);
      unint64_t v10 = v2 + 1;
      char v24 = *(unsigned char *)(i + 33);
      char v25 = *(unsigned char *)(i + 32);
      uint64_t v23 = *(void *)(i - 8);
      sub_1AFFCAF18();
      sub_1AFFCAF18();
      sub_1AFD3AE10();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      char v11 = sub_1AFFCB6E8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v11) {
        break;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t result = swift_bridgeObjectRelease();
      ++v2;
      if (v27 == v10) {
        return v22;
      }
    }
    uint64_t v4 = v22;
    unint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      unint64_t result = sub_1AFD9DAB0(0, *(void *)(v22 + 16) + 1, 1);
      uint64_t v4 = v22;
    }
    uint64_t v3 = v21;
    uint64_t v12 = v26;
    char v14 = v24;
    char v13 = v25;
    unint64_t v16 = *(void *)(v4 + 16);
    unint64_t v15 = *(void *)(v4 + 24);
    unint64_t v17 = v16 + 1;
    if (v16 >= v15 >> 1)
    {
      unint64_t result = sub_1AFD9DAB0(v15 > 1, v16 + 1, 1);
      unint64_t v17 = v16 + 1;
      char v14 = v24;
      char v13 = v25;
      uint64_t v12 = v26;
      uint64_t v4 = v22;
    }
    *(void *)(v4 + 16) = v17;
    uint64_t v18 = v4 + 48 * v16;
    *(void *)(v18 + 32) = v23;
    *(void *)(v18 + 40) = v7;
    *(void *)(v18 + 48) = v8;
    *(void *)(v18 + 56) = v12;
    *(void *)(v18 + 64) = v9;
    *(unsigned char *)(v18 + 72) = v13;
    *(unsigned char *)(v18 + 73) = v14;
    BOOL v19 = v20 == v2;
    unint64_t v1 = v27;
    ++v2;
  }
  while (!v19);
  return v4;
}

void *sub_1AFD74180(uint64_t a1, uint64_t a2)
{
  uint64_t v26 = *(void *)(a1 + 16);
  if (!v26) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v25 = a1 + 32;
  uint64_t v3 = *(void *)(a2 + 16);
  sub_1AFFC8E38();
  uint64_t v4 = 0;
  uint64_t v23 = (char *)(a2 + 73);
  unint64_t v5 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v24 = v3;
  do
  {
    if (v3)
    {
      uint64_t v27 = v4;
      unint64_t v28 = v5;
      uint64_t v7 = (uint64_t *)(v25 + 16 * v4);
      uint64_t v8 = *v7;
      uint64_t v9 = v7[1];
      unint64_t v10 = v23;
      while (1)
      {
        uint64_t v29 = *(void *)(v10 - 41);
        uint64_t v11 = *(void *)(v10 - 33);
        uint64_t v12 = *(void *)(v10 - 25);
        uint64_t v13 = *(void *)(v10 - 17);
        uint64_t v14 = *(void *)(v10 - 9);
        int v36 = *(v10 - 1);
        char v15 = *v10;
        if (v13 == v8 && v14 == v9) {
          break;
        }
        uint64_t v17 = v8;
        uint64_t v18 = v9;
        if (sub_1AFFCBCE8()) {
          goto LABEL_16;
        }
        v10 += 48;
        --v3;
        uint64_t v8 = v17;
        uint64_t v9 = v18;
        if (!v3)
        {
          uint64_t v3 = v24;
          unint64_t v5 = v28;
          goto LABEL_4;
        }
      }
      uint64_t v13 = v8;
      uint64_t v14 = v9;
LABEL_16:
      v31[0] = v29;
      v31[1] = v11;
      v31[2] = v12;
      v31[3] = v13;
      v31[4] = v14;
      char v32 = v36;
      char v33 = v15;
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      WatchlistEntity.init(from:)((uint64_t)v31, &v34);
      uint64_t v19 = v34;
      long long v30 = v35;
      unint64_t v5 = v28;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v5 = sub_1AFD3542C(0, v28[2] + 1, 1, v28);
      }
      uint64_t v3 = v24;
      unint64_t v21 = v5[2];
      unint64_t v20 = v5[3];
      if (v21 >= v20 >> 1) {
        unint64_t v5 = sub_1AFD3542C((void *)(v20 > 1), v21 + 1, 1, v5);
      }
      v5[2] = v21 + 1;
      uint64_t v6 = &v5[3 * v21];
      v6[4] = v19;
      *(_OWORD *)(v6 + 5) = v30;
LABEL_4:
      uint64_t v4 = v27;
    }
    ++v4;
  }
  while (v4 != v26);
  swift_bridgeObjectRelease();
  return v5;
}

unint64_t sub_1AFD74388()
{
  unint64_t result = qword_1EB816938;
  if (!qword_1EB816938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816938);
  }
  return result;
}

void sub_1AFD743DC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1AFD74440()
{
  if (!qword_1E9AFA0E8)
  {
    sub_1AFD744AC();
    sub_1AFD33B44();
    unint64_t v0 = sub_1AFFC8DF8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9AFA0E8);
    }
  }
}

unint64_t sub_1AFD744AC()
{
  unint64_t result = qword_1E9AFA0F0;
  if (!qword_1E9AFA0F0)
  {
    unint64_t result = swift_getFunctionTypeMetadata1();
    atomic_store(result, (unint64_t *)&qword_1E9AFA0F0);
  }
  return result;
}

uint64_t sub_1AFD744F8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1AFD76884();
  uint64_t result = sub_1AFFCB378();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = (long long *)(a1 + 32);
    do
    {
      long long v5 = v4[1];
      long long v8 = *v4;
      v9[0] = v5;
      *(_OWORD *)((char *)v9 + 10) = *(long long *)((char *)v4 + 26);
      sub_1AFD768D8((uint64_t)&v8);
      sub_1AFE21EAC((uint64_t)v6, &v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v4 += 3;
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_1AFD745A4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  if (a3 != a2)
  {
    uint64_t v6 = result;
    uint64_t v31 = *a4;
    uint64_t v7 = *a4 + 48 * a3 - 48;
    uint64_t v28 = result;
LABEL_4:
    uint64_t v30 = v7;
    uint64_t v32 = a3;
    while (1)
    {
      long long v8 = (_OWORD *)(v7 + 48);
      uint64_t v9 = *(void *)(v7 + 56);
      uint64_t v10 = *(void *)(v7 + 64);
      uint64_t v11 = *(void *)(v7 + 72);
      uint64_t v12 = *(void *)(v7 + 80);
      __int16 v13 = *(_WORD *)(v7 + 88);
      v36[0] = *(void *)(v7 + 48);
      v36[1] = v9;
      uint64_t v38 = v9;
      v36[2] = v10;
      v36[3] = v11;
      v36[4] = v12;
      __int16 v37 = v13;
      uint64_t v14 = *(void *)(v7 + 8);
      uint64_t v16 = *(void *)(v7 + 16);
      uint64_t v15 = *(void *)(v7 + 24);
      uint64_t v17 = *(void *)(v7 + 32);
      __int16 v18 = *(_WORD *)(v7 + 40);
      v34[0] = *(void *)v7;
      v34[1] = v14;
      void v34[2] = v16;
      v34[3] = v15;
      v34[4] = v17;
      __int16 v35 = v18;
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      char v19 = sub_1AFD6F31C((uint64_t)v36, (uint64_t)v34, a5);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if (v5) {
        break;
      }
      if ((v19 & 1) == 0)
      {
        uint64_t v27 = v32;
LABEL_11:
        a3 = v27 + 1;
        uint64_t v7 = v30 + 48;
        uint64_t v6 = v28;
        if (a3 != a2) {
          goto LABEL_4;
        }
        return result;
      }
      if (!v31)
      {
        __break(1u);
        return result;
      }
      uint64_t v20 = *(void *)(v7 + 48);
      uint64_t v21 = *(void *)(v7 + 72);
      uint64_t v22 = *(void *)(v7 + 80);
      __int16 v23 = *(_WORD *)(v7 + 88);
      long long v24 = *(_OWORD *)(v7 + 56);
      long long v25 = *(_OWORD *)(v7 + 16);
      _OWORD *v8 = *(_OWORD *)v7;
      *(_OWORD *)(v7 + 64) = v25;
      long long v26 = *(_OWORD *)(v7 + 32);
      *(void *)uint64_t v7 = v20;
      *(_OWORD *)(v7 + 8) = v24;
      *(void *)(v7 + 24) = v21;
      *(void *)(v7 + 32) = v22;
      *(_WORD *)(v7 + 40) = v23;
      v7 -= 48;
      ++v6;
      v8[2] = v26;
      uint64_t v27 = v32;
      if (v32 == v6) {
        goto LABEL_11;
      }
    }
  }
  return result;
}

uint64_t sub_1AFD7475C(uint64_t *a1, uint64_t a2)
{
  uint64_t v227 = sub_1AFFC9528();
  uint64_t v4 = *(void *)(v227 - 8);
  MEMORY[0x1F4188790](v227);
  v226 = (char *)&v195 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1AFFC9A78();
  MEMORY[0x1F4188790](v6 - 8);
  v237 = (char *)&v195 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v236 = sub_1AFFCAE58();
  uint64_t v8 = *(void *)(v236 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v236);
  uint64_t v11 = (char *)&v195 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  __int16 v13 = (char *)&v195 - v12;
  uint64_t v14 = sub_1AFFC9548();
  MEMORY[0x1F4188790](v14 - 8);
  v225 = (char *)&v195 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFD76924(0, &qword_1E9AFA178, (uint64_t (*)(void))sub_1AFD33B44, (uint64_t)&type metadata for WatchlistEntity, MEMORY[0x1E4F18450]);
  uint64_t v241 = v16;
  uint64_t v208 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  v233 = (char *)&v195 - v17;
  uint64_t v199 = a1;
  uint64_t v18 = a1[1];
  uint64_t v214 = a2;
  swift_bridgeObjectRetain_n();
  uint64_t v19 = sub_1AFFCBC78();
  if (v19 >= v18)
  {
    if (v18 < 0) {
      goto LABEL_170;
    }
    if (v18)
    {
      uint64_t v24 = v214;
      sub_1AFFC8E38();
      sub_1AFD745A4(0, v18, 1, v199, v24);
    }
    return swift_bridgeObjectRelease_n();
  }
  uint64_t v197 = v19;
  if (v18 >= 0) {
    uint64_t v21 = v18;
  }
  else {
    uint64_t v21 = v18 + 1;
  }
  if (v18 < -1) {
    goto LABEL_179;
  }
  uint64_t v201 = v18;
  if (v18 < 2)
  {
    long long v26 = (char *)MEMORY[0x1E4FBC860];
    v202 = (char *)(MEMORY[0x1E4FBC860] + 32);
    uint64_t v198 = MEMORY[0x1E4FBC860];
    if (v18 != 1)
    {
      unint64_t v77 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      goto LABEL_136;
    }
  }
  else
  {
    uint64_t v22 = v21 >> 1;
    uint64_t v23 = sub_1AFFCB258();
    *(void *)(v23 + 16) = v22;
    uint64_t v198 = v23;
    v202 = (char *)(v23 + 32);
  }
  uint64_t v27 = 0;
  uint64_t v224 = v208 + 16;
  v223 = (void (**)(char *, void, uint64_t))(v4 + 104);
  v217 = (void (**)(char *, char *, uint64_t))(v8 + 16);
  uint64_t v28 = *v199;
  v216 = (void (**)(char *, uint64_t))(v8 + 8);
  v222 = (void (**)(char *, uint64_t))(v208 + 8);
  unsigned int v221 = *MEMORY[0x1E4F275D0];
  uint64_t v196 = v28 + 72;
  v220 = @"watchlist";
  uint64_t v219 = MEMORY[0x1E4FBC840] + 8;
  *(void *)&long long v20 = 136315138;
  long long v205 = v20;
  v204 = (char *)MEMORY[0x1E4FBC860];
  v218 = v11;
  v238 = v13;
  uint64_t v29 = v201;
  uint64_t v210 = v28;
  do
  {
    uint64_t v30 = v27;
    uint64_t v31 = v27 + 1;
    uint64_t v209 = v27;
    if (v27 + 1 < v29)
    {
      uint64_t v32 = v28 + 48 * v31;
      uint64_t v33 = *(void *)v32;
      uint64_t v34 = *(void *)(v32 + 8);
      uint64_t v36 = *(void *)(v32 + 16);
      uint64_t v35 = *(void *)(v32 + 24);
      uint64_t v37 = *(void *)(v32 + 32);
      LOWORD(v32) = *(_WORD *)(v32 + 40);
      uint64_t v257 = v33;
      uint64_t v258 = v34;
      uint64_t v259 = v36;
      uint64_t v260 = v35;
      uint64_t v261 = v37;
      __int16 v262 = v32;
      uint64_t v38 = v28 + 48 * v27;
      long long v39 = *(char **)v38;
      uint64_t v40 = *(void *)(v38 + 8);
      uint64_t v41 = v27;
      uint64_t v43 = *(void *)(v38 + 16);
      uint64_t v42 = *(void *)(v38 + 24);
      uint64_t v44 = *(void *)(v38 + 32);
      LOWORD(v38) = *(_WORD *)(v38 + 40);
      v248 = v39;
      uint64_t v249 = v40;
      uint64_t v250 = v43;
      uint64_t v251 = v42;
      uint64_t v252 = v44;
      __int16 v253 = v38;
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      uint64_t v45 = v206;
      LODWORD(v247) = sub_1AFD6F31C((uint64_t)&v257, (uint64_t)&v248, v214);
      uint64_t v206 = v45;
      if (v45)
      {
LABEL_148:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_149;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v31 = v30 + 2;
      if (v30 + 2 < v201)
      {
        uint64_t v46 = v196 + 48 * v41;
        do
        {
          uint64_t v47 = *(void *)(v46 + 32);
          uint64_t v49 = *(void *)(v46 + 40);
          uint64_t v48 = *(void *)(v46 + 48);
          uint64_t v50 = *(void *)(v46 + 56);
          __int16 v51 = *(_WORD *)(v46 + 64);
          uint64_t v257 = *(void *)(v46 + 24);
          uint64_t v258 = v47;
          uint64_t v259 = v49;
          uint64_t v260 = v48;
          uint64_t v261 = v50;
          __int16 v262 = v51;
          uint64_t v52 = *(void *)(v46 - 16);
          uint64_t v54 = *(void *)(v46 - 8);
          uint64_t v53 = *(void *)v46;
          uint64_t v55 = *(void *)(v46 + 8);
          __int16 v56 = *(_WORD *)(v46 + 16);
          v248 = *(char **)(v46 - 24);
          uint64_t v249 = v52;
          uint64_t v250 = v54;
          uint64_t v251 = v53;
          uint64_t v252 = v55;
          __int16 v253 = v56;
          sub_1AFFC8E38();
          sub_1AFFC8E38();
          sub_1AFFC8E38();
          sub_1AFFC8E38();
          sub_1AFFC8E38();
          sub_1AFFC8E38();
          uint64_t v57 = v206;
          int v58 = sub_1AFD6F31C((uint64_t)&v257, (uint64_t)&v248, v214);
          uint64_t v206 = v57;
          if (v57) {
            goto LABEL_148;
          }
          int v59 = v58;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v247 ^ v59)) {
            goto LABEL_22;
          }
          ++v31;
          v46 += 48;
        }
        while (v201 != v31);
        uint64_t v31 = v201;
LABEL_22:
        uint64_t v30 = v209;
      }
      uint64_t v11 = v218;
      uint64_t v28 = v210;
      if (v247)
      {
        if (v31 < v30) {
          goto LABEL_175;
        }
        uint64_t v60 = v31;
        if (v30 < v31)
        {
          uint64_t v61 = 48 * v31;
          uint64_t v62 = 48 * v30;
          uint64_t v63 = v30;
          do
          {
            if (v63 != --v60)
            {
              if (!v28) {
                goto LABEL_177;
              }
              long long v64 = (_OWORD *)(v28 + v62);
              uint64_t v65 = *(void *)(v28 + v62);
              uint64_t v66 = v28 + v61;
              uint64_t v67 = *(void *)(v28 + v62 + 24);
              uint64_t v68 = *(void *)(v28 + v62 + 32);
              __int16 v69 = *(_WORD *)(v28 + v62 + 40);
              long long v70 = *(_OWORD *)(v28 + v62 + 8);
              long long v72 = *(_OWORD *)(v28 + v61 - 32);
              long long v71 = *(_OWORD *)(v28 + v61 - 16);
              *long long v64 = *(_OWORD *)(v28 + v61 - 48);
              v64[1] = v72;
              v64[2] = v71;
              *(void *)(v66 - 48) = v65;
              *(_OWORD *)(v66 - 40) = v70;
              *(void *)(v66 - 24) = v67;
              *(void *)(v66 - 16) = v68;
              *(_WORD *)(v66 - 8) = v69;
            }
            ++v63;
            v61 -= 48;
            v62 += 48;
          }
          while (v63 < v60);
        }
      }
    }
    if (v31 >= v201)
    {
      uint64_t v74 = v31;
      if (v31 < v30) {
        goto LABEL_169;
      }
      goto LABEL_43;
    }
    if (__OFSUB__(v31, v30)) {
      goto LABEL_171;
    }
    if (v31 - v30 >= v197)
    {
LABEL_40:
      uint64_t v74 = v31;
      if (v31 < v30) {
        goto LABEL_169;
      }
      goto LABEL_43;
    }
    uint64_t v73 = v30 + v197;
    if (__OFADD__(v30, v197)) {
      goto LABEL_172;
    }
    if (v73 >= v201) {
      uint64_t v73 = v201;
    }
    if (v73 < v30)
    {
LABEL_173:
      __break(1u);
LABEL_174:
      swift_bridgeObjectRelease_n();
      __break(1u);
LABEL_175:
      __break(1u);
LABEL_176:
      swift_bridgeObjectRelease_n();
      __break(1u);
LABEL_177:
      swift_bridgeObjectRelease_n();
      __break(1u);
LABEL_178:
      swift_bridgeObjectRelease_n();
      __break(1u);
LABEL_179:
      swift_bridgeObjectRelease_n();
      uint64_t result = sub_1AFFCB998();
      __break(1u);
      return result;
    }
    if (v31 == v73) {
      goto LABEL_40;
    }
    uint64_t v136 = *(void *)(v214 + 16);
    uint64_t v200 = v73;
    uint64_t v207 = v136;
    while (2)
    {
      uint64_t v203 = v31;
      do
      {
        uint64_t v137 = v28 + 48 * v31;
        uint64_t v138 = v137 - 48;
        uint64_t v232 = *(void *)(v137 - 48);
        if (!v136) {
          goto LABEL_129;
        }
        uint64_t v212 = v137 - 48;
        uint64_t v213 = v31;
        uint64_t v139 = *(void *)(v137 + 8);
        uint64_t v215 = *(void *)v137;
        uint64_t v140 = *(char **)(v137 + 24);
        uint64_t v141 = *(void *)(v137 + 32);
        uint64_t v246 = *(void *)(v137 + 16);
        v247 = v140;
        uint64_t v142 = *(void *)(v137 - 40);
        uint64_t v235 = *(void *)(v137 - 32);
        uint64_t v230 = *(void *)(v137 - 24);
        uint64_t v245 = *(void *)(v137 - 16);
        int v263 = *(unsigned __int8 *)(v137 - 8);
        uint64_t v211 = v28 + 48 * v31;
        int v229 = *(unsigned __int8 *)(v137 - 7);
        uint64_t v143 = v208;
        uint64_t v243 = v214 + ((*(unsigned __int8 *)(v143 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v143 + 80));
        uint64_t v144 = v136;
        sub_1AFD76924(0, (unint64_t *)&qword_1EB816AF8, (uint64_t (*)(void))sub_1AFD74388, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4F183F8]);
        uint64_t v242 = v145;
        uint64_t v228 = *(void *)(v143 + 72);
        v231 = *(void (**)(char *))(v143 + 16);
        sub_1AFFC8E38();
        uint64_t v234 = v139;
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        uint64_t v240 = v141;
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        uint64_t v146 = v243;
        uint64_t v147 = v233;
        uint64_t v244 = v142;
        while (1)
        {
          uint64_t v239 = v144;
          uint64_t v243 = v146;
          v231(v147);
          uint64_t v149 = v234;
          sub_1AFFC8E38();
          sub_1AFFC8E38();
          uint64_t v150 = v240;
          sub_1AFFC8E38();
          sub_1AFFCADF8();
          sub_1AFFC9A28();
          (*v223)(v226, v221, v227);
          uint64_t v151 = v225;
          sub_1AFFC9558();
          uint64_t v152 = MEMORY[0x1B3E8AFE0](v151);
          if (v247 != (char *)sub_1AFFCAE98()) {
            goto LABEL_102;
          }
          if (v150 == v153)
          {
            swift_bridgeObjectRetain_n();
            swift_retain_n();
          }
          else
          {
LABEL_102:
            char v154 = sub_1AFFCBCE8();
            swift_bridgeObjectRetain_n();
            swift_retain_n();
            swift_bridgeObjectRelease();
            uint64_t v155 = v215;
            uint64_t v156 = v149;
            if ((v154 & 1) == 0) {
              goto LABEL_106;
            }
          }
          uint64_t v157 = v238;
          sub_1AFFCADF8();
          (*v217)(v11, v157, v236);
          if (qword_1EB819E80 != -1) {
            swift_once();
          }
          id v158 = (id)qword_1EB831AF8;
          sub_1AFFC9A28();
          uint64_t v155 = sub_1AFFCAEF8();
          uint64_t v156 = v159;
          (*v216)(v157, v236);
          uint64_t v150 = v240;
          swift_bridgeObjectRelease();
LABEL_106:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v257 = v155;
          uint64_t v258 = v156;
          sub_1AFFC8B38();
          swift_release_n();
          swift_bridgeObjectRelease_n();
          uint64_t v147 = v233;
          sub_1AFFC8BC8();
          v248 = v247;
          uint64_t v249 = v150;
          uint64_t v250 = v152;
          swift_getAtPartialKeyPath();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          if ((swift_dynamicCast() & 1) == 0)
          {
            swift_bridgeObjectRelease();
            goto LABEL_119;
          }
          uint64_t v257 = v232;
          uint64_t v258 = v244;
          uint64_t v259 = v235;
          uint64_t v260 = v230;
          uint64_t v261 = v245;
          LOBYTE(v262) = v263;
          HIBYTE(v262) = v229;
          sub_1AFFC8E38();
          sub_1AFFC8E38();
          sub_1AFFC8E38();
          WatchlistEntity.init(from:)((uint64_t)&v257, &v248);
          uint64_t v161 = v248;
          uint64_t v160 = v249;
          uint64_t v162 = v250;
          sub_1AFFC8BC8();
          v254 = v161;
          uint64_t v255 = v160;
          uint64_t v256 = v162;
          swift_getAtPartialKeyPath();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          if ((swift_dynamicCast() & 1) == 0) {
            break;
          }
          sub_1AFFC8B28();
          uint64_t v164 = v257;
          uint64_t v163 = v258;
          sub_1AFFC8B28();
          uint64_t v166 = v257;
          uint64_t v165 = v258;
          if (sub_1AFFC8BD8())
          {
            if (v164 == v166 && v163 == v165)
            {
              swift_bridgeObjectRelease_n();
              swift_release();
              swift_release();
              (*v222)(v147, v241);
            }
            else
            {
              char v148 = sub_1AFFCBCE8();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_release();
              swift_release();
              (*v222)(v147, v241);
              if (v148) {
                goto LABEL_126;
              }
            }
          }
          else if (v166 == v164 && v165 == v163)
          {
            swift_release();
            swift_release();
            (*v222)(v147, v241);
            swift_bridgeObjectRelease_n();
          }
          else
          {
            char v167 = sub_1AFFCBCE8();
            swift_release();
            swift_release();
            (*v222)(v147, v241);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v167)
            {
LABEL_126:
              swift_bridgeObjectRelease();
              uint64_t v244 = v214;
              uint64_t v11 = v218;
              goto LABEL_127;
            }
          }
          uint64_t v146 = v243 + v228;
          uint64_t v144 = v239 - 1;
          uint64_t v11 = v218;
          if (v239 == 1)
          {
            swift_bridgeObjectRelease();
            uint64_t v244 = v214;
LABEL_127:
            uint64_t v30 = v209;
            uint64_t v31 = v213;
            goto LABEL_128;
          }
        }
        swift_bridgeObjectRelease();
        swift_release();
LABEL_119:
        if (qword_1EB810B30 != -1) {
          swift_once();
        }
        uint64_t v168 = sub_1AFFCA8A8();
        __swift_project_value_buffer(v168, (uint64_t)qword_1EB810AF0);
        swift_bridgeObjectRetain_n();
        uint64_t v169 = sub_1AFFCA888();
        os_log_type_t v170 = sub_1AFFCB468();
        if (os_log_type_enabled(v169, v170))
        {
          uint64_t v171 = swift_slowAlloc();
          uint64_t v172 = swift_slowAlloc();
          uint64_t v257 = v172;
          *(_DWORD *)uint64_t v171 = v205;
          uint64_t v173 = sub_1AFFC8E38();
          uint64_t v174 = v241;
          uint64_t v175 = MEMORY[0x1B3E8D630](v173, v241);
          unint64_t v177 = v176;
          swift_bridgeObjectRelease();
          *(void *)(v171 + 4) = sub_1AFD36BA8(v175, v177, &v257);
          swift_bridgeObjectRelease_n();
          uint64_t v11 = v218;
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1AFD01000, v169, v170, "Watchlist sorts unexpectedly contained a parameter which is not a String. sorts=%s", (uint8_t *)v171, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1B3E8F0D0](v172, -1, -1);
          MEMORY[0x1B3E8F0D0](v171, -1, -1);
        }
        else
        {

          swift_bridgeObjectRelease_n();
          uint64_t v174 = v241;
        }
        uint64_t v31 = v213;
        MEMORY[0x1B3E8C360]("Encountered a WatchlistEntity value in WatchlistQuery which is not a String. We need to add explicit support for this in the property queries.", 142, 2, MEMORY[0x1E4FBC860]);
        (*v222)(v233, v174);
        uint64_t v30 = v209;
LABEL_128:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v28 = v210;
        uint64_t v136 = v207;
        uint64_t v138 = v212;
        uint64_t v137 = v211;
LABEL_129:
        if (!v28) {
          goto LABEL_174;
        }
        --v31;
        uint64_t v178 = *(void *)v137;
        uint64_t v179 = *(void *)(v137 + 24);
        uint64_t v180 = *(void *)(v137 + 32);
        __int16 v181 = *(_WORD *)(v137 + 40);
        long long v182 = *(_OWORD *)(v137 + 8);
        long long v183 = *(_OWORD *)(v138 + 16);
        *(_OWORD *)uint64_t v137 = *(_OWORD *)v138;
        *(_OWORD *)(v137 + 16) = v183;
        *(_OWORD *)(v137 + 32) = *(_OWORD *)(v138 + 32);
        *(void *)uint64_t v138 = v178;
        *(_OWORD *)(v138 + 8) = v182;
        *(void *)(v138 + 24) = v179;
        *(void *)(v138 + 32) = v180;
        *(_WORD *)(v138 + 40) = v181;
      }
      while (v31 != v30);
      uint64_t v31 = v203 + 1;
      if (v203 + 1 != v200) {
        continue;
      }
      break;
    }
    uint64_t v74 = v200;
    if (v200 < v30) {
      goto LABEL_169;
    }
LABEL_43:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      v204 = sub_1AFEE5E44(0, *((void *)v204 + 2) + 1, 1, v204);
    }
    unint64_t v76 = *((void *)v204 + 2);
    unint64_t v75 = *((void *)v204 + 3);
    unint64_t v77 = v76 + 1;
    uint64_t v28 = v210;
    if (v76 >= v75 >> 1)
    {
      v204 = sub_1AFEE5E44((char *)(v75 > 1), v76 + 1, 1, v204);
      uint64_t v28 = v210;
    }
    uint64_t v78 = v204;
    *((void *)v204 + 2) = v77;
    uint64_t v79 = v78 + 32;
    uint64_t v80 = &v78[16 * v76 + 32];
    *(void *)uint64_t v80 = v209;
    *((void *)v80 + 1) = v74;
    uint64_t v203 = v74;
    if (v76)
    {
      while (2)
      {
        unint64_t v81 = v77 - 1;
        if (v77 >= 4)
        {
          int64_t v86 = &v79[16 * v77];
          uint64_t v87 = *((void *)v86 - 8);
          uint64_t v88 = *((void *)v86 - 7);
          BOOL v92 = __OFSUB__(v88, v87);
          uint64_t v89 = v88 - v87;
          if (v92) {
            goto LABEL_154;
          }
          uint64_t v91 = *((void *)v86 - 6);
          uint64_t v90 = *((void *)v86 - 5);
          BOOL v92 = __OFSUB__(v90, v91);
          uint64_t v84 = v90 - v91;
          char v85 = v92;
          if (v92) {
            goto LABEL_155;
          }
          unint64_t v93 = v77 - 2;
          unint64_t v94 = &v79[16 * v77 - 32];
          uint64_t v96 = *(void *)v94;
          uint64_t v95 = *((void *)v94 + 1);
          BOOL v92 = __OFSUB__(v95, v96);
          uint64_t v97 = v95 - v96;
          if (v92) {
            goto LABEL_157;
          }
          BOOL v92 = __OFADD__(v84, v97);
          uint64_t v98 = v84 + v97;
          if (v92) {
            goto LABEL_160;
          }
          if (v98 >= v89)
          {
            long long v116 = &v79[16 * v81];
            uint64_t v118 = *(void *)v116;
            uint64_t v117 = *((void *)v116 + 1);
            BOOL v92 = __OFSUB__(v117, v118);
            uint64_t v119 = v117 - v118;
            if (v92) {
              goto LABEL_164;
            }
            BOOL v109 = v84 < v119;
          }
          else
          {
LABEL_61:
            if (v85) {
              goto LABEL_156;
            }
            unint64_t v93 = v77 - 2;
            unint64_t v99 = &v79[16 * v77 - 32];
            uint64_t v101 = *(void *)v99;
            uint64_t v100 = *((void *)v99 + 1);
            BOOL v102 = __OFSUB__(v100, v101);
            uint64_t v103 = v100 - v101;
            char v104 = v102;
            if (v102) {
              goto LABEL_159;
            }
            unint64_t v105 = &v79[16 * v81];
            uint64_t v107 = *(void *)v105;
            uint64_t v106 = *((void *)v105 + 1);
            BOOL v92 = __OFSUB__(v106, v107);
            uint64_t v108 = v106 - v107;
            if (v92) {
              goto LABEL_162;
            }
            if (__OFADD__(v103, v108)) {
              goto LABEL_163;
            }
            if (v103 + v108 < v84) {
              goto LABEL_73;
            }
            BOOL v109 = v84 < v108;
          }
          if (v109) {
            unint64_t v81 = v93;
          }
        }
        else
        {
          if (v77 == 3)
          {
            uint64_t v83 = *((void *)v204 + 4);
            uint64_t v82 = *((void *)v204 + 5);
            BOOL v92 = __OFSUB__(v82, v83);
            uint64_t v84 = v82 - v83;
            char v85 = v92;
            goto LABEL_61;
          }
          uint64_t v110 = *((void *)v204 + 4);
          uint64_t v111 = *((void *)v204 + 5);
          BOOL v92 = __OFSUB__(v111, v110);
          uint64_t v103 = v111 - v110;
          char v104 = v92;
LABEL_73:
          if (v104) {
            goto LABEL_158;
          }
          unint64_t v112 = &v79[16 * v81];
          uint64_t v114 = *(void *)v112;
          uint64_t v113 = *((void *)v112 + 1);
          BOOL v92 = __OFSUB__(v113, v114);
          uint64_t v115 = v113 - v114;
          if (v92) {
            goto LABEL_161;
          }
          if (v115 < v103) {
            goto LABEL_90;
          }
        }
        unint64_t v120 = v81 - 1;
        if (v81 - 1 >= v77)
        {
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
LABEL_164:
          __break(1u);
LABEL_165:
          __break(1u);
LABEL_166:
          __break(1u);
LABEL_167:
          __break(1u);
LABEL_168:
          __break(1u);
LABEL_169:
          __break(1u);
LABEL_170:
          __break(1u);
LABEL_171:
          __break(1u);
LABEL_172:
          __break(1u);
          goto LABEL_173;
        }
        if (!v28) {
          goto LABEL_176;
        }
        long long v121 = &v79[16 * v120];
        long long v122 = v79;
        uint64_t v123 = *(void *)v121;
        long long v124 = v122;
        unint64_t v125 = v81;
        long long v126 = &v122[16 * v81];
        uint64_t v127 = *((void *)v126 + 1);
        unint64_t v128 = (char *)(v28 + 48 * *(void *)v121);
        v247 = (char *)(v28 + 48 * *(void *)v126);
        unint64_t v129 = v28 + 48 * v127;
        uint64_t v130 = v214;
        sub_1AFFC8E38();
        uint64_t v131 = v128;
        uint64_t v132 = v206;
        sub_1AFD706B0(v131, v247, v129, v202, v130);
        uint64_t v206 = v132;
        if (v132) {
          goto LABEL_149;
        }
        uint64_t v133 = v204;
        if (v127 < v123) {
          goto LABEL_151;
        }
        if (v125 > *((void *)v204 + 2)) {
          goto LABEL_152;
        }
        unint64_t v134 = v125;
        *(void *)long long v121 = v123;
        *(void *)&v124[16 * v120 + 8] = v127;
        unint64_t v135 = *((void *)v133 + 2);
        if (v125 >= v135) {
          goto LABEL_153;
        }
        uint64_t v79 = v124;
        unint64_t v77 = v135 - 1;
        memmove(v126, v126 + 16, 16 * (v135 - 1 - v134));
        *((void *)v133 + 2) = v135 - 1;
        uint64_t v11 = v218;
        uint64_t v28 = v210;
        if (v135 <= 2) {
          goto LABEL_90;
        }
        continue;
      }
    }
    unint64_t v77 = 1;
LABEL_90:
    uint64_t v29 = v201;
    uint64_t v27 = v203;
  }
  while (v203 < v201);
  long long v26 = v204;
LABEL_136:
  v204 = v26;
  if (v77 >= 2)
  {
    uint64_t v184 = *v199;
    do
    {
      unint64_t v185 = v77 - 2;
      if (v77 < 2) {
        goto LABEL_165;
      }
      if (!v184) {
        goto LABEL_178;
      }
      uint64_t v186 = *(void *)&v204[16 * v185 + 32];
      uint64_t v187 = *(void *)&v204[16 * v77 + 24];
      v188 = (char *)(v184 + 48 * *(void *)&v204[16 * v77 + 16]);
      uint64_t v189 = v214;
      sub_1AFFC8E38();
      uint64_t v190 = v206;
      sub_1AFD706B0((char *)(v184 + 48 * v186), v188, v184 + 48 * v187, v202, v189);
      uint64_t v206 = v190;
      if (v190) {
        break;
      }
      if (v187 < v186) {
        goto LABEL_166;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        v204 = sub_1AFEE6294((uint64_t)v204);
      }
      v191 = v204;
      if (v185 >= *((void *)v204 + 2)) {
        goto LABEL_167;
      }
      uint64_t v192 = v204 + 32;
      v193 = &v204[16 * v185 + 32];
      *(void *)v193 = v186;
      *((void *)v193 + 1) = v187;
      unint64_t v194 = *((void *)v191 + 2);
      if (v77 > v194) {
        goto LABEL_168;
      }
      memmove(&v192[16 * v77 - 16], &v192[16 * v77], 16 * (v194 - v77));
      *((void *)v191 + 2) = v194 - 1;
      unint64_t v77 = v194 - 1;
    }
    while (v194 > 2);
  }
LABEL_149:
  swift_bridgeObjectRelease();
  *(void *)(v198 + 16) = 0;
  swift_bridgeObjectRelease_n();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFD75FF4(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  swift_bridgeObjectRetain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v4 = sub_1AFEE62BC(v4);
  }
  uint64_t v5 = *(void *)(v4 + 16);
  v7[0] = v4 + 32;
  v7[1] = v5;
  sub_1AFFC8E38();
  sub_1AFD7475C(v7, a2);
  swift_bridgeObjectRelease();
  *a1 = v4;
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1AFD76098(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1AFD760A8()
{
  unint64_t result = qword_1E9AFA108;
  if (!qword_1E9AFA108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFA108);
  }
  return result;
}

unint64_t sub_1AFD76100()
{
  unint64_t result = qword_1E9AFA110[0];
  if (!qword_1E9AFA110[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9AFA110);
  }
  return result;
}

unint64_t sub_1AFD76158()
{
  unint64_t result = qword_1E9AFA128;
  if (!qword_1E9AFA128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFA128);
  }
  return result;
}

unint64_t sub_1AFD761B4()
{
  unint64_t result = qword_1E9AFA130[0];
  if (!qword_1E9AFA130[0])
  {
    sub_1AFD76B90(255, &qword_1E9AF9C80, (uint64_t)&type metadata for WatchlistEntity, MEMORY[0x1E4FBB320]);
    sub_1AFD33084();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9AFA130);
  }
  return result;
}

unint64_t sub_1AFD7624C()
{
  unint64_t result = qword_1E9AFA148[0];
  if (!qword_1E9AFA148[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9AFA148);
  }
  return result;
}

ValueMetadata *type metadata accessor for WatchlistQuery()
{
  return &type metadata for WatchlistQuery;
}

uint64_t sub_1AFD762B0()
{
  return swift_release();
}

uint64_t sub_1AFD762B8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1AFD76370(uint64_t a1)
{
  return a1;
}

uint64_t sub_1AFD76408(uint64_t a1)
{
  return a1;
}

unint64_t sub_1AFD764A0()
{
  unint64_t result = qword_1EB811430;
  if (!qword_1EB811430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB811430);
  }
  return result;
}

uint64_t sub_1AFD764F4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_1AFFCB378();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      sub_1AFFC8E38();
      sub_1AFE22314(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_1AFD7658C(uint64_t a1)
{
  uint64_t v2 = sub_1AFFC99F8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v28 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v27 = (char *)v21 - v6;
  sub_1AFD743DC(0, (unint64_t *)&qword_1EB818BC0, MEMORY[0x1E4F27A00], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)v21 - v8;
  uint64_t v10 = *(void *)(a1 + 16);
  sub_1AFD7682C();
  uint64_t v29 = sub_1AFFCB378();
  if (v10)
  {
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v14 = *(void *)(v11 + 56);
    unint64_t v15 = v11 + 40;
    uint64_t v24 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 32);
    long long v25 = v12;
    uint64_t v22 = (void (**)(char *, char *, uint64_t))(v11 + 16);
    uint64_t v23 = v14;
    uint64_t v26 = v11;
    uint64_t v16 = (void (**)(uint64_t, uint64_t))(v11 - 8);
    v21[1] = v15 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v18 = (uint64_t)v27;
    uint64_t v17 = v28;
    while (1)
    {
      v25(v9, v13, v2);
      uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v15;
      (*(void (**)(char *, void, uint64_t, uint64_t))v15)(v9, 0, 1, v2);
      if ((*v24)(v9, 1, v2) == 1) {
        break;
      }
      (*v22)(v17, v9, v2);
      sub_1AFE224C4(v18, v17);
      (*v16)(v18, v2);
      v13 += v23;
      if (!--v10) {
        goto LABEL_7;
      }
    }
  }
  else
  {
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
LABEL_7:
    v19(v9, 1, 1, v2);
  }
  return v29;
}

unint64_t sub_1AFD7682C()
{
  unint64_t result = qword_1EB818BB0;
  if (!qword_1EB818BB0)
  {
    sub_1AFFC99F8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818BB0);
  }
  return result;
}

unint64_t sub_1AFD76884()
{
  unint64_t result = qword_1E9AFA170;
  if (!qword_1E9AFA170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFA170);
  }
  return result;
}

uint64_t sub_1AFD768D8(uint64_t a1)
{
  return a1;
}

void sub_1AFD76924(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_1AFD76990()
{
  unint64_t result = qword_1E9AFA188;
  if (!qword_1E9AFA188)
  {
    sub_1AFD76924(255, (unint64_t *)&qword_1EB816AF8, (uint64_t (*)(void))sub_1AFD74388, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4F183F8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFA188);
  }
  return result;
}

void sub_1AFD76A20()
{
  if (!qword_1E9AFA190)
  {
    sub_1AFD76924(255, &qword_1E9AFA180, (uint64_t (*)(void))sub_1AFD33B44, (uint64_t)&type metadata for WatchlistEntity, MEMORY[0x1E4F187D0]);
    unint64_t v0 = sub_1AFFCBC98();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9AFA190);
    }
  }
}

void sub_1AFD76AB0()
{
  if (!qword_1E9AFA198)
  {
    sub_1AFD76924(255, (unint64_t *)&qword_1EB816AF8, (uint64_t (*)(void))sub_1AFD74388, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4F183F8]);
    sub_1AFD744AC();
    sub_1AFD33B44();
    sub_1AFD74388();
    unint64_t v0 = sub_1AFFC8D58();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9AFA198);
    }
  }
}

void sub_1AFD76B90(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1AFD76BDC()
{
  if (!qword_1E9AFA1A0)
  {
    sub_1AFD76924(255, (unint64_t *)&qword_1EB816AF8, (uint64_t (*)(void))sub_1AFD74388, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4F183F8]);
    sub_1AFD744AC();
    sub_1AFD74388();
    unint64_t v0 = sub_1AFFC8F08();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9AFA1A0);
    }
  }
}

void sub_1AFD76CA8()
{
  if (!qword_1E9AFA1A8)
  {
    sub_1AFD76924(255, (unint64_t *)&qword_1EB816AF8, (uint64_t (*)(void))sub_1AFD74388, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4F183F8]);
    sub_1AFD744AC();
    sub_1AFD74388();
    unint64_t v0 = sub_1AFFC8D28();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9AFA1A8);
    }
  }
}

void sub_1AFD76D6C()
{
  if (!qword_1E9AFA1B0)
  {
    sub_1AFD76924(255, (unint64_t *)&qword_1EB816AF8, (uint64_t (*)(void))sub_1AFD74388, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4F183F8]);
    sub_1AFD744AC();
    sub_1AFD74388();
    unint64_t v0 = sub_1AFFC8CC8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9AFA1B0);
    }
  }
}

uint64_t sub_1AFD76E38()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1AFD76E70@<X0>(unsigned char *a1@<X8>)
{
  return sub_1AFD6C9F8(a1);
}

uint64_t sub_1AFD76E78@<X0>(unsigned char *a1@<X8>)
{
  return sub_1AFD6C8EC(a1);
}

uint64_t type metadata accessor for UpdateUpsellAppLaunchCountCommand()
{
  return self;
}

uint64_t sub_1AFD77194()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1AFD771CC()
{
  return sub_1AFFCB5E8();
}

id sub_1AFD772CC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_1AFD2C83C();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1AFFC98F8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = v2;
  uint64_t v13 = (void *)sub_1AFFCAE68();
  id v14 = objc_msgSend(a1, sel_decodeObjectForKey_, v13);

  if (v14)
  {
    sub_1AFFCB6F8();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v20, 0, sizeof(v20));
  }
  sub_1AFD3BCF4((uint64_t)v20, (uint64_t)v21);
  if (!v22)
  {
    sub_1AFD779F8((uint64_t)v21, (uint64_t (*)(void))sub_1AFD3BD58);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    goto LABEL_8;
  }
  int v15 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v7, v15 ^ 1u, 1, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
LABEL_8:

    sub_1AFD779F8((uint64_t)v7, (uint64_t (*)(void))sub_1AFD2C83C);
    swift_deallocPartialClassInstance();
    return 0;
  }
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v16(v11, v7, v8);
  v16(&v12[OBJC_IVAR___SCUpdateAppReviewRequestLastSeenDateCommand_appReviewRequestLastSeenDate], v11, v8);

  v19.receiver = v12;
  v19.super_class = ObjectType;
  id v17 = objc_msgSendSuper2(&v19, sel_init);

  return v17;
}

uint64_t sub_1AFD776AC()
{
  return type metadata accessor for UpdateAppReviewRequestLastSeenDateCommand();
}

uint64_t type metadata accessor for UpdateAppReviewRequestLastSeenDateCommand()
{
  uint64_t result = qword_1EB817A20;
  if (!qword_1EB817A20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1AFD77700()
{
  uint64_t result = sub_1AFFC98F8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1AFD77790(void *a1, uint64_t a2)
{
  id v3 = objc_msgSend(a1, sel_encryptedValues);
  swift_getObjectType();
  uint64_t v4 = a2 + OBJC_IVAR___SCUpdateAppReviewRequestLastSeenDateCommand_appReviewRequestLastSeenDate;
  uint64_t v5 = sub_1AFFC98F8();
  _OWORD v8[3] = v5;
  v8[4] = MEMORY[0x1E4F19B10];
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v8);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(boxed_opaque_existential_1, v4, v5);
  sub_1AFFCB5A8();
  return swift_unknownObjectRelease();
}

uint64_t sub_1AFD779B8()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1AFD779F0(void *a1)
{
  return sub_1AFD77790(a1, *(void *)(v1 + 16));
}

uint64_t sub_1AFD779F8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1AFD77A58()
{
  sub_1AFFCAF68();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFD77B8C()
{
  sub_1AFFCAF68();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFD77C78()
{
  sub_1AFFCAF68();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFD77D84()
{
  sub_1AFFCAF68();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFD77E64()
{
  sub_1AFFCAF68();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFD77F70()
{
  sub_1AFFCAF68();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFD780A8()
{
  sub_1AFFCAF68();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFD781D8()
{
  sub_1AFFCAF68();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFD782F4()
{
  sub_1AFFCAF68();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFD78450()
{
  sub_1AFFCAF68();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFD785A0()
{
  sub_1AFFCAF68();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFD786E8()
{
  sub_1AFFCAF68();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFD7886C()
{
  uint64_t v1 = *v0;
  sub_1AFFC8E38();
  return v1;
}

uint64_t sub_1AFD7889C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_1AFFC8E38();
  return v1;
}

uint64_t sub_1AFD788CC()
{
  uint64_t v1 = *(void *)(v0 + 32);
  sub_1AFFC8E38();
  return v1;
}

uint64_t sub_1AFD788FC()
{
  uint64_t v1 = *(void *)(v0 + 48);
  sub_1AFFC8E38();
  return v1;
}

void sub_1AFD7892C(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 64);
}

uint64_t sub_1AFD78938()
{
  uint64_t v1 = *(void *)(v0 + 72);
  sub_1AFFC8E38();
  return v1;
}

uint64_t sub_1AFD78968()
{
  uint64_t v1 = *(void *)(v0 + 88);
  sub_1AFFC8E38();
  return v1;
}

uint64_t sub_1AFD78998()
{
  uint64_t v1 = *(void *)(v0 + 104);
  sub_1AFFC8E38();
  return v1;
}

uint64_t sub_1AFD789C8()
{
  uint64_t v1 = *(void *)(v0 + 120);
  sub_1AFFC8E38();
  return v1;
}

uint64_t sub_1AFD789F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  char v40 = *a7;
  sub_1AFFC8E38();
  sub_1AFFCAFA8();
  sub_1AFFCAFA8();
  uint64_t v24 = qword_1EB810B40;
  sub_1AFFC8E38();
  if (v24 != -1) {
    swift_once();
  }
  uint64_t v25 = qword_1EB8319F0;
  uint64_t v41 = a5;
  if (*(void *)(qword_1EB8319F0 + 16))
  {
    sub_1AFFC8E38();
    unint64_t v26 = sub_1AFD79CC8(a1, a2);
    if (v27)
    {
      uint64_t v28 = (uint64_t *)(*(void *)(v25 + 56) + 16 * v26);
      uint64_t v29 = v28[1];
      uint64_t v39 = *v28;
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v38 = v29;
      goto LABEL_10;
    }
    swift_bridgeObjectRelease();
  }
  if (a10)
  {
    uint64_t v38 = a10;
    uint64_t v39 = a8;
  }
  else
  {
    sub_1AFFC8E38();
    uint64_t v38 = a2;
    uint64_t v39 = a1;
  }
LABEL_10:
  uint64_t v30 = qword_1EB8319F8;
  if (*(void *)(qword_1EB8319F8 + 16))
  {
    sub_1AFFC8E38();
    unint64_t v31 = sub_1AFD79CC8(a1, a2);
    if (v32)
    {
      uint64_t v33 = a3;
      uint64_t v34 = (uint64_t *)(*(void *)(v30 + 56) + 16 * v31);
      uint64_t v36 = *v34;
      uint64_t v35 = v34[1];
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
LABEL_16:
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v33 = a3;
  uint64_t v36 = a1;
  uint64_t v35 = a2;
  if (a12)
  {
    uint64_t v36 = a11;
    sub_1AFFC8E38();
    uint64_t v35 = a12;
    goto LABEL_16;
  }
LABEL_17:
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a9 = a5;
  *(void *)(a9 + 8) = a6;
  *(void *)(a9 + 16) = a1;
  *(void *)(a9 + 24) = a2;
  *(void *)(a9 + 32) = v33;
  *(void *)(a9 + 40) = a4;
  *(void *)(a9 + 48) = v41;
  *(void *)(a9 + 56) = a6;
  *(unsigned char *)(a9 + 64) = v40;
  *(void *)(a9 + 72) = v39;
  *(void *)(a9 + 80) = v38;
  *(void *)(a9 + 88) = v36;
  *(void *)(a9 + 96) = v35;
  *(void *)(a9 + 104) = a13;
  *(void *)(a9 + 112) = a14;
  *(void *)(a9 + 120) = a15;
  *(void *)(a9 + 128) = a16;
  return result;
}

uint64_t sub_1AFD78C34()
{
  uint64_t v3 = *(void *)(v0 + 112);
  uint64_t v1 = *(void *)(v0 + 128);
  sub_1AFFC8E38();
  sub_1AFFCAF68();
  swift_bridgeObjectRelease();
  sub_1AFFC8E38();
  sub_1AFFCAF68();
  swift_bridgeObjectRelease();
  sub_1AFFC8E38();
  sub_1AFFCAF68();
  swift_bridgeObjectRelease();
  sub_1AFFC8E38();
  sub_1AFFCAF68();
  swift_bridgeObjectRelease();
  sub_1AFFCAF68();
  swift_bridgeObjectRelease();
  sub_1AFFC8E38();
  sub_1AFFCAF68();
  swift_bridgeObjectRelease();
  sub_1AFFC8E38();
  sub_1AFFCAF68();
  swift_bridgeObjectRelease();
  if (!v3)
  {
    sub_1AFFCBE18();
    if (v1) {
      goto LABEL_3;
    }
    return sub_1AFFCBE18();
  }
  sub_1AFFCBE18();
  sub_1AFFC8E38();
  sub_1AFFCAF68();
  swift_bridgeObjectRelease();
  if (!v1) {
    return sub_1AFFCBE18();
  }
LABEL_3:
  sub_1AFFCBE18();
  sub_1AFFC8E38();
  sub_1AFFCAF68();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFD78F3C(char a1)
{
  uint64_t result = 0x696669746E656469;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6C6F626D7973;
      break;
    case 2:
      uint64_t result = 1701667182;
      break;
    case 3:
      uint64_t result = 0x65676E6168637865;
      break;
    case 4:
      uint64_t result = 1701869940;
      break;
    case 5:
      uint64_t result = 0x6D614E74726F6873;
      break;
    case 6:
      uint64_t result = 0x4E746361706D6F63;
      break;
    case 7:
      uint64_t result = 0x726F74636573;
      break;
    case 8:
      uint64_t result = 0x7972747375646E69;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1AFD79054()
{
  return sub_1AFD78F3C(*v0);
}

uint64_t sub_1AFD7905C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1AFD7BA9C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1AFD79084(unsigned char *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_1AFD79090(uint64_t a1)
{
  unint64_t v2 = sub_1AFD7B1F0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFD790CC(uint64_t a1)
{
  unint64_t v2 = sub_1AFD7B1F0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFD79108(void *a1)
{
  sub_1AFD7B298(0, &qword_1EB811338, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v18 - v6;
  uint64_t v8 = *(void *)(v1 + 16);
  uint64_t v24 = *(void *)(v1 + 24);
  uint64_t v25 = v8;
  uint64_t v9 = *(void *)(v1 + 32);
  uint64_t v22 = *(void *)(v1 + 40);
  uint64_t v23 = v9;
  uint64_t v10 = *(void *)(v1 + 48);
  uint64_t v20 = *(void *)(v1 + 56);
  uint64_t v21 = v10;
  int v19 = *(unsigned __int8 *)(v1 + 64);
  uint64_t v11 = *(void *)(v1 + 72);
  v18[7] = *(void *)(v1 + 80);
  unsigned char v18[8] = v11;
  uint64_t v12 = *(void *)(v1 + 88);
  v18[5] = *(void *)(v1 + 96);
  v18[6] = v12;
  uint64_t v13 = *(void *)(v1 + 104);
  v18[3] = *(void *)(v1 + 112);
  v18[4] = v13;
  uint64_t v14 = *(void *)(v1 + 120);
  v18[1] = *(void *)(v1 + 128);
  v18[2] = v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFD7B1F0();
  sub_1AFFCBE78();
  char v36 = 0;
  uint64_t v15 = v26;
  sub_1AFFCBC08();
  if (!v15)
  {
    char v16 = v19;
    char v35 = 1;
    sub_1AFFCBC08();
    char v34 = 2;
    sub_1AFFCBC08();
    char v33 = 3;
    sub_1AFFCBC08();
    char v32 = v16;
    char v31 = 4;
    sub_1AFD7B244();
    sub_1AFFCBC58();
    char v30 = 5;
    sub_1AFFCBC08();
    char v29 = 6;
    sub_1AFFCBC08();
    char v28 = 7;
    sub_1AFFCBB98();
    char v27 = 8;
    sub_1AFFCBB98();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1AFD79404()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFD79444@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1AFD7B298(0, &qword_1EB818308, MEMORY[0x1E4FBBDC0]);
  uint64_t v77 = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v39 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFD7B1F0();
  sub_1AFFCBE68();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  uint64_t v53 = a2;
  LOBYTE(v64[0]) = 0;
  uint64_t v10 = sub_1AFFCBB18();
  uint64_t v12 = v11;
  uint64_t v52 = v10;
  LOBYTE(v64[0]) = 1;
  sub_1AFFC8E38();
  uint64_t v13 = (uint64_t)a1;
  uint64_t v51 = sub_1AFFCBB18();
  LOBYTE(v64[0]) = 2;
  uint64_t v15 = v14;
  sub_1AFFC8E38();
  uint64_t v16 = sub_1AFFCBB18();
  uint64_t v54 = v15;
  uint64_t v50 = v16;
  LOBYTE(v64[0]) = 3;
  uint64_t v18 = v17;
  sub_1AFFC8E38();
  uint64_t v19 = sub_1AFFCBB18();
  uint64_t v21 = v20;
  uint64_t v49 = v19;
  LOBYTE(v55) = 4;
  sub_1AFD7B2FC();
  sub_1AFFC8E38();
  sub_1AFFCBB58();
  uint64_t v48 = v21;
  int v22 = LOBYTE(v64[0]);
  LOBYTE(v64[0]) = 5;
  uint64_t v23 = sub_1AFFCBB18();
  uint64_t v47 = v24;
  uint64_t v44 = v23;
  LOBYTE(v64[0]) = 6;
  sub_1AFFC8E38();
  uint64_t v45 = 0;
  uint64_t v43 = sub_1AFFCBB18();
  LOBYTE(v64[0]) = 7;
  uint64_t v46 = v25;
  sub_1AFFC8E38();
  uint64_t v41 = sub_1AFFCBAA8();
  uint64_t v42 = v26;
  int v40 = v22;
  char v75 = 8;
  sub_1AFFC8E38();
  uint64_t v27 = sub_1AFFCBAA8();
  uint64_t v29 = v28;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v77);
  *(void *)&long long v55 = v52;
  *((void *)&v55 + 1) = v12;
  *(void *)&long long v56 = v51;
  *((void *)&v56 + 1) = v54;
  *(void *)&long long v57 = v50;
  *((void *)&v57 + 1) = v18;
  uint64_t v39 = v18;
  *(void *)&long long v58 = v49;
  *((void *)&v58 + 1) = v48;
  LOBYTE(v59) = v40;
  *((void *)&v59 + 1) = v44;
  *(void *)&long long v60 = v47;
  *((void *)&v60 + 1) = v43;
  *(void *)&long long v61 = v46;
  *((void *)&v61 + 1) = v41;
  *(void *)&long long v62 = v42;
  *((void *)&v62 + 1) = v27;
  uint64_t v63 = v29;
  sub_1AFD76370((uint64_t)&v55);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v30 = v48;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v31 = v46;
  swift_bridgeObjectRelease();
  uint64_t v32 = v42;
  swift_bridgeObjectRelease();
  long long v33 = v62;
  uint64_t v34 = v53;
  *(_OWORD *)(v53 + 96) = v61;
  *(_OWORD *)(v34 + 112) = v33;
  *(void *)(v34 + 128) = v63;
  long long v35 = v58;
  *(_OWORD *)(v34 + 32) = v57;
  *(_OWORD *)(v34 + 48) = v35;
  long long v36 = v60;
  *(_OWORD *)(v34 + 64) = v59;
  *(_OWORD *)(v34 + 80) = v36;
  long long v37 = v56;
  *(_OWORD *)uint64_t v34 = v55;
  *(_OWORD *)(v34 + 16) = v37;
  __swift_destroy_boxed_opaque_existential_1(v13);
  v64[0] = v52;
  v64[1] = v12;
  v64[2] = v51;
  v64[3] = v54;
  v64[4] = v50;
  v64[5] = v39;
  v64[6] = v49;
  v64[7] = v30;
  char v65 = v40;
  *(_DWORD *)uint64_t v66 = v76[0];
  *(_DWORD *)&v66[3] = *(_DWORD *)((char *)v76 + 3);
  uint64_t v67 = v44;
  uint64_t v68 = v47;
  uint64_t v69 = v43;
  uint64_t v70 = v31;
  uint64_t v71 = v41;
  uint64_t v72 = v32;
  uint64_t v73 = v27;
  uint64_t v74 = v29;
  return sub_1AFD76408((uint64_t)v64);
}

uint64_t sub_1AFD79BE4()
{
  uint64_t v1 = *v0;
  sub_1AFFC8E38();
  return v1;
}

uint64_t sub_1AFD79C14()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFD79C58()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFD79C98@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1AFD79444(a1, a2);
}

uint64_t sub_1AFD79CB0(void *a1)
{
  return sub_1AFD79108(a1);
}

unint64_t sub_1AFD79CC8(uint64_t a1, uint64_t a2)
{
  sub_1AFFCBDF8();
  sub_1AFFCAF68();
  uint64_t v4 = sub_1AFFCBE38();

  return sub_1AFD7A074(a1, a2, v4);
}

unint64_t sub_1AFD79D40(uint64_t a1)
{
  uint64_t v2 = sub_1AFFCB768();

  return sub_1AFD7A158(a1, v2);
}

unint64_t sub_1AFD79D88(uint64_t a1)
{
  uint64_t v2 = sub_1AFFCB5F8();

  return sub_1AFD7A220(a1, v2);
}

unint64_t sub_1AFD79DCC(unsigned __int8 a1)
{
  sub_1AFFCBDF8();
  sub_1AFFCAF68();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1AFFCBE38();

  return sub_1AFD7A32C(a1, v2);
}

unint64_t sub_1AFD79E90(unint64_t *a1)
{
  sub_1AFFCBDF8();
  sub_1AFD78C34();
  uint64_t v2 = sub_1AFFCBE38();

  return sub_1AFD7A4C8(a1, v2);
}

unint64_t sub_1AFD79EFC(uint64_t a1)
{
  sub_1AFFCAE98();
  sub_1AFFCBDF8();
  sub_1AFFCAF68();
  uint64_t v2 = sub_1AFFCBE38();
  swift_bridgeObjectRelease();
  return sub_1AFD7AA6C(a1, v2);
}

unint64_t sub_1AFD79F8C(uint64_t a1)
{
  sub_1AFFC96E8();
  sub_1AFD7BE4C((unint64_t *)&qword_1EB81A618);
  uint64_t v2 = sub_1AFFCAD58();

  return sub_1AFD7ABE4(a1, v2);
}

unint64_t sub_1AFD7A010(uint64_t a1)
{
  sub_1AFFCB948();
  uint64_t v2 = sub_1AFFCAD58();

  return sub_1AFD7AD90(a1, v2);
}

unint64_t sub_1AFD7A074(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1AFFCBCE8() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1AFFCBCE8() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_1AFD7A158(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_1AFD7BED0(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = MEMORY[0x1B3E8DBD0](v9, a1);
      sub_1AFD7BF2C((uint64_t)v9);
      if (v7) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_1AFD7A220(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    sub_1AFD7BE90();
    id v6 = *(id *)(*(void *)(v2 + 48) + 8 * i);
    char v7 = sub_1AFFCB608();

    if ((v7 & 1) == 0)
    {
      uint64_t v8 = ~v4;
      for (unint64_t i = (i + 1) & v8; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v8)
      {
        id v9 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v10 = sub_1AFFCB608();

        if (v10) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_1AFD7A32C(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    while (1)
    {
      if (*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        if (*(unsigned char *)(*(void *)(v2 + 48) + v4) == 1)
        {
          unint64_t v7 = 0xE600000000000000;
          uint64_t v8 = 0x737961776C61;
          int v9 = a1;
          if (!a1) {
            goto LABEL_17;
          }
        }
        else
        {
          unint64_t v7 = 0xE500000000000000;
          uint64_t v8 = 0x726576656ELL;
          int v9 = a1;
          if (!a1)
          {
LABEL_17:
            unint64_t v11 = 0xEA00000000007372;
            if (v8 != 0x756F487265746661) {
              goto LABEL_19;
            }
            goto LABEL_18;
          }
        }
      }
      else
      {
        uint64_t v8 = 0x756F487265746661;
        unint64_t v7 = 0xEA00000000007372;
        int v9 = a1;
        if (!a1) {
          goto LABEL_17;
        }
      }
      if (v9 == 1) {
        uint64_t v10 = 0x737961776C61;
      }
      else {
        uint64_t v10 = 0x726576656ELL;
      }
      if (v9 == 1) {
        unint64_t v11 = 0xE600000000000000;
      }
      else {
        unint64_t v11 = 0xE500000000000000;
      }
      if (v8 != v10) {
        goto LABEL_19;
      }
LABEL_18:
      if (v7 == v11)
      {
        swift_bridgeObjectRelease_n();
        return v4;
      }
LABEL_19:
      char v12 = sub_1AFFCBCE8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v12 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v6;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
  }
  return v4;
}

unint64_t sub_1AFD7A4C8(unint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = ~v4;
    unint64_t v7 = *a1;
    unint64_t v8 = a1[1];
    unint64_t v9 = a1[2];
    unint64_t v10 = a1[3];
    unint64_t v11 = a1[4];
    *((void *)&v41 + 1) = a1[6];
    unint64_t v42 = a1[5];
    unint64_t v38 = *a1;
    uint64_t v39 = *((unsigned __int8 *)a1 + 64);
    unint64_t v40 = a1[9];
    *(void *)&long long v41 = a1[7];
    *((void *)&v35 + 1) = a1[11];
    unint64_t v36 = a1[10];
    unint64_t v34 = a1[14];
    *(void *)&long long v35 = a1[12];
    unint64_t v31 = a1[15];
    unint64_t v32 = a1[13];
    unint64_t v33 = a1[16];
    unint64_t v37 = v11;
    while (1)
    {
      uint64_t v12 = *(void *)(v2 + 48) + 136 * v5;
      long long v43 = *(_OWORD *)v12;
      long long v13 = *(_OWORD *)(v12 + 64);
      long long v15 = *(_OWORD *)(v12 + 16);
      long long v14 = *(_OWORD *)(v12 + 32);
      long long v46 = *(_OWORD *)(v12 + 48);
      *(_OWORD *)uint64_t v47 = v13;
      long long v44 = v15;
      long long v45 = v14;
      long long v17 = *(_OWORD *)(v12 + 96);
      long long v16 = *(_OWORD *)(v12 + 112);
      long long v18 = *(_OWORD *)(v12 + 80);
      *(void *)&v48[32] = *(void *)(v12 + 128);
      *(_OWORD *)uint64_t v48 = v17;
      *(_OWORD *)&v48[16] = v16;
      *(_OWORD *)&v47[16] = v18;
      if (v43 != __PAIR128__(v8, v7) && (sub_1AFFCBCE8() & 1) == 0
        || v44 != __PAIR128__(v10, v9) && (sub_1AFFCBCE8() & 1) == 0
        || v45 != __PAIR128__(v42, v11) && (sub_1AFFCBCE8() & 1) == 0
        || __PAIR128__(v46, *((unint64_t *)&v46 + 1)) != v41 && (sub_1AFFCBCE8() & 1) == 0)
      {
        goto LABEL_5;
      }
      unint64_t v19 = 0xE700000000000000;
      unint64_t v20 = v8;
      unint64_t v21 = v9;
      uint64_t v22 = v3;
      unint64_t v23 = v10;
      uint64_t v24 = v6;
      uint64_t v25 = 0x6E776F6E6B6E75;
      switch(v47[0])
      {
        case 1:
          unint64_t v19 = 0xE800000000000000;
          uint64_t v25 = 0x79636E6572727563;
          break;
        case 2:
          uint64_t v25 = 0x75636F7470797263;
          unint64_t v19 = 0xEE0079636E657272;
          break;
        case 3:
          unint64_t v19 = 0xE600000000000000;
          uint64_t v25 = 0x797469757165;
          break;
        case 4:
          unint64_t v19 = 0xE300000000000000;
          uint64_t v25 = 6714469;
          break;
        case 5:
          uint64_t v25 = 0x73657275747566;
          break;
        case 6:
          unint64_t v19 = 0xE500000000000000;
          uint64_t v25 = 0x7865646E69;
          break;
        case 7:
          uint64_t v25 = 0x75466C617574756DLL;
          unint64_t v19 = 0xEA0000000000646ELL;
          break;
        default:
          break;
      }
      unint64_t v26 = 0xE700000000000000;
      uint64_t v27 = 0x6E776F6E6B6E75;
      switch(v39)
      {
        case 1:
          unint64_t v26 = 0xE800000000000000;
          if (v25 == 0x79636E6572727563) {
            goto LABEL_35;
          }
          goto LABEL_38;
        case 2:
          unint64_t v26 = 0xEE0079636E657272;
          if (v25 != 0x75636F7470797263) {
            goto LABEL_38;
          }
          goto LABEL_35;
        case 3:
          unint64_t v26 = 0xE600000000000000;
          if (v25 != 0x797469757165) {
            goto LABEL_38;
          }
          goto LABEL_35;
        case 4:
          unint64_t v26 = 0xE300000000000000;
          if (v25 != 6714469) {
            goto LABEL_38;
          }
          goto LABEL_35;
        case 5:
          if (v25 != 0x73657275747566) {
            goto LABEL_38;
          }
          goto LABEL_35;
        case 6:
          unint64_t v26 = 0xE500000000000000;
          uint64_t v27 = 0x7865646E69;
          goto LABEL_34;
        case 7:
          unint64_t v26 = 0xEA0000000000646ELL;
          if (v25 != 0x75466C617574756DLL) {
            goto LABEL_38;
          }
          goto LABEL_35;
        default:
LABEL_34:
          if (v25 != v27) {
            goto LABEL_38;
          }
LABEL_35:
          if (v19 == v26)
          {
            sub_1AFD76370((uint64_t)&v43);
            swift_bridgeObjectRelease_n();
            uint64_t v6 = v24;
            unint64_t v10 = v23;
            uint64_t v3 = v22;
            unint64_t v9 = v21;
            unint64_t v8 = v20;
            unint64_t v11 = v37;
            unint64_t v7 = v38;
          }
          else
          {
LABEL_38:
            char v28 = sub_1AFFCBCE8();
            sub_1AFD76370((uint64_t)&v43);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v6 = v24;
            unint64_t v10 = v23;
            uint64_t v3 = v22;
            unint64_t v9 = v21;
            unint64_t v8 = v20;
            unint64_t v11 = v37;
            unint64_t v7 = v38;
            if ((v28 & 1) == 0) {
              goto LABEL_4;
            }
          }
          if (*(_OWORD *)&v47[8] != __PAIR128__(v36, v40) && (sub_1AFFCBCE8() & 1) == 0
            || __PAIR128__(*(unint64_t *)&v47[24], *(unint64_t *)v48) != v35 && (sub_1AFFCBCE8() & 1) == 0)
          {
            goto LABEL_4;
          }
          if (*(void *)&v48[16])
          {
            if (!v34 || *(_OWORD *)&v48[8] != __PAIR128__(v34, v32) && (sub_1AFFCBCE8() & 1) == 0) {
              goto LABEL_4;
            }
          }
          else if (v34)
          {
            goto LABEL_4;
          }
          if (!*(void *)&v48[32])
          {
            if (!v33) {
              goto LABEL_54;
            }
LABEL_4:
            sub_1AFD76408((uint64_t)&v43);
            goto LABEL_5;
          }
          if (!v33) {
            goto LABEL_4;
          }
          if (*(_OWORD *)&v48[24] == __PAIR128__(v33, v31))
          {
LABEL_54:
            sub_1AFD76408((uint64_t)&v43);
            return v5;
          }
          char v29 = sub_1AFFCBCE8();
          sub_1AFD76408((uint64_t)&v43);
          if (v29) {
            return v5;
          }
LABEL_5:
          unint64_t v5 = (v5 + 1) & v6;
          if (((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) == 0) {
            return v5;
          }
          break;
      }
    }
  }
  return v5;
}

unint64_t sub_1AFD7AA6C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = sub_1AFFCAE98();
    uint64_t v8 = v7;
    if (v6 == sub_1AFFCAE98() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_1AFFCBCE8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = sub_1AFFCAE98();
          uint64_t v15 = v14;
          if (v13 == sub_1AFFCAE98() && v15 == v16) {
            break;
          }
          char v18 = sub_1AFFCBCE8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_1AFD7ABE4(uint64_t a1, uint64_t a2)
{
  uint64_t v20 = a1;
  uint64_t v4 = sub_1AFFC96E8();
  uint64_t v5 = *(void *)(v4 - 8);
  v6.n128_f64[0] = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = v2;
  uint64_t v9 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v10 = a2 & ~v9;
  uint64_t v19 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = ~v9;
    uint64_t v14 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v5 + 16);
    uint64_t v13 = v5 + 16;
    uint64_t v12 = v14;
    uint64_t v15 = *(void *)(v13 + 56);
    do
    {
      v12(v8, *(void *)(v21 + 48) + v15 * v10, v4, v6);
      sub_1AFD7BE4C(&qword_1EB818B70);
      char v16 = sub_1AFFCADD8();
      (*(void (**)(char *, uint64_t))(v13 - 8))(v8, v4);
      if (v16) {
        break;
      }
      unint64_t v10 = (v10 + 1) & v11;
    }
    while (((*(void *)(v19 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

unint64_t sub_1AFD7AD90(uint64_t a1, uint64_t a2)
{
  uint64_t v22 = a1;
  uint64_t v4 = sub_1AFFCB948();
  v6.n128_f64[0] = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = v2;
  uint64_t v9 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v10 = a2 & ~v9;
  uint64_t v21 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = ~v9;
    uint64_t v14 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v5 + 16);
    uint64_t v12 = v5 + 16;
    uint64_t v13 = v14;
    uint64_t v15 = *(void *)(v12 + 56);
    char v16 = (void (**)(char *, uint64_t))(v12 - 8);
    do
    {
      uint64_t v17 = v12;
      v13(v8, *(void *)(v23 + 48) + v15 * v10, v4, v6);
      char v18 = sub_1AFFCADD8();
      (*v16)(v8, v4);
      if (v18) {
        break;
      }
      unint64_t v10 = (v10 + 1) & v11;
      uint64_t v12 = v17;
    }
    while (((*(void *)(v21 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

uint64_t sub_1AFD7AF28(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v38 = *(void *)(a1 + 56);
  uint64_t v39 = *(void *)(a1 + 48);
  unsigned __int8 v37 = *(unsigned char *)(a1 + 64);
  uint64_t v35 = *(void *)(a1 + 72);
  uint64_t v33 = *(void *)(a1 + 80);
  uint64_t v31 = *(void *)(a1 + 88);
  uint64_t v29 = *(void *)(a1 + 96);
  uint64_t v25 = *(void *)(a1 + 104);
  uint64_t v27 = *(void *)(a1 + 112);
  uint64_t v21 = *(void *)(a1 + 120);
  uint64_t v23 = *(void *)(a1 + 128);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v11 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  char v36 = *(unsigned char *)(a2 + 64);
  uint64_t v34 = *(void *)(a2 + 72);
  uint64_t v32 = *(void *)(a2 + 80);
  uint64_t v30 = *(void *)(a2 + 88);
  uint64_t v28 = *(void *)(a2 + 96);
  uint64_t v24 = *(void *)(a2 + 104);
  uint64_t v26 = *(void *)(a2 + 112);
  uint64_t v20 = *(void *)(a2 + 120);
  uint64_t v22 = *(void *)(a2 + 128);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (v12 = sub_1AFFCBCE8(), uint64_t result = 0, (v12 & 1) != 0))
  {
    if (v2 == v7 && v4 == v6 || (v14 = sub_1AFFCBCE8(), uint64_t result = 0, (v14 & 1) != 0))
    {
      if (v3 == v9 && v5 == v8 || (v15 = sub_1AFFCBCE8(), uint64_t result = 0, (v15 & 1) != 0))
      {
        if (v39 == v11 && v38 == v10 || (v16 = sub_1AFFCBCE8(), uint64_t result = 0, (v16 & 1) != 0))
        {
          if ((sub_1AFDEC73C(v37, v36) & 1) == 0) {
            return 0;
          }
          if (v35 == v34 && v33 == v32 || (v17 = sub_1AFFCBCE8(), uint64_t result = 0, (v17 & 1) != 0))
          {
            if (v31 == v30 && v29 == v28 || (v18 = sub_1AFFCBCE8(), uint64_t result = 0, (v18 & 1) != 0))
            {
              if (v27)
              {
                if (!v26) {
                  return 0;
                }
                if (v25 != v24 || v27 != v26)
                {
                  char v19 = sub_1AFFCBCE8();
                  uint64_t result = 0;
                  if ((v19 & 1) == 0) {
                    return result;
                  }
                }
              }
              else if (v26)
              {
                return 0;
              }
              if (v23)
              {
                if (v22 && (v21 == v20 && v23 == v22 || (sub_1AFFCBCE8() & 1) != 0)) {
                  return 1;
                }
              }
              else if (!v22)
              {
                return 1;
              }
              return 0;
            }
          }
        }
      }
    }
  }
  return result;
}

unint64_t sub_1AFD7B1F0()
{
  unint64_t result = qword_1EB817B10;
  if (!qword_1EB817B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817B10);
  }
  return result;
}

unint64_t sub_1AFD7B244()
{
  unint64_t result = qword_1EB810FF8;
  if (!qword_1EB810FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB810FF8);
  }
  return result;
}

void sub_1AFD7B298(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1AFD7B1F0();
    unint64_t v7 = a3(a1, &type metadata for Stock.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1AFD7B2FC()
{
  unint64_t result = qword_1EB817BB0;
  if (!qword_1EB817BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817BB0);
  }
  return result;
}

unint64_t sub_1AFD7B354()
{
  unint64_t result = qword_1EB810B48;
  if (!qword_1EB810B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB810B48);
  }
  return result;
}

uint64_t sub_1AFD7B3A8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t destroy for Stock()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Stock(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  uint64_t v8 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v8;
  uint64_t v9 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v9;
  uint64_t v10 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v10;
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  return a1;
}

uint64_t assignWithCopy for Stock(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for Stock(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v8 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v11;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Stock(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 136)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Stock(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 136) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 136) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Stock()
{
  return &type metadata for Stock;
}

uint64_t getEnumTagSinglePayload for Stock.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Stock.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFD7B8E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Stock.CodingKeys()
{
  return &type metadata for Stock.CodingKeys;
}

unint64_t sub_1AFD7B920()
{
  unint64_t result = qword_1E9AFA1C8;
  if (!qword_1E9AFA1C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFA1C8);
  }
  return result;
}

unint64_t sub_1AFD7B978()
{
  unint64_t result = qword_1EB817B20;
  if (!qword_1EB817B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817B20);
  }
  return result;
}

unint64_t sub_1AFD7B9D0()
{
  unint64_t result = qword_1EB817B18;
  if (!qword_1EB817B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817B18);
  }
  return result;
}

uint64_t sub_1AFD7BA24(uint64_t a1)
{
  return a1 & ~(-1 << *(unsigned char *)(v1 + 32));
}

uint64_t sub_1AFD7BA50()
{
  sub_1AFFCBDF8();
  uint64_t v0 = sub_1AFFCBE38();

  return sub_1AFD7BA24(v0);
}

uint64_t sub_1AFD7BA9C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6F626D7973 && a2 == 0xE600000000000000 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x65676E6168637865 && a2 == 0xE800000000000000 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6D614E74726F6873 && a2 == 0xE900000000000065 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x4E746361706D6F63 && a2 == 0xEB00000000656D61 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x726F74636573 && a2 == 0xE600000000000000 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x7972747375646E69 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v6 = sub_1AFFCBCE8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

uint64_t sub_1AFD7BE4C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1AFFC96E8();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1AFD7BE90()
{
  unint64_t result = qword_1EB819E90;
  if (!qword_1EB819E90)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB819E90);
  }
  return result;
}

uint64_t sub_1AFD7BED0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1AFD7BF2C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1AFD7BF80()
{
  uint64_t v1 = v0;
  BOOL v2 = CGImageGetColorSpace(v0);
  if (!v2) {
    return 0;
  }
  int v3 = v2;
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1E018]), sel_initWithOptions_, 0);
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1E050]), sel_initWithCGImage_, v1);
  uint64_t v6 = *MEMORY[0x1E4F1E2F0];
  sub_1AFDFA2A0(MEMORY[0x1E4FBC860]);
  type metadata accessor for CIImageRepresentationOption(0);
  sub_1AFD7D490((unint64_t *)&unk_1EB811518, 255, type metadata accessor for CIImageRepresentationOption);
  BOOL v7 = (void *)sub_1AFFCAC78();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(v4, sel_PNGRepresentationOfImage_format_colorSpace_options_, v5, v6, v3, v7);

  if (!v8)
  {

    return 0;
  }
  uint64_t v9 = sub_1AFFC9798();

  return v9;
}

uint64_t sub_1AFD7C0FC(void *a1, uint64_t a2, uint64_t a3)
{
  sub_1AFD7D580(0, &qword_1EB811538, MEMORY[0x1E4FBBDE0]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = &v13[-v10];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFD7D4D8();
  sub_1AFFCBE78();
  uint64_t v14 = a2;
  uint64_t v15 = a3;
  v13[15] = 0;
  sub_1AFD7D5E4();
  sub_1AFFCBC58();
  if (!v3)
  {
    LOBYTE(v14) = 1;
    sub_1AFFCBC28();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1AFD7C29C()
{
  if (*v0) {
    return 0x656C616373;
  }
  else {
    return 1635017060;
  }
}

uint64_t sub_1AFD7C2CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1AFD7CB34(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AFD7C2F4(uint64_t a1)
{
  unint64_t v2 = sub_1AFD7D4D8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFD7C330(uint64_t a1)
{
  unint64_t v2 = sub_1AFD7D4D8();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1AFD7C36C(void *a1@<X0>, uint64_t a2@<X8>)
{
  double v6 = sub_1AFD7CC10(a1);
  if (!v2)
  {
    *(void *)a2 = v4;
    *(void *)(a2 + 8) = v5;
    *(double *)(a2 + 16) = v6;
  }
}

uint64_t sub_1AFD7C39C(void *a1)
{
  return sub_1AFD7C0FC(a1, *v1, v1[1]);
}

uint64_t sub_1AFD7C3BC()
{
  return swift_allocObject();
}

uint64_t sub_1AFD7C3CC()
{
  return v0;
}

uint64_t sub_1AFD7C3D4(uint64_t a1, unint64_t a2)
{
  return a1;
}

uint64_t sub_1AFD7C414()
{
  return v0;
}

uint64_t sub_1AFD7C41C()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1AFD7C42C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = swift_allocObject();
  *a1 = result;
  return result;
}

uint64_t sub_1AFD7C460@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = a1;
  a3[1] = a2;
  return sub_1AFD4B0E0(a1, a2);
}

uint64_t type metadata accessor for AttributionSourceAssetService()
{
  return self;
}

uint64_t type metadata accessor for SDSLogoDeserializer()
{
  return self;
}

uint64_t sub_1AFD7C4D4(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SDSLogoDeserializer);
}

uint64_t sub_1AFD7C4EC()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t destroy for DownloadedImage(uint64_t a1)
{
  return sub_1AFD4B504(*(void *)a1, *(void *)(a1 + 8));
}

uint64_t *_s10StocksCore15DownloadedImageVwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_1AFD4B0E0(*a2, v5);
  *a1 = v4;
  a1[1] = v5;
  a1[2] = a2[2];
  return a1;
}

uint64_t *assignWithCopy for DownloadedImage(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_1AFD4B0E0(*a2, v5);
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_1AFD4B504(v6, v7);
  a1[2] = a2[2];
  return a1;
}

uint64_t *assignWithTake for DownloadedImage(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  unint64_t v5 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_1AFD4B504(v4, v5);
  a1[2] = *(void *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for DownloadedImage(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xD && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 13);
  }
  unsigned int v3 = (((*(void *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(void *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for DownloadedImage(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 13;
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2)
    {
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DownloadedImage()
{
  return &type metadata for DownloadedImage;
}

uint64_t sub_1AFD7C6A8(double a1, double a2, double a3)
{
  double v3 = ceil(a1 * a3);
  if ((~*(void *)&v3 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v3 >= 9.22337204e18)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  double v4 = ceil(a2 * a3);
  if ((~*(void *)&v4 & 0x7FF0000000000000) == 0)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v4 <= -9.22337204e18)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v4 < 9.22337204e18) {
    return (uint64_t)v3;
  }
LABEL_13:
  __break(1u);
  return result;
}

int64_t sub_1AFD7C740(CGDataProvider *a1, double a2)
{
  double v3 = CGPDFDocumentCreateWithProvider(a1);
  if (!v3) {
    return 0;
  }
  double v4 = v3;
  unint64_t v5 = CGPDFDocumentGetPage(v3, 1uLL);
  if (!v5)
  {

    return 0;
  }
  uint64_t v6 = v5;
  CGRect BoxRect = CGPDFPageGetBoxRect(v5, kCGPDFMediaBox);
  CGFloat x = BoxRect.origin.x;
  CGFloat y = BoxRect.origin.y;
  double width = BoxRect.size.width;
  double height = BoxRect.size.height;
  int64_t result = (int64_t)CGColorSpaceCreateWithName((CFStringRef)*MEMORY[0x1E4F1DC98]);
  if (result)
  {
    char v12 = (CGColorSpace *)result;
    int64_t result = CGColorSpaceGetNumberOfComponents((CGColorSpaceRef)result);
    int64_t v13 = result + 1;
    if (__OFADD__(result, 1))
    {
      __break(1u);
    }
    else
    {
      int64_t result = sub_1AFD7C6A8(width, height, a2);
      int64_t v14 = result * v13;
      if ((unsigned __int128)(result * (__int128)v13) >> 64 == (result * v13) >> 63)
      {
        BOOL v15 = __OFADD__(v14, 64);
        uint64_t v16 = v14 + 64;
        if (!v15)
        {
          uint64_t v18 = v16 - 1;
          BOOL v17 = v16 < 1;
          uint64_t v19 = v16 + 62;
          if (!v17) {
            uint64_t v19 = v18;
          }
          size_t v20 = v19 & 0xFFFFFFFFFFFFFFC0;
          size_t v21 = sub_1AFD7C6A8(width, height, a2);
          sub_1AFD7C6A8(width, height, a2);
          uint64_t v23 = CGBitmapContextCreate(0, v21, v22, 8uLL, v20, v12, 0x2002u);
          if (v23)
          {
            uint64_t v24 = v23;
            CGContextScaleCTM(v23, a2, a2);
            CGContextSetGrayFillColor(v24, 1.0, 0.0);
            v27.origin.CGFloat x = x;
            v27.origin.CGFloat y = y;
            v27.size.double width = width;
            v27.size.double height = height;
            CGContextFillRect(v24, v27);
            CGContextDrawPDFPage(v24, v6);
            CGImageRef Image = CGBitmapContextCreateImage(v24);

            return (int64_t)Image;
          }

          return 0;
        }
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_17:
    __break(1u);
  }
  __break(1u);
  return result;
}

double sub_1AFD7C8F8(uint64_t a1, unint64_t a2, double a3)
{
  if (qword_1EB811510 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1AFFCA8A8();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EB8114F8);
  unint64_t v7 = sub_1AFFCA888();
  os_log_type_t v8 = sub_1AFFCB478();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl(&dword_1AFD01000, v7, v8, "Rasterizing attribution source logo", v9, 2u);
    MEMORY[0x1B3E8F0D0](v9, -1, -1);
  }

  CFDataRef v10 = (const __CFData *)sub_1AFFC9778();
  uint64_t v11 = CGDataProviderCreateWithCFData(v10);

  if (v11)
  {
    CGImageRef v12 = CGImageCreateWithPNGDataProvider(v11, 0, 0, kCGRenderingIntentDefault);
    if (v12 || (CGImageRef v12 = CGImageCreateWithJPEGDataProvider(v11, 0, 0, kCGRenderingIntentDefault)) != 0)
    {

      a3 = 1.0;
    }
    else
    {
      BOOL v15 = (void *)sub_1AFD7C740(v11, a3);
      if (!v15 || (sub_1AFD7BF80(), v16 >> 60 == 15))
      {
        sub_1AFD7D43C();
        swift_allocError();
        *BOOL v17 = 1;
        swift_willThrow();
        sub_1AFD4B504(a1, a2);

        return a3;
      }

      sub_1AFD4B504(a1, a2);
      uint64_t v11 = (CGDataProvider *)v15;
    }
  }
  else
  {
    sub_1AFD7D43C();
    swift_allocError();
    unsigned char *v13 = 0;
    swift_willThrow();
    sub_1AFD4B504(a1, a2);
  }
  return a3;
}

uint64_t sub_1AFD7CB34(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1635017060 && a2 == 0xE400000000000000;
  if (v2 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C616373 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1AFFCBCE8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

double sub_1AFD7CC10(void *a1)
{
  sub_1AFD7D580(0, (unint64_t *)&unk_1EB810C48, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  os_log_type_t v8 = (char *)&v13 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFD7D4D8();
  sub_1AFFCBE68();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    char v15 = 0;
    sub_1AFD7D52C();
    sub_1AFFCBB58();
    uint64_t v10 = v13;
    unint64_t v11 = v14;
    LOBYTE(v13) = 1;
    sub_1AFD4B0E0(v10, v14);
    sub_1AFFCBB38();
    double v2 = v12;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    sub_1AFD4B504(v10, v11);
  }
  return v2;
}

uint64_t sub_1AFD7CE3C(uint64_t a1, uint64_t a2, double a3)
{
  *(void *)(v3 + 48) = a2;
  *(double *)(v3 + 40) = a3;
  *(void *)(v3 + 32) = a1;
  uint64_t v4 = sub_1AFFC9E18();
  *(void *)(v3 + 56) = v4;
  *(void *)(v3 + 64) = *(void *)(v4 - 8);
  *(void *)(v3 + 72) = swift_task_alloc();
  uint64_t v5 = sub_1AFFC96E8();
  *(void *)(v3 + 80) = v5;
  *(void *)(v3 + 88) = *(void *)(v5 - 8);
  *(void *)(v3 + 96) = swift_task_alloc();
  sub_1AFFC9118();
  *(void *)(v3 + 104) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1AFD7CF8C, 0, 0);
}

uint64_t sub_1AFD7CF8C()
{
  uint64_t v1 = v0;
  double v2 = v0 + 2;
  uint64_t v3 = v0[12];
  uint64_t v4 = v0[11];
  uint64_t v6 = v1[9];
  uint64_t v5 = v1[10];
  uint64_t v7 = v1[8];
  uint64_t v12 = v1[7];
  unint64_t v14 = v2;
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[4];
  sub_1AFD7D3AC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v9, v5);
  sub_1AFFC90C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v8, v12);
  v1[14] = sub_1AFFCA118();
  uint64_t v13 = (uint64_t (*)(void *))((int)*MEMORY[0x1E4FAAA20] + MEMORY[0x1E4FAAA20]);
  uint64_t v10 = (void *)swift_task_alloc();
  v1[15] = v10;
  *uint64_t v10 = v1;
  v10[1] = sub_1AFD7D0E8;
  return v13(v14);
}

uint64_t sub_1AFD7D0E8()
{
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  if (v0) {
    double v2 = sub_1AFD7D324;
  }
  else {
    double v2 = sub_1AFD7D1FC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1AFD7D1FC()
{
  uint64_t v1 = *(void *)(v0 + 128);
  double v4 = sub_1AFD7C8F8(*(void *)(v0 + 16), *(void *)(v0 + 24), *(double *)(v0 + 40));
  uint64_t v5 = *(void **)(v0 + 112);
  if (v1)
  {

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
    return v6();
  }
  else
  {
    uint64_t v8 = v2;
    uint64_t v9 = v3;
    double v10 = v4;

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v0 + 8);
    v12.n128_f64[0] = v10;
    return v11(v8, v9, v12);
  }
}

uint64_t sub_1AFD7D324()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1AFD7D3AC()
{
  if (!qword_1EB818510)
  {
    type metadata accessor for SDSLogoDeserializer();
    sub_1AFD7D490(&qword_1EB818508, v0, (void (*)(uint64_t))type metadata accessor for SDSLogoDeserializer);
    unint64_t v1 = sub_1AFFCA128();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EB818510);
    }
  }
}

unint64_t sub_1AFD7D43C()
{
  unint64_t result = qword_1E9AFA1D8;
  if (!qword_1E9AFA1D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFA1D8);
  }
  return result;
}

uint64_t sub_1AFD7D490(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1AFD7D4D8()
{
  unint64_t result = qword_1EB816B58;
  if (!qword_1EB816B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816B58);
  }
  return result;
}

unint64_t sub_1AFD7D52C()
{
  unint64_t result = qword_1EB816C90;
  if (!qword_1EB816C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816C90);
  }
  return result;
}

void sub_1AFD7D580(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1AFD7D4D8();
    unint64_t v7 = a3(a1, &type metadata for DownloadedImage.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1AFD7D5E4()
{
  unint64_t result = qword_1EB818B88;
  if (!qword_1EB818B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818B88);
  }
  return result;
}

ValueMetadata *type metadata accessor for DownloadedImage.CodingKeys()
{
  return &type metadata for DownloadedImage.CodingKeys;
}

unsigned char *_s10StocksCore15DownloadedImageV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFD7D718);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DownloadedImage.ImageError()
{
  return &type metadata for DownloadedImage.ImageError;
}

unint64_t sub_1AFD7D754()
{
  unint64_t result = qword_1E9AFA1E0;
  if (!qword_1E9AFA1E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFA1E0);
  }
  return result;
}

unint64_t sub_1AFD7D7AC()
{
  unint64_t result = qword_1E9AFA1E8;
  if (!qword_1E9AFA1E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFA1E8);
  }
  return result;
}

unint64_t sub_1AFD7D804()
{
  unint64_t result = qword_1EB8167F8;
  if (!qword_1EB8167F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8167F8);
  }
  return result;
}

unint64_t sub_1AFD7D85C()
{
  unint64_t result = qword_1EB816B60;
  if (!qword_1EB816B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816B60);
  }
  return result;
}

uint64_t sub_1AFD7D8B4()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFD7D908()
{
  return sub_1AFFCAF68();
}

uint64_t sub_1AFD7D920()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFD7D970@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1AFFCBA78();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1AFD7D9C4(void *a1@<X8>)
{
  *a1 = 0x617461646174656DLL;
  a1[1] = 0xE800000000000000;
}

uint64_t sub_1AFD7D9E0()
{
  return 0x617461646174656DLL;
}

uint64_t sub_1AFD7D9F8@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1AFFCBA78();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1AFD7DA50(uint64_t a1)
{
  unint64_t v2 = sub_1AFD7E820();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFD7DA8C(uint64_t a1)
{
  unint64_t v2 = sub_1AFD7E820();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFD7DAC8()
{
  return sub_1AFFC8E38();
}

uint64_t sub_1AFD7DAD0@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_1AFD7DAD8@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *v3;
  uint64_t v6 = *(void *)(*v3 + 16);
  if (v6)
  {
    uint64_t v8 = result;
    uint64_t v9 = (uint64_t *)(v5 + 40);
    while (1)
    {
      uint64_t v11 = *(v9 - 1);
      uint64_t v10 = *v9;
      uint64_t v12 = v9[1];
      long long v15 = *((_OWORD *)v9 + 1);
      uint64_t v13 = v9[4];
      if (v11 == v8 && v10 == a2) {
        break;
      }
      uint64_t result = sub_1AFFCBCE8();
      if (result) {
        goto LABEL_11;
      }
      v9 += 6;
      if (!--v6) {
        goto LABEL_9;
      }
    }
    uint64_t v11 = v8;
    uint64_t v10 = a2;
LABEL_11:
    *(void *)a3 = v11;
    *(void *)(a3 + 8) = v10;
    *(void *)(a3 + 16) = v12;
    *(_OWORD *)(a3 + 24) = v15;
    *(void *)(a3 + 40) = v13;
    sub_1AFFC8E38();
    return sub_1AFFC8E38();
  }
  else
  {
LABEL_9:
    *(_OWORD *)(a3 + 16) = 0u;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)a3 = 0u;
  }
  return result;
}

uint64_t sub_1AFD7DBE8(unsigned __int8 *a1, char *a2)
{
  return sub_1AFDEF91C(*a1, *a2);
}

uint64_t sub_1AFD7DBF4()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFD7DCD8()
{
  sub_1AFFCAF68();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFD7DDA4()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFD7DE84@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFD7F224();
  *a1 = result;
  return result;
}

void sub_1AFD7DEB4(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xED00004449797469;
  uint64_t v3 = 0x746E456B636F7473;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE600000000000000;
      uint64_t v3 = 0x6C6F626D7973;
      goto LABEL_3;
    case 2:
      *a1 = 0x6E6174726F706D69;
      a1[1] = 0xEA00000000006563;
      break;
    case 3:
      *a1 = 0x726F697270;
      a1[1] = 0xE500000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1AFD7DF58()
{
  uint64_t result = 0x746E456B636F7473;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6C6F626D7973;
      break;
    case 2:
      uint64_t result = 0x6E6174726F706D69;
      break;
    case 3:
      uint64_t result = 0x726F697270;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1AFD7DFF0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFD7F224();
  *a1 = result;
  return result;
}

uint64_t sub_1AFD7E018(uint64_t a1)
{
  unint64_t v2 = sub_1AFD7E3E4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFD7E054(uint64_t a1)
{
  unint64_t v2 = sub_1AFD7E3E4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFD7E090()
{
  uint64_t v1 = *v0;
  sub_1AFFC8E38();
  return v1;
}

uint64_t sub_1AFD7E0C0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_1AFFC8E38();
  return v1;
}

double sub_1AFD7E0F0()
{
  return *(double *)(v0 + 32);
}

double sub_1AFD7E0F8()
{
  return *(double *)(v0 + 40);
}

uint64_t sub_1AFD7E100@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v26 = a2;
  sub_1AFD7EB18(0, &qword_1EB818270, (uint64_t (*)(void))sub_1AFD7E3E4, (uint64_t)&type metadata for HeadlineMetadata.StockEntityMetadata.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v23 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFD7E3E4();
  sub_1AFFCBE68();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  char v30 = 0;
  uint64_t v10 = sub_1AFFCBB18();
  uint64_t v12 = v11;
  char v29 = 1;
  sub_1AFFC8E38();
  uint64_t v13 = sub_1AFFCBAA8();
  uint64_t v15 = v14;
  uint64_t v24 = v13;
  char v28 = 2;
  sub_1AFFC8E38();
  uint64_t v25 = v15;
  sub_1AFFCBB38();
  uint64_t v17 = v16;
  char v27 = 3;
  sub_1AFFCBB38();
  uint64_t v20 = v19;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  uint64_t v22 = v25;
  size_t v21 = v26;
  *uint64_t v26 = v10;
  v21[1] = v12;
  void v21[2] = v24;
  v21[3] = v22;
  v21[4] = v17;
  v21[5] = v20;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1AFD7E3E4()
{
  unint64_t result = qword_1EB816F50;
  if (!qword_1EB816F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816F50);
  }
  return result;
}

uint64_t sub_1AFD7E438(void *a1)
{
  sub_1AFD7EB18(0, &qword_1E9AFA1F0, (uint64_t (*)(void))sub_1AFD7E3E4, (uint64_t)&type metadata for HeadlineMetadata.StockEntityMetadata.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v11 - v6;
  uint64_t v8 = *(void *)(v1 + 16);
  v11[1] = *(void *)(v1 + 24);
  v11[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFD7E3E4();
  sub_1AFFCBE78();
  char v15 = 0;
  uint64_t v9 = v11[3];
  sub_1AFFCBC08();
  if (!v9)
  {
    char v14 = 1;
    sub_1AFFCBB98();
    char v13 = 2;
    sub_1AFFCBC28();
    char v12 = 3;
    sub_1AFFCBC28();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1AFD7E63C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1AFD7E100(a1, a2);
}

uint64_t sub_1AFD7E654(void *a1)
{
  return sub_1AFD7E438(a1);
}

uint64_t sub_1AFD7E66C(void *a1)
{
  sub_1AFD7EB18(0, &qword_1E9AFA1F8, (uint64_t (*)(void))sub_1AFD7E820, (uint64_t)&type metadata for HeadlineMetadata.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v10 - v6;
  uint64_t v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFD7E820();
  sub_1AFFCBE78();
  v10[3] = v8;
  sub_1AFD7E874();
  sub_1AFD7EB80(&qword_1E9AFA200, (void (*)(void))sub_1AFD7E8CC);
  sub_1AFFCBC58();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1AFD7E820()
{
  unint64_t result = qword_1EB816F70;
  if (!qword_1EB816F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816F70);
  }
  return result;
}

void sub_1AFD7E874()
{
  if (!qword_1EB817F68)
  {
    unint64_t v0 = sub_1AFFCB288();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB817F68);
    }
  }
}

unint64_t sub_1AFD7E8CC()
{
  unint64_t result = qword_1E9AFA208;
  if (!qword_1E9AFA208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFA208);
  }
  return result;
}

uint64_t sub_1AFD7E920@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  char v12 = a2;
  sub_1AFD7EB18(0, &qword_1EB818278, (uint64_t (*)(void))sub_1AFD7E820, (uint64_t)&type metadata for HeadlineMetadata.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v11 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFD7E820();
  sub_1AFFCBE68();
  if (!v2)
  {
    uint64_t v9 = v12;
    sub_1AFD7E874();
    sub_1AFD7EB80(&qword_1EB817F70, (void (*)(void))sub_1AFD7EBEC);
    sub_1AFFCBB58();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *uint64_t v9 = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1AFD7EB18(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1AFD7EB80(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1AFD7E874();
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1AFD7EBEC()
{
  unint64_t result = qword_1EB816F68;
  if (!qword_1EB816F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816F68);
  }
  return result;
}

uint64_t sub_1AFD7EC40@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1AFD7E920(a1, a2);
}

uint64_t sub_1AFD7EC58(void *a1)
{
  return sub_1AFD7E66C(a1);
}

ValueMetadata *type metadata accessor for HeadlineMetadata()
{
  return &type metadata for HeadlineMetadata;
}

uint64_t initializeWithCopy for HeadlineMetadata.StockEntityMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  return a1;
}

void *assignWithCopy for HeadlineMetadata.StockEntityMetadata(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  return a1;
}

uint64_t assignWithTake for HeadlineMetadata.StockEntityMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for MultiResolutionImage(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MultiResolutionImage(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HeadlineMetadata.StockEntityMetadata()
{
  return &type metadata for HeadlineMetadata.StockEntityMetadata;
}

unsigned char *storeEnumTagSinglePayload for HeadlineMetadata.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1AFD7EED8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for HeadlineMetadata.CodingKeys()
{
  return &type metadata for HeadlineMetadata.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for HeadlineMetadata.StockEntityMetadata.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFD7EFDCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HeadlineMetadata.StockEntityMetadata.CodingKeys()
{
  return &type metadata for HeadlineMetadata.StockEntityMetadata.CodingKeys;
}

unint64_t sub_1AFD7F018()
{
  unint64_t result = qword_1E9AFA210;
  if (!qword_1E9AFA210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFA210);
  }
  return result;
}

unint64_t sub_1AFD7F070()
{
  unint64_t result = qword_1E9AFA218;
  if (!qword_1E9AFA218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFA218);
  }
  return result;
}

unint64_t sub_1AFD7F0C8()
{
  unint64_t result = qword_1EB816F80;
  if (!qword_1EB816F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816F80);
  }
  return result;
}

unint64_t sub_1AFD7F120()
{
  unint64_t result = qword_1EB816F78;
  if (!qword_1EB816F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816F78);
  }
  return result;
}

unint64_t sub_1AFD7F178()
{
  unint64_t result = qword_1EB816F60;
  if (!qword_1EB816F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816F60);
  }
  return result;
}

unint64_t sub_1AFD7F1D0()
{
  unint64_t result = qword_1EB816F58;
  if (!qword_1EB816F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816F58);
  }
  return result;
}

uint64_t sub_1AFD7F224()
{
  unint64_t v0 = sub_1AFFCBA78();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

unsigned char *storeEnumTagSinglePayload for YahooEndpoint(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFD7F33CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for YahooEndpoint()
{
  return &type metadata for YahooEndpoint;
}

unint64_t sub_1AFD7F378()
{
  unint64_t result = qword_1E9AFA220;
  if (!qword_1E9AFA220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFA220);
  }
  return result;
}

uint64_t sub_1AFD7F3CC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1AFD7F3E0()
{
  CFTimeInterval v0 = CACurrentMediaTime();
  type metadata accessor for ForYouConfigRecord(0);
  sub_1AFFCA7C8();
  *(CFTimeInterval *)(swift_allocObject() + 16) = v0;
  uint64_t v1 = (void *)sub_1AFFCA5E8();
  sub_1AFFCA678();
  swift_release();
  swift_release();

  unint64_t v2 = (void *)sub_1AFFCA5E8();
  sub_1AFFCA6B8();
  swift_release();

  sub_1AFFCA628();
  swift_release();
  int v3 = (void *)sub_1AFFCA5E8();
  sub_1AFFCA728();
  swift_release();

  sub_1AFFCA7C8();
  sub_1AFFC8E48();
  unsigned int v4 = (void *)sub_1AFFCA5E8();
  sub_1AFFCA668();
  swift_release();
  swift_release();

  uint64_t v5 = (void *)sub_1AFFCA5E8();
  sub_1AFFCA678();
  swift_release();

  unsigned int v6 = (void *)sub_1AFFCA5E8();
  sub_1AFFCA6B8();
  swift_release();

  sub_1AFFCA628();
  swift_release();
  uint64_t v7 = (void *)sub_1AFFCA5E8();
  sub_1AFFCA728();
  swift_release();

  uint64_t v8 = (void *)sub_1AFFCA5E8();
  uint64_t v9 = sub_1AFFCA5D8();
  swift_release();
  swift_release();

  return v9;
}

double sub_1AFD7F69C@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  *a1 = xmmword_1AFFD3850;
  return result;
}

uint64_t sub_1AFD7F6AC(uint64_t *a1)
{
  uint64_t v1 = a1[2];
  unint64_t v2 = a1[3];
  if (v2 >> 60 == 15)
  {
    unint64_t v3 = a1[1];
    if (v3 >> 60 == 15)
    {
      sub_1AFD80510();
      swift_allocError();
      *unsigned int v4 = 0;
      v4[1] = 0;
      return swift_willThrow();
    }
    sub_1AFD4B0E0(*a1, v3);
  }
  sub_1AFD80664(0, &qword_1EB811120, MEMORY[0x1E4F277C0], MEMORY[0x1E4FAB088]);
  swift_allocObject();
  sub_1AFD80564(v1, v2);
  return sub_1AFFCA6F8();
}

uint64_t sub_1AFD7F7A8(void *a1)
{
  sub_1AFD2C4F4();
  unint64_t v2 = (void *)sub_1AFFCB638();
  sub_1AFFCB478();
  sub_1AFFCA878();

  unint64_t v3 = a1 + 2;
  uint64_t v5 = a1[5];
  uint64_t v4 = a1[6];
  __swift_project_boxed_opaque_existential_1(v3, v5);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v5, v4);
}

uint64_t sub_1AFD7F850@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>, double a3@<D0>)
{
  uint64_t v6 = sub_1AFFCAED8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFD2CD48();
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1AFFD0610;
  CFTimeInterval v11 = CACurrentMediaTime();
  uint64_t v12 = MEMORY[0x1E4FBB460];
  *(void *)(v10 + 56) = MEMORY[0x1E4FBB3D0];
  *(void *)(v10 + 64) = v12;
  *(CFTimeInterval *)(v10 + 32) = (v11 - a3) * 1000.0;
  uint64_t v13 = *a1;
  uint64_t v14 = a1[1];
  *(void *)(v10 + 96) = MEMORY[0x1E4FBB1A0];
  *(void *)(v10 + 104) = sub_1AFD2CE00();
  *(void *)(v10 + 72) = v13;
  *(void *)(v10 + 80) = v14;
  sub_1AFD2C4F4();
  sub_1AFFC8E38();
  char v15 = (void *)sub_1AFFCB638();
  sub_1AFFCB478();
  sub_1AFFCA878();
  swift_bridgeObjectRelease();

  uint64_t v16 = (uint64_t *)((char *)a1 + *(int *)(type metadata accessor for ForYouConfigRecord(0) + 28));
  unint64_t v17 = v16[1];
  uint64_t v18 = HIBYTE(v17) & 0xF;
  if ((v17 & 0x2000000000000000) == 0) {
    uint64_t v18 = *v16 & 0xFFFFFFFFFFFFLL;
  }
  if (!v18)
  {
    sub_1AFFCB468();
    char v27 = (void *)sub_1AFFCB638();
    sub_1AFFCA878();

    sub_1AFD80510();
    swift_allocError();
    *char v28 = xmmword_1AFFD3860;
    return swift_willThrow();
  }
  sub_1AFFCAEC8();
  uint64_t v19 = sub_1AFFCAEA8();
  unint64_t v21 = v20;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (v21 >> 60 == 15)
  {
    sub_1AFFCB468();
    uint64_t v23 = (void *)sub_1AFFCB638();
    sub_1AFFCA878();

    uint64_t v25 = *v16;
    uint64_t v24 = v16[1];
    sub_1AFD80510();
    swift_allocError();
    *uint64_t v26 = v25;
    v26[1] = v24;
    sub_1AFFC8E38();
    return swift_willThrow();
  }
  *a2 = v19;
  a2[1] = v21;
  return result;
}

void sub_1AFD7FB48()
{
  sub_1AFFCB468();
  sub_1AFD2CD48();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1AFFD05F0;
  sub_1AFD2CDB0(0, (unint64_t *)&qword_1EB81A110);
  sub_1AFFCB928();
  *(void *)(v0 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v0 + 64) = sub_1AFD2CE00();
  *(void *)(v0 + 32) = 0;
  *(void *)(v0 + 40) = 0xE000000000000000;
  sub_1AFD2C4F4();
  uint64_t v1 = (void *)sub_1AFFCB638();
  sub_1AFFCA878();
  swift_bridgeObjectRelease();
}

uint64_t sub_1AFD7FC4C(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 1344);
  sub_1AFFC9C48();
  sub_1AFFC9C28();
  if (qword_1EB8110B8 != -1) {
    swift_once();
  }
  objc_msgSend(self, sel_enabledForCurrentLevel_, v3);
  char v4 = sub_1AFFC9C38();
  swift_release();
  if (v4)
  {
    CFTimeInterval v5 = CACurrentMediaTime();
    sub_1AFD2C4F4();
    uint64_t v6 = (void *)sub_1AFFCB638();
    sub_1AFFCB478();
    sub_1AFFCA878();

    uint64_t v7 = a2[10];
    uint64_t v8 = a2[11];
    __swift_project_boxed_opaque_existential_1(a2 + 7, v7);
    __swift_project_boxed_opaque_existential_1(a2 + 12, a2[15]);
    id v9 = sub_1AFE6EFD8(0xD000000000000018, 0x80000001AFFEFF90, 0xD000000000000018, 0x80000001AFFEFFB0, 0, 0);
    (*(void (**)(id, uint64_t, uint64_t))(v8 + 8))(v9, v7, v8);

    *(CFTimeInterval *)(swift_allocObject() + 16) = v5;
    uint64_t v10 = (void *)sub_1AFFCA5E8();
    uint64_t v11 = sub_1AFFCA668();
    swift_release();
    swift_release();

    return v11;
  }
  else
  {
    sub_1AFD2C4F4();
    uint64_t v13 = (void *)sub_1AFFCB638();
    sub_1AFFCB478();
    sub_1AFFCA878();

    sub_1AFD80510();
    swift_allocError();
    *uint64_t v14 = xmmword_1AFFD3870;
    return swift_willThrow();
  }
}

uint64_t sub_1AFD7FED4(uint64_t *a1, double a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = a1[1];
  sub_1AFD2CD48();
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1AFFD05F0;
  CFTimeInterval v6 = CACurrentMediaTime();
  uint64_t v7 = MEMORY[0x1E4FBB460];
  *(void *)(v5 + 56) = MEMORY[0x1E4FBB3D0];
  *(void *)(v5 + 64) = v7;
  *(CFTimeInterval *)(v5 + 32) = (v6 - a2) * 1000.0;
  sub_1AFD2C4F4();
  uint64_t v8 = (void *)sub_1AFFCB638();
  sub_1AFFCB478();
  sub_1AFFCA878();
  swift_bridgeObjectRelease();

  sub_1AFD80664(0, (unint64_t *)&qword_1EB819BD8, (uint64_t)&type metadata for RemoteConfigurationResult, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  sub_1AFD4B0E0(v3, v4);
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  return sub_1AFFCA6F8();
}

uint64_t sub_1AFD80034@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  unint64_t v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return sub_1AFD4B0E0(v3, v2);
}

void sub_1AFD80068()
{
  sub_1AFD2CD48();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1AFFD05F0;
  sub_1AFD2CDB0(0, (unint64_t *)&qword_1EB81A110);
  sub_1AFFCB928();
  *(void *)(v0 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v0 + 64) = sub_1AFD2CE00();
  *(void *)(v0 + 32) = 0;
  *(void *)(v0 + 40) = 0xE000000000000000;
  sub_1AFD2C4F4();
  uint64_t v1 = (void *)sub_1AFFCB638();
  sub_1AFFCB478();
  sub_1AFFCA878();
  swift_bridgeObjectRelease();
}

uint64_t sub_1AFD80168()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 144);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ForYouFeedConfigService()
{
  return self;
}

uint64_t sub_1AFD801E4()
{
  sub_1AFD80488();
  sub_1AFFCA7C8();
  uint64_t v0 = (void *)sub_1AFFCA5E8();
  uint64_t v1 = sub_1AFFCA668();
  swift_release();

  return v1;
}

void *sub_1AFD80278(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4, long long *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v31 = a7;
  uint64_t v32 = a9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v30);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a7 - 8) + 32))(boxed_opaque_existential_1, a2, a7);
  uint64_t v28 = a8;
  uint64_t v29 = a10;
  uint64_t v18 = __swift_allocate_boxed_opaque_existential_1(v27);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a8 - 8) + 32))(v18, a3, a8);
  uint64_t v19 = (void *)swift_allocObject();
  uint64_t v20 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v27, v28);
  double v21 = MEMORY[0x1F4188790](v20);
  uint64_t v23 = (uint64_t *)((char *)v27 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v24 + 16))(v23, v21);
  uint64_t v25 = *v23;
  v19[15] = type metadata accessor for RemoteConfigurationSettingsFactory();
  v19[16] = &off_1F0878D38;
  v19[12] = v25;
  sub_1AFD80454(a1, (uint64_t)(v19 + 2));
  sub_1AFD80454(&v30, (uint64_t)(v19 + 7));
  v19[17] = a4;
  sub_1AFD80454(a5, (uint64_t)(v19 + 18));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  return v19;
}

uint64_t sub_1AFD80454(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_1AFD8046C()
{
  return sub_1AFD7F3E0();
}

void sub_1AFD80488()
{
  if (!qword_1EB810C70)
  {
    sub_1AFD80664(255, &qword_1EB810C68, MEMORY[0x1E4F277C0], MEMORY[0x1E4FBB718]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB810C70);
    }
  }
}

unint64_t sub_1AFD80510()
{
  unint64_t result = qword_1EB810F80;
  if (!qword_1EB810F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB810F80);
  }
  return result;
}

uint64_t sub_1AFD80564(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1AFD4B0E0(a1, a2);
  }
  return a1;
}

uint64_t sub_1AFD80578()
{
  return sub_1AFD7F7A8(v0);
}

uint64_t sub_1AFD80594()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1AFD805A4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1AFD7F850(a1, a2, *(double *)(v2 + 16));
}

uint64_t sub_1AFD805C0()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[22];
  __swift_project_boxed_opaque_existential_1(v0 + 18, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 40))(v1, v2);
}

uint64_t sub_1AFD8061C(uint64_t a1)
{
  return sub_1AFD7FC4C(a1, v1);
}

uint64_t sub_1AFD80638()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1AFD80648(uint64_t *a1)
{
  return sub_1AFD7FED4(a1, *(double *)(v1 + 16));
}

void sub_1AFD80664(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t destroy for ForYouFeedConfigService.Errors(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s10StocksCore23ForYouFeedConfigServiceC6ErrorsOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    sub_1AFFC8E38();
  }
  return a1;
}

void *assignWithCopy for ForYouFeedConfigService.Errors(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      sub_1AFFC8E38();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ForYouFeedConfigService.Errors(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ForYouFeedConfigService.Errors(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFFA && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483643);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 4;
  if (v4 >= 6) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ForYouFeedConfigService.Errors(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFB)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483643;
    if (a3 >= 0x7FFFFFFB) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFB) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 4;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ForYouFeedConfigService.Errors()
{
  return &type metadata for ForYouFeedConfigService.Errors;
}

double sub_1AFD808D8@<D0>(_OWORD *a1@<X8>)
{
  return sub_1AFD7F69C(a1);
}

uint64_t sub_1AFD808F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = sub_1AFFCABC8();
  uint64_t v22 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1AFFCAC18();
  uint64_t v12 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  *(void *)(v15 + 24) = a2;
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = a6;
  v16[3] = sub_1AFD8173C;
  v16[4] = v15;
  aBlock[4] = sub_1AFD817B4;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1AFDB5104;
  aBlock[3] = &block_descriptor_2;
  unint64_t v17 = _Block_copy(aBlock);
  sub_1AFFC8E48();
  sub_1AFFC8E38();
  sub_1AFFCABE8();
  uint64_t v23 = MEMORY[0x1E4FBC860];
  sub_1AFD817C0((unint64_t *)&unk_1EB819C20, MEMORY[0x1E4FBCB00]);
  uint64_t v18 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCB00];
  sub_1AFD81808(0, (unint64_t *)&qword_1EB819DA0, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1AFD81630((unint64_t *)&qword_1EB819DB0, (unint64_t *)&qword_1EB819DA0, v18);
  sub_1AFFCB738();
  MEMORY[0x1B3E8D920](0, v14, v11, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v11, v9);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v21);
  return swift_release();
}

uint64_t sub_1AFD80C14(uint64_t a1, uint64_t (*a2)(uint64_t *))
{
  uint64_t v3 = a1;
  return a2(&v3);
}

uint64_t sub_1AFD80C4C(uint64_t *a1, void (*a2)(void *))
{
  uint64_t v2 = a2;
  int64_t v4 = a1[2];
  if (!v4)
  {
    sub_1AFFC8E38();
    uint64_t v39 = (void *)MEMORY[0x1E4FBC868];
LABEL_36:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v2(v39);
    return swift_bridgeObjectRelease();
  }
  *(void *)&v93[0] = MEMORY[0x1E4FBC860];
  sub_1AFD9DAD0(0, v4, 0);
  uint64_t v5 = 0;
  uint64_t v6 = *(void *)&v93[0];
  uint64_t v84 = a1;
  char v85 = a1 + 4;
  int64_t v86 = v4;
  do
  {
    uint64_t v7 = v5;
    uint64_t v8 = &v85[2 * v5];
    uint64_t v90 = v7 + 1;
    uint64_t v91 = v6;
    uint64_t v9 = v8[1];
    uint64_t v88 = *v8;
    swift_bridgeObjectRetain_n();
    uint32_t v10 = arc4random_uniform(0xFu);
    if (v10 <= 5) {
      int64_t v11 = 5;
    }
    else {
      int64_t v11 = v10;
    }
    *(void *)&long long v96 = MEMORY[0x1E4FBC860];
    sub_1AFD9DA10(0, v11, 0);
    uint64_t v12 = v96;
    do
    {
      unint64_t v13 = sub_1AFFCAF78();
      if ((v13 & 0x8000000000000000) != 0 || HIDWORD(v13)) {
        goto LABEL_39;
      }
      arc4random_uniform(v13);
      sub_1AFFCAF98();
      uint64_t v14 = sub_1AFFCB028();
      uint64_t v16 = v15;
      *(void *)&long long v96 = v12;
      unint64_t v18 = *(void *)(v12 + 16);
      unint64_t v17 = *(void *)(v12 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_1AFD9DA10(v17 > 1, v18 + 1, 1);
        uint64_t v12 = v96;
      }
      *(void *)(v12 + 16) = v18 + 1;
      uint64_t v19 = v12 + 16 * v18;
      *(void *)(v19 + 32) = v14;
      *(void *)(v19 + 40) = v16;
      --v11;
    }
    while (v11);
    *(void *)&long long v96 = v12;
    sub_1AFD3ABD0();
    sub_1AFD817C0((unint64_t *)&qword_1EB819DD0, (void (*)(uint64_t))sub_1AFD3ABD0);
    uint64_t v20 = sub_1AFFCAD88();
    uint64_t v22 = v21;
    swift_bridgeObjectRelease();
    LOBYTE(v95) = 0;
    sub_1AFD789F8(v88, v9, v20, v22, 0x51414453414ELL, 0xE600000000000000, (char *)&v95, 0, (uint64_t)&v96, 0, 0, 0, 0, 0, 0, 0);
    swift_bridgeObjectRelease();
    uint64_t v6 = v91;
    *(void *)&v93[0] = v91;
    unint64_t v24 = *(void *)(v91 + 16);
    unint64_t v23 = *(void *)(v91 + 24);
    if (v24 >= v23 >> 1)
    {
      sub_1AFD9DAD0(v23 > 1, v24 + 1, 1);
      uint64_t v6 = *(void *)&v93[0];
    }
    *(void *)(v6 + 16) = v24 + 1;
    uint64_t v25 = v6 + 136 * v24;
    *(_OWORD *)(v25 + 32) = v96;
    long long v26 = v97;
    long long v27 = v98;
    long long v28 = v100;
    *(_OWORD *)(v25 + 80) = v99;
    *(_OWORD *)(v25 + 96) = v28;
    *(_OWORD *)(v25 + 48) = v26;
    *(_OWORD *)(v25 + 64) = v27;
    long long v29 = v101;
    long long v30 = v102;
    long long v31 = v103;
    *(void *)(v25 + 160) = v104;
    *(_OWORD *)(v25 + 128) = v30;
    *(_OWORD *)(v25 + 144) = v31;
    *(_OWORD *)(v25 + 112) = v29;
    int64_t v32 = v86;
    uint64_t v5 = v90;
  }
  while (v90 != v86);
  uint64_t v33 = *(void *)(v6 + 16);
  if (!v33)
  {
    sub_1AFFC8E38();
    uint64_t v39 = (void *)MEMORY[0x1E4FBC868];
LABEL_35:
    uint64_t v2 = a2;
    goto LABEL_36;
  }
  uint64_t v34 = v84[4];
  uint64_t v35 = v84[5];
  swift_bridgeObjectRetain_n();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  unint64_t v36 = 0;
  uint64_t v87 = v33 - 1;
  int64_t v89 = v32 - 1;
  unsigned __int8 v37 = v84 + 7;
  uint64_t v38 = v35;
  uint64_t v39 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v40 = 32;
  while (1)
  {
    uint64_t v92 = v40;
    long long v96 = *(_OWORD *)(v6 + v40);
    long long v41 = *(_OWORD *)(v6 + v40 + 16);
    long long v42 = *(_OWORD *)(v6 + v40 + 32);
    long long v43 = *(_OWORD *)(v6 + v40 + 64);
    long long v99 = *(_OWORD *)(v6 + v40 + 48);
    long long v100 = v43;
    long long v97 = v41;
    long long v98 = v42;
    long long v44 = *(_OWORD *)(v6 + v40 + 80);
    long long v45 = *(_OWORD *)(v6 + v40 + 96);
    long long v46 = *(_OWORD *)(v6 + v40 + 112);
    uint64_t v104 = *(void *)(v6 + v40 + 128);
    long long v102 = v45;
    long long v103 = v46;
    long long v101 = v44;
    sub_1AFD76370((uint64_t)&v96);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v95 = v39;
    uint64_t v48 = v34;
    uint64_t v49 = v38;
    unint64_t v51 = sub_1AFD79CC8(v34, v38);
    uint64_t v52 = v39[2];
    BOOL v53 = (v50 & 1) == 0;
    uint64_t v54 = v52 + v53;
    if (__OFADD__(v52, v53)) {
      break;
    }
    char v55 = v50;
    if (v39[3] >= v54)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if ((v50 & 1) == 0) {
          goto LABEL_26;
        }
      }
      else
      {
        sub_1AFEB8788();
        if ((v55 & 1) == 0) {
          goto LABEL_26;
        }
      }
    }
    else
    {
      sub_1AFEB2B3C(v54, isUniquelyReferenced_nonNull_native);
      unint64_t v56 = sub_1AFD79CC8(v48, v49);
      if ((v55 & 1) != (v57 & 1)) {
        goto LABEL_40;
      }
      unint64_t v51 = v56;
      if ((v55 & 1) == 0)
      {
LABEL_26:
        uint64_t v39 = v95;
        v95[(v51 >> 6) + 8] |= 1 << v51;
        uint64_t v71 = (uint64_t *)(v39[6] + 16 * v51);
        *uint64_t v71 = v48;
        v71[1] = v49;
        uint64_t v72 = v39[7] + 136 * v51;
        uint64_t v73 = v104;
        long long v75 = v102;
        long long v74 = v103;
        *(_OWORD *)(v72 + 80) = v101;
        *(_OWORD *)(v72 + 96) = v75;
        *(_OWORD *)(v72 + 112) = v74;
        *(void *)(v72 + 128) = v73;
        long long v77 = v99;
        long long v76 = v100;
        long long v78 = v98;
        *(_OWORD *)(v72 + 16) = v97;
        *(_OWORD *)(v72 + 32) = v78;
        *(_OWORD *)(v72 + 48) = v77;
        *(_OWORD *)(v72 + 64) = v76;
        *(_OWORD *)uint64_t v72 = v96;
        uint64_t v79 = v39[2];
        BOOL v80 = __OFADD__(v79, 1);
        uint64_t v81 = v79 + 1;
        if (v80) {
          goto LABEL_38;
        }
        void v39[2] = v81;
        sub_1AFFC8E38();
        goto LABEL_28;
      }
    }
    uint64_t v39 = v95;
    uint64_t v58 = v95[7] + 136 * v51;
    v93[0] = *(_OWORD *)v58;
    long long v59 = *(_OWORD *)(v58 + 64);
    long long v61 = *(_OWORD *)(v58 + 16);
    long long v60 = *(_OWORD *)(v58 + 32);
    v93[3] = *(_OWORD *)(v58 + 48);
    v93[4] = v59;
    v93[1] = v61;
    v93[2] = v60;
    long long v63 = *(_OWORD *)(v58 + 96);
    long long v62 = *(_OWORD *)(v58 + 112);
    long long v64 = *(_OWORD *)(v58 + 80);
    uint64_t v94 = *(void *)(v58 + 128);
    v93[6] = v63;
    v93[7] = v62;
    v93[5] = v64;
    sub_1AFD76408((uint64_t)v93);
    *(_OWORD *)uint64_t v58 = v96;
    long long v65 = v100;
    long long v67 = v97;
    long long v66 = v98;
    *(_OWORD *)(v58 + 48) = v99;
    *(_OWORD *)(v58 + 64) = v65;
    *(_OWORD *)(v58 + 16) = v67;
    *(_OWORD *)(v58 + 32) = v66;
    long long v69 = v102;
    long long v68 = v103;
    long long v70 = v101;
    *(void *)(v58 + 128) = v104;
    *(_OWORD *)(v58 + 96) = v69;
    *(_OWORD *)(v58 + 112) = v68;
    *(_OWORD *)(v58 + 80) = v70;
LABEL_28:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v89 == v36 || v87 == v36) {
      goto LABEL_32;
    }
    uint64_t v34 = *(v37 - 1);
    uint64_t v38 = *v37;
    sub_1AFFC8E38();
    uint64_t v40 = v92 + 136;
    ++v36;
    v37 += 2;
    if (v36 >= *(void *)(v6 + 16))
    {
      __break(1u);
LABEL_32:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_35;
    }
  }
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  sub_1AFFCB998();
  __break(1u);
LABEL_40:
  uint64_t result = sub_1AFFCBD68();
  __break(1u);
  return result;
}

uint64_t sub_1AFD812C8()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StubStockMetadataSevice()
{
  return self;
}

uint64_t sub_1AFD81324()
{
  uint64_t v0 = sub_1AFFCB4A8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1AFFCB488();
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = sub_1AFFCAC18();
  MEMORY[0x1F4188790](v5 - 8);
  v10[1] = sub_1AFD67528();
  sub_1AFFCABF8();
  uint64_t v12 = MEMORY[0x1E4FBC860];
  sub_1AFD817C0(&qword_1EB819E60, MEMORY[0x1E4FBCC10]);
  uint64_t v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCC10];
  sub_1AFD81808(0, &qword_1EB819DE8, MEMORY[0x1E4FBCC10], MEMORY[0x1E4FBB320]);
  sub_1AFD81630((unint64_t *)&qword_1EB819DF0, &qword_1EB819DE8, v6);
  sub_1AFFCB738();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FBCC58], v0);
  uint64_t v7 = sub_1AFFCB4D8();
  uint64_t v8 = v11;
  *(void *)(v11 + 16) = v7;
  return v8;
}

uint64_t sub_1AFD815A0()
{
  return sub_1AFFCA758();
}

uint64_t sub_1AFD81630(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1AFD81808(255, a2, a3, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AFD81694(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AFD808F0(a1, a2, a3, a4, *(void *)(v4 + 16), *(void *)(v4 + 24));
}

void sub_1AFD8169C()
{
  if (!qword_1EB817EA0)
  {
    unint64_t v0 = sub_1AFFCAD18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB817EA0);
    }
  }
}

uint64_t sub_1AFD81704()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1AFD8173C(uint64_t a1)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  uint64_t v4 = a1;
  return v2(&v4);
}

uint64_t sub_1AFD81774()
{
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1AFD817B4()
{
  return sub_1AFD80C4C(*(uint64_t **)(v0 + 16), *(void (**)(void *))(v0 + 24));
}

uint64_t sub_1AFD817C0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1AFD81808(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1AFD81870()
{
  unint64_t result = qword_1E9AFA230[0];
  if (!qword_1E9AFA230[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9AFA230);
  }
  return result;
}

uint64_t sub_1AFD818C4(uint64_t a1)
{
  v1[9] = a1;
  uint64_t v2 = sub_1AFFC9528();
  v1[10] = v2;
  v1[11] = *(void *)(v2 - 8);
  v1[12] = swift_task_alloc();
  sub_1AFFC9A78();
  v1[13] = swift_task_alloc();
  uint64_t v3 = sub_1AFFCAE58();
  v1[14] = v3;
  v1[15] = *(void *)(v3 - 8);
  v1[16] = swift_task_alloc();
  v1[17] = swift_task_alloc();
  sub_1AFFC9548();
  v1[18] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1AFD81A48, 0, 0);
}

uint64_t sub_1AFD81A48()
{
  sub_1AFFC8998();
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[19] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1AFD81B10;
  return sub_1AFF9E8A0(v1, v2);
}

uint64_t sub_1AFD81B10(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 160) = a1;
  *(void *)(v3 + 168) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_1AFD821E4;
  }
  else {
    uint64_t v4 = sub_1AFD81C24;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1AFD81C24()
{
  uint64_t v1 = v0[20];
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v4 = (char *)(v0[20] + 73);
    do
    {
      uint64_t v53 = *(void *)(v4 - 41);
      uint64_t v5 = *(void *)(v4 - 33);
      uint64_t v6 = *(void *)(v4 - 25);
      uint64_t v7 = *(void *)(v4 - 17);
      uint64_t v8 = *(void *)(v4 - 9);
      char v51 = *(v4 - 1);
      char v49 = *v4;
      if (v7 == sub_1AFFCAE98() && v8 == v9)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v11 = v3;
        char v12 = sub_1AFFCBCE8();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        swift_bridgeObjectRelease();
        if (v12)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v3 = v11;
        }
        else
        {
          uint64_t v13 = v11;
          uint64_t v55 = v11;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1AFD9DAB0(0, *(void *)(v11 + 16) + 1, 1);
            uint64_t v13 = v11;
          }
          unint64_t v15 = *(void *)(v13 + 16);
          unint64_t v14 = *(void *)(v13 + 24);
          if (v15 >= v14 >> 1)
          {
            sub_1AFD9DAB0(v14 > 1, v15 + 1, 1);
            uint64_t v13 = v55;
          }
          *(void *)(v13 + 16) = v15 + 1;
          uint64_t v16 = v13 + 48 * v15;
          *(void *)(v16 + 32) = v53;
          *(void *)(v16 + 40) = v5;
          *(void *)(v16 + 48) = v6;
          *(void *)(v16 + 56) = v7;
          *(void *)(v16 + 64) = v8;
          *(unsigned char *)(v16 + 72) = v51;
          *(unsigned char *)(v16 + 73) = v49;
          uint64_t v3 = v13;
        }
      }
      v4 += 48;
      --v2;
    }
    while (v2);
  }
  swift_bridgeObjectRelease();
  int64_t v17 = *(void *)(v3 + 16);
  if (v17)
  {
    uint64_t v18 = v0[15];
    uint64_t v19 = v0[11];
    uint64_t v56 = MEMORY[0x1E4FBC860];
    sub_1AFD9DA90(0, v17, 0);
    sub_1AFD823E8();
    unsigned int v47 = *MEMORY[0x1E4F275D0];
    long long v46 = (void (**)(uint64_t, void, uint64_t))(v19 + 104);
    long long v44 = (void (**)(uint64_t, uint64_t))(v18 + 8);
    long long v45 = (void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16);
    uint64_t v20 = (uint64_t *)(v3 + 64);
    while (1)
    {
      int64_t v52 = v17;
      uint64_t v21 = v0[18];
      uint64_t v22 = v0[12];
      uint64_t v23 = v0[10];
      uint64_t v48 = *(v20 - 4);
      uint64_t v50 = *(v20 - 3);
      uint64_t v24 = *(v20 - 1);
      uint64_t v25 = *v20;
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFCADF8();
      sub_1AFFC9A28();
      (*v46)(v22, v47, v23);
      sub_1AFFC9558();
      uint64_t v26 = MEMORY[0x1B3E8AFE0](v21);
      uint64_t v54 = v24;
      if (v24 == sub_1AFFCAE98() && v25 == v27) {
        break;
      }
      char v28 = sub_1AFFCBCE8();
      swift_bridgeObjectRetain_n();
      swift_retain_n();
      swift_bridgeObjectRelease();
      if (v28) {
        goto LABEL_22;
      }
      uint64_t v35 = v48;
      uint64_t v37 = v50;
LABEL_26:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v0[7] = v35;
      v0[8] = v37;
      sub_1AFFC8B38();
      swift_bridgeObjectRelease_n();
      swift_release_n();
      uint64_t v38 = v56;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1AFD9DA90(0, *(void *)(v56 + 16) + 1, 1);
        uint64_t v38 = v56;
      }
      unint64_t v40 = *(void *)(v38 + 16);
      unint64_t v39 = *(void *)(v38 + 24);
      if (v40 >= v39 >> 1)
      {
        sub_1AFD9DA90(v39 > 1, v40 + 1, 1);
        uint64_t v38 = v56;
      }
      *(void *)(v38 + 16) = v40 + 1;
      long long v41 = (void *)(v38 + 24 * v40);
      v41[4] = v54;
      v41[5] = v25;
      v41[6] = v26;
      v20 += 6;
      int64_t v17 = v52 - 1;
      if (v52 == 1)
      {
        swift_release();
        goto LABEL_33;
      }
    }
    swift_bridgeObjectRetain_n();
    swift_retain_n();
LABEL_22:
    uint64_t v29 = v0[16];
    uint64_t v30 = v0[17];
    uint64_t v31 = v0[14];
    sub_1AFFCADF8();
    (*v45)(v29, v30, v31);
    if (qword_1EB819E80 != -1) {
      swift_once();
    }
    uint64_t v32 = v0[17];
    uint64_t v33 = v0[14];
    id v34 = (id)qword_1EB831AF8;
    sub_1AFFC9A28();
    uint64_t v35 = sub_1AFFCAEF8();
    uint64_t v37 = v36;
    (*v44)(v32, v33);
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  swift_release();
  uint64_t v38 = MEMORY[0x1E4FBC860];
LABEL_33:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  long long v42 = (uint64_t (*)(uint64_t))v0[1];
  return v42(v38);
}

uint64_t sub_1AFD821E4()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1AFD8228C(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v3 = *v1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1AFD6BBC4;
  return sub_1AFD818C4(v3);
}

uint64_t sub_1AFD82324(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1AFD3503C;
  return MEMORY[0x1F40D46A0](a1, a2, a3);
}

ValueMetadata *type metadata accessor for RemovableWatchlistOptionsProvider()
{
  return &type metadata for RemovableWatchlistOptionsProvider;
}

void sub_1AFD823E8()
{
  if (!qword_1EB816AF8)
  {
    sub_1AFD74388();
    unint64_t v0 = sub_1AFFC8BB8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB816AF8);
    }
  }
}

uint64_t sub_1AFD82444()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for YahooBaseOperationFactory()
{
  return self;
}

uint64_t sub_1AFD824A0(uint64_t a1)
{
  uint64_t v1 = a1;
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (!v2) {
    return result;
  }
  uint64_t v37 = MEMORY[0x1E4FBC860];
  sub_1AFFCB8B8();
  uint64_t result = sub_1AFE2BE0C(v1);
  if (result < 0 || (unint64_t v5 = result, result >= 1 << *(unsigned char *)(v1 + 32)))
  {
LABEL_22:
    __break(1u);
    return v37;
  }
  uint64_t v6 = v1 + 64;
  uint64_t v29 = v1 + 80;
  uint64_t v30 = v2;
  uint64_t v7 = 1;
  uint64_t v32 = v1 + 64;
  uint64_t v33 = v1;
  int v31 = v4;
  while (1)
  {
    unint64_t v8 = v5 >> 6;
    if ((*(void *)(v6 + 8 * (v5 >> 6)) & (1 << v5)) == 0) {
      break;
    }
    if (*(_DWORD *)(v1 + 36) != v4) {
      goto LABEL_26;
    }
    uint64_t v34 = v7;
    uint64_t v9 = *(void *)(v1 + 56) + 136 * v5;
    v35[0] = *(_OWORD *)v9;
    long long v10 = *(_OWORD *)(v9 + 64);
    long long v12 = *(_OWORD *)(v9 + 16);
    long long v11 = *(_OWORD *)(v9 + 32);
    v35[3] = *(_OWORD *)(v9 + 48);
    v35[4] = v10;
    v35[1] = v12;
    v35[2] = v11;
    long long v14 = *(_OWORD *)(v9 + 96);
    long long v13 = *(_OWORD *)(v9 + 112);
    long long v15 = *(_OWORD *)(v9 + 80);
    uint64_t v36 = *(void *)(v9 + 128);
    v35[6] = v14;
    v35[7] = v13;
    v35[5] = v15;
    id v16 = objc_allocWithZone((Class)SCWWatchedStock);
    sub_1AFD76370((uint64_t)v35);
    int64_t v17 = (void *)sub_1AFFCAE68();
    uint64_t v18 = (void *)sub_1AFFCAE68();
    uint64_t v19 = (void *)sub_1AFFCAE68();
    uint64_t v20 = (void *)sub_1AFFCAE68();
    uint64_t v21 = (void *)sub_1AFFCAE68();
    objc_msgSend(v16, sel_initWithName_shortName_compactName_symbol_exchange_, v17, v18, v19, v20, v21);

    sub_1AFD76408((uint64_t)v35);
    sub_1AFFCB888();
    sub_1AFFCB8C8();
    uint64_t v1 = v33;
    sub_1AFFCB8D8();
    uint64_t result = sub_1AFFCB898();
    char v22 = *(unsigned char *)(v33 + 32);
    if ((uint64_t)v5 >= 1 << v22) {
      goto LABEL_27;
    }
    uint64_t v6 = v32;
    uint64_t v23 = *(void *)(v32 + 8 * v8);
    if ((v23 & (1 << v5)) == 0) {
      goto LABEL_28;
    }
    int v4 = v31;
    if (*(_DWORD *)(v33 + 36) != v31) {
      goto LABEL_29;
    }
    unint64_t v24 = v23 & (-2 << (v5 & 0x3F));
    if (v24)
    {
      unint64_t v5 = __clz(__rbit64(v24)) | v5 & 0xFFFFFFFFFFFFFFC0;
      uint64_t v25 = v30;
    }
    else
    {
      unint64_t v26 = v8 + 1;
      unint64_t v27 = (unint64_t)((1 << v22) + 63) >> 6;
      uint64_t v25 = v30;
      if (v8 + 1 >= v27) {
        goto LABEL_18;
      }
      unint64_t v28 = *(void *)(v32 + 8 * v26);
      if (!v28)
      {
        while (v27 - 2 != v8)
        {
          unint64_t v28 = *(void *)(v29 + 8 * v8++);
          if (v28)
          {
            unint64_t v26 = v8 + 1;
            goto LABEL_17;
          }
        }
LABEL_18:
        unint64_t v5 = 1 << v22;
        goto LABEL_19;
      }
LABEL_17:
      unint64_t v5 = __clz(__rbit64(v28)) + (v26 << 6);
    }
LABEL_19:
    if (v34 == v25) {
      return v37;
    }
    if ((v5 & 0x8000000000000000) == 0)
    {
      uint64_t v7 = v34 + 1;
      if ((uint64_t)v5 < 1 << v22) {
        continue;
      }
    }
    goto LABEL_22;
  }
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

void sub_1AFD82770(uint64_t a1@<X1>, uint64_t a2@<X2>, void *a3@<X8>)
{
  sub_1AFFCA508();
  id v6 = objc_msgSend(objc_allocWithZone((Class)SCWWatchlistManager), sel_initWithDatabase_metadataProvider_defaultsProvider_, v7, a1, a2);

  *a3 = v6;
}

id sub_1AFD827E8(id *a1, uint64_t a2)
{
  return objc_msgSend(*a1, sel_addObserver_, a2);
}

uint64_t sub_1AFD827FC()
{
  sub_1AFD8F6E8(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CloudKitWatchlistService()
{
  return self;
}

void sub_1AFD82870()
{
  if (MEMORY[0x1E4FBC8F0]) {
    sub_1AFD82910(0, &qword_1E9AFA250, (uint64_t (*)(uint64_t))sub_1AFD828DC, MEMORY[0x1E4FBCDD8]);
  }
}

void sub_1AFD828DC(uint64_t a1)
{
}

void sub_1AFD82910(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1AFD82974(uint64_t a1)
{
  long long v6 = *(_OWORD *)(a1 + 16);
  if (qword_1EB817668 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)qword_1EB831AC0;
  sub_1AFD2CD48();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1AFFD05F0;
  long long v7 = v6;
  *(void *)(v2 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v2 + 64) = sub_1AFD2CE00();
  *(_OWORD *)(v2 + 32) = v6;
  id v3 = v1;
  sub_1AFD8C5F8((uint64_t)&v7);
  sub_1AFFCB478();
  sub_1AFFCA878();

  uint64_t v4 = swift_bridgeObjectRelease();
  MEMORY[0x1F4188790](v4);
  sub_1AFD8D4C8(0, &qword_1E9AFA328, (uint64_t)&type metadata for Stock, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1AFFCA758();
}

uint64_t sub_1AFD82B18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = swift_allocObject();
  long long v13 = *(_OWORD *)(a6 + 64);
  *(_OWORD *)(v12 + 104) = *(_OWORD *)(a6 + 80);
  long long v14 = *(_OWORD *)(a6 + 112);
  *(_OWORD *)(v12 + 120) = *(_OWORD *)(a6 + 96);
  *(_OWORD *)(v12 + 136) = v14;
  long long v15 = *(_OWORD *)a6;
  *(_OWORD *)(v12 + 40) = *(_OWORD *)(a6 + 16);
  long long v16 = *(_OWORD *)(a6 + 48);
  *(_OWORD *)(v12 + 56) = *(_OWORD *)(a6 + 32);
  *(_OWORD *)(v12 + 72) = v16;
  *(_OWORD *)(v12 + 88) = v13;
  *(void *)(v12 + 16) = a5;
  uint64_t v17 = *(void *)(a6 + 128);
  *(_OWORD *)(v12 + 24) = v15;
  *(void *)(v12 + 152) = v17;
  *(void *)(v12 + 160) = a3;
  *(void *)(v12 + 168) = a4;
  *(void *)(v12 + 176) = a1;
  *(void *)(v12 + 184) = a2;
  sub_1AFFC8E48();
  sub_1AFD76370(a6);
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFCA4F8();

  return swift_release();
}

void sub_1AFD82C14(id *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  id v31 = *a1;
  uint64_t v11 = a2[7];
  uint64_t v12 = a2[8];
  __swift_project_boxed_opaque_existential_1(a2 + 4, v11);
  long long v13 = *(_OWORD *)(a3 + 112);
  long long v38 = *(_OWORD *)(a3 + 96);
  long long v39 = v13;
  uint64_t v40 = *(void *)(a3 + 128);
  long long v14 = *(_OWORD *)(a3 + 48);
  long long v34 = *(_OWORD *)(a3 + 32);
  long long v35 = v14;
  long long v15 = *(_OWORD *)(a3 + 80);
  long long v36 = *(_OWORD *)(a3 + 64);
  long long v37 = v15;
  long long v16 = *(_OWORD *)(a3 + 16);
  long long aBlock = *(_OWORD *)a3;
  long long v33 = v16;
  (*(void (**)(long long *, uint64_t, uint64_t))(v12 + 16))(&aBlock, v11, v12);
  swift_release();
  id v17 = objc_allocWithZone((Class)SCWWatchedStock);
  sub_1AFD76370(a3);
  uint64_t v18 = (void *)sub_1AFFCAE68();
  uint64_t v19 = (void *)sub_1AFFCAE68();
  uint64_t v20 = (void *)sub_1AFFCAE68();
  uint64_t v21 = (void *)sub_1AFFCAE68();
  char v22 = (void *)sub_1AFFCAE68();
  sub_1AFD76408(a3);
  id v23 = objc_msgSend(v17, sel_initWithName_shortName_compactName_symbol_exchange_, v18, v19, v20, v21, v22);

  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = a4;
  *(void *)(v24 + 24) = a5;
  *(void *)(v24 + 32) = a6;
  *(void *)(v24 + 40) = a7;
  long long v25 = *(_OWORD *)(a3 + 112);
  *(_OWORD *)(v24 + 144) = *(_OWORD *)(a3 + 96);
  *(_OWORD *)(v24 + 160) = v25;
  *(void *)(v24 + 176) = *(void *)(a3 + 128);
  long long v26 = *(_OWORD *)(a3 + 48);
  *(_OWORD *)(v24 + 80) = *(_OWORD *)(a3 + 32);
  *(_OWORD *)(v24 + 96) = v26;
  long long v27 = *(_OWORD *)(a3 + 80);
  *(_OWORD *)(v24 + 112) = *(_OWORD *)(a3 + 64);
  *(_OWORD *)(v24 + 128) = v27;
  long long v28 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v24 + 48) = *(_OWORD *)a3;
  *(_OWORD *)(v24 + 64) = v28;
  *(void *)&long long v34 = sub_1AFD8DEE4;
  *((void *)&v34 + 1) = v24;
  *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v33 = sub_1AFD82E64;
  *((void *)&v33 + 1) = &block_descriptor_256;
  uint64_t v29 = _Block_copy(&aBlock);
  sub_1AFD76370(a3);
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  swift_release();
  objc_msgSend(v31, sel_addStock_completion_, v23, v29);
  _Block_release(v29);
}

void sub_1AFD82E64(uint64_t a1, void *a2)
{
  id v3 = *(void (**)(void *))(a1 + 32);
  sub_1AFFC8E48();
  id v4 = a2;
  v3(a2);
  swift_release();
}

uint64_t sub_1AFD82ED0(uint64_t a1, uint64_t a2)
{
  if (qword_1EB817668 != -1) {
    swift_once();
  }
  id v4 = (void *)qword_1EB831AC0;
  sub_1AFD2CD48();
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1AFFD05F0;
  uint64_t v6 = MEMORY[0x1E4FBB1A0];
  *(void *)(v5 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v5 + 64) = sub_1AFD2CE00();
  *(void *)(v5 + 32) = a1;
  *(void *)(v5 + 40) = a2;
  id v7 = v4;
  sub_1AFFC8E38();
  sub_1AFFCB478();
  sub_1AFFCA878();

  uint64_t v8 = swift_bridgeObjectRelease();
  MEMORY[0x1F4188790](v8);
  sub_1AFD8D4C8(0, &qword_1EB811150, v6, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1AFFCA758();
}

uint64_t sub_1AFD83040(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = a2;
  long long v14 = (void *)swift_allocObject();
  void v14[2] = a6;
  v14[3] = a7;
  v14[4] = a3;
  v14[5] = a4;
  v14[6] = sub_1AFD8CA4C;
  v14[7] = v13;
  sub_1AFFC8E48();
  sub_1AFFC8E38();
  sub_1AFFC8E48();
  sub_1AFFCA4F8();

  return swift_release();
}

void sub_1AFD83134(void **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = *a1;
  long long v14 = (void *)sub_1AFFCAE68();
  long long v15 = (void *)swift_allocObject();
  v15[2] = a4;
  v15[3] = a5;
  v15[4] = a6;
  v15[5] = a7;
  v15[6] = a2;
  v15[7] = a3;
  v17[4] = sub_1AFD8CB1C;
  void v17[5] = v15;
  v17[0] = MEMORY[0x1E4F143A8];
  v17[1] = 1107296256;
  v17[2] = sub_1AFD82E64;
  v17[3] = &block_descriptor_247;
  long long v16 = _Block_copy(v17);
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E38();
  swift_release();
  objc_msgSend(v13, sel_removeSymbol_completion_, v14, v16);
  _Block_release(v16);
}

uint64_t sub_1AFD83268(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v16 = *(_OWORD *)(a1 + 16);
  sub_1AFD8CB20(a3, (uint64_t)v17, &qword_1EB817B30, (uint64_t)&type metadata for Stock);
  sub_1AFD8CB20(a3, (uint64_t)v20, &qword_1EB817B30, (uint64_t)&type metadata for Stock);
  if (qword_1EB817668 != -1) {
    swift_once();
  }
  uint64_t v5 = (void *)qword_1EB831AC0;
  sub_1AFD2CD48();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1AFFD0DC0;
  long long v19 = v16;
  uint64_t v7 = MEMORY[0x1E4FBB1A0];
  *(void *)(v6 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v8 = sub_1AFD2CE00();
  *(_OWORD *)(v6 + 32) = v16;
  uint64_t v9 = MEMORY[0x1E4FBB868];
  *(void *)(v6 + 96) = MEMORY[0x1E4FBB808];
  *(void *)(v6 + 104) = v9;
  *(void *)(v6 + 64) = v8;
  *(void *)(v6 + 72) = a2;
  sub_1AFD8CB20((uint64_t)v17, (uint64_t)v18, &qword_1EB817B30, (uint64_t)&type metadata for Stock);
  if (sub_1AFD48F48((uint64_t)v18) == 1)
  {
    long long v10 = (void *)(v6 + 112);
    *(void *)(v6 + 136) = v7;
    *(void *)(v6 + 144) = v8;
LABEL_7:
    *long long v10 = 7104878;
    uint64_t v12 = 0xE300000000000000;
    goto LABEL_8;
  }
  uint64_t v11 = v18[2];
  long long v10 = (void *)(v6 + 112);
  *(void *)(v6 + 136) = v7;
  *(void *)(v6 + 144) = v8;
  uint64_t v12 = sub_1AFFC8E38();
  if (!v12) {
    goto LABEL_7;
  }
  *long long v10 = v11;
LABEL_8:
  *(void *)(v6 + 120) = v12;
  id v13 = v5;
  sub_1AFD8C5F8((uint64_t)&v19);
  sub_1AFFCB478();
  sub_1AFFCA878();

  uint64_t v14 = swift_bridgeObjectRelease();
  MEMORY[0x1F4188790](v14);
  sub_1AFD8D4C8(0, &qword_1E9AFA328, (uint64_t)&type metadata for Stock, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1AFFCA758();
}

uint64_t sub_1AFD834F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7)
{
  uint64_t v13 = swift_allocObject();
  long long v14 = *(_OWORD *)(a6 + 112);
  *(_OWORD *)(v13 + 112) = *(_OWORD *)(a6 + 96);
  *(_OWORD *)(v13 + 128) = v14;
  *(void *)(v13 + 144) = *(void *)(a6 + 128);
  long long v15 = *(_OWORD *)(a6 + 48);
  *(_OWORD *)(v13 + 48) = *(_OWORD *)(a6 + 32);
  *(_OWORD *)(v13 + 64) = v15;
  long long v16 = *(_OWORD *)(a6 + 80);
  *(_OWORD *)(v13 + 80) = *(_OWORD *)(a6 + 64);
  *(_OWORD *)(v13 + 96) = v16;
  long long v17 = *(_OWORD *)(a6 + 16);
  *(_OWORD *)(v13 + 16) = *(_OWORD *)a6;
  *(_OWORD *)(v13 + 32) = v17;
  sub_1AFD8CB20((uint64_t)a7, v13 + 152, &qword_1EB817B30, (uint64_t)&type metadata for Stock);
  *(void *)(v13 + 288) = a3;
  *(void *)(v13 + 296) = a4;
  *(void *)(v13 + 304) = a1;
  *(void *)(v13 + 312) = a2;
  sub_1AFD76370(a6);
  sub_1AFD8CCA0(a7);
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFCA4F8();

  return swift_release();
}

void sub_1AFD835F4(void **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = *a1;
  long long v14 = (void *)sub_1AFFCAE68();
  sub_1AFD8CB20(a3, (uint64_t)v23, &qword_1EB817B30, (uint64_t)&type metadata for Stock);
  if (sub_1AFD48F48((uint64_t)v23) == 1) {
    long long v15 = 0;
  }
  else {
    long long v15 = (void *)sub_1AFFCAE68();
  }
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a4;
  *(void *)(v16 + 24) = a5;
  *(void *)(v16 + 32) = a6;
  *(void *)(v16 + 40) = a7;
  long long v17 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(v16 + 144) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(v16 + 160) = v17;
  *(void *)(v16 + 176) = *(void *)(a2 + 128);
  long long v18 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v16 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v16 + 96) = v18;
  long long v19 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(v16 + 112) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(v16 + 128) = v19;
  long long v20 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v16 + 48) = *(_OWORD *)a2;
  *(_OWORD *)(v16 + 64) = v20;
  aBlock[4] = sub_1AFD8DEE4;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1AFD82E64;
  aBlock[3] = &block_descriptor_234;
  uint64_t v21 = _Block_copy(aBlock);
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFD76370(a2);
  swift_release();
  objc_msgSend(v13, sel_reorderSymbol_afterSymbol_completion_, v14, v15, v21);
  _Block_release(v21);
}

void sub_1AFD83798(void *a1, void (*a2)(void *), uint64_t a3, void (*a4)(_OWORD *), uint64_t a5, uint64_t a6)
{
  if (a1)
  {
    id v8 = a1;
    a2(a1);
  }
  else
  {
    long long v9 = *(_OWORD *)(a6 + 112);
    v13[6] = *(_OWORD *)(a6 + 96);
    v13[7] = v9;
    uint64_t v14 = *(void *)(a6 + 128);
    long long v10 = *(_OWORD *)(a6 + 48);
    void v13[2] = *(_OWORD *)(a6 + 32);
    v13[3] = v10;
    long long v11 = *(_OWORD *)(a6 + 80);
    v13[4] = *(_OWORD *)(a6 + 64);
    uint64_t v13[5] = v11;
    long long v12 = *(_OWORD *)(a6 + 16);
    v13[0] = *(_OWORD *)a6;
    v13[1] = v12;
    a4(v13);
  }
}

uint64_t sub_1AFD83844(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (qword_1EB817668 != -1) {
    swift_once();
  }
  id v8 = (void *)qword_1EB831AC0;
  sub_1AFD2CD48();
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1AFFD0610;
  uint64_t v10 = MEMORY[0x1E4FBB1A0];
  *(void *)(v9 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v11 = sub_1AFD2CE00();
  *(void *)(v9 + 32) = a1;
  *(void *)(v9 + 40) = a2;
  *(void *)(v9 + 96) = v10;
  *(void *)(v9 + 104) = v11;
  *(void *)(v9 + 64) = v11;
  *(void *)(v9 + 72) = a3;
  *(void *)(v9 + 80) = a4;
  id v12 = v8;
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFCB478();
  sub_1AFFCA878();

  uint64_t v13 = swift_bridgeObjectRelease();
  MEMORY[0x1F4188790](v13);
  sub_1AFD8D4C8(0, &qword_1EB811150, v10, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1AFFCA758();
}

uint64_t sub_1AFD839D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  *(void *)(v15 + 24) = a2;
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = a6;
  v16[3] = a7;
  v16[4] = a8;
  void v16[5] = a9;
  v16[6] = a3;
  v16[7] = a4;
  v16[8] = sub_1AFD8CA4C;
  v16[9] = v15;
  sub_1AFFC8E48();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E48();
  sub_1AFFCA4F8();

  return swift_release();
}

void sub_1AFD83AEC(void **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v14 = *a1;
  uint64_t v15 = (void *)sub_1AFFCAE68();
  uint64_t v16 = (void *)sub_1AFFCAE68();
  long long v17 = (void *)swift_allocObject();
  v17[2] = a6;
  v17[3] = a7;
  v17[4] = a8;
  void v17[5] = a9;
  void v17[6] = a4;
  v17[7] = a5;
  v19[4] = sub_1AFD8CB1C;
  v19[5] = v17;
  v19[0] = MEMORY[0x1E4F143A8];
  v19[1] = 1107296256;
  v19[2] = sub_1AFD82E64;
  void v19[3] = &block_descriptor_212;
  long long v18 = _Block_copy(v19);
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E38();
  swift_release();
  objc_msgSend(v14, sel_replaceSymbol_withSymbol_completion_, v15, v16, v18);
  _Block_release(v18);
}

uint64_t sub_1AFD83C40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  unint64_t v11 = (void *)swift_allocObject();
  v11[2] = a5;
  void v11[3] = a3;
  void v11[4] = a4;
  void v11[5] = sub_1AFD8F8D8;
  v11[6] = v10;
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFCA4F8();

  return swift_release();
}

void sub_1AFD83D24(void **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = *a1;
  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  id v12 = (void *)swift_allocObject();
  void v12[2] = v11;
  uint64_t v12[3] = a3;
  v12[4] = a4;
  v12[5] = a5;
  v12[6] = a6;
  v14[4] = sub_1AFD8DBE8;
  v14[5] = v12;
  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 1107296256;
  void v14[2] = sub_1AFD84504;
  v14[3] = &block_descriptor_199;
  uint64_t v13 = _Block_copy(v14);
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  swift_release();
  objc_msgSend(v10, sel_fetchStocksWithCompletion_, v13);
  _Block_release(v13);
}

void sub_1AFD83E58(unint64_t a1, void *a2, uint64_t a3, void (*a4)(void), uint64_t a5, void (*a6)(uint64_t))
{
  swift_beginAccess();
  if (!swift_weakLoadStrong())
  {
    uint64_t v13 = sub_1AFFC9E28();
    sub_1AFD8D268();
    uint64_t v14 = (void *)swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v13 - 8) + 104))(v15, *MEMORY[0x1E4FAA9A0], v13);
    ((void (*)(void *))a4)(v14);
    goto LABEL_7;
  }
  if (!a2)
  {
    if (a1)
    {
      if (qword_1EB817668 != -1) {
        swift_once();
      }
      uint64_t v16 = (void *)qword_1EB831AC0;
      sub_1AFD2CD48();
      uint64_t v17 = swift_allocObject();
      *(_OWORD *)(v17 + 16) = xmmword_1AFFD0610;
      long long v38 = a6;
      if (a1 >> 62)
      {
        id v36 = v16;
        sub_1AFFC8E38();
        uint64_t v18 = sub_1AFFCB9C8();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v18 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        id v19 = v16;
      }
      uint64_t v20 = MEMORY[0x1E4FBB5C8];
      *(void *)(v17 + 56) = MEMORY[0x1E4FBB550];
      *(void *)(v17 + 64) = v20;
      long long v37 = (void *)v17;
      *(void *)(v17 + 32) = v18;
      if (v18)
      {
        uint64_t v39 = MEMORY[0x1E4FBC860];
        sub_1AFD9DA10(0, v18 & ~(v18 >> 63), 0);
        if (v18 < 0)
        {
          __break(1u);
          return;
        }
        uint64_t v21 = 0;
        do
        {
          if ((a1 & 0xC000000000000001) != 0) {
            id v22 = (id)MEMORY[0x1B3E8DC70](v21, a1);
          }
          else {
            id v22 = *(id *)(a1 + 8 * v21 + 32);
          }
          id v23 = v22;
          id v24 = objc_msgSend(v22, sel_symbol);
          uint64_t v25 = sub_1AFFCAE98();
          uint64_t v27 = v26;

          unint64_t v29 = *(void *)(v39 + 16);
          unint64_t v28 = *(void *)(v39 + 24);
          if (v29 >= v28 >> 1) {
            sub_1AFD9DA10(v28 > 1, v29 + 1, 1);
          }
          ++v21;
          *(void *)(v39 + 16) = v29 + 1;
          uint64_t v30 = v39 + 16 * v29;
          *(void *)(v30 + 32) = v25;
          *(void *)(v30 + 40) = v27;
        }
        while (v18 != v21);
      }
      uint64_t v31 = MEMORY[0x1E4FBB1A0];
      sub_1AFD8D4C8(0, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
      sub_1AFD8D2C0((unint64_t *)&qword_1EB819DD0);
      uint64_t v32 = sub_1AFFCAD88();
      uint64_t v34 = v33;
      swift_bridgeObjectRelease();
      v37[12] = v31;
      v37[13] = sub_1AFD2CE00();
      v37[9] = v32;
      v37[10] = v34;
      sub_1AFFCB478();
      sub_1AFFCA878();

      swift_bridgeObjectRelease();
      sub_1AFFC8E48();
      uint64_t v35 = sub_1AFD84360(a1);
      swift_release();
      v38(v35);
      swift_bridgeObjectRelease();
      swift_release();
      return;
    }
    sub_1AFD8C9C8();
    uint64_t v14 = (void *)swift_allocError();
    a4();
    swift_release();
LABEL_7:

    return;
  }
  id v10 = a2;
  if (qword_1EB817668 != -1) {
    swift_once();
  }
  id v11 = (id)qword_1EB831AC0;
  sub_1AFFCB468();
  sub_1AFD2CD48();
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1AFFD05F0;
  sub_1AFD2CDB0(0, (unint64_t *)&qword_1EB81A110);
  sub_1AFFCB928();
  *(void *)(v12 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v12 + 64) = sub_1AFD2CE00();
  *(void *)(v12 + 32) = 0;
  *(void *)(v12 + 40) = 0xE000000000000000;
  sub_1AFFCA878();

  swift_bridgeObjectRelease();
  ((void (*)(void *))a4)(a2);
  swift_release();
}

uint64_t sub_1AFD84360(unint64_t a1)
{
  if (a1 >> 62)
  {
    sub_1AFFC8E38();
    uint64_t v3 = sub_1AFFCB9C8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v4 = MEMORY[0x1E4FBC860];
  if (!v3)
  {
LABEL_12:
    uint64_t v16 = sub_1AFFCA598();
    uint64_t v17 = sub_1AFD8D328(v4, v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v17;
  }
  uint64_t v19 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1AFD9DA10(0, v3 & ~(v3 >> 63), 0);
  if ((v3 & 0x8000000000000000) == 0)
  {
    uint64_t v18 = v1;
    uint64_t v6 = 0;
    uint64_t v4 = v19;
    do
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v7 = (id)MEMORY[0x1B3E8DC70](v6, a1);
      }
      else {
        id v7 = *(id *)(a1 + 8 * v6 + 32);
      }
      id v8 = v7;
      id v9 = objc_msgSend(v7, sel_symbol, v18);
      uint64_t v10 = sub_1AFFCAE98();
      uint64_t v12 = v11;

      unint64_t v14 = *(void *)(v19 + 16);
      unint64_t v13 = *(void *)(v19 + 24);
      if (v14 >= v13 >> 1) {
        sub_1AFD9DA10(v13 > 1, v14 + 1, 1);
      }
      ++v6;
      *(void *)(v19 + 16) = v14 + 1;
      unint64_t v15 = v19 + 16 * v14;
      *(void *)(v15 + 32) = v10;
      *(void *)(v15 + 40) = v12;
    }
    while (v3 != v6);
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t sub_1AFD84504(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1AFD871F8(a1, a2, a3, (unint64_t *)&unk_1EB8180B0);
}

void sub_1AFD84518(void **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unint64_t v13 = *a1;
  unint64_t v14 = (void *)swift_allocObject();
  void v14[2] = v13;
  v14[3] = a2;
  v14[4] = a3;
  v14[5] = a4;
  void v14[6] = a5;
  v14[7] = a6;
  v14[8] = a7;
  v17[4] = sub_1AFD8DAFC;
  void v17[5] = v14;
  v17[0] = MEMORY[0x1E4F143A8];
  v17[1] = 1107296256;
  v17[2] = sub_1AFD84C2C;
  v17[3] = &block_descriptor_179;
  unint64_t v15 = _Block_copy(v17);
  id v16 = v13;
  sub_1AFFC8E38();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  swift_release();
  objc_msgSend(v16, sel_legacyWatchlistSortState_, v15);
  _Block_release(v15);
}

void sub_1AFD84640(uint64_t a1, uint64_t a2, id a3, void *a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10 = a8;
  uint64_t v11 = a7;
  uint64_t v12 = a4;
  if (a3)
  {
    id v16 = a3;
    if (qword_1EB817668 != -1) {
      swift_once();
    }
    id v17 = (id)qword_1EB831AC0;
    sub_1AFFCB468();
    sub_1AFD2CD48();
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1AFFD05F0;
    uint64_t aBlock = 0;
    unint64_t v30 = 0xE000000000000000;
    sub_1AFD2CDB0(0, (unint64_t *)&qword_1EB81A110);
    sub_1AFFCB928();
    *(void *)(v18 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v18 + 64) = sub_1AFD2CE00();
    *(void *)(v18 + 32) = 0;
    *(void *)(v18 + 40) = 0xE000000000000000;
    sub_1AFFCA878();

    swift_bridgeObjectRelease();
    uint64_t v10 = a8;
    uint64_t v12 = a4;
    uint64_t v11 = a7;
  }
  if (a2
    && (sub_1AFFC8E38(),
        sub_1AFECDF48(a1, a2, (char *)&aBlock),
        unsigned int v19 = aBlock,
        aBlock < 0xFEu))
  {
    uint64_t v20 = (void *)sub_1AFFCAE68();
    switch(v19 >> 5)
    {
      case 5u:
        goto LABEL_8;
      default:
        uint64_t v21 = (void *)sub_1AFFCB398();
        id v22 = (void *)sub_1AFFCB398();
        break;
    }
  }
  else
  {
    uint64_t v20 = (void *)sub_1AFFCAE68();
LABEL_8:
    uint64_t v21 = (void *)sub_1AFFCB398();
    id v22 = 0;
  }
  id v23 = (void *)sub_1AFFCB398();
  id v24 = (void *)swift_allocObject();
  void v24[2] = v11;
  v24[3] = v10;
  v24[4] = a9;
  v24[5] = a10;
  uint64_t v33 = sub_1AFD8DB74;
  uint64_t v34 = v24;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  unint64_t v30 = 1107296256;
  uint64_t v31 = sub_1AFD84BA0;
  uint64_t v32 = &block_descriptor_185;
  uint64_t v25 = _Block_copy(&aBlock);
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  swift_release();
  objc_msgSend(v12, sel_migrateToDefaultWatchlist_sortState_sortOrderState_displayState_completion_, v20, v21, v22, v23, v25);

  _Block_release(v25);
}

void sub_1AFD8497C(void *a1, id a2, void (*a3)(void), uint64_t a4, void (*a5)(void *))
{
  if (a2)
  {
    id v7 = a2;
    if (qword_1EB817668 != -1) {
      swift_once();
    }
    id v8 = (id)qword_1EB831AC0;
    sub_1AFFCB468();
    sub_1AFD2CD48();
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1AFFD05F0;
    v12[0] = a2;
    sub_1AFD2CDB0(0, (unint64_t *)&qword_1EB81A110);
    sub_1AFFCB928();
    *(void *)(v9 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v9 + 64) = sub_1AFD2CE00();
    *(void *)(v9 + 32) = 0;
    *(void *)(v9 + 40) = 0xE000000000000000;
    sub_1AFFCA878();

    swift_bridgeObjectRelease();
    ((void (*)(id))a3)(a2);
  }
  else if (a1)
  {
    sub_1AFEAB520(a1, (uint64_t)v14);
    v12[0] = v14[0];
    v12[1] = v14[1];
    void v12[2] = v14[2];
    uint64_t v12[3] = v14[3];
    v12[4] = v14[4];
    __int16 v13 = v15;
    a5(v12);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1AFD8C9C8();
    uint64_t v11 = (void *)swift_allocError();
    a3();
  }
}

void sub_1AFD84BA0(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  sub_1AFFC8E48();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_1AFD84C2C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  if (a2)
  {
    uint64_t v5 = sub_1AFFCAE98();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  sub_1AFFC8E48();
  id v8 = a3;
  v4(v5, v7, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFD84CC4(uint64_t a1, uint64_t a2)
{
  if (qword_1EB817668 != -1) {
    swift_once();
  }
  uint64_t v4 = (void *)qword_1EB831AC0;
  sub_1AFD2CD48();
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1AFFD05F0;
  *(void *)(v5 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v5 + 64) = sub_1AFD2CE00();
  *(void *)(v5 + 32) = a1;
  *(void *)(v5 + 40) = a2;
  id v6 = v4;
  sub_1AFFC8E38();
  sub_1AFFCB478();
  sub_1AFFCA878();

  uint64_t v7 = swift_bridgeObjectRelease();
  MEMORY[0x1F4188790](v7);
  sub_1AFD8D4C8(0, &qword_1EB818780, (uint64_t)&type metadata for Watchlist, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1AFFCA758();
}

uint64_t sub_1AFD84E38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  __int16 v13 = (void *)swift_allocObject();
  void v13[2] = a6;
  v13[3] = a7;
  v13[4] = a3;
  uint64_t v13[5] = a4;
  v13[6] = a1;
  v13[7] = a2;
  sub_1AFFC8E38();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFCA4F8();

  return swift_release();
}

void sub_1AFD84EEC(id *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v26 = a4;
  uint64_t v27 = a6;
  uint64_t v12 = sub_1AFFC9938();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  __int16 v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v28 = *a1;
  sub_1AFFC8978();
  uint64_t v16 = sub_1AFFC9918();
  uint64_t v18 = v17;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  unsigned int v19 = (void *)sub_1AFFCAE68();
  uint64_t v20 = (void *)sub_1AFFCAE68();
  uint64_t v21 = (void *)sub_1AFFCB398();
  id v22 = (void *)sub_1AFFCB398();
  id v23 = (void *)swift_allocObject();
  v23[2] = v26;
  v23[3] = a5;
  v23[4] = v27;
  uint64_t v23[5] = a7;
  v23[6] = a2;
  v23[7] = a3;
  _OWORD v23[8] = v16;
  v23[9] = v18;
  aBlock[4] = sub_1AFD8D9F0;
  aBlock[5] = v23;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1AFD82E64;
  aBlock[3] = &block_descriptor_170;
  id v24 = _Block_copy(aBlock);
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E38();
  swift_release();
  objc_msgSend(v28, sel_addWatchlist_identifier_sortState_sortOrderState_displayState_completion_, v19, v20, v21, 0, v22, v24);

  _Block_release(v24);
}

void sub_1AFD85124(void *a1, void (*a2)(void *), uint64_t a3, void (*a4)(void *), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (a1)
  {
    id v11 = a1;
    if (qword_1EB817668 != -1) {
      swift_once();
    }
    id v12 = (id)qword_1EB831AC0;
    sub_1AFFCB468();
    sub_1AFD2CD48();
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1AFFD05F0;
    sub_1AFD2CDB0(0, (unint64_t *)&qword_1EB81A110);
    sub_1AFFCB928();
    *(void *)(v13 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v13 + 64) = sub_1AFD2CE00();
    *(void *)(v13 + 32) = 0;
    *(void *)(v13 + 40) = 0xE000000000000000;
    sub_1AFFCA878();

    swift_bridgeObjectRelease();
    a2(a1);
  }
  else
  {
    v15[0] = a6;
    v15[1] = a7;
    v15[2] = MEMORY[0x1E4FBC860];
    v15[3] = a8;
    v15[4] = a9;
    __int16 v16 = 160;
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    a4(v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1AFD852F0(long long *a1)
{
  if (qword_1EB817668 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_1EB831AC0;
  sub_1AFD2CD48();
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1AFFD05F0;
  long long v7 = *a1;
  *(void *)(v3 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v3 + 64) = sub_1AFD2CE00();
  *(_OWORD *)(v3 + 32) = *a1;
  id v4 = v2;
  sub_1AFD8C5F8((uint64_t)&v7);
  sub_1AFFCB478();
  sub_1AFFCA878();

  uint64_t v5 = swift_bridgeObjectRelease();
  MEMORY[0x1F4188790](v5);
  sub_1AFD8D4C8(0, &qword_1EB818780, (uint64_t)&type metadata for Watchlist, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1AFFCA758();
}

void sub_1AFD85480(void **a1, _OWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v11 = *a1;
  id v12 = (void *)sub_1AFFCAE68();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a3;
  *(void *)(v13 + 24) = a4;
  *(void *)(v13 + 32) = a5;
  *(void *)(v13 + 40) = a6;
  long long v14 = a2[1];
  *(_OWORD *)(v13 + 48) = *a2;
  *(_OWORD *)(v13 + 64) = v14;
  *(_OWORD *)(v13 + 74) = *(_OWORD *)((char *)a2 + 26);
  v16[4] = sub_1AFD8D92C;
  void v16[5] = v13;
  v16[0] = MEMORY[0x1E4F143A8];
  v16[1] = 1107296256;
  v16[2] = sub_1AFD82E64;
  v16[3] = &block_descriptor_161;
  __int16 v15 = _Block_copy(v16);
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFD768D8((uint64_t)a2);
  swift_release();
  objc_msgSend(v11, sel_removeWatchlist_completion_, v12, v15);
  _Block_release(v15);
}

void sub_1AFD855B8(void *a1, void (*a2)(void *), uint64_t a3, void (*a4)(long long *), uint64_t a5, long long *a6)
{
  if (a1)
  {
    id v8 = a1;
    if (qword_1EB817668 != -1) {
      swift_once();
    }
    id v9 = (id)qword_1EB831AC0;
    sub_1AFFCB468();
    sub_1AFD2CD48();
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1AFFD05F0;
    *(void *)&long long v13 = 0;
    *((void *)&v13 + 1) = 0xE000000000000000;
    sub_1AFD2CDB0(0, (unint64_t *)&qword_1EB81A110);
    sub_1AFFCB928();
    long long v11 = v13;
    *(void *)(v10 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v10 + 64) = sub_1AFD2CE00();
    *(_OWORD *)(v10 + 32) = v11;
    sub_1AFFCA878();

    swift_bridgeObjectRelease();
    a2(a1);
  }
  else
  {
    long long v12 = a6[1];
    long long v13 = *a6;
    v14[0] = v12;
    *(_OWORD *)((char *)v14 + 10) = *(long long *)((char *)a6 + 26);
    a4(&v13);
  }
}

uint64_t sub_1AFD85740(long long *a1, uint64_t a2, uint64_t a3)
{
  if (qword_1EB817668 != -1) {
    swift_once();
  }
  id v6 = (void *)qword_1EB831AC0;
  sub_1AFD2CD48();
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1AFFD0610;
  long long v13 = *a1;
  uint64_t v8 = MEMORY[0x1E4FBB1A0];
  *(void *)(v7 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v9 = sub_1AFD2CE00();
  *(_OWORD *)(v7 + 32) = *a1;
  *(void *)(v7 + 96) = v8;
  *(void *)(v7 + 104) = v9;
  *(void *)(v7 + 64) = v9;
  *(void *)(v7 + 72) = a2;
  *(void *)(v7 + 80) = a3;
  id v10 = v6;
  sub_1AFD8C5F8((uint64_t)&v13);
  sub_1AFFC8E38();
  sub_1AFFCB478();
  sub_1AFFCA878();

  uint64_t v11 = swift_bridgeObjectRelease();
  MEMORY[0x1F4188790](v11);
  sub_1AFD8D4C8(0, &qword_1EB818780, (uint64_t)&type metadata for Watchlist, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1AFFCA758();
}

uint64_t sub_1AFD858FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _OWORD *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15 = swift_allocObject();
  long long v16 = a6[1];
  *(_OWORD *)(v15 + 16) = *a6;
  *(_OWORD *)(v15 + 32) = v16;
  *(_OWORD *)(v15 + 42) = *(_OWORD *)((char *)a6 + 26);
  *(void *)(v15 + 64) = a7;
  *(void *)(v15 + 72) = a8;
  *(void *)(v15 + 80) = a3;
  *(void *)(v15 + 88) = a4;
  *(void *)(v15 + 96) = a1;
  *(void *)(v15 + 104) = a2;
  sub_1AFD768D8((uint64_t)a6);
  sub_1AFFC8E38();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFCA4F8();

  return swift_release();
}

void sub_1AFD859DC(void **a1, _OWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15 = *a1;
  long long v16 = (void *)sub_1AFFCAE68();
  uint64_t v17 = (void *)sub_1AFFCAE68();
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a5;
  *(void *)(v18 + 24) = a6;
  *(void *)(v18 + 32) = a7;
  *(void *)(v18 + 40) = a8;
  *(void *)(v18 + 48) = a3;
  *(void *)(v18 + 56) = a4;
  long long v19 = a2[1];
  *(_OWORD *)(v18 + 64) = *a2;
  *(_OWORD *)(v18 + 80) = v19;
  *(_OWORD *)(v18 + 90) = *(_OWORD *)((char *)a2 + 26);
  v21[4] = sub_1AFD8D808;
  v21[5] = v18;
  v21[0] = MEMORY[0x1E4F143A8];
  v21[1] = 1107296256;
  void v21[2] = sub_1AFD82E64;
  v21[3] = &block_descriptor_152;
  uint64_t v20 = _Block_copy(v21);
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E38();
  sub_1AFD768D8((uint64_t)a2);
  swift_release();
  objc_msgSend(v15, sel_renameWatchlist_newName_completion_, v16, v17, v20);
  _Block_release(v20);
}

void sub_1AFD85B48(void *a1, void (*a2)(void *), uint64_t a3, void (*a4)(void *), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a1)
  {
    id v10 = a1;
    if (qword_1EB817668 != -1) {
      swift_once();
    }
    id v11 = (id)qword_1EB831AC0;
    sub_1AFFCB468();
    sub_1AFD2CD48();
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1AFFD05F0;
    sub_1AFD2CDB0(0, (unint64_t *)&qword_1EB81A110);
    sub_1AFFCB928();
    *(void *)(v12 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v12 + 64) = sub_1AFD2CE00();
    *(void *)(v12 + 32) = 0;
    *(void *)(v12 + 40) = 0xE000000000000000;
    sub_1AFFCA878();

    swift_bridgeObjectRelease();
    a2(a1);
  }
  else
  {
    uint64_t v15 = *(void *)(a8 + 16);
    uint64_t v14 = *(void *)(a8 + 24);
    uint64_t v16 = *(void *)(a8 + 32);
    __int16 v17 = *(_WORD *)(a8 + 40);
    v18[0] = a6;
    v18[1] = a7;
    v18[2] = v15;
    v18[3] = v14;
    v18[4] = v16;
    __int16 v19 = v17;
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    a4(v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1AFD85D18(long long *a1, char *a2)
{
  long long v2 = a1[1];
  long long v17 = *a1;
  *(_OWORD *)uint64_t v18 = v2;
  *(_OWORD *)&v18[10] = *(long long *)((char *)a1 + 26);
  char v3 = *a2;
  if (qword_1EB817668 != -1) {
    swift_once();
  }
  id v4 = (void *)qword_1EB831AC0;
  sub_1AFD2CD48();
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1AFFD0610;
  sub_1AFD8D5B8((uint64_t)&v18[24], (uint64_t)&v19);
  sub_1AFD8D5B8((uint64_t)&v19, (uint64_t)&v16);
  id v6 = v4;
  uint64_t v7 = sub_1AFECE404();
  uint64_t v9 = v8;
  uint64_t v10 = MEMORY[0x1E4FBB1A0];
  *(void *)(v5 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v11 = sub_1AFD2CE00();
  *(void *)(v5 + 64) = v11;
  *(void *)(v5 + 32) = v7;
  *(void *)(v5 + 40) = v9;
  char v16 = v3;
  uint64_t v12 = sub_1AFECE404();
  *(void *)(v5 + 96) = v10;
  *(void *)(v5 + 104) = v11;
  *(void *)(v5 + 72) = v12;
  *(void *)(v5 + 80) = v13;
  sub_1AFFCB478();
  sub_1AFFCA878();

  uint64_t v14 = swift_bridgeObjectRelease();
  MEMORY[0x1F4188790](v14);
  sub_1AFD8D4C8(0, &qword_1EB818780, (uint64_t)&type metadata for Watchlist, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1AFFCA758();
}

void sub_1AFD85EFC(id *a1, unsigned __int8 a2, long long *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  id v21 = *a1;
  switch(a2 >> 5)
  {
    case 5:
      uint64_t v12 = (void *)sub_1AFFCB398();
      uint64_t v14 = 0;
      uint64_t v13 = 0;
      break;
    default:
      uint64_t v12 = (void *)sub_1AFFCB398();
      uint64_t v13 = (void *)sub_1AFFCB398();
      if (a2 > 0x5Fu) {
        uint64_t v14 = 0;
      }
      else {
        uint64_t v14 = (void *)sub_1AFFCB398();
      }
      break;
  }
  sub_1AFD8F6AC(0, &qword_1EB818068);
  long long v15 = a3[1];
  long long aBlock = *a3;
  *(_OWORD *)id v23 = v15;
  *(_OWORD *)&v23[10] = *(long long *)((char *)a3 + 26);
  sub_1AFD768D8((uint64_t)a3);
  id v16 = sub_1AFD86140((uint64_t)&aBlock);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a4;
  *(void *)(v17 + 24) = a5;
  *(void *)(v17 + 32) = a6;
  *(void *)(v17 + 40) = a7;
  long long v18 = a3[1];
  *(_OWORD *)(v17 + 48) = *a3;
  *(_OWORD *)(v17 + 64) = v18;
  *(_OWORD *)(v17 + 74) = *(long long *)((char *)a3 + 26);
  *(unsigned char *)(v17 + 90) = a2;
  *(void *)&unsigned char v23[16] = sub_1AFD8D6F4;
  *(void *)&v23[24] = v17;
  *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)id v23 = sub_1AFD82E64;
  *(void *)&_OWORD v23[8] = &block_descriptor_143;
  char v19 = _Block_copy(&aBlock);
  sub_1AFD768D8((uint64_t)a3);
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  swift_release();
  objc_msgSend(v21, sel_updateSortState_newSortOrderState_newDisplayState_watchlist_completion_, v12, v13, v14, v16, v19);
  _Block_release(v19);
}

id sub_1AFD86140(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 40);
  long long v2 = (void *)sub_1AFFCAE68();
  char v3 = (void *)sub_1AFFCAE68();
  id v4 = (void *)sub_1AFFCB1B8();
  switch(v1 >> 5)
  {
    case 5u:
      uint64_t v5 = (void *)sub_1AFFCB398();
      id v6 = 0;
      break;
    default:
      uint64_t v5 = (void *)sub_1AFFCB398();
      id v6 = (void *)sub_1AFFCB398();
      break;
  }
  id v7 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v8 = (void *)sub_1AFFCB398();
  id v9 = objc_msgSend(v7, sel_initWithIdentifier_name_symbols_sortState_sortOrderState_displayState_, v2, v3, v4, v5, v6, v8);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v9;
}

void sub_1AFD862CC(void *a1, void (*a2)(void *), uint64_t a3, void (*a4)(void *), uint64_t a5, uint64_t a6, unsigned __int8 a7)
{
  if (a1)
  {
    id v9 = a1;
    if (qword_1EB817668 != -1) {
      swift_once();
    }
    id v10 = (id)qword_1EB831AC0;
    sub_1AFFCB468();
    sub_1AFD2CD48();
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1AFFD05F0;
    sub_1AFD2CDB0(0, (unint64_t *)&qword_1EB81A110);
    sub_1AFFCB928();
    *(void *)(v11 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v11 + 64) = sub_1AFD2CE00();
    *(void *)(v11 + 32) = 0;
    *(void *)(v11 + 40) = 0xE000000000000000;
    sub_1AFFCA878();

    swift_bridgeObjectRelease();
    a2(a1);
  }
  else
  {
    char v13 = *(unsigned char *)(a6 + 41);
    if (a7 < 0x60u) {
      char v13 = a7 >> 5;
    }
    uint64_t v14 = *(void *)(a6 + 8);
    uint64_t v16 = *(void *)(a6 + 16);
    uint64_t v15 = *(void *)(a6 + 24);
    uint64_t v17 = *(void *)(a6 + 32);
    v18[0] = *(void *)a6;
    v18[1] = v14;
    v18[2] = v16;
    v18[3] = v15;
    v18[4] = v17;
    unsigned __int8 v19 = a7;
    char v20 = v13;
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    a4(v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1AFD864B0()
{
  if (qword_1EB817668 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EB831AC0;
  sub_1AFD2CD48();
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1AFFD0610;
  id v2 = v0;
  uint64_t v3 = sub_1AFF98CC8();
  uint64_t v5 = v4;
  uint64_t v6 = MEMORY[0x1E4FBB1A0];
  *(void *)(v1 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v7 = sub_1AFD2CE00();
  *(void *)(v1 + 64) = v7;
  *(void *)(v1 + 32) = v3;
  *(void *)(v1 + 40) = v5;
  uint64_t v8 = sub_1AFF98CC8();
  *(void *)(v1 + 96) = v6;
  *(void *)(v1 + 104) = v7;
  *(void *)(v1 + 72) = v8;
  *(void *)(v1 + 80) = v9;
  sub_1AFFCB478();
  sub_1AFFCA878();

  uint64_t v10 = swift_bridgeObjectRelease();
  MEMORY[0x1F4188790](v10);
  sub_1AFD8D4C8(0, &qword_1EB818780, (uint64_t)&type metadata for Watchlist, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1AFFCA758();
}

uint64_t sub_1AFD8667C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, _OWORD *a7)
{
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = a6;
  long long v14 = a7[1];
  *(_OWORD *)(v13 + 24) = *a7;
  *(_OWORD *)(v13 + 40) = v14;
  *(_OWORD *)(v13 + 50) = *(_OWORD *)((char *)a7 + 26);
  *(void *)(v13 + 72) = a3;
  *(void *)(v13 + 80) = a4;
  *(void *)(v13 + 88) = a1;
  *(void *)(v13 + 96) = a2;
  sub_1AFD768D8((uint64_t)a7);
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFCA4F8();

  return swift_release();
}

void sub_1AFD86744(void **a1, char a2, long long *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = *a1;
  long long v14 = (void *)sub_1AFFCB398();
  sub_1AFD8F6AC(0, &qword_1EB818068);
  long long v15 = a3[1];
  long long v20 = *a3;
  *(_OWORD *)id v21 = v15;
  *(_OWORD *)&v21[10] = *(long long *)((char *)a3 + 26);
  sub_1AFD768D8((uint64_t)a3);
  id v16 = sub_1AFD86140((uint64_t)&v20);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a4;
  *(void *)(v17 + 24) = a5;
  *(void *)(v17 + 32) = a6;
  *(void *)(v17 + 40) = a7;
  long long v18 = a3[1];
  *(_OWORD *)(v17 + 48) = *a3;
  *(_OWORD *)(v17 + 64) = v18;
  *(_OWORD *)(v17 + 74) = *(long long *)((char *)a3 + 26);
  *(unsigned char *)(v17 + 90) = a2;
  *(void *)&v21[16] = sub_1AFD8D5A0;
  *(void *)&unsigned char v21[24] = v17;
  *(void *)&long long v20 = MEMORY[0x1E4F143A8];
  *((void *)&v20 + 1) = 1107296256;
  *(void *)id v21 = sub_1AFD82E64;
  *(void *)&_OWORD v21[8] = &block_descriptor_134;
  unsigned __int8 v19 = _Block_copy(&v20);
  sub_1AFD768D8((uint64_t)a3);
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  swift_release();
  objc_msgSend(v13, sel_updateDisplayState_watchlist_completion_, v14, v16, v19);
  _Block_release(v19);
}

void sub_1AFD868D4(void *a1, void (*a2)(void *), uint64_t a3, void (*a4)(void *), uint64_t a5, uint64_t a6, char a7)
{
  if (a1)
  {
    id v9 = a1;
    if (qword_1EB817668 != -1) {
      swift_once();
    }
    id v10 = (id)qword_1EB831AC0;
    sub_1AFFCB468();
    sub_1AFD2CD48();
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1AFFD05F0;
    sub_1AFD2CDB0(0, (unint64_t *)&qword_1EB81A110);
    sub_1AFFCB928();
    *(void *)(v11 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v11 + 64) = sub_1AFD2CE00();
    *(void *)(v11 + 32) = 0;
    *(void *)(v11 + 40) = 0xE000000000000000;
    sub_1AFFCA878();

    swift_bridgeObjectRelease();
    a2(a1);
  }
  else
  {
    uint64_t v13 = *(void *)(a6 + 8);
    uint64_t v15 = *(void *)(a6 + 16);
    uint64_t v14 = *(void *)(a6 + 24);
    uint64_t v16 = *(void *)(a6 + 32);
    char v17 = *(unsigned char *)(a6 + 40);
    v18[0] = *(void *)a6;
    v18[1] = v13;
    v18[2] = v15;
    v18[3] = v14;
    v18[4] = v16;
    char v19 = v17;
    char v20 = a7;
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    a4(v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1AFD86AA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  id v9 = (void *)swift_allocObject();
  _OWORD v9[2] = a3;
  v9[3] = a4;
  v9[4] = sub_1AFD8F8D8;
  _OWORD v9[5] = v8;
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFCA4F8();

  return swift_release();
}

void sub_1AFD86B80(void **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v9 = *a1;
  id v10 = (void *)swift_allocObject();
  void v10[2] = a2;
  v10[3] = a3;
  void v10[4] = a4;
  v10[5] = a5;
  v12[4] = sub_1AFD8D528;
  void v12[5] = v10;
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 1107296256;
  void v12[2] = sub_1AFD871E4;
  uint64_t v12[3] = &block_descriptor_125;
  uint64_t v11 = _Block_copy(v12);
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  swift_release();
  objc_msgSend(v9, sel_fetchAllWatchlistsWithCompletion_, v11);
  _Block_release(v11);
}

void sub_1AFD86C80(unint64_t a1, id a2, void (*a3)(void), uint64_t a4, void (*a5)(void *))
{
  if (a2)
  {
    id v7 = a2;
    if (qword_1EB817668 != -1) {
      swift_once();
    }
    id v8 = (id)qword_1EB831AC0;
    sub_1AFFCB468();
    sub_1AFD2CD48();
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1AFFD05F0;
    long long v59 = a2;
    sub_1AFD2CDB0(0, (unint64_t *)&qword_1EB81A110);
    sub_1AFFCB928();
    *(void *)(v9 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v9 + 64) = sub_1AFD2CE00();
    *(void *)(v9 + 32) = 0;
    *(void *)(v9 + 40) = 0xE000000000000000;
    sub_1AFFCA878();

    swift_bridgeObjectRelease();
    ((void (*)(id))a3)(a2);

    return;
  }
  if (a1)
  {
    if (qword_1EB817668 != -1) {
      swift_once();
    }
    id v10 = (void *)qword_1EB831AC0;
    sub_1AFD2CD48();
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1AFFD0610;
    unint64_t v12 = a1;
    if (a1 >> 62)
    {
      id v46 = v10;
      sub_1AFFC8E38();
      uint64_t v13 = sub_1AFFCB9C8();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v13 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v14 = v10;
    }
    uint64_t v15 = MEMORY[0x1E4FBB5C8];
    *(void *)(v11 + 56) = MEMORY[0x1E4FBB550];
    *(void *)(v11 + 64) = v15;
    *(void *)(v11 + 32) = v13;
    uint64_t v16 = MEMORY[0x1E4FBC860];
    int64_t v17 = v13 & ~(v13 >> 63);
    uint64_t v52 = v13;
    if (v13)
    {
      int64_t v47 = v13 & ~(v13 >> 63);
      uint64_t v50 = v10;
      uint64_t v53 = MEMORY[0x1E4FBC860];
      sub_1AFD9DA10(0, v47, 0);
      if (v13 < 0)
      {
        __break(1u);
        goto LABEL_35;
      }
      uint64_t v18 = 0;
      uint64_t v16 = v53;
      do
      {
        if ((a1 & 0xC000000000000001) != 0) {
          id v19 = (id)MEMORY[0x1B3E8DC70](v18, a1);
        }
        else {
          id v19 = *(id *)(a1 + 8 * v18 + 32);
        }
        char v20 = v19;
        id v21 = objc_msgSend(v19, sel_name);
        uint64_t v22 = sub_1AFFCAE98();
        uint64_t v24 = v23;

        uint64_t v53 = v16;
        unint64_t v26 = *(void *)(v16 + 16);
        unint64_t v25 = *(void *)(v16 + 24);
        if (v26 >= v25 >> 1)
        {
          sub_1AFD9DA10(v25 > 1, v26 + 1, 1);
          uint64_t v16 = v53;
        }
        ++v18;
        *(void *)(v16 + 16) = v26 + 1;
        uint64_t v27 = v16 + 16 * v26;
        *(void *)(v27 + 32) = v22;
        *(void *)(v27 + 40) = v24;
      }
      while (v52 != v18);
      id v10 = v50;
      int64_t v17 = v47;
    }
    uint64_t v53 = v16;
    uint64_t v28 = MEMORY[0x1E4FBB1A0];
    sub_1AFD8D4C8(0, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1AFD8D2C0((unint64_t *)&qword_1EB819DD0);
    uint64_t v29 = sub_1AFFCAD88();
    uint64_t v31 = v30;
    swift_bridgeObjectRelease();
    *(void *)(v11 + 96) = v28;
    *(void *)(v11 + 104) = sub_1AFD2CE00();
    *(void *)(v11 + 72) = v29;
    *(void *)(v11 + 80) = v31;
    sub_1AFFCB478();
    sub_1AFFCA878();

    swift_bridgeObjectRelease();
    uint64_t v32 = (void *)MEMORY[0x1E4FBC860];
    if (!v52)
    {
LABEL_29:
      a5(v32);
      swift_bridgeObjectRelease();
      return;
    }
    long long v59 = (void *)MEMORY[0x1E4FBC860];
    sub_1AFD9DAB0(0, v17, 0);
    uint64_t v33 = v52;
    if ((v52 & 0x8000000000000000) == 0)
    {
      uint64_t v34 = 0;
      uint64_t v32 = v59;
      do
      {
        if ((a1 & 0xC000000000000001) != 0) {
          id v35 = (id)MEMORY[0x1B3E8DC70](v34, v12);
        }
        else {
          id v35 = *(id *)(v12 + 8 * v34 + 32);
        }
        sub_1AFEAB520(v35, (uint64_t)&v53);
        uint64_t v36 = v53;
        long long v37 = v54;
        uint64_t v39 = v55;
        uint64_t v38 = v56;
        char v40 = v57;
        char v41 = v58;
        long long v59 = v32;
        unint64_t v43 = v32[2];
        unint64_t v42 = v32[3];
        if (v43 >= v42 >> 1)
        {
          long long v48 = v54;
          sub_1AFD9DAB0(v42 > 1, v43 + 1, 1);
          long long v37 = v48;
          uint64_t v33 = v52;
          uint64_t v32 = v59;
        }
        v32[2] = v43 + 1;
        long long v44 = &v32[6 * v43];
        v44[4] = v36;
        ++v34;
        *(_OWORD *)(v44 + 5) = v37;
        v44[7] = v39;
        v44[8] = v38;
        *((unsigned char *)v44 + 72) = v40;
        *((unsigned char *)v44 + 73) = v41;
        unint64_t v12 = a1;
      }
      while (v33 != v34);
      goto LABEL_29;
    }
LABEL_35:
    __break(1u);
    return;
  }
  sub_1AFD8C9C8();
  long long v45 = (void *)swift_allocError();
  a3();
}

uint64_t sub_1AFD871E4(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1AFD871F8(a1, a2, a3, &qword_1EB818068);
}

uint64_t sub_1AFD871F8(uint64_t a1, uint64_t a2, void *a3, unint64_t *a4)
{
  uint64_t v5 = a2;
  uint64_t v6 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1AFD8F6AC(0, a4);
    uint64_t v5 = sub_1AFFCB1C8();
  }
  sub_1AFFC8E48();
  id v7 = a3;
  v6(v5, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFD87294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _OWORD *a6)
{
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a2;
  uint64_t v13 = swift_allocObject();
  long long v14 = a6[1];
  *(_OWORD *)(v13 + 16) = *a6;
  *(_OWORD *)(v13 + 32) = v14;
  *(_OWORD *)(v13 + 42) = *(_OWORD *)((char *)a6 + 26);
  *(void *)(v13 + 64) = a5;
  *(void *)(v13 + 72) = a3;
  *(void *)(v13 + 80) = a4;
  *(void *)(v13 + 88) = sub_1AFD8173C;
  *(void *)(v13 + 96) = v12;
  sub_1AFFC8E48();
  sub_1AFD768D8((uint64_t)a6);
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFCA4F8();

  return swift_release();
}

void sub_1AFD87394(void **a1, long long *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12 = *a1;
  sub_1AFD8F6AC(0, &qword_1EB818068);
  long long v13 = a2[1];
  long long v19 = *a2;
  *(_OWORD *)char v20 = v13;
  *(_OWORD *)&v20[10] = *(long long *)((char *)a2 + 26);
  sub_1AFD768D8((uint64_t)a2);
  id v14 = sub_1AFD86140((uint64_t)&v19);
  uint64_t v15 = swift_allocObject();
  swift_weakInit();
  uint64_t v16 = swift_allocObject();
  long long v17 = a2[1];
  *(_OWORD *)(v16 + 40) = *a2;
  *(void *)(v16 + 16) = v15;
  *(void *)(v16 + 24) = a4;
  *(void *)(v16 + 32) = a5;
  *(_OWORD *)(v16 + 56) = v17;
  *(_OWORD *)(v16 + 66) = *(long long *)((char *)a2 + 26);
  *(void *)(v16 + 88) = a6;
  *(void *)(v16 + 96) = a7;
  *(void *)&unsigned char v20[16] = sub_1AFD8D254;
  *(void *)&v20[24] = v16;
  *(void *)&long long v19 = MEMORY[0x1E4F143A8];
  *((void *)&v19 + 1) = 1107296256;
  *(void *)char v20 = sub_1AFD84504;
  *(void *)&v20[8] = &block_descriptor_113;
  uint64_t v18 = _Block_copy(&v19);
  sub_1AFD768D8((uint64_t)a2);
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  swift_release();
  objc_msgSend(v12, sel_fetchStocksFromWatchlist_completion_, v14, v18);
  _Block_release(v18);
}

void sub_1AFD87538(unint64_t a1, void *a2, uint64_t a3, void (*a4)(void), uint64_t a5, uint64_t *a6, void (*a7)(uint64_t))
{
  swift_beginAccess();
  if (!swift_weakLoadStrong())
  {
    uint64_t v15 = sub_1AFFC9E28();
    sub_1AFD8D268();
    uint64_t v16 = (void *)swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v15 - 8) + 104))(v17, *MEMORY[0x1E4FAA9A0], v15);
    ((void (*)(void *))a4)(v16);
    goto LABEL_7;
  }
  if (!a2)
  {
    if (a1)
    {
      if (qword_1EB817668 != -1) {
        swift_once();
      }
      uint64_t v18 = (void *)qword_1EB831AC0;
      sub_1AFD2CD48();
      uint64_t v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = xmmword_1AFFD0DC0;
      if (a1 >> 62)
      {
        id v40 = v18;
        sub_1AFFC8E38();
        uint64_t v20 = sub_1AFFCB9C8();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v20 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        id v21 = v18;
      }
      long long v44 = a7;
      uint64_t v22 = MEMORY[0x1E4FBB5C8];
      *(void *)(v19 + 56) = MEMORY[0x1E4FBB550];
      *(void *)(v19 + 64) = v22;
      *(void *)(v19 + 32) = v20;
      uint64_t v23 = *a6;
      uint64_t v24 = a6[1];
      *(void *)(v19 + 96) = MEMORY[0x1E4FBB1A0];
      unint64_t v43 = sub_1AFD2CE00();
      *(void *)(v19 + 104) = v43;
      *(void *)(v19 + 72) = v23;
      *(void *)(v19 + 80) = v24;
      if (v20)
      {
        uint64_t v41 = v19;
        unint64_t v42 = v18;
        uint64_t v45 = MEMORY[0x1E4FBC860];
        sub_1AFFC8E38();
        sub_1AFD9DA10(0, v20 & ~(v20 >> 63), 0);
        if (v20 < 0)
        {
          __break(1u);
          return;
        }
        uint64_t v25 = 0;
        do
        {
          if ((a1 & 0xC000000000000001) != 0) {
            id v26 = (id)MEMORY[0x1B3E8DC70](v25, a1);
          }
          else {
            id v26 = *(id *)(a1 + 8 * v25 + 32);
          }
          uint64_t v27 = v26;
          id v28 = objc_msgSend(v26, sel_symbol, v41, v42);
          uint64_t v29 = sub_1AFFCAE98();
          uint64_t v31 = v30;

          unint64_t v33 = *(void *)(v45 + 16);
          unint64_t v32 = *(void *)(v45 + 24);
          if (v33 >= v32 >> 1) {
            sub_1AFD9DA10(v32 > 1, v33 + 1, 1);
          }
          ++v25;
          *(void *)(v45 + 16) = v33 + 1;
          uint64_t v34 = v45 + 16 * v33;
          *(void *)(v34 + 32) = v29;
          *(void *)(v34 + 40) = v31;
        }
        while (v20 != v25);
        uint64_t v19 = v41;
        uint64_t v18 = v42;
      }
      else
      {
        sub_1AFFC8E38();
      }
      uint64_t v35 = MEMORY[0x1E4FBB1A0];
      sub_1AFD8D4C8(0, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
      sub_1AFD8D2C0((unint64_t *)&qword_1EB819DD0);
      uint64_t v36 = sub_1AFFCAD88();
      uint64_t v38 = v37;
      swift_bridgeObjectRelease();
      *(void *)(v19 + 136) = v35;
      *(void *)(v19 + 144) = v43;
      *(void *)(v19 + 112) = v36;
      *(void *)(v19 + 120) = v38;
      sub_1AFFCB478();
      sub_1AFFCA878();

      swift_bridgeObjectRelease();
      sub_1AFFC8E48();
      uint64_t v39 = sub_1AFD84360(a1);
      swift_release();
      v44(v39);
      swift_bridgeObjectRelease();
      swift_release();
      return;
    }
    sub_1AFD8C9C8();
    uint64_t v16 = (void *)swift_allocError();
    a4();
    swift_release();
LABEL_7:

    return;
  }
  id v12 = a2;
  if (qword_1EB817668 != -1) {
    swift_once();
  }
  id v13 = (id)qword_1EB831AC0;
  sub_1AFFCB468();
  sub_1AFD2CD48();
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1AFFD05F0;
  sub_1AFD2CDB0(0, (unint64_t *)&qword_1EB81A110);
  sub_1AFFCB928();
  *(void *)(v14 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v14 + 64) = sub_1AFD2CE00();
  *(void *)(v14 + 32) = 0;
  *(void *)(v14 + 40) = 0xE000000000000000;
  sub_1AFFCA878();

  swift_bridgeObjectRelease();
  ((void (*)(void *))a4)(a2);
  swift_release();
}

uint64_t sub_1AFD87A84(uint64_t a1, long long *a2)
{
  long long v11 = *(_OWORD *)(a1 + 16);
  if (qword_1EB817668 != -1) {
    swift_once();
  }
  uint64_t v3 = (void *)qword_1EB831AC0;
  sub_1AFD2CD48();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1AFFD0610;
  long long v13 = v11;
  uint64_t v5 = MEMORY[0x1E4FBB1A0];
  *(void *)(v4 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v6 = sub_1AFD2CE00();
  *(void *)(v4 + 64) = v6;
  *(_OWORD *)(v4 + 32) = v11;
  long long v12 = *a2;
  long long v7 = v12;
  *(void *)(v4 + 96) = v5;
  *(void *)(v4 + 104) = v6;
  *(_OWORD *)(v4 + 72) = v7;
  id v8 = v3;
  sub_1AFD8C5F8((uint64_t)&v13);
  sub_1AFD8C5F8((uint64_t)&v12);
  sub_1AFFCB478();
  sub_1AFFCA878();

  uint64_t v9 = swift_bridgeObjectRelease();
  MEMORY[0x1F4188790](v9);
  sub_1AFD8D4C8(0, (unint64_t *)&qword_1EB817DD0, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1AFFCA758();
}

uint64_t sub_1AFD87C70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _OWORD *a7)
{
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = a2;
  uint64_t v15 = swift_allocObject();
  long long v16 = *(_OWORD *)(a6 + 64);
  *(_OWORD *)(v15 + 104) = *(_OWORD *)(a6 + 80);
  long long v17 = *(_OWORD *)(a6 + 112);
  *(_OWORD *)(v15 + 120) = *(_OWORD *)(a6 + 96);
  *(_OWORD *)(v15 + 136) = v17;
  long long v18 = *(_OWORD *)a6;
  *(_OWORD *)(v15 + 40) = *(_OWORD *)(a6 + 16);
  long long v19 = *(_OWORD *)(a6 + 48);
  *(_OWORD *)(v15 + 56) = *(_OWORD *)(a6 + 32);
  *(_OWORD *)(v15 + 72) = v19;
  *(void *)(v15 + 16) = a5;
  *(void *)(v15 + 152) = *(void *)(a6 + 128);
  *(_OWORD *)(v15 + 88) = v16;
  *(_OWORD *)(v15 + 24) = v18;
  long long v20 = a7[1];
  *(_OWORD *)(v15 + 160) = *a7;
  *(_OWORD *)(v15 + 176) = v20;
  *(_OWORD *)(v15 + 186) = *(_OWORD *)((char *)a7 + 26);
  *(void *)(v15 + 208) = a3;
  *(void *)(v15 + 216) = a4;
  *(void *)(v15 + 224) = sub_1AFD8CF3C;
  *(void *)(v15 + 232) = v14;
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFD76370(a6);
  sub_1AFD768D8((uint64_t)a7);
  sub_1AFFC8E48();
  sub_1AFFCA4F8();

  return swift_release();
}

uint64_t sub_1AFD87DBC(uint64_t (*a1)(void))
{
  return a1();
}

void sub_1AFD87DE4(id *a1, void *a2, uint64_t a3, long long *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  id v36 = *a1;
  uint64_t v11 = a2[7];
  uint64_t v12 = a2[8];
  __swift_project_boxed_opaque_existential_1(a2 + 4, v11);
  long long v13 = *(_OWORD *)(a3 + 112);
  long long v42 = *(_OWORD *)(a3 + 96);
  long long v43 = v13;
  uint64_t v44 = *(void *)(a3 + 128);
  long long v14 = *(_OWORD *)(a3 + 48);
  *(_OWORD *)&v38[16] = *(_OWORD *)(a3 + 32);
  long long v39 = v14;
  long long v15 = *(_OWORD *)(a3 + 80);
  long long v40 = *(_OWORD *)(a3 + 64);
  long long v41 = v15;
  long long v16 = *(_OWORD *)(a3 + 16);
  long long aBlock = *(_OWORD *)a3;
  *(_OWORD *)uint64_t v38 = v16;
  (*(void (**)(long long *, uint64_t, uint64_t))(v12 + 16))(&aBlock, v11, v12);
  swift_release();
  id v17 = objc_allocWithZone((Class)SCWWatchedStock);
  sub_1AFD76370(a3);
  long long v18 = (void *)sub_1AFFCAE68();
  long long v19 = (void *)sub_1AFFCAE68();
  long long v20 = (void *)sub_1AFFCAE68();
  id v21 = (void *)sub_1AFFCAE68();
  uint64_t v22 = (void *)sub_1AFFCAE68();
  sub_1AFD76408(a3);
  id v23 = objc_msgSend(v17, sel_initWithName_shortName_compactName_symbol_exchange_, v18, v19, v20, v21, v22);

  sub_1AFD8F6AC(0, &qword_1EB818068);
  long long v24 = a4[1];
  long long aBlock = *a4;
  *(_OWORD *)uint64_t v38 = v24;
  *(_OWORD *)&v38[10] = *(long long *)((char *)a4 + 26);
  sub_1AFD768D8((uint64_t)a4);
  id v25 = sub_1AFD86140((uint64_t)&aBlock);
  uint64_t v26 = swift_allocObject();
  long long v27 = *(_OWORD *)(a3 + 112);
  *(_OWORD *)(v26 + 112) = *(_OWORD *)(a3 + 96);
  *(_OWORD *)(v26 + 128) = v27;
  long long v28 = *(_OWORD *)(a3 + 48);
  *(_OWORD *)(v26 + 48) = *(_OWORD *)(a3 + 32);
  *(_OWORD *)(v26 + 64) = v28;
  long long v29 = *(_OWORD *)(a3 + 80);
  *(_OWORD *)(v26 + 80) = *(_OWORD *)(a3 + 64);
  *(_OWORD *)(v26 + 96) = v29;
  long long v30 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v26 + 16) = *(_OWORD *)a3;
  *(_OWORD *)(v26 + 32) = v30;
  long long v31 = a4[1];
  *(_OWORD *)(v26 + 152) = *a4;
  *(void *)(v26 + 144) = *(void *)(a3 + 128);
  *(_OWORD *)(v26 + 168) = v31;
  *(_OWORD *)(v26 + 178) = *(long long *)((char *)a4 + 26);
  *(void *)(v26 + 200) = a5;
  *(void *)(v26 + 208) = a6;
  *(void *)(v26 + 216) = a7;
  *(void *)(v26 + 224) = a8;
  *(void *)&v38[16] = sub_1AFD8D0B4;
  *(void *)&v38[24] = v26;
  *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)uint64_t v38 = sub_1AFD82E64;
  *(void *)&v38[8] = &block_descriptor_91;
  unint64_t v32 = _Block_copy(&aBlock);
  sub_1AFD76370(a3);
  sub_1AFD768D8((uint64_t)a4);
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  swift_release();
  objc_msgSend(v36, sel_addStock_watchlist_completion_, v23, v25, v32);
  _Block_release(v32);
}

void sub_1AFD880A0(void *a1, uint64_t a2, long long *a3, void (*a4)(void *), uint64_t a5, void (*a6)(void))
{
  if (a1)
  {
    id v10 = a1;
    if (qword_1EB816A80 != -1) {
      swift_once();
    }
    id v11 = (id)qword_1EB831A78;
    sub_1AFFCB468();
    sub_1AFD2CD48();
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1AFFD0DC0;
    long long v17 = *(_OWORD *)(a2 + 16);
    uint64_t v13 = MEMORY[0x1E4FBB1A0];
    *(void *)(v12 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v14 = sub_1AFD2CE00();
    *(void *)(v12 + 64) = v14;
    *(_OWORD *)(v12 + 32) = *(_OWORD *)(a2 + 16);
    long long v16 = *a3;
    long long v15 = v16;
    *(void *)(v12 + 96) = v13;
    *(void *)(v12 + 104) = v14;
    *(_OWORD *)(v12 + 72) = v15;
    sub_1AFD8C5F8((uint64_t)&v17);
    sub_1AFD8C5F8((uint64_t)&v16);
    sub_1AFD2CDB0(0, (unint64_t *)&qword_1EB81A110);
    sub_1AFFCB928();
    *(void *)(v12 + 136) = v13;
    *(void *)(v12 + 144) = v14;
    *(void *)(v12 + 112) = 0;
    *(void *)(v12 + 120) = 0xE000000000000000;
    sub_1AFFCA878();

    swift_bridgeObjectRelease();
    a4(a1);
  }
  else
  {
    a6();
  }
}

uint64_t sub_1AFD8825C(uint64_t a1, uint64_t a2, long long *a3)
{
  if (qword_1EB817668 != -1) {
    swift_once();
  }
  unint64_t v6 = (void *)qword_1EB831AC0;
  sub_1AFD2CD48();
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1AFFD0610;
  uint64_t v8 = MEMORY[0x1E4FBB1A0];
  *(void *)(v7 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v9 = sub_1AFD2CE00();
  *(void *)(v7 + 64) = v9;
  *(void *)(v7 + 32) = a1;
  *(void *)(v7 + 40) = a2;
  long long v14 = *a3;
  long long v10 = v14;
  *(void *)(v7 + 96) = v8;
  *(void *)(v7 + 104) = v9;
  *(_OWORD *)(v7 + 72) = v10;
  id v11 = v6;
  sub_1AFFC8E38();
  sub_1AFD8C5F8((uint64_t)&v14);
  sub_1AFFCB478();
  sub_1AFFCA878();

  uint64_t v12 = swift_bridgeObjectRelease();
  MEMORY[0x1F4188790](v12);
  sub_1AFD8D4C8(0, &qword_1EB811150, v8, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1AFFCA758();
}

uint64_t sub_1AFD88410(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, _OWORD *a8)
{
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  *(void *)(v15 + 24) = a2;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a6;
  *(void *)(v16 + 24) = a7;
  long long v17 = a8[1];
  *(_OWORD *)(v16 + 32) = *a8;
  *(_OWORD *)(v16 + 48) = v17;
  *(_OWORD *)(v16 + 58) = *(_OWORD *)((char *)a8 + 26);
  *(void *)(v16 + 80) = a3;
  *(void *)(v16 + 88) = a4;
  *(void *)(v16 + 96) = sub_1AFD8CA4C;
  *(void *)(v16 + 104) = v15;
  sub_1AFFC8E48();
  sub_1AFFC8E38();
  sub_1AFD768D8((uint64_t)a8);
  sub_1AFFC8E48();
  sub_1AFFCA4F8();

  return swift_release();
}

void sub_1AFD88520(id *a1, uint64_t a2, uint64_t a3, long long *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  id v21 = *a1;
  uint64_t v15 = (void *)sub_1AFFCAE68();
  sub_1AFD8F6AC(0, &qword_1EB818068);
  long long v16 = a4[1];
  long long aBlock = *a4;
  *(_OWORD *)id v23 = v16;
  *(_OWORD *)&v23[10] = *(long long *)((char *)a4 + 26);
  sub_1AFD768D8((uint64_t)a4);
  id v17 = sub_1AFD86140((uint64_t)&aBlock);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a2;
  *(void *)(v18 + 24) = a3;
  long long v19 = a4[1];
  *(_OWORD *)(v18 + 32) = *a4;
  *(_OWORD *)(v18 + 48) = v19;
  *(_OWORD *)(v18 + 58) = *(long long *)((char *)a4 + 26);
  *(void *)(v18 + 80) = a5;
  *(void *)(v18 + 88) = a6;
  *(void *)(v18 + 96) = a7;
  *(void *)(v18 + 104) = a8;
  *(void *)&unsigned char v23[16] = sub_1AFD8CF1C;
  *(void *)&v23[24] = v18;
  *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)id v23 = sub_1AFD82E64;
  *(void *)&_OWORD v23[8] = &block_descriptor_79;
  long long v20 = _Block_copy(&aBlock);
  sub_1AFD768D8((uint64_t)a4);
  sub_1AFFC8E38();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  swift_release();
  objc_msgSend(v21, sel_removeSymbol_watchlist_completion_, v15, v17, v20);
  _Block_release(v20);
}

void sub_1AFD886C4(void *a1, uint64_t a2, uint64_t a3, long long *a4, void (*a5)(void *), uint64_t a6, void (*a7)(uint64_t, uint64_t))
{
  if (a1)
  {
    id v11 = a1;
    if (qword_1EB816A80 != -1) {
      swift_once();
    }
    id v12 = (id)qword_1EB831A78;
    sub_1AFFCB468();
    sub_1AFD2CD48();
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1AFFD0DC0;
    uint64_t v14 = MEMORY[0x1E4FBB1A0];
    *(void *)(v13 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v15 = sub_1AFD2CE00();
    *(void *)(v13 + 64) = v15;
    *(void *)(v13 + 32) = a2;
    *(void *)(v13 + 40) = a3;
    long long v18 = *a4;
    long long v16 = v18;
    *(void *)(v13 + 96) = v14;
    *(void *)(v13 + 104) = v15;
    *(_OWORD *)(v13 + 72) = v16;
    sub_1AFFC8E38();
    sub_1AFD8C5F8((uint64_t)&v18);
    sub_1AFD2CDB0(0, (unint64_t *)&qword_1EB81A110);
    sub_1AFFCB928();
    *(void *)(v13 + 136) = v14;
    *(void *)(v13 + 144) = v15;
    *(void *)(v13 + 112) = 0;
    *(void *)(v13 + 120) = 0xE000000000000000;
    sub_1AFFCA878();

    swift_bridgeObjectRelease();
    a5(a1);
  }
  else
  {
    a7(a2, a3);
  }
}

uint64_t sub_1AFD88884(uint64_t a1, uint64_t a2, long long *a3)
{
  long long v17 = *(_OWORD *)(a1 + 16);
  sub_1AFD8CB20(a2, (uint64_t)v18, &qword_1EB817B30, (uint64_t)&type metadata for Stock);
  sub_1AFD8CB20(a2, (uint64_t)v24, &qword_1EB817B30, (uint64_t)&type metadata for Stock);
  long long v5 = a3[1];
  long long v19 = *a3;
  v20[0] = v5;
  *(_OWORD *)((char *)v20 + 10) = *(long long *)((char *)a3 + 26);
  if (qword_1EB817668 != -1) {
    swift_once();
  }
  unint64_t v6 = (void *)qword_1EB831AC0;
  sub_1AFD2CD48();
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1AFFD0DC0;
  long long v23 = v17;
  uint64_t v8 = MEMORY[0x1E4FBB1A0];
  *(void *)(v7 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v9 = sub_1AFD2CE00();
  *(void *)(v7 + 64) = v9;
  *(_OWORD *)(v7 + 32) = v17;
  sub_1AFD8CB20((uint64_t)v18, (uint64_t)v21, &qword_1EB817B30, (uint64_t)&type metadata for Stock);
  if (sub_1AFD48F48((uint64_t)v21) == 1)
  {
    long long v10 = (void *)(v7 + 72);
    *(void *)(v7 + 96) = v8;
    *(void *)(v7 + 104) = v9;
LABEL_7:
    *long long v10 = 7104878;
    uint64_t v12 = 0xE300000000000000;
    goto LABEL_8;
  }
  uint64_t v11 = v21[2];
  long long v10 = (void *)(v7 + 72);
  *(void *)(v7 + 96) = v8;
  *(void *)(v7 + 104) = v9;
  uint64_t v12 = sub_1AFFC8E38();
  if (!v12) {
    goto LABEL_7;
  }
  *long long v10 = v11;
LABEL_8:
  *(void *)(v7 + 80) = v12;
  long long v13 = v19;
  long long v22 = v19;
  *(void *)(v7 + 136) = v8;
  *(void *)(v7 + 144) = v9;
  *(_OWORD *)(v7 + 112) = v13;
  id v14 = v6;
  sub_1AFD8C5F8((uint64_t)&v23);
  sub_1AFD8C5F8((uint64_t)&v22);
  sub_1AFFCB478();
  sub_1AFFCA878();

  uint64_t v15 = swift_bridgeObjectRelease();
  MEMORY[0x1F4188790](v15);
  sub_1AFD8D4C8(0, &qword_1E9AFA328, (uint64_t)&type metadata for Stock, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1AFFCA758();
}

uint64_t sub_1AFD88B28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, _OWORD *a8)
{
  uint64_t v15 = swift_allocObject();
  long long v16 = *(_OWORD *)(a6 + 112);
  *(_OWORD *)(v15 + 112) = *(_OWORD *)(a6 + 96);
  *(_OWORD *)(v15 + 128) = v16;
  *(void *)(v15 + 144) = *(void *)(a6 + 128);
  long long v17 = *(_OWORD *)(a6 + 48);
  *(_OWORD *)(v15 + 48) = *(_OWORD *)(a6 + 32);
  *(_OWORD *)(v15 + 64) = v17;
  long long v18 = *(_OWORD *)(a6 + 80);
  *(_OWORD *)(v15 + 80) = *(_OWORD *)(a6 + 64);
  *(_OWORD *)(v15 + 96) = v18;
  long long v19 = *(_OWORD *)(a6 + 16);
  *(_OWORD *)(v15 + 16) = *(_OWORD *)a6;
  *(_OWORD *)(v15 + 32) = v19;
  sub_1AFD8CB20((uint64_t)a7, v15 + 152, &qword_1EB817B30, (uint64_t)&type metadata for Stock);
  long long v20 = a8[1];
  *(_OWORD *)(v15 + 288) = *a8;
  *(_OWORD *)(v15 + 304) = v20;
  *(_OWORD *)(v15 + 314) = *(_OWORD *)((char *)a8 + 26);
  *(void *)(v15 + 336) = a3;
  *(void *)(v15 + 344) = a4;
  *(void *)(v15 + 352) = a1;
  *(void *)(v15 + 360) = a2;
  sub_1AFD76370(a6);
  sub_1AFD8CCA0(a7);
  sub_1AFD768D8((uint64_t)a8);
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFCA4F8();

  return swift_release();
}

void sub_1AFD88C54(id *a1, uint64_t a2, uint64_t *a3, long long *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  id v26 = *a1;
  long long v13 = (void *)sub_1AFFCAE68();
  sub_1AFD8CB20((uint64_t)a3, (uint64_t)v29, &qword_1EB817B30, (uint64_t)&type metadata for Stock);
  if (sub_1AFD48F48((uint64_t)v29) == 1) {
    id v14 = 0;
  }
  else {
    id v14 = (void *)sub_1AFFCAE68();
  }
  sub_1AFD8F6AC(0, &qword_1EB818068);
  long long v15 = a4[1];
  long long aBlock = *a4;
  *(_OWORD *)long long v28 = v15;
  *(_OWORD *)&v28[10] = *(long long *)((char *)a4 + 26);
  sub_1AFD768D8((uint64_t)a4);
  id v16 = sub_1AFD86140((uint64_t)&aBlock);
  uint64_t v17 = swift_allocObject();
  long long v18 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(v17 + 112) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(v17 + 128) = v18;
  long long v19 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v17 + 48) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v17 + 64) = v19;
  long long v20 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(v17 + 80) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(v17 + 96) = v20;
  long long v21 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v17 + 16) = *(_OWORD *)a2;
  *(_OWORD *)(v17 + 32) = v21;
  long long v22 = a4[1];
  *(_OWORD *)(v17 + 152) = *a4;
  *(void *)(v17 + 144) = *(void *)(a2 + 128);
  *(_OWORD *)(v17 + 168) = v22;
  *(_OWORD *)(v17 + 178) = *(long long *)((char *)a4 + 26);
  sub_1AFD8CB20((uint64_t)a3, v17 + 200, &qword_1EB817B30, (uint64_t)&type metadata for Stock);
  *(void *)(v17 + 336) = a5;
  *(void *)(v17 + 344) = a6;
  *(void *)(v17 + 352) = a7;
  *(void *)(v17 + 360) = a8;
  *(void *)&v28[16] = sub_1AFD8CE7C;
  *(void *)&v28[24] = v17;
  *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)long long v28 = sub_1AFD82E64;
  *(void *)&_OWORD v28[8] = &block_descriptor_66;
  long long v23 = _Block_copy(&aBlock);
  sub_1AFD768D8((uint64_t)a4);
  sub_1AFD76370(a2);
  sub_1AFD8CCA0(a3);
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  swift_release();
  objc_msgSend(v26, sel_reorderSymbol_afterSymbol_watchlist_completion_, v13, v14, v16, v23);
  _Block_release(v23);
}

void sub_1AFD88E90(void *a1, long long *a2, long long *a3, uint64_t a4, void (*a5)(void *), uint64_t a6, void (*a7)(long long *))
{
  if (!a1)
  {
    long long v19 = a2[6];
    long long v33 = a2[7];
    uint64_t v34 = *((void *)a2 + 16);
    long long v20 = a2[3];
    long long v28 = a2[2];
    long long v29 = v20;
    long long v21 = a2[4];
    long long v31 = a2[5];
    long long v32 = v19;
    long long v30 = v21;
    long long v22 = a2[1];
    long long v26 = *a2;
    long long v27 = v22;
    a7(&v26);
    return;
  }
  id v11 = a1;
  if (qword_1EB816A80 != -1) {
    swift_once();
  }
  id v12 = (id)qword_1EB831A78;
  sub_1AFFCB468();
  sub_1AFD2CD48();
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1AFFD3AE0;
  long long v36 = a2[1];
  uint64_t v14 = MEMORY[0x1E4FBB1A0];
  *(void *)(v13 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v15 = sub_1AFD2CE00();
  *(void *)(v13 + 64) = v15;
  long long v16 = a2[1];
  *(_OWORD *)(v13 + 32) = v16;
  long long v35 = *a3;
  long long v17 = v35;
  *(void *)(v13 + 96) = v14;
  *(void *)(v13 + 104) = v15;
  *(_OWORD *)(v13 + 72) = v17;
  *(void *)(v13 + 136) = v14;
  *(void *)(v13 + 144) = v15;
  *(_OWORD *)(v13 + 112) = v16;
  sub_1AFD8CB20(a4, (uint64_t)&v26, &qword_1EB817B30, (uint64_t)&type metadata for Stock);
  if (sub_1AFD48F48((uint64_t)&v26) == 1)
  {
    long long v18 = (void *)(v13 + 152);
    *(void *)(v13 + 176) = v14;
    *(void *)(v13 + 184) = v15;
LABEL_9:
    *long long v18 = 7104878;
    uint64_t v24 = 0xE300000000000000;
    goto LABEL_10;
  }
  uint64_t v23 = v27;
  long long v18 = (void *)(v13 + 152);
  *(void *)(v13 + 176) = v14;
  *(void *)(v13 + 184) = v15;
  uint64_t v24 = sub_1AFFC8E38();
  if (!v24) {
    goto LABEL_9;
  }
  *long long v18 = v23;
LABEL_10:
  *(void *)(v13 + 160) = v24;
  sub_1AFFC8E38();
  sub_1AFD8C5F8((uint64_t)&v36);
  sub_1AFD8C5F8((uint64_t)&v35);
  sub_1AFD2CDB0(0, (unint64_t *)&qword_1EB81A110);
  sub_1AFFCB928();
  *(void *)(v13 + 216) = v14;
  *(void *)(v13 + 224) = v15;
  *(void *)(v13 + 192) = 0;
  *(void *)(v13 + 200) = 0xE000000000000000;
  sub_1AFFCA878();

  swift_bridgeObjectRelease();
  a5(a1);
}

uint64_t sub_1AFD890FC(uint64_t a1, long long *a2)
{
  if (qword_1EB817668 != -1) {
    swift_once();
  }
  uint64_t v4 = (void *)qword_1EB831AC0;
  sub_1AFD2CD48();
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1AFFD0610;
  uint64_t v6 = MEMORY[0x1E4FBB1A0];
  sub_1AFD8D4C8(0, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  *(void *)(v5 + 56) = v7;
  *(void *)(v5 + 64) = sub_1AFD8D2C0((unint64_t *)&qword_1EB819DE0);
  *(void *)(v5 + 32) = a1;
  long long v11 = *a2;
  *(void *)(v5 + 96) = v6;
  *(void *)(v5 + 104) = sub_1AFD2CE00();
  *(_OWORD *)(v5 + 72) = *a2;
  id v8 = v4;
  sub_1AFFC8E38();
  sub_1AFD8C5F8((uint64_t)&v11);
  sub_1AFFCB478();
  sub_1AFFCA878();

  uint64_t v9 = swift_bridgeObjectRelease();
  MEMORY[0x1F4188790](v9);
  sub_1AFD8C93C(0, (unint64_t *)&qword_1EB817DC0, (unint64_t *)&qword_1EB819DC0, v6);
  swift_allocObject();
  return sub_1AFFCA758();
}

uint64_t sub_1AFD892F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _OWORD *a7)
{
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = a2;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a6;
  long long v15 = a7[1];
  *(_OWORD *)(v14 + 24) = *a7;
  *(_OWORD *)(v14 + 40) = v15;
  *(_OWORD *)(v14 + 50) = *(_OWORD *)((char *)a7 + 26);
  *(void *)(v14 + 72) = a3;
  *(void *)(v14 + 80) = a4;
  *(void *)(v14 + 88) = sub_1AFD8F8D8;
  *(void *)(v14 + 96) = v13;
  sub_1AFFC8E48();
  sub_1AFFC8E38();
  sub_1AFD768D8((uint64_t)a7);
  sub_1AFFC8E48();
  sub_1AFFCA4F8();

  return swift_release();
}

void sub_1AFD89400(void **a1, uint64_t a2, long long *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = *a1;
  sub_1AFD895E8(a2);
  id v14 = objc_allocWithZone(MEMORY[0x1E4F1CAA0]);
  long long v15 = (void *)sub_1AFFCB1B8();
  swift_bridgeObjectRelease();
  id v16 = objc_msgSend(v14, sel_initWithArray_, v15);

  sub_1AFD8F6AC(0, &qword_1EB818068);
  long long v17 = a3[1];
  long long v22 = *a3;
  *(_OWORD *)uint64_t v23 = v17;
  *(_OWORD *)&v23[10] = *(long long *)((char *)a3 + 26);
  sub_1AFD768D8((uint64_t)a3);
  id v18 = sub_1AFD86140((uint64_t)&v22);
  uint64_t v19 = swift_allocObject();
  long long v20 = a3[1];
  *(_OWORD *)(v19 + 24) = *a3;
  *(void *)(v19 + 16) = a2;
  *(_OWORD *)(v19 + 40) = v20;
  *(_OWORD *)(v19 + 50) = *(long long *)((char *)a3 + 26);
  *(void *)(v19 + 72) = a4;
  *(void *)(v19 + 80) = a5;
  *(void *)(v19 + 88) = a6;
  *(void *)(v19 + 96) = a7;
  *(void *)&unsigned char v23[16] = sub_1AFD8DDD8;
  *(void *)&v23[24] = v19;
  *(void *)&long long v22 = MEMORY[0x1E4F143A8];
  *((void *)&v22 + 1) = 1107296256;
  *(void *)uint64_t v23 = sub_1AFD82E64;
  *(void *)&_OWORD v23[8] = &block_descriptor_225;
  long long v21 = _Block_copy(&v22);
  sub_1AFD768D8((uint64_t)a3);
  sub_1AFFC8E38();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  swift_release();
  objc_msgSend(v13, sel_reorderSymbols_watchlist_completion_, v16, v18, v21);
  _Block_release(v21);
}

uint64_t sub_1AFD895E8(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    sub_1AFD9DAF0(0, v1, 0);
    uint64_t v2 = v9;
    uint64_t v4 = a1 + 40;
    do
    {
      sub_1AFFC8E38();
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1AFD9DAF0(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v9;
      }
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1AFD9DAF0(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v9;
      }
      v4 += 16;
      *(void *)(v2 + 16) = v6 + 1;
      sub_1AFD8DDEC(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      --v1;
    }
    while (v1);
  }
  return v2;
}

void sub_1AFD89710(void *a1, uint64_t a2, long long *a3, void (*a4)(void *), uint64_t a5, void (*a6)(uint64_t))
{
  if (a1)
  {
    id v10 = a1;
    if (qword_1EB817668 != -1) {
      swift_once();
    }
    id v11 = (id)qword_1EB831AC0;
    sub_1AFFCB468();
    sub_1AFD2CD48();
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1AFFD0610;
    uint64_t v13 = MEMORY[0x1E4FBB1A0];
    sub_1AFD8D4C8(0, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    *(void *)(v12 + 56) = v14;
    *(void *)(v12 + 64) = sub_1AFD8D2C0((unint64_t *)&qword_1EB819DE0);
    *(void *)(v12 + 32) = a2;
    long long v15 = *a3;
    *(void *)(v12 + 96) = v13;
    *(void *)(v12 + 104) = sub_1AFD2CE00();
    *(_OWORD *)(v12 + 72) = *a3;
    sub_1AFFC8E38();
    sub_1AFD8C5F8((uint64_t)&v15);
    sub_1AFFCA878();

    swift_bridgeObjectRelease();
    a4(a1);
  }
  else
  {
    a6(a2);
  }
}

uint64_t sub_1AFD898C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, long long *a5)
{
  if (qword_1EB817668 != -1) {
    swift_once();
  }
  id v10 = (void *)qword_1EB831AC0;
  sub_1AFD2CD48();
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1AFFD0DC0;
  uint64_t v12 = MEMORY[0x1E4FBB1A0];
  *(void *)(v11 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v13 = sub_1AFD2CE00();
  *(void *)(v11 + 32) = a1;
  *(void *)(v11 + 40) = a2;
  *(void *)(v11 + 96) = v12;
  *(void *)(v11 + 104) = v13;
  *(void *)(v11 + 64) = v13;
  *(void *)(v11 + 72) = a3;
  *(void *)(v11 + 80) = a4;
  long long v18 = *a5;
  long long v14 = v18;
  *(void *)(v11 + 136) = v12;
  *(void *)(v11 + 144) = v13;
  *(_OWORD *)(v11 + 112) = v14;
  id v15 = v10;
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFD8C5F8((uint64_t)&v18);
  sub_1AFFCB478();
  sub_1AFFCA878();

  uint64_t v16 = swift_bridgeObjectRelease();
  MEMORY[0x1F4188790](v16);
  sub_1AFD8D4C8(0, &qword_1EB811150, v12, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1AFFCA758();
}

uint64_t sub_1AFD89A98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _OWORD *a10)
{
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  *(void *)(v15 + 24) = a2;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a6;
  *(void *)(v16 + 24) = a7;
  *(void *)(v16 + 32) = a8;
  *(void *)(v16 + 40) = a9;
  long long v17 = a10[1];
  *(_OWORD *)(v16 + 48) = *a10;
  *(_OWORD *)(v16 + 64) = v17;
  *(_OWORD *)(v16 + 74) = *(_OWORD *)((char *)a10 + 26);
  *(void *)(v16 + 96) = a3;
  *(void *)(v16 + 104) = a4;
  *(void *)(v16 + 112) = sub_1AFD8CA4C;
  *(void *)(v16 + 120) = v15;
  sub_1AFFC8E48();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFD768D8((uint64_t)a10);
  sub_1AFFC8E48();
  sub_1AFFCA4F8();

  return swift_release();
}

void sub_1AFD89BC4(void **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, long long *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  long long v21 = *a1;
  long long v20 = (void *)sub_1AFFCAE68();
  uint64_t v15 = (void *)sub_1AFFCAE68();
  sub_1AFD8F6AC(0, &qword_1EB818068);
  long long v16 = a6[1];
  long long aBlock = *a6;
  *(_OWORD *)uint64_t v23 = v16;
  *(_OWORD *)&v23[10] = *(long long *)((char *)a6 + 26);
  sub_1AFD768D8((uint64_t)a6);
  id v17 = sub_1AFD86140((uint64_t)&aBlock);
  long long v18 = (void *)swift_allocObject();
  v18[2] = a7;
  v18[3] = a8;
  v18[4] = a9;
  void v18[5] = a10;
  v18[6] = a4;
  v18[7] = a5;
  *(void *)&unsigned char v23[16] = sub_1AFD8CB1C;
  *(void *)&v23[24] = v18;
  *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)uint64_t v23 = sub_1AFD82E64;
  *(void *)&_OWORD v23[8] = &block_descriptor_57;
  uint64_t v19 = _Block_copy(&aBlock);
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E38();
  swift_release();
  objc_msgSend(v21, sel_replaceSymbol_withSymbol_watchlist_completion_, v20, v15, v17, v19);
  _Block_release(v19);
}

void sub_1AFD89D68(void *a1, void (*a2)(void *), uint64_t a3, void (*a4)(uint64_t, uint64_t), uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (a1)
  {
    id v9 = a1;
    a2(a1);
  }
  else
  {
    a4(a6, a7);
  }
}

uint64_t sub_1AFD89DE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  id v9 = (void *)swift_allocObject();
  _OWORD v9[2] = a3;
  v9[3] = a4;
  v9[4] = sub_1AFD8F8D8;
  _OWORD v9[5] = v8;
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFCA4F8();

  return swift_release();
}

void sub_1AFD89EBC(void **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v9 = *a1;
  id v10 = (void *)swift_allocObject();
  void v10[2] = a2;
  v10[3] = a3;
  void v10[4] = a4;
  v10[5] = a5;
  v12[4] = sub_1AFD8C9BC;
  void v12[5] = v10;
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 1107296256;
  void v12[2] = sub_1AFD8A190;
  uint64_t v12[3] = &block_descriptor_45;
  uint64_t v11 = _Block_copy(v12);
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  swift_release();
  objc_msgSend(v9, sel_fetchWatchlistOrderWithCompletion_, v11);
  _Block_release(v11);
}

void sub_1AFD89FBC(uint64_t a1, id a2, void (*a3)(void), uint64_t a4, void (*a5)(void))
{
  if (a2)
  {
    id v7 = a2;
    if (qword_1EB817668 != -1) {
      swift_once();
    }
    id v8 = (id)qword_1EB831AC0;
    sub_1AFFCB468();
    sub_1AFD2CD48();
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1AFFD05F0;
    sub_1AFD2CDB0(0, (unint64_t *)&qword_1EB81A110);
    sub_1AFFCB928();
    *(void *)(v9 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v9 + 64) = sub_1AFD2CE00();
    *(void *)(v9 + 32) = 0;
    *(void *)(v9 + 40) = 0xE000000000000000;
    sub_1AFFCA878();

    swift_bridgeObjectRelease();
    ((void (*)(id))a3)(a2);
  }
  else if (a1)
  {
    a5();
  }
  else
  {
    sub_1AFD8C9C8();
    id v10 = (void *)swift_allocError();
    a3();
  }
}

uint64_t sub_1AFD8A190(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2) {
    uint64_t v5 = sub_1AFFCB1C8();
  }
  else {
    uint64_t v5 = 0;
  }
  sub_1AFFC8E48();
  id v6 = a3;
  v4(v5, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFD8A228(long long *a1)
{
  *(_OWORD *)uint64_t v9 = a1[1];
  *(_OWORD *)&v9[10] = *(long long *)((char *)a1 + 26);
  if (qword_1EB817668 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_1EB831AC0;
  sub_1AFD2CD48();
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1AFFD0610;
  long long v11 = *a1;
  uint64_t v4 = MEMORY[0x1E4FBB1A0];
  *(void *)(v3 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v5 = sub_1AFD2CE00();
  *(void *)(v3 + 64) = v5;
  *(_OWORD *)(v3 + 32) = *a1;
  long long v10 = *(_OWORD *)&v9[8];
  *(void *)(v3 + 96) = v4;
  *(void *)(v3 + 104) = v5;
  *(_OWORD *)(v3 + 72) = *(_OWORD *)&v9[8];
  id v6 = v2;
  sub_1AFD8C5F8((uint64_t)&v11);
  sub_1AFD8C5F8((uint64_t)&v10);
  sub_1AFFCB478();
  sub_1AFFCA878();

  uint64_t v7 = swift_bridgeObjectRelease();
  MEMORY[0x1F4188790](v7);
  sub_1AFD8D4C8(0, &qword_1EB818780, (uint64_t)&type metadata for Watchlist, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1AFFCA758();
}

uint64_t sub_1AFD8A3D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _OWORD *a6)
{
  uint64_t v11 = swift_allocObject();
  long long v12 = a6[1];
  *(_OWORD *)(v11 + 16) = *a6;
  *(_OWORD *)(v11 + 32) = v12;
  *(_OWORD *)(v11 + 42) = *(_OWORD *)((char *)a6 + 26);
  *(void *)(v11 + 64) = a3;
  *(void *)(v11 + 72) = a4;
  *(void *)(v11 + 80) = a1;
  *(void *)(v11 + 88) = a2;
  sub_1AFD768D8((uint64_t)a6);
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFCA4F8();

  return swift_release();
}

void sub_1AFD8A48C(void **a1, long long *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, SEL *a10)
{
  long long v21 = *a1;
  sub_1AFD8F6AC(0, &qword_1EB818068);
  long long v16 = a2[1];
  long long aBlock = *a2;
  *(_OWORD *)uint64_t v23 = v16;
  *(_OWORD *)&v23[10] = *(long long *)((char *)a2 + 26);
  sub_1AFD768D8((uint64_t)a2);
  id v17 = sub_1AFD86140((uint64_t)&aBlock);
  uint64_t v18 = swift_allocObject();
  long long v19 = a2[1];
  *(_OWORD *)(v18 + 16) = *a2;
  *(_OWORD *)(v18 + 32) = v19;
  *(_OWORD *)(v18 + 42) = *(long long *)((char *)a2 + 26);
  *(void *)(v18 + 64) = a3;
  *(void *)(v18 + 72) = a4;
  *(void *)(v18 + 80) = a5;
  *(void *)(v18 + 88) = a6;
  *(void *)&unsigned char v23[16] = a8;
  *(void *)&v23[24] = v18;
  *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)uint64_t v23 = sub_1AFD82E64;
  *(void *)&_OWORD v23[8] = a9;
  long long v20 = _Block_copy(&aBlock);
  sub_1AFD768D8((uint64_t)a2);
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  swift_release();
  objc_msgSend(v21, *a10, v17, v20);
  _Block_release(v20);
}

void sub_1AFD8A5F8(void *a1, long long *a2, void (*a3)(void *), uint64_t a4, void (*a5)(long long *))
{
  if (a1)
  {
    id v8 = a1;
    if (qword_1EB816A80 != -1) {
      swift_once();
    }
    id v9 = (id)qword_1EB831A78;
    sub_1AFFCB468();
    sub_1AFD2CD48();
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1AFFD0DC0;
    long long v15 = *a2;
    uint64_t v11 = MEMORY[0x1E4FBB1A0];
    *(void *)(v10 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v12 = sub_1AFD2CE00();
    *(void *)(v10 + 64) = v12;
    *(_OWORD *)(v10 + 32) = *a2;
    long long v17 = *(long long *)((char *)a2 + 24);
    long long v13 = v17;
    *(void *)(v10 + 96) = v11;
    *(void *)(v10 + 104) = v12;
    *(_OWORD *)(v10 + 72) = v13;
    sub_1AFD8C5F8((uint64_t)&v15);
    sub_1AFD8C5F8((uint64_t)&v17);
    sub_1AFD2CDB0(0, (unint64_t *)&qword_1EB81A110);
    sub_1AFFCB928();
    *(void *)(v10 + 136) = v11;
    *(void *)(v10 + 144) = v12;
    *(void *)(v10 + 112) = 0;
    *(void *)(v10 + 120) = 0xE000000000000000;
    sub_1AFFCA878();

    swift_bridgeObjectRelease();
    a3(a1);
  }
  else
  {
    long long v14 = a2[1];
    long long v15 = *a2;
    v16[0] = v14;
    *(_OWORD *)((char *)v16 + 10) = *(long long *)((char *)a2 + 26);
    a5(&v15);
  }
}

uint64_t sub_1AFD8A7CC(long long *a1, uint64_t a2)
{
  long long v2 = a1[1];
  long long v13 = *a1;
  v14[0] = v2;
  *(_OWORD *)((char *)v14 + 10) = *(long long *)((char *)a1 + 26);
  sub_1AFD8CB20(a2, (uint64_t)v12, &qword_1EB817BC8, (uint64_t)&type metadata for Watchlist);
  if (qword_1EB817668 != -1) {
    swift_once();
  }
  uint64_t v3 = (void *)qword_1EB831AC0;
  sub_1AFD2CD48();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1AFFD0610;
  long long v17 = v13;
  uint64_t v5 = MEMORY[0x1E4FBB1A0];
  *(void *)(v4 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v6 = sub_1AFD2CE00();
  *(void *)(v4 + 64) = v6;
  *(_OWORD *)(v4 + 32) = v13;
  sub_1AFD8CB20((uint64_t)v12, (uint64_t)&v15, &qword_1EB817BC8, (uint64_t)&type metadata for Watchlist);
  uint64_t v7 = v16;
  if (v16)
  {
    uint64_t v8 = v15;
    *(void *)(v4 + 96) = v5;
    *(void *)(v4 + 104) = v6;
    *(void *)(v4 + 72) = v8;
    *(void *)(v4 + 80) = v7;
    sub_1AFFC8E38();
  }
  else
  {
    *(void *)(v4 + 96) = v5;
    *(void *)(v4 + 104) = v6;
    *(void *)(v4 + 72) = 7104878;
    *(void *)(v4 + 80) = 0xE300000000000000;
  }
  id v9 = v3;
  sub_1AFD8C5F8((uint64_t)&v17);
  sub_1AFFCB478();
  sub_1AFFCA878();

  uint64_t v10 = swift_bridgeObjectRelease();
  MEMORY[0x1F4188790](v10);
  sub_1AFD8D4C8(0, &qword_1EB818780, (uint64_t)&type metadata for Watchlist, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1AFFCA758();
}

uint64_t sub_1AFD8A9D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, _OWORD *a7)
{
  uint64_t v13 = swift_allocObject();
  sub_1AFD8CB20((uint64_t)a6, v13 + 16, &qword_1EB817BC8, (uint64_t)&type metadata for Watchlist);
  long long v14 = a7[1];
  *(_OWORD *)(v13 + 64) = *a7;
  *(_OWORD *)(v13 + 80) = v14;
  *(_OWORD *)(v13 + 90) = *(_OWORD *)((char *)a7 + 26);
  *(void *)(v13 + 112) = a3;
  *(void *)(v13 + 120) = a4;
  *(void *)(v13 + 128) = a1;
  *(void *)(v13 + 136) = a2;
  sub_1AFD8C6B8(a6);
  sub_1AFD768D8((uint64_t)a7);
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFCA4F8();

  return swift_release();
}

void sub_1AFD8AAC4(void **a1, uint64_t *a2, long long *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_1AFD8CB20((uint64_t)a2, (uint64_t)v23, &qword_1EB817BC8, (uint64_t)&type metadata for Watchlist);
  unint64_t v12 = *a1;
  sub_1AFD8CB20((uint64_t)a2, (uint64_t)&v24, &qword_1EB817BC8, (uint64_t)&type metadata for Watchlist);
  if (*((void *)&v24 + 1))
  {
    long long aBlock = v24;
    *(_OWORD *)long long v22 = v25[0];
    *(_OWORD *)&v22[10] = *(_OWORD *)((char *)v25 + 10);
    sub_1AFD8F6AC(0, &qword_1EB818068);
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    id v13 = sub_1AFD86140((uint64_t)&aBlock);
  }
  else
  {
    id v13 = 0;
  }
  sub_1AFD8F6AC(0, &qword_1EB818068);
  long long v14 = a3[1];
  long long aBlock = *a3;
  *(_OWORD *)long long v22 = v14;
  *(_OWORD *)&v22[10] = *(long long *)((char *)a3 + 26);
  sub_1AFD768D8((uint64_t)a3);
  id v15 = sub_1AFD86140((uint64_t)&aBlock);
  uint64_t v16 = swift_allocObject();
  long long v17 = a3[1];
  *(_OWORD *)(v16 + 16) = *a3;
  *(_OWORD *)(v16 + 32) = v17;
  *(_OWORD *)(v16 + 42) = *(long long *)((char *)a3 + 26);
  sub_1AFD8CB20((uint64_t)a2, v16 + 64, &qword_1EB817BC8, (uint64_t)&type metadata for Watchlist);
  *(void *)(v16 + 112) = a4;
  *(void *)(v16 + 120) = a5;
  *(void *)(v16 + 128) = a6;
  *(void *)(v16 + 136) = a7;
  *(void *)&v22[16] = sub_1AFD8C7B4;
  *(void *)&v22[24] = v16;
  *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)long long v22 = sub_1AFD82E64;
  *(void *)&v22[8] = &block_descriptor_3;
  uint64_t v18 = _Block_copy(&aBlock);
  sub_1AFD8C6B8(a2);
  sub_1AFD768D8((uint64_t)a3);
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  swift_release();
  objc_msgSend(v12, sel_reorderWatchlist_afterWatchlist_completion_, v15, v13, v18);
  _Block_release(v18);
}

void sub_1AFD8AD1C(void *a1, uint64_t *a2, uint64_t a3, void (*a4)(void *), uint64_t a5, void (*a6)(long long *))
{
  if (a1)
  {
    id v10 = a1;
    if (qword_1EB816A80 != -1) {
      swift_once();
    }
    id v11 = (id)qword_1EB831A78;
    sub_1AFFCB468();
    sub_1AFD2CD48();
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1AFFD0DC0;
    uint64_t v13 = *a2;
    uint64_t v14 = a2[1];
    uint64_t v15 = MEMORY[0x1E4FBB1A0];
    *(void *)(v12 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v16 = sub_1AFD2CE00();
    *(void *)(v12 + 64) = v16;
    *(void *)(v12 + 32) = v13;
    *(void *)(v12 + 40) = v14;
    sub_1AFD8CB20(a3, (uint64_t)&v20, &qword_1EB817BC8, (uint64_t)&type metadata for Watchlist);
    uint64_t v17 = *((void *)&v20 + 1);
    if (*((void *)&v20 + 1))
    {
      uint64_t v18 = v20;
      *(void *)(v12 + 96) = v15;
      *(void *)(v12 + 104) = v16;
      *(void *)(v12 + 72) = v18;
      *(void *)(v12 + 80) = v17;
      sub_1AFFC8E38();
    }
    else
    {
      *(void *)(v12 + 96) = v15;
      *(void *)(v12 + 104) = v16;
      *(void *)(v12 + 72) = 7104878;
      *(void *)(v12 + 80) = 0xE300000000000000;
    }
    sub_1AFD2CDB0(0, (unint64_t *)&qword_1EB81A110);
    sub_1AFFC8E38();
    sub_1AFFCB928();
    *(void *)(v12 + 136) = v15;
    *(void *)(v12 + 144) = v16;
    *(void *)(v12 + 112) = 0;
    *(void *)(v12 + 120) = 0xE000000000000000;
    sub_1AFFCA878();

    swift_bridgeObjectRelease();
    a4(a1);
  }
  else
  {
    long long v19 = *((_OWORD *)a2 + 1);
    long long v20 = *(_OWORD *)a2;
    v21[0] = v19;
    *(_OWORD *)((char *)v21 + 10) = *(_OWORD *)((char *)a2 + 26);
    a6(&v20);
  }
}

uint64_t sub_1AFD8AF20(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5 = *a1;
  if ((unint64_t)*a1 >> 62) {
    goto LABEL_65;
  }
  uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  sub_1AFFC8E38();
  if (!v6)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    if ((unint64_t)*a1 >> 62)
    {
      sub_1AFFC8E38();
      uint64_t v7 = sub_1AFFCB9C8();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v7 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    goto LABEL_12;
  }
LABEL_3:
  uint64_t v7 = 0;
  while (1)
  {
    if ((v5 & 0xC000000000000001) != 0)
    {
      uint64_t v8 = MEMORY[0x1B3E8DC70](v7, v5);
    }
    else
    {
      uint64_t v8 = *(void *)(v5 + 8 * v7 + 32);
      sub_1AFFC8E48();
    }
    uint64_t v9 = MEMORY[0x1B3E8F200](v8 + 16);
    swift_release();
    swift_unknownObjectRelease();
    if (!v9) {
      break;
    }
    uint64_t v10 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
LABEL_62:
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      sub_1AFFC8E38();
      uint64_t v6 = sub_1AFFCB9C8();
      if (!v6) {
        goto LABEL_10;
      }
      goto LABEL_3;
    }
    ++v7;
    if (v10 == v6) {
      goto LABEL_10;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v15 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
LABEL_72:
    sub_1AFFC8E38();
    uint64_t v29 = sub_1AFFCB9C8();
    swift_bridgeObjectRelease();
    if (v15 != v29) {
      goto LABEL_19;
    }
    goto LABEL_12;
  }
  if ((unint64_t)*a1 >> 62) {
    goto LABEL_72;
  }
  if (v15 != *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_19:
    uint64_t v16 = v7 + 5;
    while (1)
    {
      unint64_t v5 = v16 - 4;
      uint64_t v17 = *a1;
      if ((*a1 & 0xC000000000000001) != 0)
      {
        uint64_t v18 = MEMORY[0x1B3E8DC70](v16 - 4);
      }
      else
      {
        if ((v5 & 0x8000000000000000) != 0) {
          goto LABEL_55;
        }
        if (v5 >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_56;
        }
        uint64_t v18 = *(void *)(v17 + 8 * v16);
        sub_1AFFC8E48();
      }
      uint64_t v19 = MEMORY[0x1B3E8F200](v18 + 16);
      swift_release();
      swift_unknownObjectRelease();
      if (!v19) {
        goto LABEL_45;
      }
      if (v5 != v7) {
        break;
      }
LABEL_44:
      if (__OFADD__(v7++, 1)) {
        goto LABEL_58;
      }
LABEL_45:
      uint64_t v27 = v16 - 3;
      if (__OFADD__(v5, 1)) {
        goto LABEL_57;
      }
      if ((unint64_t)*a1 >> 62)
      {
        sub_1AFFC8E38();
        uint64_t v28 = sub_1AFFCB9C8();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v28 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      ++v16;
      if (v27 == v28) {
        goto LABEL_12;
      }
    }
    uint64_t v20 = *a1;
    if ((*a1 & 0xC000000000000001) != 0)
    {
      uint64_t v21 = MEMORY[0x1B3E8DC70](v7, *a1);
      uint64_t v20 = *a1;
      if ((*a1 & 0xC000000000000001) == 0)
      {
LABEL_30:
        if ((v5 & 0x8000000000000000) != 0) {
          goto LABEL_61;
        }
        if (v5 >= *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_62;
        }
        uint64_t v22 = *(void *)(v20 + 8 * v16);
        sub_1AFFC8E48();
        goto LABEL_33;
      }
    }
    else
    {
      if (v7 < 0) {
        goto LABEL_59;
      }
      if ((unint64_t)v7 >= *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_60;
      }
      uint64_t v21 = *(void *)(v20 + 8 * v7 + 32);
      sub_1AFFC8E48();
      if ((v20 & 0xC000000000000001) == 0) {
        goto LABEL_30;
      }
    }
    uint64_t v22 = MEMORY[0x1B3E8DC70](v16 - 4, v20);
    uint64_t v20 = *a1;
LABEL_33:
    int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
    *a1 = v20;
    if (!isUniquelyReferenced_nonNull_bridgeObject || v20 < 0 || (v20 & 0x4000000000000000) != 0)
    {
      uint64_t v20 = sub_1AFFB2E54(v20);
      *a1 = v20;
    }
    *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 8 * v7 + 0x20) = v22;
    swift_release();
    sub_1AFFCB1E8();
    uint64_t v24 = *a1;
    int v25 = swift_isUniquelyReferenced_nonNull_bridgeObject();
    *a1 = v24;
    if (!v25 || v24 < 0 || (v24 & 0x4000000000000000) != 0)
    {
      uint64_t v24 = sub_1AFFB2E54(v24);
      *a1 = v24;
    }
    if ((v5 & 0x8000000000000000) != 0) {
      goto LABEL_63;
    }
    if (v5 >= *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_64;
    }
    *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 8 * v16) = v21;
    swift_release();
    sub_1AFFCB1E8();
    goto LABEL_44;
  }
LABEL_12:
  if (!((unint64_t)*a1 >> 62))
  {
    uint64_t v11 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v11 >= v7) {
      goto LABEL_14;
    }
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  sub_1AFFC8E38();
  uint64_t v11 = sub_1AFFCB9C8();
  swift_bridgeObjectRelease();
  if (v11 < v7) {
    goto LABEL_68;
  }
LABEL_14:
  sub_1AFFB3D78(v7, v11);
  type metadata accessor for WatchlistServiceObserverProxy();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v12 + 24) = a3;
  uint64_t v13 = swift_unknownObjectWeakAssign();
  MEMORY[0x1B3E8D5F0](v13);
  if (*(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
LABEL_69:
  }
    sub_1AFFCB228();
  sub_1AFFCB278();
  return sub_1AFFCB1E8();
}

void sub_1AFD8B3B0(uint64_t a1)
{
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 16));
  swift_unknownObjectRetain();
  uint64_t v3 = sub_1AFD67DB8((uint64_t *)(v1 + 24), a1);
  swift_unknownObjectRelease();
  unint64_t v4 = *(void *)(v1 + 24);
  if (v4 >> 62)
  {
    sub_1AFFC8E38();
    uint64_t v5 = sub_1AFFCB9C8();
    swift_bridgeObjectRelease();
    if (v5 >= v3) {
      goto LABEL_3;
    }
LABEL_7:
    __break(1u);
    return;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v5 < v3) {
    goto LABEL_7;
  }
LABEL_3:
  sub_1AFFB3D78(v3, v5);

  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 16));
}

uint64_t sub_1AFD8B498(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_1AFD8F8A0;
  *(void *)(v5 + 24) = v4;
  sub_1AFFC8E48();
  sub_1AFFCA4F8();

  return swift_release();
}

uint64_t sub_1AFD8B554(uint64_t a1)
{
  return sub_1AFD82974(a1);
}

uint64_t sub_1AFD8B578(uint64_t a1, uint64_t a2)
{
  return sub_1AFD82ED0(a1, a2);
}

uint64_t sub_1AFD8B59C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AFD83268(a1, a2, a3);
}

uint64_t sub_1AFD8B5C0(uint64_t a1, long long *a2)
{
  return sub_1AFD890FC(a1, a2);
}

uint64_t sub_1AFD8B5E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AFD83844(a1, a2, a3, a4);
}

uint64_t sub_1AFD8B608(uint64_t a1, uint64_t a2)
{
  return sub_1AFD8B810(a1, a2, (unint64_t *)&unk_1EB817DA0, &qword_1EB817FE8, (uint64_t)&type metadata for Stock);
}

void sub_1AFD8B638(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = *v2 + 4;
  os_unfair_lock_lock(v6);
  sub_1AFD8AF20((uint64_t *)&v5[6], a1, a2);

  os_unfair_lock_unlock(v6);
}

void sub_1AFD8B6A4(uint64_t a1)
{
}

uint64_t sub_1AFD8B6C8(uint64_t a1, uint64_t a2)
{
  return sub_1AFD84CC4(a1, a2);
}

uint64_t sub_1AFD8B70C(uint64_t a1, uint64_t a2)
{
  return sub_1AFD84CC4(a1, a2);
}

uint64_t sub_1AFD8B750(long long *a1)
{
  return sub_1AFD852F0(a1);
}

uint64_t sub_1AFD8B774(long long *a1, uint64_t a2, uint64_t a3)
{
  return sub_1AFD85740(a1, a2, a3);
}

uint64_t sub_1AFD8B798(long long *a1, char *a2)
{
  return sub_1AFD85D18(a1, a2);
}

uint64_t sub_1AFD8B7BC()
{
  return sub_1AFD864B0();
}

uint64_t sub_1AFD8B7E0(uint64_t a1, uint64_t a2)
{
  return sub_1AFD8B810(a1, a2, &qword_1EB817DB8, &qword_1EB818008, (uint64_t)&type metadata for Watchlist);
}

uint64_t sub_1AFD8B810(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, uint64_t a5)
{
  return sub_1AFFCA758();
}

uint64_t sub_1AFD8B868()
{
  return sub_1AFFCA758();
}

uint64_t sub_1AFD8B8F4()
{
  return sub_1AFFCA758();
}

uint64_t sub_1AFD8B970(uint64_t a1, long long *a2)
{
  return sub_1AFD87A84(a1, a2);
}

uint64_t sub_1AFD8B994(uint64_t a1, uint64_t a2, long long *a3)
{
  return sub_1AFD8825C(a1, a2, a3);
}

uint64_t sub_1AFD8B9B8(uint64_t a1, uint64_t a2, long long *a3)
{
  return sub_1AFD88884(a1, a2, a3);
}

uint64_t sub_1AFD8B9DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, long long *a5)
{
  return sub_1AFD898C0(a1, a2, a3, a4, a5);
}

uint64_t sub_1AFD8BA00(uint64_t a1, uint64_t a2)
{
  return sub_1AFD8B810(a1, a2, (unint64_t *)&qword_1EB817DC0, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0]);
}

uint64_t sub_1AFD8BA30(long long *a1)
{
  return sub_1AFD8A228(a1);
}

uint64_t sub_1AFD8BA74(long long *a1)
{
  return sub_1AFD8A228(a1);
}

uint64_t sub_1AFD8BAB8(long long *a1, uint64_t a2)
{
  return sub_1AFD8A7CC(a1, a2);
}

uint64_t type metadata accessor for CloudKitWatchlistDefaultsProvider()
{
  return self;
}

void sub_1AFD8BC0C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2[5];
  uint64_t v6 = v2[6];
  __swift_project_boxed_opaque_existential_1(v2 + 2, v5);
  (*(void (**)(uint64_t, uint64_t))(v6 + 40))(v5, v6);
  uint64_t v7 = (void *)swift_allocObject();
  uint64_t v7[2] = v2;
  _OWORD v7[3] = a1;
  v7[4] = a2;
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  uint64_t v8 = (void *)sub_1AFFCA5E8();
  sub_1AFFCA678();
  swift_release();
  swift_release();

  uint64_t v9 = (void *)swift_allocObject();
  _OWORD v9[2] = v2;
  v9[3] = a1;
  v9[4] = a2;
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  id v10 = (id)sub_1AFFCA5E8();
  sub_1AFFCA6B8();
  swift_release();
  swift_release();
  swift_release();
}

uint64_t sub_1AFD8BD80(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, void))
{
  if (*(unsigned char *)a1) {
    return sub_1AFD8ECDC(a3);
  }
  uint64_t v4 = *(void *)(a1 + 80);
  if (!*(void *)(v4 + 16)) {
    return sub_1AFD8ECDC(a3);
  }
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA70]), sel_init);
  sub_1AFD895E8(v4);
  uint64_t v6 = (void *)sub_1AFFCB1B8();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_addObjectsFromArray_, v6);

  id v7 = objc_msgSend(v5, sel_array);
  uint64_t v8 = sub_1AFFCB1C8();

  uint64_t v9 = sub_1AFD8BFCC(v8);
  swift_bridgeObjectRelease();
  a3(v9, 0);

  return swift_bridgeObjectRelease();
}

void sub_1AFD8BF34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1)
  {
    id v5 = (void *)sub_1AFFCB1B8();
    if (a2)
    {
LABEL_3:
      uint64_t v6 = sub_1AFFC94F8();
      goto LABEL_6;
    }
  }
  else
  {
    id v5 = 0;
    if (a2) {
      goto LABEL_3;
    }
  }
  uint64_t v6 = 0;
LABEL_6:
  id v7 = (id)v6;
  (*(void (**)(uint64_t, void *))(a3 + 16))(a3, v5);
}

uint64_t sub_1AFD8BFCC(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v12 = MEMORY[0x1E4FBC860];
  sub_1AFD9DA10(0, v2, 0);
  uint64_t v3 = v12;
  if (v2)
  {
    for (uint64_t i = a1 + 32; ; i += 32)
    {
      sub_1AFD38AF4(i, (uint64_t)v11);
      if (!swift_dynamicCast()) {
        break;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1AFD9DA10(0, *(void *)(v3 + 16) + 1, 1);
        uint64_t v3 = v12;
      }
      unint64_t v6 = *(void *)(v3 + 16);
      unint64_t v5 = *(void *)(v3 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1AFD9DA10(v5 > 1, v6 + 1, 1);
        uint64_t v3 = v12;
      }
      *(void *)(v3 + 16) = v6 + 1;
      uint64_t v7 = v3 + 16 * v6;
      *(void *)(v7 + 32) = v9;
      *(void *)(v7 + 40) = v10;
      if (!--v2) {
        return v3;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    return 0;
  }
  return v3;
}

uint64_t sub_1AFD8C114()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CloudKitWatchlistMetadataProvider()
{
  return self;
}

uint64_t sub_1AFD8C178(uint64_t a1, uint64_t a2, void (*a3)(unint64_t, void))
{
  sub_1AFD8F5CC();
  sub_1AFFCA558();
  uint64_t v4 = sub_1AFFC8E38();
  unint64_t v5 = sub_1AFD824A0(v4);
  swift_bridgeObjectRelease();
  if (qword_1EB817668 != -1) {
    swift_once();
  }
  unint64_t v6 = (void *)qword_1EB831AC0;
  sub_1AFD2CD48();
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1AFFD0610;
  if (v5 >> 62)
  {
    id v16 = v6;
    sub_1AFFC8E38();
    uint64_t v8 = sub_1AFFCB9C8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v9 = v6;
  }
  uint64_t v10 = MEMORY[0x1E4FBB5C8];
  *(void *)(v7 + 56) = MEMORY[0x1E4FBB550];
  *(void *)(v7 + 64) = v10;
  *(void *)(v7 + 32) = v8;
  uint64_t v11 = sub_1AFD8F6AC(0, (unint64_t *)&unk_1EB8180B0);
  uint64_t v12 = MEMORY[0x1B3E8D630](v5, v11);
  uint64_t v14 = v13;
  *(void *)(v7 + 96) = MEMORY[0x1E4FBB1A0];
  *(void *)(v7 + 104) = sub_1AFD2CE00();
  *(void *)(v7 + 72) = v12;
  *(void *)(v7 + 80) = v14;
  sub_1AFFCB478();
  sub_1AFFCA878();

  swift_bridgeObjectRelease();
  a3(v5, 0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFD8C35C(uint64_t a1, uint64_t (*a2)(void, uint64_t))
{
  if (qword_1EB817668 != -1) {
    swift_once();
  }
  id v4 = (id)qword_1EB831AC0;
  sub_1AFFCB468();
  sub_1AFD2CD48();
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1AFFD05F0;
  sub_1AFD2CDB0(0, (unint64_t *)&qword_1EB81A110);
  sub_1AFFCB928();
  *(void *)(v5 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v5 + 64) = sub_1AFD2CE00();
  *(void *)(v5 + 32) = 0;
  *(void *)(v5 + 40) = 0xE000000000000000;
  sub_1AFFCA878();

  swift_bridgeObjectRelease();
  return a2(0, a1);
}

void sub_1AFD8C54C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  if (a1)
  {
    sub_1AFD8F6AC(0, (unint64_t *)&unk_1EB8180B0);
    uint64_t v5 = (void *)sub_1AFFCB1B8();
  }
  if (a2) {
    uint64_t v6 = sub_1AFFC94F8();
  }
  else {
    uint64_t v6 = 0;
  }
  id v7 = (id)v6;
  (*(void (**)(uint64_t, void *))(a3 + 16))(a3, v5);
}

uint64_t sub_1AFD8C5F8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1AFD8C624(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AFD8A9D8(a1, a2, a3, a4, *(void *)(v4 + 16), *(uint64_t **)(v4 + 24), *(_OWORD **)(v4 + 32));
}

uint64_t sub_1AFD8C630()
{
  if (*(void *)(v0 + 24))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 144, 7);
}

void sub_1AFD8C6A4(void **a1)
{
  sub_1AFD8AAC4(a1, (uint64_t *)(v1 + 16), (long long *)(v1 + 64), *(void *)(v1 + 112), *(void *)(v1 + 120), *(void *)(v1 + 128), *(void *)(v1 + 136));
}

uint64_t *sub_1AFD8C6B8(uint64_t *a1)
{
  return a1;
}

uint64_t sub_1AFD8C6F0(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    return sub_1AFFC8E38();
  }
  return result;
}

uint64_t sub_1AFD8C740()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 72))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 144, 7);
}

void sub_1AFD8C7B4(void *a1)
{
  sub_1AFD8AD1C(a1, (uint64_t *)(v1 + 16), v1 + 64, *(void (**)(void *))(v1 + 112), *(void *)(v1 + 120), *(void (**)(long long *))(v1 + 128));
}

uint64_t sub_1AFD8C7C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AFD8A3D8(a1, a2, a3, a4, *(void *)(v4 + 16), *(_OWORD **)(v4 + 24));
}

void sub_1AFD8C804(void **a1)
{
}

void sub_1AFD8C838(void *a1)
{
}

uint64_t sub_1AFD8C848(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AFD8A3D8(a1, a2, a3, a4, *(void *)(v4 + 16), *(_OWORD **)(v4 + 24));
}

void sub_1AFD8C884(void **a1)
{
}

void sub_1AFD8C8B4(void **a1, uint64_t a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  sub_1AFD8A48C(a1, (long long *)(v5 + 16), *(void *)(v5 + 64), *(void *)(v5 + 72), *(void *)(v5 + 80), *(void *)(v5 + 88), a2, a3, a4, a5);
}

void sub_1AFD8C8F8(void *a1)
{
}

void sub_1AFD8C908(void *a1)
{
  sub_1AFD8A5F8(a1, (long long *)(v1 + 16), *(void (**)(void *))(v1 + 64), *(void *)(v1 + 72), *(void (**)(long long *))(v1 + 80));
}

uint64_t sub_1AFD8C934(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AFD89DE4(a1, a2, a3, a4);
}

void sub_1AFD8C93C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  if (!*a2)
  {
    sub_1AFD8D4C8(255, a3, a4, MEMORY[0x1E4FBB320]);
    unint64_t v5 = sub_1AFFCA788();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1AFD8C9AC(void **a1)
{
  sub_1AFD89EBC(a1, v1[2], v1[3], v1[4], v1[5]);
}

void sub_1AFD8C9BC(uint64_t a1, void *a2)
{
  sub_1AFD89FBC(a1, a2, *(void (**)(void))(v2 + 16), *(void *)(v2 + 24), *(void (**)(void))(v2 + 32));
}

unint64_t sub_1AFD8C9C8()
{
  unint64_t result = qword_1E9AFA320;
  if (!qword_1E9AFA320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFA320);
  }
  return result;
}

uint64_t sub_1AFD8CA1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AFD89A98(a1, a2, a3, a4, *(void *)(v4 + 16), *(void *)(v4 + 24), *(void *)(v4 + 32), *(void *)(v4 + 40), *(void *)(v4 + 48), *(_OWORD **)(v4 + 56));
}

uint64_t sub_1AFD8CA50()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 128, 7);
}

void sub_1AFD8CAB8(void **a1)
{
  sub_1AFD89BC4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), (long long *)(v1 + 48), *(void *)(v1 + 96), *(void *)(v1 + 104), *(void *)(v1 + 112), *(void *)(v1 + 120));
}

uint64_t sub_1AFD8CAF0()
{
  return objectdestroy_53Tm(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC898]);
}

uint64_t sub_1AFD8CB20(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1AFD8D4C8(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1AFD8CBA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AFD88B28(a1, a2, a3, a4, *(void *)(v4 + 16), *(void *)(v4 + 24), *(uint64_t **)(v4 + 32), *(_OWORD **)(v4 + 40));
}

uint64_t sub_1AFD8CBAC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 160))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 368, 7);
}

void sub_1AFD8CC88(id *a1)
{
  sub_1AFD88C54(a1, v1 + 16, (uint64_t *)(v1 + 152), (long long *)(v1 + 288), *(void *)(v1 + 336), *(void *)(v1 + 344), *(void *)(v1 + 352), *(void *)(v1 + 360));
}

uint64_t *sub_1AFD8CCA0(uint64_t *a1)
{
  return a1;
}

uint64_t sub_1AFD8CCFC(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    return sub_1AFFC8E38();
  }
  return result;
}

uint64_t sub_1AFD8CDA0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 208))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 368, 7);
}

void sub_1AFD8CE7C(void *a1)
{
  sub_1AFD88E90(a1, (long long *)(v1 + 16), (long long *)(v1 + 152), v1 + 200, *(void (**)(void *))(v1 + 336), *(void *)(v1 + 344), *(void (**)(long long *))(v1 + 352));
}

uint64_t sub_1AFD8CE94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AFD88410(a1, a2, a3, a4, *(void *)(v4 + 16), *(void *)(v4 + 24), *(void *)(v4 + 32), *(_OWORD **)(v4 + 40));
}

void sub_1AFD8CEA4(id *a1)
{
  sub_1AFD88520(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), (long long *)(v1 + 32), *(void *)(v1 + 80), *(void *)(v1 + 88), *(void *)(v1 + 96), *(void *)(v1 + 104));
}

uint64_t objectdestroy_72Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 112, 7);
}

void sub_1AFD8CF1C(void *a1)
{
  sub_1AFD886C4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), (long long *)(v1 + 32), *(void (**)(void *))(v1 + 80), *(void *)(v1 + 88), *(void (**)(uint64_t, uint64_t))(v1 + 96));
}

uint64_t sub_1AFD8CF30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AFD87C70(a1, a2, a3, a4, *(void *)(v4 + 16), *(void *)(v4 + 24), *(_OWORD **)(v4 + 32));
}

uint64_t sub_1AFD8CF3C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1AFD8CF64()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 240, 7);
}

void sub_1AFD8D004(id *a1)
{
  sub_1AFD87DE4(a1, *(void **)(v1 + 16), v1 + 24, (long long *)(v1 + 160), *(void *)(v1 + 208), *(void *)(v1 + 216), *(void *)(v1 + 224), *(void *)(v1 + 232));
}

uint64_t sub_1AFD8D01C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 232, 7);
}

void sub_1AFD8D0B4(void *a1)
{
  sub_1AFD880A0(a1, v1 + 16, (long long *)(v1 + 152), *(void (**)(void *))(v1 + 200), *(void *)(v1 + 208), *(void (**)(void))(v1 + 216));
}

uint64_t sub_1AFD8D0C8(uint64_t a1, uint64_t a2)
{
  return sub_1AFD8B498(a1, a2);
}

uint64_t sub_1AFD8D0D0(id *a1)
{
  return (*(uint64_t (**)(id))(v1 + 16))(objc_msgSend(*a1, sel_synchronize));
}

uint64_t sub_1AFD8D108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AFD87294(a1, a2, a3, a4, *(void *)(v4 + 16), *(_OWORD **)(v4 + 24));
}

uint64_t sub_1AFD8D110()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1AFD8D148()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 104, 7);
}

void sub_1AFD8D1A8(void **a1)
{
  sub_1AFD87394(a1, (long long *)(v1 + 16), *(void *)(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 80), *(void *)(v1 + 88), *(void *)(v1 + 96));
}

uint64_t sub_1AFD8D1BC()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1AFD8D1F4()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 104, 7);
}

void sub_1AFD8D254(unint64_t a1, void *a2)
{
  sub_1AFD87538(a1, a2, *(void *)(v2 + 16), *(void (**)(void))(v2 + 24), *(void *)(v2 + 32), (uint64_t *)(v2 + 40), *(void (**)(uint64_t))(v2 + 88));
}

unint64_t sub_1AFD8D268()
{
  unint64_t result = qword_1E9AFB0B0;
  if (!qword_1E9AFB0B0)
  {
    sub_1AFFC9E28();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB0B0);
  }
  return result;
}

uint64_t sub_1AFD8D2C0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1AFD8D4C8(255, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AFD8D328(uint64_t a1, uint64_t a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (!v2) {
    return v3;
  }
  uint64_t v37 = MEMORY[0x1E4FBC860];
  sub_1AFD9DAD0(0, v2, 0);
  if (*(void *)(a2 + 16))
  {
    uint64_t v6 = (uint64_t *)(a1 + 40);
    uint64_t v3 = v37;
    while (1)
    {
      uint64_t v7 = *(v6 - 1);
      uint64_t v8 = *v6;
      swift_bridgeObjectRetain_n();
      unint64_t v9 = sub_1AFD79CC8(v7, v8);
      if ((v10 & 1) == 0) {
        break;
      }
      uint64_t v11 = *(void *)(a2 + 56) + 136 * v9;
      long long v28 = *(_OWORD *)v11;
      long long v12 = *(_OWORD *)(v11 + 64);
      long long v14 = *(_OWORD *)(v11 + 16);
      long long v13 = *(_OWORD *)(v11 + 32);
      long long v31 = *(_OWORD *)(v11 + 48);
      long long v32 = v12;
      long long v29 = v14;
      long long v30 = v13;
      long long v16 = *(_OWORD *)(v11 + 96);
      long long v15 = *(_OWORD *)(v11 + 112);
      long long v17 = *(_OWORD *)(v11 + 80);
      uint64_t v36 = *(void *)(v11 + 128);
      long long v34 = v16;
      long long v35 = v15;
      long long v33 = v17;
      sub_1AFD76370((uint64_t)&v28);
      swift_bridgeObjectRelease_n();
      uint64_t v37 = v3;
      unint64_t v19 = *(void *)(v3 + 16);
      unint64_t v18 = *(void *)(v3 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_1AFD9DAD0(v18 > 1, v19 + 1, 1);
        uint64_t v3 = v37;
      }
      *(void *)(v3 + 16) = v19 + 1;
      uint64_t v20 = v3 + 136 * v19;
      *(_OWORD *)(v20 + 32) = v28;
      long long v21 = v29;
      long long v22 = v30;
      long long v23 = v32;
      *(_OWORD *)(v20 + 80) = v31;
      *(_OWORD *)(v20 + 96) = v23;
      *(_OWORD *)(v20 + 48) = v21;
      *(_OWORD *)(v20 + 64) = v22;
      long long v24 = v33;
      long long v25 = v34;
      long long v26 = v35;
      *(void *)(v20 + 160) = v36;
      *(_OWORD *)(v20 + 128) = v25;
      *(_OWORD *)(v20 + 144) = v26;
      *(_OWORD *)(v20 + 112) = v24;
      if (!--v2) {
        return v3;
      }
      v6 += 2;
      if (!*(void *)(a2 + 16)) {
        goto LABEL_11;
      }
    }
  }
  else
  {
LABEL_11:
    __break(1u);
  }
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_1AFD8D4C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AFD86AA8(a1, a2, a3, a4);
}

void sub_1AFD8D4C8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1AFD8D518(void **a1)
{
  sub_1AFD86B80(a1, v1[2], v1[3], v1[4], v1[5]);
}

void sub_1AFD8D528(unint64_t a1, void *a2)
{
  sub_1AFD86C80(a1, a2, *(void (**)(void))(v2 + 16), *(void *)(v2 + 24), *(void (**)(void *))(v2 + 32));
}

uint64_t sub_1AFD8D534(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AFD8667C(a1, a2, a3, a4, *(void *)(v4 + 16), *(unsigned char *)(v4 + 24), *(_OWORD **)(v4 + 32));
}

uint64_t sub_1AFD8D580(uint64_t a1)
{
  return sub_1AFD8D6D0(a1, (uint64_t (*)(uint64_t, void, uint64_t, void, void, void, void))sub_1AFD86744);
}

uint64_t sub_1AFD8D598()
{
  return objectdestroy_130Tm(91);
}

uint64_t sub_1AFD8D5A0(uint64_t a1)
{
  return sub_1AFD8D70C(a1, (uint64_t (*)(uint64_t, void, void, void, void, uint64_t, void))sub_1AFD868D4);
}

uint64_t sub_1AFD8D5B8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1AFD8D614(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AFD8667C(a1, a2, a3, a4, *(void *)(v4 + 16), *(unsigned char *)(v4 + 24), *(_OWORD **)(v4 + 32));
}

uint64_t objectdestroy_127Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 104, 7);
}

uint64_t sub_1AFD8D6B8(uint64_t a1)
{
  return sub_1AFD8D6D0(a1, (uint64_t (*)(uint64_t, void, uint64_t, void, void, void, void))sub_1AFD85EFC);
}

uint64_t sub_1AFD8D6D0(uint64_t a1, uint64_t (*a2)(uint64_t, void, uint64_t, void, void, void, void))
{
  return a2(a1, *(unsigned __int8 *)(v2 + 16), v2 + 24, *(void *)(v2 + 72), *(void *)(v2 + 80), *(void *)(v2 + 88), *(void *)(v2 + 96));
}

uint64_t sub_1AFD8D6EC()
{
  return objectdestroy_130Tm(91);
}

uint64_t sub_1AFD8D6F4(uint64_t a1)
{
  return sub_1AFD8D70C(a1, (uint64_t (*)(uint64_t, void, void, void, void, uint64_t, void))sub_1AFD862CC);
}

uint64_t sub_1AFD8D70C(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, uint64_t, void))
{
  return a2(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), v2 + 48, *(unsigned __int8 *)(v2 + 90));
}

uint64_t sub_1AFD8D728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AFD858FC(a1, a2, a3, a4, *(void *)(v4 + 16), *(_OWORD **)(v4 + 24), *(void *)(v4 + 32), *(void *)(v4 + 40));
}

uint64_t sub_1AFD8D734()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 112, 7);
}

void sub_1AFD8D794(void **a1)
{
  sub_1AFD859DC(a1, (_OWORD *)(v1 + 16), *(void *)(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 80), *(void *)(v1 + 88), *(void *)(v1 + 96), *(void *)(v1 + 104));
}

uint64_t sub_1AFD8D7A8()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 106, 7);
}

void sub_1AFD8D808(void *a1)
{
  sub_1AFD85B48(a1, *(void (**)(void *))(v1 + 16), *(void *)(v1 + 24), *(void (**)(void *))(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), v1 + 64);
}

uint64_t sub_1AFD8D81C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AFD8A3D8(a1, a2, a3, a4, *(void *)(v4 + 16), *(_OWORD **)(v4 + 24));
}

uint64_t objectdestroy_17Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 96, 7);
}

void sub_1AFD8D8B0(void **a1)
{
  sub_1AFD85480(a1, (_OWORD *)(v1 + 16), *(void *)(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 80), *(void *)(v1 + 88));
}

uint64_t sub_1AFD8D8C0()
{
  return objectdestroy_130Tm(90);
}

uint64_t objectdestroy_130Tm(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v1, a1, 7);
}

void sub_1AFD8D92C(void *a1)
{
  sub_1AFD855B8(a1, *(void (**)(void *))(v1 + 16), *(void *)(v1 + 24), *(void (**)(long long *))(v1 + 32), *(void *)(v1 + 40), (long long *)(v1 + 48));
}

uint64_t sub_1AFD8D93C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AFD84E38(a1, a2, a3, a4, v4[2], v4[3], v4[4]);
}

uint64_t sub_1AFD8D980()
{
  return objectdestroy_53Tm(MEMORY[0x1E4FBC898], MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1AFD8D9AC(uint64_t a1)
{
  return sub_1AFD8DF70(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_1AFD84EEC);
}

uint64_t sub_1AFD8D9C4()
{
  return objectdestroy_166Tm(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC898]);
}

void sub_1AFD8D9F0(void *a1)
{
  sub_1AFD85124(a1, *(void (**)(void *))(v1 + 16), *(void *)(v1 + 24), *(void (**)(void *))(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72));
}

uint64_t sub_1AFD8DA24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AFD84E38(a1, a2, a3, a4, v4[2], v4[3], v4[4]);
}

uint64_t sub_1AFD8DA68()
{
  return objectdestroy_53Tm(MEMORY[0x1E4FBC898], MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1AFD8DA94(uint64_t a1)
{
  return sub_1AFD8DF70(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_1AFD84518);
}

uint64_t sub_1AFD8DAAC()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 72, 7);
}

void sub_1AFD8DAFC(uint64_t a1, uint64_t a2, void *a3)
{
  sub_1AFD84640(a1, a2, a3, *(void **)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 40), *(void *)(v3 + 48), *(void *)(v3 + 56), *(void *)(v3 + 64));
}

uint64_t objectdestroy_38Tm()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

void sub_1AFD8DB74(void *a1, void *a2)
{
  sub_1AFD8497C(a1, a2, *(void (**)(void))(v2 + 16), *(void *)(v2 + 24), *(void (**)(void *))(v2 + 32));
}

uint64_t sub_1AFD8DB80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AFD83C40(a1, a2, a3, a4, v4);
}

void sub_1AFD8DB8C(void **a1)
{
  sub_1AFD83D24(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t objectdestroy_191Tm()
{
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

void sub_1AFD8DBE8(unint64_t a1, void *a2)
{
  sub_1AFD83E58(a1, a2, *(void *)(v2 + 16), *(void (**)(void))(v2 + 24), *(void *)(v2 + 32), *(void (**)(uint64_t))(v2 + 40));
}

uint64_t sub_1AFD8DBF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AFD839D8(a1, a2, a3, a4, v4[2], v4[3], v4[4], v4[5], v4[6]);
}

uint64_t sub_1AFD8DC28()
{
  return objectdestroy_166Tm(MEMORY[0x1E4FBC898], MEMORY[0x1E4FBC8D0]);
}

uint64_t objectdestroy_166Tm(void (*a1)(void), void (*a2)(void))
{
  a1(v2[3]);
  a1(v2[5]);
  a2(v2[7]);
  a2(v2[9]);

  return MEMORY[0x1F4186498](v2, 80, 7);
}

void sub_1AFD8DCCC(void **a1)
{
  sub_1AFD83AEC(a1, v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], v1[9]);
}

uint64_t sub_1AFD8DD00()
{
  return objectdestroy_53Tm(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC898]);
}

void sub_1AFD8DD2C(void *a1)
{
  sub_1AFD89D68(a1, *(void (**)(void *))(v1 + 16), *(void *)(v1 + 24), *(void (**)(uint64_t, uint64_t))(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56));
}

uint64_t sub_1AFD8DD50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AFD892F0(a1, a2, a3, a4, *(void *)(v4 + 16), *(void *)(v4 + 24), *(_OWORD **)(v4 + 32));
}

void sub_1AFD8DD60(void **a1)
{
  sub_1AFD89400(a1, *(void *)(v1 + 16), (long long *)(v1 + 24), *(void *)(v1 + 72), *(void *)(v1 + 80), *(void *)(v1 + 88), *(void *)(v1 + 96));
}

uint64_t objectdestroy_218Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 104, 7);
}

void sub_1AFD8DDD8(void *a1)
{
  sub_1AFD89710(a1, *(void *)(v1 + 16), (long long *)(v1 + 24), *(void (**)(void *))(v1 + 72), *(void *)(v1 + 80), *(void (**)(uint64_t))(v1 + 88));
}

_OWORD *sub_1AFD8DDEC(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_1AFD8DDFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AFD834F0(a1, a2, a3, a4, *(void *)(v4 + 16), *(void *)(v4 + 24), *(uint64_t **)(v4 + 32));
}

uint64_t sub_1AFD8DE08()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 160))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 320, 7);
}

void sub_1AFD8DECC(void **a1)
{
  sub_1AFD835F4(a1, (uint64_t)(v1 + 2), (uint64_t)(v1 + 19), v1[36], v1[37], v1[38], v1[39]);
}

uint64_t sub_1AFD8DEE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AFD83040(a1, a2, a3, a4, v4[2], v4[3], v4[4]);
}

uint64_t sub_1AFD8DEF4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(uint64_t (**)(void *))(v2 + 16);
  v5[0] = a1;
  v5[1] = a2;
  return v3(v5);
}

uint64_t sub_1AFD8DF2C()
{
  return objectdestroy_53Tm(MEMORY[0x1E4FBC898], MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1AFD8DF58(uint64_t a1)
{
  return sub_1AFD8DF70(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_1AFD83134);
}

uint64_t sub_1AFD8DF70(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7]);
}

uint64_t sub_1AFD8DF88()
{
  return objectdestroy_53Tm(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC898]);
}

uint64_t objectdestroy_53Tm(void (*a1)(void), void (*a2)(void))
{
  a1(*(void *)(v2 + 24));
  swift_release();
  a2(*(void *)(v2 + 56));

  return MEMORY[0x1F4186498](v2, 64, 7);
}

uint64_t sub_1AFD8E014(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AFD82B18(a1, a2, a3, a4, *(void *)(v4 + 16), *(void *)(v4 + 24));
}

uint64_t sub_1AFD8E01C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 192, 7);
}

void sub_1AFD8E0A4(id *a1)
{
  sub_1AFD82C14(a1, *(void **)(v1 + 16), v1 + 24, *(void *)(v1 + 160), *(void *)(v1 + 168), *(void *)(v1 + 176), *(void *)(v1 + 184));
}

uint64_t objectdestroy_230Tm()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 184, 7);
}

void sub_1AFD8E13C(void *a1)
{
  sub_1AFD83798(a1, *(void (**)(void *))(v1 + 16), *(void *)(v1 + 24), *(void (**)(_OWORD *))(v1 + 32), *(void *)(v1 + 40), v1 + 48);
}

void sub_1AFD8E160(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v12 = *v1;
  uint64_t v3 = (os_unfair_lock_s *)(v1 + 2);
  sub_1AFFC8E38();
  os_unfair_lock_lock(v3);
  unint64_t v4 = v2[3];
  sub_1AFFC8E38();
  os_unfair_lock_unlock(v3);
  if (v4 >> 62)
  {
    sub_1AFFC8E38();
    uint64_t v5 = sub_1AFFCB9C8();
    swift_bridgeObjectRelease();
    if (v5)
    {
LABEL_3:
      if (v5 < 1)
      {
        __break(1u);
      }
      else
      {
        uint64_t v6 = 0;
        do
        {
          if ((v4 & 0xC000000000000001) != 0)
          {
            uint64_t v7 = MEMORY[0x1B3E8DC70](v6, v4);
          }
          else
          {
            uint64_t v7 = *(void *)(v4 + 8 * v6 + 32);
            sub_1AFFC8E48();
          }
          v14[3] = v12;
          v14[4] = &off_1F08764A8;
          v14[0] = v2;
          if (MEMORY[0x1B3E8F200](v7 + 16))
          {
            uint64_t v8 = *(void *)(v7 + 24);
            uint64_t ObjectType = swift_getObjectType();
            uint64_t v13 = a1;
            char v10 = *(void (**)(void *, uint64_t *, uint64_t, uint64_t))(v8 + 8);
            swift_retain_n();
            v10(v14, &v13, ObjectType, v8);
            swift_unknownObjectRelease();
          }
          else
          {
            swift_retain_n();
          }
          ++v6;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
          swift_release();
          swift_release();
        }
        while (v5 != v6);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      return;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v5) {
      goto LABEL_3;
    }
  }
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
}

void sub_1AFD8E370(id a1)
{
  uint64_t v83 = *(void *)&v1->_os_unfair_lock_opaque;
  uint64_t v84 = v1;
  sub_1AFD387D0();
  unint64_t v85 = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  BOOL v80 = (uint64_t *)((char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v79 = (uint64_t *)((char *)&v76 - v8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (uint64_t *)((char *)&v76 - v10);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (uint64_t *)((char *)&v76 - v12);
  id v14 = objc_msgSend(a1, sel_addedWatchlistIDs);
  uint64_t v15 = sub_1AFFCB1C8();

  uint64_t v16 = *(void *)(v15 + 16);
  id v77 = a1;
  if (v16)
  {
    unsigned int v82 = *MEMORY[0x1E4FAAAB8];
    uint64_t v81 = *(void (***)(void))(v4 + 104);
    uint64_t v78 = v15;
    long long v17 = (uint64_t *)(v15 + 40);
    unint64_t v18 = MEMORY[0x1E4FBC860];
    unint64_t v19 = v85;
    do
    {
      uint64_t v20 = *v17;
      void *v13 = *(v17 - 1);
      v13[1] = v20;
      ((void (*)(void *, void, unint64_t))v81)(v13, v82, v19);
      sub_1AFFC8E38();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v18 = sub_1AFD359C4(0, *(void *)(v18 + 16) + 1, 1, v18);
      }
      unint64_t v22 = *(void *)(v18 + 16);
      unint64_t v21 = *(void *)(v18 + 24);
      if (v22 >= v21 >> 1) {
        unint64_t v18 = sub_1AFD359C4(v21 > 1, v22 + 1, 1, v18);
      }
      v17 += 2;
      *(void *)(v18 + 16) = v22 + 1;
      unint64_t v23 = v18
          + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))
          + *(void *)(v4 + 72) * v22;
      unint64_t v19 = v85;
      (*(void (**)(unint64_t, void *, unint64_t))(v4 + 32))(v23, v13, v85);
      --v16;
    }
    while (v16);
    swift_bridgeObjectRelease();
    a1 = v77;
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v18 = MEMORY[0x1E4FBC860];
  }
  id v24 = objc_msgSend(a1, sel_removedWatchlistIDs);
  uint64_t v25 = sub_1AFFCB1C8();

  uint64_t v26 = *(void *)(v25 + 16);
  uint64_t v81 = (void (**)(void))v25;
  if (v26)
  {
    unsigned int v82 = *MEMORY[0x1E4FAAAC0];
    uint64_t v27 = *(void (**)(void *, void, unint64_t))(v4 + 104);
    long long v28 = (uint64_t *)(v25 + 40);
    unint64_t v29 = v85;
    do
    {
      uint64_t v30 = *v28;
      void *v11 = *(v28 - 1);
      v11[1] = v30;
      v27(v11, v82, v29);
      sub_1AFFC8E38();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v18 = sub_1AFD359C4(0, *(void *)(v18 + 16) + 1, 1, v18);
      }
      unint64_t v32 = *(void *)(v18 + 16);
      unint64_t v31 = *(void *)(v18 + 24);
      if (v32 >= v31 >> 1) {
        unint64_t v18 = sub_1AFD359C4(v31 > 1, v32 + 1, 1, v18);
      }
      v28 += 2;
      *(void *)(v18 + 16) = v32 + 1;
      unint64_t v33 = v18
          + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))
          + *(void *)(v4 + 72) * v32;
      unint64_t v29 = v85;
      (*(void (**)(unint64_t, void *, unint64_t))(v4 + 32))(v33, v11, v85);
      --v26;
    }
    while (v26);
  }
  swift_bridgeObjectRelease();
  id v34 = v77;
  id v35 = objc_msgSend(v77, sel_addedWatchlistIDs);
  uint64_t v36 = sub_1AFFCB1C8();

  uint64_t v37 = *(void *)(v36 + 16);
  uint64_t v76 = v36;
  if (v37)
  {
    unsigned int v82 = *MEMORY[0x1E4FAAAB0];
    uint64_t v81 = (void (**)(void))(v4 + 104);
    uint64_t v78 = v4 + 32;
    uint64_t v38 = (uint64_t *)(v36 + 40);
    do
    {
      uint64_t v39 = *(v38 - 1);
      uint64_t v40 = *v38;
      sub_1AFFC8E38();
      id v41 = objc_msgSend(v34, sel_indexesOfAddedWatchlistIDs, v76);
      sub_1AFD8F6AC(0, (unint64_t *)&qword_1EB819E90);
      uint64_t v42 = sub_1AFFCAC88();

      if (*(void *)(v42 + 16))
      {
        sub_1AFFC8E38();
        unint64_t v43 = sub_1AFD79CC8(v39, v40);
        if (v44)
        {
          id v45 = *(id *)(*(void *)(v42 + 56) + 8 * v43);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          id v46 = objc_msgSend(v45, sel_integerValue);

          int64_t v47 = v79;
          *uint64_t v79 = v39;
          v47[1] = v40;
          v47[2] = (uint64_t)v46;
          (*v81)();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v18 = sub_1AFD359C4(0, *(void *)(v18 + 16) + 1, 1, v18);
          }
          unint64_t v49 = *(void *)(v18 + 16);
          unint64_t v48 = *(void *)(v18 + 24);
          if (v49 >= v48 >> 1) {
            unint64_t v18 = sub_1AFD359C4(v48 > 1, v49 + 1, 1, v18);
          }
          *(void *)(v18 + 16) = v49 + 1;
          (*(void (**)(unint64_t, uint64_t *, unint64_t))(v4 + 32))(v18+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v49, v79, v85);
          goto LABEL_21;
        }
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_21:
      v38 += 2;
      --v37;
    }
    while (v37);
  }
  swift_bridgeObjectRelease();
  id v50 = objc_msgSend(v34, sel_reorderedWatchlistIDs);
  uint64_t v51 = sub_1AFFCB1C8();

  uint64_t v52 = *(void *)(v51 + 16);
  uint64_t v78 = v51;
  if (v52)
  {
    unsigned int v82 = *MEMORY[0x1E4FAAAB0];
    uint64_t v81 = (void (**)(void))(v4 + 104);
    uint64_t v79 = (uint64_t *)(v4 + 32);
    uint64_t v53 = (uint64_t *)(v51 + 40);
    do
    {
      uint64_t v55 = *(v53 - 1);
      uint64_t v54 = *v53;
      sub_1AFFC8E38();
      id v56 = objc_msgSend(v34, sel_indexesOfReorderedWatchlistIDs);
      sub_1AFD8F6AC(0, (unint64_t *)&qword_1EB819E90);
      uint64_t v57 = sub_1AFFCAC88();

      if (*(void *)(v57 + 16))
      {
        sub_1AFFC8E38();
        unint64_t v58 = sub_1AFD79CC8(v55, v54);
        if (v59)
        {
          id v60 = *(id *)(*(void *)(v57 + 56) + 8 * v58);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          id v61 = objc_msgSend(v60, sel_integerValue);

          long long v62 = v80;
          long long v63 = v81;
          uint64_t *v80 = v55;
          v62[1] = v54;
          v62[2] = (uint64_t)v61;
          (*v63)();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v18 = sub_1AFD359C4(0, *(void *)(v18 + 16) + 1, 1, v18);
          }
          unint64_t v65 = *(void *)(v18 + 16);
          unint64_t v64 = *(void *)(v18 + 24);
          if (v65 >= v64 >> 1) {
            unint64_t v18 = sub_1AFD359C4(v64 > 1, v65 + 1, 1, v18);
          }
          *(void *)(v18 + 16) = v65 + 1;
          (*(void (**)(unint64_t, uint64_t *, unint64_t))(v4 + 32))(v18+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v65, v80, v85);
          goto LABEL_33;
        }
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_33:
      v53 += 2;
      --v52;
    }
    while (v52);
  }
  swift_bridgeObjectRelease();
  long long v66 = v84;
  os_unfair_lock_lock(v84 + 4);
  unint64_t v67 = *(void *)&v66[6]._os_unfair_lock_opaque;
  sub_1AFFC8E38();
  os_unfair_lock_unlock(v66 + 4);
  if (!(v67 >> 62))
  {
    uint64_t v68 = *(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v68) {
      goto LABEL_43;
    }
LABEL_53:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return;
  }
  sub_1AFFC8E38();
  uint64_t v68 = sub_1AFFCB9C8();
  swift_bridgeObjectRelease();
  if (!v68) {
    goto LABEL_53;
  }
LABEL_43:
  if (v68 >= 1)
  {
    uint64_t v69 = 0;
    unint64_t v85 = v67 & 0xC000000000000001;
    do
    {
      if (v85)
      {
        uint64_t v70 = MEMORY[0x1B3E8DC70](v69, v67);
      }
      else
      {
        uint64_t v70 = *(void *)(v67 + 8 * v69 + 32);
        sub_1AFFC8E48();
      }
      v87[3] = v83;
      v87[4] = &off_1F08764A8;
      v87[0] = v66;
      if (MEMORY[0x1B3E8F200](v70 + 16))
      {
        uint64_t v71 = *(void *)(v70 + 24);
        uint64_t ObjectType = swift_getObjectType();
        unint64_t v86 = v18;
        unint64_t v73 = v67;
        long long v74 = *(void (**)(void *, unint64_t *, uint64_t, uint64_t))(v71 + 16);
        swift_retain_n();
        uint64_t v75 = ObjectType;
        long long v66 = v84;
        v74(v87, &v86, v75, v71);
        unint64_t v67 = v73;
        swift_unknownObjectRelease();
      }
      else
      {
        swift_retain_n();
      }
      ++v69;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v87);
      swift_release();
      swift_release();
    }
    while (v68 != v69);
    goto LABEL_53;
  }
  __break(1u);
}

uint64_t sub_1AFD8ECDC(void (*a1)(uint64_t, void))
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA70]), sel_init);
  id v3 = objc_msgSend(self, sel_defaultsForCurrentCountry);
  id v4 = objc_msgSend(v3, sel_defaultSymbols);

  uint64_t v5 = sub_1AFFCB1C8();
  sub_1AFD895E8(v5);
  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)sub_1AFFCB1B8();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_addObjectsFromArray_, v6);

  id v7 = objc_msgSend(v2, sel_array);
  uint64_t v8 = sub_1AFFCB1C8();

  uint64_t v9 = sub_1AFD8BFCC(v8);
  swift_bridgeObjectRelease();
  a1(v9, 0);

  return swift_bridgeObjectRelease();
}

void sub_1AFD8EE3C(uint64_t a1, void *a2, void (**a3)(void, void, void))
{
  uint64_t v6 = sub_1AFFC9E18();
  uint64_t v63 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v58 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1AFFC98F8();
  uint64_t v61 = *(void *)(v8 - 8);
  uint64_t v62 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v57 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1AFFC9F58();
  uint64_t v59 = *(void *)(v10 - 8);
  uint64_t v60 = v10;
  MEMORY[0x1F4188790](v10);
  id v56 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_1AFFC9DE8();
  uint64_t v12 = *(void *)(v64 - 8);
  MEMORY[0x1F4188790](v64);
  id v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a3;
  uint64_t v16 = a2;
  _Block_copy(a3);
  uint64_t v17 = sub_1AFFCA598();
  uint64_t v18 = *(void *)(a1 + 16);
  if (*(void *)(v17 + 16) == v18)
  {
    unint64_t v19 = sub_1AFD824A0(v17);
    swift_bridgeObjectRelease();
    if (qword_1EB817668 != -1) {
      swift_once();
    }
    uint64_t v20 = (void *)qword_1EB831AC0;
    sub_1AFD2CD48();
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_1AFFD0610;
    if (v19 >> 62)
    {
      id v50 = v20;
      sub_1AFFC8E38();
      uint64_t v22 = sub_1AFFCB9C8();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v22 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v23 = v20;
    }
    uint64_t v24 = MEMORY[0x1E4FBB5C8];
    *(void *)(v21 + 56) = MEMORY[0x1E4FBB550];
    *(void *)(v21 + 64) = v24;
    *(void *)(v21 + 32) = v22;
    uint64_t v25 = sub_1AFD8F6AC(0, (unint64_t *)&unk_1EB8180B0);
    uint64_t v26 = MEMORY[0x1B3E8D630](v19, v25);
    uint64_t v28 = v27;
    *(void *)(v21 + 96) = MEMORY[0x1E4FBB1A0];
    *(void *)(v21 + 104) = sub_1AFD2CE00();
    *(void *)(v21 + 72) = v26;
    *(void *)(v21 + 80) = v28;
    sub_1AFFCB478();
    sub_1AFFCA878();

    swift_bridgeObjectRelease();
    unint64_t v29 = (void *)sub_1AFFCB1B8();
    ((void (**)(void, void *, void))a3)[2](a3, v29, 0);
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v54 = v6;
    uint64_t v55 = v15;
    swift_bridgeObjectRelease();
    if (qword_1EB817668 != -1) {
      swift_once();
    }
    uint64_t v30 = (void *)qword_1EB831AC0;
    sub_1AFD2CD48();
    uint64_t v31 = swift_allocObject();
    uint64_t v32 = MEMORY[0x1E4FBB550];
    *(_OWORD *)(v31 + 16) = xmmword_1AFFD0610;
    uint64_t v33 = MEMORY[0x1E4FBB5C8];
    *(void *)(v31 + 56) = v32;
    *(void *)(v31 + 64) = v33;
    *(void *)(v31 + 32) = v18;
    id v34 = v30;
    uint64_t v35 = MEMORY[0x1E4FBB1A0];
    uint64_t v53 = a1;
    uint64_t v36 = MEMORY[0x1B3E8D630](a1, MEMORY[0x1E4FBB1A0]);
    uint64_t v38 = v37;
    *(void *)(v31 + 96) = v35;
    *(void *)(v31 + 104) = sub_1AFD2CE00();
    *(void *)(v31 + 72) = v36;
    *(void *)(v31 + 80) = v38;
    sub_1AFFCB478();
    sub_1AFFCA878();

    swift_bridgeObjectRelease();
    uint64_t v39 = v16[6];
    uint64_t v52 = v16[5];
    __swift_project_boxed_opaque_existential_1(v16 + 2, v52);
    uint64_t v40 = v14;
    (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E4FAA8A8], v64);
    id v41 = v56;
    sub_1AFFC9F48();
    uint64_t v42 = v57;
    sub_1AFFC98E8();
    uint64_t v43 = v63;
    char v44 = v58;
    uint64_t v45 = v54;
    (*(void (**)(char *, void, uint64_t))(v63 + 104))(v58, *MEMORY[0x1E4FAA980], v54);
    (*(void (**)(uint64_t, char *, char *, char *, char *, uint64_t, uint64_t))(v39 + 8))(v53, v40, v41, v42, v44, v52, v39);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v45);
    (*(void (**)(char *, uint64_t))(v61 + 8))(v42, v62);
    (*(void (**)(char *, uint64_t))(v59 + 8))(v41, v60);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v40, v64);
    id v46 = (void *)swift_allocObject();
    v46[2] = v16;
    v46[3] = sub_1AFD8F598;
    uint64_t v47 = v55;
    v46[4] = v55;
    sub_1AFFC8E48();
    sub_1AFFC8E48();
    unint64_t v48 = (void *)sub_1AFFCA5E8();
    sub_1AFFCA678();
    swift_release();
    swift_release();

    uint64_t v49 = swift_allocObject();
    *(void *)(v49 + 16) = sub_1AFD8F598;
    *(void *)(v49 + 24) = v47;
    sub_1AFFC8E48();
    unint64_t v29 = (void *)sub_1AFFCA5E8();
    sub_1AFFCA6B8();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
}

uint64_t sub_1AFD8F560()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1AFD8F598(void *a1, uint64_t a2)
{
  sub_1AFD8C54C(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_1AFD8F5A4(uint64_t a1)
{
  return sub_1AFD8C178(a1, *(void *)(v1 + 16), *(void (**)(unint64_t, void))(v1 + 24));
}

uint64_t sub_1AFD8F5C4(uint64_t a1)
{
  return sub_1AFD8C35C(a1, *(uint64_t (**)(void, uint64_t))(v1 + 16));
}

void sub_1AFD8F5CC()
{
  if (!qword_1EB817D30)
  {
    unint64_t v0 = sub_1AFFCA588();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB817D30);
    }
  }
}

void sub_1AFD8F634(uint64_t a1, uint64_t a2)
{
  sub_1AFD8BF34(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_1AFD8F640(uint64_t a1)
{
  return sub_1AFD8BD80(a1, *(void *)(v1 + 16), *(void (**)(uint64_t, void))(v1 + 24));
}

uint64_t objectdestroy_261Tm()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1AFD8F6A4()
{
  return sub_1AFD8ECDC(*(void (**)(uint64_t, void))(v0 + 24));
}

uint64_t sub_1AFD8F6AC(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1AFD8F6E8(uint64_t a1)
{
  sub_1AFD82910(0, &qword_1E9AFA250, (uint64_t (*)(uint64_t))sub_1AFD828DC, MEMORY[0x1E4FBCDD8]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for CloudKitWatchlistService.ServiceError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1AFD8F810);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CloudKitWatchlistService.ServiceError()
{
  return &type metadata for CloudKitWatchlistService.ServiceError;
}

unint64_t sub_1AFD8F84C()
{
  unint64_t result = qword_1E9AFA330[0];
  if (!qword_1E9AFA330[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9AFA330);
  }
  return result;
}

uint64_t sub_1AFD8F984()
{
  return 0x313434333431;
}

uint64_t sub_1AFD8F998()
{
  return 0x343434333431;
}

uint64_t sub_1AFD8F9AC()
{
  return 0x303634333431;
}

uint64_t sub_1AFD8F9C0()
{
  return 0x353534333431;
}

uint64_t sub_1AFD8F9D4()
{
  uint64_t result = sub_1AFD8F9F8();
  qword_1EB818960 = result;
  qword_1EB818968 = v1;
  return result;
}

uint64_t sub_1AFD8F9F8()
{
  id v0 = objc_msgSend(self, sel_sharedAccount);
  id v1 = objc_msgSend(v0, sel_contentStoreFrontID);

  if (v1)
  {
    uint64_t v2 = sub_1AFFCAE98();
    uint64_t v4 = v3;

    sub_1AFD2CD48();
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1AFFD05F0;
    *(void *)(v5 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v5 + 64) = sub_1AFD2CE00();
    *(void *)(v5 + 32) = v2;
    *(void *)(v5 + 40) = v4;
    sub_1AFD2C4F4();
    sub_1AFFC8E38();
    uint64_t v6 = (void *)sub_1AFFCB638();
    sub_1AFFCB478();
  }
  else
  {
    uint64_t v2 = 0x313434333431;
    sub_1AFFCB468();
    sub_1AFD2CD48();
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1AFFD05F0;
    *(void *)(v7 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v7 + 64) = sub_1AFD2CE00();
    *(void *)(v7 + 32) = 0x313434333431;
    *(void *)(v7 + 40) = 0xE600000000000000;
    sub_1AFD2C4F4();
    uint64_t v6 = (void *)sub_1AFFCB638();
  }
  sub_1AFFCA878();
  swift_bridgeObjectRelease();

  return v2;
}

uint64_t sub_1AFD8FBA0()
{
  if (qword_1EB819AC8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = qword_1EB818960;
  sub_1AFFC8E38();
  return v0;
}

uint64_t sub_1AFD8FC24(uint64_t a1, uint64_t a2)
{
  if (qword_1EB819AC8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  qword_1EB818960 = a1;
  qword_1EB818968 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1AFD8FCB0())()
{
  if (qword_1EB819AC8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1AFD8FD3C()
{
  if (qword_1EB819AC8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = qword_1EB818960;
  uint64_t v1 = qword_1EB818968;
  if (qword_1EB818960 == 0x313434333431 && qword_1EB818968 == 0xE600000000000000)
  {
    char v6 = 1;
  }
  else
  {
    char v3 = sub_1AFFCBCE8();
    BOOL v5 = v0 == 0x343434333431 && v1 == 0xE600000000000000;
    char v6 = 1;
    if ((v3 & 1) == 0 && !v5)
    {
      char v7 = sub_1AFFCBCE8();
      BOOL v8 = v0 == 0x303634333431 && v1 == 0xE600000000000000;
      BOOL v9 = v8;
      char v6 = 1;
      if ((v7 & 1) == 0 && !v9)
      {
        char v10 = sub_1AFFCBCE8();
        BOOL v12 = v0 == 0x353534333431 && v1 == 0xE600000000000000;
        char v6 = 1;
        if ((v10 & 1) == 0 && !v12) {
          char v6 = sub_1AFFCBCE8();
        }
      }
    }
  }
  return v6 & 1;
}

id sub_1AFD8FEDC()
{
  id v0 = objc_msgSend(self, sel_sharedAccount);
  id v1 = objc_msgSend(v0, sel_isUserSignedInToiCloud);

  return v1;
}

ValueMetadata *type metadata accessor for Account()
{
  return &type metadata for Account;
}

ValueMetadata *type metadata accessor for Account.StorefrontID()
{
  return &type metadata for Account.StorefrontID;
}

unint64_t sub_1AFD8FF54()
{
  unint64_t v0 = sub_1AFDF9B10((uint64_t)&unk_1F086F758);
  unint64_t result = sub_1AFDF9B10((uint64_t)&unk_1F086F6F8);
  qword_1EB8319F0 = v0;
  qword_1EB8319F8 = result;
  return result;
}

uint64_t NewsUserProfile.subscribedTagIDs.getter()
{
  return sub_1AFFC8E38();
}

uint64_t NewsUserProfile.mutedTagIDs.getter()
{
  return sub_1AFFC8E38();
}

uint64_t NewsUserProfile.autoFavoritedTagIDs.getter()
{
  return sub_1AFFC8E38();
}

uint64_t NewsUserProfile.purchasedTagIDs.getter()
{
  return sub_1AFFC8E38();
}

id NewsUserProfile.bundleSubscription.getter()
{
  return *(id *)(v0 + 32);
}

uint64_t NewsUserProfile.init(subscribedTagIDs:mutedTagIDs:autoFavoritedTagIDs:purchasedTagIDs:bundleSubscription:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  *a6 = result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

void destroy for NewsUserProfile(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 32);
}

void *initializeWithCopy for NewsUserProfile(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  BOOL v5 = (void *)a2[4];
  a1[4] = v5;
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  id v6 = v5;
  return a1;
}

void *assignWithCopy for NewsUserProfile(void *a1, void *a2)
{
  *a1 = *a2;
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a2[4];
  BOOL v5 = (void *)a1[4];
  a1[4] = v4;
  id v6 = v4;

  return a1;
}

uint64_t assignWithTake for NewsUserProfile(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);

  return a1;
}

uint64_t getEnumTagSinglePayload for NewsUserProfile(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NewsUserProfile(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NewsUserProfile()
{
  return &type metadata for NewsUserProfile;
}

uint64_t sub_1AFD90240(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (!v1) {
    return v2;
  }
  uint64_t v26 = MEMORY[0x1E4FBC860];
  sub_1AFD9DA10(0, v1, 0);
  uint64_t v2 = v26;
  uint64_t result = sub_1AFE2BE0C(a1);
  uint64_t v6 = result;
  uint64_t v7 = 0;
  uint64_t v8 = a1 + 64;
  int64_t v22 = v1;
  int v23 = v5;
  uint64_t v24 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v11 = (unint64_t)v6 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v5) {
      goto LABEL_24;
    }
    BOOL v12 = (uint64_t *)(*(void *)(a1 + 56) + 136 * v6);
    uint64_t v13 = v12[1];
    uint64_t v25 = *v12;
    unint64_t v15 = *(void *)(v26 + 16);
    unint64_t v14 = *(void *)(v26 + 24);
    uint64_t result = sub_1AFFC8E38();
    if (v15 >= v14 >> 1) {
      uint64_t result = sub_1AFD9DA10(v14 > 1, v15 + 1, 1);
    }
    *(void *)(v26 + 16) = v15 + 1;
    uint64_t v16 = v26 + 16 * v15;
    *(void *)(v16 + 32) = v25;
    *(void *)(v16 + 40) = v13;
    int64_t v9 = 1 << *(unsigned char *)(a1 + 32);
    if (v6 >= v9) {
      goto LABEL_25;
    }
    uint64_t v8 = a1 + 64;
    uint64_t v17 = *(void *)(v24 + 8 * v11);
    if ((v17 & (1 << v6)) == 0) {
      goto LABEL_26;
    }
    int v5 = v23;
    if (*(_DWORD *)(a1 + 36) != v23) {
      goto LABEL_27;
    }
    unint64_t v18 = v17 & (-2 << (v6 & 0x3F));
    if (v18)
    {
      int64_t v9 = __clz(__rbit64(v18)) | v6 & 0xFFFFFFFFFFFFFFC0;
      int64_t v10 = v22;
    }
    else
    {
      unint64_t v19 = v11 + 1;
      unint64_t v20 = (unint64_t)(v9 + 63) >> 6;
      int64_t v10 = v22;
      if (v11 + 1 < v20)
      {
        unint64_t v21 = *(void *)(v24 + 8 * v19);
        if (v21)
        {
LABEL_20:
          int64_t v9 = __clz(__rbit64(v21)) + (v19 << 6);
        }
        else
        {
          while (v20 - 2 != v11)
          {
            unint64_t v21 = *(void *)(a1 + 80 + 8 * v11++);
            if (v21)
            {
              unint64_t v19 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v7;
    uint64_t v6 = v9;
    if (v7 == v10) {
      return v2;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1AFD90450(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v4 + 16) = a1;
  uint64_t v7 = *v3;
  uint64_t v9 = v3[2];
  uint64_t v8 = v3[3];
  BOOL v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1E9AFA378 + dword_1E9AFA378);
  int64_t v10 = (void *)swift_task_alloc();
  *(void *)(v4 + 24) = v10;
  *int64_t v10 = v4;
  v10[1] = sub_1AFD6BBC4;
  return v12(a2, a3, v7, v9, v8);
}

unint64_t sub_1AFD9052C()
{
  unint64_t result = qword_1EB8118D8;
  if (!qword_1EB8118D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8118D8);
  }
  return result;
}

unint64_t sub_1AFD90584()
{
  unint64_t result = qword_1EB8118E0;
  if (!qword_1EB8118E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8118E0);
  }
  return result;
}

uint64_t sub_1AFD905D8()
{
  return sub_1AFD91CC4(&qword_1EB810BC0, (void (*)(uint64_t))type metadata accessor for SymbolEntity);
}

uint64_t sub_1AFD90620@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1AFD910B4();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return result;
}

uint64_t sub_1AFD9064C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 8);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1E9AFA370 + dword_1E9AFA370);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1AFD6A894;
  return v7(a1, v4);
}

uint64_t sub_1AFD90700(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return MEMORY[0x1F4188298](sub_1AFD90720, 0, 0);
}

uint64_t sub_1AFD90720()
{
  **(void **)(v0 + 16) = MEMORY[0x1E4FBC860];
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_1AFD9074C()
{
  unint64_t result = qword_1EB8118D0;
  if (!qword_1EB8118D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8118D0);
  }
  return result;
}

uint64_t sub_1AFD907A0()
{
  return sub_1AFD91CC4((unint64_t *)&qword_1EB816B20, (void (*)(uint64_t))type metadata accessor for SymbolEntity);
}

unint64_t sub_1AFD907EC()
{
  unint64_t result = qword_1E9AFA350;
  if (!qword_1E9AFA350)
  {
    sub_1AFD91D0C(255, qword_1E9AFA358, MEMORY[0x1E4FBB320]);
    sub_1AFD91CC4((unint64_t *)&qword_1EB816B20, (void (*)(uint64_t))type metadata accessor for SymbolEntity);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFA350);
  }
  return result;
}

uint64_t sub_1AFD908A8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_1AFD5BC18();
  *uint64_t v5 = v2;
  v5[1] = sub_1AFD3503C;
  return MEMORY[0x1F40D3D68](a1, a2, v6);
}

uint64_t destroy for SymbolNotInWatchlistQuery()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

void *initializeWithCopy for SymbolNotInWatchlistQuery(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  return a1;
}

void *assignWithCopy for SymbolNotInWatchlistQuery(void *a1, void *a2)
{
  *a1 = *a2;
  sub_1AFFC8E48();
  swift_release();
  a1[1] = a2[1];
  sub_1AFFC8E48();
  swift_release();
  a1[2] = a2[2];
  sub_1AFFC8E48();
  swift_release();
  a1[3] = a2[3];
  sub_1AFFC8E48();
  swift_release();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

_OWORD *assignWithTake for SymbolNotInWatchlistQuery(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  swift_release();
  a1[1] = a2[1];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SymbolNotInWatchlistQuery(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SymbolNotInWatchlistQuery(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SymbolNotInWatchlistQuery()
{
  return &type metadata for SymbolNotInWatchlistQuery;
}

uint64_t sub_1AFD90B8C(uint64_t result, uint64_t a2)
{
  unint64_t v2 = *(void *)(result + 16);
  if (!v2) {
    return MEMORY[0x1E4FBC860];
  }
  unint64_t v4 = 0;
  uint64_t v5 = result + 32;
  uint64_t v6 = MEMORY[0x1E4FBC860];
  do
  {
    if (v4 <= v2) {
      unint64_t v7 = v2;
    }
    else {
      unint64_t v7 = v4;
    }
    uint64_t v8 = v5 + 136 * v4;
    for (unint64_t i = v4; ; ++i)
    {
      if (v7 == i)
      {
        __break(1u);
        return result;
      }
      long long v10 = *(_OWORD *)(v8 + 112);
      long long v29 = *(_OWORD *)(v8 + 96);
      long long v30 = v10;
      uint64_t v31 = *(void *)(v8 + 128);
      long long v11 = *(_OWORD *)(v8 + 48);
      long long v25 = *(_OWORD *)(v8 + 32);
      long long v26 = v11;
      long long v12 = *(_OWORD *)(v8 + 80);
      long long v27 = *(_OWORD *)(v8 + 64);
      long long v28 = v12;
      long long v13 = *(_OWORD *)(v8 + 16);
      unint64_t v4 = i + 1;
      long long v23 = *(_OWORD *)v8;
      long long v24 = v13;
      sub_1AFD76370((uint64_t)&v23);
      if ((sub_1AFF70434((uint64_t *)&v23, a2) & 1) == 0) {
        break;
      }
      __n128 result = sub_1AFD76408((uint64_t)&v23);
      v8 += 136;
      if (v2 == v4) {
        return v6;
      }
    }
    __n128 result = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v32 = v6;
    if ((result & 1) == 0)
    {
      __n128 result = sub_1AFD9DAD0(0, *(void *)(v6 + 16) + 1, 1);
      uint64_t v6 = v32;
    }
    unint64_t v15 = *(void *)(v6 + 16);
    unint64_t v14 = *(void *)(v6 + 24);
    if (v15 >= v14 >> 1)
    {
      __n128 result = sub_1AFD9DAD0(v14 > 1, v15 + 1, 1);
      uint64_t v6 = v32;
    }
    *(void *)(v6 + 16) = v15 + 1;
    uint64_t v16 = v6 + 136 * v15;
    *(_OWORD *)(v16 + 32) = v23;
    long long v17 = v24;
    long long v18 = v25;
    long long v19 = v27;
    *(_OWORD *)(v16 + 80) = v26;
    *(_OWORD *)(v16 + 96) = v19;
    *(_OWORD *)(v16 + 48) = v17;
    *(_OWORD *)(v16 + 64) = v18;
    long long v20 = v28;
    long long v21 = v29;
    long long v22 = v30;
    *(void *)(v16 + 160) = v31;
    *(_OWORD *)(v16 + 128) = v21;
    *(_OWORD *)(v16 + 144) = v22;
    *(_OWORD *)(v16 + 112) = v20;
  }
  while (v2 - 1 != i);
  return v6;
}

unint64_t sub_1AFD90D30(uint64_t a1, uint64_t a2)
{
  sub_1AFD91D0C(0, &qword_1EB810BC8, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  unint64_t v7 = (char *)v36 - v6;
  uint64_t v8 = type metadata accessor for SymbolEntity();
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v52 = (uint64_t)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v38 = (uint64_t)v36 - v12;
  uint64_t v13 = *(void *)(a1 + 16);
  if (!v13) {
    return MEMORY[0x1E4FBC860];
  }
  v36[1] = v2;
  uint64_t v37 = v11;
  uint64_t v39 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  uint64_t v40 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  sub_1AFFC8E38();
  v36[0] = a1;
  unint64_t v14 = (uint64_t *)(a1 + 40);
  unint64_t v15 = MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v16 = v8;
    uint64_t v17 = *(v14 - 1);
    uint64_t v18 = *v14;
    uint64_t v19 = *(void *)(a2 + 16);
    sub_1AFFC8E38();
    if (v19)
    {
      sub_1AFFC8E38();
      unint64_t v20 = sub_1AFD79CC8(v17, v18);
      if (v21)
      {
        uint64_t v22 = *(void *)(a2 + 56) + 136 * v20;
        long long v43 = *(_OWORD *)v22;
        long long v23 = *(_OWORD *)(v22 + 64);
        long long v25 = *(_OWORD *)(v22 + 16);
        long long v24 = *(_OWORD *)(v22 + 32);
        long long v46 = *(_OWORD *)(v22 + 48);
        long long v47 = v23;
        long long v44 = v25;
        long long v45 = v24;
        long long v27 = *(_OWORD *)(v22 + 96);
        long long v26 = *(_OWORD *)(v22 + 112);
        long long v28 = *(_OWORD *)(v22 + 80);
        uint64_t v51 = *(void *)(v22 + 128);
        long long v49 = v27;
        long long v50 = v26;
        long long v48 = v28;
        sub_1AFD76370((uint64_t)&v43);
        swift_bridgeObjectRelease();
        v41[6] = v49;
        v41[7] = v50;
        uint64_t v42 = v51;
        v41[2] = v45;
        void v41[3] = v46;
        v41[4] = v47;
        v41[5] = v48;
        v41[0] = v43;
        v41[1] = v44;
        SymbolEntity.init(from:)(v41, (uint64_t)v7);
        long long v29 = *v40;
        long long v30 = v7;
        uint64_t v31 = 0;
        goto LABEL_10;
      }
      swift_bridgeObjectRelease();
    }
    long long v29 = *v40;
    long long v30 = v7;
    uint64_t v31 = 1;
LABEL_10:
    uint64_t v8 = v16;
    v29(v30, v31, 1, v16);
    swift_bridgeObjectRelease();
    if ((*v39)(v7, 1, v16) == 1)
    {
      sub_1AFD59684((uint64_t)v7);
    }
    else
    {
      uint64_t v32 = v38;
      sub_1AFD5BC6C((uint64_t)v7, v38);
      sub_1AFD5BC6C(v32, v52);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v15 = sub_1AFD35A0C(0, *(void *)(v15 + 16) + 1, 1, v15);
      }
      unint64_t v34 = *(void *)(v15 + 16);
      unint64_t v33 = *(void *)(v15 + 24);
      if (v34 >= v33 >> 1) {
        unint64_t v15 = sub_1AFD35A0C(v33 > 1, v34 + 1, 1, v15);
      }
      *(void *)(v15 + 16) = v34 + 1;
      sub_1AFD5BC6C(v52, v15+ ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))+ *(void *)(v37 + 72) * v34);
      uint64_t v8 = v16;
    }
    v14 += 2;
    --v13;
  }
  while (v13);
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_1AFD910B4()
{
  sub_1AFD5A2B4(0, &qword_1EB810A30, (unint64_t *)&unk_1EB81A7F8);
  sub_1AFFC8A08();
  sub_1AFFC89F8();
  uint64_t v0 = sub_1AFFC89C8();
  sub_1AFD5A2B4(0, (unint64_t *)&unk_1EB810A38, &qword_1EB81A9D8);
  sub_1AFFC89F8();
  sub_1AFFC89C8();
  sub_1AFD5A2B4(0, (unint64_t *)&qword_1EB8167E0, (unint64_t *)&qword_1EB81A890);
  sub_1AFFC89F8();
  sub_1AFFC89C8();
  sub_1AFD93F08();
  swift_getKeyPath();
  sub_1AFFC8F78();
  return v0;
}

uint64_t sub_1AFD91204(uint64_t a1, uint64_t a2)
{
  v2[15] = a1;
  v2[16] = a2;
  uint64_t v3 = sub_1AFFC9E18();
  v2[17] = v3;
  v2[18] = *(void *)(v3 - 8);
  v2[19] = swift_task_alloc();
  uint64_t v4 = sub_1AFFC98F8();
  v2[20] = v4;
  v2[21] = *(void *)(v4 - 8);
  v2[22] = swift_task_alloc();
  uint64_t v5 = sub_1AFFC9F58();
  v2[23] = v5;
  v2[24] = *(void *)(v5 - 8);
  v2[25] = swift_task_alloc();
  uint64_t v6 = sub_1AFFC9DE8();
  v2[26] = v6;
  v2[27] = *(void *)(v6 - 8);
  v2[28] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1AFD913D8, 0, 0);
}

uint64_t sub_1AFD913D8()
{
  long long v28 = v0;
  if (qword_1EB810B30 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1AFFCA8A8();
  v0[29] = __swift_project_value_buffer(v1, (uint64_t)qword_1EB810AF0);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_1AFFCA888();
  os_log_type_t v3 = sub_1AFFCB448();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = v0[15];
  if (v4)
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v27 = v7;
    *(_DWORD *)uint64_t v6 = 136315138;
    v0[13] = v5;
    sub_1AFD3ABD0();
    sub_1AFD91CC4((unint64_t *)&qword_1EB819DD0, (void (*)(uint64_t))sub_1AFD3ABD0);
    uint64_t v8 = sub_1AFFCAD88();
    v0[14] = sub_1AFD36BA8(v8, v9, &v27);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AFD01000, v2, v3, "Fetching stocks for symbol query with identifiers=[%s]", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v7, -1, -1);
    MEMORY[0x1B3E8F0D0](v6, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v10 = v0[27];
  uint64_t v26 = v0[28];
  uint64_t v11 = v0[26];
  uint64_t v19 = v0[25];
  uint64_t v12 = v0[22];
  uint64_t v24 = v0[24];
  uint64_t v25 = v0[23];
  uint64_t v22 = v0[21];
  uint64_t v13 = v0[19];
  uint64_t v23 = v0[20];
  uint64_t v14 = v0[18];
  uint64_t v20 = v0[17];
  uint64_t v21 = v0[15];
  sub_1AFFC8998();
  uint64_t v15 = v0[5];
  uint64_t v16 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v15);
  (*(void (**)(uint64_t, void, uint64_t))(v10 + 104))(v26, *MEMORY[0x1E4FAA8A8], v11);
  sub_1AFFC9F48();
  sub_1AFFC98E8();
  (*(void (**)(uint64_t, void, uint64_t))(v14 + 104))(v13, *MEMORY[0x1E4FAA980], v20);
  v0[30] = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 8))(v21, v26, v19, v12, v13, v15, v16);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v20);
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v12, v23);
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v19, v25);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v26, v11);
  uint64_t v17 = (void *)swift_task_alloc();
  v0[31] = v17;
  *uint64_t v17 = v0;
  v17[1] = sub_1AFD917D0;
  return MEMORY[0x1F415EBC8](v0 + 7);
}

uint64_t sub_1AFD917D0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 256) = v0;
  swift_task_dealloc();
  if (v0)
  {
    os_log_type_t v3 = sub_1AFD91C14;
  }
  else
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v2 + 16);
    os_log_type_t v3 = sub_1AFD918F8;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1AFD918F8()
{
  uint64_t v20 = v0;
  uint64_t v1 = v0[7];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_1AFFCA888();
  os_log_type_t v3 = sub_1AFFCB448();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[15];
    uint64_t v5 = swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    v19[0] = v18;
    *(_DWORD *)uint64_t v5 = 136315394;
    os_log_type_t type = v3;
    v0[8] = v4;
    sub_1AFD3ABD0();
    sub_1AFD91CC4((unint64_t *)&qword_1EB819DD0, (void (*)(uint64_t))sub_1AFD3ABD0);
    uint64_t v6 = sub_1AFFCAD88();
    v0[9] = sub_1AFD36BA8(v6, v7, v19);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v5 + 12) = 2080;
    uint64_t v8 = sub_1AFFC8E38();
    uint64_t v9 = sub_1AFD90240(v8);
    swift_bridgeObjectRelease();
    v0[11] = v9;
    uint64_t v10 = sub_1AFFCAD88();
    unint64_t v12 = v11;
    swift_bridgeObjectRelease();
    v0[12] = sub_1AFD36BA8(v10, v12, v19);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AFD01000, v2, type, "Fetched stocks for symbol query with identifiers=[%s], stocks=[%s]", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v18, -1, -1);
    MEMORY[0x1B3E8F0D0](v5, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v13 = v0[15];
  sub_1AFFC8E38();
  unint64_t v14 = sub_1AFD90D30(v13, v1);
  swift_bridgeObjectRelease_n();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(unint64_t))v0[1];
  return v15(v14);
}

uint64_t sub_1AFD91C14()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1AFD91CC4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1AFD91D0C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = type metadata accessor for SymbolEntity();
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1AFD91D6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[88] = a5;
  v5[87] = a4;
  v5[86] = a3;
  v5[85] = a2;
  v5[84] = a1;
  v5[89] = *(void *)(type metadata accessor for SymbolEntity() - 8);
  v5[90] = swift_task_alloc();
  v5[91] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1AFD91E48, 0, 0);
}

uint64_t sub_1AFD91E48()
{
  uint64_t v22 = v0;
  if (sub_1AFFC8F58())
  {
    swift_getKeyPath();
    sub_1AFD33084();
    sub_1AFFC8CA8();
    swift_release();
    swift_release();
    uint64_t v1 = v0[57];
    uint64_t v2 = v0[58];
    uint64_t v3 = v0[59];
  }
  else
  {
    uint64_t v1 = 0;
    uint64_t v2 = 0;
    uint64_t v3 = 0;
  }
  v0[94] = v3;
  v0[93] = v2;
  v0[92] = v1;
  if (qword_1EB810B30 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1AFFCA8A8();
  v0[95] = __swift_project_value_buffer(v4, (uint64_t)qword_1EB810AF0);
  sub_1AFFC8E38();
  sub_1AFD93E78(v1, v2);
  sub_1AFFC8E38();
  sub_1AFD93E78(v1, v2);
  uint64_t v5 = sub_1AFFCA888();
  os_log_type_t v6 = sub_1AFFCB478();
  BOOL v7 = os_log_type_enabled(v5, v6);
  unint64_t v8 = v0[85];
  if (v7)
  {
    os_log_type_t v19 = v6;
    uint64_t v9 = v0[84];
    uint64_t v10 = swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    uint64_t v21 = v20;
    *(_DWORD *)uint64_t v10 = 136315394;
    sub_1AFFC8E38();
    v0[80] = sub_1AFD36BA8(v9, v8, &v21);
    sub_1AFFCB688();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v10 + 12) = 2080;
    if (v2)
    {
      sub_1AFFC8E38();
      sub_1AFFC8E48();
      sub_1AFFC8B28();
      sub_1AFD93EBC(v1, v2);
      uint64_t v11 = v0[60];
      unint64_t v12 = v0[61];
    }
    else
    {
      unint64_t v12 = 0xE300000000000000;
      uint64_t v11 = 7104878;
    }
    v0[81] = sub_1AFD36BA8(v11, v12, &v21);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    sub_1AFD93EBC(v1, v2);
    sub_1AFD93EBC(v1, v2);
    _os_log_impl(&dword_1AFD01000, v5, v19, "Fetching stocks for symbol entities matching string='%s', watchlist='%s'", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v20, -1, -1);
    MEMORY[0x1B3E8F0D0](v10, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    sub_1AFD93EBC(v1, v2);
    sub_1AFD93EBC(v1, v2);
  }

  uint64_t v13 = v0[85];
  uint64_t v14 = v0[84];
  sub_1AFFC8998();
  uint64_t v15 = v0[55];
  uint64_t v16 = v0[56];
  __swift_project_boxed_opaque_existential_1(v0 + 52, v15);
  v0[96] = sub_1AFD4EE28(v14, v13, v15, v16);
  uint64_t v17 = (void *)swift_task_alloc();
  v0[97] = v17;
  *uint64_t v17 = v0;
  v17[1] = sub_1AFD92220;
  return MEMORY[0x1F415EBC8](v0 + 70);
}

uint64_t sub_1AFD92220()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 784) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_1AFD939D4;
  }
  else
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v2 + 416);
    uint64_t v3 = sub_1AFD92348;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1AFD92348()
{
  uint64_t v68 = v0;
  uint64_t v1 = *(void *)(v0 + 744);
  uint64_t v2 = *(void *)(v0 + 736);
  uint64_t v3 = *(void *)(v0 + 560);
  *(void *)(v0 + 792) = v3;
  sub_1AFFC8E38();
  sub_1AFD93E78(v2, v1);
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFD93E78(v2, v1);
  sub_1AFFC8E38();
  uint64_t v4 = sub_1AFFCA888();
  os_log_type_t v5 = sub_1AFFCB478();
  if (os_log_type_enabled(v4, v5))
  {
    unint64_t v6 = *(void *)(v0 + 680);
    uint64_t v7 = *(void *)(v0 + 672);
    uint64_t v8 = swift_slowAlloc();
    uint64_t v64 = swift_slowAlloc();
    v67[0] = v64;
    *(_DWORD *)uint64_t v8 = 136315650;
    sub_1AFFC8E38();
    *(void *)(v0 + 600) = sub_1AFD36BA8(v7, v6, v67);
    sub_1AFFCB688();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 12) = 2080;
    int64_t v9 = *(void *)(v3 + 16);
    uint64_t v10 = MEMORY[0x1E4FBC860];
    if (v9)
    {
      os_log_type_t v60 = v5;
      uint64_t v61 = v8;
      uint64_t v62 = v4;
      *(void *)&v65[0] = MEMORY[0x1E4FBC860];
      sub_1AFD9DA10(0, v9, 0);
      uint64_t v10 = *(void *)&v65[0];
      unint64_t v11 = *(void *)(*(void *)&v65[0] + 16);
      uint64_t v12 = 16 * v11;
      uint64_t v63 = v3;
      uint64_t v13 = (uint64_t *)(v3 + 40);
      do
      {
        uint64_t v14 = *(v13 - 1);
        uint64_t v15 = *v13;
        *(void *)&v65[0] = v10;
        int64_t v16 = v11 + 1;
        unint64_t v17 = *(void *)(v10 + 24);
        sub_1AFFC8E38();
        if (v11 >= v17 >> 1)
        {
          sub_1AFD9DA10(v17 > 1, v16, 1);
          uint64_t v10 = *(void *)&v65[0];
        }
        *(void *)(v10 + 16) = v16;
        uint64_t v18 = v10 + v12;
        *(void *)(v18 + 32) = v14;
        *(void *)(v18 + 40) = v15;
        v12 += 16;
        v13 += 17;
        ++v11;
        --v9;
      }
      while (v9);
      uint64_t v4 = v62;
      uint64_t v3 = v63;
      uint64_t v8 = v61;
      os_log_type_t v5 = v60;
    }
    uint64_t v21 = *(void *)(v0 + 744);
    *(void *)(v0 + 608) = v10;
    sub_1AFD3ABD0();
    sub_1AFD91CC4((unint64_t *)&qword_1EB819DD0, (void (*)(uint64_t))sub_1AFD3ABD0);
    uint64_t v22 = sub_1AFFCAD88();
    unint64_t v24 = v23;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 616) = sub_1AFD36BA8(v22, v24, v67);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 22) = 2080;
    if (v21)
    {
      uint64_t v25 = *(void *)(v0 + 744);
      uint64_t v26 = *(void *)(v0 + 736);
      sub_1AFFC8E38();
      sub_1AFFC8E48();
      sub_1AFFC8B28();
      sub_1AFD93EBC(v26, v25);
      uint64_t v27 = *(void *)(v0 + 512);
      unint64_t v28 = *(void *)(v0 + 520);
    }
    else
    {
      unint64_t v28 = 0xE300000000000000;
      uint64_t v27 = 7104878;
    }
    uint64_t v29 = *(void *)(v0 + 744);
    uint64_t v30 = *(void *)(v0 + 736);
    *(void *)(v0 + 624) = sub_1AFD36BA8(v27, v28, v67);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    sub_1AFD93EBC(v30, v29);
    sub_1AFD93EBC(v30, v29);
    _os_log_impl(&dword_1AFD01000, v4, v5, "Fetched stocks for symbol entities matching string='%s', stocks=[%s], watchlist='%s'", (uint8_t *)v8, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v64, -1, -1);
    MEMORY[0x1B3E8F0D0](v8, -1, -1);
  }
  else
  {
    uint64_t v19 = *(void *)(v0 + 744);
    uint64_t v20 = *(void *)(v0 + 736);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    sub_1AFD93EBC(v20, v19);
    sub_1AFD93EBC(v20, v19);
  }

  int64_t v31 = *(void *)(v3 + 16);
  if (v31)
  {
    uint64_t v32 = *(void *)(v0 + 744);
    if (v32)
    {
      uint64_t v33 = *(void *)(v0 + 736);
      sub_1AFFC8E38();
      sub_1AFFC8E48();
      sub_1AFFC8998();
      uint64_t v34 = *(void *)(v0 + 400);
      uint64_t v35 = *(void *)(v0 + 408);
      __swift_project_boxed_opaque_existential_1((void *)(v0 + 376), v34);
      *(void *)(v0 + 800) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 144))(v33, v32, v34, v35);
      uint64_t v36 = (void *)swift_task_alloc();
      *(void *)(v0 + 808) = v36;
      *uint64_t v36 = v0;
      v36[1] = sub_1AFD92A18;
      return MEMORY[0x1F415EBC8](v0 + 288);
    }
    uint64_t v40 = *(void *)(v0 + 792);
    uint64_t v41 = *(void *)(v0 + 712);
    v67[0] = MEMORY[0x1E4FBC860];
    sub_1AFD9DB10(0, v31, 0);
    uint64_t v39 = v67[0];
    uint64_t v42 = v40 + 32;
    for (int64_t i = v31 - 1; ; --i)
    {
      uint64_t v44 = *(void *)(v0 + 720);
      *(_OWORD *)(v0 + 152) = *(_OWORD *)v42;
      long long v45 = *(_OWORD *)(v42 + 64);
      long long v47 = *(_OWORD *)(v42 + 16);
      long long v46 = *(_OWORD *)(v42 + 32);
      *(_OWORD *)(v0 + 200) = *(_OWORD *)(v42 + 48);
      *(_OWORD *)(v0 + 216) = v45;
      *(_OWORD *)(v0 + 168) = v47;
      *(_OWORD *)(v0 + 184) = v46;
      long long v49 = *(_OWORD *)(v42 + 96);
      long long v48 = *(_OWORD *)(v42 + 112);
      long long v50 = *(_OWORD *)(v42 + 80);
      *(void *)(v0 + 280) = *(void *)(v42 + 128);
      *(_OWORD *)(v0 + 248) = v49;
      *(_OWORD *)(v0 + 264) = v48;
      *(_OWORD *)(v0 + 232) = v50;
      long long v51 = *(_OWORD *)(v42 + 112);
      v65[6] = *(_OWORD *)(v42 + 96);
      v65[7] = v51;
      uint64_t v66 = *(void *)(v42 + 128);
      long long v52 = *(_OWORD *)(v42 + 48);
      v65[2] = *(_OWORD *)(v42 + 32);
      v65[3] = v52;
      long long v53 = *(_OWORD *)(v42 + 80);
      v65[4] = *(_OWORD *)(v42 + 64);
      v65[5] = v53;
      long long v54 = *(_OWORD *)(v42 + 16);
      v65[0] = *(_OWORD *)v42;
      v65[1] = v54;
      sub_1AFD76370(v0 + 152);
      SymbolEntity.init(from:)(v65, v44);
      v67[0] = v39;
      unint64_t v56 = *(void *)(v39 + 16);
      unint64_t v55 = *(void *)(v39 + 24);
      if (v56 >= v55 >> 1)
      {
        sub_1AFD9DB10(v55 > 1, v56 + 1, 1);
        uint64_t v39 = v67[0];
      }
      uint64_t v57 = *(void *)(v0 + 720);
      *(void *)(v39 + 16) = v56 + 1;
      sub_1AFD5BC6C(v57, v39+ ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80))+ *(void *)(v41 + 72) * v56);
      if (!i) {
        break;
      }
      v42 += 136;
    }
    sub_1AFD93EBC(*(void *)(v0 + 736), *(void *)(v0 + 744));
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v37 = *(void *)(v0 + 744);
    uint64_t v38 = *(void *)(v0 + 736);
    swift_bridgeObjectRelease();
    sub_1AFD93EBC(v38, v37);
    uint64_t v39 = MEMORY[0x1E4FBC860];
  }
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v58 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v58(v39);
}

uint64_t sub_1AFD92A18()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {

    swift_release();
    uint64_t v3 = sub_1AFD93A78;
  }
  else
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v2 + 376);
    uint64_t v3 = sub_1AFD92B50;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1AFD92B50()
{
  uint64_t v42 = v0;
  uint64_t v1 = *(void *)(v0 + 296);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 304);
    uint64_t v3 = *(void *)(v0 + 312);
    uint64_t v4 = *(void *)(v0 + 320);
    __int16 v5 = *(_WORD *)(v0 + 328);
    uint64_t v31 = *(void *)(v0 + 288);
    sub_1AFFC8998();
    uint64_t v6 = *(void *)(v0 + 360);
    uint64_t v7 = *(void *)(v0 + 368);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 336), v6);
    *(void *)&long long v33 = v31;
    *((void *)&v33 + 1) = v1;
    *(void *)&long long v34 = v2;
    *((void *)&v34 + 1) = v3;
    *(void *)&long long v35 = v4;
    WORD4(v35) = v5;
    *(void *)(v0 + 816) = (*(uint64_t (**)(long long *, uint64_t, uint64_t))(v7 + 112))(&v33, v6, v7);
    sub_1AFD30C94(v31, v1);
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 824) = v8;
    void *v8 = v0;
    v8[1] = sub_1AFD92E78;
    return MEMORY[0x1F415EBC8](v0 + 656);
  }
  else
  {
    sub_1AFD93EBC(*(void *)(v0 + 736), *(void *)(v0 + 744));
    uint64_t v9 = *(void *)(v0 + 792);
    int64_t v10 = *(void *)(v9 + 16);
    if (v10)
    {
      uint64_t v11 = *(void *)(v0 + 712);
      uint64_t v32 = MEMORY[0x1E4FBC860];
      sub_1AFD9DB10(0, v10, 0);
      uint64_t v12 = v32;
      uint64_t v13 = v9 + 32;
      for (int64_t i = v10 - 1; ; --i)
      {
        uint64_t v15 = *(void *)(v0 + 720);
        *(_OWORD *)(v0 + 152) = *(_OWORD *)v13;
        long long v16 = *(_OWORD *)(v13 + 64);
        long long v18 = *(_OWORD *)(v13 + 16);
        long long v17 = *(_OWORD *)(v13 + 32);
        *(_OWORD *)(v0 + 200) = *(_OWORD *)(v13 + 48);
        *(_OWORD *)(v0 + 216) = v16;
        *(_OWORD *)(v0 + 168) = v18;
        *(_OWORD *)(v0 + 184) = v17;
        long long v20 = *(_OWORD *)(v13 + 96);
        long long v19 = *(_OWORD *)(v13 + 112);
        long long v21 = *(_OWORD *)(v13 + 80);
        *(void *)(v0 + 280) = *(void *)(v13 + 128);
        *(_OWORD *)(v0 + 248) = v20;
        *(_OWORD *)(v0 + 264) = v19;
        *(_OWORD *)(v0 + 232) = v21;
        long long v22 = *(_OWORD *)(v13 + 112);
        long long v39 = *(_OWORD *)(v13 + 96);
        long long v40 = v22;
        uint64_t v41 = *(void *)(v13 + 128);
        long long v23 = *(_OWORD *)(v13 + 48);
        long long v35 = *(_OWORD *)(v13 + 32);
        long long v36 = v23;
        long long v24 = *(_OWORD *)(v13 + 80);
        long long v37 = *(_OWORD *)(v13 + 64);
        long long v38 = v24;
        long long v25 = *(_OWORD *)(v13 + 16);
        long long v33 = *(_OWORD *)v13;
        long long v34 = v25;
        sub_1AFD76370(v0 + 152);
        SymbolEntity.init(from:)(&v33, v15);
        unint64_t v27 = *(void *)(v32 + 16);
        unint64_t v26 = *(void *)(v32 + 24);
        if (v27 >= v26 >> 1) {
          sub_1AFD9DB10(v26 > 1, v27 + 1, 1);
        }
        uint64_t v28 = *(void *)(v0 + 720);
        *(void *)(v32 + 16) = v27 + 1;
        sub_1AFD5BC6C(v28, v32+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(void *)(v11 + 72) * v27);
        if (!i) {
          break;
        }
        v13 += 136;
      }
      sub_1AFD93EBC(*(void *)(v0 + 736), *(void *)(v0 + 744));
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AFD93EBC(*(void *)(v0 + 736), *(void *)(v0 + 744));
      swift_bridgeObjectRelease();
      uint64_t v12 = MEMORY[0x1E4FBC860];
    }
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v29 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v29(v12);
  }
}

uint64_t sub_1AFD92E78()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 832) = v0;
  swift_task_dealloc();
  if (v0)
  {

    swift_release();
    uint64_t v3 = sub_1AFD93C78;
  }
  else
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v2 + 336);
    uint64_t v3 = sub_1AFD92FB4;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1AFD92FB4()
{
  uint64_t v99 = v0;
  uint64_t v1 = *(void *)(v0 + 744);
  uint64_t v2 = *(void *)(v0 + 736);
  uint64_t v3 = *(void *)(v0 + 656);
  sub_1AFD93E78(v2, v1);
  sub_1AFFC8E38();
  sub_1AFD93E78(v2, v1);
  sub_1AFFC8E38();
  uint64_t v4 = sub_1AFFCA888();
  os_log_type_t v5 = sub_1AFFCB478();
  uint64_t v95 = v3;
  if (os_log_type_enabled(v4, v5))
  {
    os_log_type_t v94 = v5;
    uint64_t v6 = *(void *)(v0 + 744);
    uint64_t v7 = *(void *)(v0 + 736);
    uint64_t v8 = swift_slowAlloc();
    uint64_t v90 = swift_slowAlloc();
    v98[0] = v90;
    *(_DWORD *)uint64_t v8 = 136315394;
    sub_1AFFC8E38();
    sub_1AFFC8E48();
    sub_1AFFC8B28();
    sub_1AFD93EBC(v7, v6);
    *(void *)(v0 + 576) = sub_1AFD36BA8(*(void *)(v0 + 528), *(void *)(v0 + 536), v98);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    sub_1AFD93EBC(v7, v6);
    sub_1AFD93EBC(v7, v6);
    uint64_t v92 = (uint8_t *)v8;
    *(_WORD *)(v8 + 12) = 2080;
    int64_t v9 = *(void *)(v3 + 16);
    uint64_t v10 = MEMORY[0x1E4FBC860];
    if (v9)
    {
      unint64_t v86 = v4;
      *(void *)&v96[0] = MEMORY[0x1E4FBC860];
      sub_1AFD9DA10(0, v9, 0);
      uint64_t v10 = *(void *)&v96[0];
      unint64_t v11 = *(void *)(*(void *)&v96[0] + 16);
      uint64_t v12 = 16 * v11;
      uint64_t v13 = (uint64_t *)(v3 + 40);
      do
      {
        uint64_t v14 = *(v13 - 1);
        uint64_t v15 = *v13;
        *(void *)&v96[0] = v10;
        int64_t v16 = v11 + 1;
        unint64_t v17 = *(void *)(v10 + 24);
        sub_1AFFC8E38();
        if (v11 >= v17 >> 1)
        {
          sub_1AFD9DA10(v17 > 1, v16, 1);
          uint64_t v10 = *(void *)&v96[0];
        }
        *(void *)(v10 + 16) = v16;
        uint64_t v18 = v10 + v12;
        *(void *)(v18 + 32) = v14;
        *(void *)(v18 + 40) = v15;
        v12 += 16;
        v13 += 17;
        ++v11;
        --v9;
      }
      while (v9);
      uint64_t v3 = v95;
      uint64_t v4 = v86;
    }
    *(void *)(v0 + 584) = v10;
    sub_1AFD3ABD0();
    sub_1AFD91CC4((unint64_t *)&qword_1EB819DD0, (void (*)(uint64_t))sub_1AFD3ABD0);
    uint64_t v21 = sub_1AFFCAD88();
    unint64_t v23 = v22;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 592) = sub_1AFD36BA8(v21, v23, v98);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AFD01000, v4, v94, "Filtering stocks against membership of watchlist='%s', watchlistStocks=[%s]", v92, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v90, -1, -1);
    MEMORY[0x1B3E8F0D0](v92, -1, -1);
  }
  else
  {
    uint64_t v19 = *(void *)(v0 + 744);
    uint64_t v20 = *(void *)(v0 + 736);
    sub_1AFD93EBC(v20, v19);
    sub_1AFD93EBC(v20, v19);
    swift_bridgeObjectRelease_n();
  }

  uint64_t v24 = *(void *)(v0 + 792);
  uint64_t v25 = *(void *)(v0 + 744);
  uint64_t v26 = *(void *)(v0 + 736);
  sub_1AFFC8E38();
  uint64_t v27 = sub_1AFD90B8C(v24, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1AFD93E78(v26, v25);
  sub_1AFFC8E38();
  sub_1AFD93E78(v26, v25);
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  uint64_t v28 = sub_1AFFCA888();
  os_log_type_t v29 = sub_1AFFCB478();
  BOOL v30 = os_log_type_enabled(v28, v29);
  uint64_t v31 = *(void *)(v0 + 744);
  uint64_t v32 = *(void *)(v0 + 736);
  if (v30)
  {
    os_log_type_t v88 = v29;
    log = v28;
    uint64_t v33 = v3;
    uint64_t v34 = swift_slowAlloc();
    uint64_t v87 = swift_slowAlloc();
    v98[0] = v87;
    *(_DWORD *)uint64_t v34 = 136315650;
    sub_1AFD93E78(v32, v31);
    sub_1AFFC8B28();
    sub_1AFD93EBC(v32, v31);
    *(void *)(v0 + 632) = sub_1AFD36BA8(*(void *)(v0 + 496), *(void *)(v0 + 504), v98);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    sub_1AFD93EBC(v32, v31);
    sub_1AFD93EBC(v32, v31);
    *(_WORD *)(v34 + 12) = 2080;
    int64_t v35 = *(void *)(v3 + 16);
    uint64_t v36 = MEMORY[0x1E4FBC860];
    uint64_t v91 = v34;
    uint64_t v93 = v27;
    if (v35)
    {
      *(void *)&v96[0] = MEMORY[0x1E4FBC860];
      sub_1AFD9DA10(0, v35, 0);
      uint64_t v36 = *(void *)&v96[0];
      unint64_t v37 = *(void *)(*(void *)&v96[0] + 16);
      uint64_t v38 = 16 * v37;
      long long v39 = (uint64_t *)(v33 + 40);
      do
      {
        uint64_t v40 = *(v39 - 1);
        uint64_t v41 = *v39;
        *(void *)&v96[0] = v36;
        int64_t v42 = v37 + 1;
        unint64_t v43 = *(void *)(v36 + 24);
        sub_1AFFC8E38();
        if (v37 >= v43 >> 1)
        {
          sub_1AFD9DA10(v43 > 1, v42, 1);
          uint64_t v36 = *(void *)&v96[0];
        }
        *(void *)(v36 + 16) = v42;
        uint64_t v44 = v36 + v38;
        *(void *)(v44 + 32) = v40;
        *(void *)(v44 + 40) = v41;
        v38 += 16;
        v39 += 17;
        ++v37;
        --v35;
      }
      while (v35);
      uint64_t v34 = v91;
      uint64_t v27 = v93;
    }
    *(void *)(v0 + 568) = v36;
    sub_1AFD3ABD0();
    sub_1AFD91CC4((unint64_t *)&qword_1EB819DD0, (void (*)(uint64_t))sub_1AFD3ABD0);
    uint64_t v66 = sub_1AFFCAD88();
    unint64_t v68 = v67;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 544) = sub_1AFD36BA8(v66, v68, v98);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v34 + 22) = 2080;
    int64_t v69 = *(void *)(v27 + 16);
    uint64_t v70 = MEMORY[0x1E4FBC860];
    if (v69)
    {
      *(void *)&v96[0] = MEMORY[0x1E4FBC860];
      sub_1AFD9DA10(0, v69, 0);
      uint64_t v70 = *(void *)&v96[0];
      unint64_t v71 = *(void *)(*(void *)&v96[0] + 16);
      uint64_t v72 = 16 * v71;
      unint64_t v73 = (uint64_t *)(v27 + 40);
      do
      {
        uint64_t v75 = *(v73 - 1);
        uint64_t v74 = *v73;
        *(void *)&v96[0] = v70;
        int64_t v76 = v71 + 1;
        unint64_t v77 = *(void *)(v70 + 24);
        sub_1AFFC8E38();
        if (v71 >= v77 >> 1)
        {
          sub_1AFD9DA10(v77 > 1, v76, 1);
          uint64_t v70 = *(void *)&v96[0];
        }
        *(void *)(v70 + 16) = v76;
        uint64_t v78 = v70 + v72;
        *(void *)(v78 + 32) = v75;
        *(void *)(v78 + 40) = v74;
        v72 += 16;
        v73 += 17;
        ++v71;
        --v69;
      }
      while (v69);
      uint64_t v34 = v91;
      uint64_t v27 = v93;
    }
    *(void *)(v0 + 552) = v70;
    uint64_t v79 = sub_1AFFCAD88();
    unint64_t v81 = v80;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 664) = sub_1AFD36BA8(v79, v81, v98);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AFD01000, log, v88, "Filtered stocks against membership of watchlist='%s', watchlistStocks=[%s], filteredStocks=[%s]", (uint8_t *)v34, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v87, -1, -1);
    MEMORY[0x1B3E8F0D0](v34, -1, -1);

    int64_t v45 = *(void *)(v27 + 16);
    if (!v45) {
      goto LABEL_31;
    }
  }
  else
  {
    sub_1AFD93EBC(*(void *)(v0 + 736), *(void *)(v0 + 744));
    sub_1AFD93EBC(v32, v31);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

    int64_t v45 = *(void *)(v27 + 16);
    if (!v45)
    {
LABEL_31:
      uint64_t v82 = *(void *)(v0 + 744);
      uint64_t v83 = *(void *)(v0 + 736);
      sub_1AFD93EBC(v83, v82);
      sub_1AFD93EBC(v83, v82);
      swift_bridgeObjectRelease();
      uint64_t v47 = MEMORY[0x1E4FBC860];
      goto LABEL_32;
    }
  }
  uint64_t v46 = *(void *)(v0 + 712);
  v98[0] = MEMORY[0x1E4FBC860];
  sub_1AFD9DB10(0, v45, 0);
  uint64_t v47 = v98[0];
  int64_t v48 = v45 - 1;
  for (uint64_t i = 32; ; i += 136)
  {
    uint64_t v50 = *(void *)(v0 + 728);
    *(_OWORD *)(v0 + 16) = *(_OWORD *)(v27 + i);
    long long v51 = *(_OWORD *)(v27 + i + 64);
    long long v53 = *(_OWORD *)(v27 + i + 16);
    long long v52 = *(_OWORD *)(v27 + i + 32);
    *(_OWORD *)(v0 + 64) = *(_OWORD *)(v27 + i + 48);
    *(_OWORD *)(v0 + 80) = v51;
    *(_OWORD *)(v0 + 32) = v53;
    *(_OWORD *)(v0 + 48) = v52;
    long long v55 = *(_OWORD *)(v27 + i + 96);
    long long v54 = *(_OWORD *)(v27 + i + 112);
    long long v56 = *(_OWORD *)(v27 + i + 80);
    *(void *)(v0 + 144) = *(void *)(v27 + i + 128);
    *(_OWORD *)(v0 + 112) = v55;
    *(_OWORD *)(v0 + 128) = v54;
    *(_OWORD *)(v0 + 96) = v56;
    long long v57 = *(_OWORD *)(v27 + i + 112);
    v96[6] = *(_OWORD *)(v27 + i + 96);
    v96[7] = v57;
    uint64_t v97 = *(void *)(v27 + i + 128);
    long long v58 = *(_OWORD *)(v27 + i + 48);
    v96[2] = *(_OWORD *)(v27 + i + 32);
    v96[3] = v58;
    long long v59 = *(_OWORD *)(v27 + i + 80);
    v96[4] = *(_OWORD *)(v27 + i + 64);
    v96[5] = v59;
    long long v60 = *(_OWORD *)(v27 + i + 16);
    v96[0] = *(_OWORD *)(v27 + i);
    v96[1] = v60;
    sub_1AFD76370(v0 + 16);
    SymbolEntity.init(from:)(v96, v50);
    v98[0] = v47;
    unint64_t v62 = *(void *)(v47 + 16);
    unint64_t v61 = *(void *)(v47 + 24);
    if (v62 >= v61 >> 1)
    {
      sub_1AFD9DB10(v61 > 1, v62 + 1, 1);
      uint64_t v47 = v98[0];
    }
    uint64_t v63 = *(void *)(v0 + 728);
    *(void *)(v47 + 16) = v62 + 1;
    sub_1AFD5BC6C(v63, v47+ ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80))+ *(void *)(v46 + 72) * v62);
    if (!v48) {
      break;
    }
    --v48;
  }
  uint64_t v64 = *(void *)(v0 + 744);
  uint64_t v65 = *(void *)(v0 + 736);
  sub_1AFD93EBC(v65, v64);
  sub_1AFD93EBC(v65, v64);
  swift_bridgeObjectRelease();
LABEL_32:
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v84 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v84(v47);
}

uint64_t sub_1AFD939D4()
{
  sub_1AFD93EBC(v0[92], v0[93]);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 52));
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1AFD93A78()
{
  uint64_t v26 = v0;
  sub_1AFD93EBC(*(void *)(v0 + 736), *(void *)(v0 + 744));
  __swift_destroy_boxed_opaque_existential_1(v0 + 376);
  uint64_t v1 = *(void *)(v0 + 792);
  int64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 712);
    uint64_t v23 = MEMORY[0x1E4FBC860];
    sub_1AFD9DB10(0, v2, 0);
    uint64_t v4 = v23;
    uint64_t v5 = v1 + 32;
    for (int64_t i = v2 - 1; ; --i)
    {
      uint64_t v7 = *(void *)(v0 + 720);
      *(_OWORD *)(v0 + 152) = *(_OWORD *)v5;
      long long v8 = *(_OWORD *)(v5 + 64);
      long long v10 = *(_OWORD *)(v5 + 16);
      long long v9 = *(_OWORD *)(v5 + 32);
      *(_OWORD *)(v0 + 200) = *(_OWORD *)(v5 + 48);
      *(_OWORD *)(v0 + 216) = v8;
      *(_OWORD *)(v0 + 168) = v10;
      *(_OWORD *)(v0 + 184) = v9;
      long long v12 = *(_OWORD *)(v5 + 96);
      long long v11 = *(_OWORD *)(v5 + 112);
      long long v13 = *(_OWORD *)(v5 + 80);
      *(void *)(v0 + 280) = *(void *)(v5 + 128);
      *(_OWORD *)(v0 + 248) = v12;
      *(_OWORD *)(v0 + 264) = v11;
      *(_OWORD *)(v0 + 232) = v13;
      long long v14 = *(_OWORD *)(v5 + 112);
      v24[6] = *(_OWORD *)(v5 + 96);
      v24[7] = v14;
      uint64_t v25 = *(void *)(v5 + 128);
      long long v15 = *(_OWORD *)(v5 + 48);
      void v24[2] = *(_OWORD *)(v5 + 32);
      v24[3] = v15;
      long long v16 = *(_OWORD *)(v5 + 80);
      v24[4] = *(_OWORD *)(v5 + 64);
      v24[5] = v16;
      long long v17 = *(_OWORD *)(v5 + 16);
      v24[0] = *(_OWORD *)v5;
      v24[1] = v17;
      sub_1AFD76370(v0 + 152);
      SymbolEntity.init(from:)(v24, v7);
      unint64_t v19 = *(void *)(v23 + 16);
      unint64_t v18 = *(void *)(v23 + 24);
      if (v19 >= v18 >> 1) {
        sub_1AFD9DB10(v18 > 1, v19 + 1, 1);
      }
      uint64_t v20 = *(void *)(v0 + 720);
      *(void *)(v23 + 16) = v19 + 1;
      sub_1AFD5BC6C(v20, v23+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v19);
      if (!i) {
        break;
      }
      v5 += 136;
    }
    sub_1AFD93EBC(*(void *)(v0 + 736), *(void *)(v0 + 744));
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1AFD93EBC(*(void *)(v0 + 736), *(void *)(v0 + 744));
    swift_bridgeObjectRelease();
    uint64_t v4 = MEMORY[0x1E4FBC860];
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v21 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v21(v4);
}

uint64_t sub_1AFD93C78()
{
  uint64_t v26 = v0;
  sub_1AFD93EBC(*(void *)(v0 + 736), *(void *)(v0 + 744));
  __swift_destroy_boxed_opaque_existential_1(v0 + 336);
  uint64_t v1 = *(void *)(v0 + 792);
  int64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 712);
    uint64_t v23 = MEMORY[0x1E4FBC860];
    sub_1AFD9DB10(0, v2, 0);
    uint64_t v4 = v23;
    uint64_t v5 = v1 + 32;
    for (int64_t i = v2 - 1; ; --i)
    {
      uint64_t v7 = *(void *)(v0 + 720);
      *(_OWORD *)(v0 + 152) = *(_OWORD *)v5;
      long long v8 = *(_OWORD *)(v5 + 64);
      long long v10 = *(_OWORD *)(v5 + 16);
      long long v9 = *(_OWORD *)(v5 + 32);
      *(_OWORD *)(v0 + 200) = *(_OWORD *)(v5 + 48);
      *(_OWORD *)(v0 + 216) = v8;
      *(_OWORD *)(v0 + 168) = v10;
      *(_OWORD *)(v0 + 184) = v9;
      long long v12 = *(_OWORD *)(v5 + 96);
      long long v11 = *(_OWORD *)(v5 + 112);
      long long v13 = *(_OWORD *)(v5 + 80);
      *(void *)(v0 + 280) = *(void *)(v5 + 128);
      *(_OWORD *)(v0 + 248) = v12;
      *(_OWORD *)(v0 + 264) = v11;
      *(_OWORD *)(v0 + 232) = v13;
      long long v14 = *(_OWORD *)(v5 + 112);
      v24[6] = *(_OWORD *)(v5 + 96);
      v24[7] = v14;
      uint64_t v25 = *(void *)(v5 + 128);
      long long v15 = *(_OWORD *)(v5 + 48);
      void v24[2] = *(_OWORD *)(v5 + 32);
      v24[3] = v15;
      long long v16 = *(_OWORD *)(v5 + 80);
      v24[4] = *(_OWORD *)(v5 + 64);
      v24[5] = v16;
      long long v17 = *(_OWORD *)(v5 + 16);
      v24[0] = *(_OWORD *)v5;
      v24[1] = v17;
      sub_1AFD76370(v0 + 152);
      SymbolEntity.init(from:)(v24, v7);
      unint64_t v19 = *(void *)(v23 + 16);
      unint64_t v18 = *(void *)(v23 + 24);
      if (v19 >= v18 >> 1) {
        sub_1AFD9DB10(v18 > 1, v19 + 1, 1);
      }
      uint64_t v20 = *(void *)(v0 + 720);
      *(void *)(v23 + 16) = v19 + 1;
      sub_1AFD5BC6C(v20, v23+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v19);
      if (!i) {
        break;
      }
      v5 += 136;
    }
    sub_1AFD93EBC(*(void *)(v0 + 736), *(void *)(v0 + 744));
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1AFD93EBC(*(void *)(v0 + 736), *(void *)(v0 + 744));
    swift_bridgeObjectRelease();
    uint64_t v4 = MEMORY[0x1E4FBC860];
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v21 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v21(v4);
}

uint64_t sub_1AFD93E78(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_1AFFC8E38();
    return sub_1AFFC8E48();
  }
  return result;
}

uint64_t sub_1AFD93EBC(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

void sub_1AFD93F08()
{
  if (!qword_1E9AFA380)
  {
    sub_1AFD93F64();
    unint64_t v0 = sub_1AFFC8F68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9AFA380);
    }
  }
}

unint64_t sub_1AFD93F64()
{
  unint64_t result = qword_1EB8113F0;
  if (!qword_1EB8113F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8113F0);
  }
  return result;
}

uint64_t static URL.stocksScheme.getter()
{
  return 0x736B636F7473;
}

unint64_t static URL.stocksHost.getter()
{
  return 0xD000000000000010;
}

uint64_t URL.replacingHostWithStocksHost()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  sub_1AFD94318(0, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v18 - v5;
  sub_1AFD94318(0, &qword_1EB818B60, MEMORY[0x1E4F26ED8]);
  MEMORY[0x1F4188790](v7 - 8);
  long long v9 = (char *)&v18 - v8;
  uint64_t v10 = sub_1AFFC9368();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  long long v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFFC9308();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_1AFD9436C((uint64_t)v9, &qword_1EB818B60, MEMORY[0x1E4F26ED8]);
    uint64_t v14 = sub_1AFFC96E8();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(a1, v2, v14);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
    MEMORY[0x1B3E8B780](0xD000000000000010, 0x80000001AFFF10B0);
    sub_1AFFC9318();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    uint64_t v16 = sub_1AFFC96E8();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v6, 1, v16) == 1)
    {
      sub_1AFD9436C((uint64_t)v6, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(a1, v2, v16);
    }
    else
    {
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v17 + 32))(a1, v6, v16);
    }
  }
}

void sub_1AFD94318(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1AFFCB658();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1AFD9436C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1AFD94318(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1AFD943C8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1AFD943DC()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CloudKitPollingService()
{
  return self;
}

uint64_t sub_1AFD94448(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  if (v1[8])
  {
    uint64_t v2 = v1[8];
LABEL_5:
    sub_1AFFC8E48();
    return v2;
  }
  uint64_t v3 = v1[6];
  uint64_t v4 = v1[7];
  __swift_project_boxed_opaque_existential_1(v1 + 3, v3);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v4 + 8))(v7, v3, v4);
  uint64_t v5 = sub_1AFD55D10((uint64_t)v7);
  MEMORY[0x1F4188790](v5);
  sub_1AFD50AA0();
  swift_allocObject();
  v1[8] = sub_1AFFCA758();
  uint64_t result = swift_release();
  uint64_t v2 = v1[8];
  if (v2)
  {
    sub_1AFFC8E48();
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_1AFD94584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6)
{
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a2;
  uint64_t v13 = swift_allocObject();
  *(double *)(v13 + 16) = a6;
  *(void *)(v13 + 24) = a5;
  *(void *)(v13 + 32) = a3;
  *(void *)(v13 + 40) = a4;
  *(void *)(v13 + 48) = sub_1AFD948F8;
  *(void *)(v13 + 56) = v12;
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFCA4F8();

  return swift_release();
}

void sub_1AFD94678(void **a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11 = *a1;
  id v12 = objc_msgSend(objc_allocWithZone((Class)SCWDatabasePollingCondition), sel_initWithMinIntervalSinceLastSync_, a2);
  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  uint64_t v14 = (void *)swift_allocObject();
  _OWORD v14[2] = v13;
  v14[3] = a4;
  v14[4] = a5;
  void v14[5] = a6;
  void v14[6] = a7;
  v16[4] = sub_1AFD949DC;
  void v16[5] = v14;
  v16[0] = MEMORY[0x1E4F143A8];
  v16[1] = 1107296256;
  _OWORD v16[2] = sub_1AFD82E64;
  v16[3] = &block_descriptor_4;
  long long v15 = _Block_copy(v16);
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  swift_release();
  objc_msgSend(v11, sel_pollForChangesWithCondition_completion_, v12, v15);
  _Block_release(v15);
}

void sub_1AFD947E0(void *a1, uint64_t a2, void (*a3)(void *), uint64_t a4, void (*a5)(uint64_t))
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    *(void *)(Strong + 64) = 0;
    swift_release();
    uint64_t Strong = swift_release();
  }
  if (a1)
  {
    id v9 = a1;
    a3(a1);
  }
  else
  {
    a5(Strong);
  }
}

uint64_t sub_1AFD94890(uint64_t a1)
{
  return sub_1AFD94448(a1);
}

uint64_t sub_1AFD948B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AFD94584(a1, a2, a3, a4, *(void *)(v4 + 16), *(double *)(v4 + 24));
}

uint64_t sub_1AFD948C0()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1AFD948F8()
{
  return sub_1AFD87DBC(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1AFD94900()
{
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 64, 7);
}

void sub_1AFD94948(void **a1)
{
  sub_1AFD94678(a1, *(double *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56));
}

uint64_t sub_1AFD9495C()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1AFD94994()
{
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

void sub_1AFD949DC(void *a1)
{
  sub_1AFD947E0(a1, *(void *)(v1 + 16), *(void (**)(void *))(v1 + 24), *(void *)(v1 + 32), *(void (**)(uint64_t))(v1 + 40));
}

uint64_t sub_1AFD949EC@<X0>(uint64_t result@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t a6@<X5>, void *a7@<X8>)
{
  if (a2) {
    uint64_t v7 = result;
  }
  else {
    uint64_t v7 = 0;
  }
  unint64_t v8 = 0xE000000000000000;
  if (a2) {
    unint64_t v9 = a2;
  }
  else {
    unint64_t v9 = 0xE000000000000000;
  }
  if (a4) {
    uint64_t v10 = a3;
  }
  else {
    uint64_t v10 = 0;
  }
  if (a4) {
    unint64_t v11 = a4;
  }
  else {
    unint64_t v11 = 0xE000000000000000;
  }
  *a7 = v7;
  a7[1] = v9;
  if (a6) {
    uint64_t v12 = a5;
  }
  else {
    uint64_t v12 = 0;
  }
  a7[2] = v10;
  a7[3] = v11;
  if (a6) {
    unint64_t v8 = a6;
  }
  a7[4] = v12;
  a7[5] = v8;
  return result;
}

uint64_t sub_1AFD94A24(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1AFDEDAE8(*a1, *a2);
}

uint64_t sub_1AFD94A30()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFD94A94()
{
  sub_1AFFCAF68();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFD94ADC()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFD94B3C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFD959A0();
  *a1 = result;
  return result;
}

void sub_1AFD94B6C(void *a1@<X8>)
{
  *a1 = ((unint64_t)*v1 << 40) + 0x78316567616D69;
  a1[1] = 0xE700000000000000;
}

unint64_t sub_1AFD94B90()
{
  return ((unint64_t)*v0 << 40) + 0x78316567616D69;
}

uint64_t sub_1AFD94BB0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFD959A0();
  *a1 = result;
  return result;
}

uint64_t sub_1AFD94BD8(uint64_t a1)
{
  unint64_t v2 = sub_1AFD95248();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFD94C14(uint64_t a1)
{
  unint64_t v2 = sub_1AFD95248();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFD94C50@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  sub_1AFD9559C(0, &qword_1EB819F88, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v9 = (char *)&v38 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFD95248();
  sub_1AFFCBE68();
  if (!v2)
  {
    uint64_t v47 = (void *)MEMORY[0x1E4FBC860];
    char v46 = 0;
    sub_1AFFCBAF8();
    unint64_t v10 = v45;
    unint64_t v43 = v44;
    if (v45)
    {
      unint64_t v11 = (void *)MEMORY[0x1E4FBC860];
    }
    else
    {
      swift_beginAccess();
      unint64_t v11 = v47;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v42 = 0;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        unint64_t v11 = sub_1AFD352FC(0, v11[2] + 1, 1, v11);
      }
      unint64_t v14 = v11[2];
      unint64_t v13 = v11[3];
      if (v14 >= v13 >> 1) {
        unint64_t v11 = sub_1AFD352FC((void *)(v13 > 1), v14 + 1, 1, v11);
      }
      v11[2] = v14 + 1;
      long long v15 = &v11[2 * v14];
      v15[4] = 0x78316567616D69;
      void v15[5] = 0xE700000000000000;
      uint64_t v47 = v11;
      swift_endAccess();
      unint64_t v10 = v42;
    }
    char v46 = 1;
    sub_1AFFCBAF8();
    unint64_t v40 = v44;
    unint64_t v41 = v45;
    if (!v45)
    {
      swift_beginAccess();
      unint64_t v11 = v47;
      char v16 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v42 = v10;
      if ((v16 & 1) == 0) {
        unint64_t v11 = sub_1AFD352FC(0, v11[2] + 1, 1, v11);
      }
      unint64_t v18 = v11[2];
      unint64_t v17 = v11[3];
      if (v18 >= v17 >> 1) {
        unint64_t v11 = sub_1AFD352FC((void *)(v17 > 1), v18 + 1, 1, v11);
      }
      v11[2] = v18 + 1;
      unint64_t v19 = &v11[2 * v18];
      v19[4] = 0x78326567616D69;
      v19[5] = 0xE700000000000000;
      uint64_t v47 = v11;
      swift_endAccess();
      unint64_t v10 = v42;
    }
    char v46 = 2;
    sub_1AFFCBAF8();
    unint64_t v21 = v45;
    if (v45)
    {
      unint64_t v39 = v44;
    }
    else
    {
      swift_beginAccess();
      unint64_t v11 = v47;
      char v22 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v42 = v10;
      if ((v22 & 1) == 0) {
        unint64_t v11 = sub_1AFD352FC(0, v11[2] + 1, 1, v11);
      }
      unint64_t v24 = v11[2];
      unint64_t v23 = v11[3];
      unint64_t v25 = v24 + 1;
      if (v24 >= v23 >> 1)
      {
        unint64_t v39 = v24 + 1;
        unint64_t v37 = sub_1AFD352FC((void *)(v23 > 1), v24 + 1, 1, v11);
        unint64_t v25 = v39;
        unint64_t v11 = v37;
      }
      v11[2] = v25;
      uint64_t v26 = &v11[2 * v24];
      v26[4] = 0x78336567616D69;
      v26[5] = 0xE700000000000000;
      uint64_t v47 = v11;
      swift_endAccess();
      unint64_t v39 = 0;
      unint64_t v10 = v42;
    }
    if (v10) {
      unint64_t v27 = v43;
    }
    else {
      unint64_t v27 = 0;
    }
    unint64_t v28 = 0xE000000000000000;
    if (!v10) {
      unint64_t v10 = 0xE000000000000000;
    }
    unint64_t v30 = v40;
    unint64_t v29 = v41;
    if (!v41) {
      unint64_t v30 = 0;
    }
    unint64_t v42 = v30;
    unint64_t v43 = v27;
    if (!v41) {
      unint64_t v29 = 0xE000000000000000;
    }
    if (v21) {
      unint64_t v28 = v21;
    }
    unint64_t v40 = v28;
    unint64_t v41 = v29;
    if (v11[2])
    {
      sub_1AFD2CD48();
      uint64_t v31 = swift_allocObject();
      unint64_t v38 = v10;
      uint64_t v32 = (void *)v31;
      *(_OWORD *)(v31 + 16) = xmmword_1AFFD05F0;
      sub_1AFD3ABD0();
      v32[7] = v33;
      v32[8] = sub_1AFD5CDA0();
      v32[4] = v11;
      sub_1AFD2C4F4();
      sub_1AFFC8E38();
      uint64_t v34 = (void *)sub_1AFFCB638();
      sub_1AFFCB478();
      sub_1AFFCA878();
      unint64_t v10 = v38;
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AFD2C4F4();
      uint64_t v34 = (void *)sub_1AFFCB638();
      sub_1AFFCB478();
      sub_1AFFCA878();
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_bridgeObjectRelease();
    *a2 = v43;
    a2[1] = v10;
    unint64_t v35 = v41;
    a2[2] = v42;
    a2[3] = v35;
    unint64_t v36 = v40;
    a2[4] = v39;
    a2[5] = v36;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1AFD95248()
{
  unint64_t result = qword_1EB8193A8;
  if (!qword_1EB8193A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8193A8);
  }
  return result;
}

uint64_t sub_1AFD952A0(void *a1)
{
  sub_1AFD9559C(0, &qword_1EB81A040, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v12 - v6;
  uint64_t v8 = v1[2];
  uint64_t v12[3] = v1[3];
  v12[4] = v8;
  uint64_t v9 = v1[4];
  v12[1] = v1[5];
  void v12[2] = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFD95248();
  sub_1AFFCBE78();
  char v15 = 0;
  uint64_t v10 = v12[5];
  sub_1AFFCBC08();
  if (!v10)
  {
    char v14 = 1;
    sub_1AFFCBC08();
    char v13 = 2;
    sub_1AFFCBC08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1AFD95468@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  return sub_1AFD94C50(a1, a2);
}

uint64_t sub_1AFD95480(void *a1)
{
  return sub_1AFD952A0(a1);
}

uint64_t sub_1AFD9549C(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v3 = a1[4];
  uint64_t v5 = a1[5];
  uint64_t v6 = a2[2];
  uint64_t v7 = a2[3];
  uint64_t v8 = a2[4];
  uint64_t v9 = a2[5];
  if (*a1 == *a2 && a1[1] == a2[1] || (v10 = sub_1AFFCBCE8(), uint64_t result = 0, (v10 & 1) != 0))
  {
    if (v2 == v6 && v4 == v7 || (v12 = sub_1AFFCBCE8(), uint64_t result = 0, (v12 & 1) != 0))
    {
      if (v3 == v8 && v5 == v9)
      {
        return 1;
      }
      else
      {
        return sub_1AFFCBCE8();
      }
    }
  }
  return result;
}

void sub_1AFD9559C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1AFD95248();
    unint64_t v7 = a3(a1, &type metadata for MultiResolutionImage.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t destroy for MultiResolutionImage()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for MultiResolutionImage(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  return a1;
}

void *assignWithCopy for MultiResolutionImage(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for MultiResolutionImage(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for MultiResolutionImage()
{
  return &type metadata for MultiResolutionImage;
}

unsigned char *storeEnumTagSinglePayload for MultiResolutionImage.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFD95860);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MultiResolutionImage.CodingKeys()
{
  return &type metadata for MultiResolutionImage.CodingKeys;
}

unint64_t sub_1AFD9589C()
{
  unint64_t result = qword_1E9AFA388;
  if (!qword_1E9AFA388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFA388);
  }
  return result;
}

unint64_t sub_1AFD958F4()
{
  unint64_t result = qword_1EB8193B8;
  if (!qword_1EB8193B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8193B8);
  }
  return result;
}

unint64_t sub_1AFD9594C()
{
  unint64_t result = qword_1EB8193B0;
  if (!qword_1EB8193B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8193B0);
  }
  return result;
}

uint64_t sub_1AFD959A0()
{
  unint64_t v0 = sub_1AFFCBA78();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t WatchlistEntity.init(from:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  unint64_t v25 = a2;
  uint64_t v3 = sub_1AFFC9528();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unsigned int v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1AFFC9A78();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v8 = sub_1AFFCAE58();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v9 = sub_1AFFC9548();
  MEMORY[0x1F4188790](v9 - 8);
  unint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(a1 + 8);
  uint64_t v24 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v22 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 32);
  int v23 = *(unsigned __int16 *)(a1 + 40);
  sub_1AFD96F58(0, (unint64_t *)&qword_1EB816AF8, (uint64_t (*)(void))sub_1AFD74388, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4F183F8]);
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4F275D0], v3);
  sub_1AFFC9558();
  uint64_t v15 = MEMORY[0x1B3E8AFE0](v11);
  uint64_t v26 = v24;
  uint64_t v27 = v12;
  uint64_t v16 = v22;
  uint64_t v28 = v13;
  uint64_t v29 = v22;
  uint64_t v30 = v14;
  __int16 v31 = v23;
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v17 = sub_1AFEAB700();
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v26 = v17;
  uint64_t v27 = v19;
  sub_1AFFC8B38();
  swift_release_n();
  uint64_t result = swift_bridgeObjectRelease_n();
  unint64_t v21 = v25;
  *unint64_t v25 = v16;
  v21[1] = v14;
  _OWORD v21[2] = v15;
  return result;
}

uint64_t sub_1AFD95CE8()
{
  return sub_1AFFC8B48();
}

uint64_t sub_1AFD95D0C()
{
  uint64_t v0 = sub_1AFFC9A78();
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v1 = sub_1AFFCAE58();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v1);
  uint64_t v5 = &v16[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = &v16[-v6];
  uint64_t v8 = sub_1AFFCAE98();
  uint64_t v10 = v9;
  sub_1AFFCADF8();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v5, v7, v1);
  if (qword_1EB819E80 != -1) {
    swift_once();
  }
  id v11 = (id)qword_1EB831AF8;
  sub_1AFFC9A28();
  uint64_t v12 = sub_1AFFCAEF8();
  uint64_t v14 = v13;
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  return WatchlistEntity.init(id:name:)(v8, v10, v12, v14, &qword_1E9AFA390);
}

uint64_t WatchlistEntity.init(id:name:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v20 = a4;
  uint64_t v21 = a1;
  uint64_t v8 = sub_1AFFC9528();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  id v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1AFFC9A78();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v13 = sub_1AFFCAE58();
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v14 = sub_1AFFC9548();
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFD96F58(0, (unint64_t *)&qword_1EB816AF8, (uint64_t (*)(void))sub_1AFD74388, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4F183F8]);
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4F275D0], v8);
  sub_1AFFC9558();
  uint64_t v17 = MEMORY[0x1B3E8AFE0](v16);
  uint64_t v22 = a3;
  uint64_t v23 = v20;
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  sub_1AFFC8B38();
  swift_release_n();
  uint64_t result = swift_bridgeObjectRelease_n();
  *a5 = v21;
  a5[1] = a2;
  a5[2] = v17;
  return result;
}

uint64_t static WatchlistEntity.defaultWatchlistEntity.getter@<X0>(void *a1@<X8>)
{
  if (qword_1E9AF8C48 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1E9AFA398;
  uint64_t v3 = qword_1E9AFA3A0;
  *a1 = qword_1E9AFA390;
  a1[1] = v2;
  a1[2] = v3;
  sub_1AFFC8E38();

  return sub_1AFFC8E48();
}

uint64_t WatchlistEntity.id.getter()
{
  uint64_t v1 = *v0;
  sub_1AFFC8E38();
  return v1;
}

uint64_t sub_1AFD96270@<X0>(void *a1@<X8>)
{
  if (qword_1EB810B10 != -1) {
    swift_once();
  }
  *a1 = qword_1E9AFA3A8;

  return sub_1AFFC8E48();
}

uint64_t static WatchlistEntity.defaultQuery.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EB810B10 != -1) {
    swift_once();
  }
  *a1 = qword_1E9AFA3A8;

  return sub_1AFFC8E48();
}

uint64_t sub_1AFD96348@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return sub_1AFFC8E38();
}

uint64_t sub_1AFD96354@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E9AF8C58 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1AFFC8FA8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1E9AFA3B0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t static WatchlistEntity.typeDisplayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E9AF8C58 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1AFFC8FA8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1E9AFA3B0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1AFD964A4(uint64_t a1)
{
  unint64_t v2 = sub_1AFD33B44();

  return MEMORY[0x1F40D3BC8](a1, v2);
}

uint64_t WatchlistEntity.displayRepresentation.getter()
{
  uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1AFD97028(0, &qword_1EB810BA8, MEMORY[0x1E4F18628], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v12 - v2;
  sub_1AFD97028(0, &qword_1EB816B00, MEMORY[0x1E4F27608], v0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v12 - v5;
  uint64_t v7 = sub_1AFFC9548();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = sub_1AFFCAE38();
  MEMORY[0x1F4188790](v9 - 8);
  sub_1AFFCAE28();
  sub_1AFFCAE18();
  sub_1AFFC8E38();
  sub_1AFFC8E48();
  sub_1AFFC8B28();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1AFFCAE08();
  swift_bridgeObjectRelease();
  sub_1AFFCAE18();
  sub_1AFFC9538();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
  uint64_t v10 = sub_1AFFC8DB8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v3, 1, 1, v10);
  return sub_1AFFC8DC8();
}

uint64_t sub_1AFD967C0(uint64_t a1)
{
  unint64_t v2 = sub_1AFD96E70();

  return MEMORY[0x1F40D4970](a1, v2);
}

uint64_t sub_1AFD9680C()
{
  sub_1AFD97028(0, (unint64_t *)&qword_1EB8167E0, (uint64_t (*)(uint64_t))sub_1AFD33A98, MEMORY[0x1E4F18188]);
  sub_1AFFC8A08();
  sub_1AFFC89F8();
  uint64_t result = sub_1AFFC89C8();
  qword_1E9AFA3A8 = result;
  return result;
}

uint64_t sub_1AFD968A0()
{
  uint64_t v14 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27608];
  sub_1AFD97028(0, &qword_1EB816B00, MEMORY[0x1E4F27608], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v13 = (char *)&v12 - v1;
  uint64_t v2 = sub_1AFFC9528();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1AFFC9A78();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v7 = sub_1AFFCAE58();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v8 = sub_1AFFC9548();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = sub_1AFFC8FA8();
  __swift_allocate_value_buffer(v10, qword_1E9AFA3B0);
  __swift_project_value_buffer(v10, (uint64_t)qword_1E9AFA3B0);
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4F275D0], v2);
  sub_1AFFC9558();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v13, 1, 1, v8);
  sub_1AFD97028(0, &qword_1E9AFA0E0, v14, MEMORY[0x1E4FBBE00]);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1AFFD2CC0;
  sub_1AFFC9518();
  sub_1AFFC9518();
  sub_1AFFC9518();
  sub_1AFFC9518();
  sub_1AFFC9518();
  sub_1AFFC9518();
  return sub_1AFFC8F88();
}

unint64_t sub_1AFD96CF8()
{
  unint64_t result = qword_1EB818438;
  if (!qword_1EB818438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818438);
  }
  return result;
}

unint64_t sub_1AFD96D50()
{
  unint64_t result = qword_1EB818460;
  if (!qword_1EB818460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818460);
  }
  return result;
}

uint64_t sub_1AFD96DA4()
{
  return MEMORY[0x1E4F188B0];
}

uint64_t sub_1AFD96DB0()
{
  return MEMORY[0x1E4FBB1B0];
}

unint64_t sub_1AFD96DC0()
{
  unint64_t result = qword_1EB818440;
  if (!qword_1EB818440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818440);
  }
  return result;
}

unint64_t sub_1AFD96E18()
{
  unint64_t result = qword_1EB818448;
  if (!qword_1EB818448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818448);
  }
  return result;
}

unint64_t sub_1AFD96E70()
{
  unint64_t result = qword_1EB818450;
  if (!qword_1EB818450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818450);
  }
  return result;
}

unint64_t sub_1AFD96EC8()
{
  unint64_t result = qword_1EB811370;
  if (!qword_1EB811370)
  {
    sub_1AFD96F58(255, &qword_1EB811378, (uint64_t (*)(void))sub_1AFD33084, (uint64_t)&type metadata for WatchlistEntity, MEMORY[0x1E4F18768]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB811370);
  }
  return result;
}

void sub_1AFD96F58(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_1AFD96FC4()
{
  unint64_t result = qword_1EB818458;
  if (!qword_1EB818458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818458);
  }
  return result;
}

ValueMetadata *type metadata accessor for WatchlistEntity()
{
  return &type metadata for WatchlistEntity;
}

void sub_1AFD97028(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1AFD9708C()
{
  uint64_t v1 = *v0;
  sub_1AFFC8E38();
  return v1;
}

uint64_t sub_1AFD970BC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_1AFFC8E38();
  return v1;
}

uint64_t sub_1AFD970EC()
{
  uint64_t v1 = *(void *)(v0 + 32);
  sub_1AFFC8E38();
  return v1;
}

uint64_t sub_1AFD9711C()
{
  uint64_t v1 = *(void *)(v0 + 48);
  sub_1AFFC8E38();
  return v1;
}

uint64_t sub_1AFD9714C()
{
  uint64_t v1 = *(void *)(v0 + 64);
  sub_1AFFC8E38();
  return v1;
}

uint64_t sub_1AFD9717C()
{
  uint64_t v1 = *(void *)(v0 + 80);
  sub_1AFFC8E38();
  return v1;
}

uint64_t sub_1AFD971AC()
{
  uint64_t v1 = *(void *)(v0 + 96);
  sub_1AFFC8E38();
  return v1;
}

uint64_t sub_1AFD971DC()
{
  uint64_t v1 = *(void *)(v0 + 112);
  sub_1AFFC8E38();
  return v1;
}

uint64_t sub_1AFD9720C()
{
  uint64_t v1 = *(void *)(v0 + 128);
  sub_1AFFC8E38();
  return v1;
}

uint64_t sub_1AFD9723C()
{
  uint64_t v1 = *(void *)(v0 + 144);
  sub_1AFFC8E38();
  return v1;
}

uint64_t sub_1AFD9726C()
{
  uint64_t v1 = *(void *)(v0 + 160);
  sub_1AFFC8E38();
  return v1;
}

uint64_t sub_1AFD9729C()
{
  uint64_t v1 = *(void *)(v0 + 176);
  sub_1AFFC8E38();
  return v1;
}

uint64_t sub_1AFD972CC()
{
  uint64_t v1 = *(void *)(v0 + 192);
  sub_1AFFC8E38();
  return v1;
}

uint64_t sub_1AFD972FC()
{
  uint64_t v1 = *(void *)(v0 + 208);
  sub_1AFFC8E38();
  return v1;
}

uint64_t sub_1AFD9732C()
{
  uint64_t v1 = *(void *)(v0 + 224);
  sub_1AFFC8E38();
  return v1;
}

uint64_t sub_1AFD9735C()
{
  uint64_t v1 = *(void *)(v0 + 240);
  sub_1AFFC8E38();
  return v1;
}

uint64_t sub_1AFD9738C()
{
  uint64_t v1 = *(void *)(v0 + 256);
  sub_1AFFC8E38();
  return v1;
}

unint64_t sub_1AFD973BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, unint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17, unint64_t a18, uint64_t a19, unint64_t a20,uint64_t a21,unint64_t a22,uint64_t a23,unint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  uint64_t v39 = a4;
  if (a2)
  {
    uint64_t v42 = a2;
    if (a4) {
      goto LABEL_3;
    }
LABEL_9:
    type metadata accessor for EndpointConfiguration.Defaults();
    swift_initStaticObject();
    a3 = sub_1AFD979C0();
    uint64_t v39 = v46;
    if (a6) {
      goto LABEL_4;
    }
    goto LABEL_10;
  }
  type metadata accessor for EndpointConfiguration.Defaults();
  swift_initStaticObject();
  a1 = sub_1AFD9780C();
  uint64_t v42 = v45;
  if (!v39) {
    goto LABEL_9;
  }
LABEL_3:
  if (a6) {
    goto LABEL_4;
  }
LABEL_10:
  type metadata accessor for EndpointConfiguration.Defaults();
  swift_initStaticObject();
  a5 = sub_1AFD97B54();
  a6 = v47;
LABEL_4:
  uint64_t v91 = a11;
  if (!a8)
  {
    type metadata accessor for EndpointConfiguration.Defaults();
    swift_initStaticObject();
    a7 = sub_1AFD97CE8();
    a8 = v44;
  }
  uint64_t v90 = a13;
  if (!a11)
  {
    type metadata accessor for EndpointConfiguration.Defaults();
    swift_initStaticObject();
    a10 = sub_1AFD97CE8();
    uint64_t v91 = v48;
  }
  uint64_t v89 = a15;
  if (!a13)
  {
    type metadata accessor for EndpointConfiguration.Defaults();
    swift_initStaticObject();
    a12 = sub_1AFD97E78();
    uint64_t v90 = v49;
  }
  uint64_t v88 = a17;
  if (!a15)
  {
    type metadata accessor for EndpointConfiguration.Defaults();
    swift_initStaticObject();
    a14 = sub_1AFD98004();
    uint64_t v89 = v50;
  }
  uint64_t v51 = a19;
  uint64_t v83 = v39;
  if (a17)
  {
    uint64_t v52 = a21;
    if (a19) {
      goto LABEL_23;
    }
LABEL_22:
    uint64_t v54 = v52;
    type metadata accessor for EndpointConfiguration.Defaults();
    swift_initStaticObject();
    unint64_t v55 = sub_1AFD98320();
    uint64_t v52 = v54;
    a18 = v55;
    goto LABEL_23;
  }
  type metadata accessor for EndpointConfiguration.Defaults();
  swift_initStaticObject();
  a16 = sub_1AFD98190();
  uint64_t v88 = v53;
  uint64_t v51 = a19;
  uint64_t v52 = a21;
  if (!a19) {
    goto LABEL_22;
  }
LABEL_23:
  uint64_t v56 = a23;
  unint64_t v84 = a5;
  if (!v52)
  {
    unint64_t v58 = a7;
    uint64_t v59 = v51;
    type metadata accessor for EndpointConfiguration.Defaults();
    swift_initStaticObject();
    a20 = sub_1AFD98450();
    uint64_t v52 = v60;
    uint64_t v51 = v59;
    a7 = v58;
  }
  uint64_t v61 = a25;
  unint64_t v86 = a7;
  uint64_t v87 = a8;
  uint64_t v85 = a6;
  if (!a23)
  {
    uint64_t v63 = v51;
    uint64_t v64 = v52;
    unint64_t v65 = a20;
    type metadata accessor for EndpointConfiguration.Defaults();
    swift_initStaticObject();
    unint64_t v66 = sub_1AFD985E0();
    a20 = v65;
    uint64_t v52 = v64;
    a22 = v66;
    uint64_t v56 = v67;
    uint64_t v51 = v63;
  }
  uint64_t v69 = a34;
  uint64_t v68 = a35;
  uint64_t v70 = a33;
  uint64_t v71 = a30;
  if (a25)
  {
    unint64_t result = a24;
  }
  else
  {
    uint64_t v76 = v52;
    uint64_t v77 = v51;
    unint64_t v74 = a20;
    unint64_t v75 = a22;
    type metadata accessor for EndpointConfiguration.Defaults();
    swift_initStaticObject();
    unint64_t result = sub_1AFD979C0();
    uint64_t v71 = a30;
    uint64_t v70 = a33;
    uint64_t v69 = a34;
    uint64_t v68 = a35;
    a20 = v74;
    a22 = v75;
    uint64_t v52 = v76;
    uint64_t v61 = v73;
    uint64_t v51 = v77;
  }
  *a9 = a1;
  a9[1] = v42;
  a9[2] = a3;
  a9[3] = v83;
  a9[4] = v84;
  a9[5] = v85;
  a9[6] = v86;
  a9[7] = v87;
  a9[8] = a10;
  a9[9] = v91;
  a9[10] = a12;
  a9[11] = v90;
  a9[12] = a14;
  a9[13] = v89;
  a9[14] = a16;
  a9[15] = v88;
  a9[16] = a18;
  a9[17] = v51;
  a9[18] = a20;
  a9[19] = v52;
  a9[20] = a22;
  a9[21] = v56;
  a9[22] = result;
  a9[23] = v61;
  a9[24] = a26;
  a9[25] = a27;
  a9[26] = a28;
  a9[27] = a29;
  a9[28] = v71;
  a9[29] = a31;
  a9[30] = a32;
  a9[31] = v70;
  a9[32] = v69;
  a9[33] = v68;
  return result;
}

uint64_t sub_1AFD9780C()
{
  if (qword_1EB819B40 != -1) {
    swift_once();
  }
  sub_1AFD9B594(&qword_1EB819468, (void (*)(uint64_t))type metadata accessor for EndpointConfiguration.Defaults);
  sub_1AFFC9BB8();
  uint64_t result = 0x49544355444F5250;
  switch(v1)
  {
    case 1:
      uint64_t result = 0x474E4947415453;
      break;
    case 2:
      uint64_t result = 16721;
      break;
    case 3:
      uint64_t result = 1414743380;
      break;
    case 4:
      uint64_t result = 0x4C45564544;
      break;
    case 5:
      uint64_t result = 0x584F42444E4153;
      break;
    case 6:
      uint64_t result = 0x314F4D4544;
      break;
    case 7:
      uint64_t result = 0x324F4D4544;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1AFD979C0()
{
  if (qword_1EB819B40 != -1) {
    swift_once();
  }
  sub_1AFD9B594(&qword_1EB819468, (void (*)(uint64_t))type metadata accessor for EndpointConfiguration.Defaults);
  sub_1AFFC9BB8();
  switch(v1)
  {
    case 1:
      unint64_t result = 0xD00000000000004ELL;
      break;
    case 2:
      unint64_t result = 0xD000000000000049;
      break;
    case 3:
      unint64_t result = 0xD00000000000004BLL;
      break;
    case 4:
      unint64_t result = 0xD00000000000004CLL;
      break;
    default:
      unint64_t result = 0xD000000000000041;
      break;
  }
  return result;
}

unint64_t sub_1AFD97B54()
{
  if (qword_1EB819B40 != -1) {
    swift_once();
  }
  sub_1AFD9B594(&qword_1EB819468, (void (*)(uint64_t))type metadata accessor for EndpointConfiguration.Defaults);
  sub_1AFFC9BB8();
  switch(v1)
  {
    case 1:
      unint64_t result = 0xD000000000000038;
      break;
    case 2:
      unint64_t result = 0xD00000000000003CLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000039;
      break;
    case 4:
      unint64_t result = 0xD00000000000003FLL;
      break;
    default:
      unint64_t result = 0xD000000000000030;
      break;
  }
  return result;
}

unint64_t sub_1AFD97CE8()
{
  if (qword_1EB819B40 != -1) {
    swift_once();
  }
  sub_1AFD9B594(&qword_1EB819468, (void (*)(uint64_t))type metadata accessor for EndpointConfiguration.Defaults);
  sub_1AFFC9BB8();
  switch(v1)
  {
    case 1:
      unint64_t result = 0xD000000000000038;
      break;
    case 2:
      unint64_t result = 0xD00000000000003BLL;
      break;
    case 3:
      unint64_t result = 0xD00000000000002BLL;
      break;
    case 4:
      unint64_t result = 0xD00000000000002CLL;
      break;
    default:
      unint64_t result = 0xD00000000000001DLL;
      break;
  }
  return result;
}

unint64_t sub_1AFD97E78()
{
  if (qword_1EB819B40 != -1) {
    swift_once();
  }
  sub_1AFD9B594(&qword_1EB819468, (void (*)(uint64_t))type metadata accessor for EndpointConfiguration.Defaults);
  sub_1AFFC9BB8();
  switch(v1)
  {
    case 1:
      unint64_t result = 0xD00000000000002BLL;
      break;
    case 2:
      unint64_t result = 0xD000000000000026;
      break;
    case 3:
      unint64_t result = 0xD000000000000028;
      break;
    case 4:
      unint64_t result = 0xD00000000000002FLL;
      break;
    default:
      unint64_t result = 0xD000000000000028;
      break;
  }
  return result;
}

unint64_t sub_1AFD98004()
{
  if (qword_1EB819B40 != -1) {
    swift_once();
  }
  sub_1AFD9B594(&qword_1EB819468, (void (*)(uint64_t))type metadata accessor for EndpointConfiguration.Defaults);
  sub_1AFFC9BB8();
  switch(v1)
  {
    case 1:
      unint64_t result = 0xD000000000000032;
      break;
    case 2:
      unint64_t result = 0xD00000000000002DLL;
      break;
    case 3:
      unint64_t result = 0xD00000000000002FLL;
      break;
    case 4:
      unint64_t result = 0xD000000000000030;
      break;
    default:
      unint64_t result = 0xD00000000000002FLL;
      break;
  }
  return result;
}

unint64_t sub_1AFD98190()
{
  if (qword_1EB819B40 != -1) {
    swift_once();
  }
  sub_1AFD9B594(&qword_1EB819468, (void (*)(uint64_t))type metadata accessor for EndpointConfiguration.Defaults);
  sub_1AFFC9BB8();
  switch(v1)
  {
    case 1:
      unint64_t result = 0xD000000000000108;
      break;
    case 2:
      unint64_t result = 0xD0000000000000F9;
      break;
    case 3:
      unint64_t result = 0xD0000000000000DBLL;
      break;
    case 4:
      unint64_t result = 0xD0000000000000DELL;
      break;
    default:
      unint64_t result = 0xD0000000000000B7;
      break;
  }
  return result;
}

unint64_t sub_1AFD98320()
{
  if (qword_1EB819B40 != -1) {
    swift_once();
  }
  sub_1AFD9B594(&qword_1EB819468, (void (*)(uint64_t))type metadata accessor for EndpointConfiguration.Defaults);
  sub_1AFFC9BB8();
  return 0xD0000000000001F8;
}

unint64_t sub_1AFD98450()
{
  if (qword_1EB819B40 != -1) {
    swift_once();
  }
  sub_1AFD9B594(&qword_1EB819468, (void (*)(uint64_t))type metadata accessor for EndpointConfiguration.Defaults);
  sub_1AFFC9BB8();
  switch(v1)
  {
    case 1:
      unint64_t result = 0xD000000000000034;
      break;
    case 2:
      unint64_t result = 0xD000000000000038;
      break;
    case 3:
      unint64_t result = 0xD00000000000003ALL;
      break;
    case 4:
      unint64_t result = 0xD00000000000003BLL;
      break;
    default:
      unint64_t result = 0xD00000000000002CLL;
      break;
  }
  return result;
}

unint64_t sub_1AFD985E0()
{
  if (qword_1EB819B40 != -1) {
    swift_once();
  }
  sub_1AFD9B594(&qword_1EB819468, (void (*)(uint64_t))type metadata accessor for EndpointConfiguration.Defaults);
  sub_1AFFC9BB8();
  switch(v1)
  {
    case 1:
      unint64_t result = 0xD000000000000032;
      break;
    case 2:
      unint64_t result = 0xD000000000000036;
      break;
    case 3:
      unint64_t result = 0xD000000000000038;
      break;
    case 4:
      unint64_t result = 0xD000000000000039;
      break;
    default:
      unint64_t result = 0xD00000000000002ALL;
      break;
  }
  return result;
}

void *sub_1AFD98770@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v5 = a1[2];
  if (!v5) {
    return (void *)sub_1AFD973BC(0, 0, 0, 0, 0, 0, 0, 0, a4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  }
                     0,
                     0,
                     0,
                     0,
                     0,
                     0,
                     0,
                     0,
                     0,
                     0,
                     0,
                     0,
                     0,
                     0,
                     0,
                     0);
  memcpy(__dst, a1 + 4, sizeof(__dst));
  if (__dst[0] != a2 || __dst[1] != a3)
  {
    unint64_t v10 = (char *)(a1 + 38);
    do
    {
      if (sub_1AFFCBCE8()) {
        break;
      }
      if (!--v5) {
        return (void *)sub_1AFD973BC(0, 0, 0, 0, 0, 0, 0, 0, a4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      }
                         0,
                         0,
                         0,
                         0,
                         0,
                         0,
                         0,
                         0,
                         0,
                         0,
                         0,
                         0,
                         0,
                         0,
                         0,
                         0);
      memcpy(__dst, v10, sizeof(__dst));
      BOOL v11 = __dst[0] == a2 && __dst[1] == a3;
      v10 += 272;
    }
    while (!v11);
  }
  sub_1AFD9B5DC((uint64_t)__dst);
  return memcpy(a4, __dst, 0x110uLL);
}

unint64_t sub_1AFD98890(char a1)
{
  unint64_t result = 0x6D6E6F7269766E65;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000017;
      break;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 0xD000000000000018;
      break;
    case 5:
    case 11:
      unint64_t result = 0xD000000000000012;
      break;
    case 6:
      unint64_t result = 0xD000000000000017;
      break;
    case 7:
      unint64_t result = 0xD000000000000019;
      break;
    case 8:
      unint64_t result = 0xD000000000000024;
      break;
    case 9:
      unint64_t result = 0xD000000000000018;
      break;
    case 10:
      unint64_t result = 0xD000000000000014;
      break;
    case 12:
      unint64_t result = 0xD000000000000013;
      break;
    case 13:
      unint64_t result = 0xD000000000000014;
      break;
    case 14:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 15:
      unint64_t result = 0xD00000000000001DLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1AFD98A84(char a1)
{
  unint64_t result = 0x6D6E6F7269766E65;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000017;
      break;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 0xD000000000000018;
      break;
    case 5:
    case 11:
      unint64_t result = 0xD000000000000012;
      break;
    case 6:
      unint64_t result = 0xD000000000000017;
      break;
    case 7:
      unint64_t result = 0xD000000000000019;
      break;
    case 8:
      unint64_t result = 0xD000000000000024;
      break;
    case 9:
      unint64_t result = 0xD000000000000018;
      break;
    case 10:
      unint64_t result = 0xD000000000000014;
      break;
    case 12:
      unint64_t result = 0xD000000000000013;
      break;
    case 13:
      unint64_t result = 0xD000000000000014;
      break;
    case 14:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 15:
      unint64_t result = 0xD00000000000001DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1AFD98C78(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_1AFD98890(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1AFD98890(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1AFFCBCE8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1AFD98D04()
{
  char v1 = *v0;
  sub_1AFFCBDF8();
  sub_1AFD98890(v1);
  sub_1AFFCAF68();
  swift_bridgeObjectRelease();
  return sub_1AFFCBE38();
}

uint64_t sub_1AFD98D68()
{
  sub_1AFD98890(*v0);
  sub_1AFFCAF68();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFD98DBC()
{
  char v1 = *v0;
  sub_1AFFCBDF8();
  sub_1AFD98890(v1);
  sub_1AFFCAF68();
  swift_bridgeObjectRelease();
  return sub_1AFFCBE38();
}

uint64_t sub_1AFD98E1C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFD9B548();
  *a1 = result;
  return result;
}

unint64_t sub_1AFD98E4C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1AFD98890(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1AFD98E78()
{
  return sub_1AFD98A84(*v0);
}

uint64_t sub_1AFD98E80@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFD9B548();
  *a1 = result;
  return result;
}

void sub_1AFD98EA8(unsigned char *a1@<X8>)
{
  *a1 = 16;
}

uint64_t sub_1AFD98EB4(uint64_t a1)
{
  unint64_t v2 = sub_1AFD9A010();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFD98EF0(uint64_t a1)
{
  unint64_t v2 = sub_1AFD9A010();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFD98F2C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1AFD9AB90(0, &qword_1EB819F90, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v58 - v8;
  uint64_t v10 = a1[3];
  unint64_t v81 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_1AFD9A010();
  sub_1AFFCBE68();
  if (!v2)
  {
    uint64_t v79 = a2;
    uint64_t v80 = v7;
    unint64_t v86 = (void *)MEMORY[0x1E4FBC860];
    char v85 = 0;
    sub_1AFFCBAF8();
    uint64_t v11 = v84;
    uint64_t v78 = v83;
    if (v84)
    {
      uint64_t v12 = (void *)MEMORY[0x1E4FBC860];
    }
    else
    {
      swift_beginAccess();
      uint64_t v12 = v86;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v12 = sub_1AFD352FC(0, v12[2] + 1, 1, v12);
      }
      unint64_t v14 = v12[2];
      unint64_t v13 = v12[3];
      if (v14 >= v13 >> 1) {
        uint64_t v12 = sub_1AFD352FC((void *)(v13 > 1), v14 + 1, 1, v12);
      }
      void v12[2] = v14 + 1;
      uint64_t v15 = &v12[2 * v14];
      v15[4] = 0x6D6E6F7269766E65;
      void v15[5] = 0xEB00000000746E65;
      unint64_t v86 = v12;
      swift_endAccess();
    }
    char v85 = 1;
    sub_1AFFCBAF8();
    uint64_t v16 = v84;
    unint64_t v77 = v83;
    if (!v84)
    {
      uint64_t v76 = v11;
      swift_beginAccess();
      uint64_t v12 = v86;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v12 = sub_1AFD352FC(0, v12[2] + 1, 1, v12);
      }
      unint64_t v18 = v12[2];
      unint64_t v17 = v12[3];
      if (v18 >= v17 >> 1) {
        uint64_t v12 = sub_1AFD352FC((void *)(v17 > 1), v18 + 1, 1, v12);
      }
      void v12[2] = v18 + 1;
      uint64_t v19 = &v12[2 * v18];
      v19[4] = 0xD000000000000017;
      v19[5] = 0x80000001AFFEC290;
      unint64_t v86 = v12;
      swift_endAccess();
      uint64_t v16 = 0;
      uint64_t v11 = v76;
    }
    char v85 = 2;
    sub_1AFFCBAF8();
    unint64_t v73 = v83;
    uint64_t v75 = v84;
    if (!v84)
    {
      swift_beginAccess();
      uint64_t v12 = v86;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v74 = v16;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        uint64_t v12 = sub_1AFD352FC(0, v12[2] + 1, 1, v12);
      }
      unint64_t v22 = v12[2];
      unint64_t v21 = v12[3];
      if (v22 >= v21 >> 1) {
        uint64_t v12 = sub_1AFD352FC((void *)(v21 > 1), v22 + 1, 1, v12);
      }
      void v12[2] = v22 + 1;
      uint64_t v23 = &v12[2 * v22];
      v23[4] = 0xD000000000000015;
      uint64_t v23[5] = 0x80000001AFFEC2B0;
      unint64_t v86 = v12;
      swift_endAccess();
      uint64_t v16 = v74;
    }
    char v85 = 3;
    sub_1AFFCBAF8();
    unint64_t v71 = v83;
    uint64_t v72 = v84;
    if (!v84)
    {
      swift_beginAccess();
      uint64_t v12 = v86;
      char v24 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v74 = v16;
      if ((v24 & 1) == 0) {
        uint64_t v12 = sub_1AFD352FC(0, v12[2] + 1, 1, v12);
      }
      unint64_t v26 = v12[2];
      unint64_t v25 = v12[3];
      if (v26 >= v25 >> 1) {
        uint64_t v12 = sub_1AFD352FC((void *)(v25 > 1), v26 + 1, 1, v12);
      }
      void v12[2] = v26 + 1;
      uint64_t v27 = &v12[2 * v26];
      v27[4] = 0xD000000000000010;
      v27[5] = 0x80000001AFFEC2D0;
      unint64_t v86 = v12;
      swift_endAccess();
      uint64_t v16 = v74;
    }
    char v85 = 4;
    sub_1AFFCBAF8();
    unint64_t v69 = v83;
    uint64_t v70 = v84;
    if (!v84)
    {
      swift_beginAccess();
      uint64_t v12 = v86;
      char v28 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v74 = v16;
      if ((v28 & 1) == 0) {
        uint64_t v12 = sub_1AFD352FC(0, v12[2] + 1, 1, v12);
      }
      unint64_t v30 = v12[2];
      unint64_t v29 = v12[3];
      if (v30 >= v29 >> 1) {
        uint64_t v12 = sub_1AFD352FC((void *)(v29 > 1), v30 + 1, 1, v12);
      }
      void v12[2] = v30 + 1;
      __int16 v31 = &v12[2 * v30];
      v31[4] = 0xD000000000000018;
      void v31[5] = 0x80000001AFFEC2F0;
      unint64_t v86 = v12;
      swift_endAccess();
      uint64_t v16 = v74;
    }
    char v85 = 5;
    sub_1AFFCBAF8();
    unint64_t v67 = v83;
    uint64_t v68 = v84;
    if (!v84)
    {
      swift_beginAccess();
      uint64_t v12 = v86;
      char v32 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v74 = v16;
      if ((v32 & 1) == 0) {
        uint64_t v12 = sub_1AFD352FC(0, v12[2] + 1, 1, v12);
      }
      unint64_t v34 = v12[2];
      unint64_t v33 = v12[3];
      if (v34 >= v33 >> 1) {
        uint64_t v12 = sub_1AFD352FC((void *)(v33 > 1), v34 + 1, 1, v12);
      }
      void v12[2] = v34 + 1;
      unint64_t v35 = &v12[2 * v34];
      v35[4] = 0xD000000000000012;
      v35[5] = 0x80000001AFFEC310;
      unint64_t v86 = v12;
      swift_endAccess();
      uint64_t v16 = v74;
    }
    char v85 = 6;
    sub_1AFFCBAF8();
    unint64_t v65 = v83;
    uint64_t v66 = v84;
    if (!v84)
    {
      uint64_t v76 = v11;
      swift_beginAccess();
      uint64_t v12 = v86;
      uint64_t v36 = v16;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v12 = sub_1AFD352FC(0, v12[2] + 1, 1, v12);
      }
      unint64_t v38 = v12[2];
      unint64_t v37 = v12[3];
      if (v38 >= v37 >> 1) {
        uint64_t v12 = sub_1AFD352FC((void *)(v37 > 1), v38 + 1, 1, v12);
      }
      void v12[2] = v38 + 1;
      uint64_t v39 = &v12[2 * v38];
      v39[4] = 0xD000000000000017;
      v39[5] = 0x80000001AFFEC330;
      unint64_t v86 = v12;
      swift_endAccess();
      uint64_t v16 = v36;
      uint64_t v11 = v76;
    }
    char v85 = 7;
    sub_1AFFCBAF8();
    unint64_t v64 = v83;
    uint64_t v76 = v84;
    if (!v84)
    {
      uint64_t v74 = v16;
      swift_beginAccess();
      uint64_t v12 = v86;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v12 = sub_1AFD352FC(0, v12[2] + 1, 1, v12);
      }
      unint64_t v41 = v12[2];
      unint64_t v40 = v12[3];
      if (v41 >= v40 >> 1) {
        uint64_t v12 = sub_1AFD352FC((void *)(v40 > 1), v41 + 1, 1, v12);
      }
      void v12[2] = v41 + 1;
      uint64_t v42 = &v12[2 * v41];
      v42[4] = 0xD000000000000019;
      v42[5] = 0x80000001AFFEC350;
      unint64_t v86 = v12;
      swift_endAccess();
      uint64_t v16 = v74;
    }
    char v85 = 8;
    sub_1AFFCBAF8();
    uint64_t v43 = v16;
    unint64_t v62 = v83;
    uint64_t v63 = v84;
    if (!v84)
    {
      swift_beginAccess();
      uint64_t v12 = v86;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v12 = sub_1AFD352FC(0, v12[2] + 1, 1, v12);
      }
      unint64_t v45 = v12[2];
      unint64_t v44 = v12[3];
      if (v45 >= v44 >> 1) {
        uint64_t v12 = sub_1AFD352FC((void *)(v44 > 1), v45 + 1, 1, v12);
      }
      void v12[2] = v45 + 1;
      uint64_t v46 = &v12[2 * v45];
      v46[4] = 0xD000000000000024;
      v46[5] = 0x80000001AFFEC370;
      unint64_t v86 = v12;
      swift_endAccess();
    }
    char v85 = 9;
    sub_1AFFCBAF8();
    unint64_t v60 = v83;
    uint64_t v61 = v84;
    if (!v84)
    {
      swift_beginAccess();
      uint64_t v12 = v86;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v12 = sub_1AFD352FC(0, v12[2] + 1, 1, v12);
      }
      unint64_t v48 = v12[2];
      unint64_t v47 = v12[3];
      if (v48 >= v47 >> 1) {
        uint64_t v12 = sub_1AFD352FC((void *)(v47 > 1), v48 + 1, 1, v12);
      }
      void v12[2] = v48 + 1;
      uint64_t v49 = &v12[2 * v48];
      v49[4] = 0xD000000000000018;
      v49[5] = 0x80000001AFFEC3A0;
      unint64_t v86 = v12;
      swift_endAccess();
    }
    char v85 = 10;
    sub_1AFFCBAF8();
    uint64_t v51 = v84;
    unint64_t v59 = v83;
    if (!v84)
    {
      swift_beginAccess();
      uint64_t v12 = v86;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v12 = sub_1AFD352FC(0, v12[2] + 1, 1, v12);
      }
      unint64_t v53 = v12[2];
      unint64_t v52 = v12[3];
      int64_t v58 = v53 + 1;
      if (v53 >= v52 >> 1) {
        uint64_t v12 = sub_1AFD352FC((void *)(v52 > 1), v58, 1, v12);
      }
      void v12[2] = v58;
      uint64_t v54 = &v12[2 * v53];
      v54[4] = 0xD000000000000014;
      v54[5] = 0x80000001AFFEC3C0;
      unint64_t v86 = v12;
      swift_endAccess();
    }
    sub_1AFD973BC(v78, v11, v77, v43, v73, v75, v71, v72, v82, v69, v70, v67, v68, v65, v66, v64, v76, v62, v63,
      v60,
      v61,
      0,
      0,
      v59,
      v51,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0);
    if (v12[2])
    {
      sub_1AFD2CD48();
      uint64_t v55 = swift_allocObject();
      *(_OWORD *)(v55 + 16) = xmmword_1AFFD05F0;
      sub_1AFD3ABD0();
      *(void *)(v55 + 56) = v56;
      *(void *)(v55 + 64) = sub_1AFD9B594((unint64_t *)&qword_1EB819DE0, (void (*)(uint64_t))sub_1AFD3ABD0);
      *(void *)(v55 + 32) = v12;
      sub_1AFD2C4F4();
      sub_1AFFC8E38();
      long long v57 = (void *)sub_1AFFCB638();
      sub_1AFFCB478();
      sub_1AFFCA878();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AFD2C4F4();
      long long v57 = (void *)sub_1AFFCB638();
      sub_1AFFCB478();
      sub_1AFFCA878();
    }

    (*(void (**)(char *, uint64_t))(v80 + 8))(v9, v6);
    swift_bridgeObjectRelease();
    memcpy(v79, v82, 0x110uLL);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v81);
}

unint64_t sub_1AFD9A010()
{
  unint64_t result = qword_1EB819450;
  if (!qword_1EB819450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819450);
  }
  return result;
}

uint64_t sub_1AFD9A068(void *a1)
{
  sub_1AFD9AB90(0, &qword_1EB81A048, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v24 - v5;
  uint64_t v7 = v1[2];
  v24[28] = v1[3];
  v24[29] = v7;
  uint64_t v8 = v1[4];
  v24[26] = v1[5];
  v24[27] = v8;
  uint64_t v9 = v1[6];
  v24[24] = v1[7];
  v24[25] = v9;
  uint64_t v10 = v1[8];
  v24[22] = v1[9];
  v24[23] = v10;
  uint64_t v11 = v1[11];
  v24[20] = v1[10];
  v24[21] = v11;
  uint64_t v12 = v1[13];
  v24[18] = v1[12];
  v24[19] = v12;
  uint64_t v13 = v1[15];
  v24[16] = v1[14];
  v24[17] = v13;
  uint64_t v14 = v1[17];
  v24[14] = v1[16];
  v24[15] = v14;
  uint64_t v15 = v1[19];
  v24[12] = v1[18];
  v24[13] = v15;
  uint64_t v16 = v1[23];
  v24[10] = v1[22];
  v24[11] = v16;
  long long v24[8] = v1[24];
  v24[9] = v1[25];
  v24[6] = v1[26];
  v24[7] = v1[27];
  v24[4] = v1[28];
  v24[5] = v1[29];
  void v24[2] = v1[30];
  v24[3] = v1[31];
  uint64_t v17 = v1[33];
  v24[1] = v1[32];
  uint64_t v18 = a1[3];
  uint64_t v19 = a1;
  uint64_t v21 = v20;
  __swift_project_boxed_opaque_existential_1(v19, v18);
  sub_1AFD9A010();
  sub_1AFFCBE78();
  char v26 = 0;
  uint64_t v22 = v25;
  sub_1AFFCBC08();
  if (!v22)
  {
    uint64_t v25 = v17;
    char v26 = 1;
    sub_1AFFCBC08();
    char v26 = 2;
    sub_1AFFCBC08();
    char v26 = 3;
    sub_1AFFCBC08();
    char v26 = 4;
    sub_1AFFCBC08();
    char v26 = 5;
    sub_1AFFCBC08();
    char v26 = 6;
    sub_1AFFCBC08();
    char v26 = 7;
    sub_1AFFCBC08();
    char v26 = 8;
    sub_1AFFCBC08();
    char v26 = 9;
    sub_1AFFCBC08();
    char v26 = 10;
    sub_1AFFCBC08();
    char v26 = 11;
    sub_1AFFCBB98();
    char v26 = 12;
    sub_1AFFCBB98();
    char v26 = 13;
    sub_1AFFCBB98();
    char v26 = 14;
    sub_1AFFCBB98();
    char v26 = 15;
    sub_1AFFCBB98();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v21);
}

uint64_t sub_1AFD9A560@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1AFD98F2C(a1, a2);
}

uint64_t sub_1AFD9A578(void *a1)
{
  return sub_1AFD9A068(a1);
}

uint64_t sub_1AFD9A594(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v3 = a1[4];
  uint64_t v5 = a1[5];
  uint64_t v81 = a1[7];
  uint64_t v82 = a1[6];
  uint64_t v80 = a1[8];
  uint64_t v78 = a1[9];
  uint64_t v76 = a1[10];
  uint64_t v74 = a1[11];
  uint64_t v72 = a1[12];
  uint64_t v70 = a1[13];
  uint64_t v68 = a1[14];
  uint64_t v66 = a1[15];
  uint64_t v64 = a1[16];
  uint64_t v62 = a1[17];
  uint64_t v60 = a1[18];
  uint64_t v58 = a1[19];
  uint64_t v56 = a1[20];
  uint64_t v54 = a1[21];
  uint64_t v52 = a1[22];
  uint64_t v50 = a1[23];
  uint64_t v44 = a1[24];
  uint64_t v48 = a1[25];
  uint64_t v40 = a1[26];
  uint64_t v46 = a1[27];
  uint64_t v36 = a1[28];
  uint64_t v42 = a1[29];
  uint64_t v34 = a1[30];
  uint64_t v38 = a1[31];
  uint64_t v30 = a1[32];
  uint64_t v32 = a1[33];
  uint64_t v7 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v9 = a2[4];
  uint64_t v8 = a2[5];
  uint64_t v11 = a2[6];
  uint64_t v10 = a2[7];
  uint64_t v79 = a2[8];
  uint64_t v77 = a2[9];
  uint64_t v75 = a2[10];
  uint64_t v73 = a2[11];
  uint64_t v71 = a2[12];
  uint64_t v69 = a2[13];
  uint64_t v67 = a2[14];
  uint64_t v65 = a2[15];
  uint64_t v63 = a2[16];
  uint64_t v61 = a2[17];
  uint64_t v59 = a2[18];
  uint64_t v57 = a2[19];
  uint64_t v55 = a2[20];
  uint64_t v53 = a2[21];
  uint64_t v51 = a2[22];
  uint64_t v49 = a2[23];
  uint64_t v43 = a2[24];
  uint64_t v47 = a2[25];
  uint64_t v39 = a2[26];
  uint64_t v45 = a2[27];
  uint64_t v35 = a2[28];
  uint64_t v41 = a2[29];
  uint64_t v33 = a2[30];
  uint64_t v37 = a2[31];
  uint64_t v29 = a2[32];
  uint64_t v31 = a2[33];
  if (*a1 == *a2 && a1[1] == a2[1] || (v12 = sub_1AFFCBCE8(), uint64_t result = 0, (v12 & 1) != 0))
  {
    if (v2 == v7 && v4 == v6 || (v14 = sub_1AFFCBCE8(), uint64_t result = 0, (v14 & 1) != 0))
    {
      if (v3 == v9 && v5 == v8 || (v15 = sub_1AFFCBCE8(), uint64_t result = 0, (v15 & 1) != 0))
      {
        if (v82 == v11 && v81 == v10 || (v16 = sub_1AFFCBCE8(), uint64_t result = 0, (v16 & 1) != 0))
        {
          if (v80 == v79 && v78 == v77 || (v17 = sub_1AFFCBCE8(), uint64_t result = 0, (v17 & 1) != 0))
          {
            if (v76 == v75 && v74 == v73 || (v18 = sub_1AFFCBCE8(), uint64_t result = 0, (v18 & 1) != 0))
            {
              if (v72 == v71 && v70 == v69 || (v19 = sub_1AFFCBCE8(), uint64_t result = 0, (v19 & 1) != 0))
              {
                if (v68 == v67 && v66 == v65 || (v20 = sub_1AFFCBCE8(), uint64_t result = 0, (v20 & 1) != 0))
                {
                  if (v64 == v63 && v62 == v61 || (v21 = sub_1AFFCBCE8(), uint64_t result = 0, (v21 & 1) != 0))
                  {
                    if (v60 == v59 && v58 == v57 || (v22 = sub_1AFFCBCE8(), uint64_t result = 0, (v22 & 1) != 0))
                    {
                      if (v56 == v55 && v54 == v53 || (v23 = sub_1AFFCBCE8(), uint64_t result = 0, (v23 & 1) != 0))
                      {
                        if (v52 == v51 && v50 == v49 || (v24 = sub_1AFFCBCE8(), uint64_t result = 0, (v24 & 1) != 0))
                        {
                          if (v48)
                          {
                            if (!v47) {
                              return 0;
                            }
                            if (v44 != v43 || v48 != v47)
                            {
                              char v25 = sub_1AFFCBCE8();
                              uint64_t result = 0;
                              if ((v25 & 1) == 0) {
                                return result;
                              }
                            }
                          }
                          else if (v47)
                          {
                            return 0;
                          }
                          if (v46)
                          {
                            if (!v45) {
                              return 0;
                            }
                            if (v40 != v39 || v46 != v45)
                            {
                              char v26 = sub_1AFFCBCE8();
                              uint64_t result = 0;
                              if ((v26 & 1) == 0) {
                                return result;
                              }
                            }
                          }
                          else if (v45)
                          {
                            return 0;
                          }
                          if (v42)
                          {
                            if (!v41) {
                              return 0;
                            }
                            if (v36 != v35 || v42 != v41)
                            {
                              char v27 = sub_1AFFCBCE8();
                              uint64_t result = 0;
                              if ((v27 & 1) == 0) {
                                return result;
                              }
                            }
                          }
                          else if (v41)
                          {
                            return 0;
                          }
                          if (v38)
                          {
                            if (!v37) {
                              return 0;
                            }
                            if (v34 != v33 || v38 != v37)
                            {
                              char v28 = sub_1AFFCBCE8();
                              uint64_t result = 0;
                              if ((v28 & 1) == 0) {
                                return result;
                              }
                            }
                          }
                          else if (v37)
                          {
                            return 0;
                          }
                          if (v32)
                          {
                            if (v31 && (v30 == v29 && v32 == v31 || (sub_1AFFCBCE8() & 1) != 0)) {
                              return 1;
                            }
                          }
                          else if (!v31)
                          {
                            return 1;
                          }
                          return 0;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

void sub_1AFD9AB90(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1AFD9A010();
    unint64_t v7 = a3(a1, &type metadata for EndpointConfiguration.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t destroy for EndpointConfiguration()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for EndpointConfiguration(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  uint64_t v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  uint64_t v9 = a2[13];
  a1[12] = a2[12];
  a1[13] = v9;
  uint64_t v10 = a2[15];
  a1[14] = a2[14];
  a1[15] = v10;
  uint64_t v11 = a2[17];
  a1[16] = a2[16];
  a1[17] = v11;
  uint64_t v12 = a2[19];
  a1[18] = a2[18];
  a1[19] = v12;
  uint64_t v13 = a2[21];
  a1[20] = a2[20];
  a1[21] = v13;
  uint64_t v14 = a2[23];
  a1[22] = a2[22];
  a1[23] = v14;
  uint64_t v15 = a2[25];
  a1[24] = a2[24];
  a1[25] = v15;
  uint64_t v16 = a2[27];
  a1[26] = a2[26];
  a1[27] = v16;
  uint64_t v17 = a2[29];
  a1[28] = a2[28];
  a1[29] = v17;
  uint64_t v18 = a2[31];
  a1[30] = a2[30];
  a1[31] = v18;
  uint64_t v19 = a2[33];
  a1[32] = a2[32];
  a1[33] = v19;
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  return a1;
}

void *assignWithCopy for EndpointConfiguration(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  a1[13] = a2[13];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[14] = a2[14];
  a1[15] = a2[15];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[16] = a2[16];
  a1[17] = a2[17];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[18] = a2[18];
  a1[19] = a2[19];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[20] = a2[20];
  a1[21] = a2[21];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[22] = a2[22];
  a1[23] = a2[23];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[24] = a2[24];
  a1[25] = a2[25];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[26] = a2[26];
  a1[27] = a2[27];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[28] = a2[28];
  a1[29] = a2[29];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[30] = a2[30];
  a1[31] = a2[31];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[32] = a2[32];
  a1[33] = a2[33];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy272_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x110uLL);
}

void *assignWithTake for EndpointConfiguration(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = a2[15];
  a1[14] = a2[14];
  a1[15] = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = a2[17];
  a1[16] = a2[16];
  a1[17] = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = a2[19];
  a1[18] = a2[18];
  a1[19] = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = a2[21];
  a1[20] = a2[20];
  a1[21] = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = a2[23];
  a1[22] = a2[22];
  a1[23] = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = a2[25];
  a1[24] = a2[24];
  a1[25] = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = a2[27];
  a1[26] = a2[26];
  a1[27] = v17;
  swift_bridgeObjectRelease();
  uint64_t v18 = a2[29];
  a1[28] = a2[28];
  a1[29] = v18;
  swift_bridgeObjectRelease();
  uint64_t v19 = a2[31];
  a1[30] = a2[30];
  a1[31] = v19;
  swift_bridgeObjectRelease();
  uint64_t v20 = a2[33];
  a1[32] = a2[32];
  a1[33] = v20;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EndpointConfiguration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 272)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EndpointConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 264) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 272) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 272) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EndpointConfiguration()
{
  return &type metadata for EndpointConfiguration;
}

uint64_t type metadata accessor for EndpointConfiguration.Defaults()
{
  return self;
}

uint64_t getEnumTagSinglePayload for EndpointConfiguration.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF1) {
    goto LABEL_17;
  }
  if (a2 + 15 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 15) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 15;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 15;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 15;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x10;
  int v8 = v6 - 16;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for EndpointConfiguration.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 15 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 15) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF1) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF0)
  {
    unsigned int v6 = ((a2 - 241) >> 8) + 1;
    *uint64_t result = a2 + 15;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFD9B408);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 15;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EndpointConfiguration.CodingKeys()
{
  return &type metadata for EndpointConfiguration.CodingKeys;
}

unint64_t sub_1AFD9B444()
{
  unint64_t result = qword_1E9AFA3C8;
  if (!qword_1E9AFA3C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFA3C8);
  }
  return result;
}

unint64_t sub_1AFD9B49C()
{
  unint64_t result = qword_1EB819460;
  if (!qword_1EB819460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819460);
  }
  return result;
}

unint64_t sub_1AFD9B4F4()
{
  unint64_t result = qword_1EB819458;
  if (!qword_1EB819458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819458);
  }
  return result;
}

uint64_t sub_1AFD9B548()
{
  unint64_t v0 = sub_1AFFCBA78();
  swift_bridgeObjectRelease();
  if (v0 >= 0x10) {
    return 16;
  }
  else {
    return v0;
  }
}

uint64_t sub_1AFD9B594(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AFD9B5DC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1AFD9B700@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  uint64_t v57 = type metadata accessor for Chart.Entry(0);
  uint64_t v14 = *(void *)(v57 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v57);
  uint64_t v56 = (uint64_t)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v47 - v17;
  *a7 = a1;
  uint64_t v19 = (int *)type metadata accessor for Chart(0);
  uint64_t v20 = (uint64_t)a7 + v19[5];
  uint64_t v52 = a2;
  sub_1AFD9BB8C(a2, v20, (uint64_t (*)(void))sub_1AFD30DA8);
  char v21 = (char *)a7 + v19[6];
  *(void *)char v21 = a3;
  _OWORD v21[8] = a4 & 1;
  char v22 = (char *)a7 + v19[7];
  uint64_t v23 = sub_1AFFC9B88();
  uint64_t v47 = *(void *)(v23 - 8);
  uint64_t v48 = v23;
  char v24 = *(void (**)(char *, uint64_t))(v47 + 16);
  uint64_t v51 = a5;
  v24(v22, a5);
  uint64_t v49 = v19;
  char v25 = (char *)a7 + v19[8];
  uint64_t v26 = sub_1AFFC98F8();
  uint64_t v53 = *(void *)(v26 - 8);
  uint64_t v54 = v26;
  char v27 = *(void (**)(char *, uint64_t))(v53 + 16);
  uint64_t v50 = a6;
  v27(v25, a6);
  char v28 = (unint64_t *)MEMORY[0x1E4FBC860];
  uint64_t v58 = (unint64_t *)MEMORY[0x1E4FBC860];
  uint64_t v29 = *(void *)(a1 + 16);
  uint64_t result = sub_1AFFC8E38();
  uint64_t v55 = a7;
  if (v29)
  {
    unint64_t v31 = 0;
    uint64_t v32 = (unint64_t *)MEMORY[0x1E4FBC860];
    while (v31 < *(void *)(a1 + 16))
    {
      unint64_t v33 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
      uint64_t v34 = *(void *)(v14 + 72);
      sub_1AFD9BB8C(a1 + v33 + v34 * v31, (uint64_t)v18, type metadata accessor for Chart.Entry);
      uint64_t v35 = &v18[*(int *)(v57 + 36)];
      if ((v35[8] & 1) != 0 || *(double *)v35 <= 0.0)
      {
        uint64_t result = sub_1AFD9D9B0((uint64_t)v18, type metadata accessor for Chart.Entry);
      }
      else
      {
        sub_1AFDA0370((uint64_t)v18, v56, type metadata accessor for Chart.Entry);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1AFD9D960(0, v32[2] + 1, 1);
        }
        uint64_t v32 = v58;
        unint64_t v37 = v58[2];
        unint64_t v36 = v58[3];
        if (v37 >= v36 >> 1)
        {
          sub_1AFD9D960(v36 > 1, v37 + 1, 1);
          uint64_t v32 = v58;
        }
        v32[2] = v37 + 1;
        uint64_t result = sub_1AFDA0370(v56, (uint64_t)v32 + v33 + v37 * v34, type metadata accessor for Chart.Entry);
      }
      if (v29 == ++v31)
      {
        uint64_t v38 = v58;
        uint64_t v40 = v51;
        uint64_t v39 = v52;
        uint64_t v42 = v49;
        uint64_t v41 = v50;
        uint64_t v44 = v47;
        uint64_t v43 = v48;
        char v28 = (unint64_t *)MEMORY[0x1E4FBC860];
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v38 = v28;
    uint64_t v40 = v51;
    uint64_t v39 = v52;
    uint64_t v42 = v49;
    uint64_t v41 = v50;
    uint64_t v44 = v47;
    uint64_t v43 = v48;
LABEL_15:
    swift_bridgeObjectRelease();
    unint64_t v45 = v38[2];
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v41, v54);
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v40, v43);
    uint64_t result = sub_1AFD9D9B0(v39, (uint64_t (*)(void))sub_1AFD30DA8);
    uint64_t v46 = (unint64_t *)&unk_1F08792B0;
    if (!v45) {
      uint64_t v46 = v28;
    }
    *(void *)((char *)v55 + v42[9]) = v46;
  }
  return result;
}

uint64_t type metadata accessor for Chart.Entry(uint64_t a1)
{
  return sub_1AFD9BB54(a1, (uint64_t *)&unk_1EB817A70);
}

uint64_t type metadata accessor for Chart(uint64_t a1)
{
  return sub_1AFD9BB54(a1, (uint64_t *)&unk_1EB817AB0);
}

uint64_t sub_1AFD9BB54(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1AFD9BB8C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

int *sub_1AFD9BBF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10, uint64_t a11, char a12)
{
  uint64_t v20 = sub_1AFFC98F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32))(a9, a1, v20);
  uint64_t result = (int *)type metadata accessor for Chart.Entry(0);
  uint64_t v22 = a9 + result[5];
  *(void *)uint64_t v22 = a2;
  *(unsigned char *)(v22 + 8) = a3 & 1;
  uint64_t v23 = a9 + result[6];
  *(void *)uint64_t v23 = a4;
  *(unsigned char *)(v23 + 8) = a5 & 1;
  uint64_t v24 = a9 + result[7];
  *(void *)uint64_t v24 = a6;
  *(unsigned char *)(v24 + 8) = a7 & 1;
  uint64_t v25 = a9 + result[8];
  *(void *)uint64_t v25 = a8;
  *(unsigned char *)(v25 + 8) = a10 & 1;
  uint64_t v26 = a9 + result[9];
  *(void *)uint64_t v26 = a11;
  *(unsigned char *)(v26 + 8) = a12 & 1;
  return result;
}

uint64_t sub_1AFD9BD1C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1AFFC98F8();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t sub_1AFD9BD84()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for Chart.Entry(0) + 20));
}

uint64_t sub_1AFD9BDB0()
{
  return sub_1AFD9C9F4(type metadata accessor for Chart.Entry);
}

uint64_t sub_1AFD9BDC8()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for Chart.Entry(0) + 28));
}

uint64_t sub_1AFD9BDF4()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for Chart.Entry(0) + 32));
}

uint64_t sub_1AFD9BE20()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for Chart.Entry(0) + 36));
}

uint64_t sub_1AFD9BE50()
{
  uint64_t result = 0x636E657265666572;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1852141679;
      break;
    case 2:
      uint64_t result = 0x65736F6C63;
      break;
    case 3:
      uint64_t result = 1751607656;
      break;
    case 4:
      uint64_t result = 7827308;
      break;
    case 5:
      uint64_t result = 0x656D756C6F76;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1AFD9BF04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1AFDA1C78(a1, a2);
  *a3 = result;
  return result;
}

void sub_1AFD9BF2C(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_1AFD9BF38(uint64_t a1)
{
  unint64_t v2 = sub_1AFD9FDD0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFD9BF74(uint64_t a1)
{
  unint64_t v2 = sub_1AFD9FDD0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFD9BFB0(void *a1)
{
  sub_1AFDA238C(0, &qword_1EB818338, (uint64_t (*)(void))sub_1AFD9FDD0, (uint64_t)&type metadata for Chart.Entry.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  BOOL v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFD9FDD0();
  sub_1AFFCBE78();
  char v15 = 0;
  sub_1AFFC98F8();
  sub_1AFD9FE24((unint64_t *)&unk_1EB818B90, MEMORY[0x1E4F27928]);
  sub_1AFFCBC58();
  if (!v1)
  {
    type metadata accessor for Chart.Entry(0);
    char v14 = 1;
    sub_1AFFCBBB8();
    char v13 = 2;
    sub_1AFFCBBB8();
    char v12 = 3;
    sub_1AFFCBBB8();
    char v11 = 4;
    sub_1AFFCBBB8();
    char v10 = 5;
    sub_1AFFCBBB8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1AFD9C274@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v33 = a2;
  uint64_t v3 = sub_1AFFC98F8();
  uint64_t v35 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unint64_t v37 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFDA238C(0, &qword_1EB8182F8, (uint64_t (*)(void))sub_1AFD9FDD0, (uint64_t)&type metadata for Chart.Entry.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v36 = v5;
  uint64_t v34 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  BOOL v7 = (char *)&v32 - v6;
  int v8 = (int *)type metadata accessor for Chart.Entry(0);
  MEMORY[0x1F4188790](v8);
  char v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFD9FDD0();
  uint64_t v38 = v7;
  uint64_t v11 = (uint64_t)v39;
  sub_1AFFCBE68();
  if (v11) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v12 = v34;
  uint64_t v13 = v35;
  uint64_t v39 = a1;
  uint64_t v14 = (uint64_t)v10;
  char v45 = 0;
  sub_1AFD9FE24(&qword_1EB816CB0, MEMORY[0x1E4F27928]);
  sub_1AFFCBB58();
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v37, v3);
  char v44 = 1;
  uint64_t v15 = sub_1AFFCBAC8();
  uint64_t v16 = &v10[v8[5]];
  *(void *)uint64_t v16 = v15;
  v16[8] = v17 & 1;
  char v43 = 2;
  uint64_t v18 = sub_1AFFCBAC8();
  uint64_t v19 = v12;
  uint64_t v20 = v14 + v8[6];
  *(void *)uint64_t v20 = v18;
  *(unsigned char *)(v20 + 8) = v21 & 1;
  char v42 = 3;
  uint64_t v22 = sub_1AFFCBAC8();
  uint64_t v23 = v14 + v8[7];
  *(void *)uint64_t v23 = v22;
  *(unsigned char *)(v23 + 8) = v24 & 1;
  char v41 = 4;
  uint64_t v25 = sub_1AFFCBAC8();
  uint64_t v26 = v14 + v8[8];
  *(void *)uint64_t v26 = v25;
  *(unsigned char *)(v26 + 8) = v27 & 1;
  char v40 = 5;
  uint64_t v28 = sub_1AFFCBAC8();
  LOBYTE(v12) = v29;
  (*(void (**)(char *, uint64_t))(v19 + 8))(v38, v36);
  uint64_t v30 = v14 + v8[9];
  *(void *)uint64_t v30 = v28;
  *(unsigned char *)(v30 + 8) = v12 & 1;
  sub_1AFD9BB8C(v14, v33, type metadata accessor for Chart.Entry);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
  return sub_1AFD9D9B0(v14, type metadata accessor for Chart.Entry);
}

uint64_t sub_1AFD9C71C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1AFD9C274(a1, a2);
}

uint64_t sub_1AFD9C734(void *a1)
{
  return sub_1AFD9BFB0(a1);
}

uint64_t sub_1AFD9C750@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1AFFCBA78();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1AFD9C7A8()
{
  return 0x656D756C6F76;
}

uint64_t sub_1AFD9C7BC()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFD9C80C()
{
  return sub_1AFFCAF68();
}

uint64_t sub_1AFD9C820()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFD9C86C@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1AFFCBA78();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1AFD9C8C0(void *a1@<X8>)
{
  *a1 = 0x656D756C6F76;
  a1[1] = 0xE600000000000000;
}

uint64_t sub_1AFD9C8D8()
{
  return sub_1AFFCB178();
}

uint64_t sub_1AFD9C938()
{
  return sub_1AFFCB128();
}

uint64_t sub_1AFD9C988()
{
  return sub_1AFFC8E38();
}

uint64_t sub_1AFD9C990@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for Chart(0);
  return sub_1AFD9BB8C(v1 + *(int *)(v3 + 20), a1, (uint64_t (*)(void))sub_1AFD30DA8);
}

uint64_t sub_1AFD9C9DC()
{
  return sub_1AFD9C9F4(type metadata accessor for Chart);
}

uint64_t sub_1AFD9C9F4(uint64_t (*a1)(void))
{
  return *(void *)(v1 + *(int *)(a1(0) + 24));
}

uint64_t sub_1AFD9CA28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Chart(0) + 28);
  uint64_t v4 = sub_1AFFC9B88();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_1AFD9CAA0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Chart(0) + 32);
  uint64_t v4 = sub_1AFFC98F8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_1AFD9CB18()
{
  type metadata accessor for Chart(0);

  return sub_1AFFC8E38();
}

unint64_t sub_1AFD9CB50()
{
  unint64_t result = 0x73656972746E65;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x676E615265746164;
      break;
    case 2:
      unint64_t result = 0x73756F6976657270;
      break;
    case 3:
      unint64_t result = 0x695474656B72616DLL;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    case 5:
      unint64_t result = 0x7365727574616566;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1AFD9CC38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1AFDA1EE0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AFD9CC60(uint64_t a1)
{
  unint64_t v2 = sub_1AFDA00E8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFD9CC9C(uint64_t a1)
{
  unint64_t v2 = sub_1AFDA00E8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFD9CCD8(void *a1)
{
  uint64_t v3 = v1;
  sub_1AFDA238C(0, &qword_1EB818330, (uint64_t (*)(void))sub_1AFDA00E8, (uint64_t)&type metadata for Chart.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDA00E8();
  sub_1AFFCBE78();
  uint64_t v14 = *v3;
  char v13 = 0;
  sub_1AFDA21B0(0, &qword_1EB817FB8, type metadata accessor for Chart.Entry, MEMORY[0x1E4FBB320]);
  sub_1AFDA0220(&qword_1EB817FC0, &qword_1EB817A60);
  sub_1AFFCBC58();
  if (!v2)
  {
    uint64_t v10 = type metadata accessor for Chart(0);
    LOBYTE(v14) = 1;
    sub_1AFD30DA8();
    sub_1AFDA02E0(&qword_1EB817EE0, (unint64_t *)&unk_1EB818B90);
    sub_1AFFCBC58();
    LOBYTE(v14) = 2;
    sub_1AFFCBBB8();
    LOBYTE(v14) = 3;
    sub_1AFFC9B88();
    sub_1AFD9FE24(&qword_1EB816CE0, MEMORY[0x1E4F27D68]);
    sub_1AFFCBC58();
    LOBYTE(v14) = 4;
    sub_1AFFC98F8();
    sub_1AFD9FE24((unint64_t *)&unk_1EB818B90, MEMORY[0x1E4F27928]);
    sub_1AFFCBC58();
    uint64_t v14 = *(uint64_t *)((char *)v3 + *(int *)(v10 + 36));
    char v13 = 5;
    sub_1AFDA2460(0, &qword_1EB817FD0, (uint64_t)&type metadata for Chart.Feature, MEMORY[0x1E4FBB320]);
    sub_1AFDA013C(&qword_1EB817FD8, (void (*)(void))sub_1AFDA01CC);
    sub_1AFFCBC58();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1AFD9D120@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v27 = a2;
  uint64_t v32 = sub_1AFFC98F8();
  uint64_t v30 = *(void *)(v32 - 8);
  MEMORY[0x1F4188790](v32);
  uint64_t v28 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_1AFFC9B88();
  uint64_t v31 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  char v29 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFD30DA8();
  uint64_t v34 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFDA238C(0, &qword_1EB8182F0, (uint64_t (*)(void))sub_1AFDA00E8, (uint64_t)&type metadata for Chart.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v37 = v8;
  uint64_t v33 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v26 - v9;
  uint64_t v11 = (int *)type metadata accessor for Chart(0);
  MEMORY[0x1F4188790](v11);
  char v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDA00E8();
  uint64_t v36 = v10;
  uint64_t v14 = (uint64_t)v38;
  sub_1AFFCBE68();
  if (v14) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v15 = v33;
  uint64_t v16 = v13;
  uint64_t v17 = v35;
  uint64_t v38 = a1;
  sub_1AFDA21B0(0, &qword_1EB817FB8, type metadata accessor for Chart.Entry, MEMORY[0x1E4FBB320]);
  char v39 = 0;
  sub_1AFDA0220(&qword_1EB817FC8, &qword_1EB817A68);
  sub_1AFFCBB58();
  uint64_t v18 = (uint64_t)v16;
  *uint64_t v16 = v40;
  LOBYTE(v40) = 1;
  sub_1AFDA02E0(&qword_1EB817EE8, &qword_1EB816CB0);
  sub_1AFFCBB58();
  sub_1AFDA0370((uint64_t)v7, (uint64_t)v16 + v11[5], (uint64_t (*)(void))sub_1AFD30DA8);
  LOBYTE(v40) = 2;
  uint64_t v19 = sub_1AFFCBAC8();
  uint64_t v20 = (char *)v16 + v11[6];
  *(void *)uint64_t v20 = v19;
  v20[8] = v21 & 1;
  LOBYTE(v40) = 3;
  sub_1AFD9FE24(&qword_1EB816CE8, MEMORY[0x1E4F27D68]);
  uint64_t v22 = v29;
  sub_1AFFCBB58();
  (*(void (**)(uint64_t, char *, uint64_t))(v31 + 32))(v18 + v11[7], v22, v17);
  LOBYTE(v40) = 4;
  sub_1AFD9FE24(&qword_1EB816CB0, MEMORY[0x1E4F27928]);
  uint64_t v23 = v28;
  uint64_t v24 = v32;
  sub_1AFFCBB58();
  (*(void (**)(uint64_t, char *, uint64_t))(v30 + 32))(v18 + v11[8], v23, v24);
  sub_1AFDA2460(0, &qword_1EB817FD0, (uint64_t)&type metadata for Chart.Feature, MEMORY[0x1E4FBB320]);
  char v39 = 5;
  sub_1AFDA013C(&qword_1EB817FE0, (void (*)(void))sub_1AFDA03D8);
  sub_1AFFCBB58();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v36, v37);
  *(void *)(v18 + v11[9]) = v40;
  sub_1AFD9BB8C(v18, v27, type metadata accessor for Chart);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  return sub_1AFD9D9B0(v18, type metadata accessor for Chart);
}

uint64_t sub_1AFD9D8BC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1AFD9D120(a1, a2);
}

uint64_t sub_1AFD9D8D4(void *a1)
{
  return sub_1AFD9CCD8(a1);
}

uint64_t sub_1AFD9D8F0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1AFD9DDE0(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1AFD9D910(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1AFD9F8A0(a1, a2, a3, (void *)*v3, &qword_1EB818358, (uint64_t (*)(uint64_t))type metadata accessor for NetworkEvent, (uint64_t (*)(void))type metadata accessor for NetworkEvent);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1AFD9D960(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1AFD9F8A0(a1, a2, a3, (void *)*v3, &qword_1EB816928, type metadata accessor for Chart.Entry, type metadata accessor for Chart.Entry);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1AFD9D9B0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1AFD9DA10(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1AFD9DF8C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1AFD9DA30(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1AFD9E118(a1, a2, a3, *v3, &qword_1E9AFA3F0, (uint64_t)&type metadata for FundHolding);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1AFD9DA60(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1AFD9E118(a1, a2, a3, *v3, &qword_1E9AFA3E8, (uint64_t)&type metadata for FundSector);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1AFD9DA90(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1AFD9E2C0(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1AFD9DAB0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1AFD9E468(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1AFD9DAD0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1AFD9E604(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1AFD9DAF0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1AFD9E7A8(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1AFD9DB10(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1AFD9F8A0(a1, a2, a3, (void *)*v3, &qword_1E9AF9D00, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity, (uint64_t (*)(void))type metadata accessor for SymbolEntity);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1AFD9DB60(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1AFD9E93C(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1AFD9DB80(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1AFD9EAF0(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1AFD9DBA0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1AFD9EC78(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1AFD9DBC0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1AFD9EE1C(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1AFD9DBE0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1AFD9F0C8(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1AFD9DC00(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1AFD9F26C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1AFD9DC20(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1AFD9F3F8(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1AFD9DC40(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1AFD9F578(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1AFD9DC60(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1AFD9F8A0(a1, a2, a3, (void *)*v3, &qword_1EB81A0B8, MEMORY[0x1E4F26EA0], MEMORY[0x1E4F26EA0]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1AFD9DCB0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1AFD9F8A0(a1, a2, a3, (void *)*v3, &qword_1EB81AE50, MEMORY[0x1E4F276F0], MEMORY[0x1E4F276F0]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1AFD9DD00(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1AFD9F6F8(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1AFD9DD20(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1AFD9F8A0(a1, a2, a3, (void *)*v3, &qword_1E9AFA3F8, (uint64_t (*)(uint64_t))sub_1AFDA2268, (uint64_t (*)(void))sub_1AFDA2268);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1AFD9DD70(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1AFD9F8A0(a1, a2, a3, (void *)*v3, &qword_1EB81A0C0, MEMORY[0x1E4F27A00], MEMORY[0x1E4F27A00]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1AFD9DDC0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1AFD9FB04(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1AFD9DDE0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1AFDA2460(0, &qword_1EB818390, (uint64_t)&type metadata for Headline, MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 144);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  char v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[144 * v8]) {
      memmove(v12, v13, 144 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[144 * v8] || v12 >= &v13[144 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1AFFCBA28();
  __break(1u);
  return result;
}

uint64_t sub_1AFD9DF8C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1AFDA2460(0, (unint64_t *)&qword_1EB81A0E0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  char v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1AFFCBA28();
  __break(1u);
  return result;
}

uint64_t sub_1AFD9E118(char a1, int64_t a2, char a3, char *a4, unint64_t *a5, uint64_t a6)
{
  if (a3)
  {
    unint64_t v8 = *((void *)a4 + 3);
    int64_t v9 = v8 >> 1;
    if ((uint64_t)(v8 >> 1) < a2)
    {
      if (v9 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v9 = a2;
      }
    }
  }
  else
  {
    int64_t v9 = a2;
  }
  uint64_t v10 = *((void *)a4 + 2);
  if (v9 <= v10) {
    uint64_t v11 = *((void *)a4 + 2);
  }
  else {
    uint64_t v11 = v9;
  }
  if (v11)
  {
    sub_1AFDA2460(0, a5, a6, MEMORY[0x1E4FBBE00]);
    uint64_t v12 = (char *)swift_allocObject();
    size_t v13 = _swift_stdlib_malloc_size(v12);
    *((void *)v12 + 2) = v10;
    *((void *)v12 + 3) = 2 * ((uint64_t)(v13 - 32) / 24);
  }
  else
  {
    uint64_t v12 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v14 = v12 + 32;
  uint64_t v15 = a4 + 32;
  if (a1)
  {
    if (v12 != a4 || v14 >= &v15[24 * v10]) {
      memmove(v14, v15, 24 * v10);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v15 >= &v14[24 * v10] || v14 >= &v15[24 * v10])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v12;
  }
LABEL_30:
  uint64_t result = sub_1AFFCBA28();
  __break(1u);
  return result;
}

uint64_t sub_1AFD9E2C0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1AFDA2460(0, &qword_1EB811410, (uint64_t)&type metadata for WatchlistEntity, MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  size_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8]) {
      memmove(v12, v13, 24 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1AFFCBA28();
  __break(1u);
  return result;
}

uint64_t sub_1AFD9E468(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1AFDA2460(0, &qword_1EB818398, (uint64_t)&type metadata for Watchlist, MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  size_t v13 = a4 + 32;
  size_t v14 = 48 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1AFFCBA28();
  __break(1u);
  return result;
}

uint64_t sub_1AFD9E604(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1AFDA2460(0, &qword_1EB818388, (uint64_t)&type metadata for Stock, MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 136);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  size_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[136 * v8]) {
      memmove(v12, v13, 136 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[136 * v8] || v12 >= &v13[136 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1AFFCBA28();
  __break(1u);
  return result;
}

uint64_t sub_1AFD9E7A8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1AFDA2460(0, (unint64_t *)&qword_1EB8183F0, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  size_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1AFFCBA28();
  __break(1u);
  return result;
}

uint64_t sub_1AFD9E93C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1AFDA21B0(0, &qword_1EB8183B8, (uint64_t (*)(uint64_t))sub_1AFDA23F4, MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    void v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    sub_1AFDA23F4();
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1AFFCBA28();
  __break(1u);
  return result;
}

uint64_t sub_1AFD9EAF0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1AFDA2460(0, &qword_1EB818380, (uint64_t)&type metadata for NewsFeedFilterOptions.Option, MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 + 31;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 6);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  size_t v15 = v8 << 6;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[v15]) {
      memmove(v13, v14, v15);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1AFFCBA28();
  __break(1u);
  return result;
}

uint64_t sub_1AFD9EC78(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1AFDA2460(0, (unint64_t *)&unk_1EB818360, (uint64_t)&type metadata for StockNewsFeed, MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 160);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[160 * v8]) {
      memmove(v12, v13, 160 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[160 * v8] || v12 >= &v13[160 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1AFFCBA28();
  __break(1u);
  return result;
}

uint64_t sub_1AFD9EE1C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    unint64_t v13 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  sub_1AFDA22FC();
  sub_1AFDA238C(0, &qword_1E9AFA410, (uint64_t (*)(void))sub_1AFD38AA0, (uint64_t)&type metadata for SymbolWidgetEntity, MEMORY[0x1E4F182A0]);
  uint64_t v11 = *(void *)(*(void *)(v10 - 8) + 72);
  unint64_t v12 = (*(unsigned __int8 *)(*(void *)(v10 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v10 - 8) + 80);
  unint64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  void v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  sub_1AFDA238C(0, &qword_1E9AFA410, (uint64_t (*)(void))sub_1AFD38AA0, (uint64_t)&type metadata for SymbolWidgetEntity, MEMORY[0x1E4F182A0]);
  uint64_t v17 = *(void *)(v16 - 8);
  unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v19 = (char *)v13 + v18;
  uint64_t v20 = (char *)a4 + v18;
  if (a1)
  {
    if (v13 < a4 || v19 >= &v20[*(void *)(v17 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v21 = *(void *)(v17 + 72) * v8;
  uint64_t v22 = &v19[v21];
  unint64_t v23 = (unint64_t)&v20[v21];
  if (v20 >= v22 || (unint64_t)v19 >= v23)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_1AFFCBA28();
  __break(1u);
  return result;
}

uint64_t sub_1AFD9F0C8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1AFDA2460(0, &qword_1EB8117D8, (uint64_t)&type metadata for CurrencyConversion, MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8]) {
      memmove(v12, v13, 40 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[40 * v8] || v12 >= &v13[40 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1AFFCBA28();
  __break(1u);
  return result;
}

uint64_t sub_1AFD9F26C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1AFDA2460(0, &qword_1EB811998, (uint64_t)&type metadata for WatchlistWidgetEntity, MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1AFFCBA28();
  __break(1u);
  return result;
}

uint64_t sub_1AFD9F3F8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1AFDA2460(0, &qword_1EB81A0F0, MEMORY[0x1E4FBC150], MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 29;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8]) {
      memmove(v13, v14, 4 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[4 * v8] || v13 >= &v14[4 * v8])
  {
    memcpy(v13, v14, 4 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1AFFCBA28();
  __break(1u);
  return result;
}

uint64_t sub_1AFD9F578(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1AFDA2460(0, &qword_1EB81A0F8, MEMORY[0x1E4FBC1C8], MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1AFFCBA28();
  __break(1u);
  return result;
}

uint64_t sub_1AFD9F6F8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1AFDA2460(0, qword_1EB81B208, (uint64_t)&type metadata for YahooMultiQuoteResponse, MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8]) {
      memmove(v12, v13, 24 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1AFFCBA28();
  __break(1u);
  return result;
}

uint64_t sub_1AFD9F8A0(char a1, int64_t a2, char a3, void *a4, unint64_t *a5, uint64_t (*a6)(uint64_t), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v10 = a4[3];
    int64_t v11 = v10 >> 1;
    if ((uint64_t)(v10 >> 1) < a2)
    {
      if (v11 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v11 = v10 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v10 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v11 = a2;
      }
    }
  }
  else
  {
    int64_t v11 = a2;
  }
  uint64_t v12 = a4[2];
  if (v11 <= v12) {
    uint64_t v13 = a4[2];
  }
  else {
    uint64_t v13 = v11;
  }
  if (!v13)
  {
    uint64_t v17 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  sub_1AFDA21B0(0, a5, a6, MEMORY[0x1E4FBBE00]);
  uint64_t v14 = *(void *)(a7(0) - 8);
  uint64_t v15 = *(void *)(v14 + 72);
  unint64_t v16 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = (void *)swift_allocObject();
  size_t v18 = _swift_stdlib_malloc_size(v17);
  if (!v15)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v18 - v16 == 0x8000000000000000 && v15 == -1) {
    goto LABEL_34;
  }
  v17[2] = v12;
  v17[3] = 2 * ((uint64_t)(v18 - v16) / v15);
LABEL_19:
  uint64_t v20 = *(void *)(a7(0) - 8);
  unint64_t v21 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  uint64_t v22 = (char *)v17 + v21;
  unint64_t v23 = (char *)a4 + v21;
  if (a1)
  {
    if (v17 < a4 || v22 >= &v23[*(void *)(v20 + 72) * v12])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v17 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v24 = *(void *)(v20 + 72) * v12;
  uint64_t v25 = &v22[v24];
  unint64_t v26 = (unint64_t)&v23[v24];
  if (v23 >= v25 || (unint64_t)v22 >= v26)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v17;
  }
LABEL_36:
  uint64_t result = sub_1AFFCBA28();
  __break(1u);
  return result;
}

uint64_t sub_1AFD9FB04(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1AFDA2460(0, &qword_1EB81B200, (uint64_t)&type metadata for YahooQuoteDetailResponse, MEMORY[0x1E4FBBE00]);
    unint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1AFFCBA28();
  __break(1u);
  return result;
}

BOOL sub_1AFD9FC90(uint64_t a1, uint64_t a2)
{
  if ((sub_1AFFC9898() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = (int *)type metadata accessor for Chart.Entry(0);
  uint64_t v5 = v4[5];
  unint64_t v6 = (double *)(a1 + v5);
  char v7 = *(unsigned char *)(a1 + v5 + 8);
  uint64_t v8 = (double *)(a2 + v5);
  int v9 = *(unsigned __int8 *)(a2 + v5 + 8);
  if (v7)
  {
    if (!v9) {
      return 0;
    }
  }
  else
  {
    if (*v6 != *v8) {
      LOBYTE(v9) = 1;
    }
    if (v9) {
      return 0;
    }
  }
  uint64_t v10 = v4[6];
  int64_t v11 = (double *)(a1 + v10);
  char v12 = *(unsigned char *)(a1 + v10 + 8);
  uint64_t v13 = (double *)(a2 + v10);
  int v14 = *(unsigned __int8 *)(a2 + v10 + 8);
  if (v12)
  {
    if (!v14) {
      return 0;
    }
  }
  else
  {
    if (*v11 != *v13) {
      LOBYTE(v14) = 1;
    }
    if (v14) {
      return 0;
    }
  }
  uint64_t v15 = v4[7];
  unint64_t v16 = (double *)(a1 + v15);
  char v17 = *(unsigned char *)(a1 + v15 + 8);
  size_t v18 = (double *)(a2 + v15);
  int v19 = *(unsigned __int8 *)(a2 + v15 + 8);
  if (v17)
  {
    if (!v19) {
      return 0;
    }
  }
  else
  {
    if (*v16 != *v18) {
      LOBYTE(v19) = 1;
    }
    if (v19) {
      return 0;
    }
  }
  uint64_t v20 = v4[8];
  unint64_t v21 = (double *)(a1 + v20);
  char v22 = *(unsigned char *)(a1 + v20 + 8);
  unint64_t v23 = (double *)(a2 + v20);
  int v24 = *(unsigned __int8 *)(a2 + v20 + 8);
  if (v22)
  {
    if (!v24) {
      return 0;
    }
  }
  else
  {
    if (*v21 != *v23) {
      LOBYTE(v24) = 1;
    }
    if (v24) {
      return 0;
    }
  }
  uint64_t v25 = v4[9];
  unint64_t v26 = (double *)(a1 + v25);
  char v27 = *(unsigned char *)(a1 + v25 + 8);
  uint64_t v28 = (double *)(a2 + v25);
  char v29 = *(unsigned char *)(a2 + v25 + 8);
  if ((v27 & 1) == 0)
  {
    if (*v26 != *v28) {
      char v29 = 1;
    }
    return (v29 & 1) == 0;
  }
  return (v29 & 1) != 0;
}

unint64_t sub_1AFD9FDD0()
{
  unint64_t result = qword_1EB817A48;
  if (!qword_1EB817A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817A48);
  }
  return result;
}

uint64_t sub_1AFD9FE24(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

BOOL sub_1AFD9FE6C(uint64_t *a1, uint64_t *a2)
{
  sub_1AFD30DA8();
  MEMORY[0x1F4188790](v4);
  unint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  int v9 = (char *)&v24 - v8;
  if ((sub_1AFF22BD4(*a1, *a2) & 1) == 0) {
    return 0;
  }
  uint64_t v25 = type metadata accessor for Chart(0);
  uint64_t v10 = *(int *)(v25 + 20);
  uint64_t v11 = (uint64_t)a1 + v10;
  uint64_t v12 = (uint64_t)a2 + v10;
  sub_1AFFC98F8();
  int v24 = a1;
  sub_1AFD9FE24(&qword_1EB816CA8, MEMORY[0x1E4F27928]);
  char v13 = sub_1AFFCADD8();
  sub_1AFD9BB8C(v11, (uint64_t)v9, (uint64_t (*)(void))sub_1AFD30DA8);
  sub_1AFD9BB8C(v12, (uint64_t)v6, (uint64_t (*)(void))sub_1AFD30DA8);
  if ((v13 & 1) == 0)
  {
    sub_1AFD9D9B0((uint64_t)v6, (uint64_t (*)(void))sub_1AFD30DA8);
    sub_1AFD9D9B0((uint64_t)v9, (uint64_t (*)(void))sub_1AFD30DA8);
    return 0;
  }
  int v14 = v24;
  uint64_t v15 = (int *)v25;
  char v16 = sub_1AFFCADD8();
  sub_1AFD9D9B0((uint64_t)v6, (uint64_t (*)(void))sub_1AFD30DA8);
  sub_1AFD9D9B0((uint64_t)v9, (uint64_t (*)(void))sub_1AFD30DA8);
  if (v16)
  {
    uint64_t v17 = v15[6];
    size_t v18 = (double *)((char *)v14 + v17);
    char v19 = *((unsigned char *)v14 + v17 + 8);
    uint64_t v20 = (double *)((char *)a2 + v17);
    int v21 = *((unsigned __int8 *)a2 + v17 + 8);
    if (v19)
    {
      if (!v21) {
        return 0;
      }
    }
    else
    {
      if (*v18 != *v20) {
        LOBYTE(v21) = 1;
      }
      if (v21) {
        return 0;
      }
    }
    if (MEMORY[0x1B3E8BFD0]((char *)v14 + v15[7], (char *)a2 + v15[7]) & 1) != 0 && (sub_1AFFC9898()) {
      return sub_1AFF22EA4(*(uint64_t *)((char *)v14 + v15[9]), *(uint64_t *)((char *)a2 + v15[9]));
    }
  }
  return 0;
}

unint64_t sub_1AFDA00E8()
{
  unint64_t result = qword_1EB817A30;
  if (!qword_1EB817A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817A30);
  }
  return result;
}

uint64_t sub_1AFDA013C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1AFDA2460(255, &qword_1EB817FD0, (uint64_t)&type metadata for Chart.Feature, MEMORY[0x1E4FBB320]);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1AFDA01CC()
{
  unint64_t result = qword_1EB817A88;
  if (!qword_1EB817A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817A88);
  }
  return result;
}

uint64_t sub_1AFDA0220(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1AFDA21B0(255, &qword_1EB817FB8, type metadata accessor for Chart.Entry, MEMORY[0x1E4FBB320]);
    sub_1AFD9FE24(a2, (void (*)(uint64_t))type metadata accessor for Chart.Entry);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AFDA02E0(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1AFD30DA8();
    sub_1AFD9FE24(a2, MEMORY[0x1E4F27928]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AFDA0370(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1AFDA03D8()
{
  unint64_t result = qword_1EB817A98;
  if (!qword_1EB817A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817A98);
  }
  return result;
}

unint64_t sub_1AFDA0430()
{
  unint64_t result = qword_1E9AFA3D0;
  if (!qword_1E9AFA3D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFA3D0);
  }
  return result;
}

uint64_t *sub_1AFDA0484(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    sub_1AFFC8E48();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a3[5];
    int v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1AFFC98F8();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    sub_1AFFC8E38();
    v12(v9, v10, v11);
    sub_1AFD30DA8();
    v12(&v9[*(int *)(v13 + 36)], &v10[*(int *)(v13 + 36)], v11);
    uint64_t v14 = a3[6];
    uint64_t v15 = a3[7];
    char v16 = (char *)v7 + v14;
    uint64_t v17 = (char *)a2 + v14;
    *(void *)char v16 = *(void *)v17;
    v16[8] = v17[8];
    size_t v18 = (char *)v7 + v15;
    char v19 = (char *)a2 + v15;
    uint64_t v20 = sub_1AFFC9B88();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    v12((char *)v7 + a3[8], (char *)a2 + a3[8], v11);
    *(uint64_t *)((char *)v7 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    sub_1AFFC8E38();
  }
  return v7;
}

uint64_t sub_1AFDA0628(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_1AFFC98F8();
  unint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  sub_1AFD30DA8();
  v6(v4 + *(int *)(v7 + 36), v5);
  uint64_t v8 = a1 + a2[7];
  uint64_t v9 = sub_1AFFC9B88();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  v6(a1 + a2[8], v5);

  return swift_bridgeObjectRelease();
}

char *sub_1AFDA0738(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1AFFC98F8();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  sub_1AFFC8E38();
  v10(v7, v8, v9);
  sub_1AFD30DA8();
  v10(&v7[*(int *)(v11 + 36)], &v8[*(int *)(v11 + 36)], v9);
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = &a1[v12];
  uint64_t v15 = &a2[v12];
  *(void *)uint64_t v14 = *(void *)v15;
  v14[8] = v15[8];
  char v16 = &a1[v13];
  uint64_t v17 = &a2[v13];
  uint64_t v18 = sub_1AFFC9B88();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  v10(&a1[a3[8]], &a2[a3[8]], v9);
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  sub_1AFFC8E38();
  return a1;
}

char *sub_1AFDA0890(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1AFFC98F8();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  sub_1AFD30DA8();
  v10(&v7[*(int *)(v11 + 36)], &v8[*(int *)(v11 + 36)], v9);
  uint64_t v12 = a3[6];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  char v15 = v14[8];
  *(void *)uint64_t v13 = *(void *)v14;
  _OWORD v13[8] = v15;
  uint64_t v16 = a3[7];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v19 = sub_1AFFC9B88();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 24))(v17, v18, v19);
  v10(&a1[a3[8]], &a2[a3[8]], v9);
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_1AFDA09F8(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1AFFC98F8();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  sub_1AFD30DA8();
  v10(&v7[*(int *)(v11 + 36)], &v8[*(int *)(v11 + 36)], v9);
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = &a1[v12];
  char v15 = &a2[v12];
  *(void *)uint64_t v14 = *(void *)v15;
  v14[8] = v15[8];
  uint64_t v16 = &a1[v13];
  uint64_t v17 = &a2[v13];
  uint64_t v18 = sub_1AFFC9B88();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  v10(&a1[a3[8]], &a2[a3[8]], v9);
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  return a1;
}

char *sub_1AFDA0B3C(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1AFFC98F8();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40);
  v10(v7, v8, v9);
  sub_1AFD30DA8();
  v10(&v7[*(int *)(v11 + 36)], &v8[*(int *)(v11 + 36)], v9);
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = &a1[v12];
  char v15 = &a2[v12];
  *(void *)uint64_t v14 = *(void *)v15;
  v14[8] = v15[8];
  uint64_t v16 = &a1[v13];
  uint64_t v17 = &a2[v13];
  uint64_t v18 = sub_1AFFC9B88();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  v10(&a1[a3[8]], &a2[a3[8]], v9);
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AFDA0C90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1AFDA0CA4);
}

uint64_t sub_1AFDA0CA4(uint64_t *a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  sub_1AFD30DA8();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[5];
LABEL_9:
    uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
    return v13((char *)a1 + v11, a2, v9);
  }
  uint64_t v12 = sub_1AFFC9B88();
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[7];
    goto LABEL_9;
  }
  uint64_t v14 = sub_1AFFC98F8();
  char v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = (char *)a1 + a3[8];

  return v15(v17, a2, v16);
}

uint64_t sub_1AFDA0E1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1AFDA0E30);
}

char *sub_1AFDA0E30(char *result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)unint64_t result = (a2 - 1);
    return result;
  }
  sub_1AFD30DA8();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return (char *)v13(&v5[v11], a2, a2, v9);
  }
  uint64_t v12 = sub_1AFFC9B88();
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[7];
    goto LABEL_7;
  }
  uint64_t v14 = sub_1AFFC98F8();
  char v15 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = &v5[a4[8]];

  return (char *)v15(v17, a2, a2, v16);
}

void sub_1AFDA0FA8()
{
  sub_1AFD30DA8();
  if (v0 <= 0x3F)
  {
    sub_1AFFC9B88();
    if (v1 <= 0x3F)
    {
      sub_1AFFC98F8();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t *sub_1AFDA10C8(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1AFFC8E48();
  }
  else
  {
    uint64_t v7 = sub_1AFFC98F8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    *(void *)uint64_t v10 = *(void *)v11;
    v10[8] = v11[8];
    uint64_t v12 = (char *)a1 + v9;
    uint64_t v13 = (char *)a2 + v9;
    *(void *)uint64_t v12 = *(void *)v13;
    v12[8] = v13[8];
    uint64_t v14 = a3[7];
    uint64_t v15 = a3[8];
    uint64_t v16 = (char *)a1 + v14;
    uint64_t v17 = (char *)a2 + v14;
    *(void *)uint64_t v16 = *(void *)v17;
    v16[8] = v17[8];
    uint64_t v18 = (char *)a1 + v15;
    uint64_t v19 = (char *)a2 + v15;
    *(void *)uint64_t v18 = *(void *)v19;
    unsigned char v18[8] = v19[8];
    uint64_t v20 = a3[9];
    int v21 = (char *)a1 + v20;
    char v22 = (char *)a2 + v20;
    uint64_t v23 = *(void *)v22;
    _OWORD v21[8] = v22[8];
    *(void *)int v21 = v23;
  }
  return a1;
}

uint64_t sub_1AFDA120C(uint64_t a1)
{
  uint64_t v2 = sub_1AFFC98F8();
  int v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_1AFDA1270(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1AFFC98F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(void *)uint64_t v11 = *(void *)v12;
  *(unsigned char *)(v11 + 8) = *(unsigned char *)(v12 + 8);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(void *)uint64_t v15 = *(void *)v16;
  *(unsigned char *)(v15 + 8) = *(unsigned char *)(v16 + 8);
  uint64_t v17 = a1 + v14;
  uint64_t v18 = a2 + v14;
  *(void *)uint64_t v17 = *(void *)v18;
  *(unsigned char *)(v17 + 8) = *(unsigned char *)(v18 + 8);
  uint64_t v19 = a3[9];
  uint64_t v20 = a1 + v19;
  int v21 = (uint64_t *)(a2 + v19);
  uint64_t v22 = *v21;
  *(unsigned char *)(v20 + 8) = *((unsigned char *)v21 + 8);
  *(void *)uint64_t v20 = v22;
  return a1;
}

uint64_t sub_1AFDA1364(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1AFFC98F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(unsigned char *)(v9 + 8);
  *(void *)uint64_t v8 = *(void *)v9;
  *(unsigned char *)(v8 + 8) = v10;
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  char v14 = *(unsigned char *)(v13 + 8);
  *(void *)uint64_t v12 = *(void *)v13;
  *(unsigned char *)(v12 + 8) = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  char v18 = *(unsigned char *)(v17 + 8);
  *(void *)uint64_t v16 = *(void *)v17;
  *(unsigned char *)(v16 + 8) = v18;
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  char v22 = *(unsigned char *)(v21 + 8);
  *(void *)uint64_t v20 = *(void *)v21;
  *(unsigned char *)(v20 + 8) = v22;
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  char v26 = *(unsigned char *)(v25 + 8);
  *(void *)uint64_t v24 = *(void *)v25;
  *(unsigned char *)(v24 + 8) = v26;
  return a1;
}

uint64_t sub_1AFDA1460(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1AFFC98F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(void *)uint64_t v11 = *(void *)v12;
  *(unsigned char *)(v11 + 8) = *(unsigned char *)(v12 + 8);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(void *)uint64_t v15 = *(void *)v16;
  *(unsigned char *)(v15 + 8) = *(unsigned char *)(v16 + 8);
  uint64_t v17 = a1 + v14;
  uint64_t v18 = a2 + v14;
  *(void *)uint64_t v17 = *(void *)v18;
  *(unsigned char *)(v17 + 8) = *(unsigned char *)(v18 + 8);
  uint64_t v19 = a3[9];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = (uint64_t *)(a2 + v19);
  uint64_t v22 = *v21;
  *(unsigned char *)(v20 + 8) = *((unsigned char *)v21 + 8);
  *(void *)uint64_t v20 = v22;
  return a1;
}

uint64_t sub_1AFDA1554(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1AFFC98F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(void *)uint64_t v11 = *(void *)v12;
  *(unsigned char *)(v11 + 8) = *(unsigned char *)(v12 + 8);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(void *)uint64_t v15 = *(void *)v16;
  *(unsigned char *)(v15 + 8) = *(unsigned char *)(v16 + 8);
  uint64_t v17 = a1 + v14;
  uint64_t v18 = a2 + v14;
  *(void *)uint64_t v17 = *(void *)v18;
  *(unsigned char *)(v17 + 8) = *(unsigned char *)(v18 + 8);
  uint64_t v19 = a3[9];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = (uint64_t *)(a2 + v19);
  uint64_t v22 = *v21;
  *(unsigned char *)(v20 + 8) = *((unsigned char *)v21 + 8);
  *(void *)uint64_t v20 = v22;
  return a1;
}

uint64_t sub_1AFDA1648(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1AFDA165C);
}

uint64_t sub_1AFDA165C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1AFFC98F8();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_1AFDA16C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1AFDA16DC);
}

uint64_t sub_1AFDA16DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1AFFC98F8();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_1AFDA174C()
{
  uint64_t result = sub_1AFFC98F8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for Chart.Feature(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1AFDA1884);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for Chart.Feature()
{
  return &type metadata for Chart.Feature;
}

ValueMetadata *type metadata accessor for Chart.CodingKeys()
{
  return &type metadata for Chart.CodingKeys;
}

uint64_t getEnumTagSinglePayload for TopStoriesStyleConfiguration.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s10StocksCore5ChartV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFDA1A30);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Chart.Entry.CodingKeys()
{
  return &type metadata for Chart.Entry.CodingKeys;
}

unint64_t sub_1AFDA1A6C()
{
  unint64_t result = qword_1E9AFA3D8;
  if (!qword_1E9AFA3D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFA3D8);
  }
  return result;
}

unint64_t sub_1AFDA1AC4()
{
  unint64_t result = qword_1E9AFA3E0;
  if (!qword_1E9AFA3E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFA3E0);
  }
  return result;
}

unint64_t sub_1AFDA1B1C()
{
  unint64_t result = qword_1EB817A40;
  if (!qword_1EB817A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817A40);
  }
  return result;
}

unint64_t sub_1AFDA1B74()
{
  unint64_t result = qword_1EB817A38;
  if (!qword_1EB817A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817A38);
  }
  return result;
}

unint64_t sub_1AFDA1BCC()
{
  unint64_t result = qword_1EB817A58;
  if (!qword_1EB817A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817A58);
  }
  return result;
}

unint64_t sub_1AFDA1C24()
{
  unint64_t result = qword_1EB817A50;
  if (!qword_1EB817A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817A50);
  }
  return result;
}

uint64_t sub_1AFDA1C78(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x636E657265666572 && a2 == 0xED00006574614465;
  if (v2 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1852141679 && a2 == 0xE400000000000000 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65736F6C63 && a2 == 0xE500000000000000 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1751607656 && a2 == 0xE400000000000000 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 7827308 && a2 == 0xE300000000000000 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x656D756C6F76 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_1AFFCBCE8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_1AFDA1EE0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73656972746E65 && a2 == 0xE700000000000000;
  if (v2 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E615265746164 && a2 == 0xE900000000000065 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x73756F6976657270 && a2 == 0xED000065736F6C43 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x695474656B72616DLL && a2 == 0xEE00656E6F5A656DLL || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001AFFEF180 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7365727574616566 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_1AFFCBCE8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

void sub_1AFDA21B0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1AFDA2214()
{
  unint64_t result = qword_1EB817A90;
  if (!qword_1EB817A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817A90);
  }
  return result;
}

void sub_1AFDA2268()
{
  if (!qword_1E9AFA400)
  {
    type metadata accessor for SymbolEntity();
    sub_1AFD9FE24((unint64_t *)&qword_1EB816B20, (void (*)(uint64_t))type metadata accessor for SymbolEntity);
    unint64_t v0 = sub_1AFFC8A98();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9AFA400);
    }
  }
}

void sub_1AFDA22FC()
{
  if (!qword_1E9AFA408)
  {
    sub_1AFDA238C(255, &qword_1E9AFA410, (uint64_t (*)(void))sub_1AFD38AA0, (uint64_t)&type metadata for SymbolWidgetEntity, MEMORY[0x1E4F182A0]);
    unint64_t v0 = sub_1AFFCBC98();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9AFA408);
    }
  }
}

void sub_1AFDA238C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

void sub_1AFDA23F4()
{
  if (!qword_1EB817ED0)
  {
    unint64_t v0 = sub_1AFFCAD18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB817ED0);
    }
  }
}

void sub_1AFDA2460(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1AFDA24AC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1AFFCABC8();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v26 = v2;
  uint64_t v27 = v3;
  MEMORY[0x1F4188790](v2);
  uint64_t v25 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1AFFCB4A8();
  uint64_t v5 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1AFFCB488();
  MEMORY[0x1F4188790](v8);
  uint64_t v9 = sub_1AFFCAC18();
  uint64_t v23 = *(void *)(v9 - 8);
  uint64_t v24 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_DWORD *)(v0 + 16) = 0;
  uint64_t v12 = MEMORY[0x1E4FBC860];
  *(void *)(v0 + 24) = MEMORY[0x1E4FBC860];
  uint64_t v13 = v12;
  uint64_t v21 = sub_1AFD8F6AC(0, (unint64_t *)&qword_1EB819E68);
  sub_1AFFCABF8();
  aBlock[0] = v13;
  sub_1AFDA5DBC(&qword_1EB819E60, MEMORY[0x1E4FBCC10]);
  uint64_t v14 = (void (*)(uint64_t))MEMORY[0x1E4FBCC10];
  sub_1AFDA5D60(0, &qword_1EB819DE8, MEMORY[0x1E4FBCC10]);
  sub_1AFDA5E04((unint64_t *)&qword_1EB819DF0, &qword_1EB819DE8, v14);
  sub_1AFFCB738();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBCC58], v22);
  *(void *)(v0 + 32) = sub_1AFFCB4D8();
  uint64_t v15 = MEMORY[0x1E4FBC860];
  *(void *)(v1 + 40) = MEMORY[0x1E4FBC860];
  aBlock[4] = sub_1AFDA5DB4;
  aBlock[5] = v1;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1AFDB5104;
  aBlock[3] = &block_descriptor_5;
  uint64_t v16 = _Block_copy(aBlock);
  sub_1AFFC8E48();
  sub_1AFFCABE8();
  uint64_t v28 = v15;
  sub_1AFDA5DBC((unint64_t *)&unk_1EB819C20, MEMORY[0x1E4FBCB00]);
  uint64_t v17 = (void (*)(uint64_t))MEMORY[0x1E4FBCB00];
  sub_1AFDA5D60(0, (unint64_t *)&qword_1EB819DA0, MEMORY[0x1E4FBCB00]);
  sub_1AFDA5E04((unint64_t *)&qword_1EB819DB0, (unint64_t *)&qword_1EB819DA0, v17);
  uint64_t v19 = v25;
  uint64_t v18 = v26;
  sub_1AFFCB738();
  MEMORY[0x1B3E8D920](0, v11, v19, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v19, v18);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v11, v24);
  swift_release();
  return v1;
}

void sub_1AFDA2958(uint64_t a1)
{
  uint64_t v37 = MEMORY[0x1E4FBC860];
  uint64_t v1 = 51;
  sub_1AFD9DAD0(0, 51, 0);
  uint64_t v2 = 0;
  uint64_t v3 = v37;
  while (1)
  {
    uint64_t v4 = sub_1AFF99D74(0x500000001);
    uint64_t v6 = v5;
    uint64_t v7 = sub_1AFF99D74(0xF00000005);
    uint64_t v34 = v8;
    uint64_t v35 = v7;
    sub_1AFFCAFA8();
    sub_1AFFCAFA8();
    uint64_t v9 = qword_1EB810B40;
    sub_1AFFC8E38();
    if (v9 != -1) {
      swift_once();
    }
    uint64_t v10 = qword_1EB8319F0;
    if (*(void *)(qword_1EB8319F0 + 16))
    {
      sub_1AFFC8E38();
      unint64_t v11 = sub_1AFD79CC8(v4, v6);
      if (v12)
      {
        uint64_t v13 = (uint64_t *)(*(void *)(v10 + 56) + 16 * v11);
        uint64_t v14 = *v13;
        uint64_t v15 = v13[1];
        sub_1AFFC8E38();
        swift_bridgeObjectRelease();
        uint64_t v16 = v14;
        goto LABEL_9;
      }
      swift_bridgeObjectRelease();
    }
    sub_1AFFC8E38();
    uint64_t v16 = v4;
    uint64_t v15 = v6;
LABEL_9:
    uint64_t v17 = qword_1EB8319F8;
    uint64_t v18 = v4;
    uint64_t v19 = v6;
    if (*(void *)(qword_1EB8319F8 + 16))
    {
      uint64_t v20 = v16;
      sub_1AFFC8E38();
      unint64_t v21 = sub_1AFD79CC8(v4, v6);
      uint64_t v18 = v4;
      uint64_t v19 = v6;
      if (v22)
      {
        uint64_t v23 = (uint64_t *)(*(void *)(v17 + 56) + 16 * v21);
        uint64_t v18 = *v23;
        uint64_t v19 = v23[1];
        sub_1AFFC8E38();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      uint64_t v16 = v20;
    }
    uint64_t v24 = v3;
    unint64_t v26 = *(void *)(v3 + 16);
    unint64_t v25 = *(void *)(v3 + 24);
    if (v26 >= v25 >> 1)
    {
      uint64_t v32 = v16;
      sub_1AFD9DAD0(v25 > 1, v26 + 1, 1);
      uint64_t v16 = v32;
      uint64_t v24 = v3;
    }
    *(void *)(v24 + 16) = v26 + 1;
    uint64_t v27 = v24 + 136 * v26;
    *(void *)(v27 + 32) = 0x51414453414ELL;
    *(void *)(v27 + 40) = 0xE600000000000000;
    *(void *)(v27 + 48) = v4;
    *(void *)(v27 + 56) = v6;
    *(void *)(v27 + 64) = v35;
    *(void *)(v27 + 72) = v34;
    *(void *)(v27 + 80) = 0x51414453414ELL;
    *(void *)(v27 + 88) = 0xE600000000000000;
    *(unsigned char *)(v27 + 96) = 0;
    *(_DWORD *)(v27 + 97) = *(_DWORD *)v36;
    *(_DWORD *)(v27 + 100) = *(_DWORD *)&v36[3];
    *(void *)(v27 + 104) = v16;
    *(void *)(v27 + 112) = v15;
    *(void *)(v27 + 120) = v18;
    *(void *)(v27 + 128) = v19;
    *(_OWORD *)(v27 + 152) = 0u;
    *(_OWORD *)(v27 + 136) = 0u;
    if (v2 != 50) {
      break;
    }
    uint64_t v28 = 0;
LABEL_18:
    if (!--v1)
    {
      sub_1AFDA6110(0, &qword_1EB817FE8, (uint64_t)&type metadata for Stock, MEMORY[0x1E4FBB320]);
      sub_1AFDA5FB8();
      uint64_t v30 = sub_1AFFCB068();
      swift_release();
      os_unfair_lock_lock((os_unfair_lock_t)(a1 + 16));
      uint64_t v31 = *(void *)(a1 + 24);
      sub_1AFFC8E38();
      os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 16));
      sub_1AFF0F680(v30);
      os_unfair_lock_lock((os_unfair_lock_t)(a1 + 16));
      swift_bridgeObjectRelease();
      *(void *)(a1 + 24) = v31;
      os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 16));
      return;
    }
    uint64_t v3 = v24;
    BOOL v29 = v2 == 50;
    uint64_t v2 = v28;
    if (v29) {
      goto LABEL_24;
    }
  }
  uint64_t v28 = v2 + 1;
  if (!__OFADD__(v2, 1)) {
    goto LABEL_18;
  }
  __break(1u);
LABEL_24:
  __break(1u);
}

uint64_t sub_1AFDA2CE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = sub_1AFFCABC8();
  uint64_t v21 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1AFFCAC18();
  uint64_t v11 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = a2;
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = sub_1AFDA64D8;
  v15[3] = v14;
  v15[4] = a5;
  aBlock[4] = sub_1AFDA6168;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1AFDB5104;
  aBlock[3] = &block_descriptor_18;
  uint64_t v16 = _Block_copy(aBlock);
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFCABE8();
  uint64_t v22 = MEMORY[0x1E4FBC860];
  sub_1AFDA5DBC((unint64_t *)&unk_1EB819C20, MEMORY[0x1E4FBCB00]);
  uint64_t v17 = (void (*)(uint64_t))MEMORY[0x1E4FBCB00];
  sub_1AFDA5D60(0, (unint64_t *)&qword_1EB819DA0, MEMORY[0x1E4FBCB00]);
  sub_1AFDA5E04((unint64_t *)&qword_1EB819DB0, (unint64_t *)&qword_1EB819DA0, v17);
  sub_1AFFCB738();
  MEMORY[0x1B3E8D920](0, v13, v10, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v20);
  return swift_release();
}

uint64_t sub_1AFDA2FF4(long long *a1, uint64_t a2)
{
  uint64_t v5 = sub_1AFFCABC8();
  uint64_t v26 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_1AFFCAC18();
  uint64_t v8 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v11 = a1[7];
  long long v43 = a1[6];
  long long v44 = v11;
  uint64_t v45 = *((void *)a1 + 16);
  long long v12 = a1[3];
  long long v39 = a1[2];
  long long v40 = v12;
  long long v13 = a1[5];
  long long v41 = a1[4];
  long long v42 = v13;
  long long v14 = a1[1];
  long long v37 = *a1;
  long long v38 = v14;
  v24[1] = *(void *)(v2 + 32);
  uint64_t v15 = swift_allocObject();
  long long v16 = a1[4];
  *(_OWORD *)(v15 + 104) = a1[5];
  long long v17 = a1[7];
  *(_OWORD *)(v15 + 120) = a1[6];
  *(_OWORD *)(v15 + 136) = v17;
  long long v18 = *a1;
  *(_OWORD *)(v15 + 40) = a1[1];
  long long v19 = a1[3];
  *(_OWORD *)(v15 + 56) = a1[2];
  *(_OWORD *)(v15 + 72) = v19;
  *(_OWORD *)(v15 + 88) = v16;
  *(void *)(v15 + 16) = v2;
  uint64_t v20 = *((void *)a1 + 16);
  *(_OWORD *)(v15 + 24) = v18;
  *(void *)(v15 + 152) = v20;
  *(void *)(v15 + 160) = a2;
  *(void *)&long long v29 = sub_1AFDA6190;
  *((void *)&v29 + 1) = v15;
  *(void *)&long long v27 = MEMORY[0x1E4F143A8];
  *((void *)&v27 + 1) = 1107296256;
  *(void *)&long long v28 = sub_1AFDB5104;
  *((void *)&v28 + 1) = &block_descriptor_25;
  uint64_t v21 = _Block_copy(&v27);
  sub_1AFFC8E48();
  sub_1AFD76370((uint64_t)&v37);
  sub_1AFFCABE8();
  uint64_t v36 = MEMORY[0x1E4FBC860];
  sub_1AFDA5DBC((unint64_t *)&unk_1EB819C20, MEMORY[0x1E4FBCB00]);
  uint64_t v22 = (void (*)(uint64_t))MEMORY[0x1E4FBCB00];
  sub_1AFDA5D60(0, (unint64_t *)&qword_1EB819DA0, MEMORY[0x1E4FBCB00]);
  sub_1AFDA5E04((unint64_t *)&qword_1EB819DB0, (unint64_t *)&qword_1EB819DA0, v22);
  sub_1AFFCB738();
  MEMORY[0x1B3E8D920](0, v10, v7, v21);
  _Block_release(v21);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v25);
  swift_release();
  long long v33 = v43;
  long long v34 = v44;
  uint64_t v35 = v45;
  long long v29 = v39;
  long long v30 = v40;
  long long v31 = v41;
  long long v32 = v42;
  long long v27 = v37;
  long long v28 = v38;
  sub_1AFDA6110(0, &qword_1E9AFA328, (uint64_t)&type metadata for Stock, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  sub_1AFD76370((uint64_t)&v37);
  return sub_1AFFCA6F8();
}

uint64_t sub_1AFDA33A8(os_unfair_lock_s *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5 = a1;
  long long v6 = *(_OWORD *)(a2 + 112);
  long long v94 = *(_OWORD *)(a2 + 96);
  long long v95 = v6;
  uint64_t v96 = *(void *)(a2 + 128);
  long long v7 = *(_OWORD *)(a2 + 48);
  long long v90 = *(_OWORD *)(a2 + 32);
  long long v91 = v7;
  long long v8 = *(_OWORD *)(a2 + 80);
  long long v92 = *(_OWORD *)(a2 + 64);
  long long v93 = v8;
  long long v9 = *(_OWORD *)(a2 + 16);
  uint64_t v10 = a1 + 4;
  long long v88 = *(_OWORD *)a2;
  long long v89 = v9;
  os_unfair_lock_lock(a1 + 4);
  uint64_t v11 = *(void *)&v5[6]._os_unfair_lock_opaque;
  sub_1AFFC8E38();
  os_unfair_lock_unlock(v10);
  int64_t v12 = *(void *)(v11 + 16);
  uint64_t v13 = MEMORY[0x1E4FBC860];
  uint64_t v59 = v5;
  if (v12)
  {
    unint64_t v63 = a3;
    *(void *)&long long v79 = MEMORY[0x1E4FBC860];
    sub_1AFD9DA10(0, v12, 0);
    uint64_t v14 = v79;
    uint64_t v15 = (uint64_t *)(v11 + 56);
    do
    {
      uint64_t v17 = *(v15 - 1);
      uint64_t v16 = *v15;
      *(void *)&long long v79 = v14;
      unint64_t v19 = *(void *)(v14 + 16);
      unint64_t v18 = *(void *)(v14 + 24);
      uint64_t v20 = v14;
      sub_1AFFC8E38();
      uint64_t v14 = v20;
      if (v19 >= v18 >> 1)
      {
        sub_1AFD9DA10(v18 > 1, v19 + 1, 1);
        uint64_t v14 = v79;
      }
      *(void *)(v14 + 16) = v19 + 1;
      uint64_t v21 = v14 + 16 * v19;
      *(void *)(v21 + 32) = v17;
      *(void *)(v21 + 40) = v16;
      v15 += 17;
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease();
    a3 = v63;
    uint64_t v13 = MEMORY[0x1E4FBC860];
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  os_unfair_lock_lock(v10);
  unint64_t v22 = *(void *)&v5[6]._os_unfair_lock_opaque;
  sub_1AFFC8E38();
  os_unfair_lock_unlock(v10);
  unint64_t v23 = sub_1AFF9EF10(a2, v22);
  char v25 = v24;
  swift_bridgeObjectRelease();
  if ((v25 & 1) == 0)
  {
    os_unfair_lock_lock(v10);
    uint64_t v26 = *(void *)&v5[6]._os_unfair_lock_opaque;
    sub_1AFFC8E38();
    os_unfair_lock_unlock(v10);
    uint64_t v78 = v26;
    unint64_t v22 = (unint64_t)&v78;
    sub_1AFF9F20C(v23, (uint64_t)&v65);
    long long v85 = v71;
    long long v86 = v72;
    uint64_t v87 = v73;
    long long v81 = v67;
    long long v82 = v68;
    long long v83 = v69;
    long long v84 = v70;
    long long v79 = v65;
    long long v80 = v66;
    sub_1AFD76408((uint64_t)&v79);
    uint64_t v27 = v78;
    os_unfair_lock_lock(v10);
    swift_bridgeObjectRelease();
    *(void *)&v5[6]._os_unfair_lock_opaque = v27;
    os_unfair_lock_unlock(v10);
  }
  if ((a3 & 0x8000000000000000) != 0) {
    goto LABEL_34;
  }
  sub_1AFD76370(a2);
  os_unfair_lock_lock(v10);
  uint64_t v28 = *(void *)&v5[6]._os_unfair_lock_opaque;
  sub_1AFFC8E38();
  os_unfair_lock_unlock(v10);
  *(void *)&long long v65 = v28;
  if (*(void *)(v28 + 16) < a3)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  long long v85 = v94;
  long long v86 = v95;
  uint64_t v87 = v96;
  long long v81 = v90;
  long long v82 = v91;
  long long v83 = v92;
  long long v84 = v93;
  long long v79 = v88;
  long long v80 = v89;
  sub_1AFFB2C90(a3, a3, (uint64_t)&v79);
  uint64_t v29 = v65;
  os_unfair_lock_lock(v10);
  swift_bridgeObjectRelease();
  *(void *)&v5[6]._os_unfair_lock_opaque = v29;
  os_unfair_lock_unlock(v10);
  os_unfair_lock_lock(v10);
  uint64_t v30 = *(void *)&v5[6]._os_unfair_lock_opaque;
  sub_1AFFC8E38();
  os_unfair_lock_unlock(v10);
  int64_t v31 = *(void *)(v30 + 16);
  if (v31)
  {
    *(void *)&long long v65 = v13;
    sub_1AFD9DA10(0, v31, 0);
    uint64_t v32 = v65;
    long long v33 = (uint64_t *)(v30 + 56);
    do
    {
      uint64_t v35 = *(v33 - 1);
      uint64_t v34 = *v33;
      *(void *)&long long v65 = v32;
      unint64_t v37 = *(void *)(v32 + 16);
      unint64_t v36 = *(void *)(v32 + 24);
      sub_1AFFC8E38();
      if (v37 >= v36 >> 1)
      {
        sub_1AFD9DA10(v36 > 1, v37 + 1, 1);
        uint64_t v32 = v65;
      }
      *(void *)(v32 + 16) = v37 + 1;
      uint64_t v38 = v32 + 16 * v37;
      *(void *)(v38 + 32) = v35;
      *(void *)(v38 + 40) = v34;
      v33 += 17;
      --v31;
    }
    while (v31);
    swift_bridgeObjectRelease();
    uint64_t v5 = v59;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  unint64_t v22 = *(void *)&v5[10]._os_unfair_lock_opaque;
  if (v22 >> 62)
  {
LABEL_36:
    sub_1AFFC8E38();
    uint64_t result = sub_1AFFCB9C8();
    uint64_t v61 = result;
    if (result) {
      goto LABEL_21;
    }
LABEL_37:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  uint64_t v39 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = sub_1AFFC8E38();
  uint64_t v61 = v39;
  if (!v39) {
    goto LABEL_37;
  }
LABEL_21:
  if (v61 >= 1)
  {
    uint64_t v41 = 0;
    unint64_t v60 = v22 & 0xC000000000000001;
    unint64_t v58 = v22;
    while (1)
    {
      if (v60)
      {
        uint64_t v42 = MEMORY[0x1B3E8DC70](v41, v22);
      }
      else
      {
        uint64_t v42 = *(void *)(v22 + 8 * v41 + 32);
        sub_1AFFC8E48();
      }
      if (MEMORY[0x1B3E8F200](v42 + 16))
      {
        uint64_t v64 = *(void *)(v42 + 24);
        uint64_t ObjectType = swift_getObjectType();
        *((void *)&v66 + 1) = type metadata accessor for StubWatchlistService();
        *(void *)&long long v67 = &off_1F08735F8;
        *(void *)&long long v65 = v5;
        id v43 = objc_allocWithZone((Class)SCWWatchlistDiff);
        sub_1AFFC8E48();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        long long v44 = (void *)sub_1AFFCB1B8();
        swift_bridgeObjectRelease();
        uint64_t v45 = (void *)sub_1AFFCB1B8();
        swift_bridgeObjectRelease();
        id v46 = objc_msgSend(v43, sel_initWithOldSymbols_newSymbols_updatedName_updatedSortState_updatedSortOrderState_updatedDisplayState_, v44, v45, 0, 0, 0, 0);

        uint64_t v75 = 1953719636;
        unint64_t v76 = 0xE400000000000000;
        id v77 = v46;
        sub_1AFDA61A0();
        uint64_t v47 = (void *)sub_1AFFCBA08();
        uint64_t v49 = v75;
        uint64_t v48 = v76;
        uint64_t v50 = v77;
        id v51 = v46;
        sub_1AFFC8E38();
        uint64_t v5 = v50;
        unint64_t v22 = (unint64_t)v47;
        unint64_t v52 = sub_1AFD79CC8(v49, v48);
        if (v53)
        {
          __break(1u);
LABEL_33:
          __break(1u);
LABEL_34:
          __break(1u);
          goto LABEL_35;
        }
        v47[(v52 >> 6) + 8] |= 1 << v52;
        uint64_t v54 = (uint64_t *)(v47[6] + 16 * v52);
        *uint64_t v54 = v49;
        v54[1] = v48;
        *(void *)(v47[7] + 8 * v52) = v5;
        uint64_t v55 = v47[2];
        BOOL v56 = __OFADD__(v55, 1);
        uint64_t v57 = v55 + 1;
        if (v56) {
          goto LABEL_33;
        }
        v47[2] = v57;
        sub_1AFDA6218();
        swift_arrayDestroy();

        uint64_t v74 = v47;
        (*(void (**)(long long *, void **, uint64_t))(v64 + 8))(&v65, &v74, ObjectType);
        swift_release();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v65);
        swift_unknownObjectRelease();
        swift_release();
        uint64_t v5 = v59;
        unint64_t v22 = v58;
      }
      else
      {
        swift_release();
      }
      if (v61 == ++v41) {
        goto LABEL_37;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1AFDA39F4(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a1;
  uint64_t v5 = sub_1AFFCABC8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  long long v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1AFFCAC18();
  uint64_t v9 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void *)(v2 + 32);
  int64_t v12 = (void *)swift_allocObject();
  void v12[2] = v2;
  uint64_t v12[3] = a1;
  uint64_t v17 = a2;
  v12[4] = a2;
  uint64_t v26 = sub_1AFDA62D0;
  uint64_t v27 = v12;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v23 = 1107296256;
  char v24 = sub_1AFDB5104;
  char v25 = &block_descriptor_31;
  uint64_t v13 = _Block_copy(&aBlock);
  sub_1AFFC8E48();
  sub_1AFFC8E38();
  sub_1AFFCABE8();
  uint64_t v21 = MEMORY[0x1E4FBC860];
  sub_1AFDA5DBC((unint64_t *)&unk_1EB819C20, MEMORY[0x1E4FBCB00]);
  uint64_t v14 = (void (*)(uint64_t))MEMORY[0x1E4FBCB00];
  sub_1AFDA5D60(0, (unint64_t *)&qword_1EB819DA0, MEMORY[0x1E4FBCB00]);
  sub_1AFDA5E04((unint64_t *)&qword_1EB819DB0, (unint64_t *)&qword_1EB819DA0, v14);
  sub_1AFFCB738();
  MEMORY[0x1B3E8D920](0, v11, v8, v13);
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v20);
  swift_release();
  uint64_t aBlock = v19;
  uint64_t v23 = v17;
  sub_1AFDA6110(0, &qword_1EB811150, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FAB088]);
  swift_allocObject();
  sub_1AFFC8E38();
  return sub_1AFFCA6F8();
}

uint64_t sub_1AFDA3D30(os_unfair_lock_s *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  uint64_t v6 = a1 + 4;
  os_unfair_lock_lock(a1 + 4);
  uint64_t v7 = *(void *)&v5[6]._os_unfair_lock_opaque;
  sub_1AFFC8E38();
  os_unfair_lock_unlock(v6);
  int64_t v8 = *(void *)(v7 + 16);
  uint64_t v55 = v5;
  if (v8)
  {
    os_unfair_lock_t lock = v6;
    v61[0] = MEMORY[0x1E4FBC860];
    sub_1AFD9DA10(0, v8, 0);
    uint64_t v9 = v61[0];
    uint64_t v10 = (uint64_t *)(v7 + 56);
    do
    {
      uint64_t v11 = *(v10 - 1);
      uint64_t v12 = *v10;
      v61[0] = v9;
      unint64_t v13 = *(void *)(v9 + 16);
      unint64_t v14 = *(void *)(v9 + 24);
      sub_1AFFC8E38();
      if (v13 >= v14 >> 1)
      {
        sub_1AFD9DA10(v14 > 1, v13 + 1, 1);
        uint64_t v9 = v61[0];
      }
      *(void *)(v9 + 16) = v13 + 1;
      uint64_t v15 = v9 + 16 * v13;
      *(void *)(v15 + 32) = v11;
      *(void *)(v15 + 40) = v12;
      v10 += 17;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
    uint64_t v5 = v55;
    uint64_t v6 = lock;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  os_unfair_lock_lock(v6);
  uint64_t v16 = *(void *)&v5[6]._os_unfair_lock_opaque;
  sub_1AFFC8E38();
  os_unfair_lock_unlock(v6);
  uint64_t v17 = *(void *)(v16 + 16);
  if (v17)
  {
    uint64_t v18 = (void *)(v16 + 56);
    while (1)
    {
      BOOL v19 = *(v18 - 1) == a2 && *v18 == a3;
      if (v19 || (sub_1AFFCBCE8() & 1) != 0) {
        break;
      }
      v18 += 17;
      if (!--v17) {
        goto LABEL_16;
      }
    }
    swift_bridgeObjectRelease();
    os_unfair_lock_lock(v6);
    uint64_t v21 = *(void *)&v5[6]._os_unfair_lock_opaque;
    sub_1AFFC8E38();
    os_unfair_lock_unlock(v6);
    unint64_t v22 = sub_1AFDA62DC(v21, a2, a3);
    char v24 = v23;
    swift_bridgeObjectRelease();
    if ((v24 & 1) == 0)
    {
      os_unfair_lock_lock(v6);
      uint64_t v25 = *(void *)&v5[6]._os_unfair_lock_opaque;
      sub_1AFFC8E38();
      os_unfair_lock_unlock(v6);
      uint64_t v66 = v25;
      sub_1AFF9F20C(v22, (uint64_t)v61);
      sub_1AFD76408((uint64_t)v61);
      uint64_t v26 = v66;
      os_unfair_lock_lock(v6);
      swift_bridgeObjectRelease();
      *(void *)&v5[6]._os_unfair_lock_opaque = v26;
      os_unfair_lock_unlock(v6);
    }
    os_unfair_lock_lock(v6);
    uint64_t v27 = *(void *)&v5[6]._os_unfair_lock_opaque;
    sub_1AFFC8E38();
    os_unfair_lock_unlock(v6);
    int64_t v28 = *(void *)(v27 + 16);
    if (v28)
    {
      v61[0] = MEMORY[0x1E4FBC860];
      sub_1AFD9DA10(0, v28, 0);
      uint64_t v29 = v61[0];
      uint64_t v30 = (uint64_t *)(v27 + 56);
      do
      {
        uint64_t v32 = *(v30 - 1);
        uint64_t v31 = *v30;
        v61[0] = v29;
        unint64_t v34 = *(void *)(v29 + 16);
        unint64_t v33 = *(void *)(v29 + 24);
        sub_1AFFC8E38();
        if (v34 >= v33 >> 1)
        {
          sub_1AFD9DA10(v33 > 1, v34 + 1, 1);
          uint64_t v29 = v61[0];
        }
        *(void *)(v29 + 16) = v34 + 1;
        uint64_t v35 = v29 + 16 * v34;
        *(void *)(v35 + 32) = v32;
        *(void *)(v35 + 40) = v31;
        v30 += 17;
        --v28;
      }
      while (v28);
      swift_bridgeObjectRelease();
      uint64_t v5 = v55;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    swift_beginAccess();
    unint64_t v36 = *(void *)&v5[10]._os_unfair_lock_opaque;
    if (v36 >> 62) {
      goto LABEL_43;
    }
    uint64_t v37 = *(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = sub_1AFFC8E38();
    uint64_t v57 = v37;
    if (!v37)
    {
LABEL_44:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
LABEL_30:
    if (v57 >= 1)
    {
      uint64_t v38 = 0;
      unint64_t v56 = v36 & 0xC000000000000001;
      uint64_t v54 = (void *)v36;
      while (1)
      {
        if (v56)
        {
          uint64_t v39 = MEMORY[0x1B3E8DC70](v38, v36);
        }
        else
        {
          uint64_t v39 = *(void *)(v36 + 8 * v38 + 32);
          sub_1AFFC8E48();
        }
        if (MEMORY[0x1B3E8F200](v39 + 16))
        {
          os_unfair_lock_t locka = *(os_unfair_lock_t *)(v39 + 24);
          uint64_t ObjectType = swift_getObjectType();
          v61[3] = type metadata accessor for StubWatchlistService();
          v61[4] = &off_1F08735F8;
          v61[0] = v5;
          id v40 = objc_allocWithZone((Class)SCWWatchlistDiff);
          sub_1AFFC8E48();
          sub_1AFFC8E38();
          sub_1AFFC8E38();
          uint64_t v41 = (void *)sub_1AFFCB1B8();
          swift_bridgeObjectRelease();
          uint64_t v42 = (void *)sub_1AFFCB1B8();
          swift_bridgeObjectRelease();
          id v43 = objc_msgSend(v40, sel_initWithOldSymbols_newSymbols_updatedName_updatedSortState_updatedSortOrderState_updatedDisplayState_, v41, v42, 0, 0, 0, 0);

          uint64_t v63 = 1953719636;
          unint64_t v64 = 0xE400000000000000;
          id v65 = v43;
          sub_1AFDA61A0();
          long long v44 = (void *)sub_1AFFCBA08();
          uint64_t v46 = v63;
          uint64_t v45 = v64;
          uint64_t v47 = v65;
          sub_1AFFC8E38();
          uint64_t v5 = v47;
          unint64_t v36 = (unint64_t)v44;
          unint64_t v48 = sub_1AFD79CC8(v46, v45);
          if (v49)
          {
            __break(1u);
LABEL_42:
            __break(1u);
LABEL_43:
            sub_1AFFC8E38();
            uint64_t result = sub_1AFFCB9C8();
            uint64_t v57 = result;
            if (!result) {
              goto LABEL_44;
            }
            goto LABEL_30;
          }
          v44[(v48 >> 6) + 8] |= 1 << v48;
          uint64_t v50 = (uint64_t *)(v44[6] + 16 * v48);
          uint64_t *v50 = v46;
          v50[1] = v45;
          *(void *)(v44[7] + 8 * v48) = v5;
          uint64_t v51 = v44[2];
          BOOL v52 = __OFADD__(v51, 1);
          uint64_t v53 = v51 + 1;
          if (v52) {
            goto LABEL_42;
          }
          v44[2] = v53;
          sub_1AFDA6218();
          swift_arrayDestroy();
          uint64_t v62 = v44;
          (*(void (**)(void *, void **, uint64_t))&locka[2]._os_unfair_lock_opaque)(v61, &v62, ObjectType);
          swift_release();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v61);
          swift_unknownObjectRelease();
          swift_release();
          unint64_t v36 = (unint64_t)v54;
          uint64_t v5 = v55;
        }
        else
        {
          swift_release();
        }
        if (v57 == ++v38) {
          goto LABEL_44;
        }
      }
    }
    __break(1u);
  }
  else
  {
LABEL_16:
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1AFDA4310(long long *a1)
{
  uint64_t v3 = sub_1AFFCABC8();
  uint64_t v23 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1AFFCAC18();
  uint64_t v6 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  int64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v9 = a1[7];
  long long v40 = a1[6];
  long long v41 = v9;
  uint64_t v42 = *((void *)a1 + 16);
  long long v10 = a1[3];
  long long v36 = a1[2];
  long long v37 = v10;
  long long v11 = a1[5];
  long long v38 = a1[4];
  long long v39 = v11;
  long long v12 = a1[1];
  long long v34 = *a1;
  long long v35 = v12;
  v21[1] = *(void *)(v1 + 32);
  uint64_t v13 = swift_allocObject();
  long long v14 = a1[4];
  *(_OWORD *)(v13 + 104) = a1[5];
  long long v15 = a1[7];
  *(_OWORD *)(v13 + 120) = a1[6];
  *(_OWORD *)(v13 + 136) = v15;
  long long v16 = *a1;
  *(_OWORD *)(v13 + 40) = a1[1];
  long long v17 = a1[3];
  *(_OWORD *)(v13 + 56) = a1[2];
  *(_OWORD *)(v13 + 72) = v17;
  *(_OWORD *)(v13 + 88) = v14;
  *(void *)(v13 + 16) = v1;
  *(void *)(v13 + 152) = *((void *)a1 + 16);
  *(_OWORD *)(v13 + 24) = v16;
  *(void *)&long long v26 = sub_1AFDA63FC;
  *((void *)&v26 + 1) = v13;
  *(void *)&long long v24 = MEMORY[0x1E4F143A8];
  *((void *)&v24 + 1) = 1107296256;
  *(void *)&long long v25 = sub_1AFDB5104;
  *((void *)&v25 + 1) = &block_descriptor_37;
  uint64_t v18 = _Block_copy(&v24);
  sub_1AFFC8E48();
  sub_1AFD76370((uint64_t)&v34);
  sub_1AFFCABE8();
  uint64_t v33 = MEMORY[0x1E4FBC860];
  sub_1AFDA5DBC((unint64_t *)&unk_1EB819C20, MEMORY[0x1E4FBCB00]);
  BOOL v19 = (void (*)(uint64_t))MEMORY[0x1E4FBCB00];
  sub_1AFDA5D60(0, (unint64_t *)&qword_1EB819DA0, MEMORY[0x1E4FBCB00]);
  sub_1AFDA5E04((unint64_t *)&qword_1EB819DB0, (unint64_t *)&qword_1EB819DA0, v19);
  sub_1AFFCB738();
  MEMORY[0x1B3E8D920](0, v8, v5, v18);
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v22);
  swift_release();
  long long v30 = v40;
  long long v31 = v41;
  uint64_t v32 = v42;
  long long v26 = v36;
  long long v27 = v37;
  long long v28 = v38;
  long long v29 = v39;
  long long v24 = v34;
  long long v25 = v35;
  sub_1AFDA6110(0, &qword_1E9AFA328, (uint64_t)&type metadata for Stock, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  sub_1AFD76370((uint64_t)&v34);
  return sub_1AFFCA6F8();
}

uint64_t sub_1AFDA46C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + 16;
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 16));
  uint64_t v52 = a1;
  uint64_t v5 = *(void *)(a1 + 24);
  sub_1AFFC8E38();
  os_unfair_lock_unlock((os_unfair_lock_t)v4);
  int64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = MEMORY[0x1E4FBC860];
  if (v6)
  {
    uint64_t v55 = v4;
    v61[0] = MEMORY[0x1E4FBC860];
    sub_1AFD9DA10(0, v6, 0);
    uint64_t v8 = v61[0];
    long long v9 = (uint64_t *)(v5 + 56);
    do
    {
      uint64_t v11 = *(v9 - 1);
      uint64_t v10 = *v9;
      v61[0] = v8;
      unint64_t v13 = *(void *)(v8 + 16);
      unint64_t v12 = *(void *)(v8 + 24);
      sub_1AFFC8E38();
      if (v13 >= v12 >> 1)
      {
        sub_1AFD9DA10(v12 > 1, v13 + 1, 1);
        uint64_t v8 = v61[0];
      }
      *(void *)(v8 + 16) = v13 + 1;
      uint64_t v14 = v8 + 16 * v13;
      *(void *)(v14 + 32) = v11;
      *(void *)(v14 + 40) = v10;
      v9 += 17;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    uint64_t v4 = v55;
    uint64_t v7 = MEMORY[0x1E4FBC860];
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_1AFD76370(a2);
  os_unfair_lock_lock((os_unfair_lock_t)v4);
  long long v15 = *(void **)(v52 + 24);
  sub_1AFFC8E38();
  os_unfair_lock_unlock((os_unfair_lock_t)v4);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    goto LABEL_33;
  }
  while (1)
  {
    unint64_t v17 = v15[2];
    unint64_t v16 = v15[3];
    if (v17 >= v16 >> 1) {
      long long v15 = sub_1AFD35574((void *)(v16 > 1), v17 + 1, 1, v15);
    }
    v15[2] = v17 + 1;
    uint64_t v18 = &v15[17 * v17];
    *((_OWORD *)v18 + 2) = *(_OWORD *)a2;
    long long v19 = *(_OWORD *)(a2 + 16);
    long long v20 = *(_OWORD *)(a2 + 32);
    long long v21 = *(_OWORD *)(a2 + 64);
    *((_OWORD *)v18 + 5) = *(_OWORD *)(a2 + 48);
    *((_OWORD *)v18 + 6) = v21;
    *((_OWORD *)v18 + 3) = v19;
    *((_OWORD *)v18 + 4) = v20;
    long long v22 = *(_OWORD *)(a2 + 80);
    long long v23 = *(_OWORD *)(a2 + 96);
    long long v24 = *(_OWORD *)(a2 + 112);
    v18[20] = *(void *)(a2 + 128);
    *((_OWORD *)v18 + 8) = v23;
    *((_OWORD *)v18 + 9) = v24;
    *((_OWORD *)v18 + 7) = v22;
    os_unfair_lock_lock((os_unfair_lock_t)v4);
    swift_bridgeObjectRelease();
    *(void *)(v52 + 24) = v15;
    os_unfair_lock_unlock((os_unfair_lock_t)v4);
    os_unfair_lock_lock((os_unfair_lock_t)v4);
    uint64_t v25 = *(void *)(v52 + 24);
    sub_1AFFC8E38();
    os_unfair_lock_unlock((os_unfair_lock_t)v4);
    int64_t v26 = *(void *)(v25 + 16);
    if (v26)
    {
      v61[0] = v7;
      sub_1AFD9DA10(0, v26, 0);
      uint64_t v4 = v61[0];
      long long v27 = (uint64_t *)(v25 + 56);
      do
      {
        uint64_t v29 = *(v27 - 1);
        uint64_t v28 = *v27;
        v61[0] = v4;
        unint64_t v31 = *(void *)(v4 + 16);
        unint64_t v30 = *(void *)(v4 + 24);
        sub_1AFFC8E38();
        if (v31 >= v30 >> 1)
        {
          sub_1AFD9DA10(v30 > 1, v31 + 1, 1);
          uint64_t v4 = v61[0];
        }
        *(void *)(v4 + 16) = v31 + 1;
        uint64_t v32 = v4 + 16 * v31;
        *(void *)(v32 + 32) = v29;
        *(void *)(v32 + 40) = v28;
        v27 += 17;
        --v26;
      }
      while (v26);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v4 = MEMORY[0x1E4FBC860];
    }
    swift_beginAccess();
    unint64_t v33 = *(void *)(v52 + 40);
    if (v33 >> 62)
    {
      sub_1AFFC8E38();
      uint64_t result = sub_1AFFCB9C8();
      uint64_t v54 = result;
      if (!result)
      {
LABEL_35:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
    }
    else
    {
      uint64_t v34 = *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = sub_1AFFC8E38();
      uint64_t v54 = v34;
      if (!v34) {
        goto LABEL_35;
      }
    }
    if (v54 < 1) {
      break;
    }
    uint64_t v7 = 0;
    unint64_t v53 = v33 & 0xC000000000000001;
    unint64_t v51 = v33;
    while (1)
    {
      if (v53)
      {
        uint64_t v36 = MEMORY[0x1B3E8DC70](v7, v33);
      }
      else
      {
        uint64_t v36 = *(void *)(v33 + 8 * v7 + 32);
        sub_1AFFC8E48();
      }
      if (!MEMORY[0x1B3E8F200](v36 + 16))
      {
        swift_release();
        goto LABEL_23;
      }
      uint64_t v37 = *(void *)(v36 + 24);
      uint64_t ObjectType = swift_getObjectType();
      v61[3] = type metadata accessor for StubWatchlistService();
      v61[4] = &off_1F08735F8;
      v61[0] = v52;
      id v38 = objc_allocWithZone((Class)SCWWatchlistDiff);
      sub_1AFFC8E48();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      long long v39 = (void *)sub_1AFFCB1B8();
      swift_bridgeObjectRelease();
      long long v40 = (void *)sub_1AFFCB1B8();
      swift_bridgeObjectRelease();
      id v41 = objc_msgSend(v38, sel_initWithOldSymbols_newSymbols_updatedName_updatedSortState_updatedSortOrderState_updatedDisplayState_, v39, v40, 0, 0, 0, 0);

      uint64_t v58 = 1953719636;
      unint64_t v59 = 0xE400000000000000;
      id v60 = v41;
      sub_1AFDA61A0();
      uint64_t v42 = (void *)sub_1AFFCBA08();
      a2 = v58;
      uint64_t v43 = v59;
      long long v44 = v60;
      sub_1AFFC8E38();
      long long v15 = v44;
      unint64_t v45 = sub_1AFD79CC8(a2, v43);
      if (v46) {
        break;
      }
      v42[(v45 >> 6) + 8] |= 1 << v45;
      uint64_t v47 = (uint64_t *)(v42[6] + 16 * v45);
      *uint64_t v47 = a2;
      v47[1] = v43;
      *(void *)(v42[7] + 8 * v45) = v15;
      uint64_t v48 = v42[2];
      BOOL v49 = __OFADD__(v48, 1);
      uint64_t v50 = v48 + 1;
      if (v49) {
        goto LABEL_32;
      }
      v42[2] = v50;
      sub_1AFDA6218();
      swift_arrayDestroy();
      uint64_t v57 = v42;
      (*(void (**)(void *, void **, uint64_t, uint64_t))(v37 + 8))(v61, &v57, ObjectType, v37);
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v61);
      swift_unknownObjectRelease();
      swift_release();
      unint64_t v33 = v51;
LABEL_23:
      if (v54 == ++v7) {
        goto LABEL_35;
      }
    }
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    long long v15 = sub_1AFD35574(0, v15[2] + 1, 1, v15);
  }
  __break(1u);
  return result;
}

uint64_t sub_1AFDA4C4C()
{
  return sub_1AFFCA758();
}

uint64_t sub_1AFDA4CD8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v2 = *(void *)(a1 + 24);
  *a2 = v3;
  a2[1] = v2;
  return sub_1AFFC8E38();
}

uint64_t sub_1AFDA4CF8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  sub_1AFDA6110(0, &qword_1EB818398, (uint64_t)&type metadata for Watchlist, MEMORY[0x1E4FBBE00]);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1AFFD05F0;
  uint64_t v5 = sub_1AFFCAE98();
  *(void *)(v4 + 32) = 0x6F626D795320794DLL;
  *(void *)(v4 + 40) = 0xEA0000000000736CLL;
  *(void *)(v4 + 48) = v3;
  *(void *)(v4 + 56) = v5;
  *(void *)(v4 + 64) = v6;
  *(_WORD *)(v4 + 72) = 160;
  *a2 = v4;
  return sub_1AFFC8E38();
}

uint64_t sub_1AFDA4DBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = sub_1AFFCABC8();
  uint64_t v21 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1AFFCAC18();
  uint64_t v11 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  unint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = a2;
  long long v15 = (void *)swift_allocObject();
  v15[2] = sub_1AFD47F4C;
  v15[3] = v14;
  v15[4] = a5;
  aBlock[4] = sub_1AFDA64D4;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1AFDB5104;
  aBlock[3] = &block_descriptor_8;
  unint64_t v16 = _Block_copy(aBlock);
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFCABE8();
  uint64_t v22 = MEMORY[0x1E4FBC860];
  sub_1AFDA5DBC((unint64_t *)&unk_1EB819C20, MEMORY[0x1E4FBCB00]);
  unint64_t v17 = (void (*)(uint64_t))MEMORY[0x1E4FBCB00];
  sub_1AFDA5D60(0, (unint64_t *)&qword_1EB819DA0, MEMORY[0x1E4FBCB00]);
  sub_1AFDA5E04((unint64_t *)&qword_1EB819DB0, (unint64_t *)&qword_1EB819DA0, v17);
  sub_1AFFCB738();
  MEMORY[0x1B3E8D920](0, v13, v10, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v20);
  return swift_release();
}

uint64_t sub_1AFDA50C8(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (os_unfair_lock_s *)(a3 + 16);
  os_unfair_lock_lock((os_unfair_lock_t)(a3 + 16));
  uint64_t v6 = *(void *)(a3 + 24);
  sub_1AFFC8E38();
  os_unfair_lock_unlock(v5);
  a1(v6);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFDA5138(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  type metadata accessor for WatchlistServiceObserverProxy();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v5 + 24) = a2;
  swift_unknownObjectWeakAssign();
  uint64_t v6 = (uint64_t *)(v3 + 40);
  swift_beginAccess();
  uint64_t v7 = sub_1AFFC8E48();
  MEMORY[0x1B3E8D5F0](v7);
  if (*(void *)((*(void *)(v3 + 40) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v3 + 40) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    sub_1AFFCB228();
  sub_1AFFCB278();
  sub_1AFFCB1E8();
  swift_endAccess();
  uint64_t v8 = *v6;
  uint64_t v15 = MEMORY[0x1E4FBC860];
  if (!((unint64_t)*v6 >> 62))
  {
    uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = sub_1AFFC8E38();
    if (v9) {
      goto LABEL_5;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    uint64_t v14 = MEMORY[0x1E4FBC860];
LABEL_17:
    swift_release();
    *uint64_t v6 = v14;
    return swift_bridgeObjectRelease();
  }
  sub_1AFFC8E38();
  uint64_t result = sub_1AFFCB9C8();
  uint64_t v9 = result;
  if (!result) {
    goto LABEL_16;
  }
LABEL_5:
  if (v9 >= 1)
  {
    for (uint64_t i = 0; i != v9; ++i)
    {
      if ((v8 & 0xC000000000000001) != 0)
      {
        uint64_t v12 = MEMORY[0x1B3E8DC70](i, v8);
      }
      else
      {
        uint64_t v12 = *(void *)(v8 + 8 * i + 32);
        sub_1AFFC8E48();
      }
      uint64_t v13 = MEMORY[0x1B3E8F200](v12 + 16);
      swift_unknownObjectRelease();
      if (v13)
      {
        sub_1AFFCB888();
        sub_1AFFCB8C8();
        sub_1AFFCB8D8();
        sub_1AFFCB898();
      }
      else
      {
        swift_release();
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v14 = v15;
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

uint64_t sub_1AFDA5354()
{
  sub_1AFDA6408(v0 + 16);

  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StubWatchlistService()
{
  return self;
}

void sub_1AFDA53C0()
{
  if (MEMORY[0x1E4FBC8F0]) {
    sub_1AFDA6034(0, &qword_1E9AFA418, &qword_1EB817FE8, (uint64_t)&type metadata for Stock, MEMORY[0x1E4FBCDD8]);
  }
}

uint64_t sub_1AFDA5428(long long *a1)
{
  return sub_1AFDA4310(a1);
}

uint64_t sub_1AFDA544C(uint64_t a1, uint64_t a2)
{
  return sub_1AFDA39F4(a1, a2);
}

uint64_t sub_1AFDA5470(long long *a1, uint64_t a2)
{
  return sub_1AFDA2FF4(a1, a2);
}

uint64_t sub_1AFDA5494()
{
  return sub_1AFFCA6F8();
}

void sub_1AFDA5514()
{
}

uint64_t sub_1AFDA5570()
{
  return sub_1AFFCA758();
}

uint64_t sub_1AFDA55F0(uint64_t a1, uint64_t a2)
{
  return sub_1AFDA5138(a1, a2);
}

uint64_t sub_1AFDA5614(uint64_t a1)
{
  uint64_t v3 = *v1;
  swift_beginAccess();
  swift_unknownObjectRetain();
  unint64_t v4 = sub_1AFFC8E38();
  uint64_t v5 = sub_1AFDA5E54(v4, a1);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  *(void *)(v3 + 40) = v5;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFDA56AC()
{
  return sub_1AFFCA6F8();
}

uint64_t sub_1AFDA5750(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1AFFC9938();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFFC8E38();
  sub_1AFFC8978();
  uint64_t v8 = sub_1AFFC9918();
  uint64_t v10 = v9;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v12[0] = a1;
  v12[1] = a2;
  void v12[2] = MEMORY[0x1E4FBC860];
  uint64_t v12[3] = v8;
  v12[4] = v10;
  __int16 v13 = 160;
  sub_1AFDA6110(0, &qword_1EB818780, (uint64_t)&type metadata for Watchlist, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1AFFCA6F8();
}

uint64_t sub_1AFDA58A4()
{
  return sub_1AFFCA6F8();
}

uint64_t sub_1AFDA5950()
{
  uint64_t v0 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBB320];
  sub_1AFDA6110(0, &qword_1EB817FE8, (uint64_t)&type metadata for Stock, MEMORY[0x1E4FBB320]);
  sub_1AFFCA7C8();
  uint64_t v1 = (void *)sub_1AFFCA5E8();
  sub_1AFDA5FB8();
  sub_1AFFCA768();
  swift_release();

  uint64_t v2 = (void *)sub_1AFFCA5E8();
  sub_1AFDA6110(0, &qword_1EB818008, (uint64_t)&type metadata for Watchlist, v0);
  uint64_t v3 = sub_1AFFCA678();
  swift_release();

  return v3;
}

uint64_t sub_1AFDA5A74()
{
  return sub_1AFFCA758();
}

uint64_t sub_1AFDA5AF4()
{
  return sub_1AFFCA6F8();
}

uint64_t sub_1AFDA5B54()
{
  return sub_1AFFCA6F8();
}

uint64_t sub_1AFDA5BCC(uint64_t a1)
{
  long long v1 = *(_OWORD *)(a1 + 112);
  v6[6] = *(_OWORD *)(a1 + 96);
  v6[7] = v1;
  long long v2 = *(_OWORD *)(a1 + 48);
  _OWORD v6[2] = *(_OWORD *)(a1 + 32);
  v6[3] = v2;
  long long v3 = *(_OWORD *)(a1 + 80);
  v6[4] = *(_OWORD *)(a1 + 64);
  _OWORD v6[5] = v3;
  long long v4 = *(_OWORD *)(a1 + 16);
  v6[0] = *(_OWORD *)a1;
  v6[1] = v4;
  uint64_t v7 = *(void *)(a1 + 128);
  sub_1AFDA6110(0, &qword_1E9AFA328, (uint64_t)&type metadata for Stock, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  sub_1AFD76370((uint64_t)v6);
  return sub_1AFFCA6F8();
}

uint64_t sub_1AFDA5C90()
{
  uint64_t v0 = MEMORY[0x1E4FBB1A0];
  sub_1AFDA6110(0, (unint64_t *)&qword_1EB81A0E0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1AFFD05F0;
  *(void *)(v1 + 32) = sub_1AFFCAE98();
  *(void *)(v1 + 40) = v2;
  sub_1AFDA6034(0, (unint64_t *)&qword_1EB817DC0, (unint64_t *)&qword_1EB819DC0, v0, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1AFFCA6F8();
}

void sub_1AFDA5D60(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1AFFCB288();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1AFDA5DB4()
{
  sub_1AFDA2958(v0);
}

uint64_t sub_1AFDA5DBC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AFDA5E04(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1AFDA5D60(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AFDA5E54(unint64_t a1, uint64_t a2)
{
  uint64_t v11 = MEMORY[0x1E4FBC860];
  if (a1 >> 62)
  {
LABEL_17:
    uint64_t v3 = sub_1AFFCB9C8();
    if (v3) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v3)
    {
LABEL_3:
      for (unint64_t i = 0; ; ++i)
      {
        if ((a1 & 0xC000000000000001) != 0)
        {
          uint64_t v5 = MEMORY[0x1B3E8DC70](i, a1);
          unint64_t v6 = i + 1;
          if (__OFADD__(i, 1))
          {
LABEL_14:
            __break(1u);
            return v11;
          }
        }
        else
        {
          if (i >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_17;
          }
          uint64_t v5 = *(void *)(a1 + 8 * i + 32);
          sub_1AFFC8E48();
          unint64_t v6 = i + 1;
          if (__OFADD__(i, 1)) {
            goto LABEL_14;
          }
        }
        uint64_t v7 = MEMORY[0x1B3E8F200](v5 + 16);
        if (v7 && (uint64_t v8 = v7, swift_unknownObjectRelease(), v8 == a2))
        {
          swift_release();
        }
        else
        {
          sub_1AFFCB888();
          sub_1AFFCB8C8();
          sub_1AFFCB8D8();
          sub_1AFFCB898();
        }
        if (v6 == v3) {
          return v11;
        }
      }
    }
  }
  return MEMORY[0x1E4FBC860];
}

unint64_t sub_1AFDA5FB8()
{
  unint64_t result = qword_1EB818798;
  if (!qword_1EB818798)
  {
    sub_1AFDA6110(255, &qword_1EB817FE8, (uint64_t)&type metadata for Stock, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818798);
  }
  return result;
}

void sub_1AFDA6034(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_1AFDA6110(255, a3, a4, MEMORY[0x1E4FBB320]);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1AFDA60B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AFDA4DBC(a1, a2, a3, a4, v4);
}

uint64_t sub_1AFDA60B8()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1AFDA60F4()
{
  return sub_1AFDA4C4C();
}

void sub_1AFDA6110(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1AFDA615C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AFDA2CE8(a1, a2, a3, a4, v4);
}

uint64_t sub_1AFDA6168()
{
  return sub_1AFDA50C8(*(void (**)(uint64_t))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1AFDA6188()
{
  return objectdestroy_21Tm(168);
}

uint64_t sub_1AFDA6190()
{
  return sub_1AFDA33A8(*(os_unfair_lock_s **)(v0 + 16), v0 + 24, *(void *)(v0 + 160));
}

void sub_1AFDA61A0()
{
  if (!qword_1E9AFA420)
  {
    sub_1AFD8F6AC(255, (unint64_t *)&unk_1EB816AC0);
    unint64_t v0 = sub_1AFFCBA18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9AFA420);
    }
  }
}

void sub_1AFDA6218()
{
  if (!qword_1E9AFA428)
  {
    sub_1AFD8F6AC(255, (unint64_t *)&unk_1EB816AC0);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1E9AFA428);
    }
  }
}

uint64_t sub_1AFDA6290()
{
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1AFDA62D0()
{
  return sub_1AFDA3D30(*(os_unfair_lock_s **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1AFDA62DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return 0;
  }
  uint64_t v6 = 0;
  for (unint64_t i = (void *)(a1 + 56); ; i += 17)
  {
    BOOL v8 = *(i - 1) == a2 && *i == a3;
    if (v8 || (sub_1AFFCBCE8() & 1) != 0) {
      break;
    }
    if (v3 == ++v6) {
      return 0;
    }
  }
  return v6;
}

uint64_t sub_1AFDA6370()
{
  return objectdestroy_21Tm(160);
}

uint64_t objectdestroy_21Tm(uint64_t a1)
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v1, a1, 7);
}

uint64_t sub_1AFDA63FC()
{
  return sub_1AFDA46C0(*(void *)(v0 + 16), v0 + 24);
}

uint64_t sub_1AFDA6408(uint64_t a1)
{
  sub_1AFDA6034(0, &qword_1E9AFA418, &qword_1EB817FE8, (uint64_t)&type metadata for Stock, MEMORY[0x1E4FBCDD8]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1AFDA6490@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1AFDA4CD8(a1, a2);
}

__n128 __swift_memcpy120_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(void *)(a1 + 112) = *((void *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ArticleScore(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 120)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 56);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ArticleScore(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 120) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 120) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 56) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ArticleScore()
{
  return &type metadata for ArticleScore;
}

uint64_t sub_1AFDA65CC()
{
  uint64_t v0 = sub_1AFFC96E8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  unsigned int v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  long long v6 = (char *)&v17 - v5;
  MEMORY[0x1F4188790](v7);
  unint64_t v9 = (char *)&v17 - v8;
  uint64_t v10 = NSSearchPathForDirectoriesInDomains(NSCachesDirectory, 1uLL, 1);
  uint64_t v11 = sub_1AFFCB1C8();

  if (*(void *)(v11 + 16))
  {
    sub_1AFFC8E38();
    swift_bridgeObjectRelease();
    sub_1AFFCA2B8();
    swift_bridgeObjectRelease();
    if (qword_1EB81AB78 != -1) {
      swift_once();
    }
    sub_1AFE9FDD4((uint64_t)v9);
    sub_1AFFC9648();
    sub_1AFFCA2A8();
    uint64_t v12 = *(void (**)(char *, uint64_t))(v1 + 8);
    v12(v6, v0);
    sub_1AFFC9648();
    sub_1AFFCA2A8();
    v12(v6, v0);
    if (qword_1EB810FF0 != -1) {
      swift_once();
    }
    sub_1AFE9FDD4((uint64_t)v6);
    sub_1AFFC9648();
    sub_1AFFCA2A8();
    v12(v3, v0);
    __int16 v13 = self;
    id v14 = objc_msgSend(v13, sel_standardUserDefaults);
    sub_1AFFCA298();

    id v15 = objc_msgSend(v13, sel_standardUserDefaults);
    sub_1AFFCA298();

    v12(v6, v0);
    return ((uint64_t (*)(char *, uint64_t))v12)(v9, v0);
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for DebugAssembly()
{
  return self;
}

uint64_t sub_1AFDA6984()
{
  uint64_t v0 = sub_1AFFC9E78();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  unsigned int v3 = (char *)&v6[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFFC9FB8();
  __swift_project_boxed_opaque_existential_1(v6, v6[3]);
  sub_1AFFCA2C8();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAAA00], v0);
  sub_1AFFCA3F8();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
}

uint64_t sub_1AFDA6ADC@<X0>(char *a1@<X8>)
{
  unint64_t v2 = sub_1AFFCBA78();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 8;
  if (v2 < 8) {
    char v4 = v2;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1AFDA6B38()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x79636E6572727563;
      break;
    case 2:
      uint64_t result = 0x75636F7470797263;
      break;
    case 3:
      uint64_t result = 0x797469757165;
      break;
    case 4:
      uint64_t result = 6714469;
      break;
    case 5:
      uint64_t result = 0x73657275747566;
      break;
    case 6:
      uint64_t result = 0x7865646E69;
      break;
    case 7:
      uint64_t result = 0x75466C617574756DLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1AFDA6C38()
{
  unint64_t result = qword_1E9AFA430;
  if (!qword_1E9AFA430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFA430);
  }
  return result;
}

uint64_t sub_1AFDA6C8C()
{
  return sub_1AFF9BF90();
}

uint64_t sub_1AFDA6C98()
{
  return sub_1AFD77A58();
}

uint64_t sub_1AFDA6CA0()
{
  return sub_1AFF9BF90();
}

uint64_t sub_1AFDA6CA8@<X0>(char *a1@<X8>)
{
  return sub_1AFDA6ADC(a1);
}

void sub_1AFDA6CB4(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE800000000000000;
      uint64_t v3 = 0x79636E6572727563;
      goto LABEL_3;
    case 2:
      strcpy((char *)a1, "cryptocurrency");
      *(unsigned char *)(a1 + 15) = -18;
      break;
    case 3:
      *(void *)a1 = 0x797469757165;
      *(void *)(a1 + 8) = 0xE600000000000000;
      break;
    case 4:
      *(void *)a1 = 6714469;
      *(void *)(a1 + 8) = 0xE300000000000000;
      break;
    case 5:
      *(void *)a1 = 0x73657275747566;
      *(void *)(a1 + 8) = 0xE700000000000000;
      break;
    case 6:
      *(void *)a1 = 0x7865646E69;
      *(void *)(a1 + 8) = 0xE500000000000000;
      break;
    case 7:
      *(void *)a1 = 0x75466C617574756DLL;
      *(void *)(a1 + 8) = 0xEA0000000000646ELL;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_1AFDA6DCC()
{
  return sub_1AFFCB178();
}

uint64_t sub_1AFDA6E2C()
{
  return sub_1AFFCB128();
}

uint64_t sub_1AFDA6E7C(unsigned __int8 *a1, char *a2)
{
  return sub_1AFDEC73C(*a1, *a2);
}

uint64_t getEnumTagSinglePayload for StockType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for StockType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFDA6FE4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StockType()
{
  return &type metadata for StockType;
}

unint64_t sub_1AFDA701C()
{
  unint64_t result = qword_1EB817BA8;
  if (!qword_1EB817BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817BA8);
  }
  return result;
}

uint64_t sub_1AFDA7070()
{
  return sub_1AFFC8C08();
}

uint64_t sub_1AFDA7094()
{
  return sub_1AFFC8C08();
}

uint64_t sub_1AFDA70B8()
{
  uint64_t v0 = sub_1AFFC9528();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1AFFC9A78();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v5 = sub_1AFFCAE58();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v6 = sub_1AFFC9548();
  __swift_allocate_value_buffer(v6, qword_1E9AFA438);
  __swift_project_value_buffer(v6, (uint64_t)qword_1E9AFA438);
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4F275D0], v0);
  return sub_1AFFC9558();
}

uint64_t sub_1AFDA7298@<X0>(uint64_t a1@<X8>)
{
  return sub_1AFD32B4C(&qword_1E9AF8C60, MEMORY[0x1E4F27608], (uint64_t)qword_1E9AFA438, a1);
}

uint64_t sub_1AFDA72D0()
{
  sub_1AFDA8968(0, &qword_1EB816B00, MEMORY[0x1E4F27608]);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)v12 - v1;
  v12[0] = sub_1AFFC9528();
  uint64_t v3 = *(void *)(v12[0] - 8);
  MEMORY[0x1F4188790](v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1AFFC9A78();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v7 = sub_1AFFCAE58();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v8 = sub_1AFFC9548();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = sub_1AFFC8CD8();
  __swift_allocate_value_buffer(v10, qword_1E9AFA450);
  __swift_project_value_buffer(v10, (uint64_t)qword_1E9AFA450);
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, *MEMORY[0x1E4F275D0], v12[0]);
  sub_1AFFC9558();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_1AFFC8CE8();
}

uint64_t sub_1AFDA75C4@<X0>(uint64_t a1@<X8>)
{
  return sub_1AFD32B4C(&qword_1E9AF8C68, MEMORY[0x1E4F18510], (uint64_t)qword_1E9AFA450, a1);
}

uint64_t sub_1AFDA75FC()
{
  return 1;
}

uint64_t sub_1AFDA7604@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x1E4F18790];
  uint64_t v3 = sub_1AFFC8FC8();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t sub_1AFDA7678()
{
  sub_1AFDA92BC(0, &qword_1E9AFA468, (uint64_t (*)(void))sub_1AFDA7894, (uint64_t)&type metadata for DeleteSymbolFromWatchlistIntent, MEMORY[0x1E4F186C8]);
  MEMORY[0x1F4188790](v0 - 8);
  sub_1AFDA92BC(0, &qword_1E9AFA470, (uint64_t (*)(void))sub_1AFDA7894, (uint64_t)&type metadata for DeleteSymbolFromWatchlistIntent, MEMORY[0x1E4F186C0]);
  MEMORY[0x1F4188790](v1);
  sub_1AFDA7894();
  sub_1AFFC8EA8();
  sub_1AFFC8E98();
  swift_getKeyPath();
  sub_1AFDA7910();
  sub_1AFFC8E88();
  swift_release();
  sub_1AFFC8E98();
  swift_getKeyPath();
  sub_1AFDA7AA0();
  sub_1AFFC8E88();
  swift_release();
  sub_1AFFC8E98();
  sub_1AFFC8EB8();
  return sub_1AFFC8E58();
}

unint64_t sub_1AFDA7894()
{
  unint64_t result = qword_1EB8118F0;
  if (!qword_1EB8118F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8118F0);
  }
  return result;
}

uint64_t sub_1AFDA78E8()
{
  return sub_1AFFC8C28();
}

void sub_1AFDA7910()
{
  if (!qword_1E9AFA478)
  {
    sub_1AFDA7970();
    unint64_t v0 = sub_1AFFCBE88();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9AFA478);
    }
  }
}

void sub_1AFDA7970()
{
  if (!qword_1EB810B88)
  {
    type metadata accessor for SymbolEntity();
    sub_1AFDA8A10((unint64_t *)&qword_1EB816B20, (void (*)(uint64_t))type metadata accessor for SymbolEntity);
    unint64_t v0 = sub_1AFFC8C98();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB810B88);
    }
  }
}

uint64_t sub_1AFDA7A04()
{
  return sub_1AFFC8C28();
}

uint64_t sub_1AFDA7A28@<X0>(uint64_t *a1@<X8>)
{
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  uint64_t v2 = sub_1AFFC8C28();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v2;
  return result;
}

void sub_1AFDA7AA0()
{
  if (!qword_1E9AFA480)
  {
    sub_1AFDA92BC(255, &qword_1EB811368, (uint64_t (*)(void))sub_1AFD33084, (uint64_t)&type metadata for WatchlistEntity, MEMORY[0x1E4F184C8]);
    unint64_t v0 = sub_1AFFCBE88();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9AFA480);
    }
  }
}

uint64_t sub_1AFDA7B38()
{
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8C08();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_1AFDA7BAC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SymbolEntity();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v9 - v6;
  sub_1AFD5BCD0(a1, (uint64_t)&v9 - v6);
  sub_1AFD5BCD0((uint64_t)v7, (uint64_t)v4);
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8C18();
  sub_1AFD2E05C((uint64_t)v7);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1AFDA7CA8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SymbolEntity();
  MEMORY[0x1F4188790](v2 - 8);
  sub_1AFD5BCD0(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1AFFC8C18();
  return sub_1AFD2E05C(a1);
}

uint64_t (*sub_1AFDA7D38(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1AFFC8BF8();
  return sub_1AFD3325C;
}

double sub_1AFDA7D94@<D0>(uint64_t a1@<X8>)
{
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8C08();
  swift_release();
  swift_release();
  swift_release();
  *(void *)a1 = v3;
  double result = *(double *)&v4;
  *(_OWORD *)(a1 + 8) = v4;
  return result;
}

uint64_t sub_1AFDA7E14()
{
  return swift_release();
}

uint64_t sub_1AFDA7EA0()
{
  return sub_1AFFC8C18();
}

uint64_t (*sub_1AFDA7EE0(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1AFFC8BF8();
  return sub_1AFD3325C;
}

uint64_t sub_1AFDA7F3C()
{
  return sub_1AFFC8998();
}

uint64_t sub_1AFDA7F60(uint64_t a1)
{
  sub_1AFD2CEB0(a1, (uint64_t)v3);
  sub_1AFFC89A8();
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t (*sub_1AFDA7FA4(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1AFFC8988();
  return sub_1AFD3325C;
}

uint64_t sub_1AFDA8000()
{
  return sub_1AFFC89B8();
}

uint64_t sub_1AFDA8024@<X0>(void *a1@<X8>)
{
  uint64_t v57 = a1;
  uint64_t v1 = sub_1AFFC8EC8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v64 = v1;
  uint64_t v65 = v2;
  MEMORY[0x1F4188790](v1);
  uint64_t v63 = &v43[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1AFDA8968(0, &qword_1EB816AF0, MEMORY[0x1E4F182D8]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v61 = &v43[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v6);
  id v60 = &v43[-v7];
  sub_1AFDA8968(0, &qword_1EB810BC8, (void (*)(uint64_t))type metadata accessor for SymbolEntity);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v62 = &v43[-v9];
  sub_1AFDA8968(0, &qword_1EB816B00, MEMORY[0x1E4F27608]);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v58 = &v43[-v11];
  uint64_t v12 = sub_1AFFC9528();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  id v15 = &v43[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = sub_1AFFC9A78();
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v17 = sub_1AFFCAE58();
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v18 = sub_1AFFC9548();
  uint64_t v55 = v18;
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  unint64_t v59 = &v43[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1AFDA7970();
  uint64_t v53 = v21;
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  long long v23 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v13 + 104);
  unsigned int v46 = *MEMORY[0x1E4F275D0];
  uint64_t v22 = v46;
  uint64_t v47 = v12;
  v23(v15, v46, v12);
  uint64_t v50 = v23;
  uint64_t v51 = v13 + 104;
  sub_1AFFC9558();
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  v23(v15, v22, v12);
  long long v24 = v58;
  sub_1AFFC9558();
  uint64_t v25 = *(void (**)(unsigned char *, void, uint64_t, uint64_t))(v19 + 56);
  uint64_t v54 = v19 + 56;
  unint64_t v56 = v25;
  v25(v24, 0, 1, v18);
  uint64_t v26 = type metadata accessor for SymbolEntity();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v62, 1, 1, v26);
  uint64_t v27 = sub_1AFFC8AD8();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v28 + 56);
  uint64_t v48 = v29;
  uint64_t v49 = v28 + 56;
  v29(v60, 1, 1, v27);
  v29(v61, 1, 1, v27);
  sub_1AFD5A2B4(0, (unint64_t *)&qword_1EB8167E0, (unint64_t *)&qword_1EB81A890);
  uint64_t v52 = sub_1AFFC8A08();
  long long v66 = 0u;
  long long v67 = 0u;
  uint64_t v68 = 0;
  sub_1AFFC89F8();
  uint64_t v30 = sub_1AFFC89C8();
  sub_1AFDA92BC(0, &qword_1E9AFA488, (uint64_t (*)(void))sub_1AFDA7894, (uint64_t)&type metadata for DeleteSymbolFromWatchlistIntent, MEMORY[0x1E4F18738]);
  swift_getKeyPath();
  uint64_t v31 = sub_1AFFC8F78();
  *(void *)&long long v66 = v30;
  *((void *)&v66 + 1) = v31;
  unsigned int v44 = *MEMORY[0x1E4F186F0];
  uint64_t v32 = *(void (**)(void))(v65 + 104);
  v65 += 104;
  unint64_t v45 = (void (*)(unsigned char *, void, uint64_t))v32;
  v32(v63);
  sub_1AFDA89BC();
  sub_1AFDA8A10(&qword_1EB810BC0, (void (*)(uint64_t))type metadata accessor for SymbolEntity);
  unint64_t v33 = v60;
  uint64_t v62 = (unsigned char *)sub_1AFFC8C48();
  sub_1AFDA92BC(0, &qword_1EB811368, (uint64_t (*)(void))sub_1AFD33084, (uint64_t)&type metadata for WatchlistEntity, MEMORY[0x1E4F184C8]);
  uint64_t v53 = v34;
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  uint64_t v35 = v46;
  uint64_t v36 = v47;
  uint64_t v37 = v50;
  v50(v15, v46, v47);
  sub_1AFFC9558();
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  v37(v15, v35, v36);
  id v38 = v58;
  sub_1AFFC9558();
  v56(v38, 0, 1, v55);
  long long v66 = 0uLL;
  *(void *)&long long v67 = 0;
  long long v39 = v48;
  v48(v33, 1, 1, v27);
  v39(v61, 1, 1, v27);
  v45(v63, v44, v64);
  sub_1AFD33B44();
  uint64_t v40 = sub_1AFFC8C68();
  sub_1AFD5A2B4(0, &qword_1EB8167D8, (unint64_t *)&qword_1EB816B10);
  uint64_t v68 = 0;
  long long v66 = 0u;
  long long v67 = 0u;
  sub_1AFFC89F8();
  uint64_t result = sub_1AFFC89C8();
  uint64_t v42 = v57;
  void *v57 = v62;
  v42[1] = v40;
  v42[2] = result;
  return result;
}

void sub_1AFDA8968(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1AFFCB658();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_1AFDA89BC()
{
  unint64_t result = qword_1E9AFA490;
  if (!qword_1E9AFA490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1E9AFA490);
  }
  return result;
}

uint64_t sub_1AFDA8A10(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AFDA8A58(uint64_t a1)
{
  *(void *)(v2 + 128) = a1;
  sub_1AFDA8968(0, &qword_1EB810BC8, (void (*)(uint64_t))type metadata accessor for SymbolEntity);
  *(void *)(v2 + 136) = swift_task_alloc();
  *(_OWORD *)(v2 + 144) = *(_OWORD *)v1;
  *(void *)(v2 + 160) = *(void *)(v1 + 16);
  return MEMORY[0x1F4188298](sub_1AFDA8B14, 0, 0);
}

uint64_t sub_1AFDA8B14()
{
  uint64_t v2 = v0[19];
  uint64_t v1 = v0[20];
  uint64_t v3 = v0[18];
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8998();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v4 = v0[5];
  uint64_t v5 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v4);
  v0[7] = v3;
  v0[8] = v2;
  v0[9] = v1 | 0x2000000000000000;
  uint64_t v8 = (uint64_t (*)(void *, uint64_t, uint64_t))(*(void *)(v5 + 8) + **(int **)(v5 + 8));
  uint64_t v6 = (void *)swift_task_alloc();
  v0[21] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1AFDA8C80;
  return v8(v0 + 7, v4, v5);
}

uint64_t sub_1AFDA8C80()
{
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1AFDA8F0C;
  }
  else {
    uint64_t v2 = sub_1AFDA8D94;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1AFDA8D94()
{
  uint64_t v10 = v0;
  uint64_t v1 = *(void *)(v0 + 136);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8C08();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v8 = *(void *)(v0 + 80);
  long long v9 = *(_OWORD *)(v0 + 88);
  uint64_t v2 = type metadata accessor for SymbolEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  sub_1AFD5A49C(&v8, v1, v7);
  uint64_t v3 = v7[1];
  uint64_t v4 = v7[2];
  *(void *)(v0 + 104) = v7[0];
  *(void *)(v0 + 112) = v3;
  *(void *)(v0 + 120) = v4;
  sub_1AFD5907C();
  sub_1AFFC8AE8();
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_1AFDA8F0C()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

unint64_t sub_1AFDA8F80()
{
  unint64_t result = qword_1EB8118F8;
  if (!qword_1EB8118F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8118F8);
  }
  return result;
}

unint64_t sub_1AFDA8FD8()
{
  unint64_t result = qword_1EB8118E8;
  if (!qword_1EB8118E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8118E8);
  }
  return result;
}

uint64_t sub_1AFDA902C()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1AFDA9060()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1AFDA907C@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E9AF8C60 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1AFFC9548();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1E9AFA438);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1AFDA9128(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1AFD3503C;
  return sub_1AFDA8A58(a1);
}

uint64_t sub_1AFDA91C4(uint64_t a1)
{
  unint64_t v2 = sub_1AFDA7894();

  return MEMORY[0x1F40D3C90](a1, v2);
}

ValueMetadata *type metadata accessor for DeleteSymbolFromWatchlistIntent()
{
  return &type metadata for DeleteSymbolFromWatchlistIntent;
}

unint64_t sub_1AFDA922C()
{
  unint64_t result = qword_1E9AFA4A8;
  if (!qword_1E9AFA4A8)
  {
    sub_1AFDA92BC(255, &qword_1E9AFA4B0, (uint64_t (*)(void))sub_1AFDA7894, (uint64_t)&type metadata for DeleteSymbolFromWatchlistIntent, MEMORY[0x1E4F186A8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFA4A8);
  }
  return result;
}

void sub_1AFDA92BC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1AFDA9324()
{
  return sub_1AFDA8A10(&qword_1E9AFA4B8, (void (*)(uint64_t))sub_1AFD3765C);
}

uint64_t sub_1AFDA936C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1AFDED888(*a1, *a2);
}

uint64_t sub_1AFDA9378()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFDA9434()
{
  sub_1AFFCAF68();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFDA94DC()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFDA9594@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFDAA6A4();
  *a1 = result;
  return result;
}

void sub_1AFDA95C4(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE900000000000064;
  unint64_t v4 = 0xEC00000073676966;
  uint64_t v5 = 0x6E6F43656C797473;
  if (v2 != 1)
  {
    uint64_t v5 = 0x6954736567646162;
    unint64_t v4 = 0xED000074756F656DLL;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x496C656E6E616863;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1AFDA963C()
{
  uint64_t v1 = 0x6E6F43656C797473;
  if (*v0 != 1) {
    uint64_t v1 = 0x6954736567646162;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x496C656E6E616863;
  }
}

uint64_t sub_1AFDA96B0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFDAA6A4();
  *a1 = result;
  return result;
}

uint64_t sub_1AFDA96D8(uint64_t a1)
{
  unint64_t v2 = sub_1AFDA9E14();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFDA9714(uint64_t a1)
{
  unint64_t v2 = sub_1AFDA9E14();

  return MEMORY[0x1F41862B0](a1, v2);
}

unint64_t sub_1AFDA9750@<X0>(unint64_t result@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, double a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  unint64_t v6 = 0xD000000000000017;
  if (a2) {
    unint64_t v6 = result;
  }
  unint64_t v7 = 0x80000001AFFF2560;
  uint64_t v8 = MEMORY[0x1E4FBC860];
  if (a2) {
    unint64_t v7 = a2;
  }
  if (a3) {
    uint64_t v8 = a3;
  }
  *(void *)a6 = v6;
  *(void *)(a6 + 8) = v7;
  if (a5) {
    a4 = 21600.0;
  }
  *(void *)(a6 + 16) = v8;
  *(double *)(a6 + 24) = a4;
  return result;
}

uint64_t sub_1AFDA97AC@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  sub_1AFDAA190(0, &qword_1EB819FB0, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v32 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDA9E14();
  sub_1AFFCBE68();
  if (!v2)
  {
    id v38 = (void *)MEMORY[0x1E4FBC860];
    char v37 = 0;
    sub_1AFFCBAF8();
    unint64_t v10 = v36;
    unint64_t v33 = v35;
    uint64_t v11 = (void *)MEMORY[0x1E4FBC860];
    if (!v36)
    {
      swift_beginAccess();
      uint64_t v11 = v38;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v34 = 0;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        uint64_t v11 = sub_1AFD352FC(0, v11[2] + 1, 1, v11);
      }
      unint64_t v14 = v11[2];
      unint64_t v13 = v11[3];
      if (v14 >= v13 >> 1) {
        uint64_t v11 = sub_1AFD352FC((void *)(v13 > 1), v14 + 1, 1, v11);
      }
      v11[2] = v14 + 1;
      id v15 = &v11[2 * v14];
      v15[4] = 0x496C656E6E616863;
      void v15[5] = 0xE900000000000064;
      id v38 = v11;
      swift_endAccess();
      unint64_t v10 = v34;
    }
    char v37 = 1;
    sub_1AFD40AA0(0, &qword_1EB819D50);
    sub_1AFDAA1F4(&qword_1EB819D60, (void (*)(void))sub_1AFDAA0C0);
    sub_1AFFCBAF8();
    unint64_t v32 = v35;
    if (!v35)
    {
      swift_beginAccess();
      uint64_t v11 = v38;
      char v16 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v34 = v10;
      if ((v16 & 1) == 0) {
        uint64_t v11 = sub_1AFD352FC(0, v11[2] + 1, 1, v11);
      }
      unint64_t v18 = v11[2];
      unint64_t v17 = v11[3];
      if (v18 >= v17 >> 1) {
        uint64_t v11 = sub_1AFD352FC((void *)(v17 > 1), v18 + 1, 1, v11);
      }
      v11[2] = v18 + 1;
      uint64_t v19 = (char *)&v11[2 * v18];
      strcpy(v19 + 32, "styleConfigs");
      v19[45] = 0;
      *((_WORD *)v19 + 23) = -5120;
      id v38 = v11;
      swift_endAccess();
      unint64_t v10 = v34;
    }
    char v37 = 2;
    sub_1AFFCBAF8();
    if (v36)
    {
      swift_beginAccess();
      uint64_t v11 = v38;
      char v21 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v34 = v10;
      if ((v21 & 1) == 0) {
        uint64_t v11 = sub_1AFD352FC(0, v11[2] + 1, 1, v11);
      }
      unint64_t v23 = v11[2];
      unint64_t v22 = v11[3];
      if (v23 >= v22 >> 1) {
        uint64_t v11 = sub_1AFD352FC((void *)(v22 > 1), v23 + 1, 1, v11);
      }
      v11[2] = v23 + 1;
      long long v24 = (char *)&v11[2 * v23];
      strcpy(v24 + 32, "badgesTimeout");
      *((_WORD *)v24 + 23) = -4864;
      id v38 = v11;
      swift_endAccess();
      uint64_t v25 = 0x40D5180000000000;
      unint64_t v10 = v34;
    }
    else
    {
      uint64_t v25 = v35;
    }
    unint64_t v26 = 0xD000000000000017;
    if (v10) {
      unint64_t v26 = v33;
    }
    unint64_t v33 = v26;
    if (!v10) {
      unint64_t v10 = 0x80000001AFFF2560;
    }
    unint64_t v27 = MEMORY[0x1E4FBC860];
    if (v32) {
      unint64_t v27 = v32;
    }
    unint64_t v34 = v27;
    if (v11[2])
    {
      sub_1AFD2CD48();
      uint64_t v28 = swift_allocObject();
      unint64_t v32 = v10;
      uint64_t v29 = (void *)v28;
      *(_OWORD *)(v28 + 16) = xmmword_1AFFD05F0;
      sub_1AFD40AA0(0, (unint64_t *)&qword_1EB819DC0);
      v29[7] = v30;
      v29[8] = sub_1AFD5CDA0();
      v29[4] = v11;
      sub_1AFD2C4F4();
      sub_1AFFC8E38();
      uint64_t v31 = (void *)sub_1AFFCB638();
      sub_1AFFCB478();
      sub_1AFFCA878();
      unint64_t v10 = v32;
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AFD2C4F4();
      uint64_t v31 = (void *)sub_1AFFCB638();
      sub_1AFFCB478();
      sub_1AFFCA878();
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_bridgeObjectRelease();
    *a2 = v33;
    a2[1] = v10;
    a2[2] = v34;
    a2[3] = v25;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1AFDA9E14()
{
  unint64_t result = qword_1EB819670;
  if (!qword_1EB819670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819670);
  }
  return result;
}

uint64_t sub_1AFDA9E6C(void *a1)
{
  sub_1AFDAA190(0, &qword_1EB81A068, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v13 - v6;
  uint64_t v13 = *(void *)(v1 + 16);
  uint64_t v8 = a1[3];
  uint64_t v9 = a1;
  uint64_t v11 = v10;
  __swift_project_boxed_opaque_existential_1(v9, v8);
  sub_1AFDA9E14();
  sub_1AFFCBE78();
  char v17 = 0;
  sub_1AFFCBC08();
  if (!v2)
  {
    uint64_t v16 = v13;
    char v15 = 1;
    sub_1AFD40AA0(0, &qword_1EB819D50);
    sub_1AFDAA1F4(&qword_1EB819D58, (void (*)(void))sub_1AFDAA270);
    sub_1AFFCBC58();
    char v14 = 2;
    sub_1AFFCBC28();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v11);
}

uint64_t sub_1AFDAA08C@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  return sub_1AFDA97AC(a1, a2);
}

uint64_t sub_1AFDAA0A4(void *a1)
{
  return sub_1AFDA9E6C(a1);
}

unint64_t sub_1AFDAA0C0()
{
  unint64_t result = qword_1EB819860;
  if (!qword_1EB819860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819860);
  }
  return result;
}

uint64_t sub_1AFDAA114(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  double v3 = *(double *)(a1 + 24);
  uint64_t v4 = *(void *)(a2 + 16);
  double v5 = *(double *)(a2 + 24);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)) {
    return sub_1AFF22F80(v2, v4) & (v3 == v5);
  }
  char v7 = sub_1AFFCBCE8();
  uint64_t result = 0;
  if (v7) {
    return sub_1AFF22F80(v2, v4) & (v3 == v5);
  }
  return result;
}

void sub_1AFDAA190(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1AFDA9E14();
    unint64_t v7 = a3(a1, &type metadata for TopStoriesConfiguration.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1AFDAA1F4(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1AFD40AA0(255, &qword_1EB819D50);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1AFDAA270()
{
  unint64_t result = qword_1EB819858;
  if (!qword_1EB819858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819858);
  }
  return result;
}

uint64_t destroy for TopStoriesConfiguration()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for TopStoriesConfiguration(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  return a1;
}

void *assignWithCopy for TopStoriesConfiguration(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  return a1;
}

uint64_t assignWithTake for TopStoriesConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for MultiSizeVideo(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MultiSizeVideo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TopStoriesConfiguration()
{
  return &type metadata for TopStoriesConfiguration;
}

unsigned char *storeEnumTagSinglePayload for TopStoriesConfiguration.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFDAA564);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TopStoriesConfiguration.CodingKeys()
{
  return &type metadata for TopStoriesConfiguration.CodingKeys;
}

unint64_t sub_1AFDAA5A0()
{
  unint64_t result = qword_1E9AFA4C0;
  if (!qword_1E9AFA4C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFA4C0);
  }
  return result;
}

unint64_t sub_1AFDAA5F8()
{
  unint64_t result = qword_1EB819680;
  if (!qword_1EB819680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819680);
  }
  return result;
}

unint64_t sub_1AFDAA650()
{
  unint64_t result = qword_1EB819678;
  if (!qword_1EB819678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819678);
  }
  return result;
}

uint64_t sub_1AFDAA6A4()
{
  unint64_t v0 = sub_1AFFCBA78();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_1AFDAA6F0()
{
  return 0x657361622D736473;
}

uint64_t sub_1AFDAA710(uint64_t a1)
{
  uint64_t v93 = a1;
  uint64_t v81 = sub_1AFFC9E78();
  uint64_t v83 = *(void *)(v81 - 8);
  MEMORY[0x1F4188790](v81);
  long long v80 = (char *)v79 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_1AFFCA5C8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v79 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1AFFCA818();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v79 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFFC9F98();
  sub_1AFDB3E88(0, &qword_1EB81A898);
  sub_1AFFCA388();
  swift_release();
  unsigned int v91 = *MEMORY[0x1E4FAB148];
  uint64_t v10 = *(void (**)(char *))(v7 + 104);
  v10(v9);
  long long v90 = v10;
  uint64_t v92 = v7 + 104;
  sub_1AFFC9D28();
  swift_release();
  uint64_t v11 = *(void (**)(char *, uint64_t))(v7 + 8);
  v11(v9, v6);
  long long v88 = v11;
  uint64_t v98 = v7 + 8;
  unsigned int v86 = *MEMORY[0x1E4FAB140];
  uint64_t v87 = v6;
  v10(v9);
  sub_1AFFC9D28();
  swift_release();
  v11(v9, v6);
  uint64_t v12 = *MEMORY[0x1E4FAB040];
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
  uint64_t v99 = v3 + 104;
  char v14 = v5;
  char v15 = v5;
  uint64_t v16 = v2;
  v13(v15, v12, v2);
  char v17 = v14;
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  unint64_t v18 = *(void (**)(char *, uint64_t))(v3 + 8);
  v18(v14, v16);
  uint64_t v96 = v18;
  sub_1AFFC9F98();
  sub_1AFDB3E88(0, (unint64_t *)&unk_1EB81AA80);
  sub_1AFFCA388();
  swift_release();
  unsigned int v94 = v12;
  uint64_t v89 = v16;
  uint64_t v97 = v13;
  v13(v14, v12, v16);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  v18(v14, v16);
  sub_1AFFC9F98();
  sub_1AFDB3E88(0, qword_1EB81A798);
  sub_1AFFCA388();
  swift_release();
  uint64_t v19 = v91;
  uint64_t v20 = v87;
  ((void (*)(char *, void, uint64_t))v90)(v9, v91, v87);
  sub_1AFFC9D28();
  swift_release();
  char v21 = v88;
  v88(v9, v20);
  uint64_t v22 = v12;
  uint64_t v23 = v89;
  v13(v17, v22, v89);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  uint64_t v24 = v23;
  uint64_t v25 = v96;
  v96(v17, v24);
  uint64_t v95 = v3 + 8;
  sub_1AFFC9F98();
  sub_1AFDB3E88(0, &qword_1EB81A920);
  sub_1AFFCA388();
  swift_release();
  uint64_t v26 = v19;
  unint64_t v27 = v90;
  ((void (*)(char *, uint64_t, uint64_t))v90)(v9, v26, v20);
  sub_1AFFC9D28();
  swift_release();
  v21(v9, v20);
  uint64_t v28 = v89;
  v97(v17, v94, v89);
  long long v84 = v17;
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  v25(v17, v28);
  sub_1AFFC9F98();
  sub_1AFDB3E88(0, &qword_1EB81A788);
  sub_1AFFCA388();
  swift_release();
  uint64_t v29 = v91;
  uint64_t v30 = v87;
  ((void (*)(char *, void, uint64_t))v27)(v9, v91, v87);
  sub_1AFFC9D28();
  swift_release();
  swift_release();
  v21(v9, v30);
  sub_1AFFC9F98();
  sub_1AFDB3E88(0, &qword_1EB81A880);
  sub_1AFFCA388();
  swift_release();
  ((void (*)(char *, uint64_t, uint64_t))v27)(v9, v29, v30);
  long long v85 = v9;
  sub_1AFFC9D28();
  swift_release();
  v21(v9, v30);
  uint64_t v31 = v84;
  uint64_t v32 = v94;
  uint64_t v33 = v89;
  unint64_t v34 = v97;
  v97(v84, v94, v89);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  uint64_t v35 = v96;
  v96(v31, v33);
  sub_1AFFC9F98();
  sub_1AFDB3E88(0, (unint64_t *)&unk_1EB81A7F8);
  sub_1AFFCA388();
  swift_release();
  v34(v31, v32, v33);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  v35(v31, v33);
  sub_1AFFC9F98();
  sub_1AFDB3E88(0, &qword_1EB81A870);
  sub_1AFFCA388();
  swift_release();
  v34(v31, v32, v33);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  v35(v31, v33);
  sub_1AFFC9F98();
  sub_1AFDB3E88(0, &qword_1EB81A888);
  sub_1AFFCA388();
  swift_release();
  unint64_t v36 = v85;
  uint64_t v37 = v87;
  id v38 = v90;
  ((void (*)(char *, void, uint64_t))v90)(v85, v91, v87);
  sub_1AFFC9D28();
  swift_release();
  long long v39 = v88;
  v88(v36, v37);
  ((void (*)(char *, void, uint64_t))v38)(v36, v86, v37);
  sub_1AFFC9D28();
  swift_release();
  v39(v36, v37);
  v97(v31, v94, v33);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  v96(v31, v33);
  sub_1AFFC9F98();
  v79[1] = sub_1AFDB3E88(0, (unint64_t *)&unk_1EB81A9E0);
  sub_1AFFCA388();
  swift_release();
  uint64_t v40 = v91;
  ((void (*)(char *, void, uint64_t))v38)(v36, v91, v37);
  sub_1AFFC9D28();
  swift_release();
  swift_release();
  v39(v36, v37);
  sub_1AFFC9F98();
  sub_1AFDB3E88(0, &qword_1EB81A9F8);
  sub_1AFFCA388();
  swift_release();
  ((void (*)(char *, uint64_t, uint64_t))v38)(v36, v40, v37);
  sub_1AFFC9D28();
  swift_release();
  v39(v36, v37);
  sub_1AFDB3E88(0, (unint64_t *)&unk_1EB81AAF0);
  sub_1AFFC9D48();
  swift_release();
  id v41 = v84;
  uint64_t v42 = v94;
  uint64_t v43 = v89;
  unsigned int v44 = v97;
  v97(v84, v94, v89);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  unint64_t v45 = v96;
  v96(v41, v43);
  sub_1AFFC9F98();
  sub_1AFFCA388();
  swift_release();
  swift_release();
  sub_1AFFC9F98();
  sub_1AFDB3E88(0, (unint64_t *)&unk_1EB81AA48);
  sub_1AFFCA388();
  swift_release();
  swift_release();
  sub_1AFFC9F98();
  sub_1AFDB3E88(0, &qword_1EB81A440);
  sub_1AFFCA388();
  swift_release();
  swift_release();
  sub_1AFFC9F98();
  sub_1AFDB3E88(0, &qword_1EB81A998);
  sub_1AFFCA388();
  swift_release();
  v44(v41, v42, v43);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  v45(v41, v43);
  sub_1AFFC9F98();
  sub_1AFDB3E88(0, (unint64_t *)&unk_1EB81A970);
  sub_1AFFCA388();
  swift_release();
  unsigned int v46 = v41;
  uint64_t v47 = v41;
  uint64_t v48 = v43;
  v44(v47, v42, v43);
  uint64_t v49 = v44;
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  v45(v46, v48);
  uint64_t v50 = v45;
  sub_1AFFC9F98();
  sub_1AFDB3E88(0, &qword_1EB81AAA8);
  sub_1AFFCA388();
  swift_release();
  uint64_t v51 = v85;
  uint64_t v52 = v87;
  ((void (*)(char *, void, uint64_t))v90)(v85, v91, v87);
  sub_1AFFC9D28();
  swift_release();
  v88(v51, v52);
  v49(v46, v42, v48);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  v50(v46, v48);
  sub_1AFFC9F98();
  sub_1AFDB3E88(0, &qword_1EB81A730);
  sub_1AFFCA388();
  swift_release();
  v49(v46, v42, v48);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  uint64_t v53 = v96;
  v96(v46, v48);
  sub_1AFFC9F98();
  sub_1AFDB3E88(0, &qword_1EB81A938);
  sub_1AFFCA388();
  swift_release();
  v49(v46, v42, v48);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  v53(v46, v48);
  sub_1AFFC9F98();
  sub_1AFDB3E88(0, &qword_1EB81A900);
  sub_1AFFC8E48();
  sub_1AFFCA388();
  swift_release();
  swift_release();
  uint64_t v54 = v85;
  uint64_t v55 = v87;
  ((void (*)(char *, void, uint64_t))v90)(v85, v86, v87);
  sub_1AFFC9D28();
  swift_release();
  v88(v54, v55);
  v97(v46, v94, v48);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  v53(v46, v48);
  sub_1AFFC9F98();
  sub_1AFDB3E88(0, (unint64_t *)&unk_1EB81AA58);
  sub_1AFFCA388();
  swift_release();
  swift_release();
  sub_1AFFC9F98();
  sub_1AFDB3E88(0, (unint64_t *)&unk_1EB81AA20);
  sub_1AFFCA388();
  swift_release();
  swift_release();
  sub_1AFFC9F98();
  sub_1AFDB3E88(0, &qword_1EB81A818);
  sub_1AFFCA388();
  swift_release();
  unint64_t v56 = v90;
  ((void (*)(char *, void, uint64_t))v90)(v54, v86, v55);
  sub_1AFFC9D28();
  swift_release();
  uint64_t v57 = v55;
  uint64_t v58 = v55;
  unint64_t v59 = v88;
  v88(v54, v57);
  uint64_t v60 = v89;
  v97(v46, v94, v89);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  v96(v46, v60);
  sub_1AFFC9F98();
  sub_1AFDB3E88(0, (unint64_t *)&unk_1EB81A8F0);
  sub_1AFFCA388();
  swift_release();
  ((void (*)(char *, void, uint64_t))v56)(v54, v91, v58);
  sub_1AFFC9D28();
  swift_release();
  v59(v54, v58);
  ((void (*)(char *, void, uint64_t))v56)(v54, v86, v58);
  sub_1AFFC9D28();
  swift_release();
  v59(v54, v58);
  uint64_t v61 = v84;
  uint64_t v62 = v94;
  uint64_t v63 = v89;
  uint64_t v64 = v97;
  v97(v84, v94, v89);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  uint64_t v65 = v96;
  v96(v61, v63);
  sub_1AFFC9F98();
  sub_1AFDB3E88(0, (unint64_t *)&unk_1EB81AA68);
  sub_1AFFCA388();
  swift_release();
  v64(v61, v62, v63);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  v65(v61, v63);
  sub_1AFFC9F98();
  sub_1AFDB3E88(0, (unint64_t *)&unk_1EB81A980);
  sub_1AFFCA388();
  swift_release();
  v64(v61, v62, v63);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  v65(v61, v63);
  sub_1AFFC9F98();
  sub_1AFDB3108(0, (unint64_t *)&unk_1EB81AC08, MEMORY[0x1E4F276F0], MEMORY[0x1E4FAB0D8]);
  sub_1AFFCA378();
  swift_release();
  swift_release();
  sub_1AFFC9F98();
  sub_1AFDB3E88(0, &qword_1EB81A9F0);
  sub_1AFFCA388();
  swift_release();
  swift_release();
  sub_1AFFC9FA8();
  type metadata accessor for PermanentURLFactory();
  sub_1AFFC8E48();
  sub_1AFFCA378();
  swift_release();
  swift_release();
  swift_release();
  sub_1AFFC9FA8();
  sub_1AFDB3E88(0, &qword_1EB81AAD8);
  sub_1AFFCA388();
  swift_release();
  swift_release();
  sub_1AFFC9FA8();
  sub_1AFDB3E88(0, (unint64_t *)&unk_1EB81AB00);
  sub_1AFFCA388();
  swift_release();
  swift_release();
  sub_1AFFC9FA8();
  sub_1AFDB3E88(0, &qword_1EB81AA08);
  sub_1AFFCA388();
  swift_release();
  swift_release();
  sub_1AFFC9FA8();
  sub_1AFDB3E88(0, (unint64_t *)&unk_1EB81AAE0);
  sub_1AFFCA388();
  swift_release();
  swift_release();
  sub_1AFFC9FA8();
  sub_1AFDB3E88(0, &qword_1EB81AA78);
  sub_1AFFCA388();
  swift_release();
  swift_release();
  sub_1AFFC9FA8();
  sub_1AFDB3E88(0, &qword_1E9AFA4D0);
  sub_1AFFCA388();
  swift_release();
  v97(v61, v62, v63);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  v65(v61, v63);
  sub_1AFFC9FA8();
  sub_1AFDB3E88(0, &qword_1EB81AB58);
  sub_1AFFC8E48();
  sub_1AFFCA388();
  swift_release();
  swift_release();
  swift_release();
  sub_1AFFC9FB8();
  __swift_project_boxed_opaque_existential_1(v100, v101);
  sub_1AFDB3E88(0, &qword_1EB81ABE0);
  uint64_t v66 = *MEMORY[0x1E4FAAA00];
  uint64_t v67 = v83;
  long long v82 = *(void (**)(char *, uint64_t, uint64_t))(v83 + 104);
  uint64_t v68 = v80;
  uint64_t v69 = v81;
  v82(v80, v66, v81);
  sub_1AFFCA408();
  uint64_t v70 = v67 + 8;
  long long v71 = *(void (**)(char *, uint64_t))(v67 + 8);
  uint64_t v83 = v70;
  v71(v68, v69);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v100);
  sub_1AFFC9FB8();
  __swift_project_boxed_opaque_existential_1(v100, v101);
  sub_1AFFCA478();
  v82(v68, v66, v69);
  sub_1AFFCA3F8();
  v71(v68, v69);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v100);
  sub_1AFFC9F98();
  sub_1AFDB3E88(0, (unint64_t *)&unk_1EB81A928);
  sub_1AFFCA388();
  swift_release();
  swift_release();
  sub_1AFFC9F98();
  sub_1AFDB3E88(0, &qword_1EB81AB10);
  sub_1AFFCA388();
  swift_release();
  long long v72 = v85;
  uint64_t v73 = v87;
  uint64_t v74 = v90;
  ((void (*)(char *, void, uint64_t))v90)(v85, v91, v87);
  sub_1AFFC9D28();
  swift_release();
  uint64_t v75 = v88;
  v88(v72, v73);
  unint64_t v76 = v84;
  uint64_t v77 = v89;
  v97(v84, v94, v89);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  v96(v76, v77);
  sub_1AFFC9F98();
  sub_1AFDB3E88(0, &qword_1EB81AB28);
  sub_1AFFCA388();
  swift_release();
  swift_release();
  sub_1AFFC9FA8();
  sub_1AFFCA388();
  swift_release();
  swift_release();
  sub_1AFFC9F98();
  sub_1AFDB3E88(0, &qword_1EB81A5A0);
  sub_1AFFCA388();
  swift_release();
  swift_release();
  sub_1AFFC9FA8();
  sub_1AFDB3E88(0, (unint64_t *)&unk_1EB81AA98);
  sub_1AFFCA388();
  swift_release();
  ((void (*)(char *, void, uint64_t))v74)(v72, v86, v73);
  sub_1AFFC9D28();
  swift_release();
  v75(v72, v73);
  v97(v76, v94, v77);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  v96(v76, v77);
  sub_1AFFC9FA8();
  sub_1AFFC9E18();
  sub_1AFFCA388();
  swift_release();
  swift_release();
  sub_1AFFC9FA8();
  sub_1AFDB3E88(0, &qword_1EB81A5D0);
  sub_1AFFCA388();
  swift_release();
  return swift_release();
}

uint64_t sub_1AFDAC8EC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB3DD4(0, (unint64_t *)&qword_1EB81ABF8, (unint64_t *)&unk_1EB81AC90);
  uint64_t result = sub_1AFFC9E58();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB3E88(0, &qword_1EB81A9D8);
  uint64_t result = sub_1AFFC9E68();
  if (!v12)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB3E88(0, &qword_1EB81AA40);
  uint64_t result = sub_1AFFC9E68();
  if (v10)
  {
    type metadata accessor for CloudKitWatchlistDefaultsProvider();
    uint64_t v6 = swift_allocObject();
    sub_1AFD80454(&v9, v6 + 16);
    uint64_t v7 = type metadata accessor for CloudKitWatchlistService();
    uint64_t v8 = swift_allocObject();
    uint64_t result = sub_1AFDB32C8(v5, (uint64_t)v11, v6, v8);
    a2[3] = v7;
    a2[4] = (uint64_t)&off_1F08764A8;
    *a2 = result;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1AFDACA74@<X0>(uint64_t *a1@<X8>)
{
  return sub_1AFDB2FB0((uint64_t (*)(void))type metadata accessor for StubWatchlistService, sub_1AFDA24AC, (uint64_t)&off_1F08735F8, a1);
}

uint64_t sub_1AFDACAAC@<X0>(uint64_t *a1@<X8>)
{
  return sub_1AFDB2FB0((uint64_t (*)(void))type metadata accessor for TestWatchlistService, (uint64_t (*)(void))sub_1AFE33280, (uint64_t)&off_1F0873960, a1);
}

uint64_t sub_1AFDACAE4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB3E88(0, (unint64_t *)&unk_1EB81AA30);
  uint64_t result = sub_1AFFC9E68();
  if (v7)
  {
    uint64_t v4 = type metadata accessor for WatchlistSortingService();
    uint64_t v5 = swift_allocObject();
    uint64_t result = sub_1AFD80454(&v6, v5 + 16);
    a2[3] = v4;
    a2[4] = (uint64_t)&off_1F0875220;
    *a2 = v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1AFDACB98@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1AFD2CEB0((uint64_t)a1, (uint64_t)v41);
  char v4 = sub_1AFDB35BC(v41);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if ((v4 & 1) == 0)
  {
    sub_1AFDB3E88(0, (unint64_t *)&unk_1EB81AAE0);
    uint64_t result = sub_1AFFC9E68();
    if (v42)
    {
      uint64_t v6 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v41, v42);
      double v7 = MEMORY[0x1F4188790](v6);
      long long v9 = (void *)((char *)&v37[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v10 + 16))(v9, v7);
      uint64_t v11 = *v9;
      uint64_t v12 = type metadata accessor for YahooBaseOperationFactory();
      uint64_t v38 = v12;
      long long v39 = &off_1F0877A08;
      v37[0] = v11;
      uint64_t v13 = type metadata accessor for YahooQuoteService();
      char v14 = (void *)swift_allocObject();
      uint64_t v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v37, v12);
      double v16 = MEMORY[0x1F4188790](v15);
      unint64_t v18 = (void *)((char *)&v37[-1] - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v19 + 16))(v18, v16);
      uint64_t v20 = *v18;
      void v14[5] = v12;
      void v14[6] = &off_1F0877A08;
      _OWORD v14[2] = v20;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
      char v21 = &off_1F0870580;
LABEL_7:
      a2[3] = v13;
      a2[4] = v21;
      *a2 = v14;
      return result;
    }
    __break(1u);
    goto LABEL_9;
  }
  sub_1AFDB3E88(0, &qword_1EB81AA78);
  uint64_t result = sub_1AFFC9E68();
  if (!v42)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB325C();
  uint64_t result = sub_1AFFC9E68();
  uint64_t v22 = v40;
  if (v40)
  {
    uint64_t v23 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v41, v42);
    double v24 = MEMORY[0x1F4188790](v23);
    uint64_t v26 = (void *)((char *)&v37[-1] - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v27 + 16))(v26, v24);
    uint64_t v28 = *v26;
    uint64_t v29 = type metadata accessor for SDSBaseOperationFactory();
    uint64_t v38 = v29;
    long long v39 = &off_1F0875070;
    v37[0] = v28;
    uint64_t v13 = type metadata accessor for SDSQuoteService();
    char v14 = (void *)swift_allocObject();
    uint64_t v30 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v37, v29);
    double v31 = MEMORY[0x1F4188790](v30);
    uint64_t v33 = (void *)((char *)&v37[-1] - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v34 + 16))(v33, v31);
    uint64_t v35 = *v33;
    void v14[5] = v29;
    void v14[6] = &off_1F0875070;
    _OWORD v14[2] = v35;
    v14[7] = v22;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
    char v21 = &off_1F086C590;
    goto LABEL_7;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_1AFDAD008@<X0>(uint64_t *a1@<X8>)
{
  return sub_1AFDB2FB0((uint64_t (*)(void))type metadata accessor for StubQuoteService, sub_1AFF386F0, (uint64_t)&off_1F086EA10, a1);
}

uint64_t sub_1AFDAD040@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1AFD2CEB0((uint64_t)a1, (uint64_t)v38);
  char v4 = sub_1AFDB35BC(v38);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (v4)
  {
    sub_1AFDB3E88(0, &qword_1EB81AA78);
    uint64_t result = sub_1AFFC9E68();
    if (v39)
    {
      uint64_t v22 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v38, v39);
      double v23 = MEMORY[0x1F4188790](v22);
      uint64_t v25 = (void *)((char *)v35 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v26 + 16))(v25, v23);
      uint64_t v27 = *v25;
      uint64_t v28 = type metadata accessor for SDSBaseOperationFactory();
      uint64_t v36 = v28;
      uint64_t v37 = &off_1F0875070;
      v35[0] = v27;
      uint64_t v13 = type metadata accessor for SDSQuoteDetailService();
      char v14 = (void *)swift_allocObject();
      uint64_t v29 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v35, v28);
      double v30 = MEMORY[0x1F4188790](v29);
      uint64_t v32 = (void *)((char *)v35 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v33 + 16))(v32, v30);
      uint64_t v34 = *v32;
      void v14[5] = v28;
      void v14[6] = &off_1F0875070;
      _OWORD v14[2] = v34;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
      char v21 = &off_1F0874048;
      goto LABEL_6;
    }
  }
  else
  {
    sub_1AFDB3E88(0, (unint64_t *)&unk_1EB81AAE0);
    uint64_t result = sub_1AFFC9E68();
    if (v39)
    {
      uint64_t v6 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v38, v39);
      double v7 = MEMORY[0x1F4188790](v6);
      long long v9 = (void *)((char *)v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v10 + 16))(v9, v7);
      uint64_t v11 = *v9;
      uint64_t v12 = type metadata accessor for YahooBaseOperationFactory();
      uint64_t v36 = v12;
      uint64_t v37 = &off_1F0877A08;
      v35[0] = v11;
      uint64_t v13 = type metadata accessor for YahooQuoteDetailService();
      char v14 = (void *)swift_allocObject();
      uint64_t v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v35, v12);
      double v16 = MEMORY[0x1F4188790](v15);
      unint64_t v18 = (void *)((char *)v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v19 + 16))(v18, v16);
      uint64_t v20 = *v18;
      void v14[5] = v12;
      void v14[6] = &off_1F0877A08;
      _OWORD v14[2] = v20;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
      char v21 = &off_1F08763F8;
LABEL_6:
      a2[3] = v13;
      a2[4] = v21;
      *a2 = v14;
      return result;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1AFDAD464@<X0>(uint64_t *a1@<X8>)
{
  return sub_1AFDB2FB0((uint64_t (*)(void))type metadata accessor for StubQuoteDetailService, sub_1AFF37868, (uint64_t)&off_1F0874720, a1);
}

uint64_t sub_1AFDAD49C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1AFD2CEB0((uint64_t)a1, (uint64_t)v38);
  char v4 = sub_1AFDB35BC(v38);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (v4)
  {
    sub_1AFDB3E88(0, &qword_1EB81AA78);
    uint64_t result = sub_1AFFC9E68();
    if (v39)
    {
      uint64_t v22 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v38, v39);
      double v23 = MEMORY[0x1F4188790](v22);
      uint64_t v25 = (void *)((char *)v35 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v26 + 16))(v25, v23);
      uint64_t v27 = *v25;
      uint64_t v28 = type metadata accessor for SDSBaseOperationFactory();
      uint64_t v36 = v28;
      uint64_t v37 = &off_1F0875070;
      v35[0] = v27;
      uint64_t v13 = type metadata accessor for SDSChartService();
      char v14 = (void *)swift_allocObject();
      uint64_t v29 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v35, v28);
      double v30 = MEMORY[0x1F4188790](v29);
      uint64_t v32 = (void *)((char *)v35 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v33 + 16))(v32, v30);
      uint64_t v34 = *v32;
      void v14[5] = v28;
      void v14[6] = &off_1F0875070;
      _OWORD v14[2] = v34;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
      char v21 = &off_1F086C268;
      goto LABEL_6;
    }
  }
  else
  {
    sub_1AFDB3E88(0, (unint64_t *)&unk_1EB81AB00);
    uint64_t result = sub_1AFFC9E68();
    if (v39)
    {
      uint64_t v6 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v38, v39);
      double v7 = MEMORY[0x1F4188790](v6);
      long long v9 = (void *)((char *)v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v10 + 16))(v9, v7);
      uint64_t v11 = *v9;
      uint64_t v12 = type metadata accessor for YahooChartOperationFactory();
      uint64_t v36 = v12;
      uint64_t v37 = &off_1F0877C38;
      v35[0] = v11;
      uint64_t v13 = type metadata accessor for YahooChartService();
      char v14 = (void *)swift_allocObject();
      uint64_t v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v35, v12);
      double v16 = MEMORY[0x1F4188790](v15);
      unint64_t v18 = (void *)((char *)v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v19 + 16))(v18, v16);
      uint64_t v20 = *v18;
      void v14[5] = v12;
      void v14[6] = &off_1F0877C38;
      _OWORD v14[2] = v20;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
      char v21 = &off_1F086FCC0;
LABEL_6:
      a2[3] = v13;
      a2[4] = v21;
      *a2 = v14;
      return result;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1AFDAD8C0@<X0>(uint64_t *a1@<X8>)
{
  return sub_1AFDB2FB0((uint64_t (*)(void))type metadata accessor for StubChartService, sub_1AFFBB9B0, (uint64_t)&off_1F086EA00, a1);
}

uint64_t sub_1AFDAD8F8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB3E88(0, &qword_1EB81AAD8);
  uint64_t result = sub_1AFFC9E68();
  if (v21)
  {
    uint64_t v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v21);
    double v5 = MEMORY[0x1F4188790](v4);
    double v7 = (void *)((char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v8 + 16))(v7, v5);
    uint64_t v9 = *v7;
    uint64_t v10 = type metadata accessor for SparklineOperationFactory();
    void v19[3] = v10;
    v19[4] = &off_1F0877928;
    v19[0] = v9;
    uint64_t v11 = type metadata accessor for SparklineService();
    uint64_t v12 = (void *)swift_allocObject();
    uint64_t v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v10);
    double v14 = MEMORY[0x1F4188790](v13);
    double v16 = (void *)((char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v17 + 16))(v16, v14);
    uint64_t v18 = *v16;
    void v12[5] = v10;
    void v12[6] = &off_1F0877928;
    void v12[2] = v18;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    a2[3] = v11;
    a2[4] = &off_1F086E938;
    *a2 = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1AFDADB24@<X0>(uint64_t *a1@<X8>)
{
  return sub_1AFDB2FB0((uint64_t (*)(void))type metadata accessor for StubSparklineService, sub_1AFE84378, (uint64_t)&off_1F0873508, a1);
}

uint64_t sub_1AFDADB5C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1AFD2CEB0((uint64_t)a1, (uint64_t)v38);
  char v4 = sub_1AFDB35BC(v38);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (v4)
  {
    sub_1AFDB3E88(0, &qword_1EB81AA78);
    uint64_t result = sub_1AFFC9E68();
    if (v39)
    {
      uint64_t v22 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v38, v39);
      double v23 = MEMORY[0x1F4188790](v22);
      uint64_t v25 = (void *)((char *)v35 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v26 + 16))(v25, v23);
      uint64_t v27 = *v25;
      uint64_t v28 = type metadata accessor for SDSBaseOperationFactory();
      uint64_t v36 = v28;
      uint64_t v37 = &off_1F0875070;
      v35[0] = v27;
      uint64_t v13 = type metadata accessor for SDSSearchService();
      double v14 = (void *)swift_allocObject();
      uint64_t v29 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v35, v28);
      double v30 = MEMORY[0x1F4188790](v29);
      uint64_t v32 = (void *)((char *)v35 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v33 + 16))(v32, v30);
      uint64_t v34 = *v32;
      void v14[5] = v28;
      void v14[6] = &off_1F0875070;
      _OWORD v14[2] = v34;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
      uint64_t v21 = &off_1F086E8F8;
      goto LABEL_6;
    }
  }
  else
  {
    sub_1AFDB3E88(0, (unint64_t *)&unk_1EB81AAE0);
    uint64_t result = sub_1AFFC9E68();
    if (v39)
    {
      uint64_t v6 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v38, v39);
      double v7 = MEMORY[0x1F4188790](v6);
      uint64_t v9 = (void *)((char *)v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v10 + 16))(v9, v7);
      uint64_t v11 = *v9;
      uint64_t v12 = type metadata accessor for YahooBaseOperationFactory();
      uint64_t v36 = v12;
      uint64_t v37 = &off_1F0877A08;
      v35[0] = v11;
      uint64_t v13 = type metadata accessor for YahooSearchService();
      double v14 = (void *)swift_allocObject();
      uint64_t v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v35, v12);
      double v16 = MEMORY[0x1F4188790](v15);
      uint64_t v18 = (void *)((char *)v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v19 + 16))(v18, v16);
      uint64_t v20 = *v18;
      void v14[5] = v12;
      void v14[6] = &off_1F0877A08;
      _OWORD v14[2] = v20;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
      uint64_t v21 = &off_1F0872120;
LABEL_6:
      a2[3] = v13;
      a2[4] = v21;
      *a2 = v14;
      return result;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1AFDADF80@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB3E88(0, (unint64_t *)&unk_1EB81A970);
  uint64_t result = sub_1AFFC9E68();
  if (v5[3])
  {
    uint64_t v4 = type metadata accessor for LanguageSettings();
    swift_allocObject();
    uint64_t result = sub_1AFDB3FFC(v5);
    a2[3] = v4;
    a2[4] = (uint64_t)&off_1F086CE30;
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1AFDAE030@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB3E88(0, (unint64_t *)&unk_1EB81A970);
  uint64_t result = sub_1AFFC9E68();
  if (!v54)
  {
    __break(1u);
    goto LABEL_18;
  }
  sub_1AFD80454(&v53, (uint64_t)v55);
  uint64_t v5 = v56;
  uint64_t v6 = v57;
  __swift_project_boxed_opaque_existential_1(v55, v56);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6))
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1AFDB3E88(0, &qword_1EB81A818);
    uint64_t result = sub_1AFFC9E68();
    if (v54)
    {
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      sub_1AFDB3E88(0, (unint64_t *)&unk_1EB81A8F0);
      uint64_t result = sub_1AFFC9E68();
      if (v51)
      {
        __swift_project_boxed_opaque_existential_1(a1, a1[3]);
        sub_1AFDB3E88(0, (unint64_t *)&unk_1EB81AA68);
        uint64_t result = sub_1AFFC9E68();
        if (v48)
        {
          uint64_t v7 = v49;
          __swift_project_boxed_opaque_existential_1(a1, a1[3]);
          sub_1AFDB3E88(0, &qword_1EB81AA40);
          uint64_t result = sub_1AFFC9E68();
          if (v47)
          {
            __swift_project_boxed_opaque_existential_1(a1, a1[3]);
            sub_1AFDB3E88(0, &qword_1EB81AA90);
            uint64_t result = sub_1AFFC9E68();
            uint64_t v8 = v44;
            if (v44)
            {
              uint64_t v9 = v45;
              __swift_project_boxed_opaque_existential_1(a1, a1[3]);
              sub_1AFDB3E88(0, &qword_1EB81A870);
              uint64_t result = sub_1AFFC9E68();
              if (v43)
              {
                uint64_t v10 = type metadata accessor for NewsStockFeedService();
                uint64_t v11 = (void *)swift_allocObject();
                sub_1AFD80454(&v53, (uint64_t)(v11 + 2));
                sub_1AFD80454(&v50, (uint64_t)(v11 + 7));
                v11[12] = v48;
                v11[13] = v7;
                sub_1AFD80454(&v46, (uint64_t)(v11 + 14));
                v11[19] = v8;
                v11[20] = v9;
                sub_1AFD80454(&v42, (uint64_t)(v11 + 21));
                uint64_t v12 = &off_1F0873200;
LABEL_16:
                a2[3] = v10;
                a2[4] = v12;
                *a2 = v11;
                return __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
              }
              goto LABEL_23;
            }
LABEL_22:
            __break(1u);
LABEL_23:
            __break(1u);
LABEL_24:
            __break(1u);
            goto LABEL_25;
          }
LABEL_21:
          __break(1u);
          goto LABEL_22;
        }
LABEL_20:
        __break(1u);
        goto LABEL_21;
      }
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  sub_1AFD2CEB0((uint64_t)a1, (uint64_t)&v53);
  char v13 = sub_1AFDB35BC(&v53);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if ((v13 & 1) == 0)
  {
    sub_1AFDB3E88(0, (unint64_t *)&unk_1EB81AAE0);
    uint64_t result = sub_1AFFC9E68();
    if (v54)
    {
      uint64_t v14 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v53, v54);
      double v15 = MEMORY[0x1F4188790](v14);
      uint64_t v17 = (uint64_t *)((char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v18 + 16))(v17, v15);
      uint64_t v19 = *v17;
      uint64_t v20 = type metadata accessor for YahooBaseOperationFactory();
      uint64_t v51 = v20;
      uint64_t v52 = &off_1F0877A08;
      *(void *)&long long v50 = v19;
      uint64_t v10 = type metadata accessor for YahooStockFeedService();
      uint64_t v11 = (void *)swift_allocObject();
      uint64_t v21 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v50, v20);
      double v22 = MEMORY[0x1F4188790](v21);
      uint64_t v24 = (uint64_t *)((char *)&v41 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v25 + 16))(v24, v22);
      uint64_t v26 = *v24;
      void v11[5] = v20;
      v11[6] = &off_1F0877A08;
      v11[2] = v26;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v50);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v53);
      uint64_t v12 = &off_1F08743D0;
      goto LABEL_16;
    }
    goto LABEL_24;
  }
  sub_1AFDB3E88(0, &qword_1EB81AA78);
  uint64_t result = sub_1AFFC9E68();
  if (!v54)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB325C();
  uint64_t result = sub_1AFFC9E68();
  uint64_t v27 = v46;
  if ((void)v46)
  {
    uint64_t v28 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v53, v54);
    double v29 = MEMORY[0x1F4188790](v28);
    uint64_t v31 = (uint64_t *)((char *)&v41 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v32 + 16))(v31, v29);
    uint64_t v33 = *v31;
    uint64_t v34 = type metadata accessor for SDSBaseOperationFactory();
    uint64_t v51 = v34;
    uint64_t v52 = &off_1F0875070;
    *(void *)&long long v50 = v33;
    uint64_t v10 = type metadata accessor for SDSStockFeedService();
    uint64_t v11 = (void *)swift_allocObject();
    uint64_t v35 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v50, v34);
    double v36 = MEMORY[0x1F4188790](v35);
    uint64_t v38 = (uint64_t *)((char *)&v41 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v39 + 16))(v38, v36);
    uint64_t v40 = *v38;
    void v11[5] = v34;
    v11[6] = &off_1F0875070;
    v11[2] = v40;
    v11[7] = v27;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v50);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v53);
    uint64_t v12 = &off_1F08727A8;
    goto LABEL_16;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1AFDAE78C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1AFDB2FB0((uint64_t (*)(void))type metadata accessor for StubStockFeedService, sub_1AFF3A67C, (uint64_t)&off_1F0873518, a1);
}

uint64_t sub_1AFDAE7C4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB3E88(0, (unint64_t *)&unk_1EB81A980);
  sub_1AFFC9E68();
  if (v10)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1AFDB3E88(0, (unint64_t *)&unk_1EB81A8F0);
    sub_1AFFC9E68();
    if (v8)
    {
      uint64_t v4 = type metadata accessor for TestStockFeedService();
      uint64_t v5 = swift_allocObject();
      sub_1AFDB3C90();
      swift_allocObject();
      *(void *)(v5 + 16) = sub_1AFFCA028();
      sub_1AFD80454(&v9, v5 + 24);
      uint64_t result = sub_1AFD80454(&v7, v5 + 64);
      a2[3] = v4;
      a2[4] = (uint64_t)&off_1F0873890;
      *a2 = v5;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_1AFDAE93C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB3E88(0, (unint64_t *)&unk_1EB81A9E0);
  uint64_t result = sub_1AFFC9E48();
  if (!v13)
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_1AFD80454(&v12, (uint64_t)v15);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB3E88(0, (unint64_t *)&unk_1EB81A970);
  uint64_t result = sub_1AFFC9E68();
  if (!v11)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  sub_1AFD80454(&v10, (uint64_t)&v12);
  uint64_t v5 = v13;
  uint64_t v6 = v14;
  __swift_project_boxed_opaque_existential_1(&v12, v13);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6) & 1) == 0)
  {
    sub_1AFD80454(v15, (uint64_t)a2);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v12);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFD2D178(0, (unint64_t *)&unk_1EB81AD70);
  uint64_t result = sub_1AFFC9E38();
  if (result)
  {
    uint64_t v7 = result;
    sub_1AFD2CEB0((uint64_t)v15, (uint64_t)&v10);
    uint64_t v8 = type metadata accessor for NewsStockMetadataService();
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = v7;
    sub_1AFD80454(&v10, v9 + 24);
    a2[3] = v8;
    a2[4] = (uint64_t)&off_1F08766C8;
    *a2 = v9;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v12);
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_1AFDAEB2C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1AFDB2FB0((uint64_t (*)(void))type metadata accessor for StubStockMetadataSevice, sub_1AFD81324, (uint64_t)&off_1F0875090, a1);
}

id sub_1AFDAEB64@<X0>(void *a1@<X8>)
{
  uint64_t v2 = (objc_class *)type metadata accessor for IdentificationService();
  id result = objc_msgSend(objc_allocWithZone(v2), sel_init);
  a1[3] = v2;
  a1[4] = &off_1F0873E78;
  *a1 = result;
  return result;
}

uint64_t sub_1AFDAEBB0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for StubIdentificationService();
  swift_allocObject();
  uint64_t result = sub_1AFF54CA8();
  a1[3] = v2;
  a1[4] = (uint64_t)&off_1F0877938;
  *a1 = result;
  return result;
}

uint64_t sub_1AFDAEC08(void *a1, void *a2)
{
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  uint64_t result = sub_1AFFC9E68();
  if (v6[40] == 255)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v4 + 8))(v6, v3, v4);
    return sub_1AFDB3E34((uint64_t)v6);
  }
  return result;
}

void *sub_1AFDAECBC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB3E88(0, (unint64_t *)&unk_1EB81A970);
  uint64_t result = (void *)sub_1AFFC9E68();
  if (!v10)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  sub_1AFD80454(&v9, (uint64_t)v11);
  uint64_t v5 = v12;
  uint64_t v6 = v13;
  __swift_project_boxed_opaque_existential_1(v11, v12);
  char v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(v5, v6);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (v7)
  {
    sub_1AFD2D178(0, (unint64_t *)&unk_1EB81AD10);
    uint64_t result = (void *)sub_1AFFC9E58();
    if (result)
    {
      id v8 = objc_msgSend(result, sel_userInfo);
      swift_unknownObjectRelease();
      *(void *)a2 = v8;
      *(unsigned char *)(a2 + 40) = 0;
      return (void *)__swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
    }
    goto LABEL_9;
  }
  sub_1AFDB3E88(0, &qword_1EB81A730);
  uint64_t result = (void *)sub_1AFFC9E68();
  if (v10)
  {
    sub_1AFD80454(&v9, a2);
    *(unsigned char *)(a2 + 40) = 1;
    return (void *)__swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_1AFDAEE54@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB3E88(0, &qword_1E9AFA4D0);
  uint64_t result = sub_1AFFC9E68();
  if (v25)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1AFDB3E88(0, &qword_1EB81AB58);
    uint64_t result = sub_1AFFC9E68();
    if (v23)
    {
      uint64_t v5 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v23);
      double v6 = MEMORY[0x1F4188790](v5);
      id v8 = (void *)((char *)&v21[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v9 + 16))(v8, v6);
      uint64_t v10 = *v8;
      uint64_t v11 = type metadata accessor for RemoteConfigurationSettingsFactory();
      v21[3] = v11;
      v21[4] = &off_1F0878D38;
      v21[0] = v10;
      uint64_t v12 = type metadata accessor for RemoteAppConfigurationService();
      uint64_t v13 = (void *)swift_allocObject();
      uint64_t v14 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v21, v11);
      double v15 = MEMORY[0x1F4188790](v14);
      uint64_t v17 = (void *)((char *)&v21[-1] - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v18 + 16))(v17, v15);
      uint64_t v19 = *v17;
      v13[10] = v11;
      v13[11] = &off_1F0878D38;
      v13[7] = v19;
      sub_1AFD80454(&v24, (uint64_t)(v13 + 2));
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
      a2[3] = v12;
      a2[4] = &off_1F0878508;
      *a2 = v13;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1AFDAF0E0@<X0>(uint64_t *a1@<X8>)
{
  return sub_1AFDB180C((uint64_t (*)(void))type metadata accessor for AttributionSourceAssetService, (uint64_t)&off_1F08784E8, a1);
}

uint64_t sub_1AFDAF100@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1AFDB3108(0, &qword_1EB81ABC0, MEMORY[0x1E4FAA988], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  double v6 = (char *)&v13 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB3108(0, (unint64_t *)&unk_1EB81AC08, MEMORY[0x1E4F276F0], MEMORY[0x1E4FAB0D8]);
  uint64_t result = sub_1AFFC9E38();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v8 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v9 = sub_1AFFC9E18();
  sub_1AFFC9E68();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9);
  if (result == 1)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB3E88(0, (unint64_t *)&unk_1EB81A808);
  uint64_t result = sub_1AFFC9E68();
  if (v15)
  {
    uint64_t v11 = type metadata accessor for SDSAuthTokenService(0);
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v8;
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v12 + OBJC_IVAR____TtC10StocksCore19SDSAuthTokenService_networkProxy, v6, v9);
    uint64_t result = sub_1AFD80454(&v14, v12 + OBJC_IVAR____TtC10StocksCore19SDSAuthTokenService_networkMonitor);
    a2[3] = v11;
    a2[4] = (uint64_t)&off_1F0872568;
    *a2 = v12;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1AFDAF384@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFD8F6AC(0, (unint64_t *)&unk_1EB81AE38);
  uint64_t result = sub_1AFFC9E58();
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB3E88(0, &qword_1EB81AA40);
  uint64_t result = sub_1AFFC9E68();
  if (!v27)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB3E88(0, &qword_1EB81A5D0);
  uint64_t result = sub_1AFFC9E68();
  if (!v25)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB3E88(0, &qword_1EB81A938);
  uint64_t result = sub_1AFFC9E68();
  if (v23)
  {
    uint64_t v6 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v23);
    double v7 = MEMORY[0x1F4188790](v6);
    uint64_t v9 = (void *)((char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v10 + 16))(v9, v7);
    uint64_t v11 = *v9;
    uint64_t v12 = type metadata accessor for UserRegionProvider();
    v21[3] = v12;
    v21[4] = &off_1F0870E90;
    v21[0] = v11;
    uint64_t v13 = type metadata accessor for FeatureAvailability();
    uint64_t v14 = swift_allocObject();
    uint64_t v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v21, v12);
    double v16 = MEMORY[0x1F4188790](v15);
    uint64_t v18 = (void *)((char *)v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v19 + 16))(v18, v16);
    uint64_t v20 = sub_1AFDB34C8(v5, (uint64_t)v26, (uint64_t)v24, *v18, v14);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    a2[3] = v13;
    a2[4] = (uint64_t)&off_1F0872130;
    *a2 = v20;
    return result;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1AFDAF6AC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB3DD4(0, (unint64_t *)&qword_1EB81ABF8, (unint64_t *)&unk_1EB81AC90);
  uint64_t result = sub_1AFFC9E58();
  if (result)
  {
    uint64_t v5 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1AFDB3E88(0, &qword_1EB81AA40);
    uint64_t result = sub_1AFFC9E68();
    if (v9)
    {
      uint64_t v6 = type metadata accessor for CloudKitPollingService();
      uint64_t v7 = swift_allocObject();
      *(void *)(v7 + 64) = 0;
      *(void *)(v7 + 16) = v5;
      uint64_t result = sub_1AFD80454(&v8, v7 + 24);
      a2[3] = v6;
      a2[4] = (uint64_t)&off_1F08744E0;
      *a2 = v7;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1AFDAF7C4@<X0>(uint64_t *a1@<X8>)
{
  return sub_1AFDB25A4((uint64_t (*)(void))type metadata accessor for StubPrivateDataPollingService, (uint64_t)&off_1F0878558, a1);
}

uint64_t sub_1AFDAF7E4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB3DD4(0, (unint64_t *)&qword_1EB81ABF8, (unint64_t *)&unk_1EB81AC90);
  uint64_t result = sub_1AFFC9E58();
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = type metadata accessor for UserInfo();
    uint64_t v6 = swift_allocObject();
    uint64_t v7 = MEMORY[0x1E4FBC860];
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v7;
    sub_1AFFC8E48();
    sub_1AFFC8E48();
    sub_1AFFCA518();
    swift_release();
    swift_release();
    uint64_t result = swift_release();
    a2[3] = v5;
    a2[4] = (uint64_t)&off_1F0879608;
    *a2 = v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1AFDAF8D0@<X0>(uint64_t *a1@<X8>)
{
  sub_1AFDB3108(0, (unint64_t *)&qword_1EB818BC0, MEMORY[0x1E4F27A00], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v12 - v3;
  uint64_t v5 = sub_1AFFC9A78();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  long long v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UserRegionProvider();
  uint64_t v10 = swift_allocObject();
  sub_1AFFC9A28();
  sub_1AFFC9A18();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t result = sub_1AFDB3D40((uint64_t)v4, v10 + OBJC_IVAR____TtC10StocksCore18UserRegionProvider_currentRegion);
  a1[3] = v9;
  a1[4] = (uint64_t)&off_1F0870E90;
  *a1 = v10;
  return result;
}

uint64_t sub_1AFDAFA60@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (qword_1EB817C38 != -1) {
    swift_once();
  }
  sub_1AFDB3C48(&qword_1EB818FD8, a2, (void (*)(uint64_t))type metadata accessor for ServiceAssembly);
  sub_1AFFC9BB8();
  if (v17)
  {
    uint64_t v5 = type metadata accessor for EmptyTopStoriesService();
    uint64_t result = swift_allocObject();
    uint64_t v7 = (void *)result;
    long long v8 = &off_1F08744F0;
LABEL_11:
    a3[3] = v5;
    a3[4] = v8;
    *a3 = v7;
    return result;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB3E88(0, (unint64_t *)&unk_1EB81AA98);
  uint64_t result = sub_1AFFC9E68();
  if (!v18)
  {
    __break(1u);
    goto LABEL_13;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB3E88(0, (unint64_t *)&unk_1EB81A980);
  uint64_t result = sub_1AFFC9E68();
  if (!v16)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB3E88(0, (unint64_t *)&unk_1EB81AA68);
  uint64_t result = sub_1AFFC9E68();
  if (!v13)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v9 = v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB3E88(0, &qword_1EB81AA40);
  uint64_t result = sub_1AFFC9E68();
  if (!v12)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFD2D178(0, (unint64_t *)&unk_1EB81AE00);
  uint64_t result = sub_1AFFC9E58();
  if (result)
  {
    uint64_t v10 = result;
    uint64_t v5 = type metadata accessor for TopStoriesService();
    uint64_t v7 = (void *)swift_allocObject();
    sub_1AFD80454(&v17, (uint64_t)(v7 + 2));
    sub_1AFD80454(&v15, (uint64_t)(v7 + 7));
    v7[12] = v13;
    v7[13] = v9;
    uint64_t result = sub_1AFD80454(&v11, (uint64_t)(v7 + 14));
    v7[19] = v10;
    long long v8 = &off_1F086F8C8;
    goto LABEL_11;
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_1AFDAFD64@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB3E88(0, (unint64_t *)&unk_1EB81A980);
  sub_1AFFC9E68();
  if (v7)
  {
    uint64_t v3 = type metadata accessor for TestTopStoriesService();
    uint64_t v4 = swift_allocObject();
    sub_1AFDB3C90();
    swift_allocObject();
    *(void *)(v4 + 16) = sub_1AFFCA028();
    uint64_t result = sub_1AFD80454(&v6, v4 + 24);
    a2[3] = v3;
    a2[4] = (uint64_t)&off_1F0874330;
    *a2 = v4;
  }
  else
  {
    __break(1u);
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AFDAFE7C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB3E88(0, (unint64_t *)&unk_1EB81AA98);
  uint64_t result = sub_1AFFC9E68();
  if (!v37)
  {
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB3E88(0, &qword_1E9AFA4D0);
  uint64_t result = sub_1AFFC9E68();
  uint64_t v5 = v34;
  if (!v34)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v6 = v35;
  uint64_t v7 = __swift_project_boxed_opaque_existential_1(v33, v34);
  v32[3] = v5;
  v32[4] = v6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v32);
  uint64_t v9 = *(void (**)(char *, uint64_t *, uint64_t, double))(*(void *)(v5 - 8) + 16);
  uint64_t v27 = boxed_opaque_existential_1;
  ((void (*)(uint64_t *, void *, uint64_t))v9)(boxed_opaque_existential_1, v7, v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB3E88(0, &qword_1EB81AB58);
  uint64_t result = sub_1AFFC9E68();
  if (!v31)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v26 = a2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFD2D178(0, (unint64_t *)&unk_1EB81ACC8);
  uint64_t result = sub_1AFFC9E58();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v10 = result;
  uint64_t v25 = v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB3E88(0, &qword_1EB81AA40);
  uint64_t result = sub_1AFFC9E68();
  if (v29)
  {
    uint64_t v11 = type metadata accessor for ForYouFeedConfigService();
    uint64_t v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v30, v31);
    double v13 = MEMORY[0x1F4188790](v12);
    long long v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v17 = (*(uint64_t (**)(char *, double))(v16 + 16))(v15, v13);
    double v18 = MEMORY[0x1F4188790](v17);
    uint64_t v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
    v9(v20, v27, v5, v18);
    uint64_t v21 = type metadata accessor for RemoteConfigurationSettingsFactory();
    double v22 = sub_1AFD80278(&v36, (uint64_t)v20, (uint64_t)v15, v10, &v28, v11, v5, v21, v25, (uint64_t)&off_1F0878D38);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
    uint64_t v23 = v26;
    v26[3] = v11;
    v23[4] = &off_1F0874A78;
    *uint64_t v23 = v22;
    return result;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1AFDB024C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFD2D178(0, (unint64_t *)&unk_1EB81ACC8);
  uint64_t result = sub_1AFFC9E58();
  if (result)
  {
    uint64_t v5 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1AFDB3E88(0, &qword_1EB81AA40);
    uint64_t result = sub_1AFFC9E68();
    if (v9)
    {
      uint64_t v6 = type metadata accessor for StockFeedConfigService();
      uint64_t v7 = swift_allocObject();
      *(void *)(v7 + 16) = v5;
      uint64_t result = sub_1AFD80454(&v8, v7 + 24);
      a2[3] = v6;
      a2[4] = (uint64_t)&off_1F0874700;
      *a2 = v7;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1AFDB0358@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFD2D178(0, (unint64_t *)&unk_1EB81ACC8);
  uint64_t result = sub_1AFFC9E58();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB3E88(0, &qword_1EB817940);
  uint64_t result = sub_1AFFC9E68();
  if (!v11)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB3E88(0, &qword_1EB81AA40);
  uint64_t result = sub_1AFFC9E68();
  if (v9)
  {
    uint64_t v6 = type metadata accessor for NewsFeedService();
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = v5;
    sub_1AFD80454(&v10, v7 + 24);
    uint64_t result = sub_1AFD80454(&v8, v7 + 64);
    a2[3] = v6;
    a2[4] = (uint64_t)&protocol witness table for NewsFeedService;
    *a2 = v7;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1AFDB04C0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB3E88(0, &qword_1EB81A888);
  uint64_t result = sub_1AFFC9E68();
  if (v7)
  {
    uint64_t v4 = type metadata accessor for TestNewsFeedService();
    uint64_t v5 = swift_allocObject();
    uint64_t result = sub_1AFD80454(&v6, v5 + 16);
    a2[3] = v4;
    a2[4] = (uint64_t)&off_1F08727C0;
    *a2 = v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1AFDB0574@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1AFDB2224(a1, (uint64_t (*)(void))type metadata accessor for StockFeedLookupService, (uint64_t)&off_1F0874710, a2);
}

uint64_t sub_1AFDB0594@<X0>(uint64_t *a1@<X8>)
{
  return sub_1AFDB2FB0((uint64_t (*)(void))type metadata accessor for StubFeedLookupService, sub_1AFF983E0, (uint64_t)&off_1F0874090, a1);
}

uint64_t sub_1AFDB05CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for TestFeedLookupService();
  uint64_t v3 = swift_allocObject();
  sub_1AFDB3C90();
  swift_allocObject();
  uint64_t result = sub_1AFFCA028();
  *(void *)(v3 + 16) = result;
  a1[3] = v2;
  a1[4] = (uint64_t)&off_1F0874158;
  *a1 = v3;
  return result;
}

uint64_t sub_1AFDB068C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFD2D178(0, (unint64_t *)&unk_1EB81AD10);
  uint64_t result = sub_1AFFC9E58();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFD8F6AC(0, (unint64_t *)&unk_1EB81AD20);
  uint64_t result = sub_1AFFC9E58();
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v6 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFD2D178(0, &qword_1EB81AE48);
  uint64_t result = sub_1AFFC9E58();
  if (result)
  {
    uint64_t v7 = result;
    type metadata accessor for NewsUserProfileProvider();
    long long v8 = (void *)swift_allocObject();
    v8[2] = v5;
    _OWORD v8[3] = v6;
    v8[4] = v7;
    uint64_t result = sub_1AFDB3C48(&qword_1EB8177B0, 255, (void (*)(uint64_t))type metadata accessor for NewsUserProfileProvider);
    *a2 = v8;
    a2[1] = result;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1AFDB07F8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFD2D178(0, (unint64_t *)&unk_1EB81ACC8);
  uint64_t result = sub_1AFFC9E58();
  if (result)
  {
    uint64_t v5 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1AFDB3E88(0, &qword_1EB817940);
    uint64_t result = sub_1AFFC9E68();
    if (v9)
    {
      uint64_t v6 = type metadata accessor for NewsHeadlineService();
      uint64_t v7 = swift_allocObject();
      *(void *)(v7 + 16) = v5;
      uint64_t result = sub_1AFD80454(&v8, v7 + 24);
      a2[3] = v6;
      a2[4] = (uint64_t)&off_1F0872248;
      *a2 = v7;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1AFDB0904(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  sub_1AFDB3E88(0, &qword_1EB81AA40);
  uint64_t result = sub_1AFFC9E68();
  if (v19)
  {
    sub_1AFD80454(&v18, (uint64_t)v20);
    uint64_t v3 = v21;
    uint64_t v4 = v22;
    __swift_project_boxed_opaque_existential_1(v20, v21);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v4 + 8))(v16, v3, v4);
    id v5 = objc_msgSend(self, sel_mainBundle);
    id v6 = objc_msgSend(v5, sel_bundleIdentifier);

    if (v6)
    {
      uint64_t v7 = sub_1AFFCAE98();
      uint64_t v9 = v8;

      uint64_t v10 = *(void *)(v17 + 16);
      if (v10)
      {
        uint64_t v11 = v17 + 64;
        while (1)
        {
          BOOL v12 = *(void *)(v11 - 32) == v7 && *(void *)(v11 - 24) == v9;
          if (v12 || (sub_1AFFCBCE8() & 1) != 0) {
            break;
          }
          v11 += 40;
          if (!--v10) {
            goto LABEL_11;
          }
        }
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        swift_bridgeObjectRelease();
        sub_1AFD55D10((uint64_t)v16);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v14 = v22;
        __swift_project_boxed_opaque_existential_1(v20, v21);
        swift_getKeyPath();
        (*(void (**)(void))(v14 + 56))();
        swift_release();
        sub_1AFFC96E8();
        goto LABEL_14;
      }
LABEL_11:
      swift_bridgeObjectRelease();
    }
    sub_1AFD55D10((uint64_t)v16);
    uint64_t v13 = v22;
    __swift_project_boxed_opaque_existential_1(v20, v21);
    swift_getKeyPath();
    (*(void (**)(void))(v13 + 56))();
    swift_release();
    sub_1AFFC96E8();
LABEL_14:
    uint64_t v15 = sub_1AFFCA7D8();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    return v15;
  }
  __break(1u);
  return result;
}

void *sub_1AFDB0BD4(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v2 = v1;
  memcpy(__dst, v3, 0x10BAuLL);
  uint64_t v4 = (void *)__dst[51];
  sub_1AFDB3690((uint64_t)__dst);
  type metadata accessor for EndpointConfiguration.Defaults();
  swift_initStaticObject();
  uint64_t v5 = sub_1AFD9780C();
  sub_1AFD98770(v4, v5, v6, v8);
  swift_bridgeObjectRelease();
  sub_1AFD55D10((uint64_t)__dst);
  return memcpy(v2, v8, 0x110uLL);
}

uint64_t sub_1AFDB0C98@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFD2D178(0, (unint64_t *)&unk_1EB8180F0);
  uint64_t result = sub_1AFFC9E58();
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = type metadata accessor for FeedPersonalizerHeadlineScorer();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v4;
    a2[3] = v5;
    a2[4] = (uint64_t)&off_1F0878938;
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1AFDB0D30(uint64_t a1, uint64_t a2)
{
  if (qword_1EB819B40 != -1) {
    swift_once();
  }
  sub_1AFDB3C48(&qword_1EB818FD8, a2, (void (*)(uint64_t))type metadata accessor for ServiceAssembly);
  sub_1AFFC9BB8();
  type metadata accessor for PermanentURLFactory();
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = 0x403000000020100uLL >> (8 * v3);
  return result;
}

uint64_t sub_1AFDB0E38@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB3E88(0, &qword_1EB81AA40);
  uint64_t result = sub_1AFFC9E68();
  if (!v29)
  {
    __break(1u);
    goto LABEL_6;
  }
  sub_1AFD80454(&v28, (uint64_t)v30);
  uint64_t v5 = v32;
  __swift_project_boxed_opaque_existential_1(v30, v31);
  swift_getKeyPath();
  (*(void (**)(void))(v5 + 56))();
  swift_release();
  sub_1AFFC96E8();
  uint64_t v6 = sub_1AFFCA7D8();
  swift_release();
  uint64_t v7 = v32;
  __swift_project_boxed_opaque_existential_1(v30, v31);
  swift_getKeyPath();
  (*(void (**)(void))(v7 + 56))();
  swift_release();
  uint64_t v8 = sub_1AFFCA7D8();
  swift_release();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB3E88(0, &qword_1EB81AA08);
  uint64_t result = sub_1AFFC9E68();
  if (!v29)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB3E88(0, (unint64_t *)&unk_1EB81A808);
  uint64_t result = sub_1AFFC9E68();
  if (v27)
  {
    uint64_t v9 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v28, v29);
    double v10 = MEMORY[0x1F4188790](v9);
    BOOL v12 = (void *)((char *)&v25[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v13 + 16))(v12, v10);
    uint64_t v14 = *v12;
    uint64_t v15 = type metadata accessor for YahooChartModelEngine();
    v25[3] = v15;
    v25[4] = &off_1F08743C0;
    v25[0] = v14;
    uint64_t v16 = type metadata accessor for SparklineOperationFactory();
    uint64_t v17 = (void *)swift_allocObject();
    uint64_t v18 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v25, v15);
    double v19 = MEMORY[0x1F4188790](v18);
    uint64_t v21 = (void *)((char *)&v25[-1] - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v22 + 16))(v21, v19);
    uint64_t v23 = *v21;
    v17[7] = v15;
    v17[8] = &off_1F08743C0;
    v17[3] = v8;
    v17[4] = v23;
    v17[2] = v6;
    sub_1AFD80454(&v26, (uint64_t)(v17 + 9));
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v28);
    a2[3] = v16;
    a2[4] = &off_1F0877928;
    *a2 = v17;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1AFDB1244@<X0>(uint64_t a1@<X8>)
{
  sub_1AFDB3108(0, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v8 - v3;
  sub_1AFFC96C8();
  uint64_t v5 = sub_1AFFC96E8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(a1, v4, v5);
  }
  __break(1u);
  return result;
}

uint64_t sub_1AFDB1370@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1AFFC9728();
  if (v3 >> 60 == 15)
  {
    __break(1u);
  }
  else
  {
    *a1 = result;
    a1[1] = v3;
  }
  return result;
}

uint64_t sub_1AFDB13B4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB3E88(0, &qword_1EB81AA08);
  uint64_t result = sub_1AFFC9E68();
  if (v41)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1AFDB3E88(0, (unint64_t *)&unk_1EB81AAE0);
    uint64_t result = sub_1AFFC9E68();
    if (v39)
    {
      uint64_t v5 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v40, v41);
      v33[2] = v33;
      double v6 = MEMORY[0x1F4188790](v5);
      uint64_t v8 = (void *)((char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v9 + 16))(v8, v6);
      uint64_t v10 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v38, v39);
      v33[1] = v33;
      double v11 = MEMORY[0x1F4188790](v10);
      uint64_t v13 = (void *)((char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v14 + 16))(v13, v11);
      uint64_t v15 = *v8;
      uint64_t v16 = *v13;
      uint64_t v17 = type metadata accessor for YahooChartModelEngine();
      void v37[3] = v17;
      v37[4] = &off_1F08743C0;
      v37[0] = v15;
      uint64_t v18 = type metadata accessor for YahooBaseOperationFactory();
      uint64_t v35 = v18;
      long long v36 = &off_1F0877A08;
      v34[0] = v16;
      uint64_t v19 = type metadata accessor for YahooChartOperationFactory();
      uint64_t v20 = (void *)swift_allocObject();
      uint64_t v21 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v37, v17);
      double v22 = MEMORY[0x1F4188790](v21);
      uint64_t v24 = (void *)((char *)v33 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v25 + 16))(v24, v22);
      uint64_t v26 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v34, v35);
      double v27 = MEMORY[0x1F4188790](v26);
      uint64_t v29 = (void *)((char *)v33 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v30 + 16))(v29, v27);
      uint64_t v31 = *v24;
      uint64_t v32 = *v29;
      v20[5] = v17;
      v20[6] = &off_1F08743C0;
      _OWORD v20[2] = v31;
      v20[10] = v18;
      v20[11] = &off_1F0877A08;
      v20[7] = v32;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
      a2[3] = v19;
      a2[4] = &off_1F0877C38;
      *a2 = v20;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1AFDB17EC@<X0>(uint64_t *a1@<X8>)
{
  return sub_1AFDB180C((uint64_t (*)(void))type metadata accessor for YahooChartModelEngine, (uint64_t)&off_1F08743C0, a1);
}

uint64_t sub_1AFDB180C@<X0>(uint64_t (*a1)(void)@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v5 = a1(0);
  uint64_t result = swift_allocObject();
  a3[3] = v5;
  a3[4] = a2;
  *a3 = result;
  return result;
}

uint64_t sub_1AFDB185C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB3E88(0, (unint64_t *)&unk_1EB81A808);
  uint64_t result = sub_1AFFC9E68();
  if (v7)
  {
    uint64_t v4 = type metadata accessor for YahooBaseOperationFactory();
    uint64_t v5 = swift_allocObject();
    uint64_t result = sub_1AFD80454(&v6, v5 + 16);
    a2[3] = v4;
    a2[4] = (uint64_t)&off_1F0877A08;
    *a2 = v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1AFDB1910@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB3108(0, (unint64_t *)&unk_1EB81AC08, MEMORY[0x1E4F276F0], MEMORY[0x1E4FAB0D8]);
  uint64_t result = sub_1AFFC9E38();
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB3E88(0, &qword_1EB81A990);
  uint64_t result = sub_1AFFC9E68();
  if (!v13)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB3E88(0, (unint64_t *)&unk_1EB81A808);
  uint64_t result = sub_1AFFC9E68();
  if (!v11)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB3E88(0, &qword_1EB81AA40);
  uint64_t result = sub_1AFFC9E68();
  if (v9)
  {
    uint64_t v6 = type metadata accessor for SDSBaseOperationFactory();
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = v5;
    sub_1AFD80454(&v12, v7 + 24);
    sub_1AFD80454(&v10, v7 + 64);
    uint64_t result = sub_1AFD80454(&v8, v7 + 104);
    a2[3] = v6;
    a2[4] = (uint64_t)&off_1F0875070;
    *a2 = v7;
    return result;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1AFDB1B10@<X0>(void *a1@<X8>)
{
  sub_1AFDB3108(0, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v21 - v3;
  uint64_t v5 = sub_1AFFC96E8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  long long v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v21 - v10;
  id v12 = (id)FCURLForContainerizedUserAccountCachesDirectory();
  if (v12)
  {
    uint64_t v13 = v12;
    sub_1AFFC9678();

    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v4, v8, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
    if (result != 1)
    {
      id v15 = objc_msgSend(self, sel_defaultConfiguration);
      id v16 = objc_msgSend(v15, sel_contentContainerCombinationIdentifier);

      sub_1AFFCAE98();
      sub_1AFFC9648();
      swift_bridgeObjectRelease();
      uint64_t v17 = *(void (**)(char *, uint64_t))(v6 + 8);
      v17(v4, v5);
      id v18 = objc_allocWithZone(MEMORY[0x1E4F95D90]);
      uint64_t v19 = (void *)sub_1AFFC9638();
      id v20 = objc_msgSend(v18, sel_initWithContentDirectoryURL_, v19);

      a1[3] = sub_1AFD8F6AC(0, &qword_1EB819E78);
      a1[4] = &off_1F0879BC0;
      *a1 = v20;
      return ((uint64_t (*)(char *, uint64_t))v17)(v11, v5);
    }
  }
  else
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  }
  __break(1u);
  return result;
}

uint64_t sub_1AFDB1E04@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB3E88(0, &qword_1EB81A9F8);
  uint64_t result = sub_1AFFC9E68();
  if (!v11)
  {
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for PermanentURLFactory();
  uint64_t result = sub_1AFFC9E58();
  if (!result)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v6 = result;
  if (qword_1EB819B40 != -1) {
    swift_once();
  }
  sub_1AFDB3C48(&qword_1EB818FD8, v5, (void (*)(uint64_t))type metadata accessor for ServiceAssembly);
  sub_1AFFC9BB8();
  uint64_t v7 = type metadata accessor for RemoteConfigurationSettingsFactory();
  uint64_t v8 = swift_allocObject();
  uint64_t result = sub_1AFD80454(&v10, v8 + 16);
  *(void *)(v8 + 56) = v6;
  *(unsigned char *)(v8 + 64) = v9;
  a2[3] = v7;
  a2[4] = (uint64_t)&off_1F0878D38;
  *a2 = v8;
  return result;
}

uint64_t sub_1AFDB1FC0(void *a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1AFDB3E88(0, (unint64_t *)&unk_1EB81AA68);
  uint64_t result = sub_1AFFC9E68();
  if (v4)
  {
    sub_1AFFCA398();
    swift_unknownObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1AFDB2088(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_1AFFCA488();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1AFDB3E88(0, (unint64_t *)&unk_1EB81AA68);
  uint64_t result = sub_1AFFC9E68();
  if (v8[1])
  {
    (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FAAE80], v3);
    sub_1AFFCA458();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1AFDB2204@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1AFDB2224(a1, (uint64_t (*)(void))type metadata accessor for StockEntityService, (uint64_t)&off_1F0870D60, a2);
}

uint64_t sub_1AFDB2224@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFD2D178(0, (unint64_t *)&unk_1EB81AD70);
  uint64_t result = sub_1AFFC9E38();
  if (result)
  {
    uint64_t v9 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1AFDB3E88(0, &qword_1EB81A870);
    uint64_t result = sub_1AFFC9E68();
    if (v13)
    {
      uint64_t v10 = a2(0);
      uint64_t v11 = swift_allocObject();
      *(void *)(v11 + 16) = v9;
      uint64_t result = sub_1AFD80454(&v12, v11 + 24);
      a4[3] = v10;
      a4[4] = a3;
      *a4 = v11;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1AFDB234C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB3E88(0, (unint64_t *)&unk_1EB81A970);
  uint64_t result = sub_1AFFC9E68();
  if (!v14)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  sub_1AFD80454(&v13, (uint64_t)v15);
  uint64_t v5 = v16;
  uint64_t v6 = v17;
  __swift_project_boxed_opaque_existential_1(v15, v16);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6) & 1) == 0)
  {
    uint64_t v8 = type metadata accessor for NoopWatchlistDeprecationService();
    uint64_t v9 = swift_allocObject();
    uint64_t v10 = &off_1F08789F0;
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB3E88(0, (unint64_t *)&qword_1EB81A890);
  uint64_t result = sub_1AFFC9E68();
  if (!v14) {
    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFD2D178(0, (unint64_t *)&unk_1EB81AD70);
  uint64_t result = sub_1AFFC9E38();
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v7 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB3E88(0, &qword_1EB81AA40);
  uint64_t result = sub_1AFFC9E68();
  if (v12)
  {
    uint64_t v8 = type metadata accessor for WatchlistDeprecationService();
    uint64_t v9 = swift_allocObject();
    sub_1AFD80454(&v13, v9 + 16);
    *(void *)(v9 + 56) = v7;
    sub_1AFD80454(&v11, v9 + 64);
    uint64_t v10 = &off_1F0877F18;
LABEL_8:
    a2[3] = v8;
    a2[4] = (uint64_t)v10;
    *a2 = v9;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_1AFDB2584@<X0>(uint64_t *a1@<X8>)
{
  return sub_1AFDB25A4((uint64_t (*)(void))type metadata accessor for NoopWatchlistDeprecationService, (uint64_t)&off_1F08789F0, a1);
}

uint64_t sub_1AFDB25A4@<X0>(uint64_t (*a1)(void)@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v5 = a1(0);
  uint64_t result = swift_allocObject();
  a3[3] = v5;
  a3[4] = a2;
  *a3 = result;
  return result;
}

uint64_t sub_1AFDB25F4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB3E88(0, (unint64_t *)&unk_1EB81A8F0);
  uint64_t result = sub_1AFFC9E68();
  if (v7)
  {
    uint64_t v4 = type metadata accessor for NewsStockFeedIdentifierService();
    uint64_t v5 = swift_allocObject();
    uint64_t result = sub_1AFD80454(&v6, v5 + 16);
    a2[3] = v4;
    a2[4] = (uint64_t)&off_1F0878950;
    *a2 = v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1AFDB26A8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1AFD2CEB0((uint64_t)a1, (uint64_t)v38);
  char v4 = sub_1AFDB35BC(v38);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (v4)
  {
    sub_1AFDB3E88(0, &qword_1EB81AA78);
    uint64_t result = sub_1AFFC9E68();
    if (v39)
    {
      uint64_t v22 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v38, v39);
      double v23 = MEMORY[0x1F4188790](v22);
      uint64_t v25 = (void *)((char *)v35 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v26 + 16))(v25, v23);
      uint64_t v27 = *v25;
      uint64_t v28 = type metadata accessor for SDSBaseOperationFactory();
      uint64_t v36 = v28;
      uint64_t v37 = &off_1F0875070;
      v35[0] = v27;
      uint64_t v13 = type metadata accessor for SDSStockMetadataService();
      uint64_t v14 = (void *)swift_allocObject();
      uint64_t v29 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v35, v28);
      double v30 = MEMORY[0x1F4188790](v29);
      uint64_t v32 = (void *)((char *)v35 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v33 + 16))(v32, v30);
      uint64_t v34 = *v32;
      void v14[5] = v28;
      void v14[6] = &off_1F0875070;
      _OWORD v14[2] = v34;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
      uint64_t v21 = &off_1F0875080;
      goto LABEL_6;
    }
  }
  else
  {
    sub_1AFDB3E88(0, (unint64_t *)&unk_1EB81AAE0);
    uint64_t result = sub_1AFFC9E68();
    if (v39)
    {
      uint64_t v6 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v38, v39);
      double v7 = MEMORY[0x1F4188790](v6);
      uint64_t v9 = (void *)((char *)v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v10 + 16))(v9, v7);
      uint64_t v11 = *v9;
      uint64_t v12 = type metadata accessor for YahooBaseOperationFactory();
      uint64_t v36 = v12;
      uint64_t v37 = &off_1F0877A08;
      v35[0] = v11;
      uint64_t v13 = type metadata accessor for YahooStockMetadataService();
      uint64_t v14 = (void *)swift_allocObject();
      uint64_t v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v35, v12);
      double v16 = MEMORY[0x1F4188790](v15);
      id v18 = (void *)((char *)v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v19 + 16))(v18, v16);
      uint64_t v20 = *v18;
      void v14[5] = v12;
      void v14[6] = &off_1F0877A08;
      _OWORD v14[2] = v20;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
      uint64_t v21 = &off_1F0877A18;
LABEL_6:
      a2[3] = v13;
      a2[4] = v21;
      *a2 = v14;
      return result;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1AFDB2ACC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB3E88(0, &qword_1EB81AA78);
  uint64_t result = sub_1AFFC9E68();
  if (v25)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1AFDB325C();
    uint64_t result = sub_1AFFC9E68();
    uint64_t v5 = v23;
    if (v23)
    {
      uint64_t v6 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v24, v25);
      double v7 = MEMORY[0x1F4188790](v6);
      uint64_t v9 = (void *)((char *)&v22[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v10 + 16))(v9, v7);
      uint64_t v11 = *v9;
      uint64_t v12 = type metadata accessor for SDSBaseOperationFactory();
      v22[3] = v12;
      v22[4] = &off_1F0875070;
      v22[0] = v11;
      uint64_t v13 = type metadata accessor for SDSCurrencyService();
      uint64_t v14 = (void *)swift_allocObject();
      uint64_t v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v12);
      double v16 = MEMORY[0x1F4188790](v15);
      id v18 = (void *)((char *)&v22[-1] - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v19 + 16))(v18, v16);
      uint64_t v20 = *v18;
      void v14[5] = v12;
      void v14[6] = &off_1F0875070;
      _OWORD v14[2] = v20;
      v14[7] = v5;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
      a2[3] = v13;
      a2[4] = &off_1F0870D50;
      *a2 = v14;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1AFDB2D48@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_1AFFCA2F8();
  MEMORY[0x1F4188790](v4);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFD2D178(0, &qword_1EB81AE10);
  uint64_t result = sub_1AFFC9E58();
  if (result)
  {
    uint64_t v6 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1AFDB3E88(0, &qword_1EB81AA40);
    uint64_t result = sub_1AFFC9E68();
    if (v10)
    {
      uint64_t v7 = type metadata accessor for ForYouConfigRecordService();
      uint64_t v8 = swift_allocObject();
      sub_1AFDB3C48((unint64_t *)&unk_1EB81ABD0, 255, MEMORY[0x1E4FAACC8]);
      sub_1AFDB3108(0, &qword_1EB81AC50, MEMORY[0x1E4FAACC8], MEMORY[0x1E4FBB320]);
      sub_1AFDB316C();
      sub_1AFFCB738();
      sub_1AFDB31F4();
      swift_allocObject();
      *(void *)(v8 + 64) = sub_1AFFC9F68();
      *(void *)(v8 + 16) = v6;
      uint64_t result = sub_1AFD80454(&v9, v8 + 24);
      a2[3] = v7;
      a2[4] = (uint64_t)&off_1F0877880;
      *a2 = v8;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1AFDB2F78@<X0>(uint64_t *a1@<X8>)
{
  return sub_1AFDB2FB0((uint64_t (*)(void))type metadata accessor for TestForYouConfigRecordService, sub_1AFF6DD0C, (uint64_t)&off_1F08787C0, a1);
}

uint64_t sub_1AFDB2FB0@<X0>(uint64_t (*a1)(void)@<X1>, uint64_t (*a2)(void)@<X3>, uint64_t a3@<X4>, uint64_t *a4@<X8>)
{
  uint64_t v7 = a1(0);
  swift_allocObject();
  uint64_t result = a2();
  a4[3] = v7;
  a4[4] = a3;
  *a4 = result;
  return result;
}

uint64_t sub_1AFDB301C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x1E4FAA980];
  uint64_t v3 = sub_1AFFC9E18();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

void sub_1AFDB3090(uint64_t a1@<X8>)
{
  *(void *)(a1 + 24) = &type metadata for UnimplementedManagedConfigurationService;
  *(void *)(a1 + 32) = &off_1F0879040;
}

uint64_t type metadata accessor for ServiceAssembly()
{
  return self;
}

uint64_t sub_1AFDB30CC(uint64_t a1)
{
  return sub_1AFDAA710(a1);
}

uint64_t sub_1AFDB30F0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1AFDAFA60(a1, v2, a2);
}

uint64_t sub_1AFDB30F8(uint64_t a1)
{
  return sub_1AFDB0D30(a1, v1);
}

uint64_t sub_1AFDB3100@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1AFDB1E04(a1, a2);
}

void sub_1AFDB3108(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1AFDB316C()
{
  unint64_t result = qword_1EB81AC58;
  if (!qword_1EB81AC58)
  {
    sub_1AFDB3108(255, &qword_1EB81AC50, MEMORY[0x1E4FAACC8], MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB81AC58);
  }
  return result;
}

void sub_1AFDB31F4()
{
  if (!qword_1EB817CA0)
  {
    type metadata accessor for ForYouConfigRecord(255);
    unint64_t v0 = sub_1AFFC9F88();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB817CA0);
    }
  }
}

void sub_1AFDB325C()
{
  if (!qword_1EB81AC18)
  {
    sub_1AFDB3E88(255, &qword_1EB81A9D0);
    unint64_t v0 = sub_1AFFCB288();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB81AC18);
    }
  }
}

uint64_t sub_1AFDB32C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1AFFC9E08();
  MEMORY[0x1F4188790](v8 - 8);
  *(_DWORD *)(a4 + 16) = 0;
  *(void *)(a4 + 24) = MEMORY[0x1E4FBC860];
  sub_1AFD2CEB0(a2, (uint64_t)v12);
  type metadata accessor for CloudKitWatchlistMetadataProvider();
  uint64_t v9 = swift_allocObject();
  sub_1AFD8F5CC();
  swift_allocObject();
  *(void *)(v9 + 56) = sub_1AFFCA578();
  sub_1AFD80454(v12, v9 + 16);
  sub_1AFD2CEB0(a2, a4 + 32);
  *(void *)(a4 + 72) = v9;
  sub_1AFFC8E48();
  sub_1AFFC9DF8();
  uint64_t v10 = (void *)swift_allocObject();
  void v10[2] = a1;
  v10[3] = v9;
  void v10[4] = a3;
  sub_1AFDB3DD4(0, &qword_1EB817CF8, qword_1EB818110);
  swift_allocObject();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  *(void *)(a4 + 80) = sub_1AFFCA528();
  sub_1AFFC8E48();
  sub_1AFFCA518();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a2);
  return a4;
}

uint64_t sub_1AFDB34C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v16[3] = type metadata accessor for UserRegionProvider();
  v16[4] = &off_1F0870E90;
  v16[0] = a4;
  *(void *)(a5 + 56) = a1;
  sub_1AFD2CEB0(a2, a5 + 64);
  sub_1AFD2CEB0(a3, a5 + 104);
  sub_1AFD2CEB0((uint64_t)v16, a5 + 144);
  sub_1AFD2CEB0(a2, (uint64_t)&v13);
  uint64_t v10 = type metadata accessor for PaidBundleViaOfferFeatureAvailability();
  uint64_t v11 = swift_allocObject();
  sub_1AFD80454(&v13, v11 + 16);
  uint64_t v14 = v10;
  uint64_t v15 = &off_1F0878F18;
  *(void *)&long long v13 = v11;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  __swift_destroy_boxed_opaque_existential_1(a3);
  __swift_destroy_boxed_opaque_existential_1(a2);
  sub_1AFD80454(&v13, a5 + 16);
  return a5;
}

uint64_t sub_1AFDB35BC(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB3E88(0, (unint64_t *)&unk_1EB81A970);
  uint64_t result = sub_1AFFC9E68();
  if (v7)
  {
    sub_1AFD80454(&v6, (uint64_t)v8);
    uint64_t v3 = v9;
    uint64_t v4 = v10;
    __swift_project_boxed_opaque_existential_1(v8, v9);
    char v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 32))(v3, v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v5 & 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1AFDB3690(uint64_t a1)
{
  uint64_t v16 = *(void *)(a1 + 632);
  uint64_t v17 = *(void *)(a1 + 624);
  uint64_t v14 = *(void *)(a1 + 648);
  uint64_t v15 = *(void *)(a1 + 640);
  uint64_t v12 = *(void *)(a1 + 664);
  uint64_t v13 = *(void *)(a1 + 656);
  uint64_t v10 = *(void *)(a1 + 680);
  uint64_t v11 = *(void *)(a1 + 672);
  long long v9 = *(_OWORD *)(a1 + 688);
  long long v8 = *(_OWORD *)(a1 + 704);
  long long v6 = *(_OWORD *)(a1 + 736);
  long long v7 = *(_OWORD *)(a1 + 720);
  long long v5 = *(_OWORD *)(a1 + 752);
  long long v4 = *(_OWORD *)(a1 + 768);
  uint64_t v3 = *(void *)(a1 + 784);
  uint64_t v18 = *(void *)(a1 + 4024);
  uint64_t v19 = *(void *)(a1 + 4016);
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFDB3A78(v17, v16, v15, v14, v13, v12, v11, v10, v9, *((uint64_t *)&v9 + 1), v8, *((uint64_t *)&v8 + 1), v7, *((uint64_t *)&v7 + 1), v6, *((uint64_t *)&v6 + 1), v5, *((uint64_t *)&v5 + 1), v4,
    *((uint64_t *)&v4 + 1),
    v3);
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFDB3C00(v19, v18);
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  return a1;
}

uint64_t sub_1AFDB3A78(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  if (a21 != 1)
  {
    sub_1AFDB3B98(result);
    sub_1AFDB3B98(a5);
    sub_1AFDB3B98(a9);
    sub_1AFDB3B98(a13);
    sub_1AFDB3B98(a17);
    return sub_1AFFC8E38();
  }
  return result;
}

uint64_t sub_1AFDB3B98(uint64_t result)
{
  if (result != 1)
  {
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    return sub_1AFFC8E38();
  }
  return result;
}

uint64_t sub_1AFDB3C00(uint64_t a1, uint64_t a2)
{
  if (a2 != 1)
  {
    sub_1AFFC8E38();
    return sub_1AFFC8E38();
  }
  return result;
}

uint64_t sub_1AFDB3C48(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1AFDB3C90()
{
  if (!qword_1E9AFA4D8)
  {
    sub_1AFDB3CEC();
    unint64_t v0 = sub_1AFFCA018();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9AFA4D8);
    }
  }
}

unint64_t sub_1AFDB3CEC()
{
  unint64_t result = qword_1E9AFA4E0;
  if (!qword_1E9AFA4E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFA4E0);
  }
  return result;
}

uint64_t sub_1AFDB3D40(uint64_t a1, uint64_t a2)
{
  sub_1AFDB3108(0, (unint64_t *)&qword_1EB818BC0, MEMORY[0x1E4F27A00], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1AFDB3DD4(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1AFD8F6AC(255, a3);
    unint64_t v4 = sub_1AFFCA538();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1AFDB3E2C(void **a1)
{
  sub_1AFDE7AC4(a1, v1);
}

uint64_t sub_1AFDB3E34(uint64_t a1)
{
  return a1;
}

uint64_t sub_1AFDB3E88(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    uint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1AFDB3ED8()
{
  swift_release();
  swift_release();
  swift_unknownObjectRelease();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_1AFDB3F20(void *a1@<X8>)
{
  sub_1AFD82770(*(void *)(v1 + 24), *(void *)(v1 + 32), a1);
}

id sub_1AFDB3F2C(id *a1)
{
  return sub_1AFD827E8(a1, v1);
}

uint64_t sub_1AFDB3F34(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1AFDB3F48(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1AFDB3F5C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_1AFDB3F70(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_1AFDB3F84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t sub_1AFDB3F98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t sub_1AFDB3FAC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t sub_1AFDB3FC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t sub_1AFDB3FD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 72))();
}

uint64_t sub_1AFDB3FE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t sub_1AFDB3FFC(void *a1)
{
  uint64_t v2 = v1;
  *(unsigned char *)(v1 + 16) = 0;
  *(void *)(v1 + 64) = MEMORY[0x1E4FBC860];
  sub_1AFD2CEB0((uint64_t)a1, v1 + 24);
  if (qword_1EB817C48 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_weakInit();
  sub_1AFDB5688(&qword_1EB816F90, v4, (void (*)(uint64_t))type metadata accessor for LanguageSettings);
  sub_1AFFC9BC8();
  swift_release();
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v5);
  *(unsigned char *)(v1 + 16) = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 24))(v5, v6) & v9 & 1;
  id v7 = objc_msgSend(self, sel_defaultCenter);
  objc_msgSend(v7, sel_addObserver_selector_name_object_, v2, sel_localeDidChange, *MEMORY[0x1E4F1C370], 0);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v2;
}

void *sub_1AFDB41DC()
{
  swift_beginAccess();
  uint64_t result = (void *)swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[6];
    uint64_t v3 = result[7];
    __swift_project_boxed_opaque_existential_1(result + 3, v2);
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(v2, v3))
    {
      if (qword_1EB817C48 != -1) {
        swift_once();
      }
      type metadata accessor for LanguageSettings();
      sub_1AFDB5688(&qword_1EB816F90, v4, (void (*)(uint64_t))type metadata accessor for LanguageSettings);
      sub_1AFFC9BB8();
      char v5 = v6;
      if (v6 == *((unsigned char *)v1 + 16)) {
        return (void *)swift_release();
      }
    }
    else
    {
      if ((v1[2] & 1) == 0) {
        return (void *)swift_release();
      }
      char v5 = 0;
    }
    *((unsigned char *)v1 + 16) = v5;
    sub_1AFDB48E0(v5);
    return (void *)swift_release();
  }
  return result;
}

double sub_1AFDB4324(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1AFFC9A78();
  uint64_t v5 = *(void *)(v4 - 8);
  double result = MEMORY[0x1F4188790](v4);
  long long v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    id v9 = objc_msgSend(self, sel_currentLocale);
    sub_1AFFC99C8();

    uint64_t v10 = sub_1AFFC9988();
    uint64_t v12 = v11;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    if (v12)
    {
      uint64_t v13 = *(void *)(v2 + 48);
      uint64_t v14 = *(void *)(v2 + 56);
      __swift_project_boxed_opaque_existential_1((void *)(v2 + 24), v13);
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v14 + 24))(v13, v14))
      {
        int v15 = *(unsigned __int8 *)(v2 + 16);
        sub_1AFDB5820(0, &qword_1EB8183C0, (uint64_t (*)(uint64_t))sub_1AFDB5884, MEMORY[0x1E4FBBE00]);
        uint64_t v16 = swift_allocObject();
        if (v15 == 1)
        {
          *(void *)&double result = 2;
          *(_OWORD *)(v16 + 16) = xmmword_1AFFD0610;
          *(void *)(v16 + 32) = v10;
          *(void *)(v16 + 40) = v12;
          *(void *)(v16 + 48) = 0;
          *(void *)(v16 + 56) = 0;
        }
        else
        {
          *(void *)&double result = 1;
          *(_OWORD *)(v16 + 16) = xmmword_1AFFD05F0;
          *(void *)(v16 + 32) = v10;
          *(void *)(v16 + 40) = v12;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      sub_1AFDB5820(0, &qword_1EB8183C0, (uint64_t (*)(uint64_t))sub_1AFDB5884, MEMORY[0x1E4FBBE00]);
      uint64_t v17 = swift_allocObject();
      *(void *)&double result = 1;
      *(_OWORD *)(v17 + 16) = xmmword_1AFFD05F0;
      *(void *)(v17 + 32) = v10;
      *(void *)(v17 + 40) = 0;
    }
  }
  return result;
}

uint64_t sub_1AFDB4560(uint64_t a1, uint64_t a2)
{
  if (qword_1EB817C48 != -1) {
    swift_once();
  }
  sub_1AFDB5688(&qword_1EB816F90, a2, (void (*)(uint64_t))type metadata accessor for LanguageSettings);
  sub_1AFFC9BB8();
  if (v7) {
    return 0;
  }
  uint64_t v3 = v2[6];
  uint64_t v4 = v2[7];
  __swift_project_boxed_opaque_existential_1(v2 + 3, v3);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24))(v3, v4) & 1) == 0) {
    return 0;
  }
  if (qword_1E9AF8CD0 != -1) {
    swift_once();
  }
  sub_1AFFC9BB8();
  return v6;
}

uint64_t sub_1AFDB46DC(uint64_t a1, uint64_t a2)
{
  char v3 = a2;
  if (qword_1EB817C48 != -1) {
    swift_once();
  }
  sub_1AFDB5688(&qword_1E9AFA4E8, a2, (void (*)(uint64_t))type metadata accessor for LanguageSettings);
  sub_1AFFC9CF8();
  if (v3)
  {
    if (qword_1E9AF8CD0 != -1) {
      swift_once();
    }
    sub_1AFFC9CF8();
  }
  uint64_t v4 = *(void *)(v2 + 48);
  uint64_t v5 = *(void *)(v2 + 56);
  __swift_project_boxed_opaque_existential_1((void *)(v2 + 24), v4);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
  if ((result & 1) == 0)
  {
    if ((*(unsigned char *)(v2 + 16) & 1) == 0) {
      return result;
    }
    LOBYTE(result) = 0;
    goto LABEL_12;
  }
  sub_1AFDB5688(&qword_1EB816F90, v7, (void (*)(uint64_t))type metadata accessor for LanguageSettings);
  sub_1AFFC9BB8();
  uint64_t result = v8;
  if (v8 != *(unsigned __int8 *)(v2 + 16))
  {
LABEL_12:
    *(unsigned char *)(v2 + 16) = result;
    return sub_1AFDB48E0(result);
  }
  return result;
}

uint64_t sub_1AFDB48E0(char a1)
{
  uint64_t v3 = sub_1AFFCABC8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unsigned __int8 v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1AFFCAC18();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFD67528();
  uint64_t v11 = (void *)sub_1AFFCB4B8();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v1;
  *(unsigned char *)(v12 + 24) = a1;
  aBlock[4] = sub_1AFDB567C;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1AFDB5104;
  aBlock[3] = &block_descriptor_6;
  uint64_t v13 = _Block_copy(aBlock);
  sub_1AFFC8E48();
  swift_release();
  sub_1AFFCABE8();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1AFDB5688((unint64_t *)&unk_1EB819C20, 255, MEMORY[0x1E4FBCB00]);
  sub_1AFDB5820(0, (unint64_t *)&qword_1EB819DA0, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1AFDB56D0();
  sub_1AFFCB738();
  MEMORY[0x1B3E8D920](0, v10, v6, v13);
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1AFDB4BC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)(v2 + 64);
  swift_beginAccess();
  unint64_t v5 = *(void *)(v2 + 64);
  uint64_t v14 = MEMORY[0x1E4FBC860];
  if (v5 >> 62)
  {
    sub_1AFFC8E38();
    uint64_t result = sub_1AFFCB9C8();
    uint64_t v6 = result;
    if (result) {
      goto LABEL_3;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    uint64_t v11 = MEMORY[0x1E4FBC860];
    goto LABEL_15;
  }
  uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = sub_1AFFC8E38();
  if (!v6) {
    goto LABEL_14;
  }
LABEL_3:
  if (v6 < 1)
  {
    __break(1u);
    return result;
  }
  for (uint64_t i = 0; i != v6; ++i)
  {
    if ((v5 & 0xC000000000000001) != 0)
    {
      uint64_t v9 = MEMORY[0x1B3E8DC70](i, v5);
    }
    else
    {
      uint64_t v9 = *(void *)(v5 + 8 * i + 32);
      sub_1AFFC8E48();
    }
    uint64_t v10 = MEMORY[0x1B3E8F200](v9 + 16);
    swift_unknownObjectRelease();
    if (v10)
    {
      sub_1AFFCB888();
      sub_1AFFCB8C8();
      sub_1AFFCB8D8();
      sub_1AFFCB898();
    }
    else
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v11 = v14;
LABEL_15:
  *uint64_t v4 = v11;
  swift_bridgeObjectRelease();
  type metadata accessor for LanguageSettingsObserverProxy();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v12 + 24) = a2;
  swift_unknownObjectWeakAssign();
  uint64_t v13 = swift_beginAccess();
  MEMORY[0x1B3E8D5F0](v13);
  if (*(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1AFFCB228();
  }
  sub_1AFFCB278();
  sub_1AFFCB1E8();
  return swift_endAccess();
}

uint64_t sub_1AFDB4DE4()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 56);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 24), v1);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 24))(v1, v2);
  if ((result & 1) == 0)
  {
    if ((*(unsigned char *)(v0 + 16) & 1) == 0) {
      return result;
    }
    LOBYTE(result) = 0;
    goto LABEL_8;
  }
  if (qword_1EB817C48 != -1) {
    swift_once();
  }
  sub_1AFDB5688(&qword_1EB816F90, v4, (void (*)(uint64_t))type metadata accessor for LanguageSettings);
  sub_1AFFC9BB8();
  uint64_t result = v5;
  if (v5 != *(unsigned __int8 *)(v0 + 16))
  {
LABEL_8:
    *(unsigned char *)(v0 + 16) = result;
    return sub_1AFDB48E0(result);
  }
  return result;
}

uint64_t sub_1AFDB4F64(uint64_t a1, char a2)
{
  swift_beginAccess();
  unint64_t v4 = *(void *)(a1 + 64);
  if (!(v4 >> 62))
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = sub_1AFFC8E38();
    if (v5) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease();
  }
  sub_1AFFC8E38();
  uint64_t result = sub_1AFFCB9C8();
  uint64_t v5 = result;
  if (!result) {
    return swift_bridgeObjectRelease();
  }
LABEL_3:
  if (v5 >= 1)
  {
    uint64_t v7 = 0;
    unint64_t v13 = v4 & 0xC000000000000001;
    do
    {
      if (v13)
      {
        uint64_t v8 = MEMORY[0x1B3E8DC70](v7, v4);
      }
      else
      {
        uint64_t v8 = *(void *)(v4 + 8 * v7 + 32);
        sub_1AFFC8E48();
      }
      v14[3] = type metadata accessor for LanguageSettings();
      v14[4] = &off_1F086CE30;
      v14[0] = a1;
      if (MEMORY[0x1B3E8F200](v8 + 16))
      {
        uint64_t v9 = *(void *)(v8 + 24);
        uint64_t ObjectType = swift_getObjectType();
        unint64_t v11 = v4;
        uint64_t v12 = *(void (**)(void *, void, uint64_t, uint64_t))(v9 + 8);
        swift_retain_n();
        v12(v14, a2 & 1, ObjectType, v9);
        unint64_t v4 = v11;
        swift_unknownObjectRelease();
      }
      else
      {
        swift_retain_n();
      }
      ++v7;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
      swift_release();
      swift_release();
    }
    while (v5 != v7);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1AFDB5104(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = sub_1AFFC8E48();
  v1(v2);

  return swift_release();
}

uint64_t sub_1AFDB5148()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LanguageSettings()
{
  return self;
}

uint64_t sub_1AFDB51AC()
{
  return *(unsigned __int8 *)(*(void *)v0 + 16);
}

uint64_t sub_1AFDB51B8(uint64_t a1, uint64_t a2)
{
  return sub_1AFDB4560(a1, a2) & 1;
}

uint64_t sub_1AFDB51E0(uint64_t a1, uint64_t a2)
{
  if (qword_1EB817C48 != -1) {
    swift_once();
  }
  sub_1AFDB5688(&qword_1EB816F90, a2, (void (*)(uint64_t))type metadata accessor for LanguageSettings);
  sub_1AFFC9BB8();
  return v3;
}

uint64_t sub_1AFDB5298()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  uint64_t v2 = *(void *)(*(void *)v0 + 56);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v0 + 24), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 24))(v1, v2) & 1;
}

double sub_1AFDB52F4(char a1)
{
  return sub_1AFDB4324(a1);
}

uint64_t sub_1AFDB5318(uint64_t a1, uint64_t a2)
{
  return sub_1AFDB46DC(a1, a2);
}

uint64_t sub_1AFDB533C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  if (qword_1E9AF8CD0 != -1) {
    swift_once();
  }
  sub_1AFDB5688(&qword_1E9AFA4E8, a2, (void (*)(uint64_t))type metadata accessor for LanguageSettings);
  sub_1AFFC9CF8();
  return sub_1AFDB48E0(*(unsigned char *)(v3 + 16));
}

uint64_t sub_1AFDB53FC(uint64_t a1, uint64_t a2)
{
  return sub_1AFDB4BC8(a1, a2);
}

uint64_t sub_1AFDB5420(uint64_t a1)
{
  uint64_t v3 = *v1;
  swift_beginAccess();
  swift_unknownObjectRetain();
  unint64_t v4 = sub_1AFFC8E38();
  uint64_t v5 = sub_1AFDA5E54(v4, a1);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  *(void *)(v3 + 64) = v5;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFDB54B8()
{
  return sub_1AFFC9CF8();
}

uint64_t sub_1AFDB54E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x1F415F4E0](a1, *v5, a5);
}

uint64_t sub_1AFDB5518(uint64_t a1)
{
  return MEMORY[0x1F415F4D8](a1, *v1);
}

uint64_t type metadata accessor for LanguageSettingsObserverProxy()
{
  return self;
}

uint64_t sub_1AFDB5568(void *a1, char a2)
{
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  uint64_t v6 = __swift_project_boxed_opaque_existential_1(a1, v4);

  return sub_1AFDB5758((uint64_t)v6, a2, v2, v4, v5);
}

uint64_t sub_1AFDB55BC(uint64_t a1, uint64_t a2)
{
  return sub_1AFDB5688(&qword_1EB816F90, a2, (void (*)(uint64_t))type metadata accessor for LanguageSettings);
}

uint64_t sub_1AFDB5604()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

void *sub_1AFDB563C()
{
  return sub_1AFDB41DC();
}

uint64_t sub_1AFDB5644()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 25, 7);
}

uint64_t sub_1AFDB567C()
{
  return sub_1AFDB4F64(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_1AFDB5688(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1AFDB56D0()
{
  unint64_t result = qword_1EB819DB0;
  if (!qword_1EB819DB0)
  {
    sub_1AFDB5820(255, (unint64_t *)&qword_1EB819DA0, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819DB0);
  }
  return result;
}

uint64_t sub_1AFDB5758(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v13[3] = a4;
  v13[4] = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v13);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16))(boxed_opaque_existential_1, a1, a4);
  if (MEMORY[0x1B3E8F200](a3 + 16))
  {
    uint64_t v10 = *(void *)(a3 + 24);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v10 + 8))(v13, a2 & 1, ObjectType, v10);
    swift_unknownObjectRelease();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
}

void sub_1AFDB5820(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1AFDB5884()
{
  if (!qword_1EB819C90)
  {
    unint64_t v0 = sub_1AFFCB658();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB819C90);
    }
  }
}

id sub_1AFDB58DC(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v3 = v2;
  uint64_t v4 = sub_1AFFC9DA8();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v5 = (char *)objc_allocWithZone(v1);
  uint64_t v6 = OBJC_IVAR____TtC10StocksCore24NewsConfigurationManager_coreConfigObservers;
  id v7 = objc_allocWithZone(MEMORY[0x1E4F28D30]);
  unint64_t v8 = v5;
  *(void *)&v5[v6] = objc_msgSend(v7, sel_initWithOptions_capacity_, 517, 0);
  uint64_t v9 = OBJC_IVAR____TtC10StocksCore24NewsConfigurationManager_appConfigObservers;
  *(void *)&v8[v9] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28D30]), sel_initWithOptions_capacity_, 517, 0);
  uint64_t v10 = (uint64_t)&v8[OBJC_IVAR____TtC10StocksCore24NewsConfigurationManager_lastKnownAppConfig];
  sub_1AFDB7CD8(v20);
  sub_1AFDB7CE0((uint64_t)v20, v10);
  *(void *)&v8[OBJC_IVAR____TtC10StocksCore24NewsConfigurationManager_lastKnownNewsConfig] = 0;
  uint64_t v11 = OBJC_IVAR____TtC10StocksCore24NewsConfigurationManager_configLock;
  sub_1AFFC9D98();
  sub_1AFFC9DC8();
  swift_allocObject();
  *(void *)&v8[v11] = sub_1AFFC9DB8();
  sub_1AFD2CEB0((uint64_t)v3, (uint64_t)&v8[OBJC_IVAR____TtC10StocksCore24NewsConfigurationManager_appConfigurationManager]);

  v19.receiver = v8;
  v19.super_class = v1;
  id v12 = objc_msgSendSuper2(&v19, sel_init);
  uint64_t v13 = v3[3];
  uint64_t v14 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v13);
  int v15 = *(void (**)(uint64_t, uint64_t))(v14 + 16);
  id v16 = v12;
  v15(v13, v14);
  swift_allocObject();
  swift_unknownObjectUnownedInit();
  sub_1AFFC9FE8();
  swift_release();
  swift_release();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  return v16;
}

id sub_1AFDB5B38(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v3 = v2;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = sub_1AFFC9DA8();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v6 = OBJC_IVAR____TtC10StocksCore24NewsConfigurationManager_coreConfigObservers;
  id v7 = objc_allocWithZone(MEMORY[0x1E4F28D30]);
  unint64_t v8 = v1;
  *(void *)&v1[v6] = objc_msgSend(v7, sel_initWithOptions_capacity_, 517, 0);
  uint64_t v9 = OBJC_IVAR____TtC10StocksCore24NewsConfigurationManager_appConfigObservers;
  *(void *)&v8[v9] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28D30]), sel_initWithOptions_capacity_, 517, 0);
  uint64_t v10 = (uint64_t)&v8[OBJC_IVAR____TtC10StocksCore24NewsConfigurationManager_lastKnownAppConfig];
  sub_1AFDB7CD8(v20);
  sub_1AFDB7CE0((uint64_t)v20, v10);
  *(void *)&v8[OBJC_IVAR____TtC10StocksCore24NewsConfigurationManager_lastKnownNewsConfig] = 0;
  uint64_t v11 = OBJC_IVAR____TtC10StocksCore24NewsConfigurationManager_configLock;
  sub_1AFFC9D98();
  sub_1AFFC9DC8();
  swift_allocObject();
  *(void *)&v8[v11] = sub_1AFFC9DB8();
  sub_1AFD2CEB0((uint64_t)v3, (uint64_t)&v8[OBJC_IVAR____TtC10StocksCore24NewsConfigurationManager_appConfigurationManager]);

  v19.receiver = v8;
  v19.super_class = ObjectType;
  id v12 = objc_msgSendSuper2(&v19, sel_init);
  uint64_t v13 = v3[3];
  uint64_t v14 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v13);
  int v15 = *(void (**)(uint64_t, uint64_t))(v14 + 16);
  id v16 = v12;
  v15(v13, v14);
  swift_allocObject();
  swift_unknownObjectUnownedInit();
  sub_1AFFC9FE8();
  swift_release();
  swift_release();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  return v16;
}

void sub_1AFDB5D94()
{
  uint64_t Strong = (char *)swift_unknownObjectUnownedLoadStrong();
  id v1 = *(id *)&Strong[OBJC_IVAR____TtC10StocksCore24NewsConfigurationManager_coreConfigObservers];

  id v2 = objc_msgSend(v1, sel_allObjects);
  sub_1AFD2D178(0, &qword_1EB818160);
  unint64_t v3 = sub_1AFFCB1C8();

  if (v3 >> 62)
  {
    sub_1AFFC8E38();
    uint64_t v4 = sub_1AFFCB9C8();
    swift_bridgeObjectRelease();
    uint64_t v5 = &selRef_coverArt;
    if (!v4) {
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v5 = &selRef_coverArt;
    if (!v4) {
      goto LABEL_12;
    }
  }
  if (v4 < 1)
  {
    __break(1u);
    goto LABEL_27;
  }
  for (uint64_t i = 0; i != v4; ++i)
  {
    if ((v3 & 0xC000000000000001) != 0)
    {
      id v7 = (void *)MEMORY[0x1B3E8DC70](i, v3);
    }
    else
    {
      id v7 = *(void **)(v3 + 8 * i + 32);
      swift_unknownObjectRetain();
    }
    if (objc_msgSend(v7, v5[114], sel_configurationManager_configurationDidChange_))
    {
      unint64_t v8 = (void *)swift_unknownObjectUnownedLoadStrong();
      uint64_t v9 = (void *)swift_unknownObjectUnownedLoadStrong();
      uint64_t v10 = swift_unknownObjectRetain();
      id v11 = sub_1AFDB60EC(v10);

      objc_msgSend(v7, sel_configurationManager_configurationDidChange_, v8, v11);
      uint64_t v5 = &selRef_coverArt;
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
    }
    swift_unknownObjectRelease();
  }
LABEL_12:
  swift_bridgeObjectRelease();
  id v12 = (char *)swift_unknownObjectUnownedLoadStrong();
  id v13 = *(id *)&v12[OBJC_IVAR____TtC10StocksCore24NewsConfigurationManager_appConfigObservers];

  id v14 = objc_msgSend(v13, sel_allObjects);
  sub_1AFD2D178(0, &qword_1EB818168);
  unint64_t v15 = sub_1AFFCB1C8();

  if (v15 >> 62)
  {
    sub_1AFFC8E38();
    uint64_t v16 = sub_1AFFCB9C8();
    swift_bridgeObjectRelease();
    if (v16)
    {
LABEL_14:
      if (v16 >= 1)
      {
        for (uint64_t j = 0; j != v16; ++j)
        {
          if ((v15 & 0xC000000000000001) != 0)
          {
            uint64_t v18 = (void *)MEMORY[0x1B3E8DC70](j, v15);
          }
          else
          {
            uint64_t v18 = *(void **)(v15 + 8 * j + 32);
            swift_unknownObjectRetain();
          }
          if (objc_msgSend(v18, v5[114], sel_configurationManager_appConfigurationDidChange_))
          {
            objc_super v19 = (void *)swift_unknownObjectUnownedLoadStrong();
            uint64_t v20 = (void *)swift_unknownObjectUnownedLoadStrong();
            uint64_t v21 = swift_unknownObjectRetain();
            id v22 = sub_1AFDB60EC(v21);

            objc_msgSend(v18, sel_configurationManager_appConfigurationDidChange_, v19, v22);
            uint64_t v5 = &selRef_coverArt;
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
          }
          swift_unknownObjectRelease();
        }
        goto LABEL_23;
      }
LABEL_27:
      __break(1u);
      return;
    }
  }
  else
  {
    uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v16) {
      goto LABEL_14;
    }
  }
LABEL_23:

  swift_bridgeObjectRelease();
}

id sub_1AFDB60EC(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v2 = v1;
  sub_1AFFC9D78();
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC10StocksCore24NewsConfigurationManager_appConfigurationManager + 24);
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC10StocksCore24NewsConfigurationManager_appConfigurationManager + 32);
  __swift_project_boxed_opaque_existential_1((void *)(v2 + OBJC_IVAR____TtC10StocksCore24NewsConfigurationManager_appConfigurationManager), *(void *)(v2 + OBJC_IVAR____TtC10StocksCore24NewsConfigurationManager_appConfigurationManager + 24));
  (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v4 + 8))(v30, v3, v4);
  uint64_t v5 = OBJC_IVAR____TtC10StocksCore24NewsConfigurationManager_lastKnownNewsConfig;
  uint64_t v6 = *(void *)(v2 + OBJC_IVAR____TtC10StocksCore24NewsConfigurationManager_lastKnownNewsConfig);
  if (v6)
  {
    memcpy(v27, v30, 0x10BAuLL);
    nullsub_1(v27);
    sub_1AFDB7CE0(v2 + OBJC_IVAR____TtC10StocksCore24NewsConfigurationManager_lastKnownAppConfig, (uint64_t)v28);
    sub_1AFDB7CE0((uint64_t)v27, (uint64_t)v26);
    sub_1AFDB7CE0((uint64_t)v28, (uint64_t)v29);
    if (sub_1AFD48F48((uint64_t)v29) == 1)
    {
      memcpy(v23, v26, 0x10BAuLL);
      sub_1AFDB3690((uint64_t)v30);
      sub_1AFDB3690((uint64_t)v30);
      swift_unknownObjectRetain();
      sub_1AFD55D10((uint64_t)v23);
      sub_1AFDB7CE0((uint64_t)v27, (uint64_t)v24);
      sub_1AFDB7CE0((uint64_t)v28, (uint64_t)&v25);
      sub_1AFDBA464((uint64_t)v24);
    }
    else
    {
      sub_1AFDB7CE0((uint64_t)v28, (uint64_t)v23);
      memcpy(__dst, v23, sizeof(__dst));
      sub_1AFDB3690((uint64_t)v30);
      sub_1AFDB3690((uint64_t)v30);
      swift_unknownObjectRetain();
      char v7 = sub_1AFF871B0((uint64_t)v26);
      memcpy(v24, v26, 0x10BAuLL);
      sub_1AFD55D10((uint64_t)v24);
      sub_1AFD55D10((uint64_t)v30);
      if (v7)
      {
        sub_1AFD55D10((uint64_t)v30);
        sub_1AFFC9D88();
        return (id)v6;
      }
    }
    swift_unknownObjectRelease();
  }
  uint64_t v20 = *((void *)&v30[89] + 1);
  uint64_t v19 = *(void *)&v30[90];
  memcpy(v24, v30, 0x10BAuLL);
  v23[0] = v30[91];
  v23[1] = v30[92];
  uint64_t v21 = v5;
  v27[0] = v30[93];
  v27[1] = v30[94];
  void v27[2] = v30[95];
  uint64_t v27[3] = v30[96];
  *(void *)&v27[4] = *(void *)&v30[97];
  memcpy(v29, &v30[99], 0x8DBuLL);
  uint64_t v18 = *((void *)&v30[25] + 1);
  memcpy(v28, &v30[26], 0x1F9uLL);
  v26[0] = v30[58];
  LOBYTE(v26[1]) = v30[59];
  LOBYTE(v26[2]) = v30[60];
  *((void *)&v26[1] + 1) = *((void *)&v30[59] + 1);
  *((void *)&v26[2] + 1) = *((void *)&v30[60] + 1);
  LOBYTE(v26[3]) = v30[61];
  *((void *)&v26[3] + 1) = *((void *)&v30[61] + 1);
  LOBYTE(v26[4]) = v30[62];
  uint64_t v16 = *((void *)&v30[20] + 1);
  uint64_t v17 = *((void *)&v30[90] + 1);
  double v9 = *(double *)&v30[21];
  long long v10 = v30[24];
  unsigned __int8 v14 = BYTE11(v30[240]);
  unsigned __int8 v15 = BYTE8(v30[21]);
  objc_allocWithZone((Class)type metadata accessor for NewsCoreConfiguration());
  sub_1AFDB3690((uint64_t)v30);
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFDB7DDC((uint64_t)&v30[26]);
  sub_1AFFC8E38();
  id v11 = NewsCoreConfiguration.init(experimentalizableFieldPostfix:appConfiguration:topStoriesConfiguration:newsUIConfiguration:newsPersonalizationTreatment:endpointConfigurations:paidBundleConfiguration:paidBundleViaOfferConfiguration:analyticsEndpointMaxPayloadSize:maxRetriesForDroppedFeeds:delayBeforeRetryingDroppedFeeds:enableCacheFallbackForArticleRecirculation:prerollLoadingTimeout:prerollReadyToPlayTimeout:isPrivateDataEncryptionRequired:)(v20, v19, v24, (uint64_t *)v23, (uint64_t *)v27, v29, v18, v28, v9, *(double *)&v10, *((double *)&v10 + 1), v26, v17, v16, v15, v14);
  memcpy(v29, v30, 0x10BAuLL);
  nullsub_1(v29);
  uint64_t v12 = v2 + OBJC_IVAR____TtC10StocksCore24NewsConfigurationManager_lastKnownAppConfig;
  sub_1AFDB7CE0(v2 + OBJC_IVAR____TtC10StocksCore24NewsConfigurationManager_lastKnownAppConfig, (uint64_t)v24);
  sub_1AFDB7CE0((uint64_t)v29, v12);
  sub_1AFDB7FA0((uint64_t)v24);
  *(void *)(v2 + v21) = v11;
  id v13 = v11;
  swift_unknownObjectRelease();
  sub_1AFFC9D88();
  return v13;
}

id sub_1AFDB6638()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void sub_1AFDB666C()
{
}

id sub_1AFDB66CC()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1AFDB67B4(uint64_t a1, uint64_t a2)
{
  return sub_1AFDB6E6C(a1, a2, (uint64_t)&unk_1F087C130, (void (*)(uint64_t, uint64_t))sub_1AFDBE964);
}

void sub_1AFDB68DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_1AFFCABC8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  long long v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1AFFCAC18();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  unsigned __int8 v14 = (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    unsigned __int8 v15 = (void *)swift_allocObject();
    long long v15[2] = a2;
    void v15[3] = a3;
    v15[4] = v3;
    aBlock[4] = sub_1AFDBE98C;
    aBlock[5] = v15;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1AFDB5104;
    aBlock[3] = &block_descriptor_7;
    uint64_t v16 = _Block_copy(aBlock);
    v19[0] = a1;
    uint64_t v17 = v16;
    sub_1AFDBE820(a2);
    id v18 = v3;
    sub_1AFFCABE8();
    v19[1] = MEMORY[0x1E4FBC860];
    sub_1AFDBE628((unint64_t *)&unk_1EB819C20, MEMORY[0x1E4FBCB00]);
    sub_1AFDBE5D0();
    sub_1AFDBE628((unint64_t *)&qword_1EB819DB0, (void (*)(uint64_t))sub_1AFDBE5D0);
    sub_1AFFCB738();
    MEMORY[0x1B3E8D920](0, v14, v10, v17);
    _Block_release(v17);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    swift_release();
  }
}

uint64_t sub_1AFDB6BB8(uint64_t result)
{
  if (result)
  {
    id v1 = (void (*)(id, void))result;
    id v2 = sub_1AFDB60EC(result);
    v1(v2, 0);
    return swift_unknownObjectRelease();
  }
  return result;
}

id sub_1AFDB6CEC(void *a1)
{
  return sub_1AFDB6D10(a1, (SEL *)&selRef_addObject_);
}

id sub_1AFDB6D04(void *a1)
{
  return sub_1AFDB6D10(a1, (SEL *)&selRef_removeObject_);
}

id sub_1AFDB6D10(id result, SEL *a2)
{
  if (result) {
    return objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC10StocksCore24NewsConfigurationManager_coreConfigObservers), *a2, result);
  }
  return result;
}

char *sub_1AFDB6D3C(char *result, uint64_t a2, uint64_t a3, SEL *a4)
{
  if (a3) {
    return (char *)[*(id *)&result[OBJC_IVAR____TtC10StocksCore24NewsConfigurationManager_coreConfigObservers] *a4];
  }
  return result;
}

uint64_t sub_1AFDB6D94()
{
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1AFDB6DA0()
{
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1AFDB6E38(uint64_t a1, uint64_t a2)
{
  return sub_1AFDB6E6C(a1, a2, (uint64_t)&unk_1F087C180, (void (*)(uint64_t, uint64_t))sub_1AFDBE964);
}

uint64_t sub_1AFDB6E6C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v8 = (void *)swift_allocObject();
  void v8[2] = a1;
  void v8[3] = a2;
  v8[4] = v4;
  a4(a1, a2);
  id v9 = v4;
  sub_1AFFCA828();

  return swift_release();
}

void sub_1AFDB6FEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = sub_1AFFC94F8();
  }
  else {
    uint64_t v5 = 0;
  }
  id v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);
}

uint64_t sub_1AFDB705C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v18[0] = a1;
  uint64_t v6 = sub_1AFFCABC8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1AFFCAC18();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned __int8 v14 = (void *)swift_allocObject();
  _OWORD v14[2] = a2;
  v14[3] = a3;
  v14[4] = v3;
  aBlock[4] = sub_1AFDBE98C;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1AFDB5104;
  aBlock[3] = &block_descriptor_17;
  unsigned __int8 v15 = _Block_copy(aBlock);
  sub_1AFDBE820(a2);
  id v16 = v3;
  sub_1AFFCABE8();
  v18[1] = MEMORY[0x1E4FBC860];
  sub_1AFDBE628((unint64_t *)&unk_1EB819C20, MEMORY[0x1E4FBCB00]);
  sub_1AFDBE5D0();
  sub_1AFDBE628((unint64_t *)&qword_1EB819DB0, (void (*)(uint64_t))sub_1AFDBE5D0);
  sub_1AFFCB738();
  MEMORY[0x1B3E8D920](0, v13, v9, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return swift_release();
}

void sub_1AFDB7400(void *a1, uint64_t a2, uint64_t a3)
{
  sub_1AFFCA7C8();
  uint64_t v7 = (void *)swift_allocObject();
  uint64_t v7[2] = a1;
  uint64_t v7[3] = a2;
  v7[4] = a3;
  v7[5] = v3;
  id v8 = a1;
  sub_1AFDBE820(a2);
  id v9 = v3;
  uint64_t v10 = (void *)sub_1AFFCA5E8();
  sub_1AFFCA678();
  swift_release();
  swift_release();

  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = v8;
  void v11[3] = a2;
  void v11[4] = a3;
  id v12 = v8;
  sub_1AFDBE820(a2);
  uint64_t v13 = (void *)sub_1AFFCA5E8();
  sub_1AFFCA6B8();
  swift_release();
  swift_release();
  swift_release();
}

uint64_t sub_1AFDB7564(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v21 = a2;
  uint64_t v8 = sub_1AFFCABC8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1AFFCAC18();
  uint64_t v12 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  unsigned __int8 v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned __int8 v15 = (void *)swift_allocObject();
  long long v15[2] = a3;
  void v15[3] = a4;
  v15[4] = a5;
  aBlock[4] = sub_1AFDBE5AC;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1AFDB5104;
  aBlock[3] = &block_descriptor_67;
  id v16 = _Block_copy(aBlock);
  sub_1AFDBE820(a3);
  id v17 = a5;
  sub_1AFFCABE8();
  aBlock[7] = MEMORY[0x1E4FBC860];
  sub_1AFDBE628((unint64_t *)&unk_1EB819C20, MEMORY[0x1E4FBCB00]);
  sub_1AFDBE5D0();
  sub_1AFDBE628((unint64_t *)&qword_1EB819DB0, (void (*)(uint64_t))sub_1AFDBE5D0);
  sub_1AFFCB738();
  MEMORY[0x1B3E8D920](0, v14, v11, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v20);
  return swift_release();
}

uint64_t sub_1AFDB7840(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v19[0] = a2;
  uint64_t v7 = sub_1AFFCABC8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1AFFCAC18();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  unsigned __int8 v14 = (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned __int8 v15 = (void *)swift_allocObject();
  long long v15[2] = a3;
  void v15[3] = a4;
  v15[4] = a1;
  aBlock[4] = sub_1AFDBE924;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1AFDB5104;
  aBlock[3] = &block_descriptor_61;
  id v16 = _Block_copy(aBlock);
  sub_1AFDBE820(a3);
  id v17 = a1;
  sub_1AFFCABE8();
  v19[1] = MEMORY[0x1E4FBC860];
  sub_1AFDBE628((unint64_t *)&unk_1EB819C20, MEMORY[0x1E4FBCB00]);
  sub_1AFDBE5D0();
  sub_1AFDBE628((unint64_t *)&qword_1EB819DB0, (void (*)(uint64_t))sub_1AFDBE5D0);
  sub_1AFFCB738();
  MEMORY[0x1B3E8D920](0, v14, v10, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return swift_release();
}

uint64_t sub_1AFDB7BEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  sub_1AFDBE820(a1);
  sub_1AFFCA828();

  return swift_release();
}

id sub_1AFDB7C70(uint64_t a1)
{
  return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC10StocksCore24NewsConfigurationManager_appConfigObservers), sel_addObject_, a1);
}

id sub_1AFDB7CA4(uint64_t a1)
{
  return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC10StocksCore24NewsConfigurationManager_appConfigObservers), sel_removeObject_, a1);
}

void sub_1AFDB7CD8(void *a1)
{
}

uint64_t sub_1AFDB7CE0(uint64_t a1, uint64_t a2)
{
  sub_1AFDB7D44();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1AFDB7D44()
{
  if (!qword_1EB819008)
  {
    unint64_t v0 = sub_1AFFCB658();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB819008);
    }
  }
}

uint64_t sub_1AFDB7D9C()
{
  swift_unknownObjectUnownedDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1AFDB7DD4()
{
}

uint64_t sub_1AFDB7DDC(uint64_t a1)
{
  uint64_t v16 = *(void *)(a1 + 216);
  uint64_t v17 = *(void *)(a1 + 208);
  uint64_t v14 = *(void *)(a1 + 232);
  uint64_t v15 = *(void *)(a1 + 224);
  uint64_t v12 = *(void *)(a1 + 248);
  uint64_t v13 = *(void *)(a1 + 240);
  uint64_t v10 = *(void *)(a1 + 264);
  uint64_t v11 = *(void *)(a1 + 256);
  long long v9 = *(_OWORD *)(a1 + 272);
  long long v8 = *(_OWORD *)(a1 + 288);
  long long v6 = *(_OWORD *)(a1 + 320);
  long long v7 = *(_OWORD *)(a1 + 304);
  long long v5 = *(_OWORD *)(a1 + 336);
  long long v4 = *(_OWORD *)(a1 + 352);
  uint64_t v2 = *(void *)(a1 + 368);
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFDB3A78(v17, v16, v15, v14, v13, v12, v11, v10, v9, *((uint64_t *)&v9 + 1), v8, *((uint64_t *)&v8 + 1), v7, *((uint64_t *)&v7 + 1), v6, *((uint64_t *)&v6 + 1), v5, *((uint64_t *)&v5 + 1), v4,
    *((uint64_t *)&v4 + 1),
    v2);
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  return a1;
}

uint64_t *sub_1AFDB7FA0(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v2 = v1;
  sub_1AFDB9FEC(*v1, v1[1]);
  return v2;
}

uint64_t sub_1AFDB9FEC(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    uint64_t v24 = STACK[0x1260];
    uint64_t v25 = STACK[0x1268];
    uint64_t v20 = STACK[0x5C0];
    uint64_t v19 = STACK[0x5B8];
    uint64_t v18 = STACK[0x5B0];
    uint64_t v17 = STACK[0x5A8];
    uint64_t v16 = STACK[0x5A0];
    uint64_t v15 = STACK[0x598];
    uint64_t v14 = STACK[0x590];
    uint64_t v13 = STACK[0x588];
    uint64_t v12 = STACK[0x580];
    uint64_t v11 = STACK[0x578];
    uint64_t v10 = STACK[0x570];
    uint64_t v9 = STACK[0x568];
    uint64_t v8 = STACK[0x560];
    uint64_t v23 = STACK[0x558];
    uint64_t v22 = STACK[0x550];
    uint64_t v21 = STACK[0x548];
    uint64_t v7 = STACK[0x540];
    uint64_t v6 = STACK[0x538];
    uint64_t v5 = STACK[0x530];
    uint64_t v4 = STACK[0x528];
    uint64_t v3 = STACK[0x520];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1AFD56100(v3, v4, v5, v6, v7, v21, v22, v23, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1AFD56284(v24, v25);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t *sub_1AFDBA464(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v2 = v1;
  uint64_t v4 = v1[536];
  uint64_t v5 = v1[537];
  sub_1AFDB9FEC(*v1, v1[1]);
  sub_1AFDB9FEC(v4, v5);
  return v2;
}

uint64_t sub_1AFDBE5AC()
{
  return sub_1AFDB6BB8(*(void *)(v0 + 16));
}

void sub_1AFDBE5D0()
{
  if (!qword_1EB819DA0)
  {
    sub_1AFFCABC8();
    unint64_t v0 = sub_1AFFCB288();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB819DA0);
    }
  }
}

uint64_t sub_1AFDBE628(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AFDBE678()
{
  uint64_t v1 = (void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC10StocksCore24NewsConfigurationManager_appConfigurationManager);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 48))(v2, v3);
}

uint64_t sub_1AFDBE6E0()
{
  if (*(void *)(v0 + 24)) {
    swift_release();
  }

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1AFDBE730(uint64_t a1)
{
  return sub_1AFDB7564(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_1AFDBE750()
{
  if (*(void *)(v0 + 24)) {
    swift_release();
  }

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1AFDBE798(void *a1)
{
  return sub_1AFDB7840(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1AFDBE7A4()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1AFDBE7E4()
{
  uint64_t v1 = *(uint64_t (**)(void, void))(v0 + 16);
  if (v1) {
    return v1(MEMORY[0x1E4FBC860], 0);
  }
  return result;
}

uint64_t sub_1AFDBE820(uint64_t result)
{
  if (result) {
    return sub_1AFFC8E48();
  }
  return result;
}

uint64_t type metadata accessor for NewsConfigurationManager()
{
  return self;
}

uint64_t sub_1AFDBE854(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for NewsConfigurationManager);
}

uint64_t sub_1AFDBE86C()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t sub_1AFDBE880()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1AFDBE8BC(uint64_t a1, uint64_t a2)
{
  sub_1AFDB6FEC(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_1AFDBE8DC()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1AFDBE924()
{
  uint64_t v1 = *(uint64_t (**)(void, void))(v0 + 16);
  if (v1) {
    return v1(0, *(void *)(v0 + 32));
  }
  return result;
}

void sub_1AFDBE990(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x73752D6E65;
  id v3 = objc_msgSend(self, sel_sharedPreferences);
  uint64_t v4 = v3;
  if (!v3)
  {
    unint64_t v8 = 0xE500000000000000;
LABEL_8:

    unint64_t v13 = 0xE200000000000000;
    uint64_t v11 = 21333;
    goto LABEL_9;
  }
  id v5 = objc_msgSend(v3, sel_stocksLanguageCode);
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v2 = sub_1AFFCAE98();
    unint64_t v8 = v7;
  }
  else
  {
    unint64_t v8 = 0xE500000000000000;
  }
  id v9 = objc_msgSend(v4, sel_stocksCountryCode);
  if (!v9) {
    goto LABEL_8;
  }
  uint64_t v10 = v9;
  uint64_t v11 = sub_1AFFCAE98();
  unint64_t v13 = v12;

LABEL_9:
  *a1 = v2;
  a1[1] = v8;
  a1[2] = v11;
  a1[3] = v13;
}

void *initializeWithCopy for MultiSizeVideo(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  return a1;
}

void *assignWithCopy for MultiSizeVideo(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for MultiSizeVideo(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for LocalizationParameters()
{
  return &type metadata for LocalizationParameters;
}

uint64_t sub_1AFDBEB94()
{
  uint64_t result = sub_1AFFC96E8();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1AFFC98F8();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_1AFFC9E18();
      if (v3 <= 0x3F) {
        return swift_initClassMetadata2();
      }
    }
  }
  return result;
}

id sub_1AFDBECDC(void (*a1)(uint64_t *), uint64_t a2)
{
  unint64_t v3 = v2;
  uint64_t v57 = a1;
  uint64_t v58 = a2;
  uint64_t v4 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v5 = *MEMORY[0x1E4FBC8C8] & *(void *)v2;
  uint64_t v6 = *(void *)(v5 + qword_1EB831B30 + 8);
  uint64_t v53 = *(void *)(v5 + qword_1EB831B30);
  uint64_t v52 = v6;
  uint64_t v45 = type metadata accessor for YahooBaseResponse();
  uint64_t v55 = sub_1AFFCA5F8();
  uint64_t v54 = *(void *)(v55 - 8);
  MEMORY[0x1F4188790](v55);
  unint64_t v8 = (uint64_t *)((char *)&v42 - v7);
  uint64_t v49 = sub_1AFFC98F8();
  uint64_t v48 = *(void *)(v49 - 8);
  MEMORY[0x1F4188790](v49);
  uint64_t v47 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_1AFFC9E18();
  uint64_t v43 = *(void *)(v44 - 8);
  MEMORY[0x1F4188790](v44);
  long long v46 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFDBFE04(0, (unint64_t *)&unk_1EB81B290, MEMORY[0x1E4F26C48], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v11 - 8);
  unint64_t v13 = (char *)&v42 - v12;
  uint64_t v14 = sub_1AFFC9118();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  long long v50 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v51 = (char *)&v42 - v18;
  uint64_t v19 = sub_1AFFC96E8();
  uint64_t v59 = *(void *)(v19 - 8);
  uint64_t v60 = v19;
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFFC9658();
  sub_1AFDBFE04(0, (unint64_t *)&qword_1EB81A0E8, (uint64_t (*)(uint64_t))sub_1AFD306F8, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AFFD0DC0;
  *(void *)(inited + 32) = 1735287148;
  *(void *)(inited + 40) = 0xE400000000000000;
  uint64_t v23 = &v2[*(void *)(qword_1EB831B30 + (*v4 & *(void *)v2) + 48)];
  uint64_t v24 = *((void *)v23 + 1);
  *(void *)(inited + 48) = *(void *)v23;
  *(void *)(inited + 56) = v24;
  *(void *)(inited + 64) = 0x6E6F69676572;
  *(void *)(inited + 72) = 0xE600000000000000;
  uint64_t v25 = *((void *)v23 + 3);
  *(void *)(inited + 80) = *((void *)v23 + 2);
  *(void *)(inited + 88) = v25;
  *(void *)(inited + 96) = 0x74616D726F66;
  *(void *)(inited + 104) = 0xE600000000000000;
  *(void *)(inited + 112) = 1852797802;
  *(void *)(inited + 120) = 0xE400000000000000;
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFDF9B10(inited);
  uint64_t v26 = sub_1AFFCA308();
  swift_bridgeObjectRelease();
  id result = objc_msgSend(self, sel_sharedPreferences);
  if (result)
  {
    uint64_t v28 = result;
    uint64_t v56 = v21;
    uint64_t v29 = (void *)sub_1AFFC9638();
    sub_1AFDFB270(v26);
    swift_bridgeObjectRelease();
    double v30 = (void *)sub_1AFFCAC78();
    swift_bridgeObjectRelease();
    id v31 = objc_msgSend(v28, sel_signedRequestForURL_parameters_, v29, v30);

    if (v31)
    {
      uint64_t v32 = v50;
      sub_1AFFC90B8();

      uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
      v33(v13, v32, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v14);
      int v34 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14);
      uint64_t v35 = v57;
      if (v34 != 1)
      {
        uint64_t v36 = v51;
        v33(v51, v13, v14);
        swift_getWitnessTable();
        sub_1AFFCA0C8();
        swift_getWitnessTable();
        sub_1AFFCA128();
        (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v32, v36, v14);
        uint64_t v37 = (void *)MEMORY[0x1E4FBC8C8];
        (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v46, &v3[*(void *)(qword_1EB831B30 + (*MEMORY[0x1E4FBC8C8] & *(void *)v3) + 72)], v44);
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v47, &v3[*(void *)(qword_1EB831B30 + (*v37 & *(void *)v3) + 64)], v49);
        uint64_t v38 = (void *)sub_1AFFCA108();
        *(void *)(swift_allocObject() + 16) = v3;
        uint64_t v39 = v3;
        sub_1AFFCA0D8();
        id v40 = v38;
        sub_1AFFC8E48();
        sub_1AFFC9F18();

        objc_msgSend(v40, sel_start);
        (*(void (**)(char *, uint64_t))(v15 + 8))(v51, v14);
        return (id)(*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v56, v60);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
      uint64_t v35 = v57;
    }
    sub_1AFDBFE68((uint64_t)v13);
    type metadata accessor for YahooBaseOperation.OperationError();
    swift_getWitnessTable();
    uint64_t *v8 = swift_allocError();
    uint64_t v41 = v55;
    swift_storeEnumTagMultiPayload();
    v35(v8);
    (*(void (**)(uint64_t *, uint64_t))(v54 + 8))(v8, v41);
    return (id)(*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v56, v60);
  }
  __break(1u);
  return result;
}

uint64_t sub_1AFDBF65C(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for NetworkEvent();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (void *)((char *)a2 + *(void *)(qword_1EB831B30 + (*MEMORY[0x1E4FBC8C8] & *a2) + 56));
  uint64_t v8 = v7[3];
  uint64_t v9 = v7[4];
  __swift_project_boxed_opaque_existential_1(v7, v8);
  sub_1AFDBF76C(a1, (uint64_t)v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v6, v8, v9);
  return sub_1AFDBFF4C((uint64_t)v6);
}

uint64_t sub_1AFDBF76C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1AFFCA368();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  type metadata accessor for NetworkEvent();

  return swift_storeEnumTagMultiPayload();
}

void sub_1AFDBF844()
{
}

uint64_t sub_1AFDBF88C()
{
  unint64_t v1 = (void *)MEMORY[0x1E4FBC8C8];
  unint64_t v2 = (char *)v0 + *(void *)(qword_1EB831B30 + (*MEMORY[0x1E4FBC8C8] & *v0) + 24);
  uint64_t v3 = sub_1AFFC96E8();
  (*(void (**)(char *, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v0 + *(void *)(qword_1EB831B30 + (*v1 & *v0) + 56));
  uint64_t v4 = (char *)v0 + *(void *)(qword_1EB831B30 + (*v1 & *v0) + 64);
  uint64_t v5 = sub_1AFFC98F8();
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = (char *)v0 + *(void *)(qword_1EB831B30 + (*v1 & *v0) + 72);
  uint64_t v7 = sub_1AFFC9E18();
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

uint64_t sub_1AFDBFB38(void *a1)
{
  unint64_t v2 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v3 = (char *)a1 + *(void *)(qword_1EB831B30 + (*MEMORY[0x1E4FBC8C8] & *a1) + 24);
  uint64_t v4 = sub_1AFFC96E8();
  (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1 + *(void *)(qword_1EB831B30 + (*v2 & *a1) + 56));
  uint64_t v5 = (char *)a1 + *(void *)(qword_1EB831B30 + (*v2 & *a1) + 64);
  uint64_t v6 = sub_1AFFC98F8();
  (*(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = (char *)a1 + *(void *)(qword_1EB831B30 + (*v2 & *a1) + 72);
  uint64_t v8 = sub_1AFFC9E18();
  uint64_t v9 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

uint64_t type metadata accessor for YahooBaseOperation()
{
  return __swift_instantiateGenericMetadata();
}

void sub_1AFDBFE04(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1AFDBFE68(uint64_t a1)
{
  sub_1AFDBFE04(0, (unint64_t *)&unk_1EB81B290, MEMORY[0x1E4F26C48], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for YahooBaseOperation.OperationError()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1AFDBFF0C()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1AFDBFF44(uint64_t a1)
{
  return sub_1AFDBF65C(a1, *(void **)(v1 + 16));
}

uint64_t sub_1AFDBFF4C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NetworkEvent();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1AFDBFFA8()
{
}

uint64_t sub_1AFDBFFD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 16);
}

unsigned char *sub_1AFDBFFE0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *id result = a2;
        return result;
      case 2:
        *(_WORD *)id result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)id result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *id result = 0;
      break;
    case 2:
      *(_WORD *)id result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1AFDC007CLL);
    case 4:
      *(_DWORD *)id result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1AFDC00A4()
{
  return swift_getWitnessTable();
}

uint64_t sub_1AFDC00C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (!a2) {
    a1 = sub_1AFF99D74(0x500000001);
  }
  uint64_t v5 = a2;
  sub_1AFFC8E38();
  uint64_t v6 = sub_1AFF99D74(0xF00000005);
  char v9 = 0;
  return sub_1AFD789F8(a1, v5, v6, v7, 0x51414453414ELL, 0xE600000000000000, &v9, 0, a3, 0, 0, 0, 0, 0, 0, 0);
}

uint64_t sub_1AFDC0170()
{
  char v1 = 3;
  return sub_1AFD789F8(1280328001, 0xE400000000000000, 0x6E4920656C707041, 0xEA00000000002E63, 0x51414453414ELL, 0xE600000000000000, &v1, 0, (uint64_t)&xmmword_1E9AFA610, 0, 0, 0, 0, 0, 0, 0);
}

uint64_t sub_1AFDC01EC@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E9AF8C70 != -1) {
    swift_once();
  }
  long long v2 = xmmword_1E9AFA660;
  v10[6] = xmmword_1E9AFA670;
  v10[7] = xmmword_1E9AFA680;
  long long v3 = xmmword_1E9AFA620;
  long long v4 = xmmword_1E9AFA630;
  void v10[2] = xmmword_1E9AFA630;
  v10[3] = xmmword_1E9AFA640;
  long long v5 = xmmword_1E9AFA640;
  long long v6 = xmmword_1E9AFA650;
  void v10[4] = xmmword_1E9AFA650;
  v10[5] = xmmword_1E9AFA660;
  long long v7 = xmmword_1E9AFA610;
  v10[0] = xmmword_1E9AFA610;
  v10[1] = xmmword_1E9AFA620;
  long long v8 = xmmword_1E9AFA680;
  *(_OWORD *)(a1 + 96) = xmmword_1E9AFA670;
  *(_OWORD *)(a1 + 112) = v8;
  *(_OWORD *)(a1 + 32) = v4;
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 80) = v2;
  uint64_t v11 = qword_1E9AFA690;
  *(void *)(a1 + 128) = qword_1E9AFA690;
  *(_OWORD *)a1 = v7;
  *(_OWORD *)(a1 + 16) = v3;
  return sub_1AFD76370((uint64_t)v10);
}

uint64_t sub_1AFDC02A8()
{
  char v1 = 3;
  return sub_1AFD789F8(1095521108, 0xE400000000000000, 0x49202C616C736554, 0xEB000000002E636ELL, 0x51414453414ELL, 0xE600000000000000, &v1, 0, (uint64_t)&xmmword_1E9AFA698, 0, 0, 0, 0, 0, 0, 0);
}

uint64_t sub_1AFDC0328@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E9AF8C78 != -1) {
    swift_once();
  }
  long long v2 = xmmword_1E9AFA6E8;
  v10[6] = xmmword_1E9AFA6F8;
  v10[7] = xmmword_1E9AFA708;
  long long v3 = xmmword_1E9AFA6A8;
  long long v4 = xmmword_1E9AFA6B8;
  void v10[2] = xmmword_1E9AFA6B8;
  v10[3] = xmmword_1E9AFA6C8;
  long long v5 = xmmword_1E9AFA6C8;
  long long v6 = xmmword_1E9AFA6D8;
  void v10[4] = xmmword_1E9AFA6D8;
  v10[5] = xmmword_1E9AFA6E8;
  long long v7 = xmmword_1E9AFA698;
  v10[0] = xmmword_1E9AFA698;
  v10[1] = xmmword_1E9AFA6A8;
  long long v8 = xmmword_1E9AFA708;
  *(_OWORD *)(a1 + 96) = xmmword_1E9AFA6F8;
  *(_OWORD *)(a1 + 112) = v8;
  *(_OWORD *)(a1 + 32) = v4;
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 80) = v2;
  uint64_t v11 = qword_1E9AFA718;
  *(void *)(a1 + 128) = qword_1E9AFA718;
  *(_OWORD *)a1 = v7;
  *(_OWORD *)(a1 + 16) = v3;
  return sub_1AFD76370((uint64_t)v10);
}

uint64_t sub_1AFDC03E4()
{
  char v1 = 3;
  return sub_1AFD789F8(1381259092, 0xE400000000000000, 0x2C72657474697754, 0xED00002E636E4920, 0x51414453414ELL, 0xE600000000000000, &v1, 0, (uint64_t)&xmmword_1E9AFA720, 0, 0, 0, 0, 0, 0, 0);
}

uint64_t sub_1AFDC0468@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E9AF8C80 != -1) {
    swift_once();
  }
  long long v2 = xmmword_1E9AFA770;
  v10[6] = xmmword_1E9AFA780;
  v10[7] = xmmword_1E9AFA790;
  long long v3 = xmmword_1E9AFA730;
  long long v4 = xmmword_1E9AFA740;
  void v10[2] = xmmword_1E9AFA740;
  v10[3] = xmmword_1E9AFA750;
  long long v5 = xmmword_1E9AFA750;
  long long v6 = xmmword_1E9AFA760;
  void v10[4] = xmmword_1E9AFA760;
  v10[5] = xmmword_1E9AFA770;
  long long v7 = xmmword_1E9AFA720;
  v10[0] = xmmword_1E9AFA720;
  v10[1] = xmmword_1E9AFA730;
  long long v8 = xmmword_1E9AFA790;
  *(_OWORD *)(a1 + 96) = xmmword_1E9AFA780;
  *(_OWORD *)(a1 + 112) = v8;
  *(_OWORD *)(a1 + 32) = v4;
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 80) = v2;
  uint64_t v11 = qword_1E9AFA7A0;
  *(void *)(a1 + 128) = qword_1E9AFA7A0;
  *(_OWORD *)a1 = v7;
  *(_OWORD *)(a1 + 16) = v3;
  return sub_1AFD76370((uint64_t)v10);
}

uint64_t sub_1AFDC0524()
{
  char v1 = 6;
  return sub_1AFD789F8(0x435053475ELL, 0xE500000000000000, 0x30303520502653, 0xE700000000000000, 0, 0xE000000000000000, &v1, 0x30303520502653, (uint64_t)&xmmword_1E9AFA7A8, 0xE700000000000000, 5252691, 0xE300000000000000, 0, 0, 0, 0);
}

uint64_t sub_1AFDC05B4@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E9AF8C88 != -1) {
    swift_once();
  }
  long long v2 = xmmword_1E9AFA7F8;
  v10[6] = xmmword_1E9AFA808;
  v10[7] = xmmword_1E9AFA818;
  long long v3 = xmmword_1E9AFA7B8;
  long long v4 = xmmword_1E9AFA7C8;
  void v10[2] = xmmword_1E9AFA7C8;
  v10[3] = xmmword_1E9AFA7D8;
  long long v5 = xmmword_1E9AFA7D8;
  long long v6 = xmmword_1E9AFA7E8;
  void v10[4] = xmmword_1E9AFA7E8;
  v10[5] = xmmword_1E9AFA7F8;
  long long v7 = xmmword_1E9AFA7A8;
  v10[0] = xmmword_1E9AFA7A8;
  v10[1] = xmmword_1E9AFA7B8;
  long long v8 = xmmword_1E9AFA818;
  *(_OWORD *)(a1 + 96) = xmmword_1E9AFA808;
  *(_OWORD *)(a1 + 112) = v8;
  *(_OWORD *)(a1 + 32) = v4;
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 80) = v2;
  uint64_t v11 = qword_1E9AFA828;
  *(void *)(a1 + 128) = qword_1E9AFA828;
  *(_OWORD *)a1 = v7;
  *(_OWORD *)(a1 + 16) = v3;
  return sub_1AFD76370((uint64_t)v10);
}

uint64_t sub_1AFDC0670()
{
  char v1 = 6;
  return sub_1AFD789F8(1229603934, 0xE400000000000000, 0xD00000000000001CLL, 0x80000001AFFF2A50, 0, 0xE000000000000000, &v1, 0x656E6F4A20776F44, (uint64_t)&xmmword_1E9AFA830, 0xE900000000000073, 5721924, 0xE300000000000000, 0, 0, 0, 0);
}

uint64_t sub_1AFDC0704@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E9AF8C90 != -1) {
    swift_once();
  }
  long long v2 = xmmword_1E9AFA880;
  v10[6] = xmmword_1E9AFA890;
  v10[7] = xmmword_1E9AFA8A0;
  long long v3 = xmmword_1E9AFA840;
  long long v4 = xmmword_1E9AFA850;
  void v10[2] = xmmword_1E9AFA850;
  v10[3] = xmmword_1E9AFA860;
  long long v5 = xmmword_1E9AFA860;
  long long v6 = xmmword_1E9AFA870;
  void v10[4] = xmmword_1E9AFA870;
  v10[5] = xmmword_1E9AFA880;
  long long v7 = xmmword_1E9AFA830;
  v10[0] = xmmword_1E9AFA830;
  v10[1] = xmmword_1E9AFA840;
  long long v8 = xmmword_1E9AFA8A0;
  *(_OWORD *)(a1 + 96) = xmmword_1E9AFA890;
  *(_OWORD *)(a1 + 112) = v8;
  *(_OWORD *)(a1 + 32) = v4;
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 80) = v2;
  uint64_t v11 = qword_1E9AFA8B0;
  *(void *)(a1 + 128) = qword_1E9AFA8B0;
  *(_OWORD *)a1 = v7;
  *(_OWORD *)(a1 + 16) = v3;
  return sub_1AFD76370((uint64_t)v10);
}

uint64_t sub_1AFDC07C0()
{
  char v1 = 3;
  return sub_1AFD789F8(5721924, 0xE300000000000000, 0x6D65684320776F44, 0xED0000736C616369, 0, 0xE000000000000000, &v1, 5721924, (uint64_t)&xmmword_1E9AFA8B8, 0xE300000000000000, 5721924, 0xE300000000000000, 0, 0, 0, 0);
}

uint64_t sub_1AFDC084C@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E9AF8C98 != -1) {
    swift_once();
  }
  long long v2 = xmmword_1E9AFA908;
  v10[6] = xmmword_1E9AFA918;
  v10[7] = xmmword_1E9AFA928;
  long long v3 = xmmword_1E9AFA8C8;
  long long v4 = xmmword_1E9AFA8D8;
  void v10[2] = xmmword_1E9AFA8D8;
  v10[3] = xmmword_1E9AFA8E8;
  long long v5 = xmmword_1E9AFA8E8;
  long long v6 = xmmword_1E9AFA8F8;
  void v10[4] = xmmword_1E9AFA8F8;
  v10[5] = xmmword_1E9AFA908;
  long long v7 = xmmword_1E9AFA8B8;
  v10[0] = xmmword_1E9AFA8B8;
  v10[1] = xmmword_1E9AFA8C8;
  long long v8 = xmmword_1E9AFA928;
  *(_OWORD *)(a1 + 96) = xmmword_1E9AFA918;
  *(_OWORD *)(a1 + 112) = v8;
  *(_OWORD *)(a1 + 32) = v4;
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 80) = v2;
  uint64_t v11 = qword_1E9AFA938;
  *(void *)(a1 + 128) = qword_1E9AFA938;
  *(_OWORD *)a1 = v7;
  *(_OWORD *)(a1 + 16) = v3;
  return sub_1AFD76370((uint64_t)v10);
}

uint64_t sub_1AFDC0908()
{
  char v1 = 3;
  return sub_1AFD789F8(1296253505, 0xE400000000000000, 0x6C70206D61636241, 0xE900000000000063, 0, 0xE000000000000000, &v1, 0, (uint64_t)&xmmword_1E9AFA940, 0, 0, 0, 0, 0, 0, 0);
}

uint64_t sub_1AFDC097C@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E9AF8CA0 != -1) {
    swift_once();
  }
  long long v2 = xmmword_1E9AFA990;
  v10[6] = xmmword_1E9AFA9A0;
  v10[7] = xmmword_1E9AFA9B0;
  long long v3 = xmmword_1E9AFA950;
  long long v4 = xmmword_1E9AFA960;
  void v10[2] = xmmword_1E9AFA960;
  v10[3] = xmmword_1E9AFA970;
  long long v5 = xmmword_1E9AFA970;
  long long v6 = xmmword_1E9AFA980;
  void v10[4] = xmmword_1E9AFA980;
  v10[5] = xmmword_1E9AFA990;
  long long v7 = xmmword_1E9AFA940;
  v10[0] = xmmword_1E9AFA940;
  v10[1] = xmmword_1E9AFA950;
  long long v8 = xmmword_1E9AFA9B0;
  *(_OWORD *)(a1 + 96) = xmmword_1E9AFA9A0;
  *(_OWORD *)(a1 + 112) = v8;
  *(_OWORD *)(a1 + 32) = v4;
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 80) = v2;
  uint64_t v11 = qword_1E9AFA9C0;
  *(void *)(a1 + 128) = qword_1E9AFA9C0;
  *(_OWORD *)a1 = v7;
  *(_OWORD *)(a1 + 16) = v3;
  return sub_1AFD76370((uint64_t)v10);
}

uint64_t sub_1AFDC0A38()
{
  char v1 = 3;
  return sub_1AFD789F8(1279476289, 0xE400000000000000, 0xD000000000000011, 0x80000001AFFF2A30, 0, 0xE000000000000000, &v1, 0, (uint64_t)&xmmword_1E9AFA9C8, 0, 0, 0, 0, 0, 0, 0);
}

uint64_t sub_1AFDC0AAC@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E9AF8CA8 != -1) {
    swift_once();
  }
  long long v2 = xmmword_1E9AFAA18;
  v10[6] = xmmword_1E9AFAA28;
  v10[7] = xmmword_1E9AFAA38;
  long long v3 = xmmword_1E9AFA9D8;
  long long v4 = xmmword_1E9AFA9E8;
  void v10[2] = xmmword_1E9AFA9E8;
  v10[3] = xmmword_1E9AFA9F8;
  long long v5 = xmmword_1E9AFA9F8;
  long long v6 = xmmword_1E9AFAA08;
  void v10[4] = xmmword_1E9AFAA08;
  v10[5] = xmmword_1E9AFAA18;
  long long v7 = xmmword_1E9AFA9C8;
  v10[0] = xmmword_1E9AFA9C8;
  v10[1] = xmmword_1E9AFA9D8;
  long long v8 = xmmword_1E9AFAA38;
  *(_OWORD *)(a1 + 96) = xmmword_1E9AFAA28;
  *(_OWORD *)(a1 + 112) = v8;
  *(_OWORD *)(a1 + 32) = v4;
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 80) = v2;
  uint64_t v11 = qword_1E9AFAA48;
  *(void *)(a1 + 128) = qword_1E9AFAA48;
  *(_OWORD *)a1 = v7;
  *(_OWORD *)(a1 + 16) = v3;
  return sub_1AFD76370((uint64_t)v10);
}

uint64_t sub_1AFDC0B68()
{
  char v1 = 3;
  return sub_1AFD789F8(16706, 0xE200000000000000, 0xD000000000000012, 0x80000001AFFF2A10, 0, 0xE000000000000000, &v1, 0, (uint64_t)&xmmword_1E9AFAA50, 0, 0, 0, 0, 0, 0, 0);
}

uint64_t sub_1AFDC0BD8@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E9AF8CB0 != -1) {
    swift_once();
  }
  long long v2 = xmmword_1E9AFAAA0;
  v10[6] = xmmword_1E9AFAAB0;
  v10[7] = xmmword_1E9AFAAC0;
  long long v3 = xmmword_1E9AFAA60;
  long long v4 = xmmword_1E9AFAA70;
  void v10[2] = xmmword_1E9AFAA70;
  v10[3] = xmmword_1E9AFAA80;
  long long v5 = xmmword_1E9AFAA80;
  long long v6 = xmmword_1E9AFAA90;
  void v10[4] = xmmword_1E9AFAA90;
  v10[5] = xmmword_1E9AFAAA0;
  long long v7 = xmmword_1E9AFAA50;
  v10[0] = xmmword_1E9AFAA50;
  v10[1] = xmmword_1E9AFAA60;
  long long v8 = xmmword_1E9AFAAC0;
  *(_OWORD *)(a1 + 96) = xmmword_1E9AFAAB0;
  *(_OWORD *)(a1 + 112) = v8;
  *(_OWORD *)(a1 + 32) = v4;
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 80) = v2;
  uint64_t v11 = qword_1E9AFAAD0;
  *(void *)(a1 + 128) = qword_1E9AFAAD0;
  *(_OWORD *)a1 = v7;
  *(_OWORD *)(a1 + 16) = v3;
  return sub_1AFD76370((uint64_t)v10);
}

uint64_t sub_1AFDC0C94()
{
  char v1 = 6;
  return sub_1AFD789F8(0x3532324E5ELL, 0xE500000000000000, 0xD000000000000010, 0x80000001AFFF29F0, 0, 0xE000000000000000, &v1, 0, (uint64_t)&xmmword_1E9AFAAD8, 0, 0, 0, 0, 0, 0, 0);
}

uint64_t sub_1AFDC0D0C@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E9AF8CB8 != -1) {
    swift_once();
  }
  long long v2 = xmmword_1E9AFAB28;
  v10[6] = xmmword_1E9AFAB38;
  v10[7] = xmmword_1E9AFAB48;
  long long v3 = xmmword_1E9AFAAE8;
  long long v4 = xmmword_1E9AFAAF8;
  void v10[2] = xmmword_1E9AFAAF8;
  v10[3] = xmmword_1E9AFAB08;
  long long v5 = xmmword_1E9AFAB08;
  long long v6 = xmmword_1E9AFAB18;
  void v10[4] = xmmword_1E9AFAB18;
  v10[5] = xmmword_1E9AFAB28;
  long long v7 = xmmword_1E9AFAAD8;
  v10[0] = xmmword_1E9AFAAD8;
  v10[1] = xmmword_1E9AFAAE8;
  long long v8 = xmmword_1E9AFAB48;
  *(_OWORD *)(a1 + 96) = xmmword_1E9AFAB38;
  *(_OWORD *)(a1 + 112) = v8;
  *(_OWORD *)(a1 + 32) = v4;
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 80) = v2;
  uint64_t v11 = qword_1E9AFAB58;
  *(void *)(a1 + 128) = qword_1E9AFAB58;
  *(_OWORD *)a1 = v7;
  *(_OWORD *)(a1 + 16) = v3;
  return sub_1AFD76370((uint64_t)v10);
}

uint64_t sub_1AFDC0DC8()
{
  char v1 = 3;
  return sub_1AFD789F8(0x4B2E303039313530, 0xE900000000000053, 0x1000000000000013, 0x80000001AFFF29D0, 0, 0xE000000000000000, &v1, 0, (uint64_t)&xmmword_1E9AFAB60, 0, 0, 0, 0, 0, 0, 0);
}

uint64_t sub_1AFDC0E48@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E9AF8CC0 != -1) {
    swift_once();
  }
  long long v2 = xmmword_1E9AFABB0;
  v10[6] = xmmword_1E9AFABC0;
  v10[7] = xmmword_1E9AFABD0;
  long long v3 = xmmword_1E9AFAB70;
  long long v4 = xmmword_1E9AFAB80;
  void v10[2] = xmmword_1E9AFAB80;
  v10[3] = xmmword_1E9AFAB90;
  long long v5 = xmmword_1E9AFAB90;
  long long v6 = xmmword_1E9AFABA0;
  void v10[4] = xmmword_1E9AFABA0;
  v10[5] = xmmword_1E9AFABB0;
  long long v7 = xmmword_1E9AFAB60;
  v10[0] = xmmword_1E9AFAB60;
  v10[1] = xmmword_1E9AFAB70;
  long long v8 = xmmword_1E9AFABD0;
  *(_OWORD *)(a1 + 96) = xmmword_1E9AFABC0;
  *(_OWORD *)(a1 + 112) = v8;
  *(_OWORD *)(a1 + 32) = v4;
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 80) = v2;
  uint64_t v11 = qword_1E9AFABE0;
  *(void *)(a1 + 128) = qword_1E9AFABE0;
  *(_OWORD *)a1 = v7;
  *(_OWORD *)(a1 + 16) = v3;
  return sub_1AFD76370((uint64_t)v10);
}

uint64_t sub_1AFDC0F04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_1AFFCBDF8();
    sub_1AFFCAF68();
    uint64_t v6 = sub_1AFFCBE38();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      uint64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_1AFFCBCE8() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          uint64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_1AFFCBCE8() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_1AFDC103C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1AFFC99F8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a2 + 16)
    && (sub_1AFDC2380((unint64_t *)&qword_1EB818BB0),
        uint64_t v7 = sub_1AFFCAD58(),
        uint64_t v8 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v9 = v7 & ~v8,
        uint64_t v10 = a2 + 56,
        ((*(void *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0))
  {
    uint64_t v17 = ~v8;
    uint64_t v18 = a2;
    uint64_t v11 = v4 + 16;
    BOOL v12 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
    uint64_t v13 = *(void *)(v11 + 56);
    uint64_t v14 = (void (**)(char *, uint64_t))(v11 - 8);
    do
    {
      v12(v6, *(void *)(v18 + 48) + v13 * v9, v3);
      sub_1AFDC2380(&qword_1EB818BB8);
      char v15 = sub_1AFFCADD8();
      (*v14)(v6, v3);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v17;
    }
    while (((*(void *)(v10 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

id sub_1AFDC1228(void *a1, uint64_t a2, void *a3, int a4)
{
  id v4 = a3;
  if (a3)
  {
    uint64_t v7 = (char *)objc_msgSend(objc_msgSend(a1, sel_bundleSubscriptionProvider), sel_bundleSubscription);
    swift_unknownObjectRelease();
    if (objc_getAssociatedObject(v7, v7 + 1))
    {
      sub_1AFFCB6F8();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v17 = 0u;
      long long v18 = 0u;
    }
    sub_1AFD3BCF4((uint64_t)&v17, (uint64_t)v19);
    if (v20)
    {
      sub_1AFD7BE90();
      if (swift_dynamicCast())
      {
        uint64_t v8 = v16;
        unint64_t v9 = (unint64_t)objc_msgSend(v16, sel_integerValue);
        if (v9 == -1) {
          goto LABEL_19;
        }
        goto LABEL_11;
      }
    }
    else
    {
      sub_1AFD3BDB4((uint64_t)v19);
    }
    uint64_t v8 = 0;
    unint64_t v9 = 0;
LABEL_11:
    if (objc_getAssociatedObject(v7, (const void *)~v9))
    {
      sub_1AFFCB6F8();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v17 = 0u;
      long long v18 = 0u;
    }
    sub_1AFD3BCF4((uint64_t)&v17, (uint64_t)v19);
    if (v20)
    {
      sub_1AFD7BE90();
      if (swift_dynamicCast())
      {
        id v10 = v16;
        unsigned int v11 = objc_msgSend(v10, sel_integerValue);

        if ((((v11 - a4) ^ (v9 + a4)) & 1) == 0) {
          return 0;
        }
        goto LABEL_17;
      }
    }
    else
    {
      sub_1AFD3BDB4((uint64_t)v19);
    }
LABEL_19:

    if ((((v9 + a4) ^ a4) & 1) == 0) {
      return 0;
    }
LABEL_17:
    id v12 = objc_msgSend(objc_msgSend(a1, sel_bundleSubscriptionProvider), sel_bundleSubscription);
    swift_unknownObjectRelease();
    id v13 = objc_msgSend(v12, sel_bundleChannelIDs);

    uint64_t v14 = (void *)sub_1AFFCAE68();
    id v4 = objc_msgSend(v13, sel_containsObject_, v14);
  }
  return v4;
}

BOOL AccessCheckerHasAccess(_:toItemPaid:isBundlePaid:channelID:lineNumber:)(id a1, char a2, char a3, uint64_t a4, uint64_t a5, int a6)
{
  if (a2)
  {
    id v11 = objc_msgSend(a1, sel_purchaseProvider);
    if (!a5)
    {
      swift_unknownObjectRelease();
      return 0;
    }
    id v12 = objc_msgSend(v11, sel_purchasedTagIDs);
    uint64_t v13 = sub_1AFFCB358();

    LOBYTE(v12) = sub_1AFDC0F04(a4, a5, v13);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0)
    {
      if ((a3 & 1) == 0) {
        return 0;
      }
      goto LABEL_8;
    }
    return 1;
  }
  if ((a3 & 1) == 0) {
    return 1;
  }
  if (!a5) {
    return 0;
  }
LABEL_8:
  uint64_t v14 = (char *)objc_msgSend(objc_msgSend(a1, sel_bundleSubscriptionProvider), sel_bundleSubscription);
  swift_unknownObjectRelease();
  if (objc_getAssociatedObject(v14, v14 + 1))
  {
    sub_1AFFCB6F8();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v25 = 0u;
    long long v26 = 0u;
  }
  sub_1AFD3BCF4((uint64_t)&v25, (uint64_t)v27);
  if (!v28)
  {
    sub_1AFD3BDB4((uint64_t)v27);
    goto LABEL_17;
  }
  sub_1AFD7BE90();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_17:
    char v15 = 0;
    unint64_t v16 = 0;
    goto LABEL_18;
  }
  char v15 = v24;
  unint64_t v16 = (unint64_t)objc_msgSend(v24, sel_integerValue);
  if (v16 == -1)
  {
LABEL_26:

    if ((((v16 + a6) ^ a6) & 1) == 0) {
      return 0;
    }
    goto LABEL_27;
  }
LABEL_18:
  if (objc_getAssociatedObject(v14, (const void *)~v16))
  {
    sub_1AFFCB6F8();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v25 = 0u;
    long long v26 = 0u;
  }
  sub_1AFD3BCF4((uint64_t)&v25, (uint64_t)v27);
  if (!v28)
  {
    sub_1AFD3BDB4((uint64_t)v27);
    goto LABEL_26;
  }
  sub_1AFD7BE90();
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_26;
  }
  id v17 = v24;
  unsigned int v18 = objc_msgSend(v17, sel_integerValue);

  if ((((v18 - a6) ^ (v16 + a6)) & 1) == 0) {
    return 0;
  }
LABEL_27:
  id v19 = objc_msgSend(objc_msgSend(a1, sel_bundleSubscriptionProvider), sel_bundleSubscription);
  swift_unknownObjectRelease();
  id v20 = objc_msgSend(v19, sel_bundleChannelIDs);

  uint64_t v21 = (void *)sub_1AFFCAE68();
  unsigned __int8 v22 = objc_msgSend(v20, sel_containsObject_, v21);

  return (v22 & 1) != 0;
}

BOOL AccessCheckerHasAccess(_:to:lineNumber:)(void *a1, id a2, int a3)
{
  unsigned __int8 v6 = objc_msgSend(a2, sel_isPaid);
  if (objc_msgSend(a2, sel_respondsToSelector_, sel_isBundlePaid)) {
    unsigned int v7 = objc_msgSend(a2, sel_isBundlePaid);
  }
  else {
    unsigned int v7 = 0;
  }
  id v8 = objc_msgSend(a2, sel_sourceChannel);
  uint64_t v9 = (uint64_t)v8;
  if (v8)
  {
    id v10 = objc_msgSend(v8, sel_identifier);
    swift_unknownObjectRelease();
    uint64_t v11 = sub_1AFFCAE98();
    uint64_t v9 = v12;

    if (v6) {
      goto LABEL_6;
    }
LABEL_11:
    if (v7) {
      goto LABEL_15;
    }
    goto LABEL_12;
  }
  uint64_t v11 = 0;
  if ((v6 & 1) == 0) {
    goto LABEL_11;
  }
LABEL_6:
  id v13 = objc_msgSend(a1, sel_purchaseProvider);
  if (v9)
  {
    id v14 = objc_msgSend(v13, sel_purchasedTagIDs);
    uint64_t v15 = sub_1AFFCB358();

    LOBYTE(v14) = sub_1AFDC0F04(v11, v9, v15);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0)
    {
      if (!v7) {
        goto LABEL_35;
      }
      goto LABEL_15;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return 1;
  }
  swift_unknownObjectRelease();
  if (!v7) {
    goto LABEL_35;
  }
LABEL_15:
  if (v9)
  {
    id v17 = (char *)objc_msgSend(objc_msgSend(a1, sel_bundleSubscriptionProvider), sel_bundleSubscription);
    swift_unknownObjectRelease();
    if (objc_getAssociatedObject(v17, v17 + 1))
    {
      sub_1AFFCB6F8();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v27 = 0u;
      long long v28 = 0u;
    }
    sub_1AFD3BCF4((uint64_t)&v27, (uint64_t)v29);
    if (v30)
    {
      sub_1AFD7BE90();
      if (swift_dynamicCast())
      {
        unsigned int v18 = v26;
        unint64_t v19 = (unint64_t)objc_msgSend(v26, sel_integerValue);
        if (v19 == -1)
        {
LABEL_34:

          if ((((v19 + a3) ^ a3) & 1) == 0) {
            goto LABEL_35;
          }
          goto LABEL_31;
        }
        goto LABEL_25;
      }
    }
    else
    {
      sub_1AFD3BDB4((uint64_t)v29);
    }
    unsigned int v18 = 0;
    unint64_t v19 = 0;
LABEL_25:
    if (objc_getAssociatedObject(v17, (const void *)~v19))
    {
      sub_1AFFCB6F8();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v27 = 0u;
      long long v28 = 0u;
    }
    sub_1AFD3BCF4((uint64_t)&v27, (uint64_t)v29);
    if (!v30)
    {
      sub_1AFD3BDB4((uint64_t)v29);
      goto LABEL_34;
    }
    sub_1AFD7BE90();
    if ((swift_dynamicCast() & 1) == 0) {
      goto LABEL_34;
    }
    id v20 = v26;
    unsigned int v21 = objc_msgSend(v20, sel_integerValue);

    if (((v21 - a3) ^ (v19 + a3)))
    {
LABEL_31:
      id v22 = objc_msgSend(objc_msgSend(a1, sel_bundleSubscriptionProvider), sel_bundleSubscription);
      swift_unknownObjectRelease();
      id v23 = objc_msgSend(v22, sel_bundleChannelIDs);

      id v24 = (void *)sub_1AFFCAE68();
      unsigned __int8 v25 = objc_msgSend(v23, sel_containsObject_, v24);
      swift_bridgeObjectRelease();

      return (v25 & 1) != 0;
    }
LABEL_35:
    swift_bridgeObjectRelease();
  }
  return 0;
}

{
  unsigned __int8 v6;
  unsigned __int8 v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  char *v14;
  void *v16;
  unint64_t v17;
  id v18;
  unsigned int v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  long long v24;
  long long v25;
  unsigned char v26[24];
  uint64_t v27;

  unsigned __int8 v6 = objc_msgSend(a2, sel_isPaid);
  unsigned int v7 = objc_msgSend(a2, sel_isBundlePaid);
  id v8 = objc_msgSend(objc_msgSend(a2, sel_sourceChannel), sel_identifier);
  swift_unknownObjectRelease();
  uint64_t v9 = sub_1AFFCAE98();
  uint64_t v11 = v10;

  if ((v6 & 1) == 0)
  {
    if (v7) {
      goto LABEL_6;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    return 1;
  }
  uint64_t v12 = objc_msgSend(objc_msgSend(a1, sel_purchaseProvider), sel_purchasedTagIDs);
  id v13 = sub_1AFFCB358();

  LOBYTE(v12) = sub_1AFDC0F04(v9, v11, v13);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  if (v12) {
    goto LABEL_8;
  }
  if ((v7 & 1) == 0) {
    goto LABEL_27;
  }
LABEL_6:
  id v14 = (char *)objc_msgSend(objc_msgSend(a1, sel_bundleSubscriptionProvider), sel_bundleSubscription);
  swift_unknownObjectRelease();
  if (objc_getAssociatedObject(v14, v14 + 1))
  {
    sub_1AFFCB6F8();
    swift_unknownObjectRelease();
  }
  else
  {
    id v24 = 0u;
    unsigned __int8 v25 = 0u;
  }
  sub_1AFD3BCF4((uint64_t)&v24, (uint64_t)v26);
  if (!v27)
  {
    sub_1AFD3BDB4((uint64_t)v26);
    goto LABEL_16;
  }
  sub_1AFD7BE90();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_16:
    unint64_t v16 = 0;
    id v17 = 0;
    goto LABEL_17;
  }
  unint64_t v16 = v23;
  id v17 = (unint64_t)objc_msgSend(v23, sel_integerValue);
  if (v17 == -1)
  {
LABEL_26:

    if ((((v17 + a3) ^ a3) & 1) == 0) {
      goto LABEL_27;
    }
    goto LABEL_23;
  }
LABEL_17:
  if (objc_getAssociatedObject(v14, (const void *)~v17))
  {
    sub_1AFFCB6F8();
    swift_unknownObjectRelease();
  }
  else
  {
    id v24 = 0u;
    unsigned __int8 v25 = 0u;
  }
  sub_1AFD3BCF4((uint64_t)&v24, (uint64_t)v26);
  if (!v27)
  {
    sub_1AFD3BDB4((uint64_t)v26);
    goto LABEL_26;
  }
  sub_1AFD7BE90();
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_26;
  }
  unsigned int v18 = v23;
  unint64_t v19 = objc_msgSend(v18, sel_integerValue);

  if (((v19 - a3) ^ (v17 + a3)))
  {
LABEL_23:
    id v20 = objc_msgSend(objc_msgSend(a1, sel_bundleSubscriptionProvider), sel_bundleSubscription);
    swift_unknownObjectRelease();
    unsigned int v21 = objc_msgSend(v20, sel_bundleChannelIDs);

    id v22 = (void *)sub_1AFFCAE68();
    LOBYTE(v20) = objc_msgSend(v21, sel_containsObject_, v22);
    swift_bridgeObjectRelease();

    return (v20 & 1) != 0;
  }
LABEL_27:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t AccessCheckerHasAccess(_:with:lineNumber:)(void *a1, void *a2, int a3)
{
  id v6 = objc_msgSend(a1, sel_purchaseProvider);
  if (objc_msgSend((id)swift_unknownObjectRetain(), sel_tagType) == (id)3)
  {
    id v7 = objc_msgSend(a2, sel_asSection);
    if (!v7
      || (id v8 = objc_msgSend(v7, sel_parentID), swift_unknownObjectRelease(), !v8))
    {
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      goto LABEL_8;
    }
  }
  else
  {
    id v8 = objc_msgSend(a2, sel_identifier);
  }
  uint64_t v9 = sub_1AFFCAE98();
  uint64_t v11 = v10;

  id v12 = objc_msgSend(v6, sel_purchasedTagIDs);
  uint64_t v13 = sub_1AFFCB358();

  LOBYTE(v12) = sub_1AFDC0F04(v9, v11, v13);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v12) {
    return 1;
  }
LABEL_8:
  uint64_t v15 = (char *)objc_msgSend(objc_msgSend(a1, sel_bundleSubscriptionProvider), sel_bundleSubscription);
  swift_unknownObjectRelease();
  if (objc_getAssociatedObject(v15, v15 + 1))
  {
    sub_1AFFCB6F8();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v24 = 0u;
    long long v25 = 0u;
  }
  sub_1AFD3BCF4((uint64_t)&v24, (uint64_t)v26);
  if (v27)
  {
    sub_1AFD7BE90();
    if (swift_dynamicCast())
    {
      unint64_t v16 = v23;
      unint64_t v17 = (unint64_t)objc_msgSend(v23, sel_integerValue);
      if (v17 == -1) {
        goto LABEL_27;
      }
      goto LABEL_17;
    }
  }
  else
  {
    sub_1AFD3BDB4((uint64_t)v26);
  }
  unint64_t v16 = 0;
  unint64_t v17 = 0;
LABEL_17:
  if (objc_getAssociatedObject(v15, (const void *)~v17))
  {
    sub_1AFFCB6F8();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v24 = 0u;
    long long v25 = 0u;
  }
  sub_1AFD3BCF4((uint64_t)&v24, (uint64_t)v26);
  if (v27)
  {
    sub_1AFD7BE90();
    if (swift_dynamicCast())
    {
      id v18 = v23;
      unsigned int v19 = objc_msgSend(v18, sel_integerValue);

      if ((((v19 - a3) ^ (v17 + a3)) & 1) == 0) {
        return 0;
      }
      goto LABEL_23;
    }
  }
  else
  {
    sub_1AFD3BDB4((uint64_t)v26);
  }
LABEL_27:

  if ((((v17 + a3) ^ a3) & 1) == 0) {
    return 0;
  }
LABEL_23:
  id v20 = objc_msgSend(objc_msgSend(a1, sel_bundleSubscriptionProvider), sel_bundleSubscription);
  swift_unknownObjectRelease();
  id v21 = objc_msgSend(a2, sel_identifier);
  if (!v21)
  {
    sub_1AFFCAE98();
    id v21 = (id)sub_1AFFCAE68();
    swift_bridgeObjectRelease();
  }
  id v14 = objc_msgSend(v20, sel_containsTagID_, v21);

  return (uint64_t)v14;
}

uint64_t sub_1AFDC2380(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1AFFC99F8();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AFDC23C4(uint64_t a1)
{
  return sub_1AFDC2454(a1, 0xD000000000000010, 0x80000001AFFF2AF0, &qword_1EB831AC0);
}

uint64_t sub_1AFDC23E8(uint64_t a1)
{
  return sub_1AFDC2454(a1, 0x6E61656C4353564BLL, 0xEA00000000007075, &qword_1EB8319D0);
}

uint64_t sub_1AFDC240C(uint64_t a1)
{
  return sub_1AFDC2454(a1, 0xD000000000000014, 0x80000001AFFF2AB0, &qword_1EB8319E8);
}

uint64_t sub_1AFDC2430(uint64_t a1)
{
  return sub_1AFDC2454(a1, 0xD000000000000010, 0x80000001AFFF2A90, &qword_1EB831A78);
}

uint64_t sub_1AFDC2454(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  id v5 = objc_msgSend(self, sel_mainBundle);
  id v6 = objc_msgSend(v5, sel_bundleIdentifier);

  if (v6)
  {
    sub_1AFFCAE98();
  }
  sub_1AFD2C4F4();
  uint64_t result = sub_1AFFCB648();
  *a4 = result;
  return result;
}

uint64_t sub_1AFDC2528(uint64_t a1)
{
  return sub_1AFDC2598(a1, qword_1EB811718);
}

uint64_t sub_1AFDC254C@<X0>(uint64_t a1@<X8>)
{
  return sub_1AFDC270C(&qword_1EB811738, (uint64_t)qword_1EB811718, a1);
}

uint64_t sub_1AFDC2570(uint64_t a1)
{
  return sub_1AFDC2598(a1, qword_1EB8114F8);
}

uint64_t sub_1AFDC2598(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_1AFFCA8A8();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_1AFFCA898();
}

uint64_t sub_1AFDC2610@<X0>(uint64_t a1@<X8>)
{
  return sub_1AFDC270C(&qword_1EB811510, (uint64_t)qword_1EB8114F8, a1);
}

uint64_t sub_1AFDC2634(uint64_t a1)
{
  return sub_1AFDC27EC(a1, qword_1EB818A00);
}

uint64_t sub_1AFDC2658@<X0>(uint64_t a1@<X8>)
{
  return sub_1AFDC270C(&qword_1EB819BE8, (uint64_t)qword_1EB818A00, a1);
}

uint64_t sub_1AFDC267C(uint64_t a1)
{
  return sub_1AFDC27EC(a1, qword_1EB831A80);
}

uint64_t sub_1AFDC26A0(uint64_t a1)
{
  return sub_1AFDC27EC(a1, qword_1EB831A30);
}

uint64_t sub_1AFDC26C4(uint64_t a1)
{
  return sub_1AFDC27EC(a1, qword_1EB818578);
}

uint64_t sub_1AFDC26E8@<X0>(uint64_t a1@<X8>)
{
  return sub_1AFDC270C(&qword_1EB818500, (uint64_t)qword_1EB818578, a1);
}

uint64_t sub_1AFDC270C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1AFFCA8A8();
  uint64_t v6 = __swift_project_value_buffer(v5, a2);
  id v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v7(a3, v6, v5);
}

uint64_t sub_1AFDC27A4(uint64_t a1)
{
  return sub_1AFDC27EC(a1, qword_1EB831A98);
}

uint64_t sub_1AFDC27C8(uint64_t a1)
{
  return sub_1AFDC27EC(a1, qword_1EB831A18);
}

uint64_t sub_1AFDC27EC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_1AFFCA8A8();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  id v4 = objc_msgSend(self, sel_mainBundle);
  id v5 = objc_msgSend(v4, sel_bundleIdentifier);

  if (v5)
  {
    sub_1AFFCAE98();
  }
  return sub_1AFFCA898();
}

id sub_1AFDC28D4(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  sub_1AFD2CEB0(v1 + 32, (uint64_t)v14);
  sub_1AFD2CEB0(v1 + 72, (uint64_t)v13);
  uint64_t v5 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v14, v15);
  double v6 = MEMORY[0x1F4188790](v5);
  id v8 = (uint64_t *)&v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(uint64_t *, double))(v9 + 16))(v8, v6);
  uint64_t v10 = *v8;
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E38();
  id v11 = sub_1AFDC2A78(v4, v3, v10, (uint64_t)v13, a1);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  return v11;
}

uint64_t sub_1AFDC2A04()
{
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  __swift_destroy_boxed_opaque_existential_1(v0 + 72);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SparklineOperationFactory()
{
  return self;
}

id sub_1AFDC2A78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = type metadata accessor for YahooChartModelEngine();
  v23[3] = v10;
  v23[4] = &off_1F08743C0;
  v23[0] = a3;
  id v11 = (objc_class *)type metadata accessor for SparklineOperation();
  id v12 = (char *)objc_allocWithZone(v11);
  uint64_t v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v23, v10);
  double v14 = MEMORY[0x1F4188790](v13);
  unint64_t v16 = (uint64_t *)((char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v17 + 16))(v16, v14);
  uint64_t v18 = *v16;
  v22[3] = v10;
  v22[4] = &off_1F08743C0;
  v22[0] = v18;
  *(void *)&v12[qword_1EB8174F8] = a1;
  *(void *)&v12[qword_1EB8174F0] = a2;
  sub_1AFD2CEB0((uint64_t)v22, (uint64_t)&v12[qword_1EB8174E0]);
  sub_1AFD2CEB0(a4, (uint64_t)&v12[qword_1EB8174E8]);
  *(void *)&v12[qword_1EB817500] = a5;
  v21.receiver = v12;
  v21.super_class = v11;
  id v19 = objc_msgSendSuper2(&v21, sel_init);
  __swift_destroy_boxed_opaque_existential_1(a4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  return v19;
}

uint64_t sub_1AFDC2C20()
{
  uint64_t v0 = swift_allocObject();
  sub_1AFDC2C58();
  return v0;
}

uint64_t sub_1AFDC2C58()
{
  sub_1AFDC2F2C();
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1AFFD53E0;
  uint64_t v2 = type metadata accessor for LegacyStocksAssembly();
  uint64_t v3 = swift_allocObject();
  *(void *)(v1 + 56) = v2;
  *(void *)(v1 + 64) = sub_1AFDC2FDC(&qword_1EB81A628, (void (*)(uint64_t))type metadata accessor for LegacyStocksAssembly);
  *(void *)(v1 + 32) = v3;
  uint64_t v4 = type metadata accessor for ServiceAssembly();
  uint64_t v5 = swift_allocObject();
  *(void *)(v1 + 96) = v4;
  *(void *)(v1 + 104) = sub_1AFDC2FDC(&qword_1EB81A770, (void (*)(uint64_t))type metadata accessor for ServiceAssembly);
  *(void *)(v1 + 72) = v5;
  uint64_t v6 = type metadata accessor for ManagerAssembly();
  uint64_t v7 = swift_allocObject();
  *(void *)(v1 + 136) = v6;
  *(void *)(v1 + 144) = sub_1AFDC2FDC(&qword_1EB81A768, (void (*)(uint64_t))type metadata accessor for ManagerAssembly);
  *(void *)(v1 + 112) = v7;
  uint64_t v8 = type metadata accessor for NewsCoreAssembly();
  uint64_t v9 = swift_allocObject();
  *(void *)(v1 + 176) = v8;
  *(void *)(v1 + 184) = sub_1AFDC2FDC(&qword_1EB81A620, (void (*)(uint64_t))type metadata accessor for NewsCoreAssembly);
  *(void *)(v1 + 152) = v9;
  uint64_t v10 = type metadata accessor for URLAssembly();
  uint64_t v11 = swift_allocObject();
  *(void *)(v1 + 216) = v10;
  *(void *)(v1 + 224) = sub_1AFDC2FDC(&qword_1EB81A658, (void (*)(uint64_t))type metadata accessor for URLAssembly);
  *(void *)(v1 + 192) = v11;
  uint64_t v12 = type metadata accessor for CacheDatabaseAssembly();
  uint64_t v13 = swift_allocObject();
  *(void *)(v1 + 256) = v12;
  *(void *)(v1 + 264) = sub_1AFDC2FDC(&qword_1EB81AE68, (void (*)(uint64_t))type metadata accessor for CacheDatabaseAssembly);
  *(void *)(v1 + 232) = v13;
  uint64_t v14 = type metadata accessor for DebugAssembly();
  uint64_t v15 = swift_allocObject();
  *(void *)(v1 + 296) = v14;
  *(void *)(v1 + 304) = sub_1AFDC2FDC(&qword_1EB81A738, (void (*)(uint64_t))type metadata accessor for DebugAssembly);
  *(void *)(v1 + 272) = v15;
  *(void *)(v0 + 16) = v1;
  return v0;
}

void sub_1AFDC2F2C()
{
  if (!qword_1EB81AE58)
  {
    sub_1AFDC2F84();
    unint64_t v0 = sub_1AFFCBC98();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB81AE58);
    }
  }
}

unint64_t sub_1AFDC2F84()
{
  unint64_t result = qword_1EB81A458;
  if (!qword_1EB81A458)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB81A458);
  }
  return result;
}

uint64_t sub_1AFDC2FDC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AFDC3024()
{
  return sub_1AFFC8E38();
}

uint64_t sub_1AFDC302C()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1AFDC304C()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1AFDC3084()
{
  return sub_1AFFC8E38();
}

uint64_t type metadata accessor for Assembly()
{
  return self;
}

uint64_t sub_1AFDC30B4(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for Assembly);
}

uint64_t sub_1AFDC30CC()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1AFDC30E0()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_1AFDC30E8()
{
  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t sub_1AFDC30F0()
{
  return *(unsigned __int8 *)(v0 + 18);
}

uint64_t sub_1AFDC30F8()
{
  return *(unsigned __int8 *)(v0 + 19);
}

uint64_t sub_1AFDC3100()
{
  return *(void *)(v0 + 24);
}

uint64_t sub_1AFDC3108()
{
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t sub_1AFDC3110()
{
  return *(void *)(v0 + 40);
}

uint64_t sub_1AFDC3118()
{
  uint64_t v1 = *(void *)(v0 + 48);
  sub_1AFFC8E38();
  return v1;
}

uint64_t sub_1AFDC3148()
{
  uint64_t v1 = *(void *)(v0 + 64);
  sub_1AFFC8E38();
  return v1;
}

uint64_t sub_1AFDC3178()
{
  uint64_t v1 = *(void *)(v0 + 80);
  sub_1AFFC8E38();
  return v1;
}

uint64_t sub_1AFDC31A8()
{
  uint64_t v1 = *(void *)(v0 + 96);
  sub_1AFFC8E38();
  return v1;
}

uint64_t sub_1AFDC31D8()
{
  uint64_t v1 = *(void *)(v0 + 112);
  sub_1AFFC8E38();
  return v1;
}

uint64_t sub_1AFDC3208()
{
  uint64_t v1 = *(void *)(v0 + 128);
  sub_1AFFC8E38();
  return v1;
}

uint64_t sub_1AFDC3238()
{
  return *(void *)(v0 + 144);
}

uint64_t sub_1AFDC3240()
{
  return *(void *)(v0 + 152);
}

uint64_t sub_1AFDC3248()
{
  return *(void *)(v0 + 160);
}

uint64_t sub_1AFDC3250()
{
  return sub_1AFFC8E38();
}

uint64_t sub_1AFDC3258()
{
  return sub_1AFFC8E38();
}

uint64_t sub_1AFDC3260()
{
  return sub_1AFFC8E38();
}

uint64_t sub_1AFDC3268()
{
  return sub_1AFFC8E38();
}

uint64_t sub_1AFDC3270()
{
  return sub_1AFFC8E38();
}

void *sub_1AFDC3278@<X0>(uint64_t a1@<X8>)
{
  sub_1AFDC32D4(v1 + 208, (uint64_t)v4);
  sub_1AFDC32D4((uint64_t)v4, a1);
  return sub_1AFDC93F8(v4, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFDB3A78);
}

uint64_t sub_1AFDC32D4(uint64_t a1, uint64_t a2)
{
  sub_1AFDC92A0(0, &qword_1EB818EC8, (uint64_t)&type metadata for FlexiblePaywall, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AFDC335C()
{
  return *(void *)(v0 + 376);
}

uint64_t sub_1AFDC336C()
{
  return *(void *)(v0 + 392);
}

uint64_t sub_1AFDC337C()
{
  uint64_t v1 = *(void *)(v0 + 408);
  sub_1AFFC8E38();
  return v1;
}

uint64_t sub_1AFDC33AC()
{
  uint64_t v1 = *(void *)(v0 + 424);
  sub_1AFFC8E38();
  return v1;
}

uint64_t sub_1AFDC33DC()
{
  uint64_t v1 = *(void *)(v0 + 440);
  sub_1AFFC8E38();
  return v1;
}

uint64_t sub_1AFDC340C()
{
  return *(void *)(v0 + 456);
}

uint64_t sub_1AFDC3414()
{
  return *(void *)(v0 + 464);
}

uint64_t sub_1AFDC341C()
{
  return *(void *)(v0 + 472);
}

uint64_t sub_1AFDC3424()
{
  return *(unsigned __int8 *)(v0 + 480);
}

uint64_t sub_1AFDC342C()
{
  return *(unsigned __int8 *)(v0 + 481);
}

uint64_t sub_1AFDC3434()
{
  return *(void *)(v0 + 488);
}

uint64_t sub_1AFDC343C()
{
  return sub_1AFFC8E38();
}

uint64_t sub_1AFDC3444()
{
  return *(unsigned __int8 *)(v0 + 504);
}

unint64_t sub_1AFDC344C(char a1)
{
  unint64_t result = 0xD000000000000015;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000012;
      break;
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 5:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 6:
      unint64_t result = 0x4C64656C62616E65;
      break;
    case 7:
    case 19:
    case 26:
    case 27:
      unint64_t result = 0xD000000000000019;
      break;
    case 8:
      unint64_t result = 0xD000000000000026;
      break;
    case 9:
      unint64_t result = 0x6C63697472416564;
      break;
    case 10:
      unint64_t result = 0x6C63697472416572;
      break;
    case 11:
      unint64_t result = 0x6C63697472416873;
      break;
    case 12:
      unint64_t result = 0xD000000000000028;
      break;
    case 13:
      unint64_t result = 0xD00000000000002ALL;
      break;
    case 14:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 15:
      unint64_t result = 0xD000000000000020;
      break;
    case 16:
      unint64_t result = 0xD00000000000002CLL;
      break;
    case 17:
      unint64_t result = 0xD000000000000027;
      break;
    case 18:
      unint64_t result = 0x436C6C6177796170;
      break;
    case 20:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 21:
      unint64_t result = 0xD000000000000027;
      break;
    case 22:
      unint64_t result = 0xD00000000000002ELL;
      break;
    case 24:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 25:
      unint64_t result = 0xD000000000000024;
      break;
    case 28:
      unint64_t result = 0xD000000000000018;
      break;
    case 29:
      unint64_t result = 0xD000000000000025;
      break;
    case 30:
      unint64_t result = 0xD000000000000021;
      break;
    case 31:
      unint64_t result = 0xD00000000000002FLL;
      break;
    case 32:
      unint64_t result = 0xD000000000000026;
      break;
    case 33:
      unint64_t result = 0xD00000000000002DLL;
      break;
    case 34:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 35:
      unint64_t result = 0xD000000000000012;
      break;
    case 36:
      unint64_t result = 0xD000000000000028;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1AFDC37AC(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_1AFDC344C(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1AFDC344C(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1AFFCBCE8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1AFDC3838()
{
  char v1 = *v0;
  sub_1AFFCBDF8();
  sub_1AFDC344C(v1);
  sub_1AFFCAF68();
  swift_bridgeObjectRelease();
  return sub_1AFFCBE38();
}

uint64_t sub_1AFDC389C()
{
  sub_1AFDC344C(*v0);
  sub_1AFFCAF68();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFDC38F0()
{
  char v1 = *v0;
  sub_1AFFCBDF8();
  sub_1AFDC344C(v1);
  sub_1AFFCAF68();
  swift_bridgeObjectRelease();
  return sub_1AFFCBE38();
}

uint64_t sub_1AFDC3950@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFDC88BC();
  *a1 = result;
  return result;
}

unint64_t sub_1AFDC3980@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1AFDC344C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1AFDC39AC()
{
  return sub_1AFDC344C(*v0);
}

uint64_t sub_1AFDC39B4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFDC88BC();
  *a1 = result;
  return result;
}

void sub_1AFDC39DC(unsigned char *a1@<X8>)
{
  *a1 = 37;
}

uint64_t sub_1AFDC39E8(uint64_t a1)
{
  unint64_t v2 = sub_1AFDC91F8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFDC3A24(uint64_t a1)
{
  unint64_t v2 = sub_1AFDC91F8();

  return MEMORY[0x1F41862B0](a1, v2);
}

void *sub_1AFDC3A60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, char a4@<W3>, char a5@<W4>, char a6@<W5>, uint64_t a7@<X6>, char a8@<W7>, void *a9@<X8>, char a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26,uint64_t a27,char a28,uint64_t a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,char a40,uint64_t a41,uint64_t a42,uint64_t a43,unint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,char a48,uint64_t a49,char a50,uint64_t a51,char a52,char a53,char a54,uint64_t a55,char a56,uint64_t a57,char a58)
{
  uint64_t v58 = a16;
  uint64_t v59 = a14;
  sub_1AFDC32D4(a36, (uint64_t)v130);
  if (a14)
  {
    uint64_t v60 = a18;
    if (a16) {
      goto LABEL_3;
    }
LABEL_8:
    if (qword_1EB819AC8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v65 = qword_1EB818960;
    uint64_t v66 = qword_1EB818968;
    sub_1AFFC8E38();
    a15 = sub_1AFDC8AD8(v65, v66);
    uint64_t v58 = v67;
    swift_bridgeObjectRelease();
    uint64_t v61 = a20;
    if (v60) {
      goto LABEL_4;
    }
    goto LABEL_11;
  }
  if (qword_1EB819AC8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v62 = qword_1EB818960;
  uint64_t v63 = qword_1EB818968;
  sub_1AFFC8E38();
  a13 = sub_1AFDC8910(v62, v63);
  uint64_t v59 = v64;
  swift_bridgeObjectRelease();
  uint64_t v60 = a18;
  if (!a16) {
    goto LABEL_8;
  }
LABEL_3:
  uint64_t v61 = a20;
  if (v60)
  {
LABEL_4:
    uint64_t v117 = v60;
    goto LABEL_14;
  }
LABEL_11:
  if (qword_1EB819AC8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v68 = qword_1EB818960;
  uint64_t v69 = qword_1EB818968;
  sub_1AFFC8E38();
  a17 = sub_1AFDC8CA0(v68, v69);
  uint64_t v117 = v70;
  swift_bridgeObjectRelease();
LABEL_14:
  uint64_t v71 = a22;
  uint64_t v118 = v58;
  if (v61)
  {
    uint64_t v115 = v61;
  }
  else
  {
    if (qword_1EB819AC8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v73 = qword_1EB818960;
    uint64_t v74 = qword_1EB818968;
    sub_1AFFC8E38();
    uint64_t v75 = sub_1AFDC8E68(v73, v74);
    uint64_t v115 = v76;
    swift_bridgeObjectRelease();
    a19 = v75;
  }
  char v77 = a58;
  uint64_t v78 = a57;
  char v79 = a56;
  uint64_t v80 = a55;
  char v81 = a54;
  char v82 = a53;
  char v83 = a52;
  uint64_t v84 = a43;
  uint64_t v86 = a34;
  uint64_t v85 = a35;
  uint64_t v88 = a32;
  uint64_t v87 = a33;
  char v89 = a30;
  uint64_t v90 = a29;
  char v91 = a28;
  uint64_t v92 = a24;
  if (!a22)
  {
    uint64_t v113 = a19;
    if (qword_1EB819AC8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v95 = qword_1EB818960;
    uint64_t v94 = qword_1EB818968;
    sub_1AFFC8E38();
    a21 = sub_1AFDC9030(v95, v94);
    uint64_t v71 = v96;
    swift_bridgeObjectRelease();
    char v77 = a58;
    uint64_t v80 = a55;
    uint64_t v78 = a57;
    char v81 = a54;
    char v79 = a56;
    char v82 = a53;
    uint64_t v92 = a24;
    char v83 = a52;
    a19 = v113;
    uint64_t v85 = a35;
    uint64_t v84 = a43;
    uint64_t v86 = a34;
    char v89 = a30;
    uint64_t v90 = a29;
    char v91 = a28;
    uint64_t v88 = a32;
    uint64_t v87 = a33;
  }
  __src[0] = a1;
  __src[1] = a2;
  __src[7] = v59;
  __src[8] = a15;
  __src[9] = v118;
  __src[10] = a17;
  __src[11] = v117;
  __src[12] = a19;
  __src[13] = v115;
  __src[14] = a21;
  __src[15] = v71;
  __src[16] = a23;
  __src[21] = a31;
  __src[22] = v88;
  __src[23] = v87;
  __src[24] = v85;
  __src[25] = v86;
  if (a44) {
    unint64_t v97 = a44;
  }
  else {
    unint64_t v97 = 0xE000000000000000;
  }
  if (a44) {
    uint64_t v98 = v84;
  }
  else {
    uint64_t v98 = 0;
  }
  if (v89) {
    uint64_t v99 = 0;
  }
  else {
    uint64_t v99 = v90;
  }
  uint64_t v100 = 172800;
  if ((v91 & 1) == 0) {
    uint64_t v100 = a27;
  }
  uint64_t v101 = 604800;
  if ((a26 & 1) == 0) {
    uint64_t v101 = a25;
  }
  if (a12) {
    a11 = 0;
  }
  uint64_t v103 = a7;
  if (a8) {
    uint64_t v103 = 0;
  }
  if (a48) {
    a47 = 0;
  }
  if (a50) {
    a49 = 0;
  }
  if (v83) {
    a51 = 0;
  }
  char v107 = v82 & 1;
  char v108 = v81 & 1;
  if (v79) {
    uint64_t v109 = 25;
  }
  else {
    uint64_t v109 = v80;
  }
  LOBYTE(__src[2]) = a3 & 1;
  BYTE1(__src[2]) = (a4 == 2) | a4 & 1;
  char v110 = (v77 == 2) | v77;
  BYTE2(__src[2]) = a5 & 1;
  if (v78) {
    uint64_t v111 = v78;
  }
  else {
    uint64_t v111 = MEMORY[0x1E4FBC860];
  }
  BYTE3(__src[2]) = a6 & 1;
  __src[3] = v103;
  LOBYTE(__src[4]) = a10 & 1;
  __src[5] = a11;
  __src[6] = a13;
  __src[17] = v92;
  __src[18] = v101;
  __src[19] = v100;
  __src[20] = v99;
  sub_1AFDC32D4((uint64_t)v130, (uint64_t)&__src[26]);
  LOBYTE(__src[48]) = a38 & 1;
  __src[47] = a37;
  __src[49] = a39;
  LOBYTE(__src[50]) = a40 & 1;
  __src[51] = a41;
  __src[52] = a42;
  __src[53] = v98;
  __src[54] = v97;
  __src[55] = a45;
  __src[56] = a46;
  __src[57] = a47;
  __src[58] = a49;
  __src[59] = a51;
  LOBYTE(__src[60]) = v107;
  BYTE1(__src[60]) = v108;
  __src[61] = v109;
  __src[62] = v111;
  LOBYTE(__src[63]) = v110 & 1;
  return memcpy(a9, __src, 0x1F9uLL);
}

uint64_t sub_1AFDC40C4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1AFDC9464(0, &qword_1EB819FA8, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v179 - v8;
  uint64_t v10 = a1[3];
  uint64_t v235 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_1AFDC91F8();
  sub_1AFFCBE68();
  if (v2)
  {
    uint64_t v51 = (uint64_t)v235;
  }
  else
  {
    v233 = a2;
    uint64_t v234 = v7;
    v247 = (void *)MEMORY[0x1E4FBC860];
    v243[0] = 0;
    sub_1AFDC92A0(0, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    uint64_t v12 = v11;
    sub_1AFDC94C8((unint64_t *)&qword_1EB819DD8);
    sub_1AFFCBAF8();
    uint64_t v13 = v6;
    uint64_t v14 = v244;
    if (!v244)
    {
      swift_beginAccess();
      uint64_t v15 = v247;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v231 = v12;
      uint64_t v232 = 0;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        uint64_t v15 = sub_1AFD352FC(0, v15[2] + 1, 1, v15);
      }
      unint64_t v18 = v15[2];
      unint64_t v17 = v15[3];
      if (v18 >= v17 >> 1) {
        uint64_t v15 = sub_1AFD352FC((void *)(v17 > 1), v18 + 1, 1, v15);
      }
      long long v15[2] = v18 + 1;
      id v19 = &v15[2 * v18];
      v19[4] = 0xD000000000000015;
      void v19[5] = 0x80000001AFFEC4F0;
      v247 = v15;
      swift_endAccess();
      uint64_t v12 = v231;
      uint64_t v14 = v232;
    }
    v243[0] = 1;
    sub_1AFFCBAF8();
    uint64_t v232 = v14;
    uint64_t v20 = v244;
    if (!v244)
    {
      swift_beginAccess();
      objc_super v21 = v247;
      char v22 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v230 = 0;
      if ((v22 & 1) == 0) {
        objc_super v21 = sub_1AFD352FC(0, v21[2] + 1, 1, v21);
      }
      unint64_t v24 = v21[2];
      unint64_t v23 = v21[3];
      if (v24 >= v23 >> 1) {
        objc_super v21 = sub_1AFD352FC((void *)(v23 > 1), v24 + 1, 1, v21);
      }
      void v21[2] = v24 + 1;
      long long v25 = &v21[2 * v24];
      v25[4] = 0xD000000000000012;
      void v25[5] = 0x80000001AFFEC510;
      v247 = v21;
      swift_endAccess();
      uint64_t v20 = v230;
    }
    LOBYTE(v244) = 2;
    sub_1AFFCBAF8();
    int v229 = v243[0];
    if (v243[0] == 2)
    {
      swift_beginAccess();
      id v26 = v247;
      char v27 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v230 = v20;
      if ((v27 & 1) == 0) {
        id v26 = sub_1AFD352FC(0, v26[2] + 1, 1, v26);
      }
      unint64_t v29 = v26[2];
      unint64_t v28 = v26[3];
      if (v29 >= v28 >> 1) {
        id v26 = sub_1AFD352FC((void *)(v28 > 1), v29 + 1, 1, v26);
      }
      void v26[2] = v29 + 1;
      uint64_t v30 = &v26[2 * v29];
      v30[4] = 0xD000000000000010;
      v30[5] = 0x80000001AFFEC530;
      v247 = v26;
      swift_endAccess();
      uint64_t v20 = v230;
    }
    LOBYTE(v244) = 3;
    sub_1AFFCBAF8();
    int v228 = v243[0];
    if (v243[0] == 2)
    {
      swift_beginAccess();
      id v31 = v247;
      char v32 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v230 = v20;
      if ((v32 & 1) == 0) {
        id v31 = sub_1AFD352FC(0, v31[2] + 1, 1, v31);
      }
      unint64_t v34 = v31[2];
      unint64_t v33 = v31[3];
      if (v34 >= v33 >> 1) {
        id v31 = sub_1AFD352FC((void *)(v33 > 1), v34 + 1, 1, v31);
      }
      v31[2] = v34 + 1;
      uint64_t v35 = &v31[2 * v34];
      v35[4] = 0xD000000000000010;
      v35[5] = 0x80000001AFFEC550;
      v247 = v31;
      swift_endAccess();
      uint64_t v20 = v230;
    }
    LOBYTE(v244) = 4;
    sub_1AFFCBAF8();
    int v227 = v243[0];
    if (v243[0] == 2)
    {
      swift_beginAccess();
      uint64_t v36 = v247;
      char v37 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v230 = v20;
      if ((v37 & 1) == 0) {
        uint64_t v36 = sub_1AFD352FC(0, v36[2] + 1, 1, v36);
      }
      unint64_t v39 = v36[2];
      unint64_t v38 = v36[3];
      if (v39 >= v38 >> 1) {
        uint64_t v36 = sub_1AFD352FC((void *)(v38 > 1), v39 + 1, 1, v36);
      }
      void v36[2] = v39 + 1;
      id v40 = &v36[2 * v39];
      v40[4] = 0xD00000000000001CLL;
      v40[5] = 0x80000001AFFEC570;
      v247 = v36;
      swift_endAccess();
      uint64_t v20 = v230;
    }
    LOBYTE(v244) = 5;
    sub_1AFFCBAF8();
    int v226 = v243[0];
    if (v243[0] == 2)
    {
      swift_beginAccess();
      uint64_t v41 = v247;
      char v42 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v230 = v20;
      if ((v42 & 1) == 0) {
        uint64_t v41 = sub_1AFD352FC(0, v41[2] + 1, 1, v41);
      }
      unint64_t v44 = v41[2];
      unint64_t v43 = v41[3];
      if (v44 >= v43 >> 1) {
        uint64_t v41 = sub_1AFD352FC((void *)(v43 > 1), v44 + 1, 1, v41);
      }
      v41[2] = v44 + 1;
      uint64_t v45 = &v41[2 * v44];
      v45[4] = 0xD00000000000001CLL;
      v45[5] = 0x80000001AFFEC590;
      v247 = v41;
      swift_endAccess();
      uint64_t v20 = v230;
    }
    v243[0] = 6;
    sub_1AFFCBAF8();
    uint64_t v225 = v244;
    int v224 = v245;
    if (v245)
    {
      swift_beginAccess();
      long long v46 = v247;
      char v47 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v230 = v20;
      if ((v47 & 1) == 0) {
        long long v46 = sub_1AFD352FC(0, v46[2] + 1, 1, v46);
      }
      unint64_t v49 = v46[2];
      unint64_t v48 = v46[3];
      if (v49 >= v48 >> 1) {
        long long v46 = sub_1AFD352FC((void *)(v48 > 1), v49 + 1, 1, v46);
      }
      v46[2] = v49 + 1;
      long long v50 = (char *)&v46[2 * v49];
      strcpy(v50 + 32, "enabledLevel");
      v50[45] = 0;
      *((_WORD *)v50 + 23) = -5120;
      v247 = v46;
      swift_endAccess();
      uint64_t v20 = v230;
    }
    LOBYTE(v244) = 7;
    sub_1AFFCBAF8();
    int v223 = v243[0];
    if (v243[0] == 2)
    {
      uint64_t v231 = v12;
      uint64_t v53 = v20;
      swift_beginAccess();
      uint64_t v54 = v247;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v54 = sub_1AFD352FC(0, v54[2] + 1, 1, v54);
      }
      unint64_t v56 = v54[2];
      unint64_t v55 = v54[3];
      if (v56 >= v55 >> 1) {
        uint64_t v54 = sub_1AFD352FC((void *)(v55 > 1), v56 + 1, 1, v54);
      }
      v54[2] = v56 + 1;
      uint64_t v57 = &v54[2 * v56];
      v57[4] = 0xD000000000000019;
      v57[5] = 0x80000001AFFEC5C0;
      v247 = v54;
      swift_endAccess();
      uint64_t v20 = v53;
      uint64_t v12 = v231;
    }
    v243[0] = 8;
    sub_1AFFCBAF8();
    uint64_t v230 = v20;
    uint64_t v231 = v12;
    uint64_t v58 = (uint64_t)v235;
    uint64_t v222 = v244;
    char v59 = v245;
    if (v245)
    {
      swift_beginAccess();
      uint64_t v60 = v247;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v60 = sub_1AFD352FC(0, v60[2] + 1, 1, v60);
      }
      unint64_t v62 = v60[2];
      unint64_t v61 = v60[3];
      if (v62 >= v61 >> 1) {
        uint64_t v60 = sub_1AFD352FC((void *)(v61 > 1), v62 + 1, 1, v60);
      }
      v60[2] = v62 + 1;
      uint64_t v63 = &v60[2 * v62];
      v63[4] = 0xD000000000000026;
      v63[5] = 0x80000001AFFEC5E0;
      v247 = v60;
      swift_endAccess();
    }
    v243[0] = 9;
    sub_1AFFCBAF8();
    uint64_t v220 = v244;
    uint64_t v221 = v245;
    if (!v245)
    {
      swift_beginAccess();
      uint64_t v64 = v247;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v64 = sub_1AFD352FC(0, v64[2] + 1, 1, v64);
      }
      unint64_t v66 = v64[2];
      unint64_t v65 = v64[3];
      if (v66 >= v65 >> 1) {
        uint64_t v64 = sub_1AFD352FC((void *)(v65 > 1), v66 + 1, 1, v64);
      }
      v64[2] = v66 + 1;
      uint64_t v67 = &v64[2 * v66];
      v67[4] = 0x6C63697472416564;
      v67[5] = 0xEB00000000444965;
      v247 = v64;
      swift_endAccess();
    }
    v243[0] = 10;
    sub_1AFFCBAF8();
    uint64_t v218 = v244;
    uint64_t v219 = v245;
    if (!v245)
    {
      swift_beginAccess();
      uint64_t v68 = v247;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v68 = sub_1AFD352FC(0, v68[2] + 1, 1, v68);
      }
      unint64_t v70 = v68[2];
      unint64_t v69 = v68[3];
      if (v70 >= v69 >> 1) {
        uint64_t v68 = sub_1AFD352FC((void *)(v69 > 1), v70 + 1, 1, v68);
      }
      int64_t v68[2] = v70 + 1;
      uint64_t v71 = &v68[2 * v70];
      v71[4] = 0x6C63697472416572;
      v71[5] = 0xEB00000000444965;
      v247 = v68;
      swift_endAccess();
    }
    v243[0] = 11;
    sub_1AFFCBAF8();
    uint64_t v216 = v244;
    uint64_t v217 = v245;
    if (!v245)
    {
      swift_beginAccess();
      long long v72 = v247;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v72 = sub_1AFD352FC(0, v72[2] + 1, 1, v72);
      }
      unint64_t v74 = v72[2];
      unint64_t v73 = v72[3];
      if (v74 >= v73 >> 1) {
        long long v72 = sub_1AFD352FC((void *)(v73 > 1), v74 + 1, 1, v72);
      }
      v72[2] = v74 + 1;
      uint64_t v75 = &v72[2 * v74];
      v75[4] = 0x6C63697472416873;
      v75[5] = 0xEB00000000444965;
      v247 = v72;
      swift_endAccess();
    }
    v243[0] = 12;
    sub_1AFFCBAF8();
    uint64_t v214 = v244;
    uint64_t v215 = v245;
    if (!v245)
    {
      swift_beginAccess();
      uint64_t v76 = v247;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v76 = sub_1AFD352FC(0, v76[2] + 1, 1, v76);
      }
      unint64_t v78 = v76[2];
      unint64_t v77 = v76[3];
      if (v78 >= v77 >> 1) {
        uint64_t v76 = sub_1AFD352FC((void *)(v77 > 1), v78 + 1, 1, v76);
      }
      v76[2] = v78 + 1;
      char v79 = &v76[2 * v78];
      v79[4] = 0xD000000000000028;
      v79[5] = 0x80000001AFFEC630;
      v247 = v76;
      swift_endAccess();
    }
    v243[0] = 13;
    sub_1AFFCBAF8();
    uint64_t v212 = v244;
    uint64_t v213 = v245;
    if (!v245)
    {
      swift_beginAccess();
      uint64_t v80 = v247;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v80 = sub_1AFD352FC(0, v80[2] + 1, 1, v80);
      }
      unint64_t v82 = v80[2];
      unint64_t v81 = v80[3];
      if (v82 >= v81 >> 1) {
        uint64_t v80 = sub_1AFD352FC((void *)(v81 > 1), v82 + 1, 1, v80);
      }
      _OWORD v80[2] = v82 + 1;
      char v83 = &v80[2 * v82];
      v83[4] = 0xD00000000000002ALL;
      v83[5] = 0x80000001AFFEC660;
      v247 = v80;
      swift_endAccess();
    }
    v243[0] = 14;
    sub_1AFFCBAF8();
    uint64_t v210 = v244;
    uint64_t v211 = v245;
    if (!v245)
    {
      swift_beginAccess();
      uint64_t v84 = v247;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v84 = sub_1AFD352FC(0, v84[2] + 1, 1, v84);
      }
      unint64_t v86 = v84[2];
      unint64_t v85 = v84[3];
      if (v86 >= v85 >> 1) {
        uint64_t v84 = sub_1AFD352FC((void *)(v85 > 1), v86 + 1, 1, v84);
      }
      v84[2] = v86 + 1;
      uint64_t v87 = &v84[2 * v86];
      v87[4] = 0xD00000000000001ALL;
      void v87[5] = 0x80000001AFFEC690;
      v247 = v84;
      swift_endAccess();
    }
    v243[0] = 15;
    sub_1AFFCBAF8();
    uint64_t v209 = v244;
    int v208 = v245;
    if (v245)
    {
      swift_beginAccess();
      uint64_t v88 = v247;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v88 = sub_1AFD352FC(0, v88[2] + 1, 1, v88);
      }
      unint64_t v90 = v88[2];
      unint64_t v89 = v88[3];
      if (v90 >= v89 >> 1) {
        uint64_t v88 = sub_1AFD352FC((void *)(v89 > 1), v90 + 1, 1, v88);
      }
      v88[2] = v90 + 1;
      char v91 = &v88[2 * v90];
      v91[4] = 0xD000000000000020;
      v91[5] = 0x80000001AFFEC6B0;
      v247 = v88;
      swift_endAccess();
    }
    v243[0] = 16;
    sub_1AFFCBAF8();
    uint64_t v207 = v244;
    int v206 = v245;
    if (v245)
    {
      swift_beginAccess();
      uint64_t v92 = v247;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v92 = sub_1AFD352FC(0, v92[2] + 1, 1, v92);
      }
      unint64_t v94 = v92[2];
      unint64_t v93 = v92[3];
      if (v94 >= v93 >> 1) {
        uint64_t v92 = sub_1AFD352FC((void *)(v93 > 1), v94 + 1, 1, v92);
      }
      v92[2] = v94 + 1;
      uint64_t v95 = &v92[2 * v94];
      v95[4] = 0xD00000000000002CLL;
      v95[5] = 0x80000001AFFEC6E0;
      v247 = v92;
      swift_endAccess();
    }
    v243[0] = 17;
    sub_1AFFCBAF8();
    uint64_t v205 = v244;
    int v204 = v245;
    if (v245)
    {
      swift_beginAccess();
      uint64_t v96 = v247;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v96 = sub_1AFD352FC(0, v96[2] + 1, 1, v96);
      }
      unint64_t v98 = v96[2];
      unint64_t v97 = v96[3];
      if (v98 >= v97 >> 1) {
        uint64_t v96 = sub_1AFD352FC((void *)(v97 > 1), v98 + 1, 1, v96);
      }
      v96[2] = v98 + 1;
      uint64_t v99 = &v96[2 * v98];
      v99[4] = 0xD000000000000027;
      v99[5] = 0x80000001AFFEC710;
      v247 = v96;
      swift_endAccess();
    }
    v243[0] = 18;
    sub_1AFDC92A0(0, &qword_1EB819CC8, (uint64_t)&type metadata for PaywallConfig, MEMORY[0x1E4FBB320]);
    sub_1AFDC954C(&qword_1EB819CD8, (void (*)(void))sub_1AFDC924C);
    sub_1AFFCBAF8();
    uint64_t v203 = v244;
    if (!v244)
    {
      swift_beginAccess();
      uint64_t v100 = v247;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v100 = sub_1AFD352FC(0, v100[2] + 1, 1, v100);
      }
      unint64_t v102 = v100[2];
      unint64_t v101 = v100[3];
      if (v102 >= v101 >> 1) {
        uint64_t v100 = sub_1AFD352FC((void *)(v101 > 1), v102 + 1, 1, v100);
      }
      v100[2] = v102 + 1;
      uint64_t v103 = (char *)&v100[2 * v102];
      strcpy(v103 + 32, "paywallConfigs");
      v103[47] = -18;
      v247 = v100;
      swift_endAccess();
    }
    v243[0] = 19;
    sub_1AFDC92A0(0, &qword_1EB819D38, (uint64_t)&type metadata for SubscriptionButtonConfig, MEMORY[0x1E4FBB320]);
    uint64_t v105 = v104;
    unint64_t v201 = sub_1AFDC92EC();
    uint64_t v202 = v105;
    sub_1AFFCBAF8();
    uint64_t v200 = v244;
    if (!v244)
    {
      swift_beginAccess();
      uint64_t v106 = v247;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v106 = sub_1AFD352FC(0, v106[2] + 1, 1, v106);
      }
      unint64_t v108 = v106[2];
      unint64_t v107 = v106[3];
      if (v108 >= v107 >> 1) {
        uint64_t v106 = sub_1AFD352FC((void *)(v107 > 1), v108 + 1, 1, v106);
      }
      v106[2] = v108 + 1;
      uint64_t v109 = &v106[2 * v108];
      v109[4] = 0xD000000000000019;
      v109[5] = 0x80000001AFFEC750;
      v247 = v106;
      swift_endAccess();
    }
    v243[0] = 20;
    sub_1AFFCBAF8();
    uint64_t v199 = v244;
    if (!v244)
    {
      swift_beginAccess();
      char v110 = v247;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        char v110 = sub_1AFD352FC(0, v110[2] + 1, 1, v110);
      }
      unint64_t v112 = v110[2];
      unint64_t v111 = v110[3];
      if (v112 >= v111 >> 1) {
        char v110 = sub_1AFD352FC((void *)(v111 > 1), v112 + 1, 1, v110);
      }
      v110[2] = v112 + 1;
      uint64_t v113 = &v110[2 * v112];
      v113[4] = 0xD00000000000001BLL;
      v113[5] = 0x80000001AFFEC770;
      v247 = v110;
      swift_endAccess();
    }
    v243[0] = 21;
    sub_1AFFCBAF8();
    uint64_t v198 = v244;
    if (!v244)
    {
      swift_beginAccess();
      uint64_t v114 = v247;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v114 = sub_1AFD352FC(0, v114[2] + 1, 1, v114);
      }
      unint64_t v116 = v114[2];
      unint64_t v115 = v114[3];
      if (v116 >= v115 >> 1) {
        uint64_t v114 = sub_1AFD352FC((void *)(v115 > 1), v116 + 1, 1, v114);
      }
      v114[2] = v116 + 1;
      uint64_t v117 = &v114[2 * v116];
      v117[4] = 0xD000000000000027;
      v117[5] = 0x80000001AFFEC790;
      v247 = v114;
      swift_endAccess();
    }
    v243[0] = 22;
    sub_1AFFCBAF8();
    uint64_t v202 = v244;
    if (!v244)
    {
      swift_beginAccess();
      uint64_t v118 = v247;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v118 = sub_1AFD352FC(0, v118[2] + 1, 1, v118);
      }
      unint64_t v120 = v118[2];
      unint64_t v119 = v118[3];
      if (v120 >= v119 >> 1) {
        uint64_t v118 = sub_1AFD352FC((void *)(v119 > 1), v120 + 1, 1, v118);
      }
      v118[2] = v120 + 1;
      long long v121 = &v118[2 * v120];
      v121[4] = 0xD00000000000002ELL;
      v121[5] = 0x80000001AFFEC7C0;
      v247 = v118;
      swift_endAccess();
    }
    char v246 = 23;
    sub_1AFDC9380();
    sub_1AFFCBAF8();
    sub_1AFDC32D4((uint64_t)&v244, (uint64_t)v242);
    sub_1AFDC32D4((uint64_t)v242, (uint64_t)v243);
    if (sub_1AFDC93D4((uint64_t)v243) == 1)
    {
      swift_beginAccess();
      long long v122 = v247;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v122 = sub_1AFD352FC(0, v122[2] + 1, 1, v122);
      }
      unint64_t v124 = v122[2];
      unint64_t v123 = v122[3];
      if (v124 >= v123 >> 1) {
        long long v122 = sub_1AFD352FC((void *)(v123 > 1), v124 + 1, 1, v122);
      }
      v122[2] = v124 + 1;
      unint64_t v125 = &v122[2 * v124];
      v125[4] = 0xD000000000000015;
      v125[5] = 0x80000001AFFEC7F0;
      v247 = v122;
      swift_endAccess();
    }
    sub_1AFDC32D4((uint64_t)v242, (uint64_t)v241);
    LOBYTE(v239) = 24;
    sub_1AFFCBAF8();
    unint64_t v201 = v236;
    int v197 = v237;
    if (v237)
    {
      swift_beginAccess();
      long long v126 = v247;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v126 = sub_1AFD352FC(0, v126[2] + 1, 1, v126);
      }
      unint64_t v128 = v126[2];
      unint64_t v127 = v126[3];
      if (v128 >= v127 >> 1) {
        long long v126 = sub_1AFD352FC((void *)(v127 > 1), v128 + 1, 1, v126);
      }
      v126[2] = v128 + 1;
      unint64_t v129 = &v126[2 * v128];
      v129[4] = 0xD00000000000001DLL;
      v129[5] = 0x80000001AFFEC810;
      v247 = v126;
      swift_endAccess();
    }
    LOBYTE(v239) = 25;
    sub_1AFFCBAF8();
    unint64_t v196 = v236;
    int v195 = v237;
    if (v237)
    {
      swift_beginAccess();
      uint64_t v130 = v247;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v130 = sub_1AFD352FC(0, v130[2] + 1, 1, v130);
      }
      unint64_t v132 = v130[2];
      unint64_t v131 = v130[3];
      if (v132 >= v131 >> 1) {
        uint64_t v130 = sub_1AFD352FC((void *)(v131 > 1), v132 + 1, 1, v130);
      }
      v130[2] = v132 + 1;
      uint64_t v133 = &v130[2 * v132];
      v133[4] = 0xD000000000000024;
      v133[5] = 0x80000001AFFEC830;
      v247 = v130;
      swift_endAccess();
    }
    LOBYTE(v239) = 26;
    sub_1AFFCBAF8();
    unint64_t v193 = v236;
    uint64_t v194 = v237;
    if (!v237)
    {
      swift_beginAccess();
      unint64_t v134 = v247;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v134 = sub_1AFD352FC(0, v134[2] + 1, 1, v134);
      }
      unint64_t v136 = v134[2];
      unint64_t v135 = v134[3];
      if (v136 >= v135 >> 1) {
        unint64_t v134 = sub_1AFD352FC((void *)(v135 > 1), v136 + 1, 1, v134);
      }
      v134[2] = v136 + 1;
      uint64_t v137 = &v134[2 * v136];
      v137[4] = 0xD000000000000019;
      v137[5] = 0x80000001AFFEC860;
      v247 = v134;
      swift_endAccess();
    }
    LOBYTE(v239) = 27;
    sub_1AFFCBAF8();
    unint64_t v191 = v236;
    unint64_t v192 = v237;
    if (!v237)
    {
      swift_beginAccess();
      uint64_t v138 = v247;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v138 = sub_1AFD352FC(0, v138[2] + 1, 1, v138);
      }
      unint64_t v140 = v138[2];
      unint64_t v139 = v138[3];
      if (v140 >= v139 >> 1) {
        uint64_t v138 = sub_1AFD352FC((void *)(v139 > 1), v140 + 1, 1, v138);
      }
      v138[2] = v140 + 1;
      uint64_t v141 = &v138[2 * v140];
      v141[4] = 0xD000000000000019;
      v141[5] = 0x80000001AFFEC880;
      v247 = v138;
      swift_endAccess();
    }
    LOBYTE(v239) = 28;
    sub_1AFFCBAF8();
    unint64_t v189 = v236;
    uint64_t v190 = v237;
    if (!v237)
    {
      swift_beginAccess();
      uint64_t v142 = v247;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v142 = sub_1AFD352FC(0, v142[2] + 1, 1, v142);
      }
      unint64_t v144 = v142[2];
      unint64_t v143 = v142[3];
      if (v144 >= v143 >> 1) {
        uint64_t v142 = sub_1AFD352FC((void *)(v143 > 1), v144 + 1, 1, v142);
      }
      v142[2] = v144 + 1;
      uint64_t v145 = &v142[2 * v144];
      v145[4] = 0xD000000000000018;
      v145[5] = 0x80000001AFFEC8A0;
      v247 = v142;
      swift_endAccess();
    }
    LOBYTE(v239) = 29;
    sub_1AFFCBAF8();
    unint64_t v188 = v236;
    int v187 = v237;
    if (v237)
    {
      swift_beginAccess();
      uint64_t v146 = v247;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v146 = sub_1AFD352FC(0, v146[2] + 1, 1, v146);
      }
      unint64_t v148 = v146[2];
      unint64_t v147 = v146[3];
      if (v148 >= v147 >> 1) {
        uint64_t v146 = sub_1AFD352FC((void *)(v147 > 1), v148 + 1, 1, v146);
      }
      v146[2] = v148 + 1;
      uint64_t v149 = &v146[2 * v148];
      v149[4] = 0xD000000000000025;
      v149[5] = 0x80000001AFFEC8C0;
      v247 = v146;
      swift_endAccess();
    }
    LOBYTE(v239) = 30;
    sub_1AFFCBAF8();
    unint64_t v186 = v236;
    int v185 = v237;
    if (v237)
    {
      swift_beginAccess();
      uint64_t v150 = v247;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v150 = sub_1AFD352FC(0, v150[2] + 1, 1, v150);
      }
      unint64_t v152 = v150[2];
      unint64_t v151 = v150[3];
      if (v152 >= v151 >> 1) {
        uint64_t v150 = sub_1AFD352FC((void *)(v151 > 1), v152 + 1, 1, v150);
      }
      v150[2] = v152 + 1;
      uint64_t v153 = &v150[2 * v152];
      v153[4] = 0xD000000000000021;
      v153[5] = 0x80000001AFFEC8F0;
      v247 = v150;
      swift_endAccess();
    }
    LOBYTE(v239) = 31;
    sub_1AFFCBAF8();
    unint64_t v184 = v236;
    int v183 = v237;
    if (v237)
    {
      swift_beginAccess();
      char v154 = v247;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        char v154 = sub_1AFD352FC(0, v154[2] + 1, 1, v154);
      }
      unint64_t v156 = v154[2];
      unint64_t v155 = v154[3];
      if (v156 >= v155 >> 1) {
        char v154 = sub_1AFD352FC((void *)(v155 > 1), v156 + 1, 1, v154);
      }
      v154[2] = v156 + 1;
      uint64_t v157 = &v154[2 * v156];
      v157[4] = 0xD00000000000002FLL;
      v157[5] = 0x80000001AFFEC920;
      v247 = v154;
      swift_endAccess();
    }
    LOBYTE(v236) = 32;
    sub_1AFFCBAF8();
    int v182 = v239;
    if (v239 == 2)
    {
      swift_beginAccess();
      id v158 = v247;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v158 = sub_1AFD352FC(0, v158[2] + 1, 1, v158);
      }
      unint64_t v160 = v158[2];
      unint64_t v159 = v158[3];
      if (v160 >= v159 >> 1) {
        id v158 = sub_1AFD352FC((void *)(v159 > 1), v160 + 1, 1, v158);
      }
      v158[2] = v160 + 1;
      uint64_t v161 = &v158[2 * v160];
      v161[4] = 0xD000000000000026;
      v161[5] = 0x80000001AFFEC950;
      v247 = v158;
      swift_endAccess();
    }
    LOBYTE(v236) = 33;
    sub_1AFFCBAF8();
    int v181 = v239;
    if (v239 == 2)
    {
      swift_beginAccess();
      uint64_t v162 = v247;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v162 = sub_1AFD352FC(0, v162[2] + 1, 1, v162);
      }
      unint64_t v164 = v162[2];
      unint64_t v163 = v162[3];
      if (v164 >= v163 >> 1) {
        uint64_t v162 = sub_1AFD352FC((void *)(v163 > 1), v164 + 1, 1, v162);
      }
      v162[2] = v164 + 1;
      uint64_t v165 = &v162[2 * v164];
      v165[4] = 0xD00000000000002DLL;
      v165[5] = 0x80000001AFFEC980;
      v247 = v162;
      swift_endAccess();
    }
    LOBYTE(v239) = 34;
    sub_1AFFCBAF8();
    unint64_t v180 = v236;
    HIDWORD(v179) = v237;
    if (v237)
    {
      swift_beginAccess();
      uint64_t v166 = v247;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v166 = sub_1AFD352FC(0, v166[2] + 1, 1, v166);
      }
      unint64_t v168 = v166[2];
      unint64_t v167 = v166[3];
      if (v168 >= v167 >> 1) {
        uint64_t v166 = sub_1AFD352FC((void *)(v167 > 1), v168 + 1, 1, v166);
      }
      v166[2] = v168 + 1;
      uint64_t v169 = &v166[2 * v168];
      v169[4] = 0xD00000000000001ALL;
      v169[5] = 0x80000001AFFEC9B0;
      v247 = v166;
      swift_endAccess();
    }
    char v240 = 35;
    sub_1AFDCB35C(0, &qword_1EB819CF0, (uint64_t (*)(uint64_t))type metadata accessor for AudioUpsellConfig, MEMORY[0x1E4FBB320]);
    sub_1AFDC9718(&qword_1EB819D00, &qword_1EB819160);
    sub_1AFFCBAF8();
    uint64_t v170 = v239;
    if (!v239)
    {
      swift_beginAccess();
      uint64_t v171 = v247;
      char v172 = swift_isUniquelyReferenced_nonNull_native();
      v247 = v171;
      if ((v172 & 1) == 0)
      {
        uint64_t v171 = sub_1AFD352FC(0, v171[2] + 1, 1, v171);
        v247 = v171;
      }
      unint64_t v174 = v171[2];
      unint64_t v173 = v171[3];
      if (v174 >= v173 >> 1) {
        v247 = sub_1AFD352FC((void *)(v173 > 1), v174 + 1, 1, v171);
      }
      uint64_t v175 = sub_1AFD5CD88(v174, 0xD000000000000012, 0x80000001AFFEC9D0);
      nullsub_1(v175);
      swift_endAccess();
    }
    sub_1AFDC3A60(v232, v230, v229, v228, v227, v226, v225, v224, v238, v223, v222, v59, v220, v221, v218, v219, v216, v217, v214,
      v215,
      v212,
      v213,
      v210,
      v211,
      v209,
      v208,
      v207,
      v206,
      v205,
      v204,
      v203,
      v200,
      v199,
      v198,
      v202,
      (uint64_t)v241,
      v201,
      v197,
      v196,
      v195,
      v193,
      v194,
      v191,
      v192,
      v189,
      v190,
      v188,
      v187,
      v186,
      v185,
      v184,
      v183,
      v182,
      v181,
      v180,
      SBYTE4(v179),
      v170,
      2);
    swift_beginAccess();
    unint64_t v176 = v247;
    if (v247[2])
    {
      sub_1AFDCB35C(0, (unint64_t *)&qword_1EB81A100, (uint64_t (*)(uint64_t))sub_1AFD3AE64, MEMORY[0x1E4FBBE00]);
      uint64_t v177 = swift_allocObject();
      *(_OWORD *)(v177 + 16) = xmmword_1AFFD05F0;
      *(void *)(v177 + 56) = v231;
      *(void *)(v177 + 64) = sub_1AFD5CDA0();
      *(void *)(v177 + 32) = v176;
      sub_1AFD2C4F4();
      sub_1AFFC8E38();
      uint64_t v178 = (void *)sub_1AFFCB638();
      sub_1AFFCB478();
      sub_1AFFCA878();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AFD2C4F4();
      uint64_t v178 = (void *)sub_1AFFCB638();
      sub_1AFFCB478();
      sub_1AFFCA878();
    }

    (*(void (**)(char *, uint64_t))(v234 + 8))(v9, v13);
    swift_bridgeObjectRelease();
    memcpy(v233, v238, 0x1F9uLL);
    uint64_t v51 = v58;
  }
  return __swift_destroy_boxed_opaque_existential_1(v51);
}

unint64_t sub_1AFDC6FE8()
{
  memcpy(v2, v0, 0x1F9uLL);
  return sub_1AFDC7024((uint64_t)v2);
}

unint64_t sub_1AFDC7024(uint64_t a1)
{
  v15[21] = *MEMORY[0x1E4F143B8];
  sub_1AFFC91E8();
  swift_allocObject();
  sub_1AFFC91D8();
  sub_1AFDC32D4(a1 + 208, (uint64_t)v15);
  sub_1AFDC32D4((uint64_t)v15, (uint64_t)v14);
  sub_1AFDC93F8(v15, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFDB3A78);
  sub_1AFDC92A0(0, &qword_1EB818EC8, (uint64_t)&type metadata for FlexiblePaywall, MEMORY[0x1E4FBB718]);
  sub_1AFDCB25C();
  uint64_t v2 = sub_1AFFC91C8();
  unint64_t v4 = v3;
  sub_1AFDC93F8(v15, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD56100);
  swift_release();
  uint64_t v5 = self;
  uint64_t v6 = (void *)sub_1AFFC9778();
  v14[0] = 0;
  id v7 = objc_msgSend(v5, sel_JSONObjectWithData_options_error_, v6, 4, v14);

  if (!v7)
  {
    id v10 = v14[0];
    uint64_t v11 = (void *)sub_1AFFC9508();

    swift_willThrow();
    goto LABEL_5;
  }
  id v8 = v14[0];
  sub_1AFFCB6F8();
  swift_unknownObjectRelease();
  sub_1AFDCB2F0();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_5:
    unint64_t v9 = sub_1AFDFA4CC(MEMORY[0x1E4FBC860]);
    sub_1AFD4B504(v2, v4);
    return v9;
  }
  sub_1AFD4B504(v2, v4);
  return v13;
}

uint64_t sub_1AFDC7294(void *a1)
{
  sub_1AFDC9464(0, &qword_1EB81A060, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  id v7 = (char *)v31 - v6;
  uint64_t v8 = *v1;
  uint64_t v75 = v1[1];
  int v79 = *((unsigned __int8 *)v1 + 16);
  int v74 = *((unsigned __int8 *)v1 + 17);
  int v73 = *((unsigned __int8 *)v1 + 18);
  int v72 = *((unsigned __int8 *)v1 + 19);
  uint64_t v71 = v1[3];
  int v70 = *((unsigned __int8 *)v1 + 32);
  uint64_t v9 = v1[5];
  uint64_t v10 = v1[6];
  uint64_t v68 = v1[7];
  uint64_t v69 = v9;
  uint64_t v11 = v1[8];
  uint64_t v66 = v1[9];
  uint64_t v67 = v10;
  uint64_t v12 = v1[10];
  uint64_t v64 = v1[11];
  uint64_t v65 = v11;
  uint64_t v13 = v1[12];
  uint64_t v62 = v1[13];
  uint64_t v63 = v12;
  uint64_t v14 = v1[14];
  uint64_t v60 = v1[15];
  uint64_t v61 = v13;
  uint64_t v15 = v1[16];
  uint64_t v58 = v1[17];
  uint64_t v59 = v14;
  uint64_t v56 = v1[18];
  uint64_t v57 = v15;
  uint64_t v55 = v1[19];
  uint64_t v16 = v1[21];
  v31[1] = v1[20];
  uint64_t v32 = v16;
  uint64_t v17 = v1[23];
  uint64_t v33 = v1[22];
  uint64_t v34 = v17;
  uint64_t v18 = v1[24];
  uint64_t v35 = v1[25];
  uint64_t v36 = v18;
  sub_1AFDC32D4((uint64_t)(v1 + 26), (uint64_t)v78);
  uint64_t v38 = v1[47];
  int v37 = *((unsigned __int8 *)v1 + 384);
  uint64_t v19 = v1[49];
  int v39 = *((unsigned __int8 *)v1 + 400);
  uint64_t v20 = v1[51];
  uint64_t v21 = v1[52];
  uint64_t v40 = v19;
  uint64_t v41 = v21;
  uint64_t v22 = v1[53];
  uint64_t v23 = v1[54];
  uint64_t v42 = v20;
  uint64_t v43 = v23;
  uint64_t v24 = v1[55];
  uint64_t v25 = v1[56];
  uint64_t v44 = v22;
  uint64_t v45 = v25;
  uint64_t v26 = v1[57];
  uint64_t v46 = v24;
  uint64_t v47 = v26;
  uint64_t v27 = v1[59];
  uint64_t v48 = v1[58];
  uint64_t v49 = v27;
  LODWORD(v27) = *((unsigned __int8 *)v1 + 481);
  int v50 = *((unsigned __int8 *)v1 + 480);
  int v51 = v27;
  uint64_t v28 = v1[62];
  uint64_t v52 = v1[61];
  uint64_t v53 = v28;
  int v54 = *((unsigned __int8 *)v1 + 504);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDC91F8();
  sub_1AFFCBE78();
  v77[0] = v8;
  char v80 = 0;
  sub_1AFDC92A0(0, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  sub_1AFDC94C8((unint64_t *)&qword_1EB819DC8);
  uint64_t v29 = v76;
  sub_1AFFCBBE8();
  if (!v29)
  {
    v77[0] = v75;
    char v80 = 1;
    sub_1AFFCBBE8();
    LOBYTE(v77[0]) = 2;
    sub_1AFFCBC18();
    LOBYTE(v77[0]) = 3;
    sub_1AFFCBC18();
    LOBYTE(v77[0]) = 4;
    sub_1AFFCBC18();
    LOBYTE(v77[0]) = 5;
    sub_1AFFCBC18();
    LOBYTE(v77[0]) = 6;
    sub_1AFFCBC38();
    LOBYTE(v77[0]) = 7;
    sub_1AFFCBC18();
    LOBYTE(v77[0]) = 8;
    sub_1AFFCBC38();
    LOBYTE(v77[0]) = 9;
    sub_1AFFCBC08();
    LOBYTE(v77[0]) = 10;
    sub_1AFFCBC08();
    LOBYTE(v77[0]) = 11;
    sub_1AFFCBC08();
    LOBYTE(v77[0]) = 12;
    sub_1AFFCBC08();
    LOBYTE(v77[0]) = 13;
    sub_1AFFCBC08();
    LOBYTE(v77[0]) = 14;
    sub_1AFFCBB98();
    LOBYTE(v77[0]) = 15;
    sub_1AFFCBC38();
    LOBYTE(v77[0]) = 16;
    sub_1AFFCBC38();
    LOBYTE(v77[0]) = 17;
    sub_1AFFCBC38();
    v77[0] = v32;
    char v80 = 18;
    sub_1AFDC92A0(0, &qword_1EB819CC8, (uint64_t)&type metadata for PaywallConfig, MEMORY[0x1E4FBB320]);
    sub_1AFDC954C(&qword_1EB819CD0, (void (*)(void))sub_1AFDC95DC);
    sub_1AFFCBBE8();
    v77[0] = v33;
    char v80 = 19;
    sub_1AFDC92A0(0, &qword_1EB819D38, (uint64_t)&type metadata for SubscriptionButtonConfig, MEMORY[0x1E4FBB320]);
    sub_1AFDC9630();
    sub_1AFFCBBE8();
    v77[0] = v34;
    char v80 = 20;
    sub_1AFFCBBE8();
    v77[0] = v35;
    char v80 = 21;
    sub_1AFFCBBE8();
    v77[0] = v36;
    char v80 = 22;
    sub_1AFFCBBE8();
    sub_1AFDC32D4((uint64_t)v78, (uint64_t)v77);
    char v80 = 23;
    sub_1AFDC96C4();
    sub_1AFFCBBE8();
    LOBYTE(v77[0]) = 24;
    sub_1AFFCBBD8();
    LOBYTE(v77[0]) = 25;
    sub_1AFFCBBD8();
    LOBYTE(v77[0]) = 26;
    sub_1AFFCBB98();
    LOBYTE(v77[0]) = 27;
    sub_1AFFCBC08();
    LOBYTE(v77[0]) = 28;
    sub_1AFFCBB98();
    LOBYTE(v77[0]) = 29;
    sub_1AFFCBC68();
    LOBYTE(v77[0]) = 30;
    sub_1AFFCBC68();
    LOBYTE(v77[0]) = 31;
    sub_1AFFCBC68();
    LOBYTE(v77[0]) = 32;
    sub_1AFFCBC18();
    LOBYTE(v77[0]) = 33;
    sub_1AFFCBC18();
    LOBYTE(v77[0]) = 34;
    sub_1AFFCBC68();
    v77[0] = v53;
    char v80 = 35;
    sub_1AFDCB35C(0, &qword_1EB819CF0, (uint64_t (*)(uint64_t))type metadata accessor for AudioUpsellConfig, MEMORY[0x1E4FBB320]);
    sub_1AFDC9718(&qword_1EB819CF8, &qword_1EB819158);
    sub_1AFFCBBE8();
    LOBYTE(v77[0]) = 36;
    sub_1AFFCBC18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1AFDC7D58@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1AFDC40C4(a1, a2);
}

uint64_t sub_1AFDC7D70(void *a1)
{
  return sub_1AFDC7294(a1);
}

uint64_t sub_1AFDC7D8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (unsigned __int8 *)(a2 + 384);
  uint64_t v5 = *(void **)a1;
  uint64_t v141 = *(void **)(a1 + 8);
  uint64_t v6 = (unsigned char *)(a1 + 384);
  int v138 = *(unsigned __int8 *)(a1 + 16);
  int v136 = *(unsigned __int8 *)(a1 + 17);
  int v134 = *(unsigned __int8 *)(a1 + 18);
  int v132 = *(unsigned __int8 *)(a1 + 19);
  uint64_t v130 = *(void *)(a1 + 24);
  int v128 = *(unsigned __int8 *)(a1 + 32);
  uint64_t v125 = *(void *)(a1 + 40);
  uint64_t v126 = *(void *)(a1 + 48);
  uint64_t v122 = *(void *)(a1 + 56);
  uint64_t v120 = *(void *)(a1 + 64);
  uint64_t v118 = *(void *)(a1 + 72);
  uint64_t v116 = *(void *)(a1 + 80);
  uint64_t v114 = *(void *)(a1 + 88);
  uint64_t v112 = *(void *)(a1 + 96);
  uint64_t v110 = *(void *)(a1 + 104);
  uint64_t v108 = *(void *)(a1 + 112);
  uint64_t v106 = *(void *)(a1 + 120);
  uint64_t v96 = *(void *)(a1 + 128);
  uint64_t v104 = *(void *)(a1 + 136);
  uint64_t v102 = *(void *)(a1 + 144);
  uint64_t v100 = *(void *)(a1 + 152);
  uint64_t v7 = *(void *)(a1 + 168);
  uint64_t v98 = *(void *)(a1 + 160);
  uint64_t v93 = *(void *)(a1 + 176);
  uint64_t v8 = *(void *)(a1 + 192);
  uint64_t v91 = *(void *)(a1 + 184);
  uint64_t v9 = *(void *)(a1 + 200);
  sub_1AFDC32D4(a1 + 208, (uint64_t)v173);
  char v87 = v6[16];
  char v88 = *(unsigned char *)(a1 + 384);
  uint64_t v85 = *(void *)(a1 + 416);
  uint64_t v86 = *(void *)(a1 + 376);
  uint64_t v83 = *(void *)(a1 + 424);
  uint64_t v84 = *(void *)(a1 + 392);
  uint64_t v81 = *(void *)(a1 + 432);
  uint64_t v82 = *(void *)(a1 + 408);
  uint64_t v80 = *(void *)(a1 + 448);
  uint64_t v78 = *(void *)(a1 + 440);
  uint64_t v79 = *(void *)(a1 + 456);
  uint64_t v76 = *(void *)(a1 + 464);
  uint64_t v77 = *(void *)(a1 + 472);
  int v71 = v6[96];
  int v72 = v6[97];
  uint64_t v73 = *(void *)(a1 + 488);
  uint64_t v74 = *(void *)(a1 + 496);
  int v75 = v6[120];
  uint64_t v10 = *(void **)a2;
  unint64_t v139 = *(void **)(a2 + 8);
  int v137 = *(unsigned __int8 *)(a2 + 16);
  int v135 = *(unsigned __int8 *)(a2 + 17);
  int v133 = *(unsigned __int8 *)(a2 + 18);
  int v131 = *(unsigned __int8 *)(a2 + 19);
  uint64_t v129 = *(void *)(a2 + 24);
  int v127 = *(unsigned __int8 *)(a2 + 32);
  uint64_t v123 = *(void *)(a2 + 40);
  uint64_t v124 = *(void *)(a2 + 48);
  uint64_t v121 = *(void *)(a2 + 56);
  uint64_t v119 = *(void *)(a2 + 64);
  uint64_t v117 = *(void *)(a2 + 72);
  uint64_t v115 = *(void *)(a2 + 80);
  uint64_t v113 = *(void *)(a2 + 88);
  uint64_t v111 = *(void *)(a2 + 96);
  uint64_t v109 = *(void *)(a2 + 104);
  uint64_t v107 = *(void *)(a2 + 112);
  uint64_t v105 = *(void *)(a2 + 120);
  uint64_t v103 = *(void *)(a2 + 136);
  uint64_t v101 = *(void *)(a2 + 144);
  uint64_t v99 = *(void *)(a2 + 152);
  uint64_t v97 = *(void *)(a2 + 160);
  uint64_t v94 = *(void *)(a2 + 168);
  uint64_t v95 = *(void *)(a2 + 128);
  uint64_t v92 = *(void *)(a2 + 176);
  uint64_t v11 = *(void *)(a2 + 200);
  uint64_t v89 = *(void *)(a2 + 192);
  uint64_t v90 = *(void *)(a2 + 184);
  sub_1AFDC32D4(a2 + 208, (uint64_t)v174);
  uint64_t v12 = *(void *)(a2 + 376);
  int v13 = *(unsigned __int8 *)(a2 + 384);
  uint64_t v14 = *(void *)(a2 + 392);
  int v15 = v4[16];
  uint64_t v17 = *(void *)(a2 + 408);
  uint64_t v16 = *(void *)(a2 + 416);
  uint64_t v19 = *(void *)(a2 + 424);
  uint64_t v18 = *(void *)(a2 + 432);
  uint64_t v21 = *(void *)(a2 + 440);
  uint64_t v20 = *(void *)(a2 + 448);
  uint64_t v23 = *(void *)(a2 + 456);
  uint64_t v22 = *(void *)(a2 + 464);
  uint64_t v24 = *(void *)(a2 + 472);
  uint64_t v26 = *(void *)(a2 + 488);
  uint64_t v25 = *(void *)(a2 + 496);
  int v27 = v4[120];
  if (v5)
  {
    if (!v10) {
      return 0;
    }
    uint64_t v67 = v18;
    uint64_t v68 = v19;
    uint64_t v65 = v21;
    uint64_t v66 = v20;
    uint64_t v63 = v22;
    uint64_t v64 = v23;
    uint64_t v60 = v25;
    uint64_t v61 = v24;
    int v62 = v4[96];
    int v58 = v4[97];
    uint64_t v59 = v26;
    uint64_t v28 = v5;
    uint64_t v29 = v17;
    uint64_t v30 = v10;
    uint64_t v31 = v16;
    int v32 = v4[16];
    uint64_t v69 = v7;
    uint64_t v33 = v11;
    uint64_t v34 = v8;
    uint64_t v35 = v9;
    uint64_t v36 = v12;
    int v37 = v13;
    int v38 = v27;
    uint64_t v39 = v14;
    char v40 = sub_1AFF22B0C(v28, v30);
    uint64_t v14 = v39;
    int v27 = v38;
    int v13 = v37;
    uint64_t v12 = v36;
    uint64_t v9 = v35;
    uint64_t v8 = v34;
    uint64_t v11 = v33;
    uint64_t v7 = v69;
    int v15 = v32;
    uint64_t v17 = v29;
    uint64_t v16 = v31;
    if ((v40 & 1) == 0) {
      return 0;
    }
  }
  else
  {
    uint64_t v67 = v18;
    uint64_t v68 = v19;
    uint64_t v65 = v21;
    uint64_t v66 = v20;
    uint64_t v63 = v22;
    uint64_t v64 = v23;
    uint64_t v60 = v25;
    uint64_t v61 = v24;
    int v62 = v4[96];
    int v58 = v4[97];
    uint64_t v59 = v26;
    if (v10) {
      return 0;
    }
  }
  if (v141)
  {
    if (!v139) {
      return 0;
    }
    uint64_t v41 = v14;
    int v42 = v15;
    uint64_t v43 = v17;
    uint64_t v70 = v16;
    char v44 = sub_1AFF22B0C(v141, v139);
    uint64_t result = 0;
    if ((v44 & 1) == 0 || v138 != v137 || v136 != v135 || v134 != v133 || v132 != v131 || v130 != v129 || v128 != v127) {
      return result;
    }
  }
  else
  {
    if (v139) {
      return 0;
    }
    uint64_t result = 0;
    if ((v138 ^ v137) == 1 || v136 != v135 || v134 != v133 || v132 != v131 || v130 != v129 || v128 != v127) {
      return result;
    }
    uint64_t v41 = v14;
    int v42 = v15;
    uint64_t v43 = v17;
    uint64_t v70 = v16;
  }
  if (v125 == v123)
  {
    if (v126 == v124 && v122 == v121 || (v46 = sub_1AFFCBCE8(), uint64_t result = 0, (v46 & 1) != 0))
    {
      if (v120 == v119 && v118 == v117 || (v47 = sub_1AFFCBCE8(), uint64_t result = 0, (v47 & 1) != 0))
      {
        if (v116 == v115 && v114 == v113 || (v48 = sub_1AFFCBCE8(), uint64_t result = 0, (v48 & 1) != 0))
        {
          if (v112 == v111 && v110 == v109 || (v49 = sub_1AFFCBCE8(), uint64_t result = 0, (v49 & 1) != 0))
          {
            if (v108 == v107 && v106 == v105 || (v50 = sub_1AFFCBCE8(), uint64_t result = 0, (v50 & 1) != 0))
            {
              if (v104)
              {
                if (!v103) {
                  return 0;
                }
                if (v96 != v95 || v104 != v103)
                {
                  char v51 = sub_1AFFCBCE8();
                  uint64_t result = 0;
                  if ((v51 & 1) == 0) {
                    return result;
                  }
LABEL_50:
                  if (v102 != v101 || v100 != v99 || v98 != v97) {
                    return result;
                  }
                  if (v7)
                  {
                    if (!v94) {
                      return 0;
                    }
                    uint64_t v142 = v11;
                    sub_1AFFC8E38();
                    uint64_t v52 = sub_1AFFC8E38();
                    BOOL v140 = sub_1AFF23AC8(v52, v94);
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    if (!v140) {
                      return 0;
                    }
                  }
                  else
                  {
                    uint64_t v142 = v11;
                    if (v94) {
                      return 0;
                    }
                  }
                  if (v93)
                  {
                    if (!v92 || (sub_1AFF23B74(v93, v92) & 1) == 0) {
                      return 0;
                    }
                  }
                  else if (v92)
                  {
                    return 0;
                  }
                  if (v91)
                  {
                    if (!v90 || (sub_1AFF23B74(v91, v90) & 1) == 0) {
                      return 0;
                    }
                  }
                  else if (v90)
                  {
                    return 0;
                  }
                  if (v8)
                  {
                    if (!v89 || (sub_1AFF23B74(v8, v89) & 1) == 0) {
                      return 0;
                    }
                  }
                  else if (v89)
                  {
                    return 0;
                  }
                  if (v9)
                  {
                    if (!v142 || (sub_1AFF23B74(v9, v142) & 1) == 0) {
                      return 0;
                    }
                  }
                  else if (v142)
                  {
                    return 0;
                  }
                  sub_1AFDC32D4((uint64_t)v173, (uint64_t)v172);
                  if (sub_1AFDC93D4((uint64_t)v172) == 1)
                  {
                    sub_1AFDC32D4((uint64_t)v174, (uint64_t)v170);
                    if (sub_1AFDC93D4((uint64_t)v170) == 1)
                    {
LABEL_85:
                      if (v88)
                      {
                        if (!v13) {
                          return 0;
                        }
                      }
                      else
                      {
                        if (v86 == v12) {
                          char v54 = v13;
                        }
                        else {
                          char v54 = 1;
                        }
                        if (v54) {
                          return 0;
                        }
                      }
                      if (v87)
                      {
                        if (!v42) {
                          return 0;
                        }
                      }
                      else
                      {
                        if (v84 == v41) {
                          char v55 = v42;
                        }
                        else {
                          char v55 = 1;
                        }
                        if (v55) {
                          return 0;
                        }
                      }
                      if (v85)
                      {
                        if (!v70 || (v82 != v43 || v85 != v70) && (sub_1AFFCBCE8() & 1) == 0) {
                          return 0;
                        }
                      }
                      else if (v70)
                      {
                        return 0;
                      }
                      if ((v83 != v68 || v81 != v67) && (sub_1AFFCBCE8() & 1) == 0) {
                        return 0;
                      }
                      if (v80)
                      {
                        if (!v66 || (v78 != v65 || v80 != v66) && (sub_1AFFCBCE8() & 1) == 0) {
                          return 0;
                        }
                      }
                      else if (v66)
                      {
                        return 0;
                      }
                      if (v79 == v64 && v76 == v63 && v77 == v61 && v71 == v62 && v72 == v58 && v73 == v59)
                      {
                        if (v74)
                        {
                          if (v60)
                          {
                            sub_1AFFC8E38();
                            uint64_t v56 = sub_1AFFC8E38();
                            char v57 = sub_1AFF23E38(v56, v60);
                            swift_bridgeObjectRelease();
                            swift_bridgeObjectRelease();
                            if (v57) {
                              return v75 ^ v27 ^ 1u;
                            }
                          }
                        }
                        else if (!v60)
                        {
                          return v75 ^ v27 ^ 1u;
                        }
                      }
                      return 0;
                    }
                  }
                  else
                  {
                    sub_1AFDC32D4((uint64_t)v173, (uint64_t)&v159);
                    sub_1AFDC32D4((uint64_t)v174, (uint64_t)v170);
                    if (sub_1AFDC93D4((uint64_t)v170) != 1)
                    {
                      sub_1AFDC32D4((uint64_t)v174, (uint64_t)&v145);
                      v143[8] = v153;
                      v143[9] = v154;
                      uint64_t v144 = v155;
                      v143[4] = v149;
                      v143[5] = v150;
                      v143[6] = v151;
                      v143[7] = v152;
                      v143[0] = v145;
                      v143[1] = v146;
                      v143[2] = v147;
                      v143[3] = v148;
                      sub_1AFDC32D4((uint64_t)v173, (uint64_t)v156);
                      sub_1AFDC93F8(v173, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFDB3A78);
                      sub_1AFDCB084(v156);
                      BOOL v53 = _s10StocksCore15FlexiblePaywallV2eeoiySbAC_ACtFZ_0((uint64_t *)&v159, (uint64_t *)v143);
                      v157[8] = v167;
                      v157[9] = v168;
                      uint64_t v158 = v169;
                      v157[4] = v163;
                      v157[5] = v164;
                      v157[7] = v166;
                      v157[6] = v165;
                      v157[0] = v159;
                      v157[1] = v160;
                      v157[3] = v162;
                      v157[2] = v161;
                      sub_1AFDCB170((uint64_t *)v157);
                      sub_1AFDC93F8(v173, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD56100);
                      if (!v53) {
                        return 0;
                      }
                      goto LABEL_85;
                    }
                    long long v153 = v167;
                    long long v154 = v168;
                    uint64_t v155 = v169;
                    long long v149 = v163;
                    long long v150 = v164;
                    long long v151 = v165;
                    long long v152 = v166;
                    long long v145 = v159;
                    long long v146 = v160;
                    long long v147 = v161;
                    long long v148 = v162;
                    sub_1AFDC32D4((uint64_t)v173, (uint64_t)v156);
                    sub_1AFDC32D4((uint64_t)v173, (uint64_t)v157);
                    sub_1AFDCB084((uint64_t *)v157);
                    sub_1AFDCB084(v156);
                    sub_1AFDCB170((uint64_t *)&v145);
                  }
                  sub_1AFDC32D4((uint64_t)v173, (uint64_t)v170);
                  sub_1AFDC32D4((uint64_t)v174, (uint64_t)&v171);
                  sub_1AFDC93F8(v174, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFDB3A78);
                  sub_1AFDCAF68((uint64_t)v170);
                  return 0;
                }
              }
              else if (v103)
              {
                return 0;
              }
              uint64_t result = 0;
              goto LABEL_50;
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1AFDC88BC()
{
  unint64_t v0 = sub_1AFFCBD28();
  swift_bridgeObjectRelease();
  if (v0 >= 0x25) {
    return 37;
  }
  else {
    return v0;
  }
}

uint64_t sub_1AFDC8910(uint64_t a1, uint64_t a2)
{
  sub_1AFDCB35C(0, (unint64_t *)&qword_1EB81A0E8, (uint64_t (*)(uint64_t))sub_1AFD306F8, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AFFD3AE0;
  *(void *)(inited + 32) = sub_1AFFCAE98();
  *(void *)(inited + 40) = v5;
  *(void *)(inited + 48) = 0xD000000000000017;
  *(void *)(inited + 56) = 0x80000001AFFF2F40;
  *(void *)(inited + 64) = sub_1AFFCAE98();
  *(void *)(inited + 72) = v6;
  *(void *)(inited + 80) = 0xD000000000000017;
  *(void *)(inited + 88) = 0x80000001AFFF2F60;
  *(void *)(inited + 96) = sub_1AFFCAE98();
  *(void *)(inited + 104) = v7;
  *(void *)(inited + 112) = 0xD000000000000017;
  *(void *)(inited + 120) = 0x80000001AFFF2F80;
  *(void *)(inited + 128) = sub_1AFFCAE98();
  *(void *)(inited + 136) = v8;
  *(void *)(inited + 144) = 0xD000000000000017;
  *(void *)(inited + 152) = 0x80000001AFFF2FA0;
  *(void *)(inited + 160) = sub_1AFFCAE98();
  *(void *)(inited + 168) = v9;
  *(void *)(inited + 176) = 0xD000000000000017;
  *(void *)(inited + 184) = 0x80000001AFFF2FC0;
  unint64_t v10 = sub_1AFDF9B10(inited);
  if (*(void *)(v10 + 16))
  {
    sub_1AFFC8E38();
    unint64_t v11 = sub_1AFD79CC8(a1, a2);
    if (v12)
    {
      uint64_t v13 = *(void *)(*(void *)(v10 + 56) + 16 * v11);
      sub_1AFFC8E38();
    }
    else
    {
      uint64_t v13 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = 0;
  }
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1AFDC8AD8(uint64_t a1, uint64_t a2)
{
  sub_1AFDCB35C(0, (unint64_t *)&qword_1EB81A0E8, (uint64_t (*)(uint64_t))sub_1AFD306F8, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AFFD3AE0;
  *(void *)(inited + 32) = sub_1AFFCAE98();
  *(void *)(inited + 40) = v5;
  *(void *)(inited + 48) = 0xD000000000000017;
  *(void *)(inited + 56) = 0x80000001AFFF2EA0;
  *(void *)(inited + 64) = sub_1AFFCAE98();
  *(void *)(inited + 72) = v6;
  *(void *)(inited + 80) = 0xD000000000000017;
  *(void *)(inited + 88) = 0x80000001AFFF2EC0;
  *(void *)(inited + 96) = sub_1AFFCAE98();
  *(void *)(inited + 104) = v7;
  *(void *)(inited + 112) = 0xD000000000000017;
  *(void *)(inited + 120) = 0x80000001AFFF2EE0;
  *(void *)(inited + 128) = sub_1AFFCAE98();
  *(void *)(inited + 136) = v8;
  *(void *)(inited + 144) = 0xD000000000000017;
  *(void *)(inited + 152) = 0x80000001AFFF2F00;
  *(void *)(inited + 160) = sub_1AFFCAE98();
  *(void *)(inited + 168) = v9;
  *(void *)(inited + 176) = 0xD000000000000017;
  *(void *)(inited + 184) = 0x80000001AFFF2F20;
  unint64_t v10 = sub_1AFDF9B10(inited);
  if (*(void *)(v10 + 16))
  {
    sub_1AFFC8E38();
    unint64_t v11 = sub_1AFD79CC8(a1, a2);
    if (v12)
    {
      uint64_t v13 = *(void *)(*(void *)(v10 + 56) + 16 * v11);
      sub_1AFFC8E38();
    }
    else
    {
      uint64_t v13 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = 0;
  }
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1AFDC8CA0(uint64_t a1, uint64_t a2)
{
  sub_1AFDCB35C(0, (unint64_t *)&qword_1EB81A0E8, (uint64_t (*)(uint64_t))sub_1AFD306F8, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AFFD3AE0;
  *(void *)(inited + 32) = sub_1AFFCAE98();
  *(void *)(inited + 40) = v5;
  *(void *)(inited + 48) = 0xD000000000000017;
  *(void *)(inited + 56) = 0x80000001AFFF2E00;
  *(void *)(inited + 64) = sub_1AFFCAE98();
  *(void *)(inited + 72) = v6;
  *(void *)(inited + 80) = 0xD000000000000017;
  *(void *)(inited + 88) = 0x80000001AFFF2E20;
  *(void *)(inited + 96) = sub_1AFFCAE98();
  *(void *)(inited + 104) = v7;
  *(void *)(inited + 112) = 0xD000000000000017;
  *(void *)(inited + 120) = 0x80000001AFFF2E40;
  *(void *)(inited + 128) = sub_1AFFCAE98();
  *(void *)(inited + 136) = v8;
  *(void *)(inited + 144) = 0xD000000000000017;
  *(void *)(inited + 152) = 0x80000001AFFF2E60;
  *(void *)(inited + 160) = sub_1AFFCAE98();
  *(void *)(inited + 168) = v9;
  *(void *)(inited + 176) = 0xD000000000000017;
  *(void *)(inited + 184) = 0x80000001AFFF2E80;
  unint64_t v10 = sub_1AFDF9B10(inited);
  if (*(void *)(v10 + 16))
  {
    sub_1AFFC8E38();
    unint64_t v11 = sub_1AFD79CC8(a1, a2);
    if (v12)
    {
      uint64_t v13 = *(void *)(*(void *)(v10 + 56) + 16 * v11);
      sub_1AFFC8E38();
    }
    else
    {
      uint64_t v13 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = 0;
  }
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1AFDC8E68(uint64_t a1, uint64_t a2)
{
  sub_1AFDCB35C(0, (unint64_t *)&qword_1EB81A0E8, (uint64_t (*)(uint64_t))sub_1AFD306F8, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AFFD3AE0;
  *(void *)(inited + 32) = sub_1AFFCAE98();
  *(void *)(inited + 40) = v5;
  *(void *)(inited + 48) = 0xD000000000000017;
  *(void *)(inited + 56) = 0x80000001AFFF2D60;
  *(void *)(inited + 64) = sub_1AFFCAE98();
  *(void *)(inited + 72) = v6;
  *(void *)(inited + 80) = 0xD000000000000017;
  *(void *)(inited + 88) = 0x80000001AFFF2D80;
  *(void *)(inited + 96) = sub_1AFFCAE98();
  *(void *)(inited + 104) = v7;
  *(void *)(inited + 112) = 0xD000000000000017;
  *(void *)(inited + 120) = 0x80000001AFFF2DA0;
  *(void *)(inited + 128) = sub_1AFFCAE98();
  *(void *)(inited + 136) = v8;
  *(void *)(inited + 144) = 0xD000000000000017;
  *(void *)(inited + 152) = 0x80000001AFFF2DC0;
  *(void *)(inited + 160) = sub_1AFFCAE98();
  *(void *)(inited + 168) = v9;
  *(void *)(inited + 176) = 0xD000000000000017;
  *(void *)(inited + 184) = 0x80000001AFFF2DE0;
  unint64_t v10 = sub_1AFDF9B10(inited);
  if (*(void *)(v10 + 16))
  {
    sub_1AFFC8E38();
    unint64_t v11 = sub_1AFD79CC8(a1, a2);
    if (v12)
    {
      uint64_t v13 = *(void *)(*(void *)(v10 + 56) + 16 * v11);
      sub_1AFFC8E38();
    }
    else
    {
      uint64_t v13 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = 0;
  }
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1AFDC9030(uint64_t a1, uint64_t a2)
{
  sub_1AFDCB35C(0, (unint64_t *)&qword_1EB81A0E8, (uint64_t (*)(uint64_t))sub_1AFD306F8, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AFFD3AE0;
  *(void *)(inited + 32) = sub_1AFFCAE98();
  *(void *)(inited + 40) = v5;
  *(void *)(inited + 48) = 0xD000000000000017;
  *(void *)(inited + 56) = 0x80000001AFFF2CC0;
  *(void *)(inited + 64) = sub_1AFFCAE98();
  *(void *)(inited + 72) = v6;
  *(void *)(inited + 80) = 0xD000000000000017;
  *(void *)(inited + 88) = 0x80000001AFFF2CE0;
  *(void *)(inited + 96) = sub_1AFFCAE98();
  *(void *)(inited + 104) = v7;
  *(void *)(inited + 112) = 0xD000000000000017;
  *(void *)(inited + 120) = 0x80000001AFFF2D00;
  *(void *)(inited + 128) = sub_1AFFCAE98();
  *(void *)(inited + 136) = v8;
  *(void *)(inited + 144) = 0xD000000000000017;
  *(void *)(inited + 152) = 0x80000001AFFF2D20;
  *(void *)(inited + 160) = sub_1AFFCAE98();
  *(void *)(inited + 168) = v9;
  *(void *)(inited + 176) = 0xD000000000000017;
  *(void *)(inited + 184) = 0x80000001AFFF2D40;
  unint64_t v10 = sub_1AFDF9B10(inited);
  if (*(void *)(v10 + 16))
  {
    sub_1AFFC8E38();
    unint64_t v11 = sub_1AFD79CC8(a1, a2);
    if (v12)
    {
      uint64_t v13 = *(void *)(*(void *)(v10 + 56) + 16 * v11);
      sub_1AFFC8E38();
    }
    else
    {
      uint64_t v13 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = 0;
  }
  swift_bridgeObjectRelease();
  return v13;
}

unint64_t sub_1AFDC91F8()
{
  unint64_t result = qword_1EB8195E0;
  if (!qword_1EB8195E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8195E0);
  }
  return result;
}

unint64_t sub_1AFDC924C()
{
  unint64_t result = qword_1EB818E18;
  if (!qword_1EB818E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818E18);
  }
  return result;
}

void sub_1AFDC92A0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_1AFDC92EC()
{
  unint64_t result = qword_1EB819D48;
  if (!qword_1EB819D48)
  {
    sub_1AFDC92A0(255, &qword_1EB819D38, (uint64_t)&type metadata for SubscriptionButtonConfig, MEMORY[0x1E4FBB320]);
    sub_1AFD5F258();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819D48);
  }
  return result;
}

unint64_t sub_1AFDC9380()
{
  unint64_t result = qword_1EB818EC0;
  if (!qword_1EB818EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818EC0);
  }
  return result;
}

uint64_t sub_1AFDC93D4(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 160);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  int v2 = v1 - 1;
  if (v2 < 0) {
    int v2 = -1;
  }
  return (v2 + 1);
}

void *sub_1AFDC93F8(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20]);
  return a1;
}

void sub_1AFDC9464(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1AFDC91F8();
    unint64_t v7 = a3(a1, &type metadata for PaidBundleConfiguration.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1AFDC94C8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1AFDC92A0(255, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AFDC954C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1AFDC92A0(255, &qword_1EB819CC8, (uint64_t)&type metadata for PaywallConfig, MEMORY[0x1E4FBB320]);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1AFDC95DC()
{
  unint64_t result = qword_1EB818E10;
  if (!qword_1EB818E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818E10);
  }
  return result;
}

unint64_t sub_1AFDC9630()
{
  unint64_t result = qword_1EB819D40;
  if (!qword_1EB819D40)
  {
    sub_1AFDC92A0(255, &qword_1EB819D38, (uint64_t)&type metadata for SubscriptionButtonConfig, MEMORY[0x1E4FBB320]);
    sub_1AFD5FE00();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819D40);
  }
  return result;
}

unint64_t sub_1AFDC96C4()
{
  unint64_t result = qword_1EB818EB8;
  if (!qword_1EB818EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818EB8);
  }
  return result;
}

uint64_t sub_1AFDC9718(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1AFDCB35C(255, &qword_1EB819CF0, (uint64_t (*)(uint64_t))type metadata accessor for AudioUpsellConfig, MEMORY[0x1E4FBB320]);
    sub_1AFDC97C4(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AFDC97C4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for AudioUpsellConfig();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for PaidBundleConfiguration(void *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[46] != 1)
  {
    if (a1[26] != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (a1[30] != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (a1[34] != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (a1[38] != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (a1[42] != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PaidBundleConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v5;
  uint64_t v6 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v6;
  uint64_t v7 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v7;
  uint64_t v8 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v8;
  uint64_t v9 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v9;
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  uint64_t v10 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v10;
  uint64_t v11 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v11;
  uint64_t v12 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v12;
  uint64_t v13 = (_OWORD *)(a1 + 208);
  uint64_t v14 = a2 + 208;
  uint64_t v15 = *(void *)(a2 + 368);
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  if (v15 == 1)
  {
    long long v16 = *(_OWORD *)(v14 + 144);
    *(_OWORD *)(a1 + 336) = *(_OWORD *)(v14 + 128);
    *(_OWORD *)(a1 + 352) = v16;
    *(void *)(a1 + 368) = *(void *)(v14 + 160);
    long long v17 = *(_OWORD *)(v14 + 80);
    *(_OWORD *)(a1 + 272) = *(_OWORD *)(v14 + 64);
    *(_OWORD *)(a1 + 288) = v17;
    long long v18 = *(_OWORD *)(v14 + 112);
    *(_OWORD *)(a1 + 304) = *(_OWORD *)(v14 + 96);
    *(_OWORD *)(a1 + 320) = v18;
    long long v19 = *(_OWORD *)(v14 + 16);
    _OWORD *v13 = *(_OWORD *)v14;
    *(_OWORD *)(a1 + 224) = v19;
    long long v20 = *(_OWORD *)(v14 + 48);
    *(_OWORD *)(a1 + 240) = *(_OWORD *)(v14 + 32);
    *(_OWORD *)(a1 + 256) = v20;
  }
  else
  {
    if (*(void *)v14 == 1)
    {
      long long v21 = *(_OWORD *)(v14 + 16);
      _OWORD *v13 = *(_OWORD *)v14;
      *(_OWORD *)(a1 + 224) = v21;
    }
    else
    {
      uint64_t v22 = *(void *)(a2 + 216);
      uint64_t v23 = *(void *)(a2 + 224);
      *(void *)(a1 + 208) = *(void *)v14;
      *(void *)(a1 + 216) = v22;
      uint64_t v24 = *(void *)(a2 + 232);
      *(void *)(a1 + 224) = v23;
      *(void *)(a1 + 232) = v24;
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
    }
    uint64_t v25 = *(void *)(a2 + 240);
    if (v25 == 1)
    {
      long long v26 = *(_OWORD *)(a2 + 256);
      *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
      *(_OWORD *)(a1 + 256) = v26;
    }
    else
    {
      uint64_t v27 = *(void *)(a2 + 248);
      uint64_t v28 = *(void *)(a2 + 256);
      *(void *)(a1 + 240) = v25;
      *(void *)(a1 + 248) = v27;
      uint64_t v29 = *(void *)(a2 + 264);
      *(void *)(a1 + 256) = v28;
      *(void *)(a1 + 264) = v29;
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
    }
    uint64_t v30 = *(void *)(a2 + 272);
    if (v30 == 1)
    {
      long long v31 = *(_OWORD *)(a2 + 288);
      *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
      *(_OWORD *)(a1 + 288) = v31;
    }
    else
    {
      uint64_t v32 = *(void *)(a2 + 280);
      uint64_t v33 = *(void *)(a2 + 288);
      *(void *)(a1 + 272) = v30;
      *(void *)(a1 + 280) = v32;
      uint64_t v34 = *(void *)(a2 + 296);
      *(void *)(a1 + 288) = v33;
      *(void *)(a1 + 296) = v34;
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
    }
    uint64_t v35 = *(void *)(a2 + 304);
    if (v35 == 1)
    {
      long long v36 = *(_OWORD *)(a2 + 320);
      *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
      *(_OWORD *)(a1 + 320) = v36;
    }
    else
    {
      uint64_t v37 = *(void *)(a2 + 312);
      uint64_t v38 = *(void *)(a2 + 320);
      *(void *)(a1 + 304) = v35;
      *(void *)(a1 + 312) = v37;
      uint64_t v39 = *(void *)(a2 + 328);
      *(void *)(a1 + 320) = v38;
      *(void *)(a1 + 328) = v39;
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
    }
    uint64_t v40 = *(void *)(a2 + 336);
    if (v40 == 1)
    {
      long long v41 = *(_OWORD *)(a2 + 352);
      *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
      *(_OWORD *)(a1 + 352) = v41;
    }
    else
    {
      uint64_t v42 = *(void *)(a2 + 344);
      uint64_t v43 = *(void *)(a2 + 352);
      *(void *)(a1 + 336) = v40;
      *(void *)(a1 + 344) = v42;
      uint64_t v44 = *(void *)(a2 + 360);
      *(void *)(a1 + 352) = v43;
      *(void *)(a1 + 360) = v44;
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
    }
    *(void *)(a1 + 368) = v15;
    sub_1AFFC8E38();
  }
  *(void *)(a1 + 376) = *(void *)(a2 + 376);
  *(unsigned char *)(a1 + 384) = *(unsigned char *)(a2 + 384);
  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  *(unsigned char *)(a1 + 400) = *(unsigned char *)(a2 + 400);
  uint64_t v45 = *(void *)(a2 + 416);
  *(void *)(a1 + 408) = *(void *)(a2 + 408);
  *(void *)(a1 + 416) = v45;
  uint64_t v46 = *(void *)(a2 + 432);
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  *(void *)(a1 + 432) = v46;
  uint64_t v47 = *(void *)(a2 + 448);
  *(void *)(a1 + 440) = *(void *)(a2 + 440);
  *(void *)(a1 + 448) = v47;
  *(void *)(a1 + 456) = *(void *)(a2 + 456);
  *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
  *(_WORD *)(a1 + 480) = *(_WORD *)(a2 + 480);
  uint64_t v48 = *(void *)(a2 + 496);
  *(void *)(a1 + 488) = *(void *)(a2 + 488);
  *(void *)(a1 + 496) = v48;
  *(unsigned char *)(a1 + 504) = *(unsigned char *)(a2 + 504);
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  return a1;
}

uint64_t assignWithCopy for PaidBundleConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (unsigned char *)(a2 + 480);
  *(void *)a1 = *(void *)a2;
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  *(unsigned char *)(a1 + 19) = *(unsigned char *)(a2 + 19);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  uint64_t v5 = (long long *)(a1 + 208);
  uint64_t v6 = (long long *)(a2 + 208);
  uint64_t v7 = *(void *)(a2 + 368);
  if (*(void *)(a1 + 368) == 1)
  {
    if (v7 == 1)
    {
      long long v8 = *v6;
      long long v9 = *(_OWORD *)(a2 + 240);
      *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
      *(_OWORD *)(a1 + 240) = v9;
      *uint64_t v5 = v8;
      long long v10 = *(_OWORD *)(a2 + 256);
      long long v11 = *(_OWORD *)(a2 + 272);
      long long v12 = *(_OWORD *)(a2 + 304);
      *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
      *(_OWORD *)(a1 + 304) = v12;
      *(_OWORD *)(a1 + 256) = v10;
      *(_OWORD *)(a1 + 272) = v11;
      long long v13 = *(_OWORD *)(a2 + 320);
      long long v14 = *(_OWORD *)(a2 + 336);
      long long v15 = *(_OWORD *)(a2 + 352);
      *(void *)(a1 + 368) = *(void *)(a2 + 368);
      *(_OWORD *)(a1 + 336) = v14;
      *(_OWORD *)(a1 + 352) = v15;
      *(_OWORD *)(a1 + 320) = v13;
    }
    else
    {
      if (*(void *)v6 == 1)
      {
        long long v24 = *(_OWORD *)(a2 + 224);
        *uint64_t v5 = *v6;
        *(_OWORD *)(a1 + 224) = v24;
      }
      else
      {
        *(void *)(a1 + 208) = *(void *)v6;
        *(void *)(a1 + 216) = *(void *)(a2 + 216);
        *(void *)(a1 + 224) = *(void *)(a2 + 224);
        *(void *)(a1 + 232) = *(void *)(a2 + 232);
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
      }
      uint64_t v27 = *(void *)(a2 + 240);
      if (v27 == 1)
      {
        long long v28 = *(_OWORD *)(a2 + 256);
        *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
        *(_OWORD *)(a1 + 256) = v28;
      }
      else
      {
        *(void *)(a1 + 240) = v27;
        *(void *)(a1 + 248) = *(void *)(a2 + 248);
        *(void *)(a1 + 256) = *(void *)(a2 + 256);
        *(void *)(a1 + 264) = *(void *)(a2 + 264);
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
      }
      uint64_t v30 = *(void *)(a2 + 272);
      if (v30 == 1)
      {
        long long v31 = *(_OWORD *)(a2 + 288);
        *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
        *(_OWORD *)(a1 + 288) = v31;
      }
      else
      {
        *(void *)(a1 + 272) = v30;
        *(void *)(a1 + 280) = *(void *)(a2 + 280);
        *(void *)(a1 + 288) = *(void *)(a2 + 288);
        *(void *)(a1 + 296) = *(void *)(a2 + 296);
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
      }
      uint64_t v32 = *(void *)(a2 + 304);
      if (v32 == 1)
      {
        long long v33 = *(_OWORD *)(a2 + 320);
        *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
        *(_OWORD *)(a1 + 320) = v33;
      }
      else
      {
        *(void *)(a1 + 304) = v32;
        *(void *)(a1 + 312) = *(void *)(a2 + 312);
        *(void *)(a1 + 320) = *(void *)(a2 + 320);
        *(void *)(a1 + 328) = *(void *)(a2 + 328);
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
      }
      uint64_t v34 = *(void *)(a2 + 336);
      if (v34 == 1)
      {
        long long v35 = *(_OWORD *)(a2 + 352);
        *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
        *(_OWORD *)(a1 + 352) = v35;
      }
      else
      {
        *(void *)(a1 + 336) = v34;
        *(void *)(a1 + 344) = *(void *)(a2 + 344);
        *(void *)(a1 + 352) = *(void *)(a2 + 352);
        *(void *)(a1 + 360) = *(void *)(a2 + 360);
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
      }
      *(void *)(a1 + 368) = *(void *)(a2 + 368);
      sub_1AFFC8E38();
    }
  }
  else if (v7 == 1)
  {
    sub_1AFDCA700(a1 + 208);
    long long v17 = *(_OWORD *)(a2 + 224);
    long long v16 = *(_OWORD *)(a2 + 240);
    *uint64_t v5 = *v6;
    *(_OWORD *)(a1 + 224) = v17;
    *(_OWORD *)(a1 + 240) = v16;
    long long v18 = *(_OWORD *)(a2 + 304);
    long long v20 = *(_OWORD *)(a2 + 256);
    long long v19 = *(_OWORD *)(a2 + 272);
    *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
    *(_OWORD *)(a1 + 304) = v18;
    *(_OWORD *)(a1 + 256) = v20;
    *(_OWORD *)(a1 + 272) = v19;
    long long v22 = *(_OWORD *)(a2 + 336);
    long long v21 = *(_OWORD *)(a2 + 352);
    long long v23 = *(_OWORD *)(a2 + 320);
    *(void *)(a1 + 368) = *(void *)(a2 + 368);
    *(_OWORD *)(a1 + 336) = v22;
    *(_OWORD *)(a1 + 352) = v21;
    *(_OWORD *)(a1 + 320) = v23;
  }
  else
  {
    uint64_t v25 = *(void *)v6;
    if (*(void *)v5 == 1)
    {
      if (v25 == 1)
      {
        long long v26 = *(_OWORD *)(a2 + 224);
        *uint64_t v5 = *v6;
        *(_OWORD *)(a1 + 224) = v26;
      }
      else
      {
        *(void *)(a1 + 208) = v25;
        *(void *)(a1 + 216) = *(void *)(a2 + 216);
        *(void *)(a1 + 224) = *(void *)(a2 + 224);
        *(void *)(a1 + 232) = *(void *)(a2 + 232);
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
      }
    }
    else if (v25 == 1)
    {
      sub_1AFDCA6AC(a1 + 208);
      long long v29 = *(_OWORD *)(a2 + 224);
      *uint64_t v5 = *v6;
      *(_OWORD *)(a1 + 224) = v29;
    }
    else
    {
      *(void *)(a1 + 208) = v25;
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
    }
    long long v36 = (_OWORD *)(a1 + 240);
    uint64_t v38 = (_OWORD *)(a2 + 240);
    uint64_t v37 = *(void *)(a2 + 240);
    if (*(void *)(a1 + 240) == 1)
    {
      if (v37 == 1)
      {
        long long v39 = *(_OWORD *)(a2 + 256);
        *long long v36 = *v38;
        *(_OWORD *)(a1 + 256) = v39;
      }
      else
      {
        *(void *)(a1 + 240) = v37;
        *(void *)(a1 + 248) = *(void *)(a2 + 248);
        *(void *)(a1 + 256) = *(void *)(a2 + 256);
        *(void *)(a1 + 264) = *(void *)(a2 + 264);
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
      }
    }
    else if (v37 == 1)
    {
      sub_1AFDCA6AC(a1 + 240);
      long long v40 = *(_OWORD *)(a2 + 256);
      *long long v36 = *v38;
      *(_OWORD *)(a1 + 256) = v40;
    }
    else
    {
      *(void *)(a1 + 240) = v37;
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 248) = *(void *)(a2 + 248);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 256) = *(void *)(a2 + 256);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 264) = *(void *)(a2 + 264);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
    }
    long long v41 = (_OWORD *)(a1 + 272);
    uint64_t v42 = (_OWORD *)(a2 + 272);
    uint64_t v43 = *(void *)(a2 + 272);
    if (*(void *)(a1 + 272) == 1)
    {
      if (v43 == 1)
      {
        long long v44 = *(_OWORD *)(a2 + 288);
        *long long v41 = *v42;
        *(_OWORD *)(a1 + 288) = v44;
      }
      else
      {
        *(void *)(a1 + 272) = v43;
        *(void *)(a1 + 280) = *(void *)(a2 + 280);
        *(void *)(a1 + 288) = *(void *)(a2 + 288);
        *(void *)(a1 + 296) = *(void *)(a2 + 296);
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
      }
    }
    else if (v43 == 1)
    {
      sub_1AFDCA6AC(a1 + 272);
      long long v45 = *(_OWORD *)(a2 + 288);
      *long long v41 = *v42;
      *(_OWORD *)(a1 + 288) = v45;
    }
    else
    {
      *(void *)(a1 + 272) = v43;
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 280) = *(void *)(a2 + 280);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 288) = *(void *)(a2 + 288);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 296) = *(void *)(a2 + 296);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
    }
    uint64_t v46 = (_OWORD *)(a1 + 304);
    uint64_t v47 = (_OWORD *)(a2 + 304);
    uint64_t v48 = *(void *)(a2 + 304);
    if (*(void *)(a1 + 304) == 1)
    {
      if (v48 == 1)
      {
        long long v49 = *(_OWORD *)(a2 + 320);
        *uint64_t v46 = *v47;
        *(_OWORD *)(a1 + 320) = v49;
      }
      else
      {
        *(void *)(a1 + 304) = v48;
        *(void *)(a1 + 312) = *(void *)(a2 + 312);
        *(void *)(a1 + 320) = *(void *)(a2 + 320);
        *(void *)(a1 + 328) = *(void *)(a2 + 328);
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
      }
    }
    else if (v48 == 1)
    {
      sub_1AFDCA6AC(a1 + 304);
      long long v50 = *(_OWORD *)(a2 + 320);
      *uint64_t v46 = *v47;
      *(_OWORD *)(a1 + 320) = v50;
    }
    else
    {
      *(void *)(a1 + 304) = v48;
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 312) = *(void *)(a2 + 312);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 320) = *(void *)(a2 + 320);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 328) = *(void *)(a2 + 328);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
    }
    char v51 = (_OWORD *)(a1 + 336);
    uint64_t v52 = (_OWORD *)(a2 + 336);
    uint64_t v53 = *(void *)(a2 + 336);
    if (*(void *)(a1 + 336) == 1)
    {
      if (v53 == 1)
      {
        long long v54 = *(_OWORD *)(a2 + 352);
        *char v51 = *v52;
        *(_OWORD *)(a1 + 352) = v54;
      }
      else
      {
        *(void *)(a1 + 336) = v53;
        *(void *)(a1 + 344) = *(void *)(a2 + 344);
        *(void *)(a1 + 352) = *(void *)(a2 + 352);
        *(void *)(a1 + 360) = *(void *)(a2 + 360);
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
      }
    }
    else if (v53 == 1)
    {
      sub_1AFDCA6AC(a1 + 336);
      long long v55 = *(_OWORD *)(a2 + 352);
      *char v51 = *v52;
      *(_OWORD *)(a1 + 352) = v55;
    }
    else
    {
      *(void *)(a1 + 336) = v53;
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 344) = *(void *)(a2 + 344);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 352) = *(void *)(a2 + 352);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 360) = *(void *)(a2 + 360);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
    }
    *(void *)(a1 + 368) = *(void *)(a2 + 368);
    sub_1AFFC8E38();
    swift_bridgeObjectRelease();
  }
  uint64_t v56 = *(void *)(a2 + 376);
  *(unsigned char *)(a1 + 384) = *(unsigned char *)(a2 + 384);
  *(void *)(a1 + 376) = v56;
  uint64_t v57 = *(void *)(a2 + 392);
  *(unsigned char *)(a1 + 400) = *(unsigned char *)(a2 + 400);
  *(void *)(a1 + 392) = v57;
  *(void *)(a1 + 408) = *(void *)(a2 + 408);
  *(void *)(a1 + 416) = *(void *)(a2 + 416);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 440) = *(void *)(a2 + 440);
  *(void *)(a1 + 448) = *(void *)(a2 + 448);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 456) = *(void *)(a2 + 456);
  *(void *)(a1 + 464) = *(void *)(a2 + 464);
  *(void *)(a1 + 472) = *(void *)(a2 + 472);
  *(unsigned char *)(a1 + 480) = *v4;
  *(unsigned char *)(a1 + 481) = v4[1];
  *(void *)(a1 + 488) = *(void *)(a2 + 488);
  *(void *)(a1 + 496) = *(void *)(a2 + 496);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 504) = v4[24];
  return a1;
}

uint64_t sub_1AFDCA6AC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1AFDCA700(uint64_t a1)
{
  return a1;
}

void *__swift_memcpy505_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x1F9uLL);
}

uint64_t assignWithTake for PaidBundleConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (unsigned char *)(a2 + 480);
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  *(unsigned char *)(a1 + 19) = *(unsigned char *)(a2 + 19);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v9;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  uint64_t v10 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v10;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  swift_bridgeObjectRelease();
  long long v11 = (void *)(a1 + 208);
  long long v12 = (void *)(a2 + 208);
  if (*(void *)(a1 + 368) == 1) {
    goto LABEL_4;
  }
  if (*(void *)(a2 + 368) != 1)
  {
    if (*v11 != 1)
    {
      if (*v12 != 1)
      {
        *(void *)(a1 + 208) = *v12;
        swift_bridgeObjectRelease();
        *(void *)(a1 + 216) = *(void *)(a2 + 216);
        swift_bridgeObjectRelease();
        *(void *)(a1 + 224) = *(void *)(a2 + 224);
        swift_bridgeObjectRelease();
        *(void *)(a1 + 232) = *(void *)(a2 + 232);
        swift_bridgeObjectRelease();
LABEL_10:
        uint64_t v19 = *(void *)(a2 + 240);
        if (*(void *)(a1 + 240) != 1)
        {
          if (v19 != 1)
          {
            *(void *)(a1 + 240) = v19;
            swift_bridgeObjectRelease();
            *(void *)(a1 + 248) = *(void *)(a2 + 248);
            swift_bridgeObjectRelease();
            *(void *)(a1 + 256) = *(void *)(a2 + 256);
            swift_bridgeObjectRelease();
            *(void *)(a1 + 264) = *(void *)(a2 + 264);
            swift_bridgeObjectRelease();
LABEL_15:
            if (*(void *)(a1 + 272) != 1)
            {
              uint64_t v21 = *(void *)(a2 + 272);
              if (v21 != 1)
              {
                *(void *)(a1 + 272) = v21;
                swift_bridgeObjectRelease();
                *(void *)(a1 + 280) = *(void *)(a2 + 280);
                swift_bridgeObjectRelease();
                *(void *)(a1 + 288) = *(void *)(a2 + 288);
                swift_bridgeObjectRelease();
                *(void *)(a1 + 296) = *(void *)(a2 + 296);
                swift_bridgeObjectRelease();
LABEL_20:
                if (*(void *)(a1 + 304) != 1)
                {
                  uint64_t v23 = *(void *)(a2 + 304);
                  if (v23 != 1)
                  {
                    *(void *)(a1 + 304) = v23;
                    swift_bridgeObjectRelease();
                    *(void *)(a1 + 312) = *(void *)(a2 + 312);
                    swift_bridgeObjectRelease();
                    *(void *)(a1 + 320) = *(void *)(a2 + 320);
                    swift_bridgeObjectRelease();
                    *(void *)(a1 + 328) = *(void *)(a2 + 328);
                    swift_bridgeObjectRelease();
LABEL_25:
                    if (*(void *)(a1 + 336) != 1)
                    {
                      uint64_t v25 = *(void *)(a2 + 336);
                      if (v25 != 1)
                      {
                        *(void *)(a1 + 336) = v25;
                        swift_bridgeObjectRelease();
                        *(void *)(a1 + 344) = *(void *)(a2 + 344);
                        swift_bridgeObjectRelease();
                        *(void *)(a1 + 352) = *(void *)(a2 + 352);
                        swift_bridgeObjectRelease();
                        *(void *)(a1 + 360) = *(void *)(a2 + 360);
                        swift_bridgeObjectRelease();
                        goto LABEL_30;
                      }
                      sub_1AFDCA6AC(a1 + 336);
                    }
                    long long v26 = *(_OWORD *)(a2 + 352);
                    *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
                    *(_OWORD *)(a1 + 352) = v26;
LABEL_30:
                    *(void *)(a1 + 368) = *(void *)(a2 + 368);
                    swift_bridgeObjectRelease();
                    goto LABEL_31;
                  }
                  sub_1AFDCA6AC(a1 + 304);
                }
                long long v24 = *(_OWORD *)(a2 + 320);
                *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
                *(_OWORD *)(a1 + 320) = v24;
                goto LABEL_25;
              }
              sub_1AFDCA6AC(a1 + 272);
            }
            long long v22 = *(_OWORD *)(a2 + 288);
            *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
            *(_OWORD *)(a1 + 288) = v22;
            goto LABEL_20;
          }
          sub_1AFDCA6AC(a1 + 240);
        }
        long long v20 = *(_OWORD *)(a2 + 256);
        *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
        *(_OWORD *)(a1 + 256) = v20;
        goto LABEL_15;
      }
      sub_1AFDCA6AC(a1 + 208);
    }
    long long v18 = *(_OWORD *)(a2 + 224);
    *(_OWORD *)long long v11 = *(_OWORD *)v12;
    *(_OWORD *)(a1 + 224) = v18;
    goto LABEL_10;
  }
  sub_1AFDCA700(a1 + 208);
LABEL_4:
  long long v13 = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 352) = v13;
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  long long v14 = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 288) = v14;
  long long v15 = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 320) = v15;
  long long v16 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)long long v11 = *(_OWORD *)v12;
  *(_OWORD *)(a1 + 224) = v16;
  long long v17 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = v17;
LABEL_31:
  *(void *)(a1 + 376) = *(void *)(a2 + 376);
  *(unsigned char *)(a1 + 384) = *(unsigned char *)(a2 + 384);
  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  *(unsigned char *)(a1 + 400) = *(unsigned char *)(a2 + 400);
  uint64_t v27 = *(void *)(a2 + 416);
  *(void *)(a1 + 408) = *(void *)(a2 + 408);
  *(void *)(a1 + 416) = v27;
  swift_bridgeObjectRelease();
  uint64_t v28 = *(void *)(a2 + 432);
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  *(void *)(a1 + 432) = v28;
  swift_bridgeObjectRelease();
  uint64_t v29 = *(void *)(a2 + 448);
  *(void *)(a1 + 440) = *(void *)(a2 + 440);
  *(void *)(a1 + 448) = v29;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 456) = *(void *)(a2 + 456);
  *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
  *(unsigned char *)(a1 + 480) = *v4;
  *(unsigned char *)(a1 + 481) = v4[1];
  uint64_t v30 = *(void *)(a2 + 496);
  *(void *)(a1 + 488) = *(void *)(a2 + 488);
  *(void *)(a1 + 496) = v30;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 504) = v4[24];
  return a1;
}

uint64_t getEnumTagSinglePayload for PaidBundleConfiguration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 505)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PaidBundleConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 504) = 0;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 505) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 56) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 505) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PaidBundleConfiguration()
{
  return &type metadata for PaidBundleConfiguration;
}

uint64_t getEnumTagSinglePayload for PaidBundleConfiguration.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xDC) {
    goto LABEL_17;
  }
  if (a2 + 36 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 36) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 36;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 36;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 36;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x25;
  int v8 = v6 - 37;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for PaidBundleConfiguration.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 36 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 36) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xDC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xDB)
  {
    unsigned int v6 = ((a2 - 220) >> 8) + 1;
    *uint64_t result = a2 + 36;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFDCAE28);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 36;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PaidBundleConfiguration.CodingKeys()
{
  return &type metadata for PaidBundleConfiguration.CodingKeys;
}

unint64_t sub_1AFDCAE64()
{
  unint64_t result = qword_1E9AFABE8;
  if (!qword_1E9AFABE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFABE8);
  }
  return result;
}

unint64_t sub_1AFDCAEBC()
{
  unint64_t result = qword_1EB8195F0;
  if (!qword_1EB8195F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8195F0);
  }
  return result;
}

unint64_t sub_1AFDCAF14()
{
  unint64_t result = qword_1EB8195E8;
  if (!qword_1EB8195E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8195E8);
  }
  return result;
}

uint64_t sub_1AFDCAF68(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 168);
  uint64_t v3 = *(void *)(a1 + 176);
  uint64_t v4 = *(void *)(a1 + 184);
  uint64_t v5 = *(void *)(a1 + 192);
  uint64_t v6 = *(void *)(a1 + 200);
  uint64_t v7 = *(void *)(a1 + 208);
  uint64_t v8 = *(void *)(a1 + 216);
  uint64_t v9 = *(void *)(a1 + 224);
  long long v16 = *(_OWORD *)(a1 + 248);
  long long v17 = *(_OWORD *)(a1 + 232);
  long long v15 = *(_OWORD *)(a1 + 264);
  long long v13 = *(_OWORD *)(a1 + 296);
  long long v14 = *(_OWORD *)(a1 + 280);
  long long v12 = *(_OWORD *)(a1 + 312);
  uint64_t v10 = *(void *)(a1 + 328);
  sub_1AFD56100(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160));
  sub_1AFD56100(v2, v3, v4, v5, v6, v7, v8, v9, v17, *((uint64_t *)&v17 + 1), v16, *((uint64_t *)&v16 + 1), v15, *((uint64_t *)&v15 + 1), v14, *((uint64_t *)&v14 + 1), v13, *((uint64_t *)&v13 + 1), v12,
    *((uint64_t *)&v12 + 1),
    v10);
  return a1;
}

uint64_t *sub_1AFDCB084(uint64_t *a1)
{
  uint64_t v2 = a1[4];
  uint64_t v3 = a1[8];
  uint64_t v4 = a1[12];
  uint64_t v6 = a1[16];
  sub_1AFDB3B98(*a1);
  sub_1AFDB3B98(v2);
  sub_1AFDB3B98(v3);
  sub_1AFDB3B98(v4);
  sub_1AFDB3B98(v6);
  sub_1AFFC8E38();
  return a1;
}

uint64_t *sub_1AFDCB170(uint64_t *a1)
{
  uint64_t v2 = a1[4];
  uint64_t v3 = a1[8];
  uint64_t v4 = a1[12];
  uint64_t v6 = a1[16];
  sub_1AFD56220(*a1);
  sub_1AFD56220(v2);
  sub_1AFD56220(v3);
  sub_1AFD56220(v4);
  sub_1AFD56220(v6);
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_1AFDCB25C()
{
  unint64_t result = qword_1E9AFABF0;
  if (!qword_1E9AFABF0)
  {
    sub_1AFDC92A0(255, &qword_1EB818EC8, (uint64_t)&type metadata for FlexiblePaywall, MEMORY[0x1E4FBB718]);
    sub_1AFDC96C4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFABF0);
  }
  return result;
}

void sub_1AFDCB2F0()
{
  if (!qword_1EB817EC0)
  {
    unint64_t v0 = sub_1AFFCAD18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB817EC0);
    }
  }
}

void sub_1AFDCB35C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

StocksCore::NewsProvider_optional __swiftcall NewsProvider.init(rawValue:)(Swift::String rawValue)
{
  return (StocksCore::NewsProvider_optional)sub_1AFDCC2A8(v1);
}

uint64_t NewsProvider.rawValue.getter()
{
  uint64_t v1 = 0x656C707061;
  if (*v0 != 1) {
    uint64_t v1 = 0x6F6F686179;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6F72467265666E69;
  }
}

uint64_t sub_1AFDCB42C(char *a1, unsigned __int8 *a2)
{
  return sub_1AFDF0034(*a1, *a2);
}

uint64_t sub_1AFDCB438()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFDCB4E0()
{
  sub_1AFFCAF68();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFDCB574()
{
  return sub_1AFFCBE38();
}

StocksCore::NewsProvider_optional sub_1AFDCB618(Swift::String *a1)
{
  return NewsProvider.init(rawValue:)(*a1);
}

void sub_1AFDCB624(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xEF6E6F696765526DLL;
  uint64_t v4 = 0x656C707061;
  if (v2 != 1) {
    uint64_t v4 = 0x6F6F686179;
  }
  BOOL v5 = v2 == 0;
  if (*v1) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = 0x6F72467265666E69;
  }
  if (!v5) {
    unint64_t v3 = 0xE500000000000000;
  }
  *a1 = v6;
  a1[1] = v3;
}

uint64_t sub_1AFDCB688(uint64_t a1)
{
  unint64_t v2 = sub_1AFDD0698();
  uint64_t v3 = MEMORY[0x1E4FAB458];

  return MEMORY[0x1F415F4F8](a1, v2, v3);
}

uint64_t sub_1AFDCB6DC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1AFDD0698();
  uint64_t v5 = MEMORY[0x1E4FAB458];

  return MEMORY[0x1F415F4F0](a1, a2, v4, v5);
}

uint64_t sub_1AFDCB738(uint64_t a1)
{
  unint64_t v2 = sub_1AFDD0698();
  uint64_t v3 = MEMORY[0x1E4FAB458];

  return MEMORY[0x1F415F4E8](a1, v2, v3);
}

StocksCore::NewsEnvironment_optional __swiftcall NewsEnvironment.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_1AFFCBA78();
  result.value = swift_bridgeObjectRelease();
  char v5 = 8;
  if (v3 < 8) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

uint64_t NewsEnvironment.rawValue.getter()
{
  uint64_t result = 0x69746375646F7270;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x676E6967617473;
      break;
    case 2:
      uint64_t result = 24945;
      break;
    case 3:
      uint64_t result = 1953719668;
      break;
    case 4:
      uint64_t result = 0x6C65766564;
      break;
    case 5:
      uint64_t result = 0x786F62646E6173;
      break;
    case 6:
      uint64_t result = 0x316F6D6564;
      break;
    case 7:
      uint64_t result = 0x326F6D6564;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1AFDCB8CC(unsigned __int8 *a1, char *a2)
{
  return sub_1AFDEFD34(*a1, *a2);
}

uint64_t sub_1AFDCB8D8()
{
  return sub_1AFF9B514();
}

uint64_t sub_1AFDCB8E4()
{
  return sub_1AFD781D8();
}

uint64_t sub_1AFDCB8EC()
{
  return sub_1AFF9B514();
}

StocksCore::NewsEnvironment_optional sub_1AFDCB8F4(Swift::String *a1)
{
  return NewsEnvironment.init(rawValue:)(*a1);
}

void sub_1AFDCB900(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xEA00000000006E6FLL;
  uint64_t v3 = 0x69746375646F7270;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE700000000000000;
      uint64_t v3 = 0x676E6967617473;
      goto LABEL_3;
    case 2:
      *a1 = 24945;
      a1[1] = 0xE200000000000000;
      break;
    case 3:
      *a1 = 1953719668;
      a1[1] = 0xE400000000000000;
      break;
    case 4:
      *a1 = 0x6C65766564;
      a1[1] = 0xE500000000000000;
      break;
    case 5:
      *a1 = 0x786F62646E6173;
      a1[1] = 0xE700000000000000;
      break;
    case 6:
      *a1 = 0x316F6D6564;
      a1[1] = 0xE500000000000000;
      break;
    case 7:
      *a1 = 0x326F6D6564;
      a1[1] = 0xE500000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1AFDCBA00(uint64_t a1)
{
  unint64_t v2 = sub_1AFDD0644();
  uint64_t v3 = MEMORY[0x1E4FAB458];

  return MEMORY[0x1F415F4F8](a1, v2, v3);
}

uint64_t sub_1AFDCBA54(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1AFDD0644();
  uint64_t v5 = MEMORY[0x1E4FAB458];

  return MEMORY[0x1F415F4F0](a1, a2, v4, v5);
}

uint64_t sub_1AFDCBAB0(uint64_t a1)
{
  unint64_t v2 = sub_1AFDD0644();
  uint64_t v3 = MEMORY[0x1E4FAB458];

  return MEMORY[0x1F415F4E8](a1, v2, v3);
}

uint64_t sub_1AFDCBB04@<X0>(char *a1@<X8>)
{
  return sub_1AFDCC2A8(a1);
}

uint64_t sub_1AFDCBB10()
{
  uint64_t v1 = 0x656764457377656ELL;
  if (*v0 != 1) {
    uint64_t v1 = 0x74694B64756F6C63;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x746C7561666564;
  }
}

uint64_t sub_1AFDCBB6C(char *a1, unsigned __int8 *a2)
{
  return sub_1AFDED9CC(*a1, *a2);
}

uint64_t sub_1AFDCBB78()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFDCBC1C()
{
  sub_1AFFCAF68();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFDCBCAC()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFDCBD4C@<X0>(char *a1@<X8>)
{
  return sub_1AFDCBB04(a1);
}

void sub_1AFDCBD58(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = 0x656764457377656ELL;
  if (v2 != 1) {
    uint64_t v4 = 0x74694B64756F6C63;
  }
  BOOL v5 = v2 == 0;
  if (*v1) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = 0x746C7561666564;
  }
  if (!v5) {
    unint64_t v3 = 0xE800000000000000;
  }
  *a1 = v6;
  a1[1] = v3;
}

uint64_t sub_1AFDCBDB8(uint64_t a1)
{
  unint64_t v2 = sub_1AFDD05F0();
  uint64_t v3 = MEMORY[0x1E4FAB458];

  return MEMORY[0x1F415F4F8](a1, v2, v3);
}

uint64_t sub_1AFDCBE0C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1AFDD05F0();
  uint64_t v5 = MEMORY[0x1E4FAB458];

  return MEMORY[0x1F415F4F0](a1, a2, v4, v5);
}

uint64_t sub_1AFDCBE68(uint64_t a1)
{
  unint64_t v2 = sub_1AFDD05F0();
  uint64_t v3 = MEMORY[0x1E4FAB458];

  return MEMORY[0x1F415F4E8](a1, v2, v3);
}

uint64_t sub_1AFDCBEBC@<X0>(char *a1@<X8>)
{
  return sub_1AFDCC2A8(a1);
}

uint64_t sub_1AFDCBEC8()
{
  uint64_t v1 = 0x6465776F6C6C61;
  if (*v0 != 1) {
    uint64_t v1 = 0x776F6C6C61736964;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x69666E6F43707061;
  }
}

uint64_t sub_1AFDCBF2C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1AFDEDB60(*a1, *a2);
}

uint64_t sub_1AFDCBF38()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFDCBFE4()
{
  sub_1AFFCAF68();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFDCC07C()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFDCC124@<X0>(char *a1@<X8>)
{
  return sub_1AFDCBEBC(a1);
}

void sub_1AFDCC130(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE900000000000067;
  unint64_t v4 = 0xE700000000000000;
  uint64_t v5 = 0x6465776F6C6C61;
  if (v2 != 1)
  {
    uint64_t v5 = 0x776F6C6C61736964;
    unint64_t v4 = 0xEA00000000006465;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x69666E6F43707061;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1AFDCC198(uint64_t a1)
{
  unint64_t v2 = sub_1AFDD059C();
  uint64_t v3 = MEMORY[0x1E4FAB458];

  return MEMORY[0x1F415F4F8](a1, v2, v3);
}

uint64_t sub_1AFDCC1EC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1AFDD059C();
  uint64_t v5 = MEMORY[0x1E4FAB458];

  return MEMORY[0x1F415F4F0](a1, a2, v4, v5);
}

uint64_t sub_1AFDCC248(uint64_t a1)
{
  unint64_t v2 = sub_1AFDD059C();
  uint64_t v3 = MEMORY[0x1E4FAB458];

  return MEMORY[0x1F415F4E8](a1, v2, v3);
}

StocksCore::StocksDataServiceEnablement_optional __swiftcall StocksDataServiceEnablement.init(rawValue:)(Swift::String rawValue)
{
  return (StocksCore::StocksDataServiceEnablement_optional)sub_1AFDCC2A8(v1);
}

uint64_t sub_1AFDCC2A8@<X0>(char *a1@<X8>)
{
  unint64_t v2 = sub_1AFFCBA78();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 3;
  if (v2 < 3) {
    char v4 = v2;
  }
  *a1 = v4;
  return result;
}

uint64_t StocksDataServiceEnablement.rawValue.getter()
{
  uint64_t v1 = 0x64656C62616E65;
  if (*v0 != 1) {
    uint64_t v1 = 0x64656C6261736964;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x746C7561666564;
  }
}

uint64_t sub_1AFDCC35C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1AFDF0C50(*a1, *a2);
}

uint64_t sub_1AFDCC368()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFDCC40C()
{
  sub_1AFFCAF68();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFDCC49C()
{
  return sub_1AFFCBE38();
}

StocksCore::StocksDataServiceEnablement_optional sub_1AFDCC53C(Swift::String *a1)
{
  return StocksDataServiceEnablement.init(rawValue:)(*a1);
}

void sub_1AFDCC548(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  unint64_t v4 = 0xE700000000000000;
  uint64_t v5 = 0x64656C62616E65;
  if (v2 != 1)
  {
    uint64_t v5 = 0x64656C6261736964;
    unint64_t v4 = 0xE800000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x746C7561666564;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1AFDCC5A8(uint64_t a1)
{
  unint64_t v2 = sub_1AFDD0548();
  uint64_t v3 = MEMORY[0x1E4FAB458];

  return MEMORY[0x1F415F4F8](a1, v2, v3);
}

uint64_t sub_1AFDCC5FC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1AFDD0548();
  uint64_t v5 = MEMORY[0x1E4FAB458];

  return MEMORY[0x1F415F4F0](a1, a2, v4, v5);
}

uint64_t sub_1AFDCC658(uint64_t a1)
{
  unint64_t v2 = sub_1AFDD0548();
  uint64_t v3 = MEMORY[0x1E4FAB458];

  return MEMORY[0x1F415F4E8](a1, v2, v3);
}

uint64_t sub_1AFDCC6AC()
{
  uint64_t v0 = sub_1AFFC9C58();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = &v10[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_1AFFC9C68();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (uint64_t *)&v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1AFDD0AEC(0, &qword_1EB817C88, (void (*)(void))sub_1AFDD0B4C);
  v10[15] = 0;
  *uint64_t v7 = sub_1AFFCAE98();
  v7[1] = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  (*(void (**)(unsigned char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  sub_1AFDD08A4(0, &qword_1EB8183A8, &qword_1EB817C80);
  sub_1AFDD0BA0(0, &qword_1EB817C80);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1AFFD0DC0;
  v10[14] = 0;
  sub_1AFFC9C78();
  v10[13] = 1;
  sub_1AFFC9C78();
  v10[12] = 2;
  sub_1AFFC9C78();
  sub_1AFDD0BE8();
  uint64_t result = sub_1AFFC9C98();
  qword_1EB817C20 = result;
  return result;
}

uint64_t sub_1AFDCC9F0()
{
  return sub_1AFDD0064(&qword_1EB817C28);
}

uint64_t sub_1AFDCCA14()
{
  uint64_t v0 = sub_1AFFC9C58();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1AFFC9C68();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1AFDD0AEC(0, &qword_1EB819B60, (void (*)(void))sub_1AFDD0A44);
  v13[3] = v8;
  uint64_t v9 = sub_1AFFCAE98();
  v13[1] = v10;
  void v13[2] = v9;
  char v22 = 0;
  *uint64_t v7 = sub_1AFFCAE98();
  v7[1] = v11;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  sub_1AFDD08A4(0, &qword_1EB81A0D0, &qword_1EB819B50);
  sub_1AFDD0BA0(0, &qword_1EB819B50);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1AFFD56D0;
  char v21 = 0;
  sub_1AFFC9C78();
  char v20 = 1;
  sub_1AFFC9C78();
  char v19 = 2;
  sub_1AFFC9C78();
  char v18 = 3;
  sub_1AFFC9C78();
  char v17 = 4;
  sub_1AFFC9C78();
  char v16 = 5;
  sub_1AFFC9C78();
  char v15 = 6;
  sub_1AFFC9C78();
  char v14 = 7;
  sub_1AFFC9C78();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB3F8], v0);
  sub_1AFDD0A98();
  uint64_t result = sub_1AFFC9C98();
  qword_1EB819B30 = result;
  return result;
}

uint64_t sub_1AFDCCE74()
{
  return sub_1AFDD0064(&qword_1EB819B40);
}

uint64_t sub_1AFDCCE98(uint64_t a1)
{
  return sub_1AFDCCF04(a1, 0xD00000000000001FLL, 0x80000001AFFF37B0, &qword_1EB817C30);
}

uint64_t sub_1AFDCCEBC()
{
  return sub_1AFDD0064(&qword_1EB817C38);
}

uint64_t sub_1AFDCCEE0(uint64_t a1)
{
  return sub_1AFDCCF04(a1, 0xD000000000000025, 0x80000001AFFF3780, &qword_1EB817C50);
}

uint64_t sub_1AFDCCF04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5 = sub_1AFFC9C68();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_1AFFC9C58();
  MEMORY[0x1F4188790](v9);
  (*(void (**)(unsigned char *, void))(v11 + 104))(&v13[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x1E4FAB400]);
  (*(void (**)(unsigned char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FAB410], v5);
  v13[15] = 0;
  sub_1AFDD09F8(0, (unint64_t *)&qword_1EB81ABA8);
  swift_allocObject();
  uint64_t result = sub_1AFFC9CE8();
  *a4 = result;
  return result;
}