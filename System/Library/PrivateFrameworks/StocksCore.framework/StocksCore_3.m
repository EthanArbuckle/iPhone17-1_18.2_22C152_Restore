uint64_t sub_1AFEFEB88()
{
  return sub_1AFFC9FD8();
}

uint64_t sub_1AFEFEBAC()
{
  return sub_1AFFC8E48();
}

uint64_t sub_1AFEFEBB4()
{
  return sub_1AFFC8E48();
}

uint64_t sub_1AFEFEBBC()
{
  return 1;
}

uint64_t sub_1AFEFEBCC(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  sub_1AFFC9FD8();
  memcpy(v2, v3, sizeof(v2));
  sub_1AFEFF0BC(0, &qword_1EB819BD0, (uint64_t)&type metadata for AppConfiguration, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1AFFCA6F8();
}

uint64_t sub_1AFEFEC74()
{
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1AFEFEC9C()
{
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1AFEFECDC()
{
  return sub_1AFFC9FD8();
}

uint64_t sub_1AFEFED08(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  sub_1AFFC9FD8();
  memcpy(v2, v3, sizeof(v2));
  sub_1AFEFF0BC(0, &qword_1EB819BD0, (uint64_t)&type metadata for AppConfiguration, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1AFFCA6F8();
}

uint64_t sub_1AFEFEDB4()
{
  return sub_1AFEFD360();
}

unint64_t sub_1AFEFEDBC()
{
  unint64_t result = qword_1EB818958;
  if (!qword_1EB818958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818958);
  }
  return result;
}

uint64_t sub_1AFEFEE10(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  v2 = v1;
  sub_1AFFC91E8();
  swift_allocObject();
  sub_1AFFC91D8();
  memcpy(__dst, v2, 0x10BAuLL);
  sub_1AFEFF2AC();
  uint64_t v3 = sub_1AFFC91C8();
  unint64_t v5 = v4;
  swift_release();
  id v6 = objc_msgSend(self, sel_standardUserDefaults);
  v7 = (void *)sub_1AFFC9778();
  v8 = (void *)sub_1AFFCAE68();
  objc_msgSend(v6, sel_setObject_forKey_, v7, v8);

  return sub_1AFD4B504(v3, v5);
}

uint64_t sub_1AFEFF03C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1AFEFF0BC(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

void sub_1AFEFF0BC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1AFEFF108(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1AFEFF11C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1AFEFF130(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_1AFEFF144(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_1AFEFF158(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t sub_1AFEFF16C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t sub_1AFEFF180(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t type metadata accessor for AppConfigurationManager()
{
  return self;
}

uint64_t sub_1AFEFF1B8(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AppConfigurationManager);
}

uint64_t sub_1AFEFF1D0()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_1AFEFF1E4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1AFEFF1F8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1AFEFF20C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t type metadata accessor for AppConfigurationStore()
{
  return self;
}

uint64_t sub_1AFEFF244(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AppConfigurationStore);
}

uint64_t type metadata accessor for StaticAppConfigurationManager()
{
  return self;
}

uint64_t sub_1AFEFF280(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for StaticAppConfigurationManager);
}

uint64_t sub_1AFEFF298()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

unint64_t sub_1AFEFF2AC()
{
  unint64_t result = qword_1EB818FF8;
  if (!qword_1EB818FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818FF8);
  }
  return result;
}

uint64_t sub_1AFEFF300(uint64_t a1)
{
  unint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *unint64_t v4 = v2;
  v4[1] = sub_1AFD3503C;
  v4[2154] = v1;
  v4[2153] = a1;
  return MEMORY[0x1F4188298](sub_1AFEFD3F8, 0, 0);
}

unint64_t sub_1AFEFF3B0()
{
  unint64_t result = qword_1EB818950;
  if (!qword_1EB818950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818950);
  }
  return result;
}

double HeadlineScores.globalCohort.getter@<D0>(uint64_t a1@<X8>)
{
  double result = *(double *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(double *)(a1 + 16) = result;
  return result;
}

double HeadlineScores.sourceChannelCohort.getter@<D0>(uint64_t a1@<X8>)
{
  double result = *(double *)(v1 + 40);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 24);
  *(double *)(a1 + 16) = result;
  return result;
}

uint64_t HeadlineScores.stockEntityCohorts.getter()
{
  return sub_1AFFC8E38();
}

StocksCore::HeadlineScores::Cohort __swiftcall HeadlineScores.Cohort.init(clicks:impressions:timestamp:)(Swift::Double clicks, Swift::Double impressions, Swift::Double timestamp)
{
  *uint64_t v3 = clicks;
  v3[1] = impressions;
  v3[2] = timestamp;
  result.timestamp = timestamp;
  result.impressions = impressions;
  result.clicks = clicks;
  return result;
}

void __swiftcall HeadlineScores.init(globalCohort:sourceChannelCohort:stockEntityCohorts:)(StocksCore::HeadlineScores *__return_ptr retstr, StocksCore::HeadlineScores::Cohort globalCohort, StocksCore::HeadlineScores::Cohort sourceChannelCohort, Swift::OpaquePointer stockEntityCohorts)
{
  Swift::Double v6 = *((double *)stockEntityCohorts._rawValue + 2);
  Swift::Double v7 = *(double *)(v4 + 16);
  *(_OWORD *)&retstr->globalCohort.clicks = *(_OWORD *)stockEntityCohorts._rawValue;
  retstr->globalCohort.timestamp = v6;
  *(_OWORD *)&retstr->sourceChannelCohort.clicks = *(_OWORD *)v4;
  retstr->sourceChannelCohort.timestamp = v7;
  retstr->stockEntityCohorts._rawValue = v5;
}

double HeadlineScores.Cohort.clicks.getter()
{
  return *(double *)v0;
}

double HeadlineScores.Cohort.impressions.getter()
{
  return *(double *)(v0 + 8);
}

uint64_t HeadlineScores.Cohort.tag.getter()
{
  return 42;
}

uint64_t HeadlineScores.Cohort.updatedDate.getter()
{
  return sub_1AFFC9878();
}

uint64_t sub_1AFEFF48C()
{
  uint64_t v1 = 0x6973736572706D69;
  if (*v0 != 1) {
    uint64_t v1 = 0x6D617473656D6974;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x736B63696C63;
  }
}

uint64_t sub_1AFEFF4F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1AFF01210(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AFEFF518(uint64_t a1)
{
  unint64_t v2 = sub_1AFEFF764();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFEFF554(uint64_t a1)
{
  unint64_t v2 = sub_1AFEFF764();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t HeadlineScores.Cohort.encode(to:)(void *a1)
{
  sub_1AFF00830(0, &qword_1E9AFC758, (uint64_t (*)(void))sub_1AFEFF764, (uint64_t)&type metadata for HeadlineScores.Cohort.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  Swift::Double v7 = &v9[-v6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFEFF764();
  sub_1AFFCBE78();
  v9[15] = 0;
  sub_1AFFCBC28();
  if (!v1)
  {
    v9[14] = 1;
    sub_1AFFCBC28();
    v9[13] = 2;
    sub_1AFFCBC28();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1AFEFF764()
{
  unint64_t result = qword_1EB816F08;
  if (!qword_1EB816F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816F08);
  }
  return result;
}

uint64_t HeadlineScores.Cohort.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  v18 = a2;
  sub_1AFF00830(0, &qword_1EB818268, (uint64_t (*)(void))sub_1AFEFF764, (uint64_t)&type metadata for HeadlineScores.Cohort.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  v8 = (char *)&v18 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFEFF764();
  sub_1AFFCBE68();
  if (!v2)
  {
    uint64_t v9 = v6;
    v10 = v18;
    char v21 = 0;
    sub_1AFFCBB38();
    uint64_t v12 = v11;
    char v20 = 1;
    sub_1AFFCBB38();
    uint64_t v14 = v13;
    char v19 = 2;
    sub_1AFFCBB38();
    uint64_t v17 = v16;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
    void *v10 = v12;
    v10[1] = v14;
    v10[2] = v17;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1AFEFF9D0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return HeadlineScores.Cohort.init(from:)(a1, a2);
}

uint64_t sub_1AFEFF9E8(void *a1)
{
  return HeadlineScores.Cohort.encode(to:)(a1);
}

uint64_t sub_1AFEFFA00()
{
  return 42;
}

uint64_t sub_1AFEFFA0C()
{
  return sub_1AFFC9878();
}

uint64_t HeadlineScores.StockEntityCohort.stockEntityID.getter()
{
  uint64_t v1 = *v0;
  sub_1AFFC8E38();
  return v1;
}

double HeadlineScores.StockEntityCohort.clicks.getter()
{
  return *(double *)(v0 + 16);
}

double HeadlineScores.StockEntityCohort.impressions.getter()
{
  return *(double *)(v0 + 24);
}

uint64_t HeadlineScores.StockEntityCohort.updatedDate.getter()
{
  return sub_1AFFC9878();
}

uint64_t sub_1AFEFFA5C()
{
  uint64_t result = 0x746E456B636F7473;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x736B63696C63;
      break;
    case 2:
      uint64_t result = 0x6973736572706D69;
      break;
    case 3:
      uint64_t result = 0x6D617473656D6974;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1AFEFFB00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1AFF01384(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AFEFFB28(uint64_t a1)
{
  unint64_t v2 = sub_1AFEFFDA4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFEFFB64(uint64_t a1)
{
  unint64_t v2 = sub_1AFEFFDA4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t HeadlineScores.StockEntityCohort.encode(to:)(void *a1)
{
  sub_1AFF00830(0, &qword_1E9AFC760, (uint64_t (*)(void))sub_1AFEFFDA4, (uint64_t)&type metadata for HeadlineScores.StockEntityCohort.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v9 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFEFFDA4();
  sub_1AFFCBE78();
  char v13 = 0;
  uint64_t v7 = v9;
  sub_1AFFCBC08();
  if (!v7)
  {
    char v12 = 1;
    sub_1AFFCBC28();
    char v11 = 2;
    sub_1AFFCBC28();
    char v10 = 3;
    sub_1AFFCBC28();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1AFEFFDA4()
{
  unint64_t result = qword_1EB816EE8;
  if (!qword_1EB816EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816EE8);
  }
  return result;
}

uint64_t HeadlineScores.StockEntityCohort.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  char v21 = a2;
  sub_1AFF00830(0, &qword_1EB818260, (uint64_t (*)(void))sub_1AFEFFDA4, (uint64_t)&type metadata for HeadlineScores.StockEntityCohort.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  v8 = (char *)&v21 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFEFFDA4();
  sub_1AFFCBE68();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  char v10 = v21;
  char v25 = 0;
  uint64_t v11 = sub_1AFFCBB18();
  uint64_t v13 = v12;
  char v24 = 1;
  sub_1AFFC8E38();
  sub_1AFFCBB38();
  uint64_t v15 = v14;
  char v23 = 2;
  sub_1AFFCBB38();
  uint64_t v17 = v16;
  char v22 = 3;
  sub_1AFFCBB38();
  uint64_t v20 = v19;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  uint64_t *v10 = v11;
  v10[1] = v13;
  v10[2] = v15;
  v10[3] = v17;
  v10[4] = v20;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFF0007C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return HeadlineScores.StockEntityCohort.init(from:)(a1, a2);
}

uint64_t sub_1AFF00094(void *a1)
{
  return HeadlineScores.StockEntityCohort.encode(to:)(a1);
}

uint64_t sub_1AFF000AC()
{
  return sub_1AFFC9878();
}

uint64_t sub_1AFF000B4()
{
  unint64_t v1 = 0xD000000000000013;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000012;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6F436C61626F6C67;
  }
}

uint64_t sub_1AFF00124@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1AFF01580(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AFF0014C(uint64_t a1)
{
  unint64_t v2 = sub_1AFF0042C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFF00188(uint64_t a1)
{
  unint64_t v2 = sub_1AFF0042C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t HeadlineScores.encode(to:)(void *a1)
{
  sub_1AFF00830(0, &qword_1E9AFC768, (uint64_t (*)(void))sub_1AFF0042C, (uint64_t)&type metadata for HeadlineScores.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  v8 = (char *)&v15 - v7;
  long long v17 = *v1;
  uint64_t v10 = *((void *)v1 + 2);
  uint64_t v9 = *((void *)v1 + 3);
  uint64_t v11 = *((void *)v1 + 4);
  uint64_t v12 = *((void *)v1 + 5);
  uint64_t v16 = *((void *)v1 + 6);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFF0042C();
  sub_1AFFCBE78();
  long long v18 = v17;
  uint64_t v19 = v10;
  char v20 = 0;
  sub_1AFF00480();
  sub_1AFFCBC58();
  if (!v2)
  {
    uint64_t v13 = v16;
    *(void *)&long long v18 = v9;
    *((void *)&v18 + 1) = v11;
    uint64_t v19 = v12;
    char v20 = 1;
    sub_1AFFCBC58();
    *(void *)&long long v18 = v13;
    char v20 = 2;
    sub_1AFF004D4();
    sub_1AFF008EC(&qword_1E9AFC778, (void (*)(void))sub_1AFF0052C);
    sub_1AFFCBC58();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1AFF0042C()
{
  unint64_t result = qword_1EB816ED0;
  if (!qword_1EB816ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816ED0);
  }
  return result;
}

unint64_t sub_1AFF00480()
{
  unint64_t result = qword_1E9AFC770;
  if (!qword_1E9AFC770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC770);
  }
  return result;
}

void sub_1AFF004D4()
{
  if (!qword_1EB817F58)
  {
    unint64_t v0 = sub_1AFFCB288();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB817F58);
    }
  }
}

unint64_t sub_1AFF0052C()
{
  unint64_t result = qword_1E9AFC780;
  if (!qword_1E9AFC780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC780);
  }
  return result;
}

uint64_t HeadlineScores.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1AFF00830(0, &qword_1EB818258, (uint64_t (*)(void))sub_1AFF0042C, (uint64_t)&type metadata for HeadlineScores.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v19 = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  v8 = (char *)&v19 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFF0042C();
  sub_1AFFCBE68();
  if (!v2)
  {
    uint64_t v9 = v6;
    char v23 = 0;
    sub_1AFF00898();
    uint64_t v10 = v19;
    sub_1AFFCBB58();
    uint64_t v11 = v20;
    uint64_t v12 = v21;
    uint64_t v13 = v22;
    char v23 = 1;
    sub_1AFFCBB58();
    uint64_t v14 = v20;
    uint64_t v15 = v21;
    uint64_t v16 = v22;
    sub_1AFF004D4();
    char v23 = 2;
    sub_1AFF008EC(&qword_1EB817F60, (void (*)(void))sub_1AFF00958);
    sub_1AFFCBB58();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v10);
    uint64_t v18 = v20;
    *a2 = v11;
    a2[1] = v12;
    a2[2] = v13;
    a2[3] = v14;
    a2[4] = v15;
    a2[5] = v16;
    a2[6] = v18;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1AFF00830(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_1AFF00898()
{
  unint64_t result = qword_1EB816F20;
  if (!qword_1EB816F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816F20);
  }
  return result;
}

uint64_t sub_1AFF008EC(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1AFF004D4();
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1AFF00958()
{
  unint64_t result = qword_1EB816F00;
  if (!qword_1EB816F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816F00);
  }
  return result;
}

uint64_t sub_1AFF009AC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return HeadlineScores.init(from:)(a1, a2);
}

uint64_t sub_1AFF009C4(void *a1)
{
  return HeadlineScores.encode(to:)(a1);
}

uint64_t destroy for HeadlineScores()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for HeadlineScores(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v3 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v3;
  sub_1AFFC8E38();
  return a1;
}

void *assignWithCopy for HeadlineScores(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for HeadlineScores(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for HeadlineScores(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HeadlineScores(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HeadlineScores()
{
  return &type metadata for HeadlineScores;
}

uint64_t getEnumTagSinglePayload for HeadlineScores.Cohort(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for HeadlineScores.Cohort(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 24) = v3;
  return result;
}

ValueMetadata *type metadata accessor for HeadlineScores.Cohort()
{
  return &type metadata for HeadlineScores.Cohort;
}

uint64_t initializeWithCopy for HeadlineScores.StockEntityCohort(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  sub_1AFFC8E38();
  return a1;
}

void *assignWithCopy for HeadlineScores.StockEntityCohort(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  return a1;
}

uint64_t assignWithTake for HeadlineScores.StockEntityCohort(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for HeadlineScores.StockEntityCohort()
{
  return &type metadata for HeadlineScores.StockEntityCohort;
}

ValueMetadata *type metadata accessor for HeadlineScores.CodingKeys()
{
  return &type metadata for HeadlineScores.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for HeadlineScores.StockEntityCohort.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFF00DBCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HeadlineScores.StockEntityCohort.CodingKeys()
{
  return &type metadata for HeadlineScores.StockEntityCohort.CodingKeys;
}

unsigned char *_s10StocksCore14HeadlineScoresV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFF00EC0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HeadlineScores.Cohort.CodingKeys()
{
  return &type metadata for HeadlineScores.Cohort.CodingKeys;
}

unint64_t sub_1AFF00EFC()
{
  unint64_t result = qword_1E9AFC788;
  if (!qword_1E9AFC788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC788);
  }
  return result;
}

unint64_t sub_1AFF00F54()
{
  unint64_t result = qword_1E9AFC790;
  if (!qword_1E9AFC790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC790);
  }
  return result;
}

unint64_t sub_1AFF00FAC()
{
  unint64_t result = qword_1E9AFC798;
  if (!qword_1E9AFC798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC798);
  }
  return result;
}

unint64_t sub_1AFF01004()
{
  unint64_t result = qword_1EB816EE0;
  if (!qword_1EB816EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816EE0);
  }
  return result;
}

unint64_t sub_1AFF0105C()
{
  unint64_t result = qword_1EB816ED8;
  if (!qword_1EB816ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816ED8);
  }
  return result;
}

unint64_t sub_1AFF010B4()
{
  unint64_t result = qword_1EB816EF8;
  if (!qword_1EB816EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816EF8);
  }
  return result;
}

unint64_t sub_1AFF0110C()
{
  unint64_t result = qword_1EB816EF0;
  if (!qword_1EB816EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816EF0);
  }
  return result;
}

unint64_t sub_1AFF01164()
{
  unint64_t result = qword_1EB816F18;
  if (!qword_1EB816F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816F18);
  }
  return result;
}

unint64_t sub_1AFF011BC()
{
  unint64_t result = qword_1EB816F10;
  if (!qword_1EB816F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816F10);
  }
  return result;
}

uint64_t sub_1AFF01210(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x736B63696C63 && a2 == 0xE600000000000000;
  if (v2 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6973736572706D69 && a2 == 0xEB00000000736E6FLL || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1AFFCBCE8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1AFF01384(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746E456B636F7473 && a2 == 0xED00004449797469;
  if (v2 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736B63696C63 && a2 == 0xE600000000000000 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6973736572706D69 && a2 == 0xEB00000000736E6FLL || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1AFFCBCE8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1AFF01580(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6F436C61626F6C67 && a2 == 0xEC00000074726F68;
  if (v2 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001AFFFA990 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001AFFFA9B0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1AFFCBCE8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

unint64_t destroy for HeadlineOrigin(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for HeadlineOrigin(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    long long v11 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v11;
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    long long v12 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v12;
    long long v13 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v13;
    long long v14 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v14;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    uint64_t v4 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v4;
    uint64_t v5 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v5;
    uint64_t v6 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = v6;
    *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
    uint64_t v7 = *(void *)(a2 + 80);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = v7;
    uint64_t v8 = *(void *)(a2 + 96);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = v8;
    uint64_t v9 = *(void *)(a2 + 112);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = v9;
    uint64_t v10 = *(void *)(a2 + 128);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = v10;
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
  }
  return a1;
}

uint64_t assignWithCopy for HeadlineOrigin(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a2 + 8);
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    long long v5 = *(_OWORD *)(a2 + 16);
    long long v6 = *(_OWORD *)(a2 + 32);
    long long v7 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v7;
    *(_OWORD *)(a1 + 16) = v5;
    *(_OWORD *)(a1 + 32) = v6;
    long long v8 = *(_OWORD *)(a2 + 80);
    long long v9 = *(_OWORD *)(a2 + 96);
    long long v10 = *(_OWORD *)(a2 + 112);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(_OWORD *)(a1 + 96) = v9;
    *(_OWORD *)(a1 + 112) = v10;
    *(_OWORD *)(a1 + 80) = v8;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for HeadlineOrigin(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    long long v12 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v12;
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    long long v13 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v13;
    long long v14 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v14;
    long long v15 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v15;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v8 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v11;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for HeadlineOrigin(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *(unsigned char *)(a1 + 136)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for HeadlineOrigin(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)(result + 128) = 0;
    *(_OWORD *)(result + 96) = 0u;
    *(_OWORD *)(result + 112) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)unint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 136) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 136) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

double sub_1AFF01D0C(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    double result = 0.0;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 120) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(void *)(a1 + 8) = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for HeadlineOrigin()
{
  return &type metadata for HeadlineOrigin;
}

uint64_t sub_1AFF01D60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t sub_1AFF01D74()
{
  return 0x6E696C6B72617073;
}

uint64_t sub_1AFF01D90(uint64_t a1, uint64_t a2)
{
  uint64_t v15 = a2;
  uint64_t v3 = v2;
  uint64_t v12 = a1;
  uint64_t v4 = sub_1AFFC9E08();
  uint64_t v13 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  long long v14 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1AFFCA2F8();
  MEMORY[0x1F4188790](v6);
  uint64_t v16 = MEMORY[0x1E4FBC860];
  sub_1AFF0295C((unint64_t *)&unk_1EB81ABD0, 255, MEMORY[0x1E4FAACC8]);
  sub_1AFD67240(0);
  sub_1AFF0295C((unint64_t *)&qword_1EB81AC58, 255, sub_1AFD67240);
  sub_1AFFCB738();
  sub_1AFF029A4();
  swift_allocObject();
  *(void *)(v2 + 56) = sub_1AFFC9F68();
  uint64_t v7 = v12;
  sub_1AFD2CEB0(v12, v2 + 16);
  sub_1AFF02E60(0, &qword_1EB81A450, MEMORY[0x1E4FAA910], MEMORY[0x1E4FBBE00]);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1AFFD05F0;
  sub_1AFFC9DF8();
  uint64_t v16 = v8;
  sub_1AFF0295C((unint64_t *)&unk_1EB81ABB0, 255, MEMORY[0x1E4FAA910]);
  sub_1AFD673A0(0);
  sub_1AFF0295C((unint64_t *)&qword_1EB81AC30, 255, sub_1AFD673A0);
  sub_1AFFCB738();
  sub_1AFF02BCC(0, &qword_1EB816C30, &qword_1EB817E08, MEMORY[0x1E4FAA660], MEMORY[0x1E4FAAFF0]);
  swift_allocObject();
  uint64_t v9 = sub_1AFFCA528();
  __swift_destroy_boxed_opaque_existential_1(v7);
  *(void *)(v3 + 64) = v9;
  return v3;
}

uint64_t sub_1AFF02128@<X0>(uint64_t *a1@<X8>)
{
  sub_1AFFCA508();
  sub_1AFF02ACC(0, &qword_1EB817E08, MEMORY[0x1E4FAA660]);
  swift_allocObject();
  uint64_t result = sub_1AFFCA988();
  *a1 = result;
  return result;
}

uint64_t sub_1AFF021D4()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SparklineManager()
{
  return self;
}

ValueMetadata *type metadata accessor for SparklineManager.StoreDescriptor()
{
  return &type metadata for SparklineManager.StoreDescriptor;
}

uint64_t sub_1AFF02250(uint64_t a1, uint64_t a2)
{
  uint64_t v39 = a1;
  uint64_t v4 = sub_1AFFC9F58();
  uint64_t v41 = *(void *)(v4 - 8);
  uint64_t v42 = v4;
  MEMORY[0x1F4188790](v4);
  v40 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAA650];
  sub_1AFF02ACC(0, &qword_1EB817DD8, MEMORY[0x1E4FAA650]);
  uint64_t v8 = v7;
  uint64_t v45 = *(void *)(v7 - 8);
  uint64_t v43 = *(void *)(v45 + 64);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v32 - v9;
  sub_1AFF02BCC(0, &qword_1EB817DE0, &qword_1EB817DD8, v6, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v11 - 8);
  v44 = (char *)v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)v32 - v14;
  uint64_t v16 = sub_1AFFC9DE8();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB817C00 != -1) {
    swift_once();
  }
  sub_1AFF0295C(&qword_1EB8170A0, v18, (void (*)(uint64_t))type metadata accessor for SparklineManager);
  sub_1AFFC9BB8();
  v35 = v20;
  if (LOBYTE(v46[0]) == 1) {
    (*(void (**)(char *, void, uint64_t))(v17 + 104))(v20, *MEMORY[0x1E4FAA8B0], v16);
  }
  else {
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v20, a2, v16);
  }
  uint64_t v36 = v17;
  uint64_t v38 = v16;
  sub_1AFD2CEB0(v2 + 16, (uint64_t)v46);
  uint64_t v34 = swift_allocObject();
  sub_1AFD80454(v46, v34 + 16);
  uint64_t v37 = v2;
  sub_1AFFCA508();
  sub_1AFFCA998();
  swift_release();
  uint64_t v21 = v45;
  uint64_t v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v45 + 48);
  uint64_t result = v22(v15, 1, v8);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    v33 = *(void (**)(char *, char *, uint64_t))(v21 + 16);
    v33(v10, v15, v8);
    uint64_t v24 = *(unsigned __int8 *)(v21 + 80);
    uint64_t v25 = (v24 + 16) & ~v24;
    v32[1] = v24 | 7;
    v32[2] = v25 + v43;
    uint64_t v43 = swift_allocObject();
    v32[0] = *(void *)(v21 + 32);
    ((void (*)(uint64_t, char *, uint64_t))v32[0])(v43 + v25, v10, v8);
    uint64_t v45 = *(void *)(v21 + 8);
    ((void (*)(char *, uint64_t))v45)(v15, v8);
    sub_1AFFCA508();
    v26 = v44;
    sub_1AFFCA998();
    swift_release();
    uint64_t result = v22(v26, 1, v8);
    if (result != 1)
    {
      sub_1AFF02D64(0, &qword_1EB817D48, MEMORY[0x1E4FAB070]);
      v33(v10, v26, v8);
      uint64_t v27 = swift_allocObject();
      ((void (*)(uint64_t, char *, uint64_t))v32[0])(v27 + v25, v10, v8);
      ((void (*)(char *, uint64_t))v45)(v26, v8);
      *(void *)&v46[0] = MEMORY[0x1E4FBC860];
      sub_1AFF0295C((unint64_t *)&qword_1EB81ABC8, 255, MEMORY[0x1E4FAAA28]);
      sub_1AFD68440(0);
      sub_1AFF0295C((unint64_t *)&qword_1EB81AC40, 255, sub_1AFD68440);
      v28 = v40;
      uint64_t v29 = v42;
      sub_1AFFCB738();
      v30 = v35;
      uint64_t v31 = sub_1AFFCA608();
      swift_release();
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v28, v29);
      (*(void (**)(char *, uint64_t))(v36 + 8))(v30, v38);
      return v31;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1AFF02938(uint64_t a1, uint64_t a2)
{
  return sub_1AFF02250(a1, a2);
}

uint64_t sub_1AFF0295C(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1AFF029A4()
{
  if (!qword_1EB817CB8)
  {
    sub_1AFD67340();
    sub_1AFF02D64(255, (unint64_t *)&qword_1EB817E88, MEMORY[0x1E4FBAEA0]);
    sub_1AFF0295C(&qword_1EB818048, 255, (void (*)(uint64_t))sub_1AFD67340);
    unint64_t v0 = sub_1AFFC9F88();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB817CB8);
    }
  }
}

uint64_t sub_1AFF02A70@<X0>(uint64_t *a1@<X8>)
{
  return sub_1AFF02128(a1);
}

unint64_t sub_1AFF02A78()
{
  unint64_t result = qword_1EB817098;
  if (!qword_1EB817098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817098);
  }
  return result;
}

void sub_1AFF02ACC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for SparklineManager.StoreDescriptor;
    v8[1] = type metadata accessor for Chart(255);
    v8[2] = sub_1AFF02A78();
    v8[3] = sub_1AFF0295C(&qword_1EB817AA8, 255, (void (*)(uint64_t))type metadata accessor for Chart);
    v8[4] = sub_1AFF0295C(&qword_1EB817AA0, 255, (void (*)(uint64_t))type metadata accessor for Chart);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1AFF02BCC(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t, void *), uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_1AFF02ACC(255, a3, a4);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1AFF02C34()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1AFF02C6C(uint64_t a1)
{
  uint64_t v3 = v1[5];
  uint64_t v4 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 8))(a1, v3, v4);
}

uint64_t sub_1AFF02CCC()
{
  return sub_1AFFCA948();
}

void sub_1AFF02D64(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void, uint64_t, void))
{
  if (!*a2)
  {
    uint64_t v6 = type metadata accessor for Chart(255);
    unint64_t v7 = a3(a1, MEMORY[0x1E4FBB1A0], v6, MEMORY[0x1E4FBB1B0]);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1AFF02DD8()
{
  return sub_1AFFCA958();
}

void sub_1AFF02E60(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1AFF02EC4(void *a1, uint64_t a2)
{
  sub_1AFF03F1C(0, &qword_1E9AFC7D0, (uint64_t (*)(void))sub_1AFF03C24, (uint64_t)&type metadata for TestTopStoriesService.TestData.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v8 = (char *)v10 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFF03C24();
  sub_1AFFCBE78();
  v10[1] = a2;
  sub_1AFD40AA0(0, &qword_1E9AFC7B8);
  sub_1AFF03CCC(&qword_1E9AFC7D8, (void (*)(void))sub_1AFF03D48);
  sub_1AFFCBC58();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1AFF03084()
{
  return 0x49656C6369747261;
}

uint64_t sub_1AFF030A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x49656C6369747261 && a2 == 0xE900000000000064)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1AFFCBCE8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1AFF03144(uint64_t a1)
{
  unint64_t v2 = sub_1AFF03EC8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFF03180(uint64_t a1)
{
  unint64_t v2 = sub_1AFF03EC8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFF031BC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v15 = a2;
  sub_1AFF03F1C(0, &qword_1E9AFC800, (uint64_t (*)(void))sub_1AFF03EC8, (uint64_t)&type metadata for TestTopStoriesService.TestData.Article.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v8 = (char *)&v14 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFF03EC8();
  sub_1AFFCBE68();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v15;
  uint64_t v10 = sub_1AFFCBB18();
  uint64_t v12 = v11;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *uint64_t v9 = v10;
  v9[1] = v12;
  return result;
}

uint64_t sub_1AFF0336C(void *a1)
{
  sub_1AFF03F1C(0, &qword_1E9AFC810, (uint64_t (*)(void))sub_1AFF03EC8, (uint64_t)&type metadata for TestTopStoriesService.TestData.Article.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFF03EC8();
  sub_1AFFCBE78();
  sub_1AFFCBC08();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1AFF034D4()
{
  return 0x73656C6369747261;
}

uint64_t sub_1AFF034EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x73656C6369747261 && a2 == 0xE800000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1AFFCBCE8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1AFF03584(uint64_t a1)
{
  unint64_t v2 = sub_1AFF03C24();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFF035C0(uint64_t a1)
{
  unint64_t v2 = sub_1AFF03C24();

  return MEMORY[0x1F41862B0](a1, v2);
}

void *sub_1AFF035FC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1AFF03A20(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1AFF03628(void *a1)
{
  return sub_1AFF02EC4(a1, *v1);
}

uint64_t sub_1AFF03644(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  int64_t v4 = *(void *)(*a1 + 16);
  uint64_t v5 = MEMORY[0x1E4FBC860];
  if (v4)
  {
    uint64_t v16 = a2;
    v18[19] = v2;
    v18[0] = MEMORY[0x1E4FBC860];
    sub_1AFFC8E38();
    sub_1AFD9DA10(0, v4, 0);
    uint64_t v5 = v18[0];
    uint64_t v6 = (uint64_t *)(v3 + 40);
    do
    {
      uint64_t v7 = *(v6 - 1);
      uint64_t v8 = *v6;
      v18[0] = v5;
      unint64_t v10 = *(void *)(v5 + 16);
      unint64_t v9 = *(void *)(v5 + 24);
      sub_1AFFC8E38();
      if (v10 >= v9 >> 1)
      {
        sub_1AFD9DA10(v9 > 1, v10 + 1, 1);
        uint64_t v5 = v18[0];
      }
      v6 += 2;
      *(void *)(v5 + 16) = v10 + 1;
      uint64_t v11 = v5 + 16 * v10;
      *(void *)(v11 + 32) = v7;
      *(void *)(v11 + 40) = v8;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    a2 = v16;
  }
  uint64_t v13 = a2[6];
  uint64_t v12 = a2[7];
  __swift_project_boxed_opaque_existential_1(a2 + 3, v13);
  sub_1AFD2D868((uint64_t)v18);
  sub_1AFD2D884((uint64_t)v18, (uint64_t)v17);
  uint64_t v14 = (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t, uint64_t))(v12 + 8))(v5, v17, v13, v12);
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1AFF0379C()
{
  return sub_1AFFCA6F8();
}

uint64_t sub_1AFF037FC()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TestTopStoriesService()
{
  return self;
}

uint64_t sub_1AFF03860()
{
  sub_1AFFCA7C8();
  sub_1AFFC8E48();
  uint64_t v0 = (void *)sub_1AFFCA5E8();
  sub_1AFD2D58C();
  sub_1AFFCA668();
  swift_release();
  swift_release();

  uint64_t v1 = (void *)sub_1AFFCA5E8();
  sub_1AFD40AA0(0, (unint64_t *)&qword_1EB818000);
  uint64_t v2 = sub_1AFFCA668();
  swift_release();

  return v2;
}

uint64_t sub_1AFF03960()
{
  return sub_1AFFCA008();
}

uint64_t sub_1AFF039A0(uint64_t *a1)
{
  return sub_1AFF03644(a1, v1);
}

unint64_t sub_1AFF039BC()
{
  unint64_t result = qword_1E9AFC7A0;
  if (!qword_1E9AFC7A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC7A0);
  }
  return result;
}

ValueMetadata *type metadata accessor for TestTopStoriesService.TestData()
{
  return &type metadata for TestTopStoriesService.TestData;
}

void *sub_1AFF03A20(void *a1)
{
  sub_1AFF03F1C(0, &qword_1E9AFC7A8, (uint64_t (*)(void))sub_1AFF03C24, (uint64_t)&type metadata for TestTopStoriesService.TestData.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v11 - v6;
  uint64_t v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFF03C24();
  unint64_t v9 = v8;
  sub_1AFFCBE68();
  if (!v1)
  {
    sub_1AFD40AA0(0, &qword_1E9AFC7B8);
    sub_1AFF03CCC(&qword_1E9AFC7C0, (void (*)(void))sub_1AFF03C78);
    sub_1AFFCBB58();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    unint64_t v9 = (void *)v11[1];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v9;
}

unint64_t sub_1AFF03C24()
{
  unint64_t result = qword_1E9AFC7B0;
  if (!qword_1E9AFC7B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC7B0);
  }
  return result;
}

unint64_t sub_1AFF03C78()
{
  unint64_t result = qword_1E9AFC7C8;
  if (!qword_1E9AFC7C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC7C8);
  }
  return result;
}

uint64_t sub_1AFF03CCC(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1AFD40AA0(255, &qword_1E9AFC7B8);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1AFF03D48()
{
  unint64_t result = qword_1E9AFC7E0;
  if (!qword_1E9AFC7E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC7E0);
  }
  return result;
}

ValueMetadata *type metadata accessor for TestTopStoriesService.TestData.CodingKeys()
{
  return &type metadata for TestTopStoriesService.TestData.CodingKeys;
}

ValueMetadata *type metadata accessor for TestTopStoriesService.TestData.Article()
{
  return &type metadata for TestTopStoriesService.TestData.Article;
}

unint64_t sub_1AFF03DC4()
{
  unint64_t result = qword_1E9AFC7E8;
  if (!qword_1E9AFC7E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC7E8);
  }
  return result;
}

unint64_t sub_1AFF03E1C()
{
  unint64_t result = qword_1E9AFC7F0;
  if (!qword_1E9AFC7F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC7F0);
  }
  return result;
}

unint64_t sub_1AFF03E74()
{
  unint64_t result = qword_1E9AFC7F8;
  if (!qword_1E9AFC7F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC7F8);
  }
  return result;
}

unint64_t sub_1AFF03EC8()
{
  unint64_t result = qword_1E9AFC808;
  if (!qword_1E9AFC808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC808);
  }
  return result;
}

void sub_1AFF03F1C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unsigned char *_s10StocksCore21TestTopStoriesServiceC8TestDataV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1AFF04020);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for TestTopStoriesService.TestData.Article.CodingKeys()
{
  return &type metadata for TestTopStoriesService.TestData.Article.CodingKeys;
}

unint64_t sub_1AFF0405C()
{
  unint64_t result = qword_1E9AFC818;
  if (!qword_1E9AFC818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC818);
  }
  return result;
}

unint64_t sub_1AFF040B4()
{
  unint64_t result = qword_1E9AFC820;
  if (!qword_1E9AFC820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC820);
  }
  return result;
}

unint64_t sub_1AFF0410C()
{
  unint64_t result = qword_1E9AFC828;
  if (!qword_1E9AFC828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC828);
  }
  return result;
}

uint64_t type metadata accessor for NewsStockMetadataService()
{
  return self;
}

uint64_t sub_1AFF04184(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  sub_1AFE166CC();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v23 = *a2;
  uint64_t v13 = *((void *)a2 + 2);
  uint64_t v14 = *((void *)a2 + 3);
  swift_getObjectType();
  uint64_t v15 = sub_1AFFC9DE8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v12, 1, 1, v15);
  sub_1AFE58214(a1);
  sub_1AFD562CC((uint64_t)v12);
  uint64_t v16 = v5 + 3;
  uint64_t v18 = v5[6];
  uint64_t v17 = v5[7];
  __swift_project_boxed_opaque_existential_1(v16, v18);
  long long v24 = v23;
  uint64_t v25 = v13;
  uint64_t v26 = v14;
  (*(void (**)(uint64_t, long long *, uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 8))(a1, &v24, a3, a4, v18, v17);
  uint64_t v19 = (void *)sub_1AFFCA5E8();
  sub_1AFFCA5D8();
  swift_release();
  swift_release();

  uint64_t v20 = (void *)sub_1AFFCA5E8();
  sub_1AFF049D8(0, (unint64_t *)&qword_1EB817EA0, MEMORY[0x1E4FBAEA0]);
  uint64_t v21 = sub_1AFFCA678();
  swift_release();

  return v21;
}

uint64_t sub_1AFF0437C@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  long long v5 = a1[7];
  long long v36 = a1[6];
  long long v37 = v5;
  uint64_t v38 = *((void *)a1 + 16);
  long long v6 = a1[3];
  long long v32 = a1[2];
  long long v33 = v6;
  long long v7 = a1[5];
  long long v34 = a1[4];
  long long v35 = v7;
  long long v8 = a1[1];
  long long v30 = *a1;
  long long v31 = v8;
  if (!*(void *)(a2 + 16)) {
    goto LABEL_33;
  }
  sub_1AFFC8E38();
  unint64_t v10 = sub_1AFD79CC8(v31, *((uint64_t *)&v31 + 1));
  if ((v11 & 1) == 0)
  {
LABEL_32:
    swift_bridgeObjectRelease();
LABEL_33:
    long long v22 = a1[7];
    *(_OWORD *)(a3 + 96) = a1[6];
    *(_OWORD *)(a3 + 112) = v22;
    *(void *)(a3 + 128) = *((void *)a1 + 16);
    long long v23 = a1[3];
    *(_OWORD *)(a3 + 32) = a1[2];
    *(_OWORD *)(a3 + 48) = v23;
    long long v24 = a1[5];
    *(_OWORD *)(a3 + 64) = a1[4];
    *(_OWORD *)(a3 + 80) = v24;
    long long v25 = a1[1];
    *(_OWORD *)a3 = *a1;
    *(_OWORD *)(a3 + 16) = v25;
    return sub_1AFD76370((uint64_t)&v30);
  }
  uint64_t v12 = (void *)(*(void *)(a2 + 56) + 104 * v10);
  uint64_t v13 = v12[4];
  unint64_t v14 = v12[5];
  uint64_t v29 = v12[6];
  unint64_t v15 = v12[7];
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  uint64_t v27 = v13;
  if (v14)
  {
    uint64_t v16 = HIBYTE(v14) & 0xF;
    if ((v14 & 0x2000000000000000) == 0) {
      uint64_t v16 = v13 & 0xFFFFFFFFFFFFLL;
    }
    if (v16)
    {
      sub_1AFFC8E38();
      uint64_t v28 = v14;
    }
    else
    {
      uint64_t v27 = 0;
      uint64_t v28 = 0;
    }
  }
  else
  {
    uint64_t v28 = 0;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v15)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v17 = HIBYTE(v15) & 0xF;
    unint64_t v18 = v28;
    if ((v15 & 0x2000000000000000) == 0) {
      uint64_t v17 = v29 & 0xFFFFFFFFFFFFLL;
    }
    if (!v17)
    {
      swift_bridgeObjectRelease();
      uint64_t v29 = 0;
      unint64_t v15 = 0;
    }
    uint64_t v19 = v27;
    if (!v28) {
      goto LABEL_24;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v19 = v27;
    unint64_t v18 = v28;
    if (!v28) {
      goto LABEL_24;
    }
  }
  uint64_t v20 = HIBYTE(v18) & 0xF;
  if ((v18 & 0x2000000000000000) == 0) {
    uint64_t v20 = v19 & 0xFFFFFFFFFFFFLL;
  }
  if (v20)
  {
    char v39 = v34;
    if (!v15)
    {
      unint64_t v15 = v35;
      uint64_t v29 = *((void *)&v34 + 1);
      sub_1AFFC8E38();
    }
    goto LABEL_34;
  }
LABEL_24:
  if (!v15) {
    goto LABEL_32;
  }
  uint64_t v21 = HIBYTE(v15) & 0xF;
  if ((v15 & 0x2000000000000000) == 0) {
    uint64_t v21 = v29 & 0xFFFFFFFFFFFFLL;
  }
  if (!v21)
  {
    swift_bridgeObjectRelease();
    goto LABEL_32;
  }
  if (!v18)
  {
    uint64_t v28 = *((void *)&v32 + 1);
    uint64_t v19 = v32;
    sub_1AFFC8E38();
  }
  char v39 = v34;
LABEL_34:
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  return sub_1AFD789F8(v31, *((uint64_t *)&v31 + 1), v19, v28, v33, *((uint64_t *)&v33 + 1), &v39, v29, a3, v15, *((uint64_t *)&v35 + 1), v36, 0, 0, 0, 0);
}

uint64_t sub_1AFF04668@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  sub_1AFFC8E38();
  uint64_t v5 = sub_1AFF046E4(v4, v3);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v5;
  return result;
}

uint64_t sub_1AFF046C0(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4)
{
  return sub_1AFF04184(a1, a2, a3, a4);
}

uint64_t sub_1AFF046E4(uint64_t a1, uint64_t a2)
{
  uint64_t v48 = a2;
  sub_1AFF049D8(0, &qword_1EB818210, MEMORY[0x1E4FBBD58]);
  uint64_t result = sub_1AFFCB9D8();
  uint64_t v5 = (void *)result;
  int64_t v6 = 0;
  uint64_t v41 = a1;
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t v38 = a1 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v7;
  int64_t v39 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v40 = result + 64;
  if ((v9 & v7) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (unint64_t i = v11 | (v6 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v6 << 6))
  {
    uint64_t v16 = (uint64_t *)(*(void *)(v41 + 48) + 16 * i);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    uint64_t v19 = *(void *)(v41 + 56) + 136 * i;
    v46[0] = *(_OWORD *)v19;
    long long v20 = *(_OWORD *)(v19 + 64);
    long long v22 = *(_OWORD *)(v19 + 16);
    long long v21 = *(_OWORD *)(v19 + 32);
    long long v46[3] = *(_OWORD *)(v19 + 48);
    v46[4] = v20;
    v46[1] = v22;
    v46[2] = v21;
    long long v24 = *(_OWORD *)(v19 + 96);
    long long v23 = *(_OWORD *)(v19 + 112);
    long long v25 = *(_OWORD *)(v19 + 80);
    uint64_t v47 = *(void *)(v19 + 128);
    v46[6] = v24;
    v46[7] = v23;
    v46[5] = v25;
    long long v26 = *(_OWORD *)(v19 + 112);
    v44[6] = *(_OWORD *)(v19 + 96);
    v44[7] = v26;
    uint64_t v45 = *(void *)(v19 + 128);
    long long v27 = *(_OWORD *)(v19 + 48);
    v44[2] = *(_OWORD *)(v19 + 32);
    v44[3] = v27;
    long long v28 = *(_OWORD *)(v19 + 80);
    v44[4] = *(_OWORD *)(v19 + 64);
    v44[5] = v28;
    long long v29 = *(_OWORD *)(v19 + 16);
    v44[0] = *(_OWORD *)v19;
    v44[1] = v29;
    sub_1AFFC8E38();
    sub_1AFD76370((uint64_t)v46);
    sub_1AFF0437C(v44, v48, (uint64_t)v42);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_release();
      sub_1AFD76408((uint64_t)v46);
      return (uint64_t)v5;
    }
    uint64_t result = sub_1AFD76408((uint64_t)v46);
    *(void *)(v40 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    long long v30 = (void *)(v5[6] + 16 * i);
    void *v30 = v17;
    v30[1] = v18;
    uint64_t v31 = v5[7] + 136 * i;
    long long v32 = v42[3];
    *(_OWORD *)(v31 + 32) = v42[2];
    *(_OWORD *)(v31 + 48) = v32;
    long long v33 = v42[1];
    *(_OWORD *)uint64_t v31 = v42[0];
    *(_OWORD *)(v31 + 16) = v33;
    *(void *)(v31 + 128) = v43;
    long long v34 = v42[7];
    *(_OWORD *)(v31 + 96) = v42[6];
    *(_OWORD *)(v31 + 112) = v34;
    long long v35 = v42[5];
    *(_OWORD *)(v31 + 64) = v42[4];
    *(_OWORD *)(v31 + 80) = v35;
    uint64_t v36 = v5[2];
    BOOL v13 = __OFADD__(v36, 1);
    uint64_t v37 = v36 + 1;
    if (v13)
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    v5[2] = v37;
    if (v10) {
      goto LABEL_4;
    }
LABEL_5:
    BOOL v13 = __OFADD__(v6++, 1);
    if (v13) {
      goto LABEL_27;
    }
    if (v6 >= v39) {
      return (uint64_t)v5;
    }
    unint64_t v14 = *(void *)(v38 + 8 * v6);
    if (!v14) {
      break;
    }
LABEL_15:
    unint64_t v10 = (v14 - 1) & v14;
  }
  int64_t v15 = v6 + 1;
  if (v6 + 1 >= v39) {
    return (uint64_t)v5;
  }
  unint64_t v14 = *(void *)(v38 + 8 * v15);
  if (v14) {
    goto LABEL_14;
  }
  int64_t v15 = v6 + 2;
  if (v6 + 2 >= v39) {
    return (uint64_t)v5;
  }
  unint64_t v14 = *(void *)(v38 + 8 * v15);
  if (v14) {
    goto LABEL_14;
  }
  int64_t v15 = v6 + 3;
  if (v6 + 3 >= v39) {
    return (uint64_t)v5;
  }
  unint64_t v14 = *(void *)(v38 + 8 * v15);
  if (v14)
  {
LABEL_14:
    int64_t v6 = v15;
    goto LABEL_15;
  }
  while (1)
  {
    int64_t v6 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v6 >= v39) {
      return (uint64_t)v5;
    }
    unint64_t v14 = *(void *)(v38 + 8 * v6);
    ++v15;
    if (v14) {
      goto LABEL_15;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_1AFF049D8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, void, ValueMetadata *, void))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x1E4FBB1A0], &type metadata for Stock, MEMORY[0x1E4FBB1B0]);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t type metadata accessor for NewsUserProfileShim()
{
  return self;
}

id sub_1AFF04C14(long long *a1, uint64_t a2)
{
  uint64_t v4 = *((void *)a1 + 4);
  uint64_t v5 = (objc_class *)type metadata accessor for NewsUserProfileShim();
  long long v13 = a1[1];
  long long v14 = *a1;
  int64_t v6 = (char *)objc_allocWithZone(v5);
  uint64_t v7 = &v6[OBJC_IVAR____TtC10StocksCoreP33_6F15235305946077A82EB95D8E9A724719NewsUserProfileShim_userProfile];
  *(_OWORD *)uint64_t v7 = v14;
  *((_OWORD *)v7 + 1) = v13;
  *((void *)v7 + 4) = v4;
  v15.receiver = v6;
  v15.super_class = v5;
  id v8 = objc_msgSendSuper2(&v15, sel_init);
  id v9 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  id v10 = v8;
  id v11 = objc_msgSend(v9, sel_initWithPurchaseProvider_bundleSubscriptionProvider_configurationManager_, v10, v10, a2);

  swift_unknownObjectRelease();
  return v11;
}

uint64_t sub_1AFF04CFC()
{
  return 0x6174656D5F736473;
}

uint64_t sub_1AFF04D1C()
{
  return 0x302E302E31;
}

uint64_t sub_1AFF04D30@<X0>(uint64_t *a1@<X8>)
{
  sub_1AFFCA508();
  sub_1AFECCD9C();
  swift_allocObject();
  uint64_t result = sub_1AFFCA988();
  *a1 = result;
  return result;
}

uint64_t sub_1AFF04DAC(long long *a1)
{
  uint64_t result = sub_1AFFCA508();
  if (v3)
  {
    long long v4 = *a1;
    long long v5 = a1[1];
    uint64_t v6 = *((void *)a1 + 4);
    long long v9 = v4;
    sub_1AFF05054((uint64_t)&v5, (uint64_t)v8);
    sub_1AFEC6F3C((uint64_t)&v5 + 8, (uint64_t)v7);
    sub_1AFD8C5F8((uint64_t)&v9);
    sub_1AFDF3A80((uint64_t)v8);
    sub_1AFD8C5F8((uint64_t)v7);
    sub_1AFFCA9D8();
    return swift_release();
  }
  return result;
}

uint64_t sub_1AFF04F10@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_1AFFCA508();
  if ((void)v6)
  {
    sub_1AFFCA9C8();
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    long long v3 = v6;
    long long v4 = v7;
    uint64_t v5 = v8;
  }
  else
  {
    uint64_t v5 = 0;
    long long v3 = 0uLL;
    long long v4 = 0uLL;
  }
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = v5;
  return result;
}

uint64_t type metadata accessor for SDSMetadataCache()
{
  return self;
}

ValueMetadata *type metadata accessor for SDSMetadataCache.MetadataStoreDescriptor()
{
  return &type metadata for SDSMetadataCache.MetadataStoreDescriptor;
}

uint64_t sub_1AFF05054(uint64_t a1, uint64_t a2)
{
  sub_1AFDF3984();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AFF050B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1AFF050CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t sub_1AFF050E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_1AFF050F4(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v14 = MEMORY[0x1E4FBC860];
    sub_1AFD9DA10(0, v1, 0);
    uint64_t v2 = v14;
    uint64_t v4 = *(void *)(sub_1AFFC96E8() - 8);
    uint64_t v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v6 = *(void *)(v4 + 72);
    do
    {
      uint64_t v7 = sub_1AFFC9608();
      uint64_t v9 = v8;
      unint64_t v11 = *(void *)(v14 + 16);
      unint64_t v10 = *(void *)(v14 + 24);
      if (v11 >= v10 >> 1) {
        sub_1AFD9DA10(v10 > 1, v11 + 1, 1);
      }
      *(void *)(v14 + 16) = v11 + 1;
      uint64_t v12 = v14 + 16 * v11;
      *(void *)(v12 + 32) = v7;
      *(void *)(v12 + 40) = v9;
      v5 += v6;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1AFF0522C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1AFF08608(0, &qword_1EB81AE50, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBBE00]);
  uint64_t v6 = sub_1AFFC96E8();
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1AFFD05F0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v7 + 16))(v9 + v8, a1, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 8))(v9, a2, a3);
  swift_bridgeObjectRelease();
  unint64_t v10 = (void *)sub_1AFFCA5E8();
  type metadata accessor for SDSAuthToken();
  uint64_t v11 = sub_1AFFCA668();
  swift_release();

  return v11;
}

uint64_t sub_1AFF053B4(uint64_t *a1)
{
  sub_1AFF08520(0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for SDSAuthToken();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)v14 - v10;
  sub_1AFE2A0B4(*a1, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1AFF08554((uint64_t)v4, (uint64_t (*)(void))sub_1AFF08520);
    sub_1AFF085B4();
    swift_allocError();
    sub_1AFF08608(0, &qword_1EB819BC8, (uint64_t (*)(uint64_t))type metadata accessor for SDSAuthToken, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return sub_1AFFCA6E8();
  }
  else
  {
    sub_1AFF084BC((uint64_t)v4, (uint64_t)v11);
    sub_1AFE68D38((uint64_t)v11, (uint64_t)v8);
    sub_1AFF08608(0, &qword_1EB819BC8, (uint64_t (*)(uint64_t))type metadata accessor for SDSAuthToken, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    uint64_t v12 = sub_1AFFCA6F8();
    sub_1AFF08554((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for SDSAuthToken);
  }
  return v12;
}

uint64_t sub_1AFF0562C()
{
  return 0x687475615F736473;
}

uint64_t sub_1AFF05650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v16 = a2;
  uint64_t v12 = a1;
  uint64_t v13 = a3;
  uint64_t v4 = sub_1AFFC9E08();
  uint64_t v14 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  objc_super v15 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1AFFCA2F8();
  MEMORY[0x1F4188790](v6);
  uint64_t v17 = MEMORY[0x1E4FBC860];
  sub_1AFF0751C((unint64_t *)&unk_1EB81ABD0, MEMORY[0x1E4FAACC8]);
  sub_1AFD67240(0);
  sub_1AFF0751C((unint64_t *)&qword_1EB81AC58, sub_1AFD67240);
  sub_1AFFCB738();
  sub_1AFF07564();
  swift_allocObject();
  *(void *)(v3 + 96) = sub_1AFFC9F68();
  uint64_t v7 = v12;
  sub_1AFD2CEB0(v12, v3 + 16);
  uint64_t v8 = v13;
  sub_1AFD2CEB0(v13, v3 + 56);
  sub_1AFF08608(0, &qword_1EB81A450, MEMORY[0x1E4FAA910], MEMORY[0x1E4FBBE00]);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1AFFD05F0;
  sub_1AFFC9DF8();
  uint64_t v17 = v9;
  sub_1AFF0751C((unint64_t *)&unk_1EB81ABB0, MEMORY[0x1E4FAA910]);
  sub_1AFD673A0(0);
  sub_1AFF0751C((unint64_t *)&qword_1EB81AC30, sub_1AFD673A0);
  sub_1AFFCB738();
  sub_1AFF077A4(0, &qword_1EB818B50, &qword_1EB819C08, MEMORY[0x1E4FAA660], MEMORY[0x1E4FAAFF0]);
  swift_allocObject();
  uint64_t v10 = sub_1AFFCA528();
  __swift_destroy_boxed_opaque_existential_1(v8);
  __swift_destroy_boxed_opaque_existential_1(v7);
  *(void *)(v3 + 104) = v10;
  return v3;
}

uint64_t sub_1AFF059F0@<X0>(uint64_t *a1@<X8>)
{
  sub_1AFFCA508();
  sub_1AFF0780C(0, &qword_1EB819C08, MEMORY[0x1E4FAA660]);
  swift_allocObject();
  uint64_t result = sub_1AFFCA988();
  *a1 = result;
  return result;
}

uint64_t sub_1AFF05A9C(uint64_t a1, uint64_t a2)
{
  uint64_t v17 = a1;
  uint64_t v4 = sub_1AFFC9F58();
  uint64_t v18 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1AFFC9DE8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFFC9C48();
  swift_retain_n();
  sub_1AFFC9C28();
  if (qword_1EB81A300 != -1) {
    swift_once();
  }
  sub_1AFFC9C18();
  swift_release();
  uint64_t v16 = v7;
  if (LOBYTE(v19[0]) == 1) {
    (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FAA8A0], v7);
  }
  else {
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a2, v7);
  }
  sub_1AFF079A0(0, &qword_1EB819BC0, MEMORY[0x1E4FAB070]);
  v15[1] = v11;
  sub_1AFD2CEB0(v2 + 16, (uint64_t)v19);
  uint64_t v12 = swift_allocObject();
  sub_1AFD80454(v19, v12 + 16);
  *(void *)&v19[0] = MEMORY[0x1E4FBC860];
  sub_1AFF0751C((unint64_t *)&qword_1EB81ABC8, MEMORY[0x1E4FAAA28]);
  sub_1AFD68440(0);
  sub_1AFF0751C((unint64_t *)&qword_1EB81AC40, sub_1AFD68440);
  swift_retain_n();
  sub_1AFFCB738();
  uint64_t v13 = sub_1AFFCA608();
  swift_release();
  swift_release_n();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v16);
  return v13;
}

uint64_t sub_1AFF05E68()
{
  sub_1AFF07B04();
  sub_1AFFCA7C8();
  sub_1AFFC8E48();
  uint64_t v0 = (void *)sub_1AFFCA5E8();
  sub_1AFF079A0(0, (unint64_t *)&qword_1EB819C48, MEMORY[0x1E4FBAEA0]);
  uint64_t v1 = sub_1AFFCA678();
  swift_release();
  swift_release();

  return v1;
}

uint64_t sub_1AFF05F3C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAA650];
  sub_1AFF077A4(0, &qword_1EB819BF8, &qword_1EB819BF0, MEMORY[0x1E4FAA650], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = &v12[-v5];
  sub_1AFFCA508();
  sub_1AFFCA998();
  swift_release();
  sub_1AFF0780C(0, &qword_1EB819BF0, v3);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v7);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_1AFF050F4(a2);
    uint64_t v11 = sub_1AFFCA948();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v6, v8);
    return v11;
  }
  return result;
}

uint64_t sub_1AFF060E0@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for SDSAuthToken();
  sub_1AFFC96E8();
  sub_1AFF0751C((unint64_t *)&qword_1EB81A618, MEMORY[0x1E4F276F0]);
  uint64_t result = sub_1AFFCACB8();
  *a1 = result;
  return result;
}

uint64_t sub_1AFF061B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_1AFFC98F8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFFC96C8();
  uint64_t v10 = type metadata accessor for SDSAuthToken();
  sub_1AFFC98E8();
  sub_1AFF0751C((unint64_t *)&qword_1EB816CA0, MEMORY[0x1E4F27928]);
  char v11 = sub_1AFFCAD98();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (v11)
  {
    sub_1AFE68D38(a4, a2);
    uint64_t v12 = 0;
  }
  else
  {
    uint64_t v12 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a2, v12, 1, v10);
}

uint64_t sub_1AFF0635C()
{
  sub_1AFF07B04();
  sub_1AFFCA7C8();
  uint64_t v0 = (void *)sub_1AFFCA5E8();
  sub_1AFF079A0(0, (unint64_t *)&qword_1EB819C48, MEMORY[0x1E4FBAEA0]);
  uint64_t v1 = sub_1AFFCA678();
  swift_release();

  return v1;
}

uint64_t sub_1AFF0641C()
{
  uint64_t v0 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAA650];
  sub_1AFF077A4(0, &qword_1EB819BF8, &qword_1EB819BF0, MEMORY[0x1E4FAA650], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  sub_1AFFCA508();
  sub_1AFFCA998();
  swift_release();
  sub_1AFF0780C(0, &qword_1EB819BF0, v0);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v3, 1, v4);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_1AFFC96E8();
    type metadata accessor for SDSAuthToken();
    sub_1AFF0751C((unint64_t *)&qword_1EB81A618, MEMORY[0x1E4F276F0]);
    sub_1AFFCACA8();
    uint64_t v8 = sub_1AFFCA958();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v3, v5);
    return v8;
  }
  return result;
}

uint64_t sub_1AFF06644(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *a1 = sub_1AFFC9608();
  a1[1] = v7;
  return sub_1AFE68D38(a4, a2);
}

uint64_t sub_1AFF0669C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for SDSAuthToken();
  sub_1AFFC96E8();
  sub_1AFF0751C((unint64_t *)&qword_1EB81A618, MEMORY[0x1E4F276F0]);
  uint64_t result = sub_1AFFCACB8();
  *a1 = result;
  return result;
}

uint64_t sub_1AFF06770(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1AFFC96C8();
  sub_1AFE68D38(a4, a2);
  uint64_t v6 = type metadata accessor for SDSAuthToken();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(a2, 0, 1, v6);
}

uint64_t sub_1AFF06800()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SDSAuthTokenManager()
{
  return self;
}

ValueMetadata *type metadata accessor for SDSAuthTokenManager.StoreDescriptor()
{
  return &type metadata for SDSAuthTokenManager.StoreDescriptor;
}

uint64_t sub_1AFF06884(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1AFD2C4F4();
  swift_bridgeObjectRetain_n();
  uint64_t v5 = sub_1AFFCB638();
  os_log_type_t v6 = sub_1AFFCB478();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v21 = a2;
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v22 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    uint64_t v9 = sub_1AFFC96E8();
    uint64_t v10 = sub_1AFFC8E38();
    uint64_t v11 = MEMORY[0x1B3E8D630](v10, v9);
    unint64_t v13 = v12;
    swift_bridgeObjectRelease();
    sub_1AFD36BA8(v11, v13, &v22);
    sub_1AFFCB688();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AFD01000, v5, v6, "SDSAuthTokenManager will refresh auth tokens for URLs: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v8, -1, -1);
    uint64_t v14 = v7;
    a2 = v21;
    MEMORY[0x1B3E8F0D0](v14, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  MEMORY[0x1F4188790](v15);
  sub_1AFF079A0(0, (unint64_t *)&qword_1EB819C48, MEMORY[0x1E4FBAEA0]);
  sub_1AFFCA7C8();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a2;
  *(void *)(v16 + 24) = a3;
  sub_1AFFC8E48();
  uint64_t v17 = (void *)sub_1AFFCA5E8();
  sub_1AFF08608(0, &qword_1EB818700, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB320]);
  sub_1AFFCA678();
  swift_release();
  swift_release();

  sub_1AFFC8E48();
  uint64_t v18 = (void *)sub_1AFFCA5E8();
  uint64_t v19 = sub_1AFFCA668();
  swift_release();
  swift_release();

  return v19;
}

uint64_t sub_1AFF06B9C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1AFFC9DE8();
  uint64_t v4 = *(void *)(v3 - 8);
  double v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, double))(v4 + 104))(v7, *MEMORY[0x1E4FAA8A8], v3, v5);
  uint64_t v8 = sub_1AFF05A9C(a2, (uint64_t)v7);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  return v8;
}

uint64_t sub_1AFF06CAC@<X0>(uint64_t (*a1)(char *)@<X1>, size_t *a2@<X8>)
{
  sub_1AFFC8E48();
  uint64_t v4 = sub_1AFFC8E38();
  uint64_t v5 = sub_1AFF082F4(v4, a1);
  swift_bridgeObjectRelease();
  swift_release();
  size_t v6 = sub_1AFD70550(v5);
  uint64_t result = swift_release();
  *a2 = v6;
  return result;
}

uint64_t sub_1AFF06D38(uint64_t *a1)
{
  uint64_t v2 = sub_1AFFC9DE8();
  uint64_t v3 = *(void *)(v2 - 8);
  double v4 = MEMORY[0x1F4188790](v2);
  size_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *a1;
  (*(void (**)(char *, void, uint64_t, double))(v3 + 104))(v6, *MEMORY[0x1E4FAA8A0], v2, v4);
  uint64_t v8 = sub_1AFF05A9C(v7, (uint64_t)v6);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return v8;
}

uint64_t sub_1AFF06E48(uint8_t *a1)
{
  uint64_t v2 = sub_1AFFC96E8();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v7 = MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v24 - v8;
  uint64_t v10 = *(void (**)(char *, uint8_t *, uint64_t))(v3 + 16);
  long long v29 = a1;
  long long v27 = v10;
  ((void (*)(char *, uint8_t *, uint64_t, double))v10)((char *)&v24 - v8, a1, v2, v7);
  sub_1AFD2C4F4();
  uint64_t v11 = sub_1AFFCB638();
  os_log_type_t v12 = sub_1AFFCB478();
  if (os_log_type_enabled(v11, v12))
  {
    unint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    uint64_t v31 = v25;
    long long v26 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
    *(_DWORD *)unint64_t v13 = 136315138;
    long long v24 = v13 + 4;
    sub_1AFF0751C(&qword_1EB8114C0, MEMORY[0x1E4F276F0]);
    uint64_t v14 = sub_1AFFCBC88();
    uint64_t v30 = sub_1AFD36BA8(v14, v15, &v31);
    uint64_t v5 = v26;
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v9, v2);
    _os_log_impl(&dword_1AFD01000, v11, v12, "SDSAuthTokenManager will discard auth token for URL: %s", v13, 0xCu);
    uint64_t v16 = v25;
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v16, -1, -1);
    MEMORY[0x1B3E8F0D0](v13, -1, -1);
  }
  else
  {

    uint64_t v17 = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
  }
  MEMORY[0x1F4188790](v17);
  uint64_t v18 = v29;
  *(&v24 - 2) = v28;
  *(&v24 - 1) = v18;
  sub_1AFDF461C(0, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB320]);
  sub_1AFFCA7C8();
  v27(v5, v18, v2);
  unint64_t v19 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v20 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v20 + v19, v5, v2);
  uint64_t v21 = (void *)sub_1AFFCA5E8();
  uint64_t v22 = sub_1AFFCA678();
  swift_release();
  swift_release();

  return v22;
}

uint64_t sub_1AFF071F8()
{
  uint64_t v0 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAA650];
  sub_1AFF077A4(0, &qword_1EB819BF8, &qword_1EB819BF0, MEMORY[0x1E4FAA650], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v11 - v2;
  sub_1AFFCA508();
  sub_1AFFCA998();
  swift_release();
  sub_1AFF0780C(0, &qword_1EB819BF0, v0);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v3, 1, v4);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_1AFDF461C(0, (unint64_t *)&qword_1EB81A0E0, MEMORY[0x1E4FBBE00]);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1AFFD05F0;
    *(void *)(v8 + 32) = sub_1AFFC9608();
    *(void *)(v8 + 40) = v9;
    uint64_t v10 = sub_1AFFCA968();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v3, v5);
    return v10;
  }
  return result;
}

uint64_t sub_1AFF073D0(uint64_t a1)
{
  uint64_t v2 = sub_1AFFC9DE8();
  uint64_t v3 = *(void *)(v2 - 8);
  double v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, double))(v3 + 104))(v6, *MEMORY[0x1E4FAA8A8], v2, v4);
  uint64_t v7 = sub_1AFF05A9C(a1, (uint64_t)v6);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return v7;
}

uint64_t sub_1AFF074D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AFF06884(a1, a2, a3);
}

uint64_t sub_1AFF074F8(uint8_t *a1)
{
  return sub_1AFF06E48(a1);
}

uint64_t sub_1AFF0751C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1AFF07564()
{
  if (!qword_1EB819B88)
  {
    sub_1AFECD7A0();
    sub_1AFF079A0(255, (unint64_t *)&qword_1EB819C48, MEMORY[0x1E4FBAEA0]);
    sub_1AFF0751C((unint64_t *)&unk_1EB81AC70, (void (*)(uint64_t))sub_1AFECD7A0);
    unint64_t v0 = sub_1AFFC9F88();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB819B88);
    }
  }
}

uint64_t sub_1AFF0762C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1AFF059F0(a1);
}

unint64_t sub_1AFF07634()
{
  unint64_t result = qword_1EB819380;
  if (!qword_1EB819380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819380);
  }
  return result;
}

uint64_t sub_1AFF07688()
{
  return sub_1AFF071F8();
}

uint64_t sub_1AFF076A4()
{
  uint64_t v1 = sub_1AFFC96E8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1AFF07734@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1AFFC96E8();
  return (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(*(void *)(v3 - 8) + 16))(a1, v1+ ((*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80)), v3);
}

void sub_1AFF077A4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t, void *), uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_1AFF0780C(255, a3, a4);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_1AFF0780C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for SDSAuthTokenManager.StoreDescriptor;
    v8[1] = type metadata accessor for SDSAuthToken();
    v8[2] = sub_1AFF07634();
    v8[3] = sub_1AFF0751C(&qword_1EB818D80, (void (*)(uint64_t))type metadata accessor for SDSAuthToken);
    v8[4] = sub_1AFF0751C(&qword_1EB818D78, (void (*)(uint64_t))type metadata accessor for SDSAuthToken);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1AFF07904()
{
  return sub_1AFF06B9C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1AFF07920()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1AFF07958@<X0>(size_t *a1@<X8>)
{
  return sub_1AFF06CAC(*(uint64_t (**)(char *))(v1 + 16), a1);
}

uint64_t sub_1AFF07974(uint64_t *a1)
{
  return sub_1AFF06D38(a1);
}

uint64_t sub_1AFF07990()
{
  return sub_1AFF05E68();
}

uint64_t sub_1AFF07998()
{
  return sub_1AFF0635C();
}

void sub_1AFF079A0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_1AFFC96E8();
    uint64_t v7 = type metadata accessor for SDSAuthToken();
    uint64_t v8 = sub_1AFF0751C((unint64_t *)&qword_1EB81A618, MEMORY[0x1E4F276F0]);
    unint64_t v9 = a3(a1, v6, v7, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1AFF07A54()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1AFF07A8C(uint64_t a1)
{
  uint64_t v3 = v1[5];
  uint64_t v4 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 8))(a1, v3, v4);
}

uint64_t sub_1AFF07AE8()
{
  return sub_1AFF0641C();
}

void sub_1AFF07B04()
{
  if (!qword_1EB819C50)
  {
    type metadata accessor for SDSAuthToken();
    unint64_t v0 = sub_1AFFCAD18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB819C50);
    }
  }
}

uint64_t sub_1AFF07B6C()
{
  return sub_1AFF05F3C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1AFF07B88@<X0>(uint64_t *a1@<X8>)
{
  return sub_1AFF060E0(a1);
}

uint64_t sub_1AFF07BA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AFF061B8(a1, a2, a3, a4);
}

uint64_t sub_1AFF07BC0(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  v44 = a1;
  uint64_t v7 = type metadata accessor for SDSAuthToken();
  uint64_t v51 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v56 = (uint64_t)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v50 = (uint64_t)&v43 - v10;
  uint64_t v55 = sub_1AFFC96E8();
  uint64_t v52 = *(void *)(v55 - 8);
  MEMORY[0x1F4188790](v55);
  os_log_type_t v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  v49 = (char *)&v43 - v14;
  if (!a3) {
    return MEMORY[0x1E4FBC868];
  }
  if (a4[2] == a3)
  {
    sub_1AFFC8E48();
    return (uint64_t)a4;
  }
  sub_1AFF079A0(0, (unint64_t *)&qword_1EB818720, MEMORY[0x1E4FBBD58]);
  uint64_t result = sub_1AFFCBA08();
  uint64_t v16 = result;
  uint64_t v43 = a2;
  if (a2 < 1) {
    unint64_t v17 = 0;
  }
  else {
    unint64_t v17 = *v44;
  }
  uint64_t v18 = 0;
  uint64_t v46 = v52 + 32;
  uint64_t v47 = v52 + 16;
  uint64_t v19 = result + 64;
  uint64_t v48 = v12;
  uint64_t v45 = a4;
  uint64_t v20 = v55;
  while (1)
  {
    if (v17)
    {
      uint64_t v53 = (v17 - 1) & v17;
      uint64_t v54 = v18;
      unint64_t v21 = __clz(__rbit64(v17)) | (v18 << 6);
    }
    else
    {
      uint64_t v22 = v18 + 1;
      if (__OFADD__(v18, 1)) {
        goto LABEL_40;
      }
      if (v22 >= v43) {
        return v16;
      }
      unint64_t v23 = v44[v22];
      uint64_t v24 = v18 + 1;
      if (!v23)
      {
        uint64_t v24 = v18 + 2;
        if (v18 + 2 >= v43) {
          return v16;
        }
        unint64_t v23 = v44[v24];
        if (!v23)
        {
          uint64_t v24 = v18 + 3;
          if (v18 + 3 >= v43) {
            return v16;
          }
          unint64_t v23 = v44[v24];
          if (!v23)
          {
            uint64_t v25 = v18 + 4;
            if (v18 + 4 >= v43) {
              return v16;
            }
            unint64_t v23 = v44[v25];
            if (!v23)
            {
              while (1)
              {
                uint64_t v24 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_41;
                }
                if (v24 >= v43) {
                  return v16;
                }
                unint64_t v23 = v44[v24];
                ++v25;
                if (v23) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v24 = v18 + 4;
          }
        }
      }
LABEL_24:
      uint64_t v53 = (v23 - 1) & v23;
      uint64_t v54 = v24;
      unint64_t v21 = __clz(__rbit64(v23)) + (v24 << 6);
    }
    uint64_t v26 = v52;
    uint64_t v27 = *(void *)(v52 + 72);
    long long v28 = v49;
    (*(void (**)(char *, unint64_t, uint64_t))(v52 + 16))(v49, a4[6] + v27 * v21, v20);
    uint64_t v29 = *(void *)(v51 + 72);
    uint64_t v30 = a4[7] + v29 * v21;
    uint64_t v31 = v50;
    sub_1AFE68D38(v30, v50);
    long long v32 = *(void (**)(char *, char *, uint64_t))(v26 + 32);
    long long v33 = v48;
    v32(v48, v28, v20);
    sub_1AFF084BC(v31, v56);
    sub_1AFF0751C((unint64_t *)&qword_1EB81A618, MEMORY[0x1E4F276F0]);
    uint64_t result = sub_1AFFCAD58();
    uint64_t v34 = -1 << *(unsigned char *)(v16 + 32);
    unint64_t v35 = result & ~v34;
    unint64_t v36 = v35 >> 6;
    if (((-1 << v35) & ~*(void *)(v19 + 8 * (v35 >> 6))) != 0)
    {
      unint64_t v37 = __clz(__rbit64((-1 << v35) & ~*(void *)(v19 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v38 = 0;
      unint64_t v39 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v39 && (v38 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v40 = v36 == v39;
        if (v36 == v39) {
          unint64_t v36 = 0;
        }
        v38 |= v40;
        uint64_t v41 = *(void *)(v19 + 8 * v36);
      }
      while (v41 == -1);
      unint64_t v37 = __clz(__rbit64(~v41)) + (v36 << 6);
    }
    *(void *)(v19 + ((v37 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v37;
    v32((char *)(*(void *)(v16 + 48) + v37 * v27), v33, v55);
    uint64_t result = sub_1AFF084BC(v56, *(void *)(v16 + 56) + v37 * v29);
    ++*(void *)(v16 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    a4 = v45;
    unint64_t v17 = v53;
    uint64_t v18 = v54;
    if (!a3) {
      return v16;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

void sub_1AFF08084(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *))
{
  uint64_t v23 = a2;
  uint64_t v24 = a1;
  uint64_t v6 = type metadata accessor for SDSAuthToken();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = 0;
  uint64_t v11 = *(void *)(a3 + 64);
  uint64_t v25 = 0;
  uint64_t v26 = a3 + 64;
  uint64_t v12 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & v11;
  int64_t v27 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_5;
    }
    int64_t v18 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v18 >= v27) {
      goto LABEL_24;
    }
    unint64_t v19 = *(void *)(v26 + 8 * v18);
    ++v10;
    if (!v19)
    {
      int64_t v10 = v18 + 1;
      if (v18 + 1 >= v27) {
        goto LABEL_24;
      }
      unint64_t v19 = *(void *)(v26 + 8 * v10);
      if (!v19)
      {
        int64_t v10 = v18 + 2;
        if (v18 + 2 >= v27) {
          goto LABEL_24;
        }
        unint64_t v19 = *(void *)(v26 + 8 * v10);
        if (!v19) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v14 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v10 << 6);
LABEL_5:
    sub_1AFE68D38(*(void *)(a3 + 56) + *(void *)(v7 + 72) * v16, (uint64_t)v9);
    char v17 = a4(v9);
    sub_1AFF08554((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for SDSAuthToken);
    if (v17)
    {
      *(unint64_t *)((char *)v24 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      if (__OFADD__(v25++, 1))
      {
        __break(1u);
LABEL_24:
        sub_1AFF07BC0(v24, v23, v25, (void *)a3);
        return;
      }
    }
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v27) {
    goto LABEL_24;
  }
  unint64_t v19 = *(void *)(v26 + 8 * v20);
  if (v19)
  {
    int64_t v10 = v20;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v10 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v10 >= v27) {
      goto LABEL_24;
    }
    unint64_t v19 = *(void *)(v26 + 8 * v10);
    ++v20;
    if (v19) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
}

uint64_t sub_1AFF082F4(uint64_t a1, uint64_t (*a2)(char *))
{
  uint64_t v3 = v2;
  v16[1] = *MEMORY[0x1E4F143B8];
  char v6 = *(unsigned char *)(a1 + 32);
  unsigned int v7 = v6 & 0x3F;
  unint64_t v8 = (unint64_t)((1 << v6) + 63) >> 6;
  size_t v9 = 8 * v8;
  uint64_t isStackAllocationSafe = swift_retain_n();
  if (v7 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v16 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    sub_1AFFC8E48();
    sub_1AFF08084((void *)((char *)v16 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0)), v8, a1, a2);
    uint64_t v12 = v11;
    swift_release();
    if (v3) {
      swift_willThrow();
    }
    swift_release_n();
  }
  else
  {
    uint64_t v13 = (void *)swift_slowAlloc();
    bzero(v13, v9);
    sub_1AFFC8E48();
    sub_1AFF08084((unint64_t *)v13, v8, a1, a2);
    uint64_t v12 = v14;
    swift_release();
    MEMORY[0x1B3E8F0D0](v13, -1, -1);
    swift_release_n();
  }
  return v12;
}

uint64_t sub_1AFF084BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SDSAuthToken();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1AFF08520(uint64_t a1)
{
}

uint64_t sub_1AFF08554(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1AFF085B4()
{
  unint64_t result = qword_1E9AFC8A0;
  if (!qword_1E9AFC8A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC8A0);
  }
  return result;
}

void sub_1AFF08608(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for SDSAuthTokenManagerError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1AFF08708);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SDSAuthTokenManagerError()
{
  return &type metadata for SDSAuthTokenManagerError;
}

unint64_t sub_1AFF08744()
{
  unint64_t result = qword_1E9AFC8A8;
  if (!qword_1E9AFC8A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC8A8);
  }
  return result;
}

uint64_t type metadata accessor for SDSQuoteOperation()
{
  uint64_t result = qword_1EB816968;
  if (!qword_1EB816968) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1AFF087E4()
{
  uint64_t result = sub_1AFFC98F8();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1AFFC9E18();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_initClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

void sub_1AFF088DC(uint64_t a1, uint64_t a2)
{
  int v3 = v2;
  uint64_t v13 = *(void *)&v2[qword_1EB816960];
  swift_bridgeObjectRetain_n();
  sub_1AFFB6B00(&v13);
  swift_bridgeObjectRelease();
  sub_1AFF0CCC4(0, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  sub_1AFF0C324((unint64_t *)&qword_1EB818038);
  uint64_t v6 = sub_1AFFCB3B8();
  swift_release();
  id v7 = v3;
  sub_1AFF0C0D8(v6);
  swift_bridgeObjectRelease();

  unint64_t v8 = (void *)sub_1AFFCA5E8();
  sub_1AFF0C234();
  sub_1AFFCA548();
  swift_bridgeObjectRelease();

  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  *(void *)(v9 + 24) = a2;
  sub_1AFFC8E48();
  int64_t v10 = (void *)sub_1AFFCA5E8();
  sub_1AFFCA678();
  swift_release();
  swift_release();

  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = a2;
  sub_1AFFC8E48();
  uint64_t v12 = (void *)sub_1AFFCA5E8();
  sub_1AFFCA6B8();
  swift_release();
  swift_release();
  swift_release();
}

uint64_t sub_1AFF08B04(uint64_t a1, void (*a2)(uint64_t, void))
{
  uint64_t v3 = MEMORY[0x1E4FBC868];
  uint64_t v7 = MEMORY[0x1E4FBC868];
  uint64_t v4 = *(void *)(*(void *)a1 + 16);
  if (v4)
  {
    sub_1AFFC8E38();
    type metadata accessor for Quote();
    uint64_t v5 = 0;
    do
    {
      ++v5;
      sub_1AFFC8E38();
      sub_1AFFCA4D8();
      swift_bridgeObjectRelease();
    }
    while (v4 != v5);
    swift_bridgeObjectRelease();
    uint64_t v3 = v7;
  }
  a2(v3, 0);
  return swift_bridgeObjectRelease();
}

void sub_1AFF08C00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a2;
  __swift_project_boxed_opaque_existential_1((void *)(a5 + qword_1EB8170A8), *(void *)(a5 + qword_1EB8170A8 + 24));
  sub_1AFF0C2C0(0, (unint64_t *)&qword_1EB81A0E8, (uint64_t (*)(uint64_t))sub_1AFD306F8, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AFFD0610;
  *(void *)(inited + 32) = 0x6C6F626D7973;
  *(void *)(inited + 40) = 0xE600000000000000;
  uint64_t v32 = a6;
  sub_1AFF0CCC4(0, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  sub_1AFF0C324((unint64_t *)&qword_1EB819DD0);
  sub_1AFFC8E48();
  *(void *)(inited + 48) = sub_1AFFCAD88();
  *(void *)(inited + 56) = v14;
  *(void *)(inited + 64) = 0x74655361746164;
  *(void *)(inited + 72) = 0xE700000000000000;
  *(void *)(inited + 80) = 0x65746F7571;
  *(void *)(inited + 88) = 0xE500000000000000;
  sub_1AFDF9B10(inited);
  id v15 = sub_1AFEC5E2C(2);
  swift_bridgeObjectRelease();
  uint64_t v16 = sub_1AFFC9F28();
  unint64_t v18 = v17;
  uint64_t v19 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v20 = swift_allocObject();
  swift_unknownObjectWeakInit();
  unint64_t v21 = (void *)swift_allocObject();
  v21[2] = v19;
  v21[3] = v16;
  v21[4] = v18;
  v21[5] = a3;
  v21[6] = a4;
  v21[7] = v20;
  v21[8] = sub_1AFD47F4C;
  v21[9] = v12;
  v21[10] = a6;
  id v22 = v15;
  sub_1AFFC8E38();
  sub_1AFFC8E48();
  sub_1AFFC8E38();
  sub_1AFFC9F18();

  if (qword_1EB819BE8 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_1AFFCA8A8();
  __swift_project_value_buffer(v23, (uint64_t)qword_1EB818A00);
  id v24 = v22;
  sub_1AFFC8E38();
  uint64_t v25 = sub_1AFFCA888();
  os_log_type_t v26 = sub_1AFFCB478();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    uint64_t v32 = v28;
    *(_DWORD *)uint64_t v27 = 136315394;
    sub_1AFFC8E38();
    sub_1AFD36BA8(v16, v18, &v32);
    sub_1AFFCB688();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v27 + 12) = 2080;
    uint64_t v29 = sub_1AFFC9F28();
    uint64_t v31 = sub_1AFD36BA8(v29, v30, &v32);
    sub_1AFFCB688();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AFD01000, v25, v26, "SDSQuoteOperation %s will start base operation %s", (uint8_t *)v27, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v28, -1, -1);
    MEMORY[0x1B3E8F0D0](v27, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  objc_msgSend(v24, sel_start, v31, v32);
}

void sub_1AFF09080(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(uint64_t), uint64_t a9)
{
  v105 = a8;
  uint64_t v106 = a3;
  uint64_t v117 = a6;
  unint64_t v108 = a4;
  uint64_t v119 = sub_1AFFCABC8();
  uint64_t v13 = *(void *)(v119 - 8);
  MEMORY[0x1F4188790](v119);
  v118 = (char *)v103 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = sub_1AFFCAC18();
  uint64_t v15 = *(void *)(v120 - 8);
  MEMORY[0x1F4188790](v120);
  unint64_t v17 = (char *)v103 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFF0CED4(0, (unint64_t *)&qword_1EB818558, (uint64_t (*)(void))sub_1AFD30A78, (uint64_t)&type metadata for SDSQuoteResponse, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for SDSBaseOperationResponse);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v107 = (uint64_t)v103 - v19;
  sub_1AFF0C45C();
  MEMORY[0x1F4188790](v20);
  id v22 = (void **)((char *)v103 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  v114 = (char *)MEMORY[0x1B3E8F200](a2 + 16);
  if (!v114)
  {
    if (qword_1EB819BE8 != -1) {
LABEL_50:
    }
      swift_once();
    uint64_t v36 = sub_1AFFCA8A8();
    __swift_project_value_buffer(v36, (uint64_t)qword_1EB818A00);
    unint64_t v37 = v108;
    swift_bridgeObjectRetain_n();
    char v38 = sub_1AFFCA888();
    os_log_type_t v39 = sub_1AFFCB478();
    if (os_log_type_enabled(v38, v39))
    {
      BOOL v40 = (uint8_t *)swift_slowAlloc();
      uint64_t v41 = swift_slowAlloc();
      v123[0] = v41;
      *(_DWORD *)BOOL v40 = 136315138;
      sub_1AFFC8E38();
      v121[0] = sub_1AFD36BA8(v106, v37, v123);
      sub_1AFFCB688();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1AFD01000, v38, v39, "SDSQuoteOperation %s was freed before base operation completion", v40, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1B3E8F0D0](v41, -1, -1);
      MEMORY[0x1B3E8F0D0](v40, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v56 = sub_1AFFC9E28();
    sub_1AFF0CABC((unint64_t *)&qword_1E9AFB0B0, MEMORY[0x1E4FAA9B0]);
    uint64_t v23 = (void *)swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v56 - 8) + 104))(v57, *MEMORY[0x1E4FAA9A0], v56);
    ((void (*)(void *))a5)(v23);
    goto LABEL_48;
  }
  uint64_t v104 = a7 + 16;
  sub_1AFF0CB6C(a1, (uint64_t)v22, (uint64_t (*)(void))sub_1AFF0C45C);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v23 = *v22;
    if (qword_1EB819BE8 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_1AFFCA8A8();
    __swift_project_value_buffer(v24, (uint64_t)qword_1EB818A00);
    unint64_t v25 = v108;
    sub_1AFFC8E38();
    id v26 = v23;
    sub_1AFFC8E38();
    id v27 = v23;
    uint64_t v28 = sub_1AFFCA888();
    os_log_type_t v29 = sub_1AFFCB478();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = swift_slowAlloc();
      uint64_t v31 = (void *)swift_slowAlloc();
      uint64_t v120 = swift_slowAlloc();
      v123[0] = v120;
      *(_DWORD *)uint64_t v30 = 136315394;
      sub_1AFFC8E38();
      v121[0] = sub_1AFD36BA8(v106, v25, v123);
      uint64_t v32 = a5;
      sub_1AFFCB688();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v30 + 12) = 2112;
      id v33 = v23;
      uint64_t v34 = _swift_stdlib_bridgeErrorToNSError();
      v121[0] = v34;
      sub_1AFFCB688();
      *uint64_t v31 = v34;
      a5 = v32;

      _os_log_impl(&dword_1AFD01000, v28, v29, "SDSQuoteOperation %s failed with error: %@", (uint8_t *)v30, 0x16u);
      sub_1AFF0CB04();
      swift_arrayDestroy();
      MEMORY[0x1B3E8F0D0](v31, -1, -1);
      uint64_t v35 = v120;
      swift_arrayDestroy();
      MEMORY[0x1B3E8F0D0](v35, -1, -1);
      MEMORY[0x1B3E8F0D0](v30, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
    uint64_t v58 = v104;
    ((void (*)(void *))a5)(v23);
    swift_beginAccess();
    uint64_t v59 = MEMORY[0x1B3E8F200](v58);
    if (v59)
    {
      v60 = (void *)v59;
      v61 = v114;
      sub_1AFF65D44(v60, (uint64_t)v61);
    }
    else
    {
    }
LABEL_48:

    return;
  }
  sub_1AFD480A0((uint64_t)v22, v107);
  sub_1AFF0CCC4(0, &qword_1EB818560, (uint64_t)&type metadata for SDSQuoteResponse, MEMORY[0x1E4FAAE30]);
  uint64_t v43 = v42;
  sub_1AFFCA3A8();
  swift_bridgeObjectRelease();
  uint64_t v117 = v123[2];
  if (v123[2])
  {
    uint64_t v115 = v123[5];
    uint64_t v116 = v123[3];
    uint64_t v44 = *(void *)&v114[qword_1EB8170C0];
    uint64_t v45 = *(void *)(v44 + 16);
    if (v45)
    {
      v103[1] = *(void *)&v114[qword_1EB8170C0];
      v103[2] = v43;
      uint64_t v112 = v123[4];
      uint64_t v113 = v123[1];
      uint64_t v46 = (void *)(v44 + 32);
      v110 = (void (**)(char *, uint64_t))(v13 + 8);
      v111 = &v123[2];
      v109 = (void (**)(char *, uint64_t))(v15 + 8);
      sub_1AFFC8E38();
      do
      {
        uint64_t v47 = __swift_project_boxed_opaque_existential_1(v46, v46[3]);
        uint64_t v48 = *v47;
        if (*(unsigned char *)(*v47 + 24) == 2)
        {
          v49 = (void *)swift_allocObject();
          uint64_t v50 = v113;
          v49[2] = v48;
          v49[3] = v50;
          uint64_t v51 = v116;
          v49[4] = v117;
          v49[5] = v51;
          uint64_t v52 = v115;
          v49[6] = v112;
          v49[7] = v52;
          v123[4] = (uint64_t)sub_1AFEC5F40;
          v123[5] = (uint64_t)v49;
          v123[0] = MEMORY[0x1E4F143A8];
          v123[1] = 1107296256;
          v123[2] = (uint64_t)sub_1AFDB5104;
          v123[3] = (uint64_t)&block_descriptor_31;
          uint64_t v53 = _Block_copy(v123);
          sub_1AFFC8E48();
          sub_1AFFC8E38();
          sub_1AFFC8E38();
          sub_1AFFC8E38();
          sub_1AFFCABE8();
          v121[0] = MEMORY[0x1E4FBC860];
          sub_1AFF0CABC((unint64_t *)&unk_1EB819C20, MEMORY[0x1E4FBCB00]);
          sub_1AFF0C2C0(0, (unint64_t *)&qword_1EB819DA0, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
          sub_1AFDB56D0();
          uint64_t v54 = v118;
          uint64_t v55 = v119;
          sub_1AFFCB738();
          MEMORY[0x1B3E8D920](0, v17, v54, v53);
          _Block_release(v53);
          (*v110)(v54, v55);
          (*v109)(v17, v120);
          swift_release();
        }
        v46 += 5;
        --v45;
      }
      while (v45);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1AFFCA3A8();
  uint64_t v62 = v123[0];
  sub_1AFD30C94(v123[1], v123[2]);
  uint64_t v63 = *(void *)(v62 + 16);
  v64 = (void *)MEMORY[0x1E4FBC868];
  if (v63)
  {
    uint64_t v120 = v62;
    sub_1AFFC8E38();
    memcpy(v123, (const void *)(v62 + 32), sizeof(v123));
    uint64_t v65 = v123[90];
    uint64_t v66 = v123[91];
    sub_1AFD48104((uint64_t)v123);
    sub_1AFFC8E38();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v122 = v64;
    unint64_t v69 = sub_1AFD79CC8(v65, v66);
    uint64_t v70 = v64[2];
    BOOL v71 = (v68 & 1) == 0;
    uint64_t v72 = v70 + v71;
    if (!__OFADD__(v70, v71))
    {
      LOBYTE(v64) = v68;
      v73 = (void *)MEMORY[0x1E4FBC868];
      a5 = 808;
      do
      {
        if (v73[3] >= v72)
        {
          if (isUniquelyReferenced_nonNull_native)
          {
            if (v64) {
              goto LABEL_32;
            }
          }
          else
          {
            sub_1AFEBA134();
            if (v64) {
              goto LABEL_32;
            }
          }
        }
        else
        {
          sub_1AFEB576C(v72, isUniquelyReferenced_nonNull_native & 1);
          unint64_t v74 = sub_1AFD79CC8(v65, v66);
          if ((v64 & 1) != (v75 & 1))
          {
            sub_1AFFCBD68();
            __break(1u);
            return;
          }
          unint64_t v69 = v74;
          if (v64)
          {
LABEL_32:
            v64 = v122;
            v76 = (void *)(v122[7] + 776 * v69);
            memcpy(v121, v76, 0x308uLL);
            sub_1AFD4859C((uint64_t)v121);
            memcpy(v76, v123, 0x308uLL);
            goto LABEL_36;
          }
        }
        v64 = v122;
        v122[(v69 >> 6) + 8] |= 1 << v69;
        v77 = (uint64_t *)(v64[6] + 16 * v69);
        uint64_t *v77 = v65;
        v77[1] = v66;
        memcpy((void *)(v64[7] + 776 * v69), v123, 0x308uLL);
        uint64_t v78 = v64[2];
        BOOL v79 = __OFADD__(v78, 1);
        uint64_t v80 = v78 + 1;
        if (v79)
        {
          __break(1u);
          goto LABEL_50;
        }
        v64[2] = v80;
        sub_1AFFC8E38();
LABEL_36:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!--v63) {
          goto LABEL_40;
        }
        memcpy(v123, (const void *)(v120 + a5), sizeof(v123));
        uint64_t v65 = v123[90];
        uint64_t v66 = v123[91];
        sub_1AFD48104((uint64_t)v123);
        sub_1AFFC8E38();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v122 = v64;
        unint64_t v69 = sub_1AFD79CC8(v65, v66);
        v73 = v64;
        v64 = v81;
        uint64_t v82 = v73[2];
        BOOL v83 = (v81 & 1) == 0;
        a5 += 776;
        uint64_t v72 = v82 + v83;
      }
      while (!__OFADD__(v82, v83));
    }
    __break(1u);
LABEL_40:
    swift_bridgeObjectRelease();
  }
  uint64_t v84 = swift_bridgeObjectRelease();
  MEMORY[0x1F4188790](v84);
  type metadata accessor for Quote();
  uint64_t v120 = (uint64_t)v64;
  uint64_t v85 = sub_1AFFCACB8();
  unint64_t v86 = v108;
  if (qword_1EB819BE8 != -1) {
    swift_once();
  }
  uint64_t v87 = sub_1AFFCA8A8();
  __swift_project_value_buffer(v87, (uint64_t)qword_1EB818A00);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v88 = sub_1AFFCA888();
  os_log_type_t v89 = sub_1AFFCB478();
  if (os_log_type_enabled(v88, v89))
  {
    uint64_t v90 = swift_slowAlloc();
    uint64_t v91 = swift_slowAlloc();
    v118 = 0;
    uint64_t v92 = v91;
    v123[0] = v91;
    *(_DWORD *)uint64_t v90 = 136315394;
    uint64_t v119 = a9;
    sub_1AFFC8E38();
    v121[0] = sub_1AFD36BA8(v106, v86, v123);
    sub_1AFFCB688();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v90 + 12) = 2048;
    uint64_t v93 = *(void *)(v85 + 16);
    swift_bridgeObjectRelease();
    v121[0] = v93;
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AFD01000, v88, v89, "SDSQuoteOperation %s succeeded with %ld quotes", (uint8_t *)v90, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v92, -1, -1);
    MEMORY[0x1B3E8F0D0](v90, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  v105(v85);
  uint64_t v94 = v120;
  sub_1AFFC8E38();
  uint64_t v95 = sub_1AFFC8E38();
  uint64_t v96 = sub_1AFE8BFA8(v95, v94);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v97 = sub_1AFFC8E38();
  sub_1AFF0C508(v97, v94, v85);
  uint64_t v99 = v98;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1AFF0C924(v96);
  uint64_t v100 = v104;
  swift_beginAccess();
  v101 = (void *)MEMORY[0x1B3E8F200](v100);
  id v102 = v114;
  sub_1AFF0B2B4(v101, v96, v99);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_1AFD489D0(v107);
}

uint64_t sub_1AFF0A00C(void *a1, uint64_t a2, uint64_t *a3, void *__src)
{
  uint64_t v7 = *a3;
  uint64_t v6 = a3[1];
  memcpy(__dst, __src, sizeof(__dst));
  sub_1AFF0CBD4((uint64_t)&__dst[13], (uint64_t)v13, &qword_1EB816930, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem);
  sub_1AFF0CBD4((uint64_t)v13, (uint64_t)__srca, &qword_1EB816930, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem);
  if (sub_1AFD48B64((uint64_t)__srca) == 1)
  {
    uint64_t v8 = type metadata accessor for Quote();
    *a1 = 0;
    a1[1] = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(a2, 1, 1, v8);
  }
  else
  {
    memcpy(v11, __srca, sizeof(v11));
    *a1 = v7;
    a1[1] = v6;
    sub_1AFFC8E38();
    sub_1AFF0A168(v11, __dst, a2);
    uint64_t v10 = type metadata accessor for Quote();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a2, 0, 1, v10);
  }
}

uint64_t sub_1AFF0A168@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v80 = a2;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1AFF0C2C0(0, &qword_1EB816CF8, MEMORY[0x1E4F27D68], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  v73 = (char *)&v72 - v7;
  uint64_t v8 = sub_1AFFC9B88();
  uint64_t v77 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFF0C2C0(0, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928], v5);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v81 = (uint64_t)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v72 - v14;
  MEMORY[0x1F4188790](v16);
  uint64_t v87 = (uint64_t)&v72 - v17;
  MEMORY[0x1F4188790](v18);
  uint64_t v86 = (uint64_t)&v72 - v19;
  MEMORY[0x1F4188790](v20);
  uint64_t v85 = (uint64_t)&v72 - v21;
  MEMORY[0x1F4188790](v22);
  uint64_t v84 = (uint64_t)&v72 - v23;
  MEMORY[0x1F4188790](v24);
  id v26 = (char *)&v72 - v25;
  sub_1AFF0CBD4((uint64_t)(a1 + 32), (uint64_t)&v103, &qword_1EB816FF8, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem.SDSQuoteResponseQuoteItemExchangeStatus);
  sub_1AFF0CBD4((uint64_t)&v103, (uint64_t)&v104, &qword_1EB816FF8, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem.SDSQuoteResponseQuoteItemExchangeStatus);
  uint64_t v74 = v104;
  uint64_t v27 = MEMORY[0x1E4FBB1A0];
  sub_1AFF0CBD4((uint64_t)(a1 + 12), (uint64_t)v102, (unint64_t *)&qword_1EB819C90, MEMORY[0x1E4FBB1A0]);
  sub_1AFF0CBD4((uint64_t)(a1 + 26), (uint64_t)v101, (unint64_t *)&qword_1EB819C90, v27);
  sub_1AFF0CBD4((uint64_t)v101, (uint64_t)&v105, (unint64_t *)&qword_1EB819C90, v27);
  BOOL v79 = v26;
  if (*((void *)&v105 + 1))
  {
    long long v88 = v105;
    sub_1AFD8C5F8((uint64_t)v102);
    sub_1AFD8C5F8((uint64_t)v101);
    sub_1AFF0CD10();
    sub_1AFFC9908();
    uint64_t v33 = sub_1AFFC98F8();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v26, 0, 1, v33);
    uint64_t v31 = a1[29];
    if (!v31) {
      goto LABEL_6;
    }
LABEL_3:
    *(void *)&long long v88 = a1[28];
    *((void *)&v88 + 1) = v31;
    sub_1AFF0CD10();
    sub_1AFFC8E38();
    uint64_t v28 = v84;
    sub_1AFFC9908();
    uint64_t v34 = sub_1AFFC98F8();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v28, 0, 1, v34);
    goto LABEL_9;
  }
  uint64_t v30 = sub_1AFFC98F8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v26, 1, 1, v30);
  sub_1AFD8C5F8((uint64_t)v102);
  uint64_t v31 = a1[29];
  if (v31) {
    goto LABEL_3;
  }
LABEL_6:
  uint64_t v32 = sub_1AFFC98F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v84, 1, 1, v32);
LABEL_9:
  uint64_t v35 = a1[31];
  if (v35)
  {
    *(void *)&long long v88 = a1[30];
    *((void *)&v88 + 1) = v35;
    sub_1AFF0CD10();
    sub_1AFFC8E38();
    uint64_t v36 = v85;
    sub_1AFFC9908();
    uint64_t v37 = sub_1AFFC98F8();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v36, 0, 1, v37);
  }
  else
  {
    uint64_t v29 = sub_1AFFC98F8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v85, 1, 1, v29);
  }
  sub_1AFF0CBD4((uint64_t)a1 + 353, (uint64_t)&v100, &qword_1EB816FB0, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteSource);
  sub_1AFF0CBD4((uint64_t)&v100, (uint64_t)&v106, &qword_1EB816FB0, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteSource);
  uint64_t v78 = v106;
  sub_1AFF0CBD4((uint64_t)a1 + 25, (uint64_t)&v99, &qword_1EB816FB0, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteSource);
  sub_1AFF0CBD4((uint64_t)&v99, (uint64_t)&v107, &qword_1EB816FB0, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteSource);
  if (v107 == 6)
  {
    sub_1AFF0CBD4((uint64_t)a1 + 57, (uint64_t)&v98, &qword_1EB816FB0, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteSource);
    sub_1AFF0CBD4((uint64_t)&v98, (uint64_t)&v108, &qword_1EB816FB0, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteSource);
    int v38 = v108;
    int v39 = 6;
    int v76 = 6;
    if (v108 != 6) {
LABEL_16:
    }
      int v39 = v38;
  }
  else
  {
    switch(v107)
    {
      case 1:
        sub_1AFF0CBD4((uint64_t)a1 + 57, (uint64_t)&v98, &qword_1EB816FB0, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteSource);
        sub_1AFF0CBD4((uint64_t)&v98, (uint64_t)&v108, &qword_1EB816FB0, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteSource);
        int v38 = v108;
        int v40 = 1;
        goto LABEL_22;
      case 2:
        sub_1AFF0CBD4((uint64_t)a1 + 57, (uint64_t)&v98, &qword_1EB816FB0, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteSource);
        sub_1AFF0CBD4((uint64_t)&v98, (uint64_t)&v108, &qword_1EB816FB0, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteSource);
        int v38 = v108;
        int v40 = 2;
        goto LABEL_22;
      case 3:
        sub_1AFF0CBD4((uint64_t)a1 + 57, (uint64_t)&v98, &qword_1EB816FB0, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteSource);
        sub_1AFF0CBD4((uint64_t)&v98, (uint64_t)&v108, &qword_1EB816FB0, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteSource);
        int v38 = v108;
        int v40 = 3;
        goto LABEL_22;
      case 4:
        sub_1AFF0CBD4((uint64_t)a1 + 57, (uint64_t)&v98, &qword_1EB816FB0, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteSource);
        sub_1AFF0CBD4((uint64_t)&v98, (uint64_t)&v108, &qword_1EB816FB0, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteSource);
        int v38 = v108;
        int v40 = 4;
        goto LABEL_22;
      case 5:
        sub_1AFF0CBD4((uint64_t)a1 + 57, (uint64_t)&v98, &qword_1EB816FB0, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteSource);
        sub_1AFF0CBD4((uint64_t)&v98, (uint64_t)&v108, &qword_1EB816FB0, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteSource);
        int v38 = v108;
        int v40 = 5;
LABEL_22:
        int v76 = v40;
        if (v38 == 6) {
          goto LABEL_23;
        }
        goto LABEL_16;
      default:
        sub_1AFF0CBD4((uint64_t)a1 + 57, (uint64_t)&v98, &qword_1EB816FB0, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteSource);
        sub_1AFF0CBD4((uint64_t)&v98, (uint64_t)&v108, &qword_1EB816FB0, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteSource);
        int v76 = 0;
        int v38 = v108;
        if (v108 != 6) {
          goto LABEL_16;
        }
LABEL_23:
        int v39 = 6;
        break;
    }
  }
  int v75 = v39;
  uint64_t v41 = a1[52];
  if (v41)
  {
    *(void *)&long long v88 = a1[51];
    *((void *)&v88 + 1) = v41;
    sub_1AFF0CD10();
    sub_1AFFC8E38();
    uint64_t v42 = v86;
    sub_1AFFC9908();
    uint64_t v45 = sub_1AFFC98F8();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v42, 0, 1, v45);
  }
  else
  {
    uint64_t v44 = sub_1AFFC98F8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v86, 1, 1, v44);
  }
  uint64_t v46 = a1[54];
  if (v46)
  {
    *(void *)&long long v88 = a1[53];
    *((void *)&v88 + 1) = v46;
    sub_1AFF0CD10();
    sub_1AFFC8E38();
    uint64_t v47 = v87;
    sub_1AFFC9908();
    uint64_t v48 = sub_1AFFC98F8();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v47, 0, 1, v48);
  }
  else
  {
    uint64_t v43 = sub_1AFFC98F8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v87, 1, 1, v43);
  }
  uint64_t v49 = v80[96];
  uint64_t v82 = v10;
  BOOL v83 = v15;
  if (v49)
  {
    *(void *)&long long v88 = v80[95];
    *((void *)&v88 + 1) = v49;
    sub_1AFF0CD10();
    sub_1AFFC8E38();
    uint64_t v50 = v81;
    sub_1AFFC9908();
    uint64_t v57 = v77;
    uint64_t v58 = sub_1AFFC98F8();
    uint64_t v59 = *(void *)(v58 - 8);
    uint64_t v72 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v59 + 56);
    v72(v50, 0, 1, v58);
    int v60 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v59 + 48))(v50, 1, v58);
    if (v60 != 1)
    {
      uint64_t v61 = (uint64_t)v83;
      (*(void (**)(char *, uint64_t, uint64_t))(v59 + 32))(v83, v81, v58);
      v72(v61, 0, 1, v58);
      uint64_t v55 = v57;
      uint64_t v62 = v82;
      char v63 = v74;
      goto LABEL_39;
    }
  }
  else
  {
    uint64_t v57 = v77;
    uint64_t v51 = v81;
    uint64_t v52 = sub_1AFFC98F8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v51, 1, 1, v52);
  }
  uint64_t v53 = v80[94];
  if (v53)
  {
    *(void *)&long long v88 = v80[93];
    *((void *)&v88 + 1) = v53;
    sub_1AFF0CD10();
    sub_1AFFC8E38();
    uint64_t v54 = (uint64_t)v83;
    sub_1AFFC9908();
    uint64_t v55 = v57;
    uint64_t v64 = sub_1AFFC98F8();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v54, 0, 1, v64);
  }
  else
  {
    uint64_t v56 = sub_1AFFC98F8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v83, 1, 1, v56);
    uint64_t v55 = v57;
  }
  uint64_t v62 = v82;
  char v63 = v74;
  sub_1AFF0CC54(v81, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928]);
LABEL_39:
  sub_1AFF0CBD4((uint64_t)(a1 + 55), (uint64_t)v97, &qword_1EB817038, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem.TimeZoneOffset);
  sub_1AFF0CBD4((uint64_t)v97, (uint64_t)&v88, &qword_1EB817038, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem.TimeZoneOffset);
  if ((BYTE9(v88) & 1) == 0)
  {
    uint64_t v109 = v88;
    char v110 = BYTE8(v88);
    uint64_t v65 = MEMORY[0x1E4FBB550];
    sub_1AFF0CBD4((uint64_t)&v109, (uint64_t)v111, &qword_1EB818050, MEMORY[0x1E4FBB550]);
    sub_1AFF0CBD4((uint64_t)v111, (uint64_t)&v112, &qword_1EB818050, v65);
    if ((v113 & 1) == 0)
    {
      uint64_t v66 = (uint64_t)v73;
      sub_1AFFC9B58();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(v66, 1, v8) != 1)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v55 + 32))(v62, v66, v8);
        goto LABEL_46;
      }
      sub_1AFF0CC54(v66, &qword_1EB816CF8, MEMORY[0x1E4F27D68]);
    }
  }
  if (qword_1EB8184F8 != -1) {
    swift_once();
  }
  uint64_t v67 = __swift_project_value_buffer(v8, (uint64_t)qword_1EB831AD8);
  (*(void (**)(char *, uint64_t, uint64_t))(v55 + 16))(v62, v67, v8);
LABEL_46:
  unint64_t v68 = 0x4030201uLL >> (8 * v63);
  uint64_t v69 = MEMORY[0x1E4FBB3D0];
  sub_1AFF0CBD4((uint64_t)(a1 + 39), (uint64_t)v96, &qword_1EB818040, MEMORY[0x1E4FBB3D0]);
  sub_1AFF0CBD4((uint64_t)(a1 + 41), (uint64_t)v95, &qword_1EB818040, v69);
  sub_1AFF0CBD4((uint64_t)(a1 + 37), (uint64_t)v94, &qword_1EB818040, v69);
  sub_1AFF0CBD4((uint64_t)a1, (uint64_t)v93, &qword_1EB818040, v69);
  sub_1AFF0CBD4((uint64_t)(a1 + 2), (uint64_t)v92, &qword_1EB818040, v69);
  sub_1AFF0CBD4((uint64_t)(a1 + 4), (uint64_t)v91, &qword_1EB818040, v69);
  sub_1AFF0CBD4((uint64_t)(a1 + 6), (uint64_t)v90, &qword_1EB818040, v69);
  sub_1AFF0CBD4((uint64_t)(a1 + 33), (uint64_t)v89, &qword_1EB818040, v69);
  uint64_t v70 = (int *)type metadata accessor for Quote();
  sub_1AFFC98E8();
  sub_1AFF0CBD4((uint64_t)v96, a3, &qword_1EB818040, v69);
  sub_1AFF0CBD4((uint64_t)v95, a3 + 16, &qword_1EB818040, v69);
  sub_1AFF0CBD4((uint64_t)v94, a3 + 32, &qword_1EB818040, v69);
  sub_1AFF0CBD4((uint64_t)v93, a3 + 48, &qword_1EB818040, v69);
  sub_1AFF0CBD4((uint64_t)v92, a3 + 64, &qword_1EB818040, v69);
  sub_1AFF0CBD4((uint64_t)v91, a3 + 80, &qword_1EB818040, v69);
  sub_1AFF0CBD4((uint64_t)v90, a3 + 96, &qword_1EB818040, v69);
  sub_1AFF0CBD4((uint64_t)v102, a3 + 112, (unint64_t *)&qword_1EB819C90, MEMORY[0x1E4FBB1A0]);
  *(unsigned char *)(a3 + 128) = v68;
  sub_1AFE90B98((uint64_t)v79, a3 + v70[13]);
  sub_1AFE90B98(v84, a3 + v70[14]);
  sub_1AFE90B98(v85, a3 + v70[15]);
  *(unsigned char *)(a3 + v70[16]) = v78;
  *(unsigned char *)(a3 + v70[17]) = v76;
  *(unsigned char *)(a3 + v70[18]) = v75;
  sub_1AFF0CBD4((uint64_t)v89, a3 + v70[19], &qword_1EB818040, v69);
  sub_1AFE90B98(v86, a3 + v70[20]);
  sub_1AFE90B98(v87, a3 + v70[21]);
  sub_1AFE90B98((uint64_t)v83, a3 + v70[23]);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v55 + 32))(a3 + v70[24], v82, v8);
}

uint64_t sub_1AFF0B2B4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(v3 + qword_1EB816960) + 16) - *(void *)(a2 + 16);
  *(void *)&long long v7 = *(void *)(*(void *)(v3 + qword_1EB816960) + 16);
  *((void *)&v7 + 1) = v4;
  uint64_t v8 = a2;
  uint64_t v9 = a3;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  if (a1)
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    sub_1AFF66034(a1, &v7);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    return swift_bridgeObjectRelease_n();
  }
  else
  {
    return swift_bridgeObjectRelease();
  }
}

void sub_1AFF0B380(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v69 = a2;
  uint64_t v66 = a1;
  uint64_t v71 = a3;
  uint64_t v70 = sub_1AFFC9808();
  uint64_t v73 = *(void *)(v70 - 8);
  MEMORY[0x1F4188790](v70);
  unint64_t v68 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_1AFFC97E8();
  uint64_t v76 = *(void *)(v64 - 8);
  uint64_t v5 = v76;
  MEMORY[0x1F4188790](v64);
  uint64_t v67 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_1AFFC97C8();
  uint64_t v72 = *(void *)(v65 - 8);
  uint64_t v7 = v72;
  MEMORY[0x1F4188790](v65);
  uint64_t v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_1AFFC97D8();
  uint64_t v10 = *(void *)(v62 - 8);
  MEMORY[0x1F4188790](v62);
  uint64_t v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_1AFFC9818();
  MEMORY[0x1F4188790](v63);
  uint64_t v58 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v15 = MEMORY[0x1F4188790](v14);
  int v60 = (char *)&v43 - v16;
  uint64_t v74 = v66;
  uint64_t v75 = a2;
  uint64_t v17 = *(void (**)(void, double))(v10 + 104);
  unsigned int v56 = *MEMORY[0x1E4F27880];
  uint64_t v57 = v10 + 104;
  uint64_t v55 = (void (*)(char *, void, uint64_t))v17;
  v17(v12, v15);
  uint64_t v18 = *(void (**)(void))(v7 + 104);
  unsigned int v53 = *MEMORY[0x1E4F27878];
  uint64_t v54 = v7 + 104;
  uint64_t v52 = (void (*)(char *, void, uint64_t))v18;
  v18(v9);
  uint64_t v19 = *(void (**)(void))(v5 + 104);
  uint64_t v20 = v67;
  unsigned int v50 = *MEMORY[0x1E4F27888];
  uint64_t v21 = v64;
  uint64_t v51 = v5 + 104;
  uint64_t v49 = (void (*)(char *, void, uint64_t))v19;
  v19(v67);
  uint64_t v22 = v73;
  uint64_t v23 = *(void (**)(void))(v73 + 104);
  uint64_t v24 = v68;
  unsigned int v47 = *MEMORY[0x1E4F27890];
  uint64_t v25 = v70;
  uint64_t v48 = v73 + 104;
  uint64_t v46 = (void (*)(char *, void, uint64_t))v23;
  v23(v68);
  sub_1AFFC8E38();
  sub_1AFFCA868();
  id v26 = *(void (**)(char *, uint64_t))(v22 + 8);
  uint64_t v73 = v22 + 8;
  uint64_t v45 = v26;
  v26(v24, v25);
  uint64_t v27 = *(void (**)(char *, uint64_t))(v76 + 8);
  v76 += 8;
  uint64_t v44 = v27;
  v27(v20, v21);
  uint64_t v28 = *(void (**)(char *, uint64_t))(v72 + 8);
  uint64_t v29 = v9;
  v72 += 8;
  v28(v9, v65);
  uint64_t v30 = *(char **)(v10 + 8);
  uint64_t v31 = v12;
  uint64_t v32 = v12;
  uint64_t v33 = v62;
  uint64_t v59 = v10 + 8;
  ((void (*)(char *))v30)(v32);
  uint64_t v34 = sub_1AFF0CABC(qword_1EB81A330, MEMORY[0x1E4F278A8]);
  uint64_t v35 = v61;
  sub_1AFFC9908();
  if (v35)
  {
    uint64_t v61 = v28;
    uint64_t v74 = v66;
    uint64_t v75 = v69;
    uint64_t v66 = v34;
    uint64_t v36 = v31;
    v55(v31, v56, v33);
    uint64_t v37 = v29;
    uint64_t v38 = v65;
    v52(v29, v53, v65);
    int v60 = v30;
    int v39 = v67;
    uint64_t v40 = v64;
    v49(v67, v50, v64);
    uint64_t v41 = v68;
    uint64_t v42 = v70;
    v46(v68, v47, v70);
    sub_1AFFC8E38();
    sub_1AFFCA868();
    v45(v41, v42);
    v44(v39, v40);
    v61(v37, v38);
    ((void (*)(char *, uint64_t))v60)(v36, v62);
    sub_1AFFC9908();
  }
}

uint64_t sub_1AFF0BA08(uint64_t a1)
{
  unint64_t v2 = sub_1AFF0CF3C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFF0BA44(uint64_t a1)
{
  unint64_t v2 = sub_1AFF0CF3C();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1AFF0BA80(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_1AFF0BAA0(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t sub_1AFF0BAC8(void *a1)
{
  sub_1AFF0CED4(0, &qword_1E9AFC8B0, (uint64_t (*)(void))sub_1AFF0CF3C, (uint64_t)&type metadata for SDSQuoteOperation.SDSTimestampParseStrategy.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFF0CF3C();
  sub_1AFFCBE78();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1AFF0BC08()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFF0BC40()
{
  return sub_1AFFCBE38();
}

void sub_1AFF0BC74()
{
}

uint64_t sub_1AFF0BCA4()
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + qword_1EB8170A8);
  uint64_t v1 = v0 + qword_1EB8170B8;
  uint64_t v2 = sub_1AFFC98F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + qword_1EB8170B0;
  uint64_t v4 = sub_1AFFC9E18();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFF0BD84(uint64_t a1)
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + qword_1EB8170A8);
  uint64_t v2 = a1 + qword_1EB8170B8;
  uint64_t v3 = sub_1AFFC98F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  uint64_t v4 = a1 + qword_1EB8170B0;
  uint64_t v5 = sub_1AFFC9E18();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFF0BE68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  sub_1AFFC8E48();
  sub_1AFF088DC((uint64_t)sub_1AFD3AB90, v4);

  return swift_release();
}

uint64_t sub_1AFF0BEE8()
{
  return type metadata accessor for SDSQuoteOperation();
}

uint64_t sub_1AFF0BEF0()
{
  swift_getObjectType();

  return sub_1AFFC9BB8();
}

uint64_t sub_1AFF0BF48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t ObjectType = swift_getObjectType();

  return MEMORY[0x1F415F240](a1, a2, ObjectType, a6);
}

uint64_t sub_1AFF0BFB0()
{
  swift_getObjectType();

  return sub_1AFFC9BC8();
}

uint64_t sub_1AFF0C020(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t ObjectType = swift_getObjectType();

  return MEMORY[0x1F415F238](a1, a2, a3, a4, ObjectType, a8);
}

uint64_t sub_1AFF0C0A0()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1AFF0C0D8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v6 = MEMORY[0x1E4FBC860];
    sub_1AFFCB8B8();
    uint64_t v4 = a1 + 32;
    sub_1AFF0C2C0(0, (unint64_t *)&qword_1EB817D88, (uint64_t (*)(uint64_t))sub_1AFF0C234, MEMORY[0x1E4FAB088]);
    do
    {
      v4 += 8;
      MEMORY[0x1F4188790](v5);
      swift_allocObject();
      sub_1AFFC8E38();
      sub_1AFFCA758();
      swift_bridgeObjectRelease();
      sub_1AFFCB888();
      sub_1AFFCB8C8();
      sub_1AFFCB8D8();
      uint64_t v5 = sub_1AFFCB898();
      --v2;
    }
    while (v2);
    return v6;
  }
  return result;
}

void sub_1AFF0C234()
{
  if (!qword_1EB817E90)
  {
    type metadata accessor for Quote();
    unint64_t v0 = sub_1AFFCAD18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB817E90);
    }
  }
}

uint64_t sub_1AFF0C29C(uint64_t a1)
{
  return sub_1AFF08B04(a1, *(void (**)(uint64_t, void))(v1 + 16));
}

void sub_1AFF0C2B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1AFF08C00(a1, a2, a3, a4, *(void *)(v4 + 16), *(void *)(v4 + 24));
}

void sub_1AFF0C2C0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1AFF0C324(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1AFF0CCC4(255, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AFF0C38C()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1AFF0C3C4()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 88, 7);
}

void sub_1AFF0C424(uint64_t a1)
{
  sub_1AFF09080(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void (**)(uint64_t))(v1 + 64), *(void *)(v1 + 72));
}

void sub_1AFF0C45C()
{
  if (!qword_1EB818570)
  {
    sub_1AFF0CED4(255, (unint64_t *)&qword_1EB818558, (uint64_t (*)(void))sub_1AFD30A78, (uint64_t)&type metadata for SDSQuoteResponse, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for SDSBaseOperationResponse);
    unint64_t v0 = sub_1AFFCA5F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB818570);
    }
  }
}

uint64_t sub_1AFF0C4EC(void *a1, uint64_t a2, uint64_t *a3, void *a4)
{
  return sub_1AFF0A00C(a1, a2, a3, a4);
}

void sub_1AFF0C508(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v41 = a2;
  sub_1AFF0C2C0(0, &qword_1EB817B00, (uint64_t (*)(uint64_t))type metadata accessor for Quote, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  unint64_t v8 = (char *)&v35 - v7;
  unint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
    uint64_t v39 = MEMORY[0x1E4FBC860];
    return;
  }
  unint64_t v10 = 0;
  uint64_t v11 = a1 + 40;
  uint64_t v43 = -(uint64_t)v9;
  uint64_t v38 = v3;
  uint64_t v39 = MEMORY[0x1E4FBC860];
  uint64_t v42 = (char *)&v35 - v7;
  uint64_t v40 = a3;
  uint64_t v36 = a1 + 40;
  unint64_t v37 = v9;
  do
  {
    if (v10 <= v9) {
      unint64_t v12 = v9;
    }
    else {
      unint64_t v12 = v10;
    }
    uint64_t v44 = -(uint64_t)v12;
    uint64_t v13 = (uint64_t *)(v11 + 16 * v10++);
    uint64_t v14 = v41;
    while (1)
    {
      if (v44 + v10 == 1)
      {
        __break(1u);
        return;
      }
      if (*(void *)(v14 + 16)) {
        break;
      }
LABEL_8:
      ++v10;
      v13 += 2;
      if (v43 + v10 == 1) {
        return;
      }
    }
    uint64_t v16 = *(v13 - 1);
    uint64_t v15 = *v13;
    swift_bridgeObjectRetain_n();
    sub_1AFD79CC8(v16, v15);
    char v18 = v17;
    swift_bridgeObjectRelease();
    if ((v18 & 1) == 0) {
      goto LABEL_7;
    }
    if (*(void *)(a3 + 16))
    {
      sub_1AFFC8E38();
      unint64_t v19 = sub_1AFD79CC8(v16, v15);
      if (v20)
      {
        unint64_t v21 = v19;
        uint64_t v22 = *(void *)(a3 + 56);
        uint64_t v23 = type metadata accessor for Quote();
        uint64_t v24 = *(void *)(v23 - 8);
        uint64_t v25 = v22 + *(void *)(v24 + 72) * v21;
        uint64_t v14 = v41;
        uint64_t v26 = (uint64_t)v42;
        sub_1AFF0CB6C(v25, (uint64_t)v42, (uint64_t (*)(void))type metadata accessor for Quote);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v24 + 56))(v26, 0, 1, v23);
        a3 = v40;
      }
      else
      {
        uint64_t v23 = type metadata accessor for Quote();
        uint64_t v26 = (uint64_t)v42;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v42, 1, 1, v23);
      }
      swift_bridgeObjectRelease();
      type metadata accessor for Quote();
      unint64_t v8 = (char *)v26;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48))(v26, 1, v23) == 1) {
        goto LABEL_19;
      }
      sub_1AFF0CC54(v26, &qword_1EB817B00, (uint64_t (*)(uint64_t))type metadata accessor for Quote);
LABEL_7:
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    uint64_t v27 = type metadata accessor for Quote();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v8, 1, 1, v27);
LABEL_19:
    sub_1AFF0CC54((uint64_t)v8, &qword_1EB817B00, (uint64_t (*)(uint64_t))type metadata accessor for Quote);
    uint64_t v28 = v39;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v30 = v28;
    uint64_t v45 = v28;
    uint64_t v31 = a3;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1AFD9DA10(0, *(void *)(v28 + 16) + 1, 1);
      uint64_t v30 = v45;
    }
    unint64_t v9 = v37;
    unint64_t v33 = *(void *)(v30 + 16);
    unint64_t v32 = *(void *)(v30 + 24);
    if (v33 >= v32 >> 1)
    {
      sub_1AFD9DA10(v32 > 1, v33 + 1, 1);
      uint64_t v30 = v45;
    }
    *(void *)(v30 + 16) = v33 + 1;
    uint64_t v39 = v30;
    uint64_t v34 = v30 + 16 * v33;
    *(void *)(v34 + 32) = v16;
    *(void *)(v34 + 40) = v15;
    a3 = v31;
    unint64_t v8 = v42;
    uint64_t v11 = v36;
  }
  while (v43 + v10);
}

void sub_1AFF0C924(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_1AFFCB468();
    sub_1AFF0C2C0(0, (unint64_t *)&qword_1EB81A100, (uint64_t (*)(uint64_t))sub_1AFD3AE64, MEMORY[0x1E4FBBE00]);
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_1AFFD05F0;
    uint64_t v3 = MEMORY[0x1E4FBB1A0];
    uint64_t v4 = MEMORY[0x1B3E8D630](a1, MEMORY[0x1E4FBB1A0]);
    uint64_t v6 = v5;
    *(void *)(v2 + 56) = v3;
    *(void *)(v2 + 64) = sub_1AFD2CE00();
    *(void *)(v2 + 32) = v4;
    *(void *)(v2 + 40) = v6;
    sub_1AFD8F6AC(0, (unint64_t *)&qword_1EB819EA0);
    id v7 = (id)sub_1AFFCB638();
    sub_1AFFCA878();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1AFF0CA6C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_1AFF0CABC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1AFF0CB04()
{
  if (!qword_1EB8181B0)
  {
    sub_1AFD8F6AC(255, (unint64_t *)&qword_1EB8181A8);
    unint64_t v0 = sub_1AFFCB658();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8181B0);
    }
  }
}

uint64_t sub_1AFF0CB6C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1AFF0CBD4(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1AFF0CCC4(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1AFF0CC54(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1AFF0C2C0(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1AFF0CCC4(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_1AFF0CD10()
{
  unint64_t result = qword_1EB818530;
  if (!qword_1EB818530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818530);
  }
  return result;
}

ValueMetadata *type metadata accessor for SDSQuoteOperation.SDSTimestampParseStrategy()
{
  return &type metadata for SDSQuoteOperation.SDSTimestampParseStrategy;
}

unint64_t sub_1AFF0CD78()
{
  unint64_t result = qword_1EB818548;
  if (!qword_1EB818548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818548);
  }
  return result;
}

unint64_t sub_1AFF0CDD0()
{
  unint64_t result = qword_1EB818550;
  if (!qword_1EB818550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818550);
  }
  return result;
}

unint64_t sub_1AFF0CE28()
{
  unint64_t result = qword_1EB818538;
  if (!qword_1EB818538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818538);
  }
  return result;
}

unint64_t sub_1AFF0CE80()
{
  unint64_t result = qword_1EB818540;
  if (!qword_1EB818540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818540);
  }
  return result;
}

void sub_1AFF0CED4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_1AFF0CF3C()
{
  unint64_t result = qword_1E9AFC8B8;
  if (!qword_1E9AFC8B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC8B8);
  }
  return result;
}

ValueMetadata *type metadata accessor for SDSQuoteOperation.SDSTimestampParseStrategy.CodingKeys()
{
  return &type metadata for SDSQuoteOperation.SDSTimestampParseStrategy.CodingKeys;
}

unint64_t sub_1AFF0CFA4()
{
  unint64_t result = qword_1E9AFC8C0;
  if (!qword_1E9AFC8C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC8C0);
  }
  return result;
}

unint64_t sub_1AFF0CFFC()
{
  unint64_t result = qword_1E9AFC8C8;
  if (!qword_1E9AFC8C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC8C8);
  }
  return result;
}

uint64_t sub_1AFF0D060(void *a1, uint64_t a2)
{
  sub_1AFF0E3D0(0, &qword_1E9AFC910, (uint64_t (*)(void))sub_1AFF0DE7C, (uint64_t)&type metadata for TestStockFeedService.TestData.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v8 = (char *)v10 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFF0DE7C();
  sub_1AFFCBE78();
  v10[1] = a2;
  sub_1AFF0DED0(0, &qword_1E9AFC8E8, &qword_1E9AFC8F0, (uint64_t)&type metadata for TestStockFeedService.TestData.Article);
  sub_1AFF0E0AC();
  sub_1AFFCBC58();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1AFF0D1F8(uint64_t a1)
{
  unint64_t v2 = sub_1AFF0E37C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFF0D234(uint64_t a1)
{
  unint64_t v2 = sub_1AFF0E37C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFF0D270@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v15 = a2;
  sub_1AFF0E3D0(0, &qword_1E9AFC948, (uint64_t (*)(void))sub_1AFF0E37C, (uint64_t)&type metadata for TestStockFeedService.TestData.Article.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v8 = (char *)&v14 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFF0E37C();
  sub_1AFFCBE68();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v15;
  uint64_t v10 = sub_1AFFCBB18();
  uint64_t v12 = v11;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *uint64_t v9 = v10;
  v9[1] = v12;
  return result;
}

uint64_t sub_1AFF0D420(void *a1)
{
  sub_1AFF0E3D0(0, &qword_1E9AFC958, (uint64_t (*)(void))sub_1AFF0E37C, (uint64_t)&type metadata for TestStockFeedService.TestData.Article.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFF0E37C();
  sub_1AFFCBE78();
  sub_1AFFCBC08();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1AFF0D588(uint64_t a1)
{
  unint64_t v2 = sub_1AFF0DE7C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFF0D5C4(uint64_t a1)
{
  unint64_t v2 = sub_1AFF0DE7C();

  return MEMORY[0x1F41862B0](a1, v2);
}

void *sub_1AFF0D600@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1AFF0DCA0(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1AFF0D62C(void *a1)
{
  return sub_1AFF0D060(a1, *v1);
}

uint64_t sub_1AFF0D648(void *a1, uint64_t a2)
{
  sub_1AFF0DB70();
  sub_1AFFCA008();
  uint64_t v4 = a1 + 8;
  uint64_t v5 = a1[11];
  uint64_t v6 = a1[12];
  __swift_project_boxed_opaque_existential_1(v4, v5);
  sub_1AFF0DF4C(0, (unint64_t *)&qword_1EB81A0E0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1AFFD05F0;
  uint64_t v8 = *(void *)(a2 + 24);
  *(void *)(v7 + 32) = *(void *)(a2 + 16);
  *(void *)(v7 + 40) = v8;
  sub_1AFFC8E38();
  sub_1AFE92B48(v7, v5, v6);
  swift_bridgeObjectRelease();
  uint64_t v9 = (void *)sub_1AFFCA5E8();
  uint64_t v10 = sub_1AFFCA5D8();
  swift_release();
  swift_release();

  return v10;
}

void *sub_1AFF0D764(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  long long v7 = *(_OWORD *)(a4 + 112);
  long long v40 = *(_OWORD *)(a4 + 96);
  long long v41 = v7;
  uint64_t v42 = *(void *)(a4 + 128);
  long long v8 = *(_OWORD *)(a4 + 48);
  long long v36 = *(_OWORD *)(a4 + 32);
  long long v37 = v8;
  long long v9 = *(_OWORD *)(a4 + 80);
  long long v38 = *(_OWORD *)(a4 + 64);
  long long v39 = v9;
  long long v10 = *(_OWORD *)(a4 + 16);
  long long v34 = *(_OWORD *)a4;
  long long v35 = v10;
  uint64_t result = (void *)sub_1AFE2A0F4(a2);
  if (!result) {
    goto LABEL_15;
  }
  if (!result[2])
  {
    __break(1u);
LABEL_14:
    uint64_t result = (void *)swift_bridgeObjectRelease();
    __break(1u);
LABEL_15:
    __break(1u);
    return result;
  }
  uint64_t v13 = result[4];
  uint64_t v12 = result[5];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 16)) {
    goto LABEL_14;
  }
  unint64_t v14 = sub_1AFD79CC8(v13, v12);
  if ((v15 & 1) == 0) {
    goto LABEL_14;
  }
  uint64_t v16 = *(void *)(*(void *)(a1 + 56) + 8 * v14);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  int64_t v17 = *(void *)(v16 + 16);
  if (v17)
  {
    uint64_t v30 = a3;
    *(void *)&v32[0] = MEMORY[0x1E4FBC860];
    sub_1AFD9DA10(0, v17, 0);
    uint64_t v18 = *(void *)&v32[0];
    unint64_t v19 = (uint64_t *)(v16 + 40);
    do
    {
      uint64_t v20 = *(v19 - 1);
      uint64_t v21 = *v19;
      *(void *)&v32[0] = v18;
      unint64_t v23 = *(void *)(v18 + 16);
      unint64_t v22 = *(void *)(v18 + 24);
      sub_1AFFC8E38();
      if (v23 >= v22 >> 1)
      {
        sub_1AFD9DA10(v22 > 1, v23 + 1, 1);
        uint64_t v18 = *(void *)&v32[0];
      }
      v19 += 2;
      *(void *)(v18 + 16) = v23 + 1;
      uint64_t v24 = v18 + 16 * v23;
      *(void *)(v24 + 32) = v20;
      *(void *)(v24 + 40) = v21;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease();
    a3 = v30;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v18 = MEMORY[0x1E4FBC860];
  }
  uint64_t v25 = a3 + 3;
  uint64_t v27 = a3[6];
  uint64_t v26 = a3[7];
  __swift_project_boxed_opaque_existential_1(v25, v27);
  v32[6] = v40;
  v32[7] = v41;
  uint64_t v33 = v42;
  v32[2] = v36;
  void v32[3] = v37;
  v32[4] = v38;
  v32[5] = v39;
  v32[0] = v34;
  v32[1] = v35;
  nullsub_1(v32);
  sub_1AFD2D884((uint64_t)v32, (uint64_t)v31);
  uint64_t v28 = *(uint64_t (**)(uint64_t, unsigned char *, uint64_t, uint64_t))(v26 + 8);
  sub_1AFD76370(a4);
  uint64_t v29 = v28(v18, v31, v27, v26);
  swift_bridgeObjectRelease();
  sub_1AFD76408(a4);
  return (void *)v29;
}

uint64_t sub_1AFF0D998()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TestStockFeedService()
{
  return self;
}

uint64_t sub_1AFF0DA04(long long *a1)
{
  uint64_t v2 = *v1;
  long long v3 = a1[7];
  long long v22 = a1[6];
  long long v23 = v3;
  uint64_t v24 = *((void *)a1 + 16);
  long long v4 = a1[3];
  long long v18 = a1[2];
  long long v19 = v4;
  long long v5 = a1[5];
  long long v20 = a1[4];
  long long v21 = v5;
  long long v6 = a1[1];
  long long v16 = *a1;
  long long v17 = v6;
  sub_1AFE74214();
  sub_1AFFCA7C8();
  uint64_t v7 = swift_allocObject();
  long long v8 = v20;
  *(_OWORD *)(v7 + 104) = v21;
  long long v9 = v23;
  *(_OWORD *)(v7 + 120) = v22;
  *(_OWORD *)(v7 + 136) = v9;
  long long v10 = v16;
  *(_OWORD *)(v7 + 40) = v17;
  long long v11 = v19;
  *(_OWORD *)(v7 + 56) = v18;
  *(_OWORD *)(v7 + 72) = v11;
  *(_OWORD *)(v7 + 88) = v8;
  *(void *)(v7 + 16) = v2;
  *(void *)(v7 + 152) = v24;
  *(_OWORD *)(v7 + 24) = v10;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_1AFE742F4;
  *(void *)(v12 + 24) = v7;
  sub_1AFFC8E48();
  sub_1AFD76370((uint64_t)&v16);
  uint64_t v13 = (void *)sub_1AFFCA5E8();
  sub_1AFD2D58C();
  uint64_t v14 = sub_1AFFCA668();
  swift_release();
  swift_release();

  return v14;
}

unint64_t sub_1AFF0DB70()
{
  unint64_t result = qword_1E9AFC8D0;
  if (!qword_1E9AFC8D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC8D0);
  }
  return result;
}

uint64_t sub_1AFF0DBC4()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 160, 7);
}

uint64_t sub_1AFF0DC3C()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1AFF0DC74(void *a1)
{
  return sub_1AFE72F20(a1, *(uint64_t (**)(void, void))(v1 + 16));
}

ValueMetadata *type metadata accessor for TestStockFeedService.TestData()
{
  return &type metadata for TestStockFeedService.TestData;
}

void *sub_1AFF0DCA0(void *a1)
{
  sub_1AFF0E3D0(0, &qword_1E9AFC8D8, (uint64_t (*)(void))sub_1AFF0DE7C, (uint64_t)&type metadata for TestStockFeedService.TestData.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v11 - v6;
  long long v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFF0DE7C();
  long long v9 = v8;
  sub_1AFFCBE68();
  if (!v1)
  {
    sub_1AFF0DED0(0, &qword_1E9AFC8E8, &qword_1E9AFC8F0, (uint64_t)&type metadata for TestStockFeedService.TestData.Article);
    sub_1AFF0DF98();
    sub_1AFFCBB58();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    long long v9 = (void *)v11[1];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v9;
}

unint64_t sub_1AFF0DE7C()
{
  unint64_t result = qword_1E9AFC8E0;
  if (!qword_1E9AFC8E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC8E0);
  }
  return result;
}

void sub_1AFF0DED0(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  if (!*a2)
  {
    sub_1AFF0DF4C(255, a3, a4, MEMORY[0x1E4FBB320]);
    unint64_t v5 = sub_1AFFCAD18();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1AFF0DF4C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_1AFF0DF98()
{
  unint64_t result = qword_1E9AFC8F8;
  if (!qword_1E9AFC8F8)
  {
    sub_1AFF0DED0(255, &qword_1E9AFC8E8, &qword_1E9AFC8F0, (uint64_t)&type metadata for TestStockFeedService.TestData.Article);
    sub_1AFF0E16C(&qword_1E9AFC900, (void (*)(void))sub_1AFF0E058);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC8F8);
  }
  return result;
}

unint64_t sub_1AFF0E058()
{
  unint64_t result = qword_1E9AFC908;
  if (!qword_1E9AFC908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC908);
  }
  return result;
}

unint64_t sub_1AFF0E0AC()
{
  unint64_t result = qword_1E9AFC918;
  if (!qword_1E9AFC918)
  {
    sub_1AFF0DED0(255, &qword_1E9AFC8E8, &qword_1E9AFC8F0, (uint64_t)&type metadata for TestStockFeedService.TestData.Article);
    sub_1AFF0E16C(&qword_1E9AFC920, (void (*)(void))sub_1AFF0E1FC);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC918);
  }
  return result;
}

uint64_t sub_1AFF0E16C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1AFF0DF4C(255, &qword_1E9AFC8F0, (uint64_t)&type metadata for TestStockFeedService.TestData.Article, MEMORY[0x1E4FBB320]);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1AFF0E1FC()
{
  unint64_t result = qword_1E9AFC928;
  if (!qword_1E9AFC928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC928);
  }
  return result;
}

ValueMetadata *type metadata accessor for TestStockFeedService.TestData.CodingKeys()
{
  return &type metadata for TestStockFeedService.TestData.CodingKeys;
}

ValueMetadata *type metadata accessor for TestStockFeedService.TestData.Article()
{
  return &type metadata for TestStockFeedService.TestData.Article;
}

unint64_t sub_1AFF0E278()
{
  unint64_t result = qword_1E9AFC930;
  if (!qword_1E9AFC930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC930);
  }
  return result;
}

unint64_t sub_1AFF0E2D0()
{
  unint64_t result = qword_1E9AFC938;
  if (!qword_1E9AFC938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC938);
  }
  return result;
}

unint64_t sub_1AFF0E328()
{
  unint64_t result = qword_1E9AFC940;
  if (!qword_1E9AFC940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC940);
  }
  return result;
}

unint64_t sub_1AFF0E37C()
{
  unint64_t result = qword_1E9AFC950;
  if (!qword_1E9AFC950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC950);
  }
  return result;
}

void sub_1AFF0E3D0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unsigned char *_s10StocksCore20TestStockFeedServiceC8TestDataV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1AFF0E4D4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for TestStockFeedService.TestData.Article.CodingKeys()
{
  return &type metadata for TestStockFeedService.TestData.Article.CodingKeys;
}

unint64_t sub_1AFF0E510()
{
  unint64_t result = qword_1E9AFC960;
  if (!qword_1E9AFC960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC960);
  }
  return result;
}

unint64_t sub_1AFF0E568()
{
  unint64_t result = qword_1E9AFC968;
  if (!qword_1E9AFC968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC968);
  }
  return result;
}

unint64_t sub_1AFF0E5C0()
{
  unint64_t result = qword_1E9AFC970;
  if (!qword_1E9AFC970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC970);
  }
  return result;
}

uint64_t type metadata accessor for YahooQuoteService()
{
  return self;
}

uint64_t sub_1AFF0E638(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_1AFFC9E18();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unint64_t v10 = &v39[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v11 = sub_1AFFC98F8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = &v39[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1AFD2CEB0(v3 + 16, (uint64_t)v39);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v12 + 16))(v14, a2, v11);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v8 + 16))(v10, a3, v7);
  char v15 = self;
  sub_1AFFC8E38();
  id v16 = objc_msgSend(v15, sel_sharedPreferences);
  long long v17 = v16;
  if (!v16)
  {
    uint64_t v22 = 0xE500000000000000;
    uint64_t v20 = 0x73752D6E65;
LABEL_8:

    uint64_t v27 = 0xE200000000000000;
    uint64_t v25 = 21333;
    goto LABEL_9;
  }
  id v18 = objc_msgSend(v16, sel_stocksLanguageCode);
  if (v18)
  {
    long long v19 = v18;
    uint64_t v20 = sub_1AFFCAE98();
    uint64_t v22 = v21;
  }
  else
  {
    uint64_t v22 = 0xE500000000000000;
    uint64_t v20 = 0x73752D6E65;
  }
  id v23 = objc_msgSend(v17, sel_stocksCountryCode);
  if (!v23) {
    goto LABEL_8;
  }
  uint64_t v24 = v23;
  uint64_t v25 = sub_1AFFCAE98();
  uint64_t v27 = v26;

LABEL_9:
  uint64_t v28 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v39, v40);
  double v29 = MEMORY[0x1F4188790](v28);
  uint64_t v31 = (uint64_t *)&v39[-((v30 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(uint64_t *, double))(v32 + 16))(v31, v29);
  id v33 = sub_1AFE1553C(a1, *v31, v20, v22, v25, v27, (uint64_t)v14, (uint64_t)v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
  sub_1AFF0F304();
  sub_1AFFC9EF8();
  id v34 = v33;
  sub_1AFFC9EA8();
  sub_1AFFCA798();
  swift_release();
  long long v35 = (void *)sub_1AFFCA5E8();
  sub_1AFF0F38C(0, (unint64_t *)&qword_1EB817E90, (uint64_t (*)(uint64_t))type metadata accessor for Quote, MEMORY[0x1E4FBAEA0]);
  uint64_t v36 = sub_1AFFCA678();

  swift_release();
  return v36;
}

uint64_t sub_1AFF0EA34@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1AFF0EF7C(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1AFF0EA60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1AFD2C83C();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v60 = (uint64_t)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v81 = (char *)&v55 - v7;
  MEMORY[0x1F4188790](v8);
  uint64_t v80 = (char *)&v55 - v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v55 - v11;
  MEMORY[0x1F4188790](v13);
  char v15 = (char *)&v55 - v14;
  MEMORY[0x1F4188790](v16);
  id v18 = (char *)&v55 - v17;
  long long v19 = (int *)type metadata accessor for YahooMultiQuoteItem(0);
  uint64_t v20 = a1 + v19[5];
  uint64_t v21 = *(void *)v20;
  int v22 = *(unsigned __int8 *)(v20 + 8);
  uint64_t v23 = a1 + v19[6];
  uint64_t v24 = *(void *)v23;
  uint64_t v73 = v21;
  uint64_t v74 = v24;
  LODWORD(v23) = *(unsigned __int8 *)(v23 + 8);
  int v75 = v22;
  int v76 = v23;
  uint64_t v25 = a1 + v19[7];
  uint64_t v26 = *(void *)v25;
  int v27 = *(unsigned __int8 *)(v25 + 8);
  uint64_t v28 = a1 + v19[8];
  uint64_t v29 = *(void *)v28;
  uint64_t v69 = v26;
  uint64_t v70 = v29;
  LODWORD(v28) = *(unsigned __int8 *)(v28 + 8);
  int v71 = v27;
  int v72 = v28;
  uint64_t v30 = a1 + v19[9];
  uint64_t v31 = *(void *)v30;
  int v32 = *(unsigned __int8 *)(v30 + 8);
  uint64_t v33 = a1 + v19[10];
  uint64_t v34 = *(void *)v33;
  uint64_t v65 = v31;
  uint64_t v66 = v34;
  LODWORD(v33) = *(unsigned __int8 *)(v33 + 8);
  int v67 = v32;
  int v68 = v33;
  uint64_t v35 = v19[12];
  uint64_t v36 = a1 + v19[11];
  uint64_t v37 = *(void *)v36;
  int v64 = *(unsigned __int8 *)(v36 + 8);
  uint64_t v38 = a1 + v35;
  uint64_t v40 = *(void *)(a1 + v35);
  uint64_t v39 = *(void *)(v38 + 8);
  uint64_t v62 = v37;
  uint64_t v63 = v40;
  uint64_t v55 = v39;
  int v61 = *(unsigned __int8 *)(a1 + v19[13]);
  uint64_t v41 = sub_1AFFC98F8();
  uint64_t v42 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56);
  uint64_t v77 = v18;
  v42(v18, 1, 1, v41);
  uint64_t v78 = v15;
  v42(v15, 1, 1, v41);
  uint64_t v43 = a1 + v19[14];
  BOOL v79 = v12;
  uint64_t v44 = (uint64_t)v12;
  uint64_t v45 = v55;
  sub_1AFF0F45C(v43, v44, (uint64_t (*)(void))sub_1AFD2C83C);
  char v46 = *(unsigned char *)(a1 + v19[17]);
  int v57 = *(unsigned __int8 *)(a1 + v19[18]);
  uint64_t v47 = v19[20];
  int v56 = *(unsigned __int8 *)(a1 + v19[19]);
  uint64_t v59 = *(void *)(a1 + v47);
  int v58 = *(unsigned __int8 *)(a1 + v47 + 8);
  v42(v80, 1, 1, v41);
  v42(v81, 1, 1, v41);
  uint64_t v48 = v60;
  sub_1AFF0F45C(a1, v60, (uint64_t (*)(void))sub_1AFD2C83C);
  uint64_t v49 = qword_1EB8184F8;
  sub_1AFFC8E38();
  if (v49 != -1) {
    swift_once();
  }
  uint64_t v50 = sub_1AFFC9B88();
  uint64_t v51 = __swift_project_value_buffer(v50, (uint64_t)qword_1EB831AD8);
  uint64_t v52 = (int *)type metadata accessor for Quote();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 16))(a2 + v52[24], v51, v50);
  sub_1AFFC98E8();
  *(void *)a2 = v73;
  *(unsigned char *)(a2 + 8) = v75;
  *(void *)(a2 + 16) = v74;
  *(unsigned char *)(a2 + 24) = v76;
  *(void *)(a2 + 32) = v69;
  *(unsigned char *)(a2 + 40) = v71;
  *(void *)(a2 + 48) = v70;
  *(unsigned char *)(a2 + 56) = v72;
  *(void *)(a2 + 64) = v65;
  *(unsigned char *)(a2 + 72) = v67;
  *(void *)(a2 + 80) = v66;
  *(unsigned char *)(a2 + 88) = v68;
  *(void *)(a2 + 96) = v62;
  *(unsigned char *)(a2 + 104) = v64;
  *(void *)(a2 + 112) = v63;
  *(void *)(a2 + 120) = v45;
  *(unsigned char *)(a2 + 128) = v61;
  sub_1AFF0F4C4((uint64_t)v77, a2 + v52[13], (uint64_t (*)(void))sub_1AFD2C83C);
  sub_1AFF0F4C4((uint64_t)v78, a2 + v52[14], (uint64_t (*)(void))sub_1AFD2C83C);
  sub_1AFF0F4C4((uint64_t)v79, a2 + v52[15], (uint64_t (*)(void))sub_1AFD2C83C);
  *(unsigned char *)(a2 + v52[16]) = v46;
  *(unsigned char *)(a2 + v52[17]) = v57;
  *(unsigned char *)(a2 + v52[18]) = v56;
  uint64_t v53 = a2 + v52[19];
  *(void *)uint64_t v53 = v59;
  *(unsigned char *)(v53 + 8) = v58;
  sub_1AFF0F4C4((uint64_t)v80, a2 + v52[20], (uint64_t (*)(void))sub_1AFD2C83C);
  sub_1AFF0F4C4((uint64_t)v81, a2 + v52[21], (uint64_t (*)(void))sub_1AFD2C83C);
  return sub_1AFF0F4C4(v48, a2 + v52[23], (uint64_t (*)(void))sub_1AFD2C83C);
}

uint64_t sub_1AFF0EF58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AFF0E638(a1, a2, a3);
}

uint64_t sub_1AFF0EF7C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Quote();
  uint64_t v32 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v34 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for YahooMultiQuoteItem(0);
  uint64_t v33 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFF0F38C(0, &qword_1EB818208, (uint64_t (*)(uint64_t))type metadata accessor for Quote, MEMORY[0x1E4FBBD58]);
  uint64_t result = sub_1AFFCB9D8();
  uint64_t v9 = (void *)result;
  int64_t v10 = 0;
  uint64_t v35 = a1;
  uint64_t v13 = *(void *)(a1 + 64);
  uint64_t v12 = a1 + 64;
  uint64_t v11 = v13;
  uint64_t v14 = 1 << *(unsigned char *)(v12 - 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v11;
  uint64_t v29 = v12;
  int64_t v30 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v31 = result + 64;
  uint64_t v17 = (uint64_t)v34;
  if ((v15 & v11) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v18 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  for (unint64_t i = v18 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v21)) + (v10 << 6))
  {
    uint64_t v23 = (uint64_t *)(*(void *)(v35 + 48) + 16 * i);
    uint64_t v24 = *v23;
    uint64_t v25 = v23[1];
    sub_1AFF0F45C(*(void *)(v35 + 56) + *(void *)(v33 + 72) * i, (uint64_t)v7, type metadata accessor for YahooMultiQuoteItem);
    sub_1AFFC8E38();
    sub_1AFF0EA60((uint64_t)v7, v17);
    if (v1)
    {
      swift_bridgeObjectRelease();
      swift_release();
      sub_1AFF0F400((uint64_t)v7);
      return (uint64_t)v9;
    }
    sub_1AFF0F400((uint64_t)v7);
    *(void *)(v31 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v26 = (void *)(v9[6] + 16 * i);
    void *v26 = v24;
    v26[1] = v25;
    uint64_t result = sub_1AFF0F4C4(v17, v9[7] + *(void *)(v32 + 72) * i, (uint64_t (*)(void))type metadata accessor for Quote);
    uint64_t v27 = v9[2];
    BOOL v20 = __OFADD__(v27, 1);
    uint64_t v28 = v27 + 1;
    if (v20)
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    v9[2] = v28;
    if (v16) {
      goto LABEL_4;
    }
LABEL_5:
    BOOL v20 = __OFADD__(v10++, 1);
    if (v20) {
      goto LABEL_27;
    }
    if (v10 >= v30) {
      return (uint64_t)v9;
    }
    unint64_t v21 = *(void *)(v29 + 8 * v10);
    if (!v21) {
      break;
    }
LABEL_15:
    unint64_t v16 = (v21 - 1) & v21;
  }
  int64_t v22 = v10 + 1;
  if (v10 + 1 >= v30) {
    return (uint64_t)v9;
  }
  unint64_t v21 = *(void *)(v29 + 8 * v22);
  if (v21) {
    goto LABEL_14;
  }
  int64_t v22 = v10 + 2;
  if (v10 + 2 >= v30) {
    return (uint64_t)v9;
  }
  unint64_t v21 = *(void *)(v29 + 8 * v22);
  if (v21) {
    goto LABEL_14;
  }
  int64_t v22 = v10 + 3;
  if (v10 + 3 >= v30) {
    return (uint64_t)v9;
  }
  unint64_t v21 = *(void *)(v29 + 8 * v22);
  if (v21)
  {
LABEL_14:
    int64_t v10 = v22;
    goto LABEL_15;
  }
  while (1)
  {
    int64_t v10 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v10 >= v30) {
      return (uint64_t)v9;
    }
    unint64_t v21 = *(void *)(v29 + 8 * v10);
    ++v22;
    if (v21) {
      goto LABEL_15;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_1AFF0F304()
{
  if (!qword_1EB81B520)
  {
    sub_1AFF0F38C(255, (unint64_t *)&qword_1EB81B528, type metadata accessor for YahooMultiQuoteItem, MEMORY[0x1E4FBAEA0]);
    unint64_t v0 = sub_1AFFCA788();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB81B520);
    }
  }
}

void sub_1AFF0F38C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, void, uint64_t, void))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, MEMORY[0x1E4FBB1A0], v7, MEMORY[0x1E4FBB1B0]);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1AFF0F400(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for YahooMultiQuoteItem(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1AFF0F45C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1AFF0F4C4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1AFF0F52C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_1AFD352FC(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1AFFCBA28();
  __break(1u);
  return result;
}

uint64_t sub_1AFF0F680(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_1AFD35574(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[17 * v8 + 4];
  if (a1 + 32 < v9 + 136 * v2 && v9 < a1 + 32 + 136 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1AFFCBA28();
  __break(1u);
  return result;
}

uint64_t sub_1AFF0F7DC(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  uint64_t v3 = sub_1AFD363C4(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[13 * v9 + 4];
  if (a1 + 32 < v10 + 104 * v8 && v10 < a1 + 32 + 104 * v8) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1AFFCBA28();
  __break(1u);
  return result;
}

uint64_t sub_1AFF0F93C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_1AFD36510(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[18 * v8 + 4];
  if (a1 + 32 < v9 + 144 * v2 && v9 < a1 + 32 + 144 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1AFFCBA28();
  __break(1u);
  return result;
}

uint64_t sub_1AFF0FA98(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  uint64_t v3 = sub_1AFD366EC(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = &v3[v9 + 4];
  if (a1 + 32 < (unint64_t)&v10[v8] && (unint64_t)v10 < a1 + 32 + 8 * v8) {
    goto LABEL_24;
  }
  memcpy(v10, (const void *)(a1 + 32), 8 * v8);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1AFFCBA28();
  __break(1u);
  return result;
}

uint64_t sub_1AFF0FBE4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v22 = v4 + v2;
  }
  else {
    int64_t v22 = v4;
  }
  unint64_t v3 = sub_1AFD36870(isUniquelyReferenced_nonNull_native, v22, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v9 = (*(void *)(v3 + 24) >> 1) - v8;
  uint64_t v10 = *(void *)(sub_1AFFC92C8() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = v3 + v12 + v11 * v8;
  unint64_t v14 = a1 + v12;
  uint64_t v15 = v11 * v2;
  unint64_t v16 = v13 + v15;
  unint64_t v17 = v14 + v15;
  if (v14 < v16 && v13 < v17) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t *v1 = v3;
    return result;
  }
  uint64_t v19 = *(void *)(v3 + 16);
  BOOL v20 = __OFADD__(v19, v2);
  uint64_t v21 = v19 + v2;
  if (!v20)
  {
    *(void *)(v3 + 16) = v21;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1AFFCBA28();
  __break(1u);
  return result;
}

unint64_t sub_1AFF0FD88()
{
  return 0xD000000000000018;
}

uint64_t sub_1AFF0FDA4()
{
  uint64_t v0 = sub_1AFFCA5C8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  unint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFFC9F98();
  sub_1AFECD508();
  sub_1AFFC8E48();
  sub_1AFFCA378();
  swift_release();
  swift_release();
  uint64_t v4 = *MEMORY[0x1E4FAB040];
  int64_t v5 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 104);
  v5(v3, v4, v0);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  uint64_t v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v3, v0);
  sub_1AFFC9F98();
  sub_1AFFCA388();
  swift_release();
  v5(v3, v4, v0);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  return ((uint64_t (*)(char *, uint64_t))v6)(v3, v0);
}

uint64_t sub_1AFF0FFBC(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_1AFFC9E08();
  MEMORY[0x1F4188790](v4 - 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t result = sub_1AFFC9E48();
  char v6 = v10[0];
  if (LOBYTE(v10[0]) == 2)
  {
    __break(1u);
  }
  else
  {
    sub_1AFFC9DF8();
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = a2;
    *(unsigned char *)(v7 + 24) = v6 & 1;
    sub_1AFECD508();
    swift_allocObject();
    sub_1AFFC8E48();
    sub_1AFFCA528();
    sub_1AFD2CEB0((uint64_t)a1, (uint64_t)v10);
    uint64_t v8 = swift_allocObject();
    *(unsigned char *)(v8 + 16) = v6 & 1;
    sub_1AFD80454(v10, v8 + 24);
    uint64_t v9 = sub_1AFFCA518();
    swift_release();
    swift_release();
    return v9;
  }
  return result;
}

uint64_t sub_1AFF10170@<X0>(uint64_t a1@<X0>, int a2@<W1>, void *a3@<X8>)
{
  int v69 = a2;
  int v75 = a3;
  v77[3] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v4 = sub_1AFFC96E8();
  uint64_t v73 = *(void *)(v4 - 8);
  uint64_t v74 = v4;
  MEMORY[0x1F4188790](v4);
  char v6 = &v68[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = &v68[-v8];
  MEMORY[0x1F4188790](v10);
  unint64_t v12 = &v68[-v11];
  uint64_t v70 = a1;
  id v15 = sub_1AFF10D18(v13, v14);
  if (qword_1EB81AB78 != -1) {
    swift_once();
  }
  sub_1AFE9FDD4((uint64_t)v12);
  int v72 = v12;
  sub_1AFFC9648();
  unint64_t v16 = self;
  unint64_t v17 = (void *)sub_1AFFC9638();
  id v18 = objc_msgSend(v16, sel_preferredFileURLForSchema_parentDirectoryURL_, v15, v17);

  sub_1AFFC9678();
  uint64_t v19 = self;
  id v20 = objc_msgSend(v19, sel_defaultManager);
  uint64_t v21 = (void *)sub_1AFFC9638();
  sub_1AFDFAD90(MEMORY[0x1E4FBC860]);
  type metadata accessor for FileAttributeKey(0);
  sub_1AFF11424((unint64_t *)&unk_1EB8180C0, 255, type metadata accessor for FileAttributeKey);
  int64_t v22 = (void *)sub_1AFFCAC78();
  swift_bridgeObjectRelease();
  v77[0] = 0;
  unsigned int v23 = objc_msgSend(v20, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v21, 1, v22, v77);

  if (v23)
  {
    id v24 = v77[0];
  }
  else
  {
    id v25 = v77[0];
    uint64_t v26 = (void *)sub_1AFFC9508();

    swift_willThrow();
  }
  sub_1AFF1146C((uint64_t)v6, (uint64_t)v15);
  if (qword_1EB818098 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v27 = (id)qword_1EB818090;
  uint64_t v28 = (void *)sub_1AFFCAE68();
  unsigned int v29 = objc_msgSend(v27, sel_BOOLForKey_, v28);

  if (v29)
  {
    sub_1AFD8F6AC(0, (unint64_t *)&qword_1EB819EA0);
    int64_t v30 = (void *)sub_1AFFCB638();
    sub_1AFFCB478();
    sub_1AFFCA878();

    id v31 = (id)qword_1EB818090;
    uint64_t v32 = (void *)sub_1AFFCAE68();
    objc_msgSend(v31, sel_setBool_forKey_, 0, v32);

    id v33 = objc_msgSend(v19, sel_defaultManager);
    uint64_t v34 = (void *)sub_1AFFC9638();
    v76[0] = 0;
    LODWORD(v32) = objc_msgSend(v33, sel_removeItemAtURL_error_, v34, v76);

    if (v32)
    {
      id v35 = v76[0];
    }
    else
    {
      id v36 = v76[0];
      uint64_t v37 = (void *)sub_1AFFC9508();

      swift_willThrow();
    }
  }
  id v38 = (id)qword_1EB818090;
  uint64_t v39 = (void *)sub_1AFFCAE68();
  objc_msgSend(v38, sel_setBool_forKey_, 1, v39);

  sub_1AFF11C94(0, &qword_1EB8183E8, (uint64_t (*)(uint64_t))sub_1AFD3794C, MEMORY[0x1E4FBBE00]);
  uint64_t v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_1AFFE3760;
  type metadata accessor for UpdateUserIDCommand();
  objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_classForKeyedUnarchiver);
  *(void *)(v40 + 32) = swift_getObjCClassMetadata();
  type metadata accessor for UpdateAdsUserIDCommand();
  objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_classForKeyedUnarchiver);
  *(void *)(v40 + 40) = swift_getObjCClassMetadata();
  sub_1AFD8F6AC(0, &qword_1EB8181B8);
  objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_classForKeyedUnarchiver);
  *(void *)(v40 + 48) = swift_getObjCClassMetadata();
  type metadata accessor for UpdateUserStartDateCommand();
  objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_classForKeyedUnarchiver);
  *(void *)(v40 + 56) = swift_getObjCClassMetadata();
  sub_1AFD8F6AC(0, (unint64_t *)&unk_1EB818180);
  objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_classForKeyedUnarchiver);
  *(void *)(v40 + 64) = swift_getObjCClassMetadata();
  type metadata accessor for UpdateUpsellAppLaunchCountCommand();
  objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_classForKeyedUnarchiver);
  *(void *)(v40 + 72) = swift_getObjCClassMetadata();
  type metadata accessor for UpdateLastAppLaunchUpsellInstanceIDCommand();
  objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_classForKeyedUnarchiver);
  *(void *)(v40 + 80) = swift_getObjCClassMetadata();
  type metadata accessor for UpdateAppLaunchUpsellLastSeenDateCommand();
  objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_classForKeyedUnarchiver);
  *(void *)(v40 + 88) = swift_getObjCClassMetadata();
  type metadata accessor for UpdateAppReviewRequestLastSeenDateCommand();
  objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_classForKeyedUnarchiver);
  *(void *)(v40 + 96) = swift_getObjCClassMetadata();
  uint64_t v41 = self;
  id v42 = objc_msgSend(v41, sel_supportedCommands);
  sub_1AFD3794C();
  uint64_t v43 = sub_1AFFCB1C8();

  v76[0] = (id)v40;
  id v44 = v15;
  sub_1AFF0FA98(v43);
  id v45 = objc_allocWithZone((Class)SCWDatabaseJSONStore);
  char v46 = (void *)sub_1AFFC9638();
  uint64_t v47 = (void *)sub_1AFFCB1B8();
  swift_bridgeObjectRelease();
  id v48 = objc_msgSend(v45, sel_initWithSchema_fileURL_allowedCommandClasses_, v44, v46, v47);

  id v49 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F179C8]), sel_init);
  id v50 = objc_msgSend(v49, sel_aa_primaryAppleAccount);

  int v71 = v6;
  if (v50)
  {
    if (objc_msgSend(v50, sel_sc_isEnabledForStocksDataclass))
    {
      if (v69)
      {
        uint64_t v51 = v9;
        uint64_t v52 = 3;
        goto LABEL_20;
      }
      uint64_t v51 = v9;
      sub_1AFD8F6AC(0, (unint64_t *)&qword_1EB819EA0);
      uint64_t v53 = sub_1AFFCB638();
      sub_1AFFCB478();
      sub_1AFFCA878();

      uint64_t v52 = 1;
    }
    else
    {
      uint64_t v51 = v9;
      sub_1AFD8F6AC(0, (unint64_t *)&qword_1EB819EA0);
      uint64_t v53 = sub_1AFFCB638();
      sub_1AFFCB478();
      sub_1AFFCA878();

      uint64_t v52 = 0;
    }
    id v50 = (id)v53;
  }
  else
  {
    uint64_t v51 = v9;
    sub_1AFD8F6AC(0, (unint64_t *)&qword_1EB819EA0);
    id v50 = (id)sub_1AFFCB638();
    sub_1AFFCB478();
    sub_1AFFCA878();
    uint64_t v52 = 0;
  }
LABEL_20:

  id v54 = (id)qword_1EB818090;
  uint64_t v55 = (void *)sub_1AFFCAE68();
  unsigned int v56 = objc_msgSend(v54, sel_BOOLForKey_, v55);

  if (v56)
  {
    sub_1AFD8F6AC(0, (unint64_t *)&qword_1EB819EA0);
    int v57 = (void *)sub_1AFFCB638();
    sub_1AFFCB478();
    sub_1AFFCA878();

    v52 |= 4uLL;
    id v58 = (id)qword_1EB818090;
    uint64_t v59 = (void *)sub_1AFFCAE68();
    objc_msgSend(v58, sel_setBool_forKey_, 0, v59);

    if (qword_1EB811010 != -1) {
      swift_once();
    }
    LOBYTE(v76[0]) = 0;
    type metadata accessor for LegacyStocksAssembly();
    sub_1AFF11424(&qword_1E9AFC978, v60, (void (*)(uint64_t))type metadata accessor for LegacyStocksAssembly);
    sub_1AFFC9CF8();
  }
  sub_1AFF11CF8();
  uint64_t v61 = swift_allocObject();
  *(_OWORD *)(v61 + 16) = xmmword_1AFFD88D0;
  *(void *)(v61 + 32) = objc_msgSend(v41, sel_zoneMergeHandler);
  type metadata accessor for UserInfoMergeHandler();
  *(void *)(v61 + 40) = swift_allocObject();
  v76[0] = (id)v61;
  sub_1AFFCB1E8();
  id v62 = objc_allocWithZone((Class)SCWDatabase);
  sub_1AFF11D54();
  uint64_t v63 = (void *)sub_1AFFCB1B8();
  swift_bridgeObjectRelease();
  id v64 = objc_msgSend(v62, sel_initWithSchema_store_features_mergeHandlers_containerProxy_, v44, v48, v52, v63, 0);

  uint64_t v65 = v74;
  uint64_t v66 = *(void (**)(unsigned char *, uint64_t))(v73 + 8);
  v66(v71, v74);
  v66(v51, v65);
  uint64_t result = ((uint64_t (*)(unsigned char *, uint64_t))v66)(v72, v65);
  *int v75 = v64;
  return result;
}

id sub_1AFF10D18(uint64_t a1, uint64_t a2)
{
  if (qword_1EB819B40 != -1) {
    swift_once();
  }
  sub_1AFF11424(&qword_1EB816D00, a2, (void (*)(uint64_t))type metadata accessor for LegacyStocksAssembly);
  sub_1AFFC9BB8();
  if (v11 - 2 < 6 || v11)
  {
    sub_1AFF11CF8();
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_1AFFD88D0;
    *(void *)(v2 + 32) = objc_msgSend(self, sel_zoneSchema);
    *(void *)(v2 + 40) = sub_1AFDEA328();
    sub_1AFFCB1E8();
    id v3 = objc_allocWithZone((Class)SCWDatabaseSchema);
    uint64_t v4 = (void *)sub_1AFFCAE68();
    sub_1AFD8F6AC(0, &qword_1EB818078);
    uint64_t v5 = (void *)sub_1AFFCB1B8();
    swift_bridgeObjectRelease();
    id v6 = objc_msgSend(v3, sel_initWithName_environment_security_zoneSchemas_, v4, 0, 1, v5);
  }
  else
  {
    sub_1AFF11CF8();
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1AFFD88D0;
    *(void *)(v9 + 32) = objc_msgSend(self, sel_zoneSchema);
    *(void *)(v9 + 40) = sub_1AFDEA328();
    sub_1AFFCB1E8();
    id v10 = objc_allocWithZone((Class)SCWDatabaseSchema);
    uint64_t v4 = (void *)sub_1AFFCAE68();
    sub_1AFD8F6AC(0, &qword_1EB818078);
    uint64_t v5 = (void *)sub_1AFFCB1B8();
    swift_bridgeObjectRelease();
    id v6 = objc_msgSend(v10, sel_initWithName_environment_security_zoneSchemas_, v4, 1, 1, v5);
  }
  id v7 = v6;

  return v7;
}

uint64_t sub_1AFF11050(void **a1, char a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  sub_1AFD2CEB0(a3, (uint64_t)v8);
  uint64_t v5 = swift_allocObject();
  *(unsigned char *)(v5 + 16) = a2;
  sub_1AFD80454(v8, v5 + 24);
  *(void *)(v5 + 64) = v4;
  id v6 = v4;
  sub_1AFFCA828();
  return swift_release();
}

void sub_1AFF110E4(char a1, void *a2)
{
  uint64_t v4 = sub_1AFFCA488();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (a1)
  {
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    sub_1AFFCA478();
    if (sub_1AFFC9E58())
    {
      sub_1AFF113BC();
      (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAAE80], v4);
      sub_1AFFCA458();
      swift_release();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t type metadata accessor for LegacyStocksAssembly()
{
  return self;
}

uint64_t sub_1AFF11270()
{
  return sub_1AFF0FDA4();
}

uint64_t sub_1AFF11294(uint64_t a1, uint64_t a2)
{
  return sub_1AFF11424(&qword_1EB816D00, a2, (void (*)(uint64_t))type metadata accessor for LegacyStocksAssembly);
}

uint64_t sub_1AFF112DC(void *a1)
{
  return sub_1AFF0FFBC(a1, v1);
}

uint64_t sub_1AFF112E4()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 25, 7);
}

uint64_t sub_1AFF1131C@<X0>(void *a1@<X8>)
{
  return sub_1AFF10170(*(void *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), a1);
}

uint64_t sub_1AFF11328()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);

  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_1AFF11360(void **a1)
{
  return sub_1AFF11050(a1, *(unsigned char *)(v1 + 16), v1 + 24);
}

uint64_t sub_1AFF1136C()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);

  return MEMORY[0x1F4186498](v0, 72, 7);
}

void sub_1AFF113AC()
{
  sub_1AFF110E4(*(unsigned char *)(v0 + 16), (void *)(v0 + 24));
}

unint64_t sub_1AFF113BC()
{
  unint64_t result = qword_1EB818058;
  if (!qword_1EB818058)
  {
    sub_1AFD8F6AC(255, (unint64_t *)&unk_1EB81AC90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818058);
  }
  return result;
}

uint64_t sub_1AFF11424(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1AFF1146C(uint64_t a1, uint64_t a2)
{
  uint64_t v81 = *MEMORY[0x1E4F143B8];
  sub_1AFF11C94(0, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v61 - v5;
  id v7 = (int *)sub_1AFFC96E8();
  uint64_t v8 = *((void *)v7 - 1);
  MEMORY[0x1F4188790](v7);
  uint64_t v77 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  unint64_t v12 = (char *)&v61 - v11;
  MEMORY[0x1F4188790](v13);
  id v15 = (char *)&v61 - v14;
  MEMORY[0x1F4188790](v16);
  id v18 = (char *)&v61 - v17;
  id v72 = self;
  id v19 = objc_msgSend(v72, sel_defaultManager);
  uint64_t v73 = a1;
  sub_1AFFC96A8();
  id v20 = (void *)sub_1AFFCAE68();
  swift_bridgeObjectRelease();
  LOBYTE(a1) = objc_msgSend(v19, sel_fileExistsAtPath_, v20);

  if ((a1 & 1) == 0)
  {
    int v71 = v12;
    uint64_t v21 = a2;
    sub_1AFF11C94(0, &qword_1EB81AE50, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBBE00]);
    unint64_t v22 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    int v76 = *(char **)(v8 + 72);
    uint64_t v23 = swift_allocObject();
    long long v63 = xmmword_1AFFD0610;
    *(_OWORD *)(v23 + 16) = xmmword_1AFFD0610;
    uint64_t v74 = v23;
    unint64_t v75 = v23 + v22;
    id v24 = self;
    id v25 = (void *)v8;
    if (qword_1EB81AB78 != -1) {
LABEL_13:
    }
      swift_once();
    sub_1AFE9FDD4((uint64_t)v15);
    sub_1AFFC9648();
    id v27 = v25 + 1;
    uint64_t v26 = (void (*)(char *, int *))v25[1];
    v26(v15, v7);
    uint64_t v28 = (void *)sub_1AFFC9638();
    v26(v18, v7);
    id v29 = objc_msgSend(v24, sel_preferredFileURLForSchema_parentDirectoryURL_, v21, v28);
    int v69 = (unsigned int (**)(char *, uint64_t, int *))v24;
    id v30 = v29;

    sub_1AFFC9678();
    id v31 = (void (*)(void, void, void))v25[4];
    v25 += 4;
    id v24 = v31;
    unint64_t v32 = v75;
    v31(v75, v18, v7);
    uint64_t v70 = (void (**)(char *, unint64_t, int *))&v76[v32];
    id v33 = v71;
    sub_1AFE9FDD4((uint64_t)v71);
    sub_1AFFC9648();
    v26(v33, v7);
    uint64_t v34 = (void *)sub_1AFFC9638();
    uint64_t v66 = v26;
    int v67 = v27;
    v26(v15, v7);
    id v35 = objc_msgSend(v69, sel_preferredFileURLForSchema_parentDirectoryURL_, v21, v34);

    sub_1AFFC9678();
    id v36 = v7;
    uint64_t v65 = (void (*)(char *, char *, int *))v31;
    v31(v70, v15, v7);
    uint64_t v37 = 0;
    unint64_t v38 = 0;
    uint64_t v70 = (void (**)(char *, unint64_t, int *))(v25 - 2);
    int v71 = (char *)(v25 + 3);
    int v68 = v25;
    int v69 = (unsigned int (**)(char *, uint64_t, int *))(v25 + 2);
    long long v64 = xmmword_1AFFD05F0;
    id v7 = &dword_1AFD01000;
    id v18 = v76;
    id v15 = v77;
    unint64_t v39 = v75;
    id v62 = v6;
    while (1)
    {
      uint64_t v21 = v37;
      if (v38 >= *(void *)(v74 + 16))
      {
        __break(1u);
        goto LABEL_13;
      }
      (*v70)(v6, v39 + v38 * (void)v18, v36);
      uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t, int *))v71;
      (*(void (**)(char *, void, uint64_t, int *))v71)(v6, 0, 1, v36);
      if ((*v69)(v6, 1, v36) == 1) {
        goto LABEL_10;
      }
      uint64_t v61 = v40;
      LODWORD(v77) = v21;
      v65(v15, v6, v36);
      sub_1AFD2CD48();
      uint64_t v41 = swift_allocObject();
      *(_OWORD *)(v41 + 16) = v64;
      uint64_t v42 = sub_1AFFC96A8();
      uint64_t v44 = v43;
      *(void *)(v41 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v45 = sub_1AFD2CE00();
      *(void *)(v41 + 64) = v45;
      *(void *)(v41 + 32) = v42;
      *(void *)(v41 + 40) = v44;
      id v25 = (void *)sub_1AFD8F6AC(0, (unint64_t *)&qword_1EB819EA0);
      char v46 = (void *)sub_1AFFCB638();
      sub_1AFFCB478();
      sub_1AFFCA878();
      swift_bridgeObjectRelease();

      id v47 = objc_msgSend(v72, sel_defaultManager);
      id v48 = (void *)sub_1AFFC9638();
      id v49 = (void *)sub_1AFFC9638();
      id v79 = 0;
      id v50 = v15;
      unsigned int v51 = objc_msgSend(v47, sel_copyItemAtURL_toURL_error_, v48, v49, &v79);

      if (v51) {
        break;
      }
      id v52 = v79;
      id v24 = (void *)sub_1AFFC9508();

      swift_willThrow();
      uint64_t v53 = swift_allocObject();
      *(_OWORD *)(v53 + 16) = v63;
      uint64_t v54 = sub_1AFFC96A8();
      uint64_t v55 = MEMORY[0x1E4FBB1A0];
      *(void *)(v53 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v53 + 64) = v45;
      *(void *)(v53 + 32) = v54;
      *(void *)(v53 + 40) = v56;
      id v79 = 0;
      unint64_t v80 = 0xE000000000000000;
      uint64_t v78 = v24;
      sub_1AFD2CDB0(0, (unint64_t *)&qword_1EB81A110);
      sub_1AFFCB928();
      id v57 = v79;
      unint64_t v58 = v80;
      *(void *)(v53 + 96) = v55;
      *(void *)(v53 + 104) = v45;
      *(void *)(v53 + 72) = v57;
      *(void *)(v53 + 80) = v58;
      uint64_t v59 = (void *)sub_1AFFCB638();
      sub_1AFFCB478();
      sub_1AFFCA878();
      swift_bridgeObjectRelease();

      v66(v50, v36);
      uint64_t v37 = 1;
      unint64_t v38 = 1;
      uint64_t v6 = v62;
      id v15 = v50;
      unint64_t v39 = v75;
      id v18 = v76;
      if (v77)
      {
        v61(v62, 1, 1, v36);
        goto LABEL_10;
      }
    }
    id v60 = v79;
    v66(v50, v36);
LABEL_10:
    swift_bridgeObjectRelease();
  }
}

void sub_1AFF11C94(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1AFF11CF8()
{
  if (!qword_1EB8183E0)
  {
    unint64_t v0 = sub_1AFFCBC98();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8183E0);
    }
  }
}

unint64_t sub_1AFF11D54()
{
  unint64_t result = qword_1EB8180A0;
  if (!qword_1EB8180A0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB8180A0);
  }
  return result;
}

StocksCore::ChartRange_optional __swiftcall ChartRange.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1AFFCBA78();
  result.value = swift_bridgeObjectRelease();
  char v5 = 11;
  if (v3 < 0xB) {
    char v5 = v3;
  }
  char *v2 = v5;
  return result;
}

uint64_t ChartRange.rawValue.getter()
{
  uint64_t result = 0x796144656E6FLL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6B656557656E6FLL;
      break;
    case 2:
      uint64_t result = 0x68746E6F4D656E6FLL;
      break;
    case 3:
      uint64_t result = 0x6E6F4D6565726874;
      break;
    case 4:
      uint64_t result = 0x68746E6F4D786973;
      break;
    case 5:
      uint64_t result = 0x61446F5472616579;
      break;
    case 6:
      uint64_t result = 0x72616559656E6FLL;
      break;
    case 7:
      unsigned int v2 = 1500477300;
      goto LABEL_10;
    case 8:
      uint64_t result = 0x7261655965766966;
      break;
    case 9:
      unsigned int v2 = 1500407156;
LABEL_10:
      uint64_t result = v2 | 0x7372616500000000;
      break;
    case 0xA:
      uint64_t result = 7105633;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1AFF11F54(unsigned __int8 *a1, char *a2)
{
  return sub_1AFDF0924(*a1, *a2);
}

unint64_t sub_1AFF11F64()
{
  unint64_t result = qword_1EB810C98;
  if (!qword_1EB810C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB810C98);
  }
  return result;
}

uint64_t sub_1AFF11FB8()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFF12000()
{
  return sub_1AFD786E8();
}

uint64_t sub_1AFF12008()
{
  return sub_1AFFCBE38();
}

StocksCore::ChartRange_optional sub_1AFF1204C(Swift::String *a1)
{
  return ChartRange.init(rawValue:)(*a1);
}

uint64_t sub_1AFF12058@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ChartRange.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1AFF12080(uint64_t a1)
{
  unint64_t v2 = sub_1AFF12318();
  uint64_t v3 = MEMORY[0x1E4FAB458];

  return MEMORY[0x1F415F4F8](a1, v2, v3);
}

uint64_t sub_1AFF120D4(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1AFF12318();
  uint64_t v5 = MEMORY[0x1E4FAB458];

  return MEMORY[0x1F415F4F0](a1, a2, v4, v5);
}

uint64_t sub_1AFF12130(uint64_t a1)
{
  unint64_t v2 = sub_1AFF12318();
  uint64_t v3 = MEMORY[0x1E4FAB458];

  return MEMORY[0x1F415F4E8](a1, v2, v3);
}

uint64_t getEnumTagSinglePayload for ChartRange(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF6) {
    goto LABEL_17;
  }
  if (a2 + 10 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 10) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 10;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xB;
  int v8 = v6 - 11;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ChartRange(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *uint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFF122E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ChartRange()
{
  return &type metadata for ChartRange;
}

unint64_t sub_1AFF12318()
{
  unint64_t result = qword_1EB810CA0;
  if (!qword_1EB810CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB810CA0);
  }
  return result;
}

uint64_t type metadata accessor for SDSNewsOperation()
{
  uint64_t result = qword_1E9AFC9B8;
  if (!qword_1E9AFC9B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1AFF123B8()
{
  uint64_t result = sub_1AFFC9E18();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void sub_1AFF12474(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1AFFC98F8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  int v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1((void *)(v2 + qword_1E9AFC9A0), *(void *)(v2 + qword_1E9AFC9A0 + 24));
  sub_1AFF14404(0, (unint64_t *)&qword_1EB81A0E8, (uint64_t (*)(uint64_t))sub_1AFD306F8, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AFFD05F0;
  *(void *)(inited + 32) = 0x6C6F626D7973;
  *(void *)(inited + 40) = 0xE600000000000000;
  uint64_t v10 = *(void *)(v2 + qword_1E9AFC998 + 8);
  *(void *)(inited + 48) = *(void *)(v2 + qword_1E9AFC998);
  *(void *)(inited + 56) = v10;
  sub_1AFFC8E38();
  sub_1AFDF9B10(inited);
  sub_1AFFC98E8();
  uint64_t v11 = sub_1AFEC600C(1);
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRelease();
  unint64_t v12 = (void *)((char *)v11 + *(void *)(qword_1EB831B00 + (*MEMORY[0x1E4FBC8C8] & *v11) + 16));
  uint64_t v13 = *v12;
  *unint64_t v12 = (uint64_t)sub_1AFF1271C;
  v12[1] = 0;
  sub_1AFD309C0(v13);
  uint64_t v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v15 = (void *)swift_allocObject();
  void v15[2] = v14;
  v15[3] = a1;
  v15[4] = a2;
  uint64_t v16 = v11;
  sub_1AFFC8E48();
  sub_1AFFC9F18();

  objc_msgSend(v16, sel_start);
}

uint64_t sub_1AFF1271C(uint64_t a1, uint64_t a2)
{
  v3[2] = a1;
  return sub_1AFF9DE90((void (*)(uint64_t))sub_1AFF144D8, (uint64_t)v3, a2);
}

uint64_t sub_1AFF1276C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1AFF1406C();
  MEMORY[0x1F4188790](v6 - 8);
  int v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFF14404(0, &qword_1E9AFC9D0, (uint64_t (*)(uint64_t))sub_1AFF1406C, MEMORY[0x1E4FAB068]);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (id *)((char *)&v25 - v10);
  sub_1AFF140C8(a2, (uint64_t)&v25 - v10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {

    sub_1AFD31570();
    uint64_t v13 = a3 + *(int *)(v12 + 48);
    uint64_t v14 = sub_1AFFCA368();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(a3, a1, v14);
    *(_OWORD *)uint64_t v13 = xmmword_1AFFD0DD0;
    uint64_t v15 = MEMORY[0x1E4FBC860];
    *(void *)(v13 + 16) = MEMORY[0x1E4FBC860];
    *(void *)(v13 + 24) = v15;
    type metadata accessor for NetworkEvent();
    *(void *)(v13 + 32) = 0;
    *(void *)(v13 + 40) = 0;
  }
  else
  {
    sub_1AFF1415C((uint64_t)v11, (uint64_t)v8);
    uint64_t v16 = sub_1AFFCA368();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(a3, a1, v16);
    sub_1AFF14248(0, &qword_1E9AFC9D8, (uint64_t)&type metadata for SDSNewsResponse, MEMORY[0x1E4FAAE30]);
    sub_1AFFCA3A8();
    uint64_t v17 = v25;
    sub_1AFD30C94(v26, v27);
    uint64_t v18 = *(void *)(v17 + 16);
    swift_bridgeObjectRelease();
    sub_1AFFCA3A8();
    swift_bridgeObjectRelease();
    uint64_t v19 = v27;
    if (v27)
    {
      uint64_t v20 = v26;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v20 = 0;
    }
    sub_1AFD31570();
    unint64_t v22 = (void *)(a3 + *(int *)(v21 + 48));
    sub_1AFF14310((uint64_t)v8);
    *unint64_t v22 = 1;
    v22[1] = v18;
    uint64_t v23 = MEMORY[0x1E4FBC860];
    v22[2] = MEMORY[0x1E4FBC860];
    v22[3] = v23;
    v22[4] = v20;
    v22[5] = v19;
    type metadata accessor for NetworkEvent();
  }
  return swift_storeEnumTagMultiPayload();
}

void sub_1AFF12A38(uint64_t a1, uint64_t a2, void (*a3)(id, uint64_t), uint64_t a4)
{
  uint64_t v48 = a4;
  id v49 = a3;
  uint64_t v60 = sub_1AFFCABC8();
  uint64_t v6 = *(void *)(v60 - 8);
  MEMORY[0x1F4188790](v60);
  uint64_t v59 = (char *)v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_1AFFCAC18();
  uint64_t v8 = *(void *)(v61 - 8);
  MEMORY[0x1F4188790](v61);
  uint64_t v10 = (char *)v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFF1406C();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v50 = (uint64_t)v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFF14404(0, &qword_1E9AFC9D0, (uint64_t (*)(uint64_t))sub_1AFF1406C, MEMORY[0x1E4FAB068]);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (id *)((char *)v46 - v14);
  swift_beginAccess();
  uint64_t v16 = (char *)MEMORY[0x1B3E8F200](a2 + 16);
  if (v16)
  {
    id v47 = v16;
    sub_1AFF140C8(a1, (uint64_t)v15);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      id v17 = *v15;
      id v18 = *v15;
      v49(v17, 1);
    }
    else
    {
      sub_1AFF1415C((uint64_t)v15, v50);
      sub_1AFF14248(0, &qword_1E9AFC9D8, (uint64_t)&type metadata for SDSNewsResponse, MEMORY[0x1E4FAAE30]);
      uint64_t v20 = v19;
      sub_1AFFCA3A8();
      swift_bridgeObjectRelease();
      unint64_t v58 = v73;
      if (v73)
      {
        uint64_t v56 = v76;
        id v57 = v74;
        uint64_t v21 = *(void *)&v47[qword_1E9AFC9A8];
        uint64_t v22 = *(void *)(v21 + 16);
        if (v22)
        {
          v46[0] = *(void *)&v47[qword_1E9AFC9A8];
          v46[1] = v20;
          uint64_t v54 = v75;
          uint64_t v55 = v72;
          uint64_t v23 = (void *)(v21 + 32);
          id v52 = (void (**)(char *, uint64_t))(v6 + 8);
          uint64_t v53 = &v73;
          unsigned int v51 = (void (**)(char *, uint64_t))(v8 + 8);
          sub_1AFFC8E38();
          do
          {
            id v24 = __swift_project_boxed_opaque_existential_1(v23, v23[3]);
            uint64_t v25 = *v24;
            if (*(unsigned char *)(*v24 + 24) == 1)
            {
              uint64_t v26 = (void *)swift_allocObject();
              uint64_t v27 = v55;
              uint64_t v28 = v56;
              v26[2] = v25;
              v26[3] = v27;
              id v29 = v57;
              v26[4] = v58;
              v26[5] = v29;
              v26[6] = v54;
              v26[7] = v28;
              unint64_t v75 = sub_1AFEC5F40;
              int v76 = v26;
              int v71 = (void *)MEMORY[0x1E4F143A8];
              uint64_t v72 = 1107296256;
              uint64_t v73 = sub_1AFDB5104;
              uint64_t v74 = &block_descriptor_32;
              id v30 = _Block_copy(&v71);
              sub_1AFFC8E48();
              sub_1AFFC8E38();
              sub_1AFFC8E38();
              sub_1AFFC8E38();
              sub_1AFFCABE8();
              v70[0] = MEMORY[0x1E4FBC860];
              sub_1AFF143BC((unint64_t *)&unk_1EB819C20, MEMORY[0x1E4FBCB00]);
              sub_1AFF14404(0, (unint64_t *)&qword_1EB819DA0, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
              sub_1AFDB56D0();
              unint64_t v32 = v59;
              uint64_t v31 = v60;
              sub_1AFFCB738();
              MEMORY[0x1B3E8D920](0, v10, v32, v30);
              _Block_release(v30);
              (*v52)(v32, v31);
              (*v51)(v10, v61);
              swift_release();
            }
            v23 += 5;
            --v22;
          }
          while (v22);
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      sub_1AFFCA3A8();
      id v33 = v71;
      sub_1AFD30C94(v72, (uint64_t)v73);
      uint64_t v34 = v33[2];
      if (v34)
      {
        sub_1AFFC8E38();
        uint64_t v35 = 0;
        uint64_t v36 = v34 - 1;
        uint64_t v37 = (void *)MEMORY[0x1E4FBC860];
        while (1)
        {
          uint64_t v38 = v33[v35 + 6];
          uint64_t v39 = v33[v35 + 7];
          uint64_t v40 = v33[v35 + 12];
          uint64_t v41 = v33[v35 + 13];
          long long v63 = *(_OWORD *)&v33[v35 + 4];
          uint64_t v64 = v38;
          uint64_t v65 = v39;
          long long v42 = *(_OWORD *)&v33[v35 + 10];
          long long v66 = *(_OWORD *)&v33[v35 + 8];
          long long v67 = v42;
          uint64_t v68 = v40;
          uint64_t v69 = v41;
          sub_1AFF131A4((uint64_t *)&v63, (uint64_t)v62);
          sub_1AFF141C0((uint64_t)v62, (uint64_t)v70);
          sub_1AFF141C0((uint64_t)v70, (uint64_t)&v71);
          if (sub_1AFE11EDC((uint64_t)&v71) != 1)
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v37 = sub_1AFD36510(0, v37[2] + 1, 1, v37);
            }
            unint64_t v44 = v37[2];
            unint64_t v43 = v37[3];
            if (v44 >= v43 >> 1) {
              uint64_t v37 = sub_1AFD36510((void *)(v43 > 1), v44 + 1, 1, v37);
            }
            sub_1AFF141C0((uint64_t)v70, (uint64_t)v62);
            v37[2] = v44 + 1;
            sub_1AFD2CF70((uint64_t)v62, (uint64_t)&v37[18 * v44 + 4]);
          }
          if (!v36) {
            break;
          }
          --v36;
          v35 += 10;
        }
        swift_bridgeObjectRelease_n();
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v37 = (void *)MEMORY[0x1E4FBC860];
      }
      int v71 = v37;
      sub_1AFF14248(0, (unint64_t *)&qword_1EB818000, (uint64_t)&type metadata for Headline, MEMORY[0x1E4FBB320]);
      sub_1AFF14294();
      uint64_t v45 = sub_1AFFCB068();
      swift_bridgeObjectRelease();
      v49((id)v45, 0);

      swift_bridgeObjectRelease();
      sub_1AFF14310(v50);
    }
  }
}

uint64_t sub_1AFF131A4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v67 = a2;
  uint64_t v61 = sub_1AFFC9818();
  MEMORY[0x1F4188790](v61);
  int v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1AFF14404(0, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  id v62 = (char *)&v49 - v5;
  uint64_t v6 = sub_1AFFC98F8();
  uint64_t v59 = *(void *)(v6 - 8);
  uint64_t v60 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v56 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  unint64_t v58 = (char *)&v49 - v9;
  sub_1AFF14404(0, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0], v3);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v49 - v11;
  uint64_t v13 = sub_1AFFC96E8();
  uint64_t v65 = *(void *)(v13 - 8);
  uint64_t v66 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v57 = (uint64_t)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  id v17 = (char *)&v49 - v16;
  uint64_t v18 = *a1;
  uint64_t v54 = a1[1];
  uint64_t v55 = v18;
  uint64_t v19 = a1[2];
  uint64_t v63 = a1[3];
  uint64_t v64 = v19;
  uint64_t v20 = a1[4];
  uint64_t v52 = a1[5];
  uint64_t v53 = v20;
  uint64_t v21 = a1[6];
  uint64_t v22 = a1[8];
  uint64_t v50 = a1[7];
  uint64_t v51 = v21;
  uint64_t v23 = a1[9];
  uint64_t v69 = v22;
  uint64_t v70 = v23;
  uint64_t v24 = qword_1E9AF8DD8;
  sub_1AFFC8E38();
  if (v24 != -1) {
    swift_once();
  }
  uint64_t v25 = sub_1AFFC92A8();
  __swift_project_value_buffer(v25, (uint64_t)qword_1E9AFC980);
  sub_1AFD3AE10();
  uint64_t v26 = MEMORY[0x1E4FBB1A0];
  sub_1AFFCB6C8();
  uint64_t v28 = v27;
  swift_bridgeObjectRelease();
  if (!v28)
  {
    sub_1AFFCB468();
    sub_1AFF14404(0, (unint64_t *)&qword_1EB81A100, (uint64_t (*)(uint64_t))sub_1AFD3AE64, MEMORY[0x1E4FBBE00]);
    uint64_t v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_1AFFD05F0;
    *(void *)(v33 + 56) = v26;
    *(void *)(v33 + 64) = sub_1AFD2CE00();
    *(void *)(v33 + 32) = v22;
    *(void *)(v33 + 40) = v23;
    sub_1AFD2C4F4();
    sub_1AFFC8E38();
    unint64_t v32 = (void *)sub_1AFFCB638();
    goto LABEL_7;
  }
  sub_1AFFC96C8();
  swift_bridgeObjectRelease();
  uint64_t v30 = v65;
  uint64_t v29 = v66;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v12, 1, v66) == 1)
  {
    sub_1AFF14468((uint64_t)v12, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
    sub_1AFFCB468();
    sub_1AFF14404(0, (unint64_t *)&qword_1EB81A100, (uint64_t (*)(uint64_t))sub_1AFD3AE64, MEMORY[0x1E4FBBE00]);
    uint64_t v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_1AFFD05F0;
    *(void *)(v31 + 56) = v26;
    *(void *)(v31 + 64) = sub_1AFD2CE00();
    *(void *)(v31 + 32) = v22;
    *(void *)(v31 + 40) = v23;
    sub_1AFD2C4F4();
    sub_1AFFC8E38();
    unint64_t v32 = (void *)sub_1AFFCB638();
LABEL_7:
    sub_1AFFCA878();
    swift_bridgeObjectRelease();

    sub_1AFE13198((uint64_t)&v69);
    return sub_1AFF141C0((uint64_t)&v69, v67);
  }
  uint64_t v35 = v17;
  (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v17, v12, v29);
  uint64_t v36 = v63;
  uint64_t v69 = v64;
  uint64_t v70 = v63;
  sub_1AFFC8E38();
  sub_1AFFC92D8();
  sub_1AFF143BC(qword_1EB81A330, MEMORY[0x1E4F278A8]);
  uint64_t v37 = (uint64_t)v62;
  uint64_t v38 = v71;
  sub_1AFFC9908();
  if (v38)
  {

    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v59 + 56))(v37, 1, 1, v60);
  }
  else
  {
    uint64_t v40 = v59;
    uint64_t v39 = v60;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v59 + 56))(v37, 0, 1, v60);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v37, 1, v39) != 1)
    {
      unint64_t v43 = v58;
      (*(void (**)(char *, uint64_t, uint64_t))(v40 + 32))(v58, v37, v39);
      uint64_t v44 = v65;
      (*(void (**)(uint64_t, char *, uint64_t))(v65 + 16))(v57, v35, v29);
      uint64_t v45 = (uint64_t)v56;
      (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v56, v43, v39);
      id v71 = objc_allocWithZone((Class)SCWebHeadline);
      uint64_t v46 = v52;
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      uint64_t v47 = v50;
      sub_1AFFC8E38();
      id v48 = sub_1AFEF9E28(v57, v51, v47, v53, v46, v45);
      (*(void (**)(char *, uint64_t))(v40 + 8))(v58, v39);
      (*(void (**)(char *, uint64_t))(v44 + 8))(v35, v66);
      v68[0] = v48;
      sub_1AFD2D44C((uint64_t)v68);
      sub_1AFD2CF70((uint64_t)v68, (uint64_t)&v69);
      nullsub_1(&v69);
      return sub_1AFF141C0((uint64_t)&v69, v67);
    }
    uint64_t v36 = v63;
  }
  sub_1AFF14468(v37, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928]);
  sub_1AFFCB468();
  sub_1AFF14404(0, (unint64_t *)&qword_1EB81A100, (uint64_t (*)(uint64_t))sub_1AFD3AE64, MEMORY[0x1E4FBBE00]);
  uint64_t v41 = swift_allocObject();
  *(_OWORD *)(v41 + 16) = xmmword_1AFFD05F0;
  *(void *)(v41 + 56) = v26;
  *(void *)(v41 + 64) = sub_1AFD2CE00();
  *(void *)(v41 + 32) = v64;
  *(void *)(v41 + 40) = v36;
  sub_1AFD2C4F4();
  sub_1AFFC8E38();
  long long v42 = (void *)sub_1AFFCB638();
  sub_1AFFCA878();
  swift_bridgeObjectRelease();

  (*(void (**)(char *, uint64_t))(v65 + 8))(v17, v66);
  sub_1AFE13198((uint64_t)&v69);
  return sub_1AFF141C0((uint64_t)&v69, v67);
}

void *sub_1AFF13A3C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1AFD2CF70(a1, (uint64_t)v8);
  sub_1AFD2CF70((uint64_t)v8, (uint64_t)v9);
  sub_1AFD2D15C((uint64_t)v9);
  sub_1AFD2D168((uint64_t)v9);
  sub_1AFD2D03C(v8, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
  id v3 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
  uint64_t v4 = sub_1AFFCAE98();
  uint64_t v6 = v5;
  swift_unknownObjectRelease();

  uint64_t result = sub_1AFD2D03C(v8, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2D0A0);
  *a2 = v4;
  a2[1] = v6;
  return result;
}

uint64_t sub_1AFF13B20()
{
  uint64_t v0 = sub_1AFFC92A8();
  __swift_allocate_value_buffer(v0, qword_1E9AFC980);
  __swift_project_value_buffer(v0, (uint64_t)qword_1E9AFC980);
  return sub_1AFF13B6C();
}

uint64_t sub_1AFF13B6C()
{
  uint64_t v0 = sub_1AFFC92A8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  id v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v13 - v5;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v13 - v8;
  sub_1AFFC9298();
  sub_1AFFC9218();
  sub_1AFFC9278();
  uint64_t v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v3, v0);
  v10(v9, v0);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v1 + 32);
  v11(v9, v6, v0);
  sub_1AFFC9228();
  sub_1AFFC9278();
  v10(v3, v0);
  v10(v9, v0);
  v11(v9, v6, v0);
  sub_1AFFC9238();
  sub_1AFFC9278();
  v10(v3, v0);
  v10(v9, v0);
  v11(v9, v6, v0);
  sub_1AFFC9248();
  sub_1AFFC9278();
  v10(v6, v0);
  return ((uint64_t (*)(char *, uint64_t))v10)(v9, v0);
}

void sub_1AFF13DB4()
{
}

uint64_t sub_1AFF13DE4()
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + qword_1E9AFC9A0);
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + qword_1E9AFC9B0;
  uint64_t v2 = sub_1AFFC9E18();
  id v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(v1, v2);
}

uint64_t sub_1AFF13E84(uint64_t a1)
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + qword_1E9AFC9A0);
  swift_bridgeObjectRelease();
  uint64_t v2 = a1 + qword_1E9AFC9B0;
  uint64_t v3 = sub_1AFFC9E18();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

uint64_t sub_1AFF13F28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  sub_1AFFC8E48();
  sub_1AFF12474((uint64_t)sub_1AFD3AB90, v4);

  return swift_release();
}

uint64_t sub_1AFF13FA8()
{
  return type metadata accessor for SDSNewsOperation();
}

uint64_t sub_1AFF13FB0()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1AFF13FE8()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1AFF14020()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_1AFF14060(uint64_t a1)
{
  sub_1AFF12A38(a1, *(void *)(v1 + 16), *(void (**)(id, uint64_t))(v1 + 24), *(void *)(v1 + 32));
}

void sub_1AFF1406C()
{
  if (!qword_1E9AFC9C8)
  {
    sub_1AFEC74A0();
    unint64_t v0 = type metadata accessor for SDSBaseOperationResponse();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9AFC9C8);
    }
  }
}

uint64_t sub_1AFF140C8(uint64_t a1, uint64_t a2)
{
  sub_1AFF14404(0, &qword_1E9AFC9D0, (uint64_t (*)(uint64_t))sub_1AFF1406C, MEMORY[0x1E4FAB068]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AFF1415C(uint64_t a1, uint64_t a2)
{
  sub_1AFF1406C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AFF141C0(uint64_t a1, uint64_t a2)
{
  sub_1AFF14248(0, &qword_1E9AFB0A8, (uint64_t)&type metadata for Headline, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1AFF14248(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_1AFF14294()
{
  unint64_t result = qword_1E9AFC9E0;
  if (!qword_1E9AFC9E0)
  {
    sub_1AFF14248(255, (unint64_t *)&qword_1EB818000, (uint64_t)&type metadata for Headline, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC9E0);
  }
  return result;
}

uint64_t sub_1AFF14310(uint64_t a1)
{
  sub_1AFF1406C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1AFF1436C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_1AFF143BC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1AFF14404(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1AFF14468(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1AFF14404(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1AFF144D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1AFF1276C(a1, *(void *)(v2 + 16), a2);
}

id sub_1AFF145F0(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = v1;
  unint64_t v5 = (void *)sub_1AFFCAE68();
  id v6 = objc_msgSend(a1, sel_decodeObjectForKey_, v5);

  if (v6)
  {
    sub_1AFFCB6F8();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v16, 0, sizeof(v16));
  }
  sub_1AFD3BCF4((uint64_t)v16, (uint64_t)v17);
  if (!v18)
  {

    sub_1AFD3BDB4((uint64_t)v17);
LABEL_9:
    swift_deallocPartialClassInstance();
    return 0;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {

    goto LABEL_9;
  }
  uint64_t v7 = v15;
  unint64_t v8 = &v4[OBJC_IVAR___SCUpdateUserIDCommand_userID];
  *(void *)unint64_t v8 = v14;
  *((void *)v8 + 1) = v7;
  uint64_t v9 = (void *)sub_1AFFCAE68();
  unsigned __int8 v10 = objc_msgSend(a1, sel_decodeBoolForKey_, v9);

  v4[OBJC_IVAR___SCUpdateUserIDCommand_overwrite] = v10;
  v13.receiver = v4;
  v13.super_class = ObjectType;
  id v11 = objc_msgSendSuper2(&v13, sel_init);

  return v11;
}

uint64_t type metadata accessor for UpdateUserIDCommand()
{
  return self;
}

uint64_t sub_1AFF14828(void *a1, uint64_t a2)
{
  id v4 = objc_msgSend(a1, sel_encryptedValues);
  unint64_t v5 = (void *)sub_1AFFCAE68();
  id v6 = objc_msgSend(v4, sel_objectForKeyedSubscript_, v5);

  swift_unknownObjectRelease();
  if ((*(unsigned char *)(a2 + OBJC_IVAR___SCUpdateUserIDCommand_overwrite) & 1) != 0 || !v6)
  {
    id v7 = objc_msgSend(a1, sel_encryptedValues);
    unint64_t v8 = (void *)sub_1AFFCAE68();
    uint64_t v9 = (void *)sub_1AFFCAE68();
    objc_msgSend(v7, sel_setObject_forKeyedSubscript_, v8, v9);
    swift_unknownObjectRelease();
  }

  return swift_unknownObjectRelease();
}

uint64_t sub_1AFF14AA0()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1AFF14AD8(void *a1)
{
  return sub_1AFF14828(a1, *(void *)(v1 + 16));
}

uint64_t type metadata accessor for YahooMultiQuoteOperation(uint64_t a1)
{
  return sub_1AFD9BB54(a1, (uint64_t *)&unk_1EB81B550);
}

uint64_t sub_1AFF14B00()
{
  uint64_t result = sub_1AFFC98F8();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1AFFC9E18();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_initClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

void sub_1AFF14BF8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v13 = *(void *)&v2[qword_1EB81B530];
  swift_bridgeObjectRetain_n();
  sub_1AFFB6B00(&v13);
  swift_bridgeObjectRelease();
  sub_1AFD3ABD0();
  sub_1AFF1861C((unint64_t *)&qword_1EB818038, (void (*)(uint64_t))sub_1AFD3ABD0);
  uint64_t v6 = sub_1AFFCB3B8();
  swift_release();
  id v7 = v3;
  sub_1AFF1839C(v6);
  swift_bridgeObjectRelease();

  unint64_t v8 = (void *)sub_1AFFCA5E8();
  sub_1AFF1852C();
  sub_1AFFCA548();
  swift_bridgeObjectRelease();

  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  *(void *)(v9 + 24) = a2;
  sub_1AFFC8E48();
  unsigned __int8 v10 = (void *)sub_1AFFCA5E8();
  sub_1AFFCA678();
  swift_release();
  swift_release();

  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = a2;
  sub_1AFFC8E48();
  uint64_t v12 = (void *)sub_1AFFCA5E8();
  sub_1AFFCA6B8();
  swift_release();
  swift_release();
  swift_release();
}

uint64_t sub_1AFF14E10(uint64_t a1, void (*a2)(uint64_t, void))
{
  uint64_t v3 = MEMORY[0x1E4FBC868];
  uint64_t v7 = MEMORY[0x1E4FBC868];
  uint64_t v4 = *(void *)(*(void *)a1 + 16);
  if (v4)
  {
    sub_1AFFC8E38();
    type metadata accessor for YahooMultiQuoteItem(0);
    uint64_t v5 = 0;
    do
    {
      ++v5;
      sub_1AFFC8E38();
      sub_1AFFCA4D8();
      swift_bridgeObjectRelease();
    }
    while (v4 != v5);
    swift_bridgeObjectRelease();
    uint64_t v3 = v7;
  }
  a2(v3, 0);
  return swift_bridgeObjectRelease();
}

void sub_1AFF14F0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  *(void *)(v9 + 24) = a2;
  __swift_project_boxed_opaque_existential_1((void *)(a5 + qword_1EB81B538), *(void *)(a5 + qword_1EB81B538 + 24));
  sub_1AFF185B8(0, (unint64_t *)&qword_1EB81A0E8, (uint64_t (*)(uint64_t))sub_1AFD306F8, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AFFD0610;
  *(void *)(inited + 32) = 0x7372656B636974;
  *(void *)(inited + 40) = 0xE700000000000000;
  sub_1AFD3ABD0();
  sub_1AFF1861C((unint64_t *)&qword_1EB819DD0, (void (*)(uint64_t))sub_1AFD3ABD0);
  sub_1AFFC8E48();
  *(void *)(inited + 48) = sub_1AFFCAD88();
  *(void *)(inited + 56) = v11;
  strcpy((char *)(inited + 64), "crossProduct");
  *(unsigned char *)(inited + 77) = 0;
  *(_WORD *)(inited + 78) = -5120;
  *(void *)(inited + 80) = 0x657A696D6974706FLL;
  *(void *)(inited + 88) = 0xE900000000000064;
  unint64_t v12 = sub_1AFDF9B10(inited);
  uint64_t v13 = *(void *)(a5 + qword_1EB81B540);
  uint64_t v14 = *(void *)(a5 + qword_1EB81B540 + 8);
  uint64_t v16 = *(void *)(a5 + qword_1EB81B540 + 16);
  uint64_t v15 = *(void *)(a5 + qword_1EB81B540 + 24);
  uint64_t v17 = a5 + qword_1E9AFCA00;
  uint64_t v18 = a5 + qword_1EB81B548;
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  id v19 = sub_1AFFB668C(2, 0xD000000000000013, 0x80000001AFFFB290, v12, v13, v14, v16, v15, v17, v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v20 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v21 = (void *)swift_allocObject();
  v21[2] = v20;
  v21[3] = a6;
  v21[4] = sub_1AFD8173C;
  v21[5] = v9;
  v21[6] = a3;
  v21[7] = a4;
  id v22 = v19;
  sub_1AFFC8E38();
  sub_1AFFC8E48();
  sub_1AFFC9F18();

  objc_msgSend(v22, sel_start);
}

void sub_1AFF151FC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5, void (*a6)(void *), uint64_t a7)
{
  uint64_t v32 = a7;
  uint64_t v33 = a6;
  uint64_t v34 = a5;
  uint64_t v35 = a4;
  uint64_t v10 = sub_1AFFC9818();
  MEMORY[0x1F4188790](v10);
  sub_1AFF185B8(0, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v32 - v12;
  uint64_t v14 = *(void **)a1;
  uint64_t v15 = *(void *)(a1 + 8);
  uint64_t v16 = *(void *)(a1 + 24);
  uint64_t v17 = *(void *)(a1 + 32);
  uint64_t v36 = *(void *)(a1 + 16);
  uint64_t v37 = v16;
  uint64_t v18 = *(void *)(a1 + 40);
  char v19 = *(unsigned char *)(a1 + 48);
  swift_beginAccess();
  uint64_t v20 = MEMORY[0x1B3E8F200](a2 + 16);
  if (v20)
  {
    uint64_t v21 = (void *)v20;
    if (v19)
    {
      id v22 = v14;
      v33(v14);

      sub_1AFF186FC(v14, v15, v36, v37, v17, v18, 1);
    }
    else
    {
      if (v18)
      {
        uint64_t v38 = v17;
        uint64_t v39 = v18;
        sub_1AFFC8E38();
        swift_bridgeObjectRetain_n();
        uint64_t v23 = (uint64_t)v14;
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC92D8();
        sub_1AFF1861C(qword_1EB81A330, MEMORY[0x1E4F278A8]);
        sub_1AFFC9908();
        uint64_t v25 = sub_1AFFC98F8();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v13, 0, 1, v25);
      }
      else
      {
        uint64_t v24 = sub_1AFFC98F8();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v13, 1, 1, v24);
        sub_1AFFC8E38();
        uint64_t v23 = (uint64_t)v14;
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
      }
      uint64_t v26 = sub_1AFFBA57C(v23);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v41 = MEMORY[0x1E4FBC868];
      uint64_t v27 = *(void *)(v26 + 16);
      if (v27)
      {
        sub_1AFFC8E38();
        uint64_t v28 = (uint64_t *)(v26 + 48);
        do
        {
          uint64_t v29 = *(v28 - 1);
          uint64_t v30 = *v28;
          uint64_t v38 = *(v28 - 2);
          uint64_t v39 = v29;
          uint64_t v40 = v30;
          sub_1AFFC8E38();
          sub_1AFFC8E38();
          sub_1AFFC8E38();
          sub_1AFF15688(&v41, &v38, a3, (uint64_t)v13);
          v28 += 3;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          --v27;
        }
        while (v27);
        swift_bridgeObjectRelease_n();
        uint64_t v31 = v41;
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v31 = MEMORY[0x1E4FBC868];
      }
      sub_1AFF16468(v31);
      v35(v31);
      swift_bridgeObjectRelease();

      sub_1AFF18B2C((uint64_t)v13, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928]);
    }
  }
}

uint64_t sub_1AFF15688(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  v163 = a1;
  uint64_t v164 = a4;
  uint64_t v162 = type metadata accessor for YahooMultiQuoteItem(0);
  MEMORY[0x1F4188790](v162);
  uint64_t v161 = (uint64_t)&v158 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v160 = (uint64_t)&v158 - v8;
  uint64_t v159 = sub_1AFFC9818();
  MEMORY[0x1F4188790](v159);
  v158 = (char *)&v158 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFF185B8(0, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v194 = (uint64_t)&v158 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v193 = (uint64_t)&v158 - v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v158 - v15;
  uint64_t v17 = *a2;
  uint64_t v18 = a2[1];
  uint64_t v19 = a2[2];
  if (v17) {
    uint64_t v20 = v17;
  }
  else {
    uint64_t v20 = MEMORY[0x1E4FBC860];
  }
  sub_1AFFC8E38();
  uint64_t v21 = sub_1AFF2BAD0(v18);
  uint64_t v22 = sub_1AFF2BD64(v19);
  uint64_t v23 = *(void *)(a3 + 16);
  uint64_t v166 = v20;
  uint64_t v167 = v22;
  v203 = v16;
  uint64_t v165 = v21;
  if (!v23)
  {
    uint64_t v47 = v22;
    v205 = (void *)MEMORY[0x1E4FBC868];
    uint64_t v48 = *(void *)(v20 + 16);
    if (!v48) {
      goto LABEL_125;
    }
    goto LABEL_22;
  }
  sub_1AFFC8E38();
  uint64_t v204 = a3;
  uint64_t v24 = (uint64_t *)(a3 + 40);
  uint64_t v25 = (void *)MEMORY[0x1E4FBC868];
  while (1)
  {
    uint64_t v27 = *(v24 - 1);
    uint64_t v28 = *v24;
    uint64_t v206 = v23;
    uint64_t v207 = v27;
    uint64_t v29 = sub_1AFFCAF28();
    uint64_t v31 = v30;
    sub_1AFFC8E38();
    uint64_t v32 = v25;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v211[0] = v32;
    unint64_t v35 = sub_1AFD79CC8(v29, v31);
    uint64_t v36 = v32[2];
    BOOL v37 = (v34 & 1) == 0;
    uint64_t v38 = v36 + v37;
    if (__OFADD__(v36, v37)) {
      break;
    }
    char v39 = v34;
    if (v32[3] >= v38)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v25 = (void *)v211[0];
        if ((v34 & 1) == 0) {
          goto LABEL_15;
        }
      }
      else
      {
        sub_1AFEB8068();
        uint64_t v25 = (void *)v211[0];
        if ((v39 & 1) == 0) {
          goto LABEL_15;
        }
      }
    }
    else
    {
      sub_1AFEB2018(v38, isUniquelyReferenced_nonNull_native);
      unint64_t v40 = sub_1AFD79CC8(v29, v31);
      if ((v39 & 1) != (v41 & 1)) {
        goto LABEL_128;
      }
      unint64_t v35 = v40;
      uint64_t v25 = (void *)v211[0];
      if ((v39 & 1) == 0)
      {
LABEL_15:
        v25[(v35 >> 6) + 8] |= 1 << v35;
        long long v42 = (uint64_t *)(v25[6] + 16 * v35);
        *long long v42 = v29;
        v42[1] = v31;
        unint64_t v43 = (uint64_t *)(v25[7] + 16 * v35);
        *unint64_t v43 = v207;
        v43[1] = v28;
        uint64_t v44 = v25[2];
        BOOL v45 = __OFADD__(v44, 1);
        uint64_t v46 = v44 + 1;
        if (v45) {
          goto LABEL_127;
        }
        v25[2] = v46;
        sub_1AFFC8E38();
        goto LABEL_7;
      }
    }
    uint64_t v26 = (uint64_t *)(v25[7] + 16 * v35);
    swift_bridgeObjectRelease();
    uint64_t *v26 = v207;
    v26[1] = v28;
LABEL_7:
    v24 += 2;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v23 = v206 - 1;
    if (v206 == 1)
    {
      v205 = v25;
      swift_bridgeObjectRelease();
      uint64_t v20 = v166;
      uint64_t v47 = v167;
      uint64_t v21 = v165;
      uint64_t v48 = *(void *)(v166 + 16);
      if (!v48)
      {
LABEL_125:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
LABEL_22:
      uint64_t v49 = v48 - 1;
      uint64_t v50 = 32;
      while (2)
      {
        uint64_t v207 = v50;
        memcpy(v211, (const void *)(v20 + v50), 0x1D8uLL);
        uint64_t v52 = sub_1AFFCAF28();
        uint64_t v54 = v53;
        uint64_t v55 = v205;
        if (v205[2])
        {
          uint64_t v56 = v52;
          sub_1AFF18C00(v211);
          unint64_t v57 = sub_1AFD79CC8(v56, v54);
          if (v58)
          {
            uint64_t v192 = v49;
            uint64_t v59 = v211[53];
            uint64_t v60 = v211[54];
            uint64_t v61 = (uint64_t *)(v55[7] + 16 * v57);
            uint64_t v62 = v61[1];
            uint64_t v190 = *v61;
            uint64_t v191 = v62;
            sub_1AFFC8E38();
            swift_bridgeObjectRelease();
            if (v60) {
              uint64_t v63 = v60;
            }
            else {
              uint64_t v63 = 0xE000000000000000;
            }
            if (*(void *)(v21 + 16))
            {
              if (v60) {
                uint64_t v64 = v59;
              }
              else {
                uint64_t v64 = 0;
              }
              sub_1AFFC8E38();
              unint64_t v65 = sub_1AFD79CC8(v64, v63);
              uint64_t v66 = 0;
              uint64_t v206 = 0;
              uint64_t v67 = 0;
              uint64_t v171 = 0;
              uint64_t v199 = 0;
              uint64_t v200 = 0;
              uint64_t v195 = 0;
              unint64_t v68 = 0;
              uint64_t v204 = 0;
              if (v69)
              {
                uint64_t v70 = *(void *)(v21 + 56) + 72 * v65;
                uint64_t v66 = *(void *)v70;
                uint64_t v71 = *(void *)(v70 + 8);
                uint64_t v67 = *(void *)(v70 + 16);
                uint64_t v72 = *(void *)(v70 + 24);
                uint64_t v200 = *(unsigned __int8 *)(v70 + 32);
                unint64_t v73 = *(void *)(v70 + 48);
                uint64_t v195 = *(void *)(v70 + 40);
                uint64_t v74 = *(void *)(v70 + 64);
                uint64_t v199 = *(void *)(v70 + 56);
                uint64_t v204 = v74;
                sub_1AFFC8E38();
                uint64_t v206 = v71;
                sub_1AFFC8E38();
                uint64_t v171 = v72;
                sub_1AFFC8E38();
                unint64_t v68 = v73;
                goto LABEL_39;
              }
            }
            else
            {
              uint64_t v66 = 0;
              uint64_t v206 = 0;
              uint64_t v67 = 0;
              uint64_t v171 = 0;
              uint64_t v199 = 0;
              uint64_t v200 = 0;
              uint64_t v195 = 0;
              unint64_t v68 = 0;
              uint64_t v204 = 0;
LABEL_39:
              sub_1AFFC8E38();
            }
            uint64_t v169 = v67;
            uint64_t v170 = v66;
            swift_bridgeObjectRelease();
            uint64_t v75 = v211[2];
            uint64_t v76 = v211[4];
            if (v211[4])
            {
              uint64_t v77 = v211[7];
              uint64_t v78 = v211[8];
              sub_1AFFC8E38();
              if (!*(void *)(v47 + 16))
              {
LABEL_46:
                uint64_t v187 = 0;
                int v198 = 0;
                goto LABEL_47;
              }
            }
            else
            {
              uint64_t v77 = 0;
              uint64_t v78 = 0xE000000000000000;
              if (!*(void *)(v47 + 16)) {
                goto LABEL_46;
              }
            }
            unint64_t v79 = sub_1AFD79CC8(v77, v78);
            if ((v80 & 1) == 0) {
              goto LABEL_46;
            }
            uint64_t v81 = *(void *)(v47 + 56) + 24 * v79;
            uint64_t v82 = *(void *)(v81 + 8);
            int v198 = *(unsigned __int8 *)(v81 + 16);
            uint64_t v187 = v82;
            sub_1AFFC8E38();
LABEL_47:
            swift_bridgeObjectRelease();
            uint64_t v83 = v211[23];
            uint64_t v202 = v211[25];
            if (v211[25])
            {
              uint64_t v84 = v211[29];
              uint64_t v85 = v211[28];
              sub_1AFFC8E38();
            }
            else
            {
              uint64_t v85 = 0;
              uint64_t v84 = 0xE000000000000000;
            }
            uint64_t v86 = *(void *)(v47 + 16);
            uint64_t v189 = v83;
            if (v86 && (unint64_t v87 = sub_1AFD79CC8(v85, v84), (v88 & 1) != 0))
            {
              uint64_t v89 = *(void *)(v47 + 56) + 24 * v87;
              uint64_t v90 = *(void *)(v89 + 8);
              int v197 = *(unsigned __int8 *)(v89 + 16);
              uint64_t v172 = v90;
              sub_1AFFC8E38();
            }
            else
            {
              uint64_t v172 = 0;
              int v197 = 0;
            }
            uint64_t v91 = v76;
            swift_bridgeObjectRelease();
            uint64_t v92 = v211[37];
            uint64_t v201 = v211[39];
            if (v211[39])
            {
              uint64_t v93 = v211[43];
              uint64_t v94 = v211[42];
              sub_1AFFC8E38();
              if (!*(void *)(v47 + 16))
              {
LABEL_60:
                uint64_t v98 = 0;
                int v196 = 0;
                goto LABEL_61;
              }
            }
            else
            {
              uint64_t v94 = 0;
              uint64_t v93 = 0xE000000000000000;
              if (!*(void *)(v47 + 16)) {
                goto LABEL_60;
              }
            }
            unint64_t v95 = sub_1AFD79CC8(v94, v93);
            if ((v96 & 1) == 0) {
              goto LABEL_60;
            }
            uint64_t v97 = *(void *)(v47 + 56) + 24 * v95;
            uint64_t v98 = *(void *)(v97 + 8);
            int v196 = *(unsigned __int8 *)(v97 + 16);
            sub_1AFFC8E38();
LABEL_61:
            swift_bridgeObjectRelease();
            uint64_t v99 = (uint64_t)v203;
            if (v206 && v204)
            {
              uint64_t v208 = v199;
              uint64_t v209 = v204;
              sub_1AFFC8E38();
              sub_1AFFC92D8();
              sub_1AFF1861C(qword_1EB81A330, MEMORY[0x1E4F278A8]);
              char v100 = v168;
              sub_1AFFC9908();
              uint64_t v101 = v91;
              if (v100)
              {

                uint64_t v102 = sub_1AFFC98F8();
                (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v102 - 8) + 56))(v99, 1, 1, v102);
                v168 = 0;
              }
              else
              {
                v168 = 0;
                uint64_t v104 = sub_1AFFC98F8();
                (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v104 - 8) + 56))(v99, 0, 1, v104);
              }
            }
            else
            {
              uint64_t v103 = sub_1AFFC98F8();
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v103 - 8) + 56))(v99, 1, 1, v103);
              uint64_t v101 = v91;
            }
            uint64_t v105 = v189;
            sub_1AFD3C27C(v164, v193);
            if (v101) {
              uint64_t v106 = v75;
            }
            else {
              uint64_t v106 = 0;
            }
            uint64_t v174 = v211[11];
            if (v211[11]) {
              uint64_t v107 = v211[9];
            }
            else {
              uint64_t v107 = 0;
            }
            if (v211[18]) {
              uint64_t v108 = v211[16];
            }
            else {
              uint64_t v108 = 0;
            }
            if (v202) {
              uint64_t v109 = v105;
            }
            else {
              uint64_t v109 = 0;
            }
            uint64_t v110 = v211[32];
            if (v211[32]) {
              uint64_t v111 = v211[30];
            }
            else {
              uint64_t v111 = 0;
            }
            if (v201) {
              uint64_t v112 = v92;
            }
            else {
              uint64_t v112 = 0;
            }
            uint64_t v113 = v211[46];
            if (v211[46]) {
              uint64_t v114 = v211[44];
            }
            else {
              uint64_t v114 = 0;
            }
            uint64_t v183 = v114;
            uint64_t v184 = v112;
            uint64_t v180 = v111;
            uint64_t v181 = v109;
            uint64_t v178 = v107;
            uint64_t v179 = v106;
            uint64_t v177 = v108;
            uint64_t v173 = v211[18];
            uint64_t v115 = v101;
            if (v206) {
              int v182 = byte_1AFFE3B0A[(char)v200];
            }
            else {
              int v182 = 0;
            }
            uint64_t v189 = v211[57];
            uint64_t v116 = v211[58];
            uint64_t v186 = v211[55];
            uint64_t v117 = v211[56];
            uint64_t v176 = v211[51];
            uint64_t v118 = v211[52];
            sub_1AFD3C27C((uint64_t)v203, v194);
            uint64_t v188 = v116;
            uint64_t v185 = v117;
            uint64_t v175 = v118;
            if (v187)
            {
              sub_1AFFC8E38();
              sub_1AFFC8E38();
              sub_1AFFC8E38();
              swift_bridgeObjectRelease();
            }
            else
            {
              sub_1AFFC8E38();
              sub_1AFFC8E38();
              sub_1AFFC8E38();
              int v198 = 7;
            }
            uint64_t v119 = v115;
            if (v172)
            {
              swift_bridgeObjectRelease();
              if (v98) {
                goto LABEL_96;
              }
LABEL_98:
              int v196 = 7;
            }
            else
            {
              int v197 = 7;
              if (!v98) {
                goto LABEL_98;
              }
LABEL_96:
              swift_bridgeObjectRelease();
            }
            uint64_t v120 = v195;
            uint64_t v121 = v206;
            if (!v206 || (sub_1AFFC8E38(), uint64_t v122 = sub_1AFF191DC(v170, v121), !v68))
            {
              uint64_t v122 = swift_bridgeObjectRelease();
              uint64_t v120 = 0;
              unint64_t v68 = 0xE000000000000000;
            }
            uint64_t v212 = 0;
            MEMORY[0x1F4188790](v122);
            if ((v68 & 0x1000000000000000) != 0 || !(v68 & 0x2000000000000000 | v120 & 0x1000000000000000))
            {
              v156 = v168;
              sub_1AFFCB7D8();
              v168 = v156;
              swift_bridgeObjectRelease();
              uint64_t v124 = v174;
            }
            else if ((v68 & 0x2000000000000000) != 0)
            {
              uint64_t v208 = v120;
              uint64_t v209 = v68 & 0xFFFFFFFFFFFFFFLL;
              BOOL v129 = (v120 > 0x20u || ((0x100003E01uLL >> v120) & 1) == 0)
                  && (v128 = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0
                  && *v128 == 0;
              uint64_t v124 = v174;
              BOOL v210 = v129;
              swift_bridgeObjectRelease();
            }
            else
            {
              if ((v120 & 0x1000000000000000) != 0) {
                v123 = (unsigned __int8 *)((v68 & 0xFFFFFFFFFFFFFFFLL) + 32);
              }
              else {
                v123 = (unsigned __int8 *)sub_1AFFCB878();
              }
              uint64_t v124 = v174;
              unint64_t v125 = *v123;
              BOOL v127 = (v125 >= 0x21 || ((0x100003E01uLL >> v125) & 1) == 0)
                  && (v126 = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0
                  && *v126 == 0;
              BOOL v210 = v127;
              swift_bridgeObjectRelease();
            }
            LODWORD(v204) = v113 == 0;
            LODWORD(v200) = v110 == 0;
            BOOL v130 = v173 == 0;
            BOOL v131 = v124 == 0;
            BOOL v132 = v201 == 0;
            BOOL v133 = v202 == 0;
            BOOL v134 = v119 == 0;
            BOOL v135 = v210;
            uint64_t v136 = v212;
            if (!v210) {
              uint64_t v136 = 0;
            }
            uint64_t v206 = v136;
            uint64_t v137 = v160;
            sub_1AFE90B98(v193, v160);
            v138 = (int *)v162;
            uint64_t v139 = v137 + *(int *)(v162 + 20);
            *(void *)uint64_t v139 = v179;
            *(unsigned char *)(v139 + 8) = v134;
            uint64_t v140 = v137 + v138[6];
            *(void *)uint64_t v140 = v178;
            *(unsigned char *)(v140 + 8) = v131;
            uint64_t v141 = v137 + v138[7];
            *(void *)uint64_t v141 = v177;
            *(unsigned char *)(v141 + 8) = v130;
            uint64_t v142 = v137 + v138[8];
            *(void *)uint64_t v142 = v181;
            *(unsigned char *)(v142 + 8) = v133;
            uint64_t v143 = v137 + v138[9];
            *(void *)uint64_t v143 = v180;
            *(unsigned char *)(v143 + 8) = v200;
            uint64_t v144 = v137 + v138[10];
            *(void *)uint64_t v144 = v184;
            *(unsigned char *)(v144 + 8) = v132;
            uint64_t v145 = v137 + v138[11];
            *(void *)uint64_t v145 = v183;
            *(unsigned char *)(v145 + 8) = v204;
            v146 = (void *)(v137 + v138[12]);
            uint64_t v147 = v175;
            void *v146 = v176;
            v146[1] = v147;
            *(unsigned char *)(v137 + v138[13]) = v182;
            sub_1AFE90B98(v194, v137 + v138[14]);
            sub_1AFF18E84(v211);
            v148 = (void *)(v137 + v138[15]);
            uint64_t v149 = v185;
            void *v148 = v186;
            v148[1] = v149;
            v150 = (void *)(v137 + v138[16]);
            uint64_t v151 = v188;
            void *v150 = v189;
            v150[1] = v151;
            *(unsigned char *)(v137 + v138[17]) = v198;
            *(unsigned char *)(v137 + v138[18]) = v197;
            *(unsigned char *)(v137 + v138[19]) = v196;
            uint64_t v152 = v137 + v138[20];
            *(void *)uint64_t v152 = v206;
            *(unsigned char *)(v152 + 8) = !v135;
            uint64_t v153 = v161;
            sub_1AFF19178(v137, v161);
            v154 = v163;
            char v155 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v208 = *v154;
            uint64_t *v154 = 0x8000000000000000;
            sub_1AFE049D4(v153, v190, v191, v155);
            uint64_t *v154 = v208;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1AFF18B2C((uint64_t)v203, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928]);
            uint64_t v20 = v166;
            uint64_t v47 = v167;
            uint64_t v21 = v165;
            uint64_t v49 = v192;
            uint64_t v51 = v207;
            if (!v192) {
              goto LABEL_125;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
            sub_1AFF18E84(v211);
            uint64_t v51 = v207;
            if (!v49) {
              goto LABEL_125;
            }
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v51 = v207;
          if (!v49) {
            goto LABEL_125;
          }
        }
        --v49;
        uint64_t v50 = v51 + 472;
        continue;
      }
    }
  }
  __break(1u);
LABEL_127:
  __break(1u);
LABEL_128:
  uint64_t result = sub_1AFFCBD68();
  __break(1u);
  return result;
}

uint64_t sub_1AFF16468(uint64_t a1)
{
  swift_getObjectType();
  sub_1AFFC8E38();
  uint64_t v2 = sub_1AFFC8E38();
  sub_1AFF18774(v2, a1);
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*(void *)(v4 + 16)) {
    goto LABEL_3;
  }
  sub_1AFFCB468();
  sub_1AFF185B8(0, (unint64_t *)&qword_1EB81A100, (uint64_t (*)(uint64_t))sub_1AFD3AE64, MEMORY[0x1E4FBBE00]);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1AFFD05F0;
  uint64_t v6 = MEMORY[0x1E4FBB1A0];
  uint64_t v7 = MEMORY[0x1B3E8D630](v4, MEMORY[0x1E4FBB1A0]);
  uint64_t v9 = v8;
  *(void *)(v5 + 56) = v6;
  *(void *)(v5 + 64) = sub_1AFD2CE00();
  *(void *)(v5 + 32) = v7;
  *(void *)(v5 + 40) = v9;
  sub_1AFD2C4F4();
  uint64_t v10 = (void *)sub_1AFFCB638();
  sub_1AFFCA878();
  swift_bridgeObjectRelease();

  uint64_t v11 = (NSString *)sub_1AFFCAE68();
  Class v12 = NSClassFromString(v11);

  if (!v12)
  {
    if (qword_1EB819B40 != -1) {
      swift_once();
    }
    sub_1AFF1861C(&qword_1E9AFCA08, (void (*)(uint64_t))type metadata accessor for YahooMultiQuoteOperation);
    sub_1AFFC9BB8();
    switch(v20)
    {
      case 1:
        uint64_t v14 = swift_allocObject();
        *(_OWORD *)(v14 + 16) = xmmword_1AFFD05F0;
        sub_1AFD3ABD0();
        *(void *)(v14 + 56) = v18;
        *(void *)(v14 + 64) = sub_1AFF1861C((unint64_t *)&qword_1EB819DE0, (void (*)(uint64_t))sub_1AFD3ABD0);
        *(void *)(v14 + 32) = v4;
        uint64_t v16 = "[STAGING] [Yahoo] Quote response is missing entry for %{public}@";
        uint64_t v17 = 64;
        goto LABEL_12;
      case 2:
        uint64_t v14 = swift_allocObject();
        *(_OWORD *)(v14 + 16) = xmmword_1AFFD05F0;
        sub_1AFD3ABD0();
        *(void *)(v14 + 56) = v19;
        *(void *)(v14 + 64) = sub_1AFF1861C((unint64_t *)&qword_1EB819DE0, (void (*)(uint64_t))sub_1AFD3ABD0);
        *(void *)(v14 + 32) = v4;
        uint64_t v16 = "[QA] [Yahoo] Quote response is missing entry for %{public}@";
        uint64_t v17 = 59;
        goto LABEL_12;
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
        return swift_bridgeObjectRelease();
      default:
        uint64_t v14 = swift_allocObject();
        *(_OWORD *)(v14 + 16) = xmmword_1AFFD05F0;
        sub_1AFD3ABD0();
        *(void *)(v14 + 56) = v15;
        *(void *)(v14 + 64) = sub_1AFF1861C((unint64_t *)&qword_1EB819DE0, (void (*)(uint64_t))sub_1AFD3ABD0);
        *(void *)(v14 + 32) = v4;
        uint64_t v16 = "[PROD] [Yahoo] Quote response is missing entry for %{public}@";
        uint64_t v17 = 61;
LABEL_12:
        MEMORY[0x1B3E8C360](v16, v17, 2, v14);
        break;
    }
  }
  else
  {
LABEL_3:
  }
  return swift_bridgeObjectRelease();
}

void sub_1AFF16874()
{
}

uint64_t sub_1AFF168A4()
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + qword_1EB81B538);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + qword_1E9AFCA00;
  uint64_t v2 = sub_1AFFC98F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + qword_1EB81B548;
  uint64_t v4 = sub_1AFFC9E18();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);

  return v5(v3, v4);
}

uint64_t sub_1AFF16994(uint64_t a1)
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + qword_1EB81B538);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = a1 + qword_1E9AFCA00;
  uint64_t v3 = sub_1AFFC98F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  uint64_t v4 = a1 + qword_1EB81B548;
  uint64_t v5 = sub_1AFFC9E18();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t sub_1AFF16A88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  sub_1AFFC8E48();
  sub_1AFF14BF8((uint64_t)sub_1AFD3AB90, v4);

  return swift_release();
}

uint64_t sub_1AFF16B08()
{
  return type metadata accessor for YahooMultiQuoteOperation(0);
}

uint64_t *sub_1AFF16B10(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1AFFC8E48();
  }
  else
  {
    uint64_t v7 = sub_1AFFC98F8();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    if (v9(a2, 1, v7))
    {
      sub_1AFF185B8(0, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v12 = a3[5];
    uint64_t v13 = a3[6];
    uint64_t v14 = (char *)a1 + v12;
    uint64_t v15 = (char *)a2 + v12;
    *(void *)uint64_t v14 = *(void *)v15;
    v14[8] = v15[8];
    uint64_t v16 = (char *)a1 + v13;
    uint64_t v17 = (char *)a2 + v13;
    *(void *)uint64_t v16 = *(void *)v17;
    v16[8] = v17[8];
    uint64_t v18 = a3[7];
    uint64_t v19 = a3[8];
    char v20 = (char *)a1 + v18;
    uint64_t v21 = (char *)a2 + v18;
    *(void *)char v20 = *(void *)v21;
    v20[8] = v21[8];
    uint64_t v22 = (char *)a1 + v19;
    uint64_t v23 = (char *)a2 + v19;
    v22[8] = v23[8];
    *(void *)uint64_t v22 = *(void *)v23;
    uint64_t v24 = a3[9];
    uint64_t v25 = a3[10];
    uint64_t v26 = (char *)a1 + v24;
    uint64_t v27 = (char *)a2 + v24;
    *(void *)uint64_t v26 = *(void *)v27;
    v26[8] = v27[8];
    uint64_t v28 = (char *)a1 + v25;
    uint64_t v29 = (char *)a2 + v25;
    *(void *)uint64_t v28 = *(void *)v29;
    v28[8] = v29[8];
    uint64_t v30 = a3[11];
    uint64_t v31 = a3[12];
    uint64_t v32 = (char *)a1 + v30;
    uint64_t v33 = (char *)a2 + v30;
    *(void *)uint64_t v32 = *(void *)v33;
    _OWORD v32[8] = v33[8];
    char v34 = (uint64_t *)((char *)a1 + v31);
    unint64_t v35 = (uint64_t *)((char *)a2 + v31);
    uint64_t v36 = v35[1];
    *char v34 = *v35;
    v34[1] = v36;
    uint64_t v37 = a3[14];
    *((unsigned char *)a1 + a3[13]) = *((unsigned char *)a2 + a3[13]);
    uint64_t v38 = (char *)a1 + v37;
    char v39 = (char *)a2 + v37;
    sub_1AFFC8E38();
    if (v9((uint64_t *)v39, 1, v7))
    {
      sub_1AFF185B8(0, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
      memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v38, v39, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v38, 0, 1, v7);
    }
    uint64_t v41 = a3[15];
    uint64_t v42 = a3[16];
    unint64_t v43 = (uint64_t *)((char *)a1 + v41);
    uint64_t v44 = (uint64_t *)((char *)a2 + v41);
    uint64_t v45 = v44[1];
    *unint64_t v43 = *v44;
    v43[1] = v45;
    uint64_t v46 = (uint64_t *)((char *)a1 + v42);
    uint64_t v47 = (uint64_t *)((char *)a2 + v42);
    uint64_t v48 = v47[1];
    *uint64_t v46 = *v47;
    v46[1] = v48;
    uint64_t v49 = a3[18];
    *((unsigned char *)a1 + a3[17]) = *((unsigned char *)a2 + a3[17]);
    *((unsigned char *)a1 + v49) = *((unsigned char *)a2 + v49);
    uint64_t v50 = a3[20];
    *((unsigned char *)a1 + a3[19]) = *((unsigned char *)a2 + a3[19]);
    uint64_t v51 = (char *)a1 + v50;
    uint64_t v52 = (char *)a2 + v50;
    *(void *)uint64_t v51 = *(void *)v52;
    v51[8] = v52[8];
    sub_1AFFC8E38();
    sub_1AFFC8E38();
  }
  return a1;
}

uint64_t sub_1AFF16EBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1AFFC98F8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + *(int *)(a2 + 56);
  if (!v6(v7, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v7, v4);
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

char *sub_1AFF16FFC(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1AFFC98F8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    sub_1AFF185B8(0, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v10 = a3[5];
  uint64_t v11 = a3[6];
  uint64_t v12 = &a1[v10];
  uint64_t v13 = &a2[v10];
  *(void *)uint64_t v12 = *(void *)v13;
  unsigned char v12[8] = v13[8];
  uint64_t v14 = &a1[v11];
  uint64_t v15 = &a2[v11];
  *(void *)uint64_t v14 = *(void *)v15;
  v14[8] = v15[8];
  uint64_t v16 = a3[7];
  uint64_t v17 = a3[8];
  uint64_t v18 = &a1[v16];
  uint64_t v19 = &a2[v16];
  *(void *)uint64_t v18 = *(void *)v19;
  v18[8] = v19[8];
  char v20 = &a1[v17];
  uint64_t v21 = &a2[v17];
  v20[8] = v21[8];
  *(void *)char v20 = *(void *)v21;
  uint64_t v22 = a3[9];
  uint64_t v23 = a3[10];
  uint64_t v24 = &a1[v22];
  uint64_t v25 = &a2[v22];
  *(void *)uint64_t v24 = *(void *)v25;
  v24[8] = v25[8];
  uint64_t v26 = &a1[v23];
  uint64_t v27 = &a2[v23];
  *(void *)uint64_t v26 = *(void *)v27;
  v26[8] = v27[8];
  uint64_t v28 = a3[11];
  uint64_t v29 = a3[12];
  uint64_t v30 = &a1[v28];
  uint64_t v31 = &a2[v28];
  *(void *)uint64_t v30 = *(void *)v31;
  v30[8] = v31[8];
  uint64_t v32 = &a1[v29];
  uint64_t v33 = &a2[v29];
  uint64_t v34 = *((void *)v33 + 1);
  *(void *)uint64_t v32 = *(void *)v33;
  *((void *)v32 + 1) = v34;
  uint64_t v35 = a3[14];
  a1[a3[13]] = a2[a3[13]];
  uint64_t v36 = &a1[v35];
  uint64_t v37 = &a2[v35];
  sub_1AFFC8E38();
  if (v8(v37, 1, v6))
  {
    sub_1AFF185B8(0, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v36, v37, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v36, 0, 1, v6);
  }
  uint64_t v39 = a3[15];
  uint64_t v40 = a3[16];
  uint64_t v41 = &a1[v39];
  uint64_t v42 = &a2[v39];
  uint64_t v43 = *((void *)v42 + 1);
  *(void *)uint64_t v41 = *(void *)v42;
  *((void *)v41 + 1) = v43;
  uint64_t v44 = &a1[v40];
  uint64_t v45 = &a2[v40];
  uint64_t v46 = *((void *)v45 + 1);
  *(void *)uint64_t v44 = *(void *)v45;
  *((void *)v44 + 1) = v46;
  uint64_t v47 = a3[18];
  a1[a3[17]] = a2[a3[17]];
  a1[v47] = a2[v47];
  uint64_t v48 = a3[20];
  a1[a3[19]] = a2[a3[19]];
  uint64_t v49 = &a1[v48];
  uint64_t v50 = &a2[v48];
  *(void *)uint64_t v49 = *(void *)v50;
  v49[8] = v50[8];
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  return a1;
}

char *sub_1AFF17358(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1AFFC98F8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    sub_1AFF185B8(0, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = *(void *)v14;
  v13[8] = v14[8];
  *(void *)uint64_t v13 = v15;
  uint64_t v16 = a3[6];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v19 = *(void *)v18;
  v17[8] = v18[8];
  *(void *)uint64_t v17 = v19;
  uint64_t v20 = a3[7];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  uint64_t v23 = *(void *)v22;
  v21[8] = v22[8];
  *(void *)uint64_t v21 = v23;
  uint64_t v24 = a3[8];
  uint64_t v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  uint64_t v27 = *(void *)v26;
  v25[8] = v26[8];
  *(void *)uint64_t v25 = v27;
  uint64_t v28 = a3[9];
  uint64_t v29 = &a1[v28];
  uint64_t v30 = &a2[v28];
  uint64_t v31 = *(void *)v30;
  v29[8] = v30[8];
  *(void *)uint64_t v29 = v31;
  uint64_t v32 = a3[10];
  uint64_t v33 = &a1[v32];
  uint64_t v34 = &a2[v32];
  uint64_t v35 = *(void *)v34;
  v33[8] = v34[8];
  *(void *)uint64_t v33 = v35;
  uint64_t v36 = a3[11];
  uint64_t v37 = &a1[v36];
  uint64_t v38 = &a2[v36];
  uint64_t v39 = *(void *)v38;
  v37[8] = v38[8];
  *(void *)uint64_t v37 = v39;
  uint64_t v40 = a3[12];
  uint64_t v41 = &a1[v40];
  uint64_t v42 = &a2[v40];
  *(void *)uint64_t v41 = *(void *)v42;
  *((void *)v41 + 1) = *((void *)v42 + 1);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[a3[13]] = a2[a3[13]];
  uint64_t v43 = a3[14];
  uint64_t v44 = &a1[v43];
  uint64_t v45 = &a2[v43];
  int v46 = v8(&a1[v43], 1, v6);
  int v47 = v8(v45, 1, v6);
  if (!v46)
  {
    if (!v47)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v44, v45, v6);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v44, v6);
    goto LABEL_12;
  }
  if (v47)
  {
LABEL_12:
    sub_1AFF185B8(0, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v44, v45, *(void *)(*(void *)(v48 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v44, v45, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v44, 0, 1, v6);
LABEL_13:
  uint64_t v49 = a3[15];
  uint64_t v50 = &a1[v49];
  uint64_t v51 = &a2[v49];
  *(void *)uint64_t v50 = *(void *)v51;
  *((void *)v50 + 1) = *((void *)v51 + 1);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  uint64_t v52 = a3[16];
  uint64_t v53 = &a1[v52];
  uint64_t v54 = &a2[v52];
  *(void *)uint64_t v53 = *(void *)v54;
  *((void *)v53 + 1) = *((void *)v54 + 1);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[a3[17]] = a2[a3[17]];
  a1[a3[18]] = a2[a3[18]];
  a1[a3[19]] = a2[a3[19]];
  uint64_t v55 = a3[20];
  uint64_t v56 = &a1[v55];
  unint64_t v57 = &a2[v55];
  uint64_t v58 = *(void *)v57;
  v56[8] = v57[8];
  *(void *)uint64_t v56 = v58;
  return a1;
}

char *sub_1AFF177C8(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1AFFC98F8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    sub_1AFF185B8(0, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v10 = a3[5];
  uint64_t v11 = a3[6];
  uint64_t v12 = &a1[v10];
  uint64_t v13 = &a2[v10];
  *(void *)uint64_t v12 = *(void *)v13;
  unsigned char v12[8] = v13[8];
  uint64_t v14 = &a1[v11];
  uint64_t v15 = &a2[v11];
  *(void *)uint64_t v14 = *(void *)v15;
  v14[8] = v15[8];
  uint64_t v16 = a3[7];
  uint64_t v17 = a3[8];
  uint64_t v18 = &a1[v16];
  uint64_t v19 = &a2[v16];
  *(void *)uint64_t v18 = *(void *)v19;
  v18[8] = v19[8];
  uint64_t v20 = &a1[v17];
  uint64_t v21 = &a2[v17];
  v20[8] = v21[8];
  *(void *)uint64_t v20 = *(void *)v21;
  uint64_t v22 = a3[9];
  uint64_t v23 = a3[10];
  uint64_t v24 = &a1[v22];
  uint64_t v25 = &a2[v22];
  *(void *)uint64_t v24 = *(void *)v25;
  v24[8] = v25[8];
  uint64_t v26 = &a1[v23];
  uint64_t v27 = &a2[v23];
  *(void *)uint64_t v26 = *(void *)v27;
  v26[8] = v27[8];
  uint64_t v28 = a3[11];
  uint64_t v29 = a3[12];
  uint64_t v30 = &a1[v28];
  uint64_t v31 = &a2[v28];
  *(void *)uint64_t v30 = *(void *)v31;
  v30[8] = v31[8];
  *(_OWORD *)&a1[v29] = *(_OWORD *)&a2[v29];
  uint64_t v32 = a3[14];
  a1[a3[13]] = a2[a3[13]];
  uint64_t v33 = &a1[v32];
  uint64_t v34 = &a2[v32];
  if (v8(&a2[v32], 1, v6))
  {
    sub_1AFF185B8(0, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v33, v34, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v33, 0, 1, v6);
  }
  uint64_t v36 = a3[16];
  *(_OWORD *)&a1[a3[15]] = *(_OWORD *)&a2[a3[15]];
  *(_OWORD *)&a1[v36] = *(_OWORD *)&a2[v36];
  uint64_t v37 = a3[18];
  a1[a3[17]] = a2[a3[17]];
  a1[v37] = a2[v37];
  uint64_t v38 = a3[20];
  a1[a3[19]] = a2[a3[19]];
  uint64_t v39 = &a1[v38];
  uint64_t v40 = &a2[v38];
  *(void *)uint64_t v39 = *(void *)v40;
  v39[8] = v40[8];
  return a1;
}

char *sub_1AFF17AFC(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1AFFC98F8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    sub_1AFF185B8(0, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = a3[6];
  uint64_t v14 = &a1[v12];
  uint64_t v15 = &a2[v12];
  *(void *)uint64_t v14 = *(void *)v15;
  v14[8] = v15[8];
  uint64_t v16 = &a1[v13];
  uint64_t v17 = &a2[v13];
  *(void *)uint64_t v16 = *(void *)v17;
  v16[8] = v17[8];
  uint64_t v18 = a3[7];
  uint64_t v19 = a3[8];
  uint64_t v20 = &a1[v18];
  uint64_t v21 = &a2[v18];
  *(void *)uint64_t v20 = *(void *)v21;
  v20[8] = v21[8];
  uint64_t v22 = &a1[v19];
  uint64_t v23 = &a2[v19];
  v22[8] = v23[8];
  *(void *)uint64_t v22 = *(void *)v23;
  uint64_t v24 = a3[9];
  uint64_t v25 = a3[10];
  uint64_t v26 = &a1[v24];
  uint64_t v27 = &a2[v24];
  *(void *)uint64_t v26 = *(void *)v27;
  v26[8] = v27[8];
  uint64_t v28 = &a1[v25];
  uint64_t v29 = &a2[v25];
  *(void *)uint64_t v28 = *(void *)v29;
  v28[8] = v29[8];
  uint64_t v30 = a3[11];
  uint64_t v31 = a3[12];
  uint64_t v32 = &a1[v30];
  uint64_t v33 = &a2[v30];
  *(void *)uint64_t v32 = *(void *)v33;
  _OWORD v32[8] = v33[8];
  uint64_t v34 = &a1[v31];
  uint64_t v35 = &a2[v31];
  uint64_t v37 = *(void *)v35;
  uint64_t v36 = *((void *)v35 + 1);
  *(void *)uint64_t v34 = v37;
  *((void *)v34 + 1) = v36;
  swift_bridgeObjectRelease();
  uint64_t v38 = a3[14];
  a1[a3[13]] = a2[a3[13]];
  uint64_t v39 = &a1[v38];
  uint64_t v40 = &a2[v38];
  int v41 = v8(&a1[v38], 1, v6);
  int v42 = v8(v40, 1, v6);
  if (!v41)
  {
    if (!v42)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v39, v40, v6);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v39, v6);
    goto LABEL_12;
  }
  if (v42)
  {
LABEL_12:
    sub_1AFF185B8(0, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v39, v40, *(void *)(*(void *)(v43 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v39, v40, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v39, 0, 1, v6);
LABEL_13:
  uint64_t v44 = a3[15];
  uint64_t v45 = &a1[v44];
  int v46 = &a2[v44];
  uint64_t v48 = *(void *)v46;
  uint64_t v47 = *((void *)v46 + 1);
  *(void *)uint64_t v45 = v48;
  *((void *)v45 + 1) = v47;
  swift_bridgeObjectRelease();
  uint64_t v49 = a3[16];
  uint64_t v50 = &a1[v49];
  uint64_t v51 = &a2[v49];
  uint64_t v53 = *(void *)v51;
  uint64_t v52 = *((void *)v51 + 1);
  *(void *)uint64_t v50 = v53;
  *((void *)v50 + 1) = v52;
  swift_bridgeObjectRelease();
  uint64_t v54 = a3[18];
  a1[a3[17]] = a2[a3[17]];
  a1[v54] = a2[v54];
  uint64_t v55 = a3[20];
  a1[a3[19]] = a2[a3[19]];
  uint64_t v56 = &a1[v55];
  unint64_t v57 = &a2[v55];
  *(void *)uint64_t v56 = *(void *)v57;
  v56[8] = v57[8];
  return a1;
}

uint64_t sub_1AFF17F20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1AFF17F34);
}

uint64_t sub_1AFF17F34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1AFF185B8(0, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 48) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_1AFF18034(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1AFF18048);
}

void sub_1AFF18048(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1AFF185B8(0, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v10(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 48) + 8) = a2;
  }
}

uint64_t type metadata accessor for YahooMultiQuoteItem(uint64_t a1)
{
  return sub_1AFD9BB54(a1, (uint64_t *)&unk_1EB81B560);
}

void sub_1AFF18158()
{
  sub_1AFF185B8(319, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1AFF18254()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

unsigned char *sub_1AFF1828C@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3 = *result;
  BOOL v4 = v3 > 0x20;
  uint64_t v5 = (1 << v3) & 0x100003E01;
  BOOL v6 = v4 || v5 == 0;
  v7 = v6 && (uint64_t result = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

uint64_t sub_1AFF182F8(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  if (a1)
  {
    a3(&var2);
    if (!v3) {
      char v4 = var2;
    }
  }
  else
  {
    ((void (*)(uint64_t *__return_ptr, void, void))a3)((uint64_t *)((char *)&var2 + 1), 0, 0);
    if (!v3) {
      char v4 = BYTE1(var2);
    }
  }
  return v4 & 1;
}

void *sub_1AFF18358@<X0>(void *(*a1)(uint64_t *__return_ptr)@<X2>, unsigned char *a2@<X8>)
{
  uint64_t result = a1(&v5);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1AFF1839C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v4)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    sub_1AFFCB8B8();
    for (unint64_t i = (uint64_t *)(a1 + 32); ; ++i)
    {
      uint64_t v8 = *i;
      swift_bridgeObjectRetain_n();
      uint64_t v7 = sub_1AFFB6B00(&v8);
      if (v2) {
        break;
      }
      uint64_t v2 = 0;
      MEMORY[0x1F4188790](v7);
      sub_1AFF185B8(0, (unint64_t *)&qword_1EB81B520, (uint64_t (*)(uint64_t))sub_1AFF1852C, MEMORY[0x1E4FAB088]);
      swift_allocObject();
      sub_1AFFCA758();
      swift_bridgeObjectRelease();
      swift_release();
      sub_1AFFCB888();
      sub_1AFFCB8C8();
      sub_1AFFCB8D8();
      sub_1AFFCB898();
      if (!--v4) {
        return v9;
      }
    }
    uint64_t result = swift_release();
    __break(1u);
  }
  return result;
}

void sub_1AFF1852C()
{
  if (!qword_1EB81B528)
  {
    type metadata accessor for YahooMultiQuoteItem(255);
    unint64_t v0 = sub_1AFFCAD18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB81B528);
    }
  }
}

uint64_t sub_1AFF18594(uint64_t a1)
{
  return sub_1AFF14E10(a1, *(void (**)(uint64_t, void))(v1 + 16));
}

void sub_1AFF185B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1AFF14F0C(a1, a2, a3, a4, *(void *)(v4 + 16), *(void *)(v4 + 24));
}

void sub_1AFF185B8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1AFF1861C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AFF18664()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1AFF1869C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 64, 7);
}

void sub_1AFF186EC(uint64_t a1)
{
  sub_1AFF151FC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void (**)(uint64_t))(v1 + 32), *(void *)(v1 + 40), *(void (**)(void *))(v1 + 48), *(void *)(v1 + 56));
}

void sub_1AFF186FC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a7)
  {
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

void sub_1AFF18774(uint64_t a1, uint64_t a2)
{
  sub_1AFF185B8(0, &qword_1EB81B2B0, type metadata accessor for YahooMultiQuoteItem, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v35 = (uint64_t)&v29 - v5;
  unint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    unint64_t v7 = 0;
    uint64_t v8 = a1 + 40;
    uint64_t v9 = -(uint64_t)v6;
    uint64_t v31 = MEMORY[0x1E4FBC860];
    uint64_t v29 = a1 + 40;
    unint64_t v30 = v6;
    do
    {
      if (v7 <= v6) {
        unint64_t v10 = v6;
      }
      else {
        unint64_t v10 = v7;
      }
      uint64_t v34 = -(uint64_t)v10;
      for (unint64_t i = (uint64_t *)(v8 + 16 * v7++); ; i += 2)
      {
        if (v34 + v7 == 1)
        {
          __break(1u);
          return;
        }
        uint64_t v12 = *(i - 1);
        uint64_t v13 = *i;
        uint64_t v14 = *(void *)(a2 + 16);
        uint64_t v33 = v12;
        if (!v14) {
          break;
        }
        swift_bridgeObjectRetain_n();
        unint64_t v15 = sub_1AFD79CC8(v12, v13);
        if (v16)
        {
          unint64_t v17 = v15;
          uint64_t v32 = *(void *)(a2 + 56);
          uint64_t v18 = type metadata accessor for YahooMultiQuoteItem(0);
          uint64_t v19 = v9;
          uint64_t v20 = *(void *)(v18 - 8);
          uint64_t v21 = v32 + *(void *)(v20 + 72) * v17;
          uint64_t v22 = v35;
          sub_1AFF18B9C(v21, v35);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v20 + 56))(v22, 0, 1, v18);
          uint64_t v9 = v19;
        }
        else
        {
          uint64_t v18 = type metadata accessor for YahooMultiQuoteItem(0);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v35, 1, 1, v18);
        }
        swift_bridgeObjectRelease();
        type metadata accessor for YahooMultiQuoteItem(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v35, 1, v18) == 1) {
          goto LABEL_16;
        }
        sub_1AFF18B2C(v35, &qword_1EB81B2B0, type metadata accessor for YahooMultiQuoteItem);
        swift_bridgeObjectRelease();
        ++v7;
        if (v9 + v7 == 1) {
          return;
        }
      }
      uint64_t v23 = type metadata accessor for YahooMultiQuoteItem(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v35, 1, 1, v23);
      sub_1AFFC8E38();
LABEL_16:
      sub_1AFF18B2C(v35, &qword_1EB81B2B0, type metadata accessor for YahooMultiQuoteItem);
      uint64_t v24 = v31;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v36 = v24;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1AFD9DA10(0, *(void *)(v24 + 16) + 1, 1);
        uint64_t v24 = v36;
      }
      unint64_t v27 = *(void *)(v24 + 16);
      unint64_t v26 = *(void *)(v24 + 24);
      if (v27 >= v26 >> 1)
      {
        sub_1AFD9DA10(v26 > 1, v27 + 1, 1);
        uint64_t v24 = v36;
      }
      *(void *)(v24 + 16) = v27 + 1;
      uint64_t v31 = v24;
      uint64_t v28 = v24 + 16 * v27;
      *(void *)(v28 + 32) = v33;
      *(void *)(v28 + 40) = v13;
      uint64_t v8 = v29;
      unint64_t v6 = v30;
    }
    while (v9 + v7);
  }
  else
  {
    uint64_t v31 = MEMORY[0x1E4FBC860];
  }
}

uint64_t sub_1AFF18B2C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1AFF185B8(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1AFF18B9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for YahooMultiQuoteItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void *sub_1AFF18C00(void *a1)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  uint64_t v5 = a1[9];
  uint64_t v6 = a1[10];
  uint64_t v8 = a1[11];
  uint64_t v10 = a1[17];
  uint64_t v11 = a1[16];
  uint64_t v9 = a1[18];
  uint64_t v13 = a1[24];
  uint64_t v14 = a1[23];
  uint64_t v12 = a1[25];
  uint64_t v16 = a1[31];
  uint64_t v17 = a1[30];
  uint64_t v15 = a1[32];
  uint64_t v19 = a1[38];
  uint64_t v20 = a1[37];
  uint64_t v18 = a1[39];
  uint64_t v22 = a1[45];
  uint64_t v23 = a1[44];
  uint64_t v21 = a1[46];
  sub_1AFFC8E38();
  sub_1AFF18E34(v2, v3, v4);
  sub_1AFF18E34(v5, v6, v8);
  sub_1AFF18E34(v11, v10, v9);
  sub_1AFF18E34(v14, v13, v12);
  sub_1AFF18E34(v17, v16, v15);
  sub_1AFF18E34(v20, v19, v18);
  sub_1AFF18E34(v23, v22, v21);
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  return a1;
}

uint64_t sub_1AFF18E34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    return sub_1AFFC8E38();
  }
  return result;
}

void *sub_1AFF18E84(void *a1)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  uint64_t v5 = a1[9];
  uint64_t v6 = a1[10];
  uint64_t v8 = a1[11];
  uint64_t v10 = a1[17];
  uint64_t v11 = a1[16];
  uint64_t v9 = a1[18];
  uint64_t v13 = a1[24];
  uint64_t v14 = a1[23];
  uint64_t v12 = a1[25];
  uint64_t v16 = a1[31];
  uint64_t v17 = a1[30];
  uint64_t v15 = a1[32];
  uint64_t v19 = a1[38];
  uint64_t v20 = a1[37];
  uint64_t v18 = a1[39];
  uint64_t v22 = a1[45];
  uint64_t v23 = a1[44];
  uint64_t v21 = a1[46];
  swift_bridgeObjectRelease();
  sub_1AFF190B8(v2, v3, v4);
  sub_1AFF190B8(v5, v6, v8);
  sub_1AFF190B8(v11, v10, v9);
  sub_1AFF190B8(v14, v13, v12);
  sub_1AFF190B8(v17, v16, v15);
  sub_1AFF190B8(v20, v19, v18);
  sub_1AFF190B8(v23, v22, v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AFF190B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unsigned char *sub_1AFF19108@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3 = *result;
  BOOL v4 = v3 > 0x20;
  uint64_t v5 = (1 << v3) & 0x100003E01;
  BOOL v6 = v4 || v5 == 0;
  v7 = v6 && (uint64_t result = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

uint64_t sub_1AFF19178(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for YahooMultiQuoteItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AFF191DC(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for YahooQuoteDetailService()
{
  return self;
}

uint64_t sub_1AFF19270(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_1AFFC9E18();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = &v39[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v11 = sub_1AFFC98F8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = &v39[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1AFD2CEB0(v3 + 16, (uint64_t)v39);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v12 + 16))(v14, a2, v11);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v8 + 16))(v10, a3, v7);
  uint64_t v15 = self;
  sub_1AFFC8E38();
  id v16 = objc_msgSend(v15, sel_sharedPreferences);
  uint64_t v17 = v16;
  if (!v16)
  {
    uint64_t v22 = 0xE500000000000000;
    uint64_t v20 = 0x73752D6E65;
LABEL_8:

    uint64_t v27 = 0xE200000000000000;
    uint64_t v25 = 21333;
    goto LABEL_9;
  }
  id v18 = objc_msgSend(v16, sel_stocksLanguageCode);
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v20 = sub_1AFFCAE98();
    uint64_t v22 = v21;
  }
  else
  {
    uint64_t v22 = 0xE500000000000000;
    uint64_t v20 = 0x73752D6E65;
  }
  id v23 = objc_msgSend(v17, sel_stocksCountryCode);
  if (!v23) {
    goto LABEL_8;
  }
  uint64_t v24 = v23;
  uint64_t v25 = sub_1AFFCAE98();
  uint64_t v27 = v26;

LABEL_9:
  uint64_t v28 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v39, v40);
  double v29 = MEMORY[0x1F4188790](v28);
  uint64_t v31 = (uint64_t *)&v39[-((v30 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(uint64_t *, double))(v32 + 16))(v31, v29);
  id v33 = sub_1AFE157CC(a1, *v31, v20, v22, v25, v27, (uint64_t)v14, (uint64_t)v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
  sub_1AFF1A180();
  sub_1AFFC9EF8();
  id v34 = v33;
  sub_1AFFC9EA8();
  sub_1AFFCA798();
  swift_release();
  uint64_t v35 = (void *)sub_1AFFCA5E8();
  sub_1AFF1A208(0, (unint64_t *)&qword_1EB817E50, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail, MEMORY[0x1E4FBAEA0]);
  uint64_t v36 = sub_1AFFCA678();

  swift_release();
  return v36;
}

uint64_t sub_1AFF1966C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1AFF19E20(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1AFF19698@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1AFFC98F8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v75 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFD3C630(0, &qword_1EB816CF8, MEMORY[0x1E4F27D68]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v74 = (char *)&v46 - v10;
  sub_1AFD3C630(0, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v73 = (uint64_t)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v72 = (uint64_t)&v46 - v14;
  uint64_t v15 = sub_1AFFC9818();
  MEMORY[0x1F4188790](v15);
  uint64_t v70 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  sub_1AFD3C630(0, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928]);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v71 = (uint64_t)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v81 = (uint64_t)&v46 - v21;
  MEMORY[0x1F4188790](v22);
  uint64_t v78 = (char *)&v46 - v23;
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (char *)&v46 - v25;
  uint64_t v27 = (int *)type metadata accessor for YahooQuoteDetailItem(0);
  uint64_t v28 = (uint64_t *)(a1 + v27[22]);
  uint64_t v29 = v28[1];
  uint64_t v77 = v6;
  if (v29)
  {
    uint64_t v79 = *v28;
    uint64_t v80 = v29;
    sub_1AFFC8E38();
    sub_1AFFC92D8();
    sub_1AFF1A3A0();
    sub_1AFFC9908();
    if (v2)
    {

      uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
      v30(v26, 1, 1, v77);
      uint64_t v3 = 0;
    }
    else
    {
      uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
      v30(v26, 0, 1, v77);
    }
  }
  else
  {
    uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
    v30(v26, 1, 1, v6);
  }
  uint64_t v31 = (uint64_t *)(a1 + v27[23]);
  uint64_t v32 = v31[1];
  uint64_t v76 = a2;
  if (v32)
  {
    uint64_t v79 = *v31;
    uint64_t v80 = v32;
    sub_1AFFC8E38();
    sub_1AFFC92D8();
    sub_1AFF1A3A0();
    sub_1AFFC9908();
    if (v3)
    {

      uint64_t v47 = 0;
      uint64_t v33 = 1;
    }
    else
    {
      uint64_t v33 = 0;
      uint64_t v47 = 0;
    }
  }
  else
  {
    uint64_t v33 = 1;
    uint64_t v47 = v3;
  }
  uint64_t v34 = (uint64_t)v78;
  v30(v78, v33, 1, v77);
  uint64_t v77 = *(void *)(a1 + 32);
  LODWORD(v70) = *(unsigned __int8 *)(a1 + 40);
  uint64_t v69 = *(void *)(a1 + 48);
  int v68 = *(unsigned __int8 *)(a1 + 56);
  uint64_t v67 = *(void *)(a1 + 64);
  int v66 = *(unsigned __int8 *)(a1 + 72);
  uint64_t v65 = *(void *)(a1 + 80);
  int v64 = *(unsigned __int8 *)(a1 + 88);
  uint64_t v63 = *(void *)(a1 + 96);
  int v62 = *(unsigned __int8 *)(a1 + 104);
  uint64_t v61 = *(void *)(a1 + 112);
  int v60 = *(unsigned __int8 *)(a1 + 120);
  uint64_t v59 = *(void *)(a1 + 128);
  int v58 = *(unsigned __int8 *)(a1 + 136);
  uint64_t v57 = *(void *)(a1 + 144);
  int v56 = *(unsigned __int8 *)(a1 + 152);
  uint64_t v55 = *(void *)(a1 + 160);
  int v54 = *(unsigned __int8 *)(a1 + 168);
  uint64_t v53 = *(void *)(a1 + 176);
  int v52 = *(unsigned __int8 *)(a1 + 184);
  uint64_t v51 = *(void *)(a1 + 192);
  int v50 = *(unsigned __int8 *)(a1 + 200);
  uint64_t v35 = (void (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1AFD3C51C((uint64_t)v26, v81, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928]);
  uint64_t v36 = v71;
  sub_1AFD3C51C(v34, v71, (unint64_t *)&qword_1EB818BA0, v35);
  uint64_t v37 = *(void *)(a1 + 216);
  uint64_t v49 = *(void *)(a1 + 208);
  uint64_t v38 = a1 + v27[18];
  uint64_t v39 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
  uint64_t v48 = v26;
  uint64_t v40 = v72;
  sub_1AFD3C51C(v38, v72, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
  uint64_t v41 = v73;
  sub_1AFD3C51C(a1 + v27[19], v73, (unint64_t *)&qword_1EB81A490, v39);
  uint64_t v42 = sub_1AFFC9B88();
  uint64_t v43 = (uint64_t)v74;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v74, 1, 1, v42);
  sub_1AFFC8E38();
  uint64_t v44 = (uint64_t)v75;
  sub_1AFFC98E8();
  sub_1AFD3BE10(v34);
  sub_1AFD3BE10((uint64_t)v48);
  return QuoteDetail.init(dayOpenPrice:dayLowPrice:dayHighPrice:yearLowPrice:yearHighPrice:dividendYield:volume:averageVolume:priceEarningsRatio:beta:earningsPerShare:earningsStartDate:earningsEndDate:currencyCode:detailsURL:keyStatisticsURL:marketTimeZone:fundAssetClass:fundCategory:fundFocus:fundNiche:fundRegion:fundTopHoldings:fundSectors:dateLastRefreshed:)(v77, (char)v70, v69, v68, v67, v66, v65, v64, v76, v63, v62, v61, v60, v59, v58, v57, v56, v55, v54,
           v53,
           v52,
           v51,
           v50,
           v81,
           v36,
           v49,
           v37,
           v40,
           v41,
           v43,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           MEMORY[0x1E4FBC860],
           MEMORY[0x1E4FBC860],
           v44);
}

uint64_t sub_1AFF19DFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AFF19270(a1, a2, a3);
}

uint64_t sub_1AFF19E20(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for QuoteDetail();
  uint64_t v32 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v34 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for YahooQuoteDetailItem(0);
  uint64_t v33 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFF1A208(0, (unint64_t *)&unk_1EB8181D0, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail, MEMORY[0x1E4FBBD58]);
  uint64_t result = sub_1AFFCB9D8();
  uint64_t v9 = (void *)result;
  int64_t v10 = 0;
  uint64_t v35 = a1;
  uint64_t v13 = *(void *)(a1 + 64);
  uint64_t v12 = a1 + 64;
  uint64_t v11 = v13;
  uint64_t v14 = 1 << *(unsigned char *)(v12 - 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v11;
  uint64_t v29 = v12;
  int64_t v30 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v31 = result + 64;
  uint64_t v17 = (uint64_t)v34;
  if ((v15 & v11) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v18 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  for (unint64_t i = v18 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v21)) + (v10 << 6))
  {
    uint64_t v23 = (uint64_t *)(*(void *)(v35 + 48) + 16 * i);
    uint64_t v24 = *v23;
    uint64_t v25 = v23[1];
    sub_1AFF1A27C(*(void *)(v35 + 56) + *(void *)(v33 + 72) * i, (uint64_t)v7);
    sub_1AFFC8E38();
    sub_1AFF19698((uint64_t)v7, v17);
    if (v1)
    {
      swift_bridgeObjectRelease();
      swift_release();
      sub_1AFF1A2E0((uint64_t)v7);
      return (uint64_t)v9;
    }
    sub_1AFF1A2E0((uint64_t)v7);
    *(void *)(v31 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v26 = (void *)(v9[6] + 16 * i);
    void *v26 = v24;
    v26[1] = v25;
    uint64_t result = sub_1AFF1A33C(v17, v9[7] + *(void *)(v32 + 72) * i);
    uint64_t v27 = v9[2];
    BOOL v20 = __OFADD__(v27, 1);
    uint64_t v28 = v27 + 1;
    if (v20)
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    v9[2] = v28;
    if (v16) {
      goto LABEL_4;
    }
LABEL_5:
    BOOL v20 = __OFADD__(v10++, 1);
    if (v20) {
      goto LABEL_27;
    }
    if (v10 >= v30) {
      return (uint64_t)v9;
    }
    unint64_t v21 = *(void *)(v29 + 8 * v10);
    if (!v21) {
      break;
    }
LABEL_15:
    unint64_t v16 = (v21 - 1) & v21;
  }
  int64_t v22 = v10 + 1;
  if (v10 + 1 >= v30) {
    return (uint64_t)v9;
  }
  unint64_t v21 = *(void *)(v29 + 8 * v22);
  if (v21) {
    goto LABEL_14;
  }
  int64_t v22 = v10 + 2;
  if (v10 + 2 >= v30) {
    return (uint64_t)v9;
  }
  unint64_t v21 = *(void *)(v29 + 8 * v22);
  if (v21) {
    goto LABEL_14;
  }
  int64_t v22 = v10 + 3;
  if (v10 + 3 >= v30) {
    return (uint64_t)v9;
  }
  unint64_t v21 = *(void *)(v29 + 8 * v22);
  if (v21)
  {
LABEL_14:
    int64_t v10 = v22;
    goto LABEL_15;
  }
  while (1)
  {
    int64_t v10 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v10 >= v30) {
      return (uint64_t)v9;
    }
    unint64_t v21 = *(void *)(v29 + 8 * v10);
    ++v22;
    if (v21) {
      goto LABEL_15;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_1AFF1A180()
{
  if (!qword_1EB81B570)
  {
    sub_1AFF1A208(255, (unint64_t *)&qword_1EB81B578, type metadata accessor for YahooQuoteDetailItem, MEMORY[0x1E4FBAEA0]);
    unint64_t v0 = sub_1AFFCA788();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB81B570);
    }
  }
}

void sub_1AFF1A208(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, void, uint64_t, void))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, MEMORY[0x1E4FBB1A0], v7, MEMORY[0x1E4FBB1B0]);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1AFF1A27C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for YahooQuoteDetailItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AFF1A2E0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for YahooQuoteDetailItem(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1AFF1A33C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for QuoteDetail();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1AFF1A3A0()
{
  unint64_t result = qword_1EB81A330[0];
  if (!qword_1EB81A330[0])
  {
    sub_1AFFC9818();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EB81A330);
  }
  return result;
}

uint64_t sub_1AFF1A3F8(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v3 = v2;
  uint64_t v4 = type metadata accessor for RawAttributionSource(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v5 = v3[3];
  uint64_t v6 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v5);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v6 + 8))(v12, v5, v6);
  sub_1AFF1A5EC((uint64_t)v11);
  sub_1AFD55D10((uint64_t)v12);
  sub_1AFF1AE18(0, &qword_1EB818B40, type metadata accessor for RawAttributionSource, MEMORY[0x1E4FAAA60]);
  swift_allocObject();
  *(void *)(v1 + 16) = sub_1AFFCA038();
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v7);
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v7, v8);
  swift_allocObject();
  swift_weakInit();
  uint64_t v9 = (void *)sub_1AFFCA5E8();
  sub_1AFFCA058();
  swift_release();
  swift_release();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  return v1;
}

uint64_t sub_1AFF1A5EC(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v2 = v1;
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1AFF1AE18(0, &qword_1EB818B30, type metadata accessor for RawAttributionSourceLogo, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v28 - v5;
  sub_1AFF1AE18(0, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0], v3);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)v28 - v8;
  uint64_t v10 = sub_1AFFC9A78();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v11 = sub_1AFFCAE58();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)v28 - v16;
  sub_1AFFCADF8();
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v14, v17, v11);
  if (qword_1EB819E80 != -1) {
    swift_once();
  }
  id v18 = (id)qword_1EB831AF8;
  sub_1AFFC9A28();
  v28[0] = sub_1AFFCAEF8();
  uint64_t v20 = v19;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
  sub_1AFF78BDC();
  sub_1AFFC96C8();
  swift_bridgeObjectRelease();
  sub_1AFDD2884((uint64_t)v6);
  uint64_t v21 = type metadata accessor for RawAttributionSourceLogo(0);
  swift_storeEnumTagMultiPayload();
  int64_t v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56);
  v22(v6, 0, 1, v21);
  uint64_t v23 = type metadata accessor for RawAttributionSource(0);
  uint64_t v24 = (uint64_t)v2 + *(int *)(v23 + 20);
  uint64_t v25 = sub_1AFFC96E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v24, 1, 1, v25);
  uint64_t v26 = (uint64_t)v2 + *(int *)(v23 + 24);
  v22((char *)v26, 1, 1, v21);
  void *v2 = v28[0];
  v2[1] = v20;
  sub_1AFF1AE7C((uint64_t)v9, v24, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
  return sub_1AFF1AE7C((uint64_t)v6, v26, &qword_1EB818B30, type metadata accessor for RawAttributionSourceLogo);
}

uint64_t sub_1AFF1AA20(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v1 = type metadata accessor for RawAttributionSource(0);
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = &v21[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = &v21[-v5];
  sub_1AFF1AE18(0, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = &v21[-v8];
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v11 = sub_1AFF78BDC();
    uint64_t v13 = v12;
    sub_1AFFC8E48();
    sub_1AFFC8E48();
    sub_1AFFCA048();
    swift_release();
    swift_release();
    sub_1AFE6FB24((uint64_t)&v6[*(int *)(v1 + 20)], (uint64_t)v9);
    sub_1AFF1AD64((uint64_t)v6);
    uint64_t v14 = sub_1AFFC96E8();
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v15 + 48))(v9, 1, v14) == 1)
    {
      sub_1AFD48D50((uint64_t)v9);
      swift_bridgeObjectRelease();
      goto LABEL_9;
    }
    uint64_t v16 = sub_1AFFC9608();
    uint64_t v18 = v17;
    (*(void (**)(unsigned char *, uint64_t))(v15 + 8))(v9, v14);
    if (v11 != v16 || v13 != v18)
    {
      char v20 = sub_1AFFCBCE8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v20) {
        return swift_release();
      }
LABEL_9:
      sub_1AFF1A5EC((uint64_t)v21);
      sub_1AFF1ADC0();
      sub_1AFFCA068();
      sub_1AFF1AD64((uint64_t)v3);
      return swift_release();
    }
    swift_release();
    return swift_bridgeObjectRelease_n();
  }
  return result;
}

uint64_t type metadata accessor for YahooAttributionProvider()
{
  return self;
}

uint64_t sub_1AFF1AD24()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1AFF1AD5C(uint64_t a1)
{
  return sub_1AFF1AA20(a1);
}

uint64_t sub_1AFF1AD64(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RawAttributionSource(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1AFF1ADC0()
{
  unint64_t result = qword_1EB818B18;
  if (!qword_1EB818B18)
  {
    type metadata accessor for RawAttributionSource(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818B18);
  }
  return result;
}

void sub_1AFF1AE18(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1AFF1AE7C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1AFF1AE18(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a2, a1, v6);
  return a2;
}

uint64_t sub_1AFF1AEFC(uint64_t a1, long long *a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  sub_1AFD80454(a2, v4 + 24);
  return v4;
}

uint64_t sub_1AFF1AF50()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1AFF1AF58@<X0>(uint64_t a1@<X8>)
{
  return sub_1AFD2CEB0(v1 + 24, a1);
}

uint64_t sub_1AFF1AF64(uint64_t a1, long long *a2)
{
  *(void *)(v2 + 16) = a1;
  sub_1AFD80454(a2, v2 + 24);
  return v2;
}

uint64_t sub_1AFF1AF90()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return v0;
}

uint64_t sub_1AFF1AFB8()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);

  return swift_deallocClassInstance();
}

uint64_t sub_1AFF1AFF8()
{
  sub_1AFF1B3CC(0, (unint64_t *)&qword_1EB817EA8, (unint64_t *)&unk_1EB816AA8);
  sub_1AFFCA7C8();
  uint64_t v0 = (void *)sub_1AFFCA5E8();
  sub_1AFF1B3CC(0, (unint64_t *)&qword_1EB817EB8, (unint64_t *)&qword_1EB819DC0);
  sub_1AFF1B434();
  uint64_t v1 = sub_1AFFCA778();
  swift_release();

  return v1;
}

uint64_t sub_1AFF1B0EC(void *a1, uint64_t a2, uint64_t a3)
{
  sub_1AFE166CC();
  MEMORY[0x1F4188790](v6 - 8);
  unint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  uint64_t v9 = a1 + 3;
  uint64_t v11 = a1[6];
  uint64_t v10 = a1[7];
  __swift_project_boxed_opaque_existential_1(v9, v11);
  uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 40))(a3, v11, v10);
  uint64_t v13 = sub_1AFFC9DE8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v8, 1, 1, v13);
  uint64_t v14 = sub_1AFE5933C(a2, v12);
  swift_bridgeObjectRelease();
  sub_1AFD562CC((uint64_t)v8);
  return v14;
}

uint64_t sub_1AFF1B238()
{
  return sub_1AFF1B0EC(*(void **)(v0 + 16), *(void *)(v0 + 24), *(unsigned __int8 *)(v0 + 32));
}

uint64_t sub_1AFF1B258(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  int64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v16 = *a2;
    uint64_t v18 = MEMORY[0x1E4FBC860];
    uint64_t v17 = a2[1];
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFD9DA10(0, v6, 0);
    uint64_t v7 = v18;
    unint64_t v8 = (uint64_t *)(v5 + 56);
    do
    {
      uint64_t v9 = *(v8 - 1);
      uint64_t v10 = *v8;
      unint64_t v12 = *(void *)(v18 + 16);
      unint64_t v11 = *(void *)(v18 + 24);
      sub_1AFFC8E38();
      if (v12 >= v11 >> 1) {
        sub_1AFD9DA10(v11 > 1, v12 + 1, 1);
      }
      *(void *)(v18 + 16) = v12 + 1;
      unint64_t v13 = v18 + 16 * v12;
      *(void *)(v13 + 32) = v9;
      *(void *)(v13 + 40) = v10;
      v8 += 13;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    uint64_t v4 = v17;
    uint64_t v3 = v16;
  }
  else
  {
    sub_1AFFC8E38();
    uint64_t v7 = MEMORY[0x1E4FBC860];
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v19 = *a1;
  *a1 = 0x8000000000000000;
  sub_1AFE03F48(v7, v3, v4, isUniquelyReferenced_nonNull_native);
  *a1 = v19;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1AFF1B3CC(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1AFD40AA0(255, a3);
    unint64_t v4 = sub_1AFFCAD18();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_1AFF1B434()
{
  unint64_t result = qword_1EB817EB0;
  if (!qword_1EB817EB0)
  {
    sub_1AFF1B3CC(255, (unint64_t *)&qword_1EB817EA8, (unint64_t *)&unk_1EB816AA8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817EB0);
  }
  return result;
}

uint64_t sub_1AFF1B4A4()
{
  sub_1AFF1B3CC(0, (unint64_t *)&qword_1EB817EA8, (unint64_t *)&unk_1EB816AA8);
  sub_1AFFCA7C8();
  uint64_t v0 = (void *)sub_1AFFCA5E8();
  sub_1AFF1B3CC(0, (unint64_t *)&qword_1EB817EB8, (unint64_t *)&qword_1EB819DC0);
  sub_1AFF1B434();
  uint64_t v1 = sub_1AFFCA778();
  swift_release();

  return v1;
}

uint64_t type metadata accessor for StockFeedLookupService()
{
  return self;
}

uint64_t sub_1AFF1B5C0(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for StockFeedLookupService);
}

uint64_t sub_1AFF1B5D8()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1AFF1B5EC()
{
  return sub_1AFF1B238();
}

uint64_t sub_1AFF1B604()
{
  uint64_t v0 = sub_1AFFCA8A8();
  __swift_allocate_value_buffer(v0, qword_1EB810AF0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EB810AF0);
  id v1 = objc_msgSend(self, sel_mainBundle);
  id v2 = objc_msgSend(v1, sel_bundleIdentifier);

  if (v2)
  {
    sub_1AFFCAE98();
  }
  return sub_1AFFCA898();
}

uint64_t sub_1AFF1B6F0@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EB810B30 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1AFFCA8A8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EB810AF0);
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t ScoringConfig.articleLengthAggregateWeight.getter()
{
  return *(void *)v0;
}

uint64_t ScoringConfig.articleReadPenalty.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t ScoringConfig.audioMultiplierForAUsers.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t ScoringConfig.audioMultiplierForBUsers.getter()
{
  return *(void *)(v0 + 48);
}

uint64_t ScoringConfig.audioMultiplierForCUsers.getter()
{
  return *(void *)(v0 + 64);
}

uint64_t ScoringConfig.autofavoritedVoteCoefficient.getter()
{
  return *(void *)(v0 + 80);
}

uint64_t ScoringConfig.baselineRatePrior.getter()
{
  return *(void *)(v0 + 96);
}

uint64_t ScoringConfig.bundleFreeMultiplierForAUsers.getter()
{
  return *(void *)(v0 + 112);
}

uint64_t ScoringConfig.bundleFreeMultiplierForBUsers.getter()
{
  return *(void *)(v0 + 128);
}

uint64_t ScoringConfig.bundleFreeMultiplierForCUsers.getter()
{
  return *(void *)(v0 + 144);
}

uint64_t ScoringConfig.bundlePaidMultiplierForAUsers.getter()
{
  return *(void *)(v0 + 160);
}

uint64_t ScoringConfig.bundlePaidMultiplierForBUsers.getter()
{
  return *(void *)(v0 + 176);
}

uint64_t ScoringConfig.bundlePaidMultiplierForCUsers.getter()
{
  return *(void *)(v0 + 192);
}

uint64_t ScoringConfig.channelTopicDiversificationInitialPenalty.getter()
{
  return *(void *)(v0 + 208);
}

uint64_t ScoringConfig.channelTopicDiversificationPenalty.getter()
{
  return *(void *)(v0 + 224);
}

uint64_t ScoringConfig.channelTopicDiversificationPenaltyHalfLife.getter()
{
  return *(void *)(v0 + 240);
}

uint64_t ScoringConfig.conversionCoefficientForFreeUsers.getter()
{
  return *(void *)(v0 + 256);
}

uint64_t ScoringConfig.conversionCoefficientForPaidUsers.getter()
{
  return *(void *)(v0 + 272);
}

uint64_t ScoringConfig.conversionCoefficientForTrialUsers.getter()
{
  return *(void *)(v0 + 288);
}

__n128 ScoringConfig.conversionCohort.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 400);
  char v3 = *(unsigned char *)(v1 + 408);
  char v4 = *(unsigned char *)(v1 + 409);
  long long v5 = *(_OWORD *)(v1 + 320);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 304);
  *(_OWORD *)(a1 + 16) = v5;
  long long v6 = *(_OWORD *)(v1 + 352);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 336);
  *(_OWORD *)(a1 + 48) = v6;
  __n128 result = *(__n128 *)(v1 + 368);
  long long v8 = *(_OWORD *)(v1 + 384);
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v8;
  *(void *)(a1 + 96) = v2;
  *(unsigned char *)(a1 + 104) = v3;
  *(unsigned char *)(a1 + 105) = v4;
  return result;
}

uint64_t ScoringConfig.ctrWithOneAutofavorited.getter()
{
  return *(void *)(v0 + 416);
}

uint64_t ScoringConfig.ctrWithOneSubscribed.getter()
{
  return *(void *)(v0 + 432);
}

uint64_t ScoringConfig.ctrWithSubscribedChannel.getter()
{
  return *(void *)(v0 + 448);
}

uint64_t ScoringConfig.ctrWithThreeAutofavorited.getter()
{
  return *(void *)(v0 + 464);
}

uint64_t ScoringConfig.ctrWithThreeSubscribed.getter()
{
  return *(void *)(v0 + 480);
}

uint64_t ScoringConfig.ctrWithTwoAutofavorited.getter()
{
  return *(void *)(v0 + 496);
}

uint64_t ScoringConfig.ctrWithTwoSubscribed.getter()
{
  return *(void *)(v0 + 512);
}

uint64_t ScoringConfig.ctrWithZeroAutofavorited.getter()
{
  return *(void *)(v0 + 528);
}

uint64_t ScoringConfig.ctrWithZeroSubscribed.getter()
{
  return *(void *)(v0 + 544);
}

uint64_t ScoringConfig.decayFactor.getter()
{
  return *(void *)(v0 + 560);
}

uint64_t ScoringConfig.democratizationFactor.getter()
{
  return *(void *)(v0 + 576);
}

uint64_t ScoringConfig.diversificationInitialPenalty.getter()
{
  return *(void *)(v0 + 592);
}

uint64_t ScoringConfig.diversificationPenalty.getter()
{
  return *(void *)(v0 + 608);
}

uint64_t ScoringConfig.diversificationPenaltyHalfLife.getter()
{
  return *(void *)(v0 + 624);
}

uint64_t ScoringConfig.evergreenHalfLifeCoefficient.getter()
{
  return *(void *)(v0 + 640);
}

uint64_t ScoringConfig.evergreenMultiplierForAUsers.getter()
{
  return *(void *)(v0 + 656);
}

uint64_t ScoringConfig.evergreenMultiplierForBUsers.getter()
{
  return *(void *)(v0 + 672);
}

uint64_t ScoringConfig.evergreenMultiplierForCUsers.getter()
{
  return *(void *)(v0 + 688);
}

uint64_t ScoringConfig.featuredMultiplierForAUsers.getter()
{
  return *(void *)(v0 + 704);
}

uint64_t ScoringConfig.featuredMultiplierForBUsers.getter()
{
  return *(void *)(v0 + 720);
}

uint64_t ScoringConfig.featuredMultiplierForCUsers.getter()
{
  return *(void *)(v0 + 736);
}

uint64_t ScoringConfig.firstPassArticleFilter.getter()
{
  return *(void *)(v0 + 752);
}

uint64_t ScoringConfig.firstPassDiversificationPenalty.getter()
{
  return *(void *)(v0 + 768);
}

uint64_t ScoringConfig.firstPassEvergreenHalfLifeCoefficient.getter()
{
  return *(void *)(v0 + 784);
}

uint64_t ScoringConfig.firstPassHalfLifeCoefficient.getter()
{
  return *(void *)(v0 + 800);
}

uint64_t ScoringConfig.globalScoreCoefficientFree.getter()
{
  return *(void *)(v0 + 816);
}

uint64_t ScoringConfig.globalScoreCoefficientHalfLife.getter()
{
  return *(void *)(v0 + 832);
}

uint64_t ScoringConfig.globalScoreCoefficientInitialMultiplier.getter()
{
  return *(void *)(v0 + 848);
}

uint64_t ScoringConfig.globalScoreCoefficientPaid.getter()
{
  return *(void *)(v0 + 864);
}

uint64_t ScoringConfig.halfLifeCoefficient.getter()
{
  return *(void *)(v0 + 880);
}

uint64_t ScoringConfig.headlineSeenPenalty.getter()
{
  return *(void *)(v0 + 896);
}

uint64_t ScoringConfig.mutedVoteCoefficient.getter()
{
  return *(void *)(v0 + 912);
}

uint64_t ScoringConfig.personalizationCoefficient.getter()
{
  return *(void *)(v0 + 928);
}

uint64_t ScoringConfig.publisherAggregateWeight.getter()
{
  return *(void *)(v0 + 944);
}

uint64_t ScoringConfig.sparseTagsPenalty.getter()
{
  return *(void *)(v0 + 960);
}

uint64_t ScoringConfig.subscribedChannelScoreCoefficient.getter()
{
  return *(void *)(v0 + 976);
}

uint64_t ScoringConfig.subscribedTopicsScoreCoefficient.getter()
{
  return *(void *)(v0 + 992);
}

uint64_t ScoringConfig.tabiScoreCoefficient.getter()
{
  return *(void *)(v0 + 1008);
}

__n128 ScoringConfig.userCohort.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 1120);
  char v3 = *(unsigned char *)(v1 + 1128);
  char v4 = *(unsigned char *)(v1 + 1129);
  long long v5 = *(_OWORD *)(v1 + 1040);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 1024);
  *(_OWORD *)(a1 + 16) = v5;
  long long v6 = *(_OWORD *)(v1 + 1072);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 1056);
  *(_OWORD *)(a1 + 48) = v6;
  __n128 result = *(__n128 *)(v1 + 1088);
  long long v8 = *(_OWORD *)(v1 + 1104);
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v8;
  *(void *)(a1 + 96) = v2;
  *(unsigned char *)(a1 + 104) = v3;
  *(unsigned char *)(a1 + 105) = v4;
  return result;
}

unint64_t sub_1AFF1BB64(char a1)
{
  unint64_t result = 0xD00000000000001CLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000012;
      break;
    case 2:
      unint64_t result = 0xD000000000000018;
      break;
    case 3:
      unint64_t result = 0xD000000000000018;
      break;
    case 4:
      unint64_t result = 0xD000000000000018;
      break;
    case 6:
      unint64_t result = 0xD000000000000011;
      break;
    case 7:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 8:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 9:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 10:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 11:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 12:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 13:
      unint64_t result = 0xD000000000000029;
      break;
    case 14:
      unint64_t result = 0xD000000000000022;
      break;
    case 15:
      unint64_t result = 0xD00000000000002ALL;
      break;
    case 16:
      unint64_t result = 0xD000000000000021;
      break;
    case 17:
      unint64_t result = 0xD000000000000021;
      break;
    case 18:
      unint64_t result = 0xD000000000000022;
      break;
    case 19:
      unint64_t result = 0xD000000000000010;
      break;
    case 20:
      unint64_t result = 0xD000000000000017;
      break;
    case 21:
      unint64_t result = 0xD000000000000014;
      break;
    case 22:
      unint64_t result = 0xD000000000000018;
      break;
    case 23:
      unint64_t result = 0xD000000000000019;
      break;
    case 24:
      unint64_t result = 0xD000000000000016;
      break;
    case 25:
      unint64_t result = 0xD000000000000017;
      break;
    case 26:
      unint64_t result = 0xD000000000000014;
      break;
    case 27:
      unint64_t result = 0xD000000000000018;
      break;
    case 28:
      unint64_t result = 0xD000000000000015;
      break;
    case 29:
      unint64_t result = 0x6361467961636564;
      break;
    case 30:
      unint64_t result = 0xD000000000000015;
      break;
    case 31:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 32:
      unint64_t result = 0xD000000000000016;
      break;
    case 33:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 38:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 39:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 40:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 41:
      unint64_t result = 0xD000000000000016;
      break;
    case 42:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 43:
      unint64_t result = 0xD000000000000025;
      break;
    case 45:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 46:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 47:
      unint64_t result = 0xD000000000000027;
      break;
    case 48:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 49:
      unint64_t result = 0xD000000000000013;
      break;
    case 50:
      unint64_t result = 0xD000000000000013;
      break;
    case 51:
      unint64_t result = 0xD000000000000014;
      break;
    case 52:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 53:
      unint64_t result = 0xD000000000000018;
      break;
    case 54:
      unint64_t result = 0xD000000000000011;
      break;
    case 55:
      unint64_t result = 0xD000000000000021;
      break;
    case 56:
      unint64_t result = 0xD000000000000020;
      break;
    case 57:
      unint64_t result = 0xD000000000000014;
      break;
    case 58:
      unint64_t result = 0x6F686F4372657375;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1AFF1C03C(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_1AFF1BB64(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1AFF1BB64(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1AFFCBCE8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1AFF1C0C8()
{
  char v1 = *v0;
  sub_1AFFCBDF8();
  sub_1AFF1BB64(v1);
  sub_1AFFCAF68();
  swift_bridgeObjectRelease();
  return sub_1AFFCBE38();
}

uint64_t sub_1AFF1C12C()
{
  sub_1AFF1BB64(*v0);
  sub_1AFFCAF68();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFF1C180()
{
  char v1 = *v0;
  sub_1AFFCBDF8();
  sub_1AFF1BB64(v1);
  sub_1AFFCAF68();
  swift_bridgeObjectRelease();
  return sub_1AFFCBE38();
}

uint64_t sub_1AFF1C1E0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFF2270C();
  *a1 = result;
  return result;
}

unint64_t sub_1AFF1C210@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1AFF1BB64(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1AFF1C23C()
{
  return sub_1AFF1BB64(*v0);
}

uint64_t sub_1AFF1C244@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFF2270C();
  *a1 = result;
  return result;
}

void sub_1AFF1C26C(unsigned char *a1@<X8>)
{
  *a1 = 59;
}

uint64_t sub_1AFF1C278(uint64_t a1)
{
  unint64_t v2 = sub_1AFF1E60C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFF1C2B4(uint64_t a1)
{
  unint64_t v2 = sub_1AFF1E60C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ScoringConfig.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1AFF1FAD0(0, &qword_1EB819F48, MEMORY[0x1E4FBBDC0]);
  uint64_t v376 = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v8 = (char *)&v105 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFF1E60C();
  sub_1AFFCBE68();
  if (!v2)
  {
    uint64_t v9 = v6;
    LOBYTE(v361) = 0;
    uint64_t v10 = sub_1AFFCBAC8();
    char v12 = v11;
    LOBYTE(v361) = 1;
    v231 = (_DWORD *)sub_1AFFCBAC8();
    int v232 = v13;
    LOBYTE(v361) = 2;
    v229 = (_DWORD *)sub_1AFFCBAC8();
    LODWORD(v230) = v14;
    LOBYTE(v361) = 3;
    uint64_t v227 = sub_1AFFCBAC8();
    LODWORD(v228) = v15;
    LOBYTE(v361) = 4;
    uint64_t v225 = sub_1AFFCBAC8();
    int v226 = v16;
    LOBYTE(v361) = 5;
    uint64_t v223 = sub_1AFFCBAC8();
    int v224 = v17;
    LOBYTE(v361) = 6;
    uint64_t v221 = sub_1AFFCBAC8();
    int v222 = v18;
    LOBYTE(v361) = 7;
    uint64_t v218 = sub_1AFFCBAC8();
    int v220 = v19;
    LOBYTE(v361) = 8;
    uint64_t v217 = sub_1AFFCBAC8();
    int v219 = v20;
    LOBYTE(v361) = 9;
    uint64_t v215 = sub_1AFFCBAC8();
    int v216 = v21;
    LOBYTE(v361) = 10;
    uint64_t v213 = sub_1AFFCBAC8();
    int v214 = v22;
    LOBYTE(v361) = 11;
    uint64_t v211 = sub_1AFFCBAC8();
    int v212 = v23;
    LOBYTE(v361) = 12;
    uint64_t v209 = sub_1AFFCBAC8();
    int v210 = v24;
    LOBYTE(v361) = 13;
    uint64_t v207 = sub_1AFFCBAC8();
    int v208 = v25;
    LOBYTE(v361) = 14;
    uint64_t v205 = sub_1AFFCBAC8();
    int v206 = v26;
    LOBYTE(v361) = 15;
    uint64_t v203 = sub_1AFFCBAC8();
    int v204 = v27;
    LOBYTE(v361) = 16;
    uint64_t v201 = sub_1AFFCBAC8();
    int v202 = v28;
    LOBYTE(v361) = 17;
    uint64_t v199 = sub_1AFFCBAC8();
    int v200 = v29;
    LOBYTE(v361) = 18;
    uint64_t v197 = sub_1AFFCBAC8();
    int v198 = v30;
    LOBYTE(v352) = 19;
    unint64_t v196 = sub_1AFF1E660();
    sub_1AFFCBAF8();
    uint64_t v194 = v361;
    uint64_t v193 = v362;
    uint64_t v192 = v363;
    uint64_t v191 = v364;
    uint64_t v190 = v365;
    uint64_t v189 = v366;
    uint64_t v188 = v367;
    uint64_t v187 = v368;
    uint64_t v186 = v369;
    uint64_t v185 = v370;
    uint64_t v184 = v371;
    uint64_t v183 = v372;
    uint64_t v182 = v373;
    int v181 = v374;
    int v179 = v375;
    LOBYTE(v352) = 20;
    uint64_t v180 = sub_1AFFCBAC8();
    int v195 = v31;
    LOBYTE(v352) = 21;
    uint64_t v177 = sub_1AFFCBAC8();
    int v178 = v32;
    LOBYTE(v352) = 22;
    uint64_t v175 = sub_1AFFCBAC8();
    int v176 = v33;
    LOBYTE(v352) = 23;
    uint64_t v173 = sub_1AFFCBAC8();
    int v174 = v34;
    LOBYTE(v352) = 24;
    uint64_t v171 = sub_1AFFCBAC8();
    int v172 = v35;
    LOBYTE(v352) = 25;
    uint64_t v169 = sub_1AFFCBAC8();
    int v170 = v36;
    LOBYTE(v352) = 26;
    uint64_t v167 = sub_1AFFCBAC8();
    int v168 = v37;
    LOBYTE(v352) = 27;
    uint64_t v165 = sub_1AFFCBAC8();
    int v166 = v38;
    LOBYTE(v352) = 28;
    uint64_t v163 = sub_1AFFCBAC8();
    int v164 = v39;
    LOBYTE(v352) = 29;
    uint64_t v161 = sub_1AFFCBAC8();
    int v162 = v40;
    LOBYTE(v352) = 30;
    uint64_t v159 = sub_1AFFCBAC8();
    int v160 = v41;
    LOBYTE(v352) = 31;
    uint64_t v157 = sub_1AFFCBAC8();
    int v158 = v42;
    LOBYTE(v352) = 32;
    uint64_t v155 = sub_1AFFCBAC8();
    int v156 = v43;
    LOBYTE(v352) = 33;
    uint64_t v153 = sub_1AFFCBAC8();
    int v154 = v44;
    LOBYTE(v352) = 34;
    uint64_t v151 = sub_1AFFCBAC8();
    int v152 = v45;
    LOBYTE(v352) = 35;
    uint64_t v149 = sub_1AFFCBAC8();
    int v150 = v46;
    LOBYTE(v352) = 36;
    uint64_t v147 = sub_1AFFCBAC8();
    int v148 = v47;
    LOBYTE(v352) = 37;
    uint64_t v145 = sub_1AFFCBAC8();
    int v146 = v48;
    LOBYTE(v352) = 38;
    uint64_t v143 = sub_1AFFCBAC8();
    int v144 = v49;
    LOBYTE(v352) = 39;
    uint64_t v141 = sub_1AFFCBAC8();
    int v142 = v50;
    LOBYTE(v352) = 40;
    uint64_t v139 = sub_1AFFCBAC8();
    int v140 = v51;
    LOBYTE(v352) = 41;
    uint64_t v137 = sub_1AFFCBAC8();
    int v138 = v52;
    LOBYTE(v352) = 42;
    uint64_t v135 = sub_1AFFCBAC8();
    int v136 = v53;
    LOBYTE(v352) = 43;
    uint64_t v133 = sub_1AFFCBAC8();
    int v134 = v54;
    LOBYTE(v352) = 44;
    uint64_t v131 = sub_1AFFCBAC8();
    int v132 = v55;
    LOBYTE(v352) = 45;
    uint64_t v125 = sub_1AFFCBAC8();
    int v130 = v56;
    LOBYTE(v352) = 46;
    uint64_t v123 = sub_1AFFCBAC8();
    int v129 = v57;
    LOBYTE(v352) = 47;
    uint64_t v121 = sub_1AFFCBAC8();
    int v128 = v58;
    LOBYTE(v352) = 48;
    uint64_t v119 = sub_1AFFCBAC8();
    int v127 = v59;
    LOBYTE(v352) = 49;
    uint64_t v117 = sub_1AFFCBAC8();
    int v126 = v60;
    LOBYTE(v352) = 50;
    uint64_t v115 = sub_1AFFCBAC8();
    int v124 = v61;
    LOBYTE(v352) = 51;
    uint64_t v113 = sub_1AFFCBAC8();
    int v122 = v62;
    LOBYTE(v352) = 52;
    uint64_t v110 = sub_1AFFCBAC8();
    int v120 = v63;
    LOBYTE(v352) = 53;
    uint64_t v109 = sub_1AFFCBAC8();
    int v118 = v64;
    LOBYTE(v352) = 54;
    uint64_t v108 = sub_1AFFCBAC8();
    int v116 = v65;
    LOBYTE(v352) = 55;
    uint64_t v107 = sub_1AFFCBAC8();
    int v114 = v66;
    LOBYTE(v352) = 56;
    uint64_t v106 = sub_1AFFCBAC8();
    int v112 = v67;
    LOBYTE(v352) = 57;
    uint64_t v105 = sub_1AFFCBAC8();
    int v111 = v68;
    char v351 = 58;
    sub_1AFFCBAF8();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v376);
    char v312 = v179;
    *(void *)a2 = v10;
    *(void *)(a2 + 16) = v231;
    *(void *)(a2 + 32) = v229;
    *(void *)(a2 + 48) = v227;
    *(void *)(a2 + 64) = v225;
    *(void *)(a2 + 80) = v223;
    *(void *)(a2 + 96) = v221;
    *(void *)(a2 + 112) = v218;
    *(void *)(a2 + 128) = v217;
    *(void *)(a2 + 144) = v215;
    *(void *)(a2 + 160) = v213;
    *(void *)(a2 + 176) = v211;
    *(void *)(a2 + 192) = v209;
    *(void *)(a2 + 208) = v207;
    *(void *)(a2 + 224) = v205;
    *(void *)(a2 + 240) = v203;
    *(void *)(a2 + 256) = v201;
    *(void *)(a2 + 272) = v199;
    *(void *)(a2 + 288) = v197;
    uint64_t v70 = v193;
    *(void *)(a2 + 304) = v194;
    *(void *)(a2 + 312) = v70;
    uint64_t v71 = v191;
    *(void *)(a2 + 320) = v192;
    *(void *)(a2 + 328) = v71;
    uint64_t v72 = v189;
    *(void *)(a2 + 336) = v190;
    *(void *)(a2 + 344) = v72;
    uint64_t v73 = v187;
    *(void *)(a2 + 352) = v188;
    *(void *)(a2 + 360) = v73;
    uint64_t v74 = v185;
    *(void *)(a2 + 368) = v186;
    *(void *)(a2 + 376) = v74;
    uint64_t v75 = v183;
    *(void *)(a2 + 384) = v184;
    *(void *)(a2 + 392) = v75;
    *(void *)(a2 + 400) = v182;
    *(unsigned char *)(a2 + 408) = v181;
    *(void *)(a2 + 416) = v180;
    *(void *)(a2 + 432) = v177;
    *(void *)(a2 + 448) = v175;
    *(void *)(a2 + 464) = v173;
    *(void *)(a2 + 480) = v171;
    *(void *)(a2 + 496) = v169;
    *(void *)(a2 + 512) = v167;
    *(void *)(a2 + 528) = v165;
    *(void *)(a2 + 544) = v163;
    *(void *)(a2 + 560) = v161;
    *(void *)(a2 + 576) = v159;
    *(void *)(a2 + 592) = v157;
    *(void *)(a2 + 608) = v155;
    *(void *)(a2 + 624) = v153;
    *(void *)(a2 + 640) = v151;
    *(void *)(a2 + 656) = v149;
    *(void *)(a2 + 672) = v147;
    *(void *)(a2 + 688) = v145;
    *(void *)(a2 + 704) = v143;
    *(void *)(a2 + 720) = v141;
    *(void *)(a2 + 736) = v139;
    *(void *)(a2 + 752) = v137;
    *(void *)(a2 + 768) = v135;
    *(void *)(a2 + 784) = v133;
    *(void *)(a2 + 800) = v131;
    *(void *)(a2 + 816) = v125;
    *(void *)(a2 + 832) = v123;
    *(void *)(a2 + 848) = v121;
    *(void *)(a2 + 864) = v119;
    *(void *)(a2 + 880) = v117;
    *(void *)(a2 + 896) = v115;
    *(void *)(a2 + 912) = v113;
    *(void *)(a2 + 928) = v110;
    *(void *)(a2 + 944) = v109;
    *(void *)(a2 + 960) = v108;
    *(void *)(a2 + 976) = v107;
    *(void *)(a2 + 992) = v106;
    *(void *)(a2 + 1008) = v105;
    char v350 = v12 & 1;
    char v348 = v232 & 1;
    char v346 = v230 & 1;
    char v344 = v228 & 1;
    char v342 = v226 & 1;
    char v340 = v224 & 1;
    char v338 = v222 & 1;
    char v336 = v220 & 1;
    char v334 = v219 & 1;
    char v332 = v216 & 1;
    char v330 = v214 & 1;
    char v328 = v212 & 1;
    char v326 = v210 & 1;
    char v324 = v208 & 1;
    char v322 = v206 & 1;
    char v320 = v204 & 1;
    char v318 = v202 & 1;
    char v316 = v200 & 1;
    char v314 = v198 & 1;
    char v309 = v195 & 1;
    char v307 = v178 & 1;
    char v305 = v176 & 1;
    char v303 = v174 & 1;
    char v301 = v172 & 1;
    char v299 = v170 & 1;
    char v297 = v168 & 1;
    char v295 = v166 & 1;
    char v293 = v164 & 1;
    char v291 = v162 & 1;
    char v289 = v160 & 1;
    uint64_t v376 = v358;
    char v287 = v158 & 1;
    int v232 = v359;
    char v285 = v156 & 1;
    char v283 = v154 & 1;
    char v281 = v152 & 1;
    char v279 = v150 & 1;
    char v277 = v148 & 1;
    char v275 = v146 & 1;
    char v273 = v144 & 1;
    char v271 = v142 & 1;
    char v269 = v140 & 1;
    char v267 = v138 & 1;
    char v265 = v136 & 1;
    char v263 = v134 & 1;
    char v261 = v132 & 1;
    char v259 = v130 & 1;
    char v257 = v129 & 1;
    char v255 = v128 & 1;
    char v253 = v127 & 1;
    char v251 = v126 & 1;
    char v249 = v124 & 1;
    char v247 = v122 & 1;
    char v245 = v120 & 1;
    char v243 = v118 & 1;
    char v241 = v116 & 1;
    char v239 = v114 & 1;
    char v237 = v112 & 1;
    char v235 = v111 & 1;
    char v233 = v360;
    *(unsigned char *)(a2 + 8) = v12 & 1;
    *(_DWORD *)(a2 + 9) = *(_DWORD *)v349;
    *(_DWORD *)(a2 + 12) = *(_DWORD *)&v349[3];
    *(unsigned char *)(a2 + 24) = v348;
    *(_DWORD *)(a2 + 25) = *(_DWORD *)v347;
    *(_DWORD *)(a2 + 28) = *(_DWORD *)&v347[3];
    *(unsigned char *)(a2 + 40) = v346;
    *(_DWORD *)(a2 + 41) = *(_DWORD *)v345;
    *(_DWORD *)(a2 + 44) = *(_DWORD *)&v345[3];
    *(unsigned char *)(a2 + 56) = v344;
    v231 = (_DWORD *)(a2 + 617);
    *(_DWORD *)(a2 + 57) = *(_DWORD *)v343;
    *(_DWORD *)(a2 + 60) = *(_DWORD *)&v343[3];
    *(unsigned char *)(a2 + 72) = v342;
    v230 = (_DWORD *)(a2 + 633);
    *(_DWORD *)(a2 + 76) = *(_DWORD *)&v341[3];
    *(_DWORD *)(a2 + 73) = *(_DWORD *)v341;
    *(unsigned char *)(a2 + 88) = v340;
    v229 = (_DWORD *)(a2 + 649);
    *(_DWORD *)(a2 + 92) = *(_DWORD *)&v339[3];
    *(_DWORD *)(a2 + 89) = *(_DWORD *)v339;
    *(unsigned char *)(a2 + 104) = v338;
    v228 = (_DWORD *)(a2 + 665);
    LODWORD(v75) = *(_DWORD *)v337;
    *(_DWORD *)(a2 + 108) = *(_DWORD *)&v337[3];
    *(_DWORD *)(a2 + 105) = v75;
    *(unsigned char *)(a2 + 120) = v336;
    LODWORD(v75) = *(_DWORD *)v335;
    *(_DWORD *)(a2 + 124) = *(_DWORD *)&v335[3];
    *(_DWORD *)(a2 + 121) = v75;
    *(unsigned char *)(a2 + 136) = v334;
    LODWORD(v75) = *(_DWORD *)v333;
    *(_DWORD *)(a2 + 140) = *(_DWORD *)&v333[3];
    *(_DWORD *)(a2 + 137) = v75;
    *(unsigned char *)(a2 + 152) = v332;
    LODWORD(v75) = *(_DWORD *)v331;
    *(_DWORD *)(a2 + 156) = *(_DWORD *)&v331[3];
    *(_DWORD *)(a2 + 153) = v75;
    *(unsigned char *)(a2 + 168) = v330;
    LODWORD(v75) = *(_DWORD *)v329;
    *(_DWORD *)(a2 + 172) = *(_DWORD *)&v329[3];
    *(_DWORD *)(a2 + 169) = v75;
    *(unsigned char *)(a2 + 184) = v328;
    LODWORD(v75) = *(_DWORD *)v327;
    *(_DWORD *)(a2 + 188) = *(_DWORD *)&v327[3];
    *(_DWORD *)(a2 + 185) = v75;
    *(unsigned char *)(a2 + 200) = v326;
    LODWORD(v75) = *(_DWORD *)v325;
    *(_DWORD *)(a2 + 204) = *(_DWORD *)&v325[3];
    *(_DWORD *)(a2 + 201) = v75;
    *(unsigned char *)(a2 + 216) = v324;
    LODWORD(v75) = *(_DWORD *)v323;
    *(_DWORD *)(a2 + 220) = *(_DWORD *)&v323[3];
    *(_DWORD *)(a2 + 217) = v75;
    *(unsigned char *)(a2 + 232) = v322;
    LODWORD(v75) = *(_DWORD *)v321;
    *(_DWORD *)(a2 + 236) = *(_DWORD *)&v321[3];
    *(_DWORD *)(a2 + 233) = v75;
    *(unsigned char *)(a2 + 248) = v320;
    LODWORD(v75) = *(_DWORD *)v319;
    *(_DWORD *)(a2 + 252) = *(_DWORD *)&v319[3];
    *(_DWORD *)(a2 + 249) = v75;
    *(unsigned char *)(a2 + 264) = v318;
    int v76 = *(_DWORD *)v317;
    *(_DWORD *)(a2 + 268) = *(_DWORD *)&v317[3];
    *(_DWORD *)(a2 + 265) = v76;
    *(unsigned char *)(a2 + 280) = v316;
    int v77 = *(_DWORD *)v315;
    *(_DWORD *)(a2 + 284) = *(_DWORD *)&v315[3];
    *(_DWORD *)(a2 + 281) = v77;
    *(unsigned char *)(a2 + 296) = v314;
    int v78 = *(_DWORD *)v313;
    *(_DWORD *)(a2 + 300) = *(_DWORD *)&v313[3];
    *(_DWORD *)(a2 + 297) = v78;
    *(_DWORD *)(a2 + 410) = v310;
    *(_DWORD *)(a2 + 428) = *(_DWORD *)&v308[3];
    *(_DWORD *)(a2 + 425) = *(_DWORD *)v308;
    *(_DWORD *)(a2 + 444) = *(_DWORD *)&v306[3];
    *(_DWORD *)(a2 + 441) = *(_DWORD *)v306;
    *(_DWORD *)(a2 + 460) = *(_DWORD *)&v304[3];
    *(_DWORD *)(a2 + 457) = *(_DWORD *)v304;
    *(_DWORD *)(a2 + 476) = *(_DWORD *)&v302[3];
    *(_DWORD *)(a2 + 473) = *(_DWORD *)v302;
    *(_DWORD *)(a2 + 492) = *(_DWORD *)&v300[3];
    *(_DWORD *)(a2 + 489) = *(_DWORD *)v300;
    *(_DWORD *)(a2 + 508) = *(_DWORD *)&v298[3];
    *(_DWORD *)(a2 + 505) = *(_DWORD *)v298;
    *(_DWORD *)(a2 + 524) = *(_DWORD *)&v296[3];
    *(_DWORD *)(a2 + 521) = *(_DWORD *)v296;
    *(_DWORD *)(a2 + 540) = *(_DWORD *)&v294[3];
    *(_DWORD *)(a2 + 537) = *(_DWORD *)v294;
    *(_DWORD *)(a2 + 556) = *(_DWORD *)&v292[3];
    *(_DWORD *)(a2 + 553) = *(_DWORD *)v292;
    *(_DWORD *)(a2 + 572) = *(_DWORD *)&v290[3];
    *(_DWORD *)(a2 + 569) = *(_DWORD *)v290;
    *(_DWORD *)(a2 + 588) = *(_DWORD *)&v288[3];
    *(_DWORD *)(a2 + 585) = *(_DWORD *)v288;
    *(_DWORD *)(a2 + 604) = *(_DWORD *)&v286[3];
    *(_DWORD *)(a2 + 601) = *(_DWORD *)v286;
    long long v79 = v352;
    long long v80 = v353;
    long long v81 = v354;
    long long v82 = v355;
    long long v83 = v356;
    long long v84 = v357;
    *(unsigned char *)(a2 + 409) = v312;
    *(_WORD *)(a2 + 414) = v311;
    *(unsigned char *)(a2 + 424) = v309;
    *(unsigned char *)(a2 + 440) = v307;
    *(unsigned char *)(a2 + 456) = v305;
    *(unsigned char *)(a2 + 472) = v303;
    *(unsigned char *)(a2 + 488) = v301;
    *(unsigned char *)(a2 + 504) = v299;
    *(unsigned char *)(a2 + 520) = v297;
    *(unsigned char *)(a2 + 536) = v295;
    *(unsigned char *)(a2 + 552) = v293;
    *(unsigned char *)(a2 + 568) = v291;
    *(unsigned char *)(a2 + 584) = v289;
    *(unsigned char *)(a2 + 600) = v287;
    *(unsigned char *)(a2 + 616) = v285;
    *(_DWORD *)(a2 + 620) = *(_DWORD *)&v284[3];
    _DWORD *v231 = *(_DWORD *)v284;
    *(unsigned char *)(a2 + 632) = v283;
    int v85 = *(_DWORD *)v282;
    *(_DWORD *)(a2 + 636) = *(_DWORD *)&v282[3];
    _DWORD *v230 = v85;
    *(unsigned char *)(a2 + 648) = v281;
    int v86 = *(_DWORD *)v280;
    *(_DWORD *)(a2 + 652) = *(_DWORD *)&v280[3];
    _DWORD *v229 = v86;
    *(unsigned char *)(a2 + 664) = v279;
    int v87 = *(_DWORD *)v278;
    *(_DWORD *)(a2 + 668) = *(_DWORD *)&v278[3];
    _DWORD *v228 = v87;
    *(unsigned char *)(a2 + 680) = v277;
    int v88 = *(_DWORD *)v276;
    *(_DWORD *)(a2 + 684) = *(_DWORD *)&v276[3];
    *(_DWORD *)(a2 + 681) = v88;
    *(unsigned char *)(a2 + 696) = v275;
    int v89 = *(_DWORD *)v274;
    *(_DWORD *)(a2 + 700) = *(_DWORD *)&v274[3];
    *(_DWORD *)(a2 + 697) = v89;
    *(unsigned char *)(a2 + 712) = v273;
    int v90 = *(_DWORD *)v272;
    *(_DWORD *)(a2 + 716) = *(_DWORD *)&v272[3];
    *(_DWORD *)(a2 + 713) = v90;
    *(unsigned char *)(a2 + 728) = v271;
    int v91 = *(_DWORD *)v270;
    *(_DWORD *)(a2 + 732) = *(_DWORD *)&v270[3];
    *(_DWORD *)(a2 + 729) = v91;
    *(unsigned char *)(a2 + 744) = v269;
    int v92 = *(_DWORD *)v268;
    *(_DWORD *)(a2 + 748) = *(_DWORD *)&v268[3];
    *(_DWORD *)(a2 + 745) = v92;
    *(unsigned char *)(a2 + 760) = v267;
    int v93 = *(_DWORD *)v266;
    *(_DWORD *)(a2 + 764) = *(_DWORD *)&v266[3];
    *(_DWORD *)(a2 + 761) = v93;
    *(unsigned char *)(a2 + 776) = v265;
    int v94 = *(_DWORD *)v264;
    *(_DWORD *)(a2 + 780) = *(_DWORD *)&v264[3];
    *(_DWORD *)(a2 + 777) = v94;
    *(unsigned char *)(a2 + 792) = v263;
    int v95 = *(_DWORD *)v262;
    *(_DWORD *)(a2 + 796) = *(_DWORD *)&v262[3];
    *(_DWORD *)(a2 + 793) = v95;
    *(unsigned char *)(a2 + 808) = v261;
    int v96 = *(_DWORD *)v260;
    *(_DWORD *)(a2 + 812) = *(_DWORD *)&v260[3];
    *(_DWORD *)(a2 + 809) = v96;
    *(unsigned char *)(a2 + 824) = v259;
    int v97 = *(_DWORD *)v258;
    *(_DWORD *)(a2 + 828) = *(_DWORD *)&v258[3];
    *(_DWORD *)(a2 + 825) = v97;
    *(unsigned char *)(a2 + 840) = v257;
    int v98 = *(_DWORD *)v256;
    *(_DWORD *)(a2 + 844) = *(_DWORD *)&v256[3];
    *(_DWORD *)(a2 + 841) = v98;
    *(unsigned char *)(a2 + 856) = v255;
    int v99 = *(_DWORD *)v254;
    *(_DWORD *)(a2 + 860) = *(_DWORD *)&v254[3];
    *(_DWORD *)(a2 + 857) = v99;
    *(unsigned char *)(a2 + 872) = v253;
    int v100 = *(_DWORD *)v252;
    *(_DWORD *)(a2 + 876) = *(_DWORD *)&v252[3];
    *(_DWORD *)(a2 + 873) = v100;
    *(unsigned char *)(a2 + 888) = v251;
    int v101 = *(_DWORD *)v250;
    *(_DWORD *)(a2 + 892) = *(_DWORD *)&v250[3];
    *(_DWORD *)(a2 + 889) = v101;
    *(unsigned char *)(a2 + 904) = v249;
    int v102 = *(_DWORD *)v248;
    *(_DWORD *)(a2 + 908) = *(_DWORD *)&v248[3];
    *(_DWORD *)(a2 + 905) = v102;
    *(unsigned char *)(a2 + 920) = v247;
    int v103 = *(_DWORD *)v246;
    *(_DWORD *)(a2 + 924) = *(_DWORD *)&v246[3];
    *(_DWORD *)(a2 + 921) = v103;
    *(unsigned char *)(a2 + 936) = v245;
    int v104 = *(_DWORD *)v244;
    *(_DWORD *)(a2 + 940) = *(_DWORD *)&v244[3];
    *(_DWORD *)(a2 + 937) = v104;
    *(unsigned char *)(a2 + 952) = v243;
    LODWORD(v75) = *(_DWORD *)v242;
    *(_DWORD *)(a2 + 956) = *(_DWORD *)&v242[3];
    *(_DWORD *)(a2 + 953) = v75;
    *(unsigned char *)(a2 + 968) = v241;
    LODWORD(v75) = *(_DWORD *)v240;
    *(_DWORD *)(a2 + 972) = *(_DWORD *)&v240[3];
    *(_DWORD *)(a2 + 969) = v75;
    *(unsigned char *)(a2 + 984) = v239;
    LODWORD(v75) = *(_DWORD *)v238;
    *(_DWORD *)(a2 + 988) = *(_DWORD *)&v238[3];
    *(_DWORD *)(a2 + 985) = v75;
    *(unsigned char *)(a2 + 1000) = v237;
    LODWORD(v75) = *(_DWORD *)v236;
    *(_DWORD *)(a2 + 1004) = *(_DWORD *)&v236[3];
    *(_DWORD *)(a2 + 1001) = v75;
    *(unsigned char *)(a2 + 1016) = v235;
    LODWORD(v75) = *(_DWORD *)v234;
    *(_DWORD *)(a2 + 1020) = *(_DWORD *)&v234[3];
    *(_DWORD *)(a2 + 1017) = v75;
    *(_OWORD *)(a2 + 1024) = v79;
    *(_OWORD *)(a2 + 1040) = v80;
    *(_OWORD *)(a2 + 1056) = v81;
    *(_OWORD *)(a2 + 1072) = v82;
    *(_OWORD *)(a2 + 1088) = v83;
    *(_OWORD *)(a2 + 1104) = v84;
    *(void *)(a2 + 1120) = v376;
    *(unsigned char *)(a2 + 1128) = v232;
    *(unsigned char *)(a2 + 1129) = v233;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1AFF1E60C()
{
  unint64_t result = qword_1EB818E20;
  if (!qword_1EB818E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818E20);
  }
  return result;
}

unint64_t sub_1AFF1E660()
{
  unint64_t result = qword_1EB818D20;
  if (!qword_1EB818D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818D20);
  }
  return result;
}

uint64_t ScoringConfig.encode(to:)(void *a1)
{
  sub_1AFF1FAD0(0, &qword_1EB81A010, MEMORY[0x1E4FBBDE0]);
  uint64_t v163 = v3;
  uint64_t v160 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v18 - v4;
  uint64_t v161 = *v1;
  LODWORD(v159) = *((unsigned __int8 *)v1 + 8);
  uint64_t v6 = v1[2];
  int v179 = *((unsigned __int8 *)v1 + 24);
  uint64_t v157 = v1[4];
  int v158 = v6;
  int v156 = *((unsigned __int8 *)v1 + 40);
  uint64_t v155 = v1[6];
  int v152 = *((unsigned __int8 *)v1 + 56);
  int v150 = v1[8];
  int v151 = *((unsigned __int8 *)v1 + 72);
  int v148 = v1[10];
  int v149 = *((unsigned __int8 *)v1 + 88);
  int v146 = v1[12];
  int v147 = *((unsigned __int8 *)v1 + 104);
  int v144 = v1[14];
  int v145 = *((unsigned __int8 *)v1 + 120);
  int v142 = v1[16];
  int v143 = *((unsigned __int8 *)v1 + 136);
  int v140 = v1[18];
  int v141 = *((unsigned __int8 *)v1 + 152);
  uint64_t v139 = v1[20];
  int v24 = *((unsigned __int8 *)v1 + 280);
  int v38 = *((unsigned __int8 *)v1 + 296);
  int v41 = *((unsigned __int8 *)v1 + 409);
  int v43 = *((unsigned __int8 *)v1 + 424);
  int v45 = *((unsigned __int8 *)v1 + 440);
  int v47 = *((unsigned __int8 *)v1 + 456);
  int v49 = *((unsigned __int8 *)v1 + 472);
  int v51 = *((unsigned __int8 *)v1 + 488);
  int v52 = *((unsigned __int8 *)v1 + 504);
  int v138 = *((unsigned __int8 *)v1 + 168);
  uint64_t v137 = v1[22];
  int v136 = *((unsigned __int8 *)v1 + 184);
  uint64_t v135 = v1[24];
  int v134 = *((unsigned __int8 *)v1 + 200);
  int v132 = v1[26];
  int v133 = *((unsigned __int8 *)v1 + 216);
  int v130 = v1[28];
  int v131 = *((unsigned __int8 *)v1 + 232);
  int v128 = v1[30];
  int v129 = *((unsigned __int8 *)v1 + 248);
  int v126 = v1[32];
  int v127 = *((unsigned __int8 *)v1 + 264);
  int v23 = v1[34];
  int v25 = v1[36];
  int v26 = v1[38];
  int v27 = v1[39];
  int v28 = v1[40];
  int v29 = v1[41];
  int v30 = v1[42];
  int v31 = v1[43];
  int v32 = v1[44];
  int v33 = v1[45];
  int v34 = v1[46];
  int v35 = v1[47];
  int v36 = v1[48];
  int v37 = v1[49];
  int v39 = v1[50];
  int v40 = *((unsigned __int8 *)v1 + 408);
  int v42 = v1[52];
  int v44 = v1[54];
  int v46 = v1[56];
  int v48 = v1[58];
  int v50 = v1[60];
  int v53 = v1[62];
  int v54 = v1[64];
  int v55 = *((unsigned __int8 *)v1 + 520);
  int v56 = v1[66];
  int v57 = *((unsigned __int8 *)v1 + 536);
  int v58 = v1[68];
  int v59 = *((unsigned __int8 *)v1 + 552);
  int v60 = v1[70];
  int v61 = *((unsigned __int8 *)v1 + 568);
  int v62 = v1[72];
  int v63 = *((unsigned __int8 *)v1 + 584);
  int v64 = v1[74];
  int v65 = *((unsigned __int8 *)v1 + 600);
  int v66 = v1[76];
  int v67 = *((unsigned __int8 *)v1 + 616);
  int v68 = v1[78];
  int v69 = *((unsigned __int8 *)v1 + 632);
  uint64_t v70 = v1[80];
  int v71 = *((unsigned __int8 *)v1 + 648);
  uint64_t v72 = v1[82];
  int v73 = *((unsigned __int8 *)v1 + 664);
  uint64_t v74 = v1[84];
  int v75 = *((unsigned __int8 *)v1 + 680);
  int v76 = v1[86];
  int v77 = *((unsigned __int8 *)v1 + 696);
  int v78 = v1[88];
  int v79 = *((unsigned __int8 *)v1 + 712);
  long long v80 = v1[90];
  int v81 = *((unsigned __int8 *)v1 + 728);
  long long v82 = v1[92];
  int v83 = *((unsigned __int8 *)v1 + 744);
  long long v84 = v1[94];
  int v85 = *((unsigned __int8 *)v1 + 760);
  int v86 = v1[96];
  int v87 = *((unsigned __int8 *)v1 + 776);
  int v88 = v1[98];
  int v89 = *((unsigned __int8 *)v1 + 792);
  int v90 = v1[100];
  int v91 = *((unsigned __int8 *)v1 + 808);
  int v92 = v1[102];
  int v93 = *((unsigned __int8 *)v1 + 824);
  int v94 = v1[104];
  int v95 = *((unsigned __int8 *)v1 + 840);
  int v96 = v1[106];
  int v97 = *((unsigned __int8 *)v1 + 856);
  int v98 = v1[108];
  int v99 = *((unsigned __int8 *)v1 + 872);
  int v100 = v1[110];
  int v101 = *((unsigned __int8 *)v1 + 888);
  int v102 = v1[112];
  int v103 = *((unsigned __int8 *)v1 + 904);
  int v104 = v1[114];
  int v105 = *((unsigned __int8 *)v1 + 920);
  uint64_t v106 = v1[116];
  int v107 = *((unsigned __int8 *)v1 + 936);
  uint64_t v108 = v1[118];
  int v109 = *((unsigned __int8 *)v1 + 952);
  uint64_t v110 = v1[120];
  int v111 = *((unsigned __int8 *)v1 + 968);
  int v112 = v1[122];
  int v113 = *((unsigned __int8 *)v1 + 984);
  int v114 = v1[124];
  int v115 = *((unsigned __int8 *)v1 + 1000);
  int v116 = v1[126];
  int v117 = *((unsigned __int8 *)v1 + 1016);
  int v154 = v1[128];
  uint64_t v153 = v1[129];
  uint64_t v125 = v1[130];
  int v124 = v1[131];
  uint64_t v123 = v1[132];
  int v122 = v1[133];
  uint64_t v121 = v1[134];
  int v120 = v1[135];
  uint64_t v119 = v1[136];
  int v118 = v1[137];
  uint64_t v7 = v1[138];
  char v8 = v1[139];
  uint64_t v9 = v1[140];
  int v10 = *((unsigned __int8 *)v1 + 1128);
  int v11 = *((unsigned __int8 *)v1 + 1129);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFF1E60C();
  sub_1AFFCBE78();
  LOBYTE(v164) = 0;
  uint64_t v12 = v162;
  uint64_t v161 = v5;
  sub_1AFFCBBB8();
  uint64_t v162 = v12;
  if (v12) {
    return (*(uint64_t (**)(char *, uint64_t))(v160 + 8))(v161, v163);
  }
  int v19 = v11;
  int v20 = v10;
  int v21 = v9;
  int v22 = v8;
  uint64_t v159 = v7;
  int v14 = v153;
  int v15 = v154;
  uint64_t v16 = v160;
  LOBYTE(v164) = 1;
  sub_1AFFCBBB8();
  LOBYTE(v164) = 2;
  sub_1AFFCBBB8();
  LOBYTE(v164) = 3;
  sub_1AFFCBBB8();
  LOBYTE(v164) = 4;
  sub_1AFFCBBB8();
  LOBYTE(v164) = 5;
  sub_1AFFCBBB8();
  LOBYTE(v164) = 6;
  sub_1AFFCBBB8();
  LOBYTE(v164) = 7;
  sub_1AFFCBBB8();
  LOBYTE(v164) = 8;
  sub_1AFFCBBB8();
  uint64_t v162 = 0;
  LOBYTE(v164) = 9;
  sub_1AFFCBBB8();
  uint64_t v162 = 0;
  LOBYTE(v164) = 10;
  sub_1AFFCBBB8();
  uint64_t v162 = 0;
  LOBYTE(v164) = 11;
  sub_1AFFCBBB8();
  uint64_t v162 = 0;
  LOBYTE(v164) = 12;
  sub_1AFFCBBB8();
  uint64_t v162 = 0;
  LOBYTE(v164) = 13;
  sub_1AFFCBBB8();
  uint64_t v162 = 0;
  LOBYTE(v164) = 14;
  sub_1AFFCBBB8();
  uint64_t v162 = 0;
  LOBYTE(v164) = 15;
  sub_1AFFCBBB8();
  uint64_t v162 = 0;
  LOBYTE(v164) = 16;
  sub_1AFFCBBB8();
  uint64_t v162 = 0;
  LOBYTE(v164) = 17;
  sub_1AFFCBBB8();
  uint64_t v162 = 0;
  LOBYTE(v164) = 18;
  sub_1AFFCBBB8();
  uint64_t v162 = 0;
  int v164 = v26;
  uint64_t v165 = v27;
  int v166 = v28;
  uint64_t v167 = v29;
  int v168 = v30;
  uint64_t v169 = v31;
  int v170 = v32;
  uint64_t v171 = v33;
  int v172 = v34;
  uint64_t v173 = v35;
  int v174 = v36;
  uint64_t v175 = v37;
  int v176 = v39;
  char v177 = v40;
  char v178 = v41;
  char v180 = 19;
  sub_1AFF1FB34();
  uint64_t v17 = v162;
  sub_1AFFCBBE8();
  uint64_t v162 = v17;
  if (!v17)
  {
    LOBYTE(v164) = 20;
    sub_1AFFCBBB8();
    uint64_t v162 = 0;
    LOBYTE(v164) = 21;
    sub_1AFFCBBB8();
    uint64_t v162 = 0;
    LOBYTE(v164) = 22;
    sub_1AFFCBBB8();
    uint64_t v162 = 0;
    LOBYTE(v164) = 23;
    sub_1AFFCBBB8();
    uint64_t v162 = 0;
    LOBYTE(v164) = 24;
    sub_1AFFCBBB8();
    uint64_t v162 = 0;
    LOBYTE(v164) = 25;
    sub_1AFFCBBB8();
    uint64_t v162 = 0;
    LOBYTE(v164) = 26;
    sub_1AFFCBBB8();
    uint64_t v162 = 0;
    LOBYTE(v164) = 27;
    sub_1AFFCBBB8();
    uint64_t v162 = 0;
    LOBYTE(v164) = 28;
    sub_1AFFCBBB8();
    uint64_t v162 = 0;
    LOBYTE(v164) = 29;
    sub_1AFFCBBB8();
    uint64_t v162 = 0;
    LOBYTE(v164) = 30;
    sub_1AFFCBBB8();
    uint64_t v162 = 0;
    LOBYTE(v164) = 31;
    sub_1AFFCBBB8();
    uint64_t v162 = 0;
    LOBYTE(v164) = 32;
    sub_1AFFCBBB8();
    uint64_t v162 = 0;
    LOBYTE(v164) = 33;
    sub_1AFFCBBB8();
    uint64_t v162 = 0;
    LOBYTE(v164) = 34;
    sub_1AFFCBBB8();
    uint64_t v162 = 0;
    LOBYTE(v164) = 35;
    sub_1AFFCBBB8();
    uint64_t v162 = 0;
    LOBYTE(v164) = 36;
    sub_1AFFCBBB8();
    uint64_t v162 = 0;
    LOBYTE(v164) = 37;
    sub_1AFFCBBB8();
    uint64_t v162 = 0;
    LOBYTE(v164) = 38;
    sub_1AFFCBBB8();
    uint64_t v162 = 0;
    LOBYTE(v164) = 39;
    sub_1AFFCBBB8();
    uint64_t v162 = 0;
    LOBYTE(v164) = 40;
    sub_1AFFCBBB8();
    uint64_t v162 = 0;
    LOBYTE(v164) = 41;
    sub_1AFFCBBB8();
    uint64_t v162 = 0;
    LOBYTE(v164) = 42;
    sub_1AFFCBBB8();
    uint64_t v162 = 0;
    LOBYTE(v164) = 43;
    sub_1AFFCBBB8();
    uint64_t v162 = 0;
    LOBYTE(v164) = 44;
    sub_1AFFCBBB8();
    uint64_t v162 = 0;
    LOBYTE(v164) = 45;
    sub_1AFFCBBB8();
    uint64_t v162 = 0;
    LOBYTE(v164) = 46;
    sub_1AFFCBBB8();
    uint64_t v162 = 0;
    LOBYTE(v164) = 47;
    sub_1AFFCBBB8();
    uint64_t v162 = 0;
    LOBYTE(v164) = 48;
    sub_1AFFCBBB8();
    uint64_t v162 = 0;
    LOBYTE(v164) = 49;
    sub_1AFFCBBB8();
    uint64_t v162 = 0;
    LOBYTE(v164) = 50;
    sub_1AFFCBBB8();
    uint64_t v162 = 0;
    LOBYTE(v164) = 51;
    sub_1AFFCBBB8();
    uint64_t v162 = 0;
    LOBYTE(v164) = 52;
    sub_1AFFCBBB8();
    uint64_t v162 = 0;
    LOBYTE(v164) = 53;
    sub_1AFFCBBB8();
    uint64_t v162 = 0;
    LOBYTE(v164) = 54;
    sub_1AFFCBBB8();
    uint64_t v162 = 0;
    LOBYTE(v164) = 55;
    sub_1AFFCBBB8();
    uint64_t v162 = 0;
    LOBYTE(v164) = 56;
    sub_1AFFCBBB8();
    uint64_t v162 = 0;
    LOBYTE(v164) = 57;
    sub_1AFFCBBB8();
    uint64_t v162 = 0;
    int v164 = v15;
    uint64_t v165 = v14;
    int v166 = v125;
    uint64_t v167 = v124;
    int v168 = v123;
    uint64_t v169 = v122;
    int v170 = v121;
    uint64_t v171 = v120;
    int v172 = v119;
    uint64_t v173 = v118;
    int v174 = v159;
    uint64_t v175 = v22;
    int v176 = v21;
    char v177 = v20;
    char v178 = v19;
    char v180 = 58;
    sub_1AFFCBBE8();
    uint64_t v162 = 0;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v161, v163);
}

void sub_1AFF1FAD0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1AFF1E60C();
    unint64_t v7 = a3(a1, &type metadata for ScoringConfig.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1AFF1FB34()
{
  unint64_t result = qword_1EB818D18;
  if (!qword_1EB818D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818D18);
  }
  return result;
}

uint64_t ScoringConfig.hash(into:)()
{
  int v2 = v0[24];
  int v3 = v0[40];
  int v4 = v0[56];
  int v5 = v0[72];
  int v6 = v0[88];
  int v7 = v0[104];
  int v8 = v0[120];
  int v9 = v0[136];
  int v11 = v0[152];
  int v18 = v0[280];
  int v19 = v0[296];
  int v20 = v0[409];
  int v21 = v0[424];
  int v22 = v0[440];
  int v23 = v0[456];
  int v24 = v0[472];
  int v25 = v0[488];
  int v26 = v0[504];
  int v10 = v0[168];
  int v12 = v0[184];
  int v13 = v0[200];
  int v14 = v0[216];
  int v15 = v0[232];
  int v16 = v0[248];
  int v17 = v0[264];
  int v27 = v0[520];
  int v28 = v0[536];
  int v29 = v0[552];
  int v30 = v0[568];
  int v31 = v0[584];
  int v32 = v0[600];
  int v33 = v0[616];
  int v34 = v0[632];
  int v35 = v0[648];
  int v36 = v0[664];
  int v37 = v0[680];
  int v38 = v0[696];
  int v39 = v0[712];
  int v40 = v0[728];
  int v41 = v0[744];
  int v42 = v0[760];
  int v43 = v0[776];
  int v44 = v0[792];
  int v45 = v0[808];
  int v46 = v0[824];
  int v47 = v0[840];
  int v48 = v0[856];
  int v49 = v0[872];
  int v50 = v0[888];
  int v51 = v0[904];
  int v52 = v0[920];
  int v53 = v0[936];
  int v54 = v0[952];
  int v55 = v0[968];
  int v56 = v0[984];
  int v57 = v0[1000];
  int v58 = v0[1016];
  int v59 = v0[1129];
  if (v0[8] == 1)
  {
    sub_1AFFCBE18();
    if (!v2) {
      goto LABEL_3;
    }
  }
  else
  {
    sub_1AFFCBE18();
    sub_1AFFCBE28();
    if (!v2)
    {
LABEL_3:
      sub_1AFFCBE18();
      sub_1AFFCBE28();
      if (!v3) {
        goto LABEL_4;
      }
      goto LABEL_63;
    }
  }
  sub_1AFFCBE18();
  if (!v3)
  {
LABEL_4:
    sub_1AFFCBE18();
    sub_1AFFCBE28();
    if (!v4) {
      goto LABEL_5;
    }
    goto LABEL_64;
  }
LABEL_63:
  sub_1AFFCBE18();
  if (!v4)
  {
LABEL_5:
    sub_1AFFCBE18();
    sub_1AFFCBE28();
    if (!v5) {
      goto LABEL_6;
    }
    goto LABEL_65;
  }
LABEL_64:
  sub_1AFFCBE18();
  if (!v5)
  {
LABEL_6:
    sub_1AFFCBE18();
    sub_1AFFCBE28();
    if (!v6) {
      goto LABEL_7;
    }
    goto LABEL_66;
  }
LABEL_65:
  sub_1AFFCBE18();
  if (!v6)
  {
LABEL_7:
    sub_1AFFCBE18();
    sub_1AFFCBE28();
    if (!v7) {
      goto LABEL_8;
    }
    goto LABEL_67;
  }
LABEL_66:
  sub_1AFFCBE18();
  if (!v7)
  {
LABEL_8:
    sub_1AFFCBE18();
    sub_1AFFCBE28();
    if (!v8) {
      goto LABEL_9;
    }
    goto LABEL_68;
  }
LABEL_67:
  sub_1AFFCBE18();
  if (!v8)
  {
LABEL_9:
    sub_1AFFCBE18();
    sub_1AFFCBE28();
    if (!v9) {
      goto LABEL_10;
    }
    goto LABEL_69;
  }
LABEL_68:
  sub_1AFFCBE18();
  if (!v9)
  {
LABEL_10:
    sub_1AFFCBE18();
    sub_1AFFCBE28();
    if (!v11) {
      goto LABEL_11;
    }
    goto LABEL_70;
  }
LABEL_69:
  sub_1AFFCBE18();
  if (!v11)
  {
LABEL_11:
    sub_1AFFCBE18();
    sub_1AFFCBE28();
    if (!v10) {
      goto LABEL_12;
    }
    goto LABEL_71;
  }
LABEL_70:
  sub_1AFFCBE18();
  if (!v10)
  {
LABEL_12:
    sub_1AFFCBE18();
    sub_1AFFCBE28();
    if (!v12) {
      goto LABEL_13;
    }
    goto LABEL_72;
  }
LABEL_71:
  sub_1AFFCBE18();
  if (!v12)
  {
LABEL_13:
    sub_1AFFCBE18();
    sub_1AFFCBE28();
    if (!v13) {
      goto LABEL_14;
    }
    goto LABEL_73;
  }
LABEL_72:
  sub_1AFFCBE18();
  if (!v13)
  {
LABEL_14:
    sub_1AFFCBE18();
    sub_1AFFCBE28();
    if (!v14) {
      goto LABEL_15;
    }
    goto LABEL_74;
  }
LABEL_73:
  sub_1AFFCBE18();
  if (!v14)
  {
LABEL_15:
    sub_1AFFCBE18();
    sub_1AFFCBE28();
    if (!v15) {
      goto LABEL_16;
    }
    goto LABEL_75;
  }
LABEL_74:
  sub_1AFFCBE18();
  if (!v15)
  {
LABEL_16:
    sub_1AFFCBE18();
    sub_1AFFCBE28();
    if (!v16) {
      goto LABEL_17;
    }
    goto LABEL_76;
  }
LABEL_75:
  sub_1AFFCBE18();
  if (!v16)
  {
LABEL_17:
    sub_1AFFCBE18();
    sub_1AFFCBE28();
    if (!v17) {
      goto LABEL_18;
    }
    goto LABEL_77;
  }
LABEL_76:
  sub_1AFFCBE18();
  if (!v17)
  {
LABEL_18:
    sub_1AFFCBE18();
    sub_1AFFCBE28();
    if (!v18) {
      goto LABEL_19;
    }
    goto LABEL_78;
  }
LABEL_77:
  sub_1AFFCBE18();
  if (!v18)
  {
LABEL_19:
    sub_1AFFCBE18();
    sub_1AFFCBE28();
    if (!v19) {
      goto LABEL_20;
    }
    goto LABEL_79;
  }
LABEL_78:
  sub_1AFFCBE18();
  if (!v19)
  {
LABEL_20:
    sub_1AFFCBE18();
    sub_1AFFCBE28();
    if (!v20) {
      goto LABEL_21;
    }
    goto LABEL_80;
  }
LABEL_79:
  sub_1AFFCBE18();
  if (!v20)
  {
LABEL_21:
    sub_1AFFCBE18();
    CohortConfig.hash(into:)();
    if (!v21) {
      goto LABEL_22;
    }
    goto LABEL_81;
  }
LABEL_80:
  sub_1AFFCBE18();
  if (!v21)
  {
LABEL_22:
    sub_1AFFCBE18();
    sub_1AFFCBE28();
    if (!v22) {
      goto LABEL_23;
    }
    goto LABEL_82;
  }
LABEL_81:
  sub_1AFFCBE18();
  if (!v22)
  {
LABEL_23:
    sub_1AFFCBE18();
    sub_1AFFCBE28();
    if (!v23) {
      goto LABEL_24;
    }
    goto LABEL_83;
  }
LABEL_82:
  sub_1AFFCBE18();
  if (!v23)
  {
LABEL_24:
    sub_1AFFCBE18();
    sub_1AFFCBE28();
    if (!v24) {
      goto LABEL_25;
    }
    goto LABEL_84;
  }
LABEL_83:
  sub_1AFFCBE18();
  if (!v24)
  {
LABEL_25:
    sub_1AFFCBE18();
    sub_1AFFCBE28();
    if (!v25) {
      goto LABEL_26;
    }
    goto LABEL_85;
  }
LABEL_84:
  sub_1AFFCBE18();
  if (!v25)
  {
LABEL_26:
    sub_1AFFCBE18();
    sub_1AFFCBE28();
    if (!v26) {
      goto LABEL_27;
    }
    goto LABEL_86;
  }
LABEL_85:
  sub_1AFFCBE18();
  if (!v26)
  {
LABEL_27:
    sub_1AFFCBE18();
    sub_1AFFCBE28();
    if (!v27) {
      goto LABEL_28;
    }
    goto LABEL_87;
  }
LABEL_86:
  sub_1AFFCBE18();
  if (!v27)
  {
LABEL_28:
    sub_1AFFCBE18();
    sub_1AFFCBE28();
    if (!v28) {
      goto LABEL_29;
    }
    goto LABEL_88;
  }
LABEL_87:
  sub_1AFFCBE18();
  if (!v28)
  {
LABEL_29:
    sub_1AFFCBE18();
    sub_1AFFCBE28();
    if (!v29) {
      goto LABEL_30;
    }
    goto LABEL_89;
  }
LABEL_88:
  sub_1AFFCBE18();
  if (!v29)
  {
LABEL_30:
    sub_1AFFCBE18();
    sub_1AFFCBE28();
    if (!v30) {
      goto LABEL_31;
    }
    goto LABEL_90;
  }
LABEL_89:
  sub_1AFFCBE18();
  if (!v30)
  {
LABEL_31:
    sub_1AFFCBE18();
    sub_1AFFCBE28();
    if (!v31) {
      goto LABEL_32;
    }
    goto LABEL_91;
  }
LABEL_90:
  sub_1AFFCBE18();
  if (!v31)
  {
LABEL_32:
    sub_1AFFCBE18();
    sub_1AFFCBE28();
    if (!v32) {
      goto LABEL_33;
    }
    goto LABEL_92;
  }
LABEL_91:
  sub_1AFFCBE18();
  if (!v32)
  {
LABEL_33:
    sub_1AFFCBE18();
    sub_1AFFCBE28();
    if (!v33) {
      goto LABEL_34;
    }
    goto LABEL_93;
  }
LABEL_92:
  sub_1AFFCBE18();
  if (!v33)
  {
LABEL_34:
    sub_1AFFCBE18();
    sub_1AFFCBE28();
    if (!v34) {
      goto LABEL_35;
    }
    goto LABEL_94;
  }
LABEL_93:
  sub_1AFFCBE18();
  if (!v34)
  {
LABEL_35:
    sub_1AFFCBE18();
    sub_1AFFCBE28();
    if (!v35) {
      goto LABEL_36;
    }
    goto LABEL_95;
  }
LABEL_94:
  sub_1AFFCBE18();
  if (!v35)
  {
LABEL_36:
    sub_1AFFCBE18();
    sub_1AFFCBE28();
    if (!v36) {
      goto LABEL_37;
    }
    goto LABEL_96;
  }
LABEL_95:
  sub_1AFFCBE18();
  if (!v36)
  {
LABEL_37:
    sub_1AFFCBE18();
    sub_1AFFCBE28();
    if (!v37) {
      goto LABEL_38;
    }
    goto LABEL_97;
  }
LABEL_96:
  sub_1AFFCBE18();
  if (!v37)
  {
LABEL_38:
    sub_1AFFCBE18();
    sub_1AFFCBE28();
    if (!v38) {
      goto LABEL_39;
    }
    goto LABEL_98;
  }
LABEL_97:
  sub_1AFFCBE18();
  if (!v38)
  {
LABEL_39:
    sub_1AFFCBE18();
    sub_1AFFCBE28();
    if (!v39) {
      goto LABEL_40;
    }
    goto LABEL_99;
  }
LABEL_98:
  sub_1AFFCBE18();
  if (!v39)
  {
LABEL_40:
    sub_1AFFCBE18();
    sub_1AFFCBE28();
    if (!v40) {
      goto LABEL_41;
    }
    goto LABEL_100;
  }
LABEL_99:
  sub_1AFFCBE18();
  if (!v40)
  {
LABEL_41:
    sub_1AFFCBE18();
    sub_1AFFCBE28();
    if (!v41) {
      goto LABEL_42;
    }
    goto LABEL_101;
  }
LABEL_100:
  sub_1AFFCBE18();
  if (!v41)
  {
LABEL_42:
    sub_1AFFCBE18();
    sub_1AFFCBE28();
    if (!v42) {
      goto LABEL_43;
    }
    goto LABEL_102;
  }
LABEL_101:
  sub_1AFFCBE18();
  if (!v42)
  {
LABEL_43:
    sub_1AFFCBE18();
    sub_1AFFCBE28();
    if (!v43) {
      goto LABEL_44;
    }
    goto LABEL_103;
  }
LABEL_102:
  sub_1AFFCBE18();
  if (!v43)
  {
LABEL_44:
    sub_1AFFCBE18();
    sub_1AFFCBE28();
    if (!v44) {
      goto LABEL_45;
    }
    goto LABEL_104;
  }
LABEL_103:
  sub_1AFFCBE18();
  if (!v44)
  {
LABEL_45:
    sub_1AFFCBE18();
    sub_1AFFCBE28();
    if (!v45) {
      goto LABEL_46;
    }
    goto LABEL_105;
  }
LABEL_104:
  sub_1AFFCBE18();
  if (!v45)
  {
LABEL_46:
    sub_1AFFCBE18();
    sub_1AFFCBE28();
    if (!v46) {
      goto LABEL_47;
    }
    goto LABEL_106;
  }
LABEL_105:
  sub_1AFFCBE18();
  if (!v46)
  {
LABEL_47:
    sub_1AFFCBE18();
    sub_1AFFCBE28();
    if (!v47) {
      goto LABEL_48;
    }
    goto LABEL_107;
  }
LABEL_106:
  sub_1AFFCBE18();
  if (!v47)
  {
LABEL_48:
    sub_1AFFCBE18();
    sub_1AFFCBE28();
    if (!v48) {
      goto LABEL_49;
    }
    goto LABEL_108;
  }
LABEL_107:
  sub_1AFFCBE18();
  if (!v48)
  {
LABEL_49:
    sub_1AFFCBE18();
    sub_1AFFCBE28();
    if (!v49) {
      goto LABEL_50;
    }
    goto LABEL_109;
  }
LABEL_108:
  sub_1AFFCBE18();
  if (!v49)
  {
LABEL_50:
    sub_1AFFCBE18();
    sub_1AFFCBE28();
    if (!v50) {
      goto LABEL_51;
    }
    goto LABEL_110;
  }
LABEL_109:
  sub_1AFFCBE18();
  if (!v50)
  {
LABEL_51:
    sub_1AFFCBE18();
    sub_1AFFCBE28();
    if (!v51) {
      goto LABEL_52;
    }
    goto LABEL_111;
  }
LABEL_110:
  sub_1AFFCBE18();
  if (!v51)
  {
LABEL_52:
    sub_1AFFCBE18();
    sub_1AFFCBE28();
    if (!v52) {
      goto LABEL_53;
    }
    goto LABEL_112;
  }
LABEL_111:
  sub_1AFFCBE18();
  if (!v52)
  {
LABEL_53:
    sub_1AFFCBE18();
    sub_1AFFCBE28();
    if (!v53) {
      goto LABEL_54;
    }
    goto LABEL_113;
  }
LABEL_112:
  sub_1AFFCBE18();
  if (!v53)
  {
LABEL_54:
    sub_1AFFCBE18();
    sub_1AFFCBE28();
    if (!v54) {
      goto LABEL_55;
    }
    goto LABEL_114;
  }
LABEL_113:
  sub_1AFFCBE18();
  if (!v54)
  {
LABEL_55:
    sub_1AFFCBE18();
    sub_1AFFCBE28();
    if (!v55) {
      goto LABEL_56;
    }
    goto LABEL_115;
  }
LABEL_114:
  sub_1AFFCBE18();
  if (!v55)
  {
LABEL_56:
    sub_1AFFCBE18();
    sub_1AFFCBE28();
    if (!v56) {
      goto LABEL_57;
    }
    goto LABEL_116;
  }
LABEL_115:
  sub_1AFFCBE18();
  if (!v56)
  {
LABEL_57:
    sub_1AFFCBE18();
    sub_1AFFCBE28();
    if (!v57) {
      goto LABEL_58;
    }
    goto LABEL_117;
  }
LABEL_116:
  sub_1AFFCBE18();
  if (!v57)
  {
LABEL_58:
    sub_1AFFCBE18();
    sub_1AFFCBE28();
    if (!v58) {
      goto LABEL_59;
    }
LABEL_118:
    sub_1AFFCBE18();
    if (!v59) {
      goto LABEL_60;
    }
    return sub_1AFFCBE18();
  }
LABEL_117:
  sub_1AFFCBE18();
  if (v58) {
    goto LABEL_118;
  }
LABEL_59:
  sub_1AFFCBE18();
  sub_1AFFCBE28();
  if (!v59)
  {
LABEL_60:
    sub_1AFFCBE18();
    return CohortConfig.hash(into:)();
  }
  return sub_1AFFCBE18();
}

uint64_t ScoringConfig.hashValue.getter()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFF20E14@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ScoringConfig.init(from:)(a1, a2);
}

uint64_t sub_1AFF20E2C(void *a1)
{
  return ScoringConfig.encode(to:)(a1);
}

uint64_t sub_1AFF20E48()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFF20E8C()
{
  return sub_1AFFCBE38();
}

uint64_t _s10StocksCore13ScoringConfigV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  double v292 = *(double *)(a1 + 16);
  char v296 = *(unsigned char *)(a1 + 24);
  double v288 = *(double *)(a1 + 32);
  char v294 = *(unsigned char *)(a1 + 40);
  double v285 = *(double *)(a1 + 48);
  char v290 = *(unsigned char *)(a1 + 56);
  double v282 = *(double *)(a1 + 64);
  char v286 = *(unsigned char *)(a1 + 72);
  double v279 = *(double *)(a1 + 80);
  char v283 = *(unsigned char *)(a1 + 88);
  double v275 = *(double *)(a1 + 96);
  char v281 = *(unsigned char *)(a1 + 104);
  double v272 = *(double *)(a1 + 112);
  char v277 = *(unsigned char *)(a1 + 120);
  double v270 = *(double *)(a1 + 128);
  char v274 = *(unsigned char *)(a1 + 136);
  double v267 = *(double *)(a1 + 144);
  char v271 = *(unsigned char *)(a1 + 152);
  double v266 = *(double *)(a1 + 160);
  char v269 = *(unsigned char *)(a1 + 168);
  double v262 = *(double *)(a1 + 176);
  double v259 = *(double *)(a1 + 192);
  double v253 = *(double *)(a1 + 208);
  double v249 = *(double *)(a1 + 224);
  double v247 = *(double *)(a1 + 240);
  double v244 = *(double *)(a1 + 256);
  double v242 = *(double *)(a1 + 272);
  char v245 = *(unsigned char *)(a1 + 280);
  double v241 = *(double *)(a1 + 288);
  char v243 = *(unsigned char *)(a1 + 296);
  long long v238 = *(_OWORD *)(a1 + 304);
  long long v237 = *(_OWORD *)(a1 + 320);
  long long v236 = *(_OWORD *)(a1 + 336);
  long long v235 = *(_OWORD *)(a1 + 352);
  long long v234 = *(_OWORD *)(a1 + 368);
  long long v233 = *(_OWORD *)(a1 + 384);
  char v240 = *(unsigned char *)(a1 + 409);
  double v215 = *(double *)(a1 + 416);
  char v255 = *(unsigned char *)(a1 + 424);
  double v211 = *(double *)(a1 + 432);
  char v214 = *(unsigned char *)(a1 + 440);
  double v208 = *(double *)(a1 + 448);
  char v210 = *(unsigned char *)(a1 + 456);
  double v97 = *(double *)(a1 + 464);
  char v207 = *(unsigned char *)(a1 + 472);
  double v100 = *(double *)(a1 + 480);
  char v93 = *(unsigned char *)(a1 + 488);
  char v94 = *(unsigned char *)(a1 + 504);
  double v102 = *(double *)(a1 + 496);
  double v103 = *(double *)(a1 + 512);
  double v105 = *(double *)(a1 + 528);
  char v239 = *(unsigned char *)(a2 + 409);
  int v251 = *(unsigned __int8 *)(a2 + 424);
  int v230 = *(unsigned __int8 *)(a2 + 440);
  int v212 = *(unsigned __int8 *)(a2 + 456);
  int v95 = *(unsigned __int8 *)(a2 + 472);
  int v96 = *(unsigned __int8 *)(a2 + 488);
  char v264 = *(unsigned char *)(a1 + 184);
  char v261 = *(unsigned char *)(a1 + 200);
  char v257 = *(unsigned char *)(a1 + 216);
  char v252 = *(unsigned char *)(a1 + 232);
  char v248 = *(unsigned char *)(a1 + 248);
  char v246 = *(unsigned char *)(a1 + 264);
  uint64_t v232 = *(void *)(a1 + 400);
  char v231 = *(unsigned char *)(a1 + 408);
  int v98 = *(unsigned __int8 *)(a2 + 504);
  char v99 = *(unsigned char *)(a1 + 520);
  char v104 = *(unsigned char *)(a1 + 536);
  char v106 = *(unsigned char *)(a1 + 552);
  char v108 = *(unsigned char *)(a1 + 568);
  char v111 = *(unsigned char *)(a1 + 584);
  char v114 = *(unsigned char *)(a1 + 600);
  char v109 = *(unsigned char *)(a1 + 616);
  char v118 = *(unsigned char *)(a1 + 632);
  char v121 = *(unsigned char *)(a1 + 648);
  char v125 = *(unsigned char *)(a1 + 664);
  char v128 = *(unsigned char *)(a1 + 680);
  char v133 = *(unsigned char *)(a1 + 696);
  char v136 = *(unsigned char *)(a1 + 712);
  char v148 = *(unsigned char *)(a1 + 728);
  char v151 = *(unsigned char *)(a1 + 744);
  char v153 = *(unsigned char *)(a1 + 760);
  char v155 = *(unsigned char *)(a1 + 776);
  char v157 = *(unsigned char *)(a1 + 792);
  char v160 = *(unsigned char *)(a1 + 808);
  char v163 = *(unsigned char *)(a1 + 824);
  char v166 = *(unsigned char *)(a1 + 840);
  char v169 = *(unsigned char *)(a1 + 856);
  char v172 = *(unsigned char *)(a1 + 872);
  char v175 = *(unsigned char *)(a1 + 888);
  char v178 = *(unsigned char *)(a1 + 904);
  char v181 = *(unsigned char *)(a1 + 920);
  char v184 = *(unsigned char *)(a1 + 936);
  char v189 = *(unsigned char *)(a1 + 952);
  char v192 = *(unsigned char *)(a1 + 968);
  char v195 = *(unsigned char *)(a1 + 984);
  char v198 = *(unsigned char *)(a1 + 1000);
  char v200 = *(unsigned char *)(a1 + 1016);
  uint64_t v204 = *(void *)(a1 + 1120);
  char v205 = *(unsigned char *)(a1 + 1128);
  int v202 = *(unsigned __int8 *)(a1 + 1129);
  char v2 = *(unsigned char *)(a2 + 88);
  char v3 = *(unsigned char *)(a2 + 152);
  uint64_t v216 = *(void *)(a2 + 304);
  uint64_t v217 = *(void *)(a2 + 312);
  uint64_t v218 = *(void *)(a2 + 320);
  uint64_t v219 = *(void *)(a2 + 328);
  uint64_t v220 = *(void *)(a2 + 336);
  uint64_t v221 = *(void *)(a2 + 344);
  uint64_t v222 = *(void *)(a2 + 352);
  uint64_t v223 = *(void *)(a2 + 360);
  uint64_t v224 = *(void *)(a2 + 368);
  uint64_t v225 = *(void *)(a2 + 376);
  uint64_t v226 = *(void *)(a2 + 384);
  uint64_t v227 = *(void *)(a2 + 392);
  uint64_t v228 = *(void *)(a2 + 400);
  char v229 = *(unsigned char *)(a2 + 408);
  int v101 = *(unsigned __int8 *)(a2 + 520);
  int v107 = *(unsigned __int8 *)(a2 + 536);
  int v112 = *(unsigned __int8 *)(a2 + 552);
  int v110 = *(unsigned __int8 *)(a2 + 568);
  int v113 = *(unsigned __int8 *)(a2 + 584);
  int v115 = *(unsigned __int8 *)(a2 + 600);
  int v119 = *(unsigned __int8 *)(a2 + 616);
  int v123 = *(unsigned __int8 *)(a2 + 632);
  int v127 = *(unsigned __int8 *)(a2 + 648);
  int v132 = *(unsigned __int8 *)(a2 + 664);
  int v135 = *(unsigned __int8 *)(a2 + 680);
  int v139 = *(unsigned __int8 *)(a2 + 696);
  int v149 = *(unsigned __int8 *)(a2 + 712);
  int v152 = *(unsigned __int8 *)(a2 + 728);
  int v154 = *(unsigned __int8 *)(a2 + 744);
  int v156 = *(unsigned __int8 *)(a2 + 760);
  int v158 = *(unsigned __int8 *)(a2 + 776);
  int v161 = *(unsigned __int8 *)(a2 + 792);
  int v164 = *(unsigned __int8 *)(a2 + 808);
  int v167 = *(unsigned __int8 *)(a2 + 824);
  int v170 = *(unsigned __int8 *)(a2 + 840);
  int v173 = *(unsigned __int8 *)(a2 + 856);
  int v176 = *(unsigned __int8 *)(a2 + 872);
  int v179 = *(unsigned __int8 *)(a2 + 888);
  int v183 = *(unsigned __int8 *)(a2 + 904);
  int v186 = *(unsigned __int8 *)(a2 + 920);
  int v188 = *(unsigned __int8 *)(a2 + 936);
  int v191 = *(unsigned __int8 *)(a2 + 952);
  int v193 = *(unsigned __int8 *)(a2 + 968);
  int v196 = *(unsigned __int8 *)(a2 + 984);
  int v201 = *(unsigned __int8 *)(a2 + 1000);
  int v4 = *(unsigned __int8 *)(a2 + 1016);
  uint64_t v5 = *(void *)(a2 + 1024);
  uint64_t v6 = *(void *)(a2 + 1056);
  uint64_t v7 = *(void *)(a2 + 1064);
  uint64_t v8 = *(void *)(a2 + 1080);
  char v9 = *(unsigned char *)(a2 + 1128);
  double v86 = *(double *)(a1 + 544);
  double v116 = *(double *)(a1 + 560);
  double v117 = *(double *)(a1 + 576);
  double v120 = *(double *)(a1 + 592);
  double v124 = *(double *)(a1 + 608);
  double v126 = *(double *)(a1 + 624);
  double v129 = *(double *)(a1 + 640);
  double v134 = *(double *)(a1 + 656);
  double v138 = *(double *)(a1 + 672);
  double v141 = *(double *)(a1 + 688);
  double v143 = *(double *)(a1 + 704);
  double v145 = *(double *)(a1 + 720);
  double v147 = *(double *)(a1 + 736);
  double v150 = *(double *)(a1 + 752);
  double v159 = *(double *)(a1 + 768);
  double v162 = *(double *)(a1 + 784);
  double v165 = *(double *)(a1 + 800);
  double v168 = *(double *)(a1 + 816);
  double v171 = *(double *)(a1 + 832);
  double v174 = *(double *)(a1 + 848);
  double v177 = *(double *)(a1 + 864);
  double v180 = *(double *)(a1 + 880);
  double v182 = *(double *)(a1 + 896);
  double v185 = *(double *)(a1 + 912);
  double v187 = *(double *)(a1 + 928);
  double v190 = *(double *)(a1 + 944);
  double v194 = *(double *)(a1 + 960);
  double v197 = *(double *)(a1 + 976);
  double v199 = *(double *)(a1 + 992);
  double v203 = *(double *)(a1 + 1008);
  long long v87 = *(_OWORD *)(a1 + 1024);
  long long v88 = *(_OWORD *)(a1 + 1040);
  long long v89 = *(_OWORD *)(a1 + 1056);
  long long v90 = *(_OWORD *)(a1 + 1072);
  double v213 = *(double *)(a2 + 416);
  double v209 = *(double *)(a2 + 432);
  double v206 = *(double *)(a2 + 448);
  double v77 = *(double *)(a2 + 464);
  double v78 = *(double *)(a2 + 480);
  double v79 = *(double *)(a2 + 496);
  double v80 = *(double *)(a2 + 512);
  double v81 = *(double *)(a2 + 528);
  double v82 = *(double *)(a2 + 544);
  double v83 = *(double *)(a2 + 560);
  double v84 = *(double *)(a2 + 576);
  double v85 = *(double *)(a2 + 592);
  double v122 = *(double *)(a2 + 608);
  double v130 = *(double *)(a2 + 624);
  double v131 = *(double *)(a2 + 640);
  double v137 = *(double *)(a2 + 656);
  double v140 = *(double *)(a2 + 672);
  double v142 = *(double *)(a2 + 688);
  double v144 = *(double *)(a2 + 704);
  double v146 = *(double *)(a2 + 720);
  double v10 = *(double *)(a2 + 864);
  double v11 = *(double *)(a2 + 880);
  double v12 = *(double *)(a2 + 912);
  double v13 = *(double *)(a2 + 944);
  double v14 = *(double *)(a2 + 960);
  double v15 = *(double *)(a2 + 992);
  double v16 = *(double *)(a2 + 1008);
  long long v91 = *(_OWORD *)(a1 + 1088);
  long long v92 = *(_OWORD *)(a1 + 1104);
  if (*(unsigned char *)(a1 + 8))
  {
    if (!*(unsigned char *)(a2 + 8))
    {
LABEL_359:
      char v71 = 0;
      return v71 & 1;
    }
  }
  else
  {
    if (*(double *)a1 == *(double *)a2) {
      char v17 = *(unsigned char *)(a2 + 8);
    }
    else {
      char v17 = 1;
    }
    if (v17) {
      goto LABEL_359;
    }
  }
  if (v296)
  {
    if (!*(unsigned char *)(a2 + 24)) {
      goto LABEL_359;
    }
  }
  else
  {
    if (v292 == *(double *)(a2 + 16)) {
      char v18 = *(unsigned char *)(a2 + 24);
    }
    else {
      char v18 = 1;
    }
    if (v18) {
      goto LABEL_359;
    }
  }
  if (v294)
  {
    if (!*(unsigned char *)(a2 + 40)) {
      goto LABEL_359;
    }
  }
  else
  {
    if (v288 == *(double *)(a2 + 32)) {
      char v19 = *(unsigned char *)(a2 + 40);
    }
    else {
      char v19 = 1;
    }
    if (v19) {
      goto LABEL_359;
    }
  }
  if (v290)
  {
    if (!*(unsigned char *)(a2 + 56)) {
      goto LABEL_359;
    }
  }
  else
  {
    if (v285 == *(double *)(a2 + 48)) {
      char v20 = *(unsigned char *)(a2 + 56);
    }
    else {
      char v20 = 1;
    }
    if (v20) {
      goto LABEL_359;
    }
  }
  if (v286)
  {
    if (!*(unsigned char *)(a2 + 72)) {
      goto LABEL_359;
    }
  }
  else
  {
    if (v282 == *(double *)(a2 + 64)) {
      char v21 = *(unsigned char *)(a2 + 72);
    }
    else {
      char v21 = 1;
    }
    if (v21) {
      goto LABEL_359;
    }
  }
  if (v283)
  {
    if (!*(unsigned char *)(a2 + 88)) {
      goto LABEL_359;
    }
  }
  else
  {
    if (v279 != *(double *)(a2 + 80)) {
      char v2 = 1;
    }
    if (v2) {
      goto LABEL_359;
    }
  }
  if (v281)
  {
    if (!*(unsigned char *)(a2 + 104)) {
      goto LABEL_359;
    }
  }
  else
  {
    if (v275 == *(double *)(a2 + 96)) {
      char v22 = *(unsigned char *)(a2 + 104);
    }
    else {
      char v22 = 1;
    }
    if (v22) {
      goto LABEL_359;
    }
  }
  if (v277)
  {
    if (!*(unsigned char *)(a2 + 120)) {
      goto LABEL_359;
    }
  }
  else
  {
    if (v272 == *(double *)(a2 + 112)) {
      char v23 = *(unsigned char *)(a2 + 120);
    }
    else {
      char v23 = 1;
    }
    if (v23) {
      goto LABEL_359;
    }
  }
  if (v274)
  {
    if (!*(unsigned char *)(a2 + 136)) {
      goto LABEL_359;
    }
  }
  else
  {
    if (v270 == *(double *)(a2 + 128)) {
      char v24 = *(unsigned char *)(a2 + 136);
    }
    else {
      char v24 = 1;
    }
    if (v24) {
      goto LABEL_359;
    }
  }
  if (v271)
  {
    if (!*(unsigned char *)(a2 + 152)) {
      goto LABEL_359;
    }
  }
  else
  {
    if (v267 != *(double *)(a2 + 144)) {
      char v3 = 1;
    }
    if (v3) {
      goto LABEL_359;
    }
  }
  if (v269)
  {
    if (!*(unsigned char *)(a2 + 168)) {
      goto LABEL_359;
    }
  }
  else
  {
    char v25 = *(unsigned char *)(a2 + 168);
    if (v266 != *(double *)(a2 + 160)) {
      char v25 = 1;
    }
    if (v25) {
      goto LABEL_359;
    }
  }
  if (v264)
  {
    if (!*(unsigned char *)(a2 + 184)) {
      goto LABEL_359;
    }
  }
  else
  {
    char v26 = *(unsigned char *)(a2 + 184);
    if (v262 != *(double *)(a2 + 176)) {
      char v26 = 1;
    }
    if (v26) {
      goto LABEL_359;
    }
  }
  if (v261)
  {
    if (!*(unsigned char *)(a2 + 200)) {
      goto LABEL_359;
    }
  }
  else
  {
    char v27 = *(unsigned char *)(a2 + 200);
    if (v259 != *(double *)(a2 + 192)) {
      char v27 = 1;
    }
    if (v27) {
      goto LABEL_359;
    }
  }
  if (v257)
  {
    if (!*(unsigned char *)(a2 + 216)) {
      goto LABEL_359;
    }
  }
  else
  {
    char v28 = *(unsigned char *)(a2 + 216);
    if (v253 != *(double *)(a2 + 208)) {
      char v28 = 1;
    }
    if (v28) {
      goto LABEL_359;
    }
  }
  double v74 = *(double *)(a2 + 736);
  double v75 = *(double *)(a2 + 752);
  double v76 = *(double *)(a2 + 768);
  double v250 = *(double *)(a2 + 784);
  double v254 = *(double *)(a2 + 800);
  double v256 = *(double *)(a2 + 816);
  double v258 = *(double *)(a2 + 832);
  double v260 = *(double *)(a2 + 848);
  double v263 = *(double *)(a2 + 896);
  double v265 = *(double *)(a2 + 928);
  double v268 = *(double *)(a2 + 976);
  char v273 = *(unsigned char *)(a2 + 1129);
  char v276 = *(void *)(a2 + 1032);
  uint64_t v278 = *(void *)(a2 + 1040);
  char v280 = *(void *)(a2 + 1048);
  uint64_t v284 = *(void *)(a2 + 1072);
  uint64_t v287 = *(void *)(a2 + 1088);
  char v289 = *(void *)(a2 + 1096);
  uint64_t v291 = *(void *)(a2 + 1104);
  char v293 = *(void *)(a2 + 1112);
  uint64_t v295 = *(void *)(a2 + 1120);
  if (v252)
  {
    if (!*(unsigned char *)(a2 + 232)) {
      goto LABEL_359;
    }
  }
  else
  {
    char v29 = *(unsigned char *)(a2 + 232);
    if (v249 != *(double *)(a2 + 224)) {
      char v29 = 1;
    }
    if (v29) {
      goto LABEL_359;
    }
  }
  if (v248)
  {
    if (!*(unsigned char *)(a2 + 248)) {
      goto LABEL_359;
    }
  }
  else
  {
    char v30 = *(unsigned char *)(a2 + 248);
    if (v247 != *(double *)(a2 + 240)) {
      char v30 = 1;
    }
    if (v30) {
      goto LABEL_359;
    }
  }
  if (v246)
  {
    if (!*(unsigned char *)(a2 + 264)) {
      goto LABEL_359;
    }
  }
  else
  {
    char v31 = *(unsigned char *)(a2 + 264);
    if (v244 != *(double *)(a2 + 256)) {
      char v31 = 1;
    }
    if (v31) {
      goto LABEL_359;
    }
  }
  if (v245)
  {
    if (!*(unsigned char *)(a2 + 280)) {
      goto LABEL_359;
    }
  }
  else
  {
    char v32 = *(unsigned char *)(a2 + 280);
    if (v242 != *(double *)(a2 + 272)) {
      char v32 = 1;
    }
    if (v32) {
      goto LABEL_359;
    }
  }
  if (v243)
  {
    if (!*(unsigned char *)(a2 + 296)) {
      goto LABEL_359;
    }
  }
  else
  {
    char v33 = *(unsigned char *)(a2 + 296);
    if (v241 != *(double *)(a2 + 288)) {
      char v33 = 1;
    }
    if (v33) {
      goto LABEL_359;
    }
  }
  if (v240)
  {
    if ((*(unsigned char *)(a2 + 409) & 1) == 0) {
      goto LABEL_359;
    }
  }
  else
  {
    long long v311 = v238;
    long long v312 = v237;
    long long v313 = v236;
    long long v314 = v235;
    long long v315 = v234;
    long long v316 = v233;
    uint64_t v317 = v232;
    char v318 = v231;
    char v319 = 0;
    if (v239) {
      goto LABEL_359;
    }
    uint64_t v297 = v216;
    char v298 = v217 & 1;
    uint64_t v299 = v218;
    char v300 = v219 & 1;
    uint64_t v301 = v220;
    char v302 = v221 & 1;
    uint64_t v303 = v222;
    char v304 = v223 & 1;
    uint64_t v305 = v224;
    char v306 = v225 & 1;
    uint64_t v307 = v226;
    char v308 = v227 & 1;
    uint64_t v309 = v228;
    char v310 = v229 & 1;
    if ((_s10StocksCore12CohortConfigV2eeoiySbAC_ACtFZ_0((uint64_t)&v311, (uint64_t)&v297) & 1) == 0) {
      goto LABEL_359;
    }
  }
  if (v255)
  {
    if (!v251) {
      goto LABEL_359;
    }
  }
  else
  {
    if (v215 == v213) {
      char v34 = v251;
    }
    else {
      char v34 = 1;
    }
    if (v34) {
      goto LABEL_359;
    }
  }
  if (v214)
  {
    if (!v230) {
      goto LABEL_359;
    }
  }
  else
  {
    char v35 = v230;
    if (v211 != v209) {
      char v35 = 1;
    }
    if (v35) {
      goto LABEL_359;
    }
  }
  if (v210)
  {
    if (!v212) {
      goto LABEL_359;
    }
  }
  else
  {
    char v36 = v212;
    if (v208 != v206) {
      char v36 = 1;
    }
    if (v36) {
      goto LABEL_359;
    }
  }
  if (v207)
  {
    if (!v95) {
      goto LABEL_359;
    }
  }
  else
  {
    char v37 = v95;
    if (v97 != v77) {
      char v37 = 1;
    }
    if (v37) {
      goto LABEL_359;
    }
  }
  if (v93)
  {
    if (!v96) {
      goto LABEL_359;
    }
  }
  else
  {
    char v38 = v96;
    if (v100 != v78) {
      char v38 = 1;
    }
    if (v38) {
      goto LABEL_359;
    }
  }
  if (v94)
  {
    if (!v98) {
      goto LABEL_359;
    }
  }
  else
  {
    char v39 = v98;
    if (v102 != v79) {
      char v39 = 1;
    }
    if (v39) {
      goto LABEL_359;
    }
  }
  if (v99)
  {
    if (!v101) {
      goto LABEL_359;
    }
  }
  else
  {
    char v40 = v101;
    if (v103 != v80) {
      char v40 = 1;
    }
    if (v40) {
      goto LABEL_359;
    }
  }
  if (v104)
  {
    if (!v107) {
      goto LABEL_359;
    }
  }
  else
  {
    char v41 = v107;
    if (v105 != v81) {
      char v41 = 1;
    }
    if (v41) {
      goto LABEL_359;
    }
  }
  if (v106)
  {
    if (!v112) {
      goto LABEL_359;
    }
  }
  else
  {
    char v42 = v112;
    if (v86 != v82) {
      char v42 = 1;
    }
    if (v42) {
      goto LABEL_359;
    }
  }
  if (v108)
  {
    if (!v110) {
      goto LABEL_359;
    }
  }
  else
  {
    char v43 = v110;
    if (v116 != v83) {
      char v43 = 1;
    }
    if (v43) {
      goto LABEL_359;
    }
  }
  if (v111)
  {
    if (!v113) {
      goto LABEL_359;
    }
  }
  else
  {
    char v44 = v113;
    if (v117 != v84) {
      char v44 = 1;
    }
    if (v44) {
      goto LABEL_359;
    }
  }
  if (v114)
  {
    if (!v115) {
      goto LABEL_359;
    }
  }
  else
  {
    char v45 = v115;
    if (v120 != v85) {
      char v45 = 1;
    }
    if (v45) {
      goto LABEL_359;
    }
  }
  if (v109)
  {
    if (!v119) {
      goto LABEL_359;
    }
  }
  else
  {
    char v46 = v119;
    if (v124 != v122) {
      char v46 = 1;
    }
    if (v46) {
      goto LABEL_359;
    }
  }
  if (v118)
  {
    if (!v123) {
      goto LABEL_359;
    }
  }
  else
  {
    char v47 = v123;
    if (v126 != v130) {
      char v47 = 1;
    }
    if (v47) {
      goto LABEL_359;
    }
  }
  if (v121)
  {
    if (!v127) {
      goto LABEL_359;
    }
  }
  else
  {
    char v48 = v127;
    if (v129 != v131) {
      char v48 = 1;
    }
    if (v48) {
      goto LABEL_359;
    }
  }
  if (v125)
  {
    if (!v132) {
      goto LABEL_359;
    }
  }
  else
  {
    char v49 = v132;
    if (v134 != v137) {
      char v49 = 1;
    }
    if (v49) {
      goto LABEL_359;
    }
  }
  if (v128)
  {
    if (!v135) {
      goto LABEL_359;
    }
  }
  else
  {
    char v50 = v135;
    if (v138 != v140) {
      char v50 = 1;
    }
    if (v50) {
      goto LABEL_359;
    }
  }
  if (v133)
  {
    if (!v139) {
      goto LABEL_359;
    }
  }
  else
  {
    char v51 = v139;
    if (v141 != v142) {
      char v51 = 1;
    }
    if (v51) {
      goto LABEL_359;
    }
  }
  if (v136)
  {
    if (!v149) {
      goto LABEL_359;
    }
  }
  else
  {
    char v52 = v149;
    if (v143 != v144) {
      char v52 = 1;
    }
    if (v52) {
      goto LABEL_359;
    }
  }
  if (v148)
  {
    if (!v152) {
      goto LABEL_359;
    }
  }
  else
  {
    char v53 = v152;
    if (v145 != v146) {
      char v53 = 1;
    }
    if (v53) {
      goto LABEL_359;
    }
  }
  if (v151)
  {
    if (!v154) {
      goto LABEL_359;
    }
  }
  else
  {
    char v54 = v154;
    if (v147 != v74) {
      char v54 = 1;
    }
    if (v54) {
      goto LABEL_359;
    }
  }
  if (v153)
  {
    if (!v156) {
      goto LABEL_359;
    }
  }
  else
  {
    char v55 = v156;
    if (v150 != v75) {
      char v55 = 1;
    }
    if (v55) {
      goto LABEL_359;
    }
  }
  if (v155)
  {
    if (!v158) {
      goto LABEL_359;
    }
  }
  else
  {
    char v56 = v158;
    if (v159 != v76) {
      char v56 = 1;
    }
    if (v56) {
      goto LABEL_359;
    }
  }
  if (v157)
  {
    if (!v161) {
      goto LABEL_359;
    }
  }
  else
  {
    char v57 = v161;
    if (v162 != v250) {
      char v57 = 1;
    }
    if (v57) {
      goto LABEL_359;
    }
  }
  if (v160)
  {
    if (!v164) {
      goto LABEL_359;
    }
  }
  else
  {
    char v58 = v164;
    if (v165 != v254) {
      char v58 = 1;
    }
    if (v58) {
      goto LABEL_359;
    }
  }
  if (v163)
  {
    if (!v167) {
      goto LABEL_359;
    }
  }
  else
  {
    char v59 = v167;
    if (v168 != v256) {
      char v59 = 1;
    }
    if (v59) {
      goto LABEL_359;
    }
  }
  if (v166)
  {
    if (!v170) {
      goto LABEL_359;
    }
  }
  else
  {
    char v60 = v170;
    if (v171 != v258) {
      char v60 = 1;
    }
    if (v60) {
      goto LABEL_359;
    }
  }
  if (v169)
  {
    if (!v173) {
      goto LABEL_359;
    }
  }
  else
  {
    char v61 = v173;
    if (v174 != v260) {
      char v61 = 1;
    }
    if (v61) {
      goto LABEL_359;
    }
  }
  if (v172)
  {
    if (!v176) {
      goto LABEL_359;
    }
  }
  else
  {
    char v62 = v176;
    if (v177 != v10) {
      char v62 = 1;
    }
    if (v62) {
      goto LABEL_359;
    }
  }
  if (v175)
  {
    if (!v179) {
      goto LABEL_359;
    }
  }
  else
  {
    char v63 = v179;
    if (v180 != v11) {
      char v63 = 1;
    }
    if (v63) {
      goto LABEL_359;
    }
  }
  if (v178)
  {
    if (!v183) {
      goto LABEL_359;
    }
  }
  else
  {
    char v64 = v183;
    if (v182 != v263) {
      char v64 = 1;
    }
    if (v64) {
      goto LABEL_359;
    }
  }
  if (v181)
  {
    if (!v186) {
      goto LABEL_359;
    }
  }
  else
  {
    char v65 = v186;
    if (v185 != v12) {
      char v65 = 1;
    }
    if (v65) {
      goto LABEL_359;
    }
  }
  if (v184)
  {
    if (!v188) {
      goto LABEL_359;
    }
  }
  else
  {
    char v66 = v188;
    if (v187 != v265) {
      char v66 = 1;
    }
    if (v66) {
      goto LABEL_359;
    }
  }
  if (v189)
  {
    if (!v191) {
      goto LABEL_359;
    }
  }
  else
  {
    char v67 = v191;
    if (v190 != v13) {
      char v67 = 1;
    }
    if (v67) {
      goto LABEL_359;
    }
  }
  if (v192)
  {
    if (!v193) {
      goto LABEL_359;
    }
  }
  else
  {
    char v68 = v193;
    if (v194 != v14) {
      char v68 = 1;
    }
    if (v68) {
      goto LABEL_359;
    }
  }
  if (v195)
  {
    if (!v196) {
      goto LABEL_359;
    }
  }
  else
  {
    char v69 = v196;
    if (v197 != v268) {
      char v69 = 1;
    }
    if (v69) {
      goto LABEL_359;
    }
  }
  if (v198)
  {
    if (!v201) {
      goto LABEL_359;
    }
  }
  else
  {
    char v70 = v201;
    if (v199 != v15) {
      char v70 = 1;
    }
    if (v70) {
      goto LABEL_359;
    }
  }
  if ((v200 & 1) == 0)
  {
    int v72 = v4;
    if (v203 != v16) {
      int v72 = 1;
    }
    if ((v72 | v202))
    {
      char v71 = v273 & ~(_BYTE)v72;
      return v71 & 1;
    }
LABEL_358:
    long long v311 = v87;
    long long v312 = v88;
    long long v313 = v89;
    long long v314 = v90;
    long long v315 = v91;
    long long v316 = v92;
    uint64_t v317 = v204;
    char v318 = v205;
    char v319 = 0;
    if ((v273 & 1) == 0)
    {
      uint64_t v297 = v5;
      char v298 = v276 & 1;
      uint64_t v299 = v278;
      char v300 = v280 & 1;
      uint64_t v301 = v6;
      char v302 = v7 & 1;
      uint64_t v303 = v284;
      char v304 = v8 & 1;
      uint64_t v305 = v287;
      char v306 = v289 & 1;
      uint64_t v307 = v291;
      char v308 = v293 & 1;
      uint64_t v309 = v295;
      char v310 = v9 & 1;
      char v71 = _s10StocksCore12CohortConfigV2eeoiySbAC_ACtFZ_0((uint64_t)&v311, (uint64_t)&v297);
      return v71 & 1;
    }
    goto LABEL_359;
  }
  if (((v4 ^ 1 | v202) & 1) == 0) {
    goto LABEL_358;
  }
  char v71 = v4 & v273;
  return v71 & 1;
}

unint64_t sub_1AFF2228C()
{
  unint64_t result = qword_1E9AFCA10;
  if (!qword_1E9AFCA10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFCA10);
  }
  return result;
}

void *__swift_memcpy1130_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x46AuLL);
}

uint64_t getEnumTagSinglePayload for ScoringConfig(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 1130)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ScoringConfig(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 1128) = 0;
    *(_OWORD *)(result + 1112) = 0u;
    *(_OWORD *)(result + 1096) = 0u;
    *(_OWORD *)(result + 1080) = 0u;
    *(_OWORD *)(result + 1064) = 0u;
    *(_OWORD *)(result + 1048) = 0u;
    *(_OWORD *)(result + 1032) = 0u;
    *(_OWORD *)(result + 1016) = 0u;
    *(_OWORD *)(result + 1000) = 0u;
    *(_OWORD *)(result + 984) = 0u;
    *(_OWORD *)(result + 968) = 0u;
    *(_OWORD *)(result + 952) = 0u;
    *(_OWORD *)(result + 936) = 0u;
    *(_OWORD *)(result + 920) = 0u;
    *(_OWORD *)(result + 904) = 0u;
    *(_OWORD *)(result + 888) = 0u;
    *(_OWORD *)(result + 872) = 0u;
    *(_OWORD *)(result + 856) = 0u;
    *(_OWORD *)(result + 840) = 0u;
    *(_OWORD *)(result + 824) = 0u;
    *(_OWORD *)(result + 808) = 0u;
    *(_OWORD *)(result + 792) = 0u;
    *(_OWORD *)(result + 776) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 1130) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ScoringConfig()
{
  return &type metadata for ScoringConfig;
}

uint64_t getEnumTagSinglePayload for ScoringConfig.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xC6) {
    goto LABEL_17;
  }
  if (a2 + 58 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 58) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 58;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 58;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 58;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x3B;
  int v8 = v6 - 59;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ScoringConfig.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 58 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 58) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xC6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xC5)
  {
    unsigned int v6 = ((a2 - 198) >> 8) + 1;
    *unint64_t result = a2 + 58;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFF225CCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 58;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScoringConfig.CodingKeys()
{
  return &type metadata for ScoringConfig.CodingKeys;
}

unint64_t sub_1AFF22608()
{
  unint64_t result = qword_1E9AFCA18;
  if (!qword_1E9AFCA18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFCA18);
  }
  return result;
}

unint64_t sub_1AFF22660()
{
  unint64_t result = qword_1EB818E30;
  if (!qword_1EB818E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818E30);
  }
  return result;
}

unint64_t sub_1AFF226B8()
{
  unint64_t result = qword_1EB818E28;
  if (!qword_1EB818E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818E28);
  }
  return result;
}

uint64_t sub_1AFF2270C()
{
  unint64_t v0 = sub_1AFFCBD28();
  swift_bridgeObjectRelease();
  if (v0 >= 0x3B) {
    return 59;
  }
  else {
    return v0;
  }
}

uint64_t sub_1AFF22760@<X0>(uint64_t a1@<X8>)
{
  sub_1AFD392D8();
  MEMORY[0x1F4188790](v2 - 8);
  unsigned int v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1AFFC9368();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  int v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFFC9358();
  sub_1AFFC9348();
  MEMORY[0x1B3E8B780](0xD000000000000010, 0x80000001AFFF10B0);
  v12[0] = 0x2F6C6F626D79732FLL;
  v12[1] = 0xE800000000000000;
  sub_1AFFCAFA8();
  sub_1AFFC9338();
  sub_1AFFC9318();
  uint64_t v9 = sub_1AFFC96E8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v4, 1, v9);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a1, v4, v9);
  }
  return result;
}

double sub_1AFF22970(double a1, double a2)
{
  double v2 = a2 - a1;
  double result = a1 / v2;
  if (v2 <= 0.0) {
    return 0.0;
  }
  return result;
}

uint64_t dispatch thunk of StocksIntentHandlerType.handle(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 8) + **(int **)(a3 + 8));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_1AFD3503C;
  return v9(a1, a2, a3);
}

ValueMetadata *type metadata accessor for SDSMetadata()
{
  return &type metadata for SDSMetadata;
}

unint64_t sub_1AFF22AB8()
{
  unint64_t result = qword_1E9AFCA28;
  if (!qword_1E9AFCA28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFCA28);
  }
  return result;
}

uint64_t sub_1AFF22B0C(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_1AFFCBCE8(), uint64_t result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    uint64_t v9 = a2 + 7;
    for (unint64_t i = a1 + 7; ; i += 2)
    {
      BOOL v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_1AFFCBCE8() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_1AFF22BD4(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = (int *)type metadata accessor for Chart.Entry(0);
  MEMORY[0x1F4188790](v4);
  char v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v40 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v11 || a1 == a2) {
    return 1;
  }
  unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v13 = *(void *)(v8 + 72);
  while (1)
  {
    sub_1AFF273B8(a1 + v12, (uint64_t)v10, type metadata accessor for Chart.Entry);
    sub_1AFF273B8(a2 + v12, (uint64_t)v6, type metadata accessor for Chart.Entry);
    if ((sub_1AFFC9898() & 1) == 0) {
      break;
    }
    uint64_t v15 = v4[5];
    double v16 = (double *)&v10[v15];
    char v17 = v10[v15 + 8];
    char v18 = (double *)&v6[v15];
    int v19 = v6[v15 + 8];
    if (v17)
    {
      if (!v19) {
        break;
      }
    }
    else
    {
      if (*v16 != *v18) {
        LOBYTE(v19) = 1;
      }
      if (v19) {
        break;
      }
    }
    uint64_t v20 = v4[6];
    char v21 = (double *)&v10[v20];
    char v22 = v10[v20 + 8];
    char v23 = (double *)&v6[v20];
    int v24 = v6[v20 + 8];
    if (v22)
    {
      if (!v24) {
        break;
      }
    }
    else
    {
      if (*v21 != *v23) {
        LOBYTE(v24) = 1;
      }
      if (v24) {
        break;
      }
    }
    uint64_t v25 = v4[7];
    char v26 = (double *)&v10[v25];
    char v27 = v10[v25 + 8];
    char v28 = (double *)&v6[v25];
    int v29 = v6[v25 + 8];
    if (v27)
    {
      if (!v29) {
        break;
      }
    }
    else
    {
      if (*v26 != *v28) {
        LOBYTE(v29) = 1;
      }
      if (v29) {
        break;
      }
    }
    uint64_t v30 = v4[8];
    char v31 = (double *)&v10[v30];
    char v32 = v10[v30 + 8];
    char v33 = (double *)&v6[v30];
    int v34 = v6[v30 + 8];
    if (v32)
    {
      if (!v34) {
        break;
      }
    }
    else
    {
      if (*v31 != *v33) {
        LOBYTE(v34) = 1;
      }
      if (v34) {
        break;
      }
    }
    uint64_t v35 = v4[9];
    char v36 = (double *)&v10[v35];
    char v37 = v10[v35 + 8];
    char v38 = (double *)&v6[v35];
    int v39 = v6[v35 + 8];
    if (v37)
    {
      if (!v39) {
        break;
      }
    }
    else
    {
      if (*v36 != *v38) {
        LOBYTE(v39) = 1;
      }
      if (v39) {
        break;
      }
    }
    sub_1AFF27420((uint64_t)v6, type metadata accessor for Chart.Entry);
    sub_1AFF27420((uint64_t)v10, type metadata accessor for Chart.Entry);
    v12 += v13;
    uint64_t result = 1;
    if (!--v11) {
      return result;
    }
  }
  sub_1AFF27420((uint64_t)v6, type metadata accessor for Chart.Entry);
  sub_1AFF27420((uint64_t)v10, type metadata accessor for Chart.Entry);
  return 0;
}

BOOL sub_1AFF22EA4(uint64_t a1, uint64_t a2)
{
  return *(void *)(a1 + 16) == *(void *)(a2 + 16);
}

uint64_t sub_1AFF22EB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (uint64_t *)(a2 + 56);
    for (unint64_t i = (uint64_t *)(a1 + 56); ; i += 4)
    {
      uint64_t v5 = *(i - 1);
      uint64_t v6 = *i;
      uint64_t v7 = *(v3 - 1);
      uint64_t v8 = *v3;
      BOOL v9 = *(i - 3) == *(v3 - 3) && *(i - 2) == *(v3 - 2);
      if (!v9 && (sub_1AFFCBCE8() & 1) == 0) {
        break;
      }
      BOOL v10 = v5 == v7 && v6 == v8;
      if (!v10 && (sub_1AFFCBCE8() & 1) == 0) {
        break;
      }
      v3 += 4;
      if (!--v2) {
        return 1;
      }
    }
    return 0;
  }
  return 1;
}

uint64_t sub_1AFF22F80(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (uint64_t *)(a1 + 64);
    for (unint64_t i = (uint64_t *)(a2 + 64); ; i += 12)
    {
      uint64_t v5 = *(v3 - 2);
      uint64_t v6 = *(v3 - 1);
      uint64_t v7 = *v3;
      uint64_t v25 = v3[1];
      uint64_t v23 = v3[3];
      uint64_t v24 = v3[2];
      uint64_t v19 = v3[5];
      uint64_t v20 = v3[4];
      uint64_t v15 = v3[7];
      uint64_t v16 = v3[6];
      uint64_t v9 = *(i - 2);
      uint64_t v8 = *(i - 1);
      uint64_t v10 = *i;
      uint64_t v11 = i[1];
      uint64_t v21 = i[3];
      uint64_t v22 = i[2];
      uint64_t v17 = i[5];
      uint64_t v18 = i[4];
      uint64_t v13 = i[7];
      uint64_t v14 = i[6];
      if ((*(v3 - 4) != *(i - 4) || *(v3 - 3) != *(i - 3)) && (sub_1AFFCBCE8() & 1) == 0) {
        break;
      }
      if ((v5 != v9 || v6 != v8) && (sub_1AFFCBCE8() & 1) == 0
        || (v7 != v10 || v25 != v11) && (sub_1AFFCBCE8() & 1) == 0
        || (v24 != v22 || v23 != v21) && (sub_1AFFCBCE8() & 1) == 0
        || (v20 != v18 || v19 != v17) && (sub_1AFFCBCE8() & 1) == 0
        || (v16 != v14 || v15 != v13) && (sub_1AFFCBCE8() & 1) == 0)
      {
        break;
      }
      v3 += 12;
      if (!--v2) {
        return 1;
      }
    }
    return 0;
  }
  return 1;
}

uint64_t sub_1AFF23150(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      char v6 = 1;
    }
    else
    {
      uint64_t v3 = a1 + 32;
      uint64_t v4 = a2 + 32;
      uint64_t v5 = v2 - 1;
      do
      {
        sub_1AFD2CF14(v3, (uint64_t)v11);
        sub_1AFD2CF14(v4, (uint64_t)v10);
        char v6 = sub_1AFF709C8(v11, v10);
        sub_1AFD2D108((uint64_t)v10);
        sub_1AFD2D108((uint64_t)v11);
        BOOL v8 = v5-- != 0;
        if ((v6 & 1) == 0) {
          break;
        }
        v4 += 56;
        v3 += 56;
      }
      while (v8);
    }
  }
  else
  {
    char v6 = 0;
  }
  return v6 & 1;
}

uint64_t sub_1AFF23208(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    for (uint64_t i = 0; ; i += 56)
    {
      uint64_t v4 = *(void *)(a1 + i + 48);
      uint64_t v5 = *(void *)(a1 + i + 56);
      double v6 = *(double *)(a1 + i + 64);
      uint64_t v7 = *(void *)(a1 + i + 72);
      uint64_t v8 = *(void *)(a1 + i + 80);
      uint64_t v9 = *(void *)(a2 + i + 48);
      uint64_t v10 = *(void *)(a2 + i + 56);
      double v11 = *(double *)(a2 + i + 64);
      uint64_t v12 = *(void *)(a2 + i + 72);
      uint64_t v13 = *(void *)(a2 + i + 80);
      if ((*(void *)(a1 + i + 32) != *(void *)(a2 + i + 32) || *(void *)(a1 + i + 40) != *(void *)(a2 + i + 40))
        && (sub_1AFFCBCE8() & 1) == 0)
      {
        break;
      }
      if (v4 == v9 && v5 == v10)
      {
        if (v6 != v11) {
          return 0;
        }
      }
      else
      {
        char v14 = sub_1AFFCBCE8();
        uint64_t result = 0;
        if ((v14 & 1) == 0 || v6 != v11) {
          return result;
        }
      }
      if ((v7 != v12 || v8 != v13) && (sub_1AFFCBCE8() & 1) == 0) {
        break;
      }
      if (!--v2) {
        return 1;
      }
    }
    return 0;
  }
  return 1;
}

uint64_t sub_1AFF2335C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2)
  {
    uint64_t v3 = a2;
    if (a1 != a2)
    {
      uint64_t v4 = 0;
      uint64_t v20 = a1;
      while (2)
      {
        uint64_t v26 = v2;
        uint64_t v7 = *(void *)(a1 + v4 + 48);
        uint64_t v6 = *(void *)(a1 + v4 + 56);
        uint64_t v8 = *(void *)(a1 + v4 + 64);
        uint64_t v9 = *(void *)(a1 + v4 + 72);
        uint64_t v30 = *(void *)(a1 + v4 + 88);
        uint64_t v25 = *(void *)(a1 + v4 + 96);
        uint64_t v31 = *(void *)(a1 + v4 + 104);
        uint64_t v27 = *(unsigned __int8 *)(a1 + v4 + 112);
        uint64_t v10 = *(void *)(v3 + v4 + 48);
        uint64_t v11 = *(void *)(v3 + v4 + 56);
        uint64_t v12 = *(void *)(v3 + v4 + 64);
        uint64_t v13 = *(void *)(v3 + v4 + 72);
        uint64_t v22 = *(void *)(v3 + v4 + 80);
        uint64_t v23 = *(void *)(a1 + v4 + 80);
        uint64_t v14 = *(void *)(v3 + v4 + 104);
        uint64_t v24 = *(void *)(v3 + v4 + 96);
        uint64_t v28 = *(unsigned __int8 *)(v3 + v4 + 112);
        uint64_t v29 = *(void *)(v3 + v4 + 88);
        if ((*(void *)(a1 + v4 + 32) != *(void *)(v3 + v4 + 32)
           || *(void *)(a1 + v4 + 40) != *(void *)(v3 + v4 + 40))
          && (sub_1AFFCBCE8() & 1) == 0
          || (v7 != v10 || v6 != v11) && (sub_1AFFCBCE8() & 1) == 0
          || (v8 != v12 || v9 != v13) && (sub_1AFFCBCE8() & 1) == 0)
        {
          return 0;
        }
        if (v31)
        {
          if (!v14 || (v25 != v24 || v31 != v14) && (sub_1AFFCBCE8() & 1) == 0) {
            return 0;
          }
        }
        else if (v14)
        {
          return 0;
        }
        if (v30)
        {
          if (!v29 || (v23 != v22 || v30 != v29) && (sub_1AFFCBCE8() & 1) == 0) {
            return 0;
          }
LABEL_30:
          unint64_t v15 = 0xE700000000000000;
          uint64_t v16 = 0x6E776F6E6B6E75;
          switch(v27)
          {
            case 1:
              unint64_t v15 = 0xE800000000000000;
              uint64_t v16 = 0x59434E4552525543;
              break;
            case 2:
              uint64_t v16 = 0x435F4F5450595243;
              unint64_t v15 = 0xEF59434E45525255;
              break;
            case 3:
              unint64_t v15 = 0xE600000000000000;
              uint64_t v16 = 0x595449555145;
              break;
            case 4:
              unint64_t v15 = 0xE300000000000000;
              uint64_t v16 = 4609093;
              break;
            case 5:
              uint64_t v16 = 0x53455255545546;
              break;
            case 6:
              unint64_t v15 = 0xE500000000000000;
              uint64_t v16 = 0x5845444E49;
              break;
            case 7:
              uint64_t v16 = 0x465F4C415554554DLL;
              unint64_t v15 = 0xEB00000000444E55;
              break;
            default:
              break;
          }
          unint64_t v17 = 0xE700000000000000;
          uint64_t v18 = 0x6E776F6E6B6E75;
          switch(v28)
          {
            case 1:
              unint64_t v17 = 0xE800000000000000;
              if (v16 == 0x59434E4552525543) {
                goto LABEL_51;
              }
              goto LABEL_5;
            case 2:
              unint64_t v17 = 0xEF59434E45525255;
              if (v16 != 0x435F4F5450595243) {
                goto LABEL_5;
              }
              goto LABEL_51;
            case 3:
              unint64_t v17 = 0xE600000000000000;
              if (v16 != 0x595449555145) {
                goto LABEL_5;
              }
              goto LABEL_51;
            case 4:
              unint64_t v17 = 0xE300000000000000;
              if (v16 != 4609093) {
                goto LABEL_5;
              }
              goto LABEL_51;
            case 5:
              if (v16 != 0x53455255545546) {
                goto LABEL_5;
              }
              goto LABEL_51;
            case 6:
              unint64_t v17 = 0xE500000000000000;
              uint64_t v18 = 0x5845444E49;
              goto LABEL_50;
            case 7:
              unint64_t v17 = 0xEB00000000444E55;
              if (v16 != 0x465F4C415554554DLL) {
                goto LABEL_5;
              }
              goto LABEL_51;
            default:
LABEL_50:
              if (v16 != v18) {
                goto LABEL_5;
              }
LABEL_51:
              if (v15 == v17)
              {
                swift_bridgeObjectRelease_n();
              }
              else
              {
LABEL_5:
                char v5 = sub_1AFFCBCE8();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if ((v5 & 1) == 0) {
                  return 0;
                }
              }
              v4 += 88;
              uint64_t v2 = v26 - 1;
              a1 = v20;
              uint64_t v3 = a2;
              if (v26 != 1) {
                continue;
              }
              return 1;
          }
        }
        break;
      }
      if (!v29) {
        goto LABEL_30;
      }
      return 0;
    }
  }
  return 1;
}

uint64_t sub_1AFF237A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      char v6 = 1;
    }
    else
    {
      uint64_t v3 = (char *)(a1 + 32);
      uint64_t v4 = (char *)(a2 + 32);
      uint64_t v5 = v2 - 1;
      do
      {
        memcpy(v10, v3, sizeof(v10));
        memcpy(__dst, v4, sizeof(__dst));
        sub_1AFD48104((uint64_t)v10);
        sub_1AFD48104((uint64_t)__dst);
        char v6 = sub_1AFE4FA24((uint64_t)v10);
        sub_1AFD4859C((uint64_t)__dst);
        sub_1AFD4859C((uint64_t)v10);
        BOOL v8 = v5-- != 0;
        if ((v6 & 1) == 0) {
          break;
        }
        v3 += 776;
        v4 += 776;
      }
      while (v8);
    }
  }
  else
  {
    char v6 = 0;
  }
  return v6 & 1;
}

uint64_t sub_1AFF23884(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  double v5 = *(double *)(a1 + 48);
  double v6 = *(double *)(a2 + 48);
  if (*(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40))
  {
    if (v5 == v6) {
      goto LABEL_12;
    }
    return 0;
  }
  char v8 = sub_1AFFCBCE8();
  uint64_t result = 0;
  if ((v8 & 1) != 0 && v5 == v6)
  {
LABEL_12:
    uint64_t v10 = v2 - 1;
    if (v10)
    {
      uint64_t v11 = (double *)(a2 + 72);
      for (uint64_t i = (double *)(a1 + 72); ; i += 3)
      {
        double v13 = *i;
        double v14 = *v11;
        if (*((void *)i - 2) == *((void *)v11 - 2) && *((void *)i - 1) == *((void *)v11 - 1))
        {
          if (v13 != v14) {
            return 0;
          }
        }
        else
        {
          char v16 = sub_1AFFCBCE8();
          uint64_t result = 0;
          if ((v16 & 1) == 0 || v13 != v14) {
            return result;
          }
        }
        v11 += 3;
        uint64_t result = 1;
        if (!--v10) {
          return result;
        }
      }
    }
    return 1;
  }
  return result;
}

uint64_t sub_1AFF23998(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = 0;
    do
    {
      uint64_t v5 = *(void *)(a1 + v3 + 96);
      uint64_t v6 = *(void *)(a2 + v3 + 96);
      if (*(unsigned char *)(a1 + v3 + 40))
      {
        if (!*(unsigned char *)(a2 + v3 + 40)) {
          return 0;
        }
      }
      else
      {
        if (*(double *)(a1 + v3 + 32) == *(double *)(a2 + v3 + 32)) {
          char v7 = *(unsigned char *)(a2 + v3 + 40);
        }
        else {
          char v7 = 1;
        }
        if (v7) {
          return 0;
        }
      }
      if (*(unsigned char *)(a1 + v3 + 56))
      {
        if (!*(unsigned char *)(a2 + v3 + 56)) {
          return 0;
        }
      }
      else
      {
        if (*(double *)(a1 + v3 + 48) == *(double *)(a2 + v3 + 48)) {
          char v8 = *(unsigned char *)(a2 + v3 + 56);
        }
        else {
          char v8 = 1;
        }
        if (v8) {
          return 0;
        }
      }
      if (*(unsigned char *)(a1 + v3 + 72))
      {
        if (!*(unsigned char *)(a2 + v3 + 72)) {
          return 0;
        }
      }
      else
      {
        if (*(double *)(a1 + v3 + 64) == *(double *)(a2 + v3 + 64)) {
          char v9 = *(unsigned char *)(a2 + v3 + 72);
        }
        else {
          char v9 = 1;
        }
        if (v9) {
          return 0;
        }
      }
      if (*(unsigned char *)(a1 + v3 + 88))
      {
        if (v5 == v6) {
          int v10 = *(unsigned __int8 *)(a2 + v3 + 88);
        }
        else {
          int v10 = 0;
        }
        if (v10 != 1) {
          return 0;
        }
      }
      else
      {
        uint64_t v11 = 0;
        if ((*(unsigned char *)(a2 + v3 + 88) & 1) != 0 || *(double *)(a1 + v3 + 80) != *(double *)(a2 + v3 + 80) || v5 != v6) {
          return v11;
        }
      }
      if (*(unsigned char *)(a1 + v3 + 112))
      {
        if (!*(unsigned char *)(a2 + v3 + 112)) {
          return 0;
        }
      }
      else
      {
        if (*(double *)(a1 + v3 + 104) == *(double *)(a2 + v3 + 104)) {
          char v4 = *(unsigned char *)(a2 + v3 + 112);
        }
        else {
          char v4 = 1;
        }
        if (v4) {
          return 0;
        }
      }
      v3 += 88;
      --v2;
    }
    while (v2);
  }
  return 1;
}

BOOL sub_1AFF23AC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      return 1;
    }
    else
    {
      uint64_t v3 = (char *)(a1 + 32);
      char v4 = (char *)(a2 + 32);
      uint64_t v5 = v2 - 1;
      do
      {
        uint64_t v6 = v5;
        memcpy(__dst, v3, sizeof(__dst));
        memcpy(v9, v4, sizeof(v9));
        BOOL v7 = _s10StocksCore13PaywallConfigV2eeoiySbAC_ACtFZ_0((uint64_t)__dst);
        if (!v7) {
          break;
        }
        uint64_t v5 = v6 - 1;
        v4 += 648;
        v3 += 648;
      }
      while (v6);
    }
  }
  else
  {
    return 0;
  }
  return v7;
}

uint64_t sub_1AFF23B74(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2)
  {
    uint64_t v3 = a2;
    if (a1 != a2)
    {
      uint64_t v4 = 0;
      uint64_t v15 = a1;
      while (1)
      {
        uint64_t v5 = *(void *)(a1 + v4 + 48);
        uint64_t v6 = *(void *)(a1 + v4 + 56);
        uint64_t v7 = *(void *)(a1 + v4 + 64);
        uint64_t v41 = *(void *)(a1 + v4 + 80);
        uint64_t v42 = *(void *)(a1 + v4 + 72);
        uint64_t v40 = *(void *)(a1 + v4 + 88);
        uint64_t v37 = *(void *)(a1 + v4 + 104);
        uint64_t v38 = *(void *)(a1 + v4 + 96);
        int v34 = *(unsigned __int8 *)(a1 + v4 + 112);
        uint64_t v31 = *(void *)(a1 + v4 + 128);
        uint64_t v32 = *(void *)(a1 + v4 + 120);
        uint64_t v27 = *(void *)(a1 + v4 + 144);
        uint64_t v28 = *(void *)(a1 + v4 + 136);
        uint64_t v23 = *(void *)(a1 + v4 + 160);
        uint64_t v24 = *(void *)(a1 + v4 + 152);
        uint64_t v19 = *(void *)(a1 + v4 + 176);
        uint64_t v20 = *(void *)(a1 + v4 + 168);
        uint64_t v9 = *(void *)(v3 + v4 + 48);
        uint64_t v8 = *(void *)(v3 + v4 + 56);
        uint64_t v10 = *(void *)(v3 + v4 + 64);
        uint64_t v11 = *(void *)(v3 + v4 + 72);
        uint64_t v12 = *(void *)(v3 + v4 + 80);
        uint64_t v39 = *(void *)(v3 + v4 + 88);
        uint64_t v36 = *(void *)(v3 + v4 + 96);
        uint64_t v35 = *(void *)(v3 + v4 + 104);
        int v33 = *(unsigned __int8 *)(v3 + v4 + 112);
        uint64_t v29 = *(void *)(v3 + v4 + 128);
        uint64_t v30 = *(void *)(v3 + v4 + 120);
        uint64_t v25 = *(void *)(v3 + v4 + 144);
        uint64_t v26 = *(void *)(v3 + v4 + 136);
        uint64_t v21 = *(void *)(v3 + v4 + 160);
        uint64_t v22 = *(void *)(v3 + v4 + 152);
        uint64_t v17 = *(void *)(v3 + v4 + 176);
        uint64_t v18 = *(void *)(v3 + v4 + 168);
        if ((*(void *)(a1 + v4 + 32) != *(void *)(v3 + v4 + 32)
           || *(void *)(a1 + v4 + 40) != *(void *)(v3 + v4 + 40))
          && (sub_1AFFCBCE8() & 1) == 0)
        {
          break;
        }
        if ((v5 != v9 || v6 != v8) && (sub_1AFFCBCE8() & 1) == 0
          || (v7 != v10 || v42 != v11) && (sub_1AFFCBCE8() & 1) == 0
          || (v41 != v12 || v40 != v39) && (sub_1AFFCBCE8() & 1) == 0)
        {
          break;
        }
        if (v38 == v36 && v37 == v35)
        {
          if (v34 != v33) {
            return 0;
          }
        }
        else
        {
          char v13 = sub_1AFFCBCE8();
          uint64_t result = 0;
          if (v13 & 1) == 0 || ((v34 ^ v33)) {
            return result;
          }
        }
        if ((v32 != v30 || v31 != v29) && (sub_1AFFCBCE8() & 1) == 0
          || (v28 != v26 || v27 != v25) && (sub_1AFFCBCE8() & 1) == 0
          || (v24 != v22 || v23 != v21) && (sub_1AFFCBCE8() & 1) == 0
          || (v20 != v18 || v19 != v17) && (sub_1AFFCBCE8() & 1) == 0)
        {
          break;
        }
        v4 += 152;
        --v2;
        a1 = v15;
        uint64_t v3 = a2;
        if (!v2) {
          return 1;
        }
      }
      return 0;
    }
  }
  return 1;
}

uint64_t sub_1AFF23E38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AudioUpsellConfig() - 8;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (uint64_t *)((char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (uint64_t *)((char *)&v19 - v9);
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      char v15 = 1;
    }
    else
    {
      unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      uint64_t v13 = *(void *)(v8 + 72);
      uint64_t v14 = v11 - 1;
      do
      {
        sub_1AFF273B8(a1 + v12, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for AudioUpsellConfig);
        sub_1AFF273B8(a2 + v12, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for AudioUpsellConfig);
        char v15 = sub_1AFF742F0(v10, v6);
        sub_1AFF27420((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for AudioUpsellConfig);
        sub_1AFF27420((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for AudioUpsellConfig);
        BOOL v17 = v14-- != 0;
        if ((v15 & 1) == 0) {
          break;
        }
        v12 += v13;
      }
      while (v17);
    }
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

BOOL sub_1AFF23FC4(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (a1[4] != a2[4]) {
    return 0;
  }
  uint64_t v3 = a1 + 5;
  uint64_t v4 = a2 + 5;
  uint64_t v5 = v2 - 1;
  do
  {
    BOOL result = v5 == 0;
    if (!v5) {
      break;
    }
    uint64_t v8 = *v3++;
    uint64_t v7 = v8;
    uint64_t v9 = *v4++;
    --v5;
  }
  while (v7 == v9);
  return result;
}

BOOL sub_1AFF24030(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (*(_DWORD *)(a1 + 32) != *(_DWORD *)(a2 + 32)) {
    return 0;
  }
  uint64_t v3 = (int *)(a1 + 36);
  uint64_t v4 = (int *)(a2 + 36);
  uint64_t v5 = v2 - 1;
  do
  {
    BOOL result = v5 == 0;
    if (!v5) {
      break;
    }
    int v8 = *v3++;
    int v7 = v8;
    int v9 = *v4++;
    --v5;
  }
  while (v7 == v9);
  return result;
}

uint64_t sub_1AFF2409C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2) {
      return 1;
    }
    uint64_t v3 = 0;
    uint64_t v4 = a1 + 32;
    uint64_t v5 = a2 + 32;
    uint64_t v44 = a1 + 32;
    uint64_t v45 = *(void *)(a1 + 16);
    uint64_t v43 = a2 + 32;
    while (1)
    {
      uint64_t v46 = v3;
      uint64_t v7 = 80 * v3;
      uint64_t v8 = v4 + 80 * v3;
      uint64_t v9 = *(void *)(v8 + 8);
      uint64_t v10 = *(void *)(v8 + 16);
      uint64_t v12 = *(void *)(v8 + 24);
      uint64_t v11 = *(void *)(v8 + 32);
      uint64_t v13 = *(void *)(v8 + 40);
      uint64_t v14 = *(void **)(v8 + 48);
      char v48 = *(void **)(v8 + 72);
      uint64_t v15 = v5 + v7;
      uint64_t v16 = *(void *)(v15 + 8);
      uint64_t v17 = *(void *)(v15 + 16);
      uint64_t v19 = *(void *)(v15 + 24);
      uint64_t v18 = *(void *)(v15 + 32);
      uint64_t v20 = *(void *)(v15 + 40);
      uint64_t v21 = *(void **)(v15 + 48);
      char v47 = *(void **)(v15 + 72);
      int v49 = *(unsigned __int8 *)(v15 + 64);
      int v50 = *(unsigned __int8 *)(v8 + 64);
      uint64_t v51 = *(void *)(v15 + 56);
      uint64_t v52 = *(void *)(v8 + 56);
      if (v9)
      {
        if (!v16 || (*(void *)v8 != *(void *)v15 || v9 != v16) && (sub_1AFFCBCE8() & 1) == 0) {
          return 0;
        }
      }
      else if (v16)
      {
        return 0;
      }
      if (v12)
      {
        if (!v19 || (v10 != v17 || v12 != v19) && (sub_1AFFCBCE8() & 1) == 0) {
          return 0;
        }
      }
      else if (v19)
      {
        return 0;
      }
      if (v13)
      {
        if (!v20 || (v11 != v18 || v13 != v20) && (sub_1AFFCBCE8() & 1) == 0) {
          return 0;
        }
      }
      else if (v20)
      {
        return 0;
      }
      uint64_t v22 = v14[2];
      if (v22 != v21[2]) {
        return 0;
      }
      if (v22 && v14 != v21)
      {
        BOOL v24 = v14[4] == v21[4] && v14[5] == v21[5];
        if (!v24 && (sub_1AFFCBCE8() & 1) == 0) {
          return 0;
        }
        if (v22 != 1)
        {
          if ((v14[6] != v21[6] || v14[7] != v21[7]) && (sub_1AFFCBCE8() & 1) == 0) {
            return 0;
          }
          uint64_t v25 = v22 - 2;
          if (v25) {
            break;
          }
        }
      }
LABEL_43:
      uint64_t v26 = *(void *)(v52 + 16);
      if (v26 != *(void *)(v51 + 16)) {
        return 0;
      }
      if (v26 && v52 != v51)
      {
        uint64_t v27 = (uint64_t *)(v51 + 56);
        uint64_t v28 = (uint64_t *)(v52 + 56);
        do
        {
          uint64_t v29 = *(v28 - 1);
          uint64_t v30 = *v28;
          uint64_t v31 = *(v27 - 1);
          uint64_t v32 = *v27;
          BOOL v33 = *(v28 - 3) == *(v27 - 3) && *(v28 - 2) == *(v27 - 2);
          if (!v33 && (sub_1AFFCBCE8() & 1) == 0) {
            return 0;
          }
          BOOL v34 = v29 == v31 && v30 == v32;
          if (!v34 && (sub_1AFFCBCE8() & 1) == 0) {
            return 0;
          }
          v27 += 4;
          v28 += 4;
        }
        while (--v26);
      }
      if (v50 != v49) {
        return 0;
      }
      uint64_t v35 = v48[2];
      if (v35 != v47[2]) {
        return 0;
      }
      if (v35 && v48 != v47)
      {
        if ((v48[4] != v47[4] || v48[5] != v47[5]) && (sub_1AFFCBCE8() & 1) == 0) {
          return 0;
        }
        uint64_t v36 = v35 - 1;
        if (v36)
        {
          uint64_t v37 = v47 + 7;
          uint64_t v38 = v48 + 7;
          do
          {
            BOOL v39 = *(v38 - 1) == *(v37 - 1) && *v38 == *v37;
            if (!v39 && (sub_1AFFCBCE8() & 1) == 0) {
              return 0;
            }
            v37 += 2;
            v38 += 2;
          }
          while (--v36);
        }
      }
      uint64_t v3 = v46 + 1;
      uint64_t result = 1;
      uint64_t v5 = v43;
      uint64_t v4 = v44;
      if (v46 + 1 == v45) {
        return result;
      }
    }
    uint64_t v40 = v21 + 9;
    uint64_t v41 = v14 + 9;
    while (1)
    {
      BOOL v42 = *(v41 - 1) == *(v40 - 1) && *v41 == *v40;
      if (!v42 && (sub_1AFFCBCE8() & 1) == 0) {
        break;
      }
      v40 += 2;
      v41 += 2;
      if (!--v25) {
        goto LABEL_43;
      }
    }
  }
  return 0;
}

uint64_t sub_1AFF2441C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      char v7 = 1;
    }
    else
    {
      uint64_t v3 = (char *)(a1 + 32);
      uint64_t v4 = (char *)(a2 + 32);
      uint64_t v5 = v2 - 1;
      do
      {
        uint64_t v6 = v5;
        memcpy(__dst, v3, sizeof(__dst));
        memcpy(v9, v4, sizeof(v9));
        char v7 = sub_1AFD9A594(__dst, v9);
        if ((v7 & 1) == 0) {
          break;
        }
        uint64_t v5 = v6 - 1;
        v4 += 272;
        v3 += 272;
      }
      while (v6);
    }
  }
  else
  {
    char v7 = 0;
  }
  return v7 & 1;
}

uint64_t sub_1AFF244C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (uint64_t *)(a2 + 64);
    for (uint64_t i = (uint64_t *)(a1 + 64); ; i += 5)
    {
      int v5 = *((unsigned __int8 *)i - 16);
      uint64_t v6 = *(i - 1);
      uint64_t v7 = *i;
      int v8 = *((unsigned __int8 *)v3 - 16);
      uint64_t v9 = *(v3 - 1);
      uint64_t v10 = *v3;
      if (*(i - 4) == *(v3 - 4) && *(i - 3) == *(v3 - 3))
      {
        if (v5 != v8) {
          return 0;
        }
      }
      else
      {
        char v12 = sub_1AFFCBCE8();
        uint64_t result = 0;
        if (v12 & 1) == 0 || ((v5 ^ v8)) {
          return result;
        }
      }
      BOOL v14 = v6 == v9 && v7 == v10;
      if (!v14 && (sub_1AFFCBCE8() & 1) == 0) {
        break;
      }
      v3 += 5;
      if (!--v2) {
        return 1;
      }
    }
    return 0;
  }
  return 1;
}

uint64_t sub_1AFF245BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2)
  {
    uint64_t v3 = a2;
    if (a1 != a2)
    {
      uint64_t v4 = 0;
      uint64_t v14 = a1;
      while (1)
      {
        uint64_t v5 = *(void *)(a1 + v4 + 48);
        uint64_t v6 = *(void *)(a1 + v4 + 56);
        uint64_t v7 = *(void *)(a1 + v4 + 72);
        uint64_t v16 = *(void *)(a1 + v4 + 64);
        uint64_t v22 = *(void *)(a1 + v4 + 88);
        uint64_t v23 = *(void *)(a1 + v4 + 80);
        uint64_t v19 = *(void *)(a1 + v4 + 104);
        uint64_t v20 = *(void *)(a1 + v4 + 96);
        uint64_t v9 = *(void *)(v3 + v4 + 48);
        uint64_t v8 = *(void *)(v3 + v4 + 56);
        uint64_t v11 = *(void *)(v3 + v4 + 64);
        uint64_t v10 = *(void *)(v3 + v4 + 72);
        uint64_t v12 = *(void *)(v3 + v4 + 80);
        uint64_t v21 = *(void *)(v3 + v4 + 88);
        uint64_t v17 = *(void *)(v3 + v4 + 104);
        uint64_t v18 = *(void *)(v3 + v4 + 96);
        if ((*(void *)(a1 + v4 + 32) != *(void *)(v3 + v4 + 32)
           || *(void *)(a1 + v4 + 40) != *(void *)(v3 + v4 + 40))
          && (sub_1AFFCBCE8() & 1) == 0)
        {
          break;
        }
        if ((v5 != v9 || v6 != v8) && (sub_1AFFCBCE8() & 1) == 0) {
          break;
        }
        if (v7)
        {
          if (!v10 || (v16 != v11 || v7 != v10) && (sub_1AFFCBCE8() & 1) == 0) {
            return 0;
          }
        }
        else if (v10)
        {
          return 0;
        }
        if ((v23 != v12 || v22 != v21) && (sub_1AFFCBCE8() & 1) == 0
          || (v20 != v18 || v19 != v17) && (sub_1AFFCBCE8() & 1) == 0)
        {
          break;
        }
        v4 += 80;
        --v2;
        a1 = v14;
        uint64_t v3 = a2;
        if (!v2) {
          return 1;
        }
      }
      return 0;
    }
  }
  return 1;
}

uint64_t sub_1AFF24764(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2)
  {
    uint64_t v3 = a2;
    if (a1 != a2)
    {
      uint64_t v4 = 0;
      uint64_t v14 = a1;
      while (1)
      {
        uint64_t v6 = *(void *)(a1 + v4 + 48);
        uint64_t v5 = *(void *)(a1 + v4 + 56);
        uint64_t v7 = *(void *)(a1 + v4 + 72);
        int v8 = *(unsigned __int8 *)(a1 + v4 + 80);
        uint64_t v10 = *(void *)(v3 + v4 + 48);
        uint64_t v9 = *(void *)(v3 + v4 + 56);
        uint64_t v11 = *(void *)(v3 + v4 + 72);
        uint64_t v16 = *(void *)(v3 + v4 + 64);
        uint64_t v17 = *(void *)(a1 + v4 + 64);
        int v12 = *(unsigned __int8 *)(v3 + v4 + 80);
        if ((*(void *)(a1 + v4 + 32) != *(void *)(v3 + v4 + 32)
           || *(void *)(a1 + v4 + 40) != *(void *)(v3 + v4 + 40))
          && (sub_1AFFCBCE8() & 1) == 0)
        {
          break;
        }
        if (v5)
        {
          if (!v9 || (v6 != v10 || v5 != v9) && (sub_1AFFCBCE8() & 1) == 0) {
            return 0;
          }
        }
        else if (v9)
        {
          return 0;
        }
        if (v7)
        {
          if (!v11 || (v17 != v16 || v7 != v11) && (sub_1AFFCBCE8() & 1) == 0) {
            return 0;
          }
        }
        else if (v11)
        {
          return 0;
        }
        if (v8 == 2)
        {
          if (v12 != 2) {
            return 0;
          }
        }
        else
        {
          uint64_t result = 0;
          if (v12 == 2 || ((((v8 & 1) == 0) ^ v12) & 1) == 0) {
            return result;
          }
        }
        v4 += 56;
        --v2;
        a1 = v14;
        uint64_t v3 = a2;
        if (!v2) {
          return 1;
        }
      }
      return 0;
    }
  }
  return 1;
}

uint64_t sub_1AFF248DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  char v5 = *(unsigned char *)(a1 + 48);
  double v6 = *(double *)(a1 + 56);
  char v7 = *(unsigned char *)(a1 + 64);
  char v8 = *(unsigned char *)(a2 + 48);
  double v9 = *(double *)(a2 + 56);
  char v10 = *(unsigned char *)(a2 + 64);
  if (*(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40)
    || (v11 = sub_1AFFCBCE8(), uint64_t result = 0, (v11 & 1) != 0))
  {
    char v19 = v7;
    uint64_t v13 = 0;
    while (1)
    {
      --v2;
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      unint64_t v14 = 0xE700000000000000;
      uint64_t v15 = 0x6E776F6E6B6E75;
      switch(v5)
      {
        case 1:
          unint64_t v14 = 0xE500000000000000;
          uint64_t v15 = 0x544847494CLL;
          break;
        case 2:
          unint64_t v14 = 0xE400000000000000;
          uint64_t v15 = 1263681860;
          break;
        case 3:
          unint64_t v14 = 0xE800000000000000;
          uint64_t v15 = 0x4554414C504D4554;
          break;
        default:
          break;
      }
      unint64_t v16 = 0xE700000000000000;
      uint64_t v17 = 0x6E776F6E6B6E75;
      switch(v8)
      {
        case 1:
          unint64_t v16 = 0xE500000000000000;
          if (v15 == 0x544847494CLL) {
            goto LABEL_19;
          }
          goto LABEL_22;
        case 2:
          unint64_t v16 = 0xE400000000000000;
          uint64_t v17 = 1263681860;
          goto LABEL_18;
        case 3:
          unint64_t v16 = 0xE800000000000000;
          if (v15 != 0x4554414C504D4554) {
            goto LABEL_22;
          }
          goto LABEL_19;
        default:
LABEL_18:
          if (v15 != v17) {
            goto LABEL_22;
          }
LABEL_19:
          if (v14 == v16)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
          }
          else
          {
LABEL_22:
            char v18 = sub_1AFFCBCE8();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v18 & 1) == 0) {
              return 0;
            }
          }
          if (v19)
          {
            if ((v10 & 1) == 0) {
              return 0;
            }
          }
          else if (v10 & 1 | (v6 != v9))
          {
            return 0;
          }
          if (!v2) {
            return 1;
          }
          char v5 = *(unsigned char *)(a1 + v13 + 88);
          double v6 = *(double *)(a1 + v13 + 96);
          char v19 = *(unsigned char *)(a1 + v13 + 104);
          char v8 = *(unsigned char *)(a2 + v13 + 88);
          double v9 = *(double *)(a2 + v13 + 96);
          char v10 = *(unsigned char *)(a2 + v13 + 104);
          if ((*(void *)(a1 + v13 + 72) != *(void *)(a2 + v13 + 72)
             || *(void *)(a1 + v13 + 80) != *(void *)(a2 + v13 + 80))
            && (sub_1AFFCBCE8() & 1) == 0)
          {
            return 0;
          }
          v13 += 40;
          break;
      }
    }
  }
  return result;
}

uint64_t sub_1AFF24BC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (double *)(a2 + 48);
    uint64_t v4 = (double *)(a1 + 48);
    do
    {
      double v5 = *v4;
      double v6 = *v3;
      if (*((void *)v4 - 2) == *((void *)v3 - 2) && *((void *)v4 - 1) == *((void *)v3 - 1))
      {
        if (v5 != v6) {
          return 0;
        }
      }
      else
      {
        char v8 = sub_1AFFCBCE8();
        uint64_t result = 0;
        if ((v8 & 1) == 0 || v5 != v6) {
          return result;
        }
      }
      v3 += 3;
      v4 += 3;
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_1AFF24C7C(void *a1)
{
  uint64_t v3 = v1;
  sub_1AFF27C6C(0, &qword_1EB818328, (uint64_t (*)(void))sub_1AFF27A04, (uint64_t)&type metadata for SDSMetadata.Source.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  double v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFF27A04();
  sub_1AFFCBE78();
  v12[0] = 0;
  sub_1AFFCBC08();
  if (!v2)
  {
    sub_1AFF05054(v3 + 16, (uint64_t)v13);
    sub_1AFF05054((uint64_t)v13, (uint64_t)v12);
    v11[7] = 1;
    sub_1AFF27A58();
    sub_1AFF27B04(&qword_1EB817F50, (void (*)(void))sub_1AFF27B70);
    sub_1AFFCBBE8();
    v12[0] = 2;
    sub_1AFFCBB98();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1AFF24E9C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_1AFFCBDF8();
  sub_1AFFCAF68();
  if (!v1)
  {
    sub_1AFFCBE18();
    if (*(void *)(v0 + 32)) {
      goto LABEL_3;
    }
LABEL_5:
    sub_1AFFCBE18();
    return sub_1AFFCBE38();
  }
  sub_1AFFCBE18();
  sub_1AFFC8E38();
  sub_1AFF264A4((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  if (!*(void *)(v0 + 32)) {
    goto LABEL_5;
  }
LABEL_3:
  sub_1AFFCBE18();
  sub_1AFFC8E38();
  sub_1AFFCAF68();
  swift_bridgeObjectRelease();
  return sub_1AFFCBE38();
}

uint64_t sub_1AFF24F7C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1AFDF0818(*a1, *a2);
}

uint64_t sub_1AFF24F88()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFF25024()
{
  sub_1AFFCAF68();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFF250AC()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFF25144@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFF26858();
  *a1 = result;
  return result;
}

void sub_1AFF25174(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE400000000000000;
  unint64_t v4 = 0xE800000000000000;
  uint64_t v5 = 0x736C72556F676F6CLL;
  if (v2 != 1)
  {
    uint64_t v5 = 0x6C7255656D6F68;
    unint64_t v4 = 0xE700000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 1701667182;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1AFF251CC()
{
  uint64_t v1 = 0x736C72556F676F6CLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x6C7255656D6F68;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1701667182;
  }
}

uint64_t sub_1AFF25220@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFF26858();
  *a1 = result;
  return result;
}

uint64_t sub_1AFF25248(uint64_t a1)
{
  unint64_t v2 = sub_1AFF27A04();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFF25284(uint64_t a1)
{
  unint64_t v2 = sub_1AFF27A04();

  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1AFF252C0@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1AFF268A4(a1, (uint64_t *)v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1AFF25308(void *a1)
{
  return sub_1AFF24C7C(a1);
}

BOOL sub_1AFF25344(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  uint64_t v6 = *(void *)(a1 + 32);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  uint64_t v8 = *(void *)(a2 + 32);
  return sub_1AFF2667C(v5, v7);
}

uint64_t sub_1AFF25394(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 32);
  sub_1AFFCAF68();
  if (!v3)
  {
    sub_1AFFCBE18();
    if (v4) {
      goto LABEL_3;
    }
    return sub_1AFFCBE18();
  }
  sub_1AFFCBE18();
  sub_1AFFC8E38();
  sub_1AFF264A4(a1, v3);
  swift_bridgeObjectRelease();
  if (!v4) {
    return sub_1AFFCBE18();
  }
LABEL_3:
  sub_1AFFCBE18();
  sub_1AFFC8E38();
  sub_1AFFCAF68();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFF2546C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 32);
  sub_1AFFCBDF8();
  sub_1AFFCAF68();
  if (!v1)
  {
    sub_1AFFCBE18();
    if (v2) {
      goto LABEL_3;
    }
LABEL_5:
    sub_1AFFCBE18();
    return sub_1AFFCBE38();
  }
  sub_1AFFCBE18();
  sub_1AFFC8E38();
  sub_1AFF264A4((uint64_t)v4, v1);
  swift_bridgeObjectRelease();
  if (!v2) {
    goto LABEL_5;
  }
LABEL_3:
  sub_1AFFCBE18();
  sub_1AFFC8E38();
  sub_1AFFCAF68();
  swift_bridgeObjectRelease();
  return sub_1AFFCBE38();
}

uint64_t sub_1AFF25544(void *a1)
{
  uint64_t v3 = v1;
  sub_1AFF27C6C(0, &qword_1EB818320, (uint64_t (*)(void))sub_1AFF27BC4, (uint64_t)&type metadata for SDSMetadata.SourceLogo.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  double v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFF27BC4();
  sub_1AFFCBE78();
  char v15 = 0;
  sub_1AFFCBC08();
  if (!v2)
  {
    char v14 = *(unsigned char *)(v3 + 16);
    char v13 = 1;
    sub_1AFF27CD4();
    sub_1AFFCBC58();
    char v12 = 2;
    sub_1AFFCBBB8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1AFF2571C()
{
  sub_1AFFCBDF8();
  sub_1AFFCAF68();
  int v1 = *(unsigned __int8 *)(v0 + 32);
  sub_1AFFCAF68();
  swift_bridgeObjectRelease();
  sub_1AFFCBE18();
  if (v1 != 1) {
    sub_1AFFCBE28();
  }
  return sub_1AFFCBE38();
}

uint64_t sub_1AFF25844(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 32);
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFCAF68();
  if (v3)
  {
    sub_1AFFCBE18();
    sub_1AFFC8E38();
    sub_1AFF264A4(a1, v3);
    swift_bridgeObjectRelease();
    if (v4)
    {
LABEL_3:
      sub_1AFFCBE18();
      sub_1AFFC8E38();
      sub_1AFFCAF68();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_1AFFCBE18();
    if (v4) {
      goto LABEL_3;
    }
  }
  sub_1AFFCBE18();
  swift_bridgeObjectRelease();
LABEL_6:
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFF2595C(void *a1)
{
  uint64_t v2 = v1;
  sub_1AFF27C6C(0, &qword_1EB818318, (uint64_t (*)(void))sub_1AFF272BC, (uint64_t)&type metadata for SDSMetadata.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v11 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFF272BC();
  sub_1AFFCBE78();
  long long v9 = *(_OWORD *)(v2 + 16);
  v11[0] = *(_OWORD *)v2;
  v11[1] = v9;
  uint64_t v12 = *(void *)(v2 + 32);
  sub_1AFF27364();
  sub_1AFFCBC58();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1AFF25AE4(unsigned __int8 *a1, char *a2)
{
  return sub_1AFDF06A0(*a1, *a2);
}

uint64_t sub_1AFF25AF0()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFF25BC0()
{
  sub_1AFFCAF68();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFF25C78()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFF25D44@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFF26BC4();
  *a1 = result;
  return result;
}

void sub_1AFF25D74(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE500000000000000;
      uint64_t v3 = 0x544847494CLL;
      goto LABEL_3;
    case 2:
      *a1 = 1263681860;
      a1[1] = 0xE400000000000000;
      break;
    case 3:
      *a1 = 0x4554414C504D4554;
      a1[1] = 0xE800000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

unint64_t sub_1AFF25E04@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1AFF26C10(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1AFF25E30()
{
  return sub_1AFFCB128();
}

uint64_t sub_1AFF25E80()
{
  uint64_t v1 = 0x746E6169726176;
  if (*v0 != 1) {
    uint64_t v1 = 0x656E696C65736162;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 7107189;
  }
}

uint64_t sub_1AFF25EE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1AFF26CE4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AFF25F08(uint64_t a1)
{
  unint64_t v2 = sub_1AFF27BC4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFF25F44(uint64_t a1)
{
  unint64_t v2 = sub_1AFF27BC4();

  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1AFF25F80@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1AFF26E50(a1, (uint64_t)v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(unsigned char *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1AFF25FC8(void *a1)
{
  return sub_1AFF25544(a1);
}

uint64_t sub_1AFF25FE0(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  char v6 = *(unsigned char *)(a1 + 32);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  char v8 = *(unsigned char *)(a2 + 32);
  return sub_1AFF265EC((uint64_t)v5, (uint64_t)v7) & 1;
}

uint64_t sub_1AFF26030()
{
  char v1 = *(unsigned char *)(v0 + 32);
  sub_1AFFCAF68();
  sub_1AFFCAF68();
  swift_bridgeObjectRelease();
  if (v1) {
    return sub_1AFFCBE18();
  }
  sub_1AFFCBE18();
  return sub_1AFFCBE28();
}

uint64_t sub_1AFF26134()
{
  int v1 = *(unsigned __int8 *)(v0 + 32);
  sub_1AFFCBDF8();
  sub_1AFFCAF68();
  sub_1AFFCAF68();
  swift_bridgeObjectRelease();
  sub_1AFFCBE18();
  if (!v1) {
    sub_1AFFCBE28();
  }
  return sub_1AFFCBE38();
}

uint64_t sub_1AFF2625C()
{
  return 0x656372756F73;
}

uint64_t sub_1AFF26270@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x656372756F73 && a2 == 0xE600000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1AFFCBCE8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1AFF26300(uint64_t a1)
{
  unint64_t v2 = sub_1AFF272BC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFF2633C(uint64_t a1)
{
  unint64_t v2 = sub_1AFF272BC();

  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1AFF26378@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1AFF270DC(a1, (uint64_t)v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1AFF263C0(void *a1)
{
  return sub_1AFF2595C(a1);
}

BOOL sub_1AFF263D8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  uint64_t v6 = *(void *)(a1 + 32);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  uint64_t v8 = *(void *)(a2 + 32);
  return sub_1AFF26768(v5, v7);
}

uint64_t sub_1AFF26424()
{
  sub_1AFFCBDF8();
  sub_1AFF25844((uint64_t)v1);
  return sub_1AFFCBE38();
}

uint64_t sub_1AFF26468()
{
  sub_1AFFCBDF8();
  sub_1AFF25844((uint64_t)v1);
  return sub_1AFFCBE38();
}

uint64_t sub_1AFF264A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = sub_1AFFCBE08();
  if (v3)
  {
    long long v5 = (unsigned __int8 *)(a2 + 64);
    do
    {
      int v6 = *v5;
      sub_1AFFC8E38();
      sub_1AFFCAF68();
      sub_1AFFCAF68();
      swift_bridgeObjectRelease();
      sub_1AFFCBE18();
      if (!v6) {
        sub_1AFFCBE28();
      }
      uint64_t result = swift_bridgeObjectRelease();
      v5 += 40;
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_1AFF265EC(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v4 || (v5 = sub_1AFFCBCE8(), uint64_t result = 0, (v5 & 1) != 0))
  {
    if ((sub_1AFDF06A0(*(unsigned char *)(a1 + 16), *(unsigned char *)(a2 + 16)) & 1) == 0) {
      return 0;
    }
    char v7 = *(unsigned char *)(a2 + 32);
    if (*(unsigned char *)(a1 + 32))
    {
      if ((*(unsigned char *)(a2 + 32) & 1) == 0) {
        return 0;
      }
    }
    else
    {
      if (*(double *)(a1 + 24) != *(double *)(a2 + 24)) {
        char v7 = 1;
      }
      if (v7) {
        return 0;
      }
    }
    return 1;
  }
  return result;
}

BOOL sub_1AFF2667C(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (v5 = sub_1AFFCBCE8(), BOOL result = 0, (v5 & 1) != 0))
  {
    uint64_t v7 = a2[2];
    if (a1[2])
    {
      if (!v7) {
        return 0;
      }
      sub_1AFFC8E38();
      uint64_t v8 = sub_1AFFC8E38();
      char v9 = sub_1AFF248DC(v8, v7);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v9 & 1) == 0) {
        return 0;
      }
    }
    else if (v7)
    {
      return 0;
    }
    uint64_t v10 = a1[4];
    uint64_t v11 = a2[4];
    if (v10) {
      return v11 && (a1[3] == a2[3] && v10 == v11 || (sub_1AFFCBCE8() & 1) != 0);
    }
    return !v11;
  }
  return result;
}

BOOL sub_1AFF26768(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v3 = a1[4];
  uint64_t v6 = a2[2];
  uint64_t v5 = a2[3];
  uint64_t v7 = a2[4];
  BOOL v8 = *a1 == *a2 && a1[1] == a2[1];
  if (!v8 && (sub_1AFFCBCE8() & 1) == 0) {
    return 0;
  }
  if (v2)
  {
    if (!v6) {
      return 0;
    }
    sub_1AFFC8E38();
    uint64_t v9 = sub_1AFFC8E38();
    char v10 = sub_1AFF248DC(v9, v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v10 & 1) == 0) {
      return 0;
    }
  }
  else if (v6)
  {
    return 0;
  }
  if (v3) {
    return v7 && (v4 == v5 && v3 == v7 || (sub_1AFFCBCE8() & 1) != 0);
  }
  return !v7;
}

uint64_t sub_1AFF26858()
{
  unint64_t v0 = sub_1AFFCBA78();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_1AFF268A4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  BOOL v24 = a2;
  sub_1AFF27C6C(0, &qword_1EB819F30, (uint64_t (*)(void))sub_1AFF27A04, (uint64_t)&type metadata for SDSMetadata.Source.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  BOOL v8 = (char *)&v22 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFF27A04();
  sub_1AFFCBE68();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  char v28 = 0;
  uint64_t v10 = v5;
  uint64_t v11 = sub_1AFFCBB18();
  uint64_t v13 = v12;
  sub_1AFF27A58();
  char v27 = 1;
  sub_1AFF27B04(&qword_1EB819CC0, (void (*)(void))sub_1AFF27AB0);
  sub_1AFFC8E38();
  sub_1AFFCBAF8();
  char v26 = 2;
  uint64_t v23 = v25;
  sub_1AFFC8E38();
  uint64_t v14 = sub_1AFFCBAA8();
  uint64_t v16 = v15;
  uint64_t v17 = v14;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v10);
  sub_1AFFC8E38();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t v18 = v23;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v20 = v11;
  uint64_t v21 = v24;
  *BOOL v24 = v20;
  v21[1] = v13;
  v21[2] = v18;
  v21[3] = v17;
  v21[4] = v16;
  return result;
}

uint64_t sub_1AFF26BC4()
{
  unint64_t v0 = sub_1AFFCBA78();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

unint64_t sub_1AFF26C10(void *a1)
{
  unint64_t v3 = (unint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFFCBE48();
  if (!v1)
  {
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    sub_1AFFCBCF8();
    LODWORD(v3) = sub_1AFF26BC4();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
    if (v3 == 4) {
      unint64_t v3 = 0;
    }
    else {
      unint64_t v3 = v3;
    }
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v3;
}

uint64_t sub_1AFF26CE4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 7107189 && a2 == 0xE300000000000000;
  if (v2 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E6169726176 && a2 == 0xE700000000000000 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656E696C65736162 && a2 == 0xEE0074657366664FLL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1AFFCBCE8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1AFF26E50@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  sub_1AFF27C6C(0, &qword_1EB819F28, (uint64_t (*)(void))sub_1AFF27BC4, (uint64_t)&type metadata for SDSMetadata.SourceLogo.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  BOOL v8 = (char *)&v19 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFF27BC4();
  sub_1AFFCBE68();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  uint64_t v10 = v20;
  char v25 = 0;
  uint64_t v11 = sub_1AFFCBB18();
  uint64_t v13 = v12;
  char v23 = 1;
  sub_1AFF27C18();
  sub_1AFFC8E38();
  sub_1AFFCBB58();
  int v21 = v24;
  char v22 = 2;
  uint64_t v14 = sub_1AFFCBAC8();
  uint64_t v15 = v8;
  char v17 = v16;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v5);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)uint64_t v10 = v11;
  *(void *)(v10 + 8) = v13;
  *(unsigned char *)(v10 + 16) = v21;
  *(void *)(v10 + 24) = v14;
  *(unsigned char *)(v10 + 32) = v17 & 1;
  return result;
}

uint64_t sub_1AFF270DC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v18 = a2;
  sub_1AFF27C6C(0, &qword_1EB819F20, (uint64_t (*)(void))sub_1AFF272BC, (uint64_t)&type metadata for SDSMetadata.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  BOOL v8 = (char *)&v13 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFF272BC();
  sub_1AFFCBE68();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v18;
  sub_1AFF27310();
  sub_1AFFCBB58();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  long long v13 = v16;
  long long v14 = v15;
  uint64_t v10 = v17;
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  long long v12 = v13;
  *(_OWORD *)uint64_t v9 = v14;
  *(_OWORD *)(v9 + 16) = v12;
  *(void *)(v9 + 32) = v10;
  return result;
}

unint64_t sub_1AFF272BC()
{
  unint64_t result = qword_1EB818C30;
  if (!qword_1EB818C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818C30);
  }
  return result;
}

unint64_t sub_1AFF27310()
{
  unint64_t result = qword_1EB818C88;
  if (!qword_1EB818C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818C88);
  }
  return result;
}

unint64_t sub_1AFF27364()
{
  unint64_t result = qword_1EB816DB8;
  if (!qword_1EB816DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816DB8);
  }
  return result;
}

uint64_t sub_1AFF273B8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1AFF27420(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for SDSMetadata.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1AFF2751CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SDSMetadata.CodingKeys()
{
  return &type metadata for SDSMetadata.CodingKeys;
}

uint64_t initializeWithCopy for SDSMetadata.SourceLogo(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  sub_1AFFC8E38();
  return a1;
}

uint64_t assignWithCopy for SDSMetadata.SourceLogo(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v4;
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for SDSMetadata.SourceLogo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for SDSMetadata.SourceLogo(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 33)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SDSMetadata.SourceLogo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SDSMetadata.SourceLogo()
{
  return &type metadata for SDSMetadata.SourceLogo;
}

void *_s10StocksCore11SDSMetadataV6SourceVwcp_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  return a1;
}

void *_s10StocksCore11SDSMetadataV6SourceVwca_0(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s10StocksCore11SDSMetadataV6SourceVwta_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SDSMetadata.Source()
{
  return &type metadata for SDSMetadata.Source;
}

unint64_t sub_1AFF27850()
{
  unint64_t result = qword_1E9AFCA30;
  if (!qword_1E9AFCA30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFCA30);
  }
  return result;
}

unint64_t sub_1AFF278A8()
{
  unint64_t result = qword_1E9AFCA38;
  if (!qword_1E9AFCA38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFCA38);
  }
  return result;
}

unint64_t sub_1AFF27900()
{
  unint64_t result = qword_1E9AFCA40;
  if (!qword_1E9AFCA40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFCA40);
  }
  return result;
}

unint64_t sub_1AFF27958()
{
  unint64_t result = qword_1EB818C40;
  if (!qword_1EB818C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818C40);
  }
  return result;
}

unint64_t sub_1AFF279B0()
{
  unint64_t result = qword_1EB818C38;
  if (!qword_1EB818C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818C38);
  }
  return result;
}

unint64_t sub_1AFF27A04()
{
  unint64_t result = qword_1EB818C70;
  if (!qword_1EB818C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818C70);
  }
  return result;
}

void sub_1AFF27A58()
{
  if (!qword_1EB819CB8)
  {
    unint64_t v0 = sub_1AFFCB288();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB819CB8);
    }
  }
}

unint64_t sub_1AFF27AB0()
{
  unint64_t result = qword_1EB818C68;
  if (!qword_1EB818C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818C68);
  }
  return result;
}

uint64_t sub_1AFF27B04(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1AFF27A58();
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1AFF27B70()
{
  unint64_t result = qword_1EB816DB0;
  if (!qword_1EB816DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816DB0);
  }
  return result;
}

unint64_t sub_1AFF27BC4()
{
  unint64_t result = qword_1EB818C48;
  if (!qword_1EB818C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818C48);
  }
  return result;
}

unint64_t sub_1AFF27C18()
{
  unint64_t result = qword_1EB818C60;
  if (!qword_1EB818C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818C60);
  }
  return result;
}

void sub_1AFF27C6C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_1AFF27CD4()
{
  unint64_t result = qword_1EB816DA0;
  if (!qword_1EB816DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816DA0);
  }
  return result;
}

ValueMetadata *type metadata accessor for SDSMetadata.SourceLogo.CodingKeys()
{
  return &type metadata for SDSMetadata.SourceLogo.CodingKeys;
}

unsigned char *_s10StocksCore11SDSMetadataV10SourceLogoV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFF27E08);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SDSMetadata.Source.CodingKeys()
{
  return &type metadata for SDSMetadata.Source.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for SDSMetadata.SourceLogo.Variant(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFF27F0CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SDSMetadata.SourceLogo.Variant()
{
  return &type metadata for SDSMetadata.SourceLogo.Variant;
}

unint64_t sub_1AFF27F48()
{
  unint64_t result = qword_1E9AFCA48;
  if (!qword_1E9AFCA48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFCA48);
  }
  return result;
}

unint64_t sub_1AFF27FA0()
{
  unint64_t result = qword_1E9AFCA50;
  if (!qword_1E9AFCA50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFCA50);
  }
  return result;
}

unint64_t sub_1AFF27FF8()
{
  unint64_t result = qword_1E9AFCA58;
  if (!qword_1E9AFCA58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFCA58);
  }
  return result;
}

unint64_t sub_1AFF28050()
{
  unint64_t result = qword_1EB818C58;
  if (!qword_1EB818C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818C58);
  }
  return result;
}

unint64_t sub_1AFF280A8()
{
  unint64_t result = qword_1EB818C50;
  if (!qword_1EB818C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818C50);
  }
  return result;
}

unint64_t sub_1AFF28100()
{
  unint64_t result = qword_1EB818C80;
  if (!qword_1EB818C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818C80);
  }
  return result;
}

unint64_t sub_1AFF28158()
{
  unint64_t result = qword_1EB818C78;
  if (!qword_1EB818C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818C78);
  }
  return result;
}

unint64_t sub_1AFF281AC()
{
  unint64_t result = qword_1EB816DA8;
  if (!qword_1EB816DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816DA8);
  }
  return result;
}

uint64_t CohortConfig.dilutionFactor.getter()
{
  return *(void *)v0;
}

uint64_t CohortConfig.favoritedBoost.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t CohortConfig.globalWeight.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t CohortConfig.paddingFactor.getter()
{
  return *(void *)(v0 + 48);
}

uint64_t CohortConfig.postBaselineCurvature.getter()
{
  return *(void *)(v0 + 64);
}

uint64_t CohortConfig.preBaselineCurvature.getter()
{
  return *(void *)(v0 + 80);
}

uint64_t CohortConfig.userBaseline.getter()
{
  return *(void *)(v0 + 96);
}

unint64_t sub_1AFF28254(char a1)
{
  unint64_t result = 0x6E6F6974756C6964;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x657469726F766166;
      break;
    case 2:
      unint64_t result = 0x65576C61626F6C67;
      break;
    case 3:
      unint64_t result = 0x46676E6964646170;
      break;
    case 4:
      unint64_t result = 0xD000000000000015;
      break;
    case 5:
      unint64_t result = 0xD000000000000014;
      break;
    case 6:
      unint64_t result = 0x6573614272657375;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1AFF2837C(char a1)
{
  unint64_t result = 0x6E6F6974756C6964;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x657469726F766166;
      break;
    case 2:
      unint64_t result = 0x65576C61626F6C67;
      break;
    case 3:
      unint64_t result = 0x46676E6964646170;
      break;
    case 4:
      unint64_t result = 0xD000000000000015;
      break;
    case 5:
      unint64_t result = 0xD000000000000014;
      break;
    case 6:
      unint64_t result = 0x6573614272657375;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1AFF284A4(unsigned __int8 *a1, char *a2)
{
  return sub_1AFDF0150(*a1, *a2);
}

uint64_t sub_1AFF284B0()
{
  return sub_1AFF9B3A8();
}

uint64_t sub_1AFF284BC()
{
  return sub_1AFD782F4();
}

uint64_t sub_1AFF284C4()
{
  return sub_1AFF9B3A8();
}

uint64_t sub_1AFF284CC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFF29574();
  *a1 = result;
  return result;
}

unint64_t sub_1AFF284FC@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1AFF28254(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1AFF28528()
{
  return sub_1AFF2837C(*v0);
}

uint64_t sub_1AFF28530@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFF29574();
  *a1 = result;
  return result;
}

uint64_t sub_1AFF28558(uint64_t a1)
{
  unint64_t v2 = sub_1AFF28950();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFF28594(uint64_t a1)
{
  unint64_t v2 = sub_1AFF28950();

  return MEMORY[0x1F41862B0](a1, v2);
}

void __swiftcall CohortConfig.init(dilutionFactor:favoritedBoost:globalWeight:paddingFactor:postBaselineCurvature:preBaselineCurvature:userBaseline:)(StocksCore::CohortConfig *__return_ptr retstr, Swift::Double_optional dilutionFactor, Swift::Double_optional favoritedBoost, Swift::Double_optional globalWeight, Swift::Double_optional paddingFactor, Swift::Double_optional postBaselineCurvature, Swift::Double_optional preBaselineCurvature, Swift::Double_optional userBaseline)
{
  retstr->dilutionFactor.value = *(Swift::Double *)&dilutionFactor.is_nil;
  retstr->dilutionFactor.is_nil = favoritedBoost.is_nil;
  retstr->favoritedBoost.value = *(Swift::Double *)&globalWeight.is_nil;
  retstr->favoritedBoost.is_nil = paddingFactor.is_nil;
  retstr->globalWeight.value = *(Swift::Double *)&postBaselineCurvature.is_nil;
  retstr->globalWeight.is_nil = preBaselineCurvature.is_nil;
  retstr->paddingFactor.value = *(Swift::Double *)&userBaseline.is_nil;
  retstr->paddingFactor.is_nil = v8 & 1;
  retstr->postBaselineCurvature.value = v9;
  retstr->postBaselineCurvature.is_nil = v10 & 1;
  retstr->preBaselineCurvature.value = v11;
  retstr->preBaselineCurvature.is_nil = v12 & 1;
  retstr->userBaseline.value = v13;
  retstr->userBaseline.is_nil = v14 & 1;
}

uint64_t CohortConfig.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1AFF28C74(0, &qword_1EB819F38, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  Swift::Double v9 = (char *)&v28 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFF28950();
  sub_1AFFCBE68();
  if (!v2)
  {
    char v44 = 0;
    uint64_t v10 = sub_1AFFCBAC8();
    char v12 = v11;
    char v43 = 1;
    uint64_t v13 = sub_1AFFCBAC8();
    int v36 = v14;
    uint64_t v37 = v13;
    char v42 = 2;
    uint64_t v15 = sub_1AFFCBAC8();
    int v34 = v16;
    uint64_t v35 = v15;
    char v41 = 3;
    uint64_t v17 = sub_1AFFCBAC8();
    int v32 = v18;
    uint64_t v33 = v17;
    char v40 = 4;
    uint64_t v19 = sub_1AFFCBAC8();
    int v30 = v20;
    uint64_t v31 = v19;
    char v39 = 5;
    uint64_t v21 = sub_1AFFCBAC8();
    HIDWORD(v28) = v22;
    uint64_t v29 = v21;
    char v38 = 6;
    uint64_t v24 = sub_1AFFCBAC8();
    char v25 = v9;
    char v27 = v26;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v25, v6);
    *(void *)a2 = v10;
    *(unsigned char *)(a2 + 8) = v12 & 1;
    *(void *)(a2 + 16) = v37;
    *(unsigned char *)(a2 + 24) = v36 & 1;
    *(void *)(a2 + 32) = v35;
    *(unsigned char *)(a2 + 40) = v34 & 1;
    *(void *)(a2 + 48) = v33;
    *(unsigned char *)(a2 + 56) = v32 & 1;
    *(void *)(a2 + 64) = v31;
    *(unsigned char *)(a2 + 72) = v30 & 1;
    *(void *)(a2 + 80) = v29;
    *(unsigned char *)(a2 + 88) = BYTE4(v28) & 1;
    *(void *)(a2 + 96) = v24;
    *(unsigned char *)(a2 + 104) = v27 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1AFF28950()
{
  unint64_t result = qword_1EB818D00;
  if (!qword_1EB818D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818D00);
  }
  return result;
}

uint64_t CohortConfig.encode(to:)(void *a1)
{
  sub_1AFF28C74(0, &qword_1EB81A000, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v12 - v6;
  uint64_t v23 = *(void *)(v1 + 16);
  int v22 = *(unsigned __int8 *)(v1 + 24);
  uint64_t v21 = *(void *)(v1 + 32);
  int v20 = *(unsigned __int8 *)(v1 + 40);
  uint64_t v19 = *(void *)(v1 + 48);
  int v18 = *(unsigned __int8 *)(v1 + 56);
  uint64_t v17 = *(void *)(v1 + 64);
  int v8 = *(unsigned __int8 *)(v1 + 72);
  uint64_t v9 = *(void *)(v1 + 80);
  int v15 = *(unsigned __int8 *)(v1 + 88);
  int v16 = v8;
  uint64_t v13 = *(void *)(v1 + 96);
  uint64_t v14 = v9;
  v12[1] = *(unsigned __int8 *)(v1 + 104);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFF28950();
  sub_1AFFCBE78();
  char v31 = 0;
  uint64_t v10 = v24;
  sub_1AFFCBBB8();
  if (!v10)
  {
    char v30 = 1;
    sub_1AFFCBBB8();
    char v29 = 2;
    sub_1AFFCBBB8();
    char v28 = 3;
    sub_1AFFCBBB8();
    char v27 = 4;
    sub_1AFFCBBB8();
    char v26 = 5;
    sub_1AFFCBBB8();
    char v25 = 6;
    sub_1AFFCBBB8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_1AFF28C74(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1AFF28950();
    unint64_t v7 = a3(a1, &type metadata for CohortConfig.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t CohortConfig.hash(into:)()
{
  int v1 = v0[24];
  int v7 = v0[40];
  int v2 = v0[56];
  int v3 = v0[72];
  int v4 = v0[88];
  int v5 = v0[104];
  if (v0[8] == 1)
  {
    sub_1AFFCBE18();
    if (!v1) {
      goto LABEL_3;
    }
  }
  else
  {
    sub_1AFFCBE18();
    sub_1AFFCBE28();
    if (!v1)
    {
LABEL_3:
      sub_1AFFCBE18();
      sub_1AFFCBE28();
      if (!v7) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  sub_1AFFCBE18();
  if (!v7)
  {
LABEL_4:
    sub_1AFFCBE18();
    sub_1AFFCBE28();
    if (!v2) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  sub_1AFFCBE18();
  if (!v2)
  {
LABEL_5:
    sub_1AFFCBE18();
    sub_1AFFCBE28();
    if (!v3) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
LABEL_12:
  sub_1AFFCBE18();
  if (!v3)
  {
LABEL_6:
    sub_1AFFCBE18();
    sub_1AFFCBE28();
    if (!v4) {
      goto LABEL_7;
    }
LABEL_14:
    sub_1AFFCBE18();
    if (!v5) {
      goto LABEL_8;
    }
    return sub_1AFFCBE18();
  }
LABEL_13:
  sub_1AFFCBE18();
  if (v4) {
    goto LABEL_14;
  }
LABEL_7:
  sub_1AFFCBE18();
  sub_1AFFCBE28();
  if (!v5)
  {
LABEL_8:
    sub_1AFFCBE18();
    return sub_1AFFCBE28();
  }
  return sub_1AFFCBE18();
}

uint64_t CohortConfig.hashValue.getter()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFF28F6C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return CohortConfig.init(from:)(a1, a2);
}

uint64_t sub_1AFF28F84(void *a1)
{
  return CohortConfig.encode(to:)(a1);
}

uint64_t sub_1AFF28FA0()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFF29058()
{
  return sub_1AFFCBE38();
}

uint64_t _s10StocksCore12CohortConfigV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)(a1 + 16);
  char v3 = *(unsigned char *)(a1 + 24);
  double v4 = *(double *)(a1 + 32);
  char v5 = *(unsigned char *)(a1 + 40);
  double v6 = *(double *)(a1 + 48);
  char v7 = *(unsigned char *)(a1 + 56);
  double v8 = *(double *)(a1 + 64);
  char v9 = *(unsigned char *)(a1 + 72);
  double v10 = *(double *)(a1 + 80);
  char v11 = *(unsigned char *)(a1 + 88);
  double v12 = *(double *)(a1 + 96);
  int v13 = *(unsigned __int8 *)(a1 + 104);
  int v14 = *(unsigned __int8 *)(a2 + 88);
  unsigned int v15 = *(unsigned __int8 *)(a2 + 104);
  if (*(unsigned char *)(a1 + 8))
  {
    if (!*(unsigned char *)(a2 + 8)) {
      return 0;
    }
  }
  else
  {
    if (*(double *)a1 == *(double *)a2) {
      char v17 = *(unsigned char *)(a2 + 8);
    }
    else {
      char v17 = 1;
    }
    if (v17) {
      return 0;
    }
  }
  if (v3)
  {
    if (!*(unsigned char *)(a2 + 24)) {
      return 0;
    }
  }
  else
  {
    if (v2 == *(double *)(a2 + 16)) {
      char v18 = *(unsigned char *)(a2 + 24);
    }
    else {
      char v18 = 1;
    }
    if (v18) {
      return 0;
    }
  }
  if (v5)
  {
    if (!*(unsigned char *)(a2 + 40)) {
      return 0;
    }
  }
  else
  {
    if (v4 == *(double *)(a2 + 32)) {
      char v19 = *(unsigned char *)(a2 + 40);
    }
    else {
      char v19 = 1;
    }
    if (v19) {
      return 0;
    }
  }
  if (v7)
  {
    if (!*(unsigned char *)(a2 + 56)) {
      return 0;
    }
  }
  else
  {
    if (v6 == *(double *)(a2 + 48)) {
      char v20 = *(unsigned char *)(a2 + 56);
    }
    else {
      char v20 = 1;
    }
    if (v20) {
      return 0;
    }
  }
  if (v9)
  {
    if (!*(unsigned char *)(a2 + 72)) {
      return 0;
    }
  }
  else
  {
    if (v8 == *(double *)(a2 + 64)) {
      char v21 = *(unsigned char *)(a2 + 72);
    }
    else {
      char v21 = 1;
    }
    if (v21) {
      return 0;
    }
  }
  if (v11)
  {
    if ((v14 ^ 1 | v13)) {
      return v14 & v15;
    }
  }
  else
  {
    if (v10 == *(double *)(a2 + 80)) {
      int v22 = *(unsigned __int8 *)(a2 + 88);
    }
    else {
      int v22 = 1;
    }
    if ((v22 | v13)) {
      return v15 & ~v22;
    }
  }
  return (v12 == *(double *)(a2 + 96)) & ~v15;
}

unint64_t sub_1AFF29270()
{
  unint64_t result = qword_1E9AFCA60;
  if (!qword_1E9AFCA60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFCA60);
  }
  return result;
}

__n128 __swift_memcpy105_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(_OWORD *)(a1 + 89) = *(long long *)((char *)a2 + 89);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for CohortConfig(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 105)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for CohortConfig(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 104) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 105) = v3;
  return result;
}

ValueMetadata *type metadata accessor for CohortConfig()
{
  return &type metadata for CohortConfig;
}

unsigned char *storeEnumTagSinglePayload for CohortConfig.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *__n128 result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFF29434);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CohortConfig.CodingKeys()
{
  return &type metadata for CohortConfig.CodingKeys;
}

unint64_t sub_1AFF29470()
{
  unint64_t result = qword_1E9AFCA68;
  if (!qword_1E9AFCA68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFCA68);
  }
  return result;
}

unint64_t sub_1AFF294C8()
{
  unint64_t result = qword_1EB818D10;
  if (!qword_1EB818D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818D10);
  }
  return result;
}

unint64_t sub_1AFF29520()
{
  unint64_t result = qword_1EB818D08;
  if (!qword_1EB818D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818D08);
  }
  return result;
}

uint64_t sub_1AFF29574()
{
  unint64_t v0 = sub_1AFFCBA78();
  swift_bridgeObjectRelease();
  if (v0 >= 7) {
    return 7;
  }
  else {
    return v0;
  }
}

unint64_t sub_1AFF295C0(char a1)
{
  unint64_t result = 0x6F626D79735F6469;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6563697270;
      break;
    case 2:
      unint64_t result = 0x65676E616863;
      break;
    case 3:
      unint64_t result = 0x635F74656B72616DLL;
      break;
    case 4:
      unint64_t result = 0x6B6D5F7265746661;
      break;
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    case 6:
    case 7:
      unint64_t result = 0x5F746B6D5F657270;
      break;
    case 8:
      unint64_t result = 0x79636E6572727563;
      break;
    case 9:
      unint64_t result = 0x65676E6168637865;
      break;
    case 10:
      unint64_t result = 0x616E5F74726F6873;
      break;
    case 11:
      unint64_t result = 0x7079745F61746164;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1AFF2975C(char a1)
{
  unint64_t result = 0x6F626D79735F6469;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6563697270;
      break;
    case 2:
      unint64_t result = 0x65676E616863;
      break;
    case 3:
      unint64_t result = 0x635F74656B72616DLL;
      break;
    case 4:
      unint64_t result = 0x6B6D5F7265746661;
      break;
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    case 6:
    case 7:
      unint64_t result = 0x5F746B6D5F657270;
      break;
    case 8:
      unint64_t result = 0x79636E6572727563;
      break;
    case 9:
      unint64_t result = 0x65676E6168637865;
      break;
    case 10:
      unint64_t result = 0x616E5F74726F6873;
      break;
    case 11:
      unint64_t result = 0x7079745F61746164;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1AFF298F8(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_1AFF2A64C(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_1AFF295C0);
}

uint64_t sub_1AFF29910(uint64_t a1, uint64_t a2)
{
  return sub_1AFF2A6FC(a1, a2, (void (*)(uint64_t))sub_1AFF295C0);
}

uint64_t sub_1AFF29928(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AFF2A780(a1, a2, a3, (void (*)(void))sub_1AFF295C0);
}

uint64_t sub_1AFF29940(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AFF2A7F0(a1, a2, a3, (void (*)(uint64_t))sub_1AFF295C0);
}

uint64_t sub_1AFF29958@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFF2C248();
  *a1 = result;
  return result;
}

unint64_t sub_1AFF29988@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1AFF295C0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1AFF299B4()
{
  return sub_1AFF2975C(*v0);
}

uint64_t sub_1AFF299BC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFF2C248();
  *a1 = result;
  return result;
}

uint64_t sub_1AFF299E4(uint64_t a1)
{
  unint64_t v2 = sub_1AFF31990();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFF29A20(uint64_t a1)
{
  unint64_t v2 = sub_1AFF31990();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFF29A5C()
{
  unint64_t v0 = sub_1AFFCBA78();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t sub_1AFF29AAC(char a1)
{
  uint64_t result = 7823730;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6E69727453776172;
      break;
    case 2:
      uint64_t result = 7630182;
      break;
    case 3:
      uint64_t result = 0x756F735F61746164;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1AFF29B38(char a1)
{
  uint64_t result = 7823730;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6E69727453776172;
      break;
    case 2:
      uint64_t result = 7630182;
      break;
    case 3:
      uint64_t result = 0x756F735F61746164;
      break;
    default:
      return result;
  }
  return result;
}

void *sub_1AFF29BC4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1AFF2C294(a1, __src);
  if (!v2) {
    return memcpy(a2, __src, 0x1D8uLL);
  }
  return result;
}

uint64_t sub_1AFF29C18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1C8];

  return MEMORY[0x1F4185BB0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1AFF29C8C(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x1E4FBB1B0];

  return MEMORY[0x1F4183DE0](a1, a2, WitnessTable, v5);
}

uint64_t sub_1AFF29CF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1B0];

  return MEMORY[0x1F4183DF0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1AFF29D68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1B0];

  return MEMORY[0x1F4183DE8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1AFF29DD8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFF29A5C();
  *a1 = result;
  return result;
}

uint64_t sub_1AFF29E08@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1AFF29AAC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1AFF29E34()
{
  return sub_1AFF29B38(*v0);
}

uint64_t sub_1AFF29E3C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFF29AA8();
  *a1 = result;
  return result;
}

uint64_t sub_1AFF29E64@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFF2D01C();
  *a1 = result;
  return result;
}

uint64_t sub_1AFF29E90(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1AFF29EE4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t sub_1AFF29F38@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v49 = a4;
  uint64_t v7 = sub_1AFFCB658();
  uint64_t v47 = *(void *)(v7 - 8);
  uint64_t v48 = v7;
  MEMORY[0x1F4188790](v7);
  int v50 = (char *)&v41 - v8;
  uint64_t v52 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v46 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for YahooMultiQuoteResponse.Value.CodingKeys();
  swift_getWitnessTable();
  uint64_t v55 = sub_1AFFCBB78();
  uint64_t v53 = *(void *)(v55 - 8);
  MEMORY[0x1F4188790](v55);
  double v12 = (char *)&v41 - v11;
  uint64_t v51 = a3;
  uint64_t v13 = type metadata accessor for YahooMultiQuoteResponse.Value();
  uint64_t v45 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  unsigned int v15 = (char *)&v41 - v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  char v54 = v12;
  uint64_t v16 = v56;
  sub_1AFFCBE68();
  if (v16) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v17 = v53;
  char v59 = 0;
  uint64_t v18 = sub_1AFFCBB18();
  uint64_t v20 = v13;
  char v21 = (uint64_t *)&v15[*(int *)(v13 + 36)];
  *char v21 = v18;
  v21[1] = v22;
  char v58 = 2;
  uint64_t v23 = v18;
  uint64_t v24 = v22;
  sub_1AFFC8E38();
  uint64_t v25 = sub_1AFFCBB18();
  uint64_t v43 = v23;
  uint64_t v44 = 0;
  uint64_t v56 = v24;
  char v27 = (uint64_t *)&v15[*(int *)(v20 + 40)];
  *char v27 = v25;
  v27[1] = v26;
  char v57 = 3;
  uint64_t v28 = sub_1AFFCBB18();
  uint64_t v29 = v20;
  char v42 = a1;
  char v30 = (uint64_t *)&v15[*(int *)(v20 + 44)];
  uint64_t *v30 = v28;
  v30[1] = v31;
  int v32 = v50;
  sub_1AFFCBCB8();
  uint64_t v33 = v32;
  uint64_t v34 = v52;
  int v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v52 + 48))(v33, 1, a2);
  int v36 = v54;
  if (v35 == 1)
  {
    (*(void (**)(char *, uint64_t))(v47 + 8))(v33, v48);
    type metadata accessor for YahooMultiQuoteResponse.Value.ValueError();
    swift_getWitnessTable();
    swift_allocError();
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v36, v55);
    uint64_t v37 = v44;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
    swift_bridgeObjectRelease();
    if (!v37) {
      swift_bridgeObjectRelease();
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v54, v55);
    char v38 = *(void (**)(char *, char *, uint64_t))(v34 + 32);
    char v39 = v46;
    v38(v46, v33, a2);
    v38(v15, v39, a2);
    uint64_t v40 = v45;
    (*(void (**)(uint64_t, char *, uint64_t))(v45 + 16))(v49, v15, v29);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
    return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v15, v29);
  }
}

unint64_t sub_1AFF2A4C8(char a1)
{
  unint64_t result = 0x5F52414C55474552;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x4B52414D5F455250;
      break;
    case 2:
      unint64_t result = 0xD000000000000014;
      break;
    case 3:
    case 4:
    case 9:
      unint64_t result = 0xD000000000000011;
      break;
    case 5:
      unint64_t result = 0xD000000000000015;
      break;
    case 6:
      unint64_t result = 0x435F54454B52414DLL;
      break;
    case 7:
      unint64_t result = 0xD000000000000015;
      break;
    case 8:
      unint64_t result = 0xD000000000000015;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1AFF2A614@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1AFF29F38(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t sub_1AFF2A634(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_1AFF2A64C(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_1AFF2A4C8);
}

uint64_t sub_1AFF2A64C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v6 = *a2;
  uint64_t v7 = a5(*a1);
  uint64_t v9 = v8;
  if (v7 == a5(v6) && v9 == v10) {
    char v12 = 1;
  }
  else {
    char v12 = sub_1AFFCBCE8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12 & 1;
}

uint64_t sub_1AFF2A6E4(uint64_t a1, uint64_t a2)
{
  return sub_1AFF2A6FC(a1, a2, (void (*)(uint64_t))sub_1AFF2A4C8);
}

uint64_t sub_1AFF2A6FC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v5 = *v3;
  sub_1AFFCBDF8();
  a3(v5);
  sub_1AFFCAF68();
  swift_bridgeObjectRelease();
  return sub_1AFFCBE38();
}

uint64_t sub_1AFF2A768(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AFF2A780(a1, a2, a3, (void (*)(void))sub_1AFF2A4C8);
}

uint64_t sub_1AFF2A780(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  a4(*v4);
  sub_1AFFCAF68();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFF2A7D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AFF2A7F0(a1, a2, a3, (void (*)(uint64_t))sub_1AFF2A4C8);
}

uint64_t sub_1AFF2A7F0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v6 = *v4;
  sub_1AFFCBDF8();
  a4(v6);
  sub_1AFFCAF68();
  swift_bridgeObjectRelease();
  return sub_1AFFCBE38();
}

uint64_t sub_1AFF2A858@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFF2D024();
  *a1 = result;
  return result;
}

unint64_t sub_1AFF2A888@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1AFF2A4C8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1AFF2A8B4(char *a1, char *a2)
{
  return sub_1AFDED304(*a1, *a2);
}

uint64_t sub_1AFF2A8C0()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFF2A9B0()
{
  sub_1AFFCAF68();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFF2AA88()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFF2AB74@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFF2D070();
  *a1 = result;
  return result;
}

void sub_1AFF2ABA4(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE200000000000000;
  uint64_t v3 = 25705;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE400000000000000;
      uint64_t v3 = 1701667182;
      goto LABEL_3;
    case 2:
      *a1 = 0x737574617473;
      a1[1] = 0xE600000000000000;
      break;
    case 3:
      *a1 = 0x695F6D6165727473;
      a1[1] = 0xEF6C61767265746ELL;
      break;
    case 4:
      *a1 = 0x65706F5F7478656ELL;
      a1[1] = 0xE90000000000006ELL;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1AFF2AC58()
{
  uint64_t result = 25705;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1701667182;
      break;
    case 2:
      uint64_t result = 0x737574617473;
      break;
    case 3:
      uint64_t result = 0x695F6D6165727473;
      break;
    case 4:
      uint64_t result = 0x65706F5F7478656ELL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1AFF2ACFC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFF2D070();
  *a1 = result;
  return result;
}

uint64_t sub_1AFF2AD24(uint64_t a1)
{
  unint64_t v2 = sub_1AFF2E7A8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFF2AD60(uint64_t a1)
{
  unint64_t v2 = sub_1AFF2E7A8();

  return MEMORY[0x1F41862B0](a1, v2);
}

unint64_t sub_1AFF2AD9C(char a1)
{
  unint64_t result = 0xD000000000000020;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000026;
      break;
    case 2:
      unint64_t result = 0xD000000000000022;
      break;
    case 3:
      unint64_t result = 0xD000000000000026;
      break;
    case 4:
    case 5:
      unint64_t result = 0xD000000000000025;
      break;
    case 6:
      unint64_t result = 0x4E574F4E4B4E55;
      break;
    default:
      return result;
  }
  return result;
}

__n128 sub_1AFF2AE74@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1AFF2D0BC(a1, (uint64_t *)v6);
  if (!v2)
  {
    long long v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(void *)(a2 + 64) = v7;
    __n128 result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_1AFF2AEC8(char *a1, char *a2)
{
  return sub_1AFDED4C4(*a1, *a2);
}

uint64_t sub_1AFF2AED4()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFF2AF44()
{
  sub_1AFFCAF68();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFF2AFA0()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFF2B00C@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1AFFCBA78();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1AFF2B06C(uint64_t *a1@<X8>)
{
  uint64_t v2 = 25705;
  if (*v1) {
    uint64_t v2 = 1701667182;
  }
  unint64_t v3 = 0xE200000000000000;
  if (*v1) {
    unint64_t v3 = 0xE400000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1AFF2B098()
{
  if (*v0) {
    return 1701667182;
  }
  else {
    return 25705;
  }
}

uint64_t sub_1AFF2B0C0@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1AFFCBA78();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1AFF2B124(uint64_t a1)
{
  unint64_t v2 = sub_1AFF2E7FC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFF2B160(uint64_t a1)
{
  unint64_t v2 = sub_1AFF2E7FC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFF2B19C(unsigned __int8 *a1, char *a2)
{
  return sub_1AFDED558(*a1, *a2);
}

uint64_t sub_1AFF2B1A8()
{
  return sub_1AFF9BCEC();
}

uint64_t sub_1AFF2B1B4()
{
  return sub_1AFD77C78();
}

uint64_t sub_1AFF2B1BC()
{
  return sub_1AFF9BCEC();
}

uint64_t sub_1AFF2B1C4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFF2D4CC();
  *a1 = result;
  return result;
}

unint64_t sub_1AFF2B1F4@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1AFF2AD9C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1AFF2B220@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1AFF2D518(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(unsigned char *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_1AFF2B250@<X0>(BOOL *a1@<X8>)
{
  return sub_1AFDF5AC0(a1);
}

uint64_t sub_1AFF2B25C@<X0>(BOOL *a1@<X8>)
{
  return sub_1AFDF5B38(a1);
}

uint64_t sub_1AFF2B268(uint64_t a1)
{
  unint64_t v2 = sub_1AFF2F04C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFF2B2A4(uint64_t a1)
{
  unint64_t v2 = sub_1AFF2F04C();

  return MEMORY[0x1F41862B0](a1, v2);
}

void *sub_1AFF2B2E0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1AFF2D73C(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_1AFF2B310(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1AFDED75C(*a1, *a2);
}

uint64_t sub_1AFF2B31C()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFF2B3C8()
{
  sub_1AFFCAF68();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFF2B460()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFF2B508@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFF2D8F4();
  *a1 = result;
  return result;
}

void sub_1AFF2B538(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE600000000000000;
  unint64_t v4 = 0xE900000000000073;
  uint64_t v5 = 0x65676E6168637865;
  if (v2 != 1)
  {
    uint64_t v5 = 0x756F735F61746164;
    unint64_t v4 = 0xEC00000073656372;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x7365746F7571;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1AFF2B5A0()
{
  uint64_t v1 = 0x65676E6168637865;
  if (*v0 != 1) {
    uint64_t v1 = 0x756F735F61746164;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x7365746F7571;
  }
}

uint64_t sub_1AFF2B604@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFF2D8F4();
  *a1 = result;
  return result;
}

uint64_t sub_1AFF2B62C(uint64_t a1)
{
  unint64_t v2 = sub_1AFF2F428();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFF2B668(uint64_t a1)
{
  unint64_t v2 = sub_1AFF2F428();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFF2B6A4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1AFF2D940(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_1AFF2B6D4@<X0>(BOOL *a1@<X8>)
{
  return sub_1AFDF5AC0(a1);
}

uint64_t sub_1AFF2B6E0@<X0>(BOOL *a1@<X8>)
{
  return sub_1AFDF5B38(a1);
}

uint64_t sub_1AFF2B6EC(uint64_t a1)
{
  unint64_t v2 = sub_1AFF2F7B4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFF2B728(uint64_t a1)
{
  unint64_t v2 = sub_1AFF2F7B4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFF2B764@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1AFF2DC24(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1AFF2B790()
{
  return sub_1AFDF5A00();
}

uint64_t sub_1AFF2B7A8()
{
  return sub_1AFFCAF68();
}

uint64_t sub_1AFF2B7C0()
{
  return sub_1AFDF5A68();
}

uint64_t sub_1AFF2B7D8@<X0>(BOOL *a1@<X8>)
{
  return sub_1AFDF5AC0(a1);
}

void sub_1AFF2B7E4(void *a1@<X8>)
{
  *a1 = 0x65676E6168637865;
  a1[1] = 0xE800000000000000;
}

uint64_t sub_1AFF2B800()
{
  return 0x65676E6168637865;
}

uint64_t sub_1AFF2B818@<X0>(BOOL *a1@<X8>)
{
  return sub_1AFDF5B38(a1);
}

uint64_t sub_1AFF2B824(uint64_t a1)
{
  unint64_t v2 = sub_1AFF2F85C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFF2B860(uint64_t a1)
{
  unint64_t v2 = sub_1AFF2F85C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFF2B89C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1AFF2DEE4(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1AFF2B8C8()
{
  return sub_1AFDF5A00();
}

uint64_t sub_1AFF2B8E8()
{
  return sub_1AFFCAF68();
}

uint64_t sub_1AFF2B908()
{
  return sub_1AFDF5A68();
}

uint64_t sub_1AFF2B928@<X0>(BOOL *a1@<X8>)
{
  return sub_1AFDF5AC0(a1);
}

void sub_1AFF2B934(void *a1@<X8>)
{
  *a1 = 0x756F735F61746164;
  a1[1] = 0xEB00000000656372;
}

uint64_t sub_1AFF2B958()
{
  return 0x756F735F61746164;
}

uint64_t sub_1AFF2B978@<X0>(BOOL *a1@<X8>)
{
  return sub_1AFDF5B38(a1);
}

uint64_t sub_1AFF2B984(uint64_t a1)
{
  unint64_t v2 = sub_1AFF2F990();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFF2B9C0(uint64_t a1)
{
  unint64_t v2 = sub_1AFF2F990();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFF2B9FC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1AFF2E238(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1AFF2BA28(uint64_t a1)
{
  unint64_t v2 = sub_1AFF2E700();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFF2BA64(uint64_t a1)
{
  unint64_t v2 = sub_1AFF2E700();

  return MEMORY[0x1F41862B0](a1, v2);
}

void *sub_1AFF2BAA0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1AFF2E548(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_1AFF2BAD0(uint64_t a1)
{
  if (a1) {
    uint64_t v1 = a1;
  }
  else {
    uint64_t v1 = MEMORY[0x1E4FBC860];
  }
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2)
  {
    sub_1AFFC8E38();
    unint64_t v4 = (void *)MEMORY[0x1E4FBC868];
LABEL_21:
    swift_bridgeObjectRelease();
    return (uint64_t)v4;
  }
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  uint64_t v3 = v1 + 48;
  unint64_t v4 = (void *)MEMORY[0x1E4FBC868];
  while (1)
  {
    uint64_t v6 = *(void *)(v3 - 8);
    uint64_t v26 = v2;
    uint64_t v27 = *(void *)(v3 - 16);
    uint64_t v8 = *(void *)v3;
    uint64_t v7 = *(void *)(v3 + 8);
    char v28 = *(unsigned char *)(v3 + 16);
    uint64_t v9 = *(void *)(v3 + 32);
    uint64_t v10 = *(void *)(v3 + 48);
    uint64_t v29 = *(void *)(v3 + 24);
    uint64_t v30 = *(void *)(v3 + 40);
    sub_1AFFC8E38();
    swift_bridgeObjectRetain_n();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v13 = sub_1AFD79CC8(v8, v7);
    uint64_t v14 = v4[2];
    BOOL v15 = (v12 & 1) == 0;
    uint64_t v16 = v14 + v15;
    if (__OFADD__(v14, v15)) {
      break;
    }
    char v17 = v12;
    if (v4[3] >= v16)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v12) {
          goto LABEL_6;
        }
      }
      else
      {
        sub_1AFEBA33C();
        if (v17) {
          goto LABEL_6;
        }
      }
    }
    else
    {
      sub_1AFEB5D1C(v16, isUniquelyReferenced_nonNull_native);
      unint64_t v18 = sub_1AFD79CC8(v8, v7);
      if ((v17 & 1) != (v19 & 1)) {
        goto LABEL_24;
      }
      unint64_t v13 = v18;
      if (v17)
      {
LABEL_6:
        uint64_t v5 = v4[7] + 72 * v13;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(void *)uint64_t v5 = v27;
        *(void *)(v5 + 8) = v6;
        *(void *)(v5 + 16) = v8;
        *(void *)(v5 + 24) = v7;
        *(unsigned char *)(v5 + 32) = v28;
        *(void *)(v5 + 40) = v29;
        *(void *)(v5 + 48) = v9;
        *(void *)(v5 + 56) = v30;
        *(void *)(v5 + 64) = v10;
        goto LABEL_7;
      }
    }
    v4[(v13 >> 6) + 8] |= 1 << v13;
    uint64_t v20 = (uint64_t *)(v4[6] + 16 * v13);
    *uint64_t v20 = v8;
    v20[1] = v7;
    uint64_t v21 = v4[7] + 72 * v13;
    *(void *)uint64_t v21 = v27;
    *(void *)(v21 + 8) = v6;
    *(void *)(v21 + 16) = v8;
    *(void *)(v21 + 24) = v7;
    *(unsigned char *)(v21 + 32) = v28;
    *(void *)(v21 + 40) = v29;
    *(void *)(v21 + 48) = v9;
    *(void *)(v21 + 56) = v30;
    *(void *)(v21 + 64) = v10;
    uint64_t v22 = v4[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_23;
    }
    v4[2] = v24;
    sub_1AFFC8E38();
LABEL_7:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v3 += 72;
    uint64_t v2 = v26 - 1;
    if (v26 == 1)
    {
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1AFFCBD68();
  __break(1u);
  return result;
}

uint64_t sub_1AFF2BD64(uint64_t a1)
{
  if (a1) {
    uint64_t v1 = a1;
  }
  else {
    uint64_t v1 = MEMORY[0x1E4FBC860];
  }
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2)
  {
    sub_1AFFC8E38();
    unint64_t v4 = (void *)MEMORY[0x1E4FBC868];
LABEL_21:
    swift_bridgeObjectRelease();
    return (uint64_t)v4;
  }
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  uint64_t v3 = (unsigned char *)(v1 + 48);
  unint64_t v4 = (void *)MEMORY[0x1E4FBC868];
  while (1)
  {
    uint64_t v7 = *((void *)v3 - 2);
    uint64_t v6 = *((void *)v3 - 1);
    char v8 = *v3;
    swift_bridgeObjectRetain_n();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v11 = sub_1AFD79CC8(v7, v6);
    uint64_t v12 = v4[2];
    BOOL v13 = (v10 & 1) == 0;
    uint64_t v14 = v12 + v13;
    if (__OFADD__(v12, v13)) {
      break;
    }
    char v15 = v10;
    if (v4[3] >= v14)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v10) {
          goto LABEL_6;
        }
      }
      else
      {
        sub_1AFEBA568();
        if (v15) {
          goto LABEL_6;
        }
      }
    }
    else
    {
      sub_1AFEB60B0(v14, isUniquelyReferenced_nonNull_native);
      unint64_t v16 = sub_1AFD79CC8(v7, v6);
      if ((v15 & 1) != (v17 & 1)) {
        goto LABEL_24;
      }
      unint64_t v11 = v16;
      if (v15)
      {
LABEL_6:
        uint64_t v5 = v4[7] + 24 * v11;
        swift_bridgeObjectRelease();
        *(void *)uint64_t v5 = v7;
        *(void *)(v5 + 8) = v6;
        *(unsigned char *)(v5 + 16) = v8;
        goto LABEL_7;
      }
    }
    v4[(v11 >> 6) + 8] |= 1 << v11;
    unint64_t v18 = (uint64_t *)(v4[6] + 16 * v11);
    uint64_t *v18 = v7;
    v18[1] = v6;
    uint64_t v19 = v4[7] + 24 * v11;
    *(void *)uint64_t v19 = v7;
    *(void *)(v19 + 8) = v6;
    *(unsigned char *)(v19 + 16) = v8;
    uint64_t v20 = v4[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_23;
    }
    v4[2] = v22;
    sub_1AFFC8E38();
LABEL_7:
    v3 += 24;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!--v2)
    {
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1AFFCBD68();
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for YahooMultiQuoteResponse()
{
  return &type metadata for YahooMultiQuoteResponse;
}

uint64_t destroy for YahooMultiQuoteResponse.Exchange()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for YahooMultiQuoteResponse.Exchange(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  return a1;
}

uint64_t assignWithCopy for YahooMultiQuoteResponse.Exchange(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for YahooMultiQuoteResponse.Exchange(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for NewsUIConfiguration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NewsUIConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for YahooMultiQuoteResponse.Exchange()
{
  return &type metadata for YahooMultiQuoteResponse.Exchange;
}

ValueMetadata *type metadata accessor for YahooMultiQuoteResponse.DataSource()
{
  return &type metadata for YahooMultiQuoteResponse.DataSource;
}

uint64_t sub_1AFF2C248()
{
  unint64_t v0 = sub_1AFFCBA78();
  swift_bridgeObjectRelease();
  if (v0 >= 0xC) {
    return 12;
  }
  else {
    return v0;
  }
}

void *sub_1AFF2C294@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  double v141 = a2;
  sub_1AFF31930(0, &qword_1EB81B780, (void (*)(void))sub_1AFF31990);
  uint64_t v5 = v4;
  uint64_t v202 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v81 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFF31990();
  sub_1AFFCBE68();
  if (v2) {
    return (void *)__swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  double v140 = a1;
  uint64_t v8 = v202;
  LOBYTE(v143) = 0;
  uint64_t v9 = v7;
  uint64_t v10 = sub_1AFFCBB18();
  uint64_t v13 = v12;
  uint64_t v139 = v10;
  LOBYTE(v143) = 8;
  sub_1AFFC8E38();
  uint64_t v14 = sub_1AFFCBAA8();
  uint64_t v16 = v15;
  uint64_t v136 = v14;
  LOBYTE(v143) = 9;
  sub_1AFFC8E38();
  uint64_t v138 = 0;
  uint64_t v134 = sub_1AFFCBAA8();
  uint64_t v135 = v16;
  LOBYTE(v143) = 10;
  uint64_t v18 = v17;
  sub_1AFFC8E38();
  uint64_t v19 = sub_1AFFCBAA8();
  uint64_t v137 = v18;
  uint64_t v133 = v19;
  LOBYTE(v143) = 11;
  uint64_t v21 = v20;
  sub_1AFFC8E38();
  uint64_t v22 = sub_1AFFCBAA8();
  uint64_t v24 = v23;
  uint64_t v98 = v22;
  uint64_t v86 = v21;
  uint64_t v96 = v13;
  sub_1AFF30790();
  LOBYTE(v142[0]) = 1;
  sub_1AFF319E4();
  uint64_t v97 = v24;
  sub_1AFFC8E38();
  sub_1AFFCBAF8();
  uint64_t v25 = v143;
  if (!v145) {
    uint64_t v25 = 0;
  }
  uint64_t v138 = v25;
  if (v145) {
    uint64_t v26 = v144;
  }
  else {
    uint64_t v26 = 0;
  }
  if (v145) {
    uint64_t v27 = v145;
  }
  else {
    uint64_t v27 = 0;
  }
  if (v145) {
    uint64_t v28 = v146;
  }
  else {
    uint64_t v28 = 0;
  }
  if (v145) {
    uint64_t v29 = v147;
  }
  else {
    uint64_t v29 = 0;
  }
  if (v145) {
    uint64_t v30 = v148;
  }
  else {
    uint64_t v30 = 0;
  }
  if (v145) {
    uint64_t v31 = v149;
  }
  else {
    uint64_t v31 = 0;
  }
  LOBYTE(v142[0]) = 2;
  uint64_t v94 = v27;
  uint64_t v95 = v26;
  uint64_t v92 = v29;
  uint64_t v93 = v28;
  uint64_t v202 = v30;
  uint64_t v91 = v31;
  sub_1AFF18E34(v138, v26, v27);
  sub_1AFFCBAF8();
  if (v145) {
    uint64_t v32 = v143;
  }
  else {
    uint64_t v32 = 0;
  }
  if (v145) {
    uint64_t v33 = v144;
  }
  else {
    uint64_t v33 = 0;
  }
  if (v145) {
    uint64_t v34 = v145;
  }
  else {
    uint64_t v34 = 0;
  }
  if (v145) {
    uint64_t v35 = v146;
  }
  else {
    uint64_t v35 = 0;
  }
  if (v145) {
    uint64_t v36 = v147;
  }
  else {
    uint64_t v36 = 0;
  }
  if (v145) {
    uint64_t v37 = v148;
  }
  else {
    uint64_t v37 = 0;
  }
  if (v145) {
    uint64_t v38 = v149;
  }
  else {
    uint64_t v38 = 0;
  }
  LOBYTE(v142[0]) = 3;
  uint64_t v99 = v32;
  uint64_t v127 = v33;
  uint64_t v128 = v38;
  uint64_t v131 = v35;
  uint64_t v132 = v34;
  uint64_t v129 = v37;
  uint64_t v130 = v36;
  sub_1AFF18E34(v32, v33, v34);
  sub_1AFFCBAF8();
  if (v145) {
    uint64_t v39 = v143;
  }
  else {
    uint64_t v39 = 0;
  }
  if (v145) {
    uint64_t v40 = v144;
  }
  else {
    uint64_t v40 = 0;
  }
  if (v145) {
    uint64_t v41 = v145;
  }
  else {
    uint64_t v41 = 0;
  }
  if (v145) {
    uint64_t v42 = v146;
  }
  else {
    uint64_t v42 = 0;
  }
  if (v145) {
    uint64_t v43 = v147;
  }
  else {
    uint64_t v43 = 0;
  }
  if (v145) {
    uint64_t v44 = v148;
  }
  else {
    uint64_t v44 = 0;
  }
  if (v145) {
    uint64_t v45 = v149;
  }
  else {
    uint64_t v45 = 0;
  }
  LOBYTE(v142[0]) = 4;
  uint64_t v120 = v39;
  uint64_t v121 = v45;
  uint64_t v125 = v41;
  uint64_t v126 = v40;
  uint64_t v123 = v43;
  uint64_t v124 = v42;
  uint64_t v122 = v44;
  sub_1AFF18E34(v39, v40, v41);
  sub_1AFFCBAF8();
  if (v145) {
    uint64_t v46 = v143;
  }
  else {
    uint64_t v46 = 0;
  }
  if (v145) {
    uint64_t v47 = v144;
  }
  else {
    uint64_t v47 = 0;
  }
  if (v145) {
    uint64_t v48 = v145;
  }
  else {
    uint64_t v48 = 0;
  }
  if (v145) {
    uint64_t v49 = v146;
  }
  else {
    uint64_t v49 = 0;
  }
  if (v145) {
    uint64_t v50 = v147;
  }
  else {
    uint64_t v50 = 0;
  }
  if (v145) {
    uint64_t v51 = v148;
  }
  else {
    uint64_t v51 = 0;
  }
  if (v145) {
    uint64_t v52 = v149;
  }
  else {
    uint64_t v52 = 0;
  }
  LOBYTE(v142[0]) = 5;
  uint64_t v118 = v47;
  uint64_t v119 = v46;
  uint64_t v116 = v49;
  uint64_t v117 = v48;
  uint64_t v114 = v51;
  uint64_t v115 = v50;
  uint64_t v113 = v52;
  sub_1AFF18E34(v46, v47, v48);
  sub_1AFFCBAF8();
  if (v145) {
    uint64_t v53 = v143;
  }
  else {
    uint64_t v53 = 0;
  }
  if (v145) {
    uint64_t v54 = v144;
  }
  else {
    uint64_t v54 = 0;
  }
  if (v145) {
    uint64_t v55 = v145;
  }
  else {
    uint64_t v55 = 0;
  }
  if (v145) {
    uint64_t v56 = v146;
  }
  else {
    uint64_t v56 = 0;
  }
  if (v145) {
    uint64_t v57 = v147;
  }
  else {
    uint64_t v57 = 0;
  }
  if (v145) {
    uint64_t v58 = v148;
  }
  else {
    uint64_t v58 = 0;
  }
  if (v145) {
    uint64_t v59 = v149;
  }
  else {
    uint64_t v59 = 0;
  }
  LOBYTE(v142[0]) = 6;
  uint64_t v106 = v53;
  uint64_t v107 = v59;
  uint64_t v111 = v55;
  uint64_t v112 = v54;
  uint64_t v109 = v57;
  uint64_t v110 = v56;
  uint64_t v108 = v58;
  sub_1AFF18E34(v53, v54, v55);
  sub_1AFFCBAF8();
  if (v145) {
    uint64_t v60 = v143;
  }
  else {
    uint64_t v60 = 0;
  }
  if (v145) {
    uint64_t v61 = v144;
  }
  else {
    uint64_t v61 = 0;
  }
  if (v145) {
    uint64_t v62 = v145;
  }
  else {
    uint64_t v62 = 0;
  }
  if (v145) {
    uint64_t v63 = v146;
  }
  else {
    uint64_t v63 = 0;
  }
  if (v145) {
    uint64_t v64 = v147;
  }
  else {
    uint64_t v64 = 0;
  }
  if (v145) {
    uint64_t v65 = v148;
  }
  else {
    uint64_t v65 = 0;
  }
  if (v145) {
    uint64_t v66 = v149;
  }
  else {
    uint64_t v66 = 0;
  }
  LOBYTE(v142[0]) = 7;
  uint64_t v67 = v60;
  uint64_t v104 = v62;
  uint64_t v105 = v61;
  uint64_t v102 = v64;
  uint64_t v103 = v63;
  uint64_t v100 = v66;
  uint64_t v101 = v65;
  sub_1AFF18E34(v60, v61, v62);
  sub_1AFFCBAF8();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v9, v5);
  uint64_t v68 = v145;
  if (v145)
  {
    uint64_t v68 = v143;
    uint64_t v69 = v144;
    uint64_t v70 = v146;
    uint64_t v71 = v147;
    uint64_t v72 = v148;
    uint64_t v73 = v149;
  }
  else
  {
    uint64_t v69 = 0;
    uint64_t v70 = 0;
    uint64_t v71 = 0;
    uint64_t v72 = 0;
    uint64_t v73 = 0;
  }
  v142[0] = v139;
  v142[1] = v96;
  v142[2] = v138;
  v142[3] = v95;
  v142[4] = v94;
  v142[5] = v93;
  v142[6] = v92;
  v142[7] = v202;
  v142[8] = v91;
  v142[9] = v99;
  v142[10] = v127;
  v142[11] = v132;
  v142[12] = v131;
  v142[13] = v130;
  v142[14] = v129;
  v142[15] = v128;
  v142[16] = v120;
  v142[17] = v126;
  v142[18] = v125;
  v142[19] = v124;
  v142[20] = v123;
  v142[21] = v122;
  v142[22] = v121;
  v142[23] = v119;
  v142[24] = v118;
  v142[25] = v117;
  v142[26] = v116;
  v142[27] = v115;
  v142[28] = v114;
  v142[29] = v113;
  v142[30] = v106;
  v142[31] = v112;
  v142[32] = v111;
  v142[33] = v110;
  v142[34] = v109;
  v142[35] = v108;
  v142[36] = v107;
  uint64_t v89 = v145;
  uint64_t v90 = v67;
  v142[37] = v67;
  v142[38] = v105;
  v142[39] = v104;
  v142[40] = v103;
  v142[41] = v102;
  v142[42] = v101;
  v142[43] = v100;
  v142[44] = v68;
  v142[45] = v69;
  v142[46] = v145;
  v142[47] = v70;
  v142[48] = v71;
  v142[49] = v72;
  v142[50] = v73;
  v142[51] = v136;
  v142[52] = v135;
  v142[53] = v134;
  v142[54] = v137;
  v142[55] = v133;
  v142[56] = v86;
  v142[57] = v98;
  v142[58] = v97;
  uint64_t v87 = v69;
  uint64_t v88 = v68;
  uint64_t v82 = v70;
  uint64_t v83 = v71;
  uint64_t v84 = v72;
  uint64_t v85 = v73;
  sub_1AFF18E34(v68, v69, v145);
  sub_1AFF18C00(v142);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1AFF190B8(v88, v87, v89);
  sub_1AFF190B8(v90, v105, v104);
  sub_1AFF190B8(v106, v112, v111);
  sub_1AFF190B8(v119, v118, v117);
  sub_1AFF190B8(v120, v126, v125);
  sub_1AFF190B8(v99, v127, v132);
  uint64_t v74 = v138;
  uint64_t v76 = v94;
  uint64_t v75 = v95;
  uint64_t v78 = v92;
  uint64_t v77 = v93;
  uint64_t v79 = v91;
  sub_1AFF190B8(v138, v95, v94);
  uint64_t v80 = v96;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v140);
  uint64_t v143 = v139;
  uint64_t v144 = v80;
  uint64_t v145 = v74;
  uint64_t v146 = v75;
  uint64_t v147 = v76;
  uint64_t v148 = v77;
  uint64_t v149 = v78;
  uint64_t v150 = v202;
  uint64_t v151 = v79;
  uint64_t v152 = v99;
  uint64_t v153 = v127;
  uint64_t v154 = v132;
  uint64_t v155 = v131;
  uint64_t v156 = v130;
  uint64_t v157 = v129;
  uint64_t v158 = v128;
  uint64_t v159 = v120;
  uint64_t v160 = v126;
  uint64_t v161 = v125;
  uint64_t v162 = v124;
  uint64_t v163 = v123;
  uint64_t v164 = v122;
  uint64_t v165 = v121;
  uint64_t v166 = v119;
  uint64_t v167 = v118;
  uint64_t v168 = v117;
  uint64_t v169 = v116;
  uint64_t v170 = v115;
  uint64_t v171 = v114;
  uint64_t v172 = v113;
  uint64_t v173 = v106;
  uint64_t v174 = v112;
  uint64_t v175 = v111;
  uint64_t v176 = v110;
  uint64_t v177 = v109;
  uint64_t v178 = v108;
  uint64_t v179 = v107;
  uint64_t v180 = v90;
  uint64_t v181 = v105;
  uint64_t v182 = v104;
  uint64_t v183 = v103;
  uint64_t v184 = v102;
  uint64_t v185 = v101;
  uint64_t v186 = v100;
  uint64_t v187 = v88;
  uint64_t v188 = v87;
  uint64_t v189 = v89;
  uint64_t v190 = v82;
  uint64_t v191 = v83;
  uint64_t v192 = v84;
  uint64_t v193 = v85;
  uint64_t v194 = v136;
  uint64_t v195 = v135;
  uint64_t v196 = v134;
  uint64_t v197 = v137;
  uint64_t v198 = v133;
  uint64_t v199 = v86;
  uint64_t v200 = v98;
  uint64_t v201 = v97;
  sub_1AFF18E84(&v143);
  return memcpy(v141, v142, 0x1D8uLL);
}

uint64_t sub_1AFF2D01C()
{
  return 4;
}

uint64_t sub_1AFF2D024()
{
  unint64_t v0 = sub_1AFFCBA78();
  swift_bridgeObjectRelease();
  if (v0 >= 0xA) {
    return 10;
  }
  else {
    return v0;
  }
}

uint64_t sub_1AFF2D070()
{
  unint64_t v0 = sub_1AFFCBA78();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

uint64_t sub_1AFF2D0BC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v33 = a2;
  sub_1AFF31930(0, &qword_1EB81B598, (void (*)(void))sub_1AFF2E7A8);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v26 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFF2E7A8();
  sub_1AFFCBE68();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v32 = a1;
  uint64_t v9 = v6;
  char v38 = 0;
  uint64_t v10 = v5;
  uint64_t v12 = sub_1AFFCBB18();
  uint64_t v14 = v13;
  char v37 = 1;
  sub_1AFFC8E38();
  uint64_t v15 = sub_1AFFCBB18();
  uint64_t v31 = v16;
  uint64_t v29 = v15;
  uint64_t v30 = v12;
  char v36 = 3;
  sub_1AFFC8E38();
  uint64_t v17 = sub_1AFFCBAA8();
  uint64_t v19 = v18;
  uint64_t v28 = v17;
  char v35 = 4;
  sub_1AFFC8E38();
  uint64_t v26 = sub_1AFFCBAA8();
  uint64_t v27 = v20;
  char v34 = 2;
  sub_1AFFC8E38();
  sub_1AFFCBB18();
  char v21 = sub_1AFF2D024();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v10);
  if (v21 == 10) {
    char v21 = 0;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
  uint64_t v22 = v27;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v23 = v19;
  uint64_t v24 = v31;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v25 = v33;
  *uint64_t v33 = v30;
  v25[1] = v14;
  v25[2] = v29;
  v25[3] = v24;
  *((unsigned char *)v25 + 32) = v21;
  v25[5] = v28;
  v25[6] = v23;
  v25[7] = v26;
  v25[8] = v22;
  return result;
}

uint64_t sub_1AFF2D4CC()
{
  unint64_t v0 = sub_1AFFCBA78();
  swift_bridgeObjectRelease();
  if (v0 >= 7) {
    return 7;
  }
  else {
    return v0;
  }
}

uint64_t sub_1AFF2D518(void *a1)
{
  sub_1AFF31930(0, &qword_1EB81B5A8, (void (*)(void))sub_1AFF2E7FC);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v10 - v6;
  uint64_t v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFF2E7FC();
  sub_1AFFCBE68();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    char v12 = 0;
    uint64_t v8 = sub_1AFFCBB18();
    char v11 = 1;
    sub_1AFFC8E38();
    sub_1AFFCBB18();
    sub_1AFF2D4CC();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return v8;
}

void *sub_1AFF2D73C(void *a1)
{
  sub_1AFF31930(0, &qword_1EB81B5E8, (void (*)(void))sub_1AFF2F04C);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v11 - v6;
  uint64_t v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFF2F04C();
  uint64_t v9 = v8;
  sub_1AFFCBE68();
  if (!v1)
  {
    sub_1AFF2F0A0();
    sub_1AFFCBB58();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v9 = (void *)v11[1];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v9;
}

uint64_t sub_1AFF2D8F4()
{
  unint64_t v0 = sub_1AFFCBA78();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_1AFF2D940(void *a1)
{
  sub_1AFF31930(0, &qword_1EB81B610, (void (*)(void))sub_1AFF2F428);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v10 - v6;
  uint64_t v8 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  sub_1AFF2F428();
  sub_1AFFCBE68();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    char v11 = 0;
    sub_1AFF2F47C();
    sub_1AFFCBAF8();
    uint64_t v8 = v12;
    char v11 = 1;
    sub_1AFF2F4D0();
    sub_1AFFC8E38();
    sub_1AFFCBAF8();
    char v11 = 2;
    sub_1AFF2F524();
    sub_1AFFC8E38();
    sub_1AFFCBAF8();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_1AFFC8E38();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v8;
}

uint64_t sub_1AFF2DC24(void *a1)
{
  sub_1AFF31930(0, &qword_1EB81B648, (void (*)(void))sub_1AFF2F7B4);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v10 - v6;
  uint64_t v8 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  sub_1AFF2F7B4();
  sub_1AFFCBE68();
  if (!v1)
  {
    sub_1AFF2FA38(0, &qword_1EB81B658, (uint64_t)&type metadata for YahooMultiQuoteResponse.Quote, MEMORY[0x1E4FBB320]);
    sub_1AFF2F8B0(&qword_1EB81B660, &qword_1EB81B658, (uint64_t)&type metadata for YahooMultiQuoteResponse.Quote, (void (*)(void))sub_1AFF2F808);
    sub_1AFFCBB58();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v8 = v10[1];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v8;
}

uint64_t sub_1AFF2DEE4(void *a1)
{
  sub_1AFF31930(0, &qword_1EB81B670, (void (*)(void))sub_1AFF2F85C);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v10 - v6;
  uint64_t v8 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  sub_1AFF2F85C();
  sub_1AFFCBE68();
  if (!v1)
  {
    sub_1AFF2FA38(0, &qword_1EB81B680, (uint64_t)&type metadata for YahooMultiQuoteResponse.Exchange, MEMORY[0x1E4FBB320]);
    sub_1AFF2F8B0(&qword_1EB81B688, &qword_1EB81B680, (uint64_t)&type metadata for YahooMultiQuoteResponse.Exchange, (void (*)(void))sub_1AFF2F93C);
    sub_1AFFCBAF8();
    if (v11) {
      uint64_t v8 = v11;
    }
    else {
      uint64_t v8 = MEMORY[0x1E4FBC860];
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v8;
}

uint64_t sub_1AFF2E238(void *a1)
{
  sub_1AFF31930(0, &qword_1EB81B698, (void (*)(void))sub_1AFF2F990);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v10 - v6;
  uint64_t v8 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  sub_1AFF2F990();
  sub_1AFFCBE68();
  if (!v1)
  {
    sub_1AFF2FA38(0, &qword_1EB81B6A8, (uint64_t)&type metadata for YahooMultiQuoteResponse.DataSource, MEMORY[0x1E4FBB320]);
    sub_1AFF2F8B0(&qword_1EB81B6B0, &qword_1EB81B6A8, (uint64_t)&type metadata for YahooMultiQuoteResponse.DataSource, (void (*)(void))sub_1AFF2F9E4);
    sub_1AFFCBAF8();
    if (v11) {
      uint64_t v8 = v11;
    }
    else {
      uint64_t v8 = MEMORY[0x1E4FBC860];
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v8;
}

void *sub_1AFF2E548(void *a1)
{
  sub_1AFF31930(0, &qword_1EB81B580, (void (*)(void))sub_1AFF2E700);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v11 - v6;
  uint64_t v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFF2E700();
  uint64_t v9 = v8;
  sub_1AFFCBE68();
  if (!v1)
  {
    sub_1AFF2E754();
    sub_1AFFCBB58();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v9 = (void *)v11[1];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v9;
}

unint64_t sub_1AFF2E700()
{
  unint64_t result = qword_1EB81B588;
  if (!qword_1EB81B588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB81B588);
  }
  return result;
}

unint64_t sub_1AFF2E754()
{
  unint64_t result = qword_1EB81B590;
  if (!qword_1EB81B590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB81B590);
  }
  return result;
}

unint64_t sub_1AFF2E7A8()
{
  unint64_t result = qword_1EB81B5A0;
  if (!qword_1EB81B5A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB81B5A0);
  }
  return result;
}

unint64_t sub_1AFF2E7FC()
{
  unint64_t result = qword_1EB81B5B0;
  if (!qword_1EB81B5B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB81B5B0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for YahooMultiQuoteResponse.DataSource.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFF2E91CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for YahooMultiQuoteResponse.DataSource.CodingKeys()
{
  return &type metadata for YahooMultiQuoteResponse.DataSource.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for YahooMultiQuoteResponse.Exchange.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFF2EA20);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for YahooMultiQuoteResponse.Exchange.CodingKeys()
{
  return &type metadata for YahooMultiQuoteResponse.Exchange.CodingKeys;
}

ValueMetadata *type metadata accessor for YahooMultiQuoteResponse.CodingKeys()
{
  return &type metadata for YahooMultiQuoteResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for YahooMultiQuoteResponse.Finance()
{
  return &type metadata for YahooMultiQuoteResponse.Finance;
}

unsigned char *storeEnumTagSinglePayload for YahooMultiQuoteResponse.Exchange.Status(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *unint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFF2EB48);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for YahooMultiQuoteResponse.Exchange.Status()
{
  return &type metadata for YahooMultiQuoteResponse.Exchange.Status;
}

unsigned char *storeEnumTagSinglePayload for YahooMultiQuoteResponse.DataSource.Source(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFF2EC4CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for YahooMultiQuoteResponse.DataSource.Source()
{
  return &type metadata for YahooMultiQuoteResponse.DataSource.Source;
}

unint64_t sub_1AFF2EC88()
{
  unint64_t result = qword_1E9AFCA70;
  if (!qword_1E9AFCA70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFCA70);
  }
  return result;
}

unint64_t sub_1AFF2ECE0()
{
  unint64_t result = qword_1E9AFCA78;
  if (!qword_1E9AFCA78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFCA78);
  }
  return result;
}

unint64_t sub_1AFF2ED38()
{
  unint64_t result = qword_1E9AFCA80;
  if (!qword_1E9AFCA80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFCA80);
  }
  return result;
}

unint64_t sub_1AFF2ED90()
{
  unint64_t result = qword_1E9AFCA88;
  if (!qword_1E9AFCA88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFCA88);
  }
  return result;
}

unint64_t sub_1AFF2EDE8()
{
  unint64_t result = qword_1E9AFCA90;
  if (!qword_1E9AFCA90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFCA90);
  }
  return result;
}

unint64_t sub_1AFF2EE40()
{
  unint64_t result = qword_1EB81B5B8;
  if (!qword_1EB81B5B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB81B5B8);
  }
  return result;
}

unint64_t sub_1AFF2EE98()
{
  unint64_t result = qword_1EB81B5C0;
  if (!qword_1EB81B5C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB81B5C0);
  }
  return result;
}

unint64_t sub_1AFF2EEF0()
{
  unint64_t result = qword_1EB81B5C8;
  if (!qword_1EB81B5C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB81B5C8);
  }
  return result;
}

unint64_t sub_1AFF2EF48()
{
  unint64_t result = qword_1EB81B5D0;
  if (!qword_1EB81B5D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB81B5D0);
  }
  return result;
}

unint64_t sub_1AFF2EFA0()
{
  unint64_t result = qword_1EB81B5D8;
  if (!qword_1EB81B5D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB81B5D8);
  }
  return result;
}

unint64_t sub_1AFF2EFF8()
{
  unint64_t result = qword_1EB81B5E0;
  if (!qword_1EB81B5E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB81B5E0);
  }
  return result;
}

unint64_t sub_1AFF2F04C()
{
  unint64_t result = qword_1EB81B5F0;
  if (!qword_1EB81B5F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB81B5F0);
  }
  return result;
}

unint64_t sub_1AFF2F0A0()
{
  unint64_t result = qword_1EB81B5F8;
  if (!qword_1EB81B5F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB81B5F8);
  }
  return result;
}

ValueMetadata *type metadata accessor for YahooMultiQuoteResponse.Finance.CodingKeys()
{
  return &type metadata for YahooMultiQuoteResponse.Finance.CodingKeys;
}

uint64_t _s10StocksCore23YahooMultiQuoteResponseV12QuoteServiceVwxx_0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s10StocksCore23YahooMultiQuoteResponseV12QuoteServiceVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  return a1;
}

void *_s10StocksCore23YahooMultiQuoteResponseV12QuoteServiceVwca_0(void *a1, void *a2)
{
  *a1 = *a2;
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s10StocksCore23YahooMultiQuoteResponseV12QuoteServiceVwta_0(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s10StocksCore23YahooMultiQuoteResponseV12QuoteServiceVwet_0(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 24)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s10StocksCore23YahooMultiQuoteResponseV12QuoteServiceVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for YahooMultiQuoteResponse.QuoteService()
{
  return &type metadata for YahooMultiQuoteResponse.QuoteService;
}

unint64_t sub_1AFF2F324()
{
  unint64_t result = qword_1E9AFCA98;
  if (!qword_1E9AFCA98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFCA98);
  }
  return result;
}

unint64_t sub_1AFF2F37C()
{
  unint64_t result = qword_1EB81B600;
  if (!qword_1EB81B600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB81B600);
  }
  return result;
}

unint64_t sub_1AFF2F3D4()
{
  unint64_t result = qword_1EB81B608;
  if (!qword_1EB81B608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB81B608);
  }
  return result;
}

unint64_t sub_1AFF2F428()
{
  unint64_t result = qword_1EB81B618;
  if (!qword_1EB81B618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB81B618);
  }
  return result;
}

unint64_t sub_1AFF2F47C()
{
  unint64_t result = qword_1EB81B620;
  if (!qword_1EB81B620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB81B620);
  }
  return result;
}

unint64_t sub_1AFF2F4D0()
{
  unint64_t result = qword_1EB81B628;
  if (!qword_1EB81B628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB81B628);
  }
  return result;
}

unint64_t sub_1AFF2F524()
{
  unint64_t result = qword_1EB81B630;
  if (!qword_1EB81B630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB81B630);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for YahooMultiQuoteResponse.QuoteService.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFF2F644);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for YahooMultiQuoteResponse.QuoteService.CodingKeys()
{
  return &type metadata for YahooMultiQuoteResponse.QuoteService.CodingKeys;
}

ValueMetadata *type metadata accessor for YahooMultiQuoteResponse.DataSources()
{
  return &type metadata for YahooMultiQuoteResponse.DataSources;
}

ValueMetadata *type metadata accessor for YahooMultiQuoteResponse.Exchanges()
{
  return &type metadata for YahooMultiQuoteResponse.Exchanges;
}

ValueMetadata *type metadata accessor for YahooMultiQuoteResponse.Quotes()
{
  return &type metadata for YahooMultiQuoteResponse.Quotes;
}

unint64_t sub_1AFF2F6B0()
{
  unint64_t result = qword_1E9AFCAA0;
  if (!qword_1E9AFCAA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFCAA0);
  }
  return result;
}

unint64_t sub_1AFF2F708()
{
  unint64_t result = qword_1EB81B638;
  if (!qword_1EB81B638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB81B638);
  }
  return result;
}

unint64_t sub_1AFF2F760()
{
  unint64_t result = qword_1EB81B640;
  if (!qword_1EB81B640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB81B640);
  }
  return result;
}

unint64_t sub_1AFF2F7B4()
{
  unint64_t result = qword_1EB81B650;
  if (!qword_1EB81B650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB81B650);
  }
  return result;
}

unint64_t sub_1AFF2F808()
{
  unint64_t result = qword_1EB81B668;
  if (!qword_1EB81B668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB81B668);
  }
  return result;
}

unint64_t sub_1AFF2F85C()
{
  unint64_t result = qword_1EB81B678;
  if (!qword_1EB81B678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB81B678);
  }
  return result;
}

uint64_t sub_1AFF2F8B0(unint64_t *a1, unint64_t *a2, uint64_t a3, void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1AFF2FA38(255, a2, a3, MEMORY[0x1E4FBB320]);
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1AFF2F93C()
{
  unint64_t result = qword_1EB81B690;
  if (!qword_1EB81B690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB81B690);
  }
  return result;
}

unint64_t sub_1AFF2F990()
{
  unint64_t result = qword_1EB81B6A0;
  if (!qword_1EB81B6A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB81B6A0);
  }
  return result;
}

unint64_t sub_1AFF2F9E4()
{
  unint64_t result = qword_1EB81B6B8;
  if (!qword_1EB81B6B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB81B6B8);
  }
  return result;
}

void sub_1AFF2FA38(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

ValueMetadata *type metadata accessor for YahooMultiQuoteResponse.DataSources.CodingKeys()
{
  return &type metadata for YahooMultiQuoteResponse.DataSources.CodingKeys;
}

ValueMetadata *type metadata accessor for YahooMultiQuoteResponse.Exchanges.CodingKeys()
{
  return &type metadata for YahooMultiQuoteResponse.Exchanges.CodingKeys;
}

ValueMetadata *type metadata accessor for YahooMultiQuoteResponse.Quotes.CodingKeys()
{
  return &type metadata for YahooMultiQuoteResponse.Quotes.CodingKeys;
}

uint64_t destroy for YahooMultiQuoteResponse.Quote(void *a1)
{
  swift_bridgeObjectRelease();
  if (a1[4])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[11])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[18])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[25])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[32])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[39])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[46])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for YahooMultiQuoteResponse.Quote(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 32);
  sub_1AFFC8E38();
  if (v5)
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    uint64_t v6 = *(void *)(a2 + 40);
    uint64_t v7 = *(void *)(a2 + 48);
    *(void *)(a1 + 32) = v5;
    *(void *)(a1 + 40) = v6;
    uint64_t v8 = *(void *)(a2 + 56);
    uint64_t v9 = *(void *)(a2 + 64);
    *(void *)(a1 + 48) = v7;
    *(void *)(a1 + 56) = v8;
    *(void *)(a1 + 64) = v9;
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    uint64_t v10 = *(void *)(a2 + 88);
    if (v10) {
      goto LABEL_3;
    }
  }
  else
  {
    long long v41 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v41;
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    uint64_t v10 = *(void *)(a2 + 88);
    if (v10)
    {
LABEL_3:
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      uint64_t v11 = *(void *)(a2 + 96);
      uint64_t v12 = *(void *)(a2 + 104);
      *(void *)(a1 + 88) = v10;
      *(void *)(a1 + 96) = v11;
      uint64_t v13 = *(void *)(a2 + 112);
      uint64_t v14 = *(void *)(a2 + 120);
      *(void *)(a1 + 104) = v12;
      *(void *)(a1 + 112) = v13;
      *(void *)(a1 + 120) = v14;
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      uint64_t v15 = *(void *)(a2 + 144);
      if (v15) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  long long v42 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = v42;
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  uint64_t v15 = *(void *)(a2 + 144);
  if (v15)
  {
LABEL_4:
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    uint64_t v16 = *(void *)(a2 + 152);
    uint64_t v17 = *(void *)(a2 + 160);
    *(void *)(a1 + 144) = v15;
    *(void *)(a1 + 152) = v16;
    uint64_t v18 = *(void *)(a2 + 168);
    uint64_t v19 = *(void *)(a2 + 176);
    *(void *)(a1 + 160) = v17;
    *(void *)(a1 + 168) = v18;
    *(void *)(a1 + 176) = v19;
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    uint64_t v20 = *(void *)(a2 + 200);
    if (v20) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  long long v43 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v43;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  uint64_t v20 = *(void *)(a2 + 200);
  if (v20)
  {
LABEL_5:
    *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
    uint64_t v21 = *(void *)(a2 + 208);
    uint64_t v22 = *(void *)(a2 + 216);
    *(void *)(a1 + 200) = v20;
    *(void *)(a1 + 208) = v21;
    uint64_t v23 = *(void *)(a2 + 224);
    uint64_t v24 = *(void *)(a2 + 232);
    *(void *)(a1 + 216) = v22;
    *(void *)(a1 + 224) = v23;
    *(void *)(a1 + 232) = v24;
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    uint64_t v25 = *(void *)(a2 + 256);
    if (v25) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
LABEL_12:
  long long v44 = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = v44;
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  uint64_t v25 = *(void *)(a2 + 256);
  if (v25)
  {
LABEL_6:
    *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
    uint64_t v26 = *(void *)(a2 + 264);
    uint64_t v27 = *(void *)(a2 + 272);
    *(void *)(a1 + 256) = v25;
    *(void *)(a1 + 264) = v26;
    uint64_t v28 = *(void *)(a2 + 280);
    uint64_t v29 = *(void *)(a2 + 288);
    *(void *)(a1 + 272) = v27;
    *(void *)(a1 + 280) = v28;
    *(void *)(a1 + 288) = v29;
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    uint64_t v30 = *(void *)(a2 + 312);
    if (v30) {
      goto LABEL_7;
    }
LABEL_14:
    long long v46 = *(_OWORD *)(a2 + 312);
    *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
    *(_OWORD *)(a1 + 312) = v46;
    *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
    *(void *)(a1 + 344) = *(void *)(a2 + 344);
    uint64_t v36 = *(void *)(a2 + 368);
    if (v36) {
      goto LABEL_8;
    }
LABEL_15:
    long long v47 = *(_OWORD *)(a2 + 368);
    *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
    *(_OWORD *)(a1 + 368) = v47;
    *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
    *(void *)(a1 + 400) = *(void *)(a2 + 400);
    goto LABEL_16;
  }
LABEL_13:
  long long v45 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = v45;
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  uint64_t v30 = *(void *)(a2 + 312);
  if (!v30) {
    goto LABEL_14;
  }
LABEL_7:
  uint64_t v31 = *(void *)(a2 + 304);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  *(void *)(a1 + 304) = v31;
  uint64_t v32 = *(void *)(a2 + 320);
  uint64_t v33 = *(void *)(a2 + 328);
  *(void *)(a1 + 312) = v30;
  *(void *)(a1 + 320) = v32;
  uint64_t v34 = *(void *)(a2 + 336);
  uint64_t v35 = *(void *)(a2 + 344);
  *(void *)(a1 + 328) = v33;
  *(void *)(a1 + 336) = v34;
  *(void *)(a1 + 344) = v35;
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  uint64_t v36 = *(void *)(a2 + 368);
  if (!v36) {
    goto LABEL_15;
  }
LABEL_8:
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  uint64_t v37 = *(void *)(a2 + 376);
  uint64_t v38 = *(void *)(a2 + 384);
  *(void *)(a1 + 368) = v36;
  *(void *)(a1 + 376) = v37;
  uint64_t v39 = *(void *)(a2 + 392);
  uint64_t v40 = *(void *)(a2 + 400);
  *(void *)(a1 + 384) = v38;
  *(void *)(a1 + 392) = v39;
  *(void *)(a1 + 400) = v40;
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
LABEL_16:
  uint64_t v48 = *(void *)(a2 + 416);
  *(void *)(a1 + 408) = *(void *)(a2 + 408);
  *(void *)(a1 + 416) = v48;
  uint64_t v49 = *(void *)(a2 + 432);
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  *(void *)(a1 + 432) = v49;
  uint64_t v50 = *(void *)(a2 + 448);
  *(void *)(a1 + 440) = *(void *)(a2 + 440);
  *(void *)(a1 + 448) = v50;
  uint64_t v51 = *(void *)(a2 + 456);
  uint64_t v52 = *(void *)(a2 + 464);
  *(void *)(a1 + 456) = v51;
  *(void *)(a1 + 464) = v52;
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  return a1;
}

void *assignWithCopy for YahooMultiQuoteResponse.Quote(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + 2;
  uint64_t v5 = (long long *)(a2 + 2);
  uint64_t v6 = a2[4];
  if (a1[4])
  {
    if (v6)
    {
      a1[2] = a2[2];
      a1[3] = a2[3];
      a1[4] = a2[4];
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      a1[5] = a2[5];
      a1[6] = a2[6];
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      a1[7] = a2[7];
      a1[8] = a2[8];
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AFF30734((uint64_t)(a1 + 2));
      long long v8 = *((_OWORD *)a2 + 2);
      long long v7 = *((_OWORD *)a2 + 3);
      long long v9 = *v5;
      a1[8] = a2[8];
      *((_OWORD *)a1 + 2) = v8;
      *((_OWORD *)a1 + 3) = v7;
      *uint64_t v4 = v9;
    }
  }
  else if (v6)
  {
    a1[2] = a2[2];
    a1[3] = a2[3];
    a1[4] = a2[4];
    a1[5] = a2[5];
    a1[6] = a2[6];
    a1[7] = a2[7];
    a1[8] = a2[8];
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
  }
  else
  {
    long long v10 = *v5;
    long long v11 = *((_OWORD *)a2 + 2);
    long long v12 = *((_OWORD *)a2 + 3);
    a1[8] = a2[8];
    *((_OWORD *)a1 + 2) = v11;
    *((_OWORD *)a1 + 3) = v12;
    *uint64_t v4 = v10;
  }
  uint64_t v13 = a1 + 9;
  uint64_t v14 = (long long *)(a2 + 9);
  uint64_t v15 = a2[11];
  if (a1[11])
  {
    if (v15)
    {
      a1[9] = a2[9];
      a1[10] = a2[10];
      a1[11] = a2[11];
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      a1[12] = a2[12];
      a1[13] = a2[13];
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      a1[14] = a2[14];
      a1[15] = a2[15];
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AFF30734((uint64_t)(a1 + 9));
      long long v17 = *(_OWORD *)(a2 + 11);
      long long v16 = *(_OWORD *)(a2 + 13);
      long long v18 = *v14;
      a1[15] = a2[15];
      *(_OWORD *)(a1 + 11) = v17;
      *(_OWORD *)(a1 + 13) = v16;
      *uint64_t v13 = v18;
    }
  }
  else if (v15)
  {
    a1[9] = a2[9];
    a1[10] = a2[10];
    a1[11] = a2[11];
    a1[12] = a2[12];
    a1[13] = a2[13];
    a1[14] = a2[14];
    a1[15] = a2[15];
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
  }
  else
  {
    long long v19 = *v14;
    long long v20 = *(_OWORD *)(a2 + 11);
    long long v21 = *(_OWORD *)(a2 + 13);
    a1[15] = a2[15];
    *(_OWORD *)(a1 + 11) = v20;
    *(_OWORD *)(a1 + 13) = v21;
    *uint64_t v13 = v19;
  }
  uint64_t v22 = a1 + 16;
  uint64_t v23 = (long long *)(a2 + 16);
  uint64_t v24 = a2[18];
  if (a1[18])
  {
    if (v24)
    {
      a1[16] = a2[16];
      a1[17] = a2[17];
      a1[18] = a2[18];
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      a1[19] = a2[19];
      a1[20] = a2[20];
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      a1[21] = a2[21];
      a1[22] = a2[22];
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AFF30734((uint64_t)(a1 + 16));
      long long v26 = *((_OWORD *)a2 + 9);
      long long v25 = *((_OWORD *)a2 + 10);
      long long v27 = *v23;
      a1[22] = a2[22];
      *((_OWORD *)a1 + 9) = v26;
      *((_OWORD *)a1 + 10) = v25;
      *uint64_t v22 = v27;
    }
  }
  else if (v24)
  {
    a1[16] = a2[16];
    a1[17] = a2[17];
    a1[18] = a2[18];
    a1[19] = a2[19];
    a1[20] = a2[20];
    a1[21] = a2[21];
    a1[22] = a2[22];
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
  }
  else
  {
    long long v28 = *v23;
    long long v29 = *((_OWORD *)a2 + 9);
    long long v30 = *((_OWORD *)a2 + 10);
    a1[22] = a2[22];
    *((_OWORD *)a1 + 9) = v29;
    *((_OWORD *)a1 + 10) = v30;
    *uint64_t v22 = v28;
  }
  uint64_t v31 = a1 + 23;
  uint64_t v32 = (long long *)(a2 + 23);
  uint64_t v33 = a2[25];
  if (a1[25])
  {
    if (v33)
    {
      a1[23] = a2[23];
      a1[24] = a2[24];
      a1[25] = a2[25];
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      a1[26] = a2[26];
      a1[27] = a2[27];
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      a1[28] = a2[28];
      a1[29] = a2[29];
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AFF30734((uint64_t)(a1 + 23));
      long long v35 = *(_OWORD *)(a2 + 25);
      long long v34 = *(_OWORD *)(a2 + 27);
      long long v36 = *v32;
      a1[29] = a2[29];
      *(_OWORD *)(a1 + 25) = v35;
      *(_OWORD *)(a1 + 27) = v34;
      *uint64_t v31 = v36;
    }
  }
  else if (v33)
  {
    a1[23] = a2[23];
    a1[24] = a2[24];
    a1[25] = a2[25];
    a1[26] = a2[26];
    a1[27] = a2[27];
    a1[28] = a2[28];
    a1[29] = a2[29];
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
  }
  else
  {
    long long v37 = *v32;
    long long v38 = *(_OWORD *)(a2 + 25);
    long long v39 = *(_OWORD *)(a2 + 27);
    a1[29] = a2[29];
    *(_OWORD *)(a1 + 25) = v38;
    *(_OWORD *)(a1 + 27) = v39;
    *uint64_t v31 = v37;
  }
  uint64_t v40 = a1 + 30;
  long long v41 = (long long *)(a2 + 30);
  uint64_t v42 = a2[32];
  if (a1[32])
  {
    if (v42)
    {
      a1[30] = a2[30];
      a1[31] = a2[31];
      a1[32] = a2[32];
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      a1[33] = a2[33];
      a1[34] = a2[34];
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      a1[35] = a2[35];
      a1[36] = a2[36];
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AFF30734((uint64_t)(a1 + 30));
      long long v44 = *((_OWORD *)a2 + 16);
      long long v43 = *((_OWORD *)a2 + 17);
      long long v45 = *v41;
      a1[36] = a2[36];
      *((_OWORD *)a1 + 16) = v44;
      *((_OWORD *)a1 + 17) = v43;
      _OWORD *v40 = v45;
    }
  }
  else if (v42)
  {
    a1[30] = a2[30];
    a1[31] = a2[31];
    a1[32] = a2[32];
    a1[33] = a2[33];
    a1[34] = a2[34];
    a1[35] = a2[35];
    a1[36] = a2[36];
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
  }
  else
  {
    long long v46 = *v41;
    long long v47 = *((_OWORD *)a2 + 16);
    long long v48 = *((_OWORD *)a2 + 17);
    a1[36] = a2[36];
    *((_OWORD *)a1 + 16) = v47;
    *((_OWORD *)a1 + 17) = v48;
    _OWORD *v40 = v46;
  }
  uint64_t v49 = a1 + 37;
  uint64_t v50 = (long long *)(a2 + 37);
  uint64_t v51 = a2[39];
  if (a1[39])
  {
    if (v51)
    {
      a1[37] = a2[37];
      a1[38] = a2[38];
      a1[39] = a2[39];
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      a1[40] = a2[40];
      a1[41] = a2[41];
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      a1[42] = a2[42];
      a1[43] = a2[43];
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AFF30734((uint64_t)(a1 + 37));
      long long v53 = *(_OWORD *)(a2 + 39);
      long long v52 = *(_OWORD *)(a2 + 41);
      long long v54 = *v50;
      a1[43] = a2[43];
      *(_OWORD *)(a1 + 39) = v53;
      *(_OWORD *)(a1 + 41) = v52;
      _OWORD *v49 = v54;
    }
  }
  else if (v51)
  {
    a1[37] = a2[37];
    a1[38] = a2[38];
    a1[39] = a2[39];
    a1[40] = a2[40];
    a1[41] = a2[41];
    a1[42] = a2[42];
    a1[43] = a2[43];
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
  }
  else
  {
    long long v55 = *v50;
    long long v56 = *(_OWORD *)(a2 + 39);
    long long v57 = *(_OWORD *)(a2 + 41);
    a1[43] = a2[43];
    *(_OWORD *)(a1 + 39) = v56;
    *(_OWORD *)(a1 + 41) = v57;
    _OWORD *v49 = v55;
  }
  uint64_t v58 = a1 + 44;
  uint64_t v59 = (long long *)(a2 + 44);
  uint64_t v60 = a2[46];
  if (a1[46])
  {
    if (v60)
    {
      a1[44] = a2[44];
      a1[45] = a2[45];
      a1[46] = a2[46];
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      a1[47] = a2[47];
      a1[48] = a2[48];
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      a1[49] = a2[49];
      a1[50] = a2[50];
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AFF30734((uint64_t)(a1 + 44));
      long long v62 = *((_OWORD *)a2 + 23);
      long long v61 = *((_OWORD *)a2 + 24);
      long long v63 = *v59;
      a1[50] = a2[50];
      *((_OWORD *)a1 + 23) = v62;
      *((_OWORD *)a1 + 24) = v61;
      *uint64_t v58 = v63;
    }
  }
  else if (v60)
  {
    a1[44] = a2[44];
    a1[45] = a2[45];
    a1[46] = a2[46];
    a1[47] = a2[47];
    a1[48] = a2[48];
    a1[49] = a2[49];
    a1[50] = a2[50];
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
  }
  else
  {
    long long v64 = *v59;
    long long v65 = *((_OWORD *)a2 + 23);
    long long v66 = *((_OWORD *)a2 + 24);
    a1[50] = a2[50];
    *((_OWORD *)a1 + 23) = v65;
    *((_OWORD *)a1 + 24) = v66;
    *uint64_t v58 = v64;
  }
  a1[51] = a2[51];
  a1[52] = a2[52];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[53] = a2[53];
  a1[54] = a2[54];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[55] = a2[55];
  a1[56] = a2[56];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[57] = a2[57];
  a1[58] = a2[58];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AFF30734(uint64_t a1)
{
  sub_1AFF30790();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1AFF30790()
{
  if (!qword_1EB81B6C8[0])
  {
    unint64_t v0 = type metadata accessor for YahooMultiQuoteResponse.Value();
    if (!v1) {
      atomic_store(v0, qword_1EB81B6C8);
    }
  }
}

uint64_t type metadata accessor for YahooMultiQuoteResponse.Value()
{
  return __swift_instantiateGenericMetadata();
}

void *__swift_memcpy472_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x1D8uLL);
}

uint64_t assignWithTake for YahooMultiQuoteResponse.Quote(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 32))
  {
    uint64_t v5 = *(void *)(a2 + 32);
    if (v5)
    {
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = v5;
      swift_bridgeObjectRelease();
      uint64_t v6 = *(void *)(a2 + 48);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = v6;
      swift_bridgeObjectRelease();
      uint64_t v7 = *(void *)(a2 + 64);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = v7;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1AFF30734(a1 + 16);
  }
  long long v8 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v8;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
LABEL_6:
  if (*(void *)(a1 + 88))
  {
    uint64_t v9 = *(void *)(a2 + 88);
    if (v9)
    {
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = v9;
      swift_bridgeObjectRelease();
      uint64_t v10 = *(void *)(a2 + 104);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = v10;
      swift_bridgeObjectRelease();
      uint64_t v11 = *(void *)(a2 + 120);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = v11;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1AFF30734(a1 + 72);
  }
  long long v12 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = v12;
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
LABEL_11:
  if (*(void *)(a1 + 144))
  {
    uint64_t v13 = *(void *)(a2 + 144);
    if (v13)
    {
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      *(void *)(a1 + 144) = v13;
      swift_bridgeObjectRelease();
      uint64_t v14 = *(void *)(a2 + 160);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(void *)(a1 + 160) = v14;
      swift_bridgeObjectRelease();
      uint64_t v15 = *(void *)(a2 + 176);
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      *(void *)(a1 + 176) = v15;
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    sub_1AFF30734(a1 + 128);
  }
  long long v16 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v16;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
LABEL_16:
  if (*(void *)(a1 + 200))
  {
    uint64_t v17 = *(void *)(a2 + 200);
    if (v17)
    {
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      *(void *)(a1 + 200) = v17;
      swift_bridgeObjectRelease();
      uint64_t v18 = *(void *)(a2 + 216);
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      *(void *)(a1 + 216) = v18;
      swift_bridgeObjectRelease();
      uint64_t v19 = *(void *)(a2 + 232);
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      *(void *)(a1 + 232) = v19;
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
    sub_1AFF30734(a1 + 184);
  }
  long long v20 = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = v20;
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
LABEL_21:
  if (*(void *)(a1 + 256))
  {
    uint64_t v21 = *(void *)(a2 + 256);
    if (v21)
    {
      *(void *)(a1 + 240) = *(void *)(a2 + 240);
      *(void *)(a1 + 248) = *(void *)(a2 + 248);
      *(void *)(a1 + 256) = v21;
      swift_bridgeObjectRelease();
      uint64_t v22 = *(void *)(a2 + 272);
      *(void *)(a1 + 264) = *(void *)(a2 + 264);
      *(void *)(a1 + 272) = v22;
      swift_bridgeObjectRelease();
      uint64_t v23 = *(void *)(a2 + 288);
      *(void *)(a1 + 280) = *(void *)(a2 + 280);
      *(void *)(a1 + 288) = v23;
      swift_bridgeObjectRelease();
      goto LABEL_26;
    }
    sub_1AFF30734(a1 + 240);
  }
  long long v24 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = v24;
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
LABEL_26:
  if (*(void *)(a1 + 312))
  {
    uint64_t v25 = *(void *)(a2 + 312);
    if (v25)
    {
      *(void *)(a1 + 296) = *(void *)(a2 + 296);
      *(void *)(a1 + 304) = *(void *)(a2 + 304);
      *(void *)(a1 + 312) = v25;
      swift_bridgeObjectRelease();
      uint64_t v26 = *(void *)(a2 + 328);
      *(void *)(a1 + 320) = *(void *)(a2 + 320);
      *(void *)(a1 + 328) = v26;
      swift_bridgeObjectRelease();
      uint64_t v27 = *(void *)(a2 + 344);
      *(void *)(a1 + 336) = *(void *)(a2 + 336);
      *(void *)(a1 + 344) = v27;
      swift_bridgeObjectRelease();
      goto LABEL_31;
    }
    sub_1AFF30734(a1 + 296);
  }
  long long v28 = *(_OWORD *)(a2 + 312);
  *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 312) = v28;
  *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
  *(void *)(a1 + 344) = *(void *)(a2 + 344);
LABEL_31:
  if (!*(void *)(a1 + 368))
  {
LABEL_35:
    long long v32 = *(_OWORD *)(a2 + 368);
    *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
    *(_OWORD *)(a1 + 368) = v32;
    *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
    *(void *)(a1 + 400) = *(void *)(a2 + 400);
    goto LABEL_36;
  }
  uint64_t v29 = *(void *)(a2 + 368);
  if (!v29)
  {
    sub_1AFF30734(a1 + 352);
    goto LABEL_35;
  }
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  *(void *)(a1 + 360) = *(void *)(a2 + 360);
  *(void *)(a1 + 368) = v29;
  swift_bridgeObjectRelease();
  uint64_t v30 = *(void *)(a2 + 384);
  *(void *)(a1 + 376) = *(void *)(a2 + 376);
  *(void *)(a1 + 384) = v30;
  swift_bridgeObjectRelease();
  uint64_t v31 = *(void *)(a2 + 400);
  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  *(void *)(a1 + 400) = v31;
  swift_bridgeObjectRelease();
LABEL_36:
  uint64_t v33 = *(void *)(a2 + 416);
  *(void *)(a1 + 408) = *(void *)(a2 + 408);
  *(void *)(a1 + 416) = v33;
  swift_bridgeObjectRelease();
  uint64_t v34 = *(void *)(a2 + 432);
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  *(void *)(a1 + 432) = v34;
  swift_bridgeObjectRelease();
  uint64_t v35 = *(void *)(a2 + 448);
  *(void *)(a1 + 440) = *(void *)(a2 + 440);
  *(void *)(a1 + 448) = v35;
  swift_bridgeObjectRelease();
  uint64_t v36 = *(void *)(a2 + 464);
  *(void *)(a1 + 456) = *(void *)(a2 + 456);
  *(void *)(a1 + 464) = v36;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for YahooMultiQuoteResponse.Quote(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 472)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for YahooMultiQuoteResponse.Quote(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 472) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 472) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for YahooMultiQuoteResponse.Quote()
{
  return &type metadata for YahooMultiQuoteResponse.Quote;
}

uint64_t sub_1AFF30CB0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1AFF30D4C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0
    || ((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    sub_1AFFC8E48();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    uint64_t v10 = (void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v11 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    void *v10 = *v11;
    v10[1] = v11[1];
    long long v12 = (void *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v13 = (void *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
    *long long v12 = *v13;
    v12[1] = v13[1];
    uint64_t v14 = (void *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v15 = (void *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v14 = *v15;
    v14[1] = v15[1];
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
  }
  return v4;
}

uint64_t sub_1AFF30EB0(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFF30F40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  long long v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  void *v7 = *v8;
  v7[1] = v8[1];
  uint64_t v9 = (void *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  uint64_t v11 = (void *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8);
  long long v12 = (void *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  return a1;
}

uint64_t sub_1AFF31018(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  long long v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  void *v7 = *v8;
  v7[1] = v8[1];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  uint64_t v9 = (void *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  uint64_t v11 = (void *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8);
  long long v12 = (void *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AFF3110C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  int v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  long long v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  _OWORD *v7 = *v8;
  uint64_t v9 = (_OWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (_OWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v9 = *v10;
  *(_OWORD *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1AFF311A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  long long v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  void *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  uint64_t v9 = (void *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRelease();
  uint64_t v11 = (void *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8);
  long long v12 = (void *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AFF31284(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1AFF313E0);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)((((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_1AFF313F4(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v8 >= a3)
  {
    int v14 = 0;
    int v15 = a2 - v8;
    if (a2 <= v8)
    {
LABEL_17:
      switch(v14)
      {
        case 1:
          a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)&a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_42;
        case 4:
          *(_DWORD *)&a1[v10] = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            if (v7 < 0x7FFFFFFF)
            {
              uint64_t v19 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
              if ((a2 & 0x80000000) != 0)
              {
                *uint64_t v19 = a2 ^ 0x80000000;
                v19[1] = 0;
              }
              else
              {
                v19[1] = a2 - 1;
              }
            }
            else
            {
              uint64_t v18 = *(void (**)(void))(v6 + 56);
              v18();
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v11 = a3 - v8;
    if (((((((v9 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      unsigned int v12 = v11 + 1;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v13 = 1;
    }
    if (v12 >= 2) {
      int v14 = v13;
    }
    else {
      int v14 = 0;
    }
    int v15 = a2 - v8;
    if (a2 <= v8) {
      goto LABEL_17;
    }
  }
  if (((((((v9 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    int v16 = v15;
  }
  else {
    int v16 = 1;
  }
  if (((((((v9 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    int v17 = ~v8 + a2;
    bzero(a1, ((((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16);
    *(_DWORD *)a1 = v17;
  }
  switch(v14)
  {
    case 1:
      a1[v10] = v16;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v16;
      break;
    case 3:
LABEL_42:
      __break(1u);
      JUMPOUT(0x1AFF315F0);
    case 4:
      *(_DWORD *)&a1[v10] = v16;
      break;
    default:
      return;
  }
}

unint64_t sub_1AFF3161C()
{
  unint64_t result = qword_1E9AFCAB8;
  if (!qword_1E9AFCAB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFCAB8);
  }
  return result;
}

unint64_t sub_1AFF31674()
{
  unint64_t result = qword_1E9AFCAC0;
  if (!qword_1E9AFCAC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFCAC0);
  }
  return result;
}

unint64_t sub_1AFF316CC()
{
  unint64_t result = qword_1E9AFCAC8[0];
  if (!qword_1E9AFCAC8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9AFCAC8);
  }
  return result;
}

unint64_t sub_1AFF31724()
{
  unint64_t result = qword_1EB81B750;
  if (!qword_1EB81B750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB81B750);
  }
  return result;
}

unint64_t sub_1AFF3177C()
{
  unint64_t result = qword_1EB81B758;
  if (!qword_1EB81B758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB81B758);
  }
  return result;
}

unint64_t sub_1AFF317D4()
{
  unint64_t result = qword_1EB81B760;
  if (!qword_1EB81B760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB81B760);
  }
  return result;
}

unint64_t sub_1AFF3182C()
{
  unint64_t result = qword_1EB81B768;
  if (!qword_1EB81B768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB81B768);
  }
  return result;
}

unint64_t sub_1AFF31884()
{
  unint64_t result = qword_1EB81B770;
  if (!qword_1EB81B770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB81B770);
  }
  return result;
}

unint64_t sub_1AFF318DC()
{
  unint64_t result = qword_1EB81B778;
  if (!qword_1EB81B778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB81B778);
  }
  return result;
}

void sub_1AFF31930(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  if (!*a2)
  {
    a3();
    unint64_t v4 = sub_1AFFCBB78();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_1AFF31990()
{
  unint64_t result = qword_1EB81B788;
  if (!qword_1EB81B788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB81B788);
  }
  return result;
}

unint64_t sub_1AFF319E4()
{
  unint64_t result = qword_1EB81B790[0];
  if (!qword_1EB81B790[0])
  {
    sub_1AFF30790();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EB81B790);
  }
  return result;
}

uint64_t type metadata accessor for YahooMultiQuoteResponse.Value.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for YahooMultiQuoteResponse.Value.ValueError()
{
  return __swift_instantiateGenericMetadata();
}

unsigned char *_s10StocksCore23YahooMultiQuoteResponseV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1AFF31B08);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

unsigned char *sub_1AFF31B30(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFF31BFCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for YahooMultiQuoteResponse.Quote.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *unint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFF31CF0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for YahooMultiQuoteResponse.Quote.CodingKeys()
{
  return &type metadata for YahooMultiQuoteResponse.Quote.CodingKeys;
}

unint64_t sub_1AFF31D2C()
{
  unint64_t result = qword_1E9AFCB50;
  if (!qword_1E9AFCB50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFCB50);
  }
  return result;
}

uint64_t sub_1AFF31D80()
{
  return swift_getWitnessTable();
}

uint64_t sub_1AFF31D9C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1AFF31DB8()
{
  return swift_getWitnessTable();
}

uint64_t sub_1AFF31DD4()
{
  return swift_getWitnessTable();
}

unint64_t sub_1AFF31DF4()
{
  unint64_t result = qword_1EB81B818;
  if (!qword_1EB81B818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB81B818);
  }
  return result;
}

unint64_t sub_1AFF31E4C()
{
  unint64_t result = qword_1EB81B820;
  if (!qword_1EB81B820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB81B820);
  }
  return result;
}

uint64_t sub_1AFF31EA0()
{
  return sub_1AFFC8C08();
}

uint64_t sub_1AFF31EC4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v46 = a1;
  long long v47 = a2;
  uint64_t v42 = type metadata accessor for SymbolEntity();
  uint64_t v40 = *(void *)(v42 - 8);
  uint64_t v2 = MEMORY[0x1F4188790](v42);
  uint64_t v45 = (uint64_t)v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  uint64_t v44 = (uint64_t)v35 - v4;
  uint64_t v43 = sub_1AFFC8EC8();
  uint64_t v41 = *(void *)(v43 - 8);
  MEMORY[0x1F4188790](v43);
  long long v39 = (char *)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1AFF32F84(0, &qword_1EB816AF0, MEMORY[0x1E4F182D8], MEMORY[0x1E4FBB718]);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  long long v38 = (char *)v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  long long v37 = (char *)v35 - v10;
  sub_1AFF32F84(0, &qword_1EB810BC8, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity, v6);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v36 = (char *)v35 - v12;
  sub_1AFF32F84(0, &qword_1EB816B00, MEMORY[0x1E4F27608], v6);
  MEMORY[0x1F4188790](v13 - 8);
  v35[0] = (char *)v35 - v14;
  uint64_t v15 = sub_1AFFC9528();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1AFFC9A78();
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v20 = sub_1AFFCAE58();
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v21 = sub_1AFFC9548();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  sub_1AFDA7970();
  v35[1] = v23;
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  uint64_t v24 = *MEMORY[0x1E4F275D0];
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 104);
  v25(v18, v24, v15);
  sub_1AFFC9558();
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  v25(v18, v24, v15);
  uint64_t v26 = v35[0];
  sub_1AFFC9558();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v22 + 56))(v26, 0, 1, v21);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v40 + 56))(v36, 1, 1, v42);
  uint64_t v27 = sub_1AFFC8AD8();
  long long v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56);
  v28(v37, 1, 1, v27);
  v28(v38, 1, 1, v27);
  (*(void (**)(char *, void, uint64_t))(v41 + 104))(v39, *MEMORY[0x1E4F186F0], v43);
  sub_1AFF32F3C(&qword_1EB810BC0, (void (*)(uint64_t))type metadata accessor for SymbolEntity);
  uint64_t v29 = sub_1AFFC8C68();
  sub_1AFF32F84(0, &qword_1EB8167D8, (uint64_t (*)(uint64_t))sub_1AFD50100, MEMORY[0x1E4F18188]);
  sub_1AFFC8A08();
  long long v48 = 0u;
  long long v49 = 0u;
  uint64_t v50 = 0;
  sub_1AFFC8E48();
  sub_1AFFC89F8();
  uint64_t v30 = sub_1AFFC89C8();
  uint64_t v31 = v46;
  uint64_t v32 = v44;
  sub_1AFD5BCD0(v46, v44);
  sub_1AFD5BCD0(v32, v45);
  swift_retain_n();
  sub_1AFFC8E48();
  sub_1AFFC8C18();
  sub_1AFD2E05C(v32);
  sub_1AFD2E05C(v31);
  swift_release_n();
  uint64_t result = swift_release_n();
  uint64_t v34 = v47;
  *long long v47 = v29;
  v34[1] = v30;
  return result;
}

uint64_t sub_1AFF32618()
{
  return 0x746E496B636F7453;
}

uint64_t sub_1AFF32638()
{
  uint64_t v0 = sub_1AFFC9528();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1AFFC9A78();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v5 = sub_1AFFCAE58();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v6 = sub_1AFFC9548();
  __swift_allocate_value_buffer(v6, qword_1E9AFCB58);
  __swift_project_value_buffer(v6, (uint64_t)qword_1E9AFCB58);
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4F275D0], v0);
  return sub_1AFFC9558();
}

uint64_t sub_1AFF3281C@<X0>(uint64_t a1@<X8>)
{
  return sub_1AFD32B4C(&qword_1E9AF8DE8, MEMORY[0x1E4F27608], (uint64_t)qword_1E9AFCB58, a1);
}

uint64_t sub_1AFF32854()
{
  sub_1AFF32F84(0, &qword_1EB816B00, MEMORY[0x1E4F27608], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)v12 - v1;
  v12[0] = sub_1AFFC9528();
  uint64_t v3 = *(void *)(v12[0] - 8);
  MEMORY[0x1F4188790](v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1AFFC9A78();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v7 = sub_1AFFCAE58();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v8 = sub_1AFFC9548();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = sub_1AFFC8CD8();
  __swift_allocate_value_buffer(v10, qword_1E9AFCB70);
  __swift_project_value_buffer(v10, (uint64_t)qword_1E9AFCB70);
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, *MEMORY[0x1E4F275D0], v12[0]);
  sub_1AFFC9558();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_1AFFC8CE8();
}

uint64_t sub_1AFF32B5C@<X0>(uint64_t a1@<X8>)
{
  return sub_1AFD32B4C(qword_1E9AF8DF0, MEMORY[0x1E4F18510], (uint64_t)qword_1E9AFCB70, a1);
}

uint64_t sub_1AFF32B94()
{
  return 1;
}

uint64_t sub_1AFF32B9C()
{
  sub_1AFF340CC(0, &qword_1E9AFCB88, MEMORY[0x1E4F186C8]);
  MEMORY[0x1F4188790](v0 - 8);
  sub_1AFF340CC(0, &qword_1E9AFCB90, MEMORY[0x1E4F186C0]);
  MEMORY[0x1F4188790](v1);
  sub_1AFE3B6D4();
  sub_1AFFC8EA8();
  sub_1AFFC8E98();
  swift_getKeyPath();
  sub_1AFF32FEC();
  sub_1AFFC8E88();
  swift_release();
  sub_1AFFC8E98();
  sub_1AFFC8EB8();
  return sub_1AFFC8E58();
}

uint64_t sub_1AFF32D48()
{
  return sub_1AFFC8C28();
}

uint64_t sub_1AFF32D6C()
{
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8C08();
  swift_release();

  return swift_release();
}

uint64_t sub_1AFF32DCC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SymbolEntity();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v9 - v6;
  sub_1AFD5BCD0(a1, (uint64_t)&v9 - v6);
  sub_1AFD5BCD0((uint64_t)v7, (uint64_t)v4);
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8C18();
  sub_1AFD2E05C((uint64_t)v7);
  swift_release();
  return swift_release();
}

uint64_t sub_1AFF32EAC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SymbolEntity();
  MEMORY[0x1F4188790](v2 - 8);
  sub_1AFD5BCD0(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1AFFC8C18();
  return sub_1AFD2E05C(a1);
}

uint64_t sub_1AFF32F3C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1AFF32F84(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1AFF32FEC()
{
  if (!qword_1E9AFCB98)
  {
    sub_1AFDA7970();
    unint64_t v0 = sub_1AFFCBE88();
    if (!v1) {
      atomic_store(v0, &qword_1E9AFCB98);
    }
  }
}

uint64_t (*sub_1AFF3304C(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1AFFC8BF8();
  return sub_1AFD3325C;
}

uint64_t sub_1AFF330A8()
{
  return sub_1AFFC8998();
}

uint64_t sub_1AFF330CC(uint64_t a1)
{
  sub_1AFD2CEB0(a1, (uint64_t)v3);
  sub_1AFFC89A8();
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t (*sub_1AFF33110(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1AFFC8988();
  return sub_1AFD3325C;
}

uint64_t sub_1AFF3316C()
{
  return sub_1AFFC89B8();
}

uint64_t sub_1AFF33190@<X0>(uint64_t *a1@<X8>)
{
  long long v39 = a1;
  uint64_t v1 = sub_1AFFC8EC8();
  uint64_t v37 = *(void *)(v1 - 8);
  uint64_t v38 = v1;
  MEMORY[0x1F4188790](v1);
  uint64_t v36 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1AFF32F84(0, &qword_1EB816AF0, MEMORY[0x1E4F182D8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v35 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v34 = (char *)&v30 - v7;
  sub_1AFF32F84(0, &qword_1EB810BC8, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity, v3);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v33 = (char *)&v30 - v9;
  sub_1AFF32F84(0, &qword_1EB816B00, MEMORY[0x1E4F27608], v3);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v31 = (char *)&v30 - v11;
  uint64_t v12 = sub_1AFFC9528();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1AFFC9A78();
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v17 = sub_1AFFCAE58();
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v18 = sub_1AFFC9548();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  sub_1AFDA7970();
  uint64_t v32 = v20;
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  uint64_t v21 = *MEMORY[0x1E4F275D0];
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 104);
  v22(v15, v21, v12);
  sub_1AFFC9558();
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  v22(v15, v21, v12);
  uint64_t v23 = v31;
  sub_1AFFC9558();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v23, 0, 1, v18);
  uint64_t v24 = type metadata accessor for SymbolEntity();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v33, 1, 1, v24);
  uint64_t v25 = sub_1AFFC8AD8();
  uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56);
  v26(v34, 1, 1, v25);
  v26(v35, 1, 1, v25);
  (*(void (**)(char *, void, uint64_t))(v37 + 104))(v36, *MEMORY[0x1E4F186F0], v38);
  sub_1AFF32F3C(&qword_1EB810BC0, (void (*)(uint64_t))type metadata accessor for SymbolEntity);
  uint64_t v27 = sub_1AFFC8C68();
  sub_1AFF32F84(0, &qword_1EB8167D8, (uint64_t (*)(uint64_t))sub_1AFD50100, MEMORY[0x1E4F18188]);
  sub_1AFFC8A08();
  long long v40 = 0u;
  long long v41 = 0u;
  uint64_t v42 = 0;
  sub_1AFFC89F8();
  uint64_t result = sub_1AFFC89C8();
  uint64_t v29 = v39;
  *long long v39 = v27;
  v29[1] = result;
  return result;
}

uint64_t sub_1AFF337E0(uint64_t a1)
{
  *(void *)(v2 + 80) = a1;
  *(_OWORD *)(v2 + 88) = *v1;
  return MEMORY[0x1F4188298](sub_1AFF33808, 0, 0);
}

uint64_t sub_1AFF33808()
{
  uint64_t v2 = v0[11];
  uint64_t v1 = v0[12];
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8998();
  swift_release();
  swift_release();
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v3);
  v0[7] = v2;
  v0[8] = v1;
  v0[9] = 0x4000000000000000;
  uint64_t v7 = (uint64_t (*)(void *, uint64_t, uint64_t))(*(void *)(v4 + 8) + **(int **)(v4 + 8));
  uint64_t v5 = (void *)swift_task_alloc();
  v0[13] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1AFF33960;
  return v7(v0 + 7, v3, v4);
}

uint64_t sub_1AFF33960()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1AFF33A74;
  }
  else {
    uint64_t v2 = sub_1AFD503CC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1AFF33A74()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

unint64_t sub_1AFF33ADC()
{
  unint64_t result = qword_1E9AFCBA8;
  if (!qword_1E9AFCBA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFCBA8);
  }
  return result;
}

uint64_t sub_1AFF33B30()
{
  return sub_1AFF32F3C(&qword_1EB816B18, (void (*)(uint64_t))type metadata accessor for SymbolEntity);
}

uint64_t sub_1AFF33B78(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SymbolEntity();
  MEMORY[0x1F4188790](v2 - 8);
  sub_1AFD5BCD0(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1AFFC8C18();
  return sub_1AFD2E05C(a1);
}

unint64_t sub_1AFF33C10()
{
  unint64_t result = qword_1EB816800;
  if (!qword_1EB816800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816800);
  }
  return result;
}

unint64_t sub_1AFF33C68()
{
  unint64_t result = qword_1EB816B78;
  if (!qword_1EB816B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816B78);
  }
  return result;
}

uint64_t sub_1AFF33CBC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1AFF33CD8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1AFF33CF4@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E9AF8DE8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1AFFC9548();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1E9AFCB58);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1AFF33D9C()
{
  sub_1AFF340CC(0, &qword_1E9AFCB88, MEMORY[0x1E4F186C8]);
  MEMORY[0x1F4188790](v0 - 8);
  sub_1AFF340CC(0, &qword_1E9AFCB90, MEMORY[0x1E4F186C0]);
  MEMORY[0x1F4188790](v1);
  sub_1AFFC8EA8();
  sub_1AFFC8E98();
  swift_getKeyPath();
  sub_1AFF32FEC();
  sub_1AFFC8E88();
  swift_release();
  sub_1AFFC8E98();
  sub_1AFFC8EB8();
  return sub_1AFFC8E58();
}

uint64_t sub_1AFF33F40(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_1AFD3503C;
  *(void *)(v4 + 80) = a1;
  *(_OWORD *)(v4 + 88) = *v1;
  return MEMORY[0x1F4188298](sub_1AFF33808, 0, 0);
}

uint64_t sub_1AFF33FF8(uint64_t a1)
{
  unint64_t v2 = sub_1AFE3B6D4();

  return MEMORY[0x1F40D3C90](a1, v2);
}

ValueMetadata *type metadata accessor for OpenSymbolIntent()
{
  return &type metadata for OpenSymbolIntent;
}

unint64_t sub_1AFF34058()
{
  unint64_t result = qword_1E9AFCBB8;
  if (!qword_1E9AFCBB8)
  {
    sub_1AFF340CC(255, &qword_1E9AFCBC0, MEMORY[0x1E4F186A8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFCBB8);
  }
  return result;
}

void sub_1AFF340CC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1AFE3B6D4();
    unint64_t v7 = a3(a1, &type metadata for OpenSymbolIntent, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1AFF34130()
{
  return sub_1AFF32F3C((unint64_t *)&qword_1E9AF9CD8, (void (*)(uint64_t))sub_1AFD3765C);
}

uint64_t sub_1AFF34178(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v29 = a5;
  uint64_t v30 = a8;
  uint64_t v10 = v9;
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v28 = *(void *)(a5 - 8);
  MEMORY[0x1F4188790](a1);
  long long v40 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v36 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v14 = (char *)&v26 - v13;
  MEMORY[0x1F4188790](v15);
  uint64_t v33 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v31 = *(void *)(v17 - 8);
  uint64_t v32 = v17;
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v26 - v18;
  uint64_t v34 = v8;
  uint64_t v20 = sub_1AFFCB3D8();
  if (!v20) {
    return sub_1AFFCB248();
  }
  uint64_t v21 = v20;
  uint64_t v27 = v14;
  uint64_t v43 = sub_1AFFCAC68();
  uint64_t v35 = sub_1AFFCB908();
  sub_1AFFCB8A8();
  long long v41 = v19;
  uint64_t result = sub_1AFFCB3A8();
  if (v21 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v23 = (void (**)(char *))(v36 + 2);
    ++v36;
    uint64_t v37 = v23;
    uint64_t v24 = v27;
    while (1)
    {
      uint64_t v25 = (void (*)(char *, void))sub_1AFFCB408();
      (*v37)(v24);
      v25(v42, 0);
      v38(v24, v40);
      if (v10) {
        break;
      }
      uint64_t v10 = 0;
      (*v36)(v24, AssociatedTypeWitness);
      sub_1AFFCB8E8();
      sub_1AFFCB3E8();
      if (!--v21)
      {
        (*(void (**)(char *, uint64_t))(v31 + 8))(v41, v32);
        return v43;
      }
    }
    (*v36)(v24, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v41, v32);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v28 + 32))(v30, v40, v29);
  }
  return result;
}

uint64_t ArticleScorer.init(subscribedTags:config:currentDate:)@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = a1;
  sub_1AFD80454(a2, (uint64_t)(a4 + 1));
  unint64_t v6 = (char *)a4 + *(int *)(type metadata accessor for ArticleScorer() + 24);
  uint64_t v7 = sub_1AFFC98F8();
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32);

  return v8(v6, a3, v7);
}

uint64_t type metadata accessor for ArticleScorer()
{
  uint64_t result = qword_1EB816E50;
  if (!qword_1EB816E50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void ArticleScorer.score<A>(article:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_1AFFC98F8();
  uint64_t v54 = *(void *)(v10 - 8);
  uint64_t v55 = v10;
  MEMORY[0x1F4188790](v10);
  long long v53 = (char *)v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v13 = MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v16 + 16))(v15, a1, a2, v13);
  double v17 = (*(double (**)(uint64_t, uint64_t))(a3 + 56))(a2, a3);
  double v18 = (*(double (**)(uint64_t, uint64_t))(a3 + 40))(a2, a3);
  double v19 = (*(double (**)(uint64_t, uint64_t))(a3 + 48))(a2, a3);
  sub_1AFF3605C(a1, v4, a2, a3);
  uint64_t v21 = v20;
  uint64_t v22 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 32))(a2, a3);
  uint64_t v23 = *(void *)(v22 + 16);
  uint64_t v56 = a4;
  if (!v23)
  {
    swift_bridgeObjectRelease();
    uint64_t v25 = 0;
    goto LABEL_30;
  }
  v48[2] = a1;
  long long v49 = v15;
  uint64_t v51 = a2;
  uint64_t v52 = a3;
  uint64_t v24 = 0;
  uint64_t v25 = 0;
  v48[1] = v22;
  uint64_t v26 = v22 + 32;
  uint64_t v50 = v5;
  uint64_t v27 = (void *)*v5;
  uint64_t v28 = v27[2];
  uint64_t v58 = v23;
  uint64_t v59 = v27 + 7;
  uint64_t v57 = v22 + 32;
  while (1)
  {
    if (v28)
    {
      uint64_t v29 = (uint64_t *)(v26 + 16 * v24);
      uint64_t v30 = *v29;
      uint64_t v31 = v29[1];
      if (v27[4] == *v29 && v27[5] == v31)
      {
        uint64_t v34 = 1;
      }
      else
      {
        char v33 = sub_1AFFCBCE8();
        uint64_t v34 = v33 & 1;
        if ((v33 & 1) == 0 && v28 != 1)
        {
          uint64_t v35 = v59;
          uint64_t v36 = 1;
          while (1)
          {
            uint64_t v37 = v36 + 1;
            if (__OFADD__(v36, 1))
            {
              __break(1u);
              return;
            }
            BOOL v38 = *(v35 - 1) == v30 && *v35 == v31;
            if (v38 || (sub_1AFFCBCE8() & 1) != 0) {
              break;
            }
            v35 += 2;
            ++v36;
            if (v37 == v28)
            {
              uint64_t v39 = 0;
              goto LABEL_25;
            }
          }
          uint64_t v39 = 1;
LABEL_25:
          uint64_t v26 = v57;
          uint64_t v23 = v58;
          BOOL v40 = __OFADD__(v25, v39);
          v25 += v39;
          if (v40) {
            break;
          }
          goto LABEL_22;
        }
      }
      BOOL v40 = __OFADD__(v25, v34);
      v25 += v34;
      if (v40) {
        break;
      }
    }
LABEL_22:
    if (++v24 == v23) {
      goto LABEL_28;
    }
  }
  __break(1u);
LABEL_28:
  swift_bridgeObjectRelease();
  a2 = v51;
  a3 = v52;
  uint64_t v15 = v49;
  uint64_t v5 = v50;
LABEL_30:
  double v41 = (*(double (**)(uint64_t, uint64_t))(a3 + 64))(a2, a3);
  double v42 = (*(double (**)(uint64_t, uint64_t))(a3 + 72))(a2, a3);
  char v43 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 96))(a2, a3);
  uint64_t v44 = v53;
  (*(void (**)(uint64_t, uint64_t))(a3 + 80))(a2, a3);
  type metadata accessor for ArticleScorer();
  sub_1AFFC97B8();
  double v46 = v45 * 1000.0;
  (*(void (**)(char *, uint64_t))(v54 + 8))(v44, v55);
  double v47 = (*(double (**)(uint64_t, uint64_t))(a3 + 88))(a2, a3);
  *(double *)&long long v60 = v17;
  *((double *)&v60 + 1) = v18;
  *(double *)&long long v61 = v19;
  *((void *)&v61 + 1) = v21;
  uint64_t v62 = v25;
  *(double *)&long long v63 = v41;
  *((double *)&v63 + 1) = v42;
  char v64 = v43 & 1;
  *(double *)&long long v65 = v46;
  *((double *)&v65 + 1) = v47;
  long long v66 = 0u;
  long long v67 = 0u;
  uint64_t v68 = 0;
  sub_1AFF34B00((uint64_t)&v60, v5 + 1, (uint64_t)v69);
  long long v60 = v69[0];
  long long v61 = v69[1];
  uint64_t v62 = v70;
  long long v63 = v71;
  char v64 = v72;
  long long v65 = v73;
  long long v66 = v74;
  long long v67 = v75;
  uint64_t v68 = v76;
  sub_1AFD32218((uint64_t)v15, &v60, a2, v56);
}

long double sub_1AFF34B00@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  double v98 = *(double *)a1;
  double v99 = *(double *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 32);
  double v100 = *(double *)(a1 + 24);
  double v101 = *(double *)(a1 + 40);
  double v102 = *(double *)(a1 + 48);
  double v103 = *(double *)(a1 + 8);
  int v6 = *(unsigned __int8 *)(a1 + 56);
  double v7 = *(double *)(a1 + 64);
  double v8 = *(double *)(a1 + 72);
  uint64_t v9 = *(void *)(a1 + 80);
  uint64_t v10 = *(void *)(a1 + 88);
  uint64_t v11 = a2[3];
  uint64_t v12 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v11);
  (*(void (**)(uint64_t, uint64_t))(v12 + 136))(v11, v12);
  BOOL v14 = v8 > 0.0 && v7 > 0.0;
  long double v15 = 1.0;
  double v96 = v8;
  double v97 = v7;
  double v16 = v7 / v8;
  long double v17 = 1.0;
  if (v14) {
    long double v17 = exp2(-(v13 * v16));
  }
  double v95 = v17;
  uint64_t v18 = a2[3];
  uint64_t v19 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v18);
  (*(void (**)(uint64_t, uint64_t))(v19 + 48))(v18, v19);
  if (v14) {
    long double v15 = exp2(-(v20 * v16));
  }
  double v90 = v15;
  uint64_t v21 = a2[3];
  uint64_t v22 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v21);
  double v23 = (*(double (**)(uint64_t, uint64_t))(v22 + 40))(v21, v22);
  uint64_t v24 = a2[3];
  uint64_t v25 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v24);
  double v93 = (*(double (**)(uint64_t, uint64_t))(v25 + 24))(v24, v25);
  uint64_t v26 = a2[3];
  uint64_t v27 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v26);
  double v91 = (*(double (**)(uint64_t, uint64_t))(v27 + 32))(v26, v27);
  sub_1AFF36F48(v5, a2);
  double v92 = v28;
  uint64_t v29 = a2[3];
  uint64_t v30 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v29);
  double v89 = (*(double (**)(uint64_t, uint64_t))(v30 + 104))(v29, v30);
  uint64_t v31 = a2[3];
  uint64_t v32 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v31);
  double v33 = (*(double (**)(uint64_t, uint64_t))(v32 + 112))(v31, v32);
  uint64_t v34 = a2[3];
  uint64_t v35 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v34);
  double v36 = (*(double (**)(uint64_t, uint64_t))(v35 + 16))(v34, v35);
  uint64_t v37 = a2[3];
  uint64_t v38 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v37);
  double v39 = (*(double (**)(uint64_t, uint64_t))(v38 + 8))(v37, v38);
  uint64_t v40 = a2[3];
  uint64_t v41 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v40);
  double v42 = (*(double (**)(uint64_t, uint64_t))(v41 + 56))(v40, v41);
  uint64_t v43 = a2[3];
  uint64_t v44 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v43);
  double v45 = (*(double (**)(uint64_t, uint64_t))(v44 + 96))(v43, v44);
  uint64_t v46 = a2[3];
  uint64_t v47 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v46);
  double v48 = (*(double (**)(uint64_t, uint64_t))(v47 + 120))(v46, v47);
  uint64_t v49 = a2[3];
  uint64_t v50 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v49);
  double v51 = (*(double (**)(uint64_t, uint64_t))(v50 + 152))(v49, v50);
  double v52 = 1.0;
  if (v6)
  {
    uint64_t v53 = a2[3];
    uint64_t v54 = a2[4];
    double v55 = v51;
    __swift_project_boxed_opaque_existential_1(a2, v53);
    double v56 = (*(double (**)(uint64_t, uint64_t))(v54 + 144))(v53, v54);
    double v51 = v55;
    double v52 = 1.0 - v56;
  }
  double v57 = v36;
  double v58 = v39;
  double v59 = v36 + v39 + v42 + v45 + v48;
  if (v59 <= 0.0) {
    double v59 = 1.0;
  }
  double v60 = v101 * v89 + v33;
  if (v60 <= 1.0) {
    double v61 = v101 * v89 + v33;
  }
  else {
    double v61 = 1.0;
  }
  BOOL v62 = v60 > 0.0;
  double v63 = 0.0;
  if (!v62) {
    double v61 = 0.0;
  }
  double v64 = v99 * v93 + v91;
  if (v64 <= 1.0) {
    double v65 = v99 * v93 + v91;
  }
  else {
    double v65 = 1.0;
  }
  if (v64 > 0.0) {
    double v63 = v65;
  }
  double v66 = (1.0 - v23) * v63;
  double v94 = v90 * (v100 * v23) + v95 * v66;
  double v67 = v52 / v59;
  double v68 = (v100 * v23 + v66) * v36;
  double v69 = v103 * v58;
  double v70 = v92 * v42;
  double v71 = v61 * v45;
  double v72 = v102 * v48;
  double v73 = (v68 + v103 * v58 + v70 + v71 + v72) * v67;
  long double v74 = pow(1.0 - v51, (double)v10);
  long double v75 = v74 * v73;
  long double v76 = v74 * ((v94 * v57 + v95 * (v69 + v70 + v71 + v72)) * v67);
  uint64_t v77 = a2[3];
  uint64_t v78 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v77);
  double v79 = (*(double (**)(uint64_t, uint64_t))(v78 + 160))(v77, v78);
  double v80 = v98 * v79;
  double v81 = 1.0 - v79;
  long double v82 = v98 * v79 + v75 * (1.0 - v79);
  long double v83 = v98 * v79 + v76 * (1.0 - v79);
  uint64_t v84 = a2[3];
  uint64_t v85 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v84);
  double v86 = (*(double (**)(uint64_t, uint64_t))(v85 + 128))(v84, v85);
  long double v87 = pow(1.0 - v86, (double)v9);
  *(double *)a3 = v98;
  *(double *)(a3 + 8) = v103;
  long double result = v80 + v81 * (v76 * v87);
  *(double *)(a3 + 16) = v99;
  *(double *)(a3 + 24) = v100;
  *(void *)(a3 + 32) = v5;
  *(double *)(a3 + 40) = v101;
  *(double *)(a3 + 48) = v102;
  *(unsigned char *)(a3 + 56) = v6;
  *(double *)(a3 + 64) = v97;
  *(double *)(a3 + 72) = v96;
  *(void *)(a3 + 80) = v9;
  *(void *)(a3 + 88) = v10;
  *(long double *)(a3 + 96) = v82;
  *(long double *)(a3 + 104) = v83;
  *(long double *)(a3 + 112) = result;
  return result;
}

uint64_t ArticleScorer.score<A>(articles:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v14 = a1;
  uint64_t v10 = a2;
  uint64_t v11 = a3;
  uint64_t v3 = sub_1AFFCB288();
  uint64_t v4 = type metadata accessor for ScoredArticle();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v15 = sub_1AFF34178((void (*)(char *, char *))sub_1AFF364AC, (uint64_t)v9, v3, v4, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v6);
  sub_1AFFCB288();
  uint64_t v13 = sub_1AFFCAC58();
  sub_1AFFCAD18();
  swift_getWitnessTable();
  sub_1AFFCB0B8();
  swift_bridgeObjectRelease();
  uint64_t v7 = sub_1AFFCAD08();
  swift_bridgeObjectRelease();
  uint64_t v13 = v7;
  uint64_t v12 = sub_1AFFCAC68();
  swift_getWitnessTable();
  sub_1AFFCB0B8();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_1AFF35300(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
  uint64_t v8 = v7;
  uint64_t v9 = *a1;
  uint64_t v17 = v6;
  uint64_t v18 = v7;
  uint64_t v10 = type metadata accessor for ScoredArticle();
  uint64_t v11 = sub_1AFFCB288();
  sub_1AFFC8E38();
  MEMORY[0x1B3E8D180](&v19, &v17, v9, MEMORY[0x1E4FBB1A0], v11, MEMORY[0x1E4FBB1B0]);
  swift_bridgeObjectRelease();
  if (!v19) {
    sub_1AFFCB248();
  }
  sub_1AFFCBC98();
  uint64_t v12 = *(void *)(v10 - 8);
  swift_allocObject();
  uint64_t v13 = sub_1AFFCB218();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v14, a2, v10);
  sub_1AFF94D2C(v13);
  uint64_t v15 = sub_1AFFCB238();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v19 = v15;
  uint64_t v17 = v6;
  uint64_t v18 = v8;
  sub_1AFFCAD18();
  return sub_1AFFCAD38();
}

uint64_t sub_1AFF354F8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v29 = *a1;
  uint64_t v26 = a3;
  uint64_t v27 = a4;
  uint64_t v8 = (char *)type metadata accessor for ScoredArticle();
  uint64_t v9 = sub_1AFFCB288();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_1AFFCB0C8();
  MEMORY[0x1B3E8D4F0](&v29, v9, WitnessTable);
  swift_bridgeObjectRelease();
  uint64_t v28 = v29;
  uint64_t v23 = a3;
  uint64_t v24 = a4;
  uint64_t v25 = a2;
  uint64_t v18 = a3;
  uint64_t v19 = a4;
  double v20 = sub_1AFF36EB4;
  uint64_t v21 = &v22;
  uint64_t v11 = sub_1AFFCB9B8();
  uint64_t v12 = swift_getWitnessTable();
  uint64_t v14 = sub_1AFF3595C((void (*)(char *, char *))sub_1AFF36EC0, (uint64_t)v17, v11, v8, MEMORY[0x1E4FBC248], v12, MEMORY[0x1E4FBC278], v13);
  uint64_t result = swift_bridgeObjectRelease();
  *a5 = v14;
  return result;
}

void sub_1AFF356A8(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v33 = a5;
  uint64_t v34 = a6;
  uint64_t v10 = *(void *)(a4 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a2 + *(int *)(type metadata accessor for ScoredArticle() + 36);
  double v14 = *(double *)v13;
  long long v31 = *(_OWORD *)(v13 + 8);
  uint64_t v30 = *(void *)(v13 + 24);
  uint64_t v29 = *(void *)(v13 + 32);
  uint64_t v15 = *(void *)(v13 + 40);
  uint64_t v16 = *(void *)(v13 + 48);
  int v28 = *(unsigned __int8 *)(v13 + 56);
  uint64_t v17 = *(void *)(v13 + 64);
  uint64_t v27 = *(void *)(v13 + 72);
  double v18 = *(double *)(v13 + 104);
  uint64_t v32 = *(void *)(v13 + 96);
  uint64_t v19 = a3 + 1;
  uint64_t v21 = a3[4];
  uint64_t v20 = a3[5];
  __swift_project_boxed_opaque_existential_1(a3 + 1, v21);
  double v22 = (*(double (**)(uint64_t, uint64_t))(v20 + 160))(v21, v20);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a2, a4);
  uint64_t v23 = a3[4];
  uint64_t v24 = a3[5];
  __swift_project_boxed_opaque_existential_1(v19, v23);
  double v25 = (*(double (**)(uint64_t, uint64_t))(v24 + 128))(v23, v24);
  long double v26 = pow(1.0 - v25, (double)a1);
  double v35 = v14;
  long long v36 = v31;
  uint64_t v37 = v30;
  uint64_t v38 = v29;
  uint64_t v39 = v15;
  uint64_t v40 = v16;
  char v41 = v28;
  uint64_t v42 = v17;
  uint64_t v43 = v27;
  uint64_t v44 = a1;
  uint64_t v45 = 0;
  uint64_t v46 = v32;
  double v47 = v18;
  double v48 = v14 * v22 + (1.0 - v22) * (v18 * v26);
  sub_1AFD32218((uint64_t)v12, (long long *)&v35, a4, v34);
}

long double static ArticleScorer.applyRankPenalty(score:penalty:rank:)(uint64_t a1, double a2, double a3)
{
  return pow(1.0 - a3, (double)a1) * a2;
}

uint64_t sub_1AFF3595C(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v43 = a8;
  uint64_t v44 = a5;
  uint64_t v9 = v8;
  uint64_t v58 = a2;
  double v59 = a4;
  double v57 = a1;
  uint64_t v42 = *(void *)(a5 - 8);
  MEMORY[0x1F4188790](a1);
  double v55 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v53 = (char *)&v40 - v13;
  uint64_t v15 = v14;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v54 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  char v41 = (char *)&v40 - v17;
  uint64_t v18 = sub_1AFFCB658();
  uint64_t v45 = *(void *)(v18 - 8);
  uint64_t v46 = v18;
  MEMORY[0x1F4188790](v18);
  double v51 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  double v22 = (char *)&v40 - v21;
  MEMORY[0x1F4188790](v23);
  uint64_t v40 = (char *)&v40 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  uint64_t v50 = *((void *)v15 - 1);
  MEMORY[0x1F4188790](v26);
  int v28 = (char *)&v40 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = a6;
  double v52 = v15;
  uint64_t v60 = swift_getAssociatedTypeWitness();
  uint64_t v47 = *(void *)(v60 - 8);
  MEMORY[0x1F4188790](v60);
  uint64_t v30 = (char *)&v40 - v29;
  uint64_t v31 = sub_1AFFCB088();
  uint64_t v61 = sub_1AFFCAC68();
  uint64_t v56 = sub_1AFFCB908();
  sub_1AFFCB8A8();
  (*(void (**)(char *, uint64_t, void))(v50 + 16))(v28, v48, v52);
  double v59 = v30;
  uint64_t result = sub_1AFFCB058();
  if (v31 < 0)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    return result;
  }
  if (v31)
  {
    uint64_t v33 = (uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 48);
    uint64_t v34 = (uint64_t (**)(char *, uint64_t))(v54 + 8);
    swift_getAssociatedConformanceWitness();
    while (1)
    {
      sub_1AFFCB678();
      uint64_t result = (*v33)(v22, 1, AssociatedTypeWitness);
      if (result == 1) {
        goto LABEL_18;
      }
      v57(v22, v55);
      if (v9)
      {
        (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
        swift_release();
        (*(void (**)(uint64_t, char *, uint64_t))(v42 + 32))(v43, v55, v44);
        return (*v34)(v22, AssociatedTypeWitness);
      }
      uint64_t v9 = 0;
      (*v34)(v22, AssociatedTypeWitness);
      sub_1AFFCB8E8();
      if (!--v31)
      {
        uint64_t v35 = v54;
        long long v36 = v51;
        goto LABEL_9;
      }
    }
  }
  swift_getAssociatedConformanceWitness();
  uint64_t v35 = v54;
  long long v36 = v51;
LABEL_9:
  sub_1AFFCB678();
  double v55 = *(char **)(v35 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v55)(v36, 1, AssociatedTypeWitness) == 1)
  {
    uint64_t v37 = v51;
LABEL_14:
    (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v37, v46);
    return v61;
  }
  else
  {
    double v52 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
    uint64_t v54 = v35 + 32;
    uint64_t v38 = (void (**)(char *, uint64_t))(v35 + 8);
    uint64_t v39 = v41;
    uint64_t v37 = v51;
    while (1)
    {
      v52(v39, v37, AssociatedTypeWitness);
      v57(v39, v53);
      if (v9) {
        break;
      }
      uint64_t v9 = 0;
      (*v38)(v39, AssociatedTypeWitness);
      sub_1AFFCB8E8();
      sub_1AFFCB678();
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v55)(v37, 1, AssociatedTypeWitness) == 1) {
        goto LABEL_14;
      }
    }
    (*v38)(v39, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v42 + 32))(v43, v53, v44);
  }
}

uint64_t sub_1AFF3605C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a3;
  uint64_t v54 = a2;
  uint64_t v6 = *(void *)(a3 - 8);
  double v7 = MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v6 + 16))(v9, v7);
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 16))(v5, a4);
  uint64_t v53 = *(void *)(v10 + 16);
  if (!v53)
  {
    swift_bridgeObjectRelease();
LABEL_26:
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a4 + 8))(v55, v5, a4);
    uint64_t v40 = v56;
    uint64_t v41 = v57;
    __swift_project_boxed_opaque_existential_1(v55, v56);
    if ((*(double (**)(uint64_t, uint64_t))(v41 + 24))(v40, v41) > 0.0)
    {
      uint64_t v42 = v56;
      uint64_t v43 = v57;
      __swift_project_boxed_opaque_existential_1(v55, v56);
      (*(void (**)(uint64_t, uint64_t))(v43 + 16))(v42, v43);
      uint64_t v44 = v56;
      uint64_t v45 = v57;
      __swift_project_boxed_opaque_existential_1(v55, v56);
      (*(double (**)(uint64_t, uint64_t))(v45 + 24))(v44, v45);
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  uint64_t v47 = a4;
  uint64_t v48 = v9;
  uint64_t v49 = v6;
  uint64_t v50 = v5;
  uint64_t v11 = 0;
  uint64_t v46 = v10;
  uint64_t v52 = v10 + 32;
  double v12 = 0.0;
  double v13 = 0.0;
  do
  {
    double v14 = (void *)(v52 + 40 * v11);
    uint64_t v15 = (void *)*v54;
    uint64_t v16 = v14[3];
    uint64_t v18 = v14[4];
    uint64_t v17 = v14 + 4;
    __swift_project_boxed_opaque_existential_1(v14, v16);
    uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t))(v18 + 8);
    sub_1AFFC8E38();
    uint64_t v20 = v19(v16, v18);
    uint64_t v22 = v21;
    uint64_t v23 = v15[2];
    if (!v23) {
      goto LABEL_3;
    }
    uint64_t v24 = v20;
    double v51 = v14 + 3;
    if (v15[4] != v20 || v15[5] != v21)
    {
      uint64_t result = sub_1AFFCBCE8();
      if ((result & 1) == 0)
      {
        if (v23 != 1)
        {
          long long v36 = v15 + 7;
          uint64_t v37 = 1;
          while (1)
          {
            uint64_t v38 = v37 + 1;
            if (__OFADD__(v37, 1)) {
              break;
            }
            if (*(v36 - 1) == v24 && *v36 == v22) {
              goto LABEL_11;
            }
            uint64_t result = sub_1AFFCBCE8();
            if (result) {
              goto LABEL_11;
            }
            v36 += 2;
            ++v37;
            if (v38 == v23) {
              goto LABEL_3;
            }
          }
          __break(1u);
          return result;
        }
LABEL_3:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1AFD2CEB0((uint64_t)v14, (uint64_t)v55);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
        goto LABEL_4;
      }
    }
LABEL_11:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1AFD2CEB0((uint64_t)v14, (uint64_t)v55);
    uint64_t v27 = v56;
    uint64_t v28 = v57;
    __swift_project_boxed_opaque_existential_1(v55, v56);
    double v29 = (*(double (**)(uint64_t, uint64_t))(v28 + 24))(v27, v28);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
    if (v29 > 0.0)
    {
      uint64_t v30 = v51;
      uint64_t v31 = *v51;
      uint64_t v32 = *v17;
      __swift_project_boxed_opaque_existential_1(v14, *v51);
      double v33 = (*(double (**)(uint64_t, uint64_t))(v32 + 16))(v31, v32);
      uint64_t v34 = *v30;
      uint64_t v35 = *v17;
      __swift_project_boxed_opaque_existential_1(v14, *v30);
      double v12 = v12 + v33 / (*(double (**)(uint64_t, uint64_t))(v35 + 24))(v34, v35);
      double v13 = v13 + 1.0;
    }
LABEL_4:
    ++v11;
  }
  while (v11 != v53);
  swift_bridgeObjectRelease();
  uint64_t v6 = v49;
  uint64_t v5 = v50;
  a4 = v47;
  uint64_t v9 = v48;
  if (v13 == 0.0) {
    goto LABEL_26;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

void sub_1AFF364AC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  ArticleScorer.score<A>(article:)(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_1AFF364DC(uint64_t *a1, uint64_t a2)
{
  return sub_1AFF35300(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1AFF364F8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1AFF354F8(a1, v2[4], v2[2], v2[3], a2);
}

uint64_t sub_1AFF36518()
{
  return sub_1AFFCB268();
}

uint64_t sub_1AFF3656C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t initializeBufferWithCopyOfBuffer for ArticleScorer(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    sub_1AFFC8E48();
  }
  else
  {
    uint64_t v8 = a2 + 1;
    long long v9 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 32) = v9;
    uint64_t v10 = v9;
    uint64_t v11 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v9 - 8);
    sub_1AFFC8E38();
    v11(a1 + 8, v8, v10);
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = a1 + v12;
    uint64_t v14 = (uint64_t)a2 + v12;
    uint64_t v15 = sub_1AFFC98F8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for ArticleScorer(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + 8;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v4);
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  uint64_t v6 = sub_1AFFC98F8();
  double v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t initializeWithCopy for ArticleScorer(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = a2 + 8;
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v7;
  uint64_t v8 = v7;
  long long v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  sub_1AFFC8E38();
  v9(a1 + 8, v6, v8);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_1AFFC98F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  return a1;
}

void *assignWithCopy for ArticleScorer(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2 + 1;
  *a1 = *a2;
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 1, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  long long v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1AFFC98F8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        sub_1AFFC8E48();
        uint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          sub_1AFFC8E48();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          sub_1AFFC8E48();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

uint64_t initializeWithTake for ArticleScorer(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1AFFC98F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for ArticleScorer(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1AFFC98F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArticleScorer(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1AFF36C48);
}

uint64_t sub_1AFF36C48(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1AFFC98F8();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ArticleScorer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1AFF36D0C);
}

void *sub_1AFF36D0C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1AFFC98F8();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1AFF36DB4()
{
  uint64_t result = sub_1AFFC98F8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

BOOL sub_1AFF36E58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ScoredArticle();
  return *(double *)(a2 + *(int *)(v4 + 36) + 104) < *(double *)(a1 + *(int *)(v4 + 36) + 104);
}

void sub_1AFF36EB4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1AFF356A8(a1, a2, *(void **)(v3 + 32), *(void *)(v3 + 16), *(void *)(v3 + 24), a3);
}

uint64_t sub_1AFF36EC0(char *a1)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t, char *))(v1 + 32);
  uint64_t v4 = *(void *)a1;
  type metadata accessor for ScoredArticle();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return v3(v4, &a1[*(int *)(TupleTypeMetadata2 + 48)]);
}

uint64_t sub_1AFF36F48(uint64_t a1, void *a2)
{
  if (a1 == 2)
  {
    uint64_t v6 = a2[3];
    uint64_t v7 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v6);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 80))(v6, v7);
  }
  else if (a1 == 1)
  {
    uint64_t v3 = a2[3];
    uint64_t v4 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v3);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 72))(v3, v4);
  }
  else
  {
    uint64_t v8 = a2[3];
    uint64_t v9 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v8);
    if (a1 >= 3) {
      return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 88))(v8, v9);
    }
    else {
      return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 64))(v8, v9);
    }
  }
}

uint64_t sub_1AFF37040(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = sub_1AFFCABC8();
  uint64_t v22 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1AFFCAC18();
  uint64_t v12 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  *(void *)(v15 + 24) = a2;
  uint64_t v16 = (void *)swift_allocObject();
  _OWORD v16[2] = a6;
  v16[3] = sub_1AFD8173C;
  v16[4] = v15;
  aBlock[4] = sub_1AFF37C58;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1AFDB5104;
  aBlock[3] = &block_descriptor_34;
  uint64_t v17 = _Block_copy(aBlock);
  sub_1AFFC8E48();
  sub_1AFFC8E38();
  sub_1AFFCABE8();
  uint64_t v23 = MEMORY[0x1E4FBC860];
  sub_1AFDA5DBC((unint64_t *)&unk_1EB819C20, MEMORY[0x1E4FBCB00]);
  uint64_t v18 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCB00];
  sub_1AFF37C64(0, (unint64_t *)&qword_1EB819DA0, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1AFF37B74((unint64_t *)&qword_1EB819DB0, (unint64_t *)&qword_1EB819DA0, v18);
  sub_1AFFCB738();
  MEMORY[0x1B3E8D920](0, v14, v11, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v11, v9);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v21);
  return swift_release();
}

uint64_t sub_1AFF37364(uint64_t a1, void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for QuoteDetail();
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (double *)((char *)v78 - v10);
  uint64_t v12 = *(void *)(a1 + 16);
  if (v12)
  {
    v78[2] = a3;
    double v79 = a2;
    sub_1AFFC8E38();
    uint64_t v13 = MEMORY[0x1E4FBC868];
    v78[1] = a1;
    uint64_t v14 = (uint64_t *)(a1 + 40);
    long long v80 = xmmword_1AFFE5A90;
    do
    {
      uint64_t v15 = *(v14 - 1);
      uint64_t v83 = *v14;
      uint64_t v84 = v15;
      sub_1AFFC8E38();
      uint32_t v16 = arc4random_uniform(0x64u);
      if (v16 <= 1) {
        unsigned int v17 = 1;
      }
      else {
        unsigned int v17 = v16;
      }
      double v18 = (double)v17;
      uint32_t v19 = arc4random_uniform(0x64u);
      if (v19 <= 1) {
        unsigned int v20 = 1;
      }
      else {
        unsigned int v20 = v19;
      }
      double v21 = v18 / (double)v20;
      uint32_t v22 = arc4random_uniform(0x64u);
      if (v22 <= 1) {
        unsigned int v23 = 1;
      }
      else {
        unsigned int v23 = v22;
      }
      double v24 = (double)v23;
      uint32_t v25 = arc4random_uniform(0x64u);
      if (v25 <= 1) {
        unsigned int v26 = 1;
      }
      else {
        unsigned int v26 = v25;
      }
      double v27 = v24 / (double)v26;
      uint32_t v28 = arc4random_uniform(0x64u);
      if (v28 <= 1) {
        unsigned int v29 = 1;
      }
      else {
        unsigned int v29 = v28;
      }
      double v30 = (double)v29;
      uint32_t v31 = arc4random_uniform(0x64u);
      if (v31 <= 1) {
        unsigned int v32 = 1;
      }
      else {
        unsigned int v32 = v31;
      }
      double v33 = v30 / (double)v32;
      uint32_t v34 = arc4random_uniform(0x64u);
      if (v34 <= 1) {
        unsigned int v35 = 1;
      }
      else {
        unsigned int v35 = v34;
      }
      double v36 = (double)v35;
      uint32_t v37 = arc4random_uniform(0x64u);
      if (v37 <= 1) {
        unsigned int v38 = 1;
      }
      else {
        unsigned int v38 = v37;
      }
      double v39 = v36 / (double)v38;
      uint32_t v40 = arc4random_uniform(0x64u);
      if (v40 <= 1) {
        unsigned int v41 = 1;
      }
      else {
        unsigned int v41 = v40;
      }
      double v42 = (double)v41;
      uint32_t v43 = arc4random_uniform(0x64u);
      if (v43 <= 1) {
        unsigned int v44 = 1;
      }
      else {
        unsigned int v44 = v43;
      }
      double v45 = v42 / (double)v44;
      uint32_t v46 = arc4random_uniform(0x64u);
      if (v46 <= 1) {
        unsigned int v47 = 1;
      }
      else {
        unsigned int v47 = v46;
      }
      double v48 = (double)v47;
      uint32_t v49 = arc4random_uniform(0x64u);
      if (v49 <= 1) {
        unsigned int v50 = 1;
      }
      else {
        unsigned int v50 = v49;
      }
      double v51 = v48 / (double)v50;
      uint32_t v52 = arc4random_uniform(0x64u);
      if (v52 <= 1) {
        uint64_t v53 = 1;
      }
      else {
        uint64_t v53 = v52;
      }
      uint64_t v82 = v53;
      uint32_t v54 = arc4random_uniform(0x64u);
      if (v54 <= 1) {
        uint64_t v55 = 1;
      }
      else {
        uint64_t v55 = v54;
      }
      uint64_t v81 = v55;
      uint32_t v56 = arc4random_uniform(0x64u);
      if (v56 <= 1) {
        unsigned int v57 = 1;
      }
      else {
        unsigned int v57 = v56;
      }
      double v58 = (double)v57;
      uint32_t v59 = arc4random_uniform(0x64u);
      if (v59 <= 1) {
        unsigned int v60 = 1;
      }
      else {
        unsigned int v60 = v59;
      }
      double v61 = v58 / (double)v60;
      BOOL v62 = (char *)v11 + v6[15];
      uint64_t v63 = sub_1AFFC98F8();
      double v64 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56);
      v64(v62, 1, 1, v63);
      v64((char *)v11 + v6[16], 1, 1, v63);
      double v65 = (char *)v11 + v6[18];
      uint64_t v66 = sub_1AFFC96E8();
      double v67 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56);
      v67(v65, 1, 1, v66);
      v67((char *)v11 + v6[19], 1, 1, v66);
      double v68 = (char *)v11 + v6[20];
      uint64_t v69 = sub_1AFFC9B88();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 56))(v68, 1, 1, v69);
      sub_1AFFC98E8();
      *uint64_t v11 = v21;
      *((unsigned char *)v11 + 8) = 0;
      void v11[2] = v27;
      *((unsigned char *)v11 + 24) = 0;
      v11[4] = v33;
      *((unsigned char *)v11 + 40) = 0;
      v11[6] = v39;
      *((unsigned char *)v11 + 56) = 0;
      unsigned char v11[8] = v45;
      *((unsigned char *)v11 + 72) = 0;
      v11[10] = v51;
      *((unsigned char *)v11 + 88) = 0;
      *((void *)v11 + 12) = v82;
      *((unsigned char *)v11 + 104) = 0;
      *((void *)v11 + 14) = v81;
      *((unsigned char *)v11 + 120) = 0;
      v11[16] = v61;
      *((unsigned char *)v11 + 136) = 0;
      v11[18] = 0.0;
      *((unsigned char *)v11 + 152) = 1;
      v11[20] = 0.0;
      *((unsigned char *)v11 + 168) = 1;
      *(_OWORD *)((char *)v11 + v6[17]) = v80;
      double v70 = (char *)v11 + v6[21];
      *(void *)double v70 = 0;
      *((void *)v70 + 1) = 0;
      double v71 = (char *)v11 + v6[22];
      *(void *)double v71 = 0;
      *((void *)v71 + 1) = 0;
      double v72 = (char *)v11 + v6[23];
      *(void *)double v72 = 0;
      *((void *)v72 + 1) = 0;
      double v73 = (char *)v11 + v6[24];
      *(void *)double v73 = 0;
      *((void *)v73 + 1) = 0;
      long double v74 = (char *)v11 + v6[25];
      *(void *)long double v74 = 0;
      *((void *)v74 + 1) = 0;
      uint64_t v75 = MEMORY[0x1E4FBC860];
      *(void *)((char *)v11 + v6[26]) = MEMORY[0x1E4FBC860];
      *(void *)((char *)v11 + v6[27]) = v75;
      sub_1AFF1A33C((uint64_t)v11, (uint64_t)v8);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v85 = v13;
      sub_1AFE039D8((uint64_t)v8, v84, v83, isUniquelyReferenced_nonNull_native);
      uint64_t v13 = v85;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 += 2;
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease();
    v79(v13);
  }
  else
  {
    a2(MEMORY[0x1E4FBC868]);
  }
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for StubQuoteDetailService()
{
  return self;
}

uint64_t sub_1AFF37868()
{
  uint64_t v0 = sub_1AFFCB4A8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1AFFCB488();
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = sub_1AFFCAC18();
  MEMORY[0x1F4188790](v5 - 8);
  v10[1] = sub_1AFD67528();
  sub_1AFFCABF8();
  uint64_t v12 = MEMORY[0x1E4FBC860];
  sub_1AFDA5DBC(&qword_1EB819E60, MEMORY[0x1E4FBCC10]);
  uint64_t v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCC10];
  sub_1AFF37C64(0, &qword_1EB819DE8, MEMORY[0x1E4FBCC10], MEMORY[0x1E4FBB320]);
  sub_1AFF37B74((unint64_t *)&qword_1EB819DF0, &qword_1EB819DE8, v6);
  sub_1AFFCB738();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FBCC58], v0);
  uint64_t v7 = sub_1AFFCB4D8();
  uint64_t v8 = v11;
  *(void *)(v11 + 16) = v7;
  return v8;
}

uint64_t sub_1AFF37AE4()
{
  return sub_1AFFCA758();
}

uint64_t sub_1AFF37B74(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1AFF37C64(255, a2, a3, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AFF37BD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AFF37040(a1, a2, a3, a4, *(void *)(v4 + 16), *(void *)(v4 + 24));
}

uint64_t sub_1AFF37BE0()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1AFF37C18()
{
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1AFF37C58()
{
  return sub_1AFF37364(*(void *)(v0 + 16), *(void (**)(uint64_t))(v0 + 24), *(void *)(v0 + 32));
}

void sub_1AFF37C64(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1AFF37CC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = sub_1AFFCABC8();
  uint64_t v22 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1AFFCAC18();
  uint64_t v12 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  *(void *)(v15 + 24) = a2;
  uint32_t v16 = (void *)swift_allocObject();
  _OWORD v16[2] = a6;
  v16[3] = sub_1AFD8173C;
  v16[4] = v15;
  aBlock[4] = sub_1AFF38AE0;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1AFDB5104;
  aBlock[3] = &block_descriptor_35;
  unsigned int v17 = _Block_copy(aBlock);
  sub_1AFFC8E48();
  sub_1AFFC8E38();
  sub_1AFFCABE8();
  uint64_t v23 = MEMORY[0x1E4FBC860];
  sub_1AFDA5DBC((unint64_t *)&unk_1EB819C20, MEMORY[0x1E4FBCB00]);
  double v18 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCB00];
  sub_1AFF38AEC(0, (unint64_t *)&qword_1EB819DA0, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1AFF389FC((unint64_t *)&qword_1EB819DB0, (unint64_t *)&qword_1EB819DA0, v18);
  sub_1AFFCB738();
  MEMORY[0x1B3E8D920](0, v14, v11, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v11, v9);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v21);
  return swift_release();
}

uint64_t sub_1AFF37FEC(uint64_t a1, void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v75 = sub_1AFFC98F8();
  uint64_t v87 = *(void *)(v75 - 8);
  MEMORY[0x1F4188790](v75);
  long double v76 = (char *)v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFF38AEC(0, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)v67 - v11;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)v67 - v14;
  MEMORY[0x1F4188790](v16);
  double v18 = (char *)v67 - v17;
  MEMORY[0x1F4188790](v19);
  uint64_t v77 = (uint64_t)v67 - v20;
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)v67 - v22;
  double v24 = (int *)type metadata accessor for Quote();
  MEMORY[0x1F4188790](v24);
  uint64_t v74 = (uint64_t)v67 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v26);
  uint32_t v28 = (double *)((char *)v67 - v27);
  if (*(void *)(a1 + 16))
  {
    uint64_t v86 = *(void *)(a1 + 16);
    v67[1] = a3;
    double v68 = a2;
    unsigned int v29 = v18;
    uint64_t v69 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v87 + 56);
    double v73 = (void (**)(char *, uint64_t))(v87 + 8);
    sub_1AFFC8E38();
    v67[0] = a1;
    double v30 = (uint64_t *)(a1 + 40);
    uint64_t v87 = MEMORY[0x1E4FBC868];
    long long v72 = xmmword_1AFFE5A90;
    uint64_t v31 = v77;
    uint64_t v85 = v23;
    double v71 = v15;
    double v70 = v12;
    do
    {
      uint64_t v33 = *(v30 - 1);
      uint64_t v32 = *v30;
      uint64_t v82 = v30;
      uint64_t v83 = v33;
      uint64_t v84 = v32;
      sub_1AFFC8E38();
      uint32_t v34 = arc4random_uniform(0x64u);
      if (v34 <= 1) {
        int v35 = 1;
      }
      else {
        int v35 = v34;
      }
      unsigned int v81 = v35;
      uint32_t v36 = arc4random_uniform(0x64u);
      if (v36 <= 1) {
        int v37 = 1;
      }
      else {
        int v37 = v36;
      }
      unsigned int v80 = v37;
      uint32_t v38 = arc4random_uniform(0x64u);
      if (v38 <= 1) {
        unsigned int v39 = 1;
      }
      else {
        unsigned int v39 = v38;
      }
      double v40 = (double)v39;
      uint32_t v41 = arc4random_uniform(0x64u);
      if (v41 <= 1) {
        unsigned int v42 = 1;
      }
      else {
        unsigned int v42 = v41;
      }
      double v43 = v40 / (double)v42;
      if ((arc4random_uniform(2u) & 1) == 0) {
        double v43 = -v43;
      }
      uint32_t v44 = arc4random_uniform(0x64u);
      double v45 = v9;
      if (v44 <= 1) {
        int v46 = 1;
      }
      else {
        int v46 = v44;
      }
      unsigned int v79 = v46;
      uint32_t v47 = arc4random_uniform(0x64u);
      if (v47 <= 1) {
        int v48 = 1;
      }
      else {
        int v48 = v47;
      }
      unsigned int v78 = v48;
      uint32_t v49 = *v69;
      unsigned int v50 = v12;
      uint64_t v51 = v75;
      (*v69)((uint64_t)v85, 1, 1, v75);
      v49(v31, 1, 1, v51);
      sub_1AFFC98E8();
      v49((uint64_t)v29, 0, 1, v51);
      v49((uint64_t)v15, 1, 1, v51);
      uint32_t v52 = v50;
      uint64_t v9 = v45;
      v49((uint64_t)v52, 1, 1, v51);
      uint64_t v53 = (uint64_t)v29;
      uint32_t v54 = v76;
      sub_1AFFC98E8();
      sub_1AFFC9828();
      (*v73)(v54, v51);
      v49((uint64_t)v45, 0, 1, v51);
      if (qword_1EB8184F8 != -1) {
        swift_once();
      }
      double v55 = (double)v81 / (double)v80;
      uint32_t v56 = v82 + 2;
      double v57 = (double)v79 / (double)v78;
      uint64_t v58 = sub_1AFFC9B88();
      uint64_t v59 = __swift_project_value_buffer(v58, (uint64_t)qword_1EB831AD8);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v58 - 8) + 16))((char *)v28 + v24[24], v59, v58);
      sub_1AFFC98E8();
      double *v28 = v55;
      *((unsigned char *)v28 + 8) = 0;
      v28[2] = v43;
      *((unsigned char *)v28 + 24) = 0;
      v28[4] = v57;
      v28[6] = 0.0;
      *((unsigned char *)v28 + 56) = 1;
      v28[8] = 0.0;
      *((unsigned char *)v28 + 72) = 1;
      v28[10] = 0.0;
      *((unsigned char *)v28 + 88) = 1;
      v28[12] = 0.0;
      *((unsigned char *)v28 + 104) = 1;
      *((_OWORD *)v28 + 7) = v72;
      *((unsigned char *)v28 + 128) = 2;
      uint64_t v60 = (uint64_t)v28 + v24[13];
      *((unsigned char *)v28 + 40) = 0;
      sub_1AFE90B98((uint64_t)v85, v60);
      uint64_t v31 = v77;
      sub_1AFE90B98(v77, (uint64_t)v28 + v24[14]);
      sub_1AFE90B98(v53, (uint64_t)v28 + v24[15]);
      *((unsigned char *)v28 + v24[16]) = 7;
      *((unsigned char *)v28 + v24[17]) = 7;
      *((unsigned char *)v28 + v24[18]) = 7;
      double v61 = (char *)v28 + v24[19];
      *(void *)double v61 = 0;
      v61[8] = 1;
      uint64_t v62 = v53;
      uint64_t v15 = v71;
      sub_1AFE90B98((uint64_t)v71, (uint64_t)v28 + v24[20]);
      uint64_t v12 = v70;
      sub_1AFE90B98((uint64_t)v70, (uint64_t)v28 + v24[21]);
      sub_1AFE90B98((uint64_t)v9, (uint64_t)v28 + v24[23]);
      uint64_t v63 = v74;
      sub_1AFF38B50((uint64_t)v28, v74);
      uint64_t v64 = v87;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v88 = v64;
      sub_1AFE03B44(v63, v83, v84, isUniquelyReferenced_nonNull_native);
      uint64_t v87 = v88;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      --v86;
      unsigned int v29 = (char *)v62;
      double v30 = v56;
    }
    while (v86);
    swift_bridgeObjectRelease();
    v68(v87);
  }
  else
  {
    a2(MEMORY[0x1E4FBC868]);
  }
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for StubQuoteService()
{
  return self;
}

uint64_t sub_1AFF386F0()
{
  uint64_t v0 = sub_1AFFCB4A8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1AFFCB488();
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = sub_1AFFCAC18();
  MEMORY[0x1F4188790](v5 - 8);
  v10[1] = sub_1AFD67528();
  sub_1AFFCABF8();
  uint64_t v12 = MEMORY[0x1E4FBC860];
  sub_1AFDA5DBC(&qword_1EB819E60, MEMORY[0x1E4FBCC10]);
  uint64_t v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCC10];
  sub_1AFF38AEC(0, &qword_1EB819DE8, MEMORY[0x1E4FBCC10], MEMORY[0x1E4FBB320]);
  sub_1AFF389FC((unint64_t *)&qword_1EB819DF0, &qword_1EB819DE8, v6);
  sub_1AFFCB738();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FBCC58], v0);
  uint64_t v7 = sub_1AFFCB4D8();
  uint64_t v8 = v11;
  *(void *)(v11 + 16) = v7;
  return v8;
}

uint64_t sub_1AFF3896C()
{
  return sub_1AFFCA758();
}

uint64_t sub_1AFF389FC(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1AFF38AEC(255, a2, a3, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AFF38A60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AFF37CC8(a1, a2, a3, a4, *(void *)(v4 + 16), *(void *)(v4 + 24));
}

uint64_t sub_1AFF38A68()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1AFF38AA0()
{
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1AFF38AE0()
{
  return sub_1AFF37FEC(*(void *)(v0 + 16), *(void (**)(uint64_t))(v0 + 24), *(void *)(v0 + 32));
}

void sub_1AFF38AEC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1AFF38B50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Quote();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AFF38BB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t sub_1AFF38BC8()
{
  uint64_t result = sub_1AFF39958(0xD00000000000001DLL, 0x80000001AFFFB660);
  qword_1EB810F70 = result;
  return result;
}

uint64_t sub_1AFF38C00()
{
  uint64_t result = sub_1AFF39958(0xD000000000000017, 0x80000001AFFFB6A0);
  qword_1E9AFCBC8 = result;
  return result;
}

uint64_t sub_1AFF38C38()
{
  uint64_t v1 = v0;
  uint64_t v17 = sub_1AFFCABC8();
  uint64_t v2 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1AFFCAC18();
  uint64_t v5 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1AFFCB528();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFF397B8();
  swift_allocObject();
  *(void *)(v0 + 16) = sub_1AFFCA578();
  swift_allocObject();
  *(void *)(v0 + 24) = sub_1AFFCA578();
  sub_1AFF3981C();
  sub_1AFFCB518();
  uint64_t v12 = sub_1AFFCB538();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  *(void *)(v1 + 32) = v12;
  swift_getObjectType();
  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_1AFF39894;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1AFDB5104;
  aBlock[3] = &block_descriptor_36;
  uint64_t v14 = _Block_copy(aBlock);
  swift_release();
  sub_1AFFCABE8();
  sub_1AFF38FF8();
  sub_1AFFCB548();
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v17);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v16);
  swift_getObjectType();
  swift_unknownObjectRetain();
  sub_1AFFCB578();
  swift_unknownObjectRelease();
  return v1;
}

uint64_t sub_1AFF38F90()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1AFFCA568();
    sub_1AFFCA568();
    return swift_release();
  }
  return result;
}

uint64_t sub_1AFF38FF8()
{
  return sub_1AFFCB738();
}

uint64_t sub_1AFF390D4()
{
  swift_getObjectType();
  sub_1AFFCB558();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1AFF39138(uint64_t a1, unint64_t a2, int a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_1AFFC92A8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint32_t v54 = (char *)v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    if (a3)
    {
      uint64_t v59 = a1;
      unint64_t v60 = a2;
      sub_1AFFC8E38();
      sub_1AFFCA5A8();
      if (v56)
      {
LABEL_8:
        a1 = v55;
        swift_bridgeObjectRelease();
        return a1;
      }
    }
    else
    {
      sub_1AFFC8E38();
    }
    uint64_t v11 = *(void *)(v3 + 24);
    uint64_t v59 = a1;
    unint64_t v60 = a2;
    sub_1AFFC8E38();
    sub_1AFFCA5A8();
    swift_bridgeObjectRelease();
    if (v56) {
      goto LABEL_8;
    }
    v46[1] = v11;
    void v46[2] = v4;
    int v52 = a3;
    uint64_t v48 = v9;
    sub_1AFF398BC((unint64_t *)&unk_1EB810C58, MEMORY[0x1E4F26E08]);
    sub_1AFFCB728();
    LODWORD(v59) = 44;
    sub_1AFFCB708();
    LODWORD(v59) = 46;
    uint64_t v49 = v8;
    uint64_t v12 = sub_1AFFCB708();
    uint64_t v55 = 32;
    unint64_t v56 = 0xE100000000000000;
    MEMORY[0x1F4188790](v12);
    v46[-2] = &v55;
    sub_1AFFC8E38();
    unint64_t v47 = a2;
    uint64_t v13 = sub_1AFE30664(0x7FFFFFFFFFFFFFFFLL, 1, sub_1AFF3989C, (uint64_t)&v46[-4], a1, a2);
    uint64_t v14 = *(void *)(v13 + 16);
    uint64_t v50 = a1;
    uint64_t v51 = v13;
    if (v14)
    {
      uint64_t v15 = (uint64_t *)(v13 + 56);
      uint64_t v53 = (void *)MEMORY[0x1E4FBC860];
      while (1)
      {
        uint64_t v17 = *(v15 - 3);
        unint64_t v16 = *(v15 - 2);
        uint64_t v18 = *(v15 - 1);
        uint64_t v19 = *v15;
        sub_1AFFC8E38();
        uint64_t v55 = sub_1AFFCB668();
        unint64_t v56 = v20;
        sub_1AFD3AE10();
        uint64_t v21 = sub_1AFFCB6B8();
        unint64_t v23 = v22;
        swift_bridgeObjectRelease();
        if (v52)
        {
          if (qword_1EB810F78 != -1) {
            swift_once();
          }
          uint64_t v24 = qword_1EB810F70;
          uint64_t v55 = v21;
          unint64_t v56 = v23;
          uint64_t v25 = sub_1AFFCB038();
          char v27 = sub_1AFDC0F04(v25, v26, v24);
          swift_bridgeObjectRelease();
          if ((v27 & 1) == 0)
          {
            uint64_t v55 = v17;
            unint64_t v56 = v16;
            uint64_t v57 = v18;
            uint64_t v58 = v19;
            sub_1AFF39904();
            uint64_t v28 = sub_1AFFCB6B8();
            unint64_t v30 = v29;
            swift_bridgeObjectRelease();
            uint64_t v55 = v28;
            unint64_t v56 = v30;
            uint64_t v31 = sub_1AFFCB038();
            uint64_t v33 = v32;
            uint32_t v34 = v53;
LABEL_22:
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint32_t v34 = sub_1AFD352FC(0, v34[2] + 1, 1, v34);
            }
            unint64_t v41 = v34[2];
            unint64_t v40 = v34[3];
            if (v41 >= v40 >> 1) {
              uint32_t v34 = sub_1AFD352FC((void *)(v40 > 1), v41 + 1, 1, v34);
            }
            v34[2] = v41 + 1;
            uint64_t v53 = v34;
            unsigned int v42 = &v34[2 * v41];
            v42[4] = v31;
            v42[5] = v33;
            goto LABEL_12;
          }
        }
        else
        {
          uint32_t v34 = v53;
          if (qword_1E9AF8E00 != -1) {
            swift_once();
          }
          uint64_t v35 = qword_1E9AFCBC8;
          uint64_t v55 = v21;
          unint64_t v56 = v23;
          uint64_t v36 = sub_1AFFCB038();
          char v38 = sub_1AFDC0F04(v36, v37, v35);
          swift_bridgeObjectRelease();
          if ((v38 & 1) == 0)
          {
            uint64_t v31 = MEMORY[0x1B3E8D390](v17, v16, v18, v19);
            uint64_t v33 = v39;
            swift_bridgeObjectRelease();
            goto LABEL_22;
          }
        }
        swift_bridgeObjectRelease();
LABEL_12:
        v15 += 4;
        if (!--v14) {
          goto LABEL_28;
        }
      }
    }
    uint64_t v53 = (void *)MEMORY[0x1E4FBC860];
LABEL_28:
    swift_bridgeObjectRelease();
    uint64_t v55 = (uint64_t)v53;
    sub_1AFD3ABD0();
    sub_1AFF398BC((unint64_t *)&qword_1EB819DD0, (void (*)(uint64_t))sub_1AFD3ABD0);
    a1 = sub_1AFFCAD88();
    unint64_t v44 = v43;
    swift_bridgeObjectRelease();
    uint64_t v55 = a1;
    unint64_t v56 = v44;
    uint64_t v59 = v50;
    unint64_t v60 = v47;
    sub_1AFFC8E38();
    sub_1AFFCA5B8();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v54, v49);
  }
  return a1;
}

uint64_t type metadata accessor for UnnecessaryWordRemover()
{
  return self;
}

uint64_t sub_1AFF39794(uint64_t a1, unint64_t a2, int a3)
{
  return sub_1AFF39138(a1, a2, a3);
}

void sub_1AFF397B8()
{
  if (!qword_1EB817D20)
  {
    unint64_t v0 = sub_1AFFCA588();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB817D20);
    }
  }
}

unint64_t sub_1AFF3981C()
{
  unint64_t result = qword_1EB8180E0;
  if (!qword_1EB8180E0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB8180E0);
  }
  return result;
}

uint64_t sub_1AFF3985C()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1AFF39894()
{
  return sub_1AFF38F90();
}

uint64_t sub_1AFF3989C(void *a1)
{
  return sub_1AFE310F4(a1, *(void **)(v1 + 16)) & 1;
}

uint64_t sub_1AFF398BC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1AFF39904()
{
  unint64_t result = qword_1EB811AD8;
  if (!qword_1EB811AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB811AD8);
  }
  return result;
}

uint64_t sub_1AFF39958(uint64_t a1, unint64_t a2)
{
  uint64_t v43 = MEMORY[0x1E4FBC870];
  if (qword_1EB819E80 != -1) {
    goto LABEL_28;
  }
  while (1)
  {
    id v40 = (id)qword_1EB831AF8;
    id v3 = objc_msgSend((id)qword_1EB831AF8, sel_localizations);
    uint64_t v4 = sub_1AFFCB1C8();

    uint64_t v39 = *(void *)(v4 + 16);
    if (!v39) {
      break;
    }
    unint64_t v5 = 0;
    while (v5 < *(void *)(v4 + 16))
    {
      uint64_t v6 = (uint64_t *)(v4 + 32 + 16 * v5);
      uint64_t v7 = *v6;
      unint64_t v8 = v6[1];
      sub_1AFFC8E38();
      uint64_t v9 = (void *)sub_1AFFCAE68();
      uint64_t v10 = (void *)sub_1AFFCAE68();
      uint64_t v11 = (void *)sub_1AFFCAE68();
      uint64_t v12 = (void *)sub_1AFFCAE68();
      id v13 = objc_msgSend(v40, sel_localizedStringForKey_value_table_localization_, v9, v10, v11, v12);

      sub_1AFFCAE98();
      uint64_t v14 = sub_1AFFCAF18();
      unint64_t v16 = v15;
      swift_bridgeObjectRelease();
      BOOL v17 = v14 == 32 && v16 == 0xE100000000000000;
      if (v17 || (sub_1AFFCBCE8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        if (qword_1EB8111A0 != -1) {
          swift_once();
        }
        uint64_t v18 = sub_1AFFCA8A8();
        __swift_project_value_buffer(v18, (uint64_t)qword_1EB831A18);
        swift_bridgeObjectRetain_n();
        sub_1AFFC8E38();
        uint64_t v19 = sub_1AFFCA888();
        os_log_type_t v20 = sub_1AFFCB468();
        if (os_log_type_enabled(v19, v20))
        {
          uint64_t v21 = swift_slowAlloc();
          uint64_t v22 = swift_slowAlloc();
          v42[0] = v22;
          *(_DWORD *)uint64_t v21 = 136315394;
          sub_1AFFC8E38();
          *(void *)(v21 + 4) = sub_1AFD36BA8(a1, a2, v42);
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v21 + 12) = 2080;
          sub_1AFFC8E38();
          *(void *)(v21 + 14) = sub_1AFD36BA8(v7, v8, v42);
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1AFD01000, v19, v20, "Could not find unnecessary words for key=%s, localizations=%s", (uint8_t *)v21, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1B3E8F0D0](v22, -1, -1);
          MEMORY[0x1B3E8F0D0](v21, -1, -1);
        }
        else
        {

          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        if (qword_1EB8111A0 != -1) {
          swift_once();
        }
        uint64_t v23 = sub_1AFFCA8A8();
        __swift_project_value_buffer(v23, (uint64_t)qword_1EB831A18);
        swift_bridgeObjectRetain_n();
        uint64_t v24 = sub_1AFFCA888();
        os_log_type_t v25 = sub_1AFFCB458();
        if (os_log_type_enabled(v24, v25))
        {
          uint64_t v26 = swift_slowAlloc();
          uint64_t v27 = swift_slowAlloc();
          v42[0] = v27;
          *(_DWORD *)uint64_t v26 = 136315138;
          sub_1AFFC8E38();
          *(void *)(v26 + 4) = sub_1AFD36BA8(v14, v16, v42);
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1AFD01000, v24, v25, "Found unnecessary words: %s", (uint8_t *)v26, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1B3E8F0D0](v27, -1, -1);
          MEMORY[0x1B3E8F0D0](v26, -1, -1);
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        v42[0] = v14;
        v42[1] = v16;
        sub_1AFF39F34();
        uint64_t v28 = sub_1AFFCB3C8();
        swift_bridgeObjectRelease();
        uint64_t v29 = *(void *)(v28 + 16);
        if (v29)
        {
          unint64_t v30 = (uint64_t *)(v28 + 56);
          do
          {
            uint64_t v31 = *(v30 - 3);
            uint64_t v32 = *(v30 - 2);
            uint64_t v33 = *(v30 - 1);
            uint64_t v34 = *v30;
            sub_1AFFC8E38();
            uint64_t v35 = MEMORY[0x1B3E8D390](v31, v32, v33, v34);
            uint64_t v37 = v36;
            swift_bridgeObjectRelease();
            sub_1AFE22314(v42, v35, v37);
            swift_bridgeObjectRelease();
            v30 += 4;
            --v29;
          }
          while (v29);
        }
        swift_bridgeObjectRelease();
      }
      if (++v5 == v39)
      {
        swift_bridgeObjectRelease();
        return v43;
      }
    }
    __break(1u);
LABEL_28:
    swift_once();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC870];
}

unint64_t sub_1AFF39F34()
{
  unint64_t result = qword_1EB810C10;
  if (!qword_1EB810C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB810C10);
  }
  return result;
}

uint64_t sub_1AFF39F88@<X0>(char *a1@<X8>)
{
  uint64_t v3 = sub_1AFFCAF18();
  uint64_t v4 = v2;
  if (v3 == 0x79636E6572727563 && v2 == 0xE800000000000000 || (sub_1AFFCBCE8() & 1) != 0)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v6 = 1;
  }
  else if (v3 == 0x75636F7470797263 && v4 == 0xEE0079636E657272 || (sub_1AFFCBCE8() & 1) != 0)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v6 = 2;
  }
  else if (v3 == 0x6B636F7473 && v4 == 0xE500000000000000 {
         || (sub_1AFFCBCE8() & 1) != 0
  }
         || v3 == 0x797469757165 && v4 == 0xE600000000000000
         || (sub_1AFFCBCE8() & 1) != 0)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v6 = 3;
  }
  else if (v3 == 6714469 && v4 == 0xE300000000000000 {
         || (sub_1AFFCBCE8() & 1) != 0
  }
         || v3 == 0x74652D6B636F7473 && v4 == 0xE900000000000066
         || (sub_1AFFCBCE8() & 1) != 0)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v6 = 4;
  }
  else if (v3 == 0x7865646E69 && v4 == 0xE500000000000000 || (sub_1AFFCBCE8() & 1) != 0)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v6 = 6;
  }
  else if (v3 == 0x75666C617574756DLL && v4 == 0xEA0000000000646ELL || (sub_1AFFCBCE8() & 1) != 0)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v6 = 7;
  }
  else if (v3 == 0x73657275747566 && v4 == 0xE700000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v6 = 5;
  }
  else
  {
    char v7 = sub_1AFFCBCE8();
    uint64_t result = swift_bridgeObjectRelease();
    if (v7) {
      char v6 = 5;
    }
    else {
      char v6 = 0;
    }
  }
  *a1 = v6;
  return result;
}

uint64_t sub_1AFF3A344(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1AFFCABC8();
  uint64_t v17 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1AFFCAC18();
  uint64_t v7 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_1AFF3AA18;
  *(void *)(v11 + 24) = v10;
  aBlock[4] = sub_1AFF3AA78;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1AFDB5104;
  aBlock[3] = &block_descriptor_37;
  uint64_t v12 = _Block_copy(aBlock);
  sub_1AFFC8E48();
  sub_1AFFCABE8();
  uint64_t v18 = MEMORY[0x1E4FBC860];
  sub_1AFDA5DBC((unint64_t *)&unk_1EB819C20, MEMORY[0x1E4FBCB00]);
  id v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCB00];
  sub_1AFF3AACC(0, (unint64_t *)&qword_1EB819DA0, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1AFF3A97C((unint64_t *)&qword_1EB819DB0, (unint64_t *)&qword_1EB819DA0, v13);
  sub_1AFFCB738();
  MEMORY[0x1B3E8D920](0, v9, v6, v12);
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v16);
  return swift_release();
}

uint64_t type metadata accessor for StubStockFeedService()
{
  return self;
}

uint64_t sub_1AFF3A67C()
{
  uint64_t v0 = sub_1AFFCB4A8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1AFFCB488();
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = sub_1AFFCAC18();
  MEMORY[0x1F4188790](v5 - 8);
  v10[1] = sub_1AFD67528();
  sub_1AFFCABF8();
  uint64_t v12 = MEMORY[0x1E4FBC860];
  sub_1AFDA5DBC(&qword_1EB819E60, MEMORY[0x1E4FBCC10]);
  char v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCC10];
  sub_1AFF3AACC(0, &qword_1EB819DE8, MEMORY[0x1E4FBCC10], MEMORY[0x1E4FBB320]);
  sub_1AFF3A97C((unint64_t *)&qword_1EB819DF0, &qword_1EB819DE8, v6);
  sub_1AFFCB738();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FBCC58], v0);
  uint64_t v7 = sub_1AFFCB4D8();
  uint64_t v8 = v11;
  *(void *)(v11 + 16) = v7;
  return v8;
}

uint64_t sub_1AFF3A8F8()
{
  return sub_1AFFCA758();
}

uint64_t sub_1AFF3A97C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1AFF3AACC(255, a2, a3, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AFF3A9E0()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1AFF3AA18(uint64_t a1, char a2)
{
  uint64_t v3 = *(void (**)(uint64_t *))(v2 + 16);
  uint64_t v5 = a1;
  char v6 = a2;
  sub_1AFFC8E38();
  v3(&v5);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFF3AA78()
{
  uint64_t v1 = *(void (**)(int64_t, void))(v0 + 16);
  int64_t v2 = sub_1AFF9928C(50);
  v1(v2, 0);

  return swift_bridgeObjectRelease();
}

void sub_1AFF3AACC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t type metadata accessor for SDSStockFeedService()
{
  return self;
}

uint64_t sub_1AFF3AB58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1AFFC9E18();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = &v23[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1AFFC9EF8();
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  sub_1AFD2CEB0(a2 + 16, (uint64_t)v23);
  uint64_t v12 = *(void *)(a2 + 56);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v7 + 16))(v9, a3, v6);
  uint64_t v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v23, v24);
  double v14 = MEMORY[0x1F4188790](v13);
  uint64_t v16 = (uint64_t *)&v23[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(uint64_t *, double))(v17 + 16))(v16, v14);
  uint64_t v18 = *v16;
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  id v19 = sub_1AFF3AE20(v10, v11, v18, v12, (uint64_t)v9);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  uint64_t v20 = sub_1AFFC9EC8();

  return v20;
}

uint64_t sub_1AFF3AD48()
{
  sub_1AFE19AC4();
  sub_1AFFCA7C8();
  uint64_t v0 = (void *)sub_1AFFCA5E8();
  sub_1AFD2D58C();
  uint64_t v1 = sub_1AFFCA678();
  swift_release();

  return v1;
}

id sub_1AFF3AE20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = type metadata accessor for SDSBaseOperationFactory();
  v27[3] = v10;
  v27[4] = &off_1F0875070;
  v27[0] = a3;
  uint64_t v11 = (objc_class *)type metadata accessor for SDSNewsOperation();
  uint64_t v12 = (char *)objc_allocWithZone(v11);
  uint64_t v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v27, v10);
  double v14 = MEMORY[0x1F4188790](v13);
  uint64_t v16 = (uint64_t *)((char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v17 + 16))(v16, v14);
  uint64_t v18 = *v16;
  v26[3] = v10;
  v26[4] = &off_1F0875070;
  v26[0] = v18;
  id v19 = &v12[qword_1E9AFC998];
  *(void *)id v19 = a1;
  *((void *)v19 + 1) = a2;
  sub_1AFD2CEB0((uint64_t)v26, (uint64_t)&v12[qword_1E9AFC9A0]);
  *(void *)&v12[qword_1E9AFC9A8] = a4;
  uint64_t v20 = &v12[qword_1E9AFC9B0];
  uint64_t v21 = sub_1AFFC9E18();
  uint64_t v22 = *(void *)(v21 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v20, a5, v21);
  v25.receiver = v12;
  v25.super_class = v11;
  id v23 = objc_msgSendSuper2(&v25, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(a5, v21);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  return v23;
}

uint64_t sub_1AFF3B020@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, char a3@<W4>, uint64_t a4@<X6>, uint64_t a5@<X7>, char *a6@<X8>, uint64_t a7)
{
  unsigned int v81 = a6;
  uint64_t v79 = a4;
  uint64_t v80 = a5;
  sub_1AFF3E8AC(0, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928]);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v13 = (char *)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v71 - v14;
  uint64_t v16 = sub_1AFFC98F8();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = *a1;
  unint64_t v21 = a1[1];
  uint64_t v22 = a1[2];
  uint64_t v77 = (char *)&v71 - v23;
  uint64_t v78 = v20;
  if ((a3 & 1) == 0)
  {
    uint64_t v85 = 0;
    uint64_t v24 = MEMORY[0x1F4188790](v20);
    *(&v71 - 2) = (uint64_t)&v85;
    if ((v21 & 0x1000000000000000) != 0 || !(v21 & 0x2000000000000000 | v24 & 0x1000000000000000))
    {
      long double v76 = v25;
      sub_1AFFC8E38();
      uint64_t v69 = v82;
      sub_1AFFCB7D8();
      uint64_t v82 = v69;
      swift_bridgeObjectRelease();
      if ((v84 & 1) == 0) {
        goto LABEL_16;
      }
    }
    else
    {
      uint64_t v26 = MEMORY[0x1F4188790](v24);
      *(&v71 - 2) = (uint64_t)sub_1AFF3E980;
      *(&v71 - 1) = (uint64_t)(&v71 - 4);
      if ((v21 & 0x2000000000000000) == 0)
      {
        long double v76 = v27;
        if ((v26 & 0x1000000000000000) != 0)
        {
          uint64_t v28 = (v21 & 0xFFFFFFFFFFFFFFFLL) + 32;
          uint64_t v29 = v26 & 0xFFFFFFFFFFFFLL;
        }
        else
        {
          uint64_t v28 = sub_1AFFCB878();
          uint64_t v29 = v70;
        }
        sub_1AFFC8E38();
        uint64_t v30 = v28;
        uint64_t v31 = v82;
        char v32 = sub_1AFF182F8(v30, v29, (void (*)(uint64_t *__return_ptr))sub_1AFF3E968);
        uint64_t v82 = v31;
        swift_bridgeObjectRelease();
        if (v32) {
          goto LABEL_8;
        }
LABEL_16:
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v15, 1, 1, v16);
LABEL_20:
        sub_1AFF3E758((uint64_t)v15, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928]);
        goto LABEL_21;
      }
      v83[0] = v26;
      v83[1] = v21 & 0xFFFFFFFFFFFFFFLL;
      if (v26 <= 0x20u && ((1 << v26) & 0x100003E01) != 0)
      {
        sub_1AFFC8E38();
LABEL_15:
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
      long double v76 = v27;
      sub_1AFFC8E38();
      double v67 = (unsigned __int8 *)_swift_stdlib_strtod_clocale();
      if (!v67) {
        goto LABEL_15;
      }
      int v68 = *v67;
      swift_bridgeObjectRelease();
      if (v68) {
        goto LABEL_16;
      }
    }
LABEL_8:
    sub_1AFFC9878();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v16);
    goto LABEL_19;
  }
  if (!a2) {
    goto LABEL_16;
  }
  long double v76 = v19;
  uint64_t v33 = (void *)sub_1AFFCAE68();
  id v34 = objc_msgSend(a2, sel_dateFromString_, v33);

  if (v34)
  {
    sub_1AFFC98A8();

    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v16);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v13, 1, 1, v16);
  }
  sub_1AFE90B98((uint64_t)v13, (uint64_t)v15);
LABEL_19:
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1) {
    goto LABEL_20;
  }
  uint64_t v48 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
  uint64_t v49 = v77;
  v48(v77, v15, v16);
  sub_1AFFC9888();
  if (v50 != 0.0 && *(void *)(v22 + 16))
  {
    int v52 = v76;
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v76, v49, v16);
    uint64_t v80 = sub_1AFF3CD44(*(void *)a7, *(unsigned char *)(a7 + 8), v22);
    LODWORD(v79) = v53;
    uint64_t v78 = sub_1AFF3CD44(*(void *)(a7 + 16), *(unsigned char *)(a7 + 24), v22);
    int v75 = v54;
    uint64_t v74 = sub_1AFF3CD44(*(void *)(a7 + 32), *(unsigned char *)(a7 + 40), v22);
    int v73 = v55;
    uint64_t v56 = sub_1AFF3CD44(*(void *)(a7 + 48), *(unsigned char *)(a7 + 56), v22);
    int v72 = v57;
    uint64_t v58 = sub_1AFF3CD44(*(void *)(a7 + 64), *(unsigned char *)(a7 + 72), v22);
    LOBYTE(a7) = v59;
    (*(void (**)(char *, uint64_t))(v17 + 8))(v49, v16);
    unint64_t v60 = v81;
    v48(v81, v52, v16);
    double v61 = (int *)type metadata accessor for Chart.Entry(0);
    uint64_t v62 = &v60[v61[5]];
    *(void *)uint64_t v62 = v80;
    v62[8] = v79 & 1;
    uint64_t v63 = &v60[v61[6]];
    *(void *)uint64_t v63 = v78;
    v63[8] = v75 & 1;
    uint64_t v64 = &v60[v61[7]];
    *(void *)uint64_t v64 = v74;
    v64[8] = v73 & 1;
    double v65 = &v60[v61[8]];
    *(void *)double v65 = v56;
    v65[8] = v72 & 1;
    uint64_t v66 = &v60[v61[9]];
    *(void *)uint64_t v66 = v58;
    v66[8] = a7 & 1;
    return (*(uint64_t (**)(char *, void, uint64_t, int *))(*((void *)v61 - 1) + 56))(v60, 0, 1, v61);
  }
  (*(void (**)(char *, uint64_t))(v17 + 8))(v49, v16);
LABEL_21:
  unint64_t v35 = v80;
  if (qword_1EB810AD8 != -1) {
    swift_once();
  }
  uint64_t v36 = sub_1AFFCA8A8();
  __swift_project_value_buffer(v36, (uint64_t)qword_1EB831A30);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v37 = sub_1AFFCA888();
  os_log_type_t v38 = sub_1AFFCB468();
  if (os_log_type_enabled(v37, v38))
  {
    uint64_t v39 = swift_slowAlloc();
    uint64_t v77 = (char *)swift_slowAlloc();
    v83[0] = (uint64_t)v77;
    *(_DWORD *)uint64_t v39 = 136446722;
    sub_1AFFC8E38();
    uint64_t v85 = sub_1AFD36BA8(v79, v35, v83);
    sub_1AFFCB688();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v39 + 12) = 2082;
    sub_1AFFC8E38();
    uint64_t v85 = sub_1AFD36BA8(v78, v21, v83);
    sub_1AFFCB688();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v39 + 22) = 2082;
    uint64_t v40 = sub_1AFFC8E38();
    uint64_t v41 = MEMORY[0x1B3E8D630](v40, MEMORY[0x1E4FBB1A0]);
    unint64_t v43 = v42;
    swift_bridgeObjectRelease();
    uint64_t v85 = sub_1AFD36BA8(v41, v43, v83);
    sub_1AFFCB688();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AFD01000, v37, v38, "failed to create entry for %{public}s. ref: %{public}s, values: %{public}s", (uint8_t *)v39, 0x20u);
    unint64_t v44 = v77;
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v44, -1, -1);
    MEMORY[0x1B3E8F0D0](v39, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  double v45 = v81;
  uint64_t v46 = type metadata accessor for Chart.Entry(0);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v45, 1, 1, v46);
}

uint64_t sub_1AFF3B954@<X0>(uint64_t a1@<X0>, int a2@<W3>, char *a3@<X4>, void *a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v112 = a4;
  uint64_t v118 = a3;
  LODWORD(v114) = a2;
  sub_1AFD3141C();
  uint64_t v116 = v7;
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v100 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v115 = (char *)v100 - v11;
  sub_1AFD30DA8();
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v117 = (char *)v100 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFF3E8AC(0, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928]);
  uint64_t v17 = MEMORY[0x1F4188790](v16 - 8);
  uint64_t v111 = (char *)v100 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v113 = (char *)v100 - v20;
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v122 = (void (*)(void))((char *)v100 - v22);
  MEMORY[0x1F4188790](v21);
  uint64_t v24 = (char *)v100 - v23;
  uint64_t v25 = sub_1AFFC98F8();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  uint64_t v28 = MEMORY[0x1F4188790](v27);
  MEMORY[0x1F4188790](v28);
  char v32 = (char *)v100 - v31;
  uint64_t v33 = *(void *)(a1 + 16);
  if (!v33)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56))(v24, 1, 1, v25);
    uint64_t v37 = (uint64_t)v24;
LABEL_8:
    sub_1AFF3E758(v37, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928]);
    if (qword_1EB810AD8 != -1) {
      swift_once();
    }
    uint64_t v41 = sub_1AFFCA8A8();
    __swift_project_value_buffer(v41, (uint64_t)qword_1EB831A30);
    unint64_t v42 = sub_1AFFCA888();
    os_log_type_t v43 = sub_1AFFCB468();
    if (os_log_type_enabled(v42, v43))
    {
      unint64_t v44 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v44 = 0;
      _os_log_impl(&dword_1AFD01000, v42, v43, "failed to create date range: no values", v44, 2u);
      MEMORY[0x1B3E8F0D0](v44, -1, -1);
    }

    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(a5, 1, 1, v13);
  }
  uint64_t v121 = a5;
  uint64_t v105 = v30;
  uint64_t v109 = v29;
  uint64_t v106 = v10;
  uint64_t v119 = v14;
  uint64_t v120 = v13;
  uint64_t v34 = *(void *)(type metadata accessor for Chart.Entry(0) - 8);
  unint64_t v35 = *(char **)(v26 + 16);
  uint64_t v107 = (char *)(a1 + ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80)));
  uint64_t v108 = v34;
  ((void (*)(char *))v35)(v24);
  uint64_t v110 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56);
  v110(v24, 0, 1, v25);
  uint64_t v36 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
  if (v36(v24, 1, v25) == 1)
  {
    uint64_t v37 = (uint64_t)v24;
LABEL_7:
    uint64_t v14 = v119;
    uint64_t v13 = v120;
    a5 = v121;
    goto LABEL_8;
  }
  os_log_type_t v38 = *(void (**)(void))(v26 + 32);
  uint64_t v104 = v32;
  uint64_t v39 = v38;
  v38();
  uint64_t v40 = &v107[*(void *)(v108 + 72) * (v33 - 1)];
  uint64_t v37 = (uint64_t)v122;
  uint64_t v107 = v35;
  uint64_t v108 = v26 + 16;
  ((void (*)(void (*)(void), char *, uint64_t))v35)(v122, v40, v25);
  v110((char *)v37, 0, 1, v25);
  if (v36((char *)v37, 1, v25) == 1)
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v104, v25);
    goto LABEL_7;
  }
  v100[1] = v26 + 56;
  double v101 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v36;
  uint64_t v46 = v25;
  uint64_t v103 = v26 + 32;
  uint64_t v122 = v39;
  ((void (*)(uint64_t, uint64_t, uint64_t))v39)(v109, v37, v25);
  uint64_t v47 = *((void *)v118 + 2);
  uint64_t v48 = v26;
  if (!v47) {
    goto LABEL_46;
  }
  uint64_t v49 = (uint64_t *)(v118 + 56);
  while (1)
  {
    uint64_t v51 = *(v49 - 1);
    uint64_t v50 = *v49;
    if (*(v49 - 3) == 0xD000000000000013 && *(v49 - 2) == 0x80000001AFFFB780) {
      break;
    }
    if (sub_1AFFCBCE8()) {
      break;
    }
    v49 += 4;
    if (!--v47) {
      goto LABEL_46;
    }
  }
  uint64_t v52 = sub_1AFFC8E38();
  if (v50)
  {
    if (v114)
    {
      unint64_t v60 = v112;
      if (v112)
      {
        double v61 = (void *)sub_1AFFCAE68();
        id v62 = objc_msgSend(v60, sel_dateFromString_, v61);

        uint64_t v63 = v101;
        if (v62)
        {
          uint64_t v64 = (uint64_t)v111;
          sub_1AFFC98A8();

          uint64_t v65 = 0;
          uint64_t v66 = v122;
          uint64_t v57 = (uint64_t)v113;
        }
        else
        {
          uint64_t v65 = 1;
          uint64_t v66 = v122;
          uint64_t v57 = (uint64_t)v113;
          uint64_t v64 = (uint64_t)v111;
        }
        v110((char *)v64, v65, 1, v25);
        sub_1AFE90B98(v64, v57);
        goto LABEL_40;
      }
      uint64_t v57 = (uint64_t)v113;
      uint64_t v58 = v113;
      uint64_t v59 = 1;
      uint64_t v67 = v25;
      goto LABEL_37;
    }
    uint64_t v126 = 0;
    uint64_t v53 = MEMORY[0x1F4188790](v52);
    v100[-2] = &v126;
    if ((v50 & 0x1000000000000000) != 0 || !(v50 & 0x2000000000000000 | v51 & 0x1000000000000000)) {
      goto LABEL_53;
    }
    MEMORY[0x1F4188790](v53);
    v100[-2] = sub_1AFF3E980;
    v100[-1] = &v100[-4];
    if ((v50 & 0x2000000000000000) != 0)
    {
      uint64_t v123 = v51;
      uint64_t v124 = v50 & 0xFFFFFFFFFFFFFFLL;
      if (v51 <= 0x20u && ((1 << v51) & 0x100003E01) != 0) {
        goto LABEL_34;
      }
      double v98 = (unsigned char *)_swift_stdlib_strtod_clocale();
      if (!v98 || *v98) {
        goto LABEL_34;
      }
    }
    else
    {
      if ((v51 & 0x1000000000000000) != 0)
      {
        uint64_t v54 = (v50 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v55 = v51 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v54 = sub_1AFFCB878();
        uint64_t v55 = v99;
      }
      sub_1AFFC8E38();
      char v56 = sub_1AFF182F8(v54, v55, (void (*)(uint64_t *__return_ptr))sub_1AFF3E968);
      swift_bridgeObjectRelease();
      uint64_t v25 = v46;
      if ((v56 & 1) == 0) {
        goto LABEL_34;
      }
    }
    goto LABEL_28;
  }
  while (1)
  {
    while (1)
    {
LABEL_46:
      uint64_t v102 = v48;
      sub_1AFD30E0C();
      uint64_t v85 = v104;
      uint64_t v48 = v109;
      uint64_t v86 = v46;
      if (sub_1AFFCADB8())
      {
        uint64_t v88 = v115;
        uint64_t v87 = v116;
        double v89 = &v115[*(int *)(v116 + 48)];
        double v90 = v122;
        ((void (*)(char *, char *, uint64_t))v122)(v115, v85, v86);
        uint64_t v118 = v89;
        ((void (*)(char *, uint64_t, uint64_t))v90)(v89, v48, v86);
        double v91 = v106;
        double v92 = &v106[*(int *)(v87 + 48)];
        double v93 = (void (*)(char *, char *, uint64_t))v107;
        ((void (*)(char *, char *, uint64_t))v107)(v106, v88, v86);
        v93(v92, v89, v86);
        double v94 = v117;
        ((void (*)(char *, char *, uint64_t))v90)(v117, v91, v86);
        double v95 = *(void (**)(char *, uint64_t))(v102 + 8);
        v95(v92, v86);
        double v96 = &v91[*(int *)(v87 + 48)];
        ((void (*)(char *, char *, uint64_t))v90)(v91, v88, v86);
        ((void (*)(char *, char *, uint64_t))v90)(v96, v118, v86);
        uint64_t v83 = v120;
        ((void (*)(char *, char *, uint64_t))v90)(&v94[*(int *)(v120 + 36)], v96, v86);
        v95(v91, v86);
        uint64_t v84 = (uint64_t)v94;
        goto LABEL_48;
      }
      __break(1u);
LABEL_53:
      sub_1AFFC8E38();
      sub_1AFFCB7D8();
      swift_bridgeObjectRelease();
      uint64_t v25 = v46;
      if (v125)
      {
LABEL_28:
        uint64_t v57 = (uint64_t)v113;
        sub_1AFFC9878();
        uint64_t v58 = (char *)v57;
        uint64_t v59 = 0;
      }
      else
      {
LABEL_34:
        uint64_t v57 = (uint64_t)v113;
        uint64_t v58 = v113;
        uint64_t v59 = 1;
      }
      uint64_t v67 = v25;
LABEL_37:
      v110(v58, v59, 1, v67);
      uint64_t v66 = v122;
      uint64_t v63 = v101;
LABEL_40:
      swift_bridgeObjectRelease();
      if (v63(v57, 1, v25) != 1) {
        break;
      }
      sub_1AFF3E758(v57, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928]);
    }
    uint64_t v68 = v105;
    ((void (*)(uint64_t, uint64_t, uint64_t))v66)(v105, v57, v25);
    uint64_t v69 = v109;
    if (sub_1AFFC9848()) {
      break;
    }
    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v68, v25);
  }
  sub_1AFD30E0C();
  uint64_t v70 = v25;
  uint64_t v71 = v104;
  char v72 = sub_1AFFCADB8();
  uint64_t v118 = *(char **)(v48 + 8);
  uint64_t v102 = v48 + 8;
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v118)(v69, v70);
  if (v72)
  {
    int v73 = v115;
    uint64_t v74 = v116;
    int v75 = &v115[*(int *)(v116 + 48)];
    long double v76 = v122;
    ((void (*)(char *, char *, uint64_t))v122)(v115, v71, v70);
    uint64_t v114 = v75;
    ((void (*)(char *, uint64_t, uint64_t))v76)(v75, v68, v70);
    uint64_t v77 = v106;
    uint64_t v78 = &v106[*(int *)(v74 + 48)];
    uint64_t v79 = (void (*)(char *, char *, uint64_t))v107;
    ((void (*)(char *, char *, uint64_t))v107)(v106, v73, v70);
    v79(v78, v75, v70);
    uint64_t v80 = v117;
    ((void (*)(char *, char *, uint64_t))v76)(v117, v77, v70);
    unsigned int v81 = v118;
    ((void (*)(char *, uint64_t))v118)(v78, v70);
    uint64_t v82 = &v77[*(int *)(v74 + 48)];
    ((void (*)(char *, char *, uint64_t))v76)(v77, v73, v70);
    ((void (*)(char *, char *, uint64_t))v76)(v82, v114, v70);
    uint64_t v83 = v120;
    ((void (*)(char *, char *, uint64_t))v76)(&v80[*(int *)(v120 + 36)], v82, v70);
    ((void (*)(char *, uint64_t))v81)(v77, v70);
    uint64_t v84 = (uint64_t)v80;
LABEL_48:
    uint64_t v97 = v121;
    sub_1AFF3E900(v84, v121, (uint64_t (*)(void))sub_1AFD30DA8);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v119 + 56))(v97, 0, 1, v83);
  }
  __break(1u);
  return result;
}

uint64_t sub_1AFF3C674@<X0>(uint64_t a1@<X3>, char *a2@<X8>)
{
  sub_1AFF3E8AC(0, &qword_1EB816CF8, MEMORY[0x1E4F27D68]);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v55 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v51 - v7;
  uint64_t v9 = sub_1AFFC9B88();
  uint64_t v56 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v54 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = *(void *)(a1 + 16);
  if (!v13) {
    return sub_1AFFC9B48();
  }
  uint64_t v52 = (char *)&v51 - v12;
  uint64_t v53 = v8;
  uint64_t v14 = 0xE900000000000074;
  uint64_t v15 = (unint64_t *)(a1 + 56);
  uint64_t v16 = v13;
  while (1)
  {
    uint64_t v18 = *(v15 - 1);
    unint64_t v17 = *v15;
    BOOL v19 = *(v15 - 3) == 0x657366666F746D67 && *(v15 - 2) == 0xE900000000000074;
    if (v19 || (sub_1AFFCBCE8() & 1) != 0) {
      break;
    }
    v15 += 4;
    if (!--v16) {
      goto LABEL_57;
    }
  }
  uint64_t result = sub_1AFFC8E38();
  if (v17)
  {
    uint64_t v22 = HIBYTE(v17) & 0xF;
    uint64_t v23 = v18 & 0xFFFFFFFFFFFFLL;
    if ((v17 & 0x2000000000000000) != 0) {
      uint64_t v24 = HIBYTE(v17) & 0xF;
    }
    else {
      uint64_t v24 = v18 & 0xFFFFFFFFFFFFLL;
    }
    if (v24)
    {
      if ((v17 & 0x1000000000000000) != 0)
      {
        uint64_t v14 = (uint64_t)sub_1AFE6FE7C(v18, v17, 10);
        LOBYTE(v18) = v50;
        goto LABEL_54;
      }
      if ((v17 & 0x2000000000000000) == 0)
      {
        if ((v18 & 0x1000000000000000) != 0) {
          uint64_t v25 = (unsigned __int8 *)((v17 & 0xFFFFFFFFFFFFFFFLL) + 32);
        }
        else {
          uint64_t v25 = (unsigned __int8 *)sub_1AFFCB878();
        }
        uint64_t v14 = (uint64_t)sub_1AFE6FE64(v25, v23, 10);
        LOBYTE(v18) = v26 & 1;
LABEL_54:
        swift_bridgeObjectRelease();
        if ((v18 & 1) == 0)
        {
          uint64_t v35 = (uint64_t)v53;
          sub_1AFFC9B58();
          uint64_t v36 = v56;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48))(v35, 1, v9) != 1)
          {
            double v45 = *(void (**)(char *, uint64_t, uint64_t))(v36 + 32);
            uint64_t v46 = v52;
            v45(v52, v35, v9);
            v45(a2, (uint64_t)v46, v9);
            return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(a2, 0, 1, v9);
          }
          sub_1AFF3E758(v35, &qword_1EB816CF8, MEMORY[0x1E4F27D68]);
        }
        goto LABEL_57;
      }
      v57[0] = v18;
      v57[1] = v17 & 0xFFFFFFFFFFFFFFLL;
      if (v18 == 43)
      {
        if (!v22) {
          goto LABEL_83;
        }
        if (v22 == 1 || (BYTE1(v18) - 48) > 9u) {
          goto LABEL_41;
        }
        uint64_t v14 = (BYTE1(v18) - 48);
        if (v22 != 2)
        {
          if ((BYTE2(v18) - 48) > 9u) {
            goto LABEL_41;
          }
          uint64_t v14 = 10 * (BYTE1(v18) - 48) + (BYTE2(v18) - 48);
          uint64_t v27 = v22 - 3;
          if (v27)
          {
            uint64_t v28 = (unsigned __int8 *)v57 + 3;
            while (1)
            {
              unsigned int v29 = *v28 - 48;
              if (v29 > 9) {
                goto LABEL_41;
              }
              uint64_t v30 = 10 * v14;
              if ((unsigned __int128)(v14 * (__int128)10) >> 64 != (10 * v14) >> 63) {
                goto LABEL_41;
              }
              uint64_t v14 = v30 + v29;
              if (__OFADD__(v30, v29)) {
                goto LABEL_41;
              }
              LOBYTE(v18) = 0;
              ++v28;
              if (!--v27) {
                goto LABEL_54;
              }
            }
          }
        }
      }
      else
      {
        if (v18 == 45)
        {
          if (v22)
          {
            if (v22 != 1 && (BYTE1(v18) - 48) <= 9u)
            {
              if (v22 == 2)
              {
                LOBYTE(v18) = 0;
                uint64_t v14 = -(uint64_t)(BYTE1(v18) - 48);
                goto LABEL_54;
              }
              if ((BYTE2(v18) - 48) <= 9u)
              {
                uint64_t v14 = -10 * (BYTE1(v18) - 48) - (BYTE2(v18) - 48);
                uint64_t v20 = v22 - 3;
                if (!v20) {
                  goto LABEL_53;
                }
LABEL_73:
                uint64_t v47 = (unsigned __int8 *)v57 + 3;
                while (1)
                {
                  unsigned int v48 = *v47 - 48;
                  if (v48 > 9) {
                    break;
                  }
                  uint64_t v49 = 10 * v14;
                  if ((unsigned __int128)(v14 * (__int128)10) >> 64 != (10 * v14) >> 63) {
                    break;
                  }
                  uint64_t v14 = v49 - v48;
                  if (__OFSUB__(v49, v48)) {
                    break;
                  }
                  LOBYTE(v18) = 0;
                  ++v47;
                  if (!--v20) {
                    goto LABEL_54;
                  }
                }
              }
            }
LABEL_41:
            uint64_t v14 = 0;
            LOBYTE(v18) = 1;
            goto LABEL_54;
          }
          __break(1u);
LABEL_83:
          __break(1u);
          return result;
        }
        if (!v22 || (v18 - 48) > 9u) {
          goto LABEL_41;
        }
        uint64_t v14 = (v18 - 48);
        if (v22 != 1)
        {
          if ((BYTE1(v18) - 48) > 9u) {
            goto LABEL_41;
          }
          uint64_t v14 = 10 * (v18 - 48) + (BYTE1(v18) - 48);
          uint64_t v31 = v22 - 2;
          if (v31)
          {
            char v32 = (unsigned __int8 *)v57 + 2;
            while (1)
            {
              unsigned int v33 = *v32 - 48;
              if (v33 > 9) {
                goto LABEL_41;
              }
              uint64_t v34 = 10 * v14;
              if ((unsigned __int128)(v14 * (__int128)10) >> 64 != (10 * v14) >> 63) {
                goto LABEL_41;
              }
              uint64_t v14 = v34 + v33;
              if (__OFADD__(v34, v33)) {
                goto LABEL_41;
              }
              LOBYTE(v18) = 0;
              ++v32;
              if (!--v31) {
                goto LABEL_54;
              }
            }
          }
        }
      }
LABEL_53:
      LOBYTE(v18) = 0;
      goto LABEL_54;
    }
    swift_bridgeObjectRelease();
  }
LABEL_57:
  uint64_t v37 = 0;
  for (uint64_t i = (uint64_t *)(a1 + 56); ; i += 4)
  {
    uint64_t v39 = v37 + 1;
    if (__OFADD__(v37, 1))
    {
      __break(1u);
      goto LABEL_73;
    }
    a1 = *(i - 1);
    uint64_t v14 = *i;
    BOOL v40 = *(i - 3) == 0x656E6F7A656D6974 && *(i - 2) == 0xE800000000000000;
    if (v40 || (sub_1AFFCBCE8() & 1) != 0) {
      break;
    }
    ++v37;
    if (v39 == v13) {
      return sub_1AFFC9B48();
    }
  }
  sub_1AFFC8E38();
  if (!v14) {
    return sub_1AFFC9B48();
  }
  uint64_t v41 = (uint64_t)v55;
  sub_1AFFC9B48();
  swift_bridgeObjectRelease();
  uint64_t v42 = v56;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48))(v41, 1, v9) == 1)
  {
    sub_1AFF3E758(v41, &qword_1EB816CF8, MEMORY[0x1E4F27D68]);
    return sub_1AFFC9B48();
  }
  os_log_type_t v43 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 32);
  unint64_t v44 = v54;
  v43(v54, v41, v9);
  v43(a2, (uint64_t)v44, v9);
  return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(a2, 0, 1, v9);
}

uint64_t type metadata accessor for YahooChartModelEngine()
{
  return self;
}

uint64_t sub_1AFF3CD44(uint64_t a1, char a2, uint64_t a3)
{
  if ((a2 & 1) != 0 || *(void *)(a3 + 16) <= a1) {
    return 0;
  }
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v3 = a3 + 16 * a1;
    uint64_t v5 = *(void *)(v3 + 32);
    uint64_t v4 = *(void *)(v3 + 40);
    uint64_t v15 = 0;
    uint64_t v6 = MEMORY[0x1F4188790](a1);
    if ((v4 & 0x1000000000000000) != 0 || !(v4 & 0x2000000000000000 | v5 & 0x1000000000000000))
    {
      sub_1AFFC8E38();
      sub_1AFFCB7D8();
      swift_bridgeObjectRelease();
      if (v14) {
        return v15;
      }
      return 0;
    }
    MEMORY[0x1F4188790](v6);
    if ((v4 & 0x2000000000000000) != 0)
    {
      if (v5 <= 0x20u && ((1 << v5) & 0x100003E01) != 0)
      {
        sub_1AFFC8E38();
      }
      else
      {
        sub_1AFFC8E38();
        uint64_t v11 = (unsigned __int8 *)_swift_stdlib_strtod_clocale();
        if (v11)
        {
          int v12 = *v11;
          swift_bridgeObjectRelease();
          if (!v12) {
            return v15;
          }
          return 0;
        }
      }
      swift_bridgeObjectRelease();
      return 0;
    }
    if ((v5 & 0x1000000000000000) != 0)
    {
      uint64_t v7 = (v4 & 0xFFFFFFFFFFFFFFFLL) + 32;
      uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
      goto LABEL_9;
    }
  }
  uint64_t v7 = sub_1AFFCB878();
  uint64_t v8 = v13;
LABEL_9:
  sub_1AFFC8E38();
  char v9 = sub_1AFF182F8(v7, v8, (void (*)(uint64_t *__return_ptr))sub_1AFF3E968);
  swift_bridgeObjectRelease();
  if (v9) {
    return v15;
  }
  return 0;
}

unint64_t sub_1AFF3CF6C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v41 = a8;
  uint64_t v38 = a6;
  uint64_t v39 = a7;
  uint64_t v36 = a3;
  uint64_t v37 = a4;
  uint64_t v35 = a2;
  sub_1AFF3E8AC(0, &qword_1EB817A80, (void (*)(uint64_t))type metadata accessor for Chart.Entry);
  MEMORY[0x1F4188790](v12 - 8);
  char v14 = (char *)&v29 - v13;
  uint64_t v34 = type metadata accessor for Chart.Entry(0);
  uint64_t v15 = MEMORY[0x1F4188790](v34);
  uint64_t v33 = (uint64_t)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  BOOL v19 = (char *)&v29 - v18;
  uint64_t v20 = *(void *)(a1 + 16);
  if (!v20) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v32 = a9;
  int v31 = a5 & 1;
  uint64_t v30 = v17;
  uint64_t v21 = (unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  sub_1AFFC8E38();
  uint64_t v29 = a1;
  uint64_t v22 = (uint64_t *)(a1 + 48);
  unint64_t v23 = MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v25 = *(v22 - 1);
    uint64_t v24 = *v22;
    v40[0] = *(v22 - 2);
    v40[1] = v25;
    v40[2] = v24;
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFF3B020(v40, v35, v31, v39, v41, v14, v32);
    if (v9)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v23;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((*v21)(v14, 1, v34) == 1)
    {
      sub_1AFF3E758((uint64_t)v14, &qword_1EB817A80, (void (*)(uint64_t))type metadata accessor for Chart.Entry);
    }
    else
    {
      sub_1AFF3E900((uint64_t)v14, (uint64_t)v19, type metadata accessor for Chart.Entry);
      sub_1AFF3E900((uint64_t)v19, v33, type metadata accessor for Chart.Entry);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v23 = sub_1AFD366A4(0, *(void *)(v23 + 16) + 1, 1, v23);
      }
      unint64_t v27 = *(void *)(v23 + 16);
      unint64_t v26 = *(void *)(v23 + 24);
      if (v27 >= v26 >> 1) {
        unint64_t v23 = sub_1AFD366A4(v26 > 1, v27 + 1, 1, v23);
      }
      *(void *)(v23 + 16) = v27 + 1;
      sub_1AFF3E900(v33, v23+ ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80))+ *(void *)(v30 + 72) * v27, type metadata accessor for Chart.Entry);
    }
    v22 += 3;
    --v20;
  }
  while (v20);
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t sub_1AFF3D2CC@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(result + 16);
  if (v3)
  {
    uint64_t v4 = result;
    sub_1AFFC8E38();
    uint64_t v5 = 0;
    while (2)
    {
      switch(*(unsigned char *)(v4 + v5 + 32))
      {
        case 1:
        case 2:
        case 3:
        case 4:
          char v6 = sub_1AFFCBCE8();
          swift_bridgeObjectRelease();
          if (v6) {
            goto LABEL_10;
          }
          if (v3 != ++v5) {
            continue;
          }
          swift_bridgeObjectRelease();
          uint64_t v5 = 0;
          char v27 = 1;
          break;
        default:
          swift_bridgeObjectRelease();
LABEL_10:
          swift_bridgeObjectRelease();
          char v27 = 0;
          break;
      }
      break;
    }
    sub_1AFFC8E38();
    uint64_t v10 = 0;
    while (2)
    {
      switch(*(unsigned char *)(v4 + v10 + 32))
      {
        case 1:
          swift_bridgeObjectRelease();
          goto LABEL_19;
        default:
          char v16 = sub_1AFFCBCE8();
          swift_bridgeObjectRelease();
          if (v16)
          {
LABEL_19:
            swift_bridgeObjectRelease();
            char v26 = 0;
            goto LABEL_20;
          }
          uint64_t v17 = v10 + 1;
          if (__OFADD__(v10, 1))
          {
            __break(1u);
LABEL_49:
            __break(1u);
LABEL_50:
            __break(1u);
LABEL_51:
            __break(1u);
            JUMPOUT(0x1AFF3D7DCLL);
          }
          ++v10;
          if (v17 != v3) {
            continue;
          }
          swift_bridgeObjectRelease();
          uint64_t v10 = 0;
          char v26 = 1;
LABEL_20:
          sub_1AFFC8E38();
          uint64_t v9 = 0;
          while (2)
          {
            switch(*(unsigned char *)(v4 + v9 + 32))
            {
              case 2:
                swift_bridgeObjectRelease();
                goto LABEL_28;
              default:
                char v18 = sub_1AFFCBCE8();
                swift_bridgeObjectRelease();
                if (v18)
                {
LABEL_28:
                  swift_bridgeObjectRelease();
                  char v25 = 0;
                  goto LABEL_29;
                }
                uint64_t v19 = v9 + 1;
                if (__OFADD__(v9, 1)) {
                  goto LABEL_49;
                }
                ++v9;
                if (v19 != v3) {
                  continue;
                }
                swift_bridgeObjectRelease();
                uint64_t v9 = 0;
                char v25 = 1;
LABEL_29:
                sub_1AFFC8E38();
                uint64_t v8 = 0;
                while (2)
                {
                  switch(*(unsigned char *)(v4 + v8 + 32))
                  {
                    case 3:
                      swift_bridgeObjectRelease();
                      goto LABEL_37;
                    default:
                      char v20 = sub_1AFFCBCE8();
                      swift_bridgeObjectRelease();
                      if (v20)
                      {
LABEL_37:
                        swift_bridgeObjectRelease();
                        char v24 = 0;
                        goto LABEL_38;
                      }
                      uint64_t v21 = v8 + 1;
                      if (__OFADD__(v8, 1)) {
                        goto LABEL_50;
                      }
                      ++v8;
                      if (v21 != v3) {
                        continue;
                      }
                      swift_bridgeObjectRelease();
                      uint64_t v8 = 0;
                      char v24 = 1;
LABEL_38:
                      sub_1AFFC8E38();
                      uint64_t v7 = 0;
                      while (2)
                      {
                        switch(*(unsigned char *)(v4 + v7 + 32))
                        {
                          case 4:
                            swift_bridgeObjectRelease();
                            char v11 = 0;
                            goto LABEL_45;
                          default:
                            char v22 = sub_1AFFCBCE8();
                            swift_bridgeObjectRelease();
                            if (v22) {
                              goto LABEL_44;
                            }
                            uint64_t v23 = v7 + 1;
                            if (__OFADD__(v7, 1)) {
                              goto LABEL_51;
                            }
                            ++v7;
                            if (v23 != v3) {
                              continue;
                            }
                            uint64_t v7 = 0;
LABEL_44:
                            char v11 = v22 ^ 1;
LABEL_45:
                            uint64_t result = swift_bridgeObjectRelease();
                            char v14 = v26;
                            char v15 = v27;
                            char v12 = v24;
                            char v13 = v25;
                            break;
                        }
                        break;
                      }
                      break;
                  }
                  break;
                }
                break;
            }
            break;
          }
          break;
      }
      break;
    }
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v5 = 0;
    char v11 = 1;
    char v12 = 1;
    char v13 = 1;
    char v14 = 1;
    char v15 = 1;
  }
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v15;
  *(void *)(a2 + 16) = v10;
  *(unsigned char *)(a2 + 24) = v14;
  *(void *)(a2 + 32) = v9;
  *(unsigned char *)(a2 + 40) = v13;
  *(void *)(a2 + 48) = v8;
  *(unsigned char *)(a2 + 56) = v12;
  *(void *)(a2 + 64) = v7;
  *(unsigned char *)(a2 + 72) = v11 & 1;
  return result;
}

uint64_t sub_1AFF3D840(char a1, uint64_t a2)
{
  if (a1) {
    return 0;
  }
  uint64_t v3 = *(void *)(a2 + 16);
  if (!v3) {
    return 0;
  }
  for (uint64_t i = (uint64_t *)(a2 + 56); ; i += 4)
  {
    uint64_t v5 = *(i - 3);
    uint64_t v7 = *(i - 1);
    uint64_t v6 = *i;
    if (v5 == 0x73756F6976657270 && *(i - 2) == 0xEE0065736F6C635FLL) {
      break;
    }
    uint64_t v5 = sub_1AFFCBCE8();
    if (v5) {
      break;
    }
    if (!--v3) {
      return 0;
    }
  }
  if (!v6) {
    return 0;
  }
  uint64_t v9 = MEMORY[0x1F4188790](v5);
  if ((v6 & 0x1000000000000000) != 0 || !(v6 & 0x2000000000000000 | v7 & 0x1000000000000000))
  {
    sub_1AFFC8E38();
    sub_1AFFCB7D8();
    swift_bridgeObjectRelease();
  }
  else
  {
    MEMORY[0x1F4188790](v9);
    if ((v6 & 0x2000000000000000) != 0)
    {
      switch((char)v7)
      {
        case 0:
        case 9:
        case 10:
        case 11:
        case 12:
        case 13:
        case 32:
          sub_1AFFC8E38();
          break;
        default:
          sub_1AFFC8E38();
          _swift_stdlib_strtod_clocale();
          break;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      if ((v7 & 0x1000000000000000) != 0)
      {
        uint64_t v10 = (v6 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v11 = v7 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v10 = sub_1AFFCB878();
        uint64_t v11 = v12;
      }
      sub_1AFFC8E38();
      sub_1AFF182F8(v10, v11, (void (*)(uint64_t *__return_ptr))sub_1AFF3E890);
      swift_bridgeObjectRelease();
    }
  }
  return 0;
}

void sub_1AFF3DB6C(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v85 = a3;
  LODWORD(v87) = a2;
  uint64_t v4 = sub_1AFFC98F8();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v83 = (char *)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFF3E8AC(0, &qword_1EB817AC0, (void (*)(uint64_t))type metadata accessor for Chart);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v84 = (void **)((char *)&v76 - v7);
  sub_1AFF3E8AC(0, &qword_1EB816CF8, MEMORY[0x1E4F27D68]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v86 = (char *)&v76 - v9;
  uint64_t v10 = sub_1AFFC9B88();
  uint64_t v88 = *(void *)(v10 - 8);
  uint64_t v89 = v10;
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  unsigned int v81 = (char *)&v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v82 = (char *)&v76 - v13;
  sub_1AFF3E8AC(0, &qword_1EB817EF0, (void (*)(uint64_t))sub_1AFD30DA8);
  MEMORY[0x1F4188790](v14 - 8);
  char v16 = (char *)&v76 - v15;
  sub_1AFD30DA8();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v91 = v17;
  uint64_t v92 = v18;
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v80 = (uint64_t)&v76 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v90 = (uint64_t)&v76 - v21;
  uint64_t v22 = *(void *)(a1 + 24);
  uint64_t v23 = *(void *)(v22 + 16);
  if (!v23) {
    goto LABEL_17;
  }
  uint64_t v24 = *(void *)a1;
  uint64_t v79 = *(void *)(a1 + 8);
  char v25 = (unint64_t *)(v22 + 56);
  int v78 = *(unsigned __int8 *)(a1 + 16);
  while (1)
  {
    uint64_t v27 = *(v25 - 1);
    unint64_t v26 = *v25;
    BOOL v28 = *(v25 - 3) == 0x72656B636974 && *(v25 - 2) == 0xE600000000000000;
    if (v28 || (sub_1AFFCBCE8() & 1) != 0) {
      break;
    }
    v25 += 4;
    if (!--v23) {
      goto LABEL_17;
    }
  }
  if (v26)
  {
    if (!*(void *)(v24 + 16))
    {
      uint64_t v49 = qword_1EB810AD8;
      sub_1AFFC8E38();
      if (v49 != -1) {
        swift_once();
      }
      uint64_t v50 = sub_1AFFCA8A8();
      __swift_project_value_buffer(v50, (uint64_t)qword_1EB831A30);
      sub_1AFFC8E38();
      uint64_t v51 = sub_1AFFCA888();
      os_log_type_t v52 = sub_1AFFCB468();
      if (os_log_type_enabled(v51, v52))
      {
        uint64_t v53 = (uint8_t *)swift_slowAlloc();
        uint64_t v54 = swift_slowAlloc();
        v95[0] = v54;
        *(_DWORD *)uint64_t v53 = 136446210;
        sub_1AFFC8E38();
        uint64_t v96 = sub_1AFD36BA8(v27, v26, v95);
        sub_1AFFCB688();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1AFD01000, v51, v52, "failed to created chart model for %{public}s: no entries", v53, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1B3E8F0D0](v54, -1, -1);
        MEMORY[0x1B3E8F0D0](v53, -1, -1);

        return;
      }

      goto LABEL_33;
    }
    sub_1AFFC8E38();
    sub_1AFF3D2CC(v24, (uint64_t)v95);
    uint64_t v29 = (void *)sub_1AFFCAE68();
    uint64_t v30 = v24;
    id v31 = objc_msgSend(self, sel_dateFormatterWithFormat_forReuse_, v29, 1);

    sub_1AFFC8E38();
    sub_1AFFC8E38();
    id v32 = v31;
    id v33 = v31;
    long double v76 = v31;
    id v34 = v32;
    sub_1AFFC8E38();
    uint64_t v35 = v79;
    uint64_t v36 = sub_1AFFC8E38();
    uint64_t v37 = v33;
    LODWORD(v29) = v78;
    uint64_t v38 = v93;
    unint64_t v39 = sub_1AFF3CF6C(v36, v37, v30, v35, v78, v22, v27, v26, (uint64_t)v95);
    uint64_t v93 = v38;
    swift_bridgeObjectRelease();
    id v77 = v34;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1AFF3B954(v39, (int)v29, (char *)v22, v76, (uint64_t)v16);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v92 + 48))(v16, 1, v91) == 1)
    {
      swift_bridgeObjectRelease();
      sub_1AFF3E758((uint64_t)v16, &qword_1EB817EF0, (void (*)(uint64_t))sub_1AFD30DA8);
      if (qword_1EB810AD8 != -1) {
        swift_once();
      }
      uint64_t v40 = sub_1AFFCA8A8();
      __swift_project_value_buffer(v40, (uint64_t)qword_1EB831A30);
      sub_1AFFC8E38();
      uint64_t v41 = sub_1AFFCA888();
      os_log_type_t v42 = sub_1AFFCB468();
      if (os_log_type_enabled(v41, v42))
      {
        os_log_type_t v43 = (uint8_t *)swift_slowAlloc();
        uint64_t v44 = swift_slowAlloc();
        uint64_t v96 = v44;
        *(_DWORD *)os_log_type_t v43 = 136446210;
        sub_1AFFC8E38();
        uint64_t v94 = sub_1AFD36BA8(v27, v26, &v96);
        sub_1AFFCB688();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1AFD01000, v41, v42, "failed to create chart model for %{public}s: unable to determine date range", v43, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1B3E8F0D0](v44, -1, -1);
        MEMORY[0x1B3E8F0D0](v43, -1, -1);

        return;
      }

LABEL_33:
      swift_bridgeObjectRelease_n();
      return;
    }
    uint64_t v92 = v39;
    uint64_t v55 = v90;
    sub_1AFF3E900((uint64_t)v16, v90, (uint64_t (*)(void))sub_1AFD30DA8);
    uint64_t v56 = sub_1AFF3D840(v87, v22);
    char v58 = v57;
    uint64_t v59 = v86;
    sub_1AFF3C674(v22, v86);
    uint64_t v61 = v88;
    uint64_t v60 = v89;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v88 + 48))(v59, 1, v89) == 1)
    {
      uint64_t v62 = v55;
      swift_bridgeObjectRelease();
      sub_1AFF3E758((uint64_t)v59, &qword_1EB816CF8, MEMORY[0x1E4F27D68]);
      if (qword_1EB810AD8 != -1) {
        swift_once();
      }
      uint64_t v63 = sub_1AFFCA8A8();
      __swift_project_value_buffer(v63, (uint64_t)qword_1EB831A30);
      sub_1AFFC8E38();
      uint64_t v64 = sub_1AFFCA888();
      os_log_type_t v65 = sub_1AFFCB468();
      if (os_log_type_enabled(v64, v65))
      {
        uint64_t v66 = (uint8_t *)swift_slowAlloc();
        uint64_t v67 = swift_slowAlloc();
        uint64_t v96 = v67;
        *(_DWORD *)uint64_t v66 = 136446210;
        sub_1AFFC8E38();
        uint64_t v94 = sub_1AFD36BA8(v27, v26, &v96);
        sub_1AFFCB688();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1AFD01000, v64, v65, "failed to create chart time zone in %{public}s", v66, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1B3E8F0D0](v67, -1, -1);
        MEMORY[0x1B3E8F0D0](v66, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      uint64_t v75 = v62;
    }
    else
    {
      LODWORD(v91) = v58 & 1;
      uint64_t v68 = *(void (**)(char *, char *, uint64_t))(v61 + 32);
      uint64_t v87 = v56;
      uint64_t v69 = v82;
      v68(v82, v59, v60);
      uint64_t v70 = v80;
      sub_1AFF3E810(v55, v80);
      uint64_t v71 = (uint64_t)v81;
      (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v81, v69, v60);
      uint64_t v72 = (uint64_t)v83;
      sub_1AFFC98E8();
      int v73 = v84;
      sub_1AFD9B700(v92, v70, v87, v91, v71, v72, v84);
      uint64_t v74 = type metadata accessor for Chart(0);
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v74 - 8) + 56))(v73, 0, 1, v74);
      sub_1AFE5AA00((uint64_t)v73, v27, v26);

      (*(void (**)(char *, uint64_t))(v61 + 8))(v69, v89);
      uint64_t v75 = v90;
    }
    sub_1AFF3E7B4(v75);
  }
  else
  {
LABEL_17:
    if (qword_1EB810AD8 != -1) {
      swift_once();
    }
    uint64_t v45 = sub_1AFFCA8A8();
    __swift_project_value_buffer(v45, (uint64_t)qword_1EB831A30);
    uint64_t v46 = sub_1AFFCA888();
    os_log_type_t v47 = sub_1AFFCB468();
    if (os_log_type_enabled(v46, v47))
    {
      unsigned int v48 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unsigned int v48 = 0;
      _os_log_impl(&dword_1AFD01000, v46, v47, "failed to created chart model: no ticker found", v48, 2u);
      MEMORY[0x1B3E8F0D0](v48, -1, -1);
    }
  }
}

uint64_t sub_1AFF3E758(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1AFF3E8AC(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1AFF3E7B4(uint64_t a1)
{
  sub_1AFD30DA8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1AFF3E810(uint64_t a1, uint64_t a2)
{
  sub_1AFD30DA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unsigned char *sub_1AFF3E874@<X0>(unsigned char *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_1AFF1828C(a1, a2);
}

void *sub_1AFF3E890@<X0>(unsigned char *a1@<X8>)
{
  return sub_1AFF18358(*(void *(**)(uint64_t *__return_ptr))(v1 + 16), a1);
}

void sub_1AFF3E8AC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1AFFCB658();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1AFF3E900(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void *sub_1AFF3E968@<X0>(unsigned char *a1@<X8>)
{
  return sub_1AFF3E890(a1);
}

unsigned char *sub_1AFF3E980@<X0>(unsigned char *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_1AFF3E874(a1, a2);
}

uint64_t *sub_1AFF3E998(uint64_t *a1, uint64_t *a2, int *a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1AFFC8E48();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    uint64_t v11 = *(int *)(type metadata accessor for ForYouConfigRecord.Configuration.TopStories(0) + 20);
    uint64_t v12 = &v9[v11];
    uint64_t v13 = &v10[v11];
    uint64_t v14 = sub_1AFFC98F8();
    uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    v15(v12, v13, v14);
    uint64_t v16 = a3[7];
    *(uint64_t *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    uint64_t v17 = (uint64_t *)((char *)v4 + v16);
    uint64_t v18 = (uint64_t *)((char *)a2 + v16);
    uint64_t v19 = v18[1];
    *uint64_t v17 = *v18;
    v17[1] = v19;
    *(uint64_t *)((char *)v4 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
  }
  return v4;
}

uint64_t type metadata accessor for ForYouConfigRecord.Configuration.TopStories(uint64_t a1)
{
  return sub_1AFD9BB54(a1, qword_1EB817458);
}

uint64_t sub_1AFF3EB10(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  uint64_t v5 = v4 + *(int *)(type metadata accessor for ForYouConfigRecord.Configuration.TopStories(0) + 20);
  uint64_t v6 = sub_1AFFC98F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *sub_1AFF3EBD0(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  *(void *)((char *)a1 + v7) = *(void *)((char *)a2 + v7);
  uint64_t v10 = *(int *)(type metadata accessor for ForYouConfigRecord.Configuration.TopStories(0) + 20);
  uint64_t v11 = &v8[v10];
  uint64_t v12 = &v9[v10];
  uint64_t v13 = sub_1AFFC98F8();
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  v14(v11, v12, v13);
  uint64_t v15 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  return a1;
}

void *sub_1AFF3ECD8(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  *(void *)((char *)a1 + v6) = *(void *)((char *)a2 + v6);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(type metadata accessor for ForYouConfigRecord.Configuration.TopStories(0) + 20);
  uint64_t v10 = &v7[v9];
  uint64_t v11 = &v8[v9];
  uint64_t v12 = sub_1AFFC98F8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1AFF3EE0C(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  *(void *)((char *)a1 + v6) = *(void *)((char *)a2 + v6);
  uint64_t v9 = *(int *)(type metadata accessor for ForYouConfigRecord.Configuration.TopStories(0) + 20);
  uint64_t v10 = &v7[v9];
  uint64_t v11 = &v8[v9];
  uint64_t v12 = sub_1AFFC98F8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  uint64_t v13 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v13) = *(_OWORD *)((char *)a2 + v13);
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  return a1;
}

void *sub_1AFF3EED4(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  *(void *)((char *)a1 + v7) = *(void *)((char *)a2 + v7);
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(type metadata accessor for ForYouConfigRecord.Configuration.TopStories(0) + 20);
  uint64_t v11 = &v8[v10];
  uint64_t v12 = &v9[v10];
  uint64_t v13 = sub_1AFFC98F8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[7];
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  uint64_t v18 = *v16;
  uint64_t v17 = v16[1];
  *uint64_t v15 = v18;
  v15[1] = v17;
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AFF3EFD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1AFF3EFE4);
}

uint64_t sub_1AFF3EFE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for ForYouConfigRecord.Configuration(0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t type metadata accessor for ForYouConfigRecord.Configuration(uint64_t a1)
{
  return sub_1AFD9BB54(a1, (uint64_t *)&unk_1EB810EA8);
}

uint64_t sub_1AFF3F0B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1AFF3F0C8);
}

uint64_t sub_1AFF3F0C8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for ForYouConfigRecord.Configuration(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for ForYouConfigRecord(uint64_t a1)
{
  return sub_1AFD9BB54(a1, (uint64_t *)&unk_1EB8174C0);
}

uint64_t sub_1AFF3F190()
{
  uint64_t result = type metadata accessor for ForYouConfigRecord.Configuration.TopStories(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1AFF3F238(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for ForYouConfigRecord.Configuration.TopStories(0);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  uint64_t v6 = *a2;
  *a1 = *a2;
  if ((v5 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1AFFC8E48();
  }
  else
  {
    uint64_t v7 = *(int *)(v4 + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1AFFC98F8();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    sub_1AFFC8E38();
    v11(v8, v9, v10);
  }
  return a1;
}

uint64_t sub_1AFF3F328(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = a1 + *(int *)(type metadata accessor for ForYouConfigRecord.Configuration.TopStories(0) + 20);
  uint64_t v3 = sub_1AFFC98F8();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

void *sub_1AFF3F3A4(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(type metadata accessor for ForYouConfigRecord.Configuration.TopStories(0) + 20);
  int v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1AFFC98F8();
  uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
  sub_1AFFC8E38();
  v8(v5, v6, v7);
  return a1;
}

void *sub_1AFF3F448(void *a1, void *a2)
{
  *a1 = *a2;
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(int *)(type metadata accessor for ForYouConfigRecord.Configuration.TopStories(0) + 20);
  int v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1AFFC98F8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

void *sub_1AFF3F4E0(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(type metadata accessor for ForYouConfigRecord.Configuration.TopStories(0) + 20);
  int v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1AFFC98F8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_1AFF3F568(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(int *)(type metadata accessor for ForYouConfigRecord.Configuration.TopStories(0) + 20);
  int v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1AFFC98F8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_1AFF3F5F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1AFF3F60C);
}

uint64_t sub_1AFF3F60C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ForYouConfigRecord.Configuration.TopStories(0);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_1AFF3F678(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1AFF3F68C);
}

uint64_t sub_1AFF3F68C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ForYouConfigRecord.Configuration.TopStories(0);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_1AFF3F6FC()
{
  uint64_t result = type metadata accessor for ForYouConfigRecord.Configuration.TopStories(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1AFF3F788(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    int v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    sub_1AFFC8E48();
  }
  else
  {
    int v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_1AFFC98F8();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    sub_1AFFC8E38();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t sub_1AFF3F86C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1AFFC98F8();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_1AFF3F8E4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1AFFC98F8();
  uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
  sub_1AFFC8E38();
  v8(v5, v6, v7);
  return a1;
}

void *sub_1AFF3F97C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1AFFC98F8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

void *sub_1AFF3FA10(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1AFFC98F8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_1AFF3FA8C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1AFFC98F8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_1AFF3FB18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1AFF3FB2C);
}

uint64_t sub_1AFF3FB2C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1AFFC98F8();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1AFF3FBDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1AFF3FBF0);
}

void *sub_1AFF3FBF0(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1AFFC98F8();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1AFF3FC98()
{
  uint64_t result = sub_1AFFC98F8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1AFF3FD34(char a1)
{
  unint64_t result = 0x4E64726F6365725FLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x72756769666E6F63;
      break;
    case 2:
      unint64_t result = 0xD000000000000014;
      break;
    case 3:
      unint64_t result = 0xD000000000000016;
      break;
    case 4:
      unint64_t result = 0xD00000000000001DLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1AFF3FE08(char a1)
{
  unint64_t result = 0x4E64726F6365725FLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x72756769666E6F63;
      break;
    case 2:
      unint64_t result = 0xD000000000000014;
      break;
    case 3:
      unint64_t result = 0xD000000000000016;
      break;
    case 4:
      unint64_t result = 0xD00000000000001DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1AFF3FEDC(unsigned __int8 *a1, char *a2)
{
  return sub_1AFDEE6B4(*a1, *a2);
}

uint64_t sub_1AFF3FEE8()
{
  return sub_1AFF9AC88();
}

uint64_t sub_1AFF3FEF0()
{
  return sub_1AFD77E64();
}

uint64_t sub_1AFF3FEF8()
{
  return sub_1AFF9BADC();
}

uint64_t sub_1AFF3FF00@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFF4413C();
  *a1 = result;
  return result;
}

unint64_t sub_1AFF3FF30@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1AFF3FD34(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1AFF3FF5C()
{
  return sub_1AFF3FE08(*v0);
}

uint64_t sub_1AFF3FF64@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFF4413C();
  *a1 = result;
  return result;
}

uint64_t sub_1AFF3FF8C(uint64_t a1)
{
  unint64_t v2 = sub_1AFF42B90();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFF3FFC8(uint64_t a1)
{
  unint64_t v2 = sub_1AFF42B90();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFF40004@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v62 = a2;
  uint64_t v63 = type metadata accessor for ForYouConfigRecord.Configuration.TopStories(0);
  MEMORY[0x1F4188790](v63);
  uint64_t v64 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = type metadata accessor for ForYouConfigRecord.Configuration(0);
  MEMORY[0x1F4188790](v60);
  uint64_t v61 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1AFFC9148();
  uint64_t v58 = *(void *)(v5 - 8);
  uint64_t v59 = v5;
  MEMORY[0x1F4188790](v5);
  char v57 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1AFFCAED8();
  uint64_t v55 = *(void *)(v7 - 8);
  uint64_t v56 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v54 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFF4423C(0, &qword_1EB8112F8, (uint64_t (*)(void))sub_1AFF42B90, (uint64_t)&type metadata for ForYouConfigRecord.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v10 = v9;
  uint64_t v65 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v49 - v11;
  uint64_t v13 = type metadata accessor for ForYouConfigRecord(0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (uint64_t *)((char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFF42B90();
  uint64_t v16 = v66;
  sub_1AFFCBE68();
  if (v16) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v18 = v65;
  uint64_t v66 = a1;
  uint64_t v53 = (int *)v13;
  char v69 = 0;
  uint64_t v19 = v12;
  sub_1AFFCBAF8();
  uint64_t v20 = v67;
  unint64_t v21 = v68;
  if (!v68)
  {
    uint64_t v20 = 0x676E697373696DLL;
    unint64_t v21 = 0xE700000000000000;
  }
  *uint64_t v15 = v20;
  v15[1] = v21;
  char v69 = 2;
  sub_1AFD3ABD0();
  uint64_t v22 = sub_1AFD4F780((unint64_t *)&qword_1EB819DD8);
  sub_1AFFCBAF8();
  uint64_t v23 = v10;
  uint64_t v24 = v18;
  uint64_t v51 = (void *)v22;
  if (v67) {
    uint64_t v25 = v67;
  }
  else {
    uint64_t v25 = MEMORY[0x1E4FBC860];
  }
  unint64_t v26 = v53;
  *(uint64_t *)((char *)v15 + v53[6]) = v25;
  char v69 = 3;
  sub_1AFFC8E38();
  uint64_t v52 = 0;
  sub_1AFFCBAF8();
  uint64_t v27 = v25;
  uint64_t v28 = v67;
  unint64_t v29 = v68;
  if (!v68)
  {
    uint64_t v28 = 0;
    unint64_t v29 = 0xE000000000000000;
  }
  uint64_t v30 = (uint64_t *)((char *)v15 + v26[7]);
  uint64_t *v30 = v28;
  v30[1] = v29;
  char v69 = 4;
  sub_1AFFCBAF8();
  uint64_t v50 = v23;
  uint64_t v51 = v15;
  id v31 = v19;
  uint64_t v32 = v67;
  uint64_t v33 = MEMORY[0x1E4FBC860];
  if (v67)
  {
    swift_bridgeObjectRelease();
    uint64_t v27 = v32;
  }
  *(void *)((char *)v51 + v26[8]) = v27;
  LOBYTE(v67) = 1;
  uint64_t v34 = sub_1AFFCBAA8();
  uint64_t v36 = (uint64_t)v66;
  uint64_t v37 = v31;
  uint64_t v38 = v64;
  uint64_t v39 = (uint64_t)v51;
  if (!v35) {
    goto LABEL_19;
  }
  uint64_t v40 = HIBYTE(v35) & 0xF;
  if ((v35 & 0x2000000000000000) == 0) {
    uint64_t v40 = v34 & 0xFFFFFFFFFFFFLL;
  }
  if (!v40)
  {
    swift_bridgeObjectRelease();
LABEL_19:
    sub_1AFFC98E8();
    *uint64_t v38 = v33;
    (*(void (**)(char *, uint64_t))(v24 + 8))(v37, v50);
    uint64_t v46 = v39 + v26[5];
    os_log_type_t v47 = type metadata accessor for ForYouConfigRecord.Configuration.TopStories;
    uint64_t v48 = (uint64_t)v38;
    goto LABEL_20;
  }
  uint64_t v41 = v54;
  sub_1AFFCAEC8();
  uint64_t v42 = sub_1AFFCAEA8();
  unint64_t v44 = v43;
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v41, v56);
  if (v44 >> 60 != 15)
  {
    sub_1AFFC9198();
    swift_allocObject();
    sub_1AFFC9188();
    (*(void (**)(char *, void, uint64_t))(v58 + 104))(v57, *MEMORY[0x1E4F26C98], v59);
    sub_1AFFC9158();
    sub_1AFF42C4C(&qword_1EB810EA0, (void (*)(uint64_t))type metadata accessor for ForYouConfigRecord.Configuration);
    uint64_t v45 = v61;
    sub_1AFFC9168();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v37, v50);
    swift_release();
    sub_1AFDE6658(v42, v44);
    uint64_t v39 = (uint64_t)v51;
    uint64_t v46 = (uint64_t)v51 + v53[5];
    os_log_type_t v47 = type metadata accessor for ForYouConfigRecord.Configuration;
    uint64_t v48 = (uint64_t)v45;
LABEL_20:
    sub_1AFF42BE4(v48, v46, v47);
    sub_1AFF42CE8(v39, v62, type metadata accessor for ForYouConfigRecord);
    __swift_destroy_boxed_opaque_existential_1(v36);
    return sub_1AFF441DC(v39, type metadata accessor for ForYouConfigRecord);
  }
  __break(1u);
  return result;
}

uint64_t sub_1AFF408C4(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1AFFCAED8();
  MEMORY[0x1F4188790](v4 - 8);
  v24[1] = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1AFFC91A8();
  uint64_t v25 = *(void *)(v6 - 8);
  uint64_t v26 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFF4423C(0, &qword_1E9AFCBD0, (uint64_t (*)(void))sub_1AFF42B90, (uint64_t)&type metadata for ForYouConfigRecord.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)v24 - v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFF42B90();
  sub_1AFFCBE78();
  LOBYTE(v29) = 0;
  uint64_t v14 = v27;
  sub_1AFFCBC08();
  if (v14) {
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  uint64_t v27 = v8;
  uint64_t v16 = v11;
  uint64_t v17 = type metadata accessor for ForYouConfigRecord(0);
  uint64_t v29 = *(void *)(v2 + *(int *)(v17 + 24));
  char v28 = 2;
  sub_1AFD3ABD0();
  sub_1AFD4F780((unint64_t *)&qword_1EB819DC8);
  sub_1AFFCBC58();
  LOBYTE(v29) = 3;
  sub_1AFFCBC08();
  uint64_t v29 = *(void *)*(int *)(v17 + 32);
  char v28 = 4;
  sub_1AFFCBC58();
  v24[0] = v10;
  sub_1AFFC91E8();
  swift_allocObject();
  uint64_t v18 = sub_1AFFC91D8();
  (*(void (**)(char *, void, uint64_t))(v25 + 104))(v27, *MEMORY[0x1E4F26D10], v26);
  sub_1AFFC91B8();
  type metadata accessor for ForYouConfigRecord.Configuration(0);
  sub_1AFF42C4C(&qword_1E9AFCBD8, (void (*)(uint64_t))type metadata accessor for ForYouConfigRecord.Configuration);
  uint64_t v19 = sub_1AFFC91C8();
  unint64_t v21 = v20;
  uint64_t v27 = (char *)v18;
  sub_1AFFCAEC8();
  uint64_t result = sub_1AFFCAEB8();
  if (v22)
  {
    LOBYTE(v29) = 1;
    uint64_t v23 = v24[0];
    sub_1AFFCBC08();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v23);
    sub_1AFD4B504(v19, v21);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1AFF40D74()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFF40DCC()
{
  return sub_1AFFCAF68();
}

uint64_t sub_1AFF40DE8()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFF40E3C@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1AFFCBA78();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1AFF40E90(void *a1@<X8>)
{
  *a1 = 0x69726F7453706F74;
  a1[1] = 0xEA00000000007365;
}

uint64_t sub_1AFF40EB0()
{
  return 0x69726F7453706F74;
}

uint64_t sub_1AFF40ECC@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1AFFCBA78();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1AFF40F24(uint64_t a1)
{
  unint64_t v2 = sub_1AFF42C94();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFF40F60(uint64_t a1)
{
  unint64_t v2 = sub_1AFF42C94();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFF40F9C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v31 = a2;
  sub_1AFF42D50(0, &qword_1EB810E98, type metadata accessor for ForYouConfigRecord.Configuration.TopStories, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v33 = (char *)&v27 - v4;
  uint64_t v5 = type metadata accessor for ForYouConfigRecord.Configuration.TopStories(0);
  uint64_t v29 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v32 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v27 - v8;
  sub_1AFF4423C(0, &qword_1EB811300, (uint64_t (*)(void))sub_1AFF42C94, (uint64_t)&type metadata for ForYouConfigRecord.Configuration.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v34 = v10;
  uint64_t v30 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v27 - v11;
  uint64_t v13 = type metadata accessor for ForYouConfigRecord.Configuration(0);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFF42C94();
  uint64_t v16 = (uint64_t)v35;
  sub_1AFFCBE68();
  if (!v16)
  {
    char v28 = v15;
    unint64_t v35 = v9;
    uint64_t v17 = v30;
    uint64_t v18 = v31;
    uint64_t v19 = v32;
    sub_1AFFC98E8();
    *uint64_t v19 = MEMORY[0x1E4FBC860];
    sub_1AFF42C4C(&qword_1EB810E90, (void (*)(uint64_t))type metadata accessor for ForYouConfigRecord.Configuration.TopStories);
    uint64_t v20 = (uint64_t)v33;
    sub_1AFFCBAF8();
    int v21 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v20, 1, v5);
    uint64_t v22 = v18;
    uint64_t v23 = (uint64_t)v35;
    uint64_t v24 = v34;
    if (v21 == 1)
    {
      sub_1AFF42E28(v20, &qword_1EB810E98, type metadata accessor for ForYouConfigRecord.Configuration.TopStories);
      sub_1AFF42CE8((uint64_t)v19, v23, type metadata accessor for ForYouConfigRecord.Configuration.TopStories);
    }
    else
    {
      sub_1AFF42BE4(v20, (uint64_t)v35, type metadata accessor for ForYouConfigRecord.Configuration.TopStories);
    }
    sub_1AFF441DC((uint64_t)v19, type metadata accessor for ForYouConfigRecord.Configuration.TopStories);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v12, v24);
    uint64_t v25 = (uint64_t)v28;
    sub_1AFF42BE4(v23, (uint64_t)v28, type metadata accessor for ForYouConfigRecord.Configuration.TopStories);
    sub_1AFF42BE4(v25, v22, type metadata accessor for ForYouConfigRecord.Configuration);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1AFF4140C(char *a1, char *a2)
{
  return sub_1AFDEE600(*a1, *a2);
}

uint64_t sub_1AFF41418()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFF414A8()
{
  sub_1AFFCAF68();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFF41524()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFF415B0@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1AFFCBA78();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1AFF41610(unint64_t *a1@<X8>)
{
  unint64_t v2 = 0x446873696C627570;
  if (*v1) {
    unint64_t v2 = 0xD000000000000011;
  }
  unint64_t v3 = 0x80000001AFFEDED0;
  if (!*v1) {
    unint64_t v3 = 0xEB00000000657461;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1AFF4165C()
{
  if (*v0) {
    return 0xD000000000000011;
  }
  else {
    return 0x446873696C627570;
  }
}

uint64_t sub_1AFF416A4@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1AFFCBA78();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1AFF41708(uint64_t a1)
{
  unint64_t v2 = sub_1AFF42DB4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFF41744(uint64_t a1)
{
  unint64_t v2 = sub_1AFF42DB4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFF41780@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v36 = a2;
  sub_1AFF42D50(0, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v41 = (char *)&v31 - v4;
  uint64_t v40 = sub_1AFFC98F8();
  uint64_t v37 = *(void *)(v40 - 8);
  MEMORY[0x1F4188790](v40);
  uint64_t v38 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v31 - v7;
  sub_1AFF4423C(0, &qword_1EB811308, (uint64_t (*)(void))sub_1AFF42DB4, (uint64_t)&type metadata for ForYouConfigRecord.Configuration.TopStories.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v42 = v9;
  uint64_t v39 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v31 - v10;
  uint64_t v12 = type metadata accessor for ForYouConfigRecord.Configuration.TopStories(0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFF42DB4();
  uint64_t v15 = v43;
  sub_1AFFCBE68();
  if (v15) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v34 = v12;
  unint64_t v35 = v14;
  uint64_t v17 = v40;
  uint64_t v16 = (uint64_t)v41;
  uint64_t v18 = v39;
  unint64_t v43 = a1;
  uint64_t v33 = v8;
  char v46 = 1;
  sub_1AFF42D50(0, &qword_1EB811260, type metadata accessor for ForYouConfigRecord.Configuration.TopStories.Article, MEMORY[0x1E4FBB320]);
  sub_1AFF42E98(&qword_1EB811268, &qword_1EB810E78);
  uint64_t v19 = v42;
  sub_1AFFCBAF8();
  uint64_t v21 = v44;
  if (!v44) {
    uint64_t v21 = MEMORY[0x1E4FBC860];
  }
  *(void *)unint64_t v35 = v21;
  sub_1AFFC98E8();
  char v45 = 0;
  sub_1AFF42C4C(&qword_1EB816CB0, MEMORY[0x1E4F27928]);
  uint64_t v22 = v11;
  uint64_t v23 = v17;
  sub_1AFFCBAF8();
  uint64_t v24 = v18;
  uint64_t v32 = v22;
  uint64_t v25 = v37;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v16, 1, v17) == 1)
  {
    sub_1AFF42E28(v16, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928]);
    uint64_t v26 = v33;
    uint64_t v27 = v38;
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v33, v38, v23);
    uint64_t v28 = v36;
  }
  else
  {
    uint64_t v26 = v33;
    (*(void (**)(char *, uint64_t, uint64_t))(v25 + 32))(v33, v16, v23);
    uint64_t v28 = v36;
    uint64_t v27 = v38;
  }
  uint64_t v29 = (uint64_t)v43;
  (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v23);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v32, v19);
  uint64_t v30 = (uint64_t)v35;
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(&v35[*(int *)(v34 + 20)], v26, v23);
  sub_1AFF42CE8(v30, v28, type metadata accessor for ForYouConfigRecord.Configuration.TopStories);
  __swift_destroy_boxed_opaque_existential_1(v29);
  return sub_1AFF441DC(v30, type metadata accessor for ForYouConfigRecord.Configuration.TopStories);
}

uint64_t sub_1AFF41D3C(void *a1)
{
  sub_1AFF4423C(0, &qword_1E9AFCC20, (uint64_t (*)(void))sub_1AFF44188, (uint64_t)&type metadata for ForYouConfigRecord.Configuration.TopStories.Article.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFF44188();
  sub_1AFFCBE78();
  type metadata accessor for ForYouConfigRecord.Configuration.TopStories.Article(0);
  char v12 = 0;
  sub_1AFFC98F8();
  sub_1AFF42C4C((unint64_t *)&unk_1EB818B90, MEMORY[0x1E4F27928]);
  sub_1AFFCBBE8();
  if (!v1)
  {
    char v11 = 1;
    sub_1AFFCBB98();
    char v10 = 2;
    sub_1AFFCBC08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1AFF41F5C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  sub_1AFF42D50(0, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v28 = (char *)&v24 - v5;
  sub_1AFF4423C(0, &qword_1EB811310, (uint64_t (*)(void))sub_1AFF44188, (uint64_t)&type metadata for ForYouConfigRecord.Configuration.TopStories.Article.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v29 = v6;
  uint64_t v27 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v24 - v7;
  uint64_t v9 = type metadata accessor for ForYouConfigRecord.Configuration.TopStories.Article(0);
  MEMORY[0x1F4188790](v9);
  char v11 = (uint64_t *)((char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFF44188();
  sub_1AFFCBE68();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v25 = v9;
  uint64_t v12 = v27;
  uint64_t v13 = v11;
  sub_1AFFC98F8();
  char v32 = 0;
  sub_1AFF42C4C(&qword_1EB816CB0, MEMORY[0x1E4F27928]);
  uint64_t v15 = (uint64_t)v28;
  uint64_t v14 = v29;
  sub_1AFFCBAF8();
  uint64_t v16 = v25;
  sub_1AFE90B98(v15, (uint64_t)v13 + *(int *)(v25 + 20));
  char v31 = 1;
  uint64_t v17 = sub_1AFFCBAA8();
  uint64_t v18 = (uint64_t *)((char *)v13 + *(int *)(v16 + 24));
  uint64_t *v18 = v17;
  v18[1] = v19;
  char v30 = 2;
  uint64_t v20 = sub_1AFFCBB18();
  uint64_t v22 = v21;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v14);
  *uint64_t v13 = v20;
  v13[1] = v22;
  sub_1AFF42CE8((uint64_t)v13, v26, type metadata accessor for ForYouConfigRecord.Configuration.TopStories.Article);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1AFF441DC((uint64_t)v13, type metadata accessor for ForYouConfigRecord.Configuration.TopStories.Article);
}

uint64_t sub_1AFF42358(void *a1)
{
  uint64_t v3 = v1;
  sub_1AFF4423C(0, &qword_1E9AFCBF0, (uint64_t (*)(void))sub_1AFF42DB4, (uint64_t)&type metadata for ForYouConfigRecord.Configuration.TopStories.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFF42DB4();
  sub_1AFFCBE78();
  type metadata accessor for ForYouConfigRecord.Configuration.TopStories(0);
  char v13 = 0;
  sub_1AFFC98F8();
  sub_1AFF42C4C((unint64_t *)&unk_1EB818B90, MEMORY[0x1E4F27928]);
  sub_1AFFCBC58();
  if (!v2)
  {
    v11[1] = *v3;
    char v12 = 1;
    sub_1AFF42D50(0, &qword_1EB811260, type metadata accessor for ForYouConfigRecord.Configuration.TopStories.Article, MEMORY[0x1E4FBB320]);
    sub_1AFF42E98(&qword_1E9AFCBF8, &qword_1E9AFCC00);
    sub_1AFFCBC58();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1AFF425D0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1AFDEE4EC(*a1, *a2);
}

uint64_t sub_1AFF425DC()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFF42680()
{
  sub_1AFFCAF68();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFF42710()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFF427B0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFF444B0();
  *a1 = result;
  return result;
}

void sub_1AFF427E0(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xEB00000000657461;
  unint64_t v4 = 0xE900000000000065;
  uint64_t v5 = 0x70795479726F7473;
  if (v2 != 1)
  {
    uint64_t v5 = 25705;
    unint64_t v4 = 0xE200000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x4479616C70736964;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1AFF42840()
{
  uint64_t v1 = 0x70795479726F7473;
  if (*v0 != 1) {
    uint64_t v1 = 25705;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x4479616C70736964;
  }
}

uint64_t sub_1AFF4289C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFF444B0();
  *a1 = result;
  return result;
}

uint64_t sub_1AFF428C4(uint64_t a1)
{
  unint64_t v2 = sub_1AFF44188();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFF42900(uint64_t a1)
{
  unint64_t v2 = sub_1AFF44188();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFF4293C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1AFF41F5C(a1, a2);
}

uint64_t sub_1AFF42954(void *a1)
{
  return sub_1AFF41D3C(a1);
}

uint64_t sub_1AFF4296C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1AFF41780(a1, a2);
}

uint64_t sub_1AFF42984(void *a1)
{
  return sub_1AFF42358(a1);
}

uint64_t sub_1AFF4299C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1AFF40F9C(a1, a2);
}

uint64_t sub_1AFF429B4(void *a1)
{
  sub_1AFF4423C(0, &qword_1E9AFCBE0, (uint64_t (*)(void))sub_1AFF42C94, (uint64_t)&type metadata for ForYouConfigRecord.Configuration.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  BOOL v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFF42C94();
  sub_1AFFCBE78();
  type metadata accessor for ForYouConfigRecord.Configuration.TopStories(0);
  sub_1AFF42C4C(&qword_1E9AFCBE8, (void (*)(uint64_t))type metadata accessor for ForYouConfigRecord.Configuration.TopStories);
  sub_1AFFCBC58();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1AFF42B60@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1AFF40004(a1, a2);
}

uint64_t sub_1AFF42B78(void *a1)
{
  return sub_1AFF408C4(a1);
}

unint64_t sub_1AFF42B90()
{
  unint64_t result = qword_1EB810E18;
  if (!qword_1EB810E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB810E18);
  }
  return result;
}

uint64_t sub_1AFF42BE4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1AFF42C4C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1AFF42C94()
{
  unint64_t result = qword_1EB810E30;
  if (!qword_1EB810E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB810E30);
  }
  return result;
}

uint64_t sub_1AFF42CE8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_1AFF42D50(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1AFF42DB4()
{
  unint64_t result = qword_1EB810E48;
  if (!qword_1EB810E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB810E48);
  }
  return result;
}

uint64_t type metadata accessor for ForYouConfigRecord.Configuration.TopStories.Article(uint64_t a1)
{
  return sub_1AFD9BB54(a1, (uint64_t *)&unk_1EB810E80);
}

uint64_t sub_1AFF42E28(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1AFF42D50(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1AFF42E98(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1AFF42D50(255, &qword_1EB811260, type metadata accessor for ForYouConfigRecord.Configuration.TopStories.Article, MEMORY[0x1E4FBB320]);
    sub_1AFF42C4C(a2, (void (*)(uint64_t))type metadata accessor for ForYouConfigRecord.Configuration.TopStories.Article);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ForYouConfigRecord.Configuration.TopStories.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFF43024);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ForYouConfigRecord.Configuration.TopStories.CodingKeys()
{
  return &type metadata for ForYouConfigRecord.Configuration.TopStories.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ForYouConfigRecord.Configuration.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1AFF430F8);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ForYouConfigRecord.Configuration.CodingKeys()
{
  return &type metadata for ForYouConfigRecord.Configuration.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ForYouConfigRecord.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFF431FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ForYouConfigRecord.CodingKeys()
{
  return &type metadata for ForYouConfigRecord.CodingKeys;
}

uint64_t *sub_1AFF43234(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1AFFC8E48();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1AFFC98F8();
    uint64_t v12 = *(void *)(v11 - 8);
    char v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    sub_1AFFC8E38();
    if (v13(v10, 1, v11))
    {
      sub_1AFF42D50(0, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = *(int *)(a3 + 24);
    uint64_t v17 = (uint64_t *)((char *)v4 + v16);
    uint64_t v18 = (uint64_t *)((char *)a2 + v16);
    uint64_t v19 = v18[1];
    *uint64_t v17 = *v18;
    v17[1] = v19;
    sub_1AFFC8E38();
  }
  return v4;
}

uint64_t sub_1AFF433FC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1AFFC98F8();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }

  return swift_bridgeObjectRelease();
}

void *sub_1AFF434D0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1AFFC98F8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  sub_1AFFC8E38();
  if (v12(v9, 1, v10))
  {
    sub_1AFF42D50(0, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = *(int *)(a3 + 24);
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  uint64_t v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  sub_1AFFC8E38();
  return a1;
}

void *sub_1AFF43648(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1AFFC98F8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1AFF42D50(0, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1AFF43840(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1AFFC98F8();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_1AFF42D50(0, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *sub_1AFF4399C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1AFFC98F8();
  uint64_t v11 = *(void *)(v10 - 8);
  int v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_1AFF42D50(0, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  uint64_t v16 = *(int *)(a3 + 24);
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  *uint64_t v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AFF43B74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1AFF43B88);
}

uint64_t sub_1AFF43B88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1AFF42D50(0, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1AFF43C68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1AFF43C7C);
}

uint64_t sub_1AFF43C7C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1AFF42D50(0, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1AFF43D54()
{
  sub_1AFF42D50(319, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_1AFF43E28()
{
  unint64_t result = qword_1E9AFCC08;
  if (!qword_1E9AFCC08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFCC08);
  }
  return result;
}

unint64_t sub_1AFF43E80()
{
  unint64_t result = qword_1E9AFCC10;
  if (!qword_1E9AFCC10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFCC10);
  }
  return result;
}

unint64_t sub_1AFF43ED8()
{
  unint64_t result = qword_1E9AFCC18;
  if (!qword_1E9AFCC18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFCC18);
  }
  return result;
}

unint64_t sub_1AFF43F30()
{
  unint64_t result = qword_1EB810E58;
  if (!qword_1EB810E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB810E58);
  }
  return result;
}

unint64_t sub_1AFF43F88()
{
  unint64_t result = qword_1EB810E50;
  if (!qword_1EB810E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB810E50);
  }
  return result;
}

unint64_t sub_1AFF43FE0()
{
  unint64_t result = qword_1EB810E40;
  if (!qword_1EB810E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB810E40);
  }
  return result;
}

unint64_t sub_1AFF44038()
{
  unint64_t result = qword_1EB810E38;
  if (!qword_1EB810E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB810E38);
  }
  return result;
}

unint64_t sub_1AFF44090()
{
  unint64_t result = qword_1EB810E28;
  if (!qword_1EB810E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB810E28);
  }
  return result;
}

unint64_t sub_1AFF440E8()
{
  unint64_t result = qword_1EB810E20;
  if (!qword_1EB810E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB810E20);
  }
  return result;
}

uint64_t sub_1AFF4413C()
{
  unint64_t v0 = sub_1AFFCBA78();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

unint64_t sub_1AFF44188()
{
  unint64_t result = qword_1EB810E60;
  if (!qword_1EB810E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB810E60);
  }
  return result;
}

uint64_t sub_1AFF441DC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1AFF4423C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for ForYouConfigRecord.Configuration.TopStories.Article.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFF44370);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ForYouConfigRecord.Configuration.TopStories.Article.CodingKeys()
{
  return &type metadata for ForYouConfigRecord.Configuration.TopStories.Article.CodingKeys;
}

unint64_t sub_1AFF443AC()
{
  unint64_t result = qword_1E9AFCC28;
  if (!qword_1E9AFCC28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFCC28);
  }
  return result;
}

unint64_t sub_1AFF44404()
{
  unint64_t result = qword_1EB810E70;
  if (!qword_1EB810E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB810E70);
  }
  return result;
}

unint64_t sub_1AFF4445C()
{
  unint64_t result = qword_1EB810E68;
  if (!qword_1EB810E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB810E68);
  }
  return result;
}

uint64_t sub_1AFF444B0()
{
  unint64_t v0 = sub_1AFFCBA78();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_1AFF444FC@<X0>(uint64_t a1@<X8>)
{
  sub_1AFF4453C(v1, (uint64_t)v4);
  return sub_1AFF4453C((uint64_t)v4, a1);
}

uint64_t sub_1AFF4453C(uint64_t a1, uint64_t a2)
{
  sub_1AFF445A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1AFF445A0()
{
  if (!qword_1EB818E40)
  {
    unint64_t v0 = sub_1AFFCB658();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB818E40);
    }
  }
}

uint64_t sub_1AFF445F8@<X0>(uint64_t a1@<X8>)
{
  sub_1AFF4453C(v1 + 1136, (uint64_t)v4);
  return sub_1AFF4453C((uint64_t)v4, a1);
}

uint64_t sub_1AFF44638(char *a1, char *a2)
{
  return sub_1AFDED010(*a1, *a2);
}

uint64_t sub_1AFF44644()
{
  return sub_1AFF9ADA4();
}

uint64_t sub_1AFF4464C()
{
  sub_1AFFCAF68();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFF446C0()
{
  return sub_1AFF9BE10();
}

uint64_t sub_1AFF446C8@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1AFFCBA78();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1AFF44728(unint64_t *a1@<X8>)
{
  if (*v1) {
    unint64_t v2 = 0xD000000000000018;
  }
  else {
    unint64_t v2 = 0xD000000000000014;
  }
  unint64_t v3 = 0x80000001AFFEDF00;
  if (*v1) {
    unint64_t v3 = 0x80000001AFFEDF20;
  }
  *a1 = v2;
  a1[1] = v3;
}

unint64_t sub_1AFF4476C()
{
  if (*v0) {
    return 0xD000000000000018;
  }
  else {
    return 0xD000000000000014;
  }
}

uint64_t sub_1AFF447AC@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1AFFCBA78();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1AFF44810(uint64_t a1)
{
  unint64_t v2 = sub_1AFF44B68();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFF4484C(uint64_t a1)
{
  unint64_t v2 = sub_1AFF44B68();

  return MEMORY[0x1F41862B0](a1, v2);
}

void *sub_1AFF44888(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v2 = v1;
  char v4 = v3;
  sub_1AFF4453C(v5, (uint64_t)v7);
  sub_1AFF4453C(v2, (uint64_t)v8);
  sub_1AFF4453C((uint64_t)v7, (uint64_t)__src);
  sub_1AFF4453C((uint64_t)v8, (uint64_t)&__src[1136]);
  return memcpy(v4, __src, 0x8DBuLL);
}

uint64_t sub_1AFF44918(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  unint64_t v3 = v2;
  int v13 = v4;
  sub_1AFF44DDC(0, &qword_1EB819FD0, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v14[-v8 - 8];
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_1AFF44B68();
  sub_1AFFCBE68();
  if (!v1)
  {
    uint64_t v10 = v7;
    uint64_t v11 = v13;
    v18[1159] = 0;
    sub_1AFF44BBC();
    sub_1AFFCBAF8();
    sub_1AFF4453C((uint64_t)v18, (uint64_t)v17);
    v18[1158] = 1;
    sub_1AFFCBAF8();
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v9, v6);
    sub_1AFF4453C((uint64_t)&v16, (uint64_t)v14);
    sub_1AFF4453C((uint64_t)v17, (uint64_t)v15);
    sub_1AFF4453C((uint64_t)v14, (uint64_t)&v15[1136]);
    memcpy(v11, v15, 0x8DBuLL);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
}

unint64_t sub_1AFF44B68()
{
  unint64_t result = qword_1EB819810;
  if (!qword_1EB819810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819810);
  }
  return result;
}

unint64_t sub_1AFF44BBC()
{
  unint64_t result = qword_1EB818E38;
  if (!qword_1EB818E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818E38);
  }
  return result;
}

uint64_t sub_1AFF44C10(void *a1)
{
  sub_1AFF44DDC(0, &qword_1EB81A088, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = &v11[-v7 - 8];
  sub_1AFF4453C(v1, (uint64_t)v12);
  sub_1AFF4453C(v1 + 1136, (uint64_t)v13);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFF44B68();
  sub_1AFFCBE78();
  sub_1AFF4453C((uint64_t)v12, (uint64_t)v11);
  char v14 = 0;
  sub_1AFF44E40();
  sub_1AFFCBBE8();
  if (!v2)
  {
    sub_1AFF4453C((uint64_t)v13, (uint64_t)v11);
    char v14 = 1;
    sub_1AFFCBBE8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1AFF44DDC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1AFF44B68();
    unint64_t v7 = a3(a1, &type metadata for NewsPersonalizationTreatment.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1AFF44E40()
{
  unint64_t result = qword_1EB818948;
  if (!qword_1EB818948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818948);
  }
  return result;
}

uint64_t sub_1AFF44E98(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  sub_1AFF4453C(v1, (uint64_t)v6);
  sub_1AFF4453C(v1 + 1136, (uint64_t)v7);
  sub_1AFF4453C((uint64_t)v6, (uint64_t)v8);
  if (sub_1AFF45494((uint64_t)v8) == 1)
  {
    sub_1AFFCBE18();
  }
  else
  {
    sub_1AFF4453C((uint64_t)v6, (uint64_t)__src);
    memcpy(__dst, __src, 0x46AuLL);
    sub_1AFFCBE18();
    ScoringConfig.hash(into:)();
  }
  sub_1AFF4453C((uint64_t)v7, (uint64_t)__src);
  if (sub_1AFF45494((uint64_t)__src) == 1) {
    return sub_1AFFCBE18();
  }
  sub_1AFF4453C((uint64_t)v7, (uint64_t)__dst);
  memcpy(v3, __dst, sizeof(v3));
  sub_1AFFCBE18();
  return ScoringConfig.hash(into:)();
}

uint64_t sub_1AFF44FD0(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  sub_1AFF4453C(v1, (uint64_t)v6);
  sub_1AFF4453C(v1 + 1136, (uint64_t)v7);
  sub_1AFFCBDF8();
  sub_1AFF4453C((uint64_t)v6, (uint64_t)v8);
  if (sub_1AFF45494((uint64_t)v8) == 1)
  {
    sub_1AFFCBE18();
  }
  else
  {
    sub_1AFF4453C((uint64_t)v6, (uint64_t)__src);
    memcpy(__dst, __src, 0x46AuLL);
    sub_1AFFCBE18();
    ScoringConfig.hash(into:)();
  }
  sub_1AFF4453C((uint64_t)v7, (uint64_t)__src);
  if (sub_1AFF45494((uint64_t)__src) == 1)
  {
    sub_1AFFCBE18();
  }
  else
  {
    sub_1AFF4453C((uint64_t)v7, (uint64_t)__dst);
    memcpy(v3, __dst, sizeof(v3));
    sub_1AFFCBE18();
    ScoringConfig.hash(into:)();
  }
  return sub_1AFFCBE38();
}

uint64_t sub_1AFF45110(uint64_t a1)
{
  return sub_1AFF44918(a1);
}

uint64_t sub_1AFF45128(void *a1)
{
  return sub_1AFF44C10(a1);
}

uint64_t sub_1AFF4514C(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  sub_1AFF4453C(v1, (uint64_t)v6);
  sub_1AFF4453C(v1 + 1136, (uint64_t)v7);
  sub_1AFFCBDF8();
  sub_1AFF4453C((uint64_t)v6, (uint64_t)v8);
  if (sub_1AFF45494((uint64_t)v8) == 1)
  {
    sub_1AFFCBE18();
  }
  else
  {
    sub_1AFF4453C((uint64_t)v6, (uint64_t)__src);
    memcpy(__dst, __src, 0x46AuLL);
    sub_1AFFCBE18();
    ScoringConfig.hash(into:)();
  }
  sub_1AFF4453C((uint64_t)v7, (uint64_t)__src);
  if (sub_1AFF45494((uint64_t)__src) == 1)
  {
    sub_1AFFCBE18();
  }
  else
  {
    sub_1AFF4453C((uint64_t)v7, (uint64_t)__dst);
    memcpy(v3, __dst, sizeof(v3));
    sub_1AFFCBE18();
    ScoringConfig.hash(into:)();
  }
  return sub_1AFFCBE38();
}

uint64_t sub_1AFF45298(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_1AFF4453C(v3, (uint64_t)v12);
  sub_1AFF4453C(v4 + 1136, (uint64_t)v13);
  sub_1AFF4453C(v2, (uint64_t)v14);
  sub_1AFF4453C(v2 + 1136, (uint64_t)v15);
  sub_1AFF4453C((uint64_t)v12, (uint64_t)v16);
  if (sub_1AFF45494((uint64_t)v16) == 1)
  {
    sub_1AFF4453C((uint64_t)v14, (uint64_t)v11);
    if (sub_1AFF45494((uint64_t)v11) != 1) {
      goto LABEL_10;
    }
  }
  else
  {
    sub_1AFF4453C((uint64_t)v12, (uint64_t)v10);
    sub_1AFF4453C((uint64_t)v14, (uint64_t)v11);
    if (sub_1AFF45494((uint64_t)v11) == 1) {
      goto LABEL_10;
    }
    sub_1AFF4453C((uint64_t)v14, (uint64_t)__src);
    memcpy(__dst, __src, 0x46AuLL);
    if ((_s10StocksCore13ScoringConfigV2eeoiySbAC_ACtFZ_0((uint64_t)v10, (uint64_t)__dst) & 1) == 0) {
      goto LABEL_10;
    }
  }
  sub_1AFF4453C((uint64_t)v13, (uint64_t)v11);
  if (sub_1AFF45494((uint64_t)v11) == 1)
  {
    sub_1AFF4453C((uint64_t)v15, (uint64_t)v10);
    int v5 = sub_1AFF45494((uint64_t)v10);
    if (v5 == 1) {
      return v5 & 1;
    }
  }
  else
  {
    sub_1AFF4453C((uint64_t)v13, (uint64_t)__src);
    sub_1AFF4453C((uint64_t)v15, (uint64_t)v10);
    if (sub_1AFF45494((uint64_t)v10) != 1)
    {
      sub_1AFF4453C((uint64_t)v15, (uint64_t)__dst);
      memcpy(v7, __dst, 0x46AuLL);
      LOBYTE(v5) = _s10StocksCore13ScoringConfigV2eeoiySbAC_ACtFZ_0((uint64_t)__src, (uint64_t)v7);
      return v5 & 1;
    }
  }
LABEL_10:
  LOBYTE(v5) = 0;
  return v5 & 1;
}

uint64_t sub_1AFF45494(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 1130)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

unint64_t sub_1AFF454B4()
{
  unint64_t result = qword_1E9AFCC30;
  if (!qword_1E9AFCC30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFCC30);
  }
  return result;
}

void *__swift_memcpy2267_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x8DBuLL);
}

uint64_t getEnumTagSinglePayload for NewsPersonalizationTreatment(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 2267)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for NewsPersonalizationTreatment(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 2266) = 0;
    *(_WORD *)(result + 2264) = 0;
    *(_OWORD *)(result + 2248) = 0u;
    *(_OWORD *)(result + 2232) = 0u;
    *(_OWORD *)(result + 2216) = 0u;
    *(_OWORD *)(result + 2200) = 0u;
    *(_OWORD *)(result + 2184) = 0u;
    *(_OWORD *)(result + 2168) = 0u;
    *(_OWORD *)(result + 2152) = 0u;
    *(_OWORD *)(result + 2136) = 0u;
    *(_OWORD *)(result + 2120) = 0u;
    *(_OWORD *)(result + 2104) = 0u;
    *(_OWORD *)(result + 2088) = 0u;
    *(_OWORD *)(result + 2072) = 0u;
    *(_OWORD *)(result + 2056) = 0u;
    *(_OWORD *)(result + 2040) = 0u;
    *(_OWORD *)(result + 2024) = 0u;
    *(_OWORD *)(result + 2008) = 0u;
    *(_OWORD *)(result + 1992) = 0u;
    *(_OWORD *)(result + 1976) = 0u;
    *(_OWORD *)(result + 1960) = 0u;
    *(_OWORD *)(result + 1944) = 0u;
    *(_OWORD *)(result + 1928) = 0u;
    *(_OWORD *)(result + 1912) = 0u;
    *(_OWORD *)(result + 1896) = 0u;
    *(_OWORD *)(result + 1880) = 0u;
    *(_OWORD *)(result + 1864) = 0u;
    *(_OWORD *)(result + 1848) = 0u;
    *(_OWORD *)(result + 1832) = 0u;
    *(_OWORD *)(result + 1816) = 0u;
    *(_OWORD *)(result + 1800) = 0u;
    *(_OWORD *)(result + 1784) = 0u;
    *(_OWORD *)(result + 1768) = 0u;
    *(_OWORD *)(result + 1752) = 0u;
    *(_OWORD *)(result + 1736) = 0u;
    *(_OWORD *)(result + 1720) = 0u;
    *(_OWORD *)(result + 1704) = 0u;
    *(_OWORD *)(result + 1688) = 0u;
    *(_OWORD *)(result + 1672) = 0u;
    *(_OWORD *)(result + 1656) = 0u;
    *(_OWORD *)(result + 1640) = 0u;
    *(_OWORD *)(result + 1624) = 0u;
    *(_OWORD *)(result + 1608) = 0u;
    *(_OWORD *)(result + 1592) = 0u;
    *(_OWORD *)(result + 1576) = 0u;
    *(_OWORD *)(result + 1560) = 0u;
    *(_OWORD *)(result + 1544) = 0u;
    *(_OWORD *)(result + 1528) = 0u;
    *(_OWORD *)(result + 1512) = 0u;
    *(_OWORD *)(result + 1496) = 0u;
    *(_OWORD *)(result + 1480) = 0u;
    *(_OWORD *)(result + 1464) = 0u;
    *(_OWORD *)(result + 1448) = 0u;
    *(_OWORD *)(result + 1432) = 0u;
    *(_OWORD *)(result + 1416) = 0u;
    *(_OWORD *)(result + 1400) = 0u;
    *(_OWORD *)(result + 1384) = 0u;
    *(_OWORD *)(result + 1368) = 0u;
    *(_OWORD *)(result + 1352) = 0u;
    *(_OWORD *)(result + 1336) = 0u;
    *(_OWORD *)(result + 1320) = 0u;
    *(_OWORD *)(result + 1304) = 0u;
    *(_OWORD *)(result + 1288) = 0u;
    *(_OWORD *)(result + 1272) = 0u;
    *(_OWORD *)(result + 1256) = 0u;
    *(_OWORD *)(result + 1240) = 0u;
    *(_OWORD *)(result + 1224) = 0u;
    *(_OWORD *)(result + 1208) = 0u;
    *(_OWORD *)(result + 1192) = 0u;
    *(_OWORD *)(result + 1176) = 0u;
    *(_OWORD *)(result + 1160) = 0u;
    *(_OWORD *)(result + 1144) = 0u;
    *(_OWORD *)(result + 1128) = 0u;
    *(_OWORD *)(result + 1112) = 0u;
    *(_OWORD *)(result + 1096) = 0u;
    *(_OWORD *)(result + 1080) = 0u;
    *(_OWORD *)(result + 1064) = 0u;
    *(_OWORD *)(result + 1048) = 0u;
    *(_OWORD *)(result + 1032) = 0u;
    *(_OWORD *)(result + 1016) = 0u;
    *(_OWORD *)(result + 1000) = 0u;
    *(_OWORD *)(result + 984) = 0u;
    *(_OWORD *)(result + 968) = 0u;
    *(_OWORD *)(result + 952) = 0u;
    *(_OWORD *)(result + 936) = 0u;
    *(_OWORD *)(result + 920) = 0u;
    *(_OWORD *)(result + 904) = 0u;
    *(_OWORD *)(result + 888) = 0u;
    *(_OWORD *)(result + 872) = 0u;
    *(_OWORD *)(result + 856) = 0u;
    *(_OWORD *)(result + 840) = 0u;
    *(_OWORD *)(result + 824) = 0u;
    *(_OWORD *)(result + 808) = 0u;
    *(_OWORD *)(result + 792) = 0u;
    *(_OWORD *)(result + 776) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 2267) = v3;
  return result;
}

ValueMetadata *type metadata accessor for NewsPersonalizationTreatment()
{
  return &type metadata for NewsPersonalizationTreatment;
}

unsigned char *storeEnumTagSinglePayload for NewsPersonalizationTreatment.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFF45894);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NewsPersonalizationTreatment.CodingKeys()
{
  return &type metadata for NewsPersonalizationTreatment.CodingKeys;
}

unint64_t sub_1AFF458D0()
{
  unint64_t result = qword_1E9AFCC38;
  if (!qword_1E9AFCC38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFCC38);
  }
  return result;
}

unint64_t sub_1AFF45928()
{
  unint64_t result = qword_1EB819820;
  if (!qword_1EB819820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819820);
  }
  return result;
}

unint64_t sub_1AFF45980()
{
  unint64_t result = qword_1EB819818;
  if (!qword_1EB819818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819818);
  }
  return result;
}

id sub_1AFF459D4()
{
  if (qword_1EB81AB78 != -1) {
    swift_once();
  }
  unint64_t v0 = *(void **)(qword_1EB81AB68 + OBJC_IVAR____TtC10StocksCore8AppGroup_userDefaults);
  qword_1EB818080 = (uint64_t)v0;

  return v0;
}

id sub_1AFF45A48()
{
  return sub_1AFF45CA8(&qword_1EB818088, (void **)&qword_1EB818080);
}

void sub_1AFF45A6C(void *a1)
{
}

uint64_t (*sub_1AFF45A90())()
{
  if (qword_1EB818088 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

void sub_1AFF45B18(uint64_t a1)
{
}

id sub_1AFF45B3C()
{
  return sub_1AFF45CA8(&qword_1EB818A50, (void **)&qword_1EB818A40);
}

void sub_1AFF45B60(void *a1)
{
}

uint64_t (*sub_1AFF45B84())()
{
  if (qword_1EB818A50 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_1AFF45C0C()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1CB18]);
  uint64_t v1 = (void *)sub_1AFFCAE68();
  id v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (v2) {
    qword_1EB818090 = (uint64_t)v2;
  }
  else {
    __break(1u);
  }
}

id sub_1AFF45C84()
{
  return sub_1AFF45CA8(&qword_1EB818098, (void **)&qword_1EB818090);
}

id sub_1AFF45CA8(void *a1, void **a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  swift_beginAccess();
  int v3 = *a2;

  return v3;
}

void sub_1AFF45D10(void *a1)
{
}

void sub_1AFF45D34(void *a1, void *a2, void **a3)
{
  if (*a2 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v5 = *a3;
  *a3 = a1;
}

uint64_t (*sub_1AFF45D9C())()
{
  if (qword_1EB818098 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_1AFF45E24(uint64_t a1)
{
}

void sub_1AFF45E48(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = self;
  unsigned int v6 = (void *)sub_1AFFCAE68();
  id v7 = objc_msgSend(v5, sel_sc_userDefaultsWithSuiteName_backupDisabled_, v6, 1);

  *a4 = v7;
}

uint64_t destroy for StockRecord()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StockRecord(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v8 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v8;
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  return a1;
}

uint64_t assignWithCopy for StockRecord(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for StockRecord(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v9 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v9;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StockRecord(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 104)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StockRecord(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 104) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 104) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StockRecord()
{
  return &type metadata for StockRecord;
}

_OWORD *sub_1AFF461F0()
{
  sub_1AFF47770(0, (unint64_t *)&qword_1EB81A0E0, MEMORY[0x1E4FBBE00]);
  uint64_t v1 = (_OWORD *)swift_allocObject();
  long long v2 = v0[4];
  long long v15 = v0[5];
  long long v3 = v15;
  long long v16 = v2;
  v1[1] = xmmword_1AFFD53E0;
  v1[2] = v2;
  long long v4 = v0[6];
  long long v13 = v0[7];
  long long v5 = v13;
  long long v14 = v4;
  v1[3] = v3;
  v1[4] = v4;
  long long v6 = v0[8];
  long long v11 = v0[9];
  long long v12 = v6;
  v1[5] = v5;
  v1[6] = v6;
  long long v7 = v0[9];
  long long v10 = v0[10];
  long long v8 = v10;
  v1[7] = v7;
  v1[8] = v8;
  sub_1AFD8C5F8((uint64_t)&v16);
  sub_1AFD8C5F8((uint64_t)&v15);
  sub_1AFD8C5F8((uint64_t)&v14);
  sub_1AFD8C5F8((uint64_t)&v13);
  sub_1AFD8C5F8((uint64_t)&v12);
  sub_1AFD8C5F8((uint64_t)&v11);
  sub_1AFD8C5F8((uint64_t)&v10);
  return v1;
}

unint64_t sub_1AFF462BC(char a1)
{
  unint64_t result = 0x6C6F626D7973;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0x4E79616C70736964;
      break;
    case 3:
      unint64_t result = 0x5379616C70736964;
      break;
    case 4:
      unint64_t result = 0x746E456B636F7473;
      break;
    case 5:
      unint64_t result = 0x6365727065447369;
      break;
    case 6:
      unint64_t result = 0x6D6563616C706572;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1AFF463D8(char a1)
{
  unint64_t result = 0x6C6F626D7973;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0x4E79616C70736964;
      break;
    case 3:
      unint64_t result = 0x5379616C70736964;
      break;
    case 4:
      unint64_t result = 0x746E456B636F7473;
      break;
    case 5:
      unint64_t result = 0x6365727065447369;
      break;
    case 6:
      unint64_t result = 0x6D6563616C706572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1AFF464F4(unsigned __int8 *a1, char *a2)
{
  return sub_1AFDF0410(*a1, *a2);
}

uint64_t sub_1AFF46500()
{
  return sub_1AFF9B248();
}

uint64_t sub_1AFF4650C()
{
  return sub_1AFD78450();
}

uint64_t sub_1AFF46514()
{
  return sub_1AFF9B248();
}

uint64_t sub_1AFF4651C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFF46F5C();
  *a1 = result;
  return result;
}

unint64_t sub_1AFF4654C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1AFF462BC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1AFF46578()
{
  return sub_1AFF463D8(*v0);
}

uint64_t sub_1AFF46580@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFF46F5C();
  *a1 = result;
  return result;
}

uint64_t sub_1AFF465A8(uint64_t a1)
{
  unint64_t v2 = sub_1AFF476C8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFF465E4(uint64_t a1)
{
  unint64_t v2 = sub_1AFF476C8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFF46620(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1AFFCAED8();
  MEMORY[0x1F4188790](v4 - 8);
  sub_1AFF47B08(0, &qword_1E9AFCC40, (uint64_t (*)(void))sub_1AFF476C8, (uint64_t)&type metadata for StockRecord.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v17 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFF476C8();
  sub_1AFFCBE78();
  LOBYTE(v19) = 0;
  uint64_t v10 = v18;
  sub_1AFFCBC08();
  if (v10) {
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  uint64_t v18 = v7;
  sub_1AFEC6F3C(v2 + 32, (uint64_t)v24);
  sub_1AFEC6F3C((uint64_t)v24, (uint64_t)&v19);
  char v25 = 2;
  sub_1AFF47770(0, (unint64_t *)&qword_1EB819C90, MEMORY[0x1E4FBB718]);
  sub_1AFF477C0();
  sub_1AFFCBC58();
  uint64_t v12 = v6;
  sub_1AFEC6F3C(v2 + 48, (uint64_t)v23);
  sub_1AFEC6F3C((uint64_t)v23, (uint64_t)&v19);
  char v25 = 3;
  sub_1AFFCBC58();
  sub_1AFEC6F3C(v2 + 64, (uint64_t)v22);
  sub_1AFEC6F3C((uint64_t)v22, (uint64_t)&v19);
  char v25 = 4;
  sub_1AFFCBC58();
  LOBYTE(v19) = 5;
  sub_1AFFCBC18();
  sub_1AFEC6F3C(88, (uint64_t)v21);
  sub_1AFEC6F3C((uint64_t)v21, (uint64_t)&v19);
  char v25 = 6;
  sub_1AFFCBC58();
  sub_1AFFC91E8();
  swift_allocObject();
  sub_1AFFC91D8();
  long long v19 = *(_OWORD *)(v2 + 16);
  long long v20 = v19;
  sub_1AFF47844();
  sub_1AFFC8E38();
  uint64_t v13 = sub_1AFFC91C8();
  unint64_t v15 = v14;
  sub_1AFDF3958((uint64_t)&v20);
  swift_release();
  sub_1AFFCAEC8();
  uint64_t result = sub_1AFFCAEB8();
  if (v16)
  {
    LOBYTE(v19) = 1;
    sub_1AFFCBC08();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v9, v12);
    sub_1AFD4B504(v13, v15);
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1AFF46A7C()
{
  return 0x444964656566;
}

uint64_t sub_1AFF46A90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x444964656566 && a2 == 0xE600000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1AFFCBCE8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1AFF46B20(uint64_t a1)
{
  unint64_t v2 = sub_1AFF47AB4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFF46B5C(uint64_t a1)
{
  unint64_t v2 = sub_1AFF47AB4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFF46B98@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v15 = a2;
  sub_1AFF47B08(0, &qword_1EB818248, (uint64_t (*)(void))sub_1AFF47AB4, (uint64_t)&type metadata for StockRecord.FeedConfiguration.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v14 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFF47AB4();
  sub_1AFFCBE68();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v15;
  uint64_t v10 = sub_1AFFCBB18();
  uint64_t v12 = v11;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *uint64_t v9 = v10;
  v9[1] = v12;
  return result;
}

uint64_t sub_1AFF46D48(void *a1)
{
  sub_1AFF47B08(0, &qword_1E9AFCC58, (uint64_t (*)(void))sub_1AFF47AB4, (uint64_t)&type metadata for StockRecord.FeedConfiguration.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFF47AB4();
  sub_1AFFCBE78();
  sub_1AFFCBC08();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

__n128 sub_1AFF46EB0@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1AFF46FA8(a1, (uint64_t *)v7);
  if (!v2)
  {
    long long v5 = v7[5];
    *(_OWORD *)(a2 + 64) = v7[4];
    *(_OWORD *)(a2 + 80) = v5;
    *(void *)(a2 + 96) = v8;
    long long v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
    __n128 result = (__n128)v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(__n128 *)(a2 + 48) = result;
  }
  return result;
}

uint64_t sub_1AFF46F10(void *a1)
{
  return sub_1AFF46620(a1);
}

uint64_t sub_1AFF46F5C()
{
  unint64_t v0 = sub_1AFFCBA78();
  swift_bridgeObjectRelease();
  if (v0 >= 7) {
    return 7;
  }
  else {
    return v0;
  }
}

uint64_t sub_1AFF46FA8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v55 = a2;
  uint64_t v3 = sub_1AFFCAED8();
  uint64_t v56 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  long long v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFF47B08(0, &qword_1EB818240, (uint64_t (*)(void))sub_1AFF476C8, (uint64_t)&type metadata for StockRecord.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v7 = v6;
  uint64_t v57 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v43 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFF476C8();
  uint64_t v10 = v58;
  sub_1AFFCBE68();
  if (v10) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v54 = v5;
  uint64_t v58 = a1;
  uint64_t v11 = v57;
  LOBYTE(v59) = 0;
  uint64_t v12 = v9;
  uint64_t v13 = sub_1AFFCBB18();
  uint64_t v16 = v15;
  uint64_t v17 = v13;
  LOBYTE(v59) = 2;
  sub_1AFFC8E38();
  uint64_t v18 = sub_1AFFCBAA8();
  uint64_t v19 = v7;
  uint64_t v53 = v20;
  uint64_t v48 = v18;
  LOBYTE(v59) = 3;
  sub_1AFFC8E38();
  uint64_t v52 = 0;
  uint64_t v47 = sub_1AFFCBAA8();
  LOBYTE(v59) = 4;
  uint64_t v22 = v21;
  sub_1AFFC8E38();
  uint64_t v23 = sub_1AFFCBAA8();
  uint64_t v51 = v22;
  uint64_t v45 = v23;
  LOBYTE(v59) = 6;
  uint64_t v25 = v24;
  sub_1AFFC8E38();
  uint64_t v26 = sub_1AFFCBAA8();
  uint64_t v50 = v25;
  uint64_t v44 = v26;
  LOBYTE(v59) = 5;
  uint64_t v49 = v27;
  sub_1AFFC8E38();
  uint64_t v46 = v19;
  uint64_t v28 = sub_1AFFCBAD8();
  uint64_t v30 = (uint64_t)v58;
  if (v29)
  {
    LOBYTE(v59) = 5;
    char v31 = sub_1AFFCBAB8();
    if (v31 == 2) {
      unsigned __int8 v61 = 0;
    }
    else {
      unsigned __int8 v61 = v31 & 1;
    }
  }
  else
  {
    unsigned __int8 v61 = v28 != 0;
  }
  LOBYTE(v59) = 1;
  sub_1AFFCBB18();
  uint64_t v58 = v12;
  char v32 = v54;
  sub_1AFFCAEC8();
  uint64_t v57 = sub_1AFFCAEA8();
  unint64_t v34 = v33;
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v32, v3);
  if (v34 >> 60 == 15)
  {
    __break(1u);
  }
  else
  {
    sub_1AFFC9198();
    swift_allocObject();
    sub_1AFFC9188();
    sub_1AFF4771C();
    uint64_t v35 = v57;
    sub_1AFFC9168();
    uint64_t v36 = v53;
    (*(void (**)(void *, uint64_t))(v11 + 8))(v58, v46);
    swift_release();
    sub_1AFDE6658(v35, v34);
    uint64_t v37 = v60;
    uint64_t v57 = v59;
    LODWORD(v58) = v61;
    sub_1AFFC8E38();
    __swift_destroy_boxed_opaque_existential_1(v30);
    uint64_t v38 = v49;
    swift_bridgeObjectRelease();
    uint64_t v39 = v50;
    swift_bridgeObjectRelease();
    uint64_t v40 = v36;
    uint64_t v41 = v51;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v42 = v55;
    *uint64_t v55 = v17;
    v42[1] = v16;
    uint64_t v42[2] = v57;
    v42[3] = v37;
    v42[4] = v48;
    v42[5] = v40;
    v42[6] = v47;
    v42[7] = v41;
    _OWORD v42[8] = v45;
    v42[9] = v39;
    *((unsigned char *)v42 + 80) = (_BYTE)v58;
    v42[11] = v44;
    v42[12] = v38;
  }
  return result;
}

unint64_t sub_1AFF476C8()
{
  unint64_t result = qword_1EB816DC0;
  if (!qword_1EB816DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816DC0);
  }
  return result;
}

unint64_t sub_1AFF4771C()
{
  unint64_t result = qword_1EB816DF0;
  if (!qword_1EB816DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816DF0);
  }
  return result;
}

void sub_1AFF47770(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, void))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x1E4FBB1A0]);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_1AFF477C0()
{
  unint64_t result = qword_1E9AFB6B8;
  if (!qword_1E9AFB6B8)
  {
    sub_1AFF47770(255, (unint64_t *)&qword_1EB819C90, MEMORY[0x1E4FBB718]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB6B8);
  }
  return result;
}

unint64_t sub_1AFF47844()
{
  unint64_t result = qword_1E9AFCC48;
  if (!qword_1E9AFCC48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFCC48);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for StockRecord.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFF47964);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StockRecord.CodingKeys()
{
  return &type metadata for StockRecord.CodingKeys;
}

ValueMetadata *type metadata accessor for StockRecord.FeedConfiguration()
{
  return &type metadata for StockRecord.FeedConfiguration;
}

unint64_t sub_1AFF479B0()
{
  unint64_t result = qword_1E9AFCC50;
  if (!qword_1E9AFCC50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFCC50);
  }
  return result;
}

unint64_t sub_1AFF47A08()
{
  unint64_t result = qword_1EB816DD0;
  if (!qword_1EB816DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816DD0);
  }
  return result;
}

unint64_t sub_1AFF47A60()
{
  unint64_t result = qword_1EB816DC8;
  if (!qword_1EB816DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816DC8);
  }
  return result;
}

unint64_t sub_1AFF47AB4()
{
  unint64_t result = qword_1EB816DD8;
  if (!qword_1EB816DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816DD8);
  }
  return result;
}

void sub_1AFF47B08(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for StockRecord.FeedConfiguration.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1AFF47C0CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for StockRecord.FeedConfiguration.CodingKeys()
{
  return &type metadata for StockRecord.FeedConfiguration.CodingKeys;
}

unint64_t sub_1AFF47C48()
{
  unint64_t result = qword_1E9AFCC60;
  if (!qword_1E9AFCC60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFCC60);
  }
  return result;
}

unint64_t sub_1AFF47CA0()
{
  unint64_t result = qword_1EB816DE8;
  if (!qword_1EB816DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816DE8);
  }
  return result;
}

unint64_t sub_1AFF47CF8()
{
  unint64_t result = qword_1EB816DE0;
  if (!qword_1EB816DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816DE0);
  }
  return result;
}

uint64_t type metadata accessor for SDSSearchOperation()
{
  uint64_t result = qword_1E9AFCC80;
  if (!qword_1E9AFCC80) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1AFF47D98()
{
  uint64_t result = sub_1AFFC9E18();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1AFF47E44(uint64_t a1, char a2, uint64_t (*a3)(uint64_t *))
{
  uint64_t v4 = a1;
  char v5 = a2 & 1;
  return a3(&v4);
}

void sub_1AFF47E84(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1AFFC98F8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v16[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1((void *)(v2 + qword_1E9AFCC70), *(void *)(v2 + qword_1E9AFCC70 + 24));
  sub_1AFF48974(0, (unint64_t *)&qword_1EB81A0E8, (uint64_t (*)(uint64_t))sub_1AFD306F8, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AFFD05F0;
  *(void *)(inited + 32) = 0x7972657571;
  *(void *)(inited + 40) = 0xE500000000000000;
  uint64_t v10 = *(void *)(v2 + qword_1E9AFCC68 + 8);
  *(void *)(inited + 48) = *(void *)(v2 + qword_1E9AFCC68);
  *(void *)(inited + 56) = v10;
  sub_1AFFC8E38();
  sub_1AFDF9B10(inited);
  sub_1AFFC98E8();
  uint64_t v11 = sub_1AFEC6034(3);
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRelease();
  uint64_t v12 = (void *)((char *)v11 + *(void *)(qword_1EB831B00 + (*MEMORY[0x1E4FBC8C8] & *v11) + 16));
  uint64_t v13 = *v12;
  *uint64_t v12 = (uint64_t)sub_1AFF48100;
  v12[1] = 0;
  sub_1AFD309C0(v13);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = a2;
  uint64_t v15 = v11;
  sub_1AFFC8E48();
  sub_1AFFC9F18();

  objc_msgSend(v15, sel_start);
}

uint64_t sub_1AFF48100(uint64_t a1, uint64_t a2)
{
  v3[2] = a1;
  return sub_1AFF9DE90((void (*)(uint64_t))sub_1AFF48B84, (uint64_t)v3, a2);
}

uint64_t sub_1AFF48150@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1AFF48918();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFF48974(0, &qword_1E9AFCC98, (uint64_t (*)(uint64_t))sub_1AFF48918, MEMORY[0x1E4FAB068]);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (id *)((char *)v21 - v10);
  sub_1AFF489D8(a2, (uint64_t)v21 - v10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {

    sub_1AFD31570();
    int v13 = *(_DWORD *)(v12 + 48);
    uint64_t v14 = sub_1AFFCA368();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(a3, a1, v14);
    uint64_t v15 = 0;
  }
  else
  {
    sub_1AFF48A6C((uint64_t)v11, (uint64_t)v8);
    sub_1AFD31570();
    int v13 = *(_DWORD *)(v16 + 48);
    uint64_t v17 = sub_1AFFCA368();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(a3, a1, v17);
    sub_1AFF48AD0();
    sub_1AFFCA3A8();
    uint64_t v15 = *(void *)(v21[1] + 16);
    swift_bridgeObjectRelease();
    sub_1AFF48B28((uint64_t)v8);
  }
  uint64_t v18 = (void *)(a3 + v13);
  void *v18 = 1;
  v18[1] = v15;
  uint64_t v19 = MEMORY[0x1E4FBC860];
  v18[2] = MEMORY[0x1E4FBC860];
  v18[3] = v19;
  type metadata accessor for NetworkEvent();
  v18[4] = 0;
  v18[5] = 0;
  return swift_storeEnumTagMultiPayload();
}

void sub_1AFF48380(uint64_t a1, void (*a2)(id, uint64_t), uint64_t a3)
{
  sub_1AFF48918();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFF48974(0, &qword_1E9AFCC98, (uint64_t (*)(uint64_t))sub_1AFF48918, MEMORY[0x1E4FAB068]);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (id *)((char *)&v37 - v10);
  sub_1AFF489D8(a1, (uint64_t)&v37 - v10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    id v12 = *v11;
    id v13 = *v11;
    a2(v12, 1);
  }
  else
  {
    sub_1AFF48A6C((uint64_t)v11, (uint64_t)v8);
    sub_1AFF48AD0();
    sub_1AFFCA3A8();
    uint64_t v14 = *(void *)&v46[0];
    int64_t v15 = *(void *)(*(void *)&v46[0] + 16);
    if (v15)
    {
      uint64_t v38 = v8;
      uint64_t v39 = a3;
      uint64_t v40 = a2;
      uint64_t v48 = (unint64_t *)MEMORY[0x1E4FBC860];
      sub_1AFD9DAD0(0, v15, 0);
      uint64_t v16 = 0;
      uint64_t v17 = v48;
      int64_t v43 = v15 - 1;
      for (i = v14; ; uint64_t v14 = i)
      {
        uint64_t v42 = v16;
        uint64_t v18 = v14 + v16;
        uint64_t v19 = *(void *)(v18 + 40);
        uint64_t v44 = *(void *)(v18 + 32);
        uint64_t v20 = *(void *)(v18 + 48);
        uint64_t v21 = *(void *)(v18 + 56);
        uint64_t v23 = *(void *)(v18 + 64);
        uint64_t v22 = *(void *)(v18 + 72);
        uint64_t v24 = *(void *)(v18 + 80);
        uint64_t v25 = *(void *)(v18 + 88);
        uint64_t v26 = *(void *)(v18 + 96);
        uint64_t v27 = *(void *)(v18 + 104);
        char v45 = *(unsigned char *)(v18 + 112);
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFD789F8(v23, v22, v20, v21, v44, v19, &v45, v26, (uint64_t)v46, v27, v24, v25, 0, 0, 0, 0);
        uint64_t v48 = v17;
        unint64_t v29 = v17[2];
        unint64_t v28 = v17[3];
        if (v29 >= v28 >> 1)
        {
          sub_1AFD9DAD0(v28 > 1, v29 + 1, 1);
          uint64_t v17 = v48;
        }
        v17[2] = v29 + 1;
        uint64_t v30 = &v17[17 * v29];
        *((_OWORD *)v30 + 2) = v46[0];
        long long v31 = v46[1];
        long long v32 = v46[2];
        long long v33 = v46[4];
        *((_OWORD *)v30 + 5) = v46[3];
        *((_OWORD *)v30 + 6) = v33;
        *((_OWORD *)v30 + 3) = v31;
        *((_OWORD *)v30 + 4) = v32;
        long long v34 = v46[5];
        long long v35 = v46[6];
        long long v36 = v46[7];
        v30[20] = v47;
        *((_OWORD *)v30 + 8) = v35;
        *((_OWORD *)v30 + 9) = v36;
        *((_OWORD *)v30 + 7) = v34;
        if (!v43) {
          break;
        }
        --v43;
        uint64_t v16 = v42 + 88;
      }
      swift_bridgeObjectRelease();
      uint64_t v8 = v38;
      v40(v17, 0);
    }
    else
    {
      swift_bridgeObjectRelease();
      a2((id)MEMORY[0x1E4FBC860], 0);
    }
    swift_bridgeObjectRelease();
    sub_1AFF48B28((uint64_t)v8);
  }
}

void sub_1AFF486FC()
{
}

uint64_t sub_1AFF4872C()
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + qword_1E9AFCC70);
  uint64_t v1 = v0 + qword_1E9AFCC78;
  uint64_t v2 = sub_1AFFC9E18();
  int v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(v1, v2);
}

uint64_t sub_1AFF487BC(uint64_t a1)
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + qword_1E9AFCC70);
  uint64_t v2 = a1 + qword_1E9AFCC78;
  uint64_t v3 = sub_1AFFC9E18();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

uint64_t sub_1AFF48850(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  sub_1AFFC8E48();
  sub_1AFF47E84((uint64_t)sub_1AFD3AB90, v4);

  return swift_release();
}

uint64_t sub_1AFF488D0()
{
  return type metadata accessor for SDSSearchOperation();
}

uint64_t sub_1AFF488D8()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1AFF48910(uint64_t a1)
{
  sub_1AFF48380(a1, *(void (**)(id, uint64_t))(v1 + 16), *(void *)(v1 + 24));
}

void sub_1AFF48918()
{
  if (!qword_1E9AFCC90)
  {
    sub_1AFEC744C();
    unint64_t v0 = type metadata accessor for SDSBaseOperationResponse();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9AFCC90);
    }
  }
}

void sub_1AFF48974(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1AFF489D8(uint64_t a1, uint64_t a2)
{
  sub_1AFF48974(0, &qword_1E9AFCC98, (uint64_t (*)(uint64_t))sub_1AFF48918, MEMORY[0x1E4FAB068]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AFF48A6C(uint64_t a1, uint64_t a2)
{
  sub_1AFF48918();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1AFF48AD0()
{
  if (!qword_1E9AFCCA0)
  {
    unint64_t v0 = sub_1AFFCA3C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9AFCCA0);
    }
  }
}

uint64_t sub_1AFF48B28(uint64_t a1)
{
  sub_1AFF48918();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1AFF48B84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1AFF48150(a1, *(void *)(v2 + 16), a2);
}

uint64_t SymbolQuery.init()@<X0>(uint64_t *a1@<X8>)
{
  sub_1AFD5A2B4(0, &qword_1EB810A30, (unint64_t *)&unk_1EB81A7F8);
  sub_1AFFC8A08();
  sub_1AFFC89F8();
  uint64_t v2 = sub_1AFFC89C8();
  sub_1AFD5A2B4(0, (unint64_t *)&unk_1EB810A38, &qword_1EB81A9D8);
  sub_1AFFC89F8();
  uint64_t v3 = sub_1AFFC89C8();
  sub_1AFD5A2B4(0, (unint64_t *)&qword_1EB8167E0, (unint64_t *)&qword_1EB81A890);
  sub_1AFFC89F8();
  uint64_t result = sub_1AFFC89C8();
  *a1 = v2;
  a1[1] = v3;
  a1[2] = result;
  return result;
}

uint64_t sub_1AFF48CD4()
{
  uint64_t v0 = sub_1AFFC9528();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1AFFC9A78();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v5 = sub_1AFFCAE58();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v6 = sub_1AFFC9548();
  __swift_allocate_value_buffer(v6, qword_1E9AFCCA8);
  __swift_project_value_buffer(v6, (uint64_t)qword_1E9AFCCA8);
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4F275D0], v0);
  return sub_1AFFC9558();
}

uint64_t sub_1AFF48EB4()
{
  uint64_t v0 = sub_1AFFC9528();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1AFFC9A78();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v5 = sub_1AFFCAE58();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v6 = sub_1AFFC9548();
  __swift_allocate_value_buffer(v6, qword_1E9AFCCC0);
  __swift_project_value_buffer(v6, (uint64_t)qword_1E9AFCCC0);
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4F275D0], v0);
  return sub_1AFFC9558();
}

uint64_t SymbolQuery.entities(for:)(uint64_t a1)
{
  *(void *)(v2 + 120) = a1;
  uint64_t v3 = sub_1AFFC9E18();
  *(void *)(v2 + 128) = v3;
  *(void *)(v2 + 136) = *(void *)(v3 - 8);
  *(void *)(v2 + 144) = swift_task_alloc();
  uint64_t v4 = sub_1AFFC98F8();
  *(void *)(v2 + 152) = v4;
  *(void *)(v2 + 160) = *(void *)(v4 - 8);
  *(void *)(v2 + 168) = swift_task_alloc();
  uint64_t v5 = sub_1AFFC9F58();
  *(void *)(v2 + 176) = v5;
  *(void *)(v2 + 184) = *(void *)(v5 - 8);
  *(void *)(v2 + 192) = swift_task_alloc();
  uint64_t v6 = sub_1AFFC9DE8();
  *(void *)(v2 + 200) = v6;
  *(void *)(v2 + 208) = *(void *)(v6 - 8);
  *(void *)(v2 + 216) = swift_task_alloc();
  *(_OWORD *)(v2 + 224) = *(_OWORD *)v1;
  *(void *)(v2 + 240) = *(void *)(v1 + 16);
  return MEMORY[0x1F4188298](sub_1AFF49274, 0, 0);
}

uint64_t sub_1AFF49274()
{
  unint64_t v28 = v0;
  if (qword_1EB810B30 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1AFFCA8A8();
  v0[31] = __swift_project_value_buffer(v1, (uint64_t)qword_1EB810AF0);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_1AFFCA888();
  os_log_type_t v3 = sub_1AFFCB448();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = v0[15];
  if (v4)
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v27 = v7;
    *(_DWORD *)uint64_t v6 = 136315138;
    v0[13] = v5;
    sub_1AFE28A20(0, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1AFD371B8();
    uint64_t v8 = sub_1AFFCAD88();
    v0[14] = sub_1AFD36BA8(v8, v9, &v27);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AFD01000, v2, v3, "Fetching stocks for symbol query with identifiers=[%s]", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v7, -1, -1);
    MEMORY[0x1B3E8F0D0](v6, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v26 = v0[27];
  uint64_t v11 = v0[25];
  uint64_t v10 = v0[26];
  uint64_t v19 = v0[24];
  uint64_t v12 = v0[21];
  uint64_t v24 = v0[23];
  uint64_t v25 = v0[22];
  uint64_t v13 = v0[18];
  uint64_t v22 = v0[20];
  uint64_t v23 = v0[19];
  uint64_t v14 = v0[17];
  uint64_t v20 = v0[16];
  uint64_t v21 = v0[15];
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8998();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v15 = v0[5];
  uint64_t v16 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v15);
  (*(void (**)(uint64_t, void, uint64_t))(v10 + 104))(v26, *MEMORY[0x1E4FAA8A8], v11);
  sub_1AFFC9F48();
  sub_1AFFC98E8();
  (*(void (**)(uint64_t, void, uint64_t))(v14 + 104))(v13, *MEMORY[0x1E4FAA980], v20);
  v0[32] = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 8))(v21, v26, v19, v12, v13, v15, v16);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v20);
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v12, v23);
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v19, v25);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v26, v11);
  uint64_t v17 = (void *)swift_task_alloc();
  v0[33] = v17;
  *uint64_t v17 = v0;
  v17[1] = sub_1AFF49694;
  return MEMORY[0x1F415EBC8](v0 + 7);
}

uint64_t sub_1AFF49694()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 272) = v0;
  swift_task_dealloc();
  if (v0)
  {
    os_log_type_t v3 = sub_1AFE1AC74;
  }
  else
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v2 + 16);
    os_log_type_t v3 = sub_1AFF497BC;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1AFF497BC()
{
  uint64_t v20 = v0;
  uint64_t v1 = v0[7];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_1AFFCA888();
  os_log_type_t v3 = sub_1AFFCB448();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[15];
    uint64_t v5 = swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    v19[0] = v18;
    *(_DWORD *)uint64_t v5 = 136315394;
    os_log_type_t type = v3;
    v0[8] = v4;
    sub_1AFE28A20(0, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1AFD371B8();
    uint64_t v6 = sub_1AFFCAD88();
    v0[9] = sub_1AFD36BA8(v6, v7, v19);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v5 + 12) = 2080;
    uint64_t v8 = sub_1AFFC8E38();
    uint64_t v9 = sub_1AFD90240(v8);
    swift_bridgeObjectRelease();
    v0[11] = v9;
    uint64_t v10 = sub_1AFFCAD88();
    unint64_t v12 = v11;
    swift_bridgeObjectRelease();
    v0[12] = sub_1AFD36BA8(v10, v12, v19);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AFD01000, v2, type, "Fetched stocks for symbol query with identifiers=[%s], stocks=[%s]", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v18, -1, -1);
    MEMORY[0x1B3E8F0D0](v5, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v13 = v0[15];
  sub_1AFFC8E38();
  unint64_t v14 = sub_1AFF51608(v13, v1);
  swift_bridgeObjectRelease_n();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(unint64_t))v0[1];
  return v15(v14);
}

uint64_t SymbolQuery.suggestedEntities()(uint64_t a1)
{
  *(void *)(v2 + 80) = a1;
  *(_OWORD *)(v2 + 88) = *(_OWORD *)v1;
  *(void *)(v2 + 104) = *(void *)(v1 + 16);
  return MEMORY[0x1F4188298](sub_1AFF49AFC, 0, 0);
}

uint64_t sub_1AFF49AFC()
{
  if (qword_1EB810B30 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1AFFCA8A8();
  v0[14] = __swift_project_value_buffer(v1, (uint64_t)qword_1EB810AF0);
  uint64_t v2 = sub_1AFFCA888();
  os_log_type_t v3 = sub_1AFFCB448();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_1AFD01000, v2, v3, "Fetching watched stocks for suggested symbol entities.", v4, 2u);
    MEMORY[0x1B3E8F0D0](v4, -1, -1);
  }

  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8998();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v5 = v0[5];
  uint64_t v6 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v5);
  v0[15] = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 120))(v5, v6);
  unint64_t v7 = (void *)swift_task_alloc();
  v0[16] = v7;
  void *v7 = v0;
  v7[1] = sub_1AFF49CE0;
  return MEMORY[0x1F415EBC8](v0 + 7);
}

uint64_t sub_1AFF49CE0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 136) = v0;
  swift_task_dealloc();
  if (v0)
  {
    os_log_type_t v3 = sub_1AFF4A0E0;
  }
  else
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v2 + 16);
    os_log_type_t v3 = sub_1AFF49E08;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1AFF49E08()
{
  uint64_t v29 = v0;
  uint64_t v1 = v0[7];
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_1AFFCA888();
  os_log_type_t v3 = sub_1AFFCB448();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = v5;
    uint64_t v28 = v5;
    *(_DWORD *)uint64_t v4 = 136315138;
    int64_t v7 = *(void *)(v1 + 16);
    uint64_t v8 = MEMORY[0x1E4FBC860];
    if (v7)
    {
      uint64_t v22 = v5;
      os_log_type_t v23 = v3;
      uint64_t v24 = v4;
      uint64_t v25 = v2;
      uint64_t v27 = MEMORY[0x1E4FBC860];
      sub_1AFD9DA10(0, v7, 0);
      uint64_t v8 = v27;
      unint64_t v9 = *(void *)(v27 + 16);
      uint64_t v10 = 16 * v9;
      uint64_t v26 = v1;
      unint64_t v11 = (uint64_t *)(v1 + 40);
      do
      {
        uint64_t v12 = *(v11 - 1);
        uint64_t v13 = *v11;
        int64_t v14 = v9 + 1;
        unint64_t v15 = *(void *)(v27 + 24);
        sub_1AFFC8E38();
        if (v9 >= v15 >> 1) {
          sub_1AFD9DA10(v15 > 1, v14, 1);
        }
        *(void *)(v27 + 16) = v14;
        uint64_t v16 = v27 + v10;
        *(void *)(v16 + 32) = v12;
        *(void *)(v16 + 40) = v13;
        v10 += 16;
        v11 += 17;
        ++v9;
        --v7;
      }
      while (v7);
      uint64_t v2 = v25;
      uint64_t v1 = v26;
      uint64_t v4 = v24;
      os_log_type_t v3 = v23;
      uint64_t v6 = v22;
    }
    v0[8] = v8;
    sub_1AFE28A20(0, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1AFD371B8();
    uint64_t v17 = sub_1AFFCAD88();
    unint64_t v19 = v18;
    swift_bridgeObjectRelease();
    v0[9] = sub_1AFD36BA8(v17, v19, &v28);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AFD01000, v2, v3, "Fetched watched stocks for suggested symbol entities, stocks=[%s]", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v6, -1, -1);
    MEMORY[0x1B3E8F0D0](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  sub_1AFF4A3D4(v1, MEMORY[0x1E4FBC860], v0[10]);
  swift_bridgeObjectRelease();
  uint64_t v20 = (uint64_t (*)(void))v0[1];
  return v20();
}

uint64_t sub_1AFF4A0E0()
{
  uint64_t v27 = v0;
  uint64_t v1 = (void *)v0[17];
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));

  uint64_t v2 = (void *)MEMORY[0x1E4FBC860];
  swift_bridgeObjectRetain_n();
  os_log_type_t v3 = sub_1AFFCA888();
  os_log_type_t v4 = sub_1AFFCB448();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = v6;
    uint64_t v26 = v6;
    *(_DWORD *)uint64_t v5 = 136315138;
    int64_t v8 = v2[2];
    if (v8)
    {
      uint64_t v22 = v6;
      os_log_type_t v23 = v4;
      uint64_t v24 = v5;
      uint64_t v25 = v3;
      sub_1AFD9DA10(0, v8, 0);
      unint64_t v9 = v2 + 5;
      unint64_t v10 = v2[2];
      uint64_t v11 = 2 * v10;
      do
      {
        uint64_t v12 = *(v9 - 1);
        uint64_t v13 = *v9;
        int64_t v14 = v10 + 1;
        unint64_t v15 = v2[3];
        sub_1AFFC8E38();
        if (v10 >= v15 >> 1) {
          sub_1AFD9DA10(v15 > 1, v14, 1);
        }
        v2[2] = v14;
        uint64_t v16 = &v2[v11];
        v16[4] = v12;
        v16[5] = v13;
        v11 += 2;
        v9 += 17;
        ++v10;
        --v8;
      }
      while (v8);
      uint64_t v5 = v24;
      os_log_type_t v3 = v25;
      os_log_type_t v4 = v23;
      uint64_t v7 = v22;
    }
    v0[8] = v2;
    sub_1AFE28A20(0, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1AFD371B8();
    uint64_t v17 = sub_1AFFCAD88();
    unint64_t v19 = v18;
    swift_bridgeObjectRelease();
    v0[9] = sub_1AFD36BA8(v17, v19, &v26);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AFD01000, v3, v4, "Fetched watched stocks for suggested symbol entities, stocks=[%s]", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v7, -1, -1);
    MEMORY[0x1B3E8F0D0](v5, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  sub_1AFF4A3D4(MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860], v0[10]);
  swift_bridgeObjectRelease();
  uint64_t v20 = (uint64_t (*)(void))v0[1];
  return v20();
}

uint64_t sub_1AFF4A3D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v73 = a3;
  sub_1AFF5367C(0, &qword_1EB816B00, MEMORY[0x1E4F27608], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v72 = (char *)&v65 - v6;
  uint64_t v7 = sub_1AFFC9548();
  uint64_t v70 = *(void *)(v7 - 8);
  uint64_t v71 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v75 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFF53288(0, (unint64_t *)&qword_1E9AF9D10, (unint64_t *)&qword_1EB816B20, (uint64_t)&protocol conformance descriptor for SymbolEntity, MEMORY[0x1E4F18518]);
  uint64_t v68 = *(void *)(v9 - 8);
  uint64_t v69 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v67 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v74 = (char *)&v65 - v12;
  uint64_t v78 = type metadata accessor for SymbolEntity();
  MEMORY[0x1F4188790](v78);
  int64_t v14 = (char *)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFF53288(0, (unint64_t *)&qword_1E9AFA400, (unint64_t *)&qword_1EB816B20, (uint64_t)&protocol conformance descriptor for SymbolEntity, MEMORY[0x1E4F182A0]);
  uint64_t v77 = v15;
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v66 = (char *)&v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v65 - v19;
  int64_t v21 = *(void *)(a1 + 16);
  uint64_t v22 = MEMORY[0x1E4FBC860];
  if (v21)
  {
    uint64_t v76 = a2;
    uint64_t v97 = MEMORY[0x1E4FBC860];
    sub_1AFD9DD20(0, v21, 0);
    uint64_t v22 = v97;
    uint64_t v23 = a1 + 32;
    do
    {
      long long v24 = *(_OWORD *)(v23 + 80);
      long long v25 = *(_OWORD *)(v23 + 112);
      long long v94 = *(_OWORD *)(v23 + 96);
      long long v95 = v25;
      long long v26 = *(_OWORD *)(v23 + 16);
      long long v27 = *(_OWORD *)(v23 + 48);
      long long v90 = *(_OWORD *)(v23 + 32);
      long long v91 = v27;
      long long v28 = *(_OWORD *)(v23 + 48);
      long long v29 = *(_OWORD *)(v23 + 80);
      long long v92 = *(_OWORD *)(v23 + 64);
      long long v93 = v29;
      long long v30 = *(_OWORD *)(v23 + 16);
      long long v88 = *(_OWORD *)v23;
      long long v89 = v30;
      long long v31 = *(_OWORD *)(v23 + 112);
      long long v85 = v94;
      long long v86 = v31;
      long long v81 = v90;
      long long v82 = v28;
      long long v83 = v92;
      long long v84 = v24;
      uint64_t v96 = *(void *)(v23 + 128);
      uint64_t v87 = *(void *)(v23 + 128);
      long long v79 = v88;
      long long v80 = v26;
      sub_1AFD76370((uint64_t)&v88);
      sub_1AFD76370((uint64_t)&v88);
      SymbolEntity.init(from:)(&v79, (uint64_t)v14);
      sub_1AFF53204((unint64_t *)&qword_1EB816B20, (void (*)(uint64_t))type metadata accessor for SymbolEntity);
      sub_1AFFC8AA8();
      sub_1AFD76408((uint64_t)&v88);
      uint64_t v97 = v22;
      unint64_t v33 = *(void *)(v22 + 16);
      unint64_t v32 = *(void *)(v22 + 24);
      if (v33 >= v32 >> 1)
      {
        sub_1AFD9DD20(v32 > 1, v33 + 1, 1);
        uint64_t v22 = v97;
      }
      *(void *)(v22 + 16) = v33 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v16 + 32))(v22+ ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(void *)(v16 + 72) * v33, v20, v77);
      v23 += 136;
      --v21;
    }
    while (v21);
    a2 = v76;
  }
  int64_t v34 = *(void *)(a2 + 16);
  uint64_t v35 = MEMORY[0x1E4FBC860];
  if (v34)
  {
    uint64_t v97 = MEMORY[0x1E4FBC860];
    sub_1AFD9DD20(0, v34, 0);
    uint64_t v35 = v97;
    uint64_t v36 = a2 + 32;
    uint64_t v76 = v16 + 32;
    uint64_t v37 = v66;
    do
    {
      long long v38 = *(_OWORD *)(v36 + 80);
      long long v39 = *(_OWORD *)(v36 + 112);
      long long v94 = *(_OWORD *)(v36 + 96);
      long long v95 = v39;
      long long v40 = *(_OWORD *)(v36 + 16);
      long long v41 = *(_OWORD *)(v36 + 48);
      long long v90 = *(_OWORD *)(v36 + 32);
      long long v91 = v41;
      long long v42 = *(_OWORD *)(v36 + 48);
      long long v43 = *(_OWORD *)(v36 + 80);
      long long v92 = *(_OWORD *)(v36 + 64);
      long long v93 = v43;
      long long v44 = *(_OWORD *)(v36 + 16);
      long long v88 = *(_OWORD *)v36;
      long long v89 = v44;
      long long v45 = *(_OWORD *)(v36 + 112);
      long long v85 = v94;
      long long v86 = v45;
      long long v81 = v90;
      long long v82 = v42;
      long long v83 = v92;
      long long v84 = v38;
      uint64_t v96 = *(void *)(v36 + 128);
      uint64_t v87 = *(void *)(v36 + 128);
      long long v79 = v88;
      long long v80 = v40;
      sub_1AFD76370((uint64_t)&v88);
      sub_1AFD76370((uint64_t)&v88);
      SymbolEntity.init(from:)(&v79, (uint64_t)v14);
      sub_1AFF53204((unint64_t *)&qword_1EB816B20, (void (*)(uint64_t))type metadata accessor for SymbolEntity);
      sub_1AFFC8AA8();
      sub_1AFD76408((uint64_t)&v88);
      uint64_t v97 = v35;
      unint64_t v47 = *(void *)(v35 + 16);
      unint64_t v46 = *(void *)(v35 + 24);
      if (v47 >= v46 >> 1)
      {
        sub_1AFD9DD20(v46 > 1, v47 + 1, 1);
        uint64_t v35 = v97;
      }
      *(void *)(v35 + 16) = v47 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v16 + 32))(v35+ ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(void *)(v16 + 72) * v47, v37, v77);
      v36 += 136;
      --v34;
    }
    while (v34);
  }
  uint64_t v49 = v70;
  uint64_t v48 = v71;
  uint64_t v51 = v68;
  uint64_t v50 = v69;
  uint64_t v52 = v67;
  if (*(void *)(v22 + 16))
  {
    if (qword_1E9AF8E08 != -1) {
      swift_once();
    }
    uint64_t v53 = __swift_project_value_buffer(v48, (uint64_t)qword_1E9AFCCA8);
    uint64_t v54 = v75;
    (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v75, v53, v48);
    uint64_t v55 = sub_1AFF53204((unint64_t *)&qword_1EB816B20, (void (*)(uint64_t))type metadata accessor for SymbolEntity);
    MEMORY[0x1B3E8B160](v54, v22, v78, v55);
    unint64_t v56 = sub_1AFD36828(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v58 = *(void *)(v56 + 16);
    unint64_t v57 = *(void *)(v56 + 24);
    if (v58 >= v57 >> 1) {
      unint64_t v56 = sub_1AFD36828(v57 > 1, v58 + 1, 1, v56);
    }
    *(void *)(v56 + 16) = v58 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v51 + 32))(v56+ ((*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80))+ *(void *)(v51 + 72) * v58, v74, v50);
    if (*(void *)(v35 + 16)) {
      goto LABEL_18;
    }
LABEL_26:
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
  swift_bridgeObjectRelease();
  unint64_t v56 = MEMORY[0x1E4FBC860];
  if (!*(void *)(v35 + 16)) {
    goto LABEL_26;
  }
LABEL_18:
  if (qword_1E9AF8E10 != -1) {
    swift_once();
  }
  uint64_t v59 = __swift_project_value_buffer(v48, (uint64_t)qword_1E9AFCCC0);
  uint64_t v60 = v75;
  (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v75, v59, v48);
  uint64_t v61 = sub_1AFF53204((unint64_t *)&qword_1EB816B20, (void (*)(uint64_t))type metadata accessor for SymbolEntity);
  MEMORY[0x1B3E8B160](v60, v35, v78, v61);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v56 = sub_1AFD36828(0, *(void *)(v56 + 16) + 1, 1, v56);
  }
  unint64_t v63 = *(void *)(v56 + 16);
  unint64_t v62 = *(void *)(v56 + 24);
  if (v63 >= v62 >> 1) {
    unint64_t v56 = sub_1AFD36828(v62 > 1, v63 + 1, 1, v56);
  }
  *(void *)(v56 + 16) = v63 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v51 + 32))(v56+ ((*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80))+ *(void *)(v51 + 72) * v63, v52, v50);
LABEL_27:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v49 + 56))(v72, 1, 1, v48);
  sub_1AFF53204((unint64_t *)&qword_1EB816B20, (void (*)(uint64_t))type metadata accessor for SymbolEntity);
  return sub_1AFFC8D98();
}

uint64_t SymbolQuery.defaultResult()(uint64_t a1)
{
  *(void *)(v2 + 208) = a1;
  *(_OWORD *)(v2 + 216) = *(_OWORD *)v1;
  *(void *)(v2 + 232) = *(void *)(v1 + 16);
  return MEMORY[0x1F4188298](sub_1AFF4AD44, 0, 0);
}

uint64_t sub_1AFF4AD44()
{
  if (qword_1EB810B30 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1AFFCA8A8();
  v0[30] = __swift_project_value_buffer(v1, (uint64_t)qword_1EB810AF0);
  uint64_t v2 = sub_1AFFCA888();
  os_log_type_t v3 = sub_1AFFCB448();
  if (os_log_type_enabled(v2, v3))
  {
    os_log_type_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v4 = 0;
    _os_log_impl(&dword_1AFD01000, v2, v3, "Default symbol entity requested", v4, 2u);
    MEMORY[0x1B3E8F0D0](v4, -1, -1);
  }

  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8998();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v5 = v0[22];
  uint64_t v6 = v0[23];
  __swift_project_boxed_opaque_existential_1(v0 + 19, v5);
  v0[31] = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 120))(v5, v6);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[32] = v7;
  void *v7 = v0;
  v7[1] = sub_1AFF4AF28;
  return MEMORY[0x1F415EBC8](v0 + 24);
}

uint64_t sub_1AFF4AF28()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 264) = v0;
  swift_task_dealloc();
  if (v0)
  {
    os_log_type_t v3 = sub_1AFF4B438;
  }
  else
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v2 + 152);
    os_log_type_t v3 = sub_1AFF4B050;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1AFF4B050()
{
  uint64_t v60 = v0;
  uint64_t v1 = *(void *)(v0 + 192);
  if (*(void *)(v1 + 16))
  {
    *(_OWORD *)(v0 + 16) = *(_OWORD *)(v1 + 32);
    long long v2 = *(_OWORD *)(v1 + 96);
    long long v4 = *(_OWORD *)(v1 + 48);
    long long v3 = *(_OWORD *)(v1 + 64);
    *(_OWORD *)(v0 + 64) = *(_OWORD *)(v1 + 80);
    *(_OWORD *)(v0 + 80) = v2;
    *(_OWORD *)(v0 + 32) = v4;
    *(_OWORD *)(v0 + 48) = v3;
    long long v6 = *(_OWORD *)(v1 + 128);
    long long v5 = *(_OWORD *)(v1 + 144);
    long long v7 = *(_OWORD *)(v1 + 112);
    *(void *)(v0 + 144) = *(void *)(v1 + 160);
    *(_OWORD *)(v0 + 112) = v6;
    *(_OWORD *)(v0 + 128) = v5;
    *(_OWORD *)(v0 + 96) = v7;
    sub_1AFD76370(v0 + 16);
    swift_bridgeObjectRelease();
    long long v40 = *(_OWORD *)(v0 + 120);
    long long v41 = *(_OWORD *)(v0 + 136);
    uint64_t v8 = *(void *)(v0 + 104);
    uint64_t v9 = *(void *)(v0 + 112);
    uint64_t v11 = *(void *)(v0 + 88);
    uint64_t v10 = *(void *)(v0 + 96);
    char v43 = *(unsigned char *)(v0 + 80);
    uint64_t v44 = *(void *)(v0 + 64);
    uint64_t v12 = *(void *)(v0 + 48);
    unint64_t v13 = *(void *)(v0 + 24);
    uint64_t v38 = *(void *)(v0 + 32);
    uint64_t v39 = *(void *)(v0 + 72);
    uint64_t v36 = *(void *)(v0 + 40);
    uint64_t v37 = *(void *)(v0 + 56);
    uint64_t v42 = *(void *)(v0 + 16);
    sub_1AFD76370(v0 + 16);
    int64_t v14 = sub_1AFFCA888();
    os_log_type_t v15 = sub_1AFFCB448();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v35 = v11;
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v34 = v9;
      uint64_t v17 = swift_slowAlloc();
      *(void *)&long long v46 = v17;
      *(_DWORD *)uint64_t v16 = 136315138;
      sub_1AFFC8E38();
      *(void *)(v0 + 200) = sub_1AFD36BA8(v42, v13, (uint64_t *)&v46);
      sub_1AFFCB688();
      swift_bridgeObjectRelease();
      sub_1AFD76408(v0 + 16);
      _os_log_impl(&dword_1AFD01000, v14, v15, "Returning first watched stock for default symbol entity, stock=%s", v16, 0xCu);
      swift_arrayDestroy();
      uint64_t v18 = v17;
      uint64_t v9 = v34;
      MEMORY[0x1B3E8F0D0](v18, -1, -1);
      uint64_t v19 = v16;
      uint64_t v11 = v35;
      MEMORY[0x1B3E8F0D0](v19, -1, -1);
    }
    else
    {
      sub_1AFD76408(v0 + 16);
    }

    long long v28 = v40;
    long long v29 = v41;
    uint64_t v24 = v38;
    uint64_t v27 = v39;
    uint64_t v25 = v36;
    uint64_t v26 = v37;
    uint64_t v23 = v42;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v20 = sub_1AFFCA888();
    os_log_type_t v21 = sub_1AFFCB468();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v22 = 0;
      _os_log_impl(&dword_1AFD01000, v20, v21, "No watched symbols to return as default symbol entity, falling back to AAPL", v22, 2u);
      MEMORY[0x1B3E8F0D0](v22, -1, -1);
    }

    char v45 = 3;
    sub_1AFD789F8(1280328001, 0xE400000000000000, 0x6E4920656C707041, 0xEA00000000002E63, 0x51414453414ELL, 0xE600000000000000, &v45, 0, (uint64_t)&v46, 0, 0, 0, 0, 0, 0, 0);
    unint64_t v13 = *((void *)&v46 + 1);
    uint64_t v23 = v46;
    uint64_t v24 = v47;
    uint64_t v25 = v48;
    uint64_t v12 = v49;
    uint64_t v26 = v50;
    uint64_t v27 = v52;
    uint64_t v44 = v51;
    char v43 = v53;
    uint64_t v11 = v54;
    uint64_t v10 = v55;
    uint64_t v8 = v56;
    uint64_t v9 = v57;
    long long v28 = v58;
    long long v29 = v59;
  }
  uint64_t v30 = *(void *)(v0 + 208);
  *(void *)&long long v46 = v23;
  *((void *)&v46 + 1) = v13;
  uint64_t v47 = v24;
  uint64_t v48 = v25;
  uint64_t v49 = v12;
  uint64_t v50 = v26;
  uint64_t v51 = v44;
  uint64_t v52 = v27;
  char v53 = v43;
  uint64_t v54 = v11;
  uint64_t v55 = v10;
  uint64_t v56 = v8;
  uint64_t v57 = v9;
  long long v58 = v28;
  long long v59 = v29;
  SymbolEntity.init(from:)(&v46, v30);
  uint64_t v31 = type metadata accessor for SymbolEntity();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v30, 0, 1, v31);
  unint64_t v32 = *(uint64_t (**)(void))(v0 + 8);
  return v32();
}

uint64_t sub_1AFF4B438()
{
  uint64_t v11 = v0;
  uint64_t v1 = (void *)v0[33];
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 19));

  long long v2 = sub_1AFFCA888();
  os_log_type_t v3 = sub_1AFFCB468();
  if (os_log_type_enabled(v2, v3))
  {
    long long v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v4 = 0;
    _os_log_impl(&dword_1AFD01000, v2, v3, "No watched symbols to return as default symbol entity, falling back to AAPL", v4, 2u);
    MEMORY[0x1B3E8F0D0](v4, -1, -1);
  }

  char v9 = 3;
  sub_1AFD789F8(1280328001, 0xE400000000000000, 0x6E4920656C707041, 0xEA00000000002E63, 0x51414453414ELL, 0xE600000000000000, &v9, 0, (uint64_t)&v10, 0, 0, 0, 0, 0, 0, 0);
  uint64_t v5 = v0[26];
  SymbolEntity.init(from:)(&v10, v5);
  uint64_t v6 = type metadata accessor for SymbolEntity();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 0, 1, v6);
  long long v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1AFF4B618(uint64_t a1)
{
  os_log_type_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *os_log_type_t v3 = v1;
  v3[1] = sub_1AFD6A894;
  return SymbolQuery.entities(for:)(a1);
}

uint64_t sub_1AFF4B6AC(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_1AFD56424;
  *(void *)(v4 + 80) = a1;
  *(_OWORD *)(v4 + 88) = *(_OWORD *)v1;
  *(void *)(v4 + 104) = *(void *)(v1 + 16);
  return MEMORY[0x1F4188298](sub_1AFF49AFC, 0, 0);
}

uint64_t sub_1AFF4B768(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  *(void *)uint64_t v8 = v4;
  *(void *)(v8 + 8) = sub_1AFD3503C;
  *(void *)(v8 + 128) = a2;
  *(void *)(v8 + 136) = a3;
  *(void *)(v8 + 120) = a1;
  *(_OWORD *)(v8 + 144) = *(_OWORD *)v3;
  *(void *)(v8 + 160) = *(void *)(v3 + 16);
  return MEMORY[0x1F4188298](sub_1AFF4B86C, 0, 0);
}

uint64_t SymbolQuery.entities(matching:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v4 + 128) = a2;
  *(void *)(v4 + 136) = a3;
  *(void *)(v4 + 120) = a1;
  *(_OWORD *)(v4 + 144) = *(_OWORD *)v3;
  *(void *)(v4 + 160) = *(void *)(v3 + 16);
  return MEMORY[0x1F4188298](sub_1AFF4B86C, 0, 0);
}

uint64_t sub_1AFF4B86C()
{
  uint64_t v16 = v0;
  if (qword_1EB810B30 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1AFFCA8A8();
  v0[21] = __swift_project_value_buffer(v1, (uint64_t)qword_1EB810AF0);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_1AFFCA888();
  os_log_type_t v3 = sub_1AFFCB478();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = v0[17];
  if (v4)
  {
    uint64_t v6 = v0[16];
    long long v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v15 = v8;
    *(_DWORD *)long long v7 = 136315138;
    sub_1AFFC8E38();
    v0[14] = sub_1AFD36BA8(v6, v5, &v15);
    sub_1AFFCB688();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AFD01000, v2, v3, "Fetching stocks for symbol entities matching string='%s'", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v8, -1, -1);
    MEMORY[0x1B3E8F0D0](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v9 = v0[17];
  uint64_t v10 = v0[16];
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8998();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v11 = v0[5];
  uint64_t v12 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v11);
  v0[22] = sub_1AFD4EE28(v10, v9, v11, v12);
  unint64_t v13 = (void *)swift_task_alloc();
  v0[23] = v13;
  *unint64_t v13 = v0;
  v13[1] = sub_1AFF4BB18;
  return MEMORY[0x1F415EBC8](v0 + 10);
}

uint64_t sub_1AFF4BB18()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 192) = v0;
  swift_task_dealloc();
  if (v0)
  {
    os_log_type_t v3 = sub_1AFE1CF74;
  }
  else
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v2 + 16);
    os_log_type_t v3 = sub_1AFF4BC40;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1AFF4BC40()
{
  uint64_t v31 = v0;
  uint64_t v1 = *(void *)(v0 + 80);
  *(void *)(v0 + 200) = v1;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_1AFFCA888();
  os_log_type_t v3 = sub_1AFFCB478();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v5 = *(void *)(v0 + 128);
    unint64_t v4 = *(void *)(v0 + 136);
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v29 = v7;
    *(_DWORD *)uint64_t v6 = 136315394;
    sub_1AFFC8E38();
    *(void *)(v0 + 88) = sub_1AFD36BA8(v5, v4, &v29);
    sub_1AFFCB688();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v6 + 12) = 2080;
    int64_t v8 = *(void *)(v1 + 16);
    uint64_t v9 = MEMORY[0x1E4FBC860];
    if (v8)
    {
      uint64_t v24 = v7;
      os_log_type_t v25 = v3;
      uint64_t v26 = v6;
      uint64_t v27 = v2;
      uint64_t v30 = MEMORY[0x1E4FBC860];
      sub_1AFD9DA10(0, v8, 0);
      uint64_t v9 = v30;
      unint64_t v10 = *(void *)(v30 + 16);
      uint64_t v11 = 16 * v10;
      uint64_t v28 = v1;
      uint64_t v12 = (uint64_t *)(v1 + 40);
      do
      {
        uint64_t v13 = *(v12 - 1);
        uint64_t v14 = *v12;
        uint64_t v30 = v9;
        int64_t v15 = v10 + 1;
        unint64_t v16 = *(void *)(v9 + 24);
        sub_1AFFC8E38();
        if (v10 >= v16 >> 1)
        {
          sub_1AFD9DA10(v16 > 1, v15, 1);
          uint64_t v9 = v30;
        }
        *(void *)(v9 + 16) = v15;
        uint64_t v17 = v9 + v11;
        *(void *)(v17 + 32) = v13;
        *(void *)(v17 + 40) = v14;
        v11 += 16;
        v12 += 17;
        ++v10;
        --v8;
      }
      while (v8);
      uint64_t v2 = v27;
      uint64_t v1 = v28;
      uint64_t v6 = v26;
      os_log_type_t v3 = v25;
      uint64_t v7 = v24;
    }
    *(void *)(v0 + 96) = v9;
    sub_1AFE28A20(0, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1AFD371B8();
    uint64_t v18 = sub_1AFFCAD88();
    unint64_t v20 = v19;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 104) = sub_1AFD36BA8(v18, v20, &v29);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AFD01000, v2, v3, "Fetched stocks for symbol entities matching string='%s', stocks=[%s]", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v7, -1, -1);
    MEMORY[0x1B3E8F0D0](v6, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  uint64_t v21 = *(void *)(v0 + 160);
  *(_OWORD *)(v0 + 56) = *(_OWORD *)(v0 + 144);
  *(void *)(v0 + 72) = v21;
  uint64_t v22 = swift_task_alloc();
  *(void *)(v0 + 208) = v22;
  *(void *)uint64_t v22 = v0;
  *(void *)(v22 + 8) = sub_1AFE1CE60;
  *(void *)(v22 + 312) = *(void *)(v0 + 120);
  *(void *)(v22 + 320) = v1;
  *(_OWORD *)(v22 + 328) = *(_OWORD *)(v0 + 56);
  *(void *)(v22 + 344) = *(void *)(v0 + 72);
  return MEMORY[0x1F4188298](sub_1AFF4C180, 0, 0);
}

uint64_t sub_1AFF4BFDC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_1AFE181D8();
  *uint64_t v5 = v2;
  v5[1] = sub_1AFD56424;
  return MEMORY[0x1F40D3D68](a1, a2, v6);
}

uint64_t sub_1AFF4C090(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_1AFD3503C;
  *(void *)(v4 + 208) = a1;
  *(_OWORD *)(v4 + 216) = *(_OWORD *)v1;
  *(void *)(v4 + 232) = *(void *)(v1 + 16);
  return MEMORY[0x1F4188298](sub_1AFF4AD44, 0, 0);
}

uint64_t sub_1AFF4C14C(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 312) = a1;
  *(void *)(v3 + 320) = a2;
  *(_OWORD *)(v3 + 328) = *(_OWORD *)v2;
  *(void *)(v3 + 344) = *(void *)(v2 + 16);
  return MEMORY[0x1F4188298](sub_1AFF4C180, 0, 0);
}

uint64_t sub_1AFF4C180()
{
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8998();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = v0[22];
  uint64_t v2 = v0[23];
  __swift_project_boxed_opaque_existential_1(v0 + 19, v1);
  v0[44] = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 120))(v1, v2);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[45] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1AFF4C2AC;
  return MEMORY[0x1F415EBC8](v0 + 32);
}

uint64_t sub_1AFF4C2AC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 368) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_1AFF4CBF4;
  }
  else
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v2 + 152);
    uint64_t v3 = sub_1AFF4C3D4;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1AFF4C3D4()
{
  long long v95 = v0;
  uint64_t v1 = MEMORY[0x1E4FBC860];
  v0[30] = MEMORY[0x1E4FBC860];
  v0[31] = v1;
  long long v89 = v0 + 31;
  long long v90 = v0 + 30;
  uint64_t v2 = v0[32];
  uint64_t v3 = v0[40];
  int64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = v0 + 2;
    uint64_t v6 = v3 + 32;
    sub_1AFFC8E38();
    uint64_t v7 = (void *)MEMORY[0x1E4FBC860];
    int64_t v8 = v4;
    uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      *(_OWORD *)uint64_t v5 = *(_OWORD *)v6;
      long long v17 = *(_OWORD *)(v6 + 16);
      long long v18 = *(_OWORD *)(v6 + 32);
      long long v19 = *(_OWORD *)(v6 + 64);
      *((_OWORD *)v90 - 11) = *(_OWORD *)(v6 + 48);
      *((_OWORD *)v90 - 10) = v19;
      *((_OWORD *)v90 - 13) = v17;
      *((_OWORD *)v90 - 12) = v18;
      long long v20 = *(_OWORD *)(v6 + 80);
      long long v21 = *(_OWORD *)(v6 + 96);
      long long v22 = *(_OWORD *)(v6 + 112);
      *(v90 - 12) = *(void *)(v6 + 128);
      *((_OWORD *)v90 - 8) = v21;
      *((_OWORD *)v90 - 7) = v22;
      *((_OWORD *)v90 - 9) = v20;
      sub_1AFD76370((uint64_t)v5);
      if (sub_1AFF70434(v5, v2))
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v9 = sub_1AFD35574(0, v9[2] + 1, 1, v9);
        }
        unint64_t v24 = v9[2];
        unint64_t v23 = v9[3];
        if (v24 >= v23 >> 1) {
          uint64_t v9 = sub_1AFD35574((void *)(v23 > 1), v24 + 1, 1, v9);
        }
        v9[2] = v24 + 1;
        unint64_t v10 = &v9[17 * v24];
        *((_OWORD *)v10 + 2) = *(_OWORD *)v5;
        long long v11 = *((_OWORD *)v90 - 13);
        long long v12 = *((_OWORD *)v90 - 12);
        long long v13 = *((_OWORD *)v90 - 10);
        *((_OWORD *)v10 + 5) = *((_OWORD *)v90 - 11);
        *((_OWORD *)v10 + 6) = v13;
        *((_OWORD *)v10 + 3) = v11;
        *((_OWORD *)v10 + 4) = v12;
        long long v14 = *((_OWORD *)v90 - 9);
        long long v15 = *((_OWORD *)v90 - 8);
        long long v16 = *((_OWORD *)v90 - 7);
        v10[20] = *(v90 - 12);
        *((_OWORD *)v10 + 8) = v15;
        *((_OWORD *)v10 + 9) = v16;
        *((_OWORD *)v10 + 7) = v14;
        *long long v89 = v9;
      }
      else
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v7 = sub_1AFD35574(0, v7[2] + 1, 1, v7);
        }
        unint64_t v26 = v7[2];
        unint64_t v25 = v7[3];
        if (v26 >= v25 >> 1) {
          uint64_t v7 = sub_1AFD35574((void *)(v25 > 1), v26 + 1, 1, v7);
        }
        _OWORD v7[2] = v26 + 1;
        uint64_t v27 = &v7[17 * v26];
        *((_OWORD *)v27 + 2) = *(_OWORD *)v5;
        long long v28 = *((_OWORD *)v90 - 13);
        long long v29 = *((_OWORD *)v90 - 12);
        long long v30 = *((_OWORD *)v90 - 10);
        *((_OWORD *)v27 + 5) = *((_OWORD *)v90 - 11);
        *((_OWORD *)v27 + 6) = v30;
        *((_OWORD *)v27 + 3) = v28;
        *((_OWORD *)v27 + 4) = v29;
        long long v31 = *((_OWORD *)v90 - 9);
        long long v32 = *((_OWORD *)v90 - 8);
        long long v33 = *((_OWORD *)v90 - 7);
        v27[20] = *(v90 - 12);
        *((_OWORD *)v27 + 8) = v32;
        *((_OWORD *)v27 + 9) = v33;
        *((_OWORD *)v27 + 7) = v31;
        *long long v90 = v7;
      }
      v6 += 136;
      --v8;
    }
    while (v8);
    uint64_t v0 = v88;
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (qword_1EB810B30 != -1) {
    swift_once();
  }
  uint64_t v34 = sub_1AFFCA8A8();
  __swift_project_value_buffer(v34, (uint64_t)qword_1EB810AF0);
  uint64_t v35 = v0[30];
  uint64_t v36 = v0[31];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v37 = sub_1AFFCA888();
  os_log_type_t v38 = sub_1AFFCB478();
  if (os_log_type_enabled(v37, v38))
  {
    os_log_type_t v84 = v38;
    log = v37;
    uint64_t v39 = swift_slowAlloc();
    uint64_t v83 = swift_slowAlloc();
    uint64_t v94 = v83;
    *(_DWORD *)uint64_t v39 = 136315650;
    uint64_t v40 = MEMORY[0x1E4FBC860];
    uint64_t v87 = v39;
    uint64_t v85 = v35;
    if (v4)
    {
      uint64_t v41 = v0[40];
      uint64_t v91 = MEMORY[0x1E4FBC860];
      sub_1AFD9DA10(0, v4, 0);
      uint64_t v40 = v91;
      unint64_t v42 = *(void *)(v91 + 16);
      uint64_t v43 = 16 * v42;
      uint64_t v44 = (uint64_t *)(v41 + 40);
      do
      {
        uint64_t v45 = *(v44 - 1);
        uint64_t v46 = *v44;
        int64_t v47 = v42 + 1;
        unint64_t v48 = *(void *)(v91 + 24);
        sub_1AFFC8E38();
        if (v42 >= v48 >> 1) {
          sub_1AFD9DA10(v48 > 1, v47, 1);
        }
        *(void *)(v91 + 16) = v47;
        uint64_t v49 = v91 + v43;
        *(void *)(v49 + 32) = v45;
        *(void *)(v49 + 40) = v46;
        v43 += 16;
        v44 += 17;
        ++v42;
        --v4;
      }
      while (v4);
      uint64_t v0 = v88;
      uint64_t v39 = v87;
    }
    v0[33] = v40;
    sub_1AFE28A20(0, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1AFD371B8();
    uint64_t v50 = sub_1AFFCAD88();
    unint64_t v52 = v51;
    swift_bridgeObjectRelease();
    v0[34] = sub_1AFD36BA8(v50, v52, &v94);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v39 + 12) = 2080;
    int64_t v53 = *(void *)(v36 + 16);
    uint64_t v54 = MEMORY[0x1E4FBC860];
    if (v53)
    {
      uint64_t v92 = MEMORY[0x1E4FBC860];
      sub_1AFFC8E38();
      sub_1AFD9DA10(0, v53, 0);
      uint64_t v55 = 0;
      uint64_t v54 = v92;
      unint64_t v56 = *(void *)(v92 + 16);
      uint64_t v57 = 16 * v56;
      do
      {
        uint64_t v58 = *(void *)(v36 + v55 + 32);
        uint64_t v59 = *(void *)(v36 + v55 + 40);
        unint64_t v60 = *(void *)(v92 + 24);
        int64_t v61 = v56 + 1;
        sub_1AFFC8E38();
        if (v56 >= v60 >> 1) {
          sub_1AFD9DA10(v60 > 1, v61, 1);
        }
        *(void *)(v92 + 16) = v61;
        uint64_t v62 = v92 + v57;
        *(void *)(v62 + 32) = v58;
        *(void *)(v62 + 40) = v59;
        v57 += 16;
        v55 += 136;
        ++v56;
        --v53;
      }
      while (v53);
      swift_bridgeObjectRelease();
      uint64_t v0 = v88;
      uint64_t v39 = v87;
    }
    v90[5] = v54;
    uint64_t v63 = sub_1AFFCAD88();
    unint64_t v65 = v64;
    swift_bridgeObjectRelease();
    v90[6] = sub_1AFD36BA8(v63, v65, &v94);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v39 + 22) = 2080;
    int64_t v66 = *(void *)(v85 + 16);
    uint64_t v67 = MEMORY[0x1E4FBC860];
    if (v66)
    {
      uint64_t v93 = MEMORY[0x1E4FBC860];
      sub_1AFFC8E38();
      sub_1AFD9DA10(0, v66, 0);
      uint64_t v68 = 0;
      uint64_t v67 = v93;
      unint64_t v69 = *(void *)(v93 + 16);
      uint64_t v70 = 16 * v69;
      do
      {
        uint64_t v71 = *(void *)(v85 + v68 + 32);
        uint64_t v72 = *(void *)(v85 + v68 + 40);
        unint64_t v73 = *(void *)(v93 + 24);
        int64_t v74 = v69 + 1;
        sub_1AFFC8E38();
        if (v69 >= v73 >> 1) {
          sub_1AFD9DA10(v73 > 1, v74, 1);
        }
        *(void *)(v93 + 16) = v74;
        uint64_t v75 = v93 + v70;
        *(void *)(v75 + 32) = v71;
        *(void *)(v75 + 40) = v72;
        v70 += 16;
        v68 += 136;
        ++v69;
        --v66;
      }
      while (v66);
      swift_bridgeObjectRelease();
      uint64_t v0 = v88;
      uint64_t v39 = v87;
    }
    v0[37] = v67;
    uint64_t v76 = sub_1AFFCAD88();
    unint64_t v78 = v77;
    swift_bridgeObjectRelease();
    v0[38] = sub_1AFD36BA8(v76, v78, &v94);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    uint64_t v37 = log;
    _os_log_impl(&dword_1AFD01000, log, v84, "Sectioned stocks=[%s] into watched=[%s], notWatched=[%s]", (uint8_t *)v39, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v83, -1, -1);
    MEMORY[0x1B3E8F0D0](v39, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  uint64_t v79 = v0[39];
  swift_beginAccess();
  uint64_t v80 = v0[31];
  swift_beginAccess();
  sub_1AFF4A3D4(v80, v0[30], v79);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v81 = (uint64_t (*)(void))v0[1];
  return v81();
}

uint64_t sub_1AFF4CBF4()
{
  uint64_t v96 = v0;
  uint64_t v1 = (void *)v0[46];
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 19));

  uint64_t v2 = MEMORY[0x1E4FBC860];
  v0[30] = MEMORY[0x1E4FBC860];
  v0[31] = v2;
  long long v90 = v0 + 31;
  uint64_t v91 = v0 + 30;
  uint64_t v3 = v0[40];
  int64_t v4 = *(void *)(v3 + 16);
  long long v89 = v0;
  if (v4)
  {
    uint64_t v5 = v0 + 2;
    uint64_t v6 = v3 + 32;
    sub_1AFFC8E38();
    uint64_t v7 = MEMORY[0x1E4FBC860];
    int64_t v8 = v4;
    uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
    unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      *(_OWORD *)uint64_t v5 = *(_OWORD *)v6;
      long long v18 = *(_OWORD *)(v6 + 16);
      long long v19 = *(_OWORD *)(v6 + 32);
      long long v20 = *(_OWORD *)(v6 + 64);
      *((_OWORD *)v91 - 11) = *(_OWORD *)(v6 + 48);
      *((_OWORD *)v91 - 10) = v20;
      *((_OWORD *)v91 - 13) = v18;
      *((_OWORD *)v91 - 12) = v19;
      long long v21 = *(_OWORD *)(v6 + 80);
      long long v22 = *(_OWORD *)(v6 + 96);
      long long v23 = *(_OWORD *)(v6 + 112);
      *(v91 - 12) = *(void *)(v6 + 128);
      *((_OWORD *)v91 - 8) = v22;
      *((_OWORD *)v91 - 7) = v23;
      *((_OWORD *)v91 - 9) = v21;
      sub_1AFD76370((uint64_t)v5);
      if (sub_1AFF70434(v5, v7))
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v10 = sub_1AFD35574(0, v10[2] + 1, 1, v10);
        }
        unint64_t v25 = v10[2];
        unint64_t v24 = v10[3];
        if (v25 >= v24 >> 1) {
          unint64_t v10 = sub_1AFD35574((void *)(v24 > 1), v25 + 1, 1, v10);
        }
        void v10[2] = v25 + 1;
        long long v11 = &v10[17 * v25];
        *((_OWORD *)v11 + 2) = *(_OWORD *)v5;
        long long v12 = *((_OWORD *)v91 - 13);
        long long v13 = *((_OWORD *)v91 - 12);
        long long v14 = *((_OWORD *)v91 - 10);
        *((_OWORD *)v11 + 5) = *((_OWORD *)v91 - 11);
        *((_OWORD *)v11 + 6) = v14;
        *((_OWORD *)v11 + 3) = v12;
        *((_OWORD *)v11 + 4) = v13;
        long long v15 = *((_OWORD *)v91 - 9);
        long long v16 = *((_OWORD *)v91 - 8);
        long long v17 = *((_OWORD *)v91 - 7);
        v11[20] = *(v91 - 12);
        *((_OWORD *)v11 + 8) = v16;
        *((_OWORD *)v11 + 9) = v17;
        *((_OWORD *)v11 + 7) = v15;
        *long long v90 = v10;
      }
      else
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v9 = sub_1AFD35574(0, v9[2] + 1, 1, v9);
        }
        unint64_t v27 = v9[2];
        unint64_t v26 = v9[3];
        if (v27 >= v26 >> 1) {
          uint64_t v9 = sub_1AFD35574((void *)(v26 > 1), v27 + 1, 1, v9);
        }
        v9[2] = v27 + 1;
        long long v28 = &v9[17 * v27];
        *((_OWORD *)v28 + 2) = *(_OWORD *)v5;
        long long v29 = *((_OWORD *)v91 - 13);
        long long v30 = *((_OWORD *)v91 - 12);
        long long v31 = *((_OWORD *)v91 - 10);
        *((_OWORD *)v28 + 5) = *((_OWORD *)v91 - 11);
        *((_OWORD *)v28 + 6) = v31;
        *((_OWORD *)v28 + 3) = v29;
        *((_OWORD *)v28 + 4) = v30;
        long long v32 = *((_OWORD *)v91 - 9);
        long long v33 = *((_OWORD *)v91 - 8);
        long long v34 = *((_OWORD *)v91 - 7);
        v28[20] = *(v91 - 12);
        *((_OWORD *)v28 + 8) = v33;
        *((_OWORD *)v28 + 9) = v34;
        *((_OWORD *)v28 + 7) = v32;
        *uint64_t v91 = v9;
      }
      v6 += 136;
      --v8;
    }
    while (v8);
    uint64_t v0 = v89;
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (qword_1EB810B30 != -1) {
    swift_once();
  }
  uint64_t v35 = sub_1AFFCA8A8();
  __swift_project_value_buffer(v35, (uint64_t)qword_1EB810AF0);
  uint64_t v36 = v0[30];
  uint64_t v37 = v0[31];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  os_log_type_t v38 = sub_1AFFCA888();
  os_log_type_t v39 = sub_1AFFCB478();
  if (os_log_type_enabled(v38, v39))
  {
    os_log_type_t v85 = v39;
    log = v38;
    uint64_t v40 = swift_slowAlloc();
    uint64_t v84 = swift_slowAlloc();
    uint64_t v95 = v84;
    *(_DWORD *)uint64_t v40 = 136315650;
    uint64_t v41 = MEMORY[0x1E4FBC860];
    uint64_t v88 = v40;
    uint64_t v86 = v36;
    if (v4)
    {
      uint64_t v42 = v0[40];
      uint64_t v92 = MEMORY[0x1E4FBC860];
      sub_1AFD9DA10(0, v4, 0);
      uint64_t v41 = v92;
      unint64_t v43 = *(void *)(v92 + 16);
      uint64_t v44 = 16 * v43;
      uint64_t v45 = (uint64_t *)(v42 + 40);
      do
      {
        uint64_t v46 = *(v45 - 1);
        uint64_t v47 = *v45;
        int64_t v48 = v43 + 1;
        unint64_t v49 = *(void *)(v92 + 24);
        sub_1AFFC8E38();
        if (v43 >= v49 >> 1) {
          sub_1AFD9DA10(v49 > 1, v48, 1);
        }
        *(void *)(v92 + 16) = v48;
        uint64_t v50 = v92 + v44;
        *(void *)(v50 + 32) = v46;
        *(void *)(v50 + 40) = v47;
        v44 += 16;
        v45 += 17;
        ++v43;
        --v4;
      }
      while (v4);
      uint64_t v0 = v89;
      uint64_t v40 = v88;
    }
    v0[33] = v41;
    sub_1AFE28A20(0, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1AFD371B8();
    uint64_t v51 = sub_1AFFCAD88();
    unint64_t v53 = v52;
    swift_bridgeObjectRelease();
    v0[34] = sub_1AFD36BA8(v51, v53, &v95);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v40 + 12) = 2080;
    int64_t v54 = *(void *)(v37 + 16);
    uint64_t v55 = MEMORY[0x1E4FBC860];
    if (v54)
    {
      uint64_t v93 = MEMORY[0x1E4FBC860];
      sub_1AFFC8E38();
      sub_1AFD9DA10(0, v54, 0);
      uint64_t v56 = 0;
      uint64_t v55 = v93;
      unint64_t v57 = *(void *)(v93 + 16);
      uint64_t v58 = 16 * v57;
      do
      {
        uint64_t v59 = *(void *)(v37 + v56 + 32);
        uint64_t v60 = *(void *)(v37 + v56 + 40);
        unint64_t v61 = *(void *)(v93 + 24);
        int64_t v62 = v57 + 1;
        sub_1AFFC8E38();
        if (v57 >= v61 >> 1) {
          sub_1AFD9DA10(v61 > 1, v62, 1);
        }
        *(void *)(v93 + 16) = v62;
        uint64_t v63 = v93 + v58;
        *(void *)(v63 + 32) = v59;
        *(void *)(v63 + 40) = v60;
        v58 += 16;
        v56 += 136;
        ++v57;
        --v54;
      }
      while (v54);
      swift_bridgeObjectRelease();
      uint64_t v0 = v89;
      uint64_t v40 = v88;
    }
    v91[5] = v55;
    uint64_t v64 = sub_1AFFCAD88();
    unint64_t v66 = v65;
    swift_bridgeObjectRelease();
    v91[6] = sub_1AFD36BA8(v64, v66, &v95);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v40 + 22) = 2080;
    int64_t v67 = *(void *)(v86 + 16);
    uint64_t v68 = MEMORY[0x1E4FBC860];
    if (v67)
    {
      uint64_t v94 = MEMORY[0x1E4FBC860];
      sub_1AFFC8E38();
      sub_1AFD9DA10(0, v67, 0);
      uint64_t v69 = 0;
      uint64_t v68 = v94;
      unint64_t v70 = *(void *)(v94 + 16);
      uint64_t v71 = 16 * v70;
      do
      {
        uint64_t v72 = *(void *)(v86 + v69 + 32);
        uint64_t v73 = *(void *)(v86 + v69 + 40);
        unint64_t v74 = *(void *)(v94 + 24);
        int64_t v75 = v70 + 1;
        sub_1AFFC8E38();
        if (v70 >= v74 >> 1) {
          sub_1AFD9DA10(v74 > 1, v75, 1);
        }
        *(void *)(v94 + 16) = v75;
        uint64_t v76 = v94 + v71;
        *(void *)(v76 + 32) = v72;
        *(void *)(v76 + 40) = v73;
        v71 += 16;
        v69 += 136;
        ++v70;
        --v67;
      }
      while (v67);
      swift_bridgeObjectRelease();
      uint64_t v0 = v89;
      uint64_t v40 = v88;
    }
    v0[37] = v68;
    uint64_t v77 = sub_1AFFCAD88();
    unint64_t v79 = v78;
    swift_bridgeObjectRelease();
    v0[38] = sub_1AFD36BA8(v77, v79, &v95);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    os_log_type_t v38 = log;
    _os_log_impl(&dword_1AFD01000, log, v85, "Sectioned stocks=[%s] into watched=[%s], notWatched=[%s]", (uint8_t *)v40, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v84, -1, -1);
    MEMORY[0x1B3E8F0D0](v40, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  uint64_t v80 = v0[39];
  swift_beginAccess();
  uint64_t v81 = v0[31];
  swift_beginAccess();
  sub_1AFF4A3D4(v81, v0[30], v80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v82 = (uint64_t (*)(void))v0[1];
  return v82();
}

uint64_t static SymbolQuery.findIntentDescription.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v35 = a1;
  uint64_t v36 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27608];
  sub_1AFF5367C(0, &qword_1EB816B00, MEMORY[0x1E4F27608], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v1 - 8);
  os_log_type_t v38 = (char *)v30 - v2;
  uint64_t v3 = sub_1AFFC9528();
  uint64_t v39 = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1AFFC9A78();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v8 = sub_1AFFCAE58();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v9 = sub_1AFFC9548();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  long long v34 = (char *)v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  uint64_t v12 = *MEMORY[0x1E4F275D0];
  uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
  v37(v6, v12, v3);
  sub_1AFFC9558();
  long long v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  v10 += 56;
  v13(v38, 1, 1, v9);
  sub_1AFF5367C(0, &qword_1E9AFA0E0, v36, MEMORY[0x1E4FBBE00]);
  uint64_t v14 = *(void *)(v10 + 16);
  unint64_t v15 = (*(unsigned __int8 *)(v10 + 24) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 24);
  uint64_t v16 = v14;
  uint64_t v17 = swift_allocObject();
  uint64_t v33 = v17;
  *(_OWORD *)(v17 + 16) = xmmword_1AFFD53E0;
  uint64_t v36 = (uint64_t (*)(uint64_t))(v17 + v15);
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  unsigned int v31 = v12;
  uint64_t v18 = v39;
  long long v19 = v37;
  v37(v6, v12, v39);
  sub_1AFFC9558();
  uint64_t v32 = v16;
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  v19(v6, v12, v18);
  sub_1AFFC9558();
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  uint64_t v20 = v31;
  uint64_t v21 = v39;
  v19(v6, v31, v39);
  sub_1AFFC9558();
  uint64_t v22 = v32;
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  uint64_t v23 = v21;
  uint64_t v24 = v21;
  unint64_t v25 = v37;
  v37(v6, v20, v23);
  sub_1AFFC9558();
  v30[1] = (char *)v36 + 4 * v22;
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  v25(v6, v20, v24);
  sub_1AFFC9558();
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  uint64_t v26 = v39;
  v25(v6, v20, v39);
  sub_1AFFC9558();
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  v25(v6, v20, v26);
  sub_1AFFC9558();
  uint64_t v27 = v35;
  sub_1AFFC8CE8();
  uint64_t v28 = sub_1AFFC8CD8();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v27, 0, 1, v28);
}

uint64_t sub_1AFF4DB04()
{
  sub_1AFF51988();
  uint64_t v1 = v0;
  __swift_allocate_value_buffer(v0, qword_1E9AFCCD8);
  __swift_project_value_buffer(v1, (uint64_t)qword_1E9AFCCD8);
  type metadata accessor for SymbolEntity();
  sub_1AFF53204(&qword_1EB810BC0, (void (*)(uint64_t))type metadata accessor for SymbolEntity);
  return sub_1AFFC8DE8();
}

uint64_t sub_1AFF4DBBC()
{
  sub_1AFF53400();
  swift_getKeyPath();
  sub_1AFFC8D68();
  sub_1AFF53204(&qword_1EB810BC0, (void (*)(uint64_t))type metadata accessor for SymbolEntity);
  uint64_t v0 = sub_1AFFC8E48();
  swift_release();
  swift_getKeyPath();
  sub_1AFFC8E48();
  sub_1AFFC8D68();
  uint64_t v1 = sub_1AFFC8E48();
  swift_release();
  sub_1AFE28A20(0, (unint64_t *)&qword_1EB8183E0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1AFFD88D0;
  *(void *)(v2 + 32) = v0;
  *(void *)(v2 + 40) = v1;
  sub_1AFFCB1E8();
  type metadata accessor for SymbolEntity();
  sub_1AFFC8E48();
  uint64_t v3 = sub_1AFFC8FE8();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v3;
}

uint64_t sub_1AFF4DD70()
{
  return sub_1AFF4DE18();
}

uint64_t sub_1AFF4DD9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_1AFF4E138(a1, a2, (uint64_t)sub_1AFF537E0, a3);
}

uint64_t sub_1AFF4DDC4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1AFF4E1D8(a1, (uint64_t)sub_1AFF537DC, a2);
}

uint64_t sub_1AFF4DDEC()
{
  return sub_1AFF4DE18();
}

uint64_t sub_1AFF4DE18()
{
  sub_1AFF534D4();
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  uint64_t v3 = v2;
  MEMORY[0x1F4188790](v0);
  long long v19 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v18 - v6;
  sub_1AFF5356C();
  swift_allocObject();
  sub_1AFFC8D18();
  type metadata accessor for SymbolEntity();
  sub_1AFF53204(&qword_1EB810BC0, (void (*)(uint64_t))type metadata accessor for SymbolEntity);
  sub_1AFFC9028();
  swift_release();
  sub_1AFF535F0();
  swift_allocObject();
  sub_1AFFC8CB8();
  sub_1AFFC9028();
  swift_release();
  sub_1AFF5367C(0, &qword_1E9AFCDD8, (uint64_t (*)(uint64_t))sub_1AFF534D4, MEMORY[0x1E4FBBE00]);
  uint64_t v8 = *(void *)(v2 + 72);
  unint64_t v9 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1AFFD0610;
  unint64_t v11 = v10 + v9;
  uint64_t v12 = *(void (**)(unint64_t, char *, uint64_t))(v3 + 16);
  v12(v11, v7, v1);
  unint64_t v13 = v11 + v8;
  uint64_t v14 = v19;
  v12(v13, v19, v1);
  sub_1AFD823E8();
  sub_1AFD74388();
  uint64_t v15 = sub_1AFFC9018();
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void (**)(char *, uint64_t))(v3 + 8);
  v16(v14, v1);
  v16(v7, v1);
  return v15;
}

uint64_t sub_1AFF4E110@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_1AFF4E138(a1, a2, (uint64_t)sub_1AFF536F4, a3);
}

uint64_t sub_1AFF4E138@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, void *a4@<X8>)
{
  uint64_t KeyPath = swift_getKeyPath();
  unint64_t v9 = (void *)swift_allocObject();
  v9[2] = KeyPath;
  v9[3] = a1;
  v9[4] = a2;
  *a4 = a1;
  a4[1] = a2;
  a4[2] = a3;
  a4[3] = v9;
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_1AFF4E1B0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1AFF4E1D8(a1, (uint64_t)sub_1AFF536E4, a2);
}

uint64_t sub_1AFF4E1D8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X3>, void *a3@<X8>)
{
  uint64_t v6 = *a1;
  uint64_t v5 = a1[1];
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v8 = (void *)swift_allocObject();
  long long v8[2] = KeyPath;
  v8[3] = v6;
  v8[4] = v5;
  *a3 = v6;
  a3[1] = v5;
  a3[2] = a2;
  a3[3] = v8;
  return swift_bridgeObjectRetain_n();
}

uint64_t static SymbolQuery.properties.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1AFF4E73C(&qword_1E9AF8E18, (uint64_t (*)(void))sub_1AFF51988, (uint64_t)qword_1E9AFCCD8, a1);
}

uint64_t sub_1AFF4E284()
{
  sub_1AFF51A24(0);
  uint64_t v1 = v0;
  __swift_allocate_value_buffer(v0, qword_1E9AFCCF0);
  __swift_project_value_buffer(v1, (uint64_t)qword_1E9AFCCF0);
  type metadata accessor for SymbolEntity();
  sub_1AFF53204(&qword_1EB810BC0, (void (*)(uint64_t))type metadata accessor for SymbolEntity);
  return sub_1AFFC8F48();
}

uint64_t sub_1AFF4E334()
{
  sub_1AFF53340(0);
  uint64_t v1 = v0;
  uint64_t v35 = *(void *)(v0 - 8);
  uint64_t v2 = v35;
  uint64_t v31 = v35;
  MEMORY[0x1F4188790](v0);
  uint64_t v4 = (char *)v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v36 = (char *)v30 - v6;
  MEMORY[0x1F4188790](v7);
  unint64_t v9 = (char *)v30 - v8;
  MEMORY[0x1F4188790](v10);
  long long v34 = (char *)v30 - v11;
  swift_getKeyPath();
  sub_1AFF53204(&qword_1EB810BC0, (void (*)(uint64_t))type metadata accessor for SymbolEntity);
  sub_1AFF53204((unint64_t *)&qword_1E9AFA188, (void (*)(uint64_t))sub_1AFD823E8);
  sub_1AFFC9038();
  uint64_t v12 = type metadata accessor for SymbolEntity();
  sub_1AFFC9088();
  unint64_t v13 = *(void (**)(char *, uint64_t))(v2 + 8);
  uint64_t v33 = v9;
  v13(v9, v1);
  swift_getKeyPath();
  uint64_t v14 = v36;
  sub_1AFFC9038();
  v30[1] = v12;
  sub_1AFFC9088();
  uint64_t v32 = v13;
  v13(v14, v1);
  swift_getKeyPath();
  sub_1AFFC9038();
  sub_1AFFC9088();
  v13(v4, v1);
  sub_1AFF5367C(0, &qword_1E9AFCDB0, (uint64_t (*)(uint64_t))sub_1AFF53340, MEMORY[0x1E4FBBE00]);
  uint64_t v15 = *(void *)(v35 + 72);
  uint64_t v16 = v31;
  unint64_t v17 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  uint64_t v18 = 2 * v15;
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1AFFD0DC0;
  unint64_t v20 = v19 + v17;
  uint64_t v21 = *(void (**)(unint64_t, char *, uint64_t))(v16 + 16);
  uint64_t v22 = v34;
  v21(v20, v34, v1);
  unint64_t v23 = v20 + v15;
  uint64_t v24 = v33;
  v21(v23, v33, v1);
  unint64_t v25 = v20 + v18;
  uint64_t v26 = v36;
  v21(v25, v36, v1);
  uint64_t v27 = sub_1AFFC9078();
  swift_bridgeObjectRelease();
  uint64_t v28 = v32;
  v32(v26, v1);
  v28(v24, v1);
  v28(v22, v1);
  return v27;
}

uint64_t static SymbolQuery.sortingOptions.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1AFF4E73C(&qword_1E9AF8E20, (uint64_t (*)(void))sub_1AFF51A24, (uint64_t)qword_1E9AFCCF0, a1);
}

uint64_t sub_1AFF4E73C@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = a2(0);
  uint64_t v8 = __swift_project_value_buffer(v7, a3);
  unint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v9(a4, v8, v7);
}

uint64_t SymbolQuery.entities(matching:mode:sortedBy:limit:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  *(unsigned char *)(v7 + 721) = a6;
  *(void *)(v7 + 584) = a5;
  *(void *)(v7 + 576) = a4;
  *(unsigned char *)(v7 + 720) = a3;
  *(void *)(v7 + 568) = a2;
  *(void *)(v7 + 560) = a1;
  *(_OWORD *)(v7 + 592) = *(_OWORD *)v6;
  *(void *)(v7 + 608) = *(void *)(v6 + 16);
  return MEMORY[0x1F4188298](sub_1AFF4E820, 0, 0);
}

uint64_t sub_1AFF4E820()
{
  uint64_t v30 = v0;
  if (qword_1EB810B30 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1AFFCA8A8();
  *(void *)(v0 + 616) = __swift_project_value_buffer(v1, (uint64_t)qword_1EB810AF0);
  swift_bridgeObjectRetain_n();
  sub_1AFFC8E38();
  uint64_t v2 = sub_1AFFCA888();
  os_log_type_t v3 = sub_1AFFCB478();
  if (os_log_type_enabled(v2, v3))
  {
    char v27 = *(unsigned char *)(v0 + 721);
    uint64_t v28 = *(void *)(v0 + 584);
    uint64_t v4 = *(void *)(v0 + 576);
    uint64_t v5 = *(void *)(v0 + 568);
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v29 = v7;
    *(_DWORD *)uint64_t v6 = 134218754;
    *(void *)(v0 + 528) = *(void *)(v5 + 16);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    char v8 = sub_1AFFC8F38();
    BOOL v9 = (v8 & 1) == 0;
    if (v8) {
      uint64_t v10 = 6581857;
    }
    else {
      uint64_t v10 = 29295;
    }
    if (v9) {
      unint64_t v11 = 0xE200000000000000;
    }
    else {
      unint64_t v11 = 0xE300000000000000;
    }
    *(void *)(v0 + 536) = sub_1AFD36BA8(v10, v11, &v29);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 22) = 2048;
    uint64_t v12 = *(void *)(v4 + 16);
    swift_bridgeObjectRelease();
    *(void *)(v0 + 544) = v12;
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 32) = 2048;
    uint64_t v13 = v28;
    if (v27) {
      uint64_t v13 = 0;
    }
    *(void *)(v0 + 552) = v13;
    sub_1AFFCB688();
    _os_log_impl(&dword_1AFD01000, v2, v3, "Querying stocks for symbol entities matching property queryCount=%ld, comparatorMode=%s, sortCount=%ld, limit=%ld", (uint8_t *)v6, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v7, -1, -1);
    MEMORY[0x1B3E8F0D0](v6, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
  }

  uint64_t v14 = *(void **)(v0 + 568);
  uint64_t v15 = v14[2];
  *(void *)(v0 + 624) = v15;
  if (v15)
  {
    *(_OWORD *)(v0 + 632) = 0u;
    uint64_t v16 = v14[4];
    *(void *)(v0 + 648) = v16;
    unint64_t v17 = v14[5];
    *(void *)(v0 + 656) = v17;
    *(void *)(v0 + 664) = v14[6];
    *(void *)(v0 + 672) = v14[7];
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    sub_1AFFC8E38();
    uint64_t v18 = sub_1AFFCA888();
    os_log_type_t v19 = sub_1AFFCB458();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      uint64_t v29 = v21;
      *(_DWORD *)uint64_t v20 = 136315138;
      sub_1AFFC8E38();
      *(void *)(v20 + 4) = sub_1AFD36BA8(v16, v17, &v29);
      swift_bridgeObjectRelease_n();
      swift_release();
      _os_log_impl(&dword_1AFD01000, v18, v19, "Querying stocks for symbol entities matching property query=%s", (uint8_t *)v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1B3E8F0D0](v21, -1, -1);
      MEMORY[0x1B3E8F0D0](v20, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_release();
    }

    sub_1AFFC8E48();
    sub_1AFFC8E48();
    sub_1AFFC8E48();
    sub_1AFFC8998();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v24 = *(void *)(v0 + 312);
    uint64_t v25 = *(void *)(v0 + 320);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 288), v24);
    *(void *)(v0 + 680) = sub_1AFD4EE28(v16, v17, v24, v25);
    uint64_t v26 = (void *)swift_task_alloc();
    *(void *)(v0 + 688) = v26;
    void *v26 = v0;
    v26[1] = sub_1AFF4EDA4;
    return MEMORY[0x1F415EBC8](v0 + 360);
  }
  else
  {
    type metadata accessor for SymbolEntity();
    sub_1AFF53204((unint64_t *)&qword_1EB816B20, (void (*)(uint64_t))type metadata accessor for SymbolEntity);
    sub_1AFFC8DA8();
    uint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
    return v22();
  }
}

uint64_t sub_1AFF4EDA4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 696) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    os_log_type_t v3 = sub_1AFE211E4;
  }
  else
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v2 + 288);
    os_log_type_t v3 = sub_1AFF4EEF4;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1AFF4EEF4()
{
  unint64_t v196 = v0;
  uint64_t v1 = *(void *)(v0 + 360);
  uint64_t v2 = *(void *)(v1 + 16);
  sub_1AFD764A0();
  uint64_t v3 = sub_1AFFCB378();
  *(void *)(v0 + 352) = v3;
  if (v2)
  {
    uint64_t v4 = v2 - 1;
    for (uint64_t i = 32; ; i += 136)
    {
      *(_OWORD *)(v0 + 16) = *(_OWORD *)(v1 + i);
      long long v6 = *(_OWORD *)(v1 + i + 16);
      long long v7 = *(_OWORD *)(v1 + i + 32);
      long long v8 = *(_OWORD *)(v1 + i + 64);
      *(_OWORD *)(v0 + 64) = *(_OWORD *)(v1 + i + 48);
      *(_OWORD *)(v0 + 80) = v8;
      *(_OWORD *)(v0 + 32) = v6;
      *(_OWORD *)(v0 + 48) = v7;
      long long v9 = *(_OWORD *)(v1 + i + 80);
      long long v10 = *(_OWORD *)(v1 + i + 96);
      long long v11 = *(_OWORD *)(v1 + i + 112);
      *(void *)(v0 + 144) = *(void *)(v1 + i + 128);
      *(_OWORD *)(v0 + 112) = v10;
      *(_OWORD *)(v0 + 128) = v11;
      *(_OWORD *)(v0 + 96) = v9;
      sub_1AFD76370(v0 + 16);
      sub_1AFE227C0((uint64_t)v193, v0 + 16);
      long long v12 = v193[7];
      *(_OWORD *)(v0 + 248) = v193[6];
      *(_OWORD *)(v0 + 264) = v12;
      *(void *)(v0 + 280) = v194;
      long long v13 = v193[3];
      *(_OWORD *)(v0 + 184) = v193[2];
      *(_OWORD *)(v0 + 200) = v13;
      long long v14 = v193[5];
      *(_OWORD *)(v0 + 216) = v193[4];
      *(_OWORD *)(v0 + 232) = v14;
      long long v15 = v193[1];
      *(_OWORD *)(v0 + 152) = v193[0];
      *(_OWORD *)(v0 + 168) = v15;
      sub_1AFD76408(v0 + 152);
      if (!v4) {
        break;
      }
      --v4;
    }
    swift_bridgeObjectRelease();
    uint64_t v16 = *(void *)(v0 + 352);
  }
  else
  {
    uint64_t v16 = v3;
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain_n();
  sub_1AFFC8E38();
  sub_1AFFC8E48();
  unint64_t v17 = sub_1AFFCA888();
  os_log_type_t v18 = sub_1AFFCB458();
  BOOL v19 = os_log_type_enabled(v17, v18);
  unint64_t v20 = *(void *)(v0 + 656);
  uint64_t v177 = (uint64_t *)(v0 + 488);
  unint64_t v180 = v0;
  if (v19)
  {
    os_log_type_t v166 = v18;
    log = v17;
    int64_t v21 = v0 + 496;
    uint64_t v22 = *(void *)(v0 + 648);
    uint64_t v23 = swift_slowAlloc();
    uint64_t v162 = swift_slowAlloc();
    *(void *)(v0 + 488) = v162;
    *(_DWORD *)uint64_t v23 = 136315394;
    sub_1AFFC8E38();
    uint64_t v24 = v22;
    uint64_t v25 = (uint64_t *)(v0 + 504);
    *(void *)(v0 + 496) = sub_1AFD36BA8(v24, v20, (uint64_t *)(v0 + 488));
    sub_1AFFCB688();
    swift_bridgeObjectRelease_n();
    swift_release();
    uint64_t v170 = (uint8_t *)v23;
    *(_WORD *)(v23 + 12) = 2080;
    int64_t v26 = *(void *)(v16 + 16);
    uint64_t v27 = MEMORY[0x1E4FBC860];
    if (v26)
    {
      *uint64_t v25 = MEMORY[0x1E4FBC860];
      sub_1AFD9DA10(0, v26, 0);
      uint64_t v28 = *v25;
      unint64_t v29 = sub_1AFD73DB0(v16);
      uint64_t v31 = v30;
      char v33 = v32 & 1;
      uint64_t v181 = (uint64_t *)(v0 + 504);
      uint64_t v185 = v16 + 56;
      while ((v29 & 0x8000000000000000) == 0 && (uint64_t)v29 < 1 << *(unsigned char *)(v16 + 32))
      {
        if (((*(void *)(v185 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v29) & 1) == 0) {
          goto LABEL_108;
        }
        if (*(_DWORD *)(v16 + 36) != v31) {
          goto LABEL_109;
        }
        char v188 = v33;
        long long v34 = (unint64_t *)(*(void *)(v16 + 48) + 136 * v29);
        unint64_t v0 = *v34;
        int64_t v21 = v34[1];
        *uint64_t v25 = v28;
        uint64_t v35 = v16;
        unint64_t v36 = *(void *)(v28 + 16);
        unint64_t v20 = *(void *)(v28 + 24);
        sub_1AFFC8E38();
        if (v36 >= v20 >> 1)
        {
          sub_1AFD9DA10(v20 > 1, v36 + 1, 1);
          uint64_t v28 = *v181;
        }
        *(void *)(v28 + 16) = v36 + 1;
        uint64_t v37 = v28 + 16 * v36;
        *(void *)(v37 + 32) = v0;
        *(void *)(v37 + 40) = v21;
        uint64_t v38 = sub_1AFD73E54(v29, v31, v188 & 1, v35);
        unint64_t v29 = v38;
        uint64_t v31 = v39;
        char v33 = v40 & 1;
        --v26;
        uint64_t v16 = v35;
        uint64_t v25 = v181;
        if (!v26)
        {
          uint64_t v27 = v28;
          sub_1AFD76098(v38, v39, v33);
          goto LABEL_19;
        }
      }
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
      goto LABEL_110;
    }
LABEL_19:
    unint64_t v0 = v180;
    *(void *)(v180 + 512) = v27;
    sub_1AFE28A20(0, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1AFD371B8();
    uint64_t v41 = sub_1AFFCAD88();
    unint64_t v43 = v42;
    swift_bridgeObjectRelease();
    *(void *)(v180 + 520) = sub_1AFD36BA8(v41, v43, v177);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    unint64_t v17 = log;
    _os_log_impl(&dword_1AFD01000, log, v166, "Successfully found stocks for symbol entities matching property query=%s, results=[%s]", v170, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v162, -1, -1);
    MEMORY[0x1B3E8F0D0](v170, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease_n();
  }

  uint64_t v44 = *(NSObject **)(v0 + 696);
  unint64_t v20 = *(void *)(v0 + 672);
  uint64_t v45 = *(void *)(v0 + 664);
  sub_1AFFC8E48();
  uint64_t v16 = sub_1AFE26220(v45, v20, v16);
  os_log_t loga = v44;
  swift_release();
  swift_retain_n();
  sub_1AFFC8E38();
  sub_1AFFC8E48();
  uint64_t v46 = sub_1AFFCA888();
  os_log_type_t v47 = sub_1AFFCB458();
  BOOL v48 = os_log_type_enabled(v46, v47);
  int64_t v21 = *(void *)(v0 + 672);
  unint64_t v29 = *(void *)(v0 + 656);
  if (v48)
  {
    os_log_type_t v159 = v47;
    uint64_t v167 = v46;
    unint64_t v20 = v0 + 464;
    uint64_t v49 = *(void *)(v0 + 648);
    uint64_t v50 = swift_slowAlloc();
    uint64_t v157 = swift_slowAlloc();
    *(void *)(v0 + 448) = v157;
    *(_DWORD *)uint64_t v50 = 136315394;
    sub_1AFFC8E38();
    uint64_t v51 = v49;
    unint64_t v52 = (uint64_t *)(v0 + 448);
    *(void *)(v0 + 456) = sub_1AFD36BA8(v51, v29, (uint64_t *)(v0 + 448));
    sub_1AFFCB688();
    swift_bridgeObjectRelease_n();
    swift_release();
    uint64_t v163 = (uint8_t *)v50;
    *(_WORD *)(v50 + 12) = 2080;
    int64_t v53 = *(void *)(v16 + 16);
    uint64_t v54 = MEMORY[0x1E4FBC860];
    if (v53)
    {
      uint64_t v171 = (uint64_t *)(v0 + 448);
      *(void *)unint64_t v20 = MEMORY[0x1E4FBC860];
      sub_1AFD9DA10(0, v53, 0);
      uint64_t v55 = *(void *)v20;
      unint64_t v29 = sub_1AFD73DB0(v16);
      uint64_t v57 = v56;
      char v59 = v58 & 1;
      uint64_t v182 = (void *)(v0 + 464);
      uint64_t v60 = (void *)(v0 + 464);
      while ((v29 & 0x8000000000000000) == 0 && (uint64_t)v29 < 1 << *(unsigned char *)(v16 + 32))
      {
        if (((*(void *)(v16 + 56 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v29) & 1) == 0) {
          goto LABEL_111;
        }
        if (*(_DWORD *)(v16 + 36) != v57) {
          goto LABEL_112;
        }
        char v189 = v59;
        unint64_t v61 = (int64_t *)(*(void *)(v16 + 48) + 136 * v29);
        int64_t v21 = *v61;
        unint64_t v20 = v61[1];
        void *v60 = v55;
        unint64_t v0 = *(void *)(v55 + 16);
        unint64_t v62 = *(void *)(v55 + 24);
        sub_1AFFC8E38();
        if (v0 >= v62 >> 1)
        {
          sub_1AFD9DA10(v62 > 1, v0 + 1, 1);
          uint64_t v55 = *v182;
        }
        *(void *)(v55 + 16) = v0 + 1;
        uint64_t v63 = v55 + 16 * v0;
        *(void *)(v63 + 32) = v21;
        *(void *)(v63 + 40) = v20;
        uint64_t v64 = sub_1AFD73E54(v29, v57, v189 & 1, v16);
        unint64_t v29 = v64;
        uint64_t v57 = v65;
        char v59 = v66 & 1;
        --v53;
        uint64_t v60 = v182;
        if (!v53)
        {
          uint64_t v54 = v55;
          sub_1AFD76098(v64, v65, v59);
          unint64_t v0 = v180;
          unint64_t v52 = v171;
          goto LABEL_32;
        }
      }
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
      goto LABEL_113;
    }
LABEL_32:
    *(void *)(v0 + 472) = v54;
    sub_1AFE28A20(0, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1AFD371B8();
    uint64_t v67 = sub_1AFFCAD88();
    unint64_t v20 = v68;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 480) = sub_1AFD36BA8(v67, v20, v52);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    swift_release_n();
    uint64_t v46 = v167;
    _os_log_impl(&dword_1AFD01000, v167, v159, "Filtered stocks for symbol entities matching property query=%s, filtered=[%s]", v163, 0x16u);
    unint64_t v29 = v157;
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v157, -1, -1);
    MEMORY[0x1B3E8F0D0](v163, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release_n();
  }

  uint64_t v69 = *(void *)(v0 + 632);
  if (v69)
  {
    if (*(unsigned char *)(v0 + 720))
    {
      uint64_t v16 = sub_1AFD6EE90(v16, v69);
    }
    else
    {
      uint64_t v70 = sub_1AFD70C00(v16, v69);
      swift_release();
      uint64_t v16 = v70;
    }
    swift_bridgeObjectRetain_n();
    uint64_t v73 = sub_1AFFCA888();
    os_log_type_t v74 = sub_1AFFCB458();
    if (os_log_type_enabled(v73, v74))
    {
      os_log_type_t v160 = v74;
      uint64_t v168 = v73;
      int64_t v75 = (_DWORD *)swift_slowAlloc();
      uint64_t v178 = (uint64_t *)(v0 + 408);
      uint64_t v158 = swift_slowAlloc();
      *(void *)(v0 + 408) = v158;
      uint64_t v164 = v75;
      *int64_t v75 = 136315394;
      int64_t v21 = *(void *)(v16 + 16);
      uint64_t v76 = MEMORY[0x1E4FBC860];
      if (v21)
      {
        uint64_t v77 = (uint64_t *)(v0 + 416);
        *(void *)(v0 + 416) = MEMORY[0x1E4FBC860];
        sub_1AFFC8E38();
        sub_1AFD9DA10(0, v21, 0);
        uint64_t v76 = *(void *)(v0 + 416);
        uint64_t v78 = sub_1AFD73DB0(v16);
        uint64_t v80 = v79;
        char v82 = v81 & 1;
        while ((v78 & 0x8000000000000000) == 0 && v78 < 1 << *(unsigned char *)(v16 + 32))
        {
          if (((*(void *)(v16 + 56 + (((unint64_t)v78 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v78) & 1) == 0) {
            goto LABEL_114;
          }
          if (*(_DWORD *)(v16 + 36) != v80) {
            goto LABEL_115;
          }
          char v190 = v82;
          uint64_t v83 = (uint64_t *)(*(void *)(v16 + 48) + 136 * v78);
          unint64_t v20 = v83[1];
          uint64_t v186 = *v83;
          uint64_t *v77 = v76;
          unint64_t v0 = *(void *)(v76 + 16);
          unint64_t v29 = *(void *)(v76 + 24);
          sub_1AFFC8E38();
          if (v0 >= v29 >> 1)
          {
            sub_1AFD9DA10(v29 > 1, v0 + 1, 1);
            uint64_t v76 = *v77;
          }
          *(void *)(v76 + 16) = v0 + 1;
          uint64_t v84 = v76 + 16 * v0;
          *(void *)(v84 + 32) = v186;
          *(void *)(v84 + 40) = v20;
          uint64_t v85 = sub_1AFD73E54(v78, v80, v190 & 1, v16);
          uint64_t v78 = v85;
          uint64_t v80 = v86;
          char v82 = v87 & 1;
          if (!--v21)
          {
            sub_1AFD76098(v85, v86, v82);
            swift_bridgeObjectRelease();
            unint64_t v0 = v180;
            goto LABEL_52;
          }
        }
LABEL_113:
        __break(1u);
LABEL_114:
        __break(1u);
LABEL_115:
        __break(1u);
        goto LABEL_116;
      }
LABEL_52:
      unint64_t v20 = v0 + 432;
      *(void *)(v0 + 424) = v76;
      sub_1AFE28A20(0, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
      sub_1AFD371B8();
      uint64_t v88 = sub_1AFFCAD88();
      unint64_t v90 = v89;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 432) = sub_1AFD36BA8(v88, v90, v178);
      sub_1AFFCB688();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      *((_WORD *)v164 + 6) = 2080;
      char v91 = sub_1AFFC8F38();
      BOOL v92 = (v91 & 1) == 0;
      if (v91) {
        uint64_t v93 = 6581857;
      }
      else {
        uint64_t v93 = 29295;
      }
      if (v92) {
        unint64_t v94 = 0xE200000000000000;
      }
      else {
        unint64_t v94 = 0xE300000000000000;
      }
      *(void *)(v0 + 440) = sub_1AFD36BA8(v93, v94, v178);
      sub_1AFFCB688();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AFD01000, v168, v160, "Combined stock query results into accumulated results=[%s], comparatorMode=%s", (uint8_t *)v164, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1B3E8F0D0](v158, -1, -1);
      MEMORY[0x1B3E8F0D0](v164, -1, -1);

      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    uint64_t v71 = sub_1AFFCA888();
    os_log_type_t v72 = sub_1AFFCB458();
    if (os_log_type_enabled(v71, v72))
    {
      unint64_t v20 = swift_slowAlloc();
      *(_WORD *)unint64_t v20 = 0;
      _os_log_impl(&dword_1AFD01000, v71, v72, "No existing result for symbol property queries, so storing first results", (uint8_t *)v20, 2u);
      MEMORY[0x1B3E8F0D0](v20, -1, -1);

      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_release();
    }
  }
  uint64_t v95 = *(void *)(v0 + 640) + 1;
  if (v95 == *(void *)(v0 + 624))
  {
    p_isa = (void *)(v0 + 392);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain_n();
    unint64_t v29 = sub_1AFFCA888();
    os_log_type_t v97 = sub_1AFFCB478();
    if (os_log_type_enabled((os_log_t)v29, v97))
    {
      os_log_type_t v183 = v97;
      double v98 = (uint8_t *)swift_slowAlloc();
      uint64_t v172 = swift_slowAlloc();
      v195[0] = v172;
      *(_DWORD *)double v98 = 136315138;
      int64_t v21 = *(void *)(v16 + 16);
      uint64_t v99 = MEMORY[0x1E4FBC860];
      if (v21)
      {
        uint64_t v161 = v98;
        unint64_t v165 = v29;
        os_log_t v169 = (os_log_t)(v0 + 392);
        *(void *)&v193[0] = MEMORY[0x1E4FBC860];
        sub_1AFD9DA10(0, v21, 0);
        uint64_t v99 = *(void *)&v193[0];
        uint64_t v100 = sub_1AFD73DB0(v16);
        uint64_t v102 = v101;
        char v104 = v103 & 1;
        while ((v100 & 0x8000000000000000) == 0 && v100 < 1 << *(unsigned char *)(v16 + 32))
        {
          if (((*(void *)(v16 + 56 + (((unint64_t)v100 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v100) & 1) == 0) {
            goto LABEL_117;
          }
          if (*(_DWORD *)(v16 + 36) != v102) {
            goto LABEL_118;
          }
          char v191 = v104;
          uint64_t v105 = (unint64_t *)(*(void *)(v16 + 48) + 136 * v100);
          unint64_t v29 = *v105;
          unint64_t v106 = v105[1];
          *(void *)&v193[0] = v99;
          unint64_t v0 = *(void *)(v99 + 16);
          unint64_t v107 = *(void *)(v99 + 24);
          unint64_t v20 = v0 + 1;
          sub_1AFFC8E38();
          if (v0 >= v107 >> 1)
          {
            sub_1AFD9DA10(v107 > 1, v0 + 1, 1);
            uint64_t v99 = *(void *)&v193[0];
          }
          *(void *)(v99 + 16) = v20;
          uint64_t v108 = v99 + 16 * v0;
          *(void *)(v108 + 32) = v29;
          *(void *)(v108 + 40) = v106;
          uint64_t v109 = sub_1AFD73E54(v100, v102, v191 & 1, v16);
          uint64_t v100 = v109;
          uint64_t v102 = v110;
          char v104 = v111 & 1;
          if (!--v21)
          {
            sub_1AFD76098(v109, v110, v104);
            unint64_t v0 = v180;
            unint64_t v29 = v165;
            p_isa = &v169->isa;
            double v98 = v161;
            goto LABEL_78;
          }
        }
LABEL_116:
        __break(1u);
LABEL_117:
        __break(1u);
LABEL_118:
        __break(1u);
        goto LABEL_119;
      }
LABEL_78:
      void *p_isa = v99;
      sub_1AFE28A20(0, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
      sub_1AFD371B8();
      uint64_t v122 = sub_1AFFCAD88();
      unint64_t v124 = v123;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 400) = sub_1AFD36BA8(v122, v124, v195);
      sub_1AFFCB688();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1AFD01000, (os_log_t)v29, v183, "Successfully applied all queries, found stocks=[%s]", v98, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1B3E8F0D0](v172, -1, -1);
      MEMORY[0x1B3E8F0D0](v98, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v125 = *(void *)(v0 + 576);
    uint64_t v126 = sub_1AFD70334(v16);
    swift_bridgeObjectRelease();
    *(void *)&v193[0] = v126;
    sub_1AFFC8E38();
    sub_1AFFC8E48();
    sub_1AFF52F80((uint64_t *)v193, v125);
    if (loga)
    {
      swift_bridgeObjectRelease();
      return swift_release();
    }
    uint64_t v127 = (void *)(v0 + 376);
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v128 = *(void *)&v193[0];
    swift_retain_n();
    uint64_t v129 = sub_1AFFCA888();
    os_log_type_t v130 = sub_1AFFCB478();
    if (os_log_type_enabled(v129, v130))
    {
      os_log_type_t v192 = v130;
      uint64_t v184 = (uint64_t *)(v0 + 384);
      uint64_t v131 = (uint8_t *)swift_slowAlloc();
      uint64_t v187 = swift_slowAlloc();
      v195[0] = v187;
      *(_DWORD *)uint64_t v131 = 136315138;
      int64_t v132 = *(void *)(v128 + 16);
      uint64_t v133 = MEMORY[0x1E4FBC860];
      if (v132)
      {
        uint64_t v173 = v131;
        os_log_t logb = v129;
        uint64_t v179 = (void *)(v0 + 376);
        *(void *)&v193[0] = MEMORY[0x1E4FBC860];
        sub_1AFD9DA10(0, v132, 0);
        uint64_t v133 = *(void *)&v193[0];
        unint64_t v134 = *(void *)(*(void *)&v193[0] + 16);
        uint64_t v135 = 16 * v134;
        uint64_t v136 = (uint64_t *)(v128 + 40);
        do
        {
          uint64_t v137 = *(v136 - 1);
          uint64_t v138 = *v136;
          *(void *)&v193[0] = v133;
          int64_t v139 = v134 + 1;
          unint64_t v140 = *(void *)(v133 + 24);
          sub_1AFFC8E38();
          if (v134 >= v140 >> 1)
          {
            sub_1AFD9DA10(v140 > 1, v139, 1);
            uint64_t v133 = *(void *)&v193[0];
          }
          *(void *)(v133 + 16) = v139;
          uint64_t v141 = v133 + v135;
          *(void *)(v141 + 32) = v137;
          *(void *)(v141 + 40) = v138;
          v135 += 16;
          v136 += 17;
          ++v134;
          --v132;
        }
        while (v132);
        uint64_t v127 = v179;
        unint64_t v0 = v180;
        uint64_t v131 = v173;
        uint64_t v129 = logb;
      }
      *uint64_t v127 = v133;
      sub_1AFE28A20(0, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
      sub_1AFD371B8();
      uint64_t v142 = sub_1AFFCAD88();
      unint64_t v144 = v143;
      swift_bridgeObjectRelease();
      *uint64_t v184 = sub_1AFD36BA8(v142, v144, v195);
      sub_1AFFCB688();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_1AFD01000, v129, v192, "Applied sorts to sortedStocks=[%s]", v131, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1B3E8F0D0](v187, -1, -1);
      MEMORY[0x1B3E8F0D0](v131, -1, -1);
    }
    else
    {
      swift_release_n();
    }

    if (*(unsigned char *)(v0 + 721)) {
      goto LABEL_104;
    }
    unint64_t v20 = sub_1AFD6F080(*(void *)(v0 + 584), v128);
    uint64_t v16 = v145;
    int64_t v21 = v146;
    unint64_t v29 = v147;
    if ((v147 & 1) == 0) {
      goto LABEL_94;
    }
    sub_1AFFCBD08();
    swift_unknownObjectRetain_n();
    uint64_t v148 = swift_dynamicCastClass();
    if (!v148)
    {
      swift_unknownObjectRelease();
      uint64_t v148 = MEMORY[0x1E4FBC860];
    }
    uint64_t v149 = *(void *)(v148 + 16);
    swift_release();
    if (!__OFSUB__(v29 >> 1, v21))
    {
      if (v149 == (v29 >> 1) - v21)
      {
        uint64_t v128 = swift_dynamicCastClass();
        if (!v128)
        {
          swift_unknownObjectRelease();
          uint64_t v128 = MEMORY[0x1E4FBC860];
        }
        goto LABEL_101;
      }
      goto LABEL_120;
    }
LABEL_119:
    __break(1u);
LABEL_120:
    swift_unknownObjectRelease();
LABEL_94:
    uint64_t v128 = sub_1AFD70188(v20, v16, v21, v29);
LABEL_101:
    swift_unknownObjectRelease();
    uint64_t v150 = sub_1AFFCA888();
    os_log_type_t v151 = sub_1AFFCB478();
    if (os_log_type_enabled(v150, v151))
    {
      uint64_t v152 = *(void *)(v0 + 584);
      uint64_t v153 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v153 = 134217984;
      *(void *)(v0 + 368) = v152;
      sub_1AFFCB688();
      _os_log_impl(&dword_1AFD01000, v150, v151, "Limited results down to limit=%ld", v153, 0xCu);
      MEMORY[0x1B3E8F0D0](v153, -1, -1);
    }

LABEL_104:
    *(void *)(v0 + 704) = v128;
    uint64_t v154 = *(void *)(v0 + 608);
    *(_OWORD *)(v0 + 328) = *(_OWORD *)(v0 + 592);
    *(void *)(v0 + 344) = v154;
    uint64_t v155 = swift_task_alloc();
    *(void *)(v0 + 712) = v155;
    *(void *)uint64_t v155 = v0;
    *(void *)(v155 + 8) = sub_1AFE210D0;
    *(void *)(v155 + 312) = *(void *)(v0 + 560);
    *(void *)(v155 + 320) = v128;
    *(_OWORD *)(v155 + 328) = *(_OWORD *)(v0 + 328);
    *(void *)(v155 + 344) = *(void *)(v0 + 344);
    return MEMORY[0x1F4188298](sub_1AFF4C180, 0, 0);
  }
  *(void *)(v0 + 640) = v95;
  *(void *)(v0 + 632) = v16;
  uint64_t v112 = (void *)(*(void *)(v0 + 568) + 32 * v95);
  uint64_t v113 = v112[4];
  *(void *)(v0 + 648) = v113;
  unint64_t v114 = v112[5];
  *(void *)(v0 + 656) = v114;
  *(void *)(v0 + 664) = v112[6];
  *(void *)(v0 + 672) = v112[7];
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v115 = sub_1AFFCA888();
  os_log_type_t v116 = sub_1AFFCB458();
  if (os_log_type_enabled(v115, v116))
  {
    uint64_t v117 = swift_slowAlloc();
    uint64_t v118 = swift_slowAlloc();
    *(void *)&v193[0] = v118;
    *(_DWORD *)uint64_t v117 = 136315138;
    sub_1AFFC8E38();
    *(void *)(v117 + 4) = sub_1AFD36BA8(v113, v114, (uint64_t *)v193);
    swift_bridgeObjectRelease_n();
    swift_release();
    _os_log_impl(&dword_1AFD01000, v115, v116, "Querying stocks for symbol entities matching property query=%s", (uint8_t *)v117, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v118, -1, -1);
    MEMORY[0x1B3E8F0D0](v117, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
  }

  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8998();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v119 = *(void *)(v0 + 312);
  uint64_t v120 = *(void *)(v0 + 320);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 288), v119);
  *(void *)(v0 + 680) = sub_1AFD4EE28(v113, v114, v119, v120);
  uint64_t v121 = (void *)swift_task_alloc();
  *(void *)(v0 + 688) = v121;
  *uint64_t v121 = v0;
  v121[1] = sub_1AFF4EDA4;
  return MEMORY[0x1F415EBC8](v0 + 360);
}

uint64_t sub_1AFF505B4@<X0>(uint64_t a1@<X8>)
{
  return sub_1AFF50624(&qword_1E9AF8E18, (uint64_t (*)(void))sub_1AFF51988, (uint64_t)qword_1E9AFCCD8, a1);
}

uint64_t sub_1AFF505EC@<X0>(uint64_t a1@<X8>)
{
  return sub_1AFF50624(&qword_1E9AF8E20, (uint64_t (*)(void))sub_1AFF51A24, (uint64_t)qword_1E9AFCCF0, a1);
}

uint64_t sub_1AFF50624@<X0>(void *a1@<X2>, uint64_t (*a2)(void)@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = a2(0);
  uint64_t v8 = __swift_project_value_buffer(v7, a3);
  long long v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v9(a4, v8, v7);
}

uint64_t sub_1AFF506CC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  char v12 = a3 & 1;
  char v13 = a6 & 1;
  uint64_t v14 = swift_task_alloc();
  *(void *)(v7 + 16) = v14;
  *(void *)uint64_t v14 = v7;
  *(void *)(v14 + 8) = sub_1AFD56424;
  *(unsigned char *)(v14 + 721) = v13;
  *(void *)(v14 + 584) = a5;
  *(void *)(v14 + 576) = a4;
  *(unsigned char *)(v14 + 720) = v12;
  *(void *)(v14 + 568) = a2;
  *(void *)(v14 + 560) = a1;
  *(_OWORD *)(v14 + 592) = *(_OWORD *)v6;
  *(void *)(v14 + 608) = *(void *)(v6 + 16);
  return MEMORY[0x1F4188298](sub_1AFF4E820, 0, 0);
}

uint64_t sub_1AFF507C8(uint64_t a1)
{
  long long v1 = *(_OWORD *)(a1 + 112);
  _OWORD v7[6] = *(_OWORD *)(a1 + 96);
  v7[7] = v1;
  long long v2 = *(_OWORD *)(a1 + 48);
  _OWORD v7[2] = *(_OWORD *)(a1 + 32);
  v7[3] = v2;
  long long v3 = *(_OWORD *)(a1 + 80);
  v7[4] = *(_OWORD *)(a1 + 64);
  v7[5] = v3;
  long long v4 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v4;
  uint64_t v8 = *(void *)(a1 + 128);
  sub_1AFD76370((uint64_t)v7);
  swift_getAtKeyPath();
  sub_1AFD76408((uint64_t)v7);
  sub_1AFFCAF18();
  swift_bridgeObjectRelease();
  sub_1AFFCAF18();
  sub_1AFD3AE10();
  char v5 = sub_1AFFCB6E8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1AFF508EC(uint64_t a1)
{
  long long v1 = *(_OWORD *)(a1 + 112);
  v11[6] = *(_OWORD *)(a1 + 96);
  v11[7] = v1;
  long long v2 = *(_OWORD *)(a1 + 48);
  void v11[2] = *(_OWORD *)(a1 + 32);
  v11[3] = v2;
  long long v3 = *(_OWORD *)(a1 + 80);
  v11[4] = *(_OWORD *)(a1 + 64);
  v11[5] = v3;
  long long v4 = *(_OWORD *)(a1 + 16);
  v11[0] = *(_OWORD *)a1;
  v11[1] = v4;
  uint64_t v12 = *(void *)(a1 + 128);
  sub_1AFD76370((uint64_t)v11);
  swift_getAtKeyPath();
  sub_1AFD76408((uint64_t)v11);
  uint64_t v5 = sub_1AFFCAF18();
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  if (v5 == sub_1AFFCAF18() && v7 == v8) {
    char v9 = 1;
  }
  else {
    char v9 = sub_1AFFCBCE8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_1AFF50A18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SymbolEntity();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v51 = (uint64_t)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  unint64_t v52 = (uint8_t *)&v44 - v9;
  sub_1AFF53288(0, &qword_1E9AFCDA0, &qword_1EB810BC0, (uint64_t)&protocol conformance descriptor for SymbolEntity, MEMORY[0x1E4F18450]);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v44 - v13;
  long long v15 = *(_OWORD *)(a1 + 112);
  long long v70 = *(_OWORD *)(a1 + 96);
  long long v71 = v15;
  uint64_t v72 = *(void *)(a1 + 128);
  long long v16 = *(_OWORD *)(a1 + 48);
  long long v66 = *(_OWORD *)(a1 + 32);
  long long v67 = v16;
  long long v17 = *(_OWORD *)(a1 + 80);
  long long v68 = *(_OWORD *)(a1 + 64);
  long long v69 = v17;
  long long v18 = *(_OWORD *)(a1 + 16);
  long long v64 = *(_OWORD *)a1;
  long long v65 = v18;
  long long v19 = *(_OWORD *)(a2 + 112);
  long long v79 = *(_OWORD *)(a2 + 96);
  long long v80 = v19;
  uint64_t v81 = *(void *)(a2 + 128);
  long long v20 = *(_OWORD *)(a2 + 48);
  long long v75 = *(_OWORD *)(a2 + 32);
  long long v76 = v20;
  long long v21 = *(_OWORD *)(a2 + 80);
  long long v77 = *(_OWORD *)(a2 + 64);
  long long v78 = v21;
  long long v22 = *(_OWORD *)(a2 + 16);
  long long v73 = *(_OWORD *)a2;
  long long v74 = v22;
  uint64_t v23 = *(void *)(a3 + 16);
  if (v23)
  {
    uint64_t v24 = a3;
    int64_t v26 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    uint64_t v25 = v12 + 16;
    uint64_t v50 = v26;
    uint64_t v27 = (char *)(a3 + ((*(unsigned __int8 *)(v25 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 64)));
    BOOL v48 = (void (**)(char *, uint64_t))(v25 - 8);
    uint64_t v45 = *(void *)(v25 + 56);
    uint64_t v44 = v24;
    sub_1AFFC8E38();
    uint64_t v49 = MEMORY[0x1E4FBC840] + 8;
    uint64_t v46 = v25;
    uint64_t v47 = v11;
    while (1)
    {
      v50(v14, v27, v11);
      long long v61 = v70;
      long long v62 = v71;
      uint64_t v63 = v72;
      long long v57 = v66;
      long long v58 = v67;
      long long v59 = v68;
      long long v60 = v69;
      long long v55 = v64;
      long long v56 = v65;
      sub_1AFD76370((uint64_t)&v64);
      uint64_t v28 = (uint64_t)v52;
      SymbolEntity.init(from:)(&v55, (uint64_t)v52);
      sub_1AFFC8BC8();
      swift_getAtPartialKeyPath();
      swift_release();
      sub_1AFF5377C(v28, (uint64_t (*)(void))type metadata accessor for SymbolEntity);
      sub_1AFD823E8();
      if ((swift_dynamicCast() & 1) == 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
      char v82 = v27;
      long long v61 = v79;
      long long v62 = v80;
      uint64_t v63 = v81;
      long long v57 = v75;
      long long v58 = v76;
      long long v59 = v77;
      long long v60 = v78;
      long long v55 = v73;
      long long v56 = v74;
      sub_1AFD76370((uint64_t)&v73);
      uint64_t v29 = v51;
      SymbolEntity.init(from:)(&v55, v51);
      sub_1AFFC8BC8();
      swift_getAtPartialKeyPath();
      swift_release();
      sub_1AFF5377C(v29, (uint64_t (*)(void))type metadata accessor for SymbolEntity);
      if ((swift_dynamicCast() & 1) == 0) {
        break;
      }
      uint64_t v53 = v23;
      sub_1AFFC8B28();
      long long v30 = v55;
      sub_1AFFC8B28();
      long long v31 = v55;
      if (sub_1AFFC8BD8())
      {
        if (v30 == v31)
        {
          swift_bridgeObjectRelease_n();
          swift_release();
          swift_release();
          uint64_t v11 = v47;
          (*v48)(v14, v47);
        }
        else
        {
          char v33 = sub_1AFFCBCE8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          uint64_t v11 = v47;
          (*v48)(v14, v47);
          if (v33)
          {
LABEL_14:
            swift_bridgeObjectRelease();
            return 1;
          }
        }
      }
      else if (v31 == v30)
      {
        swift_release();
        swift_release();
        uint64_t v11 = v47;
        (*v48)(v14, v47);
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v32 = sub_1AFFCBCE8();
        swift_release();
        swift_release();
        uint64_t v11 = v47;
        (*v48)(v14, v47);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v32) {
          goto LABEL_14;
        }
      }
      uint64_t v27 = &v82[v45];
      uint64_t v23 = v53 - 1;
      if (v53 == 1) {
        goto LABEL_14;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
LABEL_17:
    if (qword_1EB810B30 != -1) {
      swift_once();
    }
    uint64_t v34 = sub_1AFFCA8A8();
    __swift_project_value_buffer(v34, (uint64_t)qword_1EB810AF0);
    swift_bridgeObjectRetain_n();
    uint64_t v35 = sub_1AFFCA888();
    os_log_type_t v36 = sub_1AFFCB468();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      uint64_t v53 = swift_slowAlloc();
      *(void *)&long long v55 = v53;
      char v82 = v14;
      *(_DWORD *)uint64_t v37 = 136315138;
      unint64_t v52 = v37 + 4;
      uint64_t v38 = sub_1AFFC8E38();
      uint64_t v39 = MEMORY[0x1B3E8D630](v38, v11);
      unint64_t v41 = v40;
      swift_bridgeObjectRelease();
      uint64_t v54 = sub_1AFD36BA8(v39, v41, (uint64_t *)&v55);
      uint64_t v14 = v82;
      sub_1AFFCB688();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AFD01000, v35, v36, "Symbol sorts unexpectedly contained a parameter which is not a String. sorts=%s", v37, 0xCu);
      uint64_t v42 = v53;
      swift_arrayDestroy();
      MEMORY[0x1B3E8F0D0](v42, -1, -1);
      MEMORY[0x1B3E8F0D0](v37, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    MEMORY[0x1B3E8C360]("Encountered a SymbolEntity value in WatchlistQuery which is not a String. We need to add explicit support for this in the property queries.", 139, 2, MEMORY[0x1E4FBC860]);
    (*v48)(v14, v11);
  }
  return 1;
}

uint64_t sub_1AFF51188(char *a1, char *__src, unint64_t a3, char *__dst, uint64_t a5)
{
  uint64_t v7 = __dst;
  uint64_t v9 = __src;
  uint64_t v10 = __src - a1;
  uint64_t v11 = (__src - a1) / 136;
  uint64_t v12 = a3 - (void)__src;
  uint64_t v13 = (uint64_t)(a3 - (void)__src) / 136;
  long long v80 = a1;
  long long v79 = __dst;
  if (v11 >= v13)
  {
    if (v12 < -135) {
      goto LABEL_50;
    }
    if (__dst != __src || &__src[136 * v13] <= __dst) {
      memmove(__dst, __src, 136 * v13);
    }
    uint64_t v34 = &v7[136 * v13];
    long long v78 = v34;
    long long v80 = v9;
    if (a1 >= v9 || v12 < 136) {
      goto LABEL_49;
    }
    uint64_t v35 = (char *)(a3 - 136);
    long long v56 = v7;
    while (1)
    {
      long long v60 = *(_OWORD *)(v34 - 136);
      long long v36 = *(_OWORD *)(v34 - 120);
      long long v37 = *(_OWORD *)(v34 - 104);
      long long v38 = *(_OWORD *)(v34 - 72);
      long long v63 = *(_OWORD *)(v34 - 88);
      long long v64 = v38;
      long long v61 = v36;
      long long v62 = v37;
      long long v39 = *(_OWORD *)(v34 - 56);
      long long v40 = *(_OWORD *)(v34 - 40);
      long long v41 = *(_OWORD *)(v34 - 24);
      uint64_t v68 = *((void *)v34 - 1);
      long long v66 = v40;
      long long v67 = v41;
      long long v65 = v39;
      memmove(__dsta, v34 - 136, 0x88uLL);
      uint64_t v42 = v9 - 136;
      long long v69 = *(_OWORD *)(v9 - 136);
      long long v43 = *(_OWORD *)(v9 - 120);
      long long v44 = *(_OWORD *)(v9 - 104);
      long long v45 = *(_OWORD *)(v9 - 72);
      long long v72 = *(_OWORD *)(v9 - 88);
      long long v73 = v45;
      long long v70 = v43;
      long long v71 = v44;
      long long v46 = *(_OWORD *)(v9 - 56);
      long long v47 = *(_OWORD *)(v9 - 40);
      long long v48 = *(_OWORD *)(v9 - 24);
      uint64_t v77 = *((void *)v9 - 1);
      long long v75 = v47;
      long long v76 = v48;
      long long v74 = v46;
      memmove(v58, v9 - 136, 0x88uLL);
      sub_1AFD76370((uint64_t)&v60);
      sub_1AFD76370((uint64_t)&v69);
      char v49 = sub_1AFF50A18((uint64_t)__dsta, (uint64_t)v58, a5);
      if (v5)
      {
        long long v78 = v34;
        long long v80 = v9;
LABEL_45:
        sub_1AFD76408((uint64_t)&v69);
        sub_1AFD76408((uint64_t)&v60);
        goto LABEL_49;
      }
      char v50 = v49;
      uint64_t v51 = a5;
      unint64_t v52 = v35 + 136;
      sub_1AFD76408((uint64_t)&v69);
      sub_1AFD76408((uint64_t)&v60);
      if (v50)
      {
        if (v52 == v9)
        {
          BOOL v53 = v35 >= v9;
          v9 -= 136;
          goto LABEL_32;
        }
        v9 -= 136;
      }
      else
      {
        uint64_t v42 = v34 - 136;
        if (v52 == v34)
        {
          BOOL v53 = v35 >= v34;
          v34 -= 136;
LABEL_32:
          a5 = v51;
          uint64_t v54 = a1;
          if (!v53) {
            goto LABEL_39;
          }
          goto LABEL_38;
        }
        v34 -= 136;
      }
      a5 = v51;
      uint64_t v54 = a1;
LABEL_38:
      memmove(v35, v42, 0x88uLL);
LABEL_39:
      if (v34 <= v56 || v9 <= v54)
      {
        long long v78 = v34;
        long long v80 = v9;
        goto LABEL_49;
      }
      v35 -= 136;
    }
  }
  if (v10 < -135)
  {
LABEL_50:
    swift_bridgeObjectRelease();
    uint64_t result = sub_1AFFCBA28();
    __break(1u);
    return result;
  }
  uint64_t v14 = a1;
  if (__dst != a1 || &a1[136 * v11] <= __dst) {
    memmove(__dst, a1, 136 * v11);
  }
  long long v15 = &v7[136 * v11];
  long long v78 = v15;
  if ((unint64_t)v9 >= a3 || v10 < 136) {
    goto LABEL_49;
  }
  long long v16 = v7;
  while (1)
  {
    long long v60 = *(_OWORD *)v9;
    long long v17 = *((_OWORD *)v9 + 1);
    long long v18 = *((_OWORD *)v9 + 2);
    long long v19 = *((_OWORD *)v9 + 4);
    long long v63 = *((_OWORD *)v9 + 3);
    long long v64 = v19;
    long long v61 = v17;
    long long v62 = v18;
    long long v20 = *((_OWORD *)v9 + 5);
    long long v21 = *((_OWORD *)v9 + 6);
    long long v22 = *((_OWORD *)v9 + 7);
    uint64_t v68 = *((void *)v9 + 16);
    long long v66 = v21;
    long long v67 = v22;
    long long v65 = v20;
    memmove(__dsta, v9, 0x88uLL);
    long long v69 = *(_OWORD *)v16;
    long long v23 = *((_OWORD *)v16 + 1);
    long long v24 = *((_OWORD *)v16 + 2);
    long long v25 = *((_OWORD *)v16 + 4);
    long long v72 = *((_OWORD *)v16 + 3);
    long long v73 = v25;
    long long v70 = v23;
    long long v71 = v24;
    long long v26 = *((_OWORD *)v16 + 5);
    long long v27 = *((_OWORD *)v16 + 6);
    long long v28 = *((_OWORD *)v16 + 7);
    uint64_t v77 = *((void *)v16 + 16);
    long long v75 = v27;
    long long v76 = v28;
    long long v74 = v26;
    memmove(v58, v16, 0x88uLL);
    sub_1AFD76370((uint64_t)&v60);
    sub_1AFD76370((uint64_t)&v69);
    char v29 = sub_1AFF50A18((uint64_t)__dsta, (uint64_t)v58, a5);
    if (v5)
    {
      long long v79 = v7;
      long long v80 = v14;
      goto LABEL_45;
    }
    char v30 = v29;
    sub_1AFD76408((uint64_t)&v69);
    sub_1AFD76408((uint64_t)&v60);
    if ((v30 & 1) == 0)
    {
      uint64_t v7 = v16 + 136;
      long long v31 = v16;
      BOOL v32 = v14 == v16;
      v16 += 136;
      if (v32) {
        goto LABEL_16;
      }
LABEL_15:
      memmove(v14, v31, 0x88uLL);
      goto LABEL_16;
    }
    long long v31 = v9;
    BOOL v32 = v14 == v9;
    v9 += 136;
    if (!v32) {
      goto LABEL_15;
    }
LABEL_16:
    char v33 = v14 + 136;
    if (v16 >= v15)
    {
      long long v79 = v7;
      goto LABEL_48;
    }
    if ((unint64_t)v9 >= a3) {
      break;
    }
    v14 += 136;
  }
  long long v79 = v7;
  char v33 = v14 + 136;
LABEL_48:
  long long v80 = v33;
LABEL_49:
  sub_1AFEE61C8((void **)&v80, (const void **)&v79, &v78);
  swift_bridgeObjectRelease();
  return 1;
}

unint64_t sub_1AFF51608(uint64_t a1, uint64_t a2)
{
  sub_1AFF53748(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SymbolEntity();
  MEMORY[0x1F4188790](v8);
  uint64_t v52 = (uint64_t)v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v38 = (uint64_t)v36 - v12;
  uint64_t v13 = *(void *)(a1 + 16);
  if (!v13) {
    return MEMORY[0x1E4FBC860];
  }
  v36[1] = v2;
  uint64_t v37 = v11;
  long long v39 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  long long v40 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  sub_1AFFC8E38();
  v36[0] = a1;
  uint64_t v14 = (uint64_t *)(a1 + 40);
  unint64_t v15 = MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v16 = v8;
    uint64_t v17 = *(v14 - 1);
    uint64_t v18 = *v14;
    uint64_t v19 = *(void *)(a2 + 16);
    sub_1AFFC8E38();
    if (v19)
    {
      sub_1AFFC8E38();
      unint64_t v20 = sub_1AFD79CC8(v17, v18);
      if (v21)
      {
        uint64_t v22 = *(void *)(a2 + 56) + 136 * v20;
        long long v43 = *(_OWORD *)v22;
        long long v23 = *(_OWORD *)(v22 + 64);
        long long v25 = *(_OWORD *)(v22 + 16);
        long long v24 = *(_OWORD *)(v22 + 32);
        long long v46 = *(_OWORD *)(v22 + 48);
        long long v47 = v23;
        long long v44 = v25;
        long long v45 = v24;
        long long v27 = *(_OWORD *)(v22 + 96);
        long long v26 = *(_OWORD *)(v22 + 112);
        long long v28 = *(_OWORD *)(v22 + 80);
        uint64_t v51 = *(void *)(v22 + 128);
        long long v49 = v27;
        long long v50 = v26;
        long long v48 = v28;
        sub_1AFD76370((uint64_t)&v43);
        swift_bridgeObjectRelease();
        v41[6] = v49;
        v41[7] = v50;
        uint64_t v42 = v51;
        v41[2] = v45;
        v41[3] = v46;
        v41[4] = v47;
        v41[5] = v48;
        v41[0] = v43;
        v41[1] = v44;
        SymbolEntity.init(from:)(v41, (uint64_t)v7);
        char v29 = *v40;
        char v30 = v7;
        uint64_t v31 = 0;
        goto LABEL_10;
      }
      swift_bridgeObjectRelease();
    }
    char v29 = *v40;
    char v30 = v7;
    uint64_t v31 = 1;
LABEL_10:
    uint64_t v8 = v16;
    v29(v30, v31, 1, v16);
    swift_bridgeObjectRelease();
    if ((*v39)(v7, 1, v16) == 1)
    {
      sub_1AFF5377C((uint64_t)v7, (uint64_t (*)(void))sub_1AFF53748);
    }
    else
    {
      uint64_t v32 = v38;
      sub_1AFD5BC6C((uint64_t)v7, v38);
      sub_1AFD5BC6C(v32, v52);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v15 = sub_1AFD35A0C(0, *(void *)(v15 + 16) + 1, 1, v15);
      }
      unint64_t v34 = *(void *)(v15 + 16);
      unint64_t v33 = *(void *)(v15 + 24);
      if (v34 >= v33 >> 1) {
        unint64_t v15 = sub_1AFD35A0C(v33 > 1, v34 + 1, 1, v15);
      }
      *(void *)(v15 + 16) = v34 + 1;
      sub_1AFD5BC6C(v52, v15+ ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))+ *(void *)(v37 + 72) * v34);
      uint64_t v8 = v16;
    }
    v14 += 2;
    --v13;
  }
  while (v13);
  swift_bridgeObjectRelease();
  return v15;
}

void sub_1AFF51988()
{
  if (!qword_1E9AFCD30)
  {
    type metadata accessor for SymbolEntity();
    sub_1AFF53204(&qword_1EB810BC0, (void (*)(uint64_t))type metadata accessor for SymbolEntity);
    unint64_t v0 = sub_1AFFC8DF8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9AFCD30);
    }
  }
}

void sub_1AFF51A24(uint64_t a1)
{
}

uint64_t sub_1AFF51A60(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  if (a3 != a2)
  {
    uint64_t v7 = a3;
    uint64_t v9 = *a4;
    uint64_t v10 = *a4 + 136 * a3;
    uint64_t v11 = result + 1;
    uint64_t v62 = result + 1;
LABEL_5:
    for (uint64_t i = v10; ; i -= 136)
    {
      v58[0] = *(_OWORD *)i;
      long long v13 = *(_OWORD *)(i + 16);
      long long v14 = *(_OWORD *)(i + 32);
      long long v15 = *(_OWORD *)(i + 64);
      v58[3] = *(_OWORD *)(i + 48);
      v58[4] = v15;
      v58[1] = v13;
      v58[2] = v14;
      long long v16 = *(_OWORD *)(i + 80);
      long long v17 = *(_OWORD *)(i + 96);
      long long v18 = *(_OWORD *)(i + 112);
      uint64_t v59 = *(void *)(i + 128);
      v58[6] = v17;
      v58[7] = v18;
      v58[5] = v16;
      long long v19 = *(_OWORD *)(i + 112);
      long long v55 = *(_OWORD *)(i + 96);
      long long v56 = v19;
      uint64_t v57 = *(void *)(i + 128);
      long long v20 = *(_OWORD *)(i + 48);
      long long v51 = *(_OWORD *)(i + 32);
      long long v52 = v20;
      long long v21 = *(_OWORD *)(i + 80);
      long long v53 = *(_OWORD *)(i + 64);
      long long v54 = v21;
      long long v22 = *(_OWORD *)(i + 16);
      long long v49 = *(_OWORD *)i;
      long long v50 = v22;
      v60[0] = *(_OWORD *)(i - 136);
      long long v23 = *(_OWORD *)(i - 120);
      long long v24 = *(_OWORD *)(i - 104);
      long long v25 = *(_OWORD *)(i - 72);
      v60[3] = *(_OWORD *)(i - 88);
      v60[4] = v25;
      v60[1] = v23;
      v60[2] = v24;
      long long v26 = *(_OWORD *)(i - 56);
      long long v27 = *(_OWORD *)(i - 40);
      long long v28 = *(_OWORD *)(i - 24);
      uint64_t v61 = *(void *)(i - 8);
      v60[6] = v27;
      v60[7] = v28;
      v60[5] = v26;
      long long v29 = *(_OWORD *)(i - 56);
      long long v30 = *(_OWORD *)(i - 24);
      v47[6] = *(_OWORD *)(i - 40);
      v47[7] = v30;
      uint64_t v48 = *(void *)(i - 8);
      long long v31 = *(_OWORD *)(i - 120);
      long long v32 = *(_OWORD *)(i - 88);
      v47[2] = *(_OWORD *)(i - 104);
      v47[3] = v32;
      v47[4] = *(_OWORD *)(i - 72);
      v47[5] = v29;
      v47[0] = *(_OWORD *)(i - 136);
      v47[1] = v31;
      sub_1AFD76370((uint64_t)v58);
      sub_1AFD76370((uint64_t)v60);
      char v33 = sub_1AFF50A18((uint64_t)&v49, (uint64_t)v47, a5);
      sub_1AFD76408((uint64_t)v60);
      uint64_t result = sub_1AFD76408((uint64_t)v58);
      if (v5) {
        break;
      }
      if ((v33 & 1) == 0) {
        goto LABEL_4;
      }
      if (!v9)
      {
        __break(1u);
        return result;
      }
      uint64_t v34 = i - 136;
      long long v35 = *(_OWORD *)(i + 112);
      long long v55 = *(_OWORD *)(i + 96);
      long long v56 = v35;
      uint64_t v57 = *(void *)(i + 128);
      long long v36 = *(_OWORD *)(i + 48);
      long long v51 = *(_OWORD *)(i + 32);
      long long v52 = v36;
      long long v37 = *(_OWORD *)(i + 80);
      long long v53 = *(_OWORD *)(i + 64);
      long long v54 = v37;
      long long v38 = *(_OWORD *)(i + 16);
      long long v49 = *(_OWORD *)i;
      long long v50 = v38;
      long long v39 = *(_OWORD *)(i - 56);
      *(_OWORD *)(i + 64) = *(_OWORD *)(i - 72);
      *(_OWORD *)(i + 80) = v39;
      long long v40 = *(_OWORD *)(i - 24);
      *(_OWORD *)(i + 96) = *(_OWORD *)(i - 40);
      *(_OWORD *)(i + 112) = v40;
      *(void *)(i + 128) = *(void *)(i - 8);
      long long v41 = *(_OWORD *)(i - 88);
      *(_OWORD *)(i + 32) = *(_OWORD *)(i - 104);
      *(_OWORD *)(i + 48) = v41;
      long long v42 = *(_OWORD *)(i - 120);
      *(_OWORD *)uint64_t i = *(_OWORD *)(i - 136);
      *(_OWORD *)(i + 16) = v42;
      long long v43 = v54;
      *(_OWORD *)(v34 + 64) = v53;
      *(_OWORD *)(v34 + 80) = v43;
      long long v44 = v56;
      *(_OWORD *)(v34 + 96) = v55;
      *(_OWORD *)(v34 + 112) = v44;
      *(void *)(v34 + 128) = v57;
      long long v45 = v52;
      *(_OWORD *)(v34 + 32) = v51;
      *(_OWORD *)(v34 + 48) = v45;
      long long v46 = v50;
      *(_OWORD *)uint64_t v34 = v49;
      *(_OWORD *)(v34 + 16) = v46;
      if (v7 == v11)
      {
LABEL_4:
        ++v7;
        v10 += 136;
        uint64_t v11 = v62;
        if (v7 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      ++v11;
    }
  }
  return result;
}

uint64_t sub_1AFF51C98(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SymbolEntity();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v213 = (uint64_t)&v192 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v219 = (uint64_t)&v192 - v7;
  sub_1AFF53288(0, &qword_1E9AFCDA0, &qword_1EB810BC0, (uint64_t)&protocol conformance descriptor for SymbolEntity, MEMORY[0x1E4F18450]);
  uint64_t v9 = v8;
  uint64_t v207 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v192 - v10;
  uint64_t v12 = a1[1];
  swift_bridgeObjectRetain_n();
  uint64_t v13 = sub_1AFFCBC78();
  if (v13 >= v12)
  {
    if (v12 < 0) {
      goto LABEL_168;
    }
    if (v12)
    {
      sub_1AFFC8E38();
      sub_1AFF51A60(0, v12, 1, a1, a2);
    }
    return swift_bridgeObjectRelease_n();
  }
  uint64_t v195 = a1;
  uint64_t v196 = v13;
  if (v12 >= 0) {
    uint64_t v15 = v12;
  }
  else {
    uint64_t v15 = v12 + 1;
  }
  if (v12 < -1) {
    goto LABEL_177;
  }
  uint64_t v212 = a2;
  uint64_t v200 = v12;
  if (v12 < 2)
  {
    uint64_t v197 = MEMORY[0x1E4FBC860];
    uint64_t v198 = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v12 != 1)
    {
      unint64_t v117 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v201 = (char *)MEMORY[0x1E4FBC860];
LABEL_132:
      if (v117 >= 2)
      {
        uint64_t v177 = (char *)*v195;
        double v263 = (char *)*v195;
        while (1)
        {
          unint64_t v178 = v117 - 2;
          if (v117 < 2) {
            goto LABEL_163;
          }
          if (!v177) {
            goto LABEL_176;
          }
          uint64_t v179 = *(void *)&v201[16 * v178 + 32];
          uint64_t v180 = *(void *)&v201[16 * v117 + 24];
          uint64_t v181 = &v177[136 * v179];
          uint64_t v182 = &v177[136 * *(void *)&v201[16 * v117 + 16]];
          unint64_t v183 = (unint64_t)&v177[136 * v180];
          uint64_t v184 = v212;
          sub_1AFFC8E38();
          uint64_t v185 = v181;
          uint64_t v186 = v204;
          sub_1AFF51188(v185, v182, v183, v198, v184);
          uint64_t v204 = v186;
          if (v186) {
            goto LABEL_147;
          }
          if (v180 < v179) {
            goto LABEL_164;
          }
          uint64_t v187 = v201;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v187 = sub_1AFEE6294((uint64_t)v187);
          }
          if (v178 >= *((void *)v187 + 2)) {
            goto LABEL_165;
          }
          char v188 = v187 + 32;
          char v189 = &v187[16 * v178 + 32];
          *(void *)char v189 = v179;
          *((void *)v189 + 1) = v180;
          char v190 = v187;
          unint64_t v191 = *((void *)v187 + 2);
          if (v117 > v191) {
            goto LABEL_166;
          }
          memmove(&v188[16 * v117 - 16], &v188[16 * v117], 16 * (v191 - v117));
          uint64_t v201 = v190;
          *((void *)v190 + 2) = v191 - 1;
          unint64_t v117 = v191 - 1;
          uint64_t v177 = v263;
          if (v191 <= 2) {
            goto LABEL_147;
          }
        }
      }
      goto LABEL_147;
    }
  }
  else
  {
    uint64_t v16 = v15 >> 1;
    uint64_t v17 = sub_1AFFCB258();
    *(void *)(v17 + 16) = v16;
    uint64_t v197 = v17;
    uint64_t v198 = (char *)(v17 + 32);
  }
  uint64_t v19 = 0;
  long long v20 = (char *)*v195;
  uint64_t v217 = (void (**)(char *, uint64_t))(v207 + 8);
  uint64_t v218 = v207 + 16;
  double v203 = (char *)&v227 + 8;
  uint64_t v193 = v20 - 136;
  uint64_t v194 = v20 + 272;
  uint64_t v216 = MEMORY[0x1E4FBC840] + 8;
  *(void *)&long long v14 = 136315138;
  long long v202 = v14;
  uint64_t v201 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v21 = v200;
  char v214 = v11;
  uint64_t v215 = v9;
  double v209 = v20;
  while (2)
  {
    uint64_t v22 = v19;
    uint64_t v23 = v19 + 1;
    uint64_t v208 = v19;
    if (v19 + 1 >= v21) {
      goto LABEL_37;
    }
    long long v24 = &v20[136 * v23];
    long long v245 = *(_OWORD *)v24;
    long long v25 = *((_OWORD *)v24 + 1);
    long long v26 = *((_OWORD *)v24 + 2);
    long long v27 = *((_OWORD *)v24 + 4);
    long long v248 = *((_OWORD *)v24 + 3);
    long long v249 = v27;
    long long v246 = v25;
    long long v247 = v26;
    long long v28 = *((_OWORD *)v24 + 5);
    long long v29 = *((_OWORD *)v24 + 6);
    long long v30 = *((_OWORD *)v24 + 7);
    uint64_t v253 = *((void *)v24 + 16);
    long long v251 = v29;
    long long v252 = v30;
    long long v250 = v28;
    long long v241 = *((_OWORD *)v24 + 5);
    long long v242 = *((_OWORD *)v24 + 6);
    long long v243 = *((_OWORD *)v24 + 7);
    uint64_t v244 = *((void *)v24 + 16);
    long long v237 = *((_OWORD *)v24 + 1);
    long long v238 = *((_OWORD *)v24 + 2);
    long long v239 = *((_OWORD *)v24 + 3);
    long long v240 = *((_OWORD *)v24 + 4);
    long long v236 = *(_OWORD *)v24;
    long long v31 = &v20[136 * v19];
    long long v254 = *(_OWORD *)v31;
    long long v32 = *((_OWORD *)v31 + 1);
    long long v33 = *((_OWORD *)v31 + 2);
    long long v34 = *((_OWORD *)v31 + 4);
    long long v257 = *((_OWORD *)v31 + 3);
    long long v258 = v34;
    long long v255 = v32;
    long long v256 = v33;
    long long v35 = *((_OWORD *)v31 + 5);
    long long v36 = *((_OWORD *)v31 + 6);
    long long v37 = *((_OWORD *)v31 + 7);
    uint64_t v262 = *((void *)v31 + 16);
    long long v260 = v36;
    long long v261 = v37;
    long long v259 = v35;
    long long v232 = *((_OWORD *)v31 + 5);
    long long v233 = *((_OWORD *)v31 + 6);
    long long v234 = *((_OWORD *)v31 + 7);
    uint64_t v235 = *((void *)v31 + 16);
    long long v228 = *((_OWORD *)v31 + 1);
    long long v229 = *((_OWORD *)v31 + 2);
    long long v230 = *((_OWORD *)v31 + 3);
    long long v231 = *((_OWORD *)v31 + 4);
    long long v227 = *(_OWORD *)v31;
    sub_1AFD76370((uint64_t)&v245);
    sub_1AFD76370((uint64_t)&v254);
    uint64_t v38 = v204;
    int v39 = sub_1AFF50A18((uint64_t)&v236, (uint64_t)&v227, a2);
    uint64_t v204 = v38;
    if (v38)
    {
      sub_1AFD76408((uint64_t)&v254);
      sub_1AFD76408((uint64_t)&v245);
LABEL_147:
      swift_bridgeObjectRelease();
      *(void *)(v197 + 16) = 0;
      swift_bridgeObjectRelease_n();
      return swift_bridgeObjectRelease();
    }
    uint64_t v40 = v22;
    int v41 = v39;
    sub_1AFD76408((uint64_t)&v254);
    sub_1AFD76408((uint64_t)&v245);
    uint64_t v21 = v200;
    if (v40 + 2 >= v200)
    {
      uint64_t v23 = v40 + 2;
      long long v20 = v209;
      if (v41) {
        goto LABEL_27;
      }
LABEL_36:
      uint64_t v22 = v208;
      goto LABEL_37;
    }
    uint64_t v42 = v40 + 3;
    for (uint64_t i = &v194[136 * v40]; ; i += 136)
    {
      long long v227 = *(_OWORD *)i;
      long long v44 = *((_OWORD *)i + 1);
      long long v45 = *((_OWORD *)i + 2);
      long long v46 = *((_OWORD *)i + 4);
      long long v230 = *((_OWORD *)i + 3);
      long long v231 = v46;
      long long v228 = v44;
      long long v229 = v45;
      long long v47 = *((_OWORD *)i + 5);
      long long v48 = *((_OWORD *)i + 6);
      long long v49 = *((_OWORD *)i + 7);
      uint64_t v235 = *((void *)i + 16);
      long long v233 = v48;
      long long v234 = v49;
      long long v232 = v47;
      long long v50 = *((_OWORD *)i + 7);
      v225[6] = *((_OWORD *)i + 6);
      v225[7] = v50;
      uint64_t v226 = *((void *)i + 16);
      long long v51 = *((_OWORD *)i + 3);
      v225[2] = *((_OWORD *)i + 2);
      v225[3] = v51;
      long long v52 = *((_OWORD *)i + 5);
      v225[4] = *((_OWORD *)i + 4);
      v225[5] = v52;
      long long v53 = *((_OWORD *)i + 1);
      v225[0] = *(_OWORD *)i;
      v225[1] = v53;
      long long v236 = *(_OWORD *)(i - 136);
      long long v54 = *(_OWORD *)(i - 120);
      long long v55 = *(_OWORD *)(i - 104);
      long long v56 = *(_OWORD *)(i - 72);
      long long v239 = *(_OWORD *)(i - 88);
      long long v240 = v56;
      long long v237 = v54;
      long long v238 = v55;
      long long v57 = *(_OWORD *)(i - 56);
      long long v58 = *(_OWORD *)(i - 40);
      long long v59 = *(_OWORD *)(i - 24);
      uint64_t v244 = *((void *)i - 1);
      long long v242 = v58;
      long long v243 = v59;
      long long v241 = v57;
      long long v60 = *(_OWORD *)(i - 56);
      long long v61 = *(_OWORD *)(i - 24);
      v223[6] = *(_OWORD *)(i - 40);
      v223[7] = v61;
      uint64_t v224 = *((void *)i - 1);
      long long v62 = *(_OWORD *)(i - 120);
      long long v63 = *(_OWORD *)(i - 88);
      v223[2] = *(_OWORD *)(i - 104);
      v223[3] = v63;
      v223[4] = *(_OWORD *)(i - 72);
      v223[5] = v60;
      v223[0] = *(_OWORD *)(i - 136);
      v223[1] = v62;
      sub_1AFD76370((uint64_t)&v227);
      sub_1AFD76370((uint64_t)&v236);
      uint64_t v64 = v204;
      int v65 = sub_1AFF50A18((uint64_t)v225, (uint64_t)v223, a2);
      uint64_t v204 = v64;
      if (v64)
      {
        sub_1AFD76408((uint64_t)&v236);
        sub_1AFD76408((uint64_t)&v227);
        goto LABEL_147;
      }
      int v66 = v65;
      sub_1AFD76408((uint64_t)&v236);
      sub_1AFD76408((uint64_t)&v227);
      if ((v41 ^ v66))
      {
        uint64_t v23 = v42 - 1;
        a2 = v212;
        uint64_t v21 = v200;
        long long v20 = v209;
        if (v41) {
          goto LABEL_27;
        }
        goto LABEL_36;
      }
      uint64_t v21 = v200;
      a2 = v212;
      if (v200 == v42) {
        break;
      }
      ++v42;
    }
    uint64_t v23 = v200;
    long long v20 = v209;
    if ((v41 & 1) == 0) {
      goto LABEL_36;
    }
LABEL_27:
    uint64_t v22 = v208;
    if (v23 < v208) {
      goto LABEL_173;
    }
    uint64_t v67 = v23;
    if (v208 < v23)
    {
      uint64_t v68 = &v193[136 * v23];
      uint64_t v69 = v208;
      long long v70 = &v20[136 * v208];
      do
      {
        if (v69 != --v67)
        {
          if (!v20) {
            goto LABEL_175;
          }
          long long v241 = *((_OWORD *)v70 + 5);
          long long v242 = *((_OWORD *)v70 + 6);
          long long v243 = *((_OWORD *)v70 + 7);
          uint64_t v244 = *((void *)v70 + 16);
          long long v237 = *((_OWORD *)v70 + 1);
          long long v238 = *((_OWORD *)v70 + 2);
          long long v239 = *((_OWORD *)v70 + 3);
          long long v240 = *((_OWORD *)v70 + 4);
          long long v236 = *(_OWORD *)v70;
          memmove(v70, v68, 0x88uLL);
          *((_OWORD *)v68 + 5) = v241;
          *((_OWORD *)v68 + 6) = v242;
          *((_OWORD *)v68 + 7) = v243;
          *((void *)v68 + 16) = v244;
          *((_OWORD *)v68 + 1) = v237;
          *((_OWORD *)v68 + 2) = v238;
          *((_OWORD *)v68 + 3) = v239;
          *((_OWORD *)v68 + 4) = v240;
          *(_OWORD *)uint64_t v68 = v236;
          uint64_t v21 = v200;
          long long v20 = v209;
        }
        ++v69;
        v68 -= 136;
        v70 += 136;
      }
      while (v69 < v67);
      a2 = v212;
      goto LABEL_36;
    }
LABEL_37:
    BOOL v150 = v23 < v21;
    uint64_t v71 = v23;
    if (!v150)
    {
LABEL_78:
      BOOL v150 = v71 < v22;
      unint64_t v114 = v201;
      if (v150) {
        goto LABEL_167;
      }
      uint64_t v199 = v71;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v114 = sub_1AFEE5E44(0, *((void *)v114 + 2) + 1, 1, v114);
      }
      unint64_t v116 = *((void *)v114 + 2);
      unint64_t v115 = *((void *)v114 + 3);
      uint64_t v201 = v114;
      unint64_t v117 = v116 + 1;
      long long v20 = v209;
      if (v116 >= v115 >> 1)
      {
        uint64_t v176 = sub_1AFEE5E44((char *)(v115 > 1), v116 + 1, 1, v201);
        long long v20 = v209;
        uint64_t v201 = v176;
      }
      uint64_t v118 = v201;
      *((void *)v201 + 2) = v117;
      uint64_t v119 = v118 + 32;
      uint64_t v120 = &v118[16 * v116 + 32];
      uint64_t v121 = v199;
      *(void *)uint64_t v120 = v208;
      *((void *)v120 + 1) = v121;
      if (v116)
      {
        a2 = v212;
        while (1)
        {
          unint64_t v122 = v117 - 1;
          if (v117 >= 4)
          {
            uint64_t v127 = &v119[16 * v117];
            uint64_t v128 = *((void *)v127 - 8);
            uint64_t v129 = *((void *)v127 - 7);
            BOOL v133 = __OFSUB__(v129, v128);
            uint64_t v130 = v129 - v128;
            if (v133) {
              goto LABEL_152;
            }
            uint64_t v132 = *((void *)v127 - 6);
            uint64_t v131 = *((void *)v127 - 5);
            BOOL v133 = __OFSUB__(v131, v132);
            uint64_t v125 = v131 - v132;
            char v126 = v133;
            if (v133) {
              goto LABEL_153;
            }
            unint64_t v134 = v117 - 2;
            uint64_t v135 = &v119[16 * v117 - 32];
            uint64_t v137 = *(void *)v135;
            uint64_t v136 = *((void *)v135 + 1);
            BOOL v133 = __OFSUB__(v136, v137);
            uint64_t v138 = v136 - v137;
            if (v133) {
              goto LABEL_155;
            }
            BOOL v133 = __OFADD__(v125, v138);
            uint64_t v139 = v125 + v138;
            if (v133) {
              goto LABEL_158;
            }
            if (v139 >= v130)
            {
              uint64_t v157 = &v119[16 * v122];
              uint64_t v159 = *(void *)v157;
              uint64_t v158 = *((void *)v157 + 1);
              BOOL v133 = __OFSUB__(v158, v159);
              uint64_t v160 = v158 - v159;
              if (v133) {
                goto LABEL_162;
              }
              BOOL v150 = v125 < v160;
              goto LABEL_116;
            }
          }
          else
          {
            if (v117 != 3)
            {
              uint64_t v151 = *((void *)v201 + 4);
              uint64_t v152 = *((void *)v201 + 5);
              BOOL v133 = __OFSUB__(v152, v151);
              uint64_t v144 = v152 - v151;
              char v145 = v133;
              goto LABEL_110;
            }
            uint64_t v124 = *((void *)v201 + 4);
            uint64_t v123 = *((void *)v201 + 5);
            BOOL v133 = __OFSUB__(v123, v124);
            uint64_t v125 = v123 - v124;
            char v126 = v133;
          }
          if (v126) {
            goto LABEL_154;
          }
          unint64_t v134 = v117 - 2;
          unint64_t v140 = &v119[16 * v117 - 32];
          uint64_t v142 = *(void *)v140;
          uint64_t v141 = *((void *)v140 + 1);
          BOOL v143 = __OFSUB__(v141, v142);
          uint64_t v144 = v141 - v142;
          char v145 = v143;
          if (v143) {
            goto LABEL_157;
          }
          int64_t v146 = &v119[16 * v122];
          uint64_t v148 = *(void *)v146;
          uint64_t v147 = *((void *)v146 + 1);
          BOOL v133 = __OFSUB__(v147, v148);
          uint64_t v149 = v147 - v148;
          if (v133) {
            goto LABEL_160;
          }
          if (__OFADD__(v144, v149)) {
            goto LABEL_161;
          }
          if (v144 + v149 >= v125)
          {
            BOOL v150 = v125 < v149;
LABEL_116:
            if (v150) {
              unint64_t v122 = v134;
            }
            goto LABEL_118;
          }
LABEL_110:
          if (v145) {
            goto LABEL_156;
          }
          uint64_t v153 = &v119[16 * v122];
          uint64_t v155 = *(void *)v153;
          uint64_t v154 = *((void *)v153 + 1);
          BOOL v133 = __OFSUB__(v154, v155);
          uint64_t v156 = v154 - v155;
          if (v133) {
            goto LABEL_159;
          }
          if (v156 < v144) {
            goto LABEL_127;
          }
LABEL_118:
          unint64_t v161 = v122 - 1;
          if (v122 - 1 >= v117)
          {
            __break(1u);
LABEL_149:
            __break(1u);
LABEL_150:
            __break(1u);
LABEL_151:
            __break(1u);
LABEL_152:
            __break(1u);
LABEL_153:
            __break(1u);
LABEL_154:
            __break(1u);
LABEL_155:
            __break(1u);
LABEL_156:
            __break(1u);
LABEL_157:
            __break(1u);
LABEL_158:
            __break(1u);
LABEL_159:
            __break(1u);
LABEL_160:
            __break(1u);
LABEL_161:
            __break(1u);
LABEL_162:
            __break(1u);
LABEL_163:
            __break(1u);
LABEL_164:
            __break(1u);
LABEL_165:
            __break(1u);
LABEL_166:
            __break(1u);
LABEL_167:
            __break(1u);
LABEL_168:
            __break(1u);
LABEL_169:
            __break(1u);
LABEL_170:
            __break(1u);
            goto LABEL_171;
          }
          if (!v20) {
            goto LABEL_174;
          }
          uint64_t v162 = &v119[16 * v161];
          uint64_t v163 = v119;
          uint64_t v164 = *(void *)v162;
          unint64_t v165 = v163;
          unint64_t v166 = v122;
          uint64_t v167 = &v163[16 * v122];
          uint64_t v168 = *((void *)v167 + 1);
          os_log_t v169 = &v20[136 * *(void *)v162];
          double v263 = &v20[136 * *(void *)v167];
          uint64_t v222 = &v20[136 * v168];
          uint64_t v170 = v212;
          sub_1AFFC8E38();
          uint64_t v171 = v169;
          uint64_t v172 = v204;
          sub_1AFF51188(v171, v263, (unint64_t)v222, v198, v170);
          uint64_t v204 = v172;
          if (v172) {
            goto LABEL_147;
          }
          if (v168 < v164) {
            goto LABEL_149;
          }
          uint64_t v173 = v201;
          if (v166 > *((void *)v201 + 2)) {
            goto LABEL_150;
          }
          unint64_t v174 = v166;
          *(void *)uint64_t v162 = v164;
          *(void *)&v165[16 * v161 + 8] = v168;
          unint64_t v175 = *((void *)v173 + 2);
          if (v174 >= v175) {
            goto LABEL_151;
          }
          uint64_t v119 = v165;
          unint64_t v117 = v175 - 1;
          memmove(v167, v167 + 16, 16 * (v175 - 1 - v174));
          *((void *)v173 + 2) = v175 - 1;
          a2 = v212;
          uint64_t v21 = v200;
          uint64_t v11 = v214;
          uint64_t v9 = v215;
          long long v20 = v209;
          if (v175 <= 2) {
            goto LABEL_128;
          }
        }
      }
      unint64_t v117 = 1;
      a2 = v212;
LABEL_127:
      uint64_t v21 = v200;
LABEL_128:
      uint64_t v19 = v199;
      if (v199 >= v21) {
        goto LABEL_132;
      }
      continue;
    }
    break;
  }
  if (__OFSUB__(v23, v22)) {
    goto LABEL_169;
  }
  if (v23 - v22 >= v196)
  {
    uint64_t v71 = v23;
    goto LABEL_78;
  }
  if (__OFADD__(v22, v196)) {
    goto LABEL_170;
  }
  if (v22 + v196 >= v200) {
    uint64_t v72 = v200;
  }
  else {
    uint64_t v72 = v22 + v196;
  }
  if (v72 >= v22)
  {
    uint64_t v71 = v23;
    if (v23 != v72)
    {
      unint64_t v73 = *(void *)(a2 + 16);
      unint64_t v205 = v73;
      uint64_t v206 = v72;
      do
      {
        uint64_t v199 = v71;
        uint64_t v74 = v71;
        do
        {
          long long v75 = &v20[136 * v74];
          long long v245 = *(_OWORD *)v75;
          long long v76 = *((_OWORD *)v75 + 1);
          long long v77 = *((_OWORD *)v75 + 2);
          long long v78 = *((_OWORD *)v75 + 4);
          long long v248 = *((_OWORD *)v75 + 3);
          long long v249 = v78;
          long long v246 = v76;
          long long v247 = v77;
          long long v79 = *((_OWORD *)v75 + 5);
          long long v80 = *((_OWORD *)v75 + 6);
          long long v81 = *((_OWORD *)v75 + 7);
          uint64_t v253 = *((void *)v75 + 16);
          long long v251 = v80;
          long long v252 = v81;
          long long v250 = v79;
          long long v254 = *(_OWORD *)(v75 - 136);
          long long v82 = *(_OWORD *)(v75 - 120);
          long long v83 = *(_OWORD *)(v75 - 104);
          long long v84 = *(_OWORD *)(v75 - 72);
          long long v257 = *(_OWORD *)(v75 - 88);
          long long v258 = v84;
          long long v255 = v82;
          long long v256 = v83;
          long long v85 = *(_OWORD *)(v75 - 56);
          long long v86 = *(_OWORD *)(v75 - 40);
          long long v87 = *(_OWORD *)(v75 - 24);
          uint64_t v262 = *((void *)v75 - 1);
          long long v260 = v86;
          long long v261 = v87;
          long long v259 = v85;
          if (v73)
          {
            char v210 = &v20[136 * v74];
            uint64_t v211 = v74;
            uint64_t v88 = v207;
            unint64_t v89 = (char *)(a2
                         + ((*(unsigned __int8 *)(v207 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v207 + 80)));
            unint64_t v90 = v73;
            sub_1AFFC8E38();
            sub_1AFD76370((uint64_t)&v245);
            sub_1AFD76370((uint64_t)&v254);
            char v91 = *(void (**)(char *, char *, uint64_t))(v88 + 16);
            uint64_t v220 = *(void *)(v88 + 72);
            uint64_t v221 = v91;
            unint64_t v92 = v90;
            v91(v11, v89, v9);
            while (1)
            {
              long long v242 = v251;
              long long v243 = v252;
              uint64_t v244 = v253;
              long long v238 = v247;
              long long v239 = v248;
              long long v240 = v249;
              long long v241 = v250;
              long long v236 = v245;
              long long v237 = v246;
              sub_1AFD76370((uint64_t)&v245);
              uint64_t v94 = v219;
              SymbolEntity.init(from:)(&v236, v219);
              sub_1AFFC8BC8();
              swift_getAtPartialKeyPath();
              swift_release();
              sub_1AFF5377C(v94, (uint64_t (*)(void))type metadata accessor for SymbolEntity);
              sub_1AFD823E8();
              if (!swift_dynamicCast())
              {
                a2 = v212;
                swift_bridgeObjectRelease();
                goto LABEL_66;
              }
              long long v242 = v260;
              long long v243 = v261;
              uint64_t v244 = v262;
              long long v238 = v256;
              long long v239 = v257;
              long long v240 = v258;
              long long v241 = v259;
              long long v236 = v254;
              long long v237 = v255;
              sub_1AFD76370((uint64_t)&v254);
              uint64_t v95 = v213;
              SymbolEntity.init(from:)(&v236, v213);
              sub_1AFFC8BC8();
              swift_getAtPartialKeyPath();
              swift_release();
              sub_1AFF5377C(v95, (uint64_t (*)(void))type metadata accessor for SymbolEntity);
              if ((swift_dynamicCast() & 1) == 0) {
                break;
              }
              uint64_t v222 = (char *)v92;
              double v263 = v89;
              sub_1AFFC8B28();
              long long v96 = v236;
              sub_1AFFC8B28();
              long long v97 = v236;
              if (sub_1AFFC8BD8())
              {
                if (v96 == v97)
                {
                  swift_bridgeObjectRelease_n();
                  swift_release();
                  swift_release();
                  uint64_t v11 = v214;
                  uint64_t v9 = v215;
                  (*v217)(v214, v215);
                }
                else
                {
                  char v93 = sub_1AFFCBCE8();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_release();
                  swift_release();
                  uint64_t v11 = v214;
                  uint64_t v9 = v215;
                  (*v217)(v214, v215);
                  if (v93) {
                    goto LABEL_63;
                  }
                }
              }
              else if (v97 == v96)
              {
                swift_release();
                swift_release();
                uint64_t v11 = v214;
                uint64_t v9 = v215;
                (*v217)(v214, v215);
                swift_bridgeObjectRelease_n();
              }
              else
              {
                char v98 = sub_1AFFCBCE8();
                swift_release();
                swift_release();
                uint64_t v11 = v214;
                uint64_t v9 = v215;
                (*v217)(v214, v215);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v98)
                {
LABEL_63:
                  a2 = v212;
                  swift_bridgeObjectRelease();
                  goto LABEL_72;
                }
              }
              unint64_t v89 = &v263[v220];
              unint64_t v92 = (unint64_t)(v222 - 1);
              if (v222 == (char *)1) {
                goto LABEL_63;
              }
              v221(v11, v89, v9);
            }
            a2 = v212;
            swift_bridgeObjectRelease();
            swift_release();
LABEL_66:
            if (qword_1EB810B30 != -1) {
              swift_once();
            }
            uint64_t v99 = sub_1AFFCA8A8();
            __swift_project_value_buffer(v99, (uint64_t)qword_1EB810AF0);
            swift_bridgeObjectRetain_n();
            uint64_t v100 = sub_1AFFCA888();
            os_log_type_t v101 = sub_1AFFCB468();
            if (os_log_type_enabled(v100, v101))
            {
              uint64_t v102 = (uint8_t *)swift_slowAlloc();
              uint64_t v103 = swift_slowAlloc();
              *(void *)&long long v236 = v103;
              *(_DWORD *)uint64_t v102 = v202;
              sub_1AFFC8E38();
              uint64_t v104 = MEMORY[0x1B3E8D630](v212, v9);
              unint64_t v106 = v105;
              swift_bridgeObjectRelease();
              uint64_t v107 = v104;
              uint64_t v9 = v215;
              *(void *)&long long v227 = sub_1AFD36BA8(v107, v106, (uint64_t *)&v236);
              sub_1AFFCB688();
              swift_bridgeObjectRelease_n();
              uint64_t v11 = v214;
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_1AFD01000, v100, v101, "Symbol sorts unexpectedly contained a parameter which is not a String. sorts=%s", v102, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x1B3E8F0D0](v103, -1, -1);
              uint64_t v108 = v102;
              a2 = v212;
              MEMORY[0x1B3E8F0D0](v108, -1, -1);
            }
            else
            {

              swift_bridgeObjectRelease_n();
            }
            MEMORY[0x1B3E8C360]("Encountered a SymbolEntity value in WatchlistQuery which is not a String. We need to add explicit support for this in the property queries.", 139, 2, MEMORY[0x1E4FBC860]);
            (*v217)(v11, v9);
LABEL_72:
            uint64_t v22 = v208;
            sub_1AFD76408((uint64_t)&v254);
            sub_1AFD76408((uint64_t)&v245);
            long long v20 = v209;
            long long v75 = v210;
            unint64_t v73 = v205;
            uint64_t v72 = v206;
            uint64_t v74 = v211;
          }
          if (!v20) {
            goto LABEL_172;
          }
          --v74;
          uint64_t v109 = v75 - 136;
          long long v241 = *((_OWORD *)v75 + 5);
          long long v242 = *((_OWORD *)v75 + 6);
          long long v243 = *((_OWORD *)v75 + 7);
          uint64_t v244 = *((void *)v75 + 16);
          long long v237 = *((_OWORD *)v75 + 1);
          long long v238 = *((_OWORD *)v75 + 2);
          long long v239 = *((_OWORD *)v75 + 3);
          long long v240 = *((_OWORD *)v75 + 4);
          long long v236 = *(_OWORD *)v75;
          long long v110 = *(_OWORD *)(v75 - 56);
          *((_OWORD *)v75 + 4) = *(_OWORD *)(v75 - 72);
          *((_OWORD *)v75 + 5) = v110;
          long long v111 = *(_OWORD *)(v75 - 24);
          *((_OWORD *)v75 + 6) = *(_OWORD *)(v75 - 40);
          *((_OWORD *)v75 + 7) = v111;
          *((void *)v75 + 16) = *((void *)v75 - 1);
          long long v112 = *(_OWORD *)(v75 - 88);
          *((_OWORD *)v75 + 2) = *(_OWORD *)(v75 - 104);
          *((_OWORD *)v75 + 3) = v112;
          long long v113 = *(_OWORD *)(v75 - 120);
          *(_OWORD *)long long v75 = *(_OWORD *)(v75 - 136);
          *((_OWORD *)v75 + 1) = v113;
          *((_OWORD *)v109 + 4) = v240;
          *((_OWORD *)v109 + 5) = v241;
          *((_OWORD *)v109 + 6) = v242;
          *((_OWORD *)v109 + 7) = v243;
          *((void *)v109 + 16) = v244;
          *((_OWORD *)v109 + 1) = v237;
          *((_OWORD *)v109 + 2) = v238;
          *((_OWORD *)v109 + 3) = v239;
          *(_OWORD *)uint64_t v109 = v236;
        }
        while (v74 != v22);
        uint64_t v71 = v199 + 1;
      }
      while (v199 + 1 != v72);
      uint64_t v71 = v72;
    }
    goto LABEL_78;
  }
LABEL_171:
  __break(1u);
LABEL_172:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_173:
  __break(1u);
LABEL_174:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_175:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_176:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_177:
  swift_bridgeObjectRelease_n();
  uint64_t result = sub_1AFFCB998();
  __break(1u);
  return result;
}

uint64_t sub_1AFF52F80(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  swift_bridgeObjectRetain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v4 = sub_1AFEE62E4(v4);
  }
  uint64_t v5 = *(void *)(v4 + 16);
  v7[0] = v4 + 32;
  v7[1] = v5;
  sub_1AFFC8E38();
  sub_1AFF51C98(v7, a2);
  swift_bridgeObjectRelease();
  *a1 = v4;
  return swift_bridgeObjectRelease_n();
}

unint64_t sub_1AFF53028()
{
  unint64_t result = qword_1E9AFCD48;
  if (!qword_1E9AFCD48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFCD48);
  }
  return result;
}

unint64_t sub_1AFF53080()
{
  unint64_t result = qword_1E9AFCD50[0];
  if (!qword_1E9AFCD50[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9AFCD50);
  }
  return result;
}

uint64_t sub_1AFF530D4()
{
  return sub_1AFF53204(&qword_1EB810BC0, (void (*)(uint64_t))type metadata accessor for SymbolEntity);
}

unint64_t sub_1AFF53120()
{
  unint64_t result = qword_1E9AFCD70;
  if (!qword_1E9AFCD70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFCD70);
  }
  return result;
}

uint64_t sub_1AFF53174()
{
  return sub_1AFF53204((unint64_t *)&qword_1EB816B20, (void (*)(uint64_t))type metadata accessor for SymbolEntity);
}

uint64_t sub_1AFF531BC()
{
  return sub_1AFF53204(&qword_1E9AFCD78, sub_1AFF5324C);
}

uint64_t sub_1AFF53204(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1AFF5324C(uint64_t a1)
{
}

void sub_1AFF53288(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = type metadata accessor for SymbolEntity();
    uint64_t v10 = sub_1AFF53204(a3, (void (*)(uint64_t))type metadata accessor for SymbolEntity);
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

ValueMetadata *type metadata accessor for FilteredStockQuery()
{
  return &type metadata for FilteredStockQuery;
}

ValueMetadata *type metadata accessor for SymbolQuery()
{
  return &type metadata for SymbolQuery;
}

void sub_1AFF53340(uint64_t a1)
{
}

uint64_t sub_1AFF5337C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1AFFC8B48();
  *a1 = result;
  return result;
}

uint64_t sub_1AFF533A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1AFFC8B48();
  *a1 = result;
  return result;
}

uint64_t sub_1AFF533D4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1AFFC8B48();
  *a1 = result;
  return result;
}

void sub_1AFF53400()
{
  if (!qword_1E9AFCDB8)
  {
    type metadata accessor for SymbolEntity();
    sub_1AFD823E8();
    sub_1AFF53204(&qword_1EB810BC0, (void (*)(uint64_t))type metadata accessor for SymbolEntity);
    sub_1AFD74388();
    unint64_t v0 = sub_1AFFC8D58();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9AFCDB8);
    }
  }
}

void sub_1AFF534D4()
{
  if (!qword_1E9AFCDC0)
  {
    type metadata accessor for SymbolEntity();
    sub_1AFD823E8();
    sub_1AFD74388();
    unint64_t v0 = sub_1AFFC8F08();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9AFCDC0);
    }
  }
}

void sub_1AFF5356C()
{
  if (!qword_1E9AFCDC8)
  {
    sub_1AFD823E8();
    sub_1AFD74388();
    unint64_t v0 = sub_1AFFC8D28();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9AFCDC8);
    }
  }
}

void sub_1AFF535F0()
{
  if (!qword_1E9AFCDD0)
  {
    sub_1AFD823E8();
    sub_1AFD74388();
    unint64_t v0 = sub_1AFFC8CC8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9AFCDD0);
    }
  }
}

void sub_1AFF5367C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1AFF536E4(uint64_t a1)
{
  return sub_1AFF508EC(a1);
}

uint64_t sub_1AFF536F4(uint64_t a1)
{
  return sub_1AFF507C8(a1);
}

uint64_t objectdestroyTm_2()
{
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_1AFF53748(uint64_t a1)
{
}

uint64_t sub_1AFF5377C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for YahooChartService()
{
  return self;
}

uint64_t sub_1AFF53808(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = *v5;
  char v11 = *a3;
  sub_1AFFC9EF8();
  __swift_project_boxed_opaque_existential_1((void *)(v10 + 16), *(void *)(v10 + 40));
  char v15 = v11;
  id v12 = sub_1AFE902A0(a1, a2, &v15, a4, a5);
  uint64_t v13 = sub_1AFFC9EC8();

  return v13;
}

uint64_t sub_1AFF538AC()
{
  return v0;
}

uint64_t sub_1AFF538B4()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1AFF538CC(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  long long v22 = 0u;
  long long v21 = 0u;
  uint64_t v20 = 0;
  long long v19 = 0u;
  long long v18 = 0u;
  long long v17 = 0u;
  long long v16 = 0u;
  v14[64] = 2;
  long long v15 = 0u;
  sub_1AFECDDF0(v23);
  sub_1AFF53E24((uint64_t)v23, (uint64_t)v14, &qword_1EB819618, (uint64_t)&type metadata for PaidBundleConfiguration);
  v10[21] = 1;
  long long v11 = 0u;
  long long v12 = 0u;
  memset(v13, 0, sizeof(v13));
  sub_1AFECDEAC((uint64_t)v24);
  sub_1AFF53E24((uint64_t)v24, (uint64_t)v10, &qword_1EB8197B8, (uint64_t)&type metadata for ArticleScoringConfiguration);
  sub_1AFECDED0(v25);
  sub_1AFF53E24((uint64_t)v25, (uint64_t)&v9, &qword_1EB819838, (uint64_t)&type metadata for NewsPersonalizationTreatment);
  sub_1AFF76AC8(2, 0, 0, 0, 1, 0, 1, 0, 0.0, v1, v2, v3, v4, v5, v6, v7, 1, 0.0, 1,
    0,
    1,
    0,
    1,
    0,
    1,
    0,
    2,
    2,
    0.0,
    1,
    2,
    2,
    0,
    1,
    0,
    1,
    0.0,
    1,
    0.0,
    1,
    0.0,
    1,
    0.0,
    1,
    0.0,
    1,
    0,
    0,
    0.0,
    1,
    0.0,
    1,
    0.0,
    1,
    0.0,
    1,
    0.0,
    1,
    0.0,
    1,
    0.0,
    1,
    0.0);
  sub_1AFF53EA4(0, &qword_1EB819BD0, (uint64_t)&type metadata for AppConfiguration, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1AFFCA6F8();
}

uint64_t sub_1AFF53DD4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t type metadata accessor for DefaultAppConfigurationService()
{
  return self;
}

uint64_t sub_1AFF53E0C(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DefaultAppConfigurationService);
}

uint64_t sub_1AFF53E24(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1AFF53EA4(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

void sub_1AFF53EA4(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t type metadata accessor for SDSQuoteService()
{
  return self;
}

uint64_t sub_1AFF53F14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v24 = a3;
  uint64_t v6 = sub_1AFFC9E18();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = &v25[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v10 = sub_1AFFC98F8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = &v25[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1AFD2CEB0(v3 + 16, (uint64_t)v25);
  uint64_t v14 = *(void *)(v3 + 56);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v11 + 16))(v13, a2, v10);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v7 + 16))(v9, v24, v6);
  uint64_t v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v25, v26);
  double v16 = MEMORY[0x1F4188790](v15);
  long long v18 = (uint64_t *)&v25[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(uint64_t *, double))(v19 + 16))(v18, v16);
  uint64_t v20 = *v18;
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  id v21 = sub_1AFF541B0(a1, v20, v14, (uint64_t)v13, (uint64_t)v9);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  sub_1AFFC9EF8();
  uint64_t v22 = sub_1AFFC9EC8();

  return v22;
}

uint64_t sub_1AFF5418C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AFF53F14(a1, a2, a3);
}

id sub_1AFF541B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = type metadata accessor for SDSBaseOperationFactory();
  v29[3] = v10;
  v29[4] = &off_1F0875070;
  v29[0] = a2;
  uint64_t v11 = (objc_class *)type metadata accessor for SDSQuoteOperation();
  uint64_t v12 = (char *)objc_allocWithZone(v11);
  uint64_t v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v29, v10);
  double v14 = MEMORY[0x1F4188790](v13);
  double v16 = (uint64_t *)((char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v17 + 16))(v16, v14);
  uint64_t v18 = *v16;
  v28[3] = v10;
  v28[4] = &off_1F0875070;
  v28[0] = v18;
  *(void *)&v12[qword_1EB816960] = a1;
  sub_1AFD2CEB0((uint64_t)v28, (uint64_t)&v12[qword_1EB8170A8]);
  uint64_t v19 = &v12[qword_1EB8170B8];
  uint64_t v20 = sub_1AFFC98F8();
  uint64_t v21 = *(void *)(v20 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v19, a4, v20);
  *(void *)&v12[qword_1EB8170C0] = a3;
  uint64_t v22 = &v12[qword_1EB8170B0];
  uint64_t v23 = sub_1AFFC9E18();
  uint64_t v24 = *(void *)(v23 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v22, a5, v23);
  v27.receiver = v12;
  v27.super_class = v11;
  id v25 = objc_msgSendSuper2(&v27, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(a5, v23);
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(a4, v20);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  return v25;
}

uint64_t dispatch thunk of ArticleScorable.globalCohort.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ArticleScorable.cohorts.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ArticleScorable.sourceChannelID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ArticleScorable.topics.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of ArticleScorable.newsPersonalizationScore.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of ArticleScorable.globalScore.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of ArticleScorable.tabiScore.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of ArticleScorable.importanceScore.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of ArticleScorable.publisherPrior.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of ArticleScorable.publishedDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of ArticleScorable.halfLife.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of ArticleScorable.hasBeenRead.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t sub_1AFF54518()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  __swift_destroy_boxed_opaque_existential_1(v0 + 104);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SDSBaseOperationFactory()
{
  return self;
}

uint64_t sub_1AFF5458C(uint64_t a1, uint64_t a2, unsigned char *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v27 = a5;
  uint64_t v28 = a1;
  uint64_t v9 = sub_1AFFC9E18();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1AFFC98F8();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  double v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(a3) = *a3;
  sub_1AFD2CEB0(v5 + 16, (uint64_t)v29);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a4, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v27, v9);
  uint64_t v17 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v29, v30);
  double v18 = MEMORY[0x1F4188790](v17);
  uint64_t v20 = (uint64_t *)((char *)&v26 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v21 + 16))(v20, v18);
  uint64_t v22 = *v20;
  sub_1AFFC8E38();
  id v23 = sub_1AFF5485C(v28, a2, (char)a3, v22, (uint64_t)v16, (uint64_t)v12);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  sub_1AFFC9EF8();
  sub_1AFFC9EA8();
  uint64_t v24 = sub_1AFFC9EB8();

  swift_release();
  return v24;
}

uint64_t type metadata accessor for SDSChartService()
{
  return self;
}

uint64_t sub_1AFF54838(uint64_t a1, uint64_t a2, unsigned char *a3, uint64_t a4, uint64_t a5)
{
  return sub_1AFF5458C(a1, a2, a3, a4, a5);
}

id sub_1AFF5485C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = type metadata accessor for SDSBaseOperationFactory();
  void v32[3] = v12;
  v32[4] = &off_1F0875070;
  v32[0] = a4;
  uint64_t v13 = (objc_class *)type metadata accessor for SDSChartOperation();
  uint64_t v14 = objc_allocWithZone(v13);
  uint64_t v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v32, v12);
  double v16 = MEMORY[0x1F4188790](v15);
  double v18 = (uint64_t *)((char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v19 + 16))(v18, v16);
  uint64_t v20 = *v18;
  v31[3] = v12;
  v31[4] = &off_1F0875070;
  v31[0] = v20;
  uint64_t v21 = &v14[qword_1EB810DE0];
  *uint64_t v21 = a1;
  v21[1] = a2;
  v14[qword_1EB810DD8] = a3;
  uint64_t v22 = &v14[qword_1EB810DD0];
  uint64_t v23 = sub_1AFFC98F8();
  uint64_t v24 = *(void *)(v23 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v22, a5, v23);
  id v25 = &v14[qword_1EB810DC8];
  uint64_t v26 = sub_1AFFC9E18();
  uint64_t v27 = *(void *)(v26 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v25, a6, v26);
  sub_1AFD2CEB0((uint64_t)v31, (uint64_t)&v14[qword_1EB810DC0]);
  v30.receiver = v14;
  v30.super_class = v13;
  id v28 = objc_msgSendSuper2(&v30, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(a6, v26);
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(a5, v23);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
  return v28;
}

uint64_t sub_1AFF54ADC()
{
  sub_1AFF55008(v0 + OBJC_IVAR____TtC10StocksCore25StubIdentificationService_lockedUserID);
  sub_1AFF55008(v0 + OBJC_IVAR____TtC10StocksCore25StubIdentificationService_lockedAdsUserID);

  return swift_deallocClassInstance();
}

uint64_t sub_1AFF54B50()
{
  return type metadata accessor for StubIdentificationService();
}

uint64_t type metadata accessor for StubIdentificationService()
{
  uint64_t result = qword_1E9AFCDE0;
  if (!qword_1E9AFCDE0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1AFF54BA4()
{
  sub_1AFF54FA8(319, &qword_1E9AFCDF0, MEMORY[0x1E4FBCDD8]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1AFF54C50()
{
  if (MEMORY[0x1E4FBC8F0]) {
    sub_1AFF54FA8(0, &qword_1E9AFCDF0, MEMORY[0x1E4FBCDD8]);
  }
}

uint64_t sub_1AFF54CA8()
{
  uint64_t v1 = sub_1AFFC9938();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  double v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (_DWORD *)(v0 + OBJC_IVAR____TtC10StocksCore25StubIdentificationService_lockedUserID);
  sub_1AFFC8978();
  *uint64_t v5 = 0;
  sub_1AFF54FA8(0, &qword_1E9AFCDF0, MEMORY[0x1E4FBCDD8]);
  uint64_t v7 = v6;
  uint64_t v8 = (char *)v5 + *(int *)(v6 + 28);
  sub_1AFF54FA8(0, qword_1E9AFCDF8, MEMORY[0x1E4FBCDE0]);
  size_t v10 = *(void *)(*(void *)(v9 - 8) + 64);
  bzero(v8, v10);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v2 + 32);
  v11(v8, v4, v1);
  uint64_t v12 = (_DWORD *)(v0 + OBJC_IVAR____TtC10StocksCore25StubIdentificationService_lockedAdsUserID);
  sub_1AFFC8978();
  *uint64_t v12 = 0;
  uint64_t v13 = (char *)v12 + *(int *)(v7 + 28);
  bzero(v13, v10);
  v11(v13, v4, v1);
  return v0;
}

uint64_t sub_1AFF54E48(uint64_t a1, uint64_t a2)
{
  return sub_1AFF54E6C(a1, a2, &OBJC_IVAR____TtC10StocksCore25StubIdentificationService_lockedUserID);
}

void sub_1AFF54E54(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1AFF54E60(uint64_t a1, uint64_t a2)
{
  return sub_1AFF54E6C(a1, a2, &OBJC_IVAR____TtC10StocksCore25StubIdentificationService_lockedAdsUserID);
}

uint64_t sub_1AFF54E6C(uint64_t a1, uint64_t a2, void *a3)
{
  double v4 = (os_unfair_lock_s *)(*v3 + *a3);
  os_unfair_lock_lock(v4);
  sub_1AFF54FA8(0, &qword_1E9AFCDF0, MEMORY[0x1E4FBCDD8]);
  uint64_t v5 = sub_1AFFC9918();
  os_unfair_lock_unlock(v4);
  return v5;
}

void sub_1AFF54EEC(uint64_t a1, uint64_t a2)
{
}

void sub_1AFF54EF8(uint64_t a1, uint64_t a2, void *a3)
{
  double v4 = (os_unfair_lock_s *)(*v3 + *a3);
  os_unfair_lock_lock(v4);
  sub_1AFF54FA8(0, &qword_1E9AFCDF0, MEMORY[0x1E4FBCDD8]);
  uint64_t v6 = (char *)v4 + *(int *)(v5 + 28);
  uint64_t v7 = sub_1AFFC9938();
  (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  sub_1AFFC8978();

  os_unfair_lock_unlock(v4);
}

void sub_1AFF54FA8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_1AFFC9938();
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1AFF55008(uint64_t a1)
{
  sub_1AFF54FA8(0, &qword_1E9AFCDF0, MEMORY[0x1E4FBCDD8]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1AFF55080(void *a1, uint64_t a2)
{
  return sub_1AFF550B0(a1, a2, (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AFF56A04);
}

uint64_t sub_1AFF55098(void *a1, uint64_t a2)
{
  return sub_1AFF550B0(a1, a2, (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AFF56AD0);
}

uint64_t sub_1AFF550B0(void *a1, uint64_t a2, uint64_t (*a3)(void *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  unint64_t v7 = __swift_project_boxed_opaque_existential_1(a1, v5);

  return a3(v7, a2, v3, v5, v6);
}

uint64_t sub_1AFF55118@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_1AFF55120(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _OWORD v6[2] = a2;
  v6[3] = a3;
  sub_1AFF9E08C((void (*)(uint64_t *__return_ptr, _OWORD *))sub_1AFF56B9C, (uint64_t)v6, a1);
  uint64_t v3 = (void *)sub_1AFFCA5E8();
  uint64_t v4 = sub_1AFFCA548();
  swift_bridgeObjectRelease();

  return v4;
}

uint64_t sub_1AFF551B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a1 + 112);
  v16[6] = *(_OWORD *)(a1 + 96);
  v16[7] = v4;
  uint64_t v17 = *(void *)(a1 + 128);
  long long v5 = *(_OWORD *)(a1 + 48);
  _OWORD v16[2] = *(_OWORD *)(a1 + 32);
  v16[3] = v5;
  long long v6 = *(_OWORD *)(a1 + 80);
  v16[4] = *(_OWORD *)(a1 + 64);
  v16[5] = v6;
  long long v7 = *(_OWORD *)(a1 + 16);
  v16[0] = *(_OWORD *)a1;
  v16[1] = v7;
  (*(void (**)(void, void, uint64_t))(a3 + 16))(v7, *((void *)&v7 + 1), a2);
  uint64_t v8 = swift_allocObject();
  long long v9 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v8 + 112) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v8 + 128) = v9;
  *(void *)(v8 + 144) = *(void *)(a1 + 128);
  long long v10 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v8 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v8 + 64) = v10;
  long long v11 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v8 + 80) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v8 + 96) = v11;
  long long v12 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v8 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v8 + 32) = v12;
  sub_1AFD76370((uint64_t)v16);
  uint64_t v13 = (void *)sub_1AFFCA5E8();
  uint64_t v14 = sub_1AFFCA678();
  swift_release();
  swift_release();

  return v14;
}

uint64_t sub_1AFF552BC(long long *a1, uint64_t a2, uint64_t a3)
{
  long long v5 = a1[4];
  *(_OWORD *)(v4 + 232) = a1[5];
  long long v6 = a1[7];
  *(_OWORD *)(v4 + 248) = a1[6];
  *(_OWORD *)(v4 + 264) = v6;
  long long v7 = *a1;
  *(_OWORD *)(v4 + 168) = a1[1];
  long long v8 = a1[3];
  *(_OWORD *)(v4 + 184) = a1[2];
  *(_OWORD *)(v4 + 200) = v8;
  *(_OWORD *)(v4 + 216) = v5;
  *(void *)(v4 + 432) = a3;
  *(void *)(v4 + 440) = v3;
  *(void *)(v4 + 424) = a2;
  *(void *)(v4 + 280) = *((void *)a1 + 16);
  *(_OWORD *)(v4 + 152) = v7;
  return MEMORY[0x1F4188298](sub_1AFF5531C, 0, 0);
}

uint64_t sub_1AFF5531C()
{
  v0[56] = (*(uint64_t (**)(void *, void))(v0[54] + 8))(v0 + 19, v0[53]);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[57] = v1;
  void *v1 = v0;
  v1[1] = sub_1AFF553E0;
  return MEMORY[0x1F415EBC8](v0 + 2);
}

uint64_t sub_1AFF553E0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 464) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_1AFF55548;
  }
  else
  {
    long long v4 = *(_OWORD *)(v2 + 128);
    *(_OWORD *)(v2 + 384) = *(_OWORD *)(v2 + 112);
    *(_OWORD *)(v2 + 400) = v4;
    *(void *)(v2 + 416) = *(void *)(v2 + 144);
    long long v5 = *(_OWORD *)(v2 + 64);
    *(_OWORD *)(v2 + 320) = *(_OWORD *)(v2 + 48);
    *(_OWORD *)(v2 + 336) = v5;
    long long v6 = *(_OWORD *)(v2 + 96);
    *(_OWORD *)(v2 + 352) = *(_OWORD *)(v2 + 80);
    *(_OWORD *)(v2 + 368) = v6;
    long long v7 = *(_OWORD *)(v2 + 32);
    *(_OWORD *)(v2 + 288) = *(_OWORD *)(v2 + 16);
    *(_OWORD *)(v2 + 304) = v7;
    sub_1AFD76408(v2 + 288);
    swift_release();
    uint64_t v3 = sub_1AFF55530;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1AFF55530()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1AFF55548()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1AFF555AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a2;
  v4[5] = a3;
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(a1 + 24);
  v4[6] = v3;
  v4[7] = v5;
  v4[8] = v6;
  return MEMORY[0x1F4188298](sub_1AFF555D8, 0, 0);
}

uint64_t sub_1AFF555D8()
{
  v0[9] = (*(uint64_t (**)(void, void, void))(v0[5] + 16))(v0[7], v0[8], v0[4]);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[10] = v1;
  void *v1 = v0;
  v1[1] = sub_1AFF5569C;
  return MEMORY[0x1F415EBC8](v0 + 2);
}

uint64_t sub_1AFF5569C()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1AFD4F17C;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v2 = sub_1AFF55530;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1AFF557C4(uint64_t a1, uint64_t a2)
{
  void v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  return MEMORY[0x1F4188298](sub_1AFF557E8, 0, 0);
}

uint64_t sub_1AFF557E8()
{
  v0[6] = (*(uint64_t (**)(void))(v0[4] + 48))(v0[3]);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[7] = v1;
  void *v1 = v0;
  v1[1] = sub_1AFF558A8;
  return MEMORY[0x1F415EBC8](v0 + 2);
}

uint64_t sub_1AFF558A8()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1AFEC0910;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1AFD4F160;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1AFF559C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v6 + 720) = v5;
  *(void *)(v6 + 712) = a5;
  *(void *)(v6 + 704) = a4;
  *(void *)(v6 + 696) = a2;
  long long v7 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v6 + 384) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v6 + 400) = v7;
  *(void *)(v6 + 416) = *(void *)(a1 + 128);
  long long v8 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v6 + 320) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v6 + 336) = v8;
  long long v9 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v6 + 352) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v6 + 368) = v9;
  long long v10 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v6 + 288) = *(_OWORD *)a1;
  *(_OWORD *)(v6 + 304) = v10;
  sub_1AFE30CCC(a3, v6 + 16);
  return MEMORY[0x1F4188298](sub_1AFF55A68, 0, 0);
}

uint64_t sub_1AFF55A68()
{
  uint64_t v1 = v0[89];
  uint64_t v2 = v0[88];
  uint64_t v3 = v0[87];
  sub_1AFE30CCC((uint64_t)(v0 + 2), (uint64_t)(v0 + 53));
  v0[91] = (*(uint64_t (**)(void *, uint64_t, void *, uint64_t, uint64_t))(v1 + 24))(v0 + 36, v3, v0 + 53, v2, v1);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[92] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1AFF55B70;
  return MEMORY[0x1F415EBC8](v0 + 19);
}

uint64_t sub_1AFF55B70()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 744) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_1AFF55CD4;
  }
  else
  {
    long long v4 = *(_OWORD *)(v2 + 232);
    long long v5 = *(_OWORD *)(v2 + 248);
    *(void *)(v2 + 688) = *(void *)(v2 + 280);
    long long v6 = *(_OWORD *)(v2 + 168);
    long long v7 = *(_OWORD *)(v2 + 200);
    *(_OWORD *)(v2 + 592) = *(_OWORD *)(v2 + 184);
    *(_OWORD *)(v2 + 608) = v7;
    *(_OWORD *)(v2 + 624) = *(_OWORD *)(v2 + 216);
    *(_OWORD *)(v2 + 640) = v4;
    *(_OWORD *)(v2 + 560) = *(_OWORD *)(v2 + 152);
    *(_OWORD *)(v2 + 576) = v6;
    long long v8 = *(_OWORD *)(v2 + 264);
    *(_OWORD *)(v2 + 656) = v5;
    *(_OWORD *)(v2 + 672) = v8;
    sub_1AFD76408(v2 + 560);
    swift_release();
    uint64_t v3 = sub_1AFF55530;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1AFF55CD4()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t WatchlistDiff.changes.getter()
{
  return sub_1AFFC8E38();
}

uint64_t WatchlistDiff.newWatchlist.getter()
{
  return sub_1AFFC8E38();
}

uint64_t WatchlistDiff.updatedName.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_1AFFC8E38();
  return v1;
}

void WatchlistDiff.updatedSortState.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 32);
}

void WatchlistDiff.updatedDisplayState.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 33);
}

BOOL WatchlistDiff.isEmpty.getter()
{
  if (*(void *)(*(void *)v0 + 16)) {
    return 0;
  }
  if (*(void *)(*(void *)(v0 + 8) + 16) | *(void *)(v0 + 24)) {
    BOOL v2 = 0;
  }
  else {
    BOOL v2 = *(unsigned __int8 *)(v0 + 32) > 0xFDu;
  }
  return v2 && *(unsigned char *)(v0 + 33) == 3;
}

uint64_t WatchlistDiff.didAddStocks.getter()
{
  sub_1AFF56CE4();
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  long long v5 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  long long v8 = (char *)v25 - v7;
  uint64_t v9 = *v0;
  uint64_t v10 = *(void *)(*v0 + 16);
  if (!v10) {
    return 0;
  }
  v25[0] = v3;
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  uint64_t v11 = v3 + 16;
  uint64_t v12 = v13;
  uint64_t v14 = v9 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
  int v27 = *MEMORY[0x1E4FAAAB8];
  uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
  uint64_t v16 = *(void *)(v11 + 56);
  v25[1] = v9;
  uint64_t v26 = v16;
  swift_bridgeObjectRetain_n();
  while (1)
  {
    v12(v8, v14, v2);
    v12(v5, (uint64_t)v8, v2);
    int v17 = (*(uint64_t (**)(char *, uint64_t))(v11 + 72))(v5, v2);
    if (v17 == v27) {
      break;
    }
    double v18 = *v15;
    (*v15)(v5, v2);
    v18(v8, v2);
    v14 += v26;
    if (!--v10)
    {
      swift_bridgeObjectRelease_n();
      return 0;
    }
  }
  uint64_t v20 = v25[0] + 96;
  (*(void (**)(char *, uint64_t))(v25[0] + 96))(v5, v2);
  long long v21 = *((_OWORD *)v5 + 7);
  v28[6] = *((_OWORD *)v5 + 6);
  v28[7] = v21;
  uint64_t v29 = *((void *)v5 + 16);
  long long v22 = *((_OWORD *)v5 + 3);
  v28[2] = *((_OWORD *)v5 + 2);
  v28[3] = v22;
  long long v23 = *((_OWORD *)v5 + 5);
  v28[4] = *((_OWORD *)v5 + 4);
  void v28[5] = v23;
  long long v24 = *((_OWORD *)v5 + 1);
  v28[0] = *(_OWORD *)v5;
  v28[1] = v24;
  sub_1AFD76408((uint64_t)v28);
  (*(void (**)(char *, uint64_t))(v20 - 88))(v8, v2);
  swift_bridgeObjectRelease_n();
  return 1;
}

uint64_t WatchlistDiff.init(changes:newWatchlist:updatedName:updatedSortState:updatedDisplayState:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, char *a6@<X5>, uint64_t a7@<X8>)
{
  char v7 = *a5;
  char v8 = *a6;
  *(void *)a7 = result;
  *(void *)(a7 + 8) = a2;
  *(void *)(a7 + 16) = a3;
  *(void *)(a7 + 24) = a4;
  *(unsigned char *)(a7 + 32) = v7;
  *(unsigned char *)(a7 + 33) = v8;
  return result;
}

uint64_t sub_1AFF56030()
{
  uint64_t v1 = *v0;
  uint64_t v25 = *v0 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(*v0 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  unint64_t v4 = v3 & *(void *)(*v0 + 64);
  int64_t v26 = (unint64_t)(v2 + 63) >> 6;
  uint64_t result = sub_1AFFC8E38();
  int64_t v6 = 0;
  uint64_t v7 = MEMORY[0x1E4FBB1A0];
  while (1)
  {
    if (v4)
    {
      unint64_t v17 = __clz(__rbit64(v4));
      v4 &= v4 - 1;
      unint64_t v18 = v17 | (v6 << 6);
      goto LABEL_22;
    }
    int64_t v19 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v19 >= v26) {
      goto LABEL_24;
    }
    unint64_t v20 = *(void *)(v25 + 8 * v19);
    ++v6;
    if (!v20)
    {
      int64_t v6 = v19 + 1;
      if (v19 + 1 >= v26) {
        goto LABEL_24;
      }
      unint64_t v20 = *(void *)(v25 + 8 * v6);
      if (!v20)
      {
        int64_t v6 = v19 + 2;
        if (v19 + 2 >= v26) {
          goto LABEL_24;
        }
        unint64_t v20 = *(void *)(v25 + 8 * v6);
        if (!v20) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v4 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v6 << 6);
LABEL_22:
    long long v22 = *(void **)(*(void *)(v1 + 56) + 8 * v18);
    sub_1AFFC8E38();
    id v23 = v22;
    sub_1AFFCB7F8();
    sub_1AFFCAFA8();
    sub_1AFFCAFA8();
    swift_bridgeObjectRelease();
    sub_1AFFCAFA8();
    id v24 = objc_msgSend(v23, sel_updatedName);
    if (v24)
    {
      char v8 = v24;
      sub_1AFFCAE98();
    }
    sub_1AFECDF00(0, (unint64_t *)&qword_1EB819C90);
    sub_1AFFCAF08();
    sub_1AFFCAFA8();
    swift_bridgeObjectRelease();
    sub_1AFFCAFA8();
    id v9 = objc_msgSend(v23, sel_addedSymbols);
    uint64_t v10 = sub_1AFFCB1C8();

    MEMORY[0x1B3E8D630](v10, v7);
    sub_1AFFCAFA8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1AFFCAFA8();
    id v11 = objc_msgSend(v23, sel_removedSymbols);
    uint64_t v12 = sub_1AFFCB1C8();

    MEMORY[0x1B3E8D630](v12, v7);
    sub_1AFFCAFA8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1AFFCAFA8();
    id v13 = objc_msgSend(v23, sel_reorderedSymbols);
    uint64_t v14 = sub_1AFFCB1C8();

    MEMORY[0x1B3E8D630](v14, v7);
    sub_1AFFCAFA8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1AFFCAFA8();
    id v15 = objc_msgSend(v23, sel_updatedSortState);
    sub_1AFF56D40();
    sub_1AFFCAF08();
    sub_1AFFCAFA8();
    swift_bridgeObjectRelease();
    sub_1AFFCAFA8();
    id v16 = objc_msgSend(v23, sel_updatedSortOrderState);
    sub_1AFFCAF08();
    sub_1AFFCAFA8();
    swift_bridgeObjectRelease();
    sub_1AFFCAFA8();
    objc_msgSend(v23, sel_updatedDisplayState);
    sub_1AFFCAF08();
    sub_1AFFCAFA8();
    swift_bridgeObjectRelease();
    sub_1AFFCAFA8();
    sub_1AFFCAFA8();

    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v26)
  {
LABEL_24:
    swift_release();
    return 0x73696C6863746157;
  }
  unint64_t v20 = *(void *)(v25 + 8 * v21);
  if (v20)
  {
    int64_t v6 = v21;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v6 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v6 >= v26) {
      goto LABEL_24;
    }
    unint64_t v20 = *(void *)(v25 + 8 * v6);
    ++v21;
    if (v20) {
      goto LABEL_21;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1AFF565A8()
{
  return sub_1AFFC8E38();
}

unint64_t sub_1AFF565B0()
{
  unint64_t v1 = 0xD000000000000015;
  sub_1AFD387D0();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  int64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v0;
  unint64_t v27 = 0xD000000000000015;
  unint64_t v28 = 0x80000001AFFFBD20;
  uint64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    id v11 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    uint64_t v9 = v4 + 16;
    uint64_t v10 = v11;
    uint64_t v12 = v7 + ((*(unsigned __int8 *)(v9 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 64));
    uint64_t v24 = *(void *)(v9 + 56);
    int v23 = *MEMORY[0x1E4FAAAB8];
    int v22 = *MEMORY[0x1E4FAAAC0];
    int v21 = *MEMORY[0x1E4FAAAB0];
    uint64_t v17 = v7;
    unint64_t v18 = (void (**)(char *, uint64_t))(v9 - 8);
    id v13 = (void (**)(char *, uint64_t))(v9 + 80);
    sub_1AFFC8E38();
    int64_t v19 = v11;
    while (1)
    {
      v10(v6, v12, v3);
      int v15 = (*(uint64_t (**)(char *, uint64_t))(v9 + 72))(v6, v3);
      if (v15 == v23) {
        break;
      }
      if (v15 == v22)
      {
        (*v13)(v6, v3);
        v26[0] = 0x6465766F6D65525BLL;
        unint64_t v14 = 0xEA0000000000203ALL;
        goto LABEL_4;
      }
      if (v15 != v21)
      {
        (*v18)(v6, v3);
        goto LABEL_6;
      }
      (*v13)(v6, v3);
      uint64_t v20 = *((void *)v6 + 2);
      v26[0] = 0;
      v26[1] = 0xE000000000000000;
      sub_1AFFCB7F8();
      swift_bridgeObjectRelease();
      strcpy((char *)v26, "[Reordered: ");
      BYTE5(v26[1]) = 0;
      HIWORD(v26[1]) = -5120;
      sub_1AFFCAFA8();
      uint64_t v10 = v19;
      swift_bridgeObjectRelease();
      sub_1AFFCAFA8();
      uint64_t v25 = v20;
      sub_1AFFCBC88();
LABEL_5:
      sub_1AFFCAFA8();
      swift_bridgeObjectRelease();
      sub_1AFFCAFA8();
      sub_1AFFCAFA8();
      swift_bridgeObjectRelease();
LABEL_6:
      v12 += v24;
      if (!--v8)
      {
        swift_bridgeObjectRelease();
        return v27;
      }
    }
    (*v13)(v6, v3);
    v26[0] = 0x203A64656464415BLL;
    unint64_t v14 = 0xE800000000000000;
LABEL_4:
    v26[1] = v14;
    goto LABEL_5;
  }
  return v1;
}

uint64_t sub_1AFF56914()
{
  sub_1AFD68928(v0 + 16);
  return v0;
}

uint64_t sub_1AFF56934()
{
  sub_1AFD68928(v0 + 16);

  return swift_deallocClassInstance();
}

uint64_t sub_1AFF5696C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AFF5699C(a1, a2, a3, a4, (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AFF56A04);
}

uint64_t sub_1AFF56984(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AFF5699C(a1, a2, a3, a4, (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AFF56AD0);
}

uint64_t sub_1AFF5699C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = a1[3];
  uint64_t v8 = a1[4];
  uint64_t v9 = __swift_project_boxed_opaque_existential_1(a1, v7);

  return a5(v9, a2, v5, v7, v8);
}

uint64_t sub_1AFF56A04(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v15[3] = a4;
  v15[4] = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v15);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16))(boxed_opaque_existential_1, a1, a4);
  uint64_t v10 = *a2;
  if (MEMORY[0x1B3E8F200](a3 + 16))
  {
    uint64_t v11 = *(void *)(a3 + 24);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v14 = v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t, uint64_t))(v11 + 8))(v15, &v14, ObjectType, v11);
    swift_unknownObjectRelease();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
}

uint64_t sub_1AFF56AD0(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v15[3] = a4;
  v15[4] = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v15);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16))(boxed_opaque_existential_1, a1, a4);
  uint64_t v10 = *a2;
  if (MEMORY[0x1B3E8F200](a3 + 16))
  {
    uint64_t v11 = *(void *)(a3 + 24);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v14 = v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t, uint64_t))(v11 + 16))(v15, &v14, ObjectType, v11);
    swift_unknownObjectRelease();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
}

uint64_t sub_1AFF56B9C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v5 = *(void *)(v2 + 24);
  long long v6 = *(_OWORD *)(a1 + 112);
  v11[6] = *(_OWORD *)(a1 + 96);
  v11[7] = v6;
  uint64_t v12 = *(void *)(a1 + 128);
  long long v7 = *(_OWORD *)(a1 + 48);
  void v11[2] = *(_OWORD *)(a1 + 32);
  v11[3] = v7;
  long long v8 = *(_OWORD *)(a1 + 80);
  v11[4] = *(_OWORD *)(a1 + 64);
  v11[5] = v8;
  long long v9 = *(_OWORD *)(a1 + 16);
  v11[0] = *(_OWORD *)a1;
  v11[1] = v9;
  uint64_t result = (*(uint64_t (**)(_OWORD *, uint64_t))(v5 + 8))(v11, v4);
  *a2 = result;
  return result;
}

uint64_t sub_1AFF56C20()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 152, 7);
}

uint64_t sub_1AFF56C90@<X0>(uint64_t a1@<X8>)
{
  long long v2 = *(_OWORD *)(v1 + 128);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(v1 + 112);
  *(_OWORD *)(a1 + 112) = v2;
  *(void *)(a1 + 128) = *(void *)(v1 + 144);
  long long v3 = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(a1 + 48) = v3;
  long long v4 = *(_OWORD *)(v1 + 96);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(v1 + 80);
  *(_OWORD *)(a1 + 80) = v4;
  long long v5 = *(_OWORD *)(v1 + 32);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(a1 + 16) = v5;
  return sub_1AFD76370(v1 + 16);
}

void sub_1AFF56CE4()
{
  if (!qword_1EB818790)
  {
    sub_1AFD388C0();
    unint64_t v0 = sub_1AFFCA0B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB818790);
    }
  }
}

void sub_1AFF56D40()
{
  if (!qword_1EB8184E0)
  {
    sub_1AFD7BE90();
    unint64_t v0 = sub_1AFFCB658();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8184E0);
    }
  }
}

uint64_t sub_1AFF56D98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1AFF56DAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t sub_1AFF56DC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t sub_1AFF56DD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t sub_1AFF56DE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 40))();
}

uint64_t sub_1AFF56DFC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t sub_1AFF56E10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t sub_1AFF56E24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t sub_1AFF56E38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 72))();
}

uint64_t sub_1AFF56E4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 80))();
}

uint64_t sub_1AFF56E60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t sub_1AFF56E74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 96))();
}

uint64_t sub_1AFF56E88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 104))();
}

uint64_t sub_1AFF56E9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 112))();
}

uint64_t sub_1AFF56EB0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t sub_1AFF56EC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 128))();
}

uint64_t sub_1AFF56ED8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 136))();
}

uint64_t sub_1AFF56EEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 144))();
}

uint64_t sub_1AFF56F00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 152))();
}

uint64_t sub_1AFF56F14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 160))();
}

uint64_t sub_1AFF56F28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 168))();
}

uint64_t sub_1AFF56F3C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 176))();
}

uint64_t sub_1AFF56F50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 184))();
}

uint64_t sub_1AFF56F64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 192))();
}

uint64_t sub_1AFF56F78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 200))();
}

uint64_t initializeWithCopy for WatchlistDiff(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  return a1;
}

uint64_t assignWithCopy for WatchlistDiff(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  return a1;
}

__n128 __swift_memcpy34_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for WatchlistDiff(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for WatchlistDiff(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 34)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WatchlistDiff(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(_WORD *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 34) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 34) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WatchlistDiff()
{
  return &type metadata for WatchlistDiff;
}

ValueMetadata *type metadata accessor for WatchlistSymbolsDiff()
{
  return &type metadata for WatchlistSymbolsDiff;
}

ValueMetadata *type metadata accessor for WatchlistOrderDiff()
{
  return &type metadata for WatchlistOrderDiff;
}

uint64_t sub_1AFF5719C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t sub_1AFF571B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t type metadata accessor for WatchlistServiceObserverProxy()
{
  return self;
}

uint64_t sub_1AFF571E8(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for WatchlistServiceObserverProxy);
}

uint64_t static CacheDatabase.Default.getter()
{
  return 0x746C7561666544;
}

uint64_t static CacheDatabase.Shared.getter()
{
  return 0x646572616853;
}

uint64_t static CacheDatabase.Charts.getter()
{
  return 0x737472616843;
}

unint64_t static CacheDatabase.shouldPersistCharts.getter()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_1AFF57264@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1AFF572E4(a1, 0x61642D6568636163, 0xEE00657361626174, a2);
}

uint64_t sub_1AFF572A8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1AFF572E4(a1, 0x642D646572616873, 0xEF65736162617461, a2);
}

uint64_t sub_1AFF572E4@<X0>(void *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t *a4@<X8>)
{
  v21[1] = a2;
  void v21[2] = a3;
  int v22 = a4;
  sub_1AFF590E0(0, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  long long v7 = (char *)v21 - v6;
  uint64_t v8 = sub_1AFFC96E8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v21 - v13;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFFC9E48();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v7, v8);
    sub_1AFFC9648();
    uint64_t v16 = sub_1AFFC96A8();
    uint64_t v18 = v17;
    int64_t v19 = *(void (**)(char *, uint64_t))(v9 + 8);
    v19(v11, v8);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v19)(v14, v8);
    uint64_t v20 = v22;
    *int v22 = v16;
    v20[1] = v18;
  }
  return result;
}

uint64_t sub_1AFF57520@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1AFF572E4(a1, 0xD000000000000012, 0x80000001AFFFBDA0, a2);
}

uint64_t sub_1AFF57558()
{
  sub_1AFFC9F98();
  sub_1AFFCA388();
  swift_release();
  swift_release();
  sub_1AFFC9F98();
  sub_1AFFCA388();
  swift_release();
  swift_release();
  sub_1AFFC9F98();
  sub_1AFFCA388();
  swift_release();

  return swift_release();
}

uint64_t sub_1AFF5767C()
{
  uint64_t v0 = sub_1AFFCAAD8();
  __swift_allocate_value_buffer(v0, qword_1EB811540);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB811540);
  uint64_t v2 = *MEMORY[0x1E4FAA748];
  long long v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 104);

  return v3(v1, v2, v0);
}

uint64_t sub_1AFF57704@<X0>(uint64_t a1@<X8>)
{
  return sub_1AFF577D8(&qword_1EB8114A8, (uint64_t)qword_1EB811540, a1);
}

uint64_t sub_1AFF57728()
{
  uint64_t v0 = sub_1AFFCAAD8();
  __swift_allocate_value_buffer(v0, qword_1EB811AA0);
  *(void *)__swift_project_value_buffer(v0, (uint64_t)qword_1EB811AA0) = 0;
  uint64_t v1 = *(uint64_t (**)(void))(*(void *)(v0 - 8) + 104);

  return v1();
}

uint64_t sub_1AFF577B4@<X0>(uint64_t a1@<X8>)
{
  return sub_1AFF577D8(&qword_1EB81A2F0, (uint64_t)qword_1EB811AA0, a1);
}

uint64_t sub_1AFF577D8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1AFFCAAD8();
  uint64_t v6 = __swift_project_value_buffer(v5, a2);
  long long v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v7(a3, v6, v5);
}

uint64_t sub_1AFF57870@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(void, void, void)@<X2>, uint64_t *a4@<X8>)
{
  v6[0] = a1;
  v6[1] = a2;
  uint64_t result = sub_1AFF5881C(v6, a3);
  *a4 = result;
  return result;
}

uint64_t sub_1AFF578AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v24 = a1;
  uint64_t v1 = sub_1AFFCAA78();
  uint64_t v22 = *(void *)(v1 - 8);
  uint64_t v23 = v1;
  MEMORY[0x1F4188790](v1);
  int v21 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1AFFCAAD8();
  uint64_t v3 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  int64_t v19 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1AFFCAA98();
  uint64_t v5 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v17 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1AFFCAA88();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1AFFCAA08();
  MEMORY[0x1F4188790](v11);
  uint64_t v12 = sub_1AFFCAAB8();
  double v13 = MEMORY[0x1F4188790](v12);
  (*(void (**)(char *, void, double))(v15 + 104))((char *)&v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4FAA730], v13);
  uint64_t v25 = MEMORY[0x1E4FBC860];
  sub_1AFF5909C(&qword_1EB81A5E8);
  sub_1AFF590E0(0, &qword_1EB81A5F8, MEMORY[0x1E4FAA678], MEMORY[0x1E4FBB320]);
  sub_1AFF58794();
  sub_1AFFCB738();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FAA710], v7);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v17, *MEMORY[0x1E4FAA718], v18);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v19, *MEMORY[0x1E4FAA748], v20);
  (*(void (**)(char *, void, uint64_t))(v22 + 104))(v21, *MEMORY[0x1E4FAA700], v23);
  sub_1AFFCAAE8();
  swift_allocObject();
  LOBYTE(v25) = 1;
  uint64_t result = sub_1AFFCAAC8();
  *uint64_t v24 = result;
  return result;
}

uint64_t sub_1AFF57D54()
{
  uint64_t v0 = sub_1AFFC96E8();
  __swift_allocate_value_buffer(v0, qword_1E9AFCE20);
  __swift_project_value_buffer(v0, (uint64_t)qword_1E9AFCE20);
  uint64_t v1 = NSSearchPathForDirectoriesInDomains(NSCachesDirectory, 1uLL, 1);
  uint64_t v2 = sub_1AFFCB1C8();

  if (*(void *)(v2 + 16))
  {
    sub_1AFFC8E38();
    swift_bridgeObjectRelease();
    sub_1AFFC9618();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AFF57E24()
{
  uint64_t v0 = sub_1AFFC96E8();
  __swift_allocate_value_buffer(v0, qword_1E9AFCE38);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1E9AFCE38);
  return sub_1AFF57E70(v1);
}

uint64_t sub_1AFF57E70@<X0>(uint64_t a1@<X8>)
{
  uint64_t v28 = a1;
  uint64_t v1 = sub_1AFFC95F8();
  uint64_t v27 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFF590E0(0, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v23 - v5;
  uint64_t v7 = sub_1AFFC96E8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  double v13 = (char *)&v23 - v12;
  id v14 = objc_msgSend(self, sel_defaultManager);
  uint64_t v15 = (void *)sub_1AFFCAE68();
  id v16 = objc_msgSend(v14, sel_containerURLForSecurityApplicationGroupIdentifier_, v15);

  if (v16)
  {
    sub_1AFFC9678();

    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v17(v6, v10, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
    {
      int64_t v26 = v13;
      v17(v13, v6, v7);
      uint64_t v29 = 0x7972617262694CLL;
      unint64_t v30 = 0xE700000000000000;
      unsigned int v25 = *MEMORY[0x1E4F276A8];
      uint64_t v18 = v27;
      uint64_t v24 = *(void (**)(char *))(v27 + 104);
      v24(v3);
      sub_1AFD3AE10();
      sub_1AFFC96D8();
      int64_t v19 = *(void (**)(char *, uint64_t))(v18 + 8);
      v19(v3, v1);
      swift_bridgeObjectRelease();
      uint64_t v29 = 0x736568636143;
      unint64_t v30 = 0xE600000000000000;
      ((void (*)(char *, void, uint64_t))v24)(v3, v25, v1);
      sub_1AFFC96D8();
      v19(v3, v1);
      swift_bridgeObjectRelease();
      uint64_t v20 = *(void (**)(char *, uint64_t))(v8 + 8);
      v20(v10, v7);
      return ((uint64_t (*)(char *, uint64_t))v20)(v26, v7);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
  }
  sub_1AFD48D50((uint64_t)v6);
  if (qword_1E9AF8E28 != -1) {
    swift_once();
  }
  uint64_t v22 = __swift_project_value_buffer(v7, (uint64_t)qword_1E9AFCE20);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v28, v22, v7);
}

uint64_t sub_1AFF582F8()
{
  return 0x746C7561666544;
}

uint64_t sub_1AFF58310()
{
  uint64_t v0 = sub_1AFFC96E8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E9AF8E28 != -1) {
    swift_once();
  }
  __swift_project_value_buffer(v0, (uint64_t)qword_1E9AFCE20);
  sub_1AFFC9648();
  uint64_t v4 = sub_1AFFC96A8();
  uint64_t v6 = v5;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  qword_1EB817B68 = v4;
  unk_1EB817B70 = v6;
  return result;
}

uint64_t sub_1AFF5845C()
{
  return sub_1AFF586A0(&qword_1EB817B78, &qword_1EB817B68);
}

uint64_t sub_1AFF58484()
{
  return 0x646572616853;
}

uint64_t sub_1AFF58498(uint64_t a1)
{
  return sub_1AFF584C8(a1, 0x642D646572616873, 0xEF65736162617461, &qword_1EB817B50, &qword_1EB817B58);
}

uint64_t sub_1AFF584C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, void *a5)
{
  uint64_t v7 = sub_1AFFC96E8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E9AF8E30 != -1) {
    swift_once();
  }
  __swift_project_value_buffer(v7, (uint64_t)qword_1E9AFCE38);
  sub_1AFFC9648();
  uint64_t v11 = sub_1AFFC96A8();
  uint64_t v13 = v12;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  *a4 = v11;
  *a5 = v13;
  return result;
}

uint64_t sub_1AFF58614()
{
  return sub_1AFF586A0(&qword_1EB817B60, &qword_1EB817B50);
}

uint64_t sub_1AFF5863C()
{
  return 0x737472616843;
}

uint64_t sub_1AFF58650(uint64_t a1)
{
  return sub_1AFF584C8(a1, 0xD000000000000012, 0x80000001AFFFBDA0, &qword_1EB817B38, &qword_1EB817B40);
}

uint64_t sub_1AFF58678()
{
  return sub_1AFF586A0(&qword_1EB817B48, &qword_1EB817B38);
}

uint64_t sub_1AFF586A0(void *a1, uint64_t *a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = *a2;
  sub_1AFFC8E38();
  return v3;
}

unint64_t sub_1AFF586F4()
{
  return 0xD00000000000001ALL;
}

ValueMetadata *type metadata accessor for CacheDatabase()
{
  return &type metadata for CacheDatabase;
}

ValueMetadata *type metadata accessor for CacheDatabase.Location()
{
  return &type metadata for CacheDatabase.Location;
}

uint64_t type metadata accessor for CacheDatabaseAssembly()
{
  return self;
}

ValueMetadata *type metadata accessor for Caches()
{
  return &type metadata for Caches;
}

ValueMetadata *type metadata accessor for Caches.Default()
{
  return &type metadata for Caches.Default;
}

ValueMetadata *type metadata accessor for Caches.Shared()
{
  return &type metadata for Caches.Shared;
}

ValueMetadata *type metadata accessor for Caches.Charts()
{
  return &type metadata for Caches.Charts;
}

unint64_t sub_1AFF58794()
{
  unint64_t result = qword_1EB81A600;
  if (!qword_1EB81A600)
  {
    sub_1AFF590E0(255, &qword_1EB81A5F8, MEMORY[0x1E4FAA678], MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB81A600);
  }
  return result;
}

uint64_t sub_1AFF5881C(uint64_t *a1, void (*a2)(void, void, void))
{
  long long v58 = a2;
  uint64_t v3 = sub_1AFFCAA78();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v63 = v3;
  uint64_t v64 = v4;
  MEMORY[0x1F4188790](v3);
  v53[13] = (char *)v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  long long v57 = (char *)v53 - v7;
  uint64_t v8 = sub_1AFFCAAD8();
  uint64_t v61 = *(void *)(v8 - 8);
  uint64_t v62 = v8;
  MEMORY[0x1F4188790](v8);
  v53[12] = (char *)v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  long long v56 = (char *)v53 - v11;
  uint64_t v60 = sub_1AFFCAA88();
  uint64_t v12 = *(void *)(v60 - 8);
  MEMORY[0x1F4188790](v60);
  v53[11] = (char *)v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  long long v55 = (char *)v53 - v15;
  uint64_t v59 = sub_1AFFCAA98();
  uint64_t v16 = *(void *)(v59 - 8);
  MEMORY[0x1F4188790](v59);
  v53[9] = (char *)v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  long long v54 = (char *)v53 - v19;
  uint64_t v20 = sub_1AFFCAA08();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  v53[8] = (char *)v53 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  unsigned int v25 = (char *)v53 - v24;
  MEMORY[0x1F4188790](v26);
  uint64_t v28 = (char *)v53 - v27;
  MEMORY[0x1F4188790](v29);
  long long v31 = (char *)v53 - v30;
  MEMORY[0x1F4188790](v32);
  uint64_t v33 = sub_1AFFCAAB8();
  MEMORY[0x1F4188790](v33);
  v53[6] = (char *)v53 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v36 = MEMORY[0x1F4188790](v35);
  uint64_t v38 = (void *)((char *)v53 - v37);
  uint64_t v39 = *a1;
  uint64_t v40 = a1[1];
  *uint64_t v38 = v39;
  v38[1] = v40;
  uint64_t v41 = *MEMORY[0x1E4FAA728];
  long long v43 = *(void (**)(char *, uint64_t, double))(v42 + 104);
  v53[5] = v44;
  v53[4] = v42 + 104;
  v53[3] = v43;
  v43((char *)v53 - v37, v41, v36);
  sub_1AFFC8E38();
  sub_1AFFCA9E8();
  sub_1AFFCA9F8();
  sub_1AFF5909C(&qword_1EB81A5E0);
  sub_1AFFCB118();
  sub_1AFF5909C(&qword_1EB81A5F0);
  sub_1AFFCBEC8();
  (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v25, v28, v20);
  v53[2] = sub_1AFF5909C(&qword_1EB81A5E8);
  sub_1AFFCB718();
  long long v45 = *(void (**)(char *, uint64_t))(v21 + 8);
  v45(v28, v20);
  v45(v31, v20);
  uint64_t v46 = *MEMORY[0x1E4FAA718];
  long long v47 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 104);
  v53[7] = v16 + 104;
  v53[1] = v47;
  v47(v54, v46, v59);
  uint64_t v48 = *MEMORY[0x1E4FAA710];
  long long v49 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 104);
  v53[10] = v12 + 104;
  v53[0] = v49;
  v49(v55, v48, v60);
  (*(void (**)(char *, void, uint64_t))(v61 + 16))(v56, v58, v62);
  long long v50 = *(void (**)(void, void, void))(v64 + 104);
  uint64_t v51 = *MEMORY[0x1E4FAA700];
  v64 += 104;
  long long v58 = v50;
  v50(v57, v51, v63);
  sub_1AFFCAAE8();
  swift_allocObject();
  LOBYTE(v65) = 1;
  return sub_1AFFCAAC8();
}

uint64_t sub_1AFF5909C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1AFFCAA08();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1AFF590E0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1AFF59144()
{
  uint64_t result = sub_1AFFCAE68();
  qword_1EB811980 = result;
  return result;
}

id sub_1AFF5917C()
{
  if (qword_1EB811990 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EB811980;

  return v0;
}

uint64_t sub_1AFF591E0(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v19 = a6;
  uint64_t v13 = sub_1AFFC98F8();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v20 = *a3;
  sub_1AFFC98E8();
  uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t, char *, uint64_t, char *, uint64_t, uint64_t, uint64_t))(a7 + 8))(a1, a2, &v20, a4, v16, a5, v19, a7);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  return v17;
}

uint64_t sub_1AFF5931C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 8))();
}

uint64_t sub_1AFF59330(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 16))();
}

uint64_t sub_1AFF59344(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 24))();
}

uint64_t sub_1AFF59358(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t sub_1AFF5936C()
{
  return 0x737472616863;
}

uint64_t sub_1AFF59380(uint64_t a1, uint64_t a2)
{
  uint64_t v27 = a2;
  uint64_t v22 = a1;
  uint64_t v26 = sub_1AFFC9E08();
  uint64_t v23 = *(void *)(v26 - 8);
  uint64_t v24 = v23;
  MEMORY[0x1F4188790](v26);
  unsigned int v25 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1AFFCA2F8();
  MEMORY[0x1F4188790](v4);
  uint64_t v21 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1AFFC9DA8();
  MEMORY[0x1F4188790](v6);
  *(void *)(v2 + 64) = MEMORY[0x1E4FBC868];
  uint64_t v28 = MEMORY[0x1E4FBC860];
  sub_1AFF5CE20(&qword_1EB817C90, 255, MEMORY[0x1E4FAA868]);
  uint64_t v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAA868];
  uint64_t v19 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB320];
  sub_1AFF5C884(0, &qword_1EB818018, MEMORY[0x1E4FAA868], MEMORY[0x1E4FBB320]);
  sub_1AFF5CE68(&qword_1EB818020, &qword_1EB818018, v7);
  sub_1AFFCB738();
  sub_1AFFC9DC8();
  swift_allocObject();
  uint64_t v8 = sub_1AFFC9DB8();
  uint64_t v9 = v20;
  *(void *)(v20 + 72) = v8;
  uint64_t v28 = MEMORY[0x1E4FBC860];
  sub_1AFF5CE20((unint64_t *)&unk_1EB81ABD0, 255, MEMORY[0x1E4FAACC8]);
  uint64_t v10 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAACC8];
  uint64_t v11 = v19;
  sub_1AFF5C884(0, &qword_1EB81AC50, MEMORY[0x1E4FAACC8], v19);
  sub_1AFF5CE68((unint64_t *)&qword_1EB81AC58, &qword_1EB81AC50, v10);
  sub_1AFFCB738();
  sub_1AFF029A4();
  swift_allocObject();
  uint64_t v12 = v9;
  *(void *)(v9 + 80) = sub_1AFFC9F68();
  uint64_t v13 = v9 + 16;
  uint64_t v14 = v22;
  sub_1AFD2CEB0(v22, v13);
  uint64_t v15 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAA910];
  sub_1AFF5C884(0, &qword_1EB81A450, MEMORY[0x1E4FAA910], MEMORY[0x1E4FBBE00]);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1AFFD05F0;
  sub_1AFFC9DF8();
  uint64_t v28 = v16;
  sub_1AFF5CE20((unint64_t *)&unk_1EB81ABB0, 255, MEMORY[0x1E4FAA910]);
  sub_1AFF5C884(0, (unint64_t *)&unk_1EB81AC20, v15, v11);
  sub_1AFF5CE68((unint64_t *)&qword_1EB81AC30, (unint64_t *)&unk_1EB81AC20, v15);
  sub_1AFFCB738();
  sub_1AFF5C884(0, (unint64_t *)&unk_1EB810C00, (uint64_t (*)(uint64_t))sub_1AFF5C8F0, MEMORY[0x1E4FAAFF0]);
  swift_allocObject();
  uint64_t v17 = sub_1AFFCA528();
  __swift_destroy_boxed_opaque_existential_1(v14);
  *(void *)(v12 + 56) = v17;
  return v12;
}

uint64_t sub_1AFF59864@<X0>(uint64_t *a1@<X8>)
{
  sub_1AFFCA508();
  sub_1AFF5C950();
  uint64_t v3 = v2;
  swift_allocObject();
  uint64_t v4 = sub_1AFFCA988();
  a1[3] = v3;
  uint64_t result = sub_1AFF5CE20(&qword_1E9AFCE60, 255, (void (*)(uint64_t))sub_1AFF5C950);
  a1[4] = result;
  *a1 = v4;
  return result;
}

uint64_t sub_1AFF5993C(uint64_t a1)
{
  uint64_t v17 = a1;
  uint64_t v21 = sub_1AFFC9E08();
  uint64_t v18 = *(void *)(v21 - 8);
  uint64_t v19 = v18;
  MEMORY[0x1F4188790](v21);
  uint64_t v20 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1AFFCA2F8();
  MEMORY[0x1F4188790](v3);
  uint64_t v4 = sub_1AFFC9DA8();
  MEMORY[0x1F4188790](v4);
  *(void *)(v1 + 64) = MEMORY[0x1E4FBC868];
  uint64_t v22 = MEMORY[0x1E4FBC860];
  sub_1AFF5CE20(&qword_1EB817C90, 255, MEMORY[0x1E4FAA868]);
  uint64_t v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAA868];
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB320];
  sub_1AFF5C884(0, &qword_1EB818018, MEMORY[0x1E4FAA868], MEMORY[0x1E4FBB320]);
  sub_1AFF5CE68(&qword_1EB818020, &qword_1EB818018, v5);
  sub_1AFFCB738();
  sub_1AFFC9DC8();
  swift_allocObject();
  uint64_t v6 = sub_1AFFC9DB8();
  uint64_t v7 = v16;
  *(void *)(v16 + 72) = v6;
  uint64_t v22 = MEMORY[0x1E4FBC860];
  sub_1AFF5CE20((unint64_t *)&unk_1EB81ABD0, 255, MEMORY[0x1E4FAACC8]);
  uint64_t v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAACC8];
  uint64_t v9 = v15;
  sub_1AFF5C884(0, &qword_1EB81AC50, MEMORY[0x1E4FAACC8], v15);
  sub_1AFF5CE68((unint64_t *)&qword_1EB81AC58, &qword_1EB81AC50, v8);
  sub_1AFFCB738();
  sub_1AFF029A4();
  swift_allocObject();
  *(void *)(v7 + 80) = sub_1AFFC9F68();
  uint64_t v10 = v17;
  sub_1AFD2CEB0(v17, v7 + 16);
  uint64_t v11 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAA910];
  sub_1AFF5C884(0, &qword_1EB81A450, MEMORY[0x1E4FAA910], MEMORY[0x1E4FBBE00]);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1AFFD05F0;
  sub_1AFFC9DF8();
  uint64_t v22 = v12;
  sub_1AFF5CE20((unint64_t *)&unk_1EB81ABB0, 255, MEMORY[0x1E4FAA910]);
  sub_1AFF5C884(0, (unint64_t *)&unk_1EB81AC20, v11, v9);
  sub_1AFF5CE68((unint64_t *)&qword_1EB81AC30, (unint64_t *)&unk_1EB81AC20, v11);
  sub_1AFFCB738();
  sub_1AFF5C884(0, (unint64_t *)&unk_1EB810C00, (uint64_t (*)(uint64_t))sub_1AFF5C8F0, MEMORY[0x1E4FAAFF0]);
  swift_allocObject();
  uint64_t v13 = sub_1AFFCA528();
  __swift_destroy_boxed_opaque_existential_1(v10);
  *(void *)(v7 + 56) = v13;
  return v7;
}

unint64_t sub_1AFF59E08@<X0>(uint64_t *a1@<X8>)
{
  sub_1AFF5CB10(0, &qword_1EB811108, MEMORY[0x1E4FAB018]);
  uint64_t v3 = v2;
  swift_allocObject();
  uint64_t v4 = sub_1AFFCA578();
  a1[3] = v3;
  unint64_t result = sub_1AFF5CA9C();
  a1[4] = result;
  *a1 = v4;
  return result;
}

uint64_t sub_1AFF59E80()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ChartManager()
{
  return self;
}

uint64_t sub_1AFF59EFC(uint64_t a1, unint64_t a2, unsigned __int8 *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v91 = a6;
  uint64_t v80 = a4;
  uint64_t v107 = a1;
  uint64_t v105 = *v6;
  uint64_t v10 = sub_1AFFC9F58();
  uint64_t v95 = *(void *)(v10 - 8);
  uint64_t v96 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v94 = (char *)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1AFFC9E18();
  uint64_t v92 = *(void *)(v12 - 8);
  uint64_t v93 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v88 = v13;
  unint64_t v90 = (char *)&v79 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1AFFC9DE8();
  uint64_t v103 = *(void *)(v14 - 8);
  uint64_t v104 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v102 = (char *)&v79 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1AFFC98F8();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  long long v85 = (char *)&v79 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v79 - v20;
  uint64_t v22 = sub_1AFFC9938();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  unsigned int v25 = (char *)&v79 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(v100) = *a3;
  sub_1AFFC8978();
  uint64_t v106 = sub_1AFFC9918();
  unint64_t v27 = v26;
  (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
  if (qword_1EB810AD8 != -1) {
    swift_once();
  }
  uint64_t v28 = sub_1AFFCA8A8();
  __swift_project_value_buffer(v28, (uint64_t)qword_1EB831A30);
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  uint64_t v89 = a5;
  uint64_t v83 = v17 + 16;
  long long v82 = v29;
  v29(v21, a5, v16);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v30 = sub_1AFFCA888();
  os_log_type_t v31 = sub_1AFFCB478();
  int v32 = v31;
  BOOL v33 = os_log_type_enabled(v30, v31);
  unint64_t v108 = a2;
  uint64_t v87 = v16;
  uint64_t v86 = v17;
  unint64_t v97 = v27;
  if (v33)
  {
    uint64_t v34 = swift_slowAlloc();
    uint64_t v99 = swift_slowAlloc();
    uint64_t v110 = v99;
    *(_DWORD *)uint64_t v34 = 136315650;
    LODWORD(v98) = v32;
    sub_1AFFC8E38();
    uint64_t v109 = sub_1AFD36BA8(v107, v108, &v110);
    sub_1AFFCB688();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v34 + 12) = 2080;
    uint64_t v35 = sub_1AFFC98C8();
    uint64_t v109 = sub_1AFD36BA8(v35, v36, &v110);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v21, v16);
    *(_WORD *)(v34 + 22) = 2080;
    sub_1AFFC8E38();
    uint64_t v109 = sub_1AFD36BA8(v106, v27, &v110);
    sub_1AFFCB688();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AFD01000, v30, (os_log_type_t)v98, "Preparing stock chart request for symbol: %s, earliestBeginDate: %s, requestID: %s", (uint8_t *)v34, 0x20u);
    uint64_t v37 = v99;
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v37, -1, -1);
    MEMORY[0x1B3E8F0D0](v34, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v21, v16);

    swift_bridgeObjectRelease_n();
  }
  uint64_t v39 = v103;
  uint64_t v38 = v104;
  uint64_t v40 = v102;
  uint64_t v110 = 0;
  unint64_t v111 = 0xE000000000000000;
  sub_1AFFCAFA8();
  sub_1AFFCAFA8();
  LOBYTE(v109) = v100;
  sub_1AFFCB928();
  uint64_t v41 = v110;
  unint64_t v42 = v111;
  sub_1AFD627C4();
  uint64_t v43 = swift_allocObject();
  *(_OWORD *)(v43 + 16) = xmmword_1AFFD05F0;
  uint64_t v99 = v41;
  *(void *)(v43 + 32) = v41;
  *(void *)(v43 + 40) = v42;
  uint64_t v81 = v43;
  uint64_t v44 = qword_1EB811028;
  unint64_t v98 = v42;
  sub_1AFFC8E38();
  uint64_t v46 = v89;
  if (v44 != -1) {
    swift_once();
  }
  sub_1AFF5CE20(&qword_1EB810CB0, v45, (void (*)(uint64_t))type metadata accessor for ChartManager);
  sub_1AFFC9BB8();
  uint64_t v47 = v87;
  if (v110 == 1) {
    (*(void (**)(char *, void, uint64_t))(v39 + 104))(v40, *MEMORY[0x1E4FAA8B0], v38);
  }
  else {
    (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v40, v80, v38);
  }
  sub_1AFF5CB10(0, &qword_1EB817D48, MEMORY[0x1E4FAB070]);
  uint64_t v80 = v48;
  long long v49 = v85;
  v82(v85, v46, v47);
  uint64_t v50 = v92;
  uint64_t v51 = v90;
  uint64_t v52 = v93;
  (*(void (**)(char *, uint64_t, uint64_t))(v92 + 16))(v90, v91, v93);
  uint64_t v53 = v86;
  unint64_t v54 = (*(unsigned __int8 *)(v86 + 80) + 57) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80);
  unint64_t v55 = (v84 + *(unsigned __int8 *)(v50 + 80) + v54) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
  unint64_t v56 = (v88 + v55 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v57 = swift_allocObject();
  unint64_t v58 = v97;
  *(void *)(v57 + 16) = v106;
  *(void *)(v57 + 24) = v58;
  uint64_t v59 = v47;
  uint64_t v60 = v101;
  uint64_t v61 = v107;
  *(void *)(v57 + 32) = v101;
  *(void *)(v57 + 40) = v61;
  *(void *)(v57 + 48) = v108;
  *(unsigned char *)(v57 + 56) = v100;
  (*(void (**)(unint64_t, char *, uint64_t))(v53 + 32))(v57 + v54, v49, v59);
  (*(void (**)(unint64_t, char *, uint64_t))(v50 + 32))(v57 + v55, v51, v52);
  uint64_t v62 = (uint64_t *)(v57 + v56);
  uint64_t v63 = v98;
  *uint64_t v62 = v99;
  v62[1] = v63;
  uint64_t v100 = *(void *)(v60 + 80);
  uint64_t v110 = MEMORY[0x1E4FBC860];
  sub_1AFF5CE20((unint64_t *)&qword_1EB81ABC8, 255, MEMORY[0x1E4FAAA28]);
  uint64_t v64 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAA28];
  sub_1AFF5C884(0, &qword_1EB81AC38, MEMORY[0x1E4FAAA28], MEMORY[0x1E4FBB320]);
  sub_1AFF5CE68((unint64_t *)&qword_1EB81AC40, &qword_1EB81AC38, v64);
  swift_retain_n();
  unint64_t v65 = v97;
  swift_bridgeObjectRetain_n();
  unint64_t v66 = v108;
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  uint64_t v67 = v94;
  uint64_t v68 = v96;
  sub_1AFFCB738();
  uint64_t v69 = v106;
  long long v70 = v102;
  sub_1AFFCA608();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release_n();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v95 + 8))(v67, v68);
  (*(void (**)(char *, uint64_t))(v103 + 8))(v70, v104);
  uint64_t v71 = (void *)swift_allocObject();
  v71[2] = v69;
  v71[3] = v65;
  uint64_t v72 = v69;
  unint64_t v73 = v98;
  v71[4] = v99;
  v71[5] = v73;
  v71[6] = v107;
  v71[7] = v66;
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  uint64_t v74 = (void *)sub_1AFFCA5E8();
  type metadata accessor for Chart(0);
  sub_1AFFCA688();
  swift_release();
  swift_release();

  uint64_t v75 = swift_allocObject();
  *(void *)(v75 + 16) = v72;
  *(void *)(v75 + 24) = v65;
  long long v76 = (void *)sub_1AFFCA5E8();
  uint64_t v77 = sub_1AFFCA6B8();
  swift_release();
  swift_release();

  return v77;
}

uint64_t sub_1AFF5AA90(uint64_t a1, uint64_t a2, unint64_t a3, void *a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (qword_1EB810AD8 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_1AFFCA8A8();
  __swift_project_value_buffer(v16, (uint64_t)qword_1EB831A30);
  swift_bridgeObjectRetain_n();
  uint64_t v17 = sub_1AFFCA888();
  os_log_type_t v18 = sub_1AFFCB478();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v31 = a6;
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v32 = a8;
    uint64_t v20 = swift_slowAlloc();
    uint64_t v35 = v20;
    *(_DWORD *)uint64_t v19 = 136315138;
    sub_1AFFC8E38();
    sub_1AFD36BA8(a2, a3, &v35);
    sub_1AFFCB688();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AFD01000, v17, v18, "Performing chart fetch with requestID: %s", v19, 0xCu);
    swift_arrayDestroy();
    uint64_t v21 = v20;
    a8 = v32;
    MEMORY[0x1B3E8F0D0](v21, -1, -1);
    uint64_t v22 = v19;
    a6 = v31;
    MEMORY[0x1B3E8F0D0](v22, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v23 = a4[5];
  uint64_t v24 = a4[6];
  __swift_project_boxed_opaque_existential_1(a4 + 2, v23);
  LOBYTE(v35) = a7;
  (*(void (**)(uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 8))(a5, a6, &v35, a8, a9, v23, v24);
  unsigned int v25 = (void *)swift_allocObject();
  void v25[2] = a2;
  v25[3] = a3;
  v25[4] = a10;
  v25[5] = a11;
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  unint64_t v26 = (void *)sub_1AFFCA5E8();
  sub_1AFF5CB10(0, (unint64_t *)&qword_1EB817E88, MEMORY[0x1E4FBAEA0]);
  sub_1AFFCA668();
  swift_release();
  swift_release();

  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = a2;
  *(void *)(v27 + 24) = a3;
  sub_1AFFC8E38();
  uint64_t v28 = (void *)sub_1AFFCA5E8();
  uint64_t v29 = sub_1AFFCA6B8();
  swift_release();
  swift_release();

  return v29;
}

uint64_t sub_1AFF5ADCC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  if (qword_1EB810AD8 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_1AFFCA8A8();
  __swift_project_value_buffer(v10, (uint64_t)qword_1EB831A30);
  swift_bridgeObjectRetain_n();
  uint64_t v11 = sub_1AFFCA888();
  os_log_type_t v12 = sub_1AFFCB478();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = a2;
    uint64_t v15 = swift_slowAlloc();
    unint64_t v23 = v15;
    *(_DWORD *)uint64_t v13 = 136315138;
    sub_1AFFC8E38();
    sub_1AFD36BA8(v14, a3, (uint64_t *)&v23);
    sub_1AFFCB688();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AFD01000, v11, v12, "Chart fetch with ID: %s returned success", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v15, -1, -1);
    MEMORY[0x1B3E8F0D0](v13, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_1AFF5C884(0, &qword_1EB811348, (uint64_t (*)(uint64_t))sub_1AFE84A7C, MEMORY[0x1E4FBBE00]);
  sub_1AFE84A7C();
  uint64_t v17 = v16 - 8;
  unint64_t v18 = (*(unsigned __int8 *)(*(void *)(v16 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v16 - 8) + 80);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1AFFD05F0;
  uint64_t v20 = (void *)(v19 + v18);
  uint64_t v21 = v19 + v18 + *(int *)(v17 + 56);
  *uint64_t v20 = a4;
  v20[1] = a5;
  sub_1AFD30D44(a1, v21);
  sub_1AFFC8E38();
  unint64_t v23 = sub_1AFDF9C40(v19);
  sub_1AFE8B70C();
  swift_allocObject();
  return sub_1AFFCA6F8();
}

uint64_t sub_1AFF5B09C()
{
  if (qword_1EB810AD8 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1AFFCA8A8();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EB831A30);
  swift_bridgeObjectRetain_n();
  uint64_t v1 = sub_1AFFCA888();
  os_log_type_t v2 = sub_1AFFCB478();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    v12[0] = v4;
    *(_DWORD *)uint64_t v3 = 136315138;
    uint64_t v5 = sub_1AFFC8E38();
    uint64_t v6 = MEMORY[0x1B3E8D630](v5, MEMORY[0x1E4FBB1A0]);
    unint64_t v8 = v7;
    swift_bridgeObjectRelease();
    sub_1AFD36BA8(v6, v8, v12);
    sub_1AFFCB688();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AFD01000, v1, v2, "Reading charts from cache for symbols: %s", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v4, -1, -1);
    MEMORY[0x1B3E8F0D0](v3, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_1AFFCA508();
  __swift_project_boxed_opaque_existential_1(v12, v12[3]);
  sub_1AFFCA1C8();
  uint64_t v9 = (void *)sub_1AFFCA5E8();
  sub_1AFF5CB10(0, (unint64_t *)&qword_1EB817E88, MEMORY[0x1E4FBAEA0]);
  uint64_t v10 = sub_1AFFCA678();
  swift_release();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v10;
}

uint64_t sub_1AFF5B320()
{
  if (qword_1EB810AD8 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1AFFCA8A8();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EB831A30);
  swift_bridgeObjectRetain_n();
  uint64_t v1 = sub_1AFFCA888();
  os_log_type_t v2 = sub_1AFFCB478();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    v10[0] = v4;
    *(_DWORD *)uint64_t v3 = 136315138;
    type metadata accessor for Chart(0);
    sub_1AFFC8E38();
    uint64_t v5 = sub_1AFFCACD8();
    unint64_t v7 = v6;
    swift_bridgeObjectRelease();
    sub_1AFD36BA8(v5, v7, v10);
    sub_1AFFCB688();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AFD01000, v1, v2, "Writing charts to cache: %s", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v4, -1, -1);
    MEMORY[0x1B3E8F0D0](v3, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_1AFFCA508();
  __swift_project_boxed_opaque_existential_1(v10, v10[3]);
  uint64_t v8 = sub_1AFFCA1B8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  return v8;
}

uint64_t sub_1AFF5B54C(uint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v52 = a6;
  uint64_t v49 = a3;
  sub_1AFF5C884(0, &qword_1EB817AC0, type metadata accessor for Chart, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v51 = (uint64_t)v45 - v15;
  uint64_t v53 = type metadata accessor for Chart(0);
  uint64_t v50 = *(void *)(v53 - 8);
  MEMORY[0x1F4188790](v53);
  uint64_t v17 = (char *)v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v48 = (uint64_t)v45 - v19;
  uint64_t v20 = *a1;
  if (qword_1EB810AD8 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_1AFFCA8A8();
  __swift_project_value_buffer(v21, (uint64_t)qword_1EB831A30);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v22 = sub_1AFFCA888();
  os_log_type_t v23 = sub_1AFFCB478();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = swift_slowAlloc();
    uint64_t v46 = a7;
    uint64_t v25 = v24;
    uint64_t v26 = swift_slowAlloc();
    uint64_t v47 = a8;
    v45[0] = v26;
    uint64_t v55 = v26;
    *(_DWORD *)uint64_t v25 = 136315394;
    v45[1] = a2;
    sub_1AFFC8E38();
    uint64_t v54 = sub_1AFD36BA8(v49, a4, &v55);
    uint64_t v49 = a5;
    sub_1AFFCB688();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v25 + 12) = 2080;
    sub_1AFFC8E38();
    uint64_t v27 = sub_1AFFCAC98();
    uint64_t v28 = v17;
    unint64_t v30 = v29;
    swift_bridgeObjectRelease();
    uint64_t v54 = sub_1AFD36BA8(v27, v30, &v55);
    a5 = v49;
    sub_1AFFCB688();
    swift_bridgeObjectRelease_n();
    uint64_t v17 = v28;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AFD01000, v22, v23, "Chart request with ID: %s completed with results: %s", (uint8_t *)v25, 0x16u);
    uint64_t v31 = v45[0];
    swift_arrayDestroy();
    a8 = v47;
    MEMORY[0x1B3E8F0D0](v31, -1, -1);
    uint64_t v32 = v25;
    a7 = v46;
    MEMORY[0x1B3E8F0D0](v32, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v33 = v52;
  if (*(void *)(v20 + 16))
  {
    sub_1AFFC8E38();
    unint64_t v34 = sub_1AFD79CC8(a5, v33);
    if (v35)
    {
      uint64_t v37 = v50;
      uint64_t v36 = v51;
      sub_1AFD30D44(*(void *)(v20 + 56) + *(void *)(v50 + 72) * v34, v51);
      uint64_t v38 = 0;
    }
    else
    {
      uint64_t v38 = 1;
      uint64_t v37 = v50;
      uint64_t v36 = v51;
    }
    uint64_t v39 = v53;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 56))(v36, v38, 1, v53);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v36, 1, v39) != 1)
    {
      uint64_t v42 = v48;
      sub_1AFD45F58(v36, v48);
      sub_1AFF5BAD4(a7, a8, v42);
      sub_1AFD30D44(v42, (uint64_t)v17);
      sub_1AFF5C884(0, &qword_1EB811148, type metadata accessor for Chart, MEMORY[0x1E4FAB088]);
      swift_allocObject();
      uint64_t v43 = sub_1AFFCA6F8();
      sub_1AFD45FBC(v42);
      return v43;
    }
  }
  else
  {
    uint64_t v36 = v51;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v50 + 56))(v51, 1, 1, v53);
  }
  sub_1AFF5CF94(v36);
  uint64_t v40 = *(void *)(v20 + 16);
  sub_1AFF5D020();
  swift_allocError();
  if (v40) {
    *uint64_t v41 = 0;
  }
  else {
    *uint64_t v41 = 1;
  }
  sub_1AFF5C884(0, &qword_1EB811148, type metadata accessor for Chart, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1AFFCA6E8();
}

uint64_t sub_1AFF5BAD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  sub_1AFFC9D78();
  swift_beginAccess();
  uint64_t v8 = *(void *)(v3 + 64);
  if (*(void *)(v8 + 16))
  {
    sub_1AFFC8E38();
    unint64_t v9 = sub_1AFD79CC8(a1, a2);
    if (v10)
    {
      unint64_t v11 = *(void *)(*(void *)(v8 + 56) + 8 * v9);
      swift_endAccess();
      sub_1AFFC8E38();
      uint64_t result = swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    swift_bridgeObjectRelease();
  }
  uint64_t result = swift_endAccess();
  unint64_t v11 = MEMORY[0x1E4FBC860];
LABEL_6:
  uint64_t v24 = MEMORY[0x1E4FBC860];
  if (v11 >> 62)
  {
    sub_1AFFC8E38();
    uint64_t v13 = sub_1AFFCB9C8();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v13) {
      goto LABEL_21;
    }
  }
  else
  {
    uint64_t v13 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v13) {
      goto LABEL_21;
    }
  }
  if (v13 < 1)
  {
    __break(1u);
    goto LABEL_36;
  }
  if ((v11 & 0xC000000000000001) != 0)
  {
    for (uint64_t i = 0; i != v13; ++i)
    {
      uint64_t v15 = MEMORY[0x1B3E8DC70](i, v11);
      uint64_t v16 = MEMORY[0x1B3E8F200](v15 + 16);
      swift_unknownObjectRelease();
      if (v16)
      {
        sub_1AFFCB888();
        sub_1AFFCB8C8();
        sub_1AFFCB8D8();
        sub_1AFFCB898();
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
  }
  else
  {
    for (uint64_t j = 0; j != v13; ++j)
    {
      uint64_t v18 = MEMORY[0x1B3E8F200](*(void *)(v11 + 8 * j + 32) + 16);
      sub_1AFFC8E48();
      swift_unknownObjectRelease();
      if (v18)
      {
        sub_1AFFCB888();
        sub_1AFFCB8C8();
        sub_1AFFCB8D8();
        sub_1AFFCB898();
      }
      else
      {
        swift_release();
      }
    }
  }
LABEL_21:
  swift_bridgeObjectRelease();
  uint64_t result = sub_1AFFC9D88();
  if ((v24 & 0x8000000000000000) == 0 && (v24 & 0x4000000000000000) == 0)
  {
    uint64_t v19 = *(void *)(v24 + 16);
    if (v19) {
      goto LABEL_24;
    }
    return swift_release();
  }
  sub_1AFFC8E38();
  uint64_t v19 = sub_1AFFCB9C8();
  uint64_t result = swift_release();
  if (!v19) {
    return swift_release();
  }
LABEL_24:
  if (v19 >= 1)
  {
    for (uint64_t k = 0; k != v19; ++k)
    {
      if ((v24 & 0xC000000000000001) != 0)
      {
        uint64_t v21 = MEMORY[0x1B3E8DC70](k, v24);
      }
      else
      {
        uint64_t v21 = *(void *)(v24 + 8 * k + 32);
        sub_1AFFC8E48();
      }
      if (MEMORY[0x1B3E8F200](v21 + 16))
      {
        uint64_t v22 = *(void *)(v21 + 24);
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v22 + 8))(v4, &off_1F0869E88, a3, ObjectType, v22);
        swift_release();
        swift_unknownObjectRelease();
      }
      else
      {
        swift_release();
      }
    }
    return swift_release();
  }
LABEL_36:
  __break(1u);
  return result;
}

void sub_1AFF5BDF4(void *a1, uint64_t a2, unint64_t a3, const char *a4)
{
  if (qword_1EB810AD8 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1AFFCA8A8();
  __swift_project_value_buffer(v8, (uint64_t)qword_1EB831A30);
  sub_1AFFC8E38();
  id v9 = a1;
  sub_1AFFC8E38();
  id v10 = a1;
  oslog = sub_1AFFCA888();
  os_log_type_t v11 = sub_1AFFCB468();
  if (os_log_type_enabled(oslog, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    uint64_t v17 = v13;
    *(_DWORD *)uint64_t v12 = 136315394;
    sub_1AFFC8E38();
    sub_1AFD36BA8(a2, a3, &v17);
    sub_1AFFCB688();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v12 + 12) = 2080;
    swift_getErrorValue();
    uint64_t v14 = sub_1AFFCBD98();
    sub_1AFD36BA8(v14, v15, &v17);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1AFD01000, oslog, v11, a4, (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v13, -1, -1);
    MEMORY[0x1B3E8F0D0](v12, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_1AFF5C050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1AFFC9D78();
  uint64_t v8 = (uint64_t *)(v4 + 64);
  swift_beginAccess();
  uint64_t v9 = *(void *)(v4 + 64);
  if (*(void *)(v9 + 16))
  {
    sub_1AFFC8E38();
    unint64_t v10 = sub_1AFD79CC8(a3, a4);
    if (v11)
    {
      unint64_t v12 = *(void *)(*(void *)(v9 + 56) + 8 * v10);
      swift_endAccess();
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    swift_bridgeObjectRelease();
  }
  swift_endAccess();
  unint64_t v12 = MEMORY[0x1E4FBC860];
LABEL_6:
  uint64_t v24 = MEMORY[0x1E4FBC860];
  if (v12 >> 62)
  {
    sub_1AFFC8E38();
    uint64_t result = sub_1AFFCB9C8();
    uint64_t v13 = result;
    if (result) {
      goto LABEL_8;
    }
LABEL_19:
    swift_bridgeObjectRelease();
    uint64_t v18 = MEMORY[0x1E4FBC860];
    goto LABEL_20;
  }
  uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = sub_1AFFC8E38();
  if (!v13) {
    goto LABEL_19;
  }
LABEL_8:
  if (v13 < 1)
  {
    __break(1u);
    return result;
  }
  uint64_t v22 = a2;
  for (uint64_t i = 0; i != v13; ++i)
  {
    if ((v12 & 0xC000000000000001) != 0)
    {
      uint64_t v16 = MEMORY[0x1B3E8DC70](i, v12);
    }
    else
    {
      uint64_t v16 = *(void *)(v12 + 8 * i + 32);
      sub_1AFFC8E48();
    }
    uint64_t v17 = MEMORY[0x1B3E8F200](v16 + 16);
    swift_unknownObjectRelease();
    if (v17)
    {
      sub_1AFFCB888();
      sub_1AFFCB8C8();
      sub_1AFFCB8D8();
      sub_1AFFCB898();
    }
    else
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v18 = v24;
  a2 = v22;
LABEL_20:
  swift_bridgeObjectRelease();
  type metadata accessor for ChartManagerObserverProxy();
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v19 + 24) = a2;
  uint64_t v20 = swift_unknownObjectWeakAssign();
  MEMORY[0x1B3E8D5F0](v20);
  if (*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1AFFCB228();
  }
  sub_1AFFCB278();
  sub_1AFFCB1E8();
  swift_beginAccess();
  sub_1AFFC8E38();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v23 = *v8;
  uint64_t *v8 = 0x8000000000000000;
  sub_1AFE04B40(v18, a3, a4, isUniquelyReferenced_nonNull_native);
  uint64_t *v8 = v23;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  return sub_1AFFC9D88();
}

uint64_t sub_1AFF5C364(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1AFFC9D78();
  uint64_t v8 = (void *)(v4 + 64);
  swift_beginAccess();
  uint64_t v9 = *(void *)(v4 + 64);
  if (*(void *)(v9 + 16))
  {
    sub_1AFFC8E38();
    unint64_t v10 = sub_1AFD79CC8(a3, a4);
    if (v11)
    {
      unint64_t v12 = *(void *)(*(void *)(v9 + 56) + 8 * v10);
      swift_endAccess();
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    swift_bridgeObjectRelease();
  }
  swift_endAccess();
  unint64_t v12 = MEMORY[0x1E4FBC860];
LABEL_6:
  uint64_t v25 = MEMORY[0x1E4FBC860];
  if (v12 >> 62) {
    goto LABEL_22;
  }
  uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_unknownObjectRetain();
  if (v13)
  {
    while (1)
    {
      uint64_t v21 = v8;
      uint64_t v22 = a3;
      uint64_t v23 = a4;
      unint64_t v14 = 0;
      a4 = v12 & 0xFFFFFFFFFFFFFF8;
      while ((v12 & 0xC000000000000001) != 0)
      {
        uint64_t v15 = MEMORY[0x1B3E8DC70](v14, v12);
        uint64_t v8 = (void *)(v14 + 1);
        if (__OFADD__(v14, 1))
        {
LABEL_19:
          __break(1u);
LABEL_20:
          uint64_t v18 = v25;
          a4 = v23;
          uint64_t v8 = v21;
          a3 = v22;
          goto LABEL_24;
        }
LABEL_14:
        uint64_t v16 = MEMORY[0x1B3E8F200](v15 + 16);
        if (v16 && (uint64_t v17 = v16, swift_unknownObjectRelease(), v17 == a1))
        {
          swift_release();
        }
        else
        {
          sub_1AFFCB888();
          a3 = *(void *)(v25 + 16);
          sub_1AFFCB8C8();
          sub_1AFFCB8D8();
          sub_1AFFCB898();
        }
        ++v14;
        if (v8 == (void *)v13) {
          goto LABEL_20;
        }
      }
      if (v14 < *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        break;
      }
      __break(1u);
LABEL_22:
      swift_unknownObjectRetain();
      uint64_t v13 = sub_1AFFCB9C8();
      if (!v13) {
        goto LABEL_23;
      }
    }
    uint64_t v15 = *(void *)(v12 + 8 * v14 + 32);
    sub_1AFFC8E48();
    uint64_t v8 = (void *)(v14 + 1);
    if (__OFADD__(v14, 1)) {
      goto LABEL_19;
    }
    goto LABEL_14;
  }
LABEL_23:
  uint64_t v18 = MEMORY[0x1E4FBC860];
LABEL_24:
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_beginAccess();
  sub_1AFFC8E38();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v24 = *v8;
  void *v8 = 0x8000000000000000;
  sub_1AFE04B40(v18, a3, a4, isUniquelyReferenced_nonNull_native);
  void *v8 = v24;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  return sub_1AFFC9D88();
}

uint64_t sub_1AFF5C5F0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  if (qword_1EB810AD8 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1AFFCA8A8();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EB831A30);
  swift_bridgeObjectRetain_n();
  uint64_t v5 = sub_1AFFCA888();
  os_log_type_t v6 = sub_1AFFCB478();
  if (os_log_type_enabled(v5, v6))
  {
    unint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v13 = v8;
    *(_DWORD *)unint64_t v7 = 136315138;
    type metadata accessor for Chart(0);
    sub_1AFFC8E38();
    uint64_t v9 = sub_1AFFCACD8();
    unint64_t v11 = v10;
    swift_bridgeObjectRelease();
    sub_1AFD36BA8(v9, v11, &v13);
    sub_1AFFCB688();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AFD01000, v5, v6, "Found charts in cache for symbols: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v8, -1, -1);
    MEMORY[0x1B3E8F0D0](v7, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  *a2 = v3;
  return sub_1AFFC8E38();
}

uint64_t type metadata accessor for ChartManagerObserverProxy()
{
  return self;
}

uint64_t sub_1AFF5C82C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = swift_getObjectType();

  return sub_1AFF5D0F8(a1, a3, v3, ObjectType, a2);
}

void sub_1AFF5C884(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1AFF5C8E8@<X0>(uint64_t *a1@<X8>)
{
  return sub_1AFF59864(a1);
}

unint64_t sub_1AFF5C8F0()
{
  unint64_t result = qword_1EB810A80;
  if (!qword_1EB810A80)
  {
    type metadata accessor for Chart(255);
    unint64_t result = swift_getExtendedExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB810A80);
  }
  return result;
}

void sub_1AFF5C950()
{
  if (!qword_1E9AFCE50)
  {
    type metadata accessor for Chart(255);
    sub_1AFF5CA48();
    sub_1AFF5CE20(&qword_1EB817AA8, 255, (void (*)(uint64_t))type metadata accessor for Chart);
    sub_1AFF5CE20(&qword_1EB817AA0, 255, (void (*)(uint64_t))type metadata accessor for Chart);
    unint64_t v0 = sub_1AFFCA9A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9AFCE50);
    }
  }
}

unint64_t sub_1AFF5CA48()
{
  unint64_t result = qword_1E9AFCE58;
  if (!qword_1E9AFCE58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFCE58);
  }
  return result;
}

unint64_t sub_1AFF5CA9C()
{
  unint64_t result = qword_1EB811100;
  if (!qword_1EB811100)
  {
    sub_1AFF5CB10(255, &qword_1EB811108, MEMORY[0x1E4FAB018]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB811100);
  }
  return result;
}

void sub_1AFF5CB10(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void, uint64_t, void))
{
  if (!*a2)
  {
    uint64_t v6 = type metadata accessor for Chart(255);
    unint64_t v7 = a3(a1, MEMORY[0x1E4FBB1A0], v6, MEMORY[0x1E4FBB1B0]);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1AFF5CB80()
{
  uint64_t v1 = sub_1AFFC98F8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 57) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = sub_1AFFC9E18();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v3 | v8 | 7;
  unint64_t v11 = ((*(void *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, v11, v10);
}

uint64_t sub_1AFF5CD00(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_1AFFC98F8() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 57) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(sub_1AFFC9E18() - 8);
  unint64_t v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = (*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1AFF5AA90(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(unsigned char *)(v1 + 56), v1 + v4, v1 + v7, *(void *)(v1 + v8), *(void *)(v1 + v8 + 8));
}

uint64_t sub_1AFF5CE20(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AFF5CE68(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1AFF5C884(255, a2, a3, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AFF5CECC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_1AFF5CF14(uint64_t *a1, uint64_t a2)
{
  return sub_1AFF5B54C(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56));
}

uint64_t sub_1AFF5CF38()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1AFF5CF70(void *a1)
{
  sub_1AFF5BDF4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), "Chart request with ID: %s completed with error: %s");
}

uint64_t sub_1AFF5CF94(uint64_t a1)
{
  sub_1AFF5C884(0, &qword_1EB817AC0, type metadata accessor for Chart, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1AFF5D020()
{
  unint64_t result = qword_1EB810CA8;
  if (!qword_1EB810CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB810CA8);
  }
  return result;
}

uint64_t sub_1AFF5D074()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1AFF5D0B4(uint64_t a1)
{
  return sub_1AFF5ADCC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

void sub_1AFF5D0D4(void *a1)
{
  sub_1AFF5BDF4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), "Chart fetch with ID: %s returned error: %s");
}

uint64_t sub_1AFF5D0F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result = MEMORY[0x1B3E8F200](a3 + 16);
  if (result)
  {
    uint64_t v10 = *(void *)(a3 + 24);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8))(a1, a5, a2, ObjectType, v10);
    return swift_unknownObjectRelease();
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ChartManager.Errors(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFF5D26CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ChartManager.Errors()
{
  return &type metadata for ChartManager.Errors;
}

ValueMetadata *type metadata accessor for ChartManager.StoreDescriptor()
{
  return &type metadata for ChartManager.StoreDescriptor;
}

unint64_t sub_1AFF5D2B8()
{
  unint64_t result = qword_1E9AFCE68;
  if (!qword_1E9AFCE68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFCE68);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for StockTestDataLocator(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFF5D3DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StockTestDataLocator()
{
  return &type metadata for StockTestDataLocator;
}

unint64_t sub_1AFF5D414(char a1)
{
  unint64_t result = 0x73696C6863746177;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x726F74732D706F74;
      break;
    case 2:
    case 4:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1AFF5D4D0()
{
  return sub_1AFF5D414(*v0);
}

unint64_t sub_1AFF5D4DC()
{
  unint64_t result = qword_1E9AFCE70;
  if (!qword_1E9AFCE70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1E9AFCE70);
  }
  return result;
}

uint64_t sub_1AFF5D530(uint64_t a1, uint64_t a2, long long *a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  uint64_t v7 = v6 + OBJC_IVAR____TtC10StocksCore19SDSAuthTokenService_networkProxy;
  uint64_t v8 = sub_1AFFC9E18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v7, a2, v8);
  sub_1AFD80454(a3, v6 + OBJC_IVAR____TtC10StocksCore19SDSAuthTokenService_networkMonitor);
  return v6;
}

uint64_t sub_1AFF5D5D8(uint64_t a1, uint64_t a2, long long *a3)
{
  *(void *)(v3 + 16) = a1;
  uint64_t v6 = v3 + OBJC_IVAR____TtC10StocksCore19SDSAuthTokenService_networkProxy;
  uint64_t v7 = sub_1AFFC9E18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v6, a2, v7);
  sub_1AFD80454(a3, v3 + OBJC_IVAR____TtC10StocksCore19SDSAuthTokenService_networkMonitor);
  return v3;
}

uint64_t sub_1AFF5D668(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_1AFF606C8(0, &qword_1EB811708, MEMORY[0x1E4F26C48], MEMORY[0x1E4FAB088]);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = v2;
  sub_1AFFC8E38();
  sub_1AFFC8E48();
  sub_1AFFCA658();
  uint64_t v5 = (void *)sub_1AFFCA5E8();
  sub_1AFFCA688();
  swift_release();

  uint64_t v6 = (void *)sub_1AFFCA5E8();
  sub_1AFEE1FAC();
  uint64_t v7 = sub_1AFFCA678();
  swift_release();

  return v7;
}

uint64_t sub_1AFF5D7E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[6] = a2;
  v3[7] = a3;
  v3[5] = a1;
  uint64_t v4 = sub_1AFFC96E8();
  v3[8] = v4;
  v3[9] = *(void *)(v4 - 8);
  v3[10] = swift_task_alloc();
  v3[11] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1AFF5D8B4, 0, 0);
}

uint64_t sub_1AFF5D8B4()
{
  uint64_t v28 = v0;
  if (qword_1EB811738 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1AFFCA8A8();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EB811718);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_1AFFCA888();
  os_log_type_t v3 = sub_1AFFCB478();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[8];
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v27 = v6;
    *(_DWORD *)uint64_t v5 = 136315138;
    uint64_t v7 = sub_1AFFC8E38();
    uint64_t v8 = MEMORY[0x1B3E8D630](v7, v4);
    unint64_t v10 = v9;
    swift_bridgeObjectRelease();
    v0[4] = sub_1AFD36BA8(v8, v10, &v27);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AFD01000, v2, v3, "SDSAuthTokenService will fetch auth tokens for URLs: %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v6, -1, -1);
    MEMORY[0x1B3E8F0D0](v5, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v11 = v0[10];
  uint64_t v12 = v0[8];
  uint64_t v13 = v0[9];
  uint64_t v14 = v0[6];
  sub_1AFFCA7E8();
  sub_1AFFC9658();
  uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
  v0[12] = v15;
  v0[13] = (v13 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v15(v11, v12);
  sub_1AFF5FAA0(v14);
  uint64_t v16 = v0[6];
  sub_1AFFC91E8();
  swift_allocObject();
  sub_1AFFC8E38();
  sub_1AFFC91D8();
  v0[2] = v16;
  sub_1AFF60BA0();
  uint64_t v17 = sub_1AFFC91C8();
  v0[14] = v17;
  v0[15] = v18;
  uint64_t v19 = v17;
  unint64_t v20 = v18;
  uint64_t v22 = v0[10];
  uint64_t v21 = v0[11];
  uint64_t v23 = v0[8];
  uint64_t v24 = v0[9];
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v22, v21, v23);
  sub_1AFD4B0E0(v19, v20);
  sub_1AFFC90C8();
  sub_1AFFC90A8();
  sub_1AFD4B0E0(v19, v20);
  sub_1AFFC90F8();
  sub_1AFFC90E8();
  uint64_t v25 = (void *)swift_task_alloc();
  v0[16] = v25;
  *uint64_t v25 = v0;
  v25[1] = sub_1AFF5DE8C;
  v25[17] = v19;
  v25[18] = v20;
  return MEMORY[0x1F4188298](sub_1AFF5FE24, 0, 0);
}

uint64_t sub_1AFF5DE8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  uint64_t v5 = (void *)*v3;
  v5[17] = a1;
  v5[18] = a2;
  v5[19] = v2;
  swift_task_dealloc();
  sub_1AFD4B504(v4[14], v4[15]);
  if (v2) {
    uint64_t v6 = sub_1AFF5E0B4;
  }
  else {
    uint64_t v6 = sub_1AFF5DFE0;
  }
  return MEMORY[0x1F4188298](v6, 0, 0);
}

uint64_t sub_1AFF5DFE0()
{
  if (v0[18])
  {
    sub_1AFFC90E8();
    swift_bridgeObjectRelease();
  }
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[12];
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[8];
  sub_1AFD4B504(v0[14], v0[15]);
  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1AFF5E0B4()
{
  uint64_t v1 = *(void *)(v0 + 40);
  sub_1AFD4B504(*(void *)(v0 + 112), *(void *)(v0 + 120));
  uint64_t v2 = sub_1AFFC9118();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  (*(void (**)(void, void))(v0 + 96))(*(void *)(v0 + 88), *(void *)(v0 + 64));
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1AFF5E184(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_1AFD56424;
  return sub_1AFF5D7E0(a1, v5, v4);
}

uint64_t sub_1AFF5E230(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1AFFC9E18();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1AFFC9118();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFF609B8();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2 + OBJC_IVAR____TtC10StocksCore19SDSAuthTokenService_networkProxy, v4);
  uint64_t v12 = (void *)sub_1AFFCA118();
  sub_1AFFC8E48();
  sub_1AFFCA0D8();
  if (qword_1EB811738 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_1AFFCA8A8();
  __swift_project_value_buffer(v13, (uint64_t)qword_1EB811718);
  id v14 = v12;
  uint64_t v15 = sub_1AFFCA888();
  os_log_type_t v16 = sub_1AFFCB478();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    uint64_t v24 = v18;
    *(_DWORD *)uint64_t v17 = 136315138;
    uint64_t v19 = sub_1AFFC9F28();
    v23[1] = sub_1AFD36BA8(v19, v20, &v24);
    sub_1AFFCB688();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AFD01000, v15, v16, "SDSAuthTokenService will enqueue network operation: %s", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v18, -1, -1);
    MEMORY[0x1B3E8F0D0](v17, -1, -1);
  }
  else
  {
  }
  sub_1AFFC9EF8();
  uint64_t v21 = sub_1AFFC9EC8();

  return v21;
}

uint64_t sub_1AFF5E57C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NetworkEvent();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (void *)(a2 + OBJC_IVAR____TtC10StocksCore19SDSAuthTokenService_networkMonitor);
  uint64_t v8 = *(void *)(a2 + OBJC_IVAR____TtC10StocksCore19SDSAuthTokenService_networkMonitor + 24);
  uint64_t v9 = v7[4];
  __swift_project_boxed_opaque_existential_1(v7, v8);
  uint64_t v10 = sub_1AFFCA368();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v6, a1, v10);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v6, v8, v9);
  return sub_1AFF60B40((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for NetworkEvent);
}

uint64_t sub_1AFF5E6A8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  sub_1AFF606C8(0, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v79 = (uint64_t)v55 - v7;
  uint64_t v82 = sub_1AFFC98F8();
  uint64_t v8 = *(void *)(v82 - 8);
  MEMORY[0x1F4188790](v82);
  uint64_t v59 = (char *)v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v80 = (char *)v55 - v11;
  MEMORY[0x1F4188790](v12);
  id v14 = (char *)v55 - v13;
  uint64_t v71 = type metadata accessor for SDSAuthToken();
  MEMORY[0x1F4188790](v71);
  uint64_t v70 = (uint64_t)v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v69 = (char *)v55 - v17;
  uint64_t v18 = sub_1AFFC96E8();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)v55 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v73 = (uint64_t)v55 - v23;
  uint64_t v68 = type metadata accessor for SDSSignResponse.Item(0);
  MEMORY[0x1F4188790](v68);
  uint64_t v72 = (uint64_t)v55 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = *a1;
  if (!*(void *)(v26 + 16))
  {
    sub_1AFFC8E38();
    uint64_t v30 = MEMORY[0x1E4FBC868];
    goto LABEL_14;
  }
  uint64_t v78 = *(void *)(v26 + 16);
  unint64_t v56 = a2;
  uint64_t v27 = v26 + ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80));
  uint64_t v28 = *(void *)(v24 + 72);
  uint64_t v64 = (void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16);
  uint64_t v65 = v28;
  uint64_t v63 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
  uint64_t v57 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  uint64_t v60 = (void (**)(char *, uint64_t, uint64_t))(v8 + 32);
  unint64_t v58 = (void (**)(char *, uint64_t))(v8 + 8);
  uint64_t v62 = (void (**)(char *, char *, uint64_t))(v19 + 32);
  uint64_t v61 = (void (**)(uint64_t, uint64_t))(v19 + 8);
  uint64_t v29 = v27;
  v55[1] = v26;
  swift_bridgeObjectRetain_n();
  uint64_t v77 = v14;
  uint64_t v30 = MEMORY[0x1E4FBC868];
  unint64_t v66 = v21;
  uint64_t v67 = v18;
  uint64_t v31 = v72;
  uint64_t v32 = v73;
  do
  {
    sub_1AFF60954(v29, v31);
    uint64_t v43 = *v64;
    (*v64)(v32, v31, v18);
    sub_1AFFC98E8();
    uint64_t v44 = ((uint64_t (*)(char *, uint64_t, uint64_t))v43)(v21, v31, v18);
    uint64_t v45 = (uint64_t *)(v31 + *(int *)(v68 + 20));
    uint64_t v47 = *v45;
    unint64_t v46 = v45[1];
    v81[0] = 95;
    v81[1] = 0xE100000000000000;
    MEMORY[0x1F4188790](v44);
    v55[-2] = v81;
    swift_bridgeObjectRetain_n();
    uint64_t v48 = sub_1AFE30664(0x7FFFFFFFFFFFFFFFLL, 1, sub_1AFF3989C, (uint64_t)&v55[-4], v47, v46);
    swift_bridgeObjectRelease();
    uint64_t v49 = *(void *)(v48 + 16);
    uint64_t v75 = v29;
    uint64_t v76 = v3;
    uint64_t v74 = v30;
    if (!v49)
    {
      swift_bridgeObjectRelease();
LABEL_10:
      (*v63)(v79, 1, 1, v82);
      goto LABEL_11;
    }
    sub_1AFFC8E38();
    swift_bridgeObjectRelease();
    sub_1AFFCB338();
    if (v50) {
      goto LABEL_10;
    }
    uint64_t v51 = v79;
    sub_1AFFC9878();
    uint64_t v52 = v82;
    (*v63)(v51, 0, 1, v82);
    if ((*v57)(v51, 1, v52) != 1)
    {
      uint64_t v33 = *v60;
      (*v60)(v80, v79, v82);
      goto LABEL_4;
    }
LABEL_11:
    uint64_t v53 = v59;
    sub_1AFFC98E8();
    sub_1AFFC9828();
    (*v58)(v53, v82);
    sub_1AFD3BE10(v79);
    uint64_t v33 = *v60;
LABEL_4:
    unint64_t v34 = v69;
    uint64_t v35 = v82;
    v33(v69, (uint64_t)v77, v82);
    uint64_t v36 = v71;
    uint64_t v21 = v66;
    uint64_t v37 = v67;
    (*v62)(&v34[*(int *)(v71 + 20)], v66, v67);
    uint64_t v38 = (uint64_t *)&v34[*(int *)(v36 + 24)];
    *uint64_t v38 = v47;
    v38[1] = v46;
    v33(&v34[*(int *)(v36 + 28)], (uint64_t)v80, v35);
    uint64_t v39 = (uint64_t)v34;
    uint64_t v18 = v37;
    uint64_t v40 = v70;
    sub_1AFF084BC(v39, v70);
    uint64_t v41 = v74;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v81[0] = v41;
    uint64_t v32 = v73;
    sub_1AFE04CF4(v40, v73, isUniquelyReferenced_nonNull_native);
    uint64_t v30 = v81[0];
    swift_bridgeObjectRelease();
    (*v61)(v32, v37);
    uint64_t v31 = v72;
    sub_1AFF60B40(v72, type metadata accessor for SDSSignResponse.Item);
    uint64_t v3 = v76;
    uint64_t v29 = v75 + v65;
    --v78;
  }
  while (v78);
  swift_bridgeObjectRelease();
  a2 = v56;
LABEL_14:
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v30;
  return result;
}

uint64_t sub_1AFF5EDE8()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC10StocksCore19SDSAuthTokenService_networkProxy;
  uint64_t v2 = sub_1AFFC9E18();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC10StocksCore19SDSAuthTokenService_networkMonitor);
  return v0;
}

uint64_t sub_1AFF5EE64()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC10StocksCore19SDSAuthTokenService_networkProxy;
  uint64_t v2 = sub_1AFFC9E18();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC10StocksCore19SDSAuthTokenService_networkMonitor);

  return swift_deallocClassInstance();
}

uint64_t sub_1AFF5EF1C(uint64_t a1)
{
  uint64_t v3 = *v1;
  sub_1AFF606C8(0, &qword_1EB811708, MEMORY[0x1E4F26C48], MEMORY[0x1E4FAB088]);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = v3;
  sub_1AFFC8E38();
  sub_1AFFC8E48();
  sub_1AFFCA658();
  uint64_t v5 = (void *)sub_1AFFCA5E8();
  sub_1AFFCA688();
  swift_release();

  uint64_t v6 = (void *)sub_1AFFCA5E8();
  sub_1AFEE1FAC();
  uint64_t v7 = sub_1AFFCA678();
  swift_release();

  return v7;
}

uint64_t sub_1AFF5F06C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1AFF5F080()
{
  return type metadata accessor for SDSAuthTokenService(0);
}

uint64_t type metadata accessor for SDSAuthTokenService(uint64_t a1)
{
  return sub_1AFD9BB54(a1, (uint64_t *)&unk_1EB819398);
}

uint64_t sub_1AFF5F0A8()
{
  uint64_t result = sub_1AFFC9E18();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1AFF5F160(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SDSAuthTokenService);
}

uint64_t sub_1AFF5F178()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

ValueMetadata *type metadata accessor for SDSRequestSigner()
{
  return &type metadata for SDSRequestSigner;
}

ValueMetadata *type metadata accessor for SDSSignResponse()
{
  return &type metadata for SDSSignResponse;
}

uint64_t sub_1AFF5F1AC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_1AFE9DFBC();
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    return MEMORY[0x1F4188208](v3, v5);
  }
  else
  {
    uint64_t v8 = sub_1AFFCAE98();
    uint64_t v9 = *(uint64_t **)(*(void *)(v3 + 64) + 40);
    *uint64_t v9 = v8;
    v9[1] = v10;
    return MEMORY[0x1F4188200](v3);
  }
}

uint64_t sub_1AFF5F264@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v29 = sub_1AFFC96E8();
  uint64_t v26 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  uint64_t v27 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFF61394(0, &qword_1EB818730, (uint64_t (*)(void))sub_1AFF61340, (uint64_t)&type metadata for SDSSignResponse.Item.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v28 = v5;
  uint64_t v25 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v7 = (char *)&v22 - v6;
  uint64_t v8 = type metadata accessor for SDSSignResponse.Item(0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFF61340();
  sub_1AFFCBE68();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v22 = v8;
  uint64_t v23 = v10;
  uint64_t v11 = v25;
  uint64_t v12 = v26;
  char v31 = 0;
  sub_1AFF6081C(&qword_1EB818B78, MEMORY[0x1E4F276F0]);
  id v14 = v27;
  uint64_t v13 = v28;
  uint64_t v15 = v29;
  sub_1AFFCBB58();
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v23, v14, v15);
  char v30 = 1;
  uint64_t v16 = sub_1AFFCBB18();
  uint64_t v18 = v17;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v7, v13);
  uint64_t v19 = (uint64_t)v23;
  uint64_t v20 = (uint64_t *)&v23[*(int *)(v22 + 20)];
  *uint64_t v20 = v16;
  v20[1] = v18;
  sub_1AFF60954(v19, v24);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1AFF60B40(v19, type metadata accessor for SDSSignResponse.Item);
}

uint64_t sub_1AFF5F5E8(void *a1, uint64_t a2)
{
  sub_1AFF61394(0, &qword_1EB818740, (uint64_t (*)(void))sub_1AFF613FC, (uint64_t)&type metadata for SDSSignRequest.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v10 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFF613FC();
  sub_1AFFCBE78();
  v10[1] = a2;
  sub_1AFF606C8(0, &qword_1EB818700, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB320]);
  sub_1AFF61450();
  sub_1AFFCBC58();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1AFF5F798()
{
  if (*v0) {
    return 0x654B737365636361;
  }
  else {
    return 7107189;
  }
}

uint64_t sub_1AFF5F7D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1AFF60308(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AFF5F7F8(uint64_t a1)
{
  unint64_t v2 = sub_1AFF61340();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFF5F834(uint64_t a1)
{
  unint64_t v2 = sub_1AFF61340();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFF5F870@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1AFF5F264(a1, a2);
}

unint64_t sub_1AFF5F888()
{
  return 0xD000000000000011;
}

uint64_t sub_1AFF5F8A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1AFF603F8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1AFF5F8D0(uint64_t a1)
{
  unint64_t v2 = sub_1AFF60674();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFF5F90C(uint64_t a1)
{
  unint64_t v2 = sub_1AFF60674();

  return MEMORY[0x1F41862B0](a1, v2);
}

void *sub_1AFF5F948@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1AFF60480(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1AFF5F974()
{
  return 1936487029;
}

uint64_t sub_1AFF5F984@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 1936487029 && a2 == 0xE400000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1AFFCBCE8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1AFF5FA0C(uint64_t a1)
{
  unint64_t v2 = sub_1AFF613FC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFF5FA48(uint64_t a1)
{
  unint64_t v2 = sub_1AFF613FC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFF5FA84(void *a1)
{
  return sub_1AFF5F5E8(a1, *v1);
}

uint64_t sub_1AFF5FAA0(uint64_t a1)
{
  uint64_t v2 = sub_1AFFC96E8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v38 = (char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFF606C8(0, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  char v7 = (char *)v31 - v6;
  uint64_t v8 = sub_1AFFC9688();
  if (v9) {
    uint64_t v10 = v8;
  }
  else {
    uint64_t v10 = 0;
  }
  unint64_t v11 = 0xE000000000000000;
  if (v9) {
    unint64_t v11 = v9;
  }
  unint64_t v39 = v11;
  uint64_t v12 = *(void *)(a1 + 16);
  v31[2] = a1;
  if (v12)
  {
    uint64_t v37 = v10;
    id v14 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v13 = v3 + 16;
    uint64_t v15 = a1 + ((*(unsigned __int8 *)(v13 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 64));
    uint64_t v16 = *(void *)(v13 + 56);
    unint64_t v17 = v13 + 40;
    uint64_t v18 = v13;
    uint64_t v19 = (unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 32);
    unint64_t v34 = (void (**)(char *, char *, uint64_t))(v18 + 16);
    uint64_t v35 = v14;
    uint64_t v36 = v18;
    uint64_t v32 = v16;
    uint64_t v33 = (uint64_t (**)(char *, uint64_t))(v18 - 8);
    sub_1AFFC8E38();
    v31[0] = v17 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    while (1)
    {
      v35(v7, v15, v2);
      uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v17;
      (*(void (**)(char *, void, uint64_t, uint64_t))v17)(v7, 0, 1, v2);
      if ((*v19)(v7, 1, v2) == 1) {
        break;
      }
      (*v34)(v38, v7, v2);
      uint64_t v21 = sub_1AFFC9688();
      if (v22) {
        uint64_t v23 = v21;
      }
      else {
        uint64_t v23 = 0;
      }
      if (v22) {
        unint64_t v24 = v22;
      }
      else {
        unint64_t v24 = 0xE000000000000000;
      }
      BOOL v25 = v23 == v37 && v24 == v39;
      if (!v25 && (sub_1AFFCBCE8() & 1) == 0)
      {
        unint64_t v26 = v39;
        uint64_t v27 = v37;
        swift_bridgeObjectRelease();
        sub_1AFF60BF4();
        swift_allocError();
        uint64_t *v28 = v27;
        v28[1] = v26;
        v28[2] = v23;
        v28[3] = v24;
        swift_willThrow();
        return (*v33)(v38, v2);
      }
      (*v33)(v38, v2);
      swift_bridgeObjectRelease();
      v15 += v32;
      if (!--v12)
      {
        v20(v7, 1, 1, v2);
        break;
      }
    }
  }
  else
  {
    char v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    sub_1AFFC8E38();
    v30(v7, 1, 1, v2);
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFF5FE04(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 136) = a1;
  *(void *)(v2 + 144) = a2;
  return MEMORY[0x1F4188298](sub_1AFF5FE24, 0, 0);
}

uint64_t sub_1AFF5FE24()
{
  unint64_t v1 = self;
  uint64_t v2 = sub_1AFFC9778();
  v0[19] = v2;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_1AFF5FF54;
  uint64_t v3 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1AFF5F1AC;
  v0[13] = &block_descriptor;
  v0[14] = v3;
  objc_msgSend(v1, sel_signatureFromData_completion_, v2, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1AFF5FF54()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 160) = v1;
  if (v1) {
    uint64_t v2 = sub_1AFF600D4;
  }
  else {
    uint64_t v2 = sub_1AFF60064;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1AFF60064()
{
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v1 = *(void *)(v0 + 128);

  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v3(v2, v1);
}

uint64_t sub_1AFF600D4()
{
  uint64_t v1 = (void *)v0[19];
  swift_willThrow();

  if (qword_1EB811738 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)v0[20];
  uint64_t v3 = sub_1AFFCA8A8();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EB811718);
  id v4 = v2;
  id v5 = v2;
  uint64_t v6 = sub_1AFFCA888();
  os_log_type_t v7 = sub_1AFFCB468();
  BOOL v8 = os_log_type_enabled(v6, v7);
  unint64_t v9 = (void *)v0[20];
  if (v8)
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    unint64_t v11 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 138412290;
    id v12 = v9;
    uint64_t v13 = _swift_stdlib_bridgeErrorToNSError();
    v0[10] = v13;
    sub_1AFFCB688();
    *unint64_t v11 = v13;

    _os_log_impl(&dword_1AFD01000, v6, v7, "SDSAuthTokenService failed to generate mescal signature with error: %@", v10, 0xCu);
    sub_1AFF606C8(0, (unint64_t *)&qword_1EB8181B0, (uint64_t (*)(uint64_t))sub_1AFD56398, MEMORY[0x1E4FBB718]);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v11, -1, -1);
    MEMORY[0x1B3E8F0D0](v10, -1, -1);
  }
  else
  {
  }
  swift_willThrow();
  id v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_1AFF60308(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 7107189 && a2 == 0xE300000000000000;
  if (v2 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x654B737365636361 && a2 == 0xE900000000000079)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1AFFCBCE8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1AFF603F8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x80000001AFFFBF60)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_1AFFCBCE8();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

void *sub_1AFF60480(void *a1)
{
  sub_1AFF61394(0, &qword_1EB818728, (uint64_t (*)(void))sub_1AFF60674, (uint64_t)&type metadata for SDSSignResponse.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  os_log_type_t v7 = (char *)v11 - v6;
  BOOL v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFF60674();
  unint64_t v9 = v8;
  sub_1AFFCBE68();
  if (!v1)
  {
    sub_1AFF606C8(0, &qword_1EB818710, type metadata accessor for SDSSignResponse.Item, MEMORY[0x1E4FBB320]);
    sub_1AFF6074C();
    sub_1AFFCBB58();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    unint64_t v9 = (void *)v11[1];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v9;
}

unint64_t sub_1AFF60674()
{
  unint64_t result = qword_1EB818618;
  if (!qword_1EB818618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818618);
  }
  return result;
}

void sub_1AFF606C8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t type metadata accessor for SDSSignResponse.Item(uint64_t a1)
{
  return sub_1AFD9BB54(a1, (uint64_t *)&unk_1EB818650);
}

unint64_t sub_1AFF6074C()
{
  unint64_t result = qword_1EB818718;
  if (!qword_1EB818718)
  {
    sub_1AFF606C8(255, &qword_1EB818710, type metadata accessor for SDSSignResponse.Item, MEMORY[0x1E4FBB320]);
    sub_1AFF6081C(&qword_1EB818648, (void (*)(uint64_t))type metadata accessor for SDSSignResponse.Item);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818718);
  }
  return result;
}

uint64_t sub_1AFF6081C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t objectdestroyTm_3()
{
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1AFF608A8(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_1AFD3503C;
  return sub_1AFF5D7E0(a1, v5, v4);
}

uint64_t sub_1AFF60954(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SDSSignResponse.Item(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1AFF609B8()
{
  if (!qword_1EB8186F8)
  {
    sub_1AFF61394(255, &qword_1EB8186F0, (uint64_t (*)(void))sub_1AFF60A54, (uint64_t)&type metadata for SDSSignResponse, MEMORY[0x1E4FAAAD8]);
    sub_1AFF60AA8();
    unint64_t v0 = sub_1AFFCA128();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8186F8);
    }
  }
}

unint64_t sub_1AFF60A54()
{
  unint64_t result = qword_1EB818660;
  if (!qword_1EB818660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818660);
  }
  return result;
}

unint64_t sub_1AFF60AA8()
{
  unint64_t result = qword_1EB8186E8;
  if (!qword_1EB8186E8)
  {
    sub_1AFF61394(255, &qword_1EB8186F0, (uint64_t (*)(void))sub_1AFF60A54, (uint64_t)&type metadata for SDSSignResponse, MEMORY[0x1E4FAAAD8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8186E8);
  }
  return result;
}

uint64_t sub_1AFF60B38(uint64_t a1)
{
  return sub_1AFF5E57C(a1, v1);
}

uint64_t sub_1AFF60B40(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1AFF60BA0()
{
  unint64_t result = qword_1EB8185E8;
  if (!qword_1EB8185E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8185E8);
  }
  return result;
}

unint64_t sub_1AFF60BF4()
{
  unint64_t result = qword_1E9AFCE98;
  if (!qword_1E9AFCE98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFCE98);
  }
  return result;
}

ValueMetadata *type metadata accessor for SDSAuthTokenServiceError()
{
  return &type metadata for SDSAuthTokenServiceError;
}

ValueMetadata *type metadata accessor for SDSSignRequest()
{
  return &type metadata for SDSSignRequest;
}

ValueMetadata *type metadata accessor for SDSSignResponse.CodingKeys()
{
  return &type metadata for SDSSignResponse.CodingKeys;
}

uint64_t *sub_1AFF60C7C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1AFFC8E48();
  }
  else
  {
    uint64_t v7 = sub_1AFFC96E8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
    sub_1AFFC8E38();
  }
  return a1;
}

uint64_t sub_1AFF60D54(uint64_t a1)
{
  uint64_t v2 = sub_1AFFC96E8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFF60DCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1AFFC96E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  void *v8 = *v9;
  v8[1] = v10;
  sub_1AFFC8E38();
  return a1;
}

uint64_t sub_1AFF60E54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1AFFC96E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  void *v8 = *v9;
  v8[1] = v9[1];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AFF60EF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1AFFC96E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1AFF60F6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1AFFC96E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  void *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AFF60FF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1AFF6100C);
}

uint64_t sub_1AFF6100C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1AFFC96E8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1AFF610D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1AFF610E4);
}

uint64_t sub_1AFF610E4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1AFFC96E8();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1AFF611A4()
{
  uint64_t result = sub_1AFFC96E8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1AFF6123C()
{
  unint64_t result = qword_1E9AFCEA0;
  if (!qword_1E9AFCEA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFCEA0);
  }
  return result;
}

unint64_t sub_1AFF61294()
{
  unint64_t result = qword_1EB818628;
  if (!qword_1EB818628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818628);
  }
  return result;
}

unint64_t sub_1AFF612EC()
{
  unint64_t result = qword_1EB818620;
  if (!qword_1EB818620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818620);
  }
  return result;
}

unint64_t sub_1AFF61340()
{
  unint64_t result = qword_1EB818630;
  if (!qword_1EB818630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818630);
  }
  return result;
}

void sub_1AFF61394(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_1AFF613FC()
{
  unint64_t result = qword_1EB8185D0;
  if (!qword_1EB8185D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8185D0);
  }
  return result;
}

unint64_t sub_1AFF61450()
{
  unint64_t result = qword_1EB818708;
  if (!qword_1EB818708)
  {
    sub_1AFF606C8(255, &qword_1EB818700, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB320]);
    sub_1AFF6081C(&qword_1EB818B68, MEMORY[0x1E4F276F0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818708);
  }
  return result;
}

unsigned char *_s10StocksCore15SDSSignResponseV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1AFF615BCLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SDSSignRequest.CodingKeys()
{
  return &type metadata for SDSSignRequest.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for SDSSignResponse.Item.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFF616C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SDSSignResponse.Item.CodingKeys()
{
  return &type metadata for SDSSignResponse.Item.CodingKeys;
}

unint64_t sub_1AFF616FC()
{
  unint64_t result = qword_1E9AFCEA8;
  if (!qword_1E9AFCEA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFCEA8);
  }
  return result;
}

unint64_t sub_1AFF61754()
{
  unint64_t result = qword_1E9AFCEB0;
  if (!qword_1E9AFCEB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFCEB0);
  }
  return result;
}

unint64_t sub_1AFF617AC()
{
  unint64_t result = qword_1EB8185E0;
  if (!qword_1EB8185E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8185E0);
  }
  return result;
}

unint64_t sub_1AFF61804()
{
  unint64_t result = qword_1EB8185D8;
  if (!qword_1EB8185D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8185D8);
  }
  return result;
}

unint64_t sub_1AFF6185C()
{
  unint64_t result = qword_1EB818640;
  if (!qword_1EB818640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818640);
  }
  return result;
}

unint64_t sub_1AFF618B4()
{
  unint64_t result = qword_1EB818638;
  if (!qword_1EB818638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818638);
  }
  return result;
}

void sub_1AFF61908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  uint64_t v11 = (void *)swift_allocObject();
  void v11[2] = a3;
  v11[3] = a4;
  v11[4] = sub_1AFD8173C;
  v11[5] = v10;
  v13[4] = sub_1AFF61B24;
  v13[5] = v11;
  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 1107296256;
  v13[2] = sub_1AFE617C0;
  v13[3] = &block_descriptor_38;
  uint64_t v12 = _Block_copy(v13);
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  swift_release();
  objc_msgSend(a5, sel_syncWithCompletion_, v12);
  _Block_release(v12);
}

uint64_t sub_1AFF61A34()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1AFF61A6C(int a1, id a2, void (*a3)(id), uint64_t a4, void (*a5)(void))
{
  if (a2)
  {
    id v7 = a2;
    a3(a2);
  }
  else
  {
    a5();
  }
}

uint64_t sub_1AFF61AE4()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

void sub_1AFF61B24(int a1, void *a2)
{
  sub_1AFF61A6C(a1, a2, *(void (**)(id))(v2 + 16), *(void *)(v2 + 24), *(void (**)(void))(v2 + 32));
}

StocksCore::QuoteSource_optional __swiftcall QuoteSource.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1AFFCBA78();
  result.value = swift_bridgeObjectRelease();
  char v5 = 7;
  if (v3 < 7) {
    char v5 = v3;
  }
  char *v2 = v5;
  return result;
}

unint64_t QuoteSource.rawValue.getter()
{
  unint64_t result = 0x44636972656E6567;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x655271616473616ELL;
      break;
    case 2:
      unint64_t result = 0x6C6165526573796ELL;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 0x52544B4D6573796ELL;
      break;
    case 5:
      unint64_t result = 0x52636972656E6567;
      break;
    case 6:
      unint64_t result = 0x6E776F6E6B6E75;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1AFF61CA0()
{
  unint64_t result = qword_1E9AFCEB8[0];
  if (!qword_1E9AFCEB8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9AFCEB8);
  }
  return result;
}

uint64_t sub_1AFF61CF4()
{
  return sub_1AFF9B0F0();
}

uint64_t sub_1AFF61D00()
{
  return sub_1AFD785A0();
}

uint64_t sub_1AFF61D08()
{
  return sub_1AFF9B0F0();
}

StocksCore::QuoteSource_optional sub_1AFF61D10(Swift::String *a1)
{
  return QuoteSource.init(rawValue:)(*a1);
}

unint64_t sub_1AFF61D1C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = QuoteSource.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1AFF61D44(unsigned __int8 *a1, char *a2)
{
  return sub_1AFDEC9C0(*a1, *a2);
}

uint64_t sub_1AFF61D50()
{
  return sub_1AFFCB178();
}

uint64_t sub_1AFF61DB0()
{
  return sub_1AFFCB128();
}

unsigned char *storeEnumTagSinglePayload for QuoteSource(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFF61ECCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for QuoteSource()
{
  return &type metadata for QuoteSource;
}

unint64_t sub_1AFF61F04()
{
  unint64_t result = qword_1EB816D90;
  if (!qword_1EB816D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816D90);
  }
  return result;
}

uint64_t sub_1AFF61F5C()
{
  uint64_t result = sub_1AFFC96E8();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1AFFC98F8();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_1AFFC9E18();
      if (v3 <= 0x3F) {
        return swift_initClassMetadata2();
      }
    }
  }
  return result;
}

uint64_t sub_1AFF620B0(uint64_t a1)
{
  uint64_t v43 = sub_1AFFC92A8();
  uint64_t v3 = *(void *)(v43 - 8);
  MEMORY[0x1F4188790](v43);
  uint64_t v42 = (char *)v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_1AFFC92C8();
  uint64_t v5 = *(void *)(v41 - 8);
  MEMORY[0x1F4188790](v41);
  id v7 = (char *)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (!v8) {
    return v9;
  }
  v32[1] = v1;
  uint64_t v49 = MEMORY[0x1E4FBC860];
  sub_1AFD9DC60(0, v8, 0);
  uint64_t v9 = v49;
  uint64_t result = sub_1AFE2BE10(a1);
  uint64_t v12 = result;
  uint64_t v13 = 0;
  uint64_t v14 = a1 + 64;
  uint64_t v38 = v5 + 32;
  unint64_t v39 = (void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v33 = a1 + 80;
  int64_t v34 = v8;
  uint64_t v40 = v5;
  uint64_t v35 = v11;
  uint64_t v36 = a1 + 64;
  uint64_t v37 = a1;
  while ((v12 & 0x8000000000000000) == 0 && v12 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v17 = (unint64_t)v12 >> 6;
    if ((*(void *)(v14 + 8 * ((unint64_t)v12 >> 6)) & (1 << v12)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v11) {
      goto LABEL_24;
    }
    uint64_t v44 = v13;
    uint64_t v45 = 1 << v12;
    uint64_t v18 = *(void *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v19 = (uint64_t *)(*(void *)(a1 + 56) + 16 * v12);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    uint64_t v46 = v18;
    uint64_t v47 = v20;
    uint64_t v48 = v21;
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    unint64_t v22 = v7;
    uint64_t v23 = v42;
    sub_1AFFC9208();
    sub_1AFD3AE10();
    sub_1AFFCB6C8();
    unint64_t v24 = v23;
    id v7 = v22;
    (*v39)(v24, v43);
    sub_1AFFC92B8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v49 = v9;
    unint64_t v26 = *(void *)(v9 + 16);
    unint64_t v25 = *(void *)(v9 + 24);
    if (v26 >= v25 >> 1)
    {
      sub_1AFD9DC60(v25 > 1, v26 + 1, 1);
      uint64_t v9 = v49;
    }
    *(void *)(v9 + 16) = v26 + 1;
    uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v40 + 32))(v9+ ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80))+ *(void *)(v40 + 72) * v26, v22, v41);
    a1 = v37;
    int64_t v15 = 1 << *(unsigned char *)(v37 + 32);
    if (v12 >= v15) {
      goto LABEL_25;
    }
    uint64_t v14 = v36;
    uint64_t v27 = *(void *)(v36 + 8 * v17);
    if ((v27 & v45) == 0) {
      goto LABEL_26;
    }
    LODWORD(v11) = v35;
    if (*(_DWORD *)(v37 + 36) != v35) {
      goto LABEL_27;
    }
    unint64_t v28 = v27 & (-2 << (v12 & 0x3F));
    if (v28)
    {
      int64_t v15 = __clz(__rbit64(v28)) | v12 & 0xFFFFFFFFFFFFFFC0;
      int64_t v16 = v34;
    }
    else
    {
      unint64_t v29 = v17 + 1;
      unint64_t v30 = (unint64_t)(v15 + 63) >> 6;
      int64_t v16 = v34;
      if (v17 + 1 < v30)
      {
        unint64_t v31 = *(void *)(v36 + 8 * v29);
        if (v31)
        {
LABEL_20:
          int64_t v15 = __clz(__rbit64(v31)) + (v29 << 6);
        }
        else
        {
          while (v30 - 2 != v17)
          {
            unint64_t v31 = *(void *)(v33 + 8 * v17++);
            if (v31)
            {
              unint64_t v29 = v17 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    uint64_t v13 = v44 + 1;
    uint64_t v12 = v15;
    if (v44 + 1 == v16) {
      return v9;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

void sub_1AFF624A8(uint64_t a1, uint64_t a2)
{
  swift_getObjectType();
  if (qword_1EB819BE8 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1AFFCA8A8();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EB818A00);
  id v6 = v2;
  id v7 = sub_1AFFCA888();
  os_log_type_t v8 = sub_1AFFCB478();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v20 = v10;
    *(_DWORD *)uint64_t v9 = 136315138;
    uint64_t v11 = sub_1AFFC9F28();
    sub_1AFD36BA8(v11, v12, &v20);
    sub_1AFFCB688();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AFD01000, v7, v8, "SDSBaseOperation %s will issue request", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v10, -1, -1);
    MEMORY[0x1B3E8F0D0](v9, -1, -1);
  }
  else
  {
  }
  MEMORY[0x1F4188790](v13);
  type metadata accessor for SDSBaseOperationResponse();
  sub_1AFFCA7C8();
  *(void *)(swift_allocObject() + 16) = v6;
  id v14 = v6;
  int64_t v15 = (void *)sub_1AFFCA5E8();
  sub_1AFFCA738();
  swift_release();
  swift_release();

  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a1;
  *(void *)(v16 + 24) = a2;
  sub_1AFFC8E48();
  unint64_t v17 = (void *)sub_1AFFCA5E8();
  sub_1AFFCA698();
  swift_release();
  swift_release();

  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a1;
  *(void *)(v18 + 24) = a2;
  sub_1AFFC8E48();
  uint64_t v19 = (void *)sub_1AFFCA5E8();
  sub_1AFFCA6C8();
  swift_release();
  swift_release();
  swift_release();
}

uint64_t sub_1AFF62864()
{
  swift_getObjectType();
  type metadata accessor for SDSAuthToken();
  sub_1AFFCA7C8();
  *(void *)(swift_allocObject() + 16) = v0;
  id v1 = v0;
  unint64_t v2 = (void *)sub_1AFFCA5E8();
  type metadata accessor for SDSBaseOperationResponse();
  uint64_t v3 = sub_1AFFCA688();
  swift_release();
  swift_release();

  return v3;
}

uint64_t sub_1AFF6299C(void *a1, void *a2, void *a3)
{
  uint64_t v7 = type metadata accessor for SDSBaseOperationResponse();
  uint64_t v8 = sub_1AFFCA5F8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (uint64_t *)((char *)&v43 - v10);
  if (sub_1AFF6631C(a1))
  {
    *uint64_t v11 = a1;
    swift_storeEnumTagMultiPayload();
    id v12 = a1;
    sub_1AFF62F9C((uint64_t)v11);
    (*(void (**)(void *, uint64_t))(v9 + 8))(v11, v8);
    if (qword_1EB819BE8 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_1AFFCA8A8();
    __swift_project_value_buffer(v13, (uint64_t)qword_1EB818A00);
    id v14 = a3;
    int64_t v15 = sub_1AFFCA888();
    os_log_type_t v16 = sub_1AFFCB478();
    if (os_log_type_enabled(v15, v16))
    {
      unint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      uint64_t v44 = v3;
      uint64_t v19 = v18;
      uint64_t v47 = v18;
      uint64_t v45 = v7;
      *(_DWORD *)unint64_t v17 = 136315138;
      uint64_t v20 = sub_1AFFC9F28();
      uint64_t v46 = sub_1AFD36BA8(v20, v21, &v47);
      sub_1AFFCB688();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AFD01000, v15, v16, "SDSBaseOperation %s will discard auth token and retry", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1B3E8F0D0](v19, -1, -1);
      MEMORY[0x1B3E8F0D0](v17, -1, -1);
    }
    else
    {
    }
    MEMORY[0x1F4188790](v22);
    *(&v43 - 2) = (uint64_t)a2;
    sub_1AFFC96E8();
    sub_1AFFCA7C8();
    *(void *)(swift_allocObject() + 16) = a2;
    id v38 = a2;
    unint64_t v39 = (void *)sub_1AFFCA5E8();
    uint64_t v40 = sub_1AFFCA668();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v45 = v7;
    if (qword_1EB819BE8 != -1) {
      swift_once();
    }
    uint64_t v23 = sub_1AFFCA8A8();
    __swift_project_value_buffer(v23, (uint64_t)qword_1EB818A00);
    id v24 = a1;
    id v25 = a3;
    id v26 = a1;
    id v27 = v25;
    unint64_t v28 = sub_1AFFCA888();
    os_log_type_t v29 = sub_1AFFCB478();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      uint64_t v44 = v3;
      uint64_t v32 = (void *)v31;
      uint64_t v43 = swift_slowAlloc();
      uint64_t v47 = v43;
      *(_DWORD *)uint64_t v30 = 136315394;
      uint64_t v33 = sub_1AFFC9F28();
      uint64_t v46 = sub_1AFD36BA8(v33, v34, &v47);
      sub_1AFFCB688();

      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 12) = 2112;
      id v35 = a1;
      uint64_t v36 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v46 = v36;
      sub_1AFFCB688();
      *uint64_t v32 = v36;

      _os_log_impl(&dword_1AFD01000, v28, v29, "SDSBaseOperation %s failed with error: %@", (uint8_t *)v30, 0x16u);
      sub_1AFF666D4(0, (unint64_t *)&qword_1EB8181B0, (uint64_t (*)(uint64_t))sub_1AFD56398, MEMORY[0x1E4FBB718]);
      swift_arrayDestroy();
      MEMORY[0x1B3E8F0D0](v32, -1, -1);
      uint64_t v37 = v43;
      swift_arrayDestroy();
      MEMORY[0x1B3E8F0D0](v37, -1, -1);
      MEMORY[0x1B3E8F0D0](v30, -1, -1);
    }
    else
    {
    }
    sub_1AFFCA788();
    id v41 = a1;
    return sub_1AFFCA6D8();
  }
  return v40;
}

void sub_1AFF62F9C(uint64_t a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for NetworkEvent();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *MEMORY[0x1E4FBC8C8] & *v2;
  uint64_t v9 = (char *)v2 + *(void *)(qword_1EB831B00 + v8 + 16);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))v9;
  if (*(void *)v9)
  {
    uint64_t v11 = *((void *)v9 + 1);
    id v12 = (void *)((char *)v2 + *(void *)(qword_1EB831B00 + v8 + 88));
    swift_beginAccess();
    uint64_t v13 = *v12;
    sub_1AFDBE820((uint64_t)v10);
    sub_1AFFC8E38();
    uint64_t v14 = v10(a1, v13);
    swift_bridgeObjectRelease();
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15)
    {
      uint64_t v21 = v11;
      os_log_type_t v16 = (void *)((char *)v2 + *(void *)(qword_1EB831B00 + (*MEMORY[0x1E4FBC8C8] & *v2) + 64));
      uint64_t v17 = v14 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
      uint64_t v18 = *(void *)(v5 + 72);
      do
      {
        sub_1AFEA6D18(v17, (uint64_t)v7);
        uint64_t v19 = v16[3];
        uint64_t v20 = v16[4];
        __swift_project_boxed_opaque_existential_1(v16, v19);
        (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v7, v19, v20);
        sub_1AFDBFF4C((uint64_t)v7);
        v17 += v18;
        --v15;
      }
      while (v15);
    }
    swift_bridgeObjectRelease();
    sub_1AFD309C0((uint64_t)v10);
  }
}

uint64_t sub_1AFF631DC(char *a1)
{
  unint64_t v2 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v3 = &a1[*(void *)(qword_1EB831B00 + (*MEMORY[0x1E4FBC8C8] & *(void *)a1) + 56)];
  uint64_t v4 = *((void *)v3 + 3);
  uint64_t v5 = *((void *)v3 + 4);
  __swift_project_boxed_opaque_existential_1(v3, v4);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 24))(&a1[*(void *)(qword_1EB831B00 + (*v2 & *(void *)a1) + 32)], v4, v5);
}

uint64_t sub_1AFF632C8(uint64_t a1, uint64_t a2, void (*a3)(char *))
{
  uint64_t v5 = type metadata accessor for SDSBaseOperationResponse();
  uint64_t v6 = sub_1AFFCA5F8();
  uint64_t v7 = *(void *)(v6 - 8);
  double v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)v12 - v9;
  (*(void (**)(char *, uint64_t, uint64_t, double))(*(void *)(v5 - 8) + 16))((char *)v12 - v9, a1, v5, v8);
  swift_storeEnumTagMultiPayload();
  sub_1AFF62F9C((uint64_t)v10);
  a3(v10);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t sub_1AFF6345C(void *a1, uint64_t a2, void (*a3)(char *))
{
  type metadata accessor for SDSBaseOperationResponse();
  uint64_t v5 = sub_1AFFCA5F8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  double v8 = (char *)&v11 - v7;
  *(uint64_t *)((char *)&v11 - v7) = (uint64_t)a1;
  swift_storeEnumTagMultiPayload();
  id v9 = a1;
  sub_1AFF62F9C((uint64_t)v8);
  a3(v8);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1AFF635B4(void *a1)
{
  unint64_t v2 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v3 = (void *)((char *)a1 + *(void *)(qword_1EB831B00 + (*MEMORY[0x1E4FBC8C8] & *a1) + 56));
  uint64_t v4 = v3[3];
  uint64_t v5 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  return sub_1AFF0522C((uint64_t)a1 + *(void *)(qword_1EB831B00 + (*v2 & *a1) + 32), v4, v5);
}

uint64_t sub_1AFF63690(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v131 = a1;
  uint64_t v5 = *MEMORY[0x1E4FBC8C8] & *a2;
  uint64_t v125 = sub_1AFFC98F8();
  uint64_t v124 = *(void *)(v125 - 8);
  MEMORY[0x1F4188790](v125);
  uint64_t v123 = (char *)&v114 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = sub_1AFFC9E18();
  uint64_t v120 = *(void *)(v121 - 8);
  MEMORY[0x1F4188790](v121);
  unint64_t v122 = (char *)&v114 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = sub_1AFFC9938();
  uint64_t v117 = *(void *)(v118 - 8);
  MEMORY[0x1F4188790](v118);
  unint64_t v116 = (char *)&v114 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1AFFC9118();
  uint64_t v136 = *(void *)(v9 - 8);
  uint64_t v137 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v119 = (char *)&v114 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v135 = (char *)&v114 - v12;
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1AFF666D4(0, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  BOOL v133 = (char *)&v114 - v15;
  uint64_t v16 = sub_1AFFC96E8();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  unint64_t v115 = (char *)&v114 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  unint64_t v134 = (char *)&v114 - v20;
  uint64_t v130 = sub_1AFFC92C8();
  uint64_t v144 = *(void (**)(char *, uint64_t))(v130 - 8);
  MEMORY[0x1F4188790](v130);
  uint64_t v129 = (char *)&v114 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFF666D4(0, &qword_1EB818B60, MEMORY[0x1E4F26ED8], v13);
  MEMORY[0x1F4188790](v22 - 8);
  id v24 = (char *)&v114 - v23;
  uint64_t v146 = sub_1AFFC9368();
  uint64_t v25 = *(void *)(v146 - 8);
  MEMORY[0x1F4188790](v146);
  uint64_t v132 = (char *)&v114 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v27);
  char v145 = (char *)&v114 - v28;
  if (qword_1EB819BE8 != -1) {
    swift_once();
  }
  uint64_t v147 = v25;
  uint64_t v29 = sub_1AFFCA8A8();
  uint64_t v30 = __swift_project_value_buffer(v29, (uint64_t)qword_1EB818A00);
  BOOL v143 = a2;
  uint64_t v31 = a2;
  uint64_t v142 = v30;
  uint64_t v32 = sub_1AFFCA888();
  os_log_type_t v33 = sub_1AFFCB478();
  BOOL v34 = os_log_type_enabled(v32, v33);
  uint64_t v126 = a3;
  uint64_t v138 = v16;
  uint64_t v139 = v17;
  uint64_t v140 = v5;
  if (v34)
  {
    id v35 = (uint8_t *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    uint64_t v148 = v36;
    *(_DWORD *)id v35 = 136315138;
    uint64_t v37 = sub_1AFFC9F28();
    uint64_t v149 = sub_1AFD36BA8(v37, v38, &v148);
    sub_1AFFCB688();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AFD01000, v32, v33, "SDSBaseOperation %s did fetch auth token", v35, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v36, -1, -1);
    MEMORY[0x1B3E8F0D0](v35, -1, -1);
  }
  else
  {
  }
  sub_1AFF666D4(0, &qword_1EB81A0B8, MEMORY[0x1E4F26EA0], MEMORY[0x1E4FBBE00]);
  uint64_t v39 = *((void *)v144 + 9);
  unint64_t v40 = (*((unsigned __int8 *)v144 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v144 + 80);
  uint64_t v41 = swift_allocObject();
  *(_OWORD *)(v41 + 16) = xmmword_1AFFD0610;
  unint64_t v127 = v40;
  sub_1AFFC92B8();
  uint64_t v128 = v39;
  sub_1AFFC92B8();
  uint64_t v42 = sub_1AFFC8E38();
  uint64_t v43 = v141;
  uint64_t v44 = sub_1AFF620B0(v42);
  uint64_t v141 = v43;
  swift_bridgeObjectRelease();
  uint64_t v148 = v41;
  sub_1AFF0FBE4(v44);
  sub_1AFFC9308();
  uint64_t v46 = v146;
  uint64_t v45 = v147;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v147 + 48))(v24, 1, v146) == 1)
  {
    swift_bridgeObjectRelease();
    sub_1AFF66578((uint64_t)v24, &qword_1EB818B60, MEMORY[0x1E4F26ED8]);
    uint64_t v47 = v31;
    uint64_t v48 = sub_1AFFCA888();
    os_log_type_t v49 = sub_1AFFCB478();
    if (os_log_type_enabled(v48, v49))
    {
      char v50 = (uint8_t *)swift_slowAlloc();
      uint64_t v51 = swift_slowAlloc();
      uint64_t v148 = v51;
      *(_DWORD *)char v50 = 136315138;
      uint64_t v52 = sub_1AFFC9F28();
      uint64_t v149 = sub_1AFD36BA8(v52, v53, &v148);
      sub_1AFFCB688();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AFD01000, v48, v49, "SDSBaseOperation %s failed to construct URL", v50, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1B3E8F0D0](v51, -1, -1);
      MEMORY[0x1B3E8F0D0](v50, -1, -1);
    }
    else
    {
    }
    type metadata accessor for SDSBaseOperationResponse();
    sub_1AFFCA788();
    type metadata accessor for SDSBaseOperation.OperationError();
    swift_getWitnessTable();
    swift_allocError();
    return sub_1AFFCA6D8();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v145, v24, v46);
    sub_1AFFC92F8();
    uint64_t v55 = (void (*)(uint64_t *, void))sub_1AFFC92E8();
    if (*v54)
    {
      unint64_t v56 = v54;
      type metadata accessor for SDSAuthToken();
      uint64_t v57 = v129;
      sub_1AFFC92B8();
      unint64_t v58 = *v56;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *unint64_t v56 = v58;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v58 = sub_1AFD36870(0, *(void *)(v58 + 16) + 1, 1, v58);
        *unint64_t v56 = v58;
      }
      unint64_t v61 = *(void *)(v58 + 16);
      unint64_t v60 = *(void *)(v58 + 24);
      if (v61 >= v60 >> 1)
      {
        unint64_t v58 = sub_1AFD36870(v60 > 1, v61 + 1, 1, v58);
        *unint64_t v56 = v58;
      }
      uint64_t v62 = v147;
      *(void *)(v58 + 16) = v61 + 1;
      (*((void (**)(unint64_t, char *, uint64_t))v144 + 4))(v58 + v127 + v61 * v128, v57, v130);
      v55(&v148, 0);
      uint64_t v46 = v146;
    }
    else
    {
      v55(&v148, 0);
      uint64_t v62 = v147;
    }
    uint64_t v64 = v132;
    uint64_t v65 = (uint64_t)v133;
    (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v132, v145, v46);
    sub_1AFFC9318();
    unint64_t v66 = *(void (**)(char *, uint64_t))(v62 + 8);
    uint64_t v147 = v62 + 8;
    v66(v64, v46);
    uint64_t v67 = v138;
    uint64_t v68 = v139;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v139 + 48))(v65, 1, v138) == 1)
    {
      sub_1AFF66578(v65, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
      uint64_t v69 = v31;
      uint64_t v70 = sub_1AFFCA888();
      os_log_type_t v71 = sub_1AFFCB478();
      if (os_log_type_enabled(v70, v71))
      {
        uint64_t v72 = (uint8_t *)swift_slowAlloc();
        uint64_t v73 = swift_slowAlloc();
        uint64_t v144 = v66;
        uint64_t v74 = v73;
        uint64_t v148 = v73;
        *(_DWORD *)uint64_t v72 = 136315138;
        uint64_t v75 = sub_1AFFC9F28();
        uint64_t v149 = sub_1AFD36BA8(v75, v76, &v148);
        uint64_t v46 = v146;
        sub_1AFFCB688();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1AFD01000, v70, v71, "SDSBaseOperation %s failed to construct URL", v72, 0xCu);
        swift_arrayDestroy();
        uint64_t v77 = v74;
        unint64_t v66 = v144;
        MEMORY[0x1B3E8F0D0](v77, -1, -1);
        MEMORY[0x1B3E8F0D0](v72, -1, -1);
      }
      else
      {
      }
      type metadata accessor for SDSBaseOperationResponse();
      sub_1AFFCA788();
      type metadata accessor for SDSBaseOperation.OperationError();
      swift_getWitnessTable();
      swift_allocError();
      uint64_t v63 = sub_1AFFCA6D8();
      v66(v145, v46);
    }
    else
    {
      uint64_t v144 = v66;
      uint64_t v78 = v134;
      (*(void (**)(char *, uint64_t, uint64_t))(v68 + 32))(v134, v65, v67);
      (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v115, v78, v67);
      uint64_t v79 = v135;
      sub_1AFFC90C8();
      uint64_t v80 = v116;
      sub_1AFFC8978();
      uint64_t v81 = sub_1AFFC9918();
      uint64_t v83 = v82;
      (*(void (**)(char *, uint64_t))(v117 + 8))(v80, v118);
      uint64_t v131 = v81;
      uint64_t v132 = v83;
      sub_1AFFC90E8();
      uint64_t v84 = *(char **)(v140 + qword_1EB831B00 + 8);
      uint64_t v140 = *(void *)(v140 + qword_1EB831B00);
      BOOL v133 = v84;
      sub_1AFFCA0C8();
      swift_getWitnessTable();
      sub_1AFFCA448();
      (*(void (**)(char *, char *, uint64_t))(v136 + 16))(v119, v79, v137);
      long long v85 = (void *)MEMORY[0x1E4FBC8C8];
      (*(void (**)(char *, char *, uint64_t))(v120 + 16))(v122, (char *)v31 + *(void *)(qword_1EB831B00 + (*MEMORY[0x1E4FBC8C8] & *v31) + 80), v121);
      (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v123, (char *)v31 + *(void *)(qword_1EB831B00 + (*v85 & *v31) + 72), v125);
      uint64_t v86 = (void *)sub_1AFFCA438();
      uint64_t v87 = v31;
      id v88 = v86;
      uint64_t v89 = v87;
      id v90 = v88;
      uint64_t v91 = sub_1AFFCA888();
      os_log_type_t v92 = sub_1AFFCB478();
      if (os_log_type_enabled(v91, v92))
      {
        uint64_t v93 = swift_slowAlloc();
        uint64_t v94 = swift_slowAlloc();
        uint64_t v148 = v94;
        *(_DWORD *)uint64_t v93 = 136315394;
        uint64_t v95 = sub_1AFFC9F28();
        uint64_t v149 = sub_1AFD36BA8(v95, v96, &v148);
        uint64_t v46 = v146;
        sub_1AFFCB688();

        swift_bridgeObjectRelease();
        *(_WORD *)(v93 + 12) = 2082;
        uint64_t v97 = sub_1AFFCA418();
        uint64_t v149 = sub_1AFD36BA8(v97, v98, &v148);
        sub_1AFFCB688();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1AFD01000, v91, v92, "SDSBaseOperation %s will issue network operation %{public}s", (uint8_t *)v93, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1B3E8F0D0](v94, -1, -1);
        MEMORY[0x1B3E8F0D0](v93, -1, -1);
      }
      else
      {
      }
      id v99 = v90;
      unint64_t v100 = (unint64_t)v132;
      sub_1AFFC8E38();
      uint64_t v101 = sub_1AFFCA888();
      os_log_type_t v102 = sub_1AFFCB478();
      if (os_log_type_enabled(v101, v102))
      {
        uint64_t v103 = swift_slowAlloc();
        uint64_t v146 = swift_slowAlloc();
        uint64_t v148 = v146;
        *(_DWORD *)uint64_t v103 = 136446466;
        uint64_t v104 = sub_1AFFCA418();
        uint64_t v149 = sub_1AFD36BA8(v104, v105, &v148);
        sub_1AFFCB688();

        swift_bridgeObjectRelease();
        *(_WORD *)(v103 + 12) = 2082;
        sub_1AFFC8E38();
        uint64_t v149 = sub_1AFD36BA8(v131, v100, &v148);
        sub_1AFFCB688();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1AFD01000, v101, v102, "Network operation %{public}s will use request UUID: %{public}s", (uint8_t *)v103, 0x16u);
        uint64_t v106 = v146;
        swift_arrayDestroy();
        MEMORY[0x1B3E8F0D0](v106, -1, -1);
        MEMORY[0x1B3E8F0D0](v103, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      uint64_t v107 = v139;
      unint64_t v108 = v144;
      uint64_t v109 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v110 = (void *)swift_allocObject();
      unint64_t v111 = v133;
      v110[2] = v140;
      v110[3] = v111;
      v110[4] = v109;
      sub_1AFFC8E48();
      sub_1AFFCA428();
      swift_release();
      type metadata accessor for SDSBaseOperationResponse();
      uint64_t v112 = sub_1AFFCA788();
      MEMORY[0x1F4188790](v112);
      *(&v114 - 2) = (uint64_t)v99;
      uint64_t v63 = sub_1AFFCA748();

      (*(void (**)(char *, uint64_t))(v136 + 8))(v135, v137);
      (*(void (**)(char *, uint64_t))(v107 + 8))(v134, v138);
      v108(v145, v46);
    }
  }
  return v63;
}

void sub_1AFF64B8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1AFFCA368();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t v8 = MEMORY[0x1B3E8F200](a2 + 16);
  if (v8)
  {
    uint64_t v9 = (void *)v8;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
    uint64_t v10 = (void *)((char *)v9 + *(void *)(qword_1EB831B00 + (*MEMORY[0x1E4FBC8C8] & *v9) + 88));
    swift_beginAccess();
    unint64_t v11 = *v10;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t *v10 = v11;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v11 = sub_1AFD3665C(0, *(void *)(v11 + 16) + 1, 1, v11);
      unint64_t *v10 = v11;
    }
    unint64_t v14 = *(void *)(v11 + 16);
    unint64_t v13 = *(void *)(v11 + 24);
    if (v14 >= v13 >> 1)
    {
      unint64_t v11 = sub_1AFD3665C(v13 > 1, v14 + 1, 1, v11);
      unint64_t *v10 = v11;
    }
    *(void *)(v11 + 16) = v14 + 1;
    (*(void (**)(unint64_t, unsigned char *, uint64_t))(v5 + 32))(v11+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v14, v7, v4);
    swift_endAccess();
  }
}

id sub_1AFF64D98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10 = *MEMORY[0x1E4FBC8C8] & *a5;
  unint64_t v11 = (void *)swift_allocObject();
  uint64_t v12 = (void *)(*(void *)(v10 + *MEMORY[0x1E4FAAE58]) + *MEMORY[0x1E4FAAAE0]);
  void v11[2] = *v12;
  v11[3] = v12[1];
  v11[4] = a1;
  v11[5] = a2;
  v11[6] = a3;
  v11[7] = a4;
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC9F18();

  return objc_msgSend(a5, sel_start);
}

void sub_1AFF64EB0(uint64_t a1, void (*a2)(char *), uint64_t a3, void (*a4)(void *), uint64_t a5)
{
  uint64_t v24 = a5;
  uint64_t v25 = a4;
  uint64_t v26 = a3;
  uint64_t v27 = a2;
  uint64_t v6 = type metadata accessor for SDSBaseOperationResponse();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v24 - v8;
  uint64_t v10 = sub_1AFFCA3C8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  unint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v24 - v15;
  uint64_t v17 = sub_1AFFCA5F8();
  double v18 = MEMORY[0x1F4188790](v17);
  uint64_t v20 = (void **)((char *)&v24 - v19);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v21 + 16))((char *)&v24 - v19, a1, v17, v18);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v22 = *v20;
    v25(v22);
  }
  else
  {
    uint64_t v23 = *(void (**)(char *, void **, uint64_t))(v11 + 32);
    v23(v16, v20, v10);
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v13, v16, v10);
    v23(v9, (void **)v13, v10);
    v27(v9);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  }
}

void sub_1AFF6517C()
{
}

uint64_t sub_1AFF651C4()
{
  id v1 = (void *)MEMORY[0x1E4FBC8C8];
  sub_1AFD309C0(*(void *)((char *)v0 + *(void *)(qword_1EB831B00 + (*MEMORY[0x1E4FBC8C8] & *v0) + 16)));
  unint64_t v2 = (char *)v0 + *(void *)(qword_1EB831B00 + (*v1 & *v0) + 32);
  uint64_t v3 = sub_1AFFC96E8();
  (*(void (**)(char *, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v0 + *(void *)(qword_1EB831B00 + (*v1 & *v0) + 56));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v0 + *(void *)(qword_1EB831B00 + (*v1 & *v0) + 64));
  uint64_t v4 = (char *)v0 + *(void *)(qword_1EB831B00 + (*v1 & *v0) + 72);
  uint64_t v5 = sub_1AFFC98F8();
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = (char *)v0 + *(void *)(qword_1EB831B00 + (*v1 & *v0) + 80);
  uint64_t v7 = sub_1AFFC9E18();
  (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFF654F0(void *a1)
{
  unint64_t v2 = (void *)MEMORY[0x1E4FBC8C8];
  sub_1AFD309C0(*(void *)((char *)a1 + *(void *)(qword_1EB831B00 + (*MEMORY[0x1E4FBC8C8] & *a1) + 16)));
  uint64_t v3 = (char *)a1 + *(void *)(qword_1EB831B00 + (*v2 & *a1) + 32);
  uint64_t v4 = sub_1AFFC96E8();
  (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1 + *(void *)(qword_1EB831B00 + (*v2 & *a1) + 56));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1 + *(void *)(qword_1EB831B00 + (*v2 & *a1) + 64));
  uint64_t v5 = (char *)a1 + *(void *)(qword_1EB831B00 + (*v2 & *a1) + 72);
  uint64_t v6 = sub_1AFFC98F8();
  (*(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = (char *)a1 + *(void *)(qword_1EB831B00 + (*v2 & *a1) + 80);
  uint64_t v8 = sub_1AFFC9E18();
  (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);

  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for SDSBaseOperation()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1AFF6583C()
{
  uint64_t result = sub_1AFFCA3C8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1AFF658CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1AFFCA3C8();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t sub_1AFF6593C(uint64_t a1)
{
  uint64_t v2 = sub_1AFFCA3C8();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_1AFF659A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1AFFCA3C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1AFF65A0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1AFFCA3C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1AFF65A74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1AFFCA3C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1AFF65ADC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1AFFCA3C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1AFF65B44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1AFF65B58);
}

uint64_t sub_1AFF65B58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1AFFCA3C8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_1AFF65BC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1AFF65BDC);
}

uint64_t sub_1AFF65BDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1AFFCA3C8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for SDSBaseOperationResponse()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1AFF65C68()
{
  return sub_1AFF62864();
}

uint64_t sub_1AFF65C94()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1AFF65CCC(void *a1, void *a2)
{
  return sub_1AFF6299C(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_1AFF65CE8()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1AFF65D20(uint64_t a1, uint64_t a2)
{
  return sub_1AFF632C8(a1, a2, *(void (**)(char *))(v2 + 16));
}

uint64_t sub_1AFF65D3C(void *a1, uint64_t a2)
{
  return sub_1AFF6345C(a1, a2, *(void (**)(char *))(v2 + 16));
}

uint64_t sub_1AFF65D44(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NetworkEvent();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1AFFCA368();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  id v35 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v11 = (void *)((char *)a1 + *(void *)(qword_1EB831B00 + (*MEMORY[0x1E4FBC8C8] & *a1) + 88));
  swift_beginAccess();
  uint64_t result = *v11;
  uint64_t v13 = *(void *)(*v11 + 16);
  if (v13)
  {
    uint64_t v32 = (void *)((char *)a1 + *(void *)(qword_1EB831B00 + (*v10 & *a1) + 64));
    uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    uint64_t v14 = v8 + 16;
    unint64_t v16 = result + ((*(unsigned __int8 *)(v14 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 64));
    uint64_t v30 = *(void *)(a2 + qword_1EB816960);
    uint64_t v31 = v15;
    uint64_t v17 = *(void *)(v14 + 56);
    uint64_t v33 = v14;
    uint64_t v28 = (void (**)(char *, uint64_t))(v14 - 8);
    uint64_t v29 = v17;
    uint64_t v27 = result;
    sub_1AFFC8E38();
    double v18 = v35;
    do
    {
      uint64_t v19 = v18;
      uint64_t v20 = v31;
      v31(v19, (char *)v16, v7);
      uint64_t v21 = v32[3];
      uint64_t v22 = v32[4];
      BOOL v34 = __swift_project_boxed_opaque_existential_1(v32, v21);
      sub_1AFD31570();
      uint64_t v24 = v4;
      uint64_t v25 = &v6[*(int *)(v23 + 48)];
      v20(v6, v35, v7);
      *(void *)uint64_t v25 = *(void *)(v30 + 16);
      *((void *)v25 + 1) = 0;
      uint64_t v26 = MEMORY[0x1E4FBC860];
      *((void *)v25 + 2) = MEMORY[0x1E4FBC860];
      *((void *)v25 + 3) = v26;
      *((void *)v25 + 4) = 0;
      *((void *)v25 + 5) = 0;
      uint64_t v4 = v24;
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v6, v21, v22);
      double v18 = v35;
      sub_1AFDBFF4C((uint64_t)v6);
      (*v28)(v18, v7);
      v16 += v29;
      --v13;
    }
    while (v13);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1AFF66034(void *a1, _OWORD *a2)
{
  uint64_t v36 = type metadata accessor for NetworkEvent();
  MEMORY[0x1F4188790](v36);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1AFFCA368();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v37 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v10 = (void *)((char *)a1 + *(void *)(qword_1EB831B00 + (*MEMORY[0x1E4FBC8C8] & *a1) + 88));
  swift_beginAccess();
  uint64_t result = *v10;
  uint64_t v12 = *(void *)(*v10 + 16);
  if (v12)
  {
    BOOL v34 = (void *)((char *)a1 + *(void *)(qword_1EB831B00 + (*v9 & *a1) + 64));
    uint64_t v14 = v7 + 16;
    uint64_t v13 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 16);
    uint64_t v32 = a2;
    uint64_t v33 = v13;
    uint64_t v15 = (uint64_t)v5;
    unint64_t v16 = result + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    uint64_t v17 = *(void *)(v14 + 56);
    uint64_t v35 = v14;
    uint64_t v30 = (void (**)(char *, uint64_t))(v14 - 8);
    uint64_t v31 = v17;
    uint64_t v29 = result;
    sub_1AFFC8E38();
    double v18 = v37;
    do
    {
      uint64_t v19 = v33;
      v33((uint64_t)v18, (char *)v16, v6);
      uint64_t v20 = v6;
      uint64_t v22 = v34[3];
      uint64_t v21 = v34[4];
      __swift_project_boxed_opaque_existential_1(v34, v22);
      sub_1AFD31570();
      uint64_t v24 = (_OWORD *)(v15 + *(int *)(v23 + 48));
      v19(v15, v37, v20);
      uint64_t v25 = (uint64_t)v32;
      long long v26 = v32[1];
      *uint64_t v24 = *v32;
      v24[1] = v26;
      void v24[2] = *(_OWORD *)(v25 + 32);
      swift_storeEnumTagMultiPayload();
      uint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16);
      sub_1AFE8C9D4(v25);
      uint64_t v28 = v22;
      uint64_t v6 = v20;
      v27(v15, v28, v21);
      double v18 = v37;
      sub_1AFDBFF4C(v15);
      (*v30)(v18, v20);
      v16 += v31;
      --v12;
    }
    while (v12);
    return swift_bridgeObjectRelease();
  }
  return result;
}

BOOL sub_1AFF6631C(void *a1)
{
  sub_1AFF666D4(0, &qword_1EB811968, MEMORY[0x1E4FAAEC0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (void **)((char *)v14 - v3);
  v14[1] = a1;
  id v5 = a1;
  sub_1AFE9DFBC();
  uint64_t v6 = sub_1AFFCA4B8();
  int v7 = swift_dynamicCast();
  uint64_t v8 = *(void (**)(void **, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  if (!v7)
  {
    v8(v4, 1, 1, v6);
    sub_1AFF66578((uint64_t)v4, &qword_1EB811968, MEMORY[0x1E4FAAEC0]);
    return 0;
  }
  uint64_t v9 = *(void *)(v6 - 8);
  v8(v4, 0, 1, v6);
  if ((*(unsigned int (**)(void **, uint64_t))(v9 + 88))(v4, v6) != *MEMORY[0x1E4FAAEB8])
  {
    (*(void (**)(void **, uint64_t))(v9 + 8))(v4, v6);
    return 0;
  }
  (*(void (**)(void **, uint64_t))(v9 + 96))(v4, v6);
  uint64_t v10 = *v4;
  id v11 = objc_msgSend(v10, sel_statusCode);

  return v11 == (id)401 || v11 == (id)410;
}

uint64_t sub_1AFF66524()
{
  return sub_1AFF631DC(*(char **)(v0 + 16));
}

uint64_t sub_1AFF66540()
{
  return sub_1AFF635B4(*(void **)(v0 + 16));
}

uint64_t sub_1AFF6655C(uint64_t a1, void *a2)
{
  return sub_1AFF63690(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_1AFF66578(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1AFF666D4(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t type metadata accessor for SDSBaseOperation.OperationError()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1AFF66600()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1AFF66638()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_1AFF66670(uint64_t a1)
{
  sub_1AFF64B8C(a1, *(void *)(v1 + 32));
}

id sub_1AFF6667C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AFF64D98(a1, a2, a3, a4, *(void **)(v4 + 16));
}

uint64_t sub_1AFF66684()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 64, 7);
}

void sub_1AFF666C4(uint64_t a1)
{
  sub_1AFF64EB0(a1, *(void (**)(char *))(v1 + 32), *(void *)(v1 + 40), *(void (**)(void *))(v1 + 48), *(void *)(v1 + 56));
}

void sub_1AFF666D4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1AFF66738()
{
}

unsigned char *sub_1AFF66768(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1AFF66804);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1AFF6682C()
{
  return swift_getWitnessTable();
}

id sub_1AFF66854()
{
  sub_1AFD2CEB0(v0 + 56, (uint64_t)v3);
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_1AFFCB7F8();
  swift_bridgeObjectRelease();
  if (qword_1EB819AC8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  sub_1AFFC8E38();
  sub_1AFFCAFA8();
  swift_bridgeObjectRelease();
  id v1 = sub_1AFE6EFD8(0xD000000000000013, 0x80000001AFFFC050, 0xD00000000000001ALL, 0x80000001AFFFC070, 0xD000000000000015, 0x80000001AFFFC090);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  return v1;
}

uint64_t type metadata accessor for RemoteAppConfigurationService()
{
  return self;
}

uint64_t sub_1AFF669C8(void *a1)
{
  uint64_t v1 = a1[5];
  uint64_t v2 = a1[6];
  __swift_project_boxed_opaque_existential_1(a1 + 2, v1);
  id v3 = sub_1AFF66854();
  uint64_t v4 = (*(uint64_t (**)(id, uint64_t, uint64_t))(v2 + 8))(v3, v1, v2);

  return v4;
}

uint64_t sub_1AFF66A48(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v39 = v1;
  id v3 = v2;
  uint64_t v4 = sub_1AFFCB948();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v31 - v9;
  uint64_t v11 = *v3;
  uint64_t v35 = v3[1];
  uint64_t v36 = v11;
  uint64_t v32 = v3[2];
  uint64_t v34 = v3[3];
  sub_1AFFC9198();
  swift_allocObject();
  sub_1AFFC9188();
  if (qword_1EB818A58 != -1) {
    swift_once();
  }
  uint64_t v12 = __swift_project_value_buffer(v4, (uint64_t)qword_1EB819EA8);
  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v33(v10, v12, v4);
  id v13 = sub_1AFF66854();
  id v14 = objc_msgSend(v13, sel_storefrontID);

  uint64_t v15 = sub_1AFFCAE98();
  uint64_t v17 = v16;

  if (qword_1EB819AC8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  if (v15 == qword_1EB818960 && v17 == qword_1EB818968)
  {
    swift_bridgeObjectRelease();
    char v18 = 0;
  }
  else
  {
    char v19 = sub_1AFFCBCE8();
    swift_bridgeObjectRelease();
    char v18 = v19 ^ 1;
  }
  v38[3] = MEMORY[0x1E4FBB390];
  LOBYTE(v38[0]) = v18 & 1;
  uint64_t v20 = (void (*)(unsigned char *, void))sub_1AFFC9178();
  sub_1AFE5ABD8((uint64_t)v38, (uint64_t)v10);
  v20(v37, 0);
  if (qword_1EB818A60 != -1) {
    swift_once();
  }
  uint64_t v21 = __swift_project_value_buffer(v4, (uint64_t)qword_1EB819EC0);
  uint64_t v22 = v33;
  v33(v7, v21, v4);
  sub_1AFF67078(0, &qword_1EB819E10, MEMORY[0x1E4FBC1C8], MEMORY[0x1E4FBB320]);
  v38[3] = v23;
  v38[0] = v32;
  sub_1AFFC8E38();
  uint64_t v24 = (void (*)(unsigned char *, void))sub_1AFFC9178();
  sub_1AFE5ABD8((uint64_t)v38, (uint64_t)v7);
  v24(v37, 0);
  if (qword_1EB818A68 != -1) {
    swift_once();
  }
  uint64_t v25 = __swift_project_value_buffer(v4, (uint64_t)qword_1EB819ED8);
  v22(v7, v25, v4);
  sub_1AFF67078(0, &qword_1EB819DF8, MEMORY[0x1E4FBC150], MEMORY[0x1E4FBB320]);
  v38[3] = v26;
  v38[0] = v34;
  sub_1AFFC8E38();
  uint64_t v27 = (void (*)(unsigned char *, void))sub_1AFFC9178();
  sub_1AFE5ABD8((uint64_t)v38, (uint64_t)v7);
  v27(v37, 0);
  sub_1AFEFEDBC();
  uint64_t v28 = v39;
  sub_1AFFC9168();
  if (v28)
  {
    swift_release();
    sub_1AFF67078(0, &qword_1EB819BD0, (uint64_t)&type metadata for AppConfiguration, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return sub_1AFFCA6E8();
  }
  else
  {
    memcpy(v37, v38, 0x10BAuLL);
    sub_1AFF67078(0, &qword_1EB819BD0, (uint64_t)&type metadata for AppConfiguration, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    uint64_t v29 = sub_1AFFCA6F8();
    swift_release();
  }
  return v29;
}

uint64_t sub_1AFF66FA0()
{
  sub_1AFFCA7C8();
  sub_1AFFC8E48();
  uint64_t v0 = (void *)sub_1AFFCA5E8();
  uint64_t v1 = sub_1AFFCA668();
  swift_release();
  swift_release();

  return v1;
}

uint64_t sub_1AFF67040()
{
  return sub_1AFF669C8(v0);
}

uint64_t sub_1AFF6705C(uint64_t a1)
{
  return sub_1AFF66A48(a1);
}

void sub_1AFF67078(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1AFF670C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_1AFD627C4();
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1AFFD05F0;
  *(void *)(v14 + 32) = a1;
  *(void *)(v14 + 40) = a2;
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a7 + 8);
  sub_1AFFC8E38();
  v15(v14, a3, a4, a5, a6, a7);
  swift_bridgeObjectRelease();
  uint64_t v16 = (void *)sub_1AFFCA5E8();
  type metadata accessor for QuoteDetail();
  uint64_t v17 = sub_1AFFCA668();
  swift_release();

  return v17;
}

uint64_t sub_1AFF671CC(uint64_t *a1)
{
  sub_1AFE60658(0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for QuoteDetail();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)v14 - v10;
  sub_1AFE2A15C(*a1, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1AFF6A154((uint64_t)v4, (uint64_t (*)(void))sub_1AFE60658);
    sub_1AFF6A100();
    swift_allocError();
    sub_1AFF69774(0, (unint64_t *)&unk_1EB817D58, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return sub_1AFFCA6E8();
  }
  else
  {
    sub_1AFF1A33C((uint64_t)v4, (uint64_t)v11);
    sub_1AFD40D38((uint64_t)v11, (uint64_t)v8);
    sub_1AFF69774(0, (unint64_t *)&unk_1EB817D58, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    uint64_t v12 = sub_1AFFCA6F8();
    sub_1AFF6A154((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for QuoteDetail);
  }
  return v12;
}

uint64_t sub_1AFF67444(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v9[9] = a8;
  v9[10] = v8;
  v9[7] = a6;
  v9[8] = a7;
  v9[5] = a4;
  v9[6] = a5;
  v9[3] = a2;
  v9[4] = a3;
  v9[2] = a1;
  return MEMORY[0x1F4188298](sub_1AFF67474, 0, 0);
}

uint64_t sub_1AFF67474()
{
  v0[11] = sub_1AFF670C4(v0[3], v0[4], v0[5], v0[6], v0[7], v0[8], v0[9]);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[12] = v1;
  void *v1 = v0;
  v1[1] = sub_1AFF67528;
  uint64_t v2 = v0[2];
  return MEMORY[0x1F415EBC8](v2);
}

uint64_t sub_1AFF67528()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1AFE2CDA4, 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1AFF67664()
{
  return sub_1AFFCA758();
}

void sub_1AFF676F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v25 = a7;
  uint64_t v26 = a8;
  uint64_t v27 = a5;
  uint64_t v28 = a1;
  uint64_t v12 = sub_1AFFC9E18();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1AFFC98F8();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  char v19 = (char *)&v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFFC98E8();
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E4FAA980], v12);
  sub_1AFF670C4(a6, v25, v26, (uint64_t)v19, (uint64_t)v15, a9, a10);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  uint64_t v20 = swift_allocObject();
  uint64_t v21 = v28;
  *(void *)(v20 + 16) = v28;
  *(void *)(v20 + 24) = a2;
  sub_1AFFC8E48();
  uint64_t v22 = (void *)sub_1AFFCA5E8();
  sub_1AFFCA678();
  swift_release();
  swift_release();

  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = v21;
  *(void *)(v23 + 24) = a2;
  sub_1AFFC8E48();
  uint64_t v24 = (void *)sub_1AFFCA5E8();
  sub_1AFFCA6B8();
  swift_release();
  swift_release();
  swift_release();
}

uint64_t sub_1AFF67998(uint64_t a1, void (*a2)(char *))
{
  sub_1AFE60658(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFD40D38(a1, (uint64_t)v6);
  uint64_t v7 = type metadata accessor for QuoteDetail();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 0, 1, v7);
  a2(v6);
  return sub_1AFF6A154((uint64_t)v6, (uint64_t (*)(void))sub_1AFE60658);
}

uint64_t sub_1AFF67A94(uint64_t a1, void (*a2)(char *))
{
  sub_1AFE60658(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for QuoteDetail();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  a2(v5);
  return sub_1AFF6A154((uint64_t)v5, (uint64_t (*)(void))sub_1AFE60658);
}

uint64_t sub_1AFF67B70()
{
  return 0x65645F65746F7571;
}

uint64_t sub_1AFF67B94()
{
  return 0x312E302E31;
}

uint64_t sub_1AFF67BA8(uint64_t a1, uint64_t a2)
{
  uint64_t v15 = a2;
  uint64_t v3 = v2;
  uint64_t v12 = a1;
  uint64_t v4 = sub_1AFFC9E08();
  uint64_t v13 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v14 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1AFFCA2F8();
  MEMORY[0x1F4188790](v6);
  uint64_t v16 = MEMORY[0x1E4FBC860];
  sub_1AFF69820((unint64_t *)&unk_1EB81ABD0, 255, MEMORY[0x1E4FAACC8]);
  sub_1AFD67240(0);
  sub_1AFF69820((unint64_t *)&qword_1EB81AC58, 255, sub_1AFD67240);
  sub_1AFFCB738();
  sub_1AFF69868();
  swift_allocObject();
  *(void *)(v2 + 56) = sub_1AFFC9F68();
  uint64_t v7 = v12;
  sub_1AFD2CEB0(v12, v2 + 16);
  sub_1AFF69774(0, &qword_1EB81A450, MEMORY[0x1E4FAA910], MEMORY[0x1E4FBBE00]);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1AFFD05F0;
  sub_1AFFC9DF8();
  uint64_t v16 = v8;
  sub_1AFF69820((unint64_t *)&unk_1EB81ABB0, 255, MEMORY[0x1E4FAA910]);
  sub_1AFD673A0(0);
  sub_1AFF69820((unint64_t *)&qword_1EB81AC30, 255, sub_1AFD673A0);
  sub_1AFFCB738();
  sub_1AFF6993C(0, &qword_1EB810BE8, &qword_1EB817E10, MEMORY[0x1E4FAA660], MEMORY[0x1E4FAAFF0]);
  swift_allocObject();
  uint64_t v9 = sub_1AFFCA528();
  __swift_destroy_boxed_opaque_existential_1(v7);
  *(void *)(v3 + 64) = v9;
  return v3;
}

uint64_t sub_1AFF67F40@<X0>(uint64_t *a1@<X8>)
{
  sub_1AFFCA508();
  sub_1AFF699F8(0, &qword_1EB817E10, MEMORY[0x1E4FAA660]);
  swift_allocObject();
  uint64_t result = sub_1AFFCA988();
  *a1 = result;
  return result;
}

uint64_t sub_1AFF67FEC(uint64_t a1, uint64_t a2, void *a3, void (*a4)(unsigned char *, unsigned char *, uint64_t))
{
  uint64_t v5 = v4;
  uint64_t v101 = a4;
  unint64_t v111 = a3;
  uint64_t v85 = a2;
  uint64_t v100 = *v4;
  uint64_t v89 = sub_1AFFC9F58();
  uint64_t v88 = *(void *)(v89 - 8);
  MEMORY[0x1F4188790](v89);
  uint64_t v87 = &v82[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAA650];
  sub_1AFF699F8(0, (unint64_t *)&unk_1EB8168F8, MEMORY[0x1E4FAA650]);
  uint64_t v110 = v9;
  uint64_t v103 = *(void *)(v9 - 8);
  uint64_t v90 = *(void *)(v103 + 64);
  MEMORY[0x1F4188790](v9);
  os_log_type_t v92 = &v82[-v10];
  sub_1AFF6993C(0, &qword_1EB817DE8, (unint64_t *)&unk_1EB8168F8, v8, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v91 = &v82[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v13);
  os_log_type_t v102 = &v82[-v14];
  uint64_t v15 = sub_1AFFC9E18();
  uint64_t v98 = *(void *)(v15 - 8);
  uint64_t v99 = v15;
  MEMORY[0x1F4188790](v15);
  uint64_t v96 = v16;
  uint64_t v97 = &v82[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = sub_1AFFC9DE8();
  uint64_t v108 = *(void *)(v17 - 8);
  uint64_t v109 = v17;
  MEMORY[0x1F4188790](v17);
  uint64_t v106 = &v82[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = sub_1AFFC98F8();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v94 = v21;
  uint64_t v95 = &v82[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = &v82[-v23];
  uint64_t v25 = sub_1AFFC9938();
  uint64_t v26 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v28 = &v82[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1AFFC8978();
  uint64_t v29 = sub_1AFFC9918();
  unint64_t v31 = v30;
  (*(void (**)(unsigned char *, uint64_t))(v26 + 8))(v28, v25);
  if (qword_1EB8168F0 != -1) {
    swift_once();
  }
  uint64_t v32 = sub_1AFFCA8A8();
  __swift_project_value_buffer(v32, (uint64_t)qword_1EB831A80);
  uint64_t v93 = *(void (**)(unsigned char *, void *, uint64_t))(v20 + 16);
  v93(v24, v111, v19);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v33 = sub_1AFFCA888();
  os_log_type_t v34 = sub_1AFFCB478();
  int v35 = v34;
  BOOL v36 = os_log_type_enabled(v33, v34);
  uint64_t v112 = v29;
  uint64_t v105 = v20;
  uint64_t v86 = a1;
  uint64_t v104 = v5;
  unint64_t v107 = v31;
  if (v36)
  {
    uint64_t v37 = swift_slowAlloc();
    uint64_t v84 = swift_slowAlloc();
    uint64_t v114 = v84;
    *(_DWORD *)uint64_t v37 = 136315650;
    int v83 = v35;
    uint64_t v38 = sub_1AFFC8E38();
    uint64_t v39 = MEMORY[0x1B3E8D630](v38, MEMORY[0x1E4FBB1A0]);
    uint64_t v40 = v19;
    unint64_t v42 = v41;
    swift_bridgeObjectRelease();
    uint64_t v113 = sub_1AFD36BA8(v39, v42, &v114);
    sub_1AFFCB688();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v37 + 12) = 2080;
    uint64_t v43 = sub_1AFFC98C8();
    uint64_t v113 = sub_1AFD36BA8(v43, v44, &v114);
    uint64_t v19 = v40;
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v105 + 8))(v24, v40);
    *(_WORD *)(v37 + 22) = 2080;
    sub_1AFFC8E38();
    uint64_t v113 = sub_1AFD36BA8(v112, v31, &v114);
    sub_1AFFCB688();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AFD01000, v33, (os_log_type_t)v83, "Preparing stock quote detail request for symbols: %s, earliestBeginDate: %s, requestID: %s", (uint8_t *)v37, 0x20u);
    uint64_t v45 = v84;
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v45, -1, -1);
    uint64_t v46 = v37;
    uint64_t v5 = v104;
    MEMORY[0x1B3E8F0D0](v46, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    (*(void (**)(unsigned char *, uint64_t))(v20 + 8))(v24, v19);

    swift_bridgeObjectRelease_n();
  }
  if (qword_1EB817C18 != -1) {
    swift_once();
  }
  sub_1AFF69820(&qword_1EB8174D8, v47, (void (*)(uint64_t))type metadata accessor for QuoteDetailManager);
  sub_1AFFC9BB8();
  uint64_t v48 = v5;
  if (v114 == 1) {
    (*(void (**)(unsigned char *, void, uint64_t))(v108 + 104))(v106, *MEMORY[0x1E4FAA8B0], v109);
  }
  else {
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v108 + 16))(v106, v85, v109);
  }
  os_log_type_t v49 = v95;
  v93(v95, v111, v19);
  uint64_t v51 = v98;
  uint64_t v50 = v99;
  uint64_t v52 = *(void (**)(unsigned char *, void, uint64_t))(v98 + 16);
  unint64_t v111 = (void *)v19;
  unint64_t v53 = v97;
  v52(v97, v101, v99);
  uint64_t v54 = v105;
  unint64_t v55 = (*(unsigned __int8 *)(v105 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v105 + 80);
  unint64_t v56 = (v94 + *(unsigned __int8 *)(v51 + 80) + v55) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
  uint64_t v57 = (char *)swift_allocObject();
  unint64_t v58 = v111;
  unint64_t v59 = v107;
  *((void *)v57 + 2) = v112;
  *((void *)v57 + 3) = v59;
  *((void *)v57 + 4) = v48;
  (*(void (**)(char *, unsigned char *, void *))(v54 + 32))(&v57[v55], v49, v58);
  unint64_t v111 = v57;
  (*(void (**)(char *, unsigned char *, uint64_t))(v51 + 32))(&v57[v56], v53, v50);
  sub_1AFFC8E38();
  sub_1AFFC8E48();
  sub_1AFFCA508();
  unint64_t v60 = v102;
  sub_1AFFCA998();
  swift_release();
  uint64_t v61 = v103;
  uint64_t v62 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v103 + 48);
  uint64_t v63 = v110;
  uint64_t result = v62(v60, 1, v110);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v65 = v92;
    uint64_t v101 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v61 + 16);
    v101(v92, v60, v63);
    uint64_t v66 = *(unsigned __int8 *)(v61 + 80);
    uint64_t v67 = (v66 + 16) & ~v66;
    uint64_t v99 = v67 + v90;
    uint64_t v100 = v66 | 7;
    uint64_t v105 = swift_allocObject();
    uint64_t v98 = *(void *)(v61 + 32);
    ((void (*)(uint64_t, unsigned char *, uint64_t))v98)(v105 + v67, v65, v63);
    uint64_t v103 = *(void *)(v61 + 8);
    ((void (*)(unsigned char *, uint64_t))v103)(v60, v63);
    sub_1AFFCA508();
    uint64_t v68 = v91;
    sub_1AFFCA998();
    uint64_t v69 = v110;
    swift_release();
    uint64_t result = v62(v68, 1, v69);
    if (result != 1)
    {
      sub_1AFF69DD0(0, &qword_1EB817D40, MEMORY[0x1E4FAB070]);
      os_log_type_t v102 = v70;
      v101(v65, v68, v69);
      uint64_t v71 = swift_allocObject();
      ((void (*)(uint64_t, unsigned char *, uint64_t))v98)(v71 + v67, v65, v69);
      ((void (*)(unsigned char *, uint64_t))v103)(v68, v69);
      uint64_t v114 = MEMORY[0x1E4FBC860];
      sub_1AFF69820((unint64_t *)&qword_1EB81ABC8, 255, MEMORY[0x1E4FAAA28]);
      sub_1AFD68440(0);
      sub_1AFF69820((unint64_t *)&qword_1EB81AC40, 255, sub_1AFD68440);
      uint64_t v72 = v87;
      uint64_t v73 = v89;
      sub_1AFFCB738();
      uint64_t v74 = v106;
      sub_1AFFCA608();
      swift_release();
      swift_release();
      swift_release();
      (*(void (**)(unsigned char *, uint64_t))(v88 + 8))(v72, v73);
      (*(void (**)(unsigned char *, uint64_t))(v108 + 8))(v74, v109);
      uint64_t v75 = swift_allocObject();
      uint64_t v76 = v112;
      unint64_t v77 = v107;
      *(void *)(v75 + 16) = v112;
      *(void *)(v75 + 24) = v77;
      sub_1AFFC8E38();
      uint64_t v78 = (void *)sub_1AFFCA5E8();
      sub_1AFF69DD0(0, (unint64_t *)&qword_1EB817E50, MEMORY[0x1E4FBAEA0]);
      sub_1AFFCA668();
      swift_release();
      swift_release();

      uint64_t v79 = swift_allocObject();
      *(void *)(v79 + 16) = v76;
      *(void *)(v79 + 24) = v77;
      uint64_t v80 = (void *)sub_1AFFCA5E8();
      uint64_t v81 = sub_1AFFCA6B8();
      swift_release();
      swift_release();

      return v81;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1AFF68D3C(uint64_t a1, uint64_t a2, unint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  if (qword_1EB8168F0 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1AFFCA8A8();
  __swift_project_value_buffer(v12, (uint64_t)qword_1EB831A80);
  swift_bridgeObjectRetain_n();
  uint64_t v13 = sub_1AFFCA888();
  os_log_type_t v14 = sub_1AFFCB478();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v26 = a1;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v27 = v16;
    *(_DWORD *)uint64_t v15 = 136315138;
    sub_1AFFC8E38();
    sub_1AFD36BA8(a2, a3, &v27);
    sub_1AFFCB688();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AFD01000, v13, v14, "Performing quote detail fetch with requestID: %s", v15, 0xCu);
    swift_arrayDestroy();
    uint64_t v17 = v16;
    a1 = v26;
    MEMORY[0x1B3E8F0D0](v17, -1, -1);
    MEMORY[0x1B3E8F0D0](v15, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v18 = a4[5];
  uint64_t v19 = a4[6];
  __swift_project_boxed_opaque_existential_1(a4 + 2, v18);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 8))(a1, a5, a6, v18, v19);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = a2;
  *(void *)(v20 + 24) = a3;
  sub_1AFFC8E38();
  uint64_t v21 = (void *)sub_1AFFCA5E8();
  sub_1AFF69DD0(0, (unint64_t *)&qword_1EB817E50, MEMORY[0x1E4FBAEA0]);
  sub_1AFFCA668();
  swift_release();
  swift_release();

  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = a2;
  *(void *)(v22 + 24) = a3;
  sub_1AFFC8E38();
  uint64_t v23 = (void *)sub_1AFFCA5E8();
  uint64_t v24 = sub_1AFFCA6B8();
  swift_release();
  swift_release();

  return v24;
}

uint64_t sub_1AFF69048(uint64_t *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5 = *a1;
  if (qword_1EB8168F0 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1AFFCA8A8();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EB831A80);
  swift_bridgeObjectRetain_n();
  uint64_t v7 = sub_1AFFCA888();
  os_log_type_t v8 = sub_1AFFCB478();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v12 = v10;
    *(_DWORD *)uint64_t v9 = 136315138;
    sub_1AFFC8E38();
    sub_1AFD36BA8(a2, a3, &v12);
    sub_1AFFCB688();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AFD01000, v7, v8, "Quote detail fetch with ID: %s returned success", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v10, -1, -1);
    MEMORY[0x1B3E8F0D0](v9, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v12 = v5;
  sub_1AFF69FF0();
  swift_allocObject();
  sub_1AFFC8E38();
  return sub_1AFFCA6F8();
}

uint64_t sub_1AFF69240(uint64_t *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5 = *a1;
  if (qword_1EB8168F0 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1AFFCA8A8();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EB831A80);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v7 = sub_1AFFCA888();
  os_log_type_t v8 = sub_1AFFCB478();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v15 = v14;
    *(_DWORD *)uint64_t v9 = 136315394;
    sub_1AFFC8E38();
    sub_1AFD36BA8(a2, a3, &v15);
    sub_1AFFCB688();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v9 + 12) = 2080;
    type metadata accessor for QuoteDetail();
    sub_1AFFC8E38();
    uint64_t v10 = sub_1AFFCAC98();
    unint64_t v12 = v11;
    swift_bridgeObjectRelease();
    sub_1AFD36BA8(v10, v12, &v15);
    sub_1AFFCB688();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AFD01000, v7, v8, "Quote detail request with ID: %s completed with results: %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v14, -1, -1);
    MEMORY[0x1B3E8F0D0](v9, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v15 = v5;
  sub_1AFF69FF0();
  swift_allocObject();
  sub_1AFFC8E38();
  return sub_1AFFCA6F8();
}

void sub_1AFF694C4(void *a1, uint64_t a2, unint64_t a3, const char *a4)
{
  if (qword_1EB8168F0 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1AFFCA8A8();
  __swift_project_value_buffer(v8, (uint64_t)qword_1EB831A80);
  sub_1AFFC8E38();
  id v9 = a1;
  sub_1AFFC8E38();
  id v10 = a1;
  oslog = sub_1AFFCA888();
  os_log_type_t v11 = sub_1AFFCB468();
  if (os_log_type_enabled(oslog, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    uint64_t v17 = v13;
    *(_DWORD *)uint64_t v12 = 136315394;
    sub_1AFFC8E38();
    sub_1AFD36BA8(a2, a3, &v17);
    sub_1AFFCB688();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v12 + 12) = 2080;
    swift_getErrorValue();
    uint64_t v14 = sub_1AFFCBD98();
    sub_1AFD36BA8(v14, v15, &v17);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1AFD01000, oslog, v11, a4, (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v13, -1, -1);
    MEMORY[0x1B3E8F0D0](v12, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_1AFF69720(uint64_t a1, uint64_t a2, void *a3, void (*a4)(unsigned char *, unsigned char *, uint64_t))
{
  return sub_1AFF67FEC(a1, a2, a3, a4);
}

void sub_1AFF69744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1AFF676F8(a1, a2, a3, a4, v4[4], v4[5], v4[6], v4[7], v4[2], v4[3]);
}

void sub_1AFF69774(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1AFF697D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t type metadata accessor for QuoteDetailManager()
{
  return self;
}

ValueMetadata *type metadata accessor for QuoteDetailManager.StoreDescriptor()
{
  return &type metadata for QuoteDetailManager.StoreDescriptor;
}

uint64_t sub_1AFF69820(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1AFF69868()
{
  if (!qword_1EB817CA8)
  {
    sub_1AFD67340();
    sub_1AFF69DD0(255, (unint64_t *)&qword_1EB817E50, MEMORY[0x1E4FBAEA0]);
    sub_1AFF69820(&qword_1EB818048, 255, (void (*)(uint64_t))sub_1AFD67340);
    unint64_t v0 = sub_1AFFC9F88();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB817CA8);
    }
  }
}

uint64_t sub_1AFF69934@<X0>(uint64_t *a1@<X8>)
{
  return sub_1AFF67F40(a1);
}

void sub_1AFF6993C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t, void *), uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_1AFF699F8(255, a3, a4);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

unint64_t sub_1AFF699A4()
{
  unint64_t result = qword_1EB8174D0;
  if (!qword_1EB8174D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8174D0);
  }
  return result;
}

void sub_1AFF699F8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for QuoteDetailManager.StoreDescriptor;
    v8[1] = type metadata accessor for QuoteDetail();
    long long v8[2] = sub_1AFF699A4();
    v8[3] = sub_1AFF69820(&qword_1EB816D68, 255, (void (*)(uint64_t))type metadata accessor for QuoteDetail);
    v8[4] = sub_1AFF69820(&qword_1EB816D60, 255, (void (*)(uint64_t))type metadata accessor for QuoteDetail);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1AFF69AF8()
{
  uint64_t v1 = sub_1AFFC98F8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = sub_1AFFC9E18();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return MEMORY[0x1F4186498](v0, v10, v11);
}

uint64_t sub_1AFF69C58(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_1AFFC98F8() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(sub_1AFFC9E18() - 8);
  uint64_t v7 = v1[2];
  unint64_t v8 = v1[3];
  uint64_t v9 = (void *)v1[4];
  uint64_t v10 = (uint64_t)v1 + ((v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return sub_1AFF68D3C(a1, v7, v8, v9, (uint64_t)v1 + v4, v10);
}

uint64_t sub_1AFF69D38()
{
  return sub_1AFFCA948();
}

void sub_1AFF69DD0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void, uint64_t, void))
{
  if (!*a2)
  {
    uint64_t v6 = type metadata accessor for QuoteDetail();
    unint64_t v7 = a3(a1, MEMORY[0x1E4FBB1A0], v6, MEMORY[0x1E4FBB1B0]);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t objectdestroy_5Tm_0()
{
  sub_1AFF699F8(0, (unint64_t *)&unk_1EB8168F8, MEMORY[0x1E4FAA650]);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1AFF69EF0()
{
  return sub_1AFFCA958();
}

uint64_t sub_1AFF69F78()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1AFF69FB0(uint64_t *a1)
{
  return sub_1AFF69240(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_1AFF69FCC(void *a1)
{
  sub_1AFF694C4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), "Quote detail request with ID: %s completed with error: %s");
}

void sub_1AFF69FF0()
{
  if (!qword_1EB817D78)
  {
    sub_1AFF69DD0(255, (unint64_t *)&qword_1EB817E50, MEMORY[0x1E4FBAEA0]);
    unint64_t v0 = sub_1AFFCA788();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB817D78);
    }
  }
}

uint64_t sub_1AFF6A064(uint64_t *a1)
{
  return sub_1AFF69048(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_1AFF6A080(void *a1)
{
  sub_1AFF694C4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), "Quote detail fetch with ID: %s returned error: %s");
}

uint64_t sub_1AFF6A0A4()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1AFF6A0DC(uint64_t a1)
{
  return sub_1AFF67998(a1, *(void (**)(char *))(v1 + 16));
}

uint64_t sub_1AFF6A0F8(uint64_t a1)
{
  return sub_1AFF67A94(a1, *(void (**)(char *))(v1 + 16));
}

unint64_t sub_1AFF6A100()
{
  unint64_t result = qword_1EB810F88;
  if (!qword_1EB810F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB810F88);
  }
  return result;
}

uint64_t sub_1AFF6A154(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for QuoteDetailManagerError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1AFF6A250);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for QuoteDetailManagerError()
{
  return &type metadata for QuoteDetailManagerError;
}

unint64_t sub_1AFF6A28C()
{
  unint64_t result = qword_1E9AFCF48;
  if (!qword_1E9AFCF48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFCF48);
  }
  return result;
}

uint64_t type metadata accessor for SDSStockMetadataService()
{
  return self;
}

uint64_t sub_1AFF6A314(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_1AFFC9E18();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = &v26[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v11 = sub_1AFFC98F8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = &v26[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1AFD2CEB0(v4 + 16, (uint64_t)v26);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v12 + 16))(v14, a3, v11);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v8 + 16))(v10, a4, v7);
  uint64_t v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v26, v27);
  double v16 = MEMORY[0x1F4188790](v15);
  uint64_t v18 = (uint64_t *)&v26[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(uint64_t *, double))(v19 + 16))(v18, v16);
  uint64_t v20 = *v18;
  uint64_t v21 = sub_1AFFC8E38();
  id v22 = sub_1AFF6A5AC(v21, v20, (uint64_t)v14, (uint64_t)v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  sub_1AFFC9EF8();
  sub_1AFFC9EA8();
  uint64_t v23 = sub_1AFFC9EB8();

  swift_release();
  return v23;
}

uint64_t sub_1AFF6A588(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AFF6A314(a1, a2, a3, a4);
}

id sub_1AFF6A5AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for SDSBaseOperationFactory();
  v27[3] = v8;
  v27[4] = &off_1F0875070;
  v27[0] = a2;
  uint64_t v9 = (objc_class *)type metadata accessor for SDSStockMetadataOperation();
  uint64_t v10 = (char *)objc_allocWithZone(v9);
  uint64_t v11 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v27, v8);
  double v12 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = (uint64_t *)((char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v15 + 16))(v14, v12);
  uint64_t v16 = *v14;
  v26[3] = v8;
  v26[4] = &off_1F0875070;
  v26[0] = v16;
  *(void *)&v10[qword_1EB81B500] = a1;
  sub_1AFD2CEB0((uint64_t)v26, (uint64_t)&v10[qword_1EB81B508]);
  uint64_t v17 = &v10[qword_1E9AFC738];
  uint64_t v18 = sub_1AFFC98F8();
  uint64_t v19 = *(void *)(v18 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v17, a3, v18);
  uint64_t v20 = &v10[qword_1E9AFC740];
  uint64_t v21 = sub_1AFFC9E18();
  uint64_t v22 = *(void *)(v21 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v20, a4, v21);
  v25.receiver = v10;
  v25.super_class = v9;
  id v23 = objc_msgSendSuper2(&v25, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(a4, v21);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(a3, v18);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  return v23;
}

BOOL sub_1AFF6A814@<W0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t a6@<X5>, uint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, unint64_t a11, char a12, uint64_t a13, unint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17, unint64_t a18, uint64_t a19, unint64_t a20)
{
  unint64_t v21 = a20;
  unint64_t v23 = a18;
  unint64_t v25 = a16;
  unint64_t v27 = a14;
  unint64_t v29 = a11;
  if (!a2)
  {
    a1 = 0;
    a2 = 0xE000000000000000;
  }
  if (!a4)
  {
    a3 = 0;
    a4 = 0xE000000000000000;
  }
  if (!a6)
  {
    a5 = 0;
    a6 = 0xE000000000000000;
  }
  if (!a8)
  {
    a7 = 0;
    a8 = 0xE000000000000000;
  }
  if (!a11)
  {
    a10 = 0;
    unint64_t v29 = 0xE000000000000000;
  }
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  if (!a14)
  {
    a13 = 0;
    unint64_t v27 = 0xE000000000000000;
  }
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  if (!a16)
  {
    a15 = 0;
    unint64_t v25 = 0xE000000000000000;
  }
  if (!a18) {
    a17 = 0x46464646464623;
  }
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  if (!a18) {
    unint64_t v23 = 0xE700000000000000;
  }
  *(void *)(a9 + 48) = a7;
  *(void *)(a9 + 56) = a8;
  if (!a20)
  {
    a19 = 0x30303030303023;
    unint64_t v21 = 0xE700000000000000;
  }
  *(void *)(a9 + 64) = a10;
  *(void *)(a9 + 72) = v29;
  BOOL result = a12 == 2;
  *(unsigned char *)(a9 + 80) = (a12 == 2) | a12 & 1;
  *(void *)(a9 + 88) = a13;
  *(void *)(a9 + 96) = v27;
  *(void *)(a9 + 104) = a15;
  *(void *)(a9 + 112) = v25;
  *(void *)(a9 + 120) = a17;
  *(void *)(a9 + 128) = v23;
  *(void *)(a9 + 136) = a19;
  *(void *)(a9 + 144) = v21;
  return result;
}

unint64_t sub_1AFF6A908(char a1)
{
  unint64_t result = 0xD000000000000016;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7865546C61697274;
      break;
    case 2:
      unint64_t result = 0x6C616972546E6F6ELL;
      break;
    case 3:
      unint64_t result = 0x7954746567726174;
      break;
    case 4:
      unint64_t result = 0xD000000000000014;
      break;
    case 5:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 7:
      unint64_t result = 0x6372755074736F70;
      break;
    case 8:
      unint64_t result = 0x6F436E6F74747562;
      break;
    case 9:
      unint64_t result = 0x65546E6F74747562;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1AFF6AA64(char a1)
{
  unint64_t result = 0xD000000000000016;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7865546C61697274;
      break;
    case 2:
      unint64_t result = 0x6C616972546E6F6ELL;
      break;
    case 3:
      unint64_t result = 0x7954746567726174;
      break;
    case 4:
      unint64_t result = 0xD000000000000014;
      break;
    case 5:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 7:
      unint64_t result = 0x6372755074736F70;
      break;
    case 8:
      unint64_t result = 0x6F436E6F74747562;
      break;
    case 9:
      unint64_t result = 0x65546E6F74747562;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1AFF6ABC0(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_1AFF6A908(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1AFF6A908(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1AFFCBCE8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1AFF6AC4C()
{
  char v1 = *v0;
  sub_1AFFCBDF8();
  sub_1AFF6A908(v1);
  sub_1AFFCAF68();
  swift_bridgeObjectRelease();
  return sub_1AFFCBE38();
}

uint64_t sub_1AFF6ACB0()
{
  sub_1AFF6A908(*v0);
  sub_1AFFCAF68();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFF6AD04()
{
  char v1 = *v0;
  sub_1AFFCBDF8();
  sub_1AFF6A908(v1);
  sub_1AFFCAF68();
  swift_bridgeObjectRelease();
  return sub_1AFFCBE38();
}

uint64_t sub_1AFF6AD64@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFF6CC90();
  *a1 = result;
  return result;
}

unint64_t sub_1AFF6AD94@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1AFF6A908(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1AFF6ADC0()
{
  return sub_1AFF6AA64(*v0);
}

uint64_t sub_1AFF6ADC8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFF6CC90();
  *a1 = result;
  return result;
}

uint64_t sub_1AFF6ADF0(uint64_t a1)
{
  unint64_t v2 = sub_1AFF6BEF4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFF6AE2C(uint64_t a1)
{
  unint64_t v2 = sub_1AFF6BEF4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFF6AE68@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1AFF6C5CC(0, &qword_1EB819FB8, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v90 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFF6BEF4();
  sub_1AFFCBE68();
  if (!v2)
  {
    uint64_t v118 = (void *)MEMORY[0x1E4FBC860];
    unsigned __int8 v116 = 0;
    sub_1AFFCBAF8();
    unint64_t v10 = v115;
    int64_t v111 = v114;
    if (v115)
    {
      uint64_t v112 = (void *)MEMORY[0x1E4FBC860];
    }
    else
    {
      swift_beginAccess();
      uint64_t v112 = v118;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v112 = sub_1AFD352FC(0, v112[2] + 1, 1, v112);
      }
      unint64_t v12 = v112[2];
      unint64_t v11 = v112[3];
      if (v12 >= v11 >> 1) {
        uint64_t v112 = sub_1AFD352FC((void *)(v11 > 1), v12 + 1, 1, v112);
      }
      uint64_t v13 = v112;
      v112[2] = v12 + 1;
      uint64_t v14 = &v13[2 * v12];
      v14[4] = 0xD000000000000016;
      v14[5] = 0x80000001AFFEDFE0;
      uint64_t v118 = v13;
      swift_endAccess();
      unint64_t v10 = 0;
    }
    unsigned __int8 v116 = 1;
    sub_1AFFCBAF8();
    unint64_t v15 = v115;
    int64_t v109 = v114;
    if (!v115)
    {
      unint64_t v110 = 0;
      swift_beginAccess();
      uint64_t v112 = v118;
      unint64_t v16 = v10;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v112 = sub_1AFD352FC(0, v112[2] + 1, 1, v112);
      }
      unint64_t v18 = v112[2];
      unint64_t v17 = v112[3];
      if (v18 >= v17 >> 1) {
        uint64_t v112 = sub_1AFD352FC((void *)(v17 > 1), v18 + 1, 1, v112);
      }
      uint64_t v19 = v112;
      v112[2] = v18 + 1;
      uint64_t v20 = &v19[2 * v18];
      v20[4] = 0x7865546C61697274;
      v20[5] = 0xE900000000000074;
      uint64_t v118 = v19;
      swift_endAccess();
      unint64_t v10 = v16;
      unint64_t v15 = v110;
    }
    unsigned __int8 v116 = 2;
    sub_1AFFCBAF8();
    int64_t v107 = v114;
    unint64_t v108 = v115;
    if (!v115)
    {
      unint64_t v110 = v15;
      swift_beginAccess();
      uint64_t v112 = v118;
      unint64_t v21 = v10;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v112 = sub_1AFD352FC(0, v112[2] + 1, 1, v112);
      }
      unint64_t v23 = v112[2];
      unint64_t v22 = v112[3];
      if (v23 >= v22 >> 1) {
        uint64_t v112 = sub_1AFD352FC((void *)(v22 > 1), v23 + 1, 1, v112);
      }
      uint64_t v24 = v112;
      v112[2] = v23 + 1;
      unint64_t v25 = (char *)&v24[2 * v23];
      strcpy(v25 + 32, "nonTrialText");
      v25[45] = 0;
      *((_WORD *)v25 + 23) = -5120;
      uint64_t v118 = v24;
      swift_endAccess();
      unint64_t v10 = v21;
      unint64_t v15 = v110;
    }
    unsigned __int8 v116 = 3;
    sub_1AFFCBAF8();
    int64_t v105 = v114;
    unint64_t v106 = v115;
    if (!v115)
    {
      unint64_t v110 = v15;
      swift_beginAccess();
      uint64_t v112 = v118;
      unint64_t v26 = v10;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v112 = sub_1AFD352FC(0, v112[2] + 1, 1, v112);
      }
      unint64_t v28 = v112[2];
      unint64_t v27 = v112[3];
      if (v28 >= v27 >> 1) {
        uint64_t v112 = sub_1AFD352FC((void *)(v27 > 1), v28 + 1, 1, v112);
      }
      unint64_t v29 = v112;
      v112[2] = v28 + 1;
      unint64_t v30 = &v29[2 * v28];
      v30[4] = 0x7954746567726174;
      v30[5] = 0xEA00000000006570;
      uint64_t v118 = v29;
      swift_endAccess();
      unint64_t v10 = v26;
      unint64_t v15 = v110;
    }
    unsigned __int8 v116 = 4;
    sub_1AFFCBAF8();
    int64_t v102 = v114;
    unint64_t v104 = v115;
    if (!v115)
    {
      swift_beginAccess();
      uint64_t v112 = v118;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v103 = v10;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        uint64_t v112 = sub_1AFD352FC(0, v112[2] + 1, 1, v112);
      }
      unint64_t v33 = v112[2];
      unint64_t v32 = v112[3];
      if (v33 >= v32 >> 1) {
        uint64_t v112 = sub_1AFD352FC((void *)(v32 > 1), v33 + 1, 1, v112);
      }
      os_log_type_t v34 = v112;
      v112[2] = v33 + 1;
      int v35 = &v34[2 * v33];
      v35[4] = 0xD000000000000014;
      v35[5] = 0x80000001AFFEE020;
      uint64_t v118 = v34;
      swift_endAccess();
      unint64_t v10 = v103;
    }
    LOBYTE(v114) = 5;
    sub_1AFFCBAF8();
    int v101 = v116;
    if (v116 == 2)
    {
      swift_beginAccess();
      uint64_t v112 = v118;
      char v36 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v103 = v10;
      if ((v36 & 1) == 0) {
        uint64_t v112 = sub_1AFD352FC(0, v112[2] + 1, 1, v112);
      }
      unint64_t v38 = v112[2];
      unint64_t v37 = v112[3];
      if (v38 >= v37 >> 1) {
        uint64_t v112 = sub_1AFD352FC((void *)(v37 > 1), v38 + 1, 1, v112);
      }
      uint64_t v39 = v112;
      v112[2] = v38 + 1;
      uint64_t v40 = &v39[2 * v38];
      v40[4] = 0xD00000000000001ELL;
      v40[5] = 0x80000001AFFEE040;
      uint64_t v118 = v39;
      swift_endAccess();
      unint64_t v10 = v103;
    }
    unsigned __int8 v116 = 6;
    sub_1AFFCBAF8();
    unint64_t v99 = v114;
    unint64_t v100 = v115;
    if (!v115)
    {
      unint64_t v110 = v15;
      swift_beginAccess();
      uint64_t v112 = v118;
      unint64_t v42 = v10;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v112 = sub_1AFD352FC(0, v112[2] + 1, 1, v112);
      }
      unint64_t v44 = v112[2];
      unint64_t v43 = v112[3];
      if (v44 >= v43 >> 1) {
        uint64_t v112 = sub_1AFD352FC((void *)(v43 > 1), v44 + 1, 1, v112);
      }
      uint64_t v45 = v112;
      v112[2] = v44 + 1;
      uint64_t v46 = &v45[2 * v44];
      v46[4] = 0xD000000000000016;
      v46[5] = 0x80000001AFFEE060;
      uint64_t v118 = v45;
      swift_endAccess();
      unint64_t v10 = v42;
      unint64_t v15 = v110;
    }
    unsigned __int8 v116 = 7;
    sub_1AFFCBAF8();
    int64_t v98 = v114;
    unint64_t v110 = v115;
    if (!v115)
    {
      unint64_t v103 = v10;
      swift_beginAccess();
      uint64_t v112 = v118;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v112 = sub_1AFD352FC(0, v112[2] + 1, 1, v112);
      }
      unint64_t v48 = v112[2];
      unint64_t v47 = v112[3];
      if (v48 >= v47 >> 1) {
        uint64_t v112 = sub_1AFD352FC((void *)(v47 > 1), v48 + 1, 1, v112);
      }
      os_log_type_t v49 = v112;
      v112[2] = v48 + 1;
      uint64_t v50 = &v49[2 * v48];
      v50[4] = 0x6372755074736F70;
      v50[5] = 0xEF4C525565736168;
      uint64_t v118 = v49;
      swift_endAccess();
      unint64_t v10 = v103;
    }
    unsigned __int8 v116 = 8;
    sub_1AFFCBAF8();
    unint64_t v103 = v10;
    uint64_t v96 = v114;
    unint64_t v97 = v115;
    if (!v115)
    {
      swift_beginAccess();
      uint64_t v112 = v118;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v112 = sub_1AFD352FC(0, v112[2] + 1, 1, v112);
      }
      unint64_t v52 = v112[2];
      unint64_t v51 = v112[3];
      if (v52 >= v51 >> 1) {
        uint64_t v112 = sub_1AFD352FC((void *)(v51 > 1), v52 + 1, 1, v112);
      }
      unint64_t v53 = v112;
      v112[2] = v52 + 1;
      uint64_t v54 = &v53[2 * v52];
      v54[4] = 0x6F436E6F74747562;
      v54[5] = 0xEB00000000726F6CLL;
      uint64_t v118 = v53;
      swift_endAccess();
    }
    unsigned __int8 v116 = 9;
    sub_1AFFCBAF8();
    unint64_t v55 = v115;
    if (v115)
    {
      int64_t v56 = v114;
    }
    else
    {
      swift_beginAccess();
      uint64_t v112 = v118;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v112 = sub_1AFD352FC(0, v112[2] + 1, 1, v112);
      }
      unint64_t v58 = v112[2];
      unint64_t v57 = v112[3];
      unint64_t v95 = v58 + 1;
      if (v58 >= v57 >> 1) {
        uint64_t v112 = sub_1AFD352FC((void *)(v57 > 1), v95, 1, v112);
      }
      unint64_t v59 = v112;
      v112[2] = v95;
      unint64_t v60 = &v59[2 * v58];
      v60[4] = 0x65546E6F74747562;
      v60[5] = 0xEF726F6C6F437478;
      uint64_t v118 = v59;
      swift_endAccess();
      int64_t v56 = 0x30303030303023;
    }
    unint64_t v95 = v56;
    unint64_t v61 = v103;
    int64_t v62 = v111;
    if (!v103) {
      int64_t v62 = 0;
    }
    int64_t v111 = v62;
    unint64_t v63 = 0xE000000000000000;
    if (!v103) {
      unint64_t v61 = 0xE000000000000000;
    }
    unint64_t v103 = v61;
    int64_t v64 = v109;
    if (!v15) {
      int64_t v64 = 0;
    }
    uint64_t v94 = v64;
    if (v15) {
      unint64_t v65 = v15;
    }
    else {
      unint64_t v65 = 0xE000000000000000;
    }
    unint64_t v93 = v65;
    int64_t v67 = v107;
    unint64_t v66 = v108;
    if (!v108) {
      int64_t v67 = 0;
    }
    uint64_t v92 = v67;
    if (!v108) {
      unint64_t v66 = 0xE000000000000000;
    }
    unint64_t v91 = v66;
    int64_t v69 = v105;
    unint64_t v68 = v106;
    if (!v106)
    {
      int64_t v69 = 0;
      unint64_t v68 = 0xE000000000000000;
    }
    int64_t v105 = v69;
    unint64_t v106 = v68;
    unint64_t v70 = v104;
    int64_t v71 = v102;
    if (!v104) {
      int64_t v71 = 0;
    }
    int64_t v102 = v71;
    if (!v104) {
      unint64_t v70 = 0xE000000000000000;
    }
    unint64_t v90 = v70;
    unint64_t v73 = v99;
    unint64_t v72 = v100;
    if (!v100)
    {
      unint64_t v73 = 0;
      unint64_t v72 = 0xE000000000000000;
    }
    unint64_t v108 = v72;
    int64_t v109 = v73;
    int64_t v74 = v98;
    if (!v110) {
      int64_t v74 = 0;
    }
    int64_t v107 = v74;
    if (v110) {
      unint64_t v63 = v110;
    }
    unint64_t v110 = v63;
    unint64_t v75 = v97;
    uint64_t v76 = 0x46464646464623;
    if (v97) {
      uint64_t v76 = v96;
    }
    unint64_t v104 = v76;
    unint64_t v77 = 0xE700000000000000;
    if (!v97) {
      unint64_t v75 = 0xE700000000000000;
    }
    if (v55) {
      unint64_t v77 = v55;
    }
    unint64_t v99 = v77;
    unint64_t v100 = v75;
    int v101 = (v101 == 2) | v101 & 1;
    v113[0] = v117[0];
    *(_DWORD *)((char *)v113 + 3) = *(_DWORD *)((char *)v117 + 3);
    if (v112[2])
    {
      sub_1AFD2CD48();
      uint64_t v78 = swift_allocObject();
      *(_OWORD *)(v78 + 16) = xmmword_1AFFD05F0;
      sub_1AFD3ABD0();
      *(void *)(v78 + 56) = v79;
      *(void *)(v78 + 64) = sub_1AFD5CDA0();
      *(void *)(v78 + 32) = v112;
      sub_1AFD2C4F4();
      sub_1AFFC8E38();
      uint64_t v80 = (void *)sub_1AFFCB638();
      sub_1AFFCB478();
      sub_1AFFCA878();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AFD2C4F4();
      uint64_t v80 = (void *)sub_1AFFCB638();
      sub_1AFFCB478();
      sub_1AFFCA878();
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_bridgeObjectRelease();
    unint64_t v81 = v103;
    *(void *)a2 = v111;
    *(void *)(a2 + 8) = v81;
    unint64_t v82 = v93;
    *(void *)(a2 + 16) = v94;
    *(void *)(a2 + 24) = v82;
    unint64_t v83 = v91;
    *(void *)(a2 + 32) = v92;
    *(void *)(a2 + 40) = v83;
    unint64_t v84 = v106;
    *(void *)(a2 + 48) = v105;
    *(void *)(a2 + 56) = v84;
    unint64_t v85 = v90;
    *(void *)(a2 + 64) = v102;
    *(void *)(a2 + 72) = v85;
    *(unsigned char *)(a2 + 80) = v101;
    *(_DWORD *)(a2 + 81) = v113[0];
    *(_DWORD *)(a2 + 84) = *(_DWORD *)((char *)v113 + 3);
    unint64_t v86 = v108;
    *(void *)(a2 + 88) = v109;
    *(void *)(a2 + 96) = v86;
    unint64_t v87 = v110;
    *(void *)(a2 + 104) = v107;
    *(void *)(a2 + 112) = v87;
    unint64_t v88 = v100;
    *(void *)(a2 + 120) = v104;
    *(void *)(a2 + 128) = v88;
    unint64_t v89 = v99;
    *(void *)(a2 + 136) = v95;
    *(void *)(a2 + 144) = v89;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1AFF6BEF4()
{
  unint64_t result = qword_1EB819710;
  if (!qword_1EB819710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819710);
  }
  return result;
}

uint64_t sub_1AFF6BF4C(void *a1)
{
  sub_1AFF6C5CC(0, &qword_1EB81A070, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v18 - v6;
  uint64_t v8 = *(void *)(v1 + 16);
  uint64_t v26 = *(void *)(v1 + 24);
  uint64_t v27 = v8;
  uint64_t v9 = *(void *)(v1 + 32);
  uint64_t v24 = *(void *)(v1 + 40);
  uint64_t v25 = v9;
  uint64_t v10 = *(void *)(v1 + 48);
  uint64_t v22 = *(void *)(v1 + 56);
  uint64_t v23 = v10;
  uint64_t v11 = *(void *)(v1 + 72);
  uint64_t v20 = *(void *)(v1 + 64);
  uint64_t v21 = v11;
  int v19 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v12 = *(void *)(v1 + 96);
  v18[7] = *(void *)(v1 + 88);
  v18[8] = v12;
  uint64_t v13 = *(void *)(v1 + 112);
  v18[5] = *(void *)(v1 + 104);
  v18[6] = v13;
  uint64_t v14 = *(void *)(v1 + 128);
  v18[3] = *(void *)(v1 + 120);
  v18[4] = v14;
  uint64_t v15 = *(void *)(v1 + 136);
  v18[1] = *(void *)(v1 + 144);
  v18[2] = v15;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFF6BEF4();
  sub_1AFFCBE78();
  char v38 = 0;
  uint64_t v16 = v28;
  sub_1AFFCBC08();
  if (!v16)
  {
    char v37 = 1;
    sub_1AFFCBC08();
    char v36 = 2;
    sub_1AFFCBC08();
    char v35 = 3;
    sub_1AFFCBC08();
    char v34 = 4;
    sub_1AFFCBC08();
    char v33 = 5;
    sub_1AFFCBC18();
    char v32 = 6;
    sub_1AFFCBC08();
    char v31 = 7;
    sub_1AFFCBC08();
    char v30 = 8;
    sub_1AFFCBC08();
    char v29 = 9;
    sub_1AFFCBC08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1AFF6C288@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1AFF6AE68(a1, a2);
}

uint64_t sub_1AFF6C2A0(void *a1)
{
  return sub_1AFF6BF4C(a1);
}

uint64_t sub_1AFF6C2BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v43 = *(void *)(a1 + 56);
  uint64_t v44 = *(void *)(a1 + 48);
  uint64_t v41 = *(void *)(a1 + 72);
  uint64_t v42 = *(void *)(a1 + 64);
  int v38 = *(unsigned __int8 *)(a1 + 80);
  uint64_t v36 = *(void *)(a1 + 88);
  uint64_t v34 = *(void *)(a1 + 96);
  uint64_t v32 = *(void *)(a1 + 104);
  uint64_t v30 = *(void *)(a1 + 112);
  uint64_t v28 = *(void *)(a1 + 120);
  uint64_t v26 = *(void *)(a1 + 128);
  uint64_t v23 = *(void *)(a1 + 144);
  uint64_t v24 = *(void *)(a1 + 136);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  uint64_t v40 = *(void *)(a2 + 64);
  uint64_t v39 = *(void *)(a2 + 72);
  int v37 = *(unsigned __int8 *)(a2 + 80);
  uint64_t v35 = *(void *)(a2 + 88);
  uint64_t v33 = *(void *)(a2 + 96);
  uint64_t v31 = *(void *)(a2 + 104);
  uint64_t v29 = *(void *)(a2 + 112);
  uint64_t v27 = *(void *)(a2 + 120);
  uint64_t v25 = *(void *)(a2 + 128);
  uint64_t v21 = *(void *)(a2 + 144);
  uint64_t v22 = *(void *)(a2 + 136);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (v12 = sub_1AFFCBCE8(), uint64_t result = 0, (v12 & 1) != 0))
  {
    if (v2 == v7 && v4 == v6 || (v14 = sub_1AFFCBCE8(), uint64_t result = 0, (v14 & 1) != 0))
    {
      if (v3 == v8 && v5 == v9 || (v15 = sub_1AFFCBCE8(), uint64_t result = 0, (v15 & 1) != 0))
      {
        if (v44 == v10 && v43 == v11 || (v16 = sub_1AFFCBCE8(), uint64_t result = 0, (v16 & 1) != 0))
        {
          if (v42 == v40 && v41 == v39)
          {
            if (v38 != v37) {
              return 0;
            }
          }
          else
          {
            char v17 = sub_1AFFCBCE8();
            uint64_t result = 0;
            if (v17 & 1) == 0 || ((v38 ^ v37)) {
              return result;
            }
          }
          if (v36 == v35 && v34 == v33 || (v18 = sub_1AFFCBCE8(), uint64_t result = 0, (v18 & 1) != 0))
          {
            if (v32 == v31 && v30 == v29 || (v19 = sub_1AFFCBCE8(), uint64_t result = 0, (v19 & 1) != 0))
            {
              if (v28 == v27 && v26 == v25 || (v20 = sub_1AFFCBCE8(), uint64_t result = 0, (v20 & 1) != 0))
              {
                if (v24 == v22 && v23 == v21)
                {
                  return 1;
                }
                else
                {
                  return sub_1AFFCBCE8();
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

void sub_1AFF6C5CC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1AFF6BEF4();
    unint64_t v7 = a3(a1, &type metadata for SubscriptionButtonConfig.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t destroy for SubscriptionButtonConfig()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SubscriptionButtonConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v8 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v8;
  uint64_t v9 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v9;
  uint64_t v10 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v10;
  uint64_t v11 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v11;
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  return a1;
}

uint64_t assignWithCopy for SubscriptionButtonConfig(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy152_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  __n128 result = *(__n128 *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 128);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

uint64_t assignWithTake for SubscriptionButtonConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v9 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v12;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SubscriptionButtonConfig(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 152)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SubscriptionButtonConfig(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 152) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 152) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionButtonConfig()
{
  return &type metadata for SubscriptionButtonConfig;
}

unsigned char *storeEnumTagSinglePayload for SubscriptionButtonConfig.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *__n128 result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFF6CB50);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionButtonConfig.CodingKeys()
{
  return &type metadata for SubscriptionButtonConfig.CodingKeys;
}

unint64_t sub_1AFF6CB8C()
{
  unint64_t result = qword_1E9AFCF50;
  if (!qword_1E9AFCF50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFCF50);
  }
  return result;
}

unint64_t sub_1AFF6CBE4()
{
  unint64_t result = qword_1EB819720;
  if (!qword_1EB819720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819720);
  }
  return result;
}

unint64_t sub_1AFF6CC3C()
{
  unint64_t result = qword_1EB819718;
  if (!qword_1EB819718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819718);
  }
  return result;
}

uint64_t sub_1AFF6CC90()
{
  unint64_t v0 = sub_1AFFCBA78();
  swift_bridgeObjectRelease();
  if (v0 >= 0xA) {
    return 10;
  }
  else {
    return v0;
  }
}

uint64_t sub_1AFF6CCDC(void *a1, uint64_t a2)
{
  sub_1AFF700BC(0, &qword_1E9AFCFB8, (uint64_t (*)(void))sub_1AFF6FD64, (uint64_t)&type metadata for TestForYouConfigRecordService.TopStoriesOverlayData.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v10 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFF6FD64();
  sub_1AFFCBE78();
  v10[1] = a2;
  sub_1AFF6FDB8(0, &qword_1E9AFCFA0, (uint64_t)&type metadata for TestForYouConfigRecordService.TopStoriesOverlayData.Article, MEMORY[0x1E4FBB320]);
  sub_1AFF6FE58(&qword_1E9AFCFC0, (void (*)(void))sub_1AFF6FEE8);
  sub_1AFFCBC58();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1AFF6CEB0(uint64_t a1)
{
  unint64_t v2 = sub_1AFF70068();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFF6CEEC(uint64_t a1)
{
  unint64_t v2 = sub_1AFF70068();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFF6CF28@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  char v15 = a2;
  sub_1AFF700BC(0, &qword_1E9AFCFE8, (uint64_t (*)(void))sub_1AFF70068, (uint64_t)&type metadata for TestForYouConfigRecordService.TopStoriesOverlayData.Article.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v14 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFF70068();
  sub_1AFFCBE68();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v15;
  uint64_t v10 = sub_1AFFCBB18();
  uint64_t v12 = v11;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *uint64_t v9 = v10;
  v9[1] = v12;
  return result;
}

uint64_t sub_1AFF6D0D8(void *a1)
{
  sub_1AFF700BC(0, &qword_1E9AFCFF8, (uint64_t (*)(void))sub_1AFF70068, (uint64_t)&type metadata for TestForYouConfigRecordService.TopStoriesOverlayData.Article.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFF70068();
  sub_1AFFCBE78();
  sub_1AFFCBC08();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1AFF6D240(uint64_t a1)
{
  unint64_t v2 = sub_1AFF6FD64();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFF6D27C(uint64_t a1)
{
  unint64_t v2 = sub_1AFF6FD64();

  return MEMORY[0x1F41862B0](a1, v2);
}

void *sub_1AFF6D2B8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1AFF6E44C(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1AFF6D2E4(void *a1)
{
  return sub_1AFF6CCDC(a1, *v1);
}

uint64_t sub_1AFF6D300()
{
  type metadata accessor for ForYouConfigRecord(0);
  sub_1AFF6FC98();
  sub_1AFFCA008();
  sub_1AFF6FCF0();
  sub_1AFFCA008();
  unint64_t v0 = (void *)sub_1AFFCA5E8();
  sub_1AFFCA5D8();
  swift_release();
  swift_release();

  uint64_t v1 = (void *)sub_1AFFCA5E8();
  uint64_t v2 = sub_1AFFCA6B8();
  swift_release();

  return v2;
}

void sub_1AFF6D3E8()
{
  sub_1AFFCB468();
  sub_1AFF6FC30(0, (unint64_t *)&qword_1EB81A100, (unint64_t *)&qword_1EB81A120, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1AFFD05F0;
  sub_1AFFCB928();
  *(void *)(v0 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v0 + 64) = sub_1AFD2CE00();
  *(void *)(v0 + 32) = 0;
  *(void *)(v0 + 40) = 0xE000000000000000;
  sub_1AFD8F6AC(0, (unint64_t *)&qword_1EB819EA0);
  uint64_t v1 = (void *)sub_1AFFCB638();
  sub_1AFFCA878();
  swift_bridgeObjectRelease();
}

uint64_t sub_1AFF6D510(unint64_t *a1, uint64_t a2)
{
  uint64_t v65 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = type metadata accessor for ForYouConfigRecord(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  unint64_t v57 = (char *)&v50 - v8;
  uint64_t v9 = sub_1AFFCAED8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v55 = (int *)v4;
  uint64_t v13 = (uint64_t *)((char *)a1 + *(int *)(v4 + 28));
  sub_1AFFCAEC8();
  uint64_t v14 = (void *)sub_1AFFCAEA8();
  char v15 = v12;
  unint64_t v17 = v16;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  if (v17 >> 60 == 15)
  {
    sub_1AFFCB468();
    sub_1AFD8F6AC(0, (unint64_t *)&qword_1EB819EA0);
    char v18 = (void *)sub_1AFFCB638();
    sub_1AFFCA878();

    uint64_t v20 = *v13;
    uint64_t v19 = v13[1];
    sub_1AFF6E02C();
    swift_allocError();
    *uint64_t v21 = v20;
    v21[1] = v19;
    sub_1AFFC8E38();
    swift_willThrow();
  }
  else
  {
    uint64_t v54 = v6;
    int64_t v22 = *(void *)(a2 + 16);
    uint64_t v23 = MEMORY[0x1E4FBC860];
    unint64_t v53 = v14;
    if (v22)
    {
      unint64_t v52 = v17;
      uint64_t v62 = MEMORY[0x1E4FBC860];
      sub_1AFFC8E38();
      sub_1AFD9DA10(0, v22, 0);
      uint64_t v23 = v62;
      uint64_t v24 = (uint64_t *)(a2 + 40);
      do
      {
        uint64_t v25 = *(v24 - 1);
        uint64_t v26 = *v24;
        uint64_t v62 = v23;
        unint64_t v28 = *(void *)(v23 + 16);
        unint64_t v27 = *(void *)(v23 + 24);
        sub_1AFFC8E38();
        if (v28 >= v27 >> 1)
        {
          sub_1AFD9DA10(v27 > 1, v28 + 1, 1);
          uint64_t v23 = v62;
        }
        v24 += 2;
        *(void *)(v23 + 16) = v28 + 1;
        uint64_t v29 = v23 + 16 * v28;
        *(void *)(v29 + 32) = v25;
        *(void *)(v29 + 40) = v26;
        --v22;
      }
      while (v22);
      swift_bridgeObjectRelease();
      unint64_t v17 = v52;
      uint64_t v14 = v53;
    }
    uint64_t v30 = (void *)v56;
    uint64_t v31 = sub_1AFF6E664(v14, v17, v23);
    uint64_t v33 = (unint64_t *)v57;
    if (v30)
    {

      swift_bridgeObjectRelease();
      sub_1AFF6FAEC((uint64_t)a1, (uint64_t)v33);
    }
    else
    {
      uint64_t v34 = v31;
      unint64_t v35 = v32;
      swift_bridgeObjectRelease();
      unint64_t v36 = a1[1];
      unint64_t v52 = *a1;
      switch(v35 >> 62)
      {
        case 1uLL:
          unint64_t v51 = v36;
          if (v34 >> 32 < (int)v34) {
            __break(1u);
          }
          sub_1AFD4B0E0(v34, v35);
          sub_1AFFC8E38();
          sub_1AFD4B0E0(v34, v35);
          uint64_t v56 = sub_1AFF6E188((int)v34, v34 >> 32, v35 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1AFF6E414);
          uint64_t v38 = v43;
          sub_1AFD4B504(v34, v35);
          if (v38) {
            goto LABEL_24;
          }
          goto LABEL_18;
        case 2uLL:
          unint64_t v39 = v17;
          uint64_t v40 = *(void *)(v34 + 16);
          uint64_t v41 = *(void *)(v34 + 24);
          unint64_t v51 = v36;
          sub_1AFFC8E38();
          sub_1AFD4B0E0(v34, v35);
          sub_1AFFC8E48();
          sub_1AFFC8E48();
          uint64_t v56 = sub_1AFF6E188(v40, v41, v35 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1AFF6E414);
          uint64_t v38 = v42;
          swift_release();
          swift_release();
          unint64_t v17 = v39;
          if (v38) {
            goto LABEL_24;
          }
LABEL_18:
          uint64_t v60 = v34;
          unint64_t v61 = v35;
          sub_1AFD4B0E0(v34, v35);
          sub_1AFD2CDB0(0, &qword_1E9AFCF68);
          if (swift_dynamicCast())
          {
            sub_1AFD80454(v58, (uint64_t)&v62);
            __swift_project_boxed_opaque_existential_1(&v62, v64);
            if (sub_1AFFCBA58())
            {
              __swift_project_boxed_opaque_existential_1(&v62, v64);
              sub_1AFFCBA48();
              sub_1AFD4B504(v34, v35);
              uint64_t v38 = *((void *)&v58[0] + 1);
              uint64_t v56 = *(void *)&v58[0];
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v62);
              goto LABEL_25;
            }
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v62);
          }
          else
          {
            uint64_t v59 = 0;
            memset(v58, 0, sizeof(v58));
            sub_1AFF6FBA8((uint64_t)v58);
          }
          uint64_t v56 = sub_1AFF6E080(v34, v35);
          uint64_t v38 = v44;
LABEL_24:
          sub_1AFD4B504(v34, v35);
LABEL_25:
          unint64_t v36 = v51;
LABEL_26:
          uint64_t v45 = v55;
          uint64_t v46 = (unint64_t *)((char *)v33 + v55[5]);
          type metadata accessor for ForYouConfigRecord.Configuration.TopStories(0);
          sub_1AFFC98E8();
          sub_1AFD4B504(v34, v35);
          unint64_t v47 = MEMORY[0x1E4FBC860];
          *uint64_t v46 = MEMORY[0x1E4FBC860];
          *uint64_t v33 = v52;
          v33[1] = v36;
          *(unint64_t *)((char *)v33 + v45[6]) = v47;
          unint64_t v48 = (uint64_t *)((char *)v33 + v45[7]);
          *unint64_t v48 = v56;
          v48[1] = v38;
          *(unint64_t *)((char *)v33 + v45[8]) = v47;
          uint64_t v14 = v53;
          break;
        case 3uLL:
          *(void *)((char *)v58 + 6) = 0;
          *(void *)&v58[0] = 0;
          sub_1AFFC8E38();
          sub_1AFF6E414(&v62);
          sub_1AFD4B504(v34, v35);
          uint64_t v38 = v63;
          uint64_t v56 = v62;
          goto LABEL_26;
        default:
          uint64_t v62 = v34;
          LOWORD(v63) = v35;
          BYTE2(v63) = BYTE2(v35);
          BYTE3(v63) = BYTE3(v35);
          BYTE4(v63) = BYTE4(v35);
          BYTE5(v63) = BYTE5(v35);
          sub_1AFFC8E38();
          uint64_t v56 = sub_1AFFCAF48();
          uint64_t v38 = v37;
          sub_1AFD4B504(v34, v35);
          goto LABEL_26;
      }
    }
    sub_1AFF6FAEC((uint64_t)v33, (uint64_t)v54);
    sub_1AFF6FB50();
    swift_allocObject();
    uint64_t v20 = sub_1AFFCA6F8();
    sub_1AFDE6658((uint64_t)v14, v17);
    sub_1AFEAF104((uint64_t)v33);
  }
  return v20;
}

uint64_t sub_1AFF6DCA8()
{
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TestForYouConfigRecordService()
{
  return self;
}

uint64_t sub_1AFF6DD0C()
{
  sub_1AFF700BC(0, (unint64_t *)&qword_1E9AFA4D8, (uint64_t (*)(void))sub_1AFDB3CEC, (uint64_t)&type metadata for StockTestDataLocator, MEMORY[0x1E4FAAA58]);
  swift_allocObject();
  *(void *)(v0 + 16) = sub_1AFFCA028();
  swift_allocObject();
  *(void *)(v0 + 24) = sub_1AFFCA028();
  return v0;
}

uint64_t sub_1AFF6DE2C()
{
  uint64_t v1 = *v0;
  sub_1AFF6DF20();
  sub_1AFFCA7C8();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = sub_1AFF6DF88;
  *(void *)(v2 + 24) = v1;
  sub_1AFFC8E48();
  uint64_t v3 = (void *)sub_1AFFCA5E8();
  type metadata accessor for ForYouConfigRecord(0);
  uint64_t v4 = sub_1AFFCA668();
  swift_release();
  swift_release();

  return v4;
}

uint64_t sub_1AFF6DF04()
{
  return sub_1AFF6D300();
}

void sub_1AFF6DF20()
{
  if (!qword_1E9AFCF58)
  {
    type metadata accessor for ForYouConfigRecord(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1E9AFCF58);
    }
  }
}

uint64_t sub_1AFF6DF88(unint64_t *a1, uint64_t a2)
{
  return sub_1AFF6D510(a1, a2);
}

uint64_t sub_1AFF6DFA4()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1AFF6DFDC(uint64_t a1)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t, void))(v1 + 16);
  sub_1AFF6DF20();
  return v3(a1, *(void *)(a1 + *(int *)(v4 + 48)));
}

unint64_t sub_1AFF6E02C()
{
  unint64_t result = qword_1E9AFCF60;
  if (!qword_1E9AFCF60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFCF60);
  }
  return result;
}

uint64_t sub_1AFF6E080(uint64_t a1, unint64_t a2)
{
  sub_1AFD4B0E0(a1, a2);
  sub_1AFF6E238(a1, a2);
  sub_1AFD4B504(a1, a2);
  uint64_t v4 = sub_1AFFCAF48();
  swift_release();
  return v4;
}

uint64_t sub_1AFF6E0F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1AFFCAF48();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void *sub_1AFF6E134(uint64_t a1, uint64_t a2, void *(*a3)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  if (a1) {
    uint64_t v4 = a2 - a1;
  }
  else {
    uint64_t v4 = 0;
  }
  uint64_t result = a3(&v6, a1, v4);
  if (!v3) {
    return (void *)v6;
  }
  return result;
}

uint64_t sub_1AFF6E188(uint64_t a1, uint64_t a2, uint64_t a3, void *(*a4)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  uint64_t result = sub_1AFFC9398();
  uint64_t v9 = result;
  if (result)
  {
    uint64_t result = sub_1AFFC93C8();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v9 += a1 - result;
  }
  BOOL v10 = __OFSUB__(a2, a1);
  uint64_t v11 = a2 - a1;
  if (v10)
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v12 = sub_1AFFC93B8();
  if (v12 >= v11) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v12;
  }
  uint64_t v14 = v9 + v13;
  if (v9) {
    uint64_t v15 = v14;
  }
  else {
    uint64_t v15 = 0;
  }
  uint64_t result = (uint64_t)sub_1AFF6E134(v9, v15, a4);
  if (v4) {
    return v16;
  }
  return result;
}

void *sub_1AFF6E238(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_1AFFC97A8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (void *)MEMORY[0x1E4FBC860];
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_12;
      }
      uint64_t v9 = HIDWORD(a1) - (int)a1;
LABEL_6:
      if (v9)
      {
        if (v9 >= 1)
        {
          sub_1AFF6FDB8(0, (unint64_t *)&qword_1EB8183D0, MEMORY[0x1E4FBC358], MEMORY[0x1E4FBBE00]);
          uint64_t v8 = (void *)swift_allocObject();
          size_t v12 = _swift_stdlib_malloc_size(v8);
          long long v8[2] = v9;
          v8[3] = 2 * v12 - 64;
        }
        sub_1AFD4B0E0(a1, a2);
        uint64_t v13 = sub_1AFFC9718();
        sub_1AFD4B504(a1, a2);
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        if (v13 != v9)
        {
          __break(1u);
LABEL_12:
          __break(1u);
LABEL_13:
          __break(1u);
          JUMPOUT(0x1AFF6E404);
        }
      }
      return v8;
    case 2uLL:
      uint64_t v11 = *(void *)(a1 + 16);
      uint64_t v10 = *(void *)(a1 + 24);
      uint64_t v9 = v10 - v11;
      if (!__OFSUB__(v10, v11)) {
        goto LABEL_6;
      }
      goto LABEL_13;
    case 3uLL:
      return v8;
    default:
      uint64_t v9 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_1AFF6E414@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1AFFCAF48();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void *sub_1AFF6E44C(void *a1)
{
  sub_1AFF700BC(0, &qword_1E9AFCF90, (uint64_t (*)(void))sub_1AFF6FD64, (uint64_t)&type metadata for TestForYouConfigRecordService.TopStoriesOverlayData.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v11 - v6;
  uint64_t v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFF6FD64();
  uint64_t v9 = v8;
  sub_1AFFCBE68();
  if (!v1)
  {
    sub_1AFF6FDB8(0, &qword_1E9AFCFA0, (uint64_t)&type metadata for TestForYouConfigRecordService.TopStoriesOverlayData.Article, MEMORY[0x1E4FBB320]);
    sub_1AFF6FE58(&qword_1E9AFCFA8, (void (*)(void))sub_1AFF6FE04);
    sub_1AFFCBB58();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v9 = (void *)v11[1];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v9;
}

uint64_t sub_1AFF6E664(void *a1, unint64_t a2, uint64_t a3)
{
  v116[4] = *MEMORY[0x1E4F143B8];
  uint64_t v6 = sub_1AFFC95A8();
  uint64_t v92 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v89 = (char *)v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  unint64_t v90 = (char *)v70 - v9;
  MEMORY[0x1F4188790](v10);
  unint64_t v88 = (char *)v70 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v70 - v13;
  uint64_t v15 = self;
  uint64_t v16 = (void *)sub_1AFFC9778();
  *(void *)&long long v114 = 0;
  id v91 = v15;
  id v17 = objc_msgSend(v15, sel_JSONObjectWithData_options_error_, v16, 3, &v114);

  id v18 = (id)v114;
  if (!v17)
  {
    uint64_t v21 = v18;
    sub_1AFFC9508();

    swift_willThrow();
    return (uint64_t)a1;
  }
  uint64_t v87 = v6;
  sub_1AFFCB6F8();
  swift_unknownObjectRelease();
  sub_1AFD38AF4((uint64_t)v116, (uint64_t)&v112);
  sub_1AFD8F6AC(0, (unint64_t *)&qword_1E9AFBDD8);
  if (!swift_dynamicCast())
  {
    long long v114 = 0u;
    long long v115 = 0u;
LABEL_120:
    sub_1AFD3BDB4((uint64_t)&v114);
    goto LABEL_121;
  }
  uint64_t v85 = a3;
  uint64_t v19 = (void *)v110;
  *(void *)&long long v112 = 0x6565467961646F74;
  *((void *)&v112 + 1) = 0xEF6769666E6F4364;
  id v20 = objc_msgSend((id)v110, sel___swift_objectForKeyedSubscript_, sub_1AFFCBD48());
  swift_unknownObjectRelease();
  if (v20)
  {
    sub_1AFFCB6F8();

    swift_unknownObjectRelease();
  }
  else
  {

    long long v112 = 0u;
    long long v113 = 0u;
  }
  sub_1AFD3BCF4((uint64_t)&v112, (uint64_t)&v114);
  if (!*((void *)&v115 + 1)) {
    goto LABEL_120;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_121:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v116);
    sub_1AFD4B0E0((uint64_t)a1, a2);
    return (uint64_t)a1;
  }
  int64_t v22 = (void *)v112;
  *(void *)&long long v112 = 0x7370756F7267;
  *((void *)&v112 + 1) = 0xE600000000000000;
  id v23 = objc_msgSend(v22, sel___swift_objectForKeyedSubscript_, sub_1AFFCBD48());
  swift_unknownObjectRelease();
  if (v23)
  {
    sub_1AFFCB6F8();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v112 = 0u;
    long long v113 = 0u;
  }
  sub_1AFD3BCF4((uint64_t)&v112, (uint64_t)&v114);
  if (!*((void *)&v115 + 1))
  {

    goto LABEL_120;
  }
  uint64_t v24 = sub_1AFD8F6AC(0, &qword_1E9AFCF78);
  if ((swift_dynamicCast() & 1) == 0)
  {

    goto LABEL_121;
  }
  id v84 = v22;
  uint64_t v82 = v24;
  id v83 = (id)v110;
  sub_1AFFCB5C8();
  sub_1AFFC9598();
  if (!*((void *)&v115 + 1))
  {
LABEL_124:
    (*(void (**)(char *, uint64_t))(v92 + 8))(v14, v87);
    __swift_project_boxed_opaque_existential_1(v116, v116[3]);
    uint64_t v67 = sub_1AFFCBCC8();
    *(void *)&long long v114 = 0;
    id v68 = objc_msgSend(v91, sel_dataWithJSONObject_options_error_, v67, 0, &v114);
    swift_unknownObjectRelease();
    id v69 = (id)v114;
    if (v68)
    {
      a1 = (void *)sub_1AFFC9798();
    }
    else
    {
      a1 = v69;
      sub_1AFFC9508();

      swift_willThrow();
    }

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v116);
    return (uint64_t)a1;
  }
  unint64_t v81 = (void (**)(char *, uint64_t))(v92 + 8);
  uint64_t v86 = MEMORY[0x1E4FBC840] + 8;
  uint64_t v25 = MEMORY[0x1E4FBB1A0];
  while (1)
  {
    sub_1AFD8DDEC(&v114, &v112);
    sub_1AFD38AF4((uint64_t)&v112, (uint64_t)&v108);
    if (swift_dynamicCast())
    {
      uint64_t v26 = (void *)v106;
      *(void *)&long long v108 = 1701869940;
      *((void *)&v108 + 1) = 0xE400000000000000;
      uint64_t v27 = v25;
      id v28 = objc_msgSend((id)v106, sel___swift_objectForKeyedSubscript_, sub_1AFFCBD48());
      swift_unknownObjectRelease();
      if (v28)
      {
        sub_1AFFCB6F8();

        swift_unknownObjectRelease();
      }
      else
      {

        long long v108 = 0u;
        long long v109 = 0u;
      }
      sub_1AFD3BCF4((uint64_t)&v108, (uint64_t)&v110);
      if (!*((void *)&v111 + 1)) {
        goto LABEL_18;
      }
      if ((swift_dynamicCast() & 1) == 0) {
        goto LABEL_19;
      }
      if (v108 == __PAIR128__(0xE700000000000000, 0x64657461727563))
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v29 = sub_1AFFCBCE8();
        swift_bridgeObjectRelease();
        if ((v29 & 1) == 0) {
          goto LABEL_19;
        }
      }
      sub_1AFD38AF4((uint64_t)&v112, (uint64_t)&v108);
      if (swift_dynamicCast())
      {
        uint64_t v30 = (void *)v106;
        *(void *)&long long v108 = 0x65707974627573;
        *((void *)&v108 + 1) = 0xE700000000000000;
        id v31 = objc_msgSend((id)v106, sel___swift_objectForKeyedSubscript_, sub_1AFFCBD48());
        swift_unknownObjectRelease();
        if (v31)
        {
          sub_1AFFCB6F8();

          swift_unknownObjectRelease();
        }
        else
        {

          long long v108 = 0u;
          long long v109 = 0u;
        }
        sub_1AFD3BCF4((uint64_t)&v108, (uint64_t)&v110);
        if (!*((void *)&v111 + 1)) {
          goto LABEL_18;
        }
        if ((swift_dynamicCast() & 1) == 0) {
          goto LABEL_19;
        }
        if (v108 == __PAIR128__(0xEA00000000007365, 0x69726F7453706F74))
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          char v32 = sub_1AFFCBCE8();
          swift_bridgeObjectRelease();
          if ((v32 & 1) == 0) {
            goto LABEL_19;
          }
        }
        sub_1AFD38AF4((uint64_t)&v112, (uint64_t)&v108);
        if (swift_dynamicCast()) {
          break;
        }
      }
    }
    long long v110 = 0u;
    long long v111 = 0u;
LABEL_18:
    sub_1AFD3BDB4((uint64_t)&v110);
LABEL_19:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v112);
    sub_1AFFC9598();
    if (!*((void *)&v115 + 1)) {
      goto LABEL_124;
    }
  }
  uint64_t v33 = (void *)v106;
  *(void *)&long long v108 = 0x746E65746E6F63;
  *((void *)&v108 + 1) = 0xE700000000000000;
  id v34 = objc_msgSend((id)v106, sel___swift_objectForKeyedSubscript_, sub_1AFFCBD48());
  swift_unknownObjectRelease();
  if (v34)
  {
    sub_1AFFCB6F8();

    swift_unknownObjectRelease();
  }
  else
  {

    long long v108 = 0u;
    long long v109 = 0u;
  }
  sub_1AFD3BCF4((uint64_t)&v108, (uint64_t)&v110);
  if (!*((void *)&v111 + 1)) {
    goto LABEL_18;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_19;
  }
  unint64_t v35 = (void *)v108;
  *(void *)&long long v108 = 0x70756F7267627573;
  *((void *)&v108 + 1) = 0xE900000000000073;
  uint64_t v36 = sub_1AFFCBD48();
  id v76 = v35;
  id v37 = objc_msgSend(v35, sel___swift_objectForKeyedSubscript_, v36);
  swift_unknownObjectRelease();
  if (v37)
  {
    sub_1AFFCB6F8();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v108 = 0u;
    long long v109 = 0u;
  }
  sub_1AFD3BCF4((uint64_t)&v108, (uint64_t)&v110);
  if (!*((void *)&v111 + 1))
  {

    goto LABEL_18;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {

    goto LABEL_19;
  }
  id v72 = (id)v106;
  sub_1AFFCB5C8();
  while (1)
  {
    sub_1AFFC9598();
    if (!*((void *)&v111 + 1))
    {

      (*v81)(v88, v87);
      goto LABEL_19;
    }
    sub_1AFD8DDEC(&v110, &v108);
    sub_1AFD38AF4((uint64_t)&v108, (uint64_t)v105);
    if (!swift_dynamicCast())
    {
      long long v106 = 0u;
      long long v107 = 0u;
LABEL_51:
      sub_1AFD3BDB4((uint64_t)&v106);
      goto LABEL_52;
    }
    uint64_t v38 = (void *)v103;
    *(void *)&v105[0] = 0x73746E65746E6F63;
    *((void *)&v105[0] + 1) = 0xE800000000000000;
    id v39 = objc_msgSend((id)v103, sel___swift_objectForKeyedSubscript_, sub_1AFFCBD48());
    swift_unknownObjectRelease();
    if (v39)
    {
      sub_1AFFCB6F8();

      swift_unknownObjectRelease();
    }
    else
    {

      memset(v105, 0, sizeof(v105));
    }
    sub_1AFD3BCF4((uint64_t)v105, (uint64_t)&v106);
    uint64_t v25 = v27;
    if (!*((void *)&v107 + 1)) {
      goto LABEL_51;
    }
    if (swift_dynamicCast()) {
      break;
    }
LABEL_52:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v108);
  }
  id v75 = *(id *)&v105[0];
  sub_1AFFCB5C8();
  while (1)
  {
    sub_1AFFC9598();
    if (!*((void *)&v107 + 1))
    {

      (*v81)(v90, v87);
      goto LABEL_52;
    }
    sub_1AFD8DDEC(&v106, v105);
    sub_1AFD38AF4((uint64_t)v105, (uint64_t)&v101);
    if (!swift_dynamicCast())
    {
      long long v103 = 0u;
      long long v104 = 0u;
LABEL_62:
      sub_1AFD3BDB4((uint64_t)&v103);
      goto LABEL_63;
    }
    uint64_t v40 = (void *)v99;
    *(void *)&long long v101 = 1953459315;
    *((void *)&v101 + 1) = 0xE400000000000000;
    id v41 = objc_msgSend((id)v99, sel___swift_objectForKeyedSubscript_, sub_1AFFCBD48());
    swift_unknownObjectRelease();
    if (v41)
    {
      sub_1AFFCB6F8();

      swift_unknownObjectRelease();
    }
    else
    {

      long long v101 = 0u;
      long long v102 = 0u;
    }
    sub_1AFD3BCF4((uint64_t)&v101, (uint64_t)&v103);
    uint64_t v25 = v27;
    if (!*((void *)&v104 + 1)) {
      goto LABEL_62;
    }
    if ((swift_dynamicCast() & 1) == 0) {
      goto LABEL_63;
    }
    if (v101 == __PAIR128__(0xEA0000000000302DLL, 0x73656C6369747261))
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v42 = sub_1AFFCBCE8();
      swift_bridgeObjectRelease();
      if ((v42 & 1) == 0) {
        goto LABEL_63;
      }
    }
    sub_1AFD38AF4((uint64_t)v105, (uint64_t)&v103);
    uint64_t v43 = sub_1AFD8F6AC(0, &qword_1E9AFCF80);
    if (swift_dynamicCast()) {
      break;
    }
LABEL_63:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v105);
  }
  uint64_t v79 = v43;
  uint64_t v44 = (void *)v101;
  *(void *)&long long v101 = 0x736D657469;
  *((void *)&v101 + 1) = 0xE500000000000000;
  uint64_t v45 = sub_1AFFCBD48();
  id v78 = v44;
  id v46 = objc_msgSend(v44, sel___swift_objectForKeyedSubscript_, v45);
  swift_unknownObjectRelease();
  if (v46)
  {
    sub_1AFFCB6F8();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v101 = 0u;
    long long v102 = 0u;
  }
  sub_1AFD3BCF4((uint64_t)&v101, (uint64_t)&v103);
  if (!*((void *)&v104 + 1))
  {

    goto LABEL_62;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {

    goto LABEL_63;
  }

  uint64_t v96 = v85;
  id v47 = objc_allocWithZone(MEMORY[0x1E4F1CA48]);
  sub_1AFFC8E38();
  id v80 = objc_msgSend(v47, sel_init);
  *(void *)&long long v103 = 0x736D657469;
  *((void *)&v103 + 1) = 0xE500000000000000;
  id v48 = objc_msgSend(v78, sel___swift_objectForKeyedSubscript_, sub_1AFFCBD48());
  uint64_t result = swift_unknownObjectRelease();
  if (v48)
  {
    sub_1AFFCB6F8();
    swift_unknownObjectRelease();
    sub_1AFD8DDEC(&v101, &v103);
    swift_dynamicCast();
    uint64_t v50 = (void *)v99;
    sub_1AFFCB5C8();

    while (1)
    {
      while (1)
      {
        sub_1AFFC9598();
        if (!*((void *)&v104 + 1))
        {
          (*v81)(v89, v87);
          swift_bridgeObjectRelease();
          id v65 = v80;
          id v80 = (id)sub_1AFFCAE68();
          id v66 = v78;
          objc_msgSend(v78, sel_setValue_forKey_, v65, v80);

          goto LABEL_63;
        }
        sub_1AFD8DDEC(&v103, &v101);
        sub_1AFD38AF4((uint64_t)&v101, (uint64_t)&v99);
        if (swift_dynamicCast()) {
          break;
        }
LABEL_85:
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v101);
      }

      sub_1AFD38AF4((uint64_t)&v101, (uint64_t)&v99);
      swift_dynamicCast();
      id v54 = (id)v97;
      *(void *)&long long v97 = 1635017060;
      *((void *)&v97 + 1) = 0xE400000000000000;
      id v55 = objc_msgSend(v54, sel___swift_objectForKeyedSubscript_, sub_1AFFCBD48());
      swift_unknownObjectRelease();
      if (v55)
      {
        sub_1AFFCB6F8();
        swift_unknownObjectRelease();
      }
      else
      {
        long long v97 = 0u;
        long long v98 = 0u;
      }
      sub_1AFD3BCF4((uint64_t)&v97, (uint64_t)&v99);
      if (!*((void *)&v100 + 1))
      {
        sub_1AFD3BDB4((uint64_t)&v99);
        goto LABEL_106;
      }
      if ((swift_dynamicCast() & 1) == 0) {
        goto LABEL_106;
      }
      id v77 = v54;
      id v56 = (id)v94;
      *(void *)&long long v99 = 0x696669746E656469;
      *((void *)&v99 + 1) = 0xEA00000000007265;
      unint64_t v73 = 0xEA00000000007265;
      id v57 = objc_msgSend((id)v94, sel___swift_objectForKeyedSubscript_, sub_1AFFCBD48());
      swift_unknownObjectRelease();
      if (!v57)
      {
        long long v99 = 0u;
        long long v100 = 0u;
        sub_1AFD3BDB4((uint64_t)&v99);

        id v54 = v77;
        goto LABEL_106;
      }
      id v74 = v56;
      sub_1AFFCB6F8();
      swift_unknownObjectRelease();
      sub_1AFD3BDB4((uint64_t)&v99);
      *(void *)&long long v97 = 1701869940;
      *((void *)&v97 + 1) = 0xE400000000000000;
      uint64_t v58 = sub_1AFFCBD48();
      id v54 = v77;
      id v59 = objc_msgSend(v77, sel___swift_objectForKeyedSubscript_, v58);
      swift_unknownObjectRelease();
      if (v59)
      {
        sub_1AFFCB6F8();
        swift_unknownObjectRelease();
      }
      else
      {
        long long v97 = 0u;
        long long v98 = 0u;
      }
      id v60 = v74;
      sub_1AFD3BCF4((uint64_t)&v97, (uint64_t)&v99);
      if (!*((void *)&v100 + 1)) {
        break;
      }
      if ((swift_dynamicCast() & 1) == 0) {
        goto LABEL_105;
      }
      if (v94 == 0x656C6369747261 && v95 == 0xE700000000000000)
      {
        swift_bridgeObjectRelease();
        goto LABEL_108;
      }
      char v61 = sub_1AFFCBCE8();
      swift_bridgeObjectRelease();
      if (v61)
      {
LABEL_108:
        if (*(void *)(v96 + 16))
        {
          uint64_t v62 = (void *)sub_1AFFCB438();
          *(void *)&long long v99 = 1635017060;
          *((void *)&v99 + 1) = 0xE400000000000000;
          uint64_t v63 = sub_1AFFCBD48();
          int64_t v71 = v62;
          id v64 = objc_msgSend(v62, sel___swift_objectForKeyedSubscript_, v63);
          uint64_t result = swift_unknownObjectRelease();
          if (!v64) {
            goto LABEL_129;
          }
          sub_1AFFCB6F8();
          swift_unknownObjectRelease();
          sub_1AFD8DDEC(&v97, &v99);
          uint64_t result = swift_dynamicCast();
          if (!*(void *)(v96 + 16))
          {
            __break(1u);
            goto LABEL_128;
          }
          unint64_t v51 = v93;
          v70[1] = *(void *)(v96 + 32);
          sub_1AFFC8E38();
          sub_1AFFB4384(0, 1);
          unint64_t v52 = (void *)sub_1AFFCAE68();
          swift_bridgeObjectRelease();
          uint64_t v94 = 0x696669746E656469;
          unint64_t v95 = v73;
          objc_msgSend(v51, sel___swift_setObject_forKeyedSubscript_, v52, sub_1AFFCBD48());

          swift_unknownObjectRelease();
          unint64_t v53 = v71;
          objc_msgSend(v80, sel_addObject_, v71);

          uint64_t v25 = MEMORY[0x1E4FBB1A0];
          goto LABEL_85;
        }
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v101);

        uint64_t v25 = v27;
      }
      else
      {

LABEL_106:
        objc_msgSend(v80, sel_addObject_, v54);

        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v101);
        uint64_t v25 = v27;
      }
    }
    sub_1AFD3BDB4((uint64_t)&v99);
LABEL_105:

    goto LABEL_106;
  }
LABEL_128:
  __break(1u);
LABEL_129:
  __break(1u);
  return result;
}

uint64_t sub_1AFF6FAEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ForYouConfigRecord(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1AFF6FB50()
{
  if (!qword_1EB811140)
  {
    type metadata accessor for ForYouConfigRecord(255);
    unint64_t v0 = sub_1AFFCA788();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB811140);
    }
  }
}

uint64_t sub_1AFF6FBA8(uint64_t a1)
{
  sub_1AFF6FC30(0, &qword_1E9AFCF70, &qword_1E9AFCF68, MEMORY[0x1E4FBBD70], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1AFF6FC30(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1AFD2CDB0(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

unint64_t sub_1AFF6FC98()
{
  unint64_t result = qword_1EB810EB8;
  if (!qword_1EB810EB8)
  {
    type metadata accessor for ForYouConfigRecord(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB810EB8);
  }
  return result;
}

unint64_t sub_1AFF6FCF0()
{
  unint64_t result = qword_1E9AFCF88;
  if (!qword_1E9AFCF88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFCF88);
  }
  return result;
}

ValueMetadata *type metadata accessor for TestForYouConfigRecordService.Errors()
{
  return &type metadata for TestForYouConfigRecordService.Errors;
}

ValueMetadata *type metadata accessor for TestForYouConfigRecordService.TopStoriesOverlayData()
{
  return &type metadata for TestForYouConfigRecordService.TopStoriesOverlayData;
}

unint64_t sub_1AFF6FD64()
{
  unint64_t result = qword_1E9AFCF98;
  if (!qword_1E9AFCF98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFCF98);
  }
  return result;
}

void sub_1AFF6FDB8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_1AFF6FE04()
{
  unint64_t result = qword_1E9AFCFB0;
  if (!qword_1E9AFCFB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFCFB0);
  }
  return result;
}

uint64_t sub_1AFF6FE58(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1AFF6FDB8(255, &qword_1E9AFCFA0, (uint64_t)&type metadata for TestForYouConfigRecordService.TopStoriesOverlayData.Article, MEMORY[0x1E4FBB320]);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1AFF6FEE8()
{
  unint64_t result = qword_1E9AFCFC8;
  if (!qword_1E9AFCFC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFCFC8);
  }
  return result;
}

ValueMetadata *type metadata accessor for TestForYouConfigRecordService.TopStoriesOverlayData.CodingKeys()
{
  return &type metadata for TestForYouConfigRecordService.TopStoriesOverlayData.CodingKeys;
}

ValueMetadata *type metadata accessor for TestForYouConfigRecordService.TopStoriesOverlayData.Article()
{
  return &type metadata for TestForYouConfigRecordService.TopStoriesOverlayData.Article;
}

unint64_t sub_1AFF6FF64()
{
  unint64_t result = qword_1E9AFCFD0;
  if (!qword_1E9AFCFD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFCFD0);
  }
  return result;
}

unint64_t sub_1AFF6FFBC()
{
  unint64_t result = qword_1E9AFCFD8;
  if (!qword_1E9AFCFD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFCFD8);
  }
  return result;
}

unint64_t sub_1AFF70014()
{
  unint64_t result = qword_1E9AFCFE0;
  if (!qword_1E9AFCFE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFCFE0);
  }
  return result;
}

unint64_t sub_1AFF70068()
{
  unint64_t result = qword_1E9AFCFF0;
  if (!qword_1E9AFCFF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFCFF0);
  }
  return result;
}

void sub_1AFF700BC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unsigned char *_s10StocksCore29TestForYouConfigRecordServiceC21TopStoriesOverlayDataV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1AFF701C0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for TestForYouConfigRecordService.TopStoriesOverlayData.Article.CodingKeys()
{
  return &type metadata for TestForYouConfigRecordService.TopStoriesOverlayData.Article.CodingKeys;
}

unint64_t sub_1AFF701FC()
{
  unint64_t result = qword_1E9AFD000;
  if (!qword_1E9AFD000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFD000);
  }
  return result;
}

unint64_t sub_1AFF70254()
{
  unint64_t result = qword_1E9AFD008;
  if (!qword_1E9AFD008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFD008);
  }
  return result;
}

unint64_t sub_1AFF702AC()
{
  unint64_t result = qword_1E9AFD010;
  if (!qword_1E9AFD010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFD010);
  }
  return result;
}

BOOL (*sub_1AFF70300())(uint64_t a1)
{
  sub_1AFD2CF14(v0, (uint64_t)v3);
  uint64_t v1 = swift_allocObject();
  sub_1AFE133B8((uint64_t)v3, v1 + 16);
  return sub_1AFE13414;
}

uint64_t sub_1AFF7036C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  if (a3[4] == a1 && a3[5] == a2) {
    return 1;
  }
  uint64_t result = sub_1AFFCBCE8();
  if (result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  uint64_t v9 = a3 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_1AFFCBCE8() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1AFF70434(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = a2;
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v6 = a1[2];
  uint64_t v7 = a1[3];
  uint64_t v8 = a1[4];
  uint64_t v9 = a1[5];
  uint64_t v47 = a1[7];
  uint64_t v48 = a1[6];
  uint64_t v44 = *((unsigned __int8 *)a1 + 64);
  unint64_t v46 = a1[9];
  *((void *)&v41 + 1) = a1[11];
  unint64_t v42 = a1[10];
  unint64_t v40 = a1[14];
  *(void *)&long long v41 = a1[12];
  unint64_t v37 = a1[15];
  unint64_t v38 = a1[13];
  unint64_t v39 = a1[16];
  sub_1AFFC8E38();
  long long v10 = *(_OWORD *)(v3 + 144);
  *(_OWORD *)id v54 = *(_OWORD *)(v3 + 128);
  *(_OWORD *)&v54[16] = v10;
  *(void *)&v54[32] = *(void *)(v3 + 160);
  long long v11 = *(_OWORD *)(v3 + 48);
  long long v49 = *(_OWORD *)(v3 + 32);
  long long v50 = v11;
  long long v12 = *(_OWORD *)(v3 + 80);
  long long v51 = *(_OWORD *)(v3 + 64);
  long long v52 = v12;
  long long v13 = *(_OWORD *)(v3 + 112);
  *(_OWORD *)unint64_t v53 = *(_OWORD *)(v3 + 96);
  *(_OWORD *)&v53[16] = v13;
  uint64_t v14 = v2 - 1;
  uint64_t v15 = 168;
  uint64_t v16 = *((void *)&v49 + 1);
  uint64_t v43 = v7;
  uint64_t v45 = v5;
  while (1)
  {
    BOOL v17 = (void)v49 == v4 && v16 == v5;
    if (!v17 && (sub_1AFFCBCE8() & 1) == 0) {
      goto LABEL_59;
    }
    BOOL v18 = (void)v50 == v6 && *((void *)&v50 + 1) == v7;
    if (!v18 && (sub_1AFFCBCE8() & 1) == 0) {
      goto LABEL_59;
    }
    BOOL v19 = (void)v51 == v8 && *((void *)&v51 + 1) == v9;
    if (!v19 && (sub_1AFFCBCE8() & 1) == 0) {
      goto LABEL_59;
    }
    BOOL v20 = (void)v52 == v48 && *((void *)&v52 + 1) == v47;
    if (!v20 && (sub_1AFFCBCE8() & 1) == 0) {
      goto LABEL_59;
    }
    uint64_t v21 = v4;
    uint64_t v22 = v3;
    uint64_t v23 = v9;
    unint64_t v24 = 0xE700000000000000;
    uint64_t v25 = 0x6E776F6E6B6E75;
    switch(v53[0])
    {
      case 1:
        unint64_t v24 = 0xE800000000000000;
        uint64_t v25 = 0x79636E6572727563;
        break;
      case 2:
        uint64_t v25 = 0x75636F7470797263;
        unint64_t v24 = 0xEE0079636E657272;
        break;
      case 3:
        unint64_t v24 = 0xE600000000000000;
        uint64_t v25 = 0x797469757165;
        break;
      case 4:
        unint64_t v24 = 0xE300000000000000;
        uint64_t v25 = 6714469;
        break;
      case 5:
        uint64_t v25 = 0x73657275747566;
        break;
      case 6:
        unint64_t v24 = 0xE500000000000000;
        uint64_t v25 = 0x7865646E69;
        break;
      case 7:
        uint64_t v25 = 0x75466C617574756DLL;
        unint64_t v24 = 0xEA0000000000646ELL;
        break;
      default:
        break;
    }
    unint64_t v26 = 0xE700000000000000;
    uint64_t v27 = v6;
    uint64_t v28 = 0x6E776F6E6B6E75;
    switch(v44)
    {
      case 1:
        unint64_t v26 = 0xE800000000000000;
        uint64_t v28 = 0x79636E6572727563;
        break;
      case 2:
        uint64_t v28 = 0x75636F7470797263;
        unint64_t v26 = 0xEE0079636E657272;
        break;
      case 3:
        unint64_t v26 = 0xE600000000000000;
        uint64_t v28 = 0x797469757165;
        break;
      case 4:
        unint64_t v26 = 0xE300000000000000;
        uint64_t v28 = 6714469;
        break;
      case 5:
        uint64_t v28 = 0x73657275747566;
        break;
      case 6:
        unint64_t v26 = 0xE500000000000000;
        uint64_t v28 = 0x7865646E69;
        break;
      case 7:
        uint64_t v28 = 0x75466C617574756DLL;
        unint64_t v26 = 0xEA0000000000646ELL;
        break;
      default:
        break;
    }
    uint64_t v29 = v8;
    if (v25 == v28 && v24 == v26)
    {
      sub_1AFD76370((uint64_t)&v49);
      swift_bridgeObjectRelease_n();
      uint64_t v9 = v23;
      uint64_t v3 = v22;
      uint64_t v4 = v21;
      uint64_t v5 = v45;
    }
    else
    {
      char v30 = sub_1AFFCBCE8();
      sub_1AFD76370((uint64_t)&v49);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v9 = v23;
      uint64_t v3 = v22;
      uint64_t v4 = v21;
      uint64_t v5 = v45;
      if ((v30 & 1) == 0) {
        goto LABEL_58;
      }
    }
    if (*(_OWORD *)&v53[8] != __PAIR128__(v42, v46) && (sub_1AFFCBCE8() & 1) == 0
      || __PAIR128__(*(unint64_t *)&v53[24], *(unint64_t *)v54) != v41 && (sub_1AFFCBCE8() & 1) == 0)
    {
LABEL_58:
      sub_1AFD76408((uint64_t)&v49);
      uint64_t v8 = v29;
      uint64_t v6 = v27;
      uint64_t v7 = v43;
      goto LABEL_59;
    }
    if (*(void *)&v54[16])
    {
      if (!v40 || *(_OWORD *)&v54[8] != __PAIR128__(v40, v38) && (sub_1AFFCBCE8() & 1) == 0) {
        goto LABEL_58;
      }
    }
    else if (v40)
    {
      goto LABEL_58;
    }
    if (*(void *)&v54[32]) {
      break;
    }
    sub_1AFD76408((uint64_t)&v49);
    uint64_t v8 = v29;
    uint64_t v6 = v27;
    uint64_t v7 = v43;
    if (!v39) {
      goto LABEL_66;
    }
LABEL_59:
    if (!v14)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    long long v32 = *(_OWORD *)(v3 + v15 + 112);
    *(_OWORD *)id v54 = *(_OWORD *)(v3 + v15 + 96);
    *(_OWORD *)&v54[16] = v32;
    *(void *)&v54[32] = *(void *)(v3 + v15 + 128);
    long long v33 = *(_OWORD *)(v3 + v15 + 16);
    long long v49 = *(_OWORD *)(v3 + v15);
    long long v50 = v33;
    long long v34 = *(_OWORD *)(v3 + v15 + 48);
    long long v51 = *(_OWORD *)(v3 + v15 + 32);
    long long v52 = v34;
    long long v35 = *(_OWORD *)(v3 + v15 + 80);
    *(_OWORD *)unint64_t v53 = *(_OWORD *)(v3 + v15 + 64);
    *(_OWORD *)&v53[16] = v35;
    v15 += 136;
    --v14;
    uint64_t v16 = *((void *)&v49 + 1);
  }
  if (!v39) {
    goto LABEL_58;
  }
  if (*(_OWORD *)&v54[24] != __PAIR128__(v39, v37))
  {
    char v31 = sub_1AFFCBCE8();
    sub_1AFD76408((uint64_t)&v49);
    uint64_t v8 = v29;
    uint64_t v6 = v27;
    uint64_t v7 = v43;
    if (v31) {
      goto LABEL_66;
    }
    goto LABEL_59;
  }
  sub_1AFD76408((uint64_t)&v49);
LABEL_66:
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_1AFF709CC()
{
  uint64_t v1 = v0;
  uint64_t v2 = ((uint64_t (*)(void))MEMORY[0x1F4188790])();
  sub_1AFD2C83C();
  ((void (*)(void))MEMORY[0x1F4188790])();
  uint64_t v4 = (uint64_t)&v79 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1AFFC98F8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = ((uint64_t (*)(void))MEMORY[0x1F4188790])();
  uint64_t v9 = (char *)&v79 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  long long v11 = (char *)&v79 - v10;
  sub_1AFD2CF70(v2, (uint64_t)v100);
  sub_1AFD2CF14(v1, (uint64_t)&v94);
  long long v12 = (void *)v94;
  double v13 = *(double *)&v94;
  switch(v99)
  {
    case 1:
      sub_1AFD2CF70((uint64_t)v100, (uint64_t)v85);
      sub_1AFD2D15C((uint64_t)v85);
      BOOL v17 = *(void **)sub_1AFD2D168((uint64_t)v85);
      if ((objc_msgSend(v17, sel_respondsToSelector_, sel_isBundlePaid) & 1) == 0) {
        goto LABEL_37;
      }
      unsigned __int8 v18 = objc_msgSend(v17, sel_isBundlePaid);
      sub_1AFD2CF70((uint64_t)v100, (uint64_t)&v82);
      sub_1AFD2D15C((uint64_t)&v82);
      id v19 = objc_msgSend(*(id *)sub_1AFD2D168((uint64_t)&v82), sel_sourceChannel);
      if (!v19) {
        goto LABEL_37;
      }
      if ((v18 & 1) == 0)
      {
        swift_unknownObjectRelease();
LABEL_37:
        swift_unknownObjectRelease();
        goto LABEL_97;
      }
      LOBYTE(v4) = objc_msgSend(v12, sel_canGetBundleSubscriptionToChannel_, v19);
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      return v4 & 1;
    case 2:
      sub_1AFD80454(&v94, (uint64_t)&v82);
      uint64_t v20 = *((void *)&v83 + 1);
      uint64_t v21 = v84;
      __swift_project_boxed_opaque_existential_1(&v82, *((uint64_t *)&v83 + 1));
      sub_1AFD2CF70((uint64_t)v100, (uint64_t)v85);
      LOBYTE(v4) = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v21 + 16))(v85, v20, v21);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v82);
      return v4 & 1;
    case 3:
      sub_1AFD2CF70((uint64_t)v100, (uint64_t)v85);
      sub_1AFD2D15C((uint64_t)v85);
      uint64_t v4 = (uint64_t)objc_msgSend(*(id *)sub_1AFD2D168((uint64_t)v85), sel_sourceChannelID);
      if (v4)
      {
        uint64_t v22 = sub_1AFFCAE98();
        uint64_t v24 = v23;

        LOBYTE(v4) = sub_1AFF7036C(v22, v24, v12);
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      return v4 & 1;
    case 4:
      sub_1AFD2CF70((uint64_t)v100, (uint64_t)v85);
      int v25 = sub_1AFD2D15C((uint64_t)v85);
      uint64_t v26 = sub_1AFD2D168((uint64_t)v85);
      if (v25 == 1) {
        goto LABEL_97;
      }
      LOBYTE(v4) = *(double *)(v26 + 72) <= v13;
      return v4 & 1;
    case 5:
      sub_1AFD2CF70((uint64_t)v100, (uint64_t)v85);
      sub_1AFD2D15C((uint64_t)v85);
      id v27 = objc_msgSend(*(id *)sub_1AFD2D168((uint64_t)v85), sel_publishDate);
      if (v27)
      {
        uint64_t v28 = v27;
        sub_1AFFC98A8();

        uint64_t v29 = *(void (**)(uint64_t, char *, uint64_t))(v6 + 32);
        v29(v4, v9, v5);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
        {
          v29((uint64_t)v11, (char *)v4, v5);
          sub_1AFFC98E8();
          sub_1AFFC97B8();
          double v31 = v30;
          long long v32 = *(void (**)(char *, uint64_t))(v6 + 8);
          v32(v9, v5);
          v32(v11, v5);
          LOBYTE(v4) = v31 > v13;
          return v4 & 1;
        }
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
      }
      sub_1AFE6EF78(v4, (uint64_t (*)(void))sub_1AFD2C83C);
      goto LABEL_97;
    case 6:
      uint64_t v33 = *(void *)(v94 + 16);
      if (!v33) {
        goto LABEL_21;
      }
      uint64_t v34 = v94 + 32;
      while (1)
      {
        sub_1AFD2CF14(v34, (uint64_t)&v82);
        sub_1AFD2CF70((uint64_t)v100, (uint64_t)v85);
        char v35 = sub_1AFF709CC(v85);
        sub_1AFD2D108((uint64_t)&v82);
        if (v35) {
          goto LABEL_31;
        }
        v34 += 56;
        if (!--v33) {
          goto LABEL_21;
        }
      }
    case 7:
      uint64_t v36 = *(void *)(v94 + 16);
      if (!v36) {
        goto LABEL_31;
      }
      uint64_t v37 = v94 + 32;
      while (1)
      {
        sub_1AFD2CF14(v37, (uint64_t)&v82);
        sub_1AFD2CF70((uint64_t)v100, (uint64_t)v85);
        char v38 = sub_1AFF709CC(v85);
        sub_1AFD2D108((uint64_t)&v82);
        if ((v38 & 1) == 0) {
          goto LABEL_21;
        }
        v37 += 56;
        if (!--v36) {
          goto LABEL_31;
        }
      }
    case 8:
      uint64_t v39 = *(void *)(v94 + 16);
      if (!v39) {
        goto LABEL_31;
      }
      uint64_t v40 = v94 + 32;
      while (1)
      {
        sub_1AFD2CF14(v40, (uint64_t)&v82);
        sub_1AFD2CF70((uint64_t)v100, (uint64_t)v85);
        char v41 = sub_1AFF709CC(v85);
        sub_1AFD2D108((uint64_t)&v82);
        if (v41) {
          break;
        }
        v40 += 56;
        if (!--v39)
        {
LABEL_31:
          swift_bridgeObjectRelease();
          goto LABEL_32;
        }
      }
LABEL_21:
      swift_bridgeObjectRelease();
LABEL_97:
      LOBYTE(v4) = 0;
      return v4 & 1;
    case 9:
      if (v97 | v98 | (unint64_t)v94 | v96 | v95 | *((void *)&v94 + 1))
      {
        uint64_t v42 = v97 | v98 | v96 | v95 | *((void *)&v94 + 1);
        if ((void)v94 == 1 && !v42)
        {
          sub_1AFD2CF70((uint64_t)v100, (uint64_t)v85);
          sub_1AFD2D15C((uint64_t)v85);
          LOBYTE(v4) = objc_msgSend(*(id *)sub_1AFD2D168((uint64_t)v85), sel_hasThumbnail) ^ 1;
          return v4 & 1;
        }
        if ((void)v94 != 2 || v42)
        {
          if ((void)v94 == 3 && !v42)
          {
            sub_1AFD2CF70((uint64_t)v100, (uint64_t)v85);
            sub_1AFD2D15C((uint64_t)v85);
            LOBYTE(v4) = objc_msgSend(*(id *)sub_1AFD2D168((uint64_t)v85), sel_contentType) != (id)2;
            return v4 & 1;
          }
          sub_1AFD2CF70((uint64_t)v100, (uint64_t)v85);
          sub_1AFD2D15C((uint64_t)v85);
          unsigned __int8 v53 = objc_msgSend(*(id *)sub_1AFD2D168((uint64_t)v85), sel_isPressRelease);
        }
        else
        {
          sub_1AFD2CF70((uint64_t)v100, (uint64_t)v85);
          sub_1AFD2D15C((uint64_t)v85);
          unsigned __int8 v53 = objc_msgSend(*(id *)sub_1AFD2D168((uint64_t)v85), sel_isAIGenerated);
        }
        LOBYTE(v4) = v53;
      }
      else
      {
        uint64_t v4 = (uint64_t)objc_msgSend(self, sel_sharedInstance);
        if (v4)
        {
          sub_1AFD2CF70((uint64_t)v100, (uint64_t)v85);
          sub_1AFD2D15C((uint64_t)v85);
          unsigned __int8 v52 = objc_msgSend((id)v4, sel_isNewsVersionAllowed_, objc_msgSend(*(id *)sub_1AFD2D168((uint64_t)v85), sel_minimumNewsVersion));

          LOBYTE(v4) = v52 ^ 1;
        }
      }
      return v4 & 1;
    default:
      sub_1AFD80454((long long *)((char *)&v94 + 8), (uint64_t)v90);
      sub_1AFD2CF70((uint64_t)v100, (uint64_t)v93);
      sub_1AFD2D15C((uint64_t)v93);
      uint64_t v14 = *(void **)sub_1AFD2D168((uint64_t)v93);
      unsigned int v15 = objc_msgSend((id)swift_unknownObjectRetain(), sel_isPaid);
      if (objc_msgSend(v14, sel_respondsToSelector_, sel_isBundlePaid)) {
        unsigned __int8 v16 = objc_msgSend(v14, sel_isBundlePaid);
      }
      else {
        unsigned __int8 v16 = 0;
      }
      uint64_t v43 = &selRef_coverArt;
      id v44 = objc_msgSend(v14, sel_sourceChannel);
      uint64_t v45 = (uint64_t)v44;
      if (v44)
      {
        id v46 = objc_msgSend(v44, sel_identifier);
        swift_unknownObjectRelease();
        uint64_t v47 = sub_1AFFCAE98();
        uint64_t v45 = v48;

        if (v15) {
          goto LABEL_41;
        }
LABEL_50:
        if (v16) {
          goto LABEL_57;
        }
        goto LABEL_51;
      }
      uint64_t v47 = 0;
      if (!v15) {
        goto LABEL_50;
      }
LABEL_41:
      id v49 = objc_msgSend(v12, sel_purchaseProvider);
      if (!v45)
      {
        swift_unknownObjectRelease();
        goto LABEL_56;
      }
      id v50 = objc_msgSend(v49, sel_purchasedTagIDs);
      uint64_t v51 = sub_1AFFCB358();

      LOBYTE(v50) = sub_1AFDC0F04(v47, v45, v51);
      swift_unknownObjectRelease();
      uint64_t v43 = &selRef_coverArt;
      swift_bridgeObjectRelease();
      if (v50)
      {
LABEL_51:
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
LABEL_96:
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v90);
        goto LABEL_97;
      }
LABEL_56:
      if ((v16 & 1) == 0) {
        goto LABEL_81;
      }
LABEL_57:
      if (!v45)
      {
        swift_unknownObjectRelease();
        goto LABEL_86;
      }
      id v54 = (char *)objc_msgSend(objc_msgSend(v12, sel_bundleSubscriptionProvider), sel_bundleSubscription);
      swift_unknownObjectRelease();
      if (objc_getAssociatedObject(v54, v54 + 1))
      {
        sub_1AFFCB6F8();
        swift_unknownObjectRelease();
      }
      else
      {
        long long v82 = 0u;
        long long v83 = 0u;
      }
      sub_1AFD3BCF4((uint64_t)&v82, (uint64_t)v85);
      if (!v86)
      {
        sub_1AFE6EF78((uint64_t)v85, (uint64_t (*)(void))sub_1AFD3BD58);
        goto LABEL_71;
      }
      sub_1AFD7BE90();
      if ((swift_dynamicCast() & 1) == 0)
      {
LABEL_71:
        id v80 = 0;
        unint64_t v57 = 0;
        goto LABEL_72;
      }
      id v55 = v89[0];
      id v56 = objc_msgSend(v89[0], sel_integerValue);
      if (v56 == (id)-1)
      {

        uint64_t v43 = &selRef_coverArt;
        goto LABEL_85;
      }
      unint64_t v57 = (unint64_t)v56;
      id v80 = v55;
LABEL_72:
      if (objc_getAssociatedObject(v54, (const void *)~v57))
      {
        sub_1AFFCB6F8();
        swift_unknownObjectRelease();
      }
      else
      {
        long long v82 = 0u;
        long long v83 = 0u;
      }
      sub_1AFD3BCF4((uint64_t)&v82, (uint64_t)v85);
      if (!v86)
      {
        sub_1AFE6EF78((uint64_t)v85, (uint64_t (*)(void))sub_1AFD3BD58);
LABEL_80:

        uint64_t v43 = &selRef_coverArt;
        if (v57) {
          goto LABEL_85;
        }
LABEL_81:
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_86;
      }
      sub_1AFD7BE90();
      if ((swift_dynamicCast() & 1) == 0) {
        goto LABEL_80;
      }
      id v58 = v89[0];
      unsigned __int8 v59 = objc_msgSend(v58, sel_integerValue, v47);

      char v60 = (v59 + 1) ^ (v57 + 1);
      uint64_t v43 = &selRef_coverArt;
      if ((v60 & 1) == 0) {
        goto LABEL_81;
      }
LABEL_85:
      id v61 = objc_msgSend(objc_msgSend(v12, sel_bundleSubscriptionProvider), sel_bundleSubscription);
      swift_unknownObjectRelease();
      id v62 = objc_msgSend(v61, sel_bundleChannelIDs);

      uint64_t v63 = (void *)sub_1AFFCAE68();
      LODWORD(v61) = objc_msgSend(v62, sel_containsObject_, v63);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();

      if (v61)
      {
LABEL_95:
        swift_unknownObjectRelease();
        goto LABEL_96;
      }
LABEL_86:
      sub_1AFD2CF70((uint64_t)v100, (uint64_t)v89);
      sub_1AFD2D15C((uint64_t)v89);
      if (!objc_msgSend(*(id *)sub_1AFD2D168((uint64_t)v89), sel_isPaid)) {
        goto LABEL_95;
      }
      id v64 = objc_msgSend(v12, sel_purchaseProvider);
      sub_1AFD2CF70((uint64_t)v100, (uint64_t)v88);
      sub_1AFD2D15C((uint64_t)v88);
      id v65 = [*(id *)sub_1AFD2D168((uint64_t)v88) v43[124]];
      if (v65)
      {
        id v66 = v65;
        if (objc_msgSend((id)swift_unknownObjectRetain(), sel_tagType) == (id)3)
        {
          id v67 = objc_msgSend(v66, sel_asSection);
          if (!v67
            || (id v68 = objc_msgSend(v67, sel_parentID),
                swift_unknownObjectRelease(),
                !v68))
          {
            swift_unknownObjectRelease();
            swift_unknownObjectRelease_n();
            goto LABEL_99;
          }
        }
        else
        {
          id v68 = objc_msgSend(v66, sel_identifier);
        }
        uint64_t v69 = sub_1AFFCAE98();
        uint64_t v71 = v70;

        id v72 = objc_msgSend(v64, sel_purchasedTagIDs);
        uint64_t v73 = sub_1AFFCB358();

        LOBYTE(v72) = sub_1AFDC0F04(v69, v71, v73);
        swift_unknownObjectRelease();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v72) {
          goto LABEL_95;
        }
      }
      else
      {
        swift_unknownObjectRelease();
      }
LABEL_99:
      uint64_t v75 = v91;
      uint64_t v76 = v92;
      __swift_project_boxed_opaque_existential_1(v90, v91);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v76 + 8))(v85, v75, v76);
      sub_1AFD55D10((uint64_t)v85);
      if (v87 == 1)
      {
        swift_unknownObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v90);
LABEL_32:
        LOBYTE(v4) = 1;
      }
      else
      {
        uint64_t v77 = v91;
        uint64_t v78 = v92;
        __swift_project_boxed_opaque_existential_1(v90, v91);
        (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v78 + 8))(&v82, v77, v78);
        sub_1AFD55D10((uint64_t)&v82);
        sub_1AFD2CF70((uint64_t)v100, (uint64_t)v81);
        sub_1AFD2D15C((uint64_t)v81);
        LOBYTE(v77) = objc_msgSend(v12, sel_canGetBundleSubscriptionToChannel_, objc_msgSend(*(id *)sub_1AFD2D168((uint64_t)v81), v43[124]));
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        LOBYTE(v4) = v77 ^ 1;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v90);
      }
      return v4 & 1;
  }
}

BOOL (*sub_1AFF719E4())(uint64_t)
{
  sub_1AFD2CF14(v0, (uint64_t)v3);
  uint64_t v1 = swift_allocObject();
  sub_1AFE133B8((uint64_t)v3, v1 + 16);
  return sub_1AFF72608;
}

BOOL sub_1AFF71A50(uint64_t a1)
{
  sub_1AFD2CF70(a1, (uint64_t)v3);
  sub_1AFD2CF70((uint64_t)v3, (uint64_t)&v2);
  return (sub_1AFF709CC() & 1) == 0;
}

BOOL sub_1AFF71AA4(uint64_t a1, uint64_t a2)
{
  sub_1AFD2CF14(a1, (uint64_t)v15);
  sub_1AFD2CF14(a2, (uint64_t)&v19);
  switch(v18)
  {
    case 0:
      sub_1AFD2CF14((uint64_t)v15, (uint64_t)&v13);
      swift_unknownObjectRelease();
      if (v23)
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
        goto LABEL_36;
      }
      swift_unknownObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
      BOOL v3 = 1;
      goto LABEL_37;
    case 2:
      if (v23 != 2) {
        goto LABEL_36;
      }
      sub_1AFD2D108((uint64_t)&v19);
      BOOL v3 = 1;
      goto LABEL_37;
    case 3:
      sub_1AFD2CF14((uint64_t)v15, (uint64_t)&v13);
      if (v23 != 3) {
        goto LABEL_27;
      }
      char v5 = sub_1AFF22B0C(v13, v19);
      goto LABEL_26;
    case 4:
      sub_1AFD2CF14((uint64_t)v15, (uint64_t)&v13);
      if (v23 != 4) {
        goto LABEL_36;
      }
      goto LABEL_31;
    case 5:
      sub_1AFD2CF14((uint64_t)v15, (uint64_t)&v13);
      if (v23 != 5) {
        goto LABEL_36;
      }
LABEL_31:
      BOOL v3 = *(double *)&v13 == *(double *)&v19;
      goto LABEL_37;
    case 6:
      sub_1AFD2CF14((uint64_t)v15, (uint64_t)&v13);
      uint64_t v4 = v13;
      if (v23 != 6) {
        goto LABEL_27;
      }
      goto LABEL_9;
    case 7:
      sub_1AFD2CF14((uint64_t)v15, (uint64_t)&v13);
      uint64_t v4 = v13;
      if (v23 != 7)
      {
LABEL_27:
        swift_bridgeObjectRelease();
        goto LABEL_36;
      }
LABEL_9:
      char v5 = sub_1AFF23150((uint64_t)v4, (uint64_t)v19);
LABEL_26:
      BOOL v3 = v5;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_37;
    case 9:
      int8x16_t v6 = vorrq_s8(v16, v17);
      uint64_t v7 = *(void *)&vorr_s8(*(int8x8_t *)v6.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v6, v6, 8uLL)) | v15[1];
      if (v15[0] == 3 && v7 == 0)
      {
        if (v23 != 9 || v19 != (void *)3) {
          goto LABEL_36;
        }
      }
      else
      {
        BOOL v10 = v15[0] == 4 && v7 == 0 && v23 == 9;
        if (!v10 || v19 != (void *)4) {
          goto LABEL_36;
        }
      }
      int8x16_t v11 = vorrq_s8(v21, v22);
      if (!(*(void *)&vorr_s8(*(int8x8_t *)v11.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v11, v11, 8uLL)) | v20))
      {
        BOOL v3 = 1;
        goto LABEL_37;
      }
LABEL_36:
      sub_1AFD2D108((uint64_t)&v19);
      BOOL v3 = 0;
LABEL_37:
      sub_1AFD2D108((uint64_t)v15);
      return v3;
    default:
      goto LABEL_36;
  }
}

uint64_t objectdestroyTm_4()
{
  uint64_t v1 = v0 + 16;
  switch(*(unsigned char *)(v0 + 64))
  {
    case 0:
      swift_unknownObjectRelease();
      uint64_t v1 = v0 + 24;
      goto LABEL_4;
    case 1:
      swift_unknownObjectRelease();
      break;
    case 2:
LABEL_4:
      __swift_destroy_boxed_opaque_existential_1(v1);
      break;
    case 3:
    case 6:
    case 7:
    case 8:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }

  return MEMORY[0x1F4186498](v0, 65, 7);
}

uint64_t destroy for HeadlineCondition(uint64_t result)
{
  uint64_t v1 = result;
  unsigned int v2 = *(unsigned __int8 *)(result + 48);
  if (v2 >= 9) {
    unsigned int v2 = *(_DWORD *)result + 9;
  }
  switch(v2)
  {
    case 0u:
      uint64_t v1 = result + 8;
      swift_unknownObjectRelease();
      goto LABEL_8;
    case 1u:
      uint64_t result = swift_unknownObjectRelease();
      break;
    case 2u:
LABEL_8:
      uint64_t result = __swift_destroy_boxed_opaque_existential_1(v1);
      break;
    case 3u:
    case 6u:
    case 7u:
    case 8u:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t initializeWithCopy for HeadlineCondition(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(unsigned __int8 *)(a2 + 48);
  if (v3 >= 9) {
    unsigned int v3 = *(_DWORD *)a2 + 9;
  }
  switch(v3)
  {
    case 0u:
      *(void *)a1 = *(void *)a2;
      uint64_t v4 = a2 + 8;
      long long v5 = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 32) = v5;
      uint64_t v6 = v5;
      uint64_t v7 = **(void (***)(uint64_t, uint64_t, uint64_t))(v5 - 8);
      swift_unknownObjectRetain();
      v7(a1 + 8, v4, v6);
      *(unsigned char *)(a1 + 48) = 0;
      return a1;
    case 1u:
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 48) = 1;
      swift_unknownObjectRetain();
      return a1;
    case 2u:
      long long v10 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v10;
      (**(void (***)(uint64_t))(v10 - 8))(a1);
      char v9 = 2;
      goto LABEL_11;
    case 3u:
      *(void *)a1 = *(void *)a2;
      char v11 = 3;
      goto LABEL_15;
    case 4u:
      *(void *)a1 = *(void *)a2;
      char v9 = 4;
      goto LABEL_11;
    case 5u:
      *(void *)a1 = *(void *)a2;
      char v9 = 5;
      goto LABEL_11;
    case 6u:
      *(void *)a1 = *(void *)a2;
      char v11 = 6;
      goto LABEL_15;
    case 7u:
      *(void *)a1 = *(void *)a2;
      char v11 = 7;
      goto LABEL_15;
    case 8u:
      *(void *)a1 = *(void *)a2;
      char v11 = 8;
LABEL_15:
      *(unsigned char *)(a1 + 48) = v11;
      sub_1AFFC8E38();
      break;
    default:
      long long v8 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v8;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      char v9 = *(unsigned char *)(a2 + 48);
LABEL_11:
      *(unsigned char *)(a1 + 48) = v9;
      break;
  }
  return a1;
}

uint64_t assignWithCopy for HeadlineCondition(uint64_t a1, long long *a2)
{
  if ((long long *)a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 48);
    if (v4 >= 9) {
      unsigned int v4 = *(_DWORD *)a1 + 9;
    }
    switch(v4)
    {
      case 0u:
        swift_unknownObjectRelease();
        __swift_destroy_boxed_opaque_existential_1(a1 + 8);
        break;
      case 1u:
        swift_unknownObjectRelease();
        break;
      case 2u:
        __swift_destroy_boxed_opaque_existential_1(a1);
        break;
      case 3u:
      case 6u:
      case 7u:
      case 8u:
        swift_bridgeObjectRelease();
        break;
      default:
        break;
    }
    unsigned int v5 = *((unsigned __int8 *)a2 + 48);
    if (v5 >= 9) {
      unsigned int v5 = *(_DWORD *)a2 + 9;
    }
    switch(v5)
    {
      case 0u:
        *(void *)a1 = *(void *)a2;
        uint64_t v6 = (uint64_t)a2 + 8;
        uint64_t v7 = *((void *)a2 + 4);
        *(void *)(a1 + 32) = v7;
        *(void *)(a1 + 40) = *((void *)a2 + 5);
        long long v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
        swift_unknownObjectRetain();
        v8(a1 + 8, v6, v7);
        *(unsigned char *)(a1 + 48) = 0;
        return a1;
      case 1u:
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 48) = 1;
        swift_unknownObjectRetain();
        return a1;
      case 2u:
        uint64_t v12 = *((void *)a2 + 3);
        *(void *)(a1 + 24) = v12;
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        (**(void (***)(uint64_t, long long *))(v12 - 8))(a1, a2);
        *(unsigned char *)(a1 + 48) = 2;
        return a1;
      case 3u:
        *(void *)a1 = *(void *)a2;
        char v13 = 3;
        goto LABEL_22;
      case 4u:
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 48) = 4;
        return a1;
      case 5u:
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 48) = 5;
        return a1;
      case 6u:
        *(void *)a1 = *(void *)a2;
        char v13 = 6;
        goto LABEL_22;
      case 7u:
        *(void *)a1 = *(void *)a2;
        char v13 = 7;
        goto LABEL_22;
      case 8u:
        *(void *)a1 = *(void *)a2;
        char v13 = 8;
LABEL_22:
        *(unsigned char *)(a1 + 48) = v13;
        sub_1AFFC8E38();
        break;
      default:
        long long v9 = *a2;
        long long v10 = a2[1];
        long long v11 = a2[2];
        *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
        *(_OWORD *)(a1 + 16) = v10;
        *(_OWORD *)(a1 + 32) = v11;
        *(_OWORD *)a1 = v9;
        break;
    }
  }
  return a1;
}

uint64_t assignWithTake for HeadlineCondition(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 48);
    if (v4 >= 9) {
      unsigned int v4 = *(_DWORD *)a1 + 9;
    }
    switch(v4)
    {
      case 0u:
        swift_unknownObjectRelease();
        __swift_destroy_boxed_opaque_existential_1(a1 + 8);
        break;
      case 1u:
        swift_unknownObjectRelease();
        break;
      case 2u:
        __swift_destroy_boxed_opaque_existential_1(a1);
        break;
      case 3u:
      case 6u:
      case 7u:
      case 8u:
        swift_bridgeObjectRelease();
        break;
      default:
        break;
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 48);
    if (v5 >= 9) {
      unsigned int v5 = *(_DWORD *)a2 + 9;
    }
    switch(v5)
    {
      case 0u:
        long long v6 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v6;
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        *(unsigned char *)(a1 + 48) = 0;
        return a1;
      case 1u:
        *(void *)a1 = *(void *)a2;
        char v8 = 1;
        goto LABEL_22;
      case 2u:
        long long v9 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v9;
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        char v8 = 2;
        goto LABEL_22;
      case 3u:
        *(void *)a1 = *(void *)a2;
        char v8 = 3;
        goto LABEL_22;
      case 4u:
        *(void *)a1 = *(void *)a2;
        char v8 = 4;
        goto LABEL_22;
      case 5u:
        *(void *)a1 = *(void *)a2;
        char v8 = 5;
        goto LABEL_22;
      case 6u:
        *(void *)a1 = *(void *)a2;
        char v8 = 6;
        goto LABEL_22;
      case 7u:
        *(void *)a1 = *(void *)a2;
        char v8 = 7;
        goto LABEL_22;
      case 8u:
        *(void *)a1 = *(void *)a2;
        char v8 = 8;
        goto LABEL_22;
      default:
        long long v7 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v7;
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        char v8 = *(unsigned char *)(a2 + 48);
LABEL_22:
        *(unsigned char *)(a1 + 48) = v8;
        break;
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for HeadlineCondition(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF7 && *(unsigned char *)(a1 + 49)) {
    return (*(_DWORD *)a1 + 247);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 48);
  if (v3 >= 0xA) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for HeadlineCondition(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF6)
  {
    *(unsigned char *)(result + 48) = 0;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_DWORD *)uint64_t result = a2 - 247;
    if (a3 >= 0xF7) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF7) {
      *(unsigned char *)(result + 49) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 48) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1AFF725B4(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 48);
  if (result >= 9) {
    return (*(_DWORD *)a1 + 9);
  }
  return result;
}

uint64_t sub_1AFF725D0(uint64_t result, unsigned int a2)
{
  if (a2 > 8)
  {
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_DWORD *)uint64_t result = a2 - 9;
    LOBYTE(a2) = 9;
  }
  *(unsigned char *)(result + 48) = a2;
  return result;
}

ValueMetadata *type metadata accessor for HeadlineCondition()
{
  return &type metadata for HeadlineCondition;
}

uint64_t sub_1AFF7260C()
{
  uint64_t v1 = *v0;
  sub_1AFFC8E38();
  return v1;
}

double sub_1AFF7263C()
{
  return *(double *)(v0 + 16);
}

uint64_t sub_1AFF72644@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  *(void *)a3 = result;
  *(void *)(a3 + 8) = a2;
  *(double *)(a3 + 16) = a4;
  return result;
}

uint64_t sub_1AFF72650()
{
  return sub_1AFFC8E38();
}

double sub_1AFF72658()
{
  return *(double *)(v0 + 8);
}

double sub_1AFF72660()
{
  return *(double *)(v0 + 16);
}

double sub_1AFF72668()
{
  return *(double *)(v0 + 24);
}

double sub_1AFF72670()
{
  return *(double *)(v0 + 32);
}

uint64_t sub_1AFF72678()
{
  return *(void *)(v0 + 40);
}

double sub_1AFF72680()
{
  return *(double *)(v0 + 48);
}

double sub_1AFF72688()
{
  return *(double *)(v0 + 56);
}

double sub_1AFF72690()
{
  return *(double *)(v0 + 64);
}

double sub_1AFF72698()
{
  return *(double *)(v0 + 72);
}

double sub_1AFF726A0()
{
  return *(double *)(v0 + 80);
}

void *sub_1AFF726A8()
{
  uint64_t v1 = *(void **)(v0 + 88);
  id v2 = v1;
  return v1;
}

uint64_t sub_1AFF726D0()
{
  return *(unsigned __int8 *)(v0 + 96);
}

uint64_t sub_1AFF726D8()
{
  return *(void *)(v0 + 104);
}

uint64_t sub_1AFF726E0()
{
  return *(void *)(v0 + 112);
}

double sub_1AFF726E8()
{
  return *(double *)(v0 + 120);
}

double sub_1AFF726F0()
{
  return *(double *)(v0 + 128);
}

uint64_t sub_1AFF726F8@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>, double a8@<D0>, double a9@<D1>, double a10@<D2>, double a11@<D3>, double a12@<D4>, double a13@<D5>, double a14@<D6>, double a15@<D7>, uint64_t a16, uint64_t a17, uint64_t a18)
{
  *(void *)a7 = result;
  *(double *)(a7 + 8) = a8;
  *(double *)(a7 + 16) = a9;
  *(double *)(a7 + 24) = a10;
  *(double *)(a7 + 32) = a11;
  *(void *)(a7 + 40) = a2;
  *(double *)(a7 + 48) = a12;
  *(double *)(a7 + 56) = a13;
  *(double *)(a7 + 64) = a14;
  *(double *)(a7 + 72) = a15;
  *(void *)(a7 + 80) = a16;
  *(void *)(a7 + 88) = a3;
  *(unsigned char *)(a7 + 96) = a4;
  *(void *)(a7 + 104) = a5;
  *(void *)(a7 + 112) = a6;
  *(void *)(a7 + 120) = a17;
  *(void *)(a7 + 128) = a18;
  return result;
}

int8x16_t sub_1AFF72730@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  double v4 = *(double *)a1;
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 32);
  char v7 = *(unsigned char *)(a1 + 56);
  uint64_t v8 = *(void *)(a1 + 112);
  *(_OWORD *)(a4 + 8) = *(_OWORD *)(a1 + 8);
  *(void *)a4 = a2;
  *(double *)(a4 + 24) = round(v4 * 10000.0) / 10000.0;
  *(void *)(a4 + 32) = v5;
  *(void *)(a4 + 40) = v6;
  long long v9 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(a4 + 48) = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(a4 + 64) = v9;
  *(void *)(a4 + 80) = v8;
  *(void *)(a4 + 88) = a3;
  *(unsigned char *)(a4 + 96) = v7;
  int8x16_t v10 = *(int8x16_t *)(a1 + 64);
  *(_OWORD *)(a4 + 104) = *(_OWORD *)(a1 + 80);
  int8x16_t result = vextq_s8(v10, v10, 8uLL);
  *(int8x16_t *)(a4 + 120) = result;
  return result;
}

double sub_1AFF7279C(uint64_t a1, double a2)
{
  double v3 = __exp10((double)a1);
  return round(v3 * a2) / v3;
}

double sub_1AFF727D0()
{
  *(void *)&xmmword_1EB810D38 = MEMORY[0x1E4FBC860];
  double result = 0.0;
  *(long long *)((char *)&xmmword_1EB810D38 + 8) = 0u;
  *(long long *)((char *)&xmmword_1EB810D48 + 8) = 0u;
  *(long long *)((char *)&xmmword_1EB810D58 + 8) = 0u;
  *(long long *)((char *)&xmmword_1EB810D68 + 8) = 0u;
  *(long long *)((char *)&xmmword_1EB810D78 + 8) = 0u;
  *(long long *)((char *)&xmmword_1EB810D88 + 1) = 0u;
  *(long long *)((char *)&xmmword_1EB810D98 + 8) = 0u;
  *(long long *)((char *)&xmmword_1EB810DA8 + 8) = 0u;
  return result;
}

uint64_t sub_1AFF7280C@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EB810A98 != -1) {
    swift_once();
  }
  long long v2 = xmmword_1EB810D88;
  v10[6] = xmmword_1EB810D98;
  v10[7] = xmmword_1EB810DA8;
  long long v3 = xmmword_1EB810D48;
  long long v4 = xmmword_1EB810D58;
  void v10[2] = xmmword_1EB810D58;
  v10[3] = xmmword_1EB810D68;
  long long v5 = xmmword_1EB810D68;
  long long v6 = xmmword_1EB810D78;
  uint64_t v10[4] = xmmword_1EB810D78;
  v10[5] = xmmword_1EB810D88;
  long long v7 = xmmword_1EB810D38;
  v10[0] = xmmword_1EB810D38;
  v10[1] = xmmword_1EB810D48;
  long long v8 = xmmword_1EB810DA8;
  *(_OWORD *)(a1 + 96) = xmmword_1EB810D98;
  *(_OWORD *)(a1 + 112) = v8;
  *(_OWORD *)(a1 + 32) = v4;
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 80) = v2;
  uint64_t v11 = qword_1EB810DB8;
  *(void *)(a1 + 128) = qword_1EB810DB8;
  *(_OWORD *)a1 = v7;
  *(_OWORD *)(a1 + 16) = v3;
  return sub_1AFD2D470((uint64_t)v10);
}

void destroy for NewsHeadlineScore(uint64_t a1)
{
  swift_bridgeObjectRelease();
  long long v2 = *(void **)(a1 + 88);
}

uint64_t initializeWithCopy for NewsHeadlineScore(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  long long v3 = *(void **)(a2 + 88);
  *(void *)(a1 + 88) = v3;
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  sub_1AFFC8E38();
  id v4 = v3;
  return a1;
}

uint64_t assignWithCopy for NewsHeadlineScore(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  id v4 = *(void **)(a1 + 88);
  long long v5 = *(void **)(a2 + 88);
  *(void *)(a1 + 88) = v5;
  id v6 = v5;

  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  return a1;
}

uint64_t assignWithTake for NewsHeadlineScore(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  long long v5 = *(void **)(a1 + 88);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);

  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  return a1;
}

uint64_t getEnumTagSinglePayload for NewsHeadlineScore(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 136)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NewsHeadlineScore(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(void *)double result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 136) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)double result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 136) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NewsHeadlineScore()
{
  return &type metadata for NewsHeadlineScore;
}

ValueMetadata *type metadata accessor for NewsHeadlineScore.CohortMembership()
{
  return &type metadata for NewsHeadlineScore.CohortMembership;
}

uint64_t sub_1AFF72BA4()
{
  uint64_t v1 = *v0;
  sub_1AFFC8E38();
  return v1;
}

uint64_t sub_1AFF72BD4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioUpsellConfig() + 20);

  return sub_1AFE6FB24(v3, a1);
}

uint64_t type metadata accessor for AudioUpsellConfig()
{
  uint64_t result = qword_1EB819168;
  if (!qword_1EB819168) {
    return swift_getSingletonMetadata();
  }
  return result;
}

double sub_1AFF72C64()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for AudioUpsellConfig() + 24));
}

uint64_t sub_1AFF72C88()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for AudioUpsellConfig() + 28));
}

uint64_t sub_1AFF72CAC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, double a4@<X3>, char a5@<W4>, void *a6@<X8>)
{
  sub_1AFF7486C(0, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v20 - v13;
  if (!a2)
  {
    a1 = 0;
    a2 = 0xE000000000000000;
  }
  sub_1AFE6FB24(a3, (uint64_t)&v20 - v13);
  if (a5) {
    double v15 = 0.0;
  }
  else {
    double v15 = a4;
  }
  uint64_t v16 = sub_1AFFCBA78();
  swift_bridgeObjectRelease();
  if (v16 == 2) {
    char v17 = 2;
  }
  else {
    char v17 = v16 == 1;
  }
  sub_1AFD48D50(a3);
  *a6 = a1;
  a6[1] = a2;
  char v18 = (int *)type metadata accessor for AudioUpsellConfig();
  uint64_t result = sub_1AFDE5CFC((uint64_t)v14, (uint64_t)a6 + v18[5]);
  *(double *)((char *)a6 + v18[6]) = v15;
  *((unsigned char *)a6 + v18[7]) = v17;
  return result;
}

uint64_t sub_1AFF72E28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, void *a5@<X8>, double a6@<D0>)
{
  *a5 = a1;
  a5[1] = a2;
  int8x16_t v10 = (int *)type metadata accessor for AudioUpsellConfig();
  uint64_t result = sub_1AFDE5CFC(a3, (uint64_t)a5 + v10[5]);
  *(double *)((char *)a5 + v10[6]) = a6;
  *((unsigned char *)a5 + v10[7]) = a4;
  return result;
}

uint64_t sub_1AFF72E94(char a1)
{
  if (!a1) {
    return 0x6E696E6E69676562;
  }
  if (a1 == 1) {
    return 0x656C6464696DLL;
  }
  return 6581861;
}

uint64_t sub_1AFF72EE4(unsigned char *a1, unsigned char *a2)
{
  int v2 = *a1;
  unint64_t v3 = 0xE600000000000000;
  uint64_t v4 = 0x656C6464696DLL;
  if (v2 != 1)
  {
    uint64_t v4 = 6581861;
    unint64_t v3 = 0xE300000000000000;
  }
  if (*a1) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0x6E696E6E69676562;
  }
  if (v2) {
    unint64_t v6 = v3;
  }
  else {
    unint64_t v6 = 0xE900000000000067;
  }
  unint64_t v7 = 0xE600000000000000;
  uint64_t v8 = 0x656C6464696DLL;
  if (*a2 != 1)
  {
    uint64_t v8 = 6581861;
    unint64_t v7 = 0xE300000000000000;
  }
  if (*a2) {
    uint64_t v9 = v8;
  }
  else {
    uint64_t v9 = 0x6E696E6E69676562;
  }
  if (*a2) {
    unint64_t v10 = v7;
  }
  else {
    unint64_t v10 = 0xE900000000000067;
  }
  if (v5 == v9 && v6 == v10) {
    char v11 = 1;
  }
  else {
    char v11 = sub_1AFFCBCE8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11 & 1;
}

uint64_t sub_1AFF72FD4()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFF73070()
{
  sub_1AFFCAF68();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFF730F8()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFF73190@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFF747CC();
  *a1 = result;
  return result;
}

void sub_1AFF731C0(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE900000000000067;
  unint64_t v4 = 0xE600000000000000;
  uint64_t v5 = 0x656C6464696DLL;
  if (v2 != 1)
  {
    uint64_t v5 = 6581861;
    unint64_t v4 = 0xE300000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6E696E6E69676562;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1AFF73218@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v62 = a2;
  sub_1AFF7486C(0, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v63 = (uint64_t)v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  id v64 = (char *)v57 - v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v57 - v8;
  sub_1AFF74934(0, &qword_1E9AFD018, MEMORY[0x1E4FBBDC0]);
  char v11 = v10;
  uint64_t v65 = *((void *)v10 - 1);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v57 - v12;
  uint64_t v14 = type metadata accessor for AudioUpsellConfig();
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFF74818();
  uint64_t v17 = (uint64_t)v66;
  sub_1AFFCBE68();
  if (v17)
  {
    uint64_t v37 = (uint64_t)a1;
  }
  else
  {
    uint64_t v60 = v14;
    id v61 = (uint64_t *)v16;
    id v66 = v9;
    uint64_t v70 = (void *)MEMORY[0x1E4FBC860];
    char v69 = 0;
    sub_1AFFCBAF8();
    unint64_t v18 = v68;
    double v59 = v67;
    uint64_t v19 = (uint64_t)v66;
    if (!v68)
    {
      swift_beginAccess();
      uint64_t v20 = v70;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v20 = sub_1AFD352FC(0, v20[2] + 1, 1, v20);
      }
      unint64_t v22 = v20[2];
      unint64_t v21 = v20[3];
      if (v22 >= v21 >> 1) {
        uint64_t v20 = sub_1AFD352FC((void *)(v21 > 1), v22 + 1, 1, v20);
      }
      v20[2] = v22 + 1;
      char v23 = &v20[2 * v22];
      v23[4] = 0x696669746E656469;
      v23[5] = 0xEA00000000007265;
      uint64_t v70 = v20;
      swift_endAccess();
      unint64_t v18 = 0;
    }
    LOBYTE(v67) = 1;
    uint64_t v24 = sub_1AFFC96E8();
    sub_1AFF75AEC(&qword_1EB818B78, MEMORY[0x1E4F276F0]);
    uint64_t v25 = (uint64_t)v64;
    sub_1AFFCBAF8();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48))(v25, 1, v24) == 1)
    {
      swift_beginAccess();
      uint64_t v26 = v70;
      unint64_t v27 = v18;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v26 = sub_1AFD352FC(0, v26[2] + 1, 1, v26);
      }
      unint64_t v29 = v26[2];
      unint64_t v28 = v26[3];
      if (v29 >= v28 >> 1) {
        uint64_t v26 = sub_1AFD352FC((void *)(v28 > 1), v29 + 1, 1, v26);
      }
      void v26[2] = v29 + 1;
      double v30 = &v26[2 * v29];
      v30[4] = 7107189;
      v30[5] = 0xE300000000000000;
      uint64_t v70 = v26;
      swift_endAccess();
      unint64_t v18 = v27;
      uint64_t v25 = (uint64_t)v64;
    }
    sub_1AFDE5CFC(v25, v19);
    char v69 = 2;
    sub_1AFFCBAF8();
    double v31 = v67;
    int v32 = v68;
    if (v68)
    {
      LODWORD(v64) = v68;
      swift_beginAccess();
      uint64_t v33 = v70;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v33 = sub_1AFD352FC(0, v33[2] + 1, 1, v33);
      }
      unint64_t v35 = v33[2];
      unint64_t v34 = v33[3];
      if (v35 >= v34 >> 1) {
        uint64_t v33 = sub_1AFD352FC((void *)(v34 > 1), v35 + 1, 1, v33);
      }
      v33[2] = v35 + 1;
      uint64_t v36 = &v33[2 * v35];
      v36[4] = 0x6E6F697461727564;
      v36[5] = 0xE800000000000000;
      uint64_t v70 = v33;
      swift_endAccess();
      int v32 = (int)v64;
    }
    char v69 = 3;
    sub_1AFFCBAF8();
    v57[1] = v68;
    id v58 = a1;
    if (v68)
    {
      uint64_t v39 = v63;
    }
    else
    {
      swift_beginAccess();
      uint64_t v40 = v70;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v40 = sub_1AFD352FC(0, v40[2] + 1, 1, v40);
      }
      uint64_t v39 = v63;
      unint64_t v42 = v40[2];
      unint64_t v41 = v40[3];
      if (v42 >= v41 >> 1) {
        uint64_t v40 = sub_1AFD352FC((void *)(v41 > 1), v42 + 1, 1, v40);
      }
      v40[2] = v42 + 1;
      uint64_t v43 = (char *)&v40[2 * v42];
      strcpy(v43 + 32, "playPosition");
      v43[45] = 0;
      *((_WORD *)v43 + 23) = -5120;
      uint64_t v70 = v40;
      swift_endAccess();
    }
    double v44 = v59;
    if (!v18) {
      double v44 = 0.0;
    }
    uint64_t v63 = *(void *)&v44;
    id v64 = v11;
    if (v18) {
      unint64_t v45 = v18;
    }
    else {
      unint64_t v45 = 0xE000000000000000;
    }
    uint64_t v46 = (uint64_t)v66;
    sub_1AFE6FB24((uint64_t)v66, v39);
    if (v32) {
      double v31 = 0.0;
    }
    uint64_t v47 = sub_1AFFCBA78();
    swift_bridgeObjectRelease();
    if (v47 == 2) {
      char v48 = 2;
    }
    else {
      char v48 = v47 == 1;
    }
    sub_1AFD48D50(v46);
    uint64_t v49 = (uint64_t)v61;
    uint64_t *v61 = v63;
    *(void *)(v49 + 8) = v45;
    uint64_t v50 = v60;
    sub_1AFDE5CFC(v39, v49 + *(int *)(v60 + 20));
    *(double *)(v49 + *(int *)(v50 + 24)) = v31;
    *(unsigned char *)(v49 + *(int *)(v50 + 28)) = v48;
    swift_beginAccess();
    uint64_t v51 = v70;
    if (v70[2])
    {
      sub_1AFF7486C(0, (unint64_t *)&qword_1EB81A100, (uint64_t (*)(uint64_t))sub_1AFD3AE64, MEMORY[0x1E4FBBE00]);
      uint64_t v52 = swift_allocObject();
      *(_OWORD *)(v52 + 16) = xmmword_1AFFD05F0;
      sub_1AFD3ABD0();
      *(void *)(v52 + 56) = v53;
      *(void *)(v52 + 64) = sub_1AFF75AEC((unint64_t *)&qword_1EB819DE0, (void (*)(uint64_t))sub_1AFD3ABD0);
      *(void *)(v52 + 32) = v51;
      sub_1AFD2C4F4();
      sub_1AFFC8E38();
      id v54 = (void *)sub_1AFFCB638();
      sub_1AFFCB478();
      sub_1AFFCA878();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AFD2C4F4();
      id v54 = (void *)sub_1AFFCB638();
      sub_1AFFCB478();
      sub_1AFFCA878();
    }
    uint64_t v55 = v62;
    uint64_t v56 = v65;

    (*(void (**)(char *, char *))(v56 + 8))(v13, v64);
    swift_bridgeObjectRelease();
    sub_1AFF748D0(v49, v55);
    uint64_t v37 = (uint64_t)v58;
  }
  return __swift_destroy_boxed_opaque_existential_1(v37);
}

uint64_t sub_1AFF73B88(void *a1)
{
  sub_1AFF74934(0, &qword_1E9AFD028, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = &v9[-v6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFF74818();
  sub_1AFFCBE78();
  v9[15] = 0;
  sub_1AFFCBC08();
  if (v1) {
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  }
  type metadata accessor for AudioUpsellConfig();
  v9[14] = 1;
  sub_1AFF7486C(0, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  sub_1AFF74998();
  sub_1AFFCBC58();
  v9[13] = 2;
  sub_1AFFCBC28();
  v9[12] = 3;
  sub_1AFFCBC08();
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFF73E24(unsigned __int8 *a1, char *a2)
{
  return sub_1AFDEEAAC(*a1, *a2);
}

uint64_t sub_1AFF73E30()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFF73F10()
{
  sub_1AFFCAF68();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFF73FD8()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFF740B4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFF759B0();
  *a1 = result;
  return result;
}

void sub_1AFF740E4(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xEA00000000007265;
  uint64_t v3 = 0x696669746E656469;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE300000000000000;
      uint64_t v3 = 7107189;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x6E6F697461727564;
      *(void *)(a1 + 8) = 0xE800000000000000;
      break;
    case 3:
      strcpy((char *)a1, "playPosition");
      *(unsigned char *)(a1 + 13) = 0;
      *(_WORD *)(a1 + 14) = -5120;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_1AFF74184()
{
  uint64_t result = 0x696669746E656469;
  switch(*v0)
  {
    case 1:
      uint64_t result = 7107189;
      break;
    case 2:
      uint64_t result = 0x6E6F697461727564;
      break;
    case 3:
      uint64_t result = 0x69736F5079616C70;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1AFF74218@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFF759B0();
  *a1 = result;
  return result;
}

uint64_t sub_1AFF74240(uint64_t a1)
{
  unint64_t v2 = sub_1AFF74818();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFF7427C(uint64_t a1)
{
  unint64_t v2 = sub_1AFF74818();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFF742B8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1AFF73218(a1, a2);
}

uint64_t sub_1AFF742D0(void *a1)
{
  return sub_1AFF73B88(a1);
}

uint64_t sub_1AFF742F0(void *a1, void *a2)
{
  uint64_t v4 = sub_1AFFC96E8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v40 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFF759FC();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v7);
  unint64_t v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFF7486C(0, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v37 - v15;
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v37 - v18;
  if (*a1 == *a2 && a1[1] == a2[1] || (char v20 = 0, (sub_1AFFCBCE8() & 1) != 0))
  {
    unint64_t v21 = (int *)type metadata accessor for AudioUpsellConfig();
    uint64_t v22 = v21[5];
    char v38 = a1;
    sub_1AFE6FB24((uint64_t)a1 + v22, (uint64_t)v19);
    uint64_t v23 = v21[5];
    uint64_t v39 = a2;
    sub_1AFE6FB24((uint64_t)a2 + v23, (uint64_t)v16);
    uint64_t v24 = (uint64_t)&v10[*(int *)(v8 + 48)];
    sub_1AFE6FB24((uint64_t)v19, (uint64_t)v10);
    sub_1AFE6FB24((uint64_t)v16, v24);
    uint64_t v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (v25((uint64_t)v10, 1, v4) == 1)
    {
      sub_1AFD48D50((uint64_t)v16);
      sub_1AFD48D50((uint64_t)v19);
      if (v25(v24, 1, v4) == 1)
      {
        sub_1AFD48D50((uint64_t)v10);
        goto LABEL_11;
      }
    }
    else
    {
      sub_1AFE6FB24((uint64_t)v10, (uint64_t)v13);
      if (v25(v24, 1, v4) != 1)
      {
        uint64_t v26 = v40;
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v40, v24, v4);
        sub_1AFF75AEC(&qword_1EB818B70, MEMORY[0x1E4F276F0]);
        char v27 = sub_1AFFCADD8();
        unint64_t v28 = *(void (**)(char *, uint64_t))(v5 + 8);
        v28(v26, v4);
        sub_1AFD48D50((uint64_t)v16);
        sub_1AFD48D50((uint64_t)v19);
        v28(v13, v4);
        sub_1AFD48D50((uint64_t)v10);
        if ((v27 & 1) == 0)
        {
LABEL_16:
          char v20 = 0;
          return v20 & 1;
        }
LABEL_11:
        if (*(double *)((char *)v38 + v21[6]) == *(double *)((char *)v39 + v21[6]))
        {
          unint64_t v29 = 0xE900000000000067;
          uint64_t v30 = 0x6E696E6E69676562;
          uint64_t v31 = v21[7];
          int v32 = *((unsigned __int8 *)v38 + v31);
          int v33 = *((unsigned __int8 *)v39 + v31);
          if (v32)
          {
            if (v32 == 1)
            {
              unint64_t v34 = 0xE600000000000000;
              uint64_t v35 = 0x656C6464696DLL;
              if (!v33) {
                goto LABEL_22;
              }
            }
            else
            {
              unint64_t v34 = 0xE300000000000000;
              uint64_t v35 = 6581861;
              if (!v33) {
                goto LABEL_22;
              }
            }
          }
          else
          {
            uint64_t v35 = 0x6E696E6E69676562;
            unint64_t v34 = 0xE900000000000067;
            if (!v33) {
              goto LABEL_22;
            }
          }
          if (v33 != 1)
          {
            unint64_t v29 = 0xE300000000000000;
            if (v35 != 6581861) {
              goto LABEL_27;
            }
            goto LABEL_25;
          }
          unint64_t v29 = 0xE600000000000000;
          uint64_t v30 = 0x656C6464696DLL;
LABEL_22:
          if (v35 != v30) {
            goto LABEL_27;
          }
LABEL_25:
          if (v34 == v29)
          {
            swift_bridgeObjectRelease_n();
            char v20 = 1;
            return v20 & 1;
          }
LABEL_27:
          char v20 = sub_1AFFCBCE8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return v20 & 1;
        }
        goto LABEL_16;
      }
      sub_1AFD48D50((uint64_t)v16);
      sub_1AFD48D50((uint64_t)v19);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v4);
    }
    sub_1AFF75A90((uint64_t)v10);
    char v20 = 0;
  }
  return v20 & 1;
}

uint64_t sub_1AFF747CC()
{
  unint64_t v0 = sub_1AFFCBA78();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

unint64_t sub_1AFF74818()
{
  unint64_t result = qword_1E9AFD020;
  if (!qword_1E9AFD020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFD020);
  }
  return result;
}

void sub_1AFF7486C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1AFF748D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AudioUpsellConfig();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1AFF74934(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1AFF74818();
    unint64_t v7 = a3(a1, &type metadata for AudioUpsellConfig.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1AFF74998()
{
  unint64_t result = qword_1E9AFD030;
  if (!qword_1E9AFD030)
  {
    sub_1AFF7486C(255, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
    sub_1AFF75AEC(&qword_1EB818B68, MEMORY[0x1E4F276F0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFD030);
  }
  return result;
}

unint64_t sub_1AFF74A6C()
{
  unint64_t result = qword_1E9AFD038;
  if (!qword_1E9AFD038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFD038);
  }
  return result;
}

void *sub_1AFF74AC0(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1AFFC8E48();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    unint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1AFFC96E8();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    sub_1AFFC8E38();
    if (v13(v10, 1, v11))
    {
      sub_1AFF7486C(0, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = a3[7];
    *(void *)((char *)v4 + a3[6]) = *(void *)((char *)a2 + a3[6]);
    *((unsigned char *)v4 + v16) = *((unsigned char *)a2 + v16);
  }
  return v4;
}

uint64_t sub_1AFF74C84(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1AFFC96E8();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

void *sub_1AFF74D54(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1AFFC96E8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  sub_1AFFC8E38();
  if (v12(v9, 1, v10))
  {
    sub_1AFF7486C(0, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *((unsigned char *)a1 + v14) = *((unsigned char *)a2 + v14);
  return a1;
}

void *sub_1AFF74EC8(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1AFFC96E8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1AFF7486C(0, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  return a1;
}

_OWORD *sub_1AFF750AC(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1AFFC96E8();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_1AFF7486C(0, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *((unsigned char *)a1 + v12) = *((unsigned char *)a2 + v12);
  return a1;
}

void *sub_1AFF75210(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1AFFC96E8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_1AFF7486C(0, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  uint64_t v16 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *((unsigned char *)a1 + v16) = *((unsigned char *)a2 + v16);
  return a1;
}

uint64_t sub_1AFF753E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1AFF753F4);
}

uint64_t sub_1AFF753F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1AFF7486C(0, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1AFF754D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1AFF754E8);
}

uint64_t sub_1AFF754E8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1AFF7486C(0, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1AFF755C0()
{
  sub_1AFF7486C(319, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unsigned char *storeEnumTagSinglePayload for AudioUpsellConfig.PlayPosition(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFF7576CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioUpsellConfig.PlayPosition()
{
  return &type metadata for AudioUpsellConfig.PlayPosition;
}

unsigned char *storeEnumTagSinglePayload for AudioUpsellConfig.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFF75870);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioUpsellConfig.CodingKeys()
{
  return &type metadata for AudioUpsellConfig.CodingKeys;
}

unint64_t sub_1AFF758AC()
{
  unint64_t result = qword_1E9AFD040;
  if (!qword_1E9AFD040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFD040);
  }
  return result;
}

unint64_t sub_1AFF75904()
{
  unint64_t result = qword_1E9AFD048;
  if (!qword_1E9AFD048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFD048);
  }
  return result;
}

unint64_t sub_1AFF7595C()
{
  unint64_t result = qword_1E9AFD050;
  if (!qword_1E9AFD050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFD050);
  }
  return result;
}

uint64_t sub_1AFF759B0()
{
  unint64_t v0 = sub_1AFFCBA78();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

void sub_1AFF759FC()
{
  if (!qword_1EB818B80)
  {
    sub_1AFF7486C(255, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB818B80);
    }
  }
}

uint64_t sub_1AFF75A90(uint64_t a1)
{
  sub_1AFF759FC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1AFF75AEC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for DummyClass()
{
  return self;
}

id sub_1AFF75B58()
{
  type metadata accessor for DummyClass();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id result = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  qword_1EB831AF8 = (uint64_t)result;
  return result;
}

uint64_t sub_1AFF75BB0(uint64_t a1)
{
  uint64_t v3 = sub_1AFFC99F8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unsigned int v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = MEMORY[0x1E4FBC860];
  if (v7)
  {
    v13[1] = v1;
    uint64_t v14 = MEMORY[0x1E4FBC860];
    sub_1AFD9DD70(0, v7, 0);
    uint64_t v8 = v14;
    uint64_t v9 = a1 + 40;
    do
    {
      sub_1AFFC8E38();
      sub_1AFFC9A08();
      uint64_t v14 = v8;
      unint64_t v11 = *(void *)(v8 + 16);
      unint64_t v10 = *(void *)(v8 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_1AFD9DD70(v10 > 1, v11 + 1, 1);
        uint64_t v8 = v14;
      }
      v9 += 16;
      *(void *)(v8 + 16) = v11 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v11, v6, v3);
      --v7;
    }
    while (v7);
  }
  return v8;
}

double sub_1AFF75D4C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  if (*(void *)(a2 + 16) && (unint64_t v5 = sub_1AFD7A010(a1), (v6 & 1) != 0))
  {
    uint64_t v7 = *(void *)(a2 + 56) + 32 * v5;
    sub_1AFD38AF4(v7, (uint64_t)a3);
  }
  else
  {
    double result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_1AFF75DB0@<X0>(char a1@<W0>, uint64_t a2@<X2>, void *a3@<X8>)
{
  sub_1AFF92FF4(0, &qword_1EB819F68, (uint64_t (*)(void))sub_1AFF88FB0, (uint64_t)&type metadata for AppConfiguration.CodingKeys, MEMORY[0x1E4FBBDC0]);
  sub_1AFF92BA4();
  sub_1AFFCBAF8();
  if (v3) {
    return swift_release();
  }
  if (!v9) {
    sub_1AFF88E80(a1, a2);
  }
  uint64_t result = swift_release();
  *a3 = v8;
  a3[1] = v9;
  a3[2] = v10;
  a3[3] = v11;
  return result;
}

uint64_t sub_1AFF75EB0@<X0>(char a1@<W0>, uint64_t a2@<X2>, void *a3@<X8>)
{
  sub_1AFF92FF4(0, &qword_1EB819F68, (uint64_t (*)(void))sub_1AFF88FB0, (uint64_t)&type metadata for AppConfiguration.CodingKeys, MEMORY[0x1E4FBBDC0]);
  sub_1AFF93210();
  sub_1AFFCBAF8();
  if (v3) {
    return swift_release();
  }
  if (!v9) {
    sub_1AFF88E80(a1, a2);
  }
  uint64_t result = swift_release();
  *a3 = v8;
  a3[1] = v9;
  a3[2] = v10;
  a3[3] = v11;
  a3[4] = v12;
  a3[5] = v13;
  a3[6] = v14;
  a3[7] = v15;
  a3[8] = v16;
  return result;
}

uint64_t sub_1AFF75FEC@<X0>(char a1@<W0>, uint64_t a2@<X2>, void *a3@<X8>)
{
  sub_1AFF92FF4(0, &qword_1EB819F68, (uint64_t (*)(void))sub_1AFF88FB0, (uint64_t)&type metadata for AppConfiguration.CodingKeys, MEMORY[0x1E4FBBDC0]);
  sub_1AFF931BC();
  sub_1AFFCBAF8();
  if (v3) {
    return swift_release();
  }
  if (v8 == 2) {
    sub_1AFF88E80(a1, a2);
  }
  uint64_t result = swift_release();
  *a3 = v8;
  a3[1] = v9;
  a3[2] = v10;
  return result;
}

uint64_t sub_1AFF760F4@<X0>(char a1@<W0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  v10[527] = a1;
  sub_1AFF92FF4(0, &qword_1EB819F68, (uint64_t (*)(void))sub_1AFF88FB0, (uint64_t)&type metadata for AppConfiguration.CodingKeys, MEMORY[0x1E4FBBDC0]);
  sub_1AFF92BF8();
  sub_1AFFCBAF8();
  if (v3) {
    return swift_release();
  }
  sub_1AFF793E8((uint64_t)v10, (uint64_t)v8, &qword_1EB819618, (uint64_t)&type metadata for PaidBundleConfiguration);
  sub_1AFF793E8((uint64_t)v8, (uint64_t)v9, &qword_1EB819618, (uint64_t)&type metadata for PaidBundleConfiguration);
  if (sub_1AFF79468((uint64_t)v9) == 1) {
    sub_1AFF88E80(a1, a2);
  }
  swift_release();
  return sub_1AFF793E8((uint64_t)v8, a3, &qword_1EB819618, (uint64_t)&type metadata for PaidBundleConfiguration);
}

uint64_t sub_1AFF76244@<X0>(char a1@<W0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_1AFF92FF4(0, &qword_1EB819F68, (uint64_t (*)(void))sub_1AFF88FB0, (uint64_t)&type metadata for AppConfiguration.CodingKeys, MEMORY[0x1E4FBBDC0]);
  sub_1AFF92C4C();
  sub_1AFFCBAF8();
  if (v3) {
    return swift_release();
  }
  if (v8 == 1) {
    sub_1AFF88E80(a1, a2);
  }
  uint64_t result = swift_release();
  *(void *)a3 = v8;
  *(void *)(a3 + 8) = v9;
  *(void *)(a3 + 16) = v10;
  *(void *)(a3 + 24) = v11;
  *(void *)(a3 + 32) = v12;
  *(void *)(a3 + 40) = v13;
  *(void *)(a3 + 48) = v14;
  *(void *)(a3 + 56) = v15;
  *(unsigned char *)(a3 + 64) = v16;
  return result;
}

uint64_t sub_1AFF76388@<X0>(char a1@<W0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  v10[183] = a1;
  sub_1AFF92FF4(0, &qword_1EB819F68, (uint64_t (*)(void))sub_1AFF88FB0, (uint64_t)&type metadata for AppConfiguration.CodingKeys, MEMORY[0x1E4FBBDC0]);
  sub_1AFF93168();
  sub_1AFFCBAF8();
  if (v3) {
    return swift_release();
  }
  sub_1AFF793E8((uint64_t)v10, (uint64_t)v8, &qword_1EB8197B8, (uint64_t)&type metadata for ArticleScoringConfiguration);
  sub_1AFF793E8((uint64_t)v8, (uint64_t)v9, &qword_1EB8197B8, (uint64_t)&type metadata for ArticleScoringConfiguration);
  if (sub_1AFF794A4((uint64_t)v9) == 1) {
    sub_1AFF88E80(a1, a2);
  }
  swift_release();
  return sub_1AFF793E8((uint64_t)v8, a3, &qword_1EB8197B8, (uint64_t)&type metadata for ArticleScoringConfiguration);
}

uint64_t sub_1AFF764D8(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v3 = v2;
  char v5 = v4;
  uint64_t v7 = v6;
  v11[2287] = v4;
  sub_1AFF92FF4(0, &qword_1EB819F68, (uint64_t (*)(void))sub_1AFF88FB0, (uint64_t)&type metadata for AppConfiguration.CodingKeys, MEMORY[0x1E4FBBDC0]);
  sub_1AFF93114();
  sub_1AFFCBAF8();
  if (v1) {
    return swift_release();
  }
  sub_1AFF793E8((uint64_t)v11, (uint64_t)&v9, &qword_1EB819838, (uint64_t)&type metadata for NewsPersonalizationTreatment);
  sub_1AFF793E8((uint64_t)&v9, (uint64_t)v10, &qword_1EB819838, (uint64_t)&type metadata for NewsPersonalizationTreatment);
  if (sub_1AFF794C0((uint64_t)v10) == 1) {
    sub_1AFF88E80(v5, v3);
  }
  swift_release();
  return sub_1AFF793E8((uint64_t)&v9, v7, &qword_1EB819838, (uint64_t)&type metadata for NewsPersonalizationTreatment);
}

uint64_t sub_1AFF7664C@<X0>(char a1@<W0>, uint64_t a2@<X2>, void *a3@<X8>)
{
  sub_1AFF92FF4(0, &qword_1EB819F68, (uint64_t (*)(void))sub_1AFF88FB0, (uint64_t)&type metadata for AppConfiguration.CodingKeys, MEMORY[0x1E4FBBDC0]);
  sub_1AFF930C0();
  sub_1AFFCBAF8();
  if (v3) {
    return swift_release();
  }
  if (v9 == 1) {
    sub_1AFF88E80(a1, a2);
  }
  uint64_t result = swift_release();
  *a3 = v8;
  a3[1] = v9;
  a3[2] = v10;
  a3[3] = v11;
  return result;
}

uint64_t sub_1AFF76750@<X0>(char a1@<W0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_1AFF92FF4(0, &qword_1EB819F68, (uint64_t (*)(void))sub_1AFF88FB0, (uint64_t)&type metadata for AppConfiguration.CodingKeys, MEMORY[0x1E4FBBDC0]);
  sub_1AFF92CA0();
  sub_1AFFCBAF8();
  if (v3) {
    return swift_release();
  }
  if (v12) {
    sub_1AFF88E80(a1, a2);
  }
  uint64_t result = swift_release();
  *(void *)a3 = v8;
  *(void *)(a3 + 8) = v9;
  *(void *)(a3 + 16) = v10;
  *(void *)(a3 + 24) = v11;
  *(unsigned char *)(a3 + 32) = v12;
  return result;
}

uint64_t sub_1AFF76860@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  if (a2 && (uint64_t v5 = *(void *)(v3 + 1192), (v6 = *(void *)(v5 + 16)) != 0))
  {
    uint64_t v7 = a2;
    uint64_t v8 = result;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    while (1)
    {
      uint64_t v11 = *(v9 - 4);
      uint64_t v10 = *(v9 - 3);
      uint64_t v12 = *((unsigned __int8 *)v9 - 16);
      uint64_t v14 = *(v9 - 1);
      uint64_t v13 = *v9;
      if (v11 == v8 && v10 == v7)
      {
        uint64_t v11 = v8;
        goto LABEL_13;
      }
      uint64_t result = sub_1AFFCBCE8();
      if (result) {
        break;
      }
      v9 += 5;
      if (!--v6) {
        goto LABEL_10;
      }
    }
    uint64_t v7 = v10;
LABEL_13:
    *a3 = v11;
    a3[1] = v7;
    a3[2] = v12;
    a3[3] = v14;
    a3[4] = v13;
    sub_1AFFC8E38();
    return sub_1AFFC8E38();
  }
  else
  {
LABEL_10:
    a3[4] = 0;
    *(_OWORD *)a3 = 0u;
    *((_OWORD *)a3 + 1) = 0u;
  }
  return result;
}

void *sub_1AFF76958@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void **)(v1 + 408);
  type metadata accessor for EndpointConfiguration.Defaults();
  swift_initStaticObject();
  uint64_t v4 = sub_1AFD9780C();
  uint64_t v6 = v5;
  uint64_t v7 = v3[2];
  if (v7)
  {
    uint64_t v8 = v4;
    memcpy(__dst, v3 + 4, sizeof(__dst));
    if (__dst[0] != v8 || __dst[1] != v6)
    {
      uint64_t v10 = (char *)(v3 + 38);
      do
      {
        if (sub_1AFFCBCE8()) {
          break;
        }
        if (!--v7) {
          goto LABEL_15;
        }
        memcpy(__dst, v10, sizeof(__dst));
        BOOL v11 = __dst[0] == v8 && __dst[1] == v6;
        v10 += 272;
      }
      while (!v11);
    }
    sub_1AFD9B5DC((uint64_t)__dst);
    swift_bridgeObjectRelease();
    return memcpy(a1, __dst, 0x110uLL);
  }
  else
  {
LABEL_15:
    sub_1AFD973BC(0, 0, 0, 0, 0, 0, 0, 0, (uint64_t *)a1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0);
    return (void *)swift_bridgeObjectRelease();
  }
}

double sub_1AFF76AC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, double a13, double a14, double a15, double a16, char a17, double a18, char a19, uint64_t a20,char a21,uint64_t a22,char a23,uint64_t a24,char a25,uint64_t a26,char a27,char a28,double a29,char a30,char a31,char a32,uint64_t a33,char a34,uint64_t a35,char a36,double a37,char a38,double a39,char a40,double a41,char a42,double a43,char a44,double a45,char a46,unint64_t a47,unint64_t a48,double a49,char a50,double a51,char a52,double a53,char a54,double a55,char a56,double a57,char a58,double a59,char a60,double a61,char a62,double a63)
{
  MEMORY[0x1F4188790](a1);
  double v79 = v78;
  char v496 = v80;
  uint64_t v494 = v81;
  char v493 = v82;
  uint64_t v491 = v83;
  uint64_t v499 = v84;
  uint64_t v500 = v85;
  char v497 = v86;
  uint64_t v88 = v87;
  uint64_t v89 = STACK[0x3E50];
  uint64_t v90 = STACK[0x3E48];
  unint64_t v91 = STACK[0x3E40];
  unint64_t v92 = *(void *)(STACK[0x3E10] + 8);
  unint64_t v512 = *(void *)STACK[0x3E10];
  uint64_t v515 = *(void *)(STACK[0x3E10] + 16);
  uint64_t v93 = *(void *)(STACK[0x3E10] + 24);
  unint64_t v518 = *(void *)STACK[0x3E18];
  unint64_t v529 = *(void *)(STACK[0x3E18] + 8);
  uint64_t v509 = *(void *)(STACK[0x3E18] + 16);
  unint64_t v517 = *(void *)(STACK[0x3E18] + 24);
  unint64_t v514 = *(void *)(STACK[0x3E18] + 32);
  uint64_t v510 = *(void *)(STACK[0x3E18] + 40);
  unint64_t v511 = *(void *)(STACK[0x3E18] + 48);
  uint64_t v519 = *(void *)(STACK[0x3E18] + 56);
  unint64_t v513 = *(void *)(STACK[0x3E18] + 64);
  uint64_t v528 = *(unsigned __int8 *)STACK[0x3E20];
  double v94 = *(double *)(STACK[0x3E20] + 16);
  double v484 = *(double *)(STACK[0x3E20] + 8);
  sub_1AFF793E8(STACK[0x3E38], (uint64_t)v586, &qword_1EB819618, (uint64_t)&type metadata for PaidBundleConfiguration);
  uint64_t v95 = *(void *)v91;
  uint64_t v522 = *(void *)(v91 + 8);
  uint64_t v96 = *(void *)(v91 + 16);
  uint64_t v523 = *(void *)(v91 + 24);
  uint64_t v97 = *(void *)(v91 + 32);
  uint64_t v520 = *(void *)(v91 + 40);
  uint64_t v502 = *(void *)(v91 + 48);
  uint64_t v521 = *(void *)(v91 + 56);
  char v98 = *(unsigned char *)(v91 + 64);
  sub_1AFF793E8(v90, (uint64_t)v587, &qword_1EB8197B8, (uint64_t)&type metadata for ArticleScoringConfiguration);
  sub_1AFF793E8(v89, (uint64_t)v588, &qword_1EB819838, (uint64_t)&type metadata for NewsPersonalizationTreatment);
  unint64_t v516 = v92;
  if (!v92)
  {
    unint64_t v516 = 0x80000001AFFF2560;
    uint64_t v515 = MEMORY[0x1E4FBC860];
    uint64_t v93 = 0x40D5180000000000;
    unint64_t v512 = 0xD000000000000017;
  }
  unint64_t v99 = STACK[0x40E0];
  long long v100 = (uint64_t *)STACK[0x4068];
  if (!v529)
  {
    uint64_t v519 = 0;
    unint64_t v518 = 0xD00000000000002FLL;
    unint64_t v517 = 0xD00000000000005ELL;
    unint64_t v514 = 0x80000001AFFFC450;
    unint64_t v529 = 0x80000001AFFFC420;
    unint64_t v513 = 0xE000000000000000;
    unint64_t v511 = 0xE200000000000000;
    uint64_t v510 = 23899;
    uint64_t v509 = MEMORY[0x1E4FBC860];
  }
  uint64_t v102 = *(void *)v99;
  uint64_t v101 = *(void *)(v99 + 8);
  uint64_t v525 = *(void *)(v99 + 16);
  uint64_t v524 = *(void *)(v99 + 24);
  uint64_t v506 = *v100;
  uint64_t v505 = v100[1];
  uint64_t v103 = v100[3];
  uint64_t v504 = v100[2];
  char v104 = *(unsigned char *)(v99 + 32);
  sub_1AFF793E8((uint64_t)v586, (uint64_t)v585, &qword_1EB819618, (uint64_t)&type metadata for PaidBundleConfiguration);
  uint64_t v507 = v103;
  if (sub_1AFF79468((uint64_t)v585) == 1)
  {
    sub_1AFF79480((uint64_t)v571);
    sub_1AFF793E8((uint64_t)v571, (uint64_t)__src, &qword_1EB818EC8, (uint64_t)&type metadata for FlexiblePaywall);
    sub_1AFDC3A60(0, 0, 2, 2, 2, 2, 0, 1, v584, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0,
      0,
      0,
      0,
      0,
      0,
      0,
      1,
      0,
      1,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      (uint64_t)__src,
      0,
      1,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      1,
      0,
      1,
      0,
      1,
      2,
      2,
      0,
      1,
      0,
      2);
  }
  else
  {
    sub_1AFF793E8((uint64_t)v586, (uint64_t)v584, &qword_1EB819618, (uint64_t)&type metadata for PaidBundleConfiguration);
  }
  memcpy(v583, v584, sizeof(v583));
  double v423 = v79;
  if (v95 == 1)
  {
    uint64_t v95 = 0;
    uint64_t v274 = 0;
    uint64_t v275 = 0;
    uint64_t v523 = 0;
    uint64_t v521 = 86400;
    uint64_t v520 = 1;
    uint64_t v522 = 0xFFFFFFFFLL;
  }
  else
  {
    BYTE4(v275) = v96 & 1;
    LOBYTE(v275) = v97 & 1;
    BYTE4(v274) = v502 & 1;
    LOBYTE(v274) = v98 & 1;
  }
  sub_1AFF793E8((uint64_t)v587, (uint64_t)v582, &qword_1EB8197B8, (uint64_t)&type metadata for ArticleScoringConfiguration);
  if (sub_1AFF794A4((uint64_t)v582) == 1)
  {
    sub_1AFE84D24(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (double *)&v572, 0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1,
      0.0,
      1,
      0.0,
      1,
      0.0,
      1,
      0.0,
      1,
      0.0,
      1,
      0.0,
      1,
      0.0,
      1,
      0.0,
      1,
      0.0,
      1,
      0.0,
      1,
      0.0,
      1);
  }
  else
  {
    sub_1AFF793E8((uint64_t)v587, (uint64_t)v571, &qword_1EB8197B8, (uint64_t)&type metadata for ArticleScoringConfiguration);
    long long v578 = v571[6];
    long long v579 = v571[7];
    long long v580 = v571[8];
    long long v581 = v571[9];
    long long v574 = v571[2];
    long long v575 = v571[3];
    long long v576 = v571[4];
    long long v577 = v571[5];
    long long v572 = v571[0];
    long long v573 = v571[1];
  }
  char v105 = STACK[0x3FA8];
  sub_1AFF793E8((uint64_t)v588, (uint64_t)v571, &qword_1EB819838, (uint64_t)&type metadata for NewsPersonalizationTreatment);
  uint64_t v526 = v102;
  uint64_t v503 = v95;
  if (sub_1AFF794C0((uint64_t)v571) == 1)
  {
    sub_1AFF794DC(v569);
    sub_1AFF793E8((uint64_t)v569, (uint64_t)__src, (unint64_t *)&qword_1EB818E40, (uint64_t)&type metadata for ScoringConfig);
    long long v106 = &__src[1136];
    long long v107 = v569;
    long long v108 = (unint64_t *)&qword_1EB818E40;
    long long v109 = &type metadata for ScoringConfig;
  }
  else
  {
    long long v108 = &qword_1EB819838;
    long long v109 = &type metadata for NewsPersonalizationTreatment;
    long long v107 = v588;
    long long v106 = __src;
  }
  sub_1AFF793E8((uint64_t)v107, (uint64_t)v106, v108, (uint64_t)v109);
  memcpy(v570, __src, sizeof(v570));
  char v110 = STACK[0x3FC8];
  if (v105)
  {
    objc_msgSend(self, sel_fc_timeIntervalOneDay);
    unint64_t v277 = v111;
  }
  else
  {
    unint64_t v277 = STACK[0x3FA0];
  }
  unint64_t v112 = STACK[0x4098];
  uint64_t v527 = v101;
  if (v110)
  {
    objc_msgSend(self, sel_fc_timeIntervalOneDay);
    double v276 = v113 * 15.0;
  }
  else
  {
    double v276 = *(double *)&STACK[0x3FC0];
  }
  unint64_t v114 = STACK[0x4138];
  unint64_t v115 = STACK[0x4020];
  unint64_t v116 = STACK[0x4010];
  unint64_t v117 = STACK[0x3F60];
  unint64_t v474 = STACK[0x3EA0];
  unint64_t v472 = STACK[0x3E90];
  unint64_t v470 = STACK[0x3E80];
  unint64_t v467 = STACK[0x3E70];
  unint64_t v465 = STACK[0x3DA8];
  unint64_t v463 = STACK[0x3D98];
  if (v112) {
    uint64_t v118 = (void *)v112;
  }
  else {
    uint64_t v118 = &unk_1F087A890;
  }
  unint64_t v119 = STACK[0x4178];
  uint64_t v120 = sub_1AFD764F4((uint64_t)v118);
  swift_bridgeObjectRelease();
  double v480 = *(double *)&v114;
  unint64_t v478 = v115;
  if (v104)
  {
    uint64_t v527 = 0x7FFFFFFFFFFFFFFFLL;
    uint64_t v526 = 0x7FEFFFFFFFFFFFFFLL;
    uint64_t v525 = 0x7FFFFFFFFFFFFFFFLL;
    uint64_t v524 = 0x7FFFFFFFFFFFFFFFLL;
  }
  char v462 = STACK[0x41B9];
  char v460 = STACK[0x41B8];
  unint64_t v490 = STACK[0x41B0];
  unint64_t v489 = STACK[0x41A8];
  unint64_t v488 = STACK[0x41A0];
  char v459 = STACK[0x4198];
  unint64_t v458 = STACK[0x4190];
  char v457 = STACK[0x4188];
  unint64_t v456 = STACK[0x4180];
  char v287 = STACK[0x4170];
  unint64_t v292 = STACK[0x4168];
  char v291 = STACK[0x4160];
  unint64_t v290 = STACK[0x4158];
  char v289 = STACK[0x4150];
  unint64_t v288 = STACK[0x4148];
  char v121 = STACK[0x4141];
  char v303 = STACK[0x4140];
  char v380 = STACK[0x4130];
  unint64_t v375 = STACK[0x4128];
  char v369 = STACK[0x4120];
  unint64_t v308 = STACK[0x4118];
  char v307 = STACK[0x4110];
  unint64_t v306 = STACK[0x4108];
  unint64_t v122 = STACK[0x4100];
  unint64_t v123 = STACK[0x40F8];
  unint64_t v487 = STACK[0x40F0];
  unint64_t v486 = STACK[0x40E8];
  char v301 = STACK[0x40D8];
  unint64_t v300 = STACK[0x40D0];
  char v299 = STACK[0x40C8];
  unint64_t v298 = STACK[0x40C0];
  char v297 = STACK[0x40B8];
  unint64_t v296 = STACK[0x40B0];
  char v295 = STACK[0x40A8];
  unint64_t v294 = STACK[0x40A0];
  char v293 = STACK[0x4090];
  unint64_t v302 = STACK[0x4088];
  unint64_t v304 = STACK[0x4080];
  unint64_t v305 = STACK[0x4078];
  unint64_t v367 = STACK[0x4070];
  char v309 = STACK[0x4060];
  unint64_t v362 = STACK[0x4058];
  char v469 = STACK[0x4050];
  unint64_t v483 = STACK[0x4048];
  unint64_t v310 = STACK[0x4040];
  unint64_t v350 = STACK[0x4038];
  unint64_t v346 = STACK[0x4030];
  char v311 = STACK[0x4028];
  char v312 = STACK[0x4018];
  char v320 = STACK[0x4008];
  unint64_t v316 = STACK[0x4000];
  char v314 = STACK[0x3FF8];
  unint64_t v313 = STACK[0x3FF0];
  char v124 = STACK[0x3FE9];
  char v448 = STACK[0x3FE8];
  unint64_t v441 = STACK[0x3FE0];
  char v425 = STACK[0x3FD8];
  unint64_t v329 = STACK[0x3FD0];
  char v327 = STACK[0x3FB8];
  unint64_t v326 = STACK[0x3FB0];
  char v447 = STACK[0x3F99];
  char v325 = STACK[0x3F98];
  unint64_t v324 = STACK[0x3F90];
  unint64_t v393 = STACK[0x3F88];
  unint64_t v286 = STACK[0x3F80];
  unint64_t v125 = STACK[0x3F78];
  unint64_t v398 = STACK[0x3F70];
  char v318 = STACK[0x3F68];
  char v319 = STACK[0x3F58];
  unint64_t v323 = STACK[0x3F50];
  char v322 = STACK[0x3F48];
  unint64_t v332 = STACK[0x3F40];
  char v331 = STACK[0x3F38];
  unint64_t v337 = STACK[0x3F30];
  char v335 = STACK[0x3F28];
  unint64_t v126 = STACK[0x3F20];
  char v461 = STACK[0x3F18];
  unint64_t v482 = STACK[0x3F10];
  char v334 = STACK[0x3F08];
  unint64_t v437 = STACK[0x3F00];
  char v435 = STACK[0x3EF8];
  unint64_t v433 = STACK[0x3EF0];
  char v339 = STACK[0x3EE8];
  unint64_t v127 = STACK[0x3EE0];
  char v340 = STACK[0x3ED8];
  unint64_t v431 = STACK[0x3ED0];
  char v342 = STACK[0x3EC8];
  unint64_t v429 = STACK[0x3EC0];
  unint64_t v284 = STACK[0x3EB8];
  unint64_t v285 = STACK[0x3EB0];
  char v341 = STACK[0x3EA8];
  char v344 = STACK[0x3E98];
  char v348 = STACK[0x3E88];
  char v358 = STACK[0x3E78];
  char v356 = STACK[0x3E68];
  unint64_t v354 = STACK[0x3E60];
  char v128 = STACK[0x3E58];
  unint64_t v360 = STACK[0x3E30];
  unint64_t v409 = STACK[0x3E28];
  char v364 = STACK[0x3E08];
  unint64_t v416 = STACK[0x3E00];
  unint64_t v282 = STACK[0x3DF8];
  unint64_t v278 = STACK[0x3DF0];
  unint64_t v283 = STACK[0x3DE8];
  unint64_t v281 = STACK[0x3DE0];
  char v353 = STACK[0x3DD8];
  unint64_t v352 = STACK[0x3DD0];
  char v129 = STACK[0x3DC9];
  char v130 = STACK[0x3DC8];
  unint64_t v280 = STACK[0x3DC0];
  unint64_t v279 = STACK[0x3DB8];
  char v365 = STACK[0x3DB0];
  char v131 = STACK[0x3DA1];
  char v371 = STACK[0x3DA0];
  char v373 = STACK[0x3D90];
  uint64_t v132 = a70;
  char v133 = a64;
  char v134 = a38;
  char v135 = a31;
  char v136 = a30;
  char v137 = a28;
  char v138 = a27;
  uint64_t v139 = a26;
  char v140 = a25;
  char v141 = a19;
  char v142 = a17;
  uint64_t v508 = v93;
  if (v119)
  {
    uint64_t v397 = v119;
  }
  else
  {
    char v273 = STACK[0x4141];
    char v272 = STACK[0x3FE9];
    char v271 = STACK[0x3E58];
    char v270 = STACK[0x3DC9];
    unint64_t v269 = STACK[0x3EE0];
    unint64_t v267 = STACK[0x4100];
    unint64_t v268 = STACK[0x3F20];
    unint64_t v265 = STACK[0x3F78];
    unint64_t v266 = STACK[0x40F8];
    sub_1AFF9305C(0, &qword_1EB81A0C0, MEMORY[0x1E4F27A00], MEMORY[0x1E4FBBE00]);
    sub_1AFFC99F8();
    uint64_t v143 = swift_allocObject();
    *(_OWORD *)(v143 + 16) = xmmword_1AFFD0610;
    uint64_t v397 = v143;
    sub_1AFFC99E8();
    char v141 = a19;
    char v134 = a38;
    sub_1AFFC99E8();
    unint64_t v125 = v265;
    unint64_t v123 = v266;
    unint64_t v122 = v267;
    unint64_t v126 = v268;
    unint64_t v127 = v269;
    uint64_t v132 = a70;
    char v133 = a64;
    char v136 = a30;
    char v140 = a25;
    uint64_t v139 = a26;
    char v138 = a27;
    char v142 = a17;
    char v137 = a28;
    char v135 = a31;
    char v129 = v270;
    char v128 = v271;
    char v124 = v272;
    char v121 = v273;
  }
  double v144 = v480;
  double v145 = *(double *)&v478;
  double v146 = *(double *)&v117;
  double v147 = *(double *)&v474;
  double v148 = *(double *)&v472;
  double v149 = *(double *)&v470;
  double v150 = *(double *)&v467;
  double v151 = *(double *)&v465;
  double v152 = *(double *)&v463;
  BOOL v168 = v122 == 0;
  unint64_t v169 = 0xE000000000000000;
  if (!v122) {
    unint64_t v122 = 0xE000000000000000;
  }
  unint64_t v481 = v122;
  if (v168) {
    unint64_t v170 = 0;
  }
  else {
    unint64_t v170 = v123;
  }
  unint64_t v479 = v170;
  unint64_t v171 = 0x80000001AFFFC4D0;
  if (v393) {
    unint64_t v171 = v393;
  }
  unint64_t v421 = v171;
  unint64_t v172 = 0xD00000000000002BLL;
  if (v393) {
    unint64_t v172 = v286;
  }
  unint64_t v420 = v172;
  unint64_t v173 = 0x80000001AFFFC4B0;
  if (v125) {
    unint64_t v173 = v125;
  }
  unint64_t v419 = v173;
  unint64_t v174 = 0xD00000000000001CLL;
  if (v125) {
    unint64_t v174 = v398;
  }
  unint64_t v418 = v174;
  unint64_t v175 = 0xE200000000000000;
  if (v284) {
    unint64_t v175 = v284;
  }
  unint64_t v415 = v175;
  uint64_t v176 = 32123;
  if (v284) {
    uint64_t v176 = v285;
  }
  uint64_t v414 = v176;
  double v177 = 1.0;
  if (v528 == 2) {
    double v94 = 1.0;
  }
  double v454 = v94;
  if (v528 != 2) {
    double v177 = v484;
  }
  double v453 = v177;
  if (v282) {
    unint64_t v169 = v282;
  }
  unint64_t v452 = v169;
  unint64_t v178 = v278;
  if (!v282) {
    unint64_t v178 = 0;
  }
  unint64_t v451 = v178;
  unint64_t v179 = v283;
  uint64_t v180 = 0x34343334312D5357;
  uint64_t v181 = 0x34343334312D5359;
  if (v283) {
    uint64_t v181 = v281;
  }
  uint64_t v449 = v181;
  unint64_t v182 = 0xEC0000006E652D31;
  if (!v283) {
    unint64_t v179 = 0xEC0000006E652D31;
  }
  unint64_t v450 = v179;
  if (v280) {
    unint64_t v182 = v280;
  }
  unint64_t v446 = v182;
  if (v280) {
    uint64_t v180 = v279;
  }
  uint64_t v445 = v180;
  unint64_t v183 = 0x80000001AFFFC3F0;
  if (a48) {
    unint64_t v183 = a48;
  }
  unint64_t v399 = v183;
  unint64_t v184 = 0xD00000000000002CLL;
  if (a48) {
    unint64_t v184 = a47;
  }
  unint64_t v394 = v184;
  uint64_t v185 = 0xFFFFFFFFLL;
  uint64_t v186 = v292;
  if (v287) {
    uint64_t v186 = 0xFFFFFFFFLL;
  }
  uint64_t v485 = v186;
  uint64_t v187 = v290;
  if (v291) {
    uint64_t v187 = 0xFFFFFFFFLL;
  }
  uint64_t v477 = v187;
  unint64_t v188 = v288;
  if (v289) {
    unint64_t v188 = 0;
  }
  unint64_t v476 = v188;
  if (v303) {
    double v144 = 7776000.0;
  }
  double v473 = v144;
  uint64_t v189 = v375;
  if (v380) {
    uint64_t v189 = 1;
  }
  uint64_t v471 = v189;
  unint64_t v190 = v308;
  if (v369) {
    unint64_t v190 = 0;
  }
  unint64_t v468 = v190;
  unint64_t v191 = v306;
  if (v307) {
    unint64_t v191 = 0;
  }
  unint64_t v466 = v191;
  unint64_t v192 = v300;
  if (v301) {
    unint64_t v192 = 0;
  }
  unint64_t v464 = v192;
  unint64_t v193 = v298;
  if (v299) {
    unint64_t v193 = 0;
  }
  unint64_t v475 = v193;
  unint64_t v194 = v296;
  if (v297) {
    unint64_t v194 = 0;
  }
  unint64_t v440 = v194;
  unint64_t v195 = v294;
  if (v295) {
    unint64_t v195 = 0;
  }
  unint64_t v439 = v195;
  uint64_t v196 = 1296000;
  if ((v293 & 1) == 0) {
    uint64_t v196 = v302;
  }
  uint64_t v381 = v196;
  unint64_t v197 = v304;
  unint64_t v198 = MEMORY[0x1E4FBC860];
  if (!v304) {
    unint64_t v197 = MEMORY[0x1E4FBC860];
  }
  unint64_t v376 = v197;
  unint64_t v199 = v305;
  if (!v305) {
    unint64_t v199 = MEMORY[0x1E4FBC860];
  }
  unint64_t v370 = v199;
  unint64_t v200 = v367;
  if (!v367) {
    unint64_t v200 = MEMORY[0x1E4FBC860];
  }
  unint64_t v368 = v200;
  uint64_t v201 = 5;
  if ((v309 & 1) == 0) {
    uint64_t v201 = v362;
  }
  uint64_t v444 = v201;
  unint64_t v202 = v310;
  if (!v310) {
    unint64_t v202 = MEMORY[0x1E4FBC860];
  }
  unint64_t v363 = v202;
  unint64_t v203 = v350;
  if (!v350) {
    unint64_t v203 = MEMORY[0x1E4FBC860];
  }
  unint64_t v351 = v203;
  unint64_t v204 = v346;
  if (!v346) {
    unint64_t v204 = MEMORY[0x1E4FBC860];
  }
  unint64_t v347 = v204;
  if (v311) {
    double v205 = 600.0;
  }
  else {
    double v205 = v145;
  }
  double v428 = v205;
  double v206 = -600.0;
  if ((v312 & 1) == 0) {
    double v206 = *(double *)&v116;
  }
  double v427 = v206;
  uint64_t v207 = v316;
  if (v320) {
    uint64_t v207 = 0xFFFFFFFFLL;
  }
  uint64_t v321 = v207;
  unint64_t v208 = v313;
  if (v314) {
    unint64_t v208 = 0;
  }
  unint64_t v443 = v208;
  unint64_t v209 = v441;
  if (!v441) {
    unint64_t v209 = MEMORY[0x1E4FBC860];
  }
  unint64_t v317 = v209;
  uint64_t v210 = v329;
  if (v425) {
    uint64_t v210 = 0xFFFFFFFFLL;
  }
  uint64_t v315 = v210;
  unint64_t v211 = v326;
  if (v327) {
    unint64_t v211 = 0;
  }
  unint64_t v442 = v211;
  unint64_t v212 = v324;
  if (v325) {
    unint64_t v212 = 0;
  }
  unint64_t v330 = v212;
  if (v318) {
    double v213 = 3.0;
  }
  else {
    double v213 = v146;
  }
  double v426 = v213;
  uint64_t v214 = 180;
  if ((v319 & 1) == 0) {
    uint64_t v214 = v323;
  }
  uint64_t v328 = v214;
  uint64_t v215 = 300;
  if ((v322 & 1) == 0) {
    uint64_t v215 = v332;
  }
  uint64_t v333 = v215;
  uint64_t v216 = 7200;
  if ((v331 & 1) == 0) {
    uint64_t v216 = v337;
  }
  uint64_t v338 = v216;
  uint64_t v217 = 600;
  if ((v335 & 1) == 0) {
    uint64_t v217 = v126;
  }
  uint64_t v336 = v217;
  uint64_t v218 = 0x3FF0000000000000;
  uint64_t v219 = v437;
  if (v334) {
    uint64_t v219 = 0x3FF0000000000000;
  }
  uint64_t v438 = v219;
  if ((v435 & 1) == 0) {
    uint64_t v218 = v433;
  }
  uint64_t v436 = v218;
  uint64_t v220 = 2592000;
  if ((v339 & 1) == 0) {
    uint64_t v220 = v127;
  }
  uint64_t v434 = v220;
  uint64_t v221 = 2;
  uint64_t v222 = v431;
  if (v340) {
    uint64_t v222 = 2;
  }
  uint64_t v432 = v222;
  uint64_t v223 = 0x3FD0000000000000;
  if ((v342 & 1) == 0) {
    uint64_t v223 = v429;
  }
  uint64_t v430 = v223;
  if (v341) {
    double v147 = 2.0;
  }
  double v343 = v147;
  if (v344) {
    double v148 = 3.0;
  }
  double v345 = v148;
  if (v348) {
    double v149 = 2592000.0;
  }
  double v349 = v149;
  if (v358) {
    double v150 = 2592000.0;
  }
  double v359 = v150;
  uint64_t v224 = v354;
  if (v356) {
    uint64_t v224 = 1;
  }
  uint64_t v357 = v224;
  unint64_t v225 = v360;
  if (!v360) {
    unint64_t v225 = MEMORY[0x1E4FBC860];
  }
  unint64_t v361 = v225;
  unint64_t v226 = v409;
  if (!v409) {
    unint64_t v226 = MEMORY[0x1E4FBC860];
  }
  unint64_t v355 = v226;
  uint64_t v227 = 500000;
  if ((v364 & 1) == 0) {
    uint64_t v227 = v416;
  }
  uint64_t v417 = v227;
  if ((v353 & 1) == 0) {
    uint64_t v185 = v352;
  }
  uint64_t v410 = v185;
  if (v365) {
    double v151 = 86400.0;
  }
  double v366 = v151;
  if (v371) {
    double v152 = 1.5;
  }
  double v372 = v152;
  if ((v373 & 1) == 0) {
    uint64_t v221 = a86;
  }
  uint64_t v374 = v221;
  if (a85) {
    a84 = 60.0;
  }
  double v377 = a84;
  if (a83) {
    a82 = 600.0;
  }
  double v378 = a82;
  if (a81) {
    a80 = 14400.0;
  }
  double v379 = a80;
  if (a79) {
    a78 = 60.0;
  }
  double v382 = a78;
  if (a77) {
    a76 = 600.0;
  }
  double v383 = a76;
  if (a75) {
    a74 = 14400.0;
  }
  double v384 = a74;
  if (a73) {
    a72 = 14400.0;
  }
  double v386 = a72;
  if (a71) {
    uint64_t v132 = 3;
  }
  uint64_t v385 = v132;
  if (a69) {
    a68 = 3;
  }
  uint64_t v387 = a68;
  if (v133) {
    a63 = 120.0;
  }
  double v388 = a63;
  if (a62) {
    a61 = 7200.0;
  }
  double v389 = a61;
  if (a60) {
    a59 = 604800.0;
  }
  double v390 = a59;
  if (a58) {
    a57 = 604800.0;
  }
  double v391 = a57;
  if (a56) {
    a55 = 604800.0;
  }
  double v392 = a55;
  if (a54) {
    a53 = 604800.0;
  }
  double v395 = a53;
  if (a52) {
    a51 = 600.0;
  }
  double v396 = a51;
  if (a50) {
    a49 = 600.0;
  }
  double v400 = a49;
  if (a46) {
    a45 = 1200.0;
  }
  if (a44) {
    a43 = 10.0;
  }
  if (a42) {
    a41 = 300.0;
  }
  if (a40) {
    a39 = 60.0;
  }
  if (v134) {
    a37 = 86400.0;
  }
  if (a36) {
    a35 = 3;
  }
  uint64_t v406 = a35;
  if (a34) {
    a33 = 3;
  }
  uint64_t v405 = a33;
  char v236 = v135;
  BOOL v237 = v135 == 2;
  if (v136) {
    a29 = 0.001;
  }
  BOOL v239 = v137 == 2;
  char v240 = v137;
  BOOL v241 = v138 == 2;
  if (!v139) {
    uint64_t v139 = MEMORY[0x1E4FBC860];
  }
  uint64_t v404 = v139;
  if (v140) {
    a24 = 1;
  }
  uint64_t v408 = a24;
  char v243 = v138;
  uint64_t v244 = 100;
  if (a23) {
    a22 = 100;
  }
  uint64_t v413 = a22;
  if ((a21 & 1) == 0) {
    uint64_t v244 = a20;
  }
  uint64_t v412 = v244;
  if (v141) {
    a18 = 259200.0;
  }
  if (v142) {
    double v247 = 86400.0;
  }
  else {
    double v247 = v423;
  }
  char v455 = (v121 == 2) | v121;
  char v424 = (v124 == 2) | v124;
  char v401 = (v129 == 2) | v129;
  char v248 = (v130 == 2) | v130;
  char v249 = (v131 == 2) | v131;
  char v250 = v237 | v236;
  char v251 = v239 | v240;
  char v252 = v241 | v243;
  uint64_t v253 = v494;
  if (v496) {
    uint64_t v253 = 1;
  }
  uint64_t v422 = v253;
  uint64_t v254 = v491;
  if (v493) {
    uint64_t v254 = 3;
  }
  uint64_t v411 = v254;
  char v492 = v128 & 1;
  uint64_t v255 = v499;
  if (!v499) {
    uint64_t v255 = MEMORY[0x1E4FBC860];
  }
  uint64_t v407 = v255;
  uint64_t v256 = v500;
  if (!v500) {
    uint64_t v256 = MEMORY[0x1E4FBC860];
  }
  uint64_t v403 = v256;
  char v402 = v497 & 1;
  uint64_t v501 = sub_1AFD7658C(v397);
  swift_bridgeObjectRelease();
  unint64_t v257 = v456;
  if (v457) {
    unint64_t v257 = 0;
  }
  unint64_t v498 = v257;
  unint64_t v258 = v458;
  if (!v458) {
    unint64_t v258 = v198;
  }
  unint64_t v495 = v258;
  memcpy((void *)(v88 + 416), v583, 0x1F9uLL);
  *(_OWORD *)&v569[103] = v578;
  *(_OWORD *)&v569[119] = v579;
  *(_OWORD *)&v569[135] = v580;
  *(_OWORD *)&v569[151] = v581;
  *(_OWORD *)&v569[39] = v574;
  *(_OWORD *)&v569[55] = v575;
  *(_OWORD *)&v569[71] = v576;
  *(_OWORD *)&v569[87] = v577;
  *(_OWORD *)&v569[7] = v572;
  char v566 = BYTE4(v275);
  char v564 = v275;
  char v562 = BYTE4(v274);
  char v560 = v274;
  *(_OWORD *)&v569[23] = v573;
  memcpy(__src, v570, 0x8DBuLL);
  *(double *)(v88 + 40) = v247;
  *(double *)(v88 + 48) = a18;
  *(double *)(v88 + 96) = a29;
  *(unsigned char *)uint64_t v88 = v402;
  *(void *)(v88 + 8) = v403;
  *(void *)(v88 + 16) = v407;
  *(void *)(v88 + 24) = v411;
  *(void *)(v88 + 32) = v422;
  *(void *)(v88 + 56) = v412;
  *(void *)(v88 + 64) = v413;
  *(void *)(v88 + 72) = v408;
  *(void *)(v88 + 80) = v404;
  *(unsigned char *)(v88 + 88) = v252 & 1;
  *(unsigned char *)(v88 + 89) = v251 & 1;
  *(unsigned char *)(v88 + 104) = v250 & 1;
  *(unsigned char *)(v88 + 105) = (a32 == 2) | a32 & 1;
  *(void *)(v88 + 112) = v405;
  *(void *)(v88 + 120) = v406;
  *(void *)(v88 + 168) = v394;
  *(void *)(v88 + 176) = v399;
  *(unsigned char *)(v88 + 248) = (a65 == 2) | a65 & 1;
  *(unsigned char *)(v88 + 249) = a66 & 1;
  *(unsigned char *)(v88 + 250) = a67 & 1;
  *(void *)(v88 + 256) = v387;
  *(void *)(v88 + 264) = v385;
  *(void *)(v88 + 328) = v374;
  *(unsigned char *)(v88 + 344) = v249 & 1;
  *(void *)(v88 + 360) = v357;
  *(void *)(v88 + 400) = v355;
  *(void *)(v88 + 408) = v361;
  *(void *)(v88 + 928) = v503;
  *(void *)(v88 + 936) = v522;
  *(void *)(v88 + 952) = v523;
  *(void *)(v88 + 968) = v520;
  *(void *)(v88 + 984) = v521;
  *(void *)(v88 + 1160) = v414;
  *(void *)(v88 + 1168) = v415;
  *(unsigned char *)(v88 + 1176) = v447 & 1;
  *(void *)(v88 + 1184) = v315;
  *(void *)(v88 + 1192) = v317;
  *(void *)(v88 + 1200) = v321;
  *(void *)(v88 + 1224) = v347;
  *(void *)(v88 + 1232) = v351;
  *(void *)(v88 + 1240) = v363;
  *(void *)(v88 + 1248) = v368;
  *(void *)(v88 + 1256) = v370;
  *(void *)(v88 + 1264) = v376;
  *(void *)(v88 + 1272) = v336;
  *(void *)(v88 + 1280) = v338;
  *(void *)(v88 + 1288) = v333;
  *(void *)(v88 + 1296) = v328;
  *(void *)(v88 + 1312) = v418;
  *(void *)(v88 + 1320) = v419;
  *(void *)(v88 + 1328) = v420;
  *(void *)(v88 + 1336) = v421;
  *(void *)(v88 + 1344) = v330;
  *(void *)(v88 + 1352) = v381;
  *(void *)(v88 + 1360) = v120;
  char v556 = 0;
  char v554 = 0;
  char v552 = 0;
  char v550 = 0;
  char v548 = 0;
  char v546 = v461 & 1;
  char v542 = v469 & 1;
  char v540 = 0;
  char v538 = 0;
  char v536 = 0;
  char v534 = 0;
  *(double *)(v88 + 128) = a37;
  *(double *)(v88 + 136) = a39;
  *(double *)(v88 + 144) = a41;
  *(double *)(v88 + 152) = a43;
  *(double *)(v88 + 160) = a45;
  *(double *)(v88 + 184) = v400;
  *(double *)(v88 + 192) = v396;
  *(double *)(v88 + 200) = v395;
  *(double *)(v88 + 208) = v392;
  *(double *)(v88 + 216) = v391;
  *(double *)(v88 + 224) = v390;
  *(double *)(v88 + 232) = v389;
  *(double *)(v88 + 240) = v388;
  *(double *)(v88 + 272) = v386;
  *(double *)(v88 + 280) = v384;
  *(double *)(v88 + 288) = v383;
  *(double *)(v88 + 296) = v382;
  *(double *)(v88 + 304) = v379;
  *(double *)(v88 + 312) = v378;
  *(double *)(v88 + 320) = v377;
  *(double *)(v88 + 336) = v372;
  *(_DWORD *)(v88 + 348) = *(_DWORD *)&v568[3];
  *(_DWORD *)(v88 + 345) = *(_DWORD *)v568;
  *(double *)(v88 + 352) = v366;
  *(double *)(v88 + 368) = v359;
  *(double *)(v88 + 376) = v349;
  *(double *)(v88 + 384) = v345;
  *(double *)(v88 + 392) = v343;
  *(_DWORD *)(v88 + 921) = *(_DWORD *)v567;
  *(_DWORD *)(v88 + 945) = *(_DWORD *)v565;
  *(_DWORD *)(v88 + 961) = *(_DWORD *)v563;
  *(_DWORD *)(v88 + 980) = *(_DWORD *)&v561[3];
  *(_DWORD *)(v88 + 977) = *(_DWORD *)v561;
  *(_DWORD *)(v88 + 924) = *(_DWORD *)&v567[3];
  *(unsigned char *)(v88 + 944) = v566;
  *(_DWORD *)(v88 + 948) = *(_DWORD *)&v565[3];
  *(unsigned char *)(v88 + 960) = v564;
  *(_DWORD *)(v88 + 964) = *(_DWORD *)&v563[3];
  *(unsigned char *)(v88 + 976) = v562;
  *(unsigned char *)(v88 + 992) = v560;
  long long v259 = *(_OWORD *)&v569[16];
  *(_OWORD *)(v88 + 993) = *(_OWORD *)v569;
  *(_OWORD *)(v88 + 1009) = v259;
  long long v260 = *(_OWORD *)&v569[80];
  *(_OWORD *)(v88 + 1057) = *(_OWORD *)&v569[64];
  *(_OWORD *)(v88 + 1073) = v260;
  long long v261 = *(_OWORD *)&v569[48];
  *(_OWORD *)(v88 + 1025) = *(_OWORD *)&v569[32];
  *(_OWORD *)(v88 + 1041) = v261;
  *(void *)(v88 + 1152) = *(void *)&v569[159];
  long long v262 = *(_OWORD *)&v569[144];
  *(_OWORD *)(v88 + 1121) = *(_OWORD *)&v569[128];
  *(_OWORD *)(v88 + 1137) = v262;
  long long v263 = *(_OWORD *)&v569[112];
  *(_OWORD *)(v88 + 1089) = *(_OWORD *)&v569[96];
  *(_OWORD *)(v88 + 1105) = v263;
  *(_DWORD *)(v88 + 1177) = *(_DWORD *)v559;
  *(_DWORD *)(v88 + 1180) = *(_DWORD *)&v559[3];
  *(double *)(v88 + 1208) = v427;
  *(double *)(v88 + 1216) = v428;
  *(double *)(v88 + 1304) = v426;
  *(void *)(v88 + 1368) = v439;
  *(void *)(v88 + 1376) = v440;
  *(void *)(v88 + 1384) = v445;
  *(void *)(v88 + 1392) = v446;
  *(unsigned char *)(v88 + 1400) = v248 & 1;
  *(unsigned char *)(v88 + 1401) = v401 & 1;
  *(_WORD *)(v88 + 1406) = v558;
  *(_DWORD *)(v88 + 1402) = *(_DWORD *)&v557[7];
  *(void *)(v88 + 1408) = v410;
  *(void *)(v88 + 1416) = v449;
  *(void *)(v88 + 1424) = v450;
  *(void *)(v88 + 1432) = v451;
  *(void *)(v88 + 1440) = v452;
  *(void *)(v88 + 1448) = v417;
  *(void *)(v88 + 1456) = v512;
  *(void *)(v88 + 1464) = v516;
  *(void *)(v88 + 1472) = v515;
  *(void *)(v88 + 1480) = v508;
  *(void *)(v88 + 1488) = v518;
  *(void *)(v88 + 1496) = v529;
  *(void *)(v88 + 1504) = v509;
  *(void *)(v88 + 1512) = v517;
  *(void *)(v88 + 1520) = v514;
  *(void *)(v88 + 1528) = v510;
  *(void *)(v88 + 1536) = v511;
  *(void *)(v88 + 1544) = v519;
  *(void *)(v88 + 1552) = v513;
  *(unsigned char *)(v88 + 1560) = v528 & 1;
  *(_DWORD *)(v88 + 1564) = *(_DWORD *)&v557[3];
  *(_DWORD *)(v88 + 1561) = *(_DWORD *)v557;
  *(double *)(v88 + 1568) = v453;
  *(double *)(v88 + 1576) = v454;
  memcpy((void *)(v88 + 1584), __src, 0x8DBuLL);
  *(unsigned char *)(v88 + 3851) = v492;
  *(void *)(v88 + 3856) = v430;
  *(void *)(v88 + 3872) = v432;
  *(void *)(v88 + 3888) = v434;
  *(void *)(v88 + 3904) = v436;
  *(void *)(v88 + 3920) = v438;
  *(void *)(v88 + 3936) = v482;
  *(void *)(v88 + 3960) = v442;
  *(unsigned char *)(v88 + 3976) = v448 & 1;
  *(unsigned char *)(v88 + 3977) = v424 & 1;
  *(void *)(v88 + 3984) = v443;
  *(void *)(v88 + 3992) = v483;
  *(void *)(v88 + 4008) = v444;
  *(void *)(v88 + 4016) = v506;
  *(void *)(v88 + 4024) = v505;
  *(void *)(v88 + 4032) = v504;
  *(_DWORD *)(v88 + 3865) = *(_DWORD *)v555;
  *(_DWORD *)(v88 + 3881) = *(_DWORD *)v553;
  *(_DWORD *)(v88 + 3900) = *(_DWORD *)&v551[3];
  *(_DWORD *)(v88 + 3897) = *(_DWORD *)v551;
  *(_DWORD *)(v88 + 3913) = *(_DWORD *)v549;
  *(_DWORD *)(v88 + 3932) = *(_DWORD *)&v547[3];
  *(_DWORD *)(v88 + 3929) = *(_DWORD *)v547;
  *(_DWORD *)(v88 + 3948) = *(_DWORD *)&v545[3];
  *(_DWORD *)(v88 + 3945) = *(_DWORD *)v545;
  *(_DWORD *)(v88 + 3978) = v543;
  *(_DWORD *)(v88 + 4004) = *(_DWORD *)&v541[3];
  *(_DWORD *)(v88 + 4001) = *(_DWORD *)v541;
  *(unsigned char *)(v88 + 3864) = v556;
  *(_DWORD *)(v88 + 3868) = *(_DWORD *)&v555[3];
  *(unsigned char *)(v88 + 3880) = v554;
  *(_DWORD *)(v88 + 3884) = *(_DWORD *)&v553[3];
  *(unsigned char *)(v88 + 3896) = v552;
  *(unsigned char *)(v88 + 3912) = v550;
  *(_DWORD *)(v88 + 3916) = *(_DWORD *)&v549[3];
  *(unsigned char *)(v88 + 3928) = v548;
  *(unsigned char *)(v88 + 3944) = v546;
  *(void *)(v88 + 3952) = v277;
  *(double *)(v88 + 3968) = v276;
  *(_WORD *)(v88 + 3982) = v544;
  *(unsigned char *)(v88 + 4000) = v542;
  *(void *)(v88 + 4040) = v507;
  *(void *)(v88 + 4048) = v464;
  *(unsigned char *)(v88 + 4056) = v540;
  *(_DWORD *)(v88 + 4057) = *(_DWORD *)v539;
  *(_DWORD *)(v88 + 4060) = *(_DWORD *)&v539[3];
  *(void *)(v88 + 4064) = v526;
  *(void *)(v88 + 4072) = v527;
  *(void *)(v88 + 4080) = v525;
  *(void *)(v88 + 4088) = v524;
  *(unsigned char *)(v88 + 4096) = v538;
  *(_DWORD *)(v88 + 4097) = *(_DWORD *)v537;
  *(_DWORD *)(v88 + 4100) = *(_DWORD *)&v537[3];
  *(void *)(v88 + 4104) = v486;
  *(void *)(v88 + 4112) = v487;
  *(void *)(v88 + 4120) = v479;
  *(void *)(v88 + 4128) = v481;
  *(void *)(v88 + 4136) = v466;
  *(unsigned char *)(v88 + 4144) = v536;
  *(_DWORD *)(v88 + 4145) = *(_DWORD *)v535;
  *(_DWORD *)(v88 + 4148) = *(_DWORD *)&v535[3];
  *(void *)(v88 + 4152) = v468;
  *(unsigned char *)(v88 + 4160) = v534;
  *(_DWORD *)(v88 + 4161) = *(_DWORD *)v533;
  *(_DWORD *)(v88 + 4164) = *(_DWORD *)&v533[3];
  *(void *)(v88 + 4168) = v471;
  double result = v473;
  *(double *)(v88 + 4176) = v473;
  *(unsigned char *)(v88 + 4184) = v455 & 1;
  *(_DWORD *)(v88 + 4185) = *(_DWORD *)v532;
  *(_DWORD *)(v88 + 4188) = *(_DWORD *)&v532[3];
  *(void *)(v88 + 4192) = v476;
  *(void *)(v88 + 4200) = v495;
  *(void *)(v88 + 4208) = v477;
  *(void *)(v88 + 4216) = v485;
  *(void *)(v88 + 4224) = v501;
  *(void *)(v88 + 4232) = v498;
  *(unsigned char *)(v88 + 4240) = v459 & 1;
  *(_DWORD *)(v88 + 4241) = *(_DWORD *)v531;
  *(_DWORD *)(v88 + 4244) = *(_DWORD *)&v531[3];
  *(void *)(v88 + 4248) = v488;
  *(void *)(v88 + 4256) = v489;
  *(void *)(v88 + 4264) = v475;
  *(void *)(v88 + 4272) = v490;
  *(unsigned char *)(v88 + 4280) = (v460 == 2) | v460 & 1;
  *(unsigned char *)(v88 + 4281) = v462 & 1;
  return result;
}

BOOL sub_1AFF78BCC()
{
  return *(void *)(v0 + 256) > 0;
}

uint64_t sub_1AFF78BDC()
{
  uint64_t v0 = sub_1AFFC9A78();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v9 - v5;
  sub_1AFFC9A28();
  sub_1AFFC9958();
  uint64_t v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  v7(v6, v0);
  sub_1AFFC9A28();
  sub_1AFFC9988();
  v7(v3, v0);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1AFFCB7F8();
  sub_1AFFCAFA8();
  sub_1AFFCAFA8();
  sub_1AFFCAFA8();
  sub_1AFFCAFA8();
  swift_bridgeObjectRelease();
  sub_1AFFCAFA8();
  sub_1AFFCAFA8();
  swift_bridgeObjectRelease();
  sub_1AFFCAFA8();
  return v9[0];
}

uint64_t sub_1AFF78DE8(void *a1, uint64_t a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1AFFCB948();

  return __swift_project_value_buffer(v3, a2);
}

uint64_t sub_1AFF78E3C()
{
  return *v0;
}

uint64_t sub_1AFF78E44()
{
  return sub_1AFFC8E38();
}

uint64_t sub_1AFF78E4C()
{
  return sub_1AFFC8E38();
}

uint64_t sub_1AFF78E54()
{
  return *(void *)(v0 + 24);
}

uint64_t sub_1AFF78E5C()
{
  return *(void *)(v0 + 32);
}

double sub_1AFF78E64()
{
  return *(double *)(v0 + 40);
}

double sub_1AFF78E6C()
{
  return *(double *)(v0 + 48);
}

uint64_t sub_1AFF78E74()
{
  return *(void *)(v0 + 56);
}

uint64_t sub_1AFF78E7C()
{
  return *(void *)(v0 + 64);
}

uint64_t sub_1AFF78E84()
{
  return *(void *)(v0 + 72);
}

uint64_t sub_1AFF78E8C()
{
  return sub_1AFFC8E38();
}

uint64_t sub_1AFF78E94()
{
  return *(unsigned __int8 *)(v0 + 88);
}

uint64_t sub_1AFF78E9C()
{
  return *(unsigned __int8 *)(v0 + 89);
}

double sub_1AFF78EA4()
{
  return *(double *)(v0 + 96);
}

uint64_t sub_1AFF78EAC()
{
  return *(unsigned __int8 *)(v0 + 104);
}

uint64_t sub_1AFF78EB4()
{
  return *(unsigned __int8 *)(v0 + 105);
}

uint64_t AppConfiguration.maxStocksInMoversAndShakers.getter()
{
  return *(void *)(v0 + 112);
}

uint64_t sub_1AFF78EC4()
{
  return *(void *)(v0 + 120);
}

double sub_1AFF78ECC()
{
  return *(double *)(v0 + 128);
}

double sub_1AFF78ED4()
{
  return *(double *)(v0 + 136);
}

double sub_1AFF78EDC()
{
  return *(double *)(v0 + 144);
}

double sub_1AFF78EE4()
{
  return *(double *)(v0 + 152);
}

double sub_1AFF78EEC()
{
  return *(double *)(v0 + 160);
}

uint64_t sub_1AFF78EF4()
{
  uint64_t v1 = *(void *)(v0 + 168);
  sub_1AFFC8E38();
  return v1;
}

double sub_1AFF78F24()
{
  return *(double *)(v0 + 184);
}

double sub_1AFF78F2C()
{
  return *(double *)(v0 + 192);
}

double sub_1AFF78F34()
{
  return *(double *)(v0 + 200);
}

double sub_1AFF78F3C()
{
  return *(double *)(v0 + 208);
}

double sub_1AFF78F44()
{
  return *(double *)(v0 + 216);
}

double sub_1AFF78F4C()
{
  return *(double *)(v0 + 224);
}

double sub_1AFF78F54()
{
  return *(double *)(v0 + 232);
}

double sub_1AFF78F5C()
{
  return *(double *)(v0 + 240);
}

uint64_t sub_1AFF78F64()
{
  return *(unsigned __int8 *)(v0 + 248);
}

uint64_t sub_1AFF78F6C()
{
  return *(unsigned __int8 *)(v0 + 249);
}

uint64_t sub_1AFF78F74()
{
  return *(unsigned __int8 *)(v0 + 250);
}

uint64_t sub_1AFF78F7C()
{
  return *(void *)(v0 + 256);
}

uint64_t sub_1AFF78F84()
{
  return *(void *)(v0 + 264);
}

double sub_1AFF78F8C()
{
  return *(double *)(v0 + 272);
}

double sub_1AFF78F94()
{
  return *(double *)(v0 + 280);
}

double sub_1AFF78F9C()
{
  return *(double *)(v0 + 288);
}

double sub_1AFF78FA4()
{
  return *(double *)(v0 + 296);
}

double sub_1AFF78FAC()
{
  return *(double *)(v0 + 304);
}

double sub_1AFF78FB4()
{
  return *(double *)(v0 + 312);
}

double sub_1AFF78FBC()
{
  return *(double *)(v0 + 320);
}

uint64_t sub_1AFF78FC4()
{
  return *(void *)(v0 + 328);
}

double sub_1AFF78FCC()
{
  return *(double *)(v0 + 336);
}

uint64_t sub_1AFF78FD4()
{
  return *(unsigned __int8 *)(v0 + 344);
}

double sub_1AFF78FDC()
{
  return *(double *)(v0 + 352);
}

uint64_t sub_1AFF78FE4()
{
  return *(void *)(v0 + 360);
}

double sub_1AFF78FEC()
{
  return *(double *)(v0 + 368);
}

double sub_1AFF78FF4()
{
  return *(double *)(v0 + 376);
}

double sub_1AFF78FFC()
{
  return *(double *)(v0 + 384);
}

double sub_1AFF79004()
{
  return *(double *)(v0 + 392);
}

uint64_t sub_1AFF7900C()
{
  return sub_1AFFC8E38();
}

uint64_t sub_1AFF79014()
{
  return sub_1AFFC8E38();
}

uint64_t sub_1AFF7901C@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (const void *)(v1 + 416);
  memcpy(v5, v3, 0x1F9uLL);
  memcpy(a1, v3, 0x1F9uLL);
  return sub_1AFDB7DDC((uint64_t)v5);
}

uint64_t sub_1AFF79078@<X0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 944);
  uint64_t v3 = *(void *)(v1 + 952);
  char v4 = *(unsigned char *)(v1 + 960);
  uint64_t v5 = *(void *)(v1 + 968);
  char v6 = *(unsigned char *)(v1 + 976);
  uint64_t v7 = *(void *)(v1 + 984);
  char v8 = *(unsigned char *)(v1 + 992);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 928);
  *(unsigned char *)(a1 + 16) = v2;
  *(void *)(a1 + 24) = v3;
  *(unsigned char *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = v6;
  *(void *)(a1 + 56) = v7;
  *(unsigned char *)(a1 + 64) = v8;
  return sub_1AFFC8E38();
}

__n128 sub_1AFF790C4@<Q0>(uint64_t a1@<X8>)
{
  long long v2 = *(_OWORD *)(v1 + 1112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(v1 + 1096);
  *(_OWORD *)(a1 + 112) = v2;
  long long v3 = *(_OWORD *)(v1 + 1144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(v1 + 1128);
  *(_OWORD *)(a1 + 144) = v3;
  long long v4 = *(_OWORD *)(v1 + 1048);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 1032);
  *(_OWORD *)(a1 + 48) = v4;
  long long v5 = *(_OWORD *)(v1 + 1080);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(v1 + 1064);
  *(_OWORD *)(a1 + 80) = v5;
  __n128 result = *(__n128 *)(v1 + 1000);
  long long v7 = *(_OWORD *)(v1 + 1016);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v7;
  return result;
}

uint64_t sub_1AFF790F4()
{
  uint64_t v1 = *(void *)(v0 + 1160);
  sub_1AFFC8E38();
  return v1;
}

uint64_t sub_1AFF79128()
{
  return *(unsigned __int8 *)(v0 + 1176);
}

uint64_t sub_1AFF79130()
{
  return *(void *)(v0 + 1184);
}

uint64_t sub_1AFF79138()
{
  return sub_1AFFC8E38();
}

uint64_t sub_1AFF79140()
{
  return *(void *)(v0 + 1200);
}

double sub_1AFF79148()
{
  return *(double *)(v0 + 1208);
}

double sub_1AFF79150()
{
  return *(double *)(v0 + 1216);
}

uint64_t sub_1AFF79158()
{
  return sub_1AFFC8E38();
}

uint64_t sub_1AFF79160()
{
  return sub_1AFFC8E38();
}

uint64_t sub_1AFF79168()
{
  return sub_1AFFC8E38();
}

uint64_t sub_1AFF79170()
{
  return sub_1AFFC8E38();
}

uint64_t sub_1AFF79178()
{
  return sub_1AFFC8E38();
}

uint64_t sub_1AFF79180()
{
  return sub_1AFFC8E38();
}

uint64_t sub_1AFF79188()
{
  return *(void *)(v0 + 1272);
}

uint64_t sub_1AFF79190()
{
  return *(void *)(v0 + 1280);
}

uint64_t sub_1AFF79198()
{
  return *(void *)(v0 + 1288);
}

uint64_t sub_1AFF791A0()
{
  return *(void *)(v0 + 1296);
}

double sub_1AFF791A8()
{
  return *(double *)(v0 + 1304);
}

uint64_t sub_1AFF791B0()
{
  uint64_t v1 = *(void *)(v0 + 1312);
  sub_1AFFC8E38();
  return v1;
}

uint64_t sub_1AFF791E4()
{
  uint64_t v1 = *(void *)(v0 + 1328);
  sub_1AFFC8E38();
  return v1;
}

uint64_t sub_1AFF79218()
{
  return *(void *)(v0 + 1344);
}

uint64_t AppConfiguration.timeBeforeEarningsDateToShowEarnings.getter()
{
  return *(void *)(v0 + 1352);
}

uint64_t sub_1AFF79228()
{
  return sub_1AFFC8E38();
}

uint64_t sub_1AFF79230()
{
  return *(void *)(v0 + 1368);
}

uint64_t sub_1AFF79238()
{
  return *(void *)(v0 + 1376);
}

uint64_t sub_1AFF79240()
{
  uint64_t v1 = *(void *)(v0 + 1384);
  sub_1AFFC8E38();
  return v1;
}

uint64_t sub_1AFF79274()
{
  return *(unsigned __int8 *)(v0 + 1400);
}

uint64_t sub_1AFF7927C()
{
  return *(unsigned __int8 *)(v0 + 1401);
}

uint64_t sub_1AFF79284()
{
  return *(void *)(v0 + 1408);
}

void *sub_1AFF7928C@<X0>(void *a1@<X8>)
{
  return memcpy(a1, (const void *)(v1 + 1584), 0x8DBuLL);
}

uint64_t sub_1AFF7929C()
{
  return *(void *)(v0 + 4048);
}

__n128 sub_1AFF792AC@<Q0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 4096);
  __n128 result = *(__n128 *)(v1 + 4064);
  long long v4 = *(_OWORD *)(v1 + 4080);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v2;
  return result;
}

uint64_t AppConfiguration.userConcernConfigurationResourceId.getter()
{
  uint64_t v1 = *(void *)(v0 + 4104);
  sub_1AFFC8E38();
  return v1;
}

uint64_t sub_1AFF792FC()
{
  uint64_t v1 = *(void *)(v0 + 4120);
  sub_1AFFC8E38();
  return v1;
}

uint64_t sub_1AFF79330()
{
  return *(void *)(v0 + 4136);
}

uint64_t sub_1AFF79344()
{
  return *(void *)(v0 + 4152);
}

uint64_t sub_1AFF79358()
{
  return *(void *)(v0 + 4168);
}

double sub_1AFF79360()
{
  return *(double *)(v0 + 4176);
}

uint64_t sub_1AFF79368()
{
  return *(unsigned __int8 *)(v0 + 4184);
}

uint64_t sub_1AFF79374()
{
  return *(void *)(v0 + 4192);
}

uint64_t sub_1AFF7937C()
{
  return sub_1AFFC8E38();
}

uint64_t sub_1AFF79384()
{
  return *(void *)(v0 + 4208);
}

uint64_t sub_1AFF7938C()
{
  return *(void *)(v0 + 4216);
}

uint64_t sub_1AFF79394()
{
  return sub_1AFFC8E38();
}

uint64_t sub_1AFF7939C()
{
  return *(void *)(v0 + 4232);
}

uint64_t sub_1AFF793A4()
{
  return *(unsigned __int8 *)(v0 + 4240);
}

uint64_t AppConfiguration.newsPersonalizationConfiguration.getter()
{
  return sub_1AFFC8E38();
}

uint64_t AppConfiguration.stocksTabiPersonalizationConfiguration.getter()
{
  return sub_1AFFC8E38();
}

uint64_t sub_1AFF793C0()
{
  return *(void *)(v0 + 4264);
}

uint64_t sub_1AFF793C8()
{
  return sub_1AFFC8E38();
}

uint64_t sub_1AFF793D0()
{
  return *(unsigned __int8 *)(v0 + 4280);
}

uint64_t sub_1AFF793DC()
{
  return *(unsigned __int8 *)(v0 + 4281);
}

uint64_t sub_1AFF793E8(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1AFF89D3C(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1AFF79468(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

double sub_1AFF79480(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(void *)(a1 + 160) = 1;
  return result;
}

uint64_t sub_1AFF794A4(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 160)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1AFF794C0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 2267)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

void sub_1AFF794DC(unsigned char *a1)
{
  a1[1130] = 1;
}

uint64_t sub_1AFF7950C(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v533 = v1;
  long long v3 = v2;
  char v365 = v4;
  uint64_t v370 = sub_1AFFCB948();
  uint64_t v369 = *(void *)(v370 - 8);
  MEMORY[0x1F4188790](v370);
  double v366 = (char *)v161 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v367 = (uint64_t)v161 - v7;
  MEMORY[0x1F4188790](v8);
  unint64_t v368 = (char *)v161 - v9;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBBDC0];
  sub_1AFF92FF4(0, &qword_1EB819F70, (uint64_t (*)(void))sub_1AFF88F5C, (uint64_t)&type metadata for LocalizationKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v372 = v11;
  uint64_t v371 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  unint64_t v375 = (char *)v161 - v12;
  sub_1AFF92FF4(0, &qword_1EB819F68, (uint64_t (*)(void))sub_1AFF88FB0, (uint64_t)&type metadata for AppConfiguration.CodingKeys, v10);
  uint64_t v374 = v13;
  uint64_t v373 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  char v364 = (char *)v161 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  unint64_t v363 = (char *)v161 - v16;
  MEMORY[0x1F4188790](v17);
  unint64_t v362 = (char *)v161 - v18;
  MEMORY[0x1F4188790](v19);
  unint64_t v361 = (char *)v161 - v20;
  MEMORY[0x1F4188790](v21);
  unint64_t v360 = (char *)v161 - v22;
  MEMORY[0x1F4188790](v23);
  double v359 = (char *)v161 - v24;
  MEMORY[0x1F4188790](v25);
  char v358 = (char *)v161 - v26;
  MEMORY[0x1F4188790](v27);
  uint64_t v357 = (char *)v161 - v28;
  MEMORY[0x1F4188790](v29);
  uint64_t v31 = (char *)v161 - v30;
  MEMORY[0x1F4188790](v32);
  unint64_t v34 = (char *)v161 - v33;
  MEMORY[0x1F4188790](v35);
  uint64_t v37 = (char *)v161 - v36;
  MEMORY[0x1F4188790](v38);
  uint64_t v40 = (char *)v161 - v39;
  MEMORY[0x1F4188790](v41);
  uint64_t v43 = (char *)v161 - v42;
  uint64_t v44 = v3[3];
  unint64_t v376 = v3;
  __swift_project_boxed_opaque_existential_1(v3, v44);
  sub_1AFF88FB0();
  uint64_t v45 = v533;
  sub_1AFFCBE68();
  uint64_t v533 = v45;
  if (v45) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v376);
  }
  unint64_t v352 = v40;
  char v353 = v37;
  unint64_t v354 = v34;
  unint64_t v355 = v31;
  char v356 = v43;
  uint64_t v46 = swift_allocObject();
  *(void *)(v46 + 16) = sub_1AFD5C7EC();
  swift_retain_n();
  __swift_project_boxed_opaque_existential_1(v376, v376[3]);
  sub_1AFF88F5C();
  swift_retain_n();
  uint64_t v47 = v533;
  sub_1AFFCBE68();
  if (v47)
  {
    uint64_t v533 = v47;
    (*(void (**)(char *, uint64_t))(v373 + 8))(v356, v374);
LABEL_5:
    swift_release_n();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v376);
  }
  sub_1AFF89D3C(0, &qword_1EB819CE0, (uint64_t)&type metadata for LanguageConfig, MEMORY[0x1E4FBB320]);
  v441[0] = 0;
  sub_1AFF8903C();
  sub_1AFFCBAF8();
  uint64_t v533 = 0;
  uint64_t v350 = v46 + 16;
  uint64_t v351 = v46;
  uint64_t v49 = *(void *)v378;
  if (!*(void *)v378) {
    uint64_t v49 = sub_1AFD2CCAC(0);
  }
  v532[799] = 1;
  uint64_t v50 = v372;
  uint64_t v51 = v375;
  uint64_t v52 = v533;
  uint64_t v53 = sub_1AFFCBAA8();
  if (v52)
  {
    uint64_t v533 = v52;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v371 + 8))(v51, v50);
    (*(void (**)(char *, uint64_t))(v373 + 8))(v356, v374);
    goto LABEL_5;
  }
  uint64_t v55 = v53;
  uint64_t v56 = v54;
  uint64_t v57 = sub_1AFFC9998();
  sub_1AFF815F4(v49, v57, v55, v56, v378);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1AFF793E8((uint64_t)v378, (uint64_t)v532, &qword_1EB818E68, (uint64_t)&type metadata for LanguageConfig);
  v378[0] = 0;
  unsigned __int8 v58 = sub_1AFFCBAB8();
  uint64_t v533 = 0;
  unsigned __int8 v59 = v58;
  sub_1AFD2CEB0((uint64_t)v376, (uint64_t)v530);
  uint64_t v60 = v351;
  if (v59 != 2)
  {
    unsigned __int8 v531 = v59;
    goto LABEL_18;
  }
  __swift_project_boxed_opaque_existential_1(v530, v530[3]);
  uint64_t v61 = sub_1AFFCBE58();
  uint64_t v62 = sub_1AFF78DE8(&qword_1EB818A58, (uint64_t)qword_1EB819EA8);
  uint64_t v63 = v369;
  uint64_t v64 = (uint64_t)v368;
  uint64_t v65 = v370;
  (*(void (**)(char *, uint64_t, uint64_t))(v369 + 16))(v368, v62, v370);
  sub_1AFF75D4C(v64, v61, v378);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v64, v65);
  if (!*(void *)&v378[24])
  {
    sub_1AFD3BDB4((uint64_t)v378);
    goto LABEL_17;
  }
  if ((swift_dynamicCast() & 1) == 0) {
LABEL_17:
  }
    unsigned __int8 v531 = 2;
LABEL_18:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v530);
  int v66 = v531;
  sub_1AFF89D3C(0, &qword_1EB819E10, MEMORY[0x1E4FBC1C8], MEMORY[0x1E4FBB320]);
  v378[0] = 1;
  sub_1AFF899E4();
  uint64_t v67 = v374;
  unint64_t v68 = v356;
  uint64_t v69 = v533;
  sub_1AFFCBAF8();
  uint64_t v533 = v69;
  if (v69)
  {
LABEL_44:
    sub_1AFF89124((uint64_t)v532);
    (*(void (**)(char *, uint64_t))(v371 + 8))(v375, v372);
    (*(void (**)(char *, uint64_t))(v373 + 8))(v68, v67);
    goto LABEL_5;
  }
  uint64_t v70 = v528[5];
  sub_1AFD2CEB0((uint64_t)v376, (uint64_t)v528);
  if (v70)
  {
    uint64_t v529 = v70;
    goto LABEL_26;
  }
  __swift_project_boxed_opaque_existential_1(v528, v528[3]);
  uint64_t v71 = sub_1AFFCBE58();
  uint64_t v72 = sub_1AFF78DE8(&qword_1EB818A60, (uint64_t)qword_1EB819EC0);
  uint64_t v73 = v369;
  uint64_t v74 = v367;
  uint64_t v75 = v370;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v369 + 16))(v367, v72, v370);
  sub_1AFF75D4C(v74, v71, v378);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v74, v75);
  if (!*(void *)&v378[24])
  {
    sub_1AFD3BDB4((uint64_t)v378);
    goto LABEL_25;
  }
  if ((swift_dynamicCast() & 1) == 0) {
LABEL_25:
  }
    uint64_t v529 = 0;
LABEL_26:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v528);
  uint64_t v76 = v529;
  sub_1AFF89D3C(0, &qword_1EB819DF8, MEMORY[0x1E4FBC150], MEMORY[0x1E4FBB320]);
  v378[0] = 2;
  sub_1AFF89A70();
  uint64_t v67 = v374;
  unint64_t v68 = v356;
  uint64_t v77 = v533;
  sub_1AFFCBAF8();
  uint64_t v533 = v77;
  if (v77)
  {
LABEL_43:
    swift_bridgeObjectRelease();
    goto LABEL_44;
  }
  uint64_t v78 = v526[5];
  sub_1AFD2CEB0((uint64_t)v376, (uint64_t)v526);
  LODWORD(v368) = v66;
  if (!v78)
  {
    uint64_t v367 = v76;
    __swift_project_boxed_opaque_existential_1(v526, v526[3]);
    uint64_t v79 = sub_1AFFCBE58();
    uint64_t v80 = sub_1AFF78DE8(&qword_1EB818A68, (uint64_t)qword_1EB819ED8);
    uint64_t v81 = v369;
    uint64_t v82 = (uint64_t)v366;
    uint64_t v83 = v370;
    (*(void (**)(char *, uint64_t, uint64_t))(v369 + 16))(v366, v80, v370);
    sub_1AFF75D4C(v82, v79, v378);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v82, v83);
    if (*(void *)&v378[24])
    {
      if (swift_dynamicCast()) {
        goto LABEL_34;
      }
    }
    else
    {
      sub_1AFD3BDB4((uint64_t)v378);
    }
    uint64_t v527 = 0;
LABEL_34:
    uint64_t v76 = v367;
    goto LABEL_35;
  }
  uint64_t v527 = v78;
LABEL_35:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v526);
  uint64_t v84 = v527;
  v441[0] = 3;
  sub_1AFFC8E48();
  uint64_t v67 = v374;
  unint64_t v68 = v356;
  uint64_t v85 = v533;
  sub_1AFFCBAF8();
  uint64_t v533 = v85;
  if (v85) {
    goto LABEL_42;
  }
  uint64_t v370 = v84;
  uint64_t v86 = *(void *)v378;
  LODWORD(v369) = v378[8];
  if (v378[8]) {
    sub_1AFF88E80(3, v60);
  }
  swift_release();
  v441[0] = 4;
  sub_1AFFC8E48();
  uint64_t v67 = v374;
  unint64_t v68 = v356;
  uint64_t v87 = v533;
  sub_1AFFCBAF8();
  uint64_t v533 = v87;
  if (v87) {
    goto LABEL_42;
  }
  uint64_t v367 = *(void *)v378;
  LODWORD(v366) = v378[8];
  if (v378[8]) {
    sub_1AFF88E80(4, v60);
  }
  swift_release();
  v441[0] = 5;
  sub_1AFFC8E48();
  uint64_t v67 = v374;
  unint64_t v68 = v356;
  uint64_t v88 = v533;
  sub_1AFFCBAF8();
  uint64_t v533 = v88;
  if (v88)
  {
LABEL_42:
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_43;
  }
  uint64_t v349 = *(void *)v378;
  char v89 = v378[8];
  if (v378[8]) {
    sub_1AFF88E80(5, v351);
  }
  swift_release();
  v441[0] = 6;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  double v348 = *(double *)v378;
  int v347 = v378[8];
  if (v378[8]) {
    sub_1AFF88E80(6, v351);
  }
  swift_release();
  v441[0] = 7;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v346 = *(void *)v378;
  int v345 = v378[8];
  if (v378[8]) {
    sub_1AFF88E80(7, v351);
  }
  swift_release();
  v441[0] = 8;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v344 = *(void *)v378;
  int v343 = v378[8];
  if (v378[8]) {
    sub_1AFF88E80(8, v351);
  }
  swift_release();
  v441[0] = 9;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v341 = *(void *)v378;
  int v340 = v378[8];
  if (v378[8]) {
    sub_1AFF88E80(9, v351);
  }
  swift_release();
  v441[0] = 10;
  sub_1AFF89D3C(0, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  uint64_t v91 = v90;
  sub_1AFDF8D58();
  sub_1AFFC8E48();
  uint64_t v342 = v91;
  sub_1AFFCBAF8();
  uint64_t v339 = *(void *)v378;
  if (!*(void *)v378) {
    sub_1AFF88E80(10, v351);
  }
  swift_release();
  v378[0] = 11;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  int v338 = v441[0];
  if (v441[0] == 2) {
    sub_1AFF88E80(11, v351);
  }
  swift_release();
  v378[0] = 12;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  int v337 = v441[0];
  if (v441[0] == 2) {
    sub_1AFF88E80(12, v351);
  }
  swift_release();
  v441[0] = 13;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  double v336 = *(double *)v378;
  int v335 = v378[8];
  if (v378[8]) {
    sub_1AFF88E80(13, v351);
  }
  swift_release();
  v378[0] = 14;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  int v334 = v441[0];
  if (v441[0] == 2) {
    sub_1AFF88E80(14, v351);
  }
  swift_release();
  v378[0] = 15;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  int v333 = v441[0];
  if (v441[0] == 2) {
    sub_1AFF88E80(15, v351);
  }
  swift_release();
  v441[0] = 16;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v332 = *(void *)v378;
  int v331 = v378[8];
  if (v378[8]) {
    sub_1AFF88E80(16, v351);
  }
  swift_release();
  v441[0] = 17;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v330 = *(void *)v378;
  int v329 = v378[8];
  if (v378[8]) {
    sub_1AFF88E80(17, v351);
  }
  swift_release();
  v441[0] = 18;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  double v328 = *(double *)v378;
  int v327 = v378[8];
  if (v378[8]) {
    sub_1AFF88E80(18, v351);
  }
  swift_release();
  v441[0] = 19;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  double v326 = *(double *)v378;
  int v325 = v378[8];
  if (v378[8]) {
    sub_1AFF88E80(19, v351);
  }
  swift_release();
  v441[0] = 20;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  double v324 = *(double *)v378;
  int v323 = v378[8];
  if (v378[8]) {
    sub_1AFF88E80(20, v351);
  }
  swift_release();
  v441[0] = 21;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  double v322 = *(double *)v378;
  int v321 = v378[8];
  if (v378[8]) {
    sub_1AFF88E80(21, v351);
  }
  swift_release();
  v441[0] = 22;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  double v320 = *(double *)v378;
  int v319 = v378[8];
  if (v378[8]) {
    sub_1AFF88E80(22, v351);
  }
  swift_release();
  v441[0] = 23;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  unint64_t v317 = *(void *)v378;
  unint64_t v318 = *(void *)&v378[8];
  if (!*(void *)&v378[8]) {
    sub_1AFF88E80(23, v351);
  }
  swift_release();
  v441[0] = 24;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  double v316 = *(double *)v378;
  int v315 = v378[8];
  if (v378[8]) {
    sub_1AFF88E80(24, v351);
  }
  swift_release();
  v441[0] = 25;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  double v314 = *(double *)v378;
  int v313 = v378[8];
  if (v378[8]) {
    sub_1AFF88E80(25, v351);
  }
  swift_release();
  v441[0] = 26;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  double v312 = *(double *)v378;
  int v311 = v378[8];
  if (v378[8]) {
    sub_1AFF88E80(26, v351);
  }
  swift_release();
  v441[0] = 27;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  double v310 = *(double *)v378;
  int v309 = v378[8];
  if (v378[8]) {
    sub_1AFF88E80(27, v351);
  }
  swift_release();
  v441[0] = 28;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  double v308 = *(double *)v378;
  int v307 = v378[8];
  if (v378[8]) {
    sub_1AFF88E80(28, v351);
  }
  swift_release();
  v441[0] = 29;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  double v306 = *(double *)v378;
  int v305 = v378[8];
  if (v378[8]) {
    sub_1AFF88E80(29, v351);
  }
  swift_release();
  v441[0] = 30;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  double v304 = *(double *)v378;
  int v303 = v378[8];
  if (v378[8]) {
    sub_1AFF88E80(30, v351);
  }
  swift_release();
  v441[0] = 31;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  double v302 = *(double *)v378;
  int v301 = v378[8];
  if (v378[8]) {
    sub_1AFF88E80(31, v351);
  }
  swift_release();
  v378[0] = 32;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  int v300 = v441[0];
  if (v441[0] == 2) {
    sub_1AFF88E80(32, v351);
  }
  swift_release();
  v378[0] = 33;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  int v299 = v441[0];
  if (v441[0] == 2) {
    sub_1AFF88E80(33, v351);
  }
  swift_release();
  v378[0] = 34;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  int v298 = v441[0];
  if (v441[0] == 2) {
    sub_1AFF88E80(34, v351);
  }
  swift_release();
  v441[0] = 35;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v297 = *(void *)v378;
  int v296 = v378[8];
  if (v378[8]) {
    sub_1AFF88E80(35, v351);
  }
  swift_release();
  v441[0] = 36;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v295 = *(void *)v378;
  int v294 = v378[8];
  if (v378[8]) {
    sub_1AFF88E80(36, v351);
  }
  swift_release();
  v441[0] = 37;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v286 = *(void *)v378;
  int v285 = v378[8];
  if (v378[8]) {
    sub_1AFF88E80(37, v351);
  }
  swift_release();
  v441[0] = 38;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v278 = *(void *)v378;
  int v277 = v378[8];
  if (v378[8]) {
    sub_1AFF88E80(38, v351);
  }
  swift_release();
  v441[0] = 39;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v276 = *(void *)v378;
  int v275 = v378[8];
  if (v378[8]) {
    sub_1AFF88E80(39, v351);
  }
  swift_release();
  v441[0] = 40;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v248 = *(void *)v378;
  int v247 = v378[8];
  if (v378[8]) {
    sub_1AFF88E80(40, v351);
  }
  swift_release();
  v441[0] = 41;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v218 = *(void *)v378;
  int v217 = v378[8];
  if (v378[8]) {
    sub_1AFF88E80(41, v351);
  }
  swift_release();
  v441[0] = 42;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v216 = *(void *)v378;
  int v215 = v378[8];
  if (v378[8]) {
    sub_1AFF88E80(42, v351);
  }
  swift_release();
  v441[0] = 43;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v214 = *(void *)v378;
  int v213 = v378[8];
  if (v378[8]) {
    sub_1AFF88E80(43, v351);
  }
  swift_release();
  v441[0] = 44;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v212 = *(void *)v378;
  int v211 = v378[8];
  if (v378[8]) {
    sub_1AFF88E80(44, v351);
  }
  swift_release();
  v441[0] = 45;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v210 = *(void *)v378;
  int v209 = v378[8];
  if (v378[8]) {
    sub_1AFF88E80(45, v351);
  }
  swift_release();
  v378[0] = 46;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  int v208 = v441[0];
  if (v441[0] == 2) {
    sub_1AFF88E80(46, v351);
  }
  swift_release();
  char v525 = 47;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v533 = 0;
  uint64_t v207 = v523[99];
  int v206 = v524;
  if (v524) {
    sub_1AFF88E80(47, v351);
  }
  swift_release();
  sub_1AFF793E8((uint64_t)v532, (uint64_t)v523, &qword_1EB818E68, (uint64_t)&type metadata for LanguageConfig);
  if (sub_1AFD48F48((uint64_t)v523) == 1)
  {
    uint64_t v274 = 0;
    uint64_t v293 = 0;
  }
  else
  {
    uint64_t v274 = v523[2];
    uint64_t v293 = v523[3];
    sub_1AFFC8E38();
  }
  unint64_t v92 = *(void (**)(char *, char *, uint64_t))(v373 + 16);
  uint64_t v290 = v373 + 16;
  char v289 = v92;
  v92(v352, v356, v374);
  if (!v293)
  {
    v441[0] = 83;
    sub_1AFFC8E48();
    uint64_t v93 = v533;
    sub_1AFFCBAF8();
    uint64_t v533 = v93;
    if (v93)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1AFF89124((uint64_t)v532);
      double v94 = *(void (**)(void, uint64_t))(v373 + 8);
      uint64_t v95 = v374;
      v94(v352, v374);
      (*(void (**)(char *, uint64_t))(v371 + 8))(v375, v372);
      v94(v356, v95);
      goto LABEL_5;
    }
    uint64_t v274 = *(void *)v378;
    uint64_t v293 = *(void *)&v378[8];
    if (!*(void *)&v378[8]) {
      sub_1AFF88E80(83, v351);
    }
    swift_release();
  }
  uint64_t v96 = *(char **)(v373 + 8);
  uint64_t v97 = v352;
  v373 += 8;
  unint64_t v352 = v96;
  ((void (*)(char *, uint64_t))v96)(v97, v374);
  v378[0] = 84;
  sub_1AFFC8E48();
  uint64_t v98 = v533;
  sub_1AFFCBAF8();
  uint64_t v99 = v98;
  if (v98)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_159:
    swift_bridgeObjectRelease();
    sub_1AFF89124((uint64_t)v532);
LABEL_389:
    (*(void (**)(char *, uint64_t))(v371 + 8))(v375, v372);
    ((void (*)(char *, uint64_t))v352)(v356, v374);
    swift_release_n();
    uint64_t v533 = v99;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v376);
  }
  int v205 = v441[0];
  if (v441[0] == 2) {
    sub_1AFF88E80(84, v351);
  }
  swift_release();
  v378[0] = 85;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  int v204 = v441[0];
  if (v441[0] == 2) {
    sub_1AFF88E80(85, v351);
  }
  swift_release();
  char v522 = 86;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v533 = 0;
  uint64_t v203 = v520[99];
  int v202 = v521;
  if (v521) {
    sub_1AFF88E80(86, v351);
  }
  swift_release();
  sub_1AFF793E8((uint64_t)v532, (uint64_t)v520, &qword_1EB818E68, (uint64_t)&type metadata for LanguageConfig);
  if (sub_1AFD48F48((uint64_t)v520) == 1)
  {
    v289(v353, v356, v374);
  }
  else
  {
    uint64_t v246 = v520[4];
    uint64_t v100 = v520[5];
    sub_1AFFC8E38();
    v289(v353, v356, v374);
    uint64_t v292 = v100;
    if (v100) {
      goto LABEL_157;
    }
  }
  v441[0] = 87;
  sub_1AFFC8E48();
  uint64_t v101 = v533;
  sub_1AFFCBAF8();
  uint64_t v533 = v101;
  if (v101)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1AFF89124((uint64_t)v532);
    uint64_t v102 = v374;
    uint64_t v103 = (void (*)(char *, uint64_t))v352;
    ((void (*)(char *, uint64_t))v352)(v353, v374);
    (*(void (**)(char *, uint64_t))(v371 + 8))(v375, v372);
    char v104 = v356;
    uint64_t v105 = v102;
LABEL_345:
    v103(v104, v105);
    goto LABEL_5;
  }
  uint64_t v246 = *(void *)v378;
  uint64_t v292 = *(void *)&v378[8];
  if (!*(void *)&v378[8]) {
    sub_1AFF88E80(87, v351);
  }
  swift_release();
LABEL_157:
  ((void (*)(char *, uint64_t))v352)(v353, v374);
  v441[0] = 88;
  sub_1AFFC8E48();
  uint64_t v106 = v533;
  sub_1AFFCBAF8();
  uint64_t v99 = v106;
  if (v106)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_159;
  }
  uint64_t v201 = *(void *)v378;
  char v353 = *(char **)&v378[8];
  if (!*(void *)&v378[8]) {
    sub_1AFF88E80(88, v351);
  }
  swift_release();
  char v519 = 89;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v533 = 0;
  uint64_t v200 = v517;
  int v199 = v518;
  if (v518) {
    sub_1AFF88E80(89, v351);
  }
  swift_release();
  sub_1AFF793E8((uint64_t)v532, (uint64_t)v512, &qword_1EB818E68, (uint64_t)&type metadata for LanguageConfig);
  if (sub_1AFD48F48((uint64_t)v512) == 1)
  {
    v289(v354, v356, v374);
  }
  else
  {
    uint64_t v107 = v514;
    uint64_t v284 = v513;
    uint64_t v288 = v515;
    uint64_t v291 = v516;
    sub_1AFEBC260(v513, v514);
    v289(v354, v356, v374);
    uint64_t v287 = v107;
    if (v107)
    {
      ((void (*)(char *, uint64_t))v352)(v354, v374);
      uint64_t v508 = v284;
      uint64_t v509 = v287;
      uint64_t v510 = v288;
      uint64_t v511 = v291;
      goto LABEL_171;
    }
  }
  uint64_t v108 = v351;
  sub_1AFFC8E48();
  uint64_t v109 = v108;
  uint64_t v110 = v533;
  sub_1AFF75DB0(90, v109, &v508);
  uint64_t v533 = v110;
  if (v110)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1AFF89124((uint64_t)v532);
    uint64_t v111 = v374;
    unint64_t v112 = (void (*)(char *, uint64_t))v352;
    ((void (*)(char *, uint64_t))v352)(v354, v374);
    (*(void (**)(char *, uint64_t))(v371 + 8))(v375, v372);
    v112(v356, v111);
    goto LABEL_5;
  }
  ((void (*)(char *, uint64_t))v352)(v354, v374);
  uint64_t v284 = v508;
  uint64_t v287 = v509;
  uint64_t v288 = v510;
  uint64_t v291 = v511;
LABEL_171:
  uint64_t v504 = v284;
  uint64_t v505 = v287;
  uint64_t v506 = v288;
  uint64_t v507 = v291;
  uint64_t v113 = v351;
  sub_1AFFC8E48();
  uint64_t v114 = v113;
  uint64_t v115 = v533;
  sub_1AFF75EB0(91, v114, &v495);
  if (v115)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1AFF89124((uint64_t)v532);
    sub_1AFF8975C(v284, v287);
    (*(void (**)(char *, uint64_t))(v371 + 8))(v375, v372);
    ((void (*)(char *, uint64_t))v352)(v356, v374);
    swift_release_n();
    uint64_t v533 = v115;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v376);
  }
  uint64_t v272 = v495;
  uint64_t v486 = v495;
  uint64_t v273 = v496;
  uint64_t v487 = v496;
  uint64_t v279 = v497;
  uint64_t v488 = v497;
  uint64_t v280 = v498;
  uint64_t v489 = v498;
  uint64_t v281 = v499;
  uint64_t v490 = v499;
  uint64_t v282 = v500;
  uint64_t v491 = v500;
  uint64_t v283 = v501;
  uint64_t v492 = v501;
  uint64_t v533 = v502;
  uint64_t v493 = v502;
  uint64_t v271 = v503;
  uint64_t v494 = v503;
  uint64_t v116 = v351;
  sub_1AFFC8E48();
  sub_1AFF75FEC(92, v116, &v484);
  long long v482 = v484;
  uint64_t v483 = v485;
  v441[0] = 53;
  sub_1AFF89D3C(0, &qword_1EB819D68, (uint64_t)&type metadata for ExternalAnalyticsConfiguration, MEMORY[0x1E4FBB320]);
  sub_1AFF89B6C();
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  unint64_t v354 = *(char **)v378;
  if (!*(void *)v378) {
    sub_1AFF88E80(53, v351);
  }
  swift_release();
  char v481 = 54;
  sub_1AFF89D3C(0, &qword_1EB819D08, (uint64_t)&type metadata for EndpointConfiguration, MEMORY[0x1E4FBB320]);
  sub_1AFF89C54();
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v291 = v480;
  if (!v480) {
    sub_1AFF88E80(54, v351);
  }
  swift_release();
  sub_1AFF793E8((uint64_t)v532, (uint64_t)v478, &qword_1EB818E68, (uint64_t)&type metadata for LanguageConfig);
  if (sub_1AFD48F48((uint64_t)v478) == 1)
  {
    sub_1AFECDDF0(v378);
    unint64_t v117 = v378;
  }
  else
  {
    sub_1AFF89F80(v479, sub_1AFEBC2A4);
    unint64_t v117 = v479;
  }
  sub_1AFF793E8((uint64_t)v117, (uint64_t)v477, &qword_1EB819618, (uint64_t)&type metadata for PaidBundleConfiguration);
  v289(v355, v356, v374);
  sub_1AFF793E8((uint64_t)v477, (uint64_t)v475, &qword_1EB819618, (uint64_t)&type metadata for PaidBundleConfiguration);
  if (sub_1AFF79468((uint64_t)v475) == 1)
  {
    uint64_t v118 = v351;
    sub_1AFFC8E48();
    sub_1AFF760F4(55, v118, (uint64_t)v476);
    ((void (*)(char *, uint64_t))v352)(v355, v374);
  }
  else
  {
    ((void (*)(char *, uint64_t))v352)(v355, v374);
    sub_1AFF793E8((uint64_t)v477, (uint64_t)v476, &qword_1EB819618, (uint64_t)&type metadata for PaidBundleConfiguration);
  }
  sub_1AFF793E8((uint64_t)v476, (uint64_t)v464, &qword_1EB819618, (uint64_t)&type metadata for PaidBundleConfiguration);
  sub_1AFF793E8((uint64_t)v464, (uint64_t)v463, &qword_1EB819618, (uint64_t)&type metadata for PaidBundleConfiguration);
  sub_1AFF793E8((uint64_t)v532, (uint64_t)v465, &qword_1EB818E68, (uint64_t)&type metadata for LanguageConfig);
  if (sub_1AFD48F48((uint64_t)v465) == 1)
  {
    v289(v357, v356, v374);
LABEL_186:
    uint64_t v120 = v351;
    sub_1AFFC8E48();
    sub_1AFF76244(56, v120, (uint64_t)&v454);
    ((void (*)(char *, uint64_t))v352)(v357, v374);
    uint64_t v280 = v454;
    uint64_t v281 = v455;
    uint64_t v282 = v456;
    uint64_t v283 = v457;
    uint64_t v284 = v458;
    uint64_t v287 = v459;
    uint64_t v288 = v460;
    unint64_t v355 = v461;
    LODWORD(v279) = v462;
    goto LABEL_188;
  }
  uint64_t v119 = v466;
  LODWORD(v279) = v474;
  uint64_t v281 = v467;
  uint64_t v282 = v468;
  uint64_t v283 = v469;
  uint64_t v284 = v470;
  uint64_t v287 = v471;
  uint64_t v288 = v472;
  unint64_t v355 = v473;
  sub_1AFEBC4D8(v466);
  v289(v357, v356, v374);
  uint64_t v280 = v119;
  if (v119 == 1) {
    goto LABEL_186;
  }
  ((void (*)(char *, uint64_t))v352)(v357, v374);
  uint64_t v454 = v280;
  uint64_t v455 = v281;
  uint64_t v456 = v282;
  uint64_t v457 = v283;
  uint64_t v458 = v284;
  uint64_t v459 = v287;
  uint64_t v460 = v288;
  char v461 = v355;
  unsigned __int8 v462 = v279;
LABEL_188:
  uint64_t v445 = v280;
  uint64_t v446 = v281;
  uint64_t v447 = v282;
  uint64_t v448 = v283;
  uint64_t v449 = v284;
  uint64_t v450 = v287;
  uint64_t v451 = v288;
  unint64_t v452 = v355;
  char v453 = v279;
  uint64_t v121 = v351;
  sub_1AFFC8E48();
  sub_1AFF76388(57, v121, (uint64_t)v444);
  sub_1AFF793E8((uint64_t)v444, (uint64_t)v443, &qword_1EB8197B8, (uint64_t)&type metadata for ArticleScoringConfiguration);
  sub_1AFF793E8((uint64_t)v443, (uint64_t)&v442, &qword_1EB8197B8, (uint64_t)&type metadata for ArticleScoringConfiguration);
  sub_1AFFC8E48();
  sub_1AFF764D8(93);
  uint64_t v533 = 0;
  sub_1AFF793E8((uint64_t)v441, (uint64_t)v440, &qword_1EB819838, (uint64_t)&type metadata for NewsPersonalizationTreatment);
  sub_1AFF793E8((uint64_t)v440, (uint64_t)&v439, &qword_1EB819838, (uint64_t)&type metadata for NewsPersonalizationTreatment);
  LOBYTE(v432) = 94;
  sub_1AFFC8E48();
  uint64_t v122 = v533;
  sub_1AFFCBAF8();
  uint64_t v99 = v122;
  if (v122)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1AFF89124((uint64_t)v532);
    uint64_t v123 = v280;
LABEL_388:
    sub_1AFF899D4(v123);
    sub_1AFF793E8((uint64_t)v463, (uint64_t)v378, &qword_1EB819618, (uint64_t)&type metadata for PaidBundleConfiguration);
    sub_1AFF89F80(v378, sub_1AFF897A0);
    sub_1AFF89AFC(v486, v487);
    sub_1AFF8975C(v504, v505);
    goto LABEL_389;
  }
  int v198 = v425;
  if (v425 == 2) {
    sub_1AFF88E80(94, v351);
  }
  swift_release();
  LOBYTE(v425) = 48;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v197 = v432;
  int v196 = v433;
  if (v433) {
    sub_1AFF88E80(48, v351);
  }
  swift_release();
  LOBYTE(v425) = 49;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v195 = v432;
  int v194 = v433;
  if (v433) {
    sub_1AFF88E80(49, v351);
  }
  swift_release();
  LOBYTE(v425) = 50;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v193 = v432;
  int v192 = v433;
  if (v433) {
    sub_1AFF88E80(50, v351);
  }
  swift_release();
  LOBYTE(v425) = 51;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v191 = v432;
  int v190 = v433;
  if (v433) {
    sub_1AFF88E80(51, v351);
  }
  swift_release();
  char v438 = 52;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v189 = v436;
  int v188 = v437;
  if (v437) {
    sub_1AFF88E80(52, v351);
  }
  swift_release();
  sub_1AFF793E8((uint64_t)v532, (uint64_t)&v432, &qword_1EB818E68, (uint64_t)&type metadata for LanguageConfig);
  if (sub_1AFD48F48((uint64_t)&v432) == 1)
  {
    v289(v358, v356, v374);
  }
  else
  {
    uint64_t v245 = v434;
    char v124 = v435;
    sub_1AFFC8E38();
    v289(v358, v356, v374);
    uint64_t v357 = v124;
    if (v124) {
      goto LABEL_209;
    }
  }
  LOBYTE(v421) = 58;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v245 = v425;
  uint64_t v357 = v426;
  if (!v426) {
    sub_1AFF88E80(58, v351);
  }
  swift_release();
LABEL_209:
  ((void (*)(char *, uint64_t))v352)(v358, v374);
  LOBYTE(v425) = 95;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v244 = *(void *)v378;
  if (v378[8])
  {
    sub_1AFF88E80(95, v351);
    swift_release();
    int v270 = 1;
  }
  else
  {
    swift_release();
    int v270 = 0;
  }
  LOBYTE(v425) = 96;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v243 = *(void *)v378;
  if (v378[8])
  {
    sub_1AFF88E80(96, v351);
    swift_release();
    int v269 = 1;
  }
  else
  {
    swift_release();
    int v269 = 0;
  }
  LOBYTE(v425) = 97;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v242 = *(void *)v378;
  if (v378[8])
  {
    sub_1AFF88E80(97, v351);
    swift_release();
    int v268 = 1;
  }
  else
  {
    swift_release();
    int v268 = 0;
  }
  LOBYTE(v425) = 98;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v241 = *(void *)v378;
  if (v378[8])
  {
    sub_1AFF88E80(98, v351);
    swift_release();
    int v267 = 1;
  }
  else
  {
    swift_release();
    int v267 = 0;
  }
  LOBYTE(v425) = 99;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v240 = *(void *)v378;
  if (v378[8])
  {
    sub_1AFF88E80(99, v351);
    swift_release();
    int v266 = 1;
  }
  else
  {
    swift_release();
    int v266 = 0;
  }
  LOBYTE(v425) = 100;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v239 = *(void *)v378;
  if (v378[8])
  {
    sub_1AFF88E80(100, v351);
    swift_release();
    int v265 = 1;
  }
  else
  {
    swift_release();
    int v265 = 0;
  }
  LOBYTE(v425) = 71;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v238 = *(void *)v378;
  if (v378[8])
  {
    sub_1AFF88E80(71, v351);
    swift_release();
    int v264 = 1;
  }
  else
  {
    swift_release();
    int v264 = 0;
  }
  LOBYTE(v425) = 72;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v237 = *(void *)v378;
  if (v378[8])
  {
    sub_1AFF88E80(72, v351);
    swift_release();
    int v263 = 1;
  }
  else
  {
    swift_release();
    int v263 = 0;
  }
  LOBYTE(v425) = 73;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v236 = *(void *)v378;
  if (v378[8])
  {
    sub_1AFF88E80(73, v351);
    swift_release();
    int v262 = 1;
  }
  else
  {
    swift_release();
    int v262 = 0;
  }
  LOBYTE(v425) = 74;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v235 = *(void *)v378;
  if (v378[8])
  {
    sub_1AFF88E80(74, v351);
    swift_release();
    int v261 = 1;
  }
  else
  {
    swift_release();
    int v261 = 0;
  }
  char v431 = 75;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v234 = v429;
  if (v430)
  {
    sub_1AFF88E80(75, v351);
    swift_release();
    int v260 = 1;
  }
  else
  {
    swift_release();
    int v260 = 0;
  }
  sub_1AFF793E8((uint64_t)v532, (uint64_t)&v425, &qword_1EB818E68, (uint64_t)&type metadata for LanguageConfig);
  if (sub_1AFD48F48((uint64_t)&v425) == 1)
  {
    v289(v359, v356, v374);
  }
  else
  {
    uint64_t v233 = v427;
    unint64_t v125 = v428;
    sub_1AFFC8E38();
    v289(v359, v356, v374);
    char v358 = v125;
    if (v125) {
      goto LABEL_248;
    }
  }
  LOBYTE(v403) = 76;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v233 = v421;
  char v358 = v422;
  if (!v422) {
    sub_1AFF88E80(76, v351);
  }
  swift_release();
LABEL_248:
  ((void (*)(char *, uint64_t))v352)(v359, v374);
  sub_1AFF793E8((uint64_t)v532, (uint64_t)&v421, &qword_1EB818E68, (uint64_t)&type metadata for LanguageConfig);
  if (sub_1AFD48F48((uint64_t)&v421) == 1)
  {
    v289(v360, v356, v374);
  }
  else
  {
    uint64_t v232 = v423;
    unint64_t v126 = v424;
    sub_1AFFC8E38();
    v289(v360, v356, v374);
    double v359 = v126;
    if (v126) {
      goto LABEL_254;
    }
  }
  v395[0] = 77;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v232 = v403;
  double v359 = v404;
  if (!v404) {
    sub_1AFF88E80(77, v351);
  }
  swift_release();
LABEL_254:
  ((void (*)(char *, uint64_t))v352)(v360, v374);
  v395[0] = 78;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v187 = v403;
  int v186 = v404;
  if (v404) {
    sub_1AFF88E80(78, v351);
  }
  swift_release();
  v378[0] = 59;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  LODWORD(v273) = v403;
  if (v403 == 2)
  {
    sub_1AFF88E80(59, v351);
    swift_release();
    LODWORD(v273) = 2;
  }
  else
  {
    swift_release();
  }
  v395[0] = 101;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v185 = v403;
  int v184 = v404;
  if (v404) {
    sub_1AFF88E80(101, v351);
  }
  swift_release();
  LOBYTE(v403) = 102;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v231 = *(void *)v378;
  if (v378[8])
  {
    sub_1AFF88E80(102, v351);
    swift_release();
    int v259 = 1;
  }
  else
  {
    swift_release();
    int v259 = 0;
  }
  v395[0] = 103;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v183 = v403;
  int v182 = v404;
  if (v404) {
    sub_1AFF88E80(103, v351);
  }
  swift_release();
  LOBYTE(v403) = 60;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v230 = *(void *)v378;
  if (v378[8])
  {
    sub_1AFF88E80(60, v351);
    swift_release();
    int v258 = 1;
  }
  else
  {
    swift_release();
    int v258 = 0;
  }
  LOBYTE(v403) = 61;
  sub_1AFF89D3C(0, &qword_1EB819CA0, (uint64_t)&type metadata for StocksKitClientConfig, MEMORY[0x1E4FBB320]);
  sub_1AFF89D88();
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  unint64_t v360 = *(char **)v378;
  if (*(void *)v378)
  {
    swift_release();
  }
  else
  {
    sub_1AFF88E80(61, v351);
    swift_release();
    unint64_t v360 = 0;
  }
  v378[0] = 104;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  LODWORD(v272) = v403;
  if (v403 == 2)
  {
    sub_1AFF88E80(104, v351);
    swift_release();
    LODWORD(v272) = 2;
  }
  else
  {
    swift_release();
  }
  v378[0] = 105;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  LODWORD(v271) = v403;
  if (v403 == 2)
  {
    sub_1AFF88E80(105, v351);
    swift_release();
    LODWORD(v271) = 2;
  }
  else
  {
    swift_release();
  }
  LOBYTE(v403) = 106;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v229 = *(void *)v378;
  if (v378[8])
  {
    sub_1AFF88E80(106, v351);
    swift_release();
    int v257 = 1;
  }
  else
  {
    swift_release();
    int v257 = 0;
  }
  LOBYTE(v403) = 62;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v228 = *(void *)v378;
  if (v378[8])
  {
    sub_1AFF88E80(62, v351);
    swift_release();
    int v256 = 1;
  }
  else
  {
    swift_release();
    int v256 = 0;
  }
  LOBYTE(v403) = 63;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v227 = *(void *)v378;
  if (v378[8])
  {
    sub_1AFF88E80(63, v351);
    swift_release();
    int v255 = 1;
  }
  else
  {
    swift_release();
    int v255 = 0;
  }
  LOBYTE(v403) = 64;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v226 = *(void *)v378;
  if (v378[8])
  {
    sub_1AFF88E80(64, v351);
    swift_release();
    int v254 = 1;
  }
  else
  {
    swift_release();
    int v254 = 0;
  }
  v395[0] = 65;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  unint64_t v355 = (char *)v403;
  if (!v403) {
    sub_1AFF88E80(65, v351);
  }
  swift_release();
  v395[0] = 66;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v288 = v403;
  if (!v403) {
    sub_1AFF88E80(66, v351);
  }
  swift_release();
  v395[0] = 67;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v287 = v403;
  if (!v403) {
    sub_1AFF88E80(67, v351);
  }
  swift_release();
  v395[0] = 107;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v181 = v403;
  int v180 = v404;
  if (v404) {
    sub_1AFF88E80(107, v351);
  }
  swift_release();
  v395[0] = 108;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v179 = v403;
  int v178 = v404;
  if (v404) {
    sub_1AFF88E80(108, v351);
  }
  uint64_t v127 = v351;
  swift_release();
  sub_1AFFC8E48();
  sub_1AFF7664C(109, v127, &v417);
  uint64_t v413 = v417;
  uint64_t v281 = v418;
  uint64_t v414 = v418;
  uint64_t v284 = v419;
  uint64_t v415 = v419;
  uint64_t v533 = v420;
  uint64_t v416 = v420;
  v395[0] = 68;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v283 = v403;
  if (!v403) {
    sub_1AFF88E80(68, v351);
  }
  swift_release();
  v395[0] = 69;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v282 = v403;
  if (!v403) {
    sub_1AFF88E80(69, v351);
  }
  swift_release();
  v395[0] = 70;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v281 = v403;
  if (!v403) {
    sub_1AFF88E80(70, v351);
  }
  swift_release();
  LOBYTE(v403) = 79;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v225 = *(void *)v378;
  if (v378[8])
  {
    sub_1AFF88E80(79, v351);
    swift_release();
    int v253 = 1;
  }
  else
  {
    swift_release();
    int v253 = 0;
  }
  LOBYTE(v403) = 80;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v284 = *(void *)v378;
  if (*(void *)v378)
  {
    swift_release();
  }
  else
  {
    sub_1AFF88E80(80, v351);
    swift_release();
    uint64_t v284 = 0;
  }
  LOBYTE(v403) = 81;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v224 = *(void *)v378;
  if (v378[8])
  {
    sub_1AFF88E80(81, v351);
    swift_release();
    int v252 = 1;
  }
  else
  {
    swift_release();
    int v252 = 0;
  }
  LOBYTE(v403) = 82;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v223 = *(void *)v378;
  if (v378[8])
  {
    sub_1AFF88E80(82, v351);
    swift_release();
    int v251 = 1;
  }
  else
  {
    swift_release();
    int v251 = 0;
  }
  LOBYTE(v403) = 0x80;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v222 = *(void *)v378;
  if (v378[8])
  {
    sub_1AFF88E80(128, v351);
    swift_release();
    int v250 = 1;
  }
  else
  {
    swift_release();
    int v250 = 0;
  }
  char v412 = 110;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v533 = 0;
  uint64_t v221 = v410;
  if (v411)
  {
    sub_1AFF88E80(110, v351);
    swift_release();
    int v249 = 1;
  }
  else
  {
    swift_release();
    int v249 = 0;
  }
  sub_1AFF793E8((uint64_t)v532, (uint64_t)&v403, &qword_1EB818E68, (uint64_t)&type metadata for LanguageConfig);
  if (sub_1AFD48F48((uint64_t)&v403) == 1)
  {
    v289(v361, v356, v374);
  }
  else
  {
    uint64_t v280 = v405;
    uint64_t v128 = v406;
    uint64_t v129 = v407;
    uint64_t v130 = v408;
    LODWORD(v279) = v409;
    v289(v361, v356, v374);
    if ((v279 & 1) == 0)
    {
      ((void (*)(char *, uint64_t))v352)(v361, v374);
      char v136 = 0;
      uint64_t v398 = v280;
      uint64_t v399 = v128;
      uint64_t v400 = v129;
      uint64_t v401 = v130;
      char v402 = 0;
      goto LABEL_331;
    }
  }
  uint64_t v131 = v351;
  sub_1AFFC8E48();
  uint64_t v132 = v131;
  uint64_t v133 = v533;
  sub_1AFF76750(111, v132, (uint64_t)&v398);
  uint64_t v533 = v133;
  if (v133)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1AFF89124((uint64_t)v532);
    uint64_t v134 = v374;
    char v135 = (void (*)(char *, uint64_t))v352;
    ((void (*)(char *, uint64_t))v352)(v361, v374);
    sub_1AFD56284(v413, v414);
    sub_1AFF899D4(v445);
    sub_1AFF793E8((uint64_t)v463, (uint64_t)v378, &qword_1EB819618, (uint64_t)&type metadata for PaidBundleConfiguration);
    sub_1AFF89F80(v378, sub_1AFF897A0);
    sub_1AFF89AFC(v486, v487);
    sub_1AFF8975C(v504, v505);
    (*(void (**)(char *, uint64_t))(v371 + 8))(v375, v372);
    v135(v356, v134);
    goto LABEL_5;
  }
  ((void (*)(char *, uint64_t))v352)(v361, v374);
  uint64_t v280 = v398;
  uint64_t v128 = v399;
  uint64_t v129 = v400;
  uint64_t v130 = v401;
  char v136 = v402;
LABEL_331:
  uint64_t v390 = v280;
  uint64_t v391 = v128;
  uint64_t v392 = v129;
  uint64_t v393 = v130;
  char v394 = v136;
  sub_1AFF793E8((uint64_t)v532, (uint64_t)v395, &qword_1EB818E68, (uint64_t)&type metadata for LanguageConfig);
  if (sub_1AFD48F48((uint64_t)v395) == 1)
  {
    v289(v362, v356, v374);
  }
  else
  {
    uint64_t v220 = v396;
    char v137 = v397;
    sub_1AFFC8E38();
    v289(v362, v356, v374);
    unint64_t v361 = v137;
    if (v137) {
      goto LABEL_339;
    }
  }
  LOBYTE(v381) = 112;
  sub_1AFFC8E48();
  uint64_t v138 = v533;
  sub_1AFFCBAF8();
  uint64_t v533 = v138;
  if (v138)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1AFF89124((uint64_t)v532);
    uint64_t v139 = v362;
LABEL_344:
    uint64_t v142 = v374;
    uint64_t v103 = (void (*)(char *, uint64_t))v352;
    ((void (*)(char *, uint64_t))v352)(v139, v374);
    sub_1AFD56284(v413, v414);
    sub_1AFF899D4(v445);
    sub_1AFF793E8((uint64_t)v463, (uint64_t)v378, &qword_1EB819618, (uint64_t)&type metadata for PaidBundleConfiguration);
    sub_1AFF89F80(v378, sub_1AFF897A0);
    sub_1AFF89AFC(v486, v487);
    sub_1AFF8975C(v504, v505);
    (*(void (**)(char *, uint64_t))(v371 + 8))(v375, v372);
    char v104 = v356;
    uint64_t v105 = v142;
    goto LABEL_345;
  }
  uint64_t v220 = v386;
  unint64_t v361 = v387;
  if (!v387) {
    sub_1AFF88E80(112, v351);
  }
  swift_release();
LABEL_339:
  ((void (*)(char *, uint64_t))v352)(v362, v374);
  sub_1AFF793E8((uint64_t)v532, (uint64_t)&v386, &qword_1EB818E68, (uint64_t)&type metadata for LanguageConfig);
  if (sub_1AFD48F48((uint64_t)&v386) == 1)
  {
    v289(v363, v356, v374);
  }
  else
  {
    uint64_t v219 = v388;
    char v140 = v389;
    sub_1AFFC8E38();
    v289(v363, v356, v374);
    unint64_t v362 = v140;
    if (v140) {
      goto LABEL_349;
    }
  }
  LOBYTE(v377) = 113;
  sub_1AFFC8E48();
  uint64_t v141 = v533;
  sub_1AFFCBAF8();
  uint64_t v533 = v141;
  if (v141)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1AFF89124((uint64_t)v532);
    uint64_t v139 = v363;
    goto LABEL_344;
  }
  uint64_t v219 = v381;
  unint64_t v362 = v382;
  if (!v382) {
    sub_1AFF88E80(113, v351);
  }
  swift_release();
LABEL_349:
  ((void (*)(char *, uint64_t))v352)(v363, v374);
  LOBYTE(v377) = 114;
  sub_1AFFC8E48();
  uint64_t v143 = v533;
  sub_1AFFCBAF8();
  uint64_t v99 = v143;
  if (v143)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1AFF89124((uint64_t)v532);
    sub_1AFD56284(v413, v414);
    uint64_t v123 = v445;
    goto LABEL_388;
  }
  uint64_t v177 = v381;
  int v176 = v382;
  if (v382) {
    sub_1AFF88E80(114, v351);
  }
  swift_release();
  LOBYTE(v377) = 115;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v175 = v381;
  int v174 = v382;
  if (v382) {
    sub_1AFF88E80(115, v351);
  }
  swift_release();
  LOBYTE(v377) = 116;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v173 = v381;
  int v172 = v382;
  if (v382) {
    sub_1AFF88E80(116, v351);
  }
  swift_release();
  LOBYTE(v377) = 117;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v171 = v381;
  int v170 = v382;
  if (v382) {
    sub_1AFF88E80(117, v351);
  }
  swift_release();
  LOBYTE(v381) = 118;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  int v169 = v377;
  if (v377 == 2) {
    sub_1AFF88E80(118, v351);
  }
  swift_release();
  LOBYTE(v377) = 119;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v168 = v381;
  int v167 = v382;
  if (v382) {
    sub_1AFF88E80(119, v351);
  }
  swift_release();
  LOBYTE(v377) = 121;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v166 = v381;
  int v165 = v382;
  if (v382) {
    sub_1AFF88E80(121, v351);
  }
  swift_release();
  LOBYTE(v377) = 122;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v164 = v381;
  int v163 = v382;
  if (v382) {
    sub_1AFF88E80(122, v351);
  }
  swift_release();
  LOBYTE(v377) = 123;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v144 = v381;
  if (v381)
  {
    swift_release();
    unint64_t v363 = (char *)sub_1AFF75BB0(v144);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1AFF88E80(123, v351);
    swift_release();
    unint64_t v363 = 0;
  }
  LOBYTE(v377) = 124;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v162 = v381;
  v161[3] = v382;
  if (v382) {
    sub_1AFF88E80(124, v351);
  }
  swift_release();
  LOBYTE(v377) = 120;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v280 = v381;
  if (!v381) {
    sub_1AFF88E80(120, v351);
  }
  swift_release();
  LOBYTE(v381) = 125;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  v161[2] = v377;
  if (v377 == 2) {
    sub_1AFF88E80(125, v351);
  }
  swift_release();
  char v385 = 126;
  sub_1AFF89E70();
  sub_1AFF89ED8();
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v279 = v384;
  if (!v384) {
    sub_1AFF88E80(126, v351);
  }
  swift_release();
  sub_1AFF793E8((uint64_t)v532, (uint64_t)&v381, &qword_1EB818E68, (uint64_t)&type metadata for LanguageConfig);
  if (sub_1AFD48F48((uint64_t)&v381) == 1)
  {
    v289(v364, v356, v374);
LABEL_382:
    char v380 = 127;
    sub_1AFFC8E48();
    sub_1AFFCBAF8();
    uint64_t v290 = v377;
    if (!v377) {
      sub_1AFF88E80(127, v351);
    }
    swift_release();
    goto LABEL_385;
  }
  uint64_t v145 = v383;
  sub_1AFFC8E38();
  sub_1AFF89124((uint64_t)v532);
  v289(v364, v356, v374);
  uint64_t v290 = v145;
  if (!v145) {
    goto LABEL_382;
  }
LABEL_385:
  ((void (*)(char *, uint64_t))v352)(v364, v374);
  char v380 = -127;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  if (!v377) {
    sub_1AFF88E80(129, v351);
  }
  swift_release();
  LOBYTE(v377) = -126;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  if (v380 == 2) {
    sub_1AFF88E80(130, v351);
  }
  swift_release();
  char v380 = -125;
  sub_1AFFC8E48();
  sub_1AFFCBAF8();
  uint64_t v533 = 0;
  if (v379 == 2) {
    sub_1AFF88E80(131, v351);
  }
  uint64_t v146 = v351;
  swift_release();
  sub_1AFF76AC8(v368, v76, v370, v86, v369, v367, v366, v349, v147, v148, v149, v150, v151, v152, v153, v154, v89, v348, v347,
    v346,
    v345,
    v344,
    v343,
    v341,
    v340,
    v339,
    v338,
    v337,
    v336,
    v335,
    v334,
    v333,
    v332,
    v331,
    v330,
    v329,
    v328,
    v327,
    v326,
    v325,
    v324,
    v323,
    v322,
    v321,
    v320,
    v319,
    v317,
    v318,
    v316,
    v315,
    v314,
    v313,
    v312,
    v311,
    v310,
    v309,
    v308,
    v307,
    v306,
    v305,
    v304,
    v303,
    v302);
  swift_beginAccess();
  uint64_t v155 = *(void *)(v146 + 16);
  if (sub_1AFD5C7F8(v155))
  {
    sub_1AFD2C444(0);
  }
  else
  {
    sub_1AFF9305C(0, (unint64_t *)&qword_1EB81A100, (uint64_t (*)(uint64_t))sub_1AFD3AE64, MEMORY[0x1E4FBBE00]);
    uint64_t v157 = swift_allocObject();
    uint64_t v158 = sub_1AFD5CD78(v157, 1);
    uint64_t v160 = v159;
    v159[3] = v342;
    v159[4] = sub_1AFD5CDA0();
    *uint64_t v160 = v155;
    nullsub_1(v158);
    sub_1AFFC8E38();
  }
  uint64_t v156 = (void *)sub_1AFD2A1AC();
  sub_1AFD2A1D8();
  sub_1AFFCA878();
  swift_bridgeObjectRelease();

  (*(void (**)(char *, uint64_t))(v371 + 8))(v375, v372);
  ((void (*)(char *, uint64_t))v352)(v356, v374);
  swift_release_n();
  memcpy(v365, v378, 0x10BAuLL);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v376);
}

uint64_t sub_1AFF815F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v5 = a2;
  uint64_t v7 = a5;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC868];
    uint64_t v29 = *(void *)(a2 + 16);
    if (v29) {
      goto LABEL_17;
    }
    goto LABEL_24;
  }
  sub_1AFFC8E38();
  memcpy(__dst, (const void *)(a1 + 32), 0x318uLL);
  uint64_t v41 = v8;
  uint64_t v9 = v8 - 1;
  uint64_t v10 = (void *)MEMORY[0x1E4FBC868];
  for (uint64_t i = 824; ; i += 792)
  {
    uint64_t v12 = sub_1AFFCAF18();
    uint64_t v14 = v13;
    sub_1AFEBBF5C((uint64_t)__dst);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v17 = sub_1AFD79CC8(v12, v14);
    uint64_t v18 = v10[2];
    BOOL v19 = (v16 & 1) == 0;
    uint64_t v20 = v18 + v19;
    if (__OFADD__(v18, v19))
    {
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      uint64_t result = sub_1AFFCBD68();
      __break(1u);
      return result;
    }
    char v21 = v16;
    if (v10[3] >= v20)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v16) {
          goto LABEL_10;
        }
      }
      else
      {
        sub_1AFEBB198();
        if (v21) {
          goto LABEL_10;
        }
      }
    }
    else
    {
      sub_1AFEB73E8(v20, isUniquelyReferenced_nonNull_native);
      unint64_t v22 = sub_1AFD79CC8(v12, v14);
      if ((v21 & 1) != (v23 & 1)) {
        goto LABEL_38;
      }
      unint64_t v17 = v22;
      if (v21)
      {
LABEL_10:
        uint64_t v24 = (void *)(v10[7] + 792 * v17);
        memcpy(v46, v24, sizeof(v46));
        sub_1AFF92CF4((uint64_t)v46);
        memcpy(v24, __dst, 0x318uLL);
        goto LABEL_14;
      }
    }
    v10[(v17 >> 6) + 8] |= 1 << v17;
    uint64_t v25 = (uint64_t *)(v10[6] + 16 * v17);
    *uint64_t v25 = v12;
    v25[1] = v14;
    memcpy((void *)(v10[7] + 792 * v17), __dst, 0x318uLL);
    uint64_t v26 = v10[2];
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (v27) {
      goto LABEL_37;
    }
    void v10[2] = v28;
    sub_1AFFC8E38();
LABEL_14:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v9) {
      break;
    }
    memcpy(__dst, (const void *)(a1 + i), 0x318uLL);
    --v9;
  }
  swift_bridgeObjectRelease();
  uint64_t v5 = a2;
  uint64_t v7 = a5;
  uint64_t v8 = v41;
  uint64_t v29 = *(void *)(a2 + 16);
  if (!v29) {
    goto LABEL_24;
  }
LABEL_17:
  sub_1AFFC8E38();
  uint64_t v30 = v5 + 40;
  do
  {
    uint64_t v31 = sub_1AFFCAF18();
    if (v10[2])
    {
      unint64_t v33 = sub_1AFD79CC8(v31, v32);
      if (v34)
      {
        uint64_t v35 = (const void *)(v10[7] + 792 * v33);
        memcpy(v46, v35, sizeof(v46));
        memmove(__dst, v35, 0x318uLL);
        nullsub_1(__dst);
        sub_1AFEBBF5C((uint64_t)v46);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_33;
      }
    }
    v30 += 16;
    swift_bridgeObjectRelease();
    --v29;
  }
  while (v29);
  swift_bridgeObjectRelease();
LABEL_24:
  swift_bridgeObjectRelease();
  uint64_t v36 = a4;
  if (!v8)
  {
    sub_1AFF93264(__dst);
LABEL_33:
    uint64_t v40 = __dst;
    return sub_1AFF793E8((uint64_t)v40, (uint64_t)v7, &qword_1EB818E68, (uint64_t)&type metadata for LanguageConfig);
  }
  sub_1AFFC8E38();
  memcpy(__dst, (const void *)(a1 + 32), 0x318uLL);
  uint64_t v37 = v8 - 1;
  uint64_t v38 = 824;
  if (!a4) {
    goto LABEL_28;
  }
LABEL_26:
  v46[0] = a3;
  v46[1] = v36;
  sub_1AFEBBF5C((uint64_t)__dst);
  sub_1AFD3AE10();
  if (!sub_1AFFCB6D8())
  {
    swift_bridgeObjectRelease();
    memcpy(v46, __dst, sizeof(v46));
    nullsub_1(v46);
    uint64_t v40 = v46;
    return sub_1AFF793E8((uint64_t)v40, (uint64_t)v7, &qword_1EB818E68, (uint64_t)&type metadata for LanguageConfig);
  }
  sub_1AFF92CF4((uint64_t)__dst);
  uint64_t v36 = a4;
LABEL_28:
  while (v37)
  {
    memcpy(__dst, (const void *)(a1 + v38), 0x318uLL);
    v38 += 792;
    --v37;
    if (v36) {
      goto LABEL_26;
    }
  }
  swift_bridgeObjectRelease();
  memcpy(v46, (const void *)(a1 + 32), sizeof(v46));
  memcpy(v7, (const void *)(a1 + 32), 0x318uLL);
  nullsub_1(v7);
  return sub_1AFEBBF5C((uint64_t)v46);
}

uint64_t sub_1AFF81A2C(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v29 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v30 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v7 = a2 + 56;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      int64_t v31 = v3;
      unint64_t v9 = v8 | (v3 << 6);
      goto LABEL_26;
    }
    int64_t v10 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_45;
    }
    if (v10 >= v30) {
      return 1;
    }
    unint64_t v11 = *(void *)(v29 + 8 * v10);
    int64_t v12 = v3 + 1;
    if (!v11)
    {
      int64_t v12 = v3 + 2;
      if (v3 + 2 >= v30) {
        return 1;
      }
      unint64_t v11 = *(void *)(v29 + 8 * v12);
      if (!v11)
      {
        int64_t v12 = v3 + 3;
        if (v3 + 3 >= v30) {
          return 1;
        }
        unint64_t v11 = *(void *)(v29 + 8 * v12);
        if (!v11)
        {
          int64_t v12 = v3 + 4;
          if (v3 + 4 >= v30) {
            return 1;
          }
          unint64_t v11 = *(void *)(v29 + 8 * v12);
          if (!v11) {
            break;
          }
        }
      }
    }
LABEL_25:
    unint64_t v6 = (v11 - 1) & v11;
    int64_t v31 = v12;
    unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_26:
    uint64_t v14 = result;
    uint64_t v15 = (uint64_t *)(*(void *)(result + 48) + 16 * v9);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    sub_1AFFCBDF8();
    sub_1AFFC8E38();
    sub_1AFFCAF68();
    uint64_t v18 = sub_1AFFCBE38();
    uint64_t v19 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v20 = v18 & ~v19;
    if (((*(void *)(v7 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
      goto LABEL_41;
    }
    uint64_t v21 = *(void *)(a2 + 48);
    unint64_t v22 = (void *)(v21 + 16 * v20);
    BOOL v23 = *v22 == v17 && v22[1] == v16;
    if (!v23 && (sub_1AFFCBCE8() & 1) == 0)
    {
      uint64_t v24 = ~v19;
      for (unint64_t i = v20 + 1; ; unint64_t i = v26 + 1)
      {
        uint64_t v26 = i & v24;
        if (((*(void *)(v7 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0) {
          break;
        }
        BOOL v27 = (void *)(v21 + 16 * v26);
        BOOL v28 = *v27 == v17 && v27[1] == v16;
        if (v28 || (sub_1AFFCBCE8() & 1) != 0) {
          goto LABEL_7;
        }
      }
LABEL_41:
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    uint64_t result = v14;
    int64_t v3 = v31;
  }
  uint64_t v13 = v3 + 5;
  if (v3 + 5 >= v30) {
    return 1;
  }
  unint64_t v11 = *(void *)(v29 + 8 * v13);
  if (v11)
  {
    int64_t v12 = v3 + 5;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v12 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v12 >= v30) {
      return 1;
    }
    unint64_t v11 = *(void *)(v29 + 8 * v12);
    ++v13;
    if (v11) {
      goto LABEL_25;
    }
  }
LABEL_45:
  __break(1u);
  return result;
}

void sub_1AFF81CD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1AFFC99F8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v45 = (char *)&v34 - v9;
  v11.n128_f64[0] = MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v34 - v12;
  if (a1 == a2 || *(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return;
  }
  int64_t v14 = 0;
  uint64_t v15 = *(void *)(a1 + 56);
  uint64_t v36 = a1;
  uint64_t v37 = a1 + 56;
  uint64_t v16 = 1 << *(unsigned char *)(a1 + 32);
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & v15;
  int64_t v38 = (unint64_t)(v16 + 63) >> 6;
  uint64_t v42 = v5 + 32;
  uint64_t v43 = a2 + 56;
  uint64_t v44 = v5 + 16;
  uint64_t v19 = (void (**)(char *, uint64_t))(v5 + 8);
  char v34 = v13;
  uint64_t v35 = v5;
  if (!v18) {
    goto LABEL_9;
  }
LABEL_7:
  uint64_t v40 = (v18 - 1) & v18;
  int64_t v41 = v14;
  for (unint64_t i = __clz(__rbit64(v18)) | (v14 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v23 << 6))
  {
    uint64_t v25 = *(void *)(v5 + 72);
    uint64_t v26 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v5 + 16);
    v26(v13, *(void *)(a1 + 48) + v25 * i, v4, v11);
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v45, v13, v4);
    sub_1AFF8A7AC((unint64_t *)&qword_1EB818BB0, MEMORY[0x1E4F27A00]);
    uint64_t v27 = sub_1AFFCAD58();
    uint64_t v28 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v29 = v27 & ~v28;
    if (((*(void *)(v43 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
    {
      (*v19)(v45, v4);
      return;
    }
    uint64_t v39 = (unint64_t)v19 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    uint64_t v30 = a2;
    uint64_t v31 = ~v28;
    while (1)
    {
      ((void (*)(char *, unint64_t, uint64_t))v26)(v7, *(void *)(v30 + 48) + v29 * v25, v4);
      sub_1AFF8A7AC(&qword_1EB818BB8, MEMORY[0x1E4F27A00]);
      char v32 = sub_1AFFCADD8();
      unint64_t v33 = *v19;
      (*v19)(v7, v4);
      if (v32) {
        break;
      }
      unint64_t v29 = (v29 + 1) & v31;
      if (((*(void *)(v43 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
      {
        v33(v45, v4);
        return;
      }
    }
    v33(v45, v4);
    a2 = v30;
    uint64_t v5 = v35;
    a1 = v36;
    uint64_t v13 = v34;
    unint64_t v18 = v40;
    int64_t v14 = v41;
    if (v40) {
      goto LABEL_7;
    }
LABEL_9:
    int64_t v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v21 >= v38) {
      return;
    }
    unint64_t v22 = *(void *)(v37 + 8 * v21);
    int64_t v23 = v14 + 1;
    if (!v22)
    {
      int64_t v23 = v14 + 2;
      if (v14 + 2 >= v38) {
        return;
      }
      unint64_t v22 = *(void *)(v37 + 8 * v23);
      if (!v22)
      {
        int64_t v23 = v14 + 3;
        if (v14 + 3 >= v38) {
          return;
        }
        unint64_t v22 = *(void *)(v37 + 8 * v23);
        if (!v22)
        {
          int64_t v23 = v14 + 4;
          if (v14 + 4 >= v38) {
            return;
          }
          unint64_t v22 = *(void *)(v37 + 8 * v23);
          if (!v22) {
            break;
          }
        }
      }
    }
LABEL_24:
    uint64_t v40 = (v22 - 1) & v22;
    int64_t v41 = v23;
  }
  uint64_t v24 = v14 + 5;
  if (v14 + 5 >= v38) {
    return;
  }
  unint64_t v22 = *(void *)(v37 + 8 * v24);
  if (v22)
  {
    int64_t v23 = v14 + 5;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v23 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v23 >= v38) {
      return;
    }
    unint64_t v22 = *(void *)(v37 + 8 * v23);
    ++v24;
    if (v22) {
      goto LABEL_24;
    }
  }
LABEL_34:
  __break(1u);
}

unint64_t sub_1AFF82114(char a1)
{
  unint64_t result = 0x61626C6C61467369;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6E656D7461657274;
      break;
    case 2:
      unint64_t result = 0x53746E656D676573;
      break;
    case 3:
      unint64_t result = 0xD000000000000019;
      break;
    case 4:
      unint64_t result = 0xD000000000000019;
      break;
    case 5:
      unint64_t result = 0xD000000000000015;
      break;
    case 6:
      unint64_t result = 0xD000000000000019;
      break;
    case 7:
      unint64_t result = 0xD000000000000021;
      break;
    case 8:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 9:
      unint64_t result = 0xD000000000000023;
      break;
    case 10:
      unint64_t result = 0xD000000000000017;
      break;
    case 11:
      unint64_t result = 0xD000000000000021;
      break;
    case 12:
      unint64_t result = 0xD000000000000024;
      break;
    case 13:
      unint64_t result = 0xD00000000000002BLL;
      break;
    case 14:
      unint64_t result = 0xD000000000000010;
      break;
    case 15:
      unint64_t result = 0xD000000000000017;
      break;
    case 16:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 17:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 18:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 19:
      unint64_t result = 0xD000000000000023;
      break;
    case 20:
      unint64_t result = 0xD000000000000025;
      break;
    case 21:
      unint64_t result = 0xD000000000000024;
      break;
    case 22:
      unint64_t result = 0xD000000000000023;
      break;
    case 23:
      unint64_t result = 0xD000000000000012;
      break;
    case 24:
      unint64_t result = 0xD000000000000024;
      break;
    case 25:
      unint64_t result = 0xD000000000000028;
      break;
    case 26:
      unint64_t result = 0xD000000000000015;
      break;
    case 27:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 28:
      unint64_t result = 0xD000000000000015;
      break;
    case 29:
      unint64_t result = 0xD000000000000019;
      break;
    case 30:
      unint64_t result = 0xD000000000000021;
      break;
    case 31:
    case 66:
    case 69:
    case 77:
    case 82:
    case 95:
    case 123:
    case 126:
    case -126:
      unint64_t result = 0xD000000000000020;
      break;
    case 32:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 33:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 34:
      unint64_t result = 0xD000000000000023;
      break;
    case 35:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 36:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 37:
      unint64_t result = 0xD000000000000025;
      break;
    case 38:
      unint64_t result = 0xD00000000000002ELL;
      break;
    case 39:
      unint64_t result = 0xD000000000000029;
      break;
    case 40:
      unint64_t result = 0xD000000000000029;
      break;
    case 41:
      unint64_t result = 0xD000000000000030;
      break;
    case 42:
      unint64_t result = 0xD00000000000002BLL;
      break;
    case 43:
      unint64_t result = 0xD00000000000002BLL;
      break;
    case 44:
      unint64_t result = 0xD000000000000019;
      break;
    case 45:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 46:
      unint64_t result = 0xD00000000000002ALL;
      break;
    case 47:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 48:
      unint64_t result = 0xD00000000000002BLL;
      break;
    case 49:
      unint64_t result = 0xD000000000000033;
      break;
    case 50:
      unint64_t result = 0xD000000000000022;
      break;
    case 51:
      unint64_t result = 0xD000000000000015;
      break;
    case 52:
      unint64_t result = 0xD000000000000019;
      break;
    case 53:
      unint64_t result = 0xD000000000000017;
      break;
    case 54:
      unint64_t result = 0x746E696F70646E65;
      break;
    case 55:
      unint64_t result = 0xD000000000000010;
      break;
    case 56:
      unint64_t result = 0xD000000000000018;
      break;
    case 57:
      unint64_t result = 0xD000000000000014;
      break;
    case 58:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 59:
      unint64_t result = 0xD000000000000018;
      break;
    case 60:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 61:
      unint64_t result = 0xD000000000000016;
      break;
    case 62:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 63:
      unint64_t result = 0xD000000000000019;
      break;
    case 64:
      unint64_t result = 0xD000000000000019;
      break;
    case 65:
      unint64_t result = 0xD000000000000022;
      break;
    case 67:
      unint64_t result = 0xD000000000000024;
      break;
    case 68:
      unint64_t result = 0xD000000000000022;
      break;
    case 70:
      unint64_t result = 0xD000000000000024;
      break;
    case 71:
      unint64_t result = 0xD000000000000024;
      break;
    case 72:
      unint64_t result = 0xD000000000000023;
      break;
    case 73:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 74:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 75:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 76:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 78:
      unint64_t result = 0xD000000000000024;
      break;
    case 79:
      unint64_t result = 0xD000000000000024;
      break;
    case 80:
      unint64_t result = 0xD000000000000018;
      break;
    case 81:
      unint64_t result = 0xD000000000000021;
      break;
    case 83:
      unint64_t result = 0xD000000000000015;
      break;
    case 84:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 85:
      unint64_t result = 0xD000000000000026;
      break;
    case 86:
      unint64_t result = 0xD000000000000021;
      break;
    case 87:
      unint64_t result = 0x6F43756F59726F66;
      break;
    case 88:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 89:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 90:
      unint64_t result = 0xD000000000000010;
      break;
    case 91:
      unint64_t result = 0x6F4349557377656ELL;
      break;
    case 92:
      unint64_t result = 0x69666E6F43644169;
      break;
    case 93:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 94:
      unint64_t result = 0xD000000000000023;
      break;
    case 96:
      unint64_t result = 0xD000000000000027;
      break;
    case 97:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 98:
      unint64_t result = 0xD000000000000017;
      break;
    case 99:
      unint64_t result = 0xD000000000000011;
      break;
    case 100:
      unint64_t result = 0xD000000000000013;
      break;
    case 101:
      unint64_t result = 0xD000000000000026;
      break;
    case 102:
      unint64_t result = 0xD000000000000027;
      break;
    case 103:
      unint64_t result = 0xD00000000000002CLL;
      break;
    case 104:
      unint64_t result = 0x506C6C4165646968;
      break;
    case 105:
      unint64_t result = 0xD000000000000014;
      break;
    case 106:
      unint64_t result = 0xD000000000000013;
      break;
    case 107:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 108:
      unint64_t result = 0xD00000000000002BLL;
      break;
    case 109:
      unint64_t result = 0xD000000000000017;
      break;
    case 110:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 111:
      unint64_t result = 0xD000000000000015;
      break;
    case 112:
      unint64_t result = 0xD000000000000022;
      break;
    case 113:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 114:
      unint64_t result = 0xD000000000000027;
      break;
    case 115:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 116:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 117:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 118:
      unint64_t result = 0xD000000000000018;
      break;
    case 119:
      unint64_t result = 0xD000000000000026;
      break;
    case 120:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 121:
      unint64_t result = 0xD000000000000022;
      break;
    case 122:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 124:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 125:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 127:
      unint64_t result = 0xD000000000000026;
      break;
    case -128:
      unint64_t result = 0xD000000000000021;
      break;
    case -127:
      unint64_t result = 0x43656C6369747261;
      break;
    case -125:
      unint64_t result = 0xD00000000000001BLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1AFF82FD4()
{
  return sub_1AFF82114(*v0);
}

uint64_t sub_1AFF82FDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1AFF8FE74(a1, a2);
  *a3 = result;
  return result;
}

void sub_1AFF83004(unsigned char *a1@<X8>)
{
  *a1 = -124;
}

uint64_t sub_1AFF83010(uint64_t a1)
{
  unint64_t v2 = sub_1AFF88FB0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFF8304C(uint64_t a1)
{
  unint64_t v2 = sub_1AFF88FB0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFF83088(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v213 = v2;
  uint64_t v4 = v3;
  sub_1AFF92FF4(0, &qword_1EB81A028, (uint64_t (*)(void))sub_1AFF88FB0, (uint64_t)&type metadata for AppConfiguration.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v215 = v5;
  uint64_t v212 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v47 - v6;
  LODWORD(v214) = *v1;
  unint64_t v211 = *((void *)v1 + 1);
  uint64_t v210 = *((void *)v1 + 2);
  uint64_t v208 = *((void *)v1 + 3);
  uint64_t v207 = *((void *)v1 + 4);
  uint64_t v206 = *((void *)v1 + 5);
  uint64_t v205 = *((void *)v1 + 6);
  uint64_t v204 = *((void *)v1 + 7);
  uint64_t v203 = *((void *)v1 + 8);
  uint64_t v202 = *((void *)v1 + 9);
  uint64_t v201 = *((void *)v1 + 10);
  int v200 = v1[88];
  int v199 = v1[89];
  uint64_t v198 = *((void *)v1 + 12);
  int v197 = v1[104];
  int v196 = v1[105];
  uint64_t v195 = *((void *)v1 + 14);
  uint64_t v8 = *((void *)v1 + 15);
  uint64_t v9 = *((void *)v1 + 17);
  uint64_t v58 = *((void *)v1 + 16);
  uint64_t v59 = v9;
  uint64_t v10 = *((void *)v1 + 19);
  uint64_t v60 = *((void *)v1 + 18);
  uint64_t v61 = v10;
  uint64_t v62 = *((void *)v1 + 20);
  uint64_t v11 = *((void *)v1 + 21);
  uint64_t v56 = v8;
  uint64_t v57 = v11;
  uint64_t v63 = *((void *)v1 + 22);
  uint64_t v12 = *((void *)v1 + 24);
  uint64_t v64 = *((void *)v1 + 23);
  uint64_t v65 = v12;
  uint64_t v13 = *((void *)v1 + 26);
  uint64_t v66 = *((void *)v1 + 25);
  uint64_t v67 = v13;
  uint64_t v14 = *((void *)v1 + 28);
  uint64_t v68 = *((void *)v1 + 27);
  uint64_t v69 = v14;
  uint64_t v15 = *((void *)v1 + 30);
  uint64_t v70 = *((void *)v1 + 29);
  uint64_t v71 = v15;
  LODWORD(v11) = v1[249];
  int v72 = v1[248];
  int v73 = v11;
  int v74 = v1[250];
  uint64_t v16 = *((void *)v1 + 33);
  uint64_t v75 = *((void *)v1 + 32);
  uint64_t v76 = v16;
  uint64_t v17 = *((void *)v1 + 35);
  uint64_t v77 = *((void *)v1 + 34);
  uint64_t v78 = v17;
  uint64_t v18 = *((void *)v1 + 37);
  uint64_t v79 = *((void *)v1 + 36);
  uint64_t v80 = v18;
  uint64_t v19 = *((void *)v1 + 39);
  uint64_t v81 = *((void *)v1 + 38);
  uint64_t v82 = v19;
  uint64_t v83 = *((void *)v1 + 40);
  uint64_t v84 = *((void *)v1 + 41);
  uint64_t v85 = *((void *)v1 + 42);
  int v86 = v1[344];
  uint64_t v87 = *((void *)v1 + 44);
  uint64_t v88 = *((void *)v1 + 45);
  uint64_t v20 = *((void *)v1 + 47);
  uint64_t v89 = *((void *)v1 + 46);
  uint64_t v90 = v20;
  uint64_t v21 = *((void *)v1 + 49);
  uint64_t v91 = *((void *)v1 + 48);
  uint64_t v92 = v21;
  uint64_t v22 = *((void *)v1 + 51);
  uint64_t v93 = *((void *)v1 + 50);
  uint64_t v94 = v22;
  memcpy(v217, v1 + 416, sizeof(v217));
  uint64_t v23 = *((void *)v1 + 116);
  uint64_t v102 = *((void *)v1 + 117);
  uint64_t v103 = v23;
  int v101 = v1[944];
  uint64_t v100 = *((void *)v1 + 119);
  int v99 = v1[960];
  uint64_t v98 = *((void *)v1 + 121);
  int v97 = v1[976];
  uint64_t v96 = *((void *)v1 + 123);
  int v95 = v1[992];
  long long v24 = *(_OWORD *)(v1 + 1112);
  long long v224 = *(_OWORD *)(v1 + 1096);
  long long v225 = v24;
  long long v25 = *(_OWORD *)(v1 + 1144);
  long long v226 = *(_OWORD *)(v1 + 1128);
  long long v227 = v25;
  long long v26 = *(_OWORD *)(v1 + 1048);
  long long v220 = *(_OWORD *)(v1 + 1032);
  long long v221 = v26;
  long long v27 = *(_OWORD *)(v1 + 1080);
  long long v222 = *(_OWORD *)(v1 + 1064);
  long long v223 = v27;
  long long v28 = *(_OWORD *)(v1 + 1016);
  long long v218 = *(_OWORD *)(v1 + 1000);
  long long v219 = v28;
  uint64_t v29 = *((void *)v1 + 145);
  uint64_t v104 = *((void *)v1 + 146);
  uint64_t v105 = v29;
  int v106 = v1[1176];
  uint64_t v30 = *((void *)v1 + 149);
  uint64_t v107 = *((void *)v1 + 148);
  uint64_t v108 = v30;
  uint64_t v109 = *((void *)v1 + 150);
  uint64_t v110 = *((void *)v1 + 151);
  uint64_t v31 = *((void *)v1 + 152);
  uint64_t v111 = *((void *)v1 + 153);
  uint64_t v112 = *((void *)v1 + 154);
  uint64_t v113 = *((void *)v1 + 155);
  uint64_t v114 = *((void *)v1 + 156);
  uint64_t v115 = *((void *)v1 + 157);
  uint64_t v116 = *((void *)v1 + 158);
  uint64_t v117 = *((void *)v1 + 159);
  uint64_t v118 = *((void *)v1 + 160);
  uint64_t v119 = *((void *)v1 + 161);
  uint64_t v120 = *((void *)v1 + 162);
  uint64_t v32 = *((void *)v1 + 163);
  uint64_t v122 = *((void *)v1 + 164);
  uint64_t v121 = *((void *)v1 + 165);
  uint64_t v124 = *((void *)v1 + 166);
  uint64_t v123 = *((void *)v1 + 167);
  uint64_t v126 = *((void *)v1 + 168);
  long long v141 = *(_OWORD *)(v1 + 1464);
  long long v147 = *(_OWORD *)(v1 + 1496);
  uint64_t v125 = *((void *)v1 + 169);
  uint64_t v33 = *((void *)v1 + 185);
  uint64_t v34 = *((void *)v1 + 196);
  uint64_t v35 = *((void *)v1 + 197);
  uint64_t v127 = *((void *)v1 + 170);
  uint64_t v128 = *((void *)v1 + 171);
  uint64_t v129 = *((void *)v1 + 172);
  uint64_t v131 = *((void *)v1 + 173);
  uint64_t v130 = *((void *)v1 + 174);
  int v132 = v1[1400];
  int v133 = v1[1401];
  uint64_t v134 = *((void *)v1 + 176);
  uint64_t v136 = *((void *)v1 + 177);
  uint64_t v135 = *((void *)v1 + 178);
  uint64_t v138 = *((void *)v1 + 179);
  uint64_t v137 = *((void *)v1 + 180);
  uint64_t v139 = *((void *)v1 + 181);
  uint64_t v140 = *((void *)v1 + 182);
  uint64_t v142 = *((void *)v1 + 186);
  uint64_t v143 = *((void *)v1 + 189);
  long long v144 = *((_OWORD *)v1 + 95);
  long long v145 = *((_OWORD *)v1 + 96);
  uint64_t v146 = *((void *)v1 + 194);
  int v148 = v1[1560];
  memcpy(v228, v1 + 1584, sizeof(v228));
  int v149 = v1[3851];
  uint64_t v151 = *((void *)v1 + 482);
  int v150 = v1[3864];
  uint64_t v153 = *((void *)v1 + 484);
  int v152 = v1[3880];
  uint64_t v155 = *((void *)v1 + 486);
  int v154 = v1[3896];
  uint64_t v157 = *((void *)v1 + 488);
  int v156 = v1[3912];
  uint64_t v159 = *((void *)v1 + 490);
  int v158 = v1[3928];
  uint64_t v161 = *((void *)v1 + 492);
  int v160 = v1[3944];
  uint64_t v36 = *((void *)v1 + 494);
  uint64_t v162 = *((void *)v1 + 495);
  uint64_t v37 = *((void *)v1 + 496);
  int v163 = v1[3976];
  int v164 = v1[3977];
  uint64_t v165 = *((void *)v1 + 498);
  uint64_t v168 = *((void *)v1 + 499);
  int v167 = v1[4000];
  uint64_t v171 = *((void *)v1 + 501);
  uint64_t v175 = *((void *)v1 + 502);
  uint64_t v174 = *((void *)v1 + 503);
  uint64_t v173 = *((void *)v1 + 504);
  int v179 = v1[4096];
  int v184 = v1[4144];
  int v186 = v1[4160];
  int v188 = v1[4184];
  int v194 = v1[4240];
  int v229 = v1[4280];
  uint64_t v38 = *((void *)v1 + 522);
  int v209 = v1[4281];
  uint64_t v166 = *((void *)v1 + 505);
  uint64_t v170 = *((void *)v1 + 506);
  int v169 = v1[4056];
  long long v172 = *((_OWORD *)v1 + 254);
  long long v176 = *((_OWORD *)v1 + 255);
  uint64_t v178 = *((void *)v1 + 513);
  uint64_t v177 = *((void *)v1 + 514);
  uint64_t v181 = *((void *)v1 + 515);
  uint64_t v180 = *((void *)v1 + 516);
  uint64_t v182 = *((void *)v1 + 517);
  uint64_t v183 = *((void *)v1 + 519);
  uint64_t v185 = *((void *)v1 + 521);
  uint64_t v187 = *((void *)v1 + 524);
  uint64_t v189 = *((void *)v1 + 525);
  uint64_t v190 = *((void *)v1 + 526);
  uint64_t v191 = *((void *)v1 + 527);
  uint64_t v192 = *((void *)v1 + 528);
  uint64_t v193 = *((void *)v1 + 529);
  uint64_t v39 = *((void *)v1 + 531);
  uint64_t v40 = *((void *)v1 + 532);
  uint64_t v41 = *((void *)v1 + 533);
  uint64_t v42 = *((void *)v1 + 534);
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  sub_1AFF88FB0();
  sub_1AFFCBE78();
  LOBYTE(v216[0]) = 0;
  uint64_t v214 = v7;
  uint64_t v43 = v213;
  sub_1AFFCBC18();
  if (v43) {
    return (*(uint64_t (**)(char *, uint64_t))(v212 + 8))(v214, v215);
  }
  uint64_t v45 = v210;
  v47[1] = v31;
  v47[2] = v32;
  uint64_t v48 = v33;
  uint64_t v49 = v35;
  uint64_t v50 = v34;
  uint64_t v51 = v36;
  uint64_t v52 = v37;
  uint64_t v53 = v38;
  uint64_t v54 = v39;
  uint64_t v55 = v40;
  uint64_t v213 = v41;
  uint64_t v46 = v212;
  *(void *)&v216[0] = v211;
  char v230 = 1;
  sub_1AFF89D3C(0, &qword_1EB819E10, MEMORY[0x1E4FBC1C8], MEMORY[0x1E4FBB320]);
  sub_1AFF8A05C();
  sub_1AFFCBC58();
  *(void *)&v216[0] = v45;
  char v230 = 2;
  sub_1AFF89D3C(0, &qword_1EB819DF8, MEMORY[0x1E4FBC150], MEMORY[0x1E4FBB320]);
  sub_1AFF8A0E8();
  sub_1AFFCBC58();
  LOBYTE(v216[0]) = 3;
  sub_1AFFCBC38();
  LOBYTE(v216[0]) = 4;
  sub_1AFFCBC38();
  LOBYTE(v216[0]) = 5;
  sub_1AFFCBC28();
  LOBYTE(v216[0]) = 6;
  sub_1AFFCBC28();
  LOBYTE(v216[0]) = 7;
  sub_1AFFCBC38();
  LOBYTE(v216[0]) = 8;
  sub_1AFFCBC38();
  LOBYTE(v216[0]) = 9;
  sub_1AFFCBC38();
  *(void *)&v216[0] = v201;
  char v230 = 10;
  sub_1AFF89D3C(0, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  unint64_t v211 = sub_1AFF8A174();
  sub_1AFFCBC58();
  LOBYTE(v216[0]) = 11;
  sub_1AFFCBC18();
  LOBYTE(v216[0]) = 12;
  sub_1AFFCBC18();
  LOBYTE(v216[0]) = 13;
  sub_1AFFCBC28();
  LOBYTE(v216[0]) = 14;
  sub_1AFFCBC18();
  LOBYTE(v216[0]) = 15;
  sub_1AFFCBC18();
  LOBYTE(v216[0]) = 16;
  sub_1AFFCBC38();
  LOBYTE(v216[0]) = 17;
  sub_1AFFCBC38();
  LOBYTE(v216[0]) = 18;
  sub_1AFFCBC28();
  LOBYTE(v216[0]) = 19;
  sub_1AFFCBC28();
  LOBYTE(v216[0]) = 20;
  sub_1AFFCBC28();
  LOBYTE(v216[0]) = 21;
  sub_1AFFCBC28();
  LOBYTE(v216[0]) = 22;
  sub_1AFFCBC28();
  LOBYTE(v216[0]) = 23;
  sub_1AFFCBC08();
  LOBYTE(v216[0]) = 24;
  sub_1AFFCBC28();
  LOBYTE(v216[0]) = 25;
  sub_1AFFCBC28();
  LOBYTE(v216[0]) = 26;
  sub_1AFFCBC28();
  LOBYTE(v216[0]) = 27;
  sub_1AFFCBC28();
  LOBYTE(v216[0]) = 28;
  sub_1AFFCBC28();
  LOBYTE(v216[0]) = 29;
  sub_1AFFCBC28();
  LOBYTE(v216[0]) = 30;
  sub_1AFFCBC28();
  LOBYTE(v216[0]) = 31;
  sub_1AFFCBC28();
  LOBYTE(v216[0]) = 32;
  sub_1AFFCBC18();
  LOBYTE(v216[0]) = 33;
  sub_1AFFCBC18();
  LOBYTE(v216[0]) = 34;
  sub_1AFFCBC18();
  LOBYTE(v216[0]) = 35;
  sub_1AFFCBC38();
  LOBYTE(v216[0]) = 36;
  sub_1AFFCBC38();
  LOBYTE(v216[0]) = 37;
  sub_1AFFCBC28();
  LOBYTE(v216[0]) = 38;
  sub_1AFFCBC28();
  LOBYTE(v216[0]) = 39;
  sub_1AFFCBC28();
  LOBYTE(v216[0]) = 40;
  sub_1AFFCBC28();
  LOBYTE(v216[0]) = 41;
  sub_1AFFCBC28();
  LOBYTE(v216[0]) = 42;
  sub_1AFFCBC28();
  LOBYTE(v216[0]) = 43;
  sub_1AFFCBC28();
  LOBYTE(v216[0]) = 44;
  sub_1AFFCBC38();
  LOBYTE(v216[0]) = 45;
  sub_1AFFCBC28();
  LOBYTE(v216[0]) = 46;
  sub_1AFFCBC18();
  LOBYTE(v216[0]) = 47;
  sub_1AFFCBC28();
  LOBYTE(v216[0]) = 48;
  sub_1AFFCBC38();
  LOBYTE(v216[0]) = 49;
  sub_1AFFCBC28();
  LOBYTE(v216[0]) = 50;
  sub_1AFFCBC28();
  LOBYTE(v216[0]) = 51;
  sub_1AFFCBC28();
  LOBYTE(v216[0]) = 52;
  sub_1AFFCBC28();
  *(void *)&v216[0] = v93;
  char v230 = 53;
  sub_1AFF89D3C(0, &qword_1EB819D68, (uint64_t)&type metadata for ExternalAnalyticsConfiguration, MEMORY[0x1E4FBB320]);
  sub_1AFF8A200();
  sub_1AFFCBC58();
  *(void *)&v216[0] = v94;
  char v230 = 54;
  sub_1AFF89D3C(0, &qword_1EB819D08, (uint64_t)&type metadata for EndpointConfiguration, MEMORY[0x1E4FBB320]);
  sub_1AFF8A2E8();
  sub_1AFFCBC58();
  memcpy(v216, v217, 0x1F9uLL);
  char v230 = 55;
  sub_1AFE05E90();
  sub_1AFFCBC58();
  *(void *)&v216[0] = v103;
  *((void *)&v216[0] + 1) = v102;
  LOBYTE(v216[1]) = v101;
  *((void *)&v216[1] + 1) = v100;
  LOBYTE(v216[2]) = v99;
  *((void *)&v216[2] + 1) = v98;
  LOBYTE(v216[3]) = v97;
  *((void *)&v216[3] + 1) = v96;
  LOBYTE(v216[4]) = v95;
  char v230 = 56;
  sub_1AFE05D80();
  sub_1AFFCBC58();
  v216[6] = v224;
  v216[7] = v225;
  v216[8] = v226;
  v216[9] = v227;
  v216[2] = v220;
  v216[3] = v221;
  v216[4] = v222;
  v216[5] = v223;
  v216[0] = v218;
  v216[1] = v219;
  char v230 = 57;
  sub_1AFF8A3D0();
  sub_1AFFCBC58();
  LOBYTE(v216[0]) = 58;
  sub_1AFFCBC08();
  LOBYTE(v216[0]) = 59;
  sub_1AFFCBC18();
  LOBYTE(v216[0]) = 60;
  sub_1AFFCBC48();
  *(void *)&v216[0] = v108;
  char v230 = 61;
  sub_1AFF89D3C(0, &qword_1EB819CA0, (uint64_t)&type metadata for StocksKitClientConfig, MEMORY[0x1E4FBB320]);
  sub_1AFF8A424();
  sub_1AFFCBC58();
  LOBYTE(v216[0]) = 62;
  sub_1AFFCBC48();
  LOBYTE(v216[0]) = 63;
  sub_1AFFCBC28();
  LOBYTE(v216[0]) = 64;
  sub_1AFFCBC28();
  *(void *)&v216[0] = v111;
  char v230 = 65;
  sub_1AFFCBC58();
  *(void *)&v216[0] = v112;
  char v230 = 66;
  sub_1AFFCBC58();
  *(void *)&v216[0] = v113;
  char v230 = 67;
  sub_1AFFCBC58();
  *(void *)&v216[0] = v114;
  char v230 = 68;
  sub_1AFFCBC58();
  *(void *)&v216[0] = v115;
  char v230 = 69;
  sub_1AFFCBC58();
  *(void *)&v216[0] = v116;
  char v230 = 70;
  sub_1AFFCBC58();
  LOBYTE(v216[0]) = 71;
  sub_1AFFCBC48();
  LOBYTE(v216[0]) = 72;
  sub_1AFFCBC48();
  LOBYTE(v216[0]) = 73;
  sub_1AFFCBC48();
  LOBYTE(v216[0]) = 74;
  sub_1AFFCBC48();
  LOBYTE(v216[0]) = 75;
  sub_1AFFCBC28();
  LOBYTE(v216[0]) = 76;
  sub_1AFFCBC08();
  LOBYTE(v216[0]) = 77;
  sub_1AFFCBC08();
  LOBYTE(v216[0]) = 78;
  sub_1AFFCBC48();
  LOBYTE(v216[0]) = 79;
  sub_1AFFCBC48();
  *(void *)&v216[0] = v127;
  char v230 = 80;
  sub_1AFD67340();
  sub_1AFF8A50C();
  sub_1AFFCBC58();
  LOBYTE(v216[0]) = 81;
  sub_1AFFCBC48();
  LOBYTE(v216[0]) = 82;
  sub_1AFFCBC48();
  LOBYTE(v216[0]) = 83;
  sub_1AFFCBC08();
  LOBYTE(v216[0]) = 84;
  sub_1AFFCBC18();
  LOBYTE(v216[0]) = 85;
  sub_1AFFCBC18();
  LOBYTE(v216[0]) = 86;
  sub_1AFFCBC48();
  LOBYTE(v216[0]) = 87;
  sub_1AFFCBC08();
  LOBYTE(v216[0]) = 88;
  sub_1AFFCBC08();
  LOBYTE(v216[0]) = 89;
  sub_1AFFCBC38();
  *(void *)&v216[0] = v140;
  *(_OWORD *)((char *)v216 + 8) = v141;
  *((void *)&v216[1] + 1) = v48;
  char v230 = 90;
  sub_1AFF8A574();
  sub_1AFFCBC58();
  *(void *)&v216[0] = v142;
  *(_OWORD *)((char *)v216 + 8) = v147;
  *((void *)&v216[1] + 1) = v143;
  v216[2] = v144;
  v216[3] = v145;
  *(void *)&v216[4] = v146;
  char v230 = 91;
  sub_1AFF8A5C8();
  sub_1AFFCBC58();
  LOBYTE(v216[0]) = v148;
  *((void *)&v216[0] + 1) = v50;
  *(void *)&v216[1] = v49;
  char v230 = 92;
  sub_1AFF8A61C();
  sub_1AFFCBC58();
  memcpy(v216, v228, 0x8DBuLL);
  char v230 = 93;
  sub_1AFE05D2C();
  sub_1AFFCBC58();
  LOBYTE(v216[0]) = 94;
  sub_1AFFCBC18();
  LOBYTE(v216[0]) = 95;
  sub_1AFFCBBB8();
  LOBYTE(v216[0]) = 96;
  sub_1AFFCBBC8();
  LOBYTE(v216[0]) = 97;
  sub_1AFFCBBC8();
  LOBYTE(v216[0]) = 98;
  sub_1AFFCBBB8();
  LOBYTE(v216[0]) = 99;
  sub_1AFFCBBB8();
  LOBYTE(v216[0]) = 100;
  sub_1AFFCBBD8();
  LOBYTE(v216[0]) = 101;
  sub_1AFFCBC28();
  LOBYTE(v216[0]) = 102;
  sub_1AFFCBC48();
  LOBYTE(v216[0]) = 103;
  sub_1AFFCBC28();
  LOBYTE(v216[0]) = 104;
  sub_1AFFCBC18();
  LOBYTE(v216[0]) = 105;
  sub_1AFFCBC18();
  LOBYTE(v216[0]) = 106;
  sub_1AFFCBC48();
  LOBYTE(v216[0]) = 107;
  sub_1AFFCBBD8();
  LOBYTE(v216[0]) = 108;
  sub_1AFFCBC68();
  *(void *)&v216[0] = v175;
  *((void *)&v216[0] + 1) = v174;
  *(void *)&v216[1] = v173;
  *((void *)&v216[1] + 1) = v166;
  char v230 = 109;
  sub_1AFF8A670();
  sub_1AFFCBBE8();
  LOBYTE(v216[0]) = 110;
  sub_1AFFCBBD8();
  v216[0] = v172;
  v216[1] = v176;
  LOBYTE(v216[2]) = v179;
  char v230 = 111;
  sub_1AFF8A6C4();
  sub_1AFFCBBE8();
  LOBYTE(v216[0]) = 112;
  sub_1AFFCBB98();
  LOBYTE(v216[0]) = 113;
  sub_1AFFCBB98();
  LOBYTE(v216[0]) = 114;
  sub_1AFFCBBD8();
  LOBYTE(v216[0]) = 115;
  sub_1AFFCBBD8();
  LOBYTE(v216[0]) = 116;
  sub_1AFFCBC48();
  LOBYTE(v216[0]) = 117;
  sub_1AFFCBC28();
  LOBYTE(v216[0]) = 118;
  sub_1AFFCBC18();
  LOBYTE(v216[0]) = 119;
  sub_1AFFCBC48();
  *(void *)&v216[0] = v189;
  char v230 = 120;
  sub_1AFFCBC58();
  LOBYTE(v216[0]) = 121;
  sub_1AFFCBC48();
  LOBYTE(v216[0]) = 122;
  sub_1AFFCBC48();
  *(void *)&v216[0] = v192;
  char v230 = 123;
  sub_1AFF8A718();
  sub_1AFF8A7F4();
  sub_1AFFCBC58();
  LOBYTE(v216[0]) = 124;
  sub_1AFFCBC48();
  LOBYTE(v216[0]) = 125;
  sub_1AFFCBC18();
  *(void *)&v216[0] = v54;
  char v230 = 126;
  sub_1AFF89E70();
  sub_1AFE04130();
  sub_1AFFCBBE8();
  *(void *)&v216[0] = v55;
  char v230 = 127;
  sub_1AFFCBBE8();
  LOBYTE(v216[0]) = 0x80;
  sub_1AFFCBC48();
  *(void *)&v216[0] = v42;
  char v230 = -127;
  sub_1AFFCBBE8();
  LOBYTE(v216[0]) = -126;
  sub_1AFFCBC18();
  LOBYTE(v216[0]) = -125;
  sub_1AFFCBC18();
  return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v214, v215);
}

uint64_t sub_1AFF85124(uint64_t a1)
{
  return sub_1AFF7950C(a1);
}

uint64_t sub_1AFF8513C(uint64_t a1)
{
  return sub_1AFF83088(a1);
}

uint64_t sub_1AFF85158(char *a1, char *a2)
{
  return sub_1AFDEF864(*a1, *a2);
}

uint64_t sub_1AFF85164()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFF851F8()
{
  sub_1AFFCAF68();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFF85278()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFF85308@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1AFFCBA78();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1AFF85368(unint64_t *a1@<X8>)
{
  unint64_t v2 = 0x65676175676E616CLL;
  if (*v1) {
    unint64_t v2 = 0xD000000000000013;
  }
  unint64_t v3 = 0x80000001AFFEE0F0;
  if (!*v1) {
    unint64_t v3 = 0xEF736769666E6F43;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1AFF853B8()
{
  if (*v0) {
    return 0xD000000000000013;
  }
  else {
    return 0x65676175676E616CLL;
  }
}

uint64_t sub_1AFF85404@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1AFFCBA78();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1AFF85468(uint64_t a1)
{
  unint64_t v2 = sub_1AFF88F5C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFF854A4(uint64_t a1)
{
  unint64_t v2 = sub_1AFF88F5C();

  return MEMORY[0x1F41862B0](a1, v2);
}

unint64_t sub_1AFF854E0(char a1)
{
  unint64_t result = 0x65676175676E616CLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000015;
      break;
    case 2:
      unint64_t result = 0x6F43756F59726F66;
      break;
    case 3:
      unint64_t result = 0xD000000000000021;
      break;
    case 4:
      unint64_t result = 0xD000000000000027;
      break;
    case 5:
    case 6:
      unint64_t result = 0xD000000000000010;
      break;
    case 7:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 8:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 9:
      unint64_t result = 0xD000000000000015;
      break;
    case 10:
      unint64_t result = 0xD000000000000022;
      break;
    case 11:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 12:
      unint64_t result = 0x666E6F4369626174;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1AFF85698(char a1)
{
  unint64_t result = 0x65676175676E616CLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000015;
      break;
    case 2:
      unint64_t result = 0x6F43756F59726F66;
      break;
    case 3:
      unint64_t result = 0xD000000000000021;
      break;
    case 4:
      unint64_t result = 0xD000000000000027;
      break;
    case 5:
    case 6:
      unint64_t result = 0xD000000000000010;
      break;
    case 7:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 8:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 9:
      unint64_t result = 0xD000000000000015;
      break;
    case 10:
      unint64_t result = 0xD000000000000022;
      break;
    case 11:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 12:
      unint64_t result = 0x666E6F4369626174;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1AFF85850(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_1AFF854E0(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1AFF854E0(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1AFFCBCE8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1AFF858DC()
{
  char v1 = *v0;
  sub_1AFFCBDF8();
  sub_1AFF854E0(v1);
  sub_1AFFCAF68();
  swift_bridgeObjectRelease();
  return sub_1AFFCBE38();
}

uint64_t sub_1AFF85940()
{
  sub_1AFF854E0(*v0);
  sub_1AFFCAF68();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFF85994()
{
  char v1 = *v0;
  sub_1AFFCBDF8();
  sub_1AFF854E0(v1);
  sub_1AFFCAF68();
  swift_bridgeObjectRelease();
  return sub_1AFFCBE38();
}

uint64_t sub_1AFF859F4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFF93508();
  *a1 = result;
  return result;
}

unint64_t sub_1AFF85A24@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1AFF854E0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1AFF85A50()
{
  return sub_1AFF85698(*v0);
}

uint64_t sub_1AFF85A58@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFF93508();
  *a1 = result;
  return result;
}

void sub_1AFF85A80(unsigned char *a1@<X8>)
{
  *a1 = 13;
}

uint64_t sub_1AFF85A8C(uint64_t a1)
{
  unint64_t v2 = sub_1AFF92B50();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFF85AC8(uint64_t a1)
{
  unint64_t v2 = sub_1AFF92B50();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFF85B04(void *a1)
{
  sub_1AFF92FF4(0, &qword_1E9AFD068, (uint64_t (*)(void))sub_1AFF92B50, (uint64_t)&type metadata for LanguageConfig.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v27 - v6;
  uint64_t v8 = *v1;
  uint64_t v55 = v1[1];
  uint64_t v56 = v8;
  uint64_t v9 = v1[2];
  uint64_t v53 = v1[3];
  uint64_t v54 = v9;
  uint64_t v10 = v1[4];
  uint64_t v51 = v1[5];
  uint64_t v52 = v10;
  uint64_t v11 = v1[7];
  uint64_t v49 = v1[6];
  uint64_t v50 = v11;
  uint64_t v12 = v1[9];
  uint64_t v47 = v1[8];
  uint64_t v48 = v12;
  uint64_t v13 = v1[11];
  uint64_t v43 = v1[10];
  uint64_t v44 = v13;
  uint64_t v14 = v1[13];
  uint64_t v45 = v1[12];
  uint64_t v46 = v14;
  sub_1AFF793E8((uint64_t)(v1 + 14), (uint64_t)v67, &qword_1EB819618, (uint64_t)&type metadata for PaidBundleConfiguration);
  uint64_t v15 = v1[79];
  uint64_t v35 = v1[78];
  uint64_t v36 = v15;
  uint64_t v16 = v1[80];
  uint64_t v41 = v1[81];
  uint64_t v42 = v16;
  uint64_t v17 = v1[82];
  uint64_t v39 = v1[83];
  uint64_t v40 = v17;
  uint64_t v18 = v1[84];
  uint64_t v37 = v1[85];
  uint64_t v38 = v18;
  int v68 = *((unsigned __int8 *)v1 + 688);
  uint64_t v19 = v1[87];
  uint64_t v33 = v1[88];
  uint64_t v34 = v19;
  uint64_t v20 = v1[90];
  uint64_t v28 = v1[89];
  uint64_t v29 = v20;
  uint64_t v21 = v1[91];
  uint64_t v31 = v1[92];
  uint64_t v32 = v21;
  int v30 = *((unsigned __int8 *)v1 + 744);
  uint64_t v22 = v1[95];
  v27[3] = v1[94];
  v27[4] = v22;
  uint64_t v23 = v1[97];
  v27[1] = v1[96];
  v27[2] = v23;
  uint64_t v24 = v1[98];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFF92B50();
  sub_1AFFCBE78();
  LOBYTE(v58) = 0;
  uint64_t v25 = v57;
  sub_1AFFCBC08();
  if (v25) {
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  uint64_t v57 = v24;
  LOBYTE(v58) = 1;
  sub_1AFFCBB98();
  LOBYTE(v58) = 2;
  sub_1AFFCBB98();
  LOBYTE(v58) = 3;
  sub_1AFFCBB98();
  LOBYTE(v58) = 4;
  sub_1AFFCBB98();
  uint64_t v58 = v43;
  uint64_t v59 = v44;
  uint64_t v60 = v45;
  uint64_t v61 = v46;
  char v69 = 5;
  sub_1AFF8A574();
  sub_1AFFCBBE8();
  sub_1AFF793E8((uint64_t)v67, (uint64_t)&v58, &qword_1EB819618, (uint64_t)&type metadata for PaidBundleConfiguration);
  char v69 = 6;
  sub_1AFE05E90();
  sub_1AFFCBBE8();
  uint64_t v58 = v35;
  uint64_t v59 = v36;
  uint64_t v60 = v42;
  uint64_t v61 = v41;
  uint64_t v62 = v40;
  uint64_t v63 = v39;
  uint64_t v64 = v38;
  uint64_t v65 = v37;
  char v66 = v68;
  char v69 = 7;
  sub_1AFE05D80();
  sub_1AFFCBBE8();
  LOBYTE(v58) = 8;
  sub_1AFFCBB98();
  uint64_t v58 = v28;
  uint64_t v59 = v29;
  uint64_t v60 = v32;
  uint64_t v61 = v31;
  LOBYTE(v62) = v30;
  char v69 = 9;
  sub_1AFF8A6C4();
  sub_1AFFCBBE8();
  LOBYTE(v58) = 10;
  sub_1AFFCBB98();
  LOBYTE(v58) = 11;
  sub_1AFFCBB98();
  uint64_t v58 = v57;
  char v69 = 12;
  sub_1AFF89E70();
  sub_1AFE04130();
  sub_1AFFCBBE8();
  return (*(uint64_t (**)(void, uint64_t))(v5 + 8))(0, v4);
}

uint64_t sub_1AFF86080@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1AFF92FF4(0, &qword_1EB819F50, (uint64_t (*)(void))sub_1AFF92B50, (uint64_t)&type metadata for LanguageConfig.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v76 = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v43 - v7;
  uint64_t v9 = a1[3];
  uint64_t v77 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_1AFF92B50();
  sub_1AFFCBE68();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v77);
  }
  uint64_t v10 = v6;
  uint64_t v75 = a2;
  LOBYTE(v79[0]) = 0;
  uint64_t v11 = sub_1AFFCBB18();
  uint64_t v13 = v12;
  v83[0] = v11;
  v83[1] = v12;
  LOBYTE(v79[0]) = 1;
  sub_1AFFC8E38();
  uint64_t v14 = sub_1AFFCBAA8();
  uint64_t v74 = v11;
  uint64_t v83[2] = v14;
  v83[3] = v15;
  LOBYTE(v79[0]) = 2;
  uint64_t v16 = v14;
  uint64_t v17 = v15;
  sub_1AFFC8E38();
  uint64_t v18 = sub_1AFFCBAA8();
  uint64_t v72 = v16;
  uint64_t v73 = v17;
  v83[4] = v18;
  v83[5] = v19;
  LOBYTE(v79[0]) = 3;
  uint64_t v20 = v18;
  uint64_t v21 = v19;
  sub_1AFFC8E38();
  uint64_t v22 = sub_1AFFCBAA8();
  uint64_t v70 = v20;
  uint64_t v71 = v21;
  v83[6] = v22;
  v83[7] = v23;
  LOBYTE(v79[0]) = 4;
  uint64_t v24 = v22;
  uint64_t v25 = v23;
  sub_1AFFC8E38();
  uint64_t v26 = sub_1AFFCBAA8();
  uint64_t v28 = v27;
  uint64_t v68 = v24;
  v83[8] = v26;
  v83[9] = v27;
  LOBYTE(v78[0]) = 5;
  uint64_t v29 = v26;
  sub_1AFF92BA4();
  sub_1AFFC8E38();
  uint64_t v69 = v28;
  sub_1AFFCBAF8();
  uint64_t v65 = v29;
  uint64_t v30 = v79[0];
  uint64_t v31 = v79[1];
  v83[10] = v79[0];
  v83[11] = v79[1];
  v83[12] = v79[2];
  v83[13] = v79[3];
  char v86 = 6;
  uint64_t v66 = v79[3];
  uint64_t v67 = v79[2];
  sub_1AFEBC260(v79[0], v79[1]);
  sub_1AFF92BF8();
  sub_1AFFCBAF8();
  uint64_t v62 = v30;
  uint64_t v63 = v31;
  uint64_t v64 = v25;
  sub_1AFF793E8((uint64_t)&v82, (uint64_t)v81, &qword_1EB819618, (uint64_t)&type metadata for PaidBundleConfiguration);
  sub_1AFF793E8((uint64_t)v81, (uint64_t)&v83[14], &qword_1EB819618, (uint64_t)&type metadata for PaidBundleConfiguration);
  LOBYTE(v78[0]) = 7;
  sub_1AFF89F80(v81, sub_1AFEBC2A4);
  sub_1AFF92C4C();
  sub_1AFFCBAF8();
  uint64_t v32 = v79[0];
  uint64_t v33 = v79[7];
  LODWORD(v30) = LOBYTE(v79[8]);
  v83[78] = v79[0];
  v83[79] = v79[1];
  v83[80] = v79[2];
  v83[81] = v79[3];
  v83[82] = v79[4];
  v83[83] = v79[5];
  v83[84] = v79[6];
  v83[85] = v79[7];
  LOBYTE(v83[86]) = v79[8];
  LOBYTE(v79[0]) = 8;
  uint64_t v58 = v79[1];
  uint64_t v59 = v79[2];
  uint64_t v60 = v79[3];
  uint64_t v61 = v79[4];
  uint64_t v56 = v79[5];
  uint64_t v57 = v79[6];
  sub_1AFEBC4D8(v83[78]);
  uint64_t v34 = sub_1AFFCBAA8();
  uint64_t v36 = v35;
  int v84 = v30;
  uint64_t v37 = v32;
  uint64_t v55 = v13;
  uint64_t v38 = v34;
  v83[87] = v34;
  v83[88] = v35;
  LOBYTE(v78[0]) = 9;
  sub_1AFF92CA0();
  sub_1AFFC8E38();
  sub_1AFFCBAF8();
  uint64_t v51 = v79[1];
  uint64_t v52 = v79[0];
  v83[89] = v79[0];
  v83[90] = v79[1];
  uint64_t v49 = v79[3];
  uint64_t v50 = v79[2];
  v83[91] = v79[2];
  v83[92] = v79[3];
  int v48 = LOBYTE(v79[4]);
  LOBYTE(v83[93]) = v79[4];
  LOBYTE(v79[0]) = 10;
  uint64_t v53 = sub_1AFFCBAA8();
  uint64_t v54 = v39;
  v83[94] = v53;
  v83[95] = v39;
  LOBYTE(v79[0]) = 11;
  sub_1AFFC8E38();
  uint64_t v46 = sub_1AFFCBAA8();
  uint64_t v47 = v40;
  v83[96] = v46;
  v83[97] = v40;
  sub_1AFF89E70();
  uint64_t v45 = v41;
  char v85 = 12;
  sub_1AFF89ED8();
  sub_1AFFC8E38();
  sub_1AFFCBAF8();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v76);
  uint64_t v76 = v80;
  v83[98] = v80;
  v78[0] = v74;
  v78[1] = v55;
  v78[2] = v72;
  void v78[3] = v73;
  v78[4] = v70;
  v78[5] = v71;
  v78[6] = v68;
  v78[7] = v64;
  v78[8] = v65;
  v78[9] = v69;
  v78[10] = v62;
  v78[11] = v63;
  v78[12] = v67;
  v78[13] = v66;
  sub_1AFF793E8((uint64_t)v81, (uint64_t)&v78[14], &qword_1EB819618, (uint64_t)&type metadata for PaidBundleConfiguration);
  uint64_t v44 = v37;
  v78[78] = v37;
  v78[79] = v58;
  v78[80] = v59;
  v78[81] = v60;
  v78[82] = v61;
  v78[83] = v56;
  v78[84] = v57;
  v78[85] = v33;
  LOBYTE(v78[86]) = v84;
  v78[87] = v38;
  v78[88] = v36;
  v78[89] = v52;
  v78[90] = v51;
  v78[91] = v50;
  v78[92] = v49;
  LOBYTE(v78[93]) = v48;
  v78[94] = v53;
  v78[95] = v54;
  v78[96] = v46;
  v78[97] = v47;
  v78[98] = v76;
  sub_1AFEBBF5C((uint64_t)v78);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1AFF899D4(v44);
  sub_1AFF89F80(v81, sub_1AFF897A0);
  sub_1AFF8975C(v62, v63);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  memcpy(v75, v78, 0x318uLL);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v77);
  memcpy(v79, v83, sizeof(v79));
  return sub_1AFF92CF4((uint64_t)v79);
}

uint64_t sub_1AFF86E78@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1AFF86080(a1, a2);
}

uint64_t sub_1AFF86E90(void *a1)
{
  return sub_1AFF85B04(a1);
}

unint64_t sub_1AFF86EA8()
{
  return 0xD000000000000013;
}

unint64_t sub_1AFF86EC4()
{
  return 0xD000000000000013;
}

uint64_t sub_1AFF86EE0(uint64_t a1)
{
  return sub_1AFF86F50(a1, qword_1EB819EA8);
}

uint64_t sub_1AFF86F04@<X0>(uint64_t a1@<X8>)
{
  return sub_1AFF87118(&qword_1EB818A58, (uint64_t)qword_1EB819EA8, a1);
}

uint64_t sub_1AFF86F28(uint64_t a1)
{
  return sub_1AFF86F50(a1, qword_1EB819EC0);
}

uint64_t sub_1AFF86F50(uint64_t a1, uint64_t *a2)
{
  sub_1AFF9305C(0, (unint64_t *)&unk_1EB819EF0, MEMORY[0x1E4FBBC50], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v10 - v4;
  uint64_t v6 = sub_1AFFCB948();
  __swift_allocate_value_buffer(v6, a2);
  uint64_t v7 = __swift_project_value_buffer(v6, (uint64_t)a2);
  sub_1AFFCB938();
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(v7, v5, v6);
  }
  __break(1u);
  return result;
}

uint64_t sub_1AFF870A4@<X0>(uint64_t a1@<X8>)
{
  return sub_1AFF87118(&qword_1EB818A60, (uint64_t)qword_1EB819EC0, a1);
}

uint64_t sub_1AFF870C8(uint64_t a1)
{
  return sub_1AFF86F50(a1, qword_1EB819ED8);
}

uint64_t sub_1AFF870F4@<X0>(uint64_t a1@<X8>)
{
  return sub_1AFF87118(&qword_1EB818A68, (uint64_t)qword_1EB819ED8, a1);
}

uint64_t sub_1AFF87118@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1AFFCB948();
  uint64_t v6 = __swift_project_value_buffer(v5, a2);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v7(a3, v6, v5);
}

uint64_t sub_1AFF871B0(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  int v369 = *v3;
  uint64_t v5 = v1 + 272;
  unint64_t v368 = (void *)*((void *)v3 + 1);
  uint64_t v365 = *((void *)v3 + 2);
  int64x2_t v364 = *(int64x2_t *)(v3 + 24);
  double v367 = *((double *)v3 + 5);
  double v360 = *((double *)v3 + 6);
  int64x2_t v363 = *(int64x2_t *)(v3 + 56);
  uint64_t v366 = *((void *)v3 + 9);
  char v356 = (void *)*((void *)v3 + 10);
  int v349 = v3[88];
  int v347 = v3[89];
  double v358 = *((double *)v3 + 12);
  int v345 = v3[104];
  int v343 = v3[105];
  uint64_t v357 = *((void *)v3 + 14);
  uint64_t v341 = *((void *)v3 + 15);
  double v359 = *((double *)v3 + 20);
  uint64_t v329 = *((void *)v3 + 21);
  uint64_t v328 = *((void *)v3 + 22);
  float64x2_t v312 = *(float64x2_t *)(v3 + 184);
  float64x2_t v316 = *(float64x2_t *)(v3 + 216);
  float64x2_t v314 = *(float64x2_t *)(v3 + 200);
  float64x2_t v313 = *(float64x2_t *)(v3 + 232);
  int v301 = v3[248];
  int v299 = v3[249];
  int v339 = v3[250];
  uint64_t v330 = *((void *)v3 + 32);
  uint64_t v332 = *((void *)v3 + 33);
  float64x2_t v319 = *((float64x2_t *)v3 + 18);
  float64x2_t v318 = *((float64x2_t *)v3 + 17);
  float64x2_t v317 = *((float64x2_t *)v3 + 19);
  float64_t v315 = *((double *)v3 + 40);
  uint64_t v331 = *((void *)v3 + 41);
  float64_t v311 = *((double *)v3 + 42);
  int v297 = v3[344];
  double v333 = *((double *)v3 + 44);
  uint64_t v334 = *((void *)v3 + 45);
  double v335 = *((double *)v3 + 46);
  double v336 = *((double *)v3 + 47);
  double v337 = *((double *)v3 + 48);
  double v338 = *((double *)v3 + 49);
  uint64_t v295 = *((void *)v3 + 50);
  uint64_t v293 = *((void *)v3 + 51);
  memcpy(v373, v3 + 416, sizeof(v373));
  float64x2_t v291 = *((float64x2_t *)v4 + 58);
  unsigned __int8 v290 = v4[944];
  float64_t v289 = *((double *)v4 + 119);
  unsigned __int8 v288 = v4[960];
  float64_t v287 = *((double *)v4 + 121);
  unsigned __int8 v286 = v4[976];
  float64_t v285 = *((double *)v4 + 123);
  unsigned __int8 v284 = v4[992];
  float64x2_t v6 = *(float64x2_t *)(v4 + 1112);
  float64x2_t v380 = *(float64x2_t *)(v4 + 1096);
  float64x2_t v381 = v6;
  float64x2_t v7 = *(float64x2_t *)(v4 + 1144);
  float64x2_t v382 = *(float64x2_t *)(v4 + 1128);
  float64x2_t v383 = v7;
  float64x2_t v8 = *(float64x2_t *)(v4 + 1048);
  float64x2_t v376 = *(float64x2_t *)(v4 + 1032);
  float64x2_t v377 = v8;
  float64x2_t v9 = *(float64x2_t *)(v4 + 1080);
  float64x2_t v378 = *(float64x2_t *)(v4 + 1064);
  float64x2_t v379 = v9;
  float64x2_t v10 = *(float64x2_t *)(v4 + 1016);
  float64x2_t v374 = *(float64x2_t *)(v4 + 1000);
  float64x2_t v375 = v10;
  uint64_t v275 = *((void *)v4 + 145);
  uint64_t v274 = *((void *)v4 + 146);
  int v271 = v4[1176];
  uint64_t v269 = *((void *)v4 + 148);
  uint64_t v267 = *((void *)v4 + 149);
  uint64_t v265 = *((void *)v4 + 150);
  double v263 = *((double *)v4 + 151);
  double v261 = *((double *)v4 + 152);
  int v259 = (void *)*((void *)v4 + 153);
  int v257 = (void *)*((void *)v4 + 154);
  int v255 = (void *)*((void *)v4 + 155);
  int v253 = (void *)*((void *)v4 + 156);
  int v251 = (void *)*((void *)v4 + 157);
  int v249 = (void *)*((void *)v4 + 158);
  uint64_t v11 = (int64x2_t *)(v4 + 1272);
  double v243 = *((double *)v4 + 163);
  uint64_t v241 = *((void *)v4 + 164);
  uint64_t v239 = *((void *)v4 + 165);
  uint64_t v237 = *((void *)v4 + 166);
  uint64_t v235 = *((void *)v4 + 167);
  uint64_t v233 = *((void *)v4 + 168);
  uint64_t v231 = *((void *)v4 + 169);
  uint64_t v229 = *((void *)v4 + 170);
  uint64_t v227 = *((void *)v4 + 171);
  uint64_t v223 = *((void *)v4 + 172);
  uint64_t v225 = *((void *)v4 + 173);
  float64x2_t v205 = *(float64x2_t *)(v4 + 1464);
  float64x2_t v194 = *(float64x2_t *)(v4 + 1496);
  uint64_t v221 = *((void *)v4 + 174);
  float64_t v204 = *((double *)v4 + 185);
  double v196 = *((double *)v4 + 196);
  double v197 = *((double *)v4 + 197);
  int v218 = v4[1400];
  int v219 = v4[1401];
  uint64_t v213 = *((void *)v4 + 176);
  uint64_t v214 = *((void *)v4 + 177);
  uint64_t v215 = *((void *)v4 + 178);
  uint64_t v209 = *((void *)v4 + 179);
  uint64_t v207 = *((void *)v4 + 180);
  uint64_t v202 = *((void *)v4 + 181);
  float64_t v203 = *((double *)v4 + 182);
  float64_t v189 = *((double *)v4 + 186);
  float64_t v190 = *((double *)v4 + 189);
  float64x2_t v191 = *((float64x2_t *)v4 + 95);
  float64x2_t v192 = *((float64x2_t *)v4 + 96);
  float64_t v193 = *((double *)v4 + 194);
  int v195 = v4[1560];
  memcpy(v384, v4 + 1584, sizeof(v384));
  int v126 = v4[3851];
  double v128 = *((double *)v4 + 482);
  unsigned __int8 v127 = v4[3864];
  uint64_t v130 = *((void *)v4 + 484);
  unsigned __int8 v129 = v4[3880];
  uint64_t v132 = *((void *)v4 + 486);
  unsigned __int8 v131 = v4[3896];
  double v134 = *((double *)v4 + 488);
  unsigned __int8 v133 = v4[3912];
  double v136 = *((double *)v4 + 490);
  unsigned __int8 v135 = v4[3928];
  uint64_t v138 = *((void *)v4 + 492);
  unsigned __int8 v137 = v4[3944];
  double v139 = *((double *)v4 + 494);
  uint64_t v140 = *((void *)v4 + 495);
  double v141 = *((double *)v4 + 496);
  int v142 = v4[3976];
  int v143 = v4[3977];
  uint64_t v144 = *((void *)v4 + 498);
  uint64_t v146 = *((void *)v4 + 499);
  unsigned __int8 v145 = v4[4000];
  uint64_t v147 = *((void *)v4 + 501);
  uint64_t v149 = *((void *)v4 + 502);
  uint64_t v152 = *((void *)v4 + 503);
  float64_t v148 = *((double *)v4 + 504);
  float64_t v154 = *((double *)v4 + 505);
  uint64_t v151 = *((void *)v4 + 506);
  unsigned __int8 v150 = v4[4056];
  float64x2_t v155 = *((float64x2_t *)v4 + 255);
  float64x2_t v156 = *((float64x2_t *)v4 + 254);
  unsigned __int8 v153 = v4[4096];
  uint64_t v158 = *((void *)v4 + 513);
  uint64_t v157 = *((void *)v4 + 514);
  uint64_t v163 = *((void *)v4 + 515);
  uint64_t v162 = *((void *)v4 + 516);
  double v168 = *((double *)v4 + 522);
  float64x2_t v355 = *((float64x2_t *)v4 + 9);
  float64x2_t v354 = *((float64x2_t *)v4 + 8);
  uint64_t v160 = *((void *)v4 + 517);
  unsigned __int8 v159 = v4[4144];
  uint64_t v164 = *((void *)v4 + 519);
  unsigned __int8 v161 = v4[4160];
  int v166 = v4[4184];
  uint64_t v165 = *((void *)v4 + 521);
  uint64_t v167 = *((void *)v4 + 524);
  int v169 = (void *)*((void *)v4 + 525);
  uint64_t v170 = *((void *)v4 + 526);
  uint64_t v171 = *((void *)v4 + 527);
  uint64_t v172 = *((void *)v4 + 528);
  uint64_t v173 = *((void *)v4 + 529);
  int v174 = v4[4240];
  uint64_t v175 = *((void *)v4 + 531);
  uint64_t v176 = *((void *)v4 + 532);
  uint64_t v177 = *((void *)v4 + 533);
  uint64_t v178 = *((void *)v4 + 534);
  int v179 = v4[4280];
  int v180 = v4[4281];
  int64x2_t v362 = *(int64x2_t *)(v2 + 24);
  double v13 = *((double *)v2 + 5);
  double v12 = *((double *)v2 + 6);
  int64x2_t v361 = *(int64x2_t *)(v2 + 56);
  double v14 = *((double *)v2 + 12);
  float64x2_t v353 = *((float64x2_t *)v2 + 9);
  float64x2_t v352 = *((float64x2_t *)v2 + 8);
  double v15 = *((double *)v2 + 20);
  float64x2_t v303 = *(float64x2_t *)(v2 + 184);
  float64x2_t v307 = *(float64x2_t *)(v2 + 216);
  float64x2_t v305 = *(float64x2_t *)(v2 + 200);
  float64x2_t v304 = *(float64x2_t *)(v2 + 232);
  float64x2_t v310 = *((float64x2_t *)v2 + 18);
  float64x2_t v309 = *((float64x2_t *)v2 + 17);
  float64x2_t v308 = *((float64x2_t *)v2 + 19);
  float64_t v306 = *((double *)v2 + 40);
  float64_t v302 = *((double *)v2 + 42);
  int v296 = v5[72];
  double v16 = *((double *)v2 + 44);
  double v18 = *((double *)v2 + 46);
  double v17 = *((double *)v2 + 47);
  double v19 = *((double *)v2 + 48);
  double v327 = *((double *)v2 + 49);
  LODWORD(v5) = *v2;
  uint64_t v21 = (void *)*((void *)v2 + 1);
  uint64_t v20 = *((void *)v2 + 2);
  uint64_t v22 = *((void *)v2 + 9);
  uint64_t v350 = (void *)*((void *)v2 + 10);
  int v348 = v2[88];
  int v346 = v2[89];
  int v344 = v2[104];
  int v342 = v2[105];
  uint64_t v351 = *((void *)v2 + 14);
  uint64_t v340 = *((void *)v2 + 15);
  uint64_t v320 = *((void *)v2 + 21);
  uint64_t v321 = *((void *)v2 + 22);
  int v300 = v2[248];
  int v298 = v2[249];
  int v326 = v2[250];
  uint64_t v322 = *((void *)v2 + 32);
  uint64_t v323 = *((void *)v2 + 33);
  uint64_t v324 = *((void *)v2 + 41);
  uint64_t v325 = *((void *)v2 + 45);
  uint64_t v294 = *((void *)v2 + 50);
  uint64_t v292 = *((void *)v2 + 51);
  memcpy(v385, v2 + 416, sizeof(v385));
  int64x2_t v247 = v11[1];
  int64x2_t v246 = *v11;
  float64x2_t v276 = *((float64x2_t *)v2 + 58);
  unsigned __int8 v277 = v2[944];
  float64_t v278 = *((double *)v2 + 119);
  unsigned __int8 v279 = v2[960];
  float64_t v280 = *((double *)v2 + 121);
  unsigned __int8 v281 = v2[976];
  float64_t v283 = *((double *)v2 + 123);
  unsigned __int8 v282 = v2[992];
  float64x2_t v23 = *(float64x2_t *)(v2 + 1112);
  float64x2_t v392 = *(float64x2_t *)(v2 + 1096);
  float64x2_t v393 = v23;
  float64x2_t v24 = *(float64x2_t *)(v2 + 1144);
  float64x2_t v394 = *(float64x2_t *)(v2 + 1128);
  float64x2_t v395 = v24;
  float64x2_t v25 = *(float64x2_t *)(v2 + 1048);
  float64x2_t v388 = *(float64x2_t *)(v2 + 1032);
  float64x2_t v389 = v25;
  float64x2_t v26 = *(float64x2_t *)(v2 + 1080);
  float64x2_t v390 = *(float64x2_t *)(v2 + 1064);
  float64x2_t v391 = v26;
  float64x2_t v27 = *(float64x2_t *)(v2 + 1016);
  float64x2_t v386 = *(float64x2_t *)(v2 + 1000);
  float64x2_t v387 = v27;
  uint64_t v273 = *((void *)v2 + 145);
  uint64_t v272 = *((void *)v2 + 146);
  int v270 = v2[1176];
  uint64_t v268 = *((void *)v2 + 148);
  uint64_t v266 = *((void *)v2 + 149);
  uint64_t v264 = *((void *)v2 + 150);
  double v262 = *((double *)v2 + 151);
  double v260 = *((double *)v2 + 152);
  int v258 = (void *)*((void *)v2 + 153);
  int v256 = (void *)*((void *)v2 + 154);
  int v254 = (void *)*((void *)v2 + 155);
  int v252 = (void *)*((void *)v2 + 156);
  int v250 = (void *)*((void *)v2 + 157);
  uint64_t v248 = (void *)*((void *)v2 + 158);
  int64x2_t v245 = *(int64x2_t *)(v2 + 1288);
  int64x2_t v244 = *(int64x2_t *)(v2 + 1272);
  double v242 = *((double *)v2 + 163);
  uint64_t v240 = *((void *)v2 + 164);
  uint64_t v238 = *((void *)v2 + 165);
  uint64_t v236 = *((void *)v2 + 166);
  uint64_t v234 = *((void *)v2 + 167);
  uint64_t v232 = *((void *)v2 + 168);
  uint64_t v230 = *((void *)v2 + 169);
  uint64_t v228 = *((void *)v2 + 170);
  uint64_t v226 = *((void *)v2 + 171);
  uint64_t v222 = *((void *)v2 + 172);
  uint64_t v224 = *((void *)v2 + 173);
  uint64_t v220 = *((void *)v2 + 174);
  float64x2_t v201 = *(float64x2_t *)(v2 + 1464);
  float64x2_t v186 = *(float64x2_t *)(v2 + 1496);
  int v217 = v2[1400];
  float64_t v200 = *((double *)v2 + 185);
  double v187 = *((double *)v2 + 196);
  double v188 = *((double *)v2 + 197);
  int v216 = v2[1401];
  uint64_t v210 = *((void *)v2 + 176);
  uint64_t v211 = *((void *)v2 + 177);
  uint64_t v212 = *((void *)v2 + 178);
  uint64_t v208 = *((void *)v2 + 179);
  uint64_t v206 = *((void *)v2 + 180);
  uint64_t v198 = *((void *)v2 + 181);
  float64_t v199 = *((double *)v2 + 182);
  float64_t v181 = *((double *)v2 + 186);
  float64_t v182 = *((double *)v2 + 189);
  float64x2_t v183 = *((float64x2_t *)v2 + 95);
  float64x2_t v184 = *((float64x2_t *)v2 + 96);
  float64_t v185 = *((double *)v2 + 194);
  int v28 = v2[1560];
  memcpy(v396, v2 + 1584, sizeof(v396));
  if (v369 != v5) {
    return 0;
  }
  int v370 = v28;
  int v125 = v2[3851];
  double v78 = *((double *)v2 + 482);
  int v79 = v2[3864];
  uint64_t v80 = *((void *)v2 + 484);
  int v81 = v2[3880];
  uint64_t v82 = *((void *)v2 + 486);
  int v83 = v2[3896];
  double v84 = *((double *)v2 + 488);
  int v85 = v2[3912];
  double v86 = *((double *)v2 + 490);
  uint64_t v89 = *((void *)v2 + 492);
  int v87 = v2[3928];
  int v88 = v2[3944];
  double v90 = *((double *)v2 + 494);
  uint64_t v91 = *((void *)v2 + 495);
  double v92 = *((double *)v2 + 496);
  int v93 = v2[3976];
  int v94 = v2[3977];
  uint64_t v95 = *((void *)v2 + 498);
  unsigned __int8 v96 = v2[4000];
  uint64_t v97 = *((void *)v2 + 499);
  uint64_t v98 = *((void *)v2 + 501);
  float64x2_t v99 = *((float64x2_t *)v2 + 251);
  float64x2_t v100 = *((float64x2_t *)v2 + 252);
  uint64_t v101 = *((void *)v2 + 506);
  int v102 = v2[4056];
  float64x2_t v103 = *((float64x2_t *)v2 + 255);
  float64x2_t v104 = *((float64x2_t *)v2 + 254);
  unsigned __int8 v105 = v2[4096];
  int v113 = v2[4144];
  int v115 = v2[4160];
  int v117 = v2[4184];
  int v123 = v2[4240];
  int v29 = v2[4280];
  int v124 = v2[4281];
  double v114 = *((double *)v2 + 522);
  uint64_t v106 = *((void *)v2 + 513);
  uint64_t v107 = *((void *)v2 + 514);
  uint64_t v108 = *((void *)v2 + 515);
  uint64_t v109 = *((void *)v2 + 516);
  uint64_t v110 = *((void *)v2 + 517);
  uint64_t v111 = *((void *)v2 + 519);
  uint64_t v112 = *((void *)v2 + 521);
  uint64_t v116 = *((void *)v2 + 524);
  uint64_t v118 = (void *)*((void *)v2 + 525);
  uint64_t v119 = *((void *)v2 + 526);
  uint64_t v120 = *((void *)v2 + 527);
  uint64_t v121 = *((void *)v2 + 528);
  uint64_t v122 = *((void *)v2 + 529);
  uint64_t v30 = *((void *)v2 + 531);
  uint64_t v31 = *((void *)v2 + 532);
  uint64_t v32 = *((void *)v2 + 533);
  uint64_t v33 = *((void *)v2 + 534);
  if (!sub_1AFF23FC4(v368, v21)) {
    return 0;
  }
  BOOL v34 = sub_1AFF24030(v365, v20);
  uint64_t result = 0;
  if (!v34) {
    return result;
  }
  if ((~vaddv_s16((int16x4_t)vand_s8((int8x8_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_s64(v364, v362), (int32x4_t)vceqq_s64(v363, v361))), 0xFuLL)), (int8x8_t)0x8000400020001)) & 0xF) != 0)return result; {
  if (v366 != v22)
  }
    return result;
  if (v367 != v13) {
    return result;
  }
  if (v360 != v12) {
    return result;
  }
  char v36 = sub_1AFF22B0C(v356, v350);
  uint64_t result = 0;
  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v354, v352), (int32x4_t)vceqq_f64(v355, v353))), 0xFuLL))) & 1) == 0|| v358 != v14|| v359 != v15|| ((v349 ^ v348) & 1) != 0|| ((v347 ^ v346) & 1) != 0|| ((v345 ^ v344) & 1) != 0|| ((v343 ^ v342) & 1) != 0|| v357 != v351|| (v36 & 1) == 0|| v341 != v340)
  {
    return result;
  }
  if (v329 == v320 && v328 == v321)
  {
    uint64_t result = 0;
    if (v339 != v326) {
      return result;
    }
    v37.f64[0] = v315;
    v37.f64[1] = v311;
    v38.f64[0] = v306;
    v38.f64[1] = v302;
    if ((vminvq_u8((uint8x16_t)vcltzq_s8(vshlq_n_s8(vuzp1q_s8((int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64((float64x2_t)vextq_s8((int8x16_t)v312, (int8x16_t)v312, 8uLL), (float64x2_t)vextq_s8((int8x16_t)v303, (int8x16_t)v303, 8uLL)), (int32x4_t)vceqq_f64(v314, v305)), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(v316, v307), (int32x4_t)vceqq_f64(v313, v304))), (int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32(
                                                                (int32x4_t)vceqq_f64(v318, v309),
                                                                (int32x4_t)vceqq_f64(v319, v310)),
                                                   (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(v317, v308), (int32x4_t)vceqq_f64(v37, v38)))), 7uLL))) & (v333 == v16) & (v335 == v18&& v336 == v17&& v337 == v19&& v338 == v327&& v330 == v322&& v332 == v323)) == 0|| v331 != v324|| v334 != v325|| ((v301 ^ v300) & 1) != 0|| ((v299 ^ v298) & 1) != 0)
    {
      return result;
    }
  }
  else
  {
    char v39 = sub_1AFFCBCE8();
    uint64_t result = 0;
    if (v339 != v326) {
      return result;
    }
    v40.f64[0] = v315;
    v40.f64[1] = v311;
    v41.f64[0] = v306;
    v41.f64[1] = v302;
    if ((vminvq_u8((uint8x16_t)vcltzq_s8(vshlq_n_s8(vuzp1q_s8((int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(v312, v303), (int32x4_t)vceqq_f64(v314, v305)), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(v316, v307), (int32x4_t)vceqq_f64(v313, v304))), (int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(v318, v309), (int32x4_t)vceqq_f64(v319, v310)), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(v317, v308), (int32x4_t)vceqq_f64(v40, v41)))), 7uLL))) & (v333 == v16) & (v335 == v18&& v336 == v17&& v337 == v19
                                                            && v338 == v327
                                                            && v330 == v322
                                                            && v332 == v323)) == 0
      || v331 != v324
      || v334 != v325
      || ((v301 ^ v300) & 1) != 0
      || ((v299 ^ v298) & 1) != 0
      || (v39 & 1) == 0)
    {
      return result;
    }
  }
  if ((v297 ^ v296)) {
    return result;
  }
  if ((sub_1AFF2409C(v295, v294) & 1) == 0) {
    return 0;
  }
  if ((sub_1AFF2441C(v293, v292) & 1) == 0) {
    return 0;
  }
  memcpy(v372, v373, 0x1F9uLL);
  memcpy(__dst, v385, 0x1F9uLL);
  if ((sub_1AFDC7D8C((uint64_t)v372, (uint64_t)__dst) & 1) == 0) {
    return 0;
  }
  v372[0] = v291;
  LOBYTE(v372[1].f64[0]) = v290;
  v372[1].f64[1] = v289;
  LOBYTE(v372[2].f64[0]) = v288;
  v372[2].f64[1] = v287;
  LOBYTE(v372[3].f64[0]) = v286;
  v372[3].f64[1] = v285;
  LOBYTE(v372[4].f64[0]) = v284;
  __dst[0] = v276;
  LOBYTE(__dst[1].f64[0]) = v277;
  __dst[1].f64[1] = v278;
  LOBYTE(__dst[2].f64[0]) = v279;
  __dst[2].f64[1] = v280;
  LOBYTE(__dst[3].f64[0]) = v281;
  __dst[3].f64[1] = v283;
  LOBYTE(__dst[4].f64[0]) = v282;
  if (!sub_1AFE76830((uint64_t)v372, (uint64_t)__dst)) {
    return 0;
  }
  v372[6] = v380;
  v372[7] = v381;
  v372[8] = v382;
  v372[9] = v383;
  v372[2] = v376;
  v372[3] = v377;
  v372[4] = v378;
  v372[5] = v379;
  v372[0] = v374;
  v372[1] = v375;
  __dst[6] = v392;
  __dst[7] = v393;
  __dst[8] = v394;
  __dst[9] = v395;
  __dst[2] = v388;
  __dst[3] = v389;
  __dst[4] = v390;
  __dst[5] = v391;
  __dst[0] = v386;
  __dst[1] = v387;
  if (!sub_1AFE86FF0(v372, __dst)) {
    return 0;
  }
  if (v275 == v273 && v274 == v272)
  {
    uint64_t result = 0;
    if (v271 != v270) {
      return result;
    }
  }
  else
  {
    char v42 = sub_1AFFCBCE8();
    uint64_t result = 0;
    if ((v42 & 1) == 0 || v271 != v270) {
      return result;
    }
  }
  if (v269 != v268) {
    return result;
  }
  char v43 = sub_1AFF244C8(v267, v266);
  uint64_t result = 0;
  if ((v43 & 1) == 0 || v265 != v264 || v263 != v262 || v261 != v260) {
    return result;
  }
  if ((sub_1AFF22B0C(v259, v258) & 1) == 0
    || (sub_1AFF22B0C(v257, v256) & 1) == 0
    || (sub_1AFF22B0C(v255, v254) & 1) == 0
    || (sub_1AFF22B0C(v253, v252) & 1) == 0
    || (sub_1AFF22B0C(v251, v250) & 1) == 0)
  {
    return 0;
  }
  char v44 = sub_1AFF22B0C(v249, v248);
  uint64_t result = 0;
  if ((v44 & 1) != 0
    && (~vaddv_s16((int16x4_t)vand_s8((int8x8_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_s64(v246, v244), (int32x4_t)vceqq_s64(v247, v245))), 0xFuLL)), (int8x8_t)0x8000400020001)) & 0xF) == 0&& v243 == v242)
  {
    if (v241 == v240 && v239 == v238 || (v45 = sub_1AFFCBCE8(), uint64_t result = 0, (v45 & 1) != 0))
    {
      if (v237 == v236 && v235 == v234)
      {
        uint64_t result = 0;
      }
      else
      {
        char v46 = sub_1AFFCBCE8();
        uint64_t result = 0;
        if ((v46 & 1) == 0) {
          return result;
        }
      }
      if (v233 == v232 && v231 == v230)
      {
        char v47 = sub_1AFF81A2C(v229, v228);
        uint64_t result = 0;
        if ((v47 & 1) != 0 && v227 == v226 && v223 == v222)
        {
          if (v225 == v224 && v221 == v220)
          {
            uint64_t result = 0;
            if (v218 != v217 || ((v219 ^ v216) & 1) != 0) {
              return result;
            }
          }
          else
          {
            char v48 = sub_1AFFCBCE8();
            uint64_t result = 0;
            if ((v48 & 1) == 0 || v218 != v217 || v219 != v216) {
              return result;
            }
          }
          if (v213 == v210)
          {
            if (v214 == v211 && v215 == v212 || (v49 = sub_1AFFCBCE8(), uint64_t result = 0, (v49 & 1) != 0))
            {
              if (v209 == v208 && v207 == v206)
              {
                if (v202 != v198) {
                  return 0;
                }
              }
              else
              {
                char v50 = sub_1AFFCBCE8();
                uint64_t result = 0;
                if ((v50 & 1) == 0 || v202 != v198) {
                  return result;
                }
              }
              v372[0].f64[0] = v203;
              *(float64x2_t *)((char *)v372 + 8) = v205;
              v372[1].f64[1] = v204;
              __dst[0].f64[0] = v199;
              *(float64x2_t *)((char *)__dst + 8) = v201;
              __dst[1].f64[1] = v200;
              if ((sub_1AFDAA114((uint64_t)v372, (uint64_t)__dst) & 1) == 0) {
                return 0;
              }
              v372[0].f64[0] = v189;
              *(float64x2_t *)((char *)v372 + 8) = v194;
              v372[1].f64[1] = v190;
              v372[2] = v191;
              v372[3] = v192;
              v372[4].f64[0] = v193;
              __dst[0].f64[0] = v181;
              *(float64x2_t *)((char *)__dst + 8) = v186;
              __dst[1].f64[1] = v182;
              __dst[2] = v183;
              __dst[3] = v184;
              __dst[4].f64[0] = v185;
              char v51 = sub_1AFF9D000(v372, __dst);
              uint64_t result = 0;
              if ((v51 & 1) == 0) {
                return result;
              }
              if (v195 != v370) {
                return result;
              }
              if (v196 != v187) {
                return result;
              }
              if (v197 != v188) {
                return result;
              }
              memcpy(v372, v384, 0x8DBuLL);
              memcpy(__dst, v396, 0x8DBuLL);
              char v52 = sub_1AFF45298((uint64_t)v372);
              uint64_t result = 0;
              if (v52 & 1) == 0 || ((v126 ^ v125)) {
                return result;
              }
              if (v127)
              {
                if (!v79) {
                  return 0;
                }
              }
              else
              {
                char v53 = v79;
                if (v128 != v78) {
                  char v53 = 1;
                }
                if (v53) {
                  return 0;
                }
              }
              if (v129)
              {
                if (!v81) {
                  return 0;
                }
              }
              else
              {
                char v54 = v81;
                if (v130 != v80) {
                  char v54 = 1;
                }
                if (v54) {
                  return 0;
                }
              }
              if (v131)
              {
                if (!v83) {
                  return 0;
                }
              }
              else
              {
                char v55 = v83;
                if (v132 != v82) {
                  char v55 = 1;
                }
                if (v55) {
                  return 0;
                }
              }
              if (v133)
              {
                if (!v85) {
                  return 0;
                }
              }
              else
              {
                char v56 = v85;
                if (v134 != v84) {
                  char v56 = 1;
                }
                if (v56) {
                  return 0;
                }
              }
              if (v135)
              {
                if (!v87) {
                  return 0;
                }
              }
              else
              {
                char v57 = v87;
                if (v136 != v86) {
                  char v57 = 1;
                }
                if (v57) {
                  return 0;
                }
              }
              if (v137)
              {
                uint64_t result = 0;
                int v58 = v88;
                if (v139 != v90) {
                  int v58 = 0;
                }
                if (v58 != 1) {
                  return result;
                }
              }
              else
              {
                if (v88) {
                  return 0;
                }
                uint64_t result = 0;
                if (v138 != v89 || v139 != v90) {
                  return result;
                }
              }
              if (v140 != v91 || v141 != v92 || v142 != v93 || v143 != v94 || v144 != v95) {
                return result;
              }
              if (v145)
              {
                unsigned __int8 v59 = v96;
                if (v147 != v98) {
                  unsigned __int8 v59 = 0;
                }
                if ((v59 & 1) == 0) {
                  return 0;
                }
              }
              else
              {
                if (v96) {
                  return 0;
                }
                uint64_t result = 0;
                if (v146 != v97 || v147 != v98) {
                  return result;
                }
              }
              if (v152 == 1)
              {
                if (*(void *)&v99.f64[1] == 1)
                {
LABEL_156:
                  if (v150)
                  {
                    if (!v102) {
                      return 0;
                    }
                  }
                  else
                  {
                    char v61 = v102;
                    if (v151 != v101) {
                      char v61 = 1;
                    }
                    if (v61) {
                      return 0;
                    }
                  }
                  *(float64x2_t *)((char *)&v372[2] + 8) = v104;
                  *(float64x2_t *)((char *)&v372[3] + 8) = v103;
                  LOBYTE(v372[4].f64[1]) = v105;
                  if (v153)
                  {
                    if ((v105 & 1) == 0) {
                      return 0;
                    }
                  }
                  else
                  {
                    __dst[0] = v156;
                    __dst[1] = v155;
                    LOBYTE(__dst[2].f64[0]) = 0;
                    if ((v105 & 1) != 0 || !sub_1AFE75BCC((uint64_t)__dst, (uint64_t)&v372[2].f64[1])) {
                      return 0;
                    }
                  }
                  if (v157)
                  {
                    if (!v107) {
                      return 0;
                    }
                    if (v158 != v106 || v157 != v107)
                    {
                      char v62 = sub_1AFFCBCE8();
                      uint64_t result = 0;
                      if ((v62 & 1) == 0) {
                        return result;
                      }
                    }
                  }
                  else if (v107)
                  {
                    return 0;
                  }
                  if (v162)
                  {
                    if (!v109) {
                      return 0;
                    }
                    if (v163 != v108 || v162 != v109)
                    {
                      char v63 = sub_1AFFCBCE8();
                      uint64_t result = 0;
                      if ((v63 & 1) == 0) {
                        return result;
                      }
                    }
                  }
                  else if (v109)
                  {
                    return 0;
                  }
                  if (v159)
                  {
                    if (!v113) {
                      return 0;
                    }
                  }
                  else
                  {
                    char v64 = v113;
                    if (v160 != v110) {
                      char v64 = 1;
                    }
                    if (v64) {
                      return 0;
                    }
                  }
                  if (v161)
                  {
                    uint64_t result = 0;
                    int v65 = v115;
                    if (v165 != v112) {
                      int v65 = 0;
                    }
                    if (v65 != 1) {
                      return result;
                    }
                  }
                  else
                  {
                    if (v115) {
                      return 0;
                    }
                    uint64_t result = 0;
                    if (v164 != v111 || v165 != v112) {
                      return result;
                    }
                  }
                  if (v168 != v114) {
                    return result;
                  }
                  if (v166 != v117) {
                    return result;
                  }
                  if (v167 != v116) {
                    return result;
                  }
                  char v66 = sub_1AFF22B0C(v169, v118);
                  uint64_t result = 0;
                  if ((v66 & 1) == 0) {
                    return result;
                  }
                  if (v170 != v119) {
                    return result;
                  }
                  if (v171 != v120) {
                    return result;
                  }
                  sub_1AFF81CD0(v172, v121);
                  char v68 = v67;
                  uint64_t result = 0;
                  if (v68 & 1) == 0 || v173 != v122 || ((v174 ^ v123)) {
                    return result;
                  }
                  if (v175)
                  {
                    if (!v30) {
                      return 0;
                    }
                    sub_1AFFC8E38();
                    uint64_t v69 = sub_1AFFC8E38();
                    sub_1AFE9BAFC(v69, v30);
                    char v71 = v70;
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    if ((v71 & 1) == 0) {
                      return 0;
                    }
                  }
                  else if (v30)
                  {
                    return 0;
                  }
                  if (v176)
                  {
                    if (!v31) {
                      return 0;
                    }
                    sub_1AFFC8E38();
                    uint64_t v72 = sub_1AFFC8E38();
                    sub_1AFE9BAFC(v72, v31);
                    char v74 = v73;
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    uint64_t result = 0;
                    if ((v74 & 1) == 0) {
                      return result;
                    }
                  }
                  else
                  {
                    uint64_t result = 0;
                    if (v31) {
                      return result;
                    }
                  }
                  if (v177 != v32) {
                    return result;
                  }
                  if (!v178)
                  {
                    uint64_t result = 0;
                    if (v33) {
                      return result;
                    }
LABEL_220:
                    if (((v179 ^ v29) & 1) == 0) {
                      return v180 ^ v124 ^ 1u;
                    }
                    return result;
                  }
                  if (v33)
                  {
                    sub_1AFFC8E38();
                    uint64_t v75 = sub_1AFFC8E38();
                    sub_1AFE9BAFC(v75, v33);
                    char v77 = v76;
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    uint64_t result = 0;
                    if ((v77 & 1) == 0) {
                      return result;
                    }
                    goto LABEL_220;
                  }
                  return 0;
                }
              }
              else
              {
                *(void *)&v372[0].f64[0] = v149;
                *(void *)&v372[0].f64[1] = v152;
                v372[1].f64[0] = v148;
                v372[1].f64[1] = v154;
                if (*(void *)&v99.f64[1] != 1)
                {
                  __dst[0] = v99;
                  __dst[1] = v100;
                  char v60 = sub_1AFE38C50(v372, __dst);
                  sub_1AFFC8E38();
                  sub_1AFFC8E38();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if ((v60 & 1) == 0) {
                    return 0;
                  }
                  goto LABEL_156;
                }
                sub_1AFFC8E38();
                sub_1AFFC8E38();
              }
              sub_1AFDB3C00(*(uint64_t *)&v99.f64[0], *(uint64_t *)&v99.f64[1]);
              sub_1AFD56284(v149, v152);
              sub_1AFD56284(*(uint64_t *)&v99.f64[0], *(uint64_t *)&v99.f64[1]);
              return 0;
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1AFF88E80(char a1, uint64_t a2)
{
  uint64_t v3 = (void *)(a2 + 16);
  unint64_t v4 = sub_1AFF82114(a1);
  uint64_t v6 = v5;
  swift_beginAccess();
  float64x2_t v7 = *(void **)(a2 + 16);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a2 + 16) = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    float64x2_t v7 = sub_1AFD352FC(0, v7[2] + 1, 1, v7);
    *uint64_t v3 = v7;
  }
  unint64_t v10 = v7[2];
  unint64_t v9 = v7[3];
  if (v10 >= v9 >> 1)
  {
    float64x2_t v7 = sub_1AFD352FC((void *)(v9 > 1), v10 + 1, 1, v7);
    *uint64_t v3 = v7;
  }
  uint64_t v7[2] = v10 + 1;
  uint64_t v11 = &v7[2 * v10];
  v11[4] = v4;
  v11[5] = v6;
  return swift_endAccess();
}

unint64_t sub_1AFF88F5C()
{
  unint64_t result = qword_1EB819048[0];
  if (!qword_1EB819048[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EB819048);
  }
  return result;
}

unint64_t sub_1AFF88FB0()
{
  unint64_t result = qword_1EB818FE0;
  if (!qword_1EB818FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818FE0);
  }
  return result;
}

uint64_t sub_1AFF89004()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

unint64_t sub_1AFF8903C()
{
  unint64_t result = qword_1EB819CE8;
  if (!qword_1EB819CE8)
  {
    sub_1AFF89D3C(255, &qword_1EB819CE0, (uint64_t)&type metadata for LanguageConfig, MEMORY[0x1E4FBB320]);
    sub_1AFF890D0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819CE8);
  }
  return result;
}

unint64_t sub_1AFF890D0()
{
  unint64_t result = qword_1EB818E60;
  if (!qword_1EB818E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818E60);
  }
  return result;
}

uint64_t sub_1AFF89124(uint64_t a1)
{
  long long v17 = *(_OWORD *)(a1 + 464);
  long long v15 = *(_OWORD *)(a1 + 432);
  long long v16 = *(_OWORD *)(a1 + 448);
  long long v13 = *(_OWORD *)(a1 + 400);
  long long v14 = *(_OWORD *)(a1 + 416);
  long long v11 = *(_OWORD *)(a1 + 368);
  long long v12 = *(_OWORD *)(a1 + 384);
  long long v9 = *(_OWORD *)(a1 + 336);
  long long v10 = *(_OWORD *)(a1 + 352);
  long long v7 = *(_OWORD *)(a1 + 304);
  long long v8 = *(_OWORD *)(a1 + 320);
  long long v5 = *(_OWORD *)(a1 + 272);
  long long v6 = *(_OWORD *)(a1 + 288);
  long long v4 = *(_OWORD *)(a1 + 256);
  long long v3 = *(_OWORD *)(a1 + 240);
  sub_1AFF892C8(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    *(void *)(a1 + 224),
    *(void *)(a1 + 232),
    v3,
    *((uint64_t *)&v3 + 1),
    v4,
    *((uint64_t *)&v4 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v8,
    *((uint64_t *)&v8 + 1),
    v9,
    *((uint64_t *)&v9 + 1),
    v10,
    *((uint64_t *)&v10 + 1),
    v11,
    *((uint64_t *)&v11 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v16,
    *((uint64_t *)&v16 + 1),
    v17,
    *((uint64_t *)&v17 + 1),
    *(void *)(a1 + 480));
  return a1;
}

uint64_t sub_1AFF892C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61)
{
  if (a2)
  {
    uint64_t v62 = STACK[0x6C0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1AFF8975C(a11, a12);
    sub_1AFF897A0(a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33,
      a34,
      a35,
      a36,
      a37,
      a38,
      a39,
      a40,
      a41,
      a42,
      a43,
      a44,
      a45,
      a46,
      a47,
      a48,
      a49,
      a50,
      a51,
      a52,
      a53,
      a54,
      a55,
      a56,
      a57,
      a58,
      a59,
      a60,
      a61);
    sub_1AFF899D4(v62);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1AFF8975C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1AFF897A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  if (a8)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1AFD56100(a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45,
      a46,
      a47);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1AFF899D4(uint64_t result)
{
  if (result != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1AFF899E4()
{
  unint64_t result = qword_1EB819E20;
  if (!qword_1EB819E20)
  {
    sub_1AFF89D3C(255, &qword_1EB819E10, MEMORY[0x1E4FBC1C8], MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819E20);
  }
  return result;
}

unint64_t sub_1AFF89A70()
{
  unint64_t result = qword_1EB819E08;
  if (!qword_1EB819E08)
  {
    sub_1AFF89D3C(255, &qword_1EB819DF8, MEMORY[0x1E4FBC150], MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819E08);
  }
  return result;
}

uint64_t sub_1AFF89AFC(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1AFF89B6C()
{
  unint64_t result = qword_1EB819D78;
  if (!qword_1EB819D78)
  {
    sub_1AFF89D3C(255, &qword_1EB819D68, (uint64_t)&type metadata for ExternalAnalyticsConfiguration, MEMORY[0x1E4FBB320]);
    sub_1AFF89C00();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819D78);
  }
  return result;
}

unint64_t sub_1AFF89C00()
{
  unint64_t result = qword_1EB8198B0;
  if (!qword_1EB8198B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8198B0);
  }
  return result;
}

unint64_t sub_1AFF89C54()
{
  unint64_t result = qword_1EB819D18;
  if (!qword_1EB819D18)
  {
    sub_1AFF89D3C(255, &qword_1EB819D08, (uint64_t)&type metadata for EndpointConfiguration, MEMORY[0x1E4FBB320]);
    sub_1AFF89CE8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819D18);
  }
  return result;
}

unint64_t sub_1AFF89CE8()
{
  unint64_t result = qword_1EB819478;
  if (!qword_1EB819478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819478);
  }
  return result;
}

void sub_1AFF89D3C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_1AFF89D88()
{
  unint64_t result = qword_1EB819CB0;
  if (!qword_1EB819CB0)
  {
    sub_1AFF89D3C(255, &qword_1EB819CA0, (uint64_t)&type metadata for StocksKitClientConfig, MEMORY[0x1E4FBB320]);
    sub_1AFF89E1C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819CB0);
  }
  return result;
}

unint64_t sub_1AFF89E1C()
{
  unint64_t result = qword_1EB818BD0;
  if (!qword_1EB818BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818BD0);
  }
  return result;
}

void sub_1AFF89E70()
{
  if (!qword_1EB819C78)
  {
    sub_1AFFCA4E8();
    unint64_t v0 = sub_1AFFCAD18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB819C78);
    }
  }
}

unint64_t sub_1AFF89ED8()
{
  unint64_t result = qword_1EB819C88;
  if (!qword_1EB819C88)
  {
    sub_1AFF89E70();
    sub_1AFF8A7AC(&qword_1EB819BB0, MEMORY[0x1E4FAAFC8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819C88);
  }
  return result;
}

#error "1AFF8A03C: call analysis failed (funcsize=55)"

unint64_t sub_1AFF8A05C()
{
  unint64_t result = qword_1EB819E18;
  if (!qword_1EB819E18)
  {
    sub_1AFF89D3C(255, &qword_1EB819E10, MEMORY[0x1E4FBC1C8], MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819E18);
  }
  return result;
}

unint64_t sub_1AFF8A0E8()
{
  unint64_t result = qword_1EB819E00;
  if (!qword_1EB819E00)
  {
    sub_1AFF89D3C(255, &qword_1EB819DF8, MEMORY[0x1E4FBC150], MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819E00);
  }
  return result;
}

unint64_t sub_1AFF8A174()
{
  unint64_t result = qword_1EB819DC8;
  if (!qword_1EB819DC8)
  {
    sub_1AFF89D3C(255, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819DC8);
  }
  return result;
}

unint64_t sub_1AFF8A200()
{
  unint64_t result = qword_1EB819D70;
  if (!qword_1EB819D70)
  {
    sub_1AFF89D3C(255, &qword_1EB819D68, (uint64_t)&type metadata for ExternalAnalyticsConfiguration, MEMORY[0x1E4FBB320]);
    sub_1AFF8A294();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819D70);
  }
  return result;
}

unint64_t sub_1AFF8A294()
{
  unint64_t result = qword_1EB8198A8;
  if (!qword_1EB8198A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8198A8);
  }
  return result;
}

unint64_t sub_1AFF8A2E8()
{
  unint64_t result = qword_1EB819D10;
  if (!qword_1EB819D10)
  {
    sub_1AFF89D3C(255, &qword_1EB819D08, (uint64_t)&type metadata for EndpointConfiguration, MEMORY[0x1E4FBB320]);
    sub_1AFF8A37C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819D10);
  }
  return result;
}

unint64_t sub_1AFF8A37C()
{
  unint64_t result = qword_1EB819470;
  if (!qword_1EB819470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819470);
  }
  return result;
}

unint64_t sub_1AFF8A3D0()
{
  unint64_t result = qword_1EB8197A8;
  if (!qword_1EB8197A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8197A8);
  }
  return result;
}

unint64_t sub_1AFF8A424()
{
  unint64_t result = qword_1EB819CA8;
  if (!qword_1EB819CA8)
  {
    sub_1AFF89D3C(255, &qword_1EB819CA0, (uint64_t)&type metadata for StocksKitClientConfig, MEMORY[0x1E4FBB320]);
    sub_1AFF8A4B8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819CA8);
  }
  return result;
}

unint64_t sub_1AFF8A4B8()
{
  unint64_t result = qword_1EB818BC8;
  if (!qword_1EB818BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818BC8);
  }
  return result;
}

unint64_t sub_1AFF8A50C()
{
  unint64_t result = qword_1EB819E40;
  if (!qword_1EB819E40)
  {
    sub_1AFD67340();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819E40);
  }
  return result;
}

unint64_t sub_1AFF8A574()
{
  unint64_t result = qword_1EB819688;
  if (!qword_1EB819688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819688);
  }
  return result;
}

unint64_t sub_1AFF8A5C8()
{
  unint64_t result = qword_1EB819370;
  if (!qword_1EB819370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819370);
  }
  return result;
}

unint64_t sub_1AFF8A61C()
{
  unint64_t result = qword_1EB818E90;
  if (!qword_1EB818E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818E90);
  }
  return result;
}

unint64_t sub_1AFF8A670()
{
  unint64_t result = qword_1EB819580;
  if (!qword_1EB819580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819580);
  }
  return result;
}

unint64_t sub_1AFF8A6C4()
{
  unint64_t result = qword_1EB819800;
  if (!qword_1EB819800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819800);
  }
  return result;
}

void sub_1AFF8A718()
{
  if (!qword_1EB819E28)
  {
    sub_1AFFC99F8();
    sub_1AFF8A7AC((unint64_t *)&qword_1EB818BB0, MEMORY[0x1E4F27A00]);
    unint64_t v0 = sub_1AFFCB388();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB819E28);
    }
  }
}

uint64_t sub_1AFF8A7AC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1AFF8A7F4()
{
  unint64_t result = qword_1EB819E30;
  if (!qword_1EB819E30)
  {
    sub_1AFF8A718();
    sub_1AFF8A7AC(&qword_1EB818BA8, MEMORY[0x1E4F27A00]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819E30);
  }
  return result;
}

uint64_t destroy for AppConfiguration(void *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[98] != 1)
  {
    if (a1[78] != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (a1[82] != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (a1[86] != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (a1[90] != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (a1[94] != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[503] != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AppConfiguration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  char v49 = (unsigned char *)(a1 + 4184);
  char v48 = (unsigned char *)(a2 + 4184);
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v5 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v5;
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(unsigned char *)(a1 + 89) = *(unsigned char *)(a2 + 89);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(_WORD *)(a1 + 104) = *(_WORD *)(a2 + 104);
  long long v6 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v6;
  long long v7 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v7;
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(unsigned char *)(a1 + 248) = *(unsigned char *)(a2 + 248);
  *(_WORD *)(a1 + 249) = *(_WORD *)(a2 + 249);
  long long v8 = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 272) = v8;
  long long v9 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = v9;
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  *(unsigned char *)(a1 + 344) = *(unsigned char *)(a2 + 344);
  long long v10 = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 368) = v10;
  *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
  uint64_t v11 = *(void *)(a2 + 408);
  *(void *)(a1 + 400) = *(void *)(a2 + 400);
  *(void *)(a1 + 408) = v11;
  uint64_t v12 = *(void *)(a2 + 424);
  *(void *)(a1 + 416) = *(void *)(a2 + 416);
  *(void *)(a1 + 424) = v12;
  *(_DWORD *)(a1 + 432) = *(_DWORD *)(a2 + 432);
  *(void *)(a1 + 440) = *(void *)(a2 + 440);
  *(unsigned char *)(a1 + 448) = *(unsigned char *)(a2 + 448);
  uint64_t v13 = *(void *)(a2 + 464);
  *(void *)(a1 + 456) = *(void *)(a2 + 456);
  *(void *)(a1 + 464) = v13;
  uint64_t v14 = *(void *)(a2 + 480);
  *(void *)(a1 + 472) = *(void *)(a2 + 472);
  *(void *)(a1 + 480) = v14;
  uint64_t v15 = *(void *)(a2 + 496);
  *(void *)(a1 + 488) = *(void *)(a2 + 488);
  *(void *)(a1 + 496) = v15;
  uint64_t v16 = *(void *)(a2 + 512);
  *(void *)(a1 + 504) = *(void *)(a2 + 504);
  *(void *)(a1 + 512) = v16;
  *(void *)(a1 + 520) = *(void *)(a2 + 520);
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  *(void *)(a1 + 536) = *(void *)(a2 + 536);
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  *(void *)(a1 + 552) = *(void *)(a2 + 552);
  *(_OWORD *)(a1 + 560) = *(_OWORD *)(a2 + 560);
  *(void *)(a1 + 576) = *(void *)(a2 + 576);
  *(void *)(a1 + 584) = *(void *)(a2 + 584);
  *(void *)(a1 + 592) = *(void *)(a2 + 592);
  *(void *)(a1 + 600) = *(void *)(a2 + 600);
  *(void *)(a1 + 608) = *(void *)(a2 + 608);
  *(void *)(a1 + 616) = *(void *)(a2 + 616);
  long long v17 = (_OWORD *)(a1 + 624);
  uint64_t v18 = a2 + 624;
  uint64_t v19 = *(void *)(a2 + 784);
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  if (v19 == 1)
  {
    long long v20 = *(_OWORD *)(v18 + 144);
    *(_OWORD *)(a1 + 752) = *(_OWORD *)(v18 + 128);
    *(_OWORD *)(a1 + 768) = v20;
    *(void *)(a1 + 784) = *(void *)(v18 + 160);
    long long v21 = *(_OWORD *)(v18 + 80);
    *(_OWORD *)(a1 + 688) = *(_OWORD *)(v18 + 64);
    *(_OWORD *)(a1 + 704) = v21;
    long long v22 = *(_OWORD *)(v18 + 112);
    *(_OWORD *)(a1 + 720) = *(_OWORD *)(v18 + 96);
    *(_OWORD *)(a1 + 736) = v22;
    long long v23 = *(_OWORD *)(v18 + 16);
    *long long v17 = *(_OWORD *)v18;
    *(_OWORD *)(a1 + 640) = v23;
    long long v24 = *(_OWORD *)(v18 + 48);
    *(_OWORD *)(a1 + 656) = *(_OWORD *)(v18 + 32);
    *(_OWORD *)(a1 + 672) = v24;
  }
  else
  {
    if (*(void *)v18 == 1)
    {
      long long v25 = *(_OWORD *)(v18 + 16);
      *long long v17 = *(_OWORD *)v18;
      *(_OWORD *)(a1 + 640) = v25;
    }
    else
    {
      *(void *)(a1 + 624) = *(void *)v18;
      *(void *)(a1 + 632) = *(void *)(a2 + 632);
      *(void *)(a1 + 640) = *(void *)(a2 + 640);
      *(void *)(a1 + 648) = *(void *)(a2 + 648);
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
    }
    uint64_t v26 = *(void *)(a2 + 656);
    if (v26 == 1)
    {
      long long v27 = *(_OWORD *)(a2 + 672);
      *(_OWORD *)(a1 + 656) = *(_OWORD *)(a2 + 656);
      *(_OWORD *)(a1 + 672) = v27;
    }
    else
    {
      *(void *)(a1 + 656) = v26;
      *(void *)(a1 + 664) = *(void *)(a2 + 664);
      *(void *)(a1 + 672) = *(void *)(a2 + 672);
      *(void *)(a1 + 680) = *(void *)(a2 + 680);
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
    }
    uint64_t v28 = *(void *)(a2 + 688);
    if (v28 == 1)
    {
      long long v29 = *(_OWORD *)(a2 + 704);
      *(_OWORD *)(a1 + 688) = *(_OWORD *)(a2 + 688);
      *(_OWORD *)(a1 + 704) = v29;
    }
    else
    {
      *(void *)(a1 + 688) = v28;
      *(void *)(a1 + 696) = *(void *)(a2 + 696);
      *(void *)(a1 + 704) = *(void *)(a2 + 704);
      *(void *)(a1 + 712) = *(void *)(a2 + 712);
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
    }
    uint64_t v30 = *(void *)(a2 + 720);
    if (v30 == 1)
    {
      long long v31 = *(_OWORD *)(a2 + 736);
      *(_OWORD *)(a1 + 720) = *(_OWORD *)(a2 + 720);
      *(_OWORD *)(a1 + 736) = v31;
    }
    else
    {
      *(void *)(a1 + 720) = v30;
      *(void *)(a1 + 728) = *(void *)(a2 + 728);
      *(void *)(a1 + 736) = *(void *)(a2 + 736);
      *(void *)(a1 + 744) = *(void *)(a2 + 744);
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
    }
    uint64_t v32 = *(void *)(a2 + 752);
    if (v32 == 1)
    {
      long long v33 = *(_OWORD *)(a2 + 768);
      *(_OWORD *)(a1 + 752) = *(_OWORD *)(a2 + 752);
      *(_OWORD *)(a1 + 768) = v33;
    }
    else
    {
      *(void *)(a1 + 752) = v32;
      *(void *)(a1 + 760) = *(void *)(a2 + 760);
      *(void *)(a1 + 768) = *(void *)(a2 + 768);
      *(void *)(a1 + 776) = *(void *)(a2 + 776);
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
    }
    *(void *)(a1 + 784) = v19;
    sub_1AFFC8E38();
  }
  *(void *)(a1 + 792) = *(void *)(a2 + 792);
  *(unsigned char *)(a1 + 800) = *(unsigned char *)(a2 + 800);
  *(void *)(a1 + 808) = *(void *)(a2 + 808);
  *(unsigned char *)(a1 + 816) = *(unsigned char *)(a2 + 816);
  *(void *)(a1 + 824) = *(void *)(a2 + 824);
  *(void *)(a1 + 832) = *(void *)(a2 + 832);
  *(void *)(a1 + 840) = *(void *)(a2 + 840);
  *(void *)(a1 + 848) = *(void *)(a2 + 848);
  *(void *)(a1 + 856) = *(void *)(a2 + 856);
  *(void *)(a1 + 864) = *(void *)(a2 + 864);
  *(void *)(a1 + 872) = *(void *)(a2 + 872);
  *(_OWORD *)(a1 + 880) = *(_OWORD *)(a2 + 880);
  *(_WORD *)(a1 + 896) = *(_WORD *)(a2 + 896);
  *(void *)(a1 + 904) = *(void *)(a2 + 904);
  *(void *)(a1 + 912) = *(void *)(a2 + 912);
  *(unsigned char *)(a1 + 920) = *(unsigned char *)(a2 + 920);
  *(void *)(a1 + 928) = *(void *)(a2 + 928);
  uint64_t v34 = *(void *)(a2 + 936);
  *(unsigned char *)(a1 + 944) = *(unsigned char *)(a2 + 944);
  *(void *)(a1 + 936) = v34;
  *(unsigned char *)(a1 + 960) = *(unsigned char *)(a2 + 960);
  *(void *)(a1 + 952) = *(void *)(a2 + 952);
  *(unsigned char *)(a1 + 976) = *(unsigned char *)(a2 + 976);
  *(void *)(a1 + 968) = *(void *)(a2 + 968);
  *(unsigned char *)(a1 + 992) = *(unsigned char *)(a2 + 992);
  *(void *)(a1 + 984) = *(void *)(a2 + 984);
  long long v35 = *(_OWORD *)(a2 + 1016);
  *(_OWORD *)(a1 + 1000) = *(_OWORD *)(a2 + 1000);
  *(_OWORD *)(a1 + 1016) = v35;
  long long v36 = *(_OWORD *)(a2 + 1032);
  long long v37 = *(_OWORD *)(a2 + 1048);
  long long v38 = *(_OWORD *)(a2 + 1080);
  *(_OWORD *)(a1 + 1064) = *(_OWORD *)(a2 + 1064);
  *(_OWORD *)(a1 + 1080) = v38;
  *(_OWORD *)(a1 + 1032) = v36;
  *(_OWORD *)(a1 + 1048) = v37;
  long long v39 = *(_OWORD *)(a2 + 1096);
  long long v40 = *(_OWORD *)(a2 + 1112);
  long long v41 = *(_OWORD *)(a2 + 1144);
  *(_OWORD *)(a1 + 1128) = *(_OWORD *)(a2 + 1128);
  *(_OWORD *)(a1 + 1144) = v41;
  *(_OWORD *)(a1 + 1096) = v39;
  *(_OWORD *)(a1 + 1112) = v40;
  *(void *)(a1 + 1160) = *(void *)(a2 + 1160);
  *(void *)(a1 + 1168) = *(void *)(a2 + 1168);
  *(unsigned char *)(a1 + 1176) = *(unsigned char *)(a2 + 1176);
  *(void *)(a1 + 1184) = *(void *)(a2 + 1184);
  *(void *)(a1 + 1192) = *(void *)(a2 + 1192);
  *(_OWORD *)(a1 + 1200) = *(_OWORD *)(a2 + 1200);
  *(void *)(a1 + 1216) = *(void *)(a2 + 1216);
  *(void *)(a1 + 1224) = *(void *)(a2 + 1224);
  *(void *)(a1 + 1232) = *(void *)(a2 + 1232);
  *(void *)(a1 + 1240) = *(void *)(a2 + 1240);
  *(void *)(a1 + 1248) = *(void *)(a2 + 1248);
  *(void *)(a1 + 1256) = *(void *)(a2 + 1256);
  *(void *)(a1 + 1264) = *(void *)(a2 + 1264);
  *(void *)(a1 + 1272) = *(void *)(a2 + 1272);
  *(_OWORD *)(a1 + 1280) = *(_OWORD *)(a2 + 1280);
  *(_OWORD *)(a1 + 1296) = *(_OWORD *)(a2 + 1296);
  *(void *)(a1 + 1312) = *(void *)(a2 + 1312);
  *(void *)(a1 + 1320) = *(void *)(a2 + 1320);
  *(void *)(a1 + 1328) = *(void *)(a2 + 1328);
  *(void *)(a1 + 1336) = *(void *)(a2 + 1336);
  *(_OWORD *)(a1 + 1344) = *(_OWORD *)(a2 + 1344);
  *(void *)(a1 + 1360) = *(void *)(a2 + 1360);
  *(void *)(a1 + 1368) = *(void *)(a2 + 1368);
  *(_OWORD *)(a1 + 1376) = *(_OWORD *)(a2 + 1376);
  *(void *)(a1 + 1392) = *(void *)(a2 + 1392);
  *(_WORD *)(a1 + 1400) = *(_WORD *)(a2 + 1400);
  *(_OWORD *)(a1 + 1408) = *(_OWORD *)(a2 + 1408);
  *(void *)(a1 + 1424) = *(void *)(a2 + 1424);
  *(void *)(a1 + 1432) = *(void *)(a2 + 1432);
  *(void *)(a1 + 1440) = *(void *)(a2 + 1440);
  *(void *)(a1 + 1448) = *(void *)(a2 + 1448);
  *(void *)(a1 + 1456) = *(void *)(a2 + 1456);
  *(void *)(a1 + 1464) = *(void *)(a2 + 1464);
  *(void *)(a1 + 1472) = *(void *)(a2 + 1472);
  *(void *)(a1 + 1480) = *(void *)(a2 + 1480);
  *(void *)(a1 + 1488) = *(void *)(a2 + 1488);
  *(void *)(a1 + 1496) = *(void *)(a2 + 1496);
  *(void *)(a1 + 1504) = *(void *)(a2 + 1504);
  *(void *)(a1 + 1512) = *(void *)(a2 + 1512);
  *(void *)(a1 + 1520) = *(void *)(a2 + 1520);
  *(void *)(a1 + 1528) = *(void *)(a2 + 1528);
  *(void *)(a1 + 1536) = *(void *)(a2 + 1536);
  *(void *)(a1 + 1544) = *(void *)(a2 + 1544);
  uint64_t v42 = *(void *)(a2 + 1552);
  long long v43 = *(_OWORD *)(a2 + 1560);
  *(void *)(a1 + 1576) = *(void *)(a2 + 1576);
  *(_OWORD *)(a1 + 1560) = v43;
  *(void *)(a1 + 1552) = v42;
  memcpy((void *)(a1 + 1584), (const void *)(a2 + 1584), 0x8DCuLL);
  *(void *)(a1 + 3856) = *(void *)(a2 + 3856);
  *(unsigned char *)(a1 + 3864) = *(unsigned char *)(a2 + 3864);
  *(void *)(a1 + 3872) = *(void *)(a2 + 3872);
  *(unsigned char *)(a1 + 3880) = *(unsigned char *)(a2 + 3880);
  *(void *)(a1 + 3888) = *(void *)(a2 + 3888);
  *(unsigned char *)(a1 + 3896) = *(unsigned char *)(a2 + 3896);
  *(unsigned char *)(a1 + 3912) = *(unsigned char *)(a2 + 3912);
  *(void *)(a1 + 3904) = *(void *)(a2 + 3904);
  *(void *)(a1 + 3920) = *(void *)(a2 + 3920);
  *(unsigned char *)(a1 + 3928) = *(unsigned char *)(a2 + 3928);
  *(void *)(a1 + 3936) = *(void *)(a2 + 3936);
  *(unsigned char *)(a1 + 3944) = *(unsigned char *)(a2 + 3944);
  *(_OWORD *)(a1 + 3952) = *(_OWORD *)(a2 + 3952);
  *(void *)(a1 + 3968) = *(void *)(a2 + 3968);
  *(_WORD *)(a1 + 3976) = *(_WORD *)(a2 + 3976);
  *(void *)(a1 + 3984) = *(void *)(a2 + 3984);
  uint64_t v44 = *(void *)(a2 + 3992);
  *(unsigned char *)(a1 + 4000) = *(unsigned char *)(a2 + 4000);
  *(void *)(a1 + 3992) = v44;
  *(void *)(a1 + 4008) = *(void *)(a2 + 4008);
  uint64_t v45 = *(void *)(a2 + 4024);
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  if (v45 == 1)
  {
    long long v46 = *(_OWORD *)(a2 + 4032);
    *(_OWORD *)(a1 + 4016) = *(_OWORD *)(a2 + 4016);
    *(_OWORD *)(a1 + 4032) = v46;
  }
  else
  {
    *(void *)(a1 + 4016) = *(void *)(a2 + 4016);
    *(void *)(a1 + 4024) = v45;
    *(void *)(a1 + 4032) = *(void *)(a2 + 4032);
    *(void *)(a1 + 4040) = *(void *)(a2 + 4040);
    sub_1AFFC8E38();
    sub_1AFFC8E38();
  }
  *(void *)(a1 + 4048) = *(void *)(a2 + 4048);
  *(unsigned char *)(a1 + 4056) = *(unsigned char *)(a2 + 4056);
  *(_OWORD *)(a1 + 4064) = *(_OWORD *)(a2 + 4064);
  *(_OWORD *)(a1 + 4080) = *(_OWORD *)(a2 + 4080);
  *(unsigned char *)(a1 + 4096) = *(unsigned char *)(a2 + 4096);
  *(void *)(a1 + 4104) = *(void *)(a2 + 4104);
  *(void *)(a1 + 4112) = *(void *)(a2 + 4112);
  *(void *)(a1 + 4120) = *(void *)(a2 + 4120);
  *(void *)(a1 + 4128) = *(void *)(a2 + 4128);
  *(void *)(a1 + 4136) = *(void *)(a2 + 4136);
  *(unsigned char *)(a1 + 4144) = *(unsigned char *)(a2 + 4144);
  *(void *)(a1 + 4152) = *(void *)(a2 + 4152);
  *(unsigned char *)(a1 + 4160) = *(unsigned char *)(a2 + 4160);
  *(void *)(a1 + 4168) = *(void *)(a2 + 4168);
  *(void *)(a1 + 4176) = *(void *)(a2 + 4176);
  unsigned char *v49 = *v48;
  *(void *)(a1 + 4192) = *(void *)(a2 + 4192);
  *(void *)(a1 + 4200) = *(void *)(a2 + 4200);
  *(_OWORD *)(a1 + 4208) = *(_OWORD *)(a2 + 4208);
  *(void *)(a1 + 4224) = *(void *)(a2 + 4224);
  *(void *)(a1 + 4232) = *(void *)(a2 + 4232);
  v49[56] = v48[56];
  *(void *)(a1 + 4248) = *(void *)(a2 + 4248);
  *(void *)(a1 + 4256) = *(void *)(a2 + 4256);
  *(void *)(a1 + 4264) = *(void *)(a2 + 4264);
  *(void *)(a1 + 4272) = *(void *)(a2 + 4272);
  v49[96] = v48[96];
  v49[97] = v48[97];
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  return a1;
}

uint64_t assignWithCopy for AppConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (unsigned char *)(a1 + 4184);
  uint64_t v5 = (unsigned char *)(a2 + 1560);
  long long v6 = (unsigned char *)(a2 + 344);
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(unsigned char *)(a1 + 89) = *(unsigned char *)(a2 + 89);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(unsigned char *)(a1 + 105) = *(unsigned char *)(a2 + 105);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(unsigned char *)(a1 + 248) = *(unsigned char *)(a2 + 248);
  *(unsigned char *)(a1 + 249) = *(unsigned char *)(a2 + 249);
  *(unsigned char *)(a1 + 250) = *(unsigned char *)(a2 + 250);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  *(unsigned char *)(a1 + 344) = *(unsigned char *)(a2 + 344);
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  *(void *)(a1 + 360) = *(void *)(a2 + 360);
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  *(void *)(a1 + 376) = *(void *)(a2 + 376);
  *(void *)(a1 + 384) = *(void *)(a2 + 384);
  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  *(void *)(a1 + 400) = *(void *)(a2 + 400);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 408) = *(void *)(a2 + 408);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 416) = *(void *)(a2 + 416);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 432) = v6[88];
  *(unsigned char *)(a1 + 433) = v6[89];
  *(unsigned char *)(a1 + 434) = v6[90];
  *(unsigned char *)(a1 + 435) = v6[91];
  *(void *)(a1 + 440) = *(void *)(a2 + 440);
  *(unsigned char *)(a1 + 448) = v6[104];
  *(void *)(a1 + 456) = *(void *)(a2 + 456);
  *(void *)(a1 + 464) = *(void *)(a2 + 464);
  *(void *)(a1 + 472) = *(void *)(a2 + 472);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 480) = *(void *)(a2 + 480);
  *(void *)(a1 + 488) = *(void *)(a2 + 488);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 496) = *(void *)(a2 + 496);
  *(void *)(a1 + 504) = *(void *)(a2 + 504);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 512) = *(void *)(a2 + 512);
  *(void *)(a1 + 520) = *(void *)(a2 + 520);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  *(void *)(a1 + 536) = *(void *)(a2 + 536);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  *(void *)(a1 + 552) = *(void *)(a2 + 552);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 560) = *(void *)(a2 + 560);
  *(void *)(a1 + 568) = *(void *)(a2 + 568);
  *(void *)(a1 + 576) = *(void *)(a2 + 576);
  *(void *)(a1 + 584) = *(void *)(a2 + 584);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 592) = *(void *)(a2 + 592);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 600) = *(void *)(a2 + 600);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 608) = *(void *)(a2 + 608);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 616) = *(void *)(a2 + 616);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  long long v7 = (long long *)(a1 + 624);
  long long v8 = (long long *)(a2 + 624);
  uint64_t v9 = *(void *)(a2 + 784);
  if (*(void *)(a1 + 784) == 1)
  {
    if (v9 == 1)
    {
      long long v10 = *v8;
      long long v11 = *(_OWORD *)(a2 + 656);
      *(_OWORD *)(a1 + 640) = *(_OWORD *)(a2 + 640);
      *(_OWORD *)(a1 + 656) = v11;
      long long *v7 = v10;
      long long v12 = *(_OWORD *)(a2 + 672);
      long long v13 = *(_OWORD *)(a2 + 688);
      long long v14 = *(_OWORD *)(a2 + 720);
      *(_OWORD *)(a1 + 704) = *(_OWORD *)(a2 + 704);
      *(_OWORD *)(a1 + 720) = v14;
      *(_OWORD *)(a1 + 672) = v12;
      *(_OWORD *)(a1 + 688) = v13;
      long long v15 = *(_OWORD *)(a2 + 736);
      long long v16 = *(_OWORD *)(a2 + 752);
      long long v17 = *(_OWORD *)(a2 + 768);
      *(void *)(a1 + 784) = *(void *)(a2 + 784);
      *(_OWORD *)(a1 + 752) = v16;
      *(_OWORD *)(a1 + 768) = v17;
      *(_OWORD *)(a1 + 736) = v15;
    }
    else
    {
      if (*(void *)v8 == 1)
      {
        long long v26 = *(_OWORD *)(a2 + 640);
        long long *v7 = *v8;
        *(_OWORD *)(a1 + 640) = v26;
      }
      else
      {
        *(void *)(a1 + 624) = *(void *)v8;
        *(void *)(a1 + 632) = *(void *)(a2 + 632);
        *(void *)(a1 + 640) = *(void *)(a2 + 640);
        *(void *)(a1 + 648) = *(void *)(a2 + 648);
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
      }
      uint64_t v29 = *(void *)(a2 + 656);
      if (v29 == 1)
      {
        long long v30 = *(_OWORD *)(a2 + 672);
        *(_OWORD *)(a1 + 656) = *(_OWORD *)(a2 + 656);
        *(_OWORD *)(a1 + 672) = v30;
      }
      else
      {
        *(void *)(a1 + 656) = v29;
        *(void *)(a1 + 664) = *(void *)(a2 + 664);
        *(void *)(a1 + 672) = *(void *)(a2 + 672);
        *(void *)(a1 + 680) = *(void *)(a2 + 680);
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
      }
      uint64_t v32 = *(void *)(a2 + 688);
      if (v32 == 1)
      {
        long long v33 = *(_OWORD *)(a2 + 704);
        *(_OWORD *)(a1 + 688) = *(_OWORD *)(a2 + 688);
        *(_OWORD *)(a1 + 704) = v33;
      }
      else
      {
        *(void *)(a1 + 688) = v32;
        *(void *)(a1 + 696) = *(void *)(a2 + 696);
        *(void *)(a1 + 704) = *(void *)(a2 + 704);
        *(void *)(a1 + 712) = *(void *)(a2 + 712);
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
      }
      uint64_t v34 = *(void *)(a2 + 720);
      if (v34 == 1)
      {
        long long v35 = *(_OWORD *)(a2 + 736);
        *(_OWORD *)(a1 + 720) = *(_OWORD *)(a2 + 720);
        *(_OWORD *)(a1 + 736) = v35;
      }
      else
      {
        *(void *)(a1 + 720) = v34;
        *(void *)(a1 + 728) = *(void *)(a2 + 728);
        *(void *)(a1 + 736) = *(void *)(a2 + 736);
        *(void *)(a1 + 744) = *(void *)(a2 + 744);
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
      }
      uint64_t v36 = *(void *)(a2 + 752);
      if (v36 == 1)
      {
        long long v37 = *(_OWORD *)(a2 + 768);
        *(_OWORD *)(a1 + 752) = *(_OWORD *)(a2 + 752);
        *(_OWORD *)(a1 + 768) = v37;
      }
      else
      {
        *(void *)(a1 + 752) = v36;
        *(void *)(a1 + 760) = *(void *)(a2 + 760);
        *(void *)(a1 + 768) = *(void *)(a2 + 768);
        *(void *)(a1 + 776) = *(void *)(a2 + 776);
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
      }
      *(void *)(a1 + 784) = *(void *)(a2 + 784);
      sub_1AFFC8E38();
    }
  }
  else if (v9 == 1)
  {
    sub_1AFDCA700(a1 + 624);
    long long v19 = *(_OWORD *)(a2 + 640);
    long long v18 = *(_OWORD *)(a2 + 656);
    long long *v7 = *v8;
    *(_OWORD *)(a1 + 640) = v19;
    *(_OWORD *)(a1 + 656) = v18;
    long long v20 = *(_OWORD *)(a2 + 720);
    long long v22 = *(_OWORD *)(a2 + 672);
    long long v21 = *(_OWORD *)(a2 + 688);
    *(_OWORD *)(a1 + 704) = *(_OWORD *)(a2 + 704);
    *(_OWORD *)(a1 + 720) = v20;
    *(_OWORD *)(a1 + 672) = v22;
    *(_OWORD *)(a1 + 688) = v21;
    long long v24 = *(_OWORD *)(a2 + 752);
    long long v23 = *(_OWORD *)(a2 + 768);
    long long v25 = *(_OWORD *)(a2 + 736);
    *(void *)(a1 + 784) = *(void *)(a2 + 784);
    *(_OWORD *)(a1 + 752) = v24;
    *(_OWORD *)(a1 + 768) = v23;
    *(_OWORD *)(a1 + 736) = v25;
  }
  else
  {
    uint64_t v27 = *(void *)v8;
    if (*(void *)v7 == 1)
    {
      if (v27 == 1)
      {
        long long v28 = *(_OWORD *)(a2 + 640);
        long long *v7 = *v8;
        *(_OWORD *)(a1 + 640) = v28;
      }
      else
      {
        *(void *)(a1 + 624) = v27;
        *(void *)(a1 + 632) = *(void *)(a2 + 632);
        *(void *)(a1 + 640) = *(void *)(a2 + 640);
        *(void *)(a1 + 648) = *(void *)(a2 + 648);
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
      }
    }
    else if (v27 == 1)
    {
      sub_1AFDCA6AC(a1 + 624);
      long long v31 = *(_OWORD *)(a2 + 640);
      long long *v7 = *v8;
      *(_OWORD *)(a1 + 640) = v31;
    }
    else
    {
      *(void *)(a1 + 624) = v27;
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 632) = *(void *)(a2 + 632);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 640) = *(void *)(a2 + 640);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 648) = *(void *)(a2 + 648);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
    }
    long long v38 = (_OWORD *)(a1 + 656);
    long long v39 = (_OWORD *)(a2 + 656);
    uint64_t v40 = *(void *)(a2 + 656);
    if (*(void *)(a1 + 656) == 1)
    {
      if (v40 == 1)
      {
        long long v41 = *(_OWORD *)(a2 + 672);
        *long long v38 = *v39;
        *(_OWORD *)(a1 + 672) = v41;
      }
      else
      {
        *(void *)(a1 + 656) = v40;
        *(void *)(a1 + 664) = *(void *)(a2 + 664);
        *(void *)(a1 + 672) = *(void *)(a2 + 672);
        *(void *)(a1 + 680) = *(void *)(a2 + 680);
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
      }
    }
    else if (v40 == 1)
    {
      sub_1AFDCA6AC(a1 + 656);
      long long v42 = *(_OWORD *)(a2 + 672);
      *long long v38 = *v39;
      *(_OWORD *)(a1 + 672) = v42;
    }
    else
    {
      *(void *)(a1 + 656) = v40;
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 664) = *(void *)(a2 + 664);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 672) = *(void *)(a2 + 672);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 680) = *(void *)(a2 + 680);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
    }
    long long v43 = (_OWORD *)(a1 + 688);
    uint64_t v44 = (_OWORD *)(a2 + 688);
    uint64_t v45 = *(void *)(a2 + 688);
    if (*(void *)(a1 + 688) == 1)
    {
      if (v45 == 1)
      {
        long long v46 = *(_OWORD *)(a2 + 704);
        *long long v43 = *v44;
        *(_OWORD *)(a1 + 704) = v46;
      }
      else
      {
        *(void *)(a1 + 688) = v45;
        *(void *)(a1 + 696) = *(void *)(a2 + 696);
        *(void *)(a1 + 704) = *(void *)(a2 + 704);
        *(void *)(a1 + 712) = *(void *)(a2 + 712);
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
      }
    }
    else if (v45 == 1)
    {
      sub_1AFDCA6AC(a1 + 688);
      long long v47 = *(_OWORD *)(a2 + 704);
      *long long v43 = *v44;
      *(_OWORD *)(a1 + 704) = v47;
    }
    else
    {
      *(void *)(a1 + 688) = v45;
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 696) = *(void *)(a2 + 696);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 704) = *(void *)(a2 + 704);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 712) = *(void *)(a2 + 712);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
    }
    char v48 = (_OWORD *)(a1 + 720);
    char v49 = (_OWORD *)(a2 + 720);
    uint64_t v50 = *(void *)(a2 + 720);
    if (*(void *)(a1 + 720) == 1)
    {
      if (v50 == 1)
      {
        long long v51 = *(_OWORD *)(a2 + 736);
        *char v48 = *v49;
        *(_OWORD *)(a1 + 736) = v51;
      }
      else
      {
        *(void *)(a1 + 720) = v50;
        *(void *)(a1 + 728) = *(void *)(a2 + 728);
        *(void *)(a1 + 736) = *(void *)(a2 + 736);
        *(void *)(a1 + 744) = *(void *)(a2 + 744);
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
      }
    }
    else if (v50 == 1)
    {
      sub_1AFDCA6AC(a1 + 720);
      long long v52 = *(_OWORD *)(a2 + 736);
      *char v48 = *v49;
      *(_OWORD *)(a1 + 736) = v52;
    }
    else
    {
      *(void *)(a1 + 720) = v50;
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 728) = *(void *)(a2 + 728);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 736) = *(void *)(a2 + 736);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 744) = *(void *)(a2 + 744);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
    }
    char v53 = (_OWORD *)(a1 + 752);
    char v54 = (_OWORD *)(a2 + 752);
    uint64_t v55 = *(void *)(a2 + 752);
    if (*(void *)(a1 + 752) == 1)
    {
      if (v55 == 1)
      {
        long long v56 = *(_OWORD *)(a2 + 768);
        *char v53 = *v54;
        *(_OWORD *)(a1 + 768) = v56;
      }
      else
      {
        *(void *)(a1 + 752) = v55;
        *(void *)(a1 + 760) = *(void *)(a2 + 760);
        *(void *)(a1 + 768) = *(void *)(a2 + 768);
        *(void *)(a1 + 776) = *(void *)(a2 + 776);
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
      }
    }
    else if (v55 == 1)
    {
      sub_1AFDCA6AC(a1 + 752);
      long long v57 = *(_OWORD *)(a2 + 768);
      *char v53 = *v54;
      *(_OWORD *)(a1 + 768) = v57;
    }
    else
    {
      *(void *)(a1 + 752) = v55;
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 760) = *(void *)(a2 + 760);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 768) = *(void *)(a2 + 768);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 776) = *(void *)(a2 + 776);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
    }
    *(void *)(a1 + 784) = *(void *)(a2 + 784);
    sub_1AFFC8E38();
    swift_bridgeObjectRelease();
  }
  uint64_t v58 = *(void *)(a2 + 792);
  *(unsigned char *)(a1 + 800) = *(unsigned char *)(a2 + 800);
  *(void *)(a1 + 792) = v58;
  uint64_t v59 = *(void *)(a2 + 808);
  *(unsigned char *)(a1 + 816) = *(unsigned char *)(a2 + 816);
  *(void *)(a1 + 808) = v59;
  *(void *)(a1 + 824) = *(void *)(a2 + 824);
  *(void *)(a1 + 832) = *(void *)(a2 + 832);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 840) = *(void *)(a2 + 840);
  *(void *)(a1 + 848) = *(void *)(a2 + 848);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 856) = *(void *)(a2 + 856);
  *(void *)(a1 + 864) = *(void *)(a2 + 864);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 872) = *(void *)(a2 + 872);
  *(void *)(a1 + 880) = *(void *)(a2 + 880);
  *(void *)(a1 + 888) = *(void *)(a2 + 888);
  *(unsigned char *)(a1 + 896) = v6[552];
  *(unsigned char *)(a1 + 897) = v6[553];
  *(void *)(a1 + 904) = *(void *)(a2 + 904);
  *(void *)(a1 + 912) = *(void *)(a2 + 912);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 920) = v6[576];
  *(void *)(a1 + 928) = *(void *)(a2 + 928);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  uint64_t v60 = *(void *)(a2 + 936);
  *(unsigned char *)(a1 + 944) = *(unsigned char *)(a2 + 944);
  *(void *)(a1 + 936) = v60;
  uint64_t v61 = *(void *)(a2 + 952);
  *(unsigned char *)(a1 + 960) = *(unsigned char *)(a2 + 960);
  *(void *)(a1 + 952) = v61;
  uint64_t v62 = *(void *)(a2 + 968);
  *(unsigned char *)(a1 + 976) = *(unsigned char *)(a2 + 976);
  *(void *)(a1 + 968) = v62;
  uint64_t v63 = *(void *)(a2 + 984);
  *(unsigned char *)(a1 + 992) = *(unsigned char *)(a2 + 992);
  *(void *)(a1 + 984) = v63;
  *(void *)(a1 + 1000) = *(void *)(a2 + 1000);
  *(void *)(a1 + 1008) = *(void *)(a2 + 1008);
  *(void *)(a1 + 1016) = *(void *)(a2 + 1016);
  *(void *)(a1 + 1024) = *(void *)(a2 + 1024);
  *(void *)(a1 + 1032) = *(void *)(a2 + 1032);
  *(void *)(a1 + 1040) = *(void *)(a2 + 1040);
  *(void *)(a1 + 1048) = *(void *)(a2 + 1048);
  *(void *)(a1 + 1056) = *(void *)(a2 + 1056);
  *(void *)(a1 + 1064) = *(void *)(a2 + 1064);
  *(void *)(a1 + 1072) = *(void *)(a2 + 1072);
  *(void *)(a1 + 1080) = *(void *)(a2 + 1080);
  *(void *)(a1 + 1088) = *(void *)(a2 + 1088);
  *(void *)(a1 + 1096) = *(void *)(a2 + 1096);
  *(void *)(a1 + 1104) = *(void *)(a2 + 1104);
  *(void *)(a1 + 1112) = *(void *)(a2 + 1112);
  *(void *)(a1 + 1120) = *(void *)(a2 + 1120);
  *(void *)(a1 + 1128) = *(void *)(a2 + 1128);
  *(void *)(a1 + 1136) = *(void *)(a2 + 1136);
  *(void *)(a1 + 1144) = *(void *)(a2 + 1144);
  *(void *)(a1 + 1152) = *(void *)(a2 + 1152);
  *(void *)(a1 + 1160) = *(void *)(a2 + 1160);
  *(void *)(a1 + 1168) = *(void *)(a2 + 1168);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 1176) = v6[832];
  *(void *)(a1 + 1184) = *(void *)(a2 + 1184);
  *(void *)(a1 + 1192) = *(void *)(a2 + 1192);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1200) = *(void *)(a2 + 1200);
  *(void *)(a1 + 1208) = *(void *)(a2 + 1208);
  *(void *)(a1 + 1216) = *(void *)(a2 + 1216);
  *(void *)(a1 + 1224) = *(void *)(a2 + 1224);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1232) = *(void *)(a2 + 1232);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1240) = *(void *)(a2 + 1240);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1248) = *(void *)(a2 + 1248);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1256) = *(void *)(a2 + 1256);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1264) = *(void *)(a2 + 1264);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1272) = *(void *)(a2 + 1272);
  *(void *)(a1 + 1280) = *(void *)(a2 + 1280);
  *(void *)(a1 + 1288) = *(void *)(a2 + 1288);
  *(void *)(a1 + 1296) = *(void *)(a2 + 1296);
  *(void *)(a1 + 1304) = *(void *)(a2 + 1304);
  *(void *)(a1 + 1312) = *(void *)(a2 + 1312);
  *(void *)(a1 + 1320) = *(void *)(a2 + 1320);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1328) = *(void *)(a2 + 1328);
  *(void *)(a1 + 1336) = *(void *)(a2 + 1336);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1344) = *(void *)(a2 + 1344);
  *(void *)(a1 + 1352) = *(void *)(a2 + 1352);
  *(void *)(a1 + 1360) = *(void *)(a2 + 1360);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1368) = *(void *)(a2 + 1368);
  *(void *)(a1 + 1376) = *(void *)(a2 + 1376);
  *(void *)(a1 + 1384) = *(void *)(a2 + 1384);
  *(void *)(a1 + 1392) = *(void *)(a2 + 1392);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 1400) = v6[1056];
  *(unsigned char *)(a1 + 1401) = v6[1057];
  *(void *)(a1 + 1408) = *(void *)(a2 + 1408);
  *(void *)(a1 + 1416) = *(void *)(a2 + 1416);
  *(void *)(a1 + 1424) = *(void *)(a2 + 1424);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1432) = *(void *)(a2 + 1432);
  *(void *)(a1 + 1440) = *(void *)(a2 + 1440);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1448) = *(void *)(a2 + 1448);
  *(void *)(a1 + 1456) = *(void *)(a2 + 1456);
  *(void *)(a1 + 1464) = *(void *)(a2 + 1464);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1472) = *(void *)(a2 + 1472);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1480) = *(void *)(a2 + 1480);
  *(void *)(a1 + 1488) = *(void *)(a2 + 1488);
  *(void *)(a1 + 1496) = *(void *)(a2 + 1496);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1504) = *(void *)(a2 + 1504);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1512) = *(void *)(a2 + 1512);
  *(void *)(a1 + 1520) = *(void *)(a2 + 1520);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1528) = *(void *)(a2 + 1528);
  *(void *)(a1 + 1536) = *(void *)(a2 + 1536);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1544) = *(void *)(a2 + 1544);
  *(void *)(a1 + 1552) = *(void *)(a2 + 1552);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 1560) = *v5;
  *(void *)(a1 + 1568) = *(void *)(a2 + 1568);
  *(void *)(a1 + 1576) = *(void *)(a2 + 1576);
  memcpy((void *)(a1 + 1584), (const void *)(a2 + 1584), 0x46BuLL);
  memcpy((void *)(a1 + 2720), (const void *)(a2 + 2720), 0x46BuLL);
  *(unsigned char *)(a1 + 3851) = v5[2291];
  uint64_t v64 = *(void *)(a2 + 3856);
  *(unsigned char *)(a1 + 3864) = *(unsigned char *)(a2 + 3864);
  *(void *)(a1 + 3856) = v64;
  LOBYTE(v64) = *(unsigned char *)(a2 + 3880);
  *(void *)(a1 + 3872) = *(void *)(a2 + 3872);
  *(unsigned char *)(a1 + 3880) = v64;
  LOBYTE(v64) = *(unsigned char *)(a2 + 3896);
  *(void *)(a1 + 3888) = *(void *)(a2 + 3888);
  *(unsigned char *)(a1 + 3896) = v64;
  LOBYTE(v64) = *(unsigned char *)(a2 + 3912);
  *(void *)(a1 + 3904) = *(void *)(a2 + 3904);
  *(unsigned char *)(a1 + 3912) = v64;
  LOBYTE(v64) = *(unsigned char *)(a2 + 3928);
  *(void *)(a1 + 3920) = *(void *)(a2 + 3920);
  *(unsigned char *)(a1 + 3928) = v64;
  LOBYTE(v64) = *(unsigned char *)(a2 + 3944);
  *(void *)(a1 + 3936) = *(void *)(a2 + 3936);
  *(unsigned char *)(a1 + 3944) = v64;
  *(void *)(a1 + 3952) = *(void *)(a2 + 3952);
  *(void *)(a1 + 3960) = *(void *)(a2 + 3960);
  *(void *)(a1 + 3968) = *(void *)(a2 + 3968);
  *(unsigned char *)(a1 + 3976) = v5[2416];
  *(unsigned char *)(a1 + 3977) = v5[2417];
  *(void *)(a1 + 3984) = *(void *)(a2 + 3984);
  uint64_t v65 = *(void *)(a2 + 3992);
  *(unsigned char *)(a1 + 4000) = *(unsigned char *)(a2 + 4000);
  *(void *)(a1 + 3992) = v65;
  *(void *)(a1 + 4008) = *(void *)(a2 + 4008);
  char v66 = (_OWORD *)(a1 + 4016);
  char v67 = (_OWORD *)(a2 + 4016);
  uint64_t v68 = *(void *)(a2 + 4024);
  if (*(void *)(a1 + 4024) == 1)
  {
    if (v68 == 1)
    {
      long long v69 = *(_OWORD *)(a2 + 4032);
      *char v66 = *v67;
      *(_OWORD *)(a1 + 4032) = v69;
    }
    else
    {
      *(void *)(a1 + 4016) = *(void *)(a2 + 4016);
      *(void *)(a1 + 4024) = *(void *)(a2 + 4024);
      *(void *)(a1 + 4032) = *(void *)(a2 + 4032);
      *(void *)(a1 + 4040) = *(void *)(a2 + 4040);
      sub_1AFFC8E38();
      sub_1AFFC8E38();
    }
  }
  else if (v68 == 1)
  {
    sub_1AFF8C86C(a1 + 4016);
    long long v70 = *(_OWORD *)(a2 + 4032);
    *char v66 = *v67;
    *(_OWORD *)(a1 + 4032) = v70;
  }
  else
  {
    *(void *)(a1 + 4016) = *(void *)(a2 + 4016);
    *(void *)(a1 + 4024) = *(void *)(a2 + 4024);
    sub_1AFFC8E38();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 4032) = *(void *)(a2 + 4032);
    *(void *)(a1 + 4040) = *(void *)(a2 + 4040);
    sub_1AFFC8E38();
    swift_bridgeObjectRelease();
  }
  uint64_t v71 = *(void *)(a2 + 4048);
  *(unsigned char *)(a1 + 4056) = *(unsigned char *)(a2 + 4056);
  *(void *)(a1 + 4048) = v71;
  long long v72 = *(_OWORD *)(a2 + 4064);
  long long v73 = *(_OWORD *)(a2 + 4080);
  *(unsigned char *)(a1 + 4096) = *(unsigned char *)(a2 + 4096);
  *(_OWORD *)(a1 + 4080) = v73;
  *(_OWORD *)(a1 + 4064) = v72;
  *(void *)(a1 + 4104) = *(void *)(a2 + 4104);
  *(void *)(a1 + 4112) = *(void *)(a2 + 4112);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 4120) = *(void *)(a2 + 4120);
  *(void *)(a1 + 4128) = *(void *)(a2 + 4128);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  uint64_t v74 = *(void *)(a2 + 4136);
  *(unsigned char *)(a1 + 4144) = *(unsigned char *)(a2 + 4144);
  *(void *)(a1 + 4136) = v74;
  uint64_t v75 = *(void *)(a2 + 4152);
  *(unsigned char *)(a1 + 4160) = *(unsigned char *)(a2 + 4160);
  *(void *)(a1 + 4152) = v75;
  *(void *)(a1 + 4168) = *(void *)(a2 + 4168);
  *(void *)(a1 + 4176) = *(void *)(a2 + 4176);
  *uint64_t v4 = v5[2624];
  *(void *)(a1 + 4192) = *(void *)(a2 + 4192);
  *(void *)(a1 + 4200) = *(void *)(a2 + 4200);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 4208) = *(void *)(a2 + 4208);
  *(void *)(a1 + 4216) = *(void *)(a2 + 4216);
  *(void *)(a1 + 4224) = *(void *)(a2 + 4224);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 4232) = *(void *)(a2 + 4232);
  v4[56] = v5[2680];
  *(void *)(a1 + 4248) = *(void *)(a2 + 4248);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 4256) = *(void *)(a2 + 4256);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 4264) = *(void *)(a2 + 4264);
  *(void *)(a1 + 4272) = *(void *)(a2 + 4272);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  v4[96] = v5[2720];
  v4[97] = v5[2721];
  return a1;
}

uint64_t sub_1AFF8C86C(uint64_t a1)
{
  return a1;
}

void *__swift_memcpy4282_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x10BAuLL);
}

uint64_t assignWithTake for AppConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (unsigned char *)(a1 + 4184);
  uint64_t v5 = (unsigned char *)(a2 + 1560);
  long long v6 = (unsigned char *)(a2 + 344);
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(unsigned char *)(a1 + 89) = *(unsigned char *)(a2 + 89);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(unsigned char *)(a1 + 105) = *(unsigned char *)(a2 + 105);
  long long v8 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  uint64_t v9 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v9;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(unsigned char *)(a1 + 248) = *(unsigned char *)(a2 + 248);
  *(unsigned char *)(a1 + 249) = *(unsigned char *)(a2 + 249);
  *(unsigned char *)(a1 + 250) = *(unsigned char *)(a2 + 250);
  long long v10 = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 272) = v10;
  long long v11 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = v11;
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  *(unsigned char *)(a1 + 344) = *(unsigned char *)(a2 + 344);
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  *(void *)(a1 + 360) = *(void *)(a2 + 360);
  long long v12 = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 384) = v12;
  *(void *)(a1 + 400) = *(void *)(a2 + 400);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 408) = *(void *)(a2 + 408);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 416) = *(void *)(a2 + 416);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 432) = v6[88];
  *(unsigned char *)(a1 + 433) = v6[89];
  *(unsigned char *)(a1 + 434) = v6[90];
  *(unsigned char *)(a1 + 435) = v6[91];
  *(void *)(a1 + 440) = *(void *)(a2 + 440);
  *(unsigned char *)(a1 + 448) = v6[104];
  *(_OWORD *)(a1 + 456) = *(_OWORD *)(a2 + 456);
  *(void *)(a1 + 472) = *(void *)(a2 + 472);
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 488);
  *(void *)(a1 + 480) = *(void *)(a2 + 480);
  *(void *)(a1 + 488) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 504);
  *(void *)(a1 + 496) = *(void *)(a2 + 496);
  *(void *)(a1 + 504) = v14;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 512) = *(void *)(a2 + 512);
  *(void *)(a1 + 520) = *(void *)(a2 + 520);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  *(void *)(a1 + 536) = *(void *)(a2 + 536);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  *(void *)(a1 + 552) = *(void *)(a2 + 552);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 560) = *(_OWORD *)(a2 + 560);
  *(void *)(a1 + 576) = *(void *)(a2 + 576);
  *(void *)(a1 + 584) = *(void *)(a2 + 584);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 592) = *(void *)(a2 + 592);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 600) = *(void *)(a2 + 600);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 608) = *(void *)(a2 + 608);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 616) = *(void *)(a2 + 616);
  swift_bridgeObjectRelease();
  long long v15 = (_OWORD *)(a1 + 624);
  long long v16 = (_OWORD *)(a2 + 624);
  if (*(void *)(a1 + 784) == 1) {
    goto LABEL_4;
  }
  if (*(void *)(a2 + 784) == 1)
  {
    sub_1AFDCA700(a1 + 624);
LABEL_4:
    long long v17 = *(_OWORD *)(a2 + 768);
    *(_OWORD *)(a1 + 752) = *(_OWORD *)(a2 + 752);
    *(_OWORD *)(a1 + 768) = v17;
    *(void *)(a1 + 784) = *(void *)(a2 + 784);
    long long v18 = *(_OWORD *)(a2 + 704);
    *(_OWORD *)(a1 + 688) = *(_OWORD *)(a2 + 688);
    *(_OWORD *)(a1 + 704) = v18;
    long long v19 = *(_OWORD *)(a2 + 736);
    *(_OWORD *)(a1 + 720) = *(_OWORD *)(a2 + 720);
    *(_OWORD *)(a1 + 736) = v19;
    long long v20 = *(_OWORD *)(a2 + 640);
    *long long v15 = *v16;
    *(_OWORD *)(a1 + 640) = v20;
    long long v21 = *(_OWORD *)(a2 + 672);
    *(_OWORD *)(a1 + 656) = *(_OWORD *)(a2 + 656);
    *(_OWORD *)(a1 + 672) = v21;
    goto LABEL_31;
  }
  if (*(void *)v15 == 1) {
    goto LABEL_8;
  }
  if (*(void *)v16 == 1)
  {
    sub_1AFDCA6AC(a1 + 624);
LABEL_8:
    long long v22 = *(_OWORD *)(a2 + 640);
    *long long v15 = *v16;
    *(_OWORD *)(a1 + 640) = v22;
    goto LABEL_10;
  }
  *(void *)(a1 + 624) = *(void *)v16;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 632) = *(void *)(a2 + 632);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 640) = *(void *)(a2 + 640);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 648) = *(void *)(a2 + 648);
  swift_bridgeObjectRelease();
LABEL_10:
  if (*(void *)(a1 + 656) == 1)
  {
LABEL_13:
    long long v24 = *(_OWORD *)(a2 + 672);
    *(_OWORD *)(a1 + 656) = *(_OWORD *)(a2 + 656);
    *(_OWORD *)(a1 + 672) = v24;
    goto LABEL_15;
  }
  uint64_t v23 = *(void *)(a2 + 656);
  if (v23 == 1)
  {
    sub_1AFDCA6AC(a1 + 656);
    goto LABEL_13;
  }
  *(void *)(a1 + 656) = v23;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 664) = *(void *)(a2 + 664);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 672) = *(void *)(a2 + 672);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 680) = *(void *)(a2 + 680);
  swift_bridgeObjectRelease();
LABEL_15:
  if (*(void *)(a1 + 688) == 1)
  {
LABEL_18:
    long long v26 = *(_OWORD *)(a2 + 704);
    *(_OWORD *)(a1 + 688) = *(_OWORD *)(a2 + 688);
    *(_OWORD *)(a1 + 704) = v26;
    goto LABEL_20;
  }
  uint64_t v25 = *(void *)(a2 + 688);
  if (v25 == 1)
  {
    sub_1AFDCA6AC(a1 + 688);
    goto LABEL_18;
  }
  *(void *)(a1 + 688) = v25;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 696) = *(void *)(a2 + 696);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 704) = *(void *)(a2 + 704);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 712) = *(void *)(a2 + 712);
  swift_bridgeObjectRelease();
LABEL_20:
  if (*(void *)(a1 + 720) == 1)
  {
LABEL_23:
    long long v28 = *(_OWORD *)(a2 + 736);
    *(_OWORD *)(a1 + 720) = *(_OWORD *)(a2 + 720);
    *(_OWORD *)(a1 + 736) = v28;
    goto LABEL_25;
  }
  uint64_t v27 = *(void *)(a2 + 720);
  if (v27 == 1)
  {
    sub_1AFDCA6AC(a1 + 720);
    goto LABEL_23;
  }
  *(void *)(a1 + 720) = v27;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 728) = *(void *)(a2 + 728);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 736) = *(void *)(a2 + 736);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 744) = *(void *)(a2 + 744);
  swift_bridgeObjectRelease();
LABEL_25:
  if (*(void *)(a1 + 752) != 1)
  {
    uint64_t v29 = *(void *)(a2 + 752);
    if (v29 != 1)
    {
      *(void *)(a1 + 752) = v29;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 760) = *(void *)(a2 + 760);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 768) = *(void *)(a2 + 768);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 776) = *(void *)(a2 + 776);
      swift_bridgeObjectRelease();
      goto LABEL_30;
    }
    sub_1AFDCA6AC(a1 + 752);
  }
  long long v30 = *(_OWORD *)(a2 + 768);
  *(_OWORD *)(a1 + 752) = *(_OWORD *)(a2 + 752);
  *(_OWORD *)(a1 + 768) = v30;
LABEL_30:
  *(void *)(a1 + 784) = *(void *)(a2 + 784);
  swift_bridgeObjectRelease();
LABEL_31:
  *(void *)(a1 + 792) = *(void *)(a2 + 792);
  *(unsigned char *)(a1 + 800) = *(unsigned char *)(a2 + 800);
  *(void *)(a1 + 808) = *(void *)(a2 + 808);
  *(unsigned char *)(a1 + 816) = *(unsigned char *)(a2 + 816);
  *(void *)(a1 + 824) = *(void *)(a2 + 824);
  *(void *)(a1 + 832) = *(void *)(a2 + 832);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 840) = *(void *)(a2 + 840);
  *(void *)(a1 + 848) = *(void *)(a2 + 848);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 856) = *(void *)(a2 + 856);
  *(void *)(a1 + 864) = *(void *)(a2 + 864);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 872) = *(void *)(a2 + 872);
  *(_OWORD *)(a1 + 880) = *(_OWORD *)(a2 + 880);
  *(unsigned char *)(a1 + 896) = v6[552];
  *(unsigned char *)(a1 + 897) = v6[553];
  *(void *)(a1 + 904) = *(void *)(a2 + 904);
  *(void *)(a1 + 912) = *(void *)(a2 + 912);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 920) = v6[576];
  *(void *)(a1 + 928) = *(void *)(a2 + 928);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 936) = *(void *)(a2 + 936);
  *(unsigned char *)(a1 + 944) = *(unsigned char *)(a2 + 944);
  *(void *)(a1 + 952) = *(void *)(a2 + 952);
  *(unsigned char *)(a1 + 960) = *(unsigned char *)(a2 + 960);
  *(void *)(a1 + 968) = *(void *)(a2 + 968);
  *(unsigned char *)(a1 + 976) = *(unsigned char *)(a2 + 976);
  *(unsigned char *)(a1 + 992) = *(unsigned char *)(a2 + 992);
  *(void *)(a1 + 984) = *(void *)(a2 + 984);
  *(void *)(a1 + 1000) = *(void *)(a2 + 1000);
  long long v31 = *(_OWORD *)(a2 + 1024);
  *(_OWORD *)(a1 + 1008) = *(_OWORD *)(a2 + 1008);
  *(_OWORD *)(a1 + 1024) = v31;
  *(_OWORD *)(a1 + 1040) = *(_OWORD *)(a2 + 1040);
  *(_OWORD *)(a1 + 1056) = *(_OWORD *)(a2 + 1056);
  *(_OWORD *)(a1 + 1072) = *(_OWORD *)(a2 + 1072);
  *(_OWORD *)(a1 + 1088) = *(_OWORD *)(a2 + 1088);
  *(_OWORD *)(a1 + 1104) = *(_OWORD *)(a2 + 1104);
  *(_OWORD *)(a1 + 1120) = *(_OWORD *)(a2 + 1120);
  *(_OWORD *)(a1 + 1136) = *(_OWORD *)(a2 + 1136);
  *(void *)(a1 + 1152) = *(void *)(a2 + 1152);
  *(void *)(a1 + 1160) = *(void *)(a2 + 1160);
  *(void *)(a1 + 1168) = *(void *)(a2 + 1168);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 1176) = v6[832];
  *(void *)(a1 + 1184) = *(void *)(a2 + 1184);
  *(void *)(a1 + 1192) = *(void *)(a2 + 1192);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1200) = *(void *)(a2 + 1200);
  *(void *)(a1 + 1208) = *(void *)(a2 + 1208);
  *(void *)(a1 + 1216) = *(void *)(a2 + 1216);
  *(void *)(a1 + 1224) = *(void *)(a2 + 1224);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1232) = *(void *)(a2 + 1232);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1240) = *(void *)(a2 + 1240);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1248) = *(void *)(a2 + 1248);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1256) = *(void *)(a2 + 1256);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1264) = *(void *)(a2 + 1264);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1272) = *(void *)(a2 + 1272);
  *(_OWORD *)(a1 + 1280) = *(_OWORD *)(a2 + 1280);
  *(void *)(a1 + 1296) = *(void *)(a2 + 1296);
  *(void *)(a1 + 1304) = *(void *)(a2 + 1304);
  *(void *)(a1 + 1312) = *(void *)(a2 + 1312);
  *(void *)(a1 + 1320) = *(void *)(a2 + 1320);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1328) = *(void *)(a2 + 1328);
  *(void *)(a1 + 1336) = *(void *)(a2 + 1336);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 1344) = *(_OWORD *)(a2 + 1344);
  *(void *)(a1 + 1360) = *(void *)(a2 + 1360);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1368) = *(void *)(a2 + 1368);
  *(_OWORD *)(a1 + 1376) = *(_OWORD *)(a2 + 1376);
  *(void *)(a1 + 1392) = *(void *)(a2 + 1392);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 1400) = v6[1056];
  *(unsigned char *)(a1 + 1401) = v6[1057];
  *(_OWORD *)(a1 + 1408) = *(_OWORD *)(a2 + 1408);
  *(void *)(a1 + 1424) = *(void *)(a2 + 1424);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1432) = *(void *)(a2 + 1432);
  *(void *)(a1 + 1440) = *(void *)(a2 + 1440);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 1448) = *(_OWORD *)(a2 + 1448);
  *(void *)(a1 + 1464) = *(void *)(a2 + 1464);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1472) = *(void *)(a2 + 1472);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1480) = *(void *)(a2 + 1480);
  *(void *)(a1 + 1488) = *(void *)(a2 + 1488);
  *(void *)(a1 + 1496) = *(void *)(a2 + 1496);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1504) = *(void *)(a2 + 1504);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1512) = *(void *)(a2 + 1512);
  *(void *)(a1 + 1520) = *(void *)(a2 + 1520);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1528) = *(void *)(a2 + 1528);
  *(void *)(a1 + 1536) = *(void *)(a2 + 1536);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1544) = *(void *)(a2 + 1544);
  *(void *)(a1 + 1552) = *(void *)(a2 + 1552);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 1560) = *v5;
  *(_OWORD *)(a1 + 1568) = *(_OWORD *)(a2 + 1568);
  memcpy((void *)(a1 + 1584), (const void *)(a2 + 1584), 0x46BuLL);
  memcpy((void *)(a1 + 2720), (const void *)(a2 + 2720), 0x46BuLL);
  *(unsigned char *)(a1 + 3851) = v5[2291];
  *(void *)(a1 + 3856) = *(void *)(a2 + 3856);
  *(unsigned char *)(a1 + 3864) = *(unsigned char *)(a2 + 3864);
  *(void *)(a1 + 3872) = *(void *)(a2 + 3872);
  *(unsigned char *)(a1 + 3880) = *(unsigned char *)(a2 + 3880);
  *(void *)(a1 + 3888) = *(void *)(a2 + 3888);
  *(unsigned char *)(a1 + 3896) = *(unsigned char *)(a2 + 3896);
  *(unsigned char *)(a1 + 3912) = *(unsigned char *)(a2 + 3912);
  *(void *)(a1 + 3904) = *(void *)(a2 + 3904);
  *(void *)(a1 + 3920) = *(void *)(a2 + 3920);
  *(unsigned char *)(a1 + 3928) = *(unsigned char *)(a2 + 3928);
  *(void *)(a1 + 3936) = *(void *)(a2 + 3936);
  *(unsigned char *)(a1 + 3944) = *(unsigned char *)(a2 + 3944);
  *(void *)(a1 + 3952) = *(void *)(a2 + 3952);
  *(void *)(a1 + 3960) = *(void *)(a2 + 3960);
  *(void *)(a1 + 3968) = *(void *)(a2 + 3968);
  *(unsigned char *)(a1 + 3976) = v5[2416];
  *(unsigned char *)(a1 + 3977) = v5[2417];
  *(void *)(a1 + 3984) = *(void *)(a2 + 3984);
  *(unsigned char *)(a1 + 4000) = *(unsigned char *)(a2 + 4000);
  *(void *)(a1 + 3992) = *(void *)(a2 + 3992);
  *(void *)(a1 + 4008) = *(void *)(a2 + 4008);
  if (*(void *)(a1 + 4024) != 1)
  {
    uint64_t v32 = *(void *)(a2 + 4024);
    if (v32 != 1)
    {
      *(void *)(a1 + 4016) = *(void *)(a2 + 4016);
      *(void *)(a1 + 4024) = v32;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 4032) = *(void *)(a2 + 4032);
      *(void *)(a1 + 4040) = *(void *)(a2 + 4040);
      swift_bridgeObjectRelease();
      goto LABEL_36;
    }
    sub_1AFF8C86C(a1 + 4016);
  }
  long long v33 = *(_OWORD *)(a2 + 4032);
  *(_OWORD *)(a1 + 4016) = *(_OWORD *)(a2 + 4016);
  *(_OWORD *)(a1 + 4032) = v33;
LABEL_36:
  *(void *)(a1 + 4048) = *(void *)(a2 + 4048);
  *(unsigned char *)(a1 + 4056) = *(unsigned char *)(a2 + 4056);
  *(_OWORD *)(a1 + 4064) = *(_OWORD *)(a2 + 4064);
  *(_OWORD *)(a1 + 4080) = *(_OWORD *)(a2 + 4080);
  *(unsigned char *)(a1 + 4096) = *(unsigned char *)(a2 + 4096);
  *(void *)(a1 + 4104) = *(void *)(a2 + 4104);
  *(void *)(a1 + 4112) = *(void *)(a2 + 4112);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 4120) = *(void *)(a2 + 4120);
  *(void *)(a1 + 4128) = *(void *)(a2 + 4128);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 4136) = *(void *)(a2 + 4136);
  *(unsigned char *)(a1 + 4144) = *(unsigned char *)(a2 + 4144);
  *(void *)(a1 + 4152) = *(void *)(a2 + 4152);
  *(unsigned char *)(a1 + 4160) = *(unsigned char *)(a2 + 4160);
  *(void *)(a1 + 4168) = *(void *)(a2 + 4168);
  *(void *)(a1 + 4176) = *(void *)(a2 + 4176);
  *uint64_t v4 = v5[2624];
  *(void *)(a1 + 4192) = *(void *)(a2 + 4192);
  *(void *)(a1 + 4200) = *(void *)(a2 + 4200);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 4208) = *(_OWORD *)(a2 + 4208);
  *(void *)(a1 + 4224) = *(void *)(a2 + 4224);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 4232) = *(void *)(a2 + 4232);
  v4[56] = v5[2680];
  *(void *)(a1 + 4248) = *(void *)(a2 + 4248);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 4256) = *(void *)(a2 + 4256);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 4264) = *(void *)(a2 + 4264);
  *(void *)(a1 + 4272) = *(void *)(a2 + 4272);
  swift_bridgeObjectRelease();
  v4[96] = v5[2720];
  v4[97] = v5[2721];
  return a1;
}

uint64_t getEnumTagSinglePayload for AppConfiguration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 4282)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AppConfiguration(uint64_t result, int a2, int a3)
{
  long long v3 = (unsigned char *)(result + 4282);
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 4280) = 0;
    *(_OWORD *)(result + 4264) = 0u;
    *(_OWORD *)(result + 4248) = 0u;
    *(_OWORD *)(result + 4232) = 0u;
    *(_OWORD *)(result + 4216) = 0u;
    *(_OWORD *)(result + 4200) = 0u;
    *(_OWORD *)(result + 4184) = 0u;
    *(_OWORD *)(result + 4168) = 0u;
    *(_OWORD *)(result + 4152) = 0u;
    *(_OWORD *)(result + 4136) = 0u;
    *(_OWORD *)(result + 4120) = 0u;
    *(_OWORD *)(result + 4104) = 0u;
    *(_OWORD *)(result + 4088) = 0u;
    *(_OWORD *)(result + 4072) = 0u;
    *(_OWORD *)(result + 4056) = 0u;
    *(_OWORD *)(result + 4040) = 0u;
    *(_OWORD *)(result + 4024) = 0u;
    *(_OWORD *)(result + 4008) = 0u;
    *(_OWORD *)(result + 3992) = 0u;
    *(_OWORD *)(result + 3976) = 0u;
    *(_OWORD *)(result + 3960) = 0u;
    *(_OWORD *)(result + 3944) = 0u;
    *(_OWORD *)(result + 3928) = 0u;
    *(_OWORD *)(result + 3912) = 0u;
    *(_OWORD *)(result + 3896) = 0u;
    *(_OWORD *)(result + 3880) = 0u;
    *(_OWORD *)(result + 3864) = 0u;
    *(_OWORD *)(result + 3848) = 0u;
    *(_OWORD *)(result + 3832) = 0u;
    *(_OWORD *)(result + 3816) = 0u;
    *(_OWORD *)(result + 3800) = 0u;
    *(_OWORD *)(result + 3784) = 0u;
    *(_OWORD *)(result + 3768) = 0u;
    *(_OWORD *)(result + 3752) = 0u;
    *(_OWORD *)(result + 3736) = 0u;
    *(_OWORD *)(result + 3720) = 0u;
    *(_OWORD *)(result + 3704) = 0u;
    *(_OWORD *)(result + 3688) = 0u;
    *(_OWORD *)(result + 3672) = 0u;
    *(_OWORD *)(result + 3656) = 0u;
    *(_OWORD *)(result + 3640) = 0u;
    *(_OWORD *)(result + 3624) = 0u;
    *(_OWORD *)(result + 3608) = 0u;
    *(_OWORD *)(result + 3592) = 0u;
    *(_OWORD *)(result + 3576) = 0u;
    *(_OWORD *)(result + 3560) = 0u;
    *(_OWORD *)(result + 3544) = 0u;
    *(_OWORD *)(result + 3528) = 0u;
    *(_OWORD *)(result + 3512) = 0u;
    *(_OWORD *)(result + 3496) = 0u;
    *(_OWORD *)(result + 3480) = 0u;
    *(_OWORD *)(result + 3464) = 0u;
    *(_OWORD *)(result + 3448) = 0u;
    *(_OWORD *)(result + 3432) = 0u;
    *(_OWORD *)(result + 3416) = 0u;
    *(_OWORD *)(result + 3400) = 0u;
    *(_OWORD *)(result + 3384) = 0u;
    *(_OWORD *)(result + 3368) = 0u;
    *(_OWORD *)(result + 3352) = 0u;
    *(_OWORD *)(result + 3336) = 0u;
    *(_OWORD *)(result + 3320) = 0u;
    *(_OWORD *)(result + 3304) = 0u;
    *(_OWORD *)(result + 3288) = 0u;
    *(_OWORD *)(result + 3272) = 0u;
    *(_OWORD *)(result + 3256) = 0u;
    *(_OWORD *)(result + 3240) = 0u;
    *(_OWORD *)(result + 3224) = 0u;
    *(_OWORD *)(result + 3208) = 0u;
    *(_OWORD *)(result + 3192) = 0u;
    *(_OWORD *)(result + 3176) = 0u;
    *(_OWORD *)(result + 3160) = 0u;
    *(_OWORD *)(result + 3144) = 0u;
    *(_OWORD *)(result + 3128) = 0u;
    *(_OWORD *)(result + 3112) = 0u;
    *(_OWORD *)(result + 3096) = 0u;
    *(_OWORD *)(result + 3080) = 0u;
    *(_OWORD *)(result + 3064) = 0u;
    *(_OWORD *)(result + 3048) = 0u;
    *(_OWORD *)(result + 3032) = 0u;
    *(_OWORD *)(result + 3016) = 0u;
    *(_OWORD *)(result + 3000) = 0u;
    *(_OWORD *)(result + 2984) = 0u;
    *(_OWORD *)(result + 2968) = 0u;
    *(_OWORD *)(result + 2952) = 0u;
    *(_OWORD *)(result + 2936) = 0u;
    *(_OWORD *)(result + 2920) = 0u;
    *(_OWORD *)(result + 2904) = 0u;
    *(_OWORD *)(result + 2888) = 0u;
    *(_OWORD *)(result + 2872) = 0u;
    *(_OWORD *)(result + 2856) = 0u;
    *(_OWORD *)(result + 2840) = 0u;
    *(_OWORD *)(result + 2824) = 0u;
    *(_OWORD *)(result + 2808) = 0u;
    *(_OWORD *)(result + 2792) = 0u;
    *(_OWORD *)(result + 2776) = 0u;
    *(_OWORD *)(result + 2760) = 0u;
    *(_OWORD *)(result + 2744) = 0u;
    *(_OWORD *)(result + 2728) = 0u;
    *(_OWORD *)(result + 2712) = 0u;
    *(_OWORD *)(result + 2696) = 0u;
    *(_OWORD *)(result + 2680) = 0u;
    *(_OWORD *)(result + 2664) = 0u;
    *(_OWORD *)(result + 2648) = 0u;
    *(_OWORD *)(result + 2632) = 0u;
    *(_OWORD *)(result + 2616) = 0u;
    *(_OWORD *)(result + 2600) = 0u;
    *(_OWORD *)(result + 2584) = 0u;
    *(_OWORD *)(result + 2568) = 0u;
    *(_OWORD *)(result + 2552) = 0u;
    *(_OWORD *)(result + 2536) = 0u;
    *(_OWORD *)(result + 2520) = 0u;
    *(_OWORD *)(result + 2504) = 0u;
    *(_OWORD *)(result + 2488) = 0u;
    *(_OWORD *)(result + 2472) = 0u;
    *(_OWORD *)(result + 2456) = 0u;
    *(_OWORD *)(result + 2440) = 0u;
    *(_OWORD *)(result + 2424) = 0u;
    *(_OWORD *)(result + 2408) = 0u;
    *(_OWORD *)(result + 2392) = 0u;
    *(_OWORD *)(result + 2376) = 0u;
    *(_OWORD *)(result + 2360) = 0u;
    *(_OWORD *)(result + 2344) = 0u;
    *(_OWORD *)(result + 2328) = 0u;
    *(_OWORD *)(result + 2312) = 0u;
    *(_OWORD *)(result + 2296) = 0u;
    *(_OWORD *)(result + 2280) = 0u;
    *(_OWORD *)(result + 2264) = 0u;
    *(_OWORD *)(result + 2248) = 0u;
    *(_OWORD *)(result + 2232) = 0u;
    *(_OWORD *)(result + 2216) = 0u;
    *(_OWORD *)(result + 2200) = 0u;
    *(_OWORD *)(result + 2184) = 0u;
    *(_OWORD *)(result + 2168) = 0u;
    *(_OWORD *)(result + 2152) = 0u;
    *(_OWORD *)(result + 2136) = 0u;
    *(_OWORD *)(result + 2120) = 0u;
    *(_OWORD *)(result + 2104) = 0u;
    *(_OWORD *)(result + 2088) = 0u;
    *(_OWORD *)(result + 2072) = 0u;
    *(_OWORD *)(result + 2056) = 0u;
    *(_OWORD *)(result + 2040) = 0u;
    *(_OWORD *)(result + 2024) = 0u;
    *(_OWORD *)(result + 2008) = 0u;
    *(_OWORD *)(result + 1992) = 0u;
    *(_OWORD *)(result + 1976) = 0u;
    *(_OWORD *)(result + 1960) = 0u;
    *(_OWORD *)(result + 1944) = 0u;
    *(_OWORD *)(result + 1928) = 0u;
    *(_OWORD *)(result + 1912) = 0u;
    *(_OWORD *)(result + 1896) = 0u;
    *(_OWORD *)(result + 1880) = 0u;
    *(_OWORD *)(result + 1864) = 0u;
    *(_OWORD *)(result + 1848) = 0u;
    *(_OWORD *)(result + 1832) = 0u;
    *(_OWORD *)(result + 1816) = 0u;
    *(_OWORD *)(result + 1800) = 0u;
    *(_OWORD *)(result + 1784) = 0u;
    *(_OWORD *)(result + 1768) = 0u;
    *(_OWORD *)(result + 1752) = 0u;
    *(_OWORD *)(result + 1736) = 0u;
    *(_OWORD *)(result + 1720) = 0u;
    *(_OWORD *)(result + 1704) = 0u;
    *(_OWORD *)(result + 1688) = 0u;
    *(_OWORD *)(result + 1672) = 0u;
    *(_OWORD *)(result + 1656) = 0u;
    *(_OWORD *)(result + 1640) = 0u;
    *(_OWORD *)(result + 1624) = 0u;
    *(_OWORD *)(result + 1608) = 0u;
    *(_OWORD *)(result + 1592) = 0u;
    *(_OWORD *)(result + 1576) = 0u;
    *(_OWORD *)(result + 1560) = 0u;
    *(_OWORD *)(result + 1544) = 0u;
    *(_OWORD *)(result + 1528) = 0u;
    *(_OWORD *)(result + 1512) = 0u;
    *(_OWORD *)(result + 1496) = 0u;
    *(_OWORD *)(result + 1480) = 0u;
    *(_OWORD *)(result + 1464) = 0u;
    *(_OWORD *)(result + 1448) = 0u;
    *(_OWORD *)(result + 1432) = 0u;
    *(_OWORD *)(result + 1416) = 0u;
    *(_OWORD *)(result + 1400) = 0u;
    *(_OWORD *)(result + 1384) = 0u;
    *(_OWORD *)(result + 1368) = 0u;
    *(_OWORD *)(result + 1352) = 0u;
    *(_OWORD *)(result + 1336) = 0u;
    *(_OWORD *)(result + 1320) = 0u;
    *(_OWORD *)(result + 1304) = 0u;
    *(_OWORD *)(result + 1288) = 0u;
    *(_OWORD *)(result + 1272) = 0u;
    *(_OWORD *)(result + 1256) = 0u;
    *(_OWORD *)(result + 1240) = 0u;
    *(_OWORD *)(result + 1224) = 0u;
    *(_OWORD *)(result + 1208) = 0u;
    *(_OWORD *)(result + 1192) = 0u;
    *(_OWORD *)(result + 1176) = 0u;
    *(_OWORD *)(result + 1160) = 0u;
    *(_OWORD *)(result + 1144) = 0u;
    *(_OWORD *)(result + 1128) = 0u;
    *(_OWORD *)(result + 1112) = 0u;
    *(_OWORD *)(result + 1096) = 0u;
    *(_OWORD *)(result + 1080) = 0u;
    *(_OWORD *)(result + 1064) = 0u;
    *(_OWORD *)(result + 1048) = 0u;
    *(_OWORD *)(result + 1032) = 0u;
    *(_OWORD *)(result + 1016) = 0u;
    *(_OWORD *)(result + 1000) = 0u;
    *(_OWORD *)(result + 984) = 0u;
    *(_OWORD *)(result + 968) = 0u;
    *(_OWORD *)(result + 952) = 0u;
    *(_OWORD *)(result + 936) = 0u;
    *(_OWORD *)(result + 920) = 0u;
    *(_OWORD *)(result + 904) = 0u;
    *(_OWORD *)(result + 888) = 0u;
    *(_OWORD *)(result + 872) = 0u;
    *(_OWORD *)(result + 856) = 0u;
    *(_OWORD *)(result + 840) = 0u;
    *(_OWORD *)(result + 824) = 0u;
    *(_OWORD *)(result + 808) = 0u;
    *(_OWORD *)(result + 792) = 0u;
    *(_OWORD *)(result + 776) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *long long v3 = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *long long v3 = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppConfiguration()
{
  return &type metadata for AppConfiguration;
}

uint64_t destroy for LanguageConfig(void *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[11])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[21])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (a1[60] != 1)
    {
      if (a1[40] != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (a1[44] != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (a1[48] != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (a1[52] != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (a1[56] != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[78] != 1) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LanguageConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  uint64_t v9 = *(void *)(a2 + 88);
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  if (!v9)
  {
    long long v32 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v32;
    uint64_t v11 = *(void *)(a2 + 168);
    if (v11) {
      goto LABEL_3;
    }
LABEL_6:
    memcpy((void *)(a1 + 112), (const void *)(a2 + 112), 0x1F9uLL);
    goto LABEL_24;
  }
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  uint64_t v10 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v10;
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  uint64_t v11 = *(void *)(a2 + 168);
  if (!v11) {
    goto LABEL_6;
  }
LABEL_3:
  uint64_t v12 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v12;
  *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  uint64_t v13 = *(void *)(a2 + 176);
  uint64_t v14 = *(void *)(a2 + 184);
  *(void *)(a1 + 168) = v11;
  *(void *)(a1 + 176) = v13;
  uint64_t v15 = *(void *)(a2 + 192);
  uint64_t v16 = *(void *)(a2 + 200);
  *(void *)(a1 + 184) = v14;
  *(void *)(a1 + 192) = v15;
  uint64_t v17 = *(void *)(a2 + 208);
  uint64_t v18 = *(void *)(a2 + 216);
  *(void *)(a1 + 200) = v16;
  *(void *)(a1 + 208) = v17;
  uint64_t v19 = *(void *)(a2 + 224);
  uint64_t v20 = *(void *)(a2 + 232);
  *(void *)(a1 + 216) = v18;
  *(void *)(a1 + 224) = v19;
  uint64_t v21 = *(void *)(a2 + 240);
  uint64_t v22 = *(void *)(a2 + 248);
  *(void *)(a1 + 232) = v20;
  *(void *)(a1 + 240) = v21;
  *(void *)(a1 + 248) = v22;
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  uint64_t v23 = *(void *)(a2 + 280);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = v23;
  uint64_t v62 = *(void *)(a2 + 296);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = v62;
  uint64_t v63 = *(void *)(a2 + 312);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(void *)(a1 + 312) = v63;
  long long v24 = (_OWORD *)(a1 + 320);
  uint64_t v25 = (_OWORD *)(a2 + 320);
  uint64_t v26 = *(void *)(a2 + 480);
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  if (v26 == 1)
  {
    long long v27 = *(_OWORD *)(a2 + 464);
    *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
    *(_OWORD *)(a1 + 464) = v27;
    *(void *)(a1 + 480) = *(void *)(a2 + 480);
    long long v28 = *(_OWORD *)(a2 + 400);
    *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
    *(_OWORD *)(a1 + 400) = v28;
    long long v29 = *(_OWORD *)(a2 + 432);
    *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
    *(_OWORD *)(a1 + 432) = v29;
    long long v30 = *(_OWORD *)(a2 + 336);
    *long long v24 = *v25;
    *(_OWORD *)(a1 + 336) = v30;
    long long v31 = *(_OWORD *)(a2 + 368);
    *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
    *(_OWORD *)(a1 + 368) = v31;
  }
  else
  {
    if (*(void *)v25 == 1)
    {
      long long v33 = *(_OWORD *)(a2 + 336);
      *long long v24 = *v25;
      *(_OWORD *)(a1 + 336) = v33;
    }
    else
    {
      uint64_t v34 = *(void *)(a2 + 328);
      uint64_t v35 = *(void *)(a2 + 336);
      *(void *)(a1 + 320) = *(void *)v25;
      *(void *)(a1 + 328) = v34;
      uint64_t v36 = *(void *)(a2 + 344);
      *(void *)(a1 + 336) = v35;
      *(void *)(a1 + 344) = v36;
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
    }
    uint64_t v37 = *(void *)(a2 + 352);
    if (v37 == 1)
    {
      long long v38 = *(_OWORD *)(a2 + 368);
      *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
      *(_OWORD *)(a1 + 368) = v38;
    }
    else
    {
      uint64_t v39 = *(void *)(a2 + 360);
      uint64_t v40 = *(void *)(a2 + 368);
      *(void *)(a1 + 352) = v37;
      *(void *)(a1 + 360) = v39;
      uint64_t v41 = *(void *)(a2 + 376);
      *(void *)(a1 + 368) = v40;
      *(void *)(a1 + 376) = v41;
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
    }
    uint64_t v42 = *(void *)(a2 + 384);
    if (v42 == 1)
    {
      long long v43 = *(_OWORD *)(a2 + 400);
      *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
      *(_OWORD *)(a1 + 400) = v43;
    }
    else
    {
      uint64_t v44 = *(void *)(a2 + 392);
      uint64_t v45 = *(void *)(a2 + 400);
      *(void *)(a1 + 384) = v42;
      *(void *)(a1 + 392) = v44;
      uint64_t v46 = *(void *)(a2 + 408);
      *(void *)(a1 + 400) = v45;
      *(void *)(a1 + 408) = v46;
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
    }
    uint64_t v47 = *(void *)(a2 + 416);
    if (v47 == 1)
    {
      long long v48 = *(_OWORD *)(a2 + 432);
      *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
      *(_OWORD *)(a1 + 432) = v48;
    }
    else
    {
      uint64_t v49 = *(void *)(a2 + 424);
      uint64_t v50 = *(void *)(a2 + 432);
      *(void *)(a1 + 416) = v47;
      *(void *)(a1 + 424) = v49;
      uint64_t v51 = *(void *)(a2 + 440);
      *(void *)(a1 + 432) = v50;
      *(void *)(a1 + 440) = v51;
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
    }
    uint64_t v52 = *(void *)(a2 + 448);
    if (v52 == 1)
    {
      long long v53 = *(_OWORD *)(a2 + 464);
      *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
      *(_OWORD *)(a1 + 464) = v53;
    }
    else
    {
      uint64_t v54 = *(void *)(a2 + 456);
      uint64_t v55 = *(void *)(a2 + 464);
      *(void *)(a1 + 448) = v52;
      *(void *)(a1 + 456) = v54;
      uint64_t v56 = *(void *)(a2 + 472);
      *(void *)(a1 + 464) = v55;
      *(void *)(a1 + 472) = v56;
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
    }
    *(void *)(a1 + 480) = v26;
    sub_1AFFC8E38();
  }
  *(void *)(a1 + 488) = *(void *)(a2 + 488);
  *(unsigned char *)(a1 + 496) = *(unsigned char *)(a2 + 496);
  *(void *)(a1 + 504) = *(void *)(a2 + 504);
  *(unsigned char *)(a1 + 512) = *(unsigned char *)(a2 + 512);
  *(void *)(a1 + 520) = *(void *)(a2 + 520);
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  *(void *)(a1 + 536) = *(void *)(a2 + 536);
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  *(void *)(a1 + 552) = *(void *)(a2 + 552);
  *(void *)(a1 + 560) = *(void *)(a2 + 560);
  *(void *)(a1 + 568) = *(void *)(a2 + 568);
  *(_OWORD *)(a1 + 576) = *(_OWORD *)(a2 + 576);
  *(_WORD *)(a1 + 592) = *(_WORD *)(a2 + 592);
  *(void *)(a1 + 600) = *(void *)(a2 + 600);
  *(void *)(a1 + 608) = *(void *)(a2 + 608);
  *(unsigned char *)(a1 + 616) = *(unsigned char *)(a2 + 616);
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
LABEL_24:
  uint64_t v57 = *(void *)(a2 + 624);
  if (v57 == 1)
  {
    long long v58 = *(_OWORD *)(a2 + 672);
    *(_OWORD *)(a1 + 656) = *(_OWORD *)(a2 + 656);
    *(_OWORD *)(a1 + 672) = v58;
    *(unsigned char *)(a1 + 688) = *(unsigned char *)(a2 + 688);
    long long v59 = *(_OWORD *)(a2 + 640);
    *(_OWORD *)(a1 + 624) = *(_OWORD *)(a2 + 624);
    *(_OWORD *)(a1 + 640) = v59;
  }
  else
  {
    *(void *)(a1 + 624) = v57;
    *(void *)(a1 + 632) = *(void *)(a2 + 632);
    *(unsigned char *)(a1 + 640) = *(unsigned char *)(a2 + 640);
    *(void *)(a1 + 648) = *(void *)(a2 + 648);
    *(unsigned char *)(a1 + 656) = *(unsigned char *)(a2 + 656);
    *(void *)(a1 + 664) = *(void *)(a2 + 664);
    *(unsigned char *)(a1 + 672) = *(unsigned char *)(a2 + 672);
    *(unsigned char *)(a1 + 688) = *(unsigned char *)(a2 + 688);
    *(void *)(a1 + 680) = *(void *)(a2 + 680);
    sub_1AFFC8E38();
  }
  *(void *)(a1 + 696) = *(void *)(a2 + 696);
  *(void *)(a1 + 704) = *(void *)(a2 + 704);
  *(unsigned char *)(a1 + 744) = *(unsigned char *)(a2 + 744);
  long long v60 = *(_OWORD *)(a2 + 728);
  *(_OWORD *)(a1 + 712) = *(_OWORD *)(a2 + 712);
  *(_OWORD *)(a1 + 728) = v60;
  *(void *)(a1 + 752) = *(void *)(a2 + 752);
  *(void *)(a1 + 760) = *(void *)(a2 + 760);
  *(void *)(a1 + 768) = *(void *)(a2 + 768);
  *(void *)(a1 + 776) = *(void *)(a2 + 776);
  *(void *)(a1 + 784) = *(void *)(a2 + 784);
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  return a1;
}

uint64_t assignWithCopy for LanguageConfig(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 80);
  uint64_t v5 = (_OWORD *)(a2 + 80);
  uint64_t v6 = *(void *)(a2 + 88);
  if (*(void *)(a1 + 88))
  {
    if (v6)
    {
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
    }
    else
    {
      sub_1AFF8F11C(a1 + 80);
      long long v7 = *(_OWORD *)(a2 + 96);
      *uint64_t v4 = *v5;
      *(_OWORD *)(a1 + 96) = v7;
    }
  }
  else if (v6)
  {
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    sub_1AFFC8E38();
    sub_1AFFC8E38();
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 96);
    *uint64_t v4 = *v5;
    *(_OWORD *)(a1 + 96) = v8;
  }
  uint64_t v9 = *(void *)(a2 + 168);
  if (*(void *)(a1 + 168))
  {
    if (v9)
    {
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
      *(unsigned char *)(a1 + 129) = *(unsigned char *)(a2 + 129);
      *(unsigned char *)(a1 + 130) = *(unsigned char *)(a2 + 130);
      *(unsigned char *)(a1 + 131) = *(unsigned char *)(a2 + 131);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 240) = *(void *)(a2 + 240);
      *(void *)(a1 + 248) = *(void *)(a2 + 248);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 256) = *(void *)(a2 + 256);
      *(void *)(a1 + 264) = *(void *)(a2 + 264);
      *(void *)(a1 + 272) = *(void *)(a2 + 272);
      *(void *)(a1 + 280) = *(void *)(a2 + 280);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 288) = *(void *)(a2 + 288);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 296) = *(void *)(a2 + 296);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 304) = *(void *)(a2 + 304);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 312) = *(void *)(a2 + 312);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      uint64_t v10 = (long long *)(a1 + 320);
      uint64_t v11 = (long long *)(a2 + 320);
      uint64_t v12 = *(void *)(a2 + 480);
      if (*(void *)(a1 + 480) == 1)
      {
        if (v12 == 1)
        {
          long long v13 = *v11;
          long long v14 = *(_OWORD *)(a2 + 352);
          *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
          *(_OWORD *)(a1 + 352) = v14;
          long long *v10 = v13;
          long long v15 = *(_OWORD *)(a2 + 368);
          long long v16 = *(_OWORD *)(a2 + 384);
          long long v17 = *(_OWORD *)(a2 + 416);
          *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
          *(_OWORD *)(a1 + 416) = v17;
          *(_OWORD *)(a1 + 368) = v15;
          *(_OWORD *)(a1 + 384) = v16;
          long long v18 = *(_OWORD *)(a2 + 432);
          long long v19 = *(_OWORD *)(a2 + 448);
          long long v20 = *(_OWORD *)(a2 + 464);
          *(void *)(a1 + 480) = *(void *)(a2 + 480);
          *(_OWORD *)(a1 + 448) = v19;
          *(_OWORD *)(a1 + 464) = v20;
          *(_OWORD *)(a1 + 432) = v18;
        }
        else
        {
          if (*(void *)v11 == 1)
          {
            long long v40 = *(_OWORD *)(a2 + 336);
            long long *v10 = *v11;
            *(_OWORD *)(a1 + 336) = v40;
          }
          else
          {
            *(void *)(a1 + 320) = *(void *)v11;
            *(void *)(a1 + 328) = *(void *)(a2 + 328);
            *(void *)(a1 + 336) = *(void *)(a2 + 336);
            *(void *)(a1 + 344) = *(void *)(a2 + 344);
            sub_1AFFC8E38();
            sub_1AFFC8E38();
            sub_1AFFC8E38();
            sub_1AFFC8E38();
          }
          uint64_t v53 = *(void *)(a2 + 352);
          if (v53 == 1)
          {
            long long v54 = *(_OWORD *)(a2 + 368);
            *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
            *(_OWORD *)(a1 + 368) = v54;
          }
          else
          {
            *(void *)(a1 + 352) = v53;
            *(void *)(a1 + 360) = *(void *)(a2 + 360);
            *(void *)(a1 + 368) = *(void *)(a2 + 368);
            *(void *)(a1 + 376) = *(void *)(a2 + 376);
            sub_1AFFC8E38();
            sub_1AFFC8E38();
            sub_1AFFC8E38();
            sub_1AFFC8E38();
          }
          uint64_t v56 = *(void *)(a2 + 384);
          if (v56 == 1)
          {
            long long v57 = *(_OWORD *)(a2 + 400);
            *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
            *(_OWORD *)(a1 + 400) = v57;
          }
          else
          {
            *(void *)(a1 + 384) = v56;
            *(void *)(a1 + 392) = *(void *)(a2 + 392);
            *(void *)(a1 + 400) = *(void *)(a2 + 400);
            *(void *)(a1 + 408) = *(void *)(a2 + 408);
            sub_1AFFC8E38();
            sub_1AFFC8E38();
            sub_1AFFC8E38();
            sub_1AFFC8E38();
          }
          uint64_t v58 = *(void *)(a2 + 416);
          if (v58 == 1)
          {
            long long v59 = *(_OWORD *)(a2 + 432);
            *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
            *(_OWORD *)(a1 + 432) = v59;
          }
          else
          {
            *(void *)(a1 + 416) = v58;
            *(void *)(a1 + 424) = *(void *)(a2 + 424);
            *(void *)(a1 + 432) = *(void *)(a2 + 432);
            *(void *)(a1 + 440) = *(void *)(a2 + 440);
            sub_1AFFC8E38();
            sub_1AFFC8E38();
            sub_1AFFC8E38();
            sub_1AFFC8E38();
          }
          uint64_t v60 = *(void *)(a2 + 448);
          if (v60 == 1)
          {
            long long v61 = *(_OWORD *)(a2 + 464);
            *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
            *(_OWORD *)(a1 + 464) = v61;
          }
          else
          {
            *(void *)(a1 + 448) = v60;
            *(void *)(a1 + 456) = *(void *)(a2 + 456);
            *(void *)(a1 + 464) = *(void *)(a2 + 464);
            *(void *)(a1 + 472) = *(void *)(a2 + 472);
            sub_1AFFC8E38();
            sub_1AFFC8E38();
            sub_1AFFC8E38();
            sub_1AFFC8E38();
          }
          *(void *)(a1 + 480) = *(void *)(a2 + 480);
          sub_1AFFC8E38();
        }
      }
      else if (v12 == 1)
      {
        sub_1AFDCA700(a1 + 320);
        long long v32 = *(_OWORD *)(a2 + 336);
        long long v31 = *(_OWORD *)(a2 + 352);
        long long *v10 = *v11;
        *(_OWORD *)(a1 + 336) = v32;
        *(_OWORD *)(a1 + 352) = v31;
        long long v33 = *(_OWORD *)(a2 + 416);
        long long v35 = *(_OWORD *)(a2 + 368);
        long long v34 = *(_OWORD *)(a2 + 384);
        *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
        *(_OWORD *)(a1 + 416) = v33;
        *(_OWORD *)(a1 + 368) = v35;
        *(_OWORD *)(a1 + 384) = v34;
        long long v37 = *(_OWORD *)(a2 + 448);
        long long v36 = *(_OWORD *)(a2 + 464);
        long long v38 = *(_OWORD *)(a2 + 432);
        *(void *)(a1 + 480) = *(void *)(a2 + 480);
        *(_OWORD *)(a1 + 448) = v37;
        *(_OWORD *)(a1 + 464) = v36;
        *(_OWORD *)(a1 + 432) = v38;
      }
      else
      {
        uint64_t v41 = *(void *)v11;
        if (*(void *)v10 == 1)
        {
          if (v41 == 1)
          {
            long long v42 = *(_OWORD *)(a2 + 336);
            long long *v10 = *v11;
            *(_OWORD *)(a1 + 336) = v42;
          }
          else
          {
            *(void *)(a1 + 320) = v41;
            *(void *)(a1 + 328) = *(void *)(a2 + 328);
            *(void *)(a1 + 336) = *(void *)(a2 + 336);
            *(void *)(a1 + 344) = *(void *)(a2 + 344);
            sub_1AFFC8E38();
            sub_1AFFC8E38();
            sub_1AFFC8E38();
            sub_1AFFC8E38();
          }
        }
        else if (v41 == 1)
        {
          sub_1AFDCA6AC(a1 + 320);
          long long v55 = *(_OWORD *)(a2 + 336);
          long long *v10 = *v11;
          *(_OWORD *)(a1 + 336) = v55;
        }
        else
        {
          *(void *)(a1 + 320) = v41;
          sub_1AFFC8E38();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 328) = *(void *)(a2 + 328);
          sub_1AFFC8E38();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 336) = *(void *)(a2 + 336);
          sub_1AFFC8E38();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 344) = *(void *)(a2 + 344);
          sub_1AFFC8E38();
          swift_bridgeObjectRelease();
        }
        uint64_t v62 = (_OWORD *)(a1 + 352);
        uint64_t v63 = (_OWORD *)(a2 + 352);
        uint64_t v64 = *(void *)(a2 + 352);
        if (*(void *)(a1 + 352) == 1)
        {
          if (v64 == 1)
          {
            long long v65 = *(_OWORD *)(a2 + 368);
            *uint64_t v62 = *v63;
            *(_OWORD *)(a1 + 368) = v65;
          }
          else
          {
            *(void *)(a1 + 352) = v64;
            *(void *)(a1 + 360) = *(void *)(a2 + 360);
            *(void *)(a1 + 368) = *(void *)(a2 + 368);
            *(void *)(a1 + 376) = *(void *)(a2 + 376);
            sub_1AFFC8E38();
            sub_1AFFC8E38();
            sub_1AFFC8E38();
            sub_1AFFC8E38();
          }
        }
        else if (v64 == 1)
        {
          sub_1AFDCA6AC(a1 + 352);
          long long v66 = *(_OWORD *)(a2 + 368);
          *uint64_t v62 = *v63;
          *(_OWORD *)(a1 + 368) = v66;
        }
        else
        {
          *(void *)(a1 + 352) = v64;
          sub_1AFFC8E38();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 360) = *(void *)(a2 + 360);
          sub_1AFFC8E38();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 368) = *(void *)(a2 + 368);
          sub_1AFFC8E38();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 376) = *(void *)(a2 + 376);
          sub_1AFFC8E38();
          swift_bridgeObjectRelease();
        }
        char v67 = (_OWORD *)(a1 + 384);
        uint64_t v68 = (_OWORD *)(a2 + 384);
        uint64_t v69 = *(void *)(a2 + 384);
        if (*(void *)(a1 + 384) == 1)
        {
          if (v69 == 1)
          {
            long long v70 = *(_OWORD *)(a2 + 400);
            *char v67 = *v68;
            *(_OWORD *)(a1 + 400) = v70;
          }
          else
          {
            *(void *)(a1 + 384) = v69;
            *(void *)(a1 + 392) = *(void *)(a2 + 392);
            *(void *)(a1 + 400) = *(void *)(a2 + 400);
            *(void *)(a1 + 408) = *(void *)(a2 + 408);
            sub_1AFFC8E38();
            sub_1AFFC8E38();
            sub_1AFFC8E38();
            sub_1AFFC8E38();
          }
        }
        else if (v69 == 1)
        {
          sub_1AFDCA6AC(a1 + 384);
          long long v71 = *(_OWORD *)(a2 + 400);
          *char v67 = *v68;
          *(_OWORD *)(a1 + 400) = v71;
        }
        else
        {
          *(void *)(a1 + 384) = v69;
          sub_1AFFC8E38();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 392) = *(void *)(a2 + 392);
          sub_1AFFC8E38();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 400) = *(void *)(a2 + 400);
          sub_1AFFC8E38();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 408) = *(void *)(a2 + 408);
          sub_1AFFC8E38();
          swift_bridgeObjectRelease();
        }
        long long v72 = (_OWORD *)(a1 + 416);
        long long v73 = (_OWORD *)(a2 + 416);
        uint64_t v74 = *(void *)(a2 + 416);
        if (*(void *)(a1 + 416) == 1)
        {
          if (v74 == 1)
          {
            long long v75 = *(_OWORD *)(a2 + 432);
            *long long v72 = *v73;
            *(_OWORD *)(a1 + 432) = v75;
          }
          else
          {
            *(void *)(a1 + 416) = v74;
            *(void *)(a1 + 424) = *(void *)(a2 + 424);
            *(void *)(a1 + 432) = *(void *)(a2 + 432);
            *(void *)(a1 + 440) = *(void *)(a2 + 440);
            sub_1AFFC8E38();
            sub_1AFFC8E38();
            sub_1AFFC8E38();
            sub_1AFFC8E38();
          }
        }
        else if (v74 == 1)
        {
          sub_1AFDCA6AC(a1 + 416);
          long long v76 = *(_OWORD *)(a2 + 432);
          *long long v72 = *v73;
          *(_OWORD *)(a1 + 432) = v76;
        }
        else
        {
          *(void *)(a1 + 416) = v74;
          sub_1AFFC8E38();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 424) = *(void *)(a2 + 424);
          sub_1AFFC8E38();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 432) = *(void *)(a2 + 432);
          sub_1AFFC8E38();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 440) = *(void *)(a2 + 440);
          sub_1AFFC8E38();
          swift_bridgeObjectRelease();
        }
        char v77 = (_OWORD *)(a1 + 448);
        double v78 = (_OWORD *)(a2 + 448);
        uint64_t v79 = *(void *)(a2 + 448);
        if (*(void *)(a1 + 448) == 1)
        {
          if (v79 == 1)
          {
            long long v80 = *(_OWORD *)(a2 + 464);
            _OWORD *v77 = *v78;
            *(_OWORD *)(a1 + 464) = v80;
          }
          else
          {
            *(void *)(a1 + 448) = v79;
            *(void *)(a1 + 456) = *(void *)(a2 + 456);
            *(void *)(a1 + 464) = *(void *)(a2 + 464);
            *(void *)(a1 + 472) = *(void *)(a2 + 472);
            sub_1AFFC8E38();
            sub_1AFFC8E38();
            sub_1AFFC8E38();
            sub_1AFFC8E38();
          }
        }
        else if (v79 == 1)
        {
          sub_1AFDCA6AC(a1 + 448);
          long long v81 = *(_OWORD *)(a2 + 464);
          _OWORD *v77 = *v78;
          *(_OWORD *)(a1 + 464) = v81;
        }
        else
        {
          *(void *)(a1 + 448) = v79;
          sub_1AFFC8E38();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 456) = *(void *)(a2 + 456);
          sub_1AFFC8E38();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 464) = *(void *)(a2 + 464);
          sub_1AFFC8E38();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 472) = *(void *)(a2 + 472);
          sub_1AFFC8E38();
          swift_bridgeObjectRelease();
        }
        *(void *)(a1 + 480) = *(void *)(a2 + 480);
        sub_1AFFC8E38();
        swift_bridgeObjectRelease();
      }
      uint64_t v82 = *(void *)(a2 + 488);
      *(unsigned char *)(a1 + 496) = *(unsigned char *)(a2 + 496);
      *(void *)(a1 + 488) = v82;
      uint64_t v83 = *(void *)(a2 + 504);
      *(unsigned char *)(a1 + 512) = *(unsigned char *)(a2 + 512);
      *(void *)(a1 + 504) = v83;
      *(void *)(a1 + 520) = *(void *)(a2 + 520);
      *(void *)(a1 + 528) = *(void *)(a2 + 528);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 536) = *(void *)(a2 + 536);
      *(void *)(a1 + 544) = *(void *)(a2 + 544);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 552) = *(void *)(a2 + 552);
      *(void *)(a1 + 560) = *(void *)(a2 + 560);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 568) = *(void *)(a2 + 568);
      *(void *)(a1 + 576) = *(void *)(a2 + 576);
      *(void *)(a1 + 584) = *(void *)(a2 + 584);
      *(unsigned char *)(a1 + 592) = *(unsigned char *)(a2 + 592);
      *(unsigned char *)(a1 + 593) = *(unsigned char *)(a2 + 593);
      *(void *)(a1 + 600) = *(void *)(a2 + 600);
      *(void *)(a1 + 608) = *(void *)(a2 + 608);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 616) = *(unsigned char *)(a2 + 616);
      goto LABEL_90;
    }
    sub_1AFF8F170(a1 + 112);
LABEL_17:
    memcpy((void *)(a1 + 112), (const void *)(a2 + 112), 0x1F9uLL);
    goto LABEL_90;
  }
  if (!v9) {
    goto LABEL_17;
  }
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(unsigned char *)(a1 + 129) = *(unsigned char *)(a2 + 129);
  *(unsigned char *)(a1 + 130) = *(unsigned char *)(a2 + 130);
  *(unsigned char *)(a1 + 131) = *(unsigned char *)(a2 + 131);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  uint64_t v21 = (long long *)(a1 + 320);
  uint64_t v22 = (long long *)(a2 + 320);
  uint64_t v104 = *(void *)(a2 + 480);
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  if (v104 == 1)
  {
    long long v23 = *v22;
    long long v24 = *(_OWORD *)(a2 + 352);
    *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
    *(_OWORD *)(a1 + 352) = v24;
    *uint64_t v21 = v23;
    long long v25 = *(_OWORD *)(a2 + 368);
    long long v26 = *(_OWORD *)(a2 + 384);
    long long v27 = *(_OWORD *)(a2 + 416);
    *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
    *(_OWORD *)(a1 + 416) = v27;
    *(_OWORD *)(a1 + 368) = v25;
    *(_OWORD *)(a1 + 384) = v26;
    long long v28 = *(_OWORD *)(a2 + 432);
    long long v29 = *(_OWORD *)(a2 + 448);
    long long v30 = *(_OWORD *)(a2 + 464);
    *(void *)(a1 + 480) = *(void *)(a2 + 480);
    *(_OWORD *)(a1 + 448) = v29;
    *(_OWORD *)(a1 + 464) = v30;
    *(_OWORD *)(a1 + 432) = v28;
  }
  else
  {
    if (*(void *)v22 == 1)
    {
      long long v39 = *(_OWORD *)(a2 + 336);
      *uint64_t v21 = *v22;
      *(_OWORD *)(a1 + 336) = v39;
    }
    else
    {
      *(void *)(a1 + 320) = *(void *)v22;
      *(void *)(a1 + 328) = *(void *)(a2 + 328);
      *(void *)(a1 + 336) = *(void *)(a2 + 336);
      *(void *)(a1 + 344) = *(void *)(a2 + 344);
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
    }
    uint64_t v43 = *(void *)(a2 + 352);
    if (v43 == 1)
    {
      long long v44 = *(_OWORD *)(a2 + 368);
      *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
      *(_OWORD *)(a1 + 368) = v44;
    }
    else
    {
      *(void *)(a1 + 352) = v43;
      *(void *)(a1 + 360) = *(void *)(a2 + 360);
      *(void *)(a1 + 368) = *(void *)(a2 + 368);
      *(void *)(a1 + 376) = *(void *)(a2 + 376);
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
    }
    uint64_t v45 = *(void *)(a2 + 384);
    if (v45 == 1)
    {
      long long v46 = *(_OWORD *)(a2 + 400);
      *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
      *(_OWORD *)(a1 + 400) = v46;
    }
    else
    {
      *(void *)(a1 + 384) = v45;
      *(void *)(a1 + 392) = *(void *)(a2 + 392);
      *(void *)(a1 + 400) = *(void *)(a2 + 400);
      *(void *)(a1 + 408) = *(void *)(a2 + 408);
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
    }
    uint64_t v47 = *(void *)(a2 + 416);
    if (v47 == 1)
    {
      long long v48 = *(_OWORD *)(a2 + 432);
      *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
      *(_OWORD *)(a1 + 432) = v48;
    }
    else
    {
      *(void *)(a1 + 416) = v47;
      *(void *)(a1 + 424) = *(void *)(a2 + 424);
      *(void *)(a1 + 432) = *(void *)(a2 + 432);
      *(void *)(a1 + 440) = *(void *)(a2 + 440);
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
    }
    uint64_t v49 = *(void *)(a2 + 448);
    if (v49 == 1)
    {
      long long v50 = *(_OWORD *)(a2 + 464);
      *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
      *(_OWORD *)(a1 + 464) = v50;
    }
    else
    {
      *(void *)(a1 + 448) = v49;
      *(void *)(a1 + 456) = *(void *)(a2 + 456);
      *(void *)(a1 + 464) = *(void *)(a2 + 464);
      *(void *)(a1 + 472) = *(void *)(a2 + 472);
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
    }
    *(void *)(a1 + 480) = *(void *)(a2 + 480);
    sub_1AFFC8E38();
  }
  uint64_t v51 = *(void *)(a2 + 488);
  *(unsigned char *)(a1 + 496) = *(unsigned char *)(a2 + 496);
  *(void *)(a1 + 488) = v51;
  uint64_t v52 = *(void *)(a2 + 504);
  *(unsigned char *)(a1 + 512) = *(unsigned char *)(a2 + 512);
  *(void *)(a1 + 504) = v52;
  *(void *)(a1 + 520) = *(void *)(a2 + 520);
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  *(void *)(a1 + 536) = *(void *)(a2 + 536);
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  *(void *)(a1 + 552) = *(void *)(a2 + 552);
  *(void *)(a1 + 560) = *(void *)(a2 + 560);
  *(void *)(a1 + 568) = *(void *)(a2 + 568);
  *(void *)(a1 + 576) = *(void *)(a2 + 576);
  *(void *)(a1 + 584) = *(void *)(a2 + 584);
  *(unsigned char *)(a1 + 592) = *(unsigned char *)(a2 + 592);
  *(unsigned char *)(a1 + 593) = *(unsigned char *)(a2 + 593);
  *(void *)(a1 + 600) = *(void *)(a2 + 600);
  *(void *)(a1 + 608) = *(void *)(a2 + 608);
  *(unsigned char *)(a1 + 616) = *(unsigned char *)(a2 + 616);
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
LABEL_90:
  double v84 = (_OWORD *)(a1 + 624);
  int v85 = (_OWORD *)(a2 + 624);
  uint64_t v86 = *(void *)(a2 + 624);
  if (*(void *)(a1 + 624) == 1)
  {
    if (v86 == 1)
    {
      *double v84 = *v85;
      long long v87 = *(_OWORD *)(a2 + 640);
      long long v88 = *(_OWORD *)(a2 + 656);
      long long v89 = *(_OWORD *)(a2 + 672);
      *(unsigned char *)(a1 + 688) = *(unsigned char *)(a2 + 688);
      *(_OWORD *)(a1 + 656) = v88;
      *(_OWORD *)(a1 + 672) = v89;
      *(_OWORD *)(a1 + 640) = v87;
    }
    else
    {
      *(void *)(a1 + 624) = v86;
      uint64_t v93 = *(void *)(a2 + 632);
      *(unsigned char *)(a1 + 640) = *(unsigned char *)(a2 + 640);
      *(void *)(a1 + 632) = v93;
      uint64_t v94 = *(void *)(a2 + 648);
      *(unsigned char *)(a1 + 656) = *(unsigned char *)(a2 + 656);
      *(void *)(a1 + 648) = v94;
      uint64_t v95 = *(void *)(a2 + 664);
      *(unsigned char *)(a1 + 672) = *(unsigned char *)(a2 + 672);
      *(void *)(a1 + 664) = v95;
      uint64_t v96 = *(void *)(a2 + 680);
      *(unsigned char *)(a1 + 688) = *(unsigned char *)(a2 + 688);
      *(void *)(a1 + 680) = v96;
      sub_1AFFC8E38();
    }
  }
  else if (v86 == 1)
  {
    sub_1AFF8F1C4(a1 + 624);
    *double v84 = *v85;
    long long v91 = *(_OWORD *)(a2 + 656);
    long long v90 = *(_OWORD *)(a2 + 672);
    long long v92 = *(_OWORD *)(a2 + 640);
    *(unsigned char *)(a1 + 688) = *(unsigned char *)(a2 + 688);
    *(_OWORD *)(a1 + 656) = v91;
    *(_OWORD *)(a1 + 672) = v90;
    *(_OWORD *)(a1 + 640) = v92;
  }
  else
  {
    *(void *)(a1 + 624) = v86;
    sub_1AFFC8E38();
    swift_bridgeObjectRelease();
    uint64_t v97 = *(void *)(a2 + 632);
    *(unsigned char *)(a1 + 640) = *(unsigned char *)(a2 + 640);
    *(void *)(a1 + 632) = v97;
    uint64_t v98 = *(void *)(a2 + 648);
    *(unsigned char *)(a1 + 656) = *(unsigned char *)(a2 + 656);
    *(void *)(a1 + 648) = v98;
    uint64_t v99 = *(void *)(a2 + 664);
    *(unsigned char *)(a1 + 672) = *(unsigned char *)(a2 + 672);
    *(void *)(a1 + 664) = v99;
    uint64_t v100 = *(void *)(a2 + 680);
    *(unsigned char *)(a1 + 688) = *(unsigned char *)(a2 + 688);
    *(void *)(a1 + 680) = v100;
  }
  *(void *)(a1 + 696) = *(void *)(a2 + 696);
  *(void *)(a1 + 704) = *(void *)(a2 + 704);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  long long v101 = *(_OWORD *)(a2 + 712);
  long long v102 = *(_OWORD *)(a2 + 728);
  *(unsigned char *)(a1 + 744) = *(unsigned char *)(a2 + 744);
  *(_OWORD *)(a1 + 712) = v101;
  *(_OWORD *)(a1 + 728) = v102;
  *(void *)(a1 + 752) = *(void *)(a2 + 752);
  *(void *)(a1 + 760) = *(void *)(a2 + 760);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 768) = *(void *)(a2 + 768);
  *(void *)(a1 + 776) = *(void *)(a2 + 776);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 784) = *(void *)(a2 + 784);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AFF8F11C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1AFF8F170(uint64_t a1)
{
  return a1;
}

uint64_t sub_1AFF8F1C4(uint64_t a1)
{
  return a1;
}

void *__swift_memcpy792_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x318uLL);
}

uint64_t assignWithTake for LanguageConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 88))
  {
    uint64_t v9 = *(void *)(a2 + 88);
    if (v9)
    {
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = v9;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      goto LABEL_6;
    }
    sub_1AFF8F11C(a1 + 80);
  }
  long long v10 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v10;
LABEL_6:
  if (!*(void *)(a1 + 168))
  {
LABEL_13:
    memcpy((void *)(a1 + 112), (const void *)(a2 + 112), 0x1F9uLL);
    goto LABEL_41;
  }
  if (!*(void *)(a2 + 168))
  {
    sub_1AFF8F170(a1 + 112);
    goto LABEL_13;
  }
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(unsigned char *)(a1 + 129) = *(unsigned char *)(a2 + 129);
  *(unsigned char *)(a1 + 130) = *(unsigned char *)(a2 + 130);
  *(unsigned char *)(a1 + 131) = *(unsigned char *)(a2 + 131);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 216);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 232);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a2 + 248);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = v15;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  uint64_t v16 = *(void *)(a2 + 280);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = v16;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  swift_bridgeObjectRelease();
  long long v17 = (void *)(a1 + 320);
  long long v18 = (void *)(a2 + 320);
  if (*(void *)(a1 + 480) != 1)
  {
    if (*(void *)(a2 + 480) == 1)
    {
      sub_1AFDCA700(a1 + 320);
      goto LABEL_11;
    }
    if (*v17 != 1)
    {
      if (*v18 != 1)
      {
        *(void *)(a1 + 320) = *v18;
        swift_bridgeObjectRelease();
        *(void *)(a1 + 328) = *(void *)(a2 + 328);
        swift_bridgeObjectRelease();
        *(void *)(a1 + 336) = *(void *)(a2 + 336);
        swift_bridgeObjectRelease();
        *(void *)(a1 + 344) = *(void *)(a2 + 344);
        swift_bridgeObjectRelease();
LABEL_19:
        if (*(void *)(a1 + 352) != 1)
        {
          uint64_t v25 = *(void *)(a2 + 352);
          if (v25 != 1)
          {
            *(void *)(a1 + 352) = v25;
            swift_bridgeObjectRelease();
            *(void *)(a1 + 360) = *(void *)(a2 + 360);
            swift_bridgeObjectRelease();
            *(void *)(a1 + 368) = *(void *)(a2 + 368);
            swift_bridgeObjectRelease();
            *(void *)(a1 + 376) = *(void *)(a2 + 376);
            swift_bridgeObjectRelease();
LABEL_24:
            if (*(void *)(a1 + 384) != 1)
            {
              uint64_t v27 = *(void *)(a2 + 384);
              if (v27 != 1)
              {
                *(void *)(a1 + 384) = v27;
                swift_bridgeObjectRelease();
                *(void *)(a1 + 392) = *(void *)(a2 + 392);
                swift_bridgeObjectRelease();
                *(void *)(a1 + 400) = *(void *)(a2 + 400);
                swift_bridgeObjectRelease();
                *(void *)(a1 + 408) = *(void *)(a2 + 408);
                swift_bridgeObjectRelease();
LABEL_29:
                if (*(void *)(a1 + 416) != 1)
                {
                  uint64_t v29 = *(void *)(a2 + 416);
                  if (v29 != 1)
                  {
                    *(void *)(a1 + 416) = v29;
                    swift_bridgeObjectRelease();
                    *(void *)(a1 + 424) = *(void *)(a2 + 424);
                    swift_bridgeObjectRelease();
                    *(void *)(a1 + 432) = *(void *)(a2 + 432);
                    swift_bridgeObjectRelease();
                    *(void *)(a1 + 440) = *(void *)(a2 + 440);
                    swift_bridgeObjectRelease();
LABEL_34:
                    if (*(void *)(a1 + 448) != 1)
                    {
                      uint64_t v31 = *(void *)(a2 + 448);
                      if (v31 != 1)
                      {
                        *(void *)(a1 + 448) = v31;
                        swift_bridgeObjectRelease();
                        *(void *)(a1 + 456) = *(void *)(a2 + 456);
                        swift_bridgeObjectRelease();
                        *(void *)(a1 + 464) = *(void *)(a2 + 464);
                        swift_bridgeObjectRelease();
                        *(void *)(a1 + 472) = *(void *)(a2 + 472);
                        swift_bridgeObjectRelease();
                        goto LABEL_39;
                      }
                      sub_1AFDCA6AC(a1 + 448);
                    }
                    long long v32 = *(_OWORD *)(a2 + 464);
                    *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
                    *(_OWORD *)(a1 + 464) = v32;
LABEL_39:
                    *(void *)(a1 + 480) = *(void *)(a2 + 480);
                    swift_bridgeObjectRelease();
                    goto LABEL_40;
                  }
                  sub_1AFDCA6AC(a1 + 416);
                }
                long long v30 = *(_OWORD *)(a2 + 432);
                *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
                *(_OWORD *)(a1 + 432) = v30;
                goto LABEL_34;
              }
              sub_1AFDCA6AC(a1 + 384);
            }
            long long v28 = *(_OWORD *)(a2 + 400);
            *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
            *(_OWORD *)(a1 + 400) = v28;
            goto LABEL_29;
          }
          sub_1AFDCA6AC(a1 + 352);
        }
        long long v26 = *(_OWORD *)(a2 + 368);
        *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
        *(_OWORD *)(a1 + 368) = v26;
        goto LABEL_24;
      }
      sub_1AFDCA6AC(a1 + 320);
    }
    long long v24 = *(_OWORD *)(a2 + 336);
    *(_OWORD *)long long v17 = *(_OWORD *)v18;
    *(_OWORD *)(a1 + 336) = v24;
    goto LABEL_19;
  }
LABEL_11:
  long long v19 = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
  *(_OWORD *)(a1 + 464) = v19;
  *(void *)(a1 + 480) = *(void *)(a2 + 480);
  long long v20 = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 400) = v20;
  long long v21 = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 432) = v21;
  long long v22 = *(_OWORD *)(a2 + 336);
  *(_OWORD *)long long v17 = *(_OWORD *)v18;
  *(_OWORD *)(a1 + 336) = v22;
  long long v23 = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 368) = v23;
LABEL_40:
  *(void *)(a1 + 488) = *(void *)(a2 + 488);
  *(unsigned char *)(a1 + 496) = *(unsigned char *)(a2 + 496);
  *(void *)(a1 + 504) = *(void *)(a2 + 504);
  *(unsigned char *)(a1 + 512) = *(unsigned char *)(a2 + 512);
  *(void *)(a1 + 520) = *(void *)(a2 + 520);
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 536) = *(void *)(a2 + 536);
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 552) = *(void *)(a2 + 552);
  *(void *)(a1 + 560) = *(void *)(a2 + 560);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 568) = *(void *)(a2 + 568);
  *(_OWORD *)(a1 + 576) = *(_OWORD *)(a2 + 576);
  *(unsigned char *)(a1 + 592) = *(unsigned char *)(a2 + 592);
  *(unsigned char *)(a1 + 593) = *(unsigned char *)(a2 + 593);
  *(void *)(a1 + 600) = *(void *)(a2 + 600);
  *(void *)(a1 + 608) = *(void *)(a2 + 608);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 616) = *(unsigned char *)(a2 + 616);
LABEL_41:
  if (*(void *)(a1 + 624) != 1)
  {
    uint64_t v33 = *(void *)(a2 + 624);
    if (v33 != 1)
    {
      *(void *)(a1 + 624) = v33;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 632) = *(void *)(a2 + 632);
      *(unsigned char *)(a1 + 640) = *(unsigned char *)(a2 + 640);
      *(void *)(a1 + 648) = *(void *)(a2 + 648);
      *(unsigned char *)(a1 + 656) = *(unsigned char *)(a2 + 656);
      *(void *)(a1 + 664) = *(void *)(a2 + 664);
      *(unsigned char *)(a1 + 672) = *(unsigned char *)(a2 + 672);
      *(unsigned char *)(a1 + 688) = *(unsigned char *)(a2 + 688);
      *(void *)(a1 + 680) = *(void *)(a2 + 680);
      goto LABEL_46;
    }
    sub_1AFF8F1C4(a1 + 624);
  }
  long long v34 = *(_OWORD *)(a2 + 672);
  *(_OWORD *)(a1 + 656) = *(_OWORD *)(a2 + 656);
  *(_OWORD *)(a1 + 672) = v34;
  *(unsigned char *)(a1 + 688) = *(unsigned char *)(a2 + 688);
  long long v35 = *(_OWORD *)(a2 + 640);
  *(_OWORD *)(a1 + 624) = *(_OWORD *)(a2 + 624);
  *(_OWORD *)(a1 + 640) = v35;
LABEL_46:
  *(void *)(a1 + 696) = *(void *)(a2 + 696);
  *(void *)(a1 + 704) = *(void *)(a2 + 704);
  swift_bridgeObjectRelease();
  long long v36 = *(_OWORD *)(a2 + 728);
  *(_OWORD *)(a1 + 712) = *(_OWORD *)(a2 + 712);
  *(_OWORD *)(a1 + 728) = v36;
  *(unsigned char *)(a1 + 744) = *(unsigned char *)(a2 + 744);
  *(void *)(a1 + 752) = *(void *)(a2 + 752);
  *(void *)(a1 + 760) = *(void *)(a2 + 760);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 768) = *(void *)(a2 + 768);
  *(void *)(a1 + 776) = *(void *)(a2 + 776);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 784) = *(void *)(a2 + 784);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LanguageConfig(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 792)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LanguageConfig(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 776) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 792) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 792) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LanguageConfig()
{
  return &type metadata for LanguageConfig;
}

uint64_t getEnumTagSinglePayload for AppConfiguration.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0x7D) {
    goto LABEL_17;
  }
  if (a2 + 131 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 131) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 131;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 131;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 131;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x84;
  int v8 = v6 - 132;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AppConfiguration.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 131 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 131) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x7D) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x7C)
  {
    unsigned int v6 = ((a2 - 125) >> 8) + 1;
    *unint64_t result = a2 - 125;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFF8FB28);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 - 125;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppConfiguration.CodingKeys()
{
  return &type metadata for AppConfiguration.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for LocalizationKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFF8FC2CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalizationKeys()
{
  return &type metadata for LocalizationKeys;
}

unint64_t sub_1AFF8FC68()
{
  unint64_t result = qword_1E9AFD058;
  if (!qword_1E9AFD058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFD058);
  }
  return result;
}

unint64_t sub_1AFF8FCC0()
{
  unint64_t result = qword_1E9AFD060;
  if (!qword_1E9AFD060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFD060);
  }
  return result;
}

unint64_t sub_1AFF8FD18()
{
  unint64_t result = qword_1EB818FF0;
  if (!qword_1EB818FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818FF0);
  }
  return result;
}

unint64_t sub_1AFF8FD70()
{
  unint64_t result = qword_1EB818FE8;
  if (!qword_1EB818FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818FE8);
  }
  return result;
}

unint64_t sub_1AFF8FDC8()
{
  unint64_t result = qword_1EB819040;
  if (!qword_1EB819040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819040);
  }
  return result;
}

unint64_t sub_1AFF8FE20()
{
  unint64_t result = qword_1EB819038;
  if (!qword_1EB819038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819038);
  }
  return result;
}

uint64_t sub_1AFF8FE74(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x61626C6C61467369 && a2 == 0xEA00000000006B63;
  if (v2 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E656D7461657274 && a2 == 0xEC00000073444974 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x53746E656D676573 && a2 == 0xED00007344497465 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001AFFFC5D0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001AFFFC5F0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001AFFFC610 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001AFFFC630 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001AFFFC650 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001AFFFC680 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x80000001AFFFC6A0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001AFFFC6D0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001AFFFC6F0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000024 && a2 == 0x80000001AFFFC720 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD00000000000002BLL && a2 == 0x80000001AFFFC750 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001AFFFC780 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001AFFFC7A0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001AFFFC7C0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001AFFFC7E0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001AFFFC800 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x80000001AFFFC820 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0xD000000000000025 && a2 == 0x80000001AFFFC850 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0xD000000000000024 && a2 == 0x80000001AFFFC880 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x80000001AFFFC8B0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001AFFFC8E0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else if (a1 == 0xD000000000000024 && a2 == 0x80000001AFFFC900 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 24;
  }
  else if (a1 == 0xD000000000000028 && a2 == 0x80000001AFFFC930 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 25;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001AFFFC960 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 26;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001AFFFC980 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 27;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001AFFFC9A0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 28;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001AFFFC9C0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 29;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001AFFF52E0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 30;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000001AFFFC9E0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 31;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001AFFFCA10 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 32;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001AFFFCA30 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 33;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x80000001AFFFCA50 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 34;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001AFFFCA80 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 35;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001AFFFCAA0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 36;
  }
  else if (a1 == 0xD000000000000025 && a2 == 0x80000001AFFFCAC0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 37;
  }
  else if (a1 == 0xD00000000000002ELL && a2 == 0x80000001AFFFCAF0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 38;
  }
  else if (a1 == 0xD000000000000029 && a2 == 0x80000001AFFFCB20 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 39;
  }
  else if (a1 == 0xD000000000000029 && a2 == 0x80000001AFFFCB50 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 40;
  }
  else if (a1 == 0xD000000000000030 && a2 == 0x80000001AFFFCB80 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 41;
  }
  else if (a1 == 0xD00000000000002BLL && a2 == 0x80000001AFFFCBC0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 42;
  }
  else if (a1 == 0xD00000000000002BLL && a2 == 0x80000001AFFFCBF0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 43;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001AFFF3F10 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 44;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001AFFF3F30 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 45;
  }
  else if (a1 == 0xD00000000000002ALL && a2 == 0x80000001AFFF3F50 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 46;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001AFFFCC20 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 47;
  }
  else if (a1 == 0xD00000000000002BLL && a2 == 0x80000001AFFFCC40 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 48;
  }
  else if (a1 == 0xD000000000000033 && a2 == 0x80000001AFFFCC70 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 49;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x80000001AFFFCCB0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 50;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001AFFF3F80 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 51;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001AFFF3FA0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 52;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001AFFFCCE0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 53;
  }
  else if (a1 == 0x746E696F70646E65 && a2 == 0xEF736769666E6F43 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 54;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001AFFEE1C0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 55;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001AFFF4C90 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 56;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001AFFFCD00 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 57;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001AFFEE200 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 58;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001AFFFCD20 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 59;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001AFFFCD40 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 60;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001AFFFCD60 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 61;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001AFFFCD80 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 62;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001AFFFCDA0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 63;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001AFFFCDC0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 64;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x80000001AFFFCDE0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 65;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000001AFFFCE10 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 66;
  }
  else if (a1 == 0xD000000000000024 && a2 == 0x80000001AFFFCE40 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 67;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x80000001AFFFCE70 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 68;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000001AFFFCEA0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 69;
  }
  else if (a1 == 0xD000000000000024 && a2 == 0x80000001AFFFCED0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 70;
  }
  else if (a1 == 0xD000000000000024 && a2 == 0x80000001AFFFCF00 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 71;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x80000001AFFFCF30 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 72;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001AFFFCF60 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 73;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001AFFFCF80 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 74;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001AFFFCFA0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 75;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001AFFFCFC0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 76;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000001AFFFCFE0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 77;
  }
  else if (a1 == 0xD000000000000024 && a2 == 0x80000001AFFFD010 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 78;
  }
  else if (a1 == 0xD000000000000024 && a2 == 0x80000001AFFFD040 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 79;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001AFFFD070 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 80;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001AFFFD090 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 81;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000001AFFFD0C0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 82;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001AFFFD0F0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 83;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001AFFFD110 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 84;
  }
  else if (a1 == 0xD000000000000026 && a2 == 0x80000001AFFFD130 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 85;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001AFFFD160 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 86;
  }
  else if (a1 == 0x6F43756F59726F66 && a2 == 0xEE0044496769666ELL || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 87;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001AFFF3ED0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 88;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001AFFF3EF0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 89;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001AFFEE1A0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 90;
  }
  else if (a1 == 0x6F4349557377656ELL && a2 == 0xEC0000006769666ELL || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 91;
  }
  else if (a1 == 0x69666E6F43644169 && a2 == 0xE900000000000067 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 92;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001AFFF4020 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 93;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x80000001AFFFD190 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 94;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000001AFFF4540 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 95;
  }
  else if (a1 == 0xD000000000000027 && a2 == 0x80000001AFFFD1C0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 96;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001AFFF45A0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 97;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001AFFF45C0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 98;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001AFFFD1F0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 99;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001AFFFD210 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 100;
  }
  else if (a1 == 0xD000000000000026 && a2 == 0x80000001AFFFD230 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 101;
  }
  else if (a1 == 0xD000000000000027 && a2 == 0x80000001AFFF4D40 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 102;
  }
  else if (a1 == 0xD00000000000002CLL && a2 == 0x80000001AFFFD260 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 103;
  }
  else if (a1 == 0x506C6C4165646968 && a2 == 0xEF736C6C61777961 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 104;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001AFFF4DF0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 105;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001AFFF4E30 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 106;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001AFFFD290 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 107;
  }
  else if (a1 == 0xD00000000000002BLL && a2 == 0x80000001AFFF46E0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 108;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001AFFF4690 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 109;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001AFFFD2B0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 110;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001AFFEE220 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 111;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x80000001AFFEE240 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 112;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001AFFEE270 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 113;
  }
  else if (a1 == 0xD000000000000027 && a2 == 0x80000001AFFFD2D0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 114;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001AFFFD300 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 115;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001AFFFD320 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 116;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001AFFFD340 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 117;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001AFFFD360 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 118;
  }
  else if (a1 == 0xD000000000000026 && a2 == 0x80000001AFFFD380 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 119;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001AFFFD3B0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 120;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x80000001AFFFD3D0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 121;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001AFFFD400 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 122;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000001AFFFD420 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 123;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001AFFFD450 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 124;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001AFFFD470 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 125;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000001AFFF4CE0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 126;
  }
  else if (a1 == 0xD000000000000026 && a2 == 0x80000001AFFFD490 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 127;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001AFFFD4C0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 128;
  }
  else if (a1 == 0x43656C6369747261 && a2 == 0xED00006769666E6FLL || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 129;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000001AFFFD4F0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 130;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001AFFFD520)
  {
    swift_bridgeObjectRelease();
    return 131;
  }
  else
  {
    char v6 = sub_1AFFCBCE8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4294967171;
    }
    else {
      return 4294967172;
    }
  }
}

unint64_t sub_1AFF92B50()
{
  unint64_t result = qword_1EB818E48;
  if (!qword_1EB818E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818E48);
  }
  return result;
}

unint64_t sub_1AFF92BA4()
{
  unint64_t result = qword_1EB819690;
  if (!qword_1EB819690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819690);
  }
  return result;
}

unint64_t sub_1AFF92BF8()
{
  unint64_t result = qword_1EB819610;
  if (!qword_1EB819610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819610);
  }
  return result;
}

unint64_t sub_1AFF92C4C()
{
  unint64_t result = qword_1EB8198E0;
  if (!qword_1EB8198E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8198E0);
  }
  return result;
}

unint64_t sub_1AFF92CA0()
{
  unint64_t result = qword_1EB819808;
  if (!qword_1EB819808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819808);
  }
  return result;
}

uint64_t sub_1AFF92CF4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 80);
  uint64_t v12 = *(void *)(a1 + 88);
  uint64_t v32 = *(void *)(a1 + 120);
  uint64_t v33 = *(void *)(a1 + 112);
  uint64_t v30 = *(void *)(a1 + 136);
  uint64_t v31 = *(void *)(a1 + 128);
  uint64_t v28 = *(void *)(a1 + 152);
  uint64_t v29 = *(void *)(a1 + 144);
  uint64_t v26 = *(void *)(a1 + 168);
  uint64_t v27 = *(void *)(a1 + 160);
  long long v24 = *(_OWORD *)(a1 + 192);
  long long v25 = *(_OWORD *)(a1 + 176);
  long long v23 = *(_OWORD *)(a1 + 208);
  long long v22 = *(_OWORD *)(a1 + 224);
  long long v20 = *(_OWORD *)(a1 + 256);
  long long v21 = *(_OWORD *)(a1 + 240);
  long long v19 = *(_OWORD *)(a1 + 272);
  long long v18 = *(_OWORD *)(a1 + 288);
  long long v15 = *(_OWORD *)(a1 + 320);
  long long v16 = *(_OWORD *)(a1 + 304);
  long long v13 = *(_OWORD *)(a1 + 352);
  long long v14 = *(_OWORD *)(a1 + 336);
  long long v11 = *(_OWORD *)(a1 + 368);
  long long v9 = *(_OWORD *)(a1 + 400);
  long long v10 = *(_OWORD *)(a1 + 384);
  long long v7 = *(_OWORD *)(a1 + 432);
  long long v8 = *(_OWORD *)(a1 + 416);
  long long v5 = *(_OWORD *)(a1 + 464);
  long long v6 = *(_OWORD *)(a1 + 448);
  long long v4 = *(_OWORD *)(a1 + 480);
  uint64_t v17 = *(void *)(a1 + 624);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1AFF8975C(v2, v12);
  sub_1AFF897A0(v33, v32, v31, v30, v29, v28, v27, v26, v25, *((uint64_t *)&v25 + 1), v24, *((uint64_t *)&v24 + 1), v23, *((uint64_t *)&v23 + 1), v22, *((uint64_t *)&v22 + 1), v21, *((uint64_t *)&v21 + 1), v20,
    *((uint64_t *)&v20 + 1),
    v19,
    *((uint64_t *)&v19 + 1),
    v18,
    *((uint64_t *)&v18 + 1),
    v16,
    *((uint64_t *)&v16 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v11,
    *((uint64_t *)&v11 + 1),
    v10,
    *((uint64_t *)&v10 + 1),
    v9,
    *((uint64_t *)&v9 + 1),
    v8,
    *((uint64_t *)&v8 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v4);
  sub_1AFF899D4(v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

void sub_1AFF92FF4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

void sub_1AFF9305C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1AFF930C0()
{
  unint64_t result = qword_1EB819588;
  if (!qword_1EB819588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819588);
  }
  return result;
}

unint64_t sub_1AFF93114()
{
  unint64_t result = qword_1EB819830;
  if (!qword_1EB819830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819830);
  }
  return result;
}

unint64_t sub_1AFF93168()
{
  unint64_t result = qword_1EB8197B0;
  if (!qword_1EB8197B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8197B0);
  }
  return result;
}

unint64_t sub_1AFF931BC()
{
  unint64_t result = qword_1EB818E98;
  if (!qword_1EB818E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818E98);
  }
  return result;
}

unint64_t sub_1AFF93210()
{
  unint64_t result = qword_1EB819378;
  if (!qword_1EB819378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819378);
  }
  return result;
}

void sub_1AFF93264(void *a1)
{
}

uint64_t getEnumTagSinglePayload for LanguageConfig.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF4) {
    goto LABEL_17;
  }
  if (a2 + 12 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 12) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 12;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xD;
  int v8 = v6 - 13;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for LanguageConfig.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *unint64_t result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFF933C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 12;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LanguageConfig.CodingKeys()
{
  return &type metadata for LanguageConfig.CodingKeys;
}

unint64_t sub_1AFF93404()
{
  unint64_t result = qword_1E9AFD070[0];
  if (!qword_1E9AFD070[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9AFD070);
  }
  return result;
}

unint64_t sub_1AFF9345C()
{
  unint64_t result = qword_1EB818E58;
  if (!qword_1EB818E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818E58);
  }
  return result;
}

unint64_t sub_1AFF934B4()
{
  unint64_t result = qword_1EB818E50;
  if (!qword_1EB818E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818E50);
  }
  return result;
}

uint64_t sub_1AFF93508()
{
  unint64_t v0 = sub_1AFFCBA78();
  swift_bridgeObjectRelease();
  if (v0 >= 0xD) {
    return 13;
  }
  else {
    return v0;
  }
}

uint64_t sub_1AFF93554()
{
  uint64_t result = type metadata accessor for YahooBaseResponse.Query();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1AFF935FC(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + ((v6 + 8) & ~v6) + 7) & 0xFFFFFFFFFFFFFFF8)
       + 16;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1AFF93754);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if ((v5 & 0x80000000) != 0) {
    return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v6 + 8) & ~v6);
  }
  uint64_t v17 = *(void *)a1;
  if (*(void *)a1 >= 0xFFFFFFFFuLL) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_1AFF93768(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  size_t v11 = ((v10 + ((v9 + 8) & ~v9) + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v8 >= a3)
  {
    int v15 = 0;
    int v16 = a2 - v8;
    if (a2 <= v8)
    {
LABEL_17:
      switch(v15)
      {
        case 1:
          a1[v11] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)&a1[v11] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_56;
        case 4:
          *(_DWORD *)&a1[v11] = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            if ((v7 & 0x80000000) != 0)
            {
              long long v20 = (unsigned char *)((unint64_t)&a1[v9 + 8] & ~v9);
              if (v7 >= a2)
              {
                long long v24 = *(void (**)(unint64_t))(v6 + 56);
                unint64_t v25 = (unint64_t)&a1[v9 + 8] & ~v9;
                v24(v25);
              }
              else
              {
                if (v10 <= 3) {
                  int v21 = ~(-1 << (8 * v10));
                }
                else {
                  int v21 = -1;
                }
                if (v10)
                {
                  int v22 = v21 & (~v7 + a2);
                  if (v10 <= 3) {
                    int v23 = v10;
                  }
                  else {
                    int v23 = 4;
                  }
                  bzero(v20, v10);
                  switch(v23)
                  {
                    case 2:
                      *(_WORD *)long long v20 = v22;
                      break;
                    case 3:
                      *(_WORD *)long long v20 = v22;
                      v20[2] = BYTE2(v22);
                      break;
                    case 4:
                      *(_DWORD *)long long v20 = v22;
                      break;
                    default:
                      *long long v20 = v22;
                      break;
                  }
                }
              }
            }
            else
            {
              if ((a2 & 0x80000000) != 0) {
                uint64_t v19 = a2 ^ 0x80000000;
              }
              else {
                uint64_t v19 = a2 - 1;
              }
              *(void *)a1 = v19;
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v12 = a3 - v8;
    if (((v10 + ((v9 + 8) & ~v9) + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      unsigned int v13 = v12 + 1;
    }
    else {
      unsigned int v13 = 2;
    }
    if (v13 >= 0x10000) {
      int v14 = 4;
    }
    else {
      int v14 = 2;
    }
    if (v13 < 0x100) {
      int v14 = 1;
    }
    if (v13 >= 2) {
      int v15 = v14;
    }
    else {
      int v15 = 0;
    }
    int v16 = a2 - v8;
    if (a2 <= v8) {
      goto LABEL_17;
    }
  }
  if (((v10 + ((v9 + 8) & ~v9) + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    int v17 = v16;
  }
  else {
    int v17 = 1;
  }
  if (((v10 + ((v9 + 8) & ~v9) + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    int v18 = ~v8 + a2;
    bzero(a1, v11);
    *(_DWORD *)a1 = v18;
  }
  switch(v15)
  {
    case 1:
      a1[v11] = v17;
      break;
    case 2:
      *(_WORD *)&a1[v11] = v17;
      break;
    case 3:
LABEL_56:
      __break(1u);
      JUMPOUT(0x1AFF939ECLL);
    case 4:
      *(_DWORD *)&a1[v11] = v17;
      break;
    default:
      return;
  }
}

uint64_t type metadata accessor for YahooBaseResponse()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for YahooBaseResponse.Query()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1AFF93A54()
{
  uint64_t result = type metadata accessor for YahooBaseResponse.QueryResults();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1AFF93AEC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = ((v6 + 8) & ~v6) + *(void *)(v5 + 64);
  int v8 = *(_DWORD *)(v5 + 80) & 0x100000;
  uint64_t v9 = *a2;
  *a1 = *a2;
  if (v6 > 7 || v8 != 0 || ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    sub_1AFFC8E48();
  }
  else
  {
    uint64_t v13 = ((unint64_t)a1 + v6 + 8) & ~v6;
    uint64_t v14 = ((unint64_t)a2 + v6 + 8) & ~v6;
    int v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    sub_1AFFC8E38();
    v15(v13, v14, v4);
    int v16 = (void *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
    int v17 = (void *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
    *int v16 = *v17;
    v16[1] = v17[1];
    sub_1AFFC8E38();
  }
  return a1;
}

uint64_t sub_1AFF93C34(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 8))((*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80)
                                                                                            + 8
                                                                                            + a1) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80));

  return swift_bridgeObjectRelease();
}

void *sub_1AFF93CD0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  uint64_t v7 = *(void *)(v5 - 8) + 16;
  uint64_t v8 = *(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t v9 = ((unint64_t)a2 + v8 + 8) & ~v8;
  sub_1AFFC8E38();
  v6(((unint64_t)a1 + v8 + 8) & ~v8, v9, v5);
  uint64_t v10 = ((v8 + 8) & ~v8) + *(void *)(v7 + 48) + 7;
  size_t v11 = (void *)(((unint64_t)a1 + v10) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v12 = (void *)(((unint64_t)a2 + v10) & 0xFFFFFFFFFFFFFFF8);
  *size_t v11 = *v12;
  v11[1] = v12[1];
  sub_1AFFC8E38();
  return a1;
}

void *sub_1AFF93DA8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v7 = v6 + 24;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, unint64_t))(v6 + 24))(((unint64_t)a1 + v8 + 8) & ~v8, ((unint64_t)a2 + v8 + 8) & ~v8);
  uint64_t v9 = ((v8 + 8) & ~v8) + *(void *)(v7 + 40) + 7;
  uint64_t v10 = (void *)(((unint64_t)a1 + v9) & 0xFFFFFFFFFFFFFFF8);
  size_t v11 = (void *)(((unint64_t)a2 + v9) & 0xFFFFFFFFFFFFFFF8);
  void *v10 = *v11;
  v10[1] = v11[1];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_1AFF93E80(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = v5 + 32;
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  (*(void (**)(unint64_t, unint64_t))(v5 + 32))(((unint64_t)a1 + v7 + 8) & ~v7, ((unint64_t)a2 + v7 + 8) & ~v7);
  uint64_t v8 = ((v7 + 8) & ~v7) + *(void *)(v6 + 32) + 7;
  *(_OWORD *)(((unint64_t)a1 + v8) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)a2 + v8) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

void *sub_1AFF93F2C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v7 = v6 + 40;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, unint64_t))(v6 + 40))(((unint64_t)a1 + v8 + 8) & ~v8, ((unint64_t)a2 + v8 + 8) & ~v8);
  uint64_t v9 = ((v8 + 8) & ~v8) + *(void *)(v7 + 24) + 7;
  uint64_t v10 = (void *)(((unint64_t)a1 + v9) & 0xFFFFFFFFFFFFFFF8);
  size_t v11 = (void *)(((unint64_t)a2 + v9) & 0xFFFFFFFFFFFFFFF8);
  void *v10 = *v11;
  v10[1] = v11[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AFF93FF4(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + ((v6 + 8) & ~v6) + 7) & 0xFFFFFFFFFFFFFFF8)
       + 16;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1AFF9414CLL);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if ((v5 & 0x80000000) != 0) {
    return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v6 + 8) & ~v6);
  }
  uint64_t v17 = *(void *)a1;
  if (*(void *)a1 >= 0xFFFFFFFFuLL) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_1AFF94160(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  size_t v11 = ((v10 + ((v9 + 8) & ~v9) + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v8 >= a3)
  {
    int v15 = 0;
    int v16 = a2 - v8;
    if (a2 <= v8)
    {
LABEL_17:
      switch(v15)
      {
        case 1:
          a1[v11] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)&a1[v11] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_56;
        case 4:
          *(_DWORD *)&a1[v11] = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            if ((v7 & 0x80000000) != 0)
            {
              long long v20 = (unsigned char *)((unint64_t)&a1[v9 + 8] & ~v9);
              if (v7 >= a2)
              {
                long long v24 = *(void (**)(unint64_t))(v6 + 56);
                unint64_t v25 = (unint64_t)&a1[v9 + 8] & ~v9;
                v24(v25);
              }
              else
              {
                if (v10 <= 3) {
                  int v21 = ~(-1 << (8 * v10));
                }
                else {
                  int v21 = -1;
                }
                if (v10)
                {
                  int v22 = v21 & (~v7 + a2);
                  if (v10 <= 3) {
                    int v23 = v10;
                  }
                  else {
                    int v23 = 4;
                  }
                  bzero(v20, v10);
                  switch(v23)
                  {
                    case 2:
                      *(_WORD *)long long v20 = v22;
                      break;
                    case 3:
                      *(_WORD *)long long v20 = v22;
                      v20[2] = BYTE2(v22);
                      break;
                    case 4:
                      *(_DWORD *)long long v20 = v22;
                      break;
                    default:
                      *long long v20 = v22;
                      break;
                  }
                }
              }
            }
            else
            {
              if ((a2 & 0x80000000) != 0) {
                uint64_t v19 = a2 ^ 0x80000000;
              }
              else {
                uint64_t v19 = a2 - 1;
              }
              *(void *)a1 = v19;
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v12 = a3 - v8;
    if (((v10 + ((v9 + 8) & ~v9) + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      unsigned int v13 = v12 + 1;
    }
    else {
      unsigned int v13 = 2;
    }
    if (v13 >= 0x10000) {
      int v14 = 4;
    }
    else {
      int v14 = 2;
    }
    if (v13 < 0x100) {
      int v14 = 1;
    }
    if (v13 >= 2) {
      int v15 = v14;
    }
    else {
      int v15 = 0;
    }
    int v16 = a2 - v8;
    if (a2 <= v8) {
      goto LABEL_17;
    }
  }
  if (((v10 + ((v9 + 8) & ~v9) + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    int v17 = v16;
  }
  else {
    int v17 = 1;
  }
  if (((v10 + ((v9 + 8) & ~v9) + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    int v18 = ~v8 + a2;
    bzero(a1, v11);
    *(_DWORD *)a1 = v18;
  }
  switch(v15)
  {
    case 1:
      a1[v11] = v17;
      break;
    case 2:
      *(_WORD *)&a1[v11] = v17;
      break;
    case 3:
LABEL_56:
      __break(1u);
      JUMPOUT(0x1AFF943E4);
    case 4:
      *(_DWORD *)&a1[v11] = v17;
      break;
    default:
      return;
  }
}

uint64_t type metadata accessor for YahooBaseResponse.QueryResults()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1AFF94434()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1AFF944D4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  unint64_t v7 = ((v6 + 8) & ~v6) + *(void *)(v5 + 64);
  int v8 = *(_DWORD *)(v5 + 80) & 0x100000;
  uint64_t v9 = *a2;
  *a1 = *a2;
  if (v6 > 7 || v8 != 0 || v7 > 0x18)
  {
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    sub_1AFFC8E48();
  }
  else
  {
    uint64_t v12 = ((unint64_t)a1 + v6 + 8) & ~v6;
    uint64_t v13 = ((unint64_t)a2 + v6 + 8) & ~v6;
    int v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    sub_1AFFC8E38();
    v14(v12, v13, v4);
  }
  return a1;
}

uint64_t sub_1AFF945D8(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = *(uint64_t (**)(unint64_t))(v4 + 8);
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);

  return v5(v6);
}

void *sub_1AFF9464C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  uint64_t v6 = *(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v7 = ((unint64_t)a1 + v6 + 8) & ~v6;
  uint64_t v8 = ((unint64_t)a2 + v6 + 8) & ~v6;
  sub_1AFFC8E38();
  v5(v7, v8, v4);
  return a1;
}

void *sub_1AFF946DC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

void *sub_1AFF9476C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

void *sub_1AFF947DC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

uint64_t sub_1AFF94864(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v9 = ((v6 + 8) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  char v10 = 8 * v9;
  if (v9 <= 3)
  {
    unsigned int v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_23:
      if ((v5 & 0x80000000) != 0) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v6 + 8) & ~v6);
      }
      uint64_t v15 = *(void *)a1;
      if (*(void *)a1 >= 0xFFFFFFFFuLL) {
        LODWORD(v15) = -1;
      }
      return (v15 + 1);
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v9 | v14) + 1;
}

void sub_1AFF94A04(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  size_t v11 = ((v9 + 8) & ~v9) + v10;
  BOOL v12 = a3 >= v8;
  unsigned int v13 = a3 - v8;
  if (v13 != 0 && v12)
  {
    if (v11 <= 3)
    {
      unsigned int v17 = ((v13 + ~(-1 << (8 * v11))) >> (8 * v11)) + 1;
      if (HIWORD(v17))
      {
        int v14 = 4;
      }
      else if (v17 >= 0x100)
      {
        int v14 = 2;
      }
      else
      {
        int v14 = v17 > 1;
      }
    }
    else
    {
      int v14 = 1;
    }
  }
  else
  {
    int v14 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v15 = ~v8 + a2;
    if (v11 < 4)
    {
      int v16 = (v15 >> (8 * v11)) + 1;
      if (v11)
      {
        int v18 = v15 & ~(-1 << (8 * v11));
        bzero(a1, v11);
        if (v11 == 3)
        {
          *(_WORD *)a1 = v18;
          a1[2] = BYTE2(v18);
        }
        else if (v11 == 2)
        {
          *(_WORD *)a1 = v18;
        }
        else
        {
          *a1 = v18;
        }
      }
    }
    else
    {
      bzero(a1, v11);
      *(_DWORD *)a1 = v15;
      int v16 = 1;
    }
    switch(v14)
    {
      case 1:
        a1[v11] = v16;
        return;
      case 2:
        *(_WORD *)&a1[v11] = v16;
        return;
      case 3:
        goto LABEL_55;
      case 4:
        *(_DWORD *)&a1[v11] = v16;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_55:
      __break(1u);
      JUMPOUT(0x1AFF94CF4);
    case 4:
      *(_DWORD *)&a1[v11] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if ((v7 & 0x80000000) != 0)
        {
          long long v20 = (unsigned char *)((unint64_t)&a1[v9 + 8] & ~v9);
          if (v7 >= a2)
          {
            long long v24 = *(void (**)(unint64_t))(v6 + 56);
            unint64_t v25 = (unint64_t)&a1[v9 + 8] & ~v9;
            v24(v25);
          }
          else
          {
            if (v10 <= 3) {
              int v21 = ~(-1 << (8 * v10));
            }
            else {
              int v21 = -1;
            }
            if (v10)
            {
              int v22 = v21 & (~v7 + a2);
              if (v10 <= 3) {
                int v23 = v10;
              }
              else {
                int v23 = 4;
              }
              bzero(v20, v10);
              switch(v23)
              {
                case 2:
                  *(_WORD *)long long v20 = v22;
                  break;
                case 3:
                  *(_WORD *)long long v20 = v22;
                  v20[2] = BYTE2(v22);
                  break;
                case 4:
                  *(_DWORD *)long long v20 = v22;
                  break;
                default:
                  *long long v20 = v22;
                  break;
              }
            }
          }
        }
        else
        {
          if ((a2 & 0x80000000) != 0) {
            uint64_t v19 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v19 = a2 - 1;
          }
          *(void *)a1 = v19;
        }
      }
      return;
  }
}

uint64_t sub_1AFF94D2C(uint64_t a1)
{
  return a1;
}

BOOL sub_1AFF94D58(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_1AFF94D68()
{
  return sub_1AFFCBE08();
}

uint64_t sub_1AFF94D90(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73746C75736572 && a2 == 0xE700000000000000;
  if (v2 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64657461657263 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1AFFCBCE8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1AFF94E84()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFF94ECC(char a1)
{
  if (a1) {
    return 0x64657461657263;
  }
  else {
    return 0x73746C75736572;
  }
}

uint64_t sub_1AFF94EFC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t Results = type metadata accessor for YahooBaseResponse.QueryResults();
  uint64_t v24 = *(void *)(Results - 8);
  uint64_t v25 = Results;
  MEMORY[0x1F4188790](Results);
  uint64_t v26 = (char *)&v21 - v4;
  type metadata accessor for YahooBaseResponse.Query.CodingKeys();
  swift_getWitnessTable();
  uint64_t v27 = sub_1AFFCBB78();
  uint64_t v23 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  char v6 = (char *)&v21 - v5;
  uint64_t v7 = type metadata accessor for YahooBaseResponse.Query();
  uint64_t v21 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v21 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = v28;
  sub_1AFFCBE68();
  if (v10) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  size_t v11 = v9;
  uint64_t v12 = v23;
  uint64_t v13 = v24;
  char v30 = 0;
  uint64_t v14 = v25;
  swift_getWitnessTable();
  sub_1AFFCBB58();
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v11, v26, v14);
  char v29 = 1;
  uint64_t v15 = sub_1AFFCBAA8();
  uint64_t v17 = v16;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v6, v27);
  int v18 = (uint64_t *)&v11[*(int *)(v7 + 36)];
  uint64_t *v18 = v15;
  v18[1] = v17;
  uint64_t v19 = v21;
  (*(void (**)(uint64_t, char *, uint64_t))(v21 + 16))(v22, v11, v7);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v11, v7);
}

BOOL sub_1AFF95298()
{
  uint64_t v0 = sub_1AFFCBA78();
  swift_bridgeObjectRelease();
  return v0 != 0;
}

BOOL sub_1AFF952E0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1AFF94D58(*a1, *a2);
}

uint64_t sub_1AFF952F4()
{
  return sub_1AFF94E84();
}

uint64_t sub_1AFF95304()
{
  return sub_1AFF94D68();
}

uint64_t sub_1AFF95314()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFF9535C()
{
  return sub_1AFF94ECC(*v0);
}

uint64_t sub_1AFF9536C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1AFF94D90(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AFF9539C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFE08578();
  *a1 = result;
  return result;
}

uint64_t sub_1AFF953C8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1AFF9541C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t sub_1AFF95470@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1AFF94EFC(a1, a2);
}

uint64_t sub_1AFF95490(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1C8];

  return MEMORY[0x1F4185BB0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1AFF95504(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x1E4FBB1B0];

  return MEMORY[0x1F4183DE0](a1, a2, WitnessTable, v5);
}

uint64_t sub_1AFF95570(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1B0];

  return MEMORY[0x1F4183DF0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1AFF955E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1B0];

  return MEMORY[0x1F4183DE8](a1, a2, a3, WitnessTable, v7);
}

BOOL sub_1AFF95650@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = sub_1AFF95298();
  *a1 = result;
  return result;
}

void sub_1AFF95688(void *a1@<X8>)
{
  *a1 = 1835365481;
  a1[1] = 0xE400000000000000;
}

uint64_t sub_1AFF9569C()
{
  return 1835365481;
}

BOOL sub_1AFF956AC@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = sub_1AFF95298();
  *a1 = result;
  return result;
}

uint64_t sub_1AFF956DC(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1AFF95730(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t sub_1AFF95784@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v42 = a4;
  uint64_t v7 = type metadata accessor for YahooBaseResponse.Item();
  uint64_t v8 = sub_1AFFCB658();
  uint64_t v38 = *(void *)(v8 - 8);
  uint64_t v39 = v8;
  MEMORY[0x1F4188790](v8);
  long long v40 = (char *)&v32 - v9;
  uint64_t v45 = v7;
  uint64_t v46 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v10);
  long long v37 = (char *)&v32 - v11;
  type metadata accessor for YahooBaseResponse.QueryResults.CodingKeys();
  swift_getWitnessTable();
  uint64_t v47 = sub_1AFFCBB78();
  uint64_t v41 = *(void *)(v47 - 8);
  MEMORY[0x1F4188790](v47);
  uint64_t v13 = (char *)&v32 - v12;
  uint64_t v43 = a3;
  uint64_t Results = type metadata accessor for YahooBaseResponse.QueryResults();
  uint64_t v36 = *(void *)(Results - 8);
  MEMORY[0x1F4188790](Results);
  uint64_t v16 = (char *)&v32 - v15;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  long long v44 = v13;
  uint64_t v17 = v48;
  sub_1AFFCBE68();
  if (v17) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v33 = Results;
  uint64_t v34 = a2;
  long long v48 = v16;
  uint64_t v19 = v42;
  long long v35 = a1;
  uint64_t v20 = v45;
  sub_1AFFCB288();
  uint64_t WitnessTable = swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v21 = v44;
  sub_1AFFCBB58();
  uint64_t v22 = v50;
  *long long v48 = v50;
  uint64_t v23 = v41;
  uint64_t v50 = v22;
  swift_getWitnessTable();
  uint64_t v24 = v40;
  sub_1AFFCB3F8();
  uint64_t v25 = v46;
  uint64_t v26 = v19;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v24, 1, v20) == 1)
  {
    (*(void (**)(char *, uint64_t))(v38 + 8))(v24, v39);
    type metadata accessor for YahooBaseResponse.Errors();
    swift_getWitnessTable();
    swift_allocError();
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v21, v47);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
    return swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v21, v47);
    uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
    uint64_t v28 = v37;
    v27(v37, v24, v20);
    uint64_t v29 = v33;
    char v30 = v48;
    v27((char *)v48 + *(int *)(v33 + 36), v28, v20);
    uint64_t v31 = v36;
    (*(void (**)(uint64_t, void *, uint64_t))(v36 + 16))(v26, v30, v29);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
    return (*(uint64_t (**)(void *, uint64_t))(v31 + 8))(v30, v29);
  }
}

uint64_t sub_1AFF95D6C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x65736E6F70736572 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1AFFCBCE8();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1AFF95DF4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v19 = a4;
  uint64_t v22 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v23 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for YahooBaseResponse.Item.CodingKeys();
  swift_getWitnessTable();
  uint64_t v24 = sub_1AFFCBB78();
  uint64_t v20 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v9 = (char *)&v17 - v8;
  uint64_t v21 = a3;
  uint64_t v10 = type metadata accessor for YahooBaseResponse.Item();
  uint64_t v18 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v17 - v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v13 = v25;
  sub_1AFFCBE68();
  if (!v13)
  {
    uint64_t v25 = v10;
    uint64_t v14 = v20;
    uint64_t v15 = v22;
    sub_1AFFCBB58();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v24);
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v23, a2);
    (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v19, v12, v25);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1AFF960C8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x7972657571 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1AFFCBCE8();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1AFF96148@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v3 = type metadata accessor for YahooBaseResponse.Query();
  uint64_t v23 = *(void *)(v3 - 8);
  uint64_t v24 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v25 = (char *)&v18 - v4;
  type metadata accessor for YahooBaseResponse.CodingKeys();
  swift_getWitnessTable();
  uint64_t v5 = sub_1AFFCBB78();
  uint64_t v21 = *(void *)(v5 - 8);
  uint64_t v22 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v18 - v6;
  uint64_t v8 = type metadata accessor for YahooBaseResponse();
  uint64_t v19 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v18 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v11 = v26;
  sub_1AFFCBE68();
  if (!v11)
  {
    uint64_t v18 = v10;
    uint64_t v26 = v8;
    uint64_t v12 = v21;
    uint64_t v14 = v23;
    uint64_t v13 = v24;
    swift_getWitnessTable();
    uint64_t v15 = v22;
    sub_1AFFCBB58();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v15);
    uint64_t v16 = v18;
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v18, v25, v13);
    (*(void (**)(uint64_t, char *, uint64_t))(v19 + 32))(v20, v16, v26);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1AFF9644C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1AFF95784(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t sub_1AFF9646C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1AFF95D6C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1AFF964A0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1AFF964F4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t sub_1AFF96548@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1AFF95DF4(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t sub_1AFF96568()
{
  return 0x7972657571;
}

uint64_t sub_1AFF9657C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1AFF960C8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1AFF965B0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFD4528C();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1AFF965E0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1AFF96634(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t sub_1AFF96688@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1AFF96148(a1, a2);
}

uint64_t type metadata accessor for YahooBaseResponse.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for YahooBaseResponse.Query.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for YahooBaseResponse.Item()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for YahooBaseResponse.QueryResults.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for YahooBaseResponse.Errors()
{
  return __swift_instantiateGenericMetadata();
}

unsigned char *sub_1AFF96724(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFF967F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_1AFF96818()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1AFF968A8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7
    && *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x18uLL
    && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    uint64_t v8 = *a2;
    *int v3 = *a2;
    int v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    sub_1AFFC8E48();
  }
  return v3;
}

uint64_t sub_1AFF96960(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_1AFF969B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_1AFF96A00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_1AFF96A50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_1AFF96AA0(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_1AFF96BFC(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x1AFF96E14);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t sub_1AFF96E3C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1AFF96E58()
{
  return swift_getWitnessTable();
}

uint64_t sub_1AFF96E74()
{
  return swift_getWitnessTable();
}

uint64_t sub_1AFF96E90()
{
  return swift_getWitnessTable();
}

uint64_t sub_1AFF96EAC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1AFF96EC8()
{
  return swift_getWitnessTable();
}

uint64_t sub_1AFF96EE4()
{
  return swift_getWitnessTable();
}

uint64_t sub_1AFF96F00()
{
  return swift_getWitnessTable();
}

uint64_t sub_1AFF96F1C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1AFF96F38()
{
  return swift_getWitnessTable();
}

uint64_t type metadata accessor for YahooBaseResponse.Item.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

unsigned char *sub_1AFF96F6C(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1AFF97008);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1AFF97030()
{
  return swift_getWitnessTable();
}

uint64_t sub_1AFF9704C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1AFF97068()
{
  return swift_getWitnessTable();
}

ValueMetadata *type metadata accessor for CurrencyManagerCacheKey()
{
  return &type metadata for CurrencyManagerCacheKey;
}

uint64_t sub_1AFF97098(uint64_t a1)
{
  uint64_t v63 = a1;
  sub_1AFD3141C();
  uint64_t v3 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v60 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v58 = (char *)&v49 - v6;
  sub_1AFD30DA8();
  uint64_t v64 = v7;
  MEMORY[0x1F4188790](v7);
  BOOL v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  long long v59 = (char *)&v49 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v62 = (uint64_t)&v49 - v13;
  uint64_t v14 = sub_1AFFC98F8();
  uint64_t v57 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  long long v61 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v49 - v17;
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v49 - v20;
  uint64_t v22 = sub_1AFFC9DD8();
  uint64_t v23 = *(void *)(v22 - 8);
  double v24 = MEMORY[0x1F4188790](v22);
  uint64_t v26 = (char *)&v49 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v23 + 16))(v26, v1, v22, v24);
  int v27 = (*(uint64_t (**)(char *, uint64_t))(v23 + 88))(v26, v22);
  if (v27 != *MEMORY[0x1E4FAA888])
  {
    if (v27 == *MEMORY[0x1E4FAA890])
    {
      char v48 = 1;
    }
    else if (v27 == *MEMORY[0x1E4FAA898])
    {
      type metadata accessor for CurrencyResponse();
      char v48 = sub_1AFFC9848();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v23 + 8))(v26, v22);
      char v48 = 0;
    }
    return v48 & 1;
  }
  (*(void (**)(char *, uint64_t))(v23 + 96))(v26, v22);
  sub_1AFFC9828();
  sub_1AFFC9828();
  unint64_t v28 = sub_1AFD30E0C();
  uint64_t result = sub_1AFFCADB8();
  if (result)
  {
    char v30 = v21;
    uint64_t v32 = v57;
    uint64_t v31 = v58;
    uint64_t v33 = &v58[*(int *)(v3 + 48)];
    uint64_t v56 = v9;
    uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t))(v57 + 16);
    uint64_t v52 = v34;
    long long v54 = v30;
    ((void (*)(char *))v34)(v58);
    uint64_t v51 = v33;
    long long v55 = v18;
    v34(v33, (uint64_t)v18, v14);
    uint64_t v35 = *(int *)(v3 + 48);
    uint64_t v36 = v60;
    uint64_t v50 = v3;
    long long v37 = &v60[v35];
    v34(v60, (uint64_t)v31, v14);
    v34(v37, (uint64_t)v33, v14);
    uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
    unint64_t v53 = v28;
    uint64_t v39 = (uint64_t)v59;
    v38(v59, v36, v14);
    long long v40 = *(void (**)(char *, uint64_t))(v32 + 8);
    v40(v37, v14);
    uint64_t v41 = &v36[*(int *)(v50 + 48)];
    v38(v36, v31, v14);
    v38(v41, v51, v14);
    v38((char *)(v39 + *(int *)(v64 + 36)), v41, v14);
    uint64_t v42 = v36;
    uint64_t v43 = v40;
    v40(v42, v14);
    uint64_t v44 = v62;
    sub_1AFF97CF8(v39, v62, (uint64_t (*)(void))sub_1AFD30DA8);
    uint64_t v45 = v63 + *(int *)(type metadata accessor for CurrencyResponse() + 20);
    LOBYTE(v31) = sub_1AFFCADA8();
    uint64_t v46 = v61;
    v52(v61, v45, v14);
    uint64_t v47 = (uint64_t)v56;
    sub_1AFF97938(v44, (uint64_t)v56, (uint64_t (*)(void))sub_1AFD30DA8);
    if (v31) {
      char v48 = sub_1AFFCADB8();
    }
    else {
      char v48 = 0;
    }
    sub_1AFF979A0(v47, (uint64_t (*)(void))sub_1AFD30DA8);
    v43(v46, v14);
    sub_1AFF979A0(v44, (uint64_t (*)(void))sub_1AFD30DA8);
    v43(v55, v14);
    v43(v54, v14);
    return v48 & 1;
  }
  __break(1u);
  return result;
}

unint64_t sub_1AFF976D4()
{
  unint64_t result = qword_1EB811658;
  if (!qword_1EB811658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB811658);
  }
  return result;
}

uint64_t sub_1AFF97728(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CurrencyResponse();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = a1 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a1 + 64);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t result = sub_1AFFC8E38();
  int64_t v12 = 0;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v12 << 6);
      goto LABEL_5;
    }
    int64_t v15 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v15 >= v10) {
      goto LABEL_23;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v12;
    if (!v16)
    {
      int64_t v12 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_23;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v12);
      if (!v16)
      {
        int64_t v12 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_23;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v12);
        if (!v16)
        {
          int64_t v12 = v15 + 3;
          if (v15 + 3 >= v10) {
            goto LABEL_23;
          }
          unint64_t v16 = *(void *)(v6 + 8 * v12);
          if (!v16) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v12 << 6);
LABEL_5:
    sub_1AFF97938(*(void *)(a1 + 56) + *(void *)(v3 + 72) * v14, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for CurrencyResponse);
    sub_1AFFCA158();
    uint64_t result = sub_1AFF979A0((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for CurrencyResponse);
  }
  int64_t v17 = v15 + 4;
  if (v17 >= v10)
  {
LABEL_23:
    swift_release();
    return sub_1AFFC8E38();
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v12 = v17;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v12 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v12 >= v10) {
      goto LABEL_23;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v12);
    ++v17;
    if (v16) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1AFF97938(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1AFF979A0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1AFF97A00()
{
  sub_1AFF97D60(0, &qword_1EB8115B8, (uint64_t (*)(uint64_t))type metadata accessor for CurrencyResponse, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v12 - v1;
  uint64_t v3 = type metadata accessor for CurrencyResponse();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFFCA138();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_1AFE2BCC8((uint64_t)v2);
    return sub_1AFE0529C(MEMORY[0x1E4FBC860]);
  }
  else
  {
    sub_1AFF97CF8((uint64_t)v2, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for CurrencyResponse);
    if (sub_1AFF97098((uint64_t)v6))
    {
      sub_1AFF97D60(0, &qword_1EB8117E0, (uint64_t (*)(uint64_t))sub_1AFE2C2E4, MEMORY[0x1E4FBBE00]);
      sub_1AFE2C2E4();
      unint64_t v9 = (*(unsigned __int8 *)(*(void *)(v8 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v8 - 8) + 80);
      uint64_t v10 = swift_allocObject();
      *(_OWORD *)(v10 + 16) = xmmword_1AFFD05F0;
      sub_1AFF97938((uint64_t)v6, v10 + v9, (uint64_t (*)(void))type metadata accessor for CurrencyResponse);
      unint64_t v7 = sub_1AFE0529C(v10);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
    }
    else
    {
      unint64_t v7 = sub_1AFE0529C(MEMORY[0x1E4FBC860]);
    }
    sub_1AFF979A0((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for CurrencyResponse);
  }
  return v7;
}

uint64_t sub_1AFF97CF8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1AFF97D60(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

ValueMetadata *type metadata accessor for CurrencyManagerCache()
{
  return &type metadata for CurrencyManagerCache;
}

uint64_t sub_1AFF97DD4(char *a1)
{
  return qword_1AFFE9338[*a1];
}

uint64_t sub_1AFF97DE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = sub_1AFFCABC8();
  uint64_t v22 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1AFFCAC18();
  uint64_t v12 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  unint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  *(void *)(v15 + 24) = a2;
  unint64_t v16 = (void *)swift_allocObject();
  _OWORD v16[2] = a6;
  v16[3] = sub_1AFD8173C;
  v16[4] = v15;
  aBlock[4] = sub_1AFF987D0;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1AFDB5104;
  aBlock[3] = &block_descriptor_39;
  int64_t v17 = _Block_copy(aBlock);
  sub_1AFFC8E48();
  sub_1AFFC8E38();
  sub_1AFFCABE8();
  uint64_t v23 = MEMORY[0x1E4FBC860];
  sub_1AFDA5DBC((unint64_t *)&unk_1EB819C20, MEMORY[0x1E4FBCB00]);
  uint64_t v18 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCB00];
  sub_1AFF987DC(0, (unint64_t *)&qword_1EB819DA0, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1AFF986EC((unint64_t *)&qword_1EB819DB0, (unint64_t *)&qword_1EB819DA0, v18);
  sub_1AFFCB738();
  MEMORY[0x1B3E8D920](0, v14, v11, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v11, v9);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v21);
  return swift_release();
}

uint64_t sub_1AFF9810C(uint64_t a1, void (*a2)(void *))
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2)
  {
    a2((void *)MEMORY[0x1E4FBC868]);
LABEL_23:
    return swift_bridgeObjectRelease();
  }
  sub_1AFDF461C(0, (unint64_t *)&qword_1EB81A0E0, MEMORY[0x1E4FBBE00]);
  sub_1AFFC8E38();
  uint64_t v4 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v5 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v8 = *(v5 - 1);
    uint64_t v7 = *v5;
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1AFFD05F0;
    *(void *)(v9 + 32) = v8;
    *(void *)(v9 + 40) = v7;
    uint64_t v10 = v4[2];
    swift_bridgeObjectRetain_n();
    if (v10)
    {
      sub_1AFFC8E38();
      unint64_t v11 = sub_1AFD79CC8(v8, v7);
      uint64_t v12 = MEMORY[0x1E4FBC860];
      if (v13)
      {
        uint64_t v12 = *(void *)(v4[7] + 8 * v11);
        sub_1AFFC8E38();
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v12 = MEMORY[0x1E4FBC860];
    }
    sub_1AFF0F52C(v12);
    uint64_t v14 = v9;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v17 = sub_1AFD79CC8(v8, v7);
    uint64_t v18 = v4[2];
    BOOL v19 = (v16 & 1) == 0;
    uint64_t v20 = v18 + v19;
    if (__OFADD__(v18, v19)) {
      break;
    }
    char v21 = v16;
    if (v4[3] >= v20)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v16) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_1AFEB8BB8();
        if (v21) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_1AFEB3340(v20, isUniquelyReferenced_nonNull_native);
      unint64_t v22 = sub_1AFD79CC8(v8, v7);
      if ((v21 & 1) != (v23 & 1)) {
        goto LABEL_28;
      }
      unint64_t v17 = v22;
      if (v21)
      {
LABEL_3:
        uint64_t v6 = v4[7];
        swift_bridgeObjectRelease();
        *(void *)(v6 + 8 * v17) = v14;
        goto LABEL_4;
      }
    }
    v4[(v17 >> 6) + 8] |= 1 << v17;
    double v24 = (uint64_t *)(v4[6] + 16 * v17);
    *double v24 = v8;
    v24[1] = v7;
    *(void *)(v4[7] + 8 * v17) = v14;
    uint64_t v25 = v4[2];
    BOOL v26 = __OFADD__(v25, 1);
    uint64_t v27 = v25 + 1;
    if (v26) {
      goto LABEL_27;
    }
    v4[2] = v27;
    sub_1AFFC8E38();
LABEL_4:
    v5 += 2;
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    if (!--v2)
    {
      swift_bridgeObjectRelease();
      a2(v4);
      goto LABEL_23;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  uint64_t result = sub_1AFFCBD68();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for StubFeedLookupService()
{
  return self;
}

uint64_t sub_1AFF983E0()
{
  uint64_t v0 = sub_1AFFCB4A8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1AFFCB488();
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = sub_1AFFCAC18();
  MEMORY[0x1F4188790](v5 - 8);
  v10[1] = sub_1AFD67528();
  sub_1AFFCABF8();
  uint64_t v12 = MEMORY[0x1E4FBC860];
  sub_1AFDA5DBC(&qword_1EB819E60, MEMORY[0x1E4FBCC10]);
  uint64_t v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCC10];
  sub_1AFF987DC(0, &qword_1EB819DE8, MEMORY[0x1E4FBCC10], MEMORY[0x1E4FBB320]);
  sub_1AFF986EC((unint64_t *)&qword_1EB819DF0, &qword_1EB819DE8, v6);
  sub_1AFFCB738();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FBCC58], v0);
  uint64_t v7 = sub_1AFFCB4D8();
  uint64_t v8 = v11;
  *(void *)(v11 + 16) = v7;
  return v8;
}

uint64_t sub_1AFF9865C()
{
  return sub_1AFFCA758();
}

uint64_t sub_1AFF986EC(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1AFF987DC(255, a2, a3, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AFF98750(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AFF97DE8(a1, a2, a3, a4, *(void *)(v4 + 16), *(void *)(v4 + 24));
}

uint64_t sub_1AFF98758()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1AFF98790()
{
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1AFF987D0()
{
  return sub_1AFF9810C(*(void *)(v0 + 16), *(void (**)(void *))(v0 + 24));
}

void sub_1AFF987DC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t type metadata accessor for SDSSearchService()
{
  return self;
}

uint64_t sub_1AFF98864(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_1AFFC9E18();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = &v22[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v11 = *v3;
  sub_1AFFC9EF8();
  sub_1AFD2CEB0(v11 + 16, (uint64_t)v22);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v8 + 16))(v10, a3, v7);
  uint64_t v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v23);
  double v13 = MEMORY[0x1F4188790](v12);
  uint64_t v15 = (uint64_t *)&v22[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(uint64_t *, double))(v16 + 16))(v15, v13);
  uint64_t v17 = *v15;
  sub_1AFFC8E38();
  id v18 = sub_1AFF98A38(a1, a2, v17, (uint64_t)v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  uint64_t v19 = sub_1AFFC9EC8();

  return v19;
}

id sub_1AFF98A38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for SDSBaseOperationFactory();
  v25[3] = v8;
  v25[4] = &off_1F0875070;
  v25[0] = a3;
  uint64_t v9 = (objc_class *)type metadata accessor for SDSSearchOperation();
  uint64_t v10 = (char *)objc_allocWithZone(v9);
  uint64_t v11 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v25, v8);
  double v12 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = (uint64_t *)((char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v15 + 16))(v14, v12);
  uint64_t v16 = *v14;
  v24[3] = v8;
  v24[4] = &off_1F0875070;
  v24[0] = v16;
  uint64_t v17 = &v10[qword_1E9AFCC68];
  *(void *)uint64_t v17 = a1;
  *((void *)v17 + 1) = a2;
  sub_1AFD2CEB0((uint64_t)v24, (uint64_t)&v10[qword_1E9AFCC70]);
  id v18 = &v10[qword_1E9AFCC78];
  uint64_t v19 = sub_1AFFC9E18();
  uint64_t v20 = *(void *)(v19 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v18, a4, v19);
  v23.receiver = v10;
  v23.super_class = v9;
  id v21 = objc_msgSendSuper2(&v23, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(a4, v19);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  return v21;
}

uint64_t sub_1AFF98C20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t type metadata accessor for SparklineService()
{
  return self;
}

uint64_t sub_1AFF98C58(uint64_t a1)
{
  uint64_t v3 = *v1;
  sub_1AFFC9EF8();
  __swift_project_boxed_opaque_existential_1((void *)(v3 + 16), *(void *)(v3 + 40));
  id v4 = sub_1AFDC28D4(a1);
  uint64_t v5 = sub_1AFFC9EC8();

  return v5;
}

uint64_t sub_1AFF98CC0()
{
  return *v0;
}

uint64_t sub_1AFF98CC8()
{
  if (!*v0)
  {
    if (qword_1EB819E80 == -1) {
      return sub_1AFFC9468();
    }
    goto LABEL_9;
  }
  if (*v0 == 1)
  {
    if (qword_1EB819E80 == -1) {
      return sub_1AFFC9468();
    }
    goto LABEL_9;
  }
  if (qword_1EB819E80 != -1) {
LABEL_9:
  }
    swift_once();
  return sub_1AFFC9468();
}

unint64_t sub_1AFF98EAC@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  char v2 = 3;
  if (result < 3) {
    char v2 = result;
  }
  *a2 = v2;
  return result;
}

void *sub_1AFF98EC0()
{
  return &unk_1F0870C40;
}

unint64_t sub_1AFF98ECC@<X0>(unint64_t *a1@<X0>, char *a2@<X8>)
{
  return sub_1AFF98EAC(*a1, a2);
}

unint64_t sub_1AFF98ED8()
{
  unint64_t result = qword_1E9AFD100;
  if (!qword_1E9AFD100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFD100);
  }
  return result;
}

uint64_t sub_1AFF98F2C()
{
  return sub_1AFFCB188();
}

uint64_t sub_1AFF98F8C()
{
  return sub_1AFFCB138();
}

unint64_t sub_1AFF98FE0()
{
  unint64_t result = qword_1E9AFD108;
  if (!qword_1E9AFD108)
  {
    sub_1AFF99038();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFD108);
  }
  return result;
}

void sub_1AFF99038()
{
  if (!qword_1E9AFD110)
  {
    unint64_t v0 = sub_1AFFCB288();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9AFD110);
    }
  }
}

void sub_1AFF99090(void *a1@<X8>)
{
  *a1 = &unk_1F0870CF8;
}

unsigned char *storeEnumTagSinglePayload for PriceChangeDisplay(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFF9916CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PriceChangeDisplay()
{
  return &type metadata for PriceChangeDisplay;
}

unint64_t sub_1AFF991A4()
{
  unint64_t result = qword_1E9AFD118;
  if (!qword_1E9AFD118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFD118);
  }
  return result;
}

double sub_1AFF991FC(uint32_t a1, char a2)
{
  uint32_t v4 = arc4random_uniform(a1);
  if (v4 <= 1) {
    unsigned int v5 = 1;
  }
  else {
    unsigned int v5 = v4;
  }
  double v6 = (double)v5;
  uint32_t v7 = arc4random_uniform(a1);
  if (v7 <= 1) {
    unsigned int v8 = 1;
  }
  else {
    unsigned int v8 = v7;
  }
  double v9 = v6 / (double)v8;
  if ((a2 & 1) != 0 && (arc4random_uniform(2u) & 1) == 0) {
    return -v9;
  }
  return v9;
}

uint64_t sub_1AFF9926C(uint32_t a1)
{
  LODWORD(result) = arc4random_uniform(a1);
  if (result <= 1) {
    return 1;
  }
  else {
    return result;
  }
}

int64_t sub_1AFF9928C(int64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    int64_t v1 = result;
    uint64_t v2 = MEMORY[0x1E4FBC860];
    if (result)
    {
      uint64_t v25 = MEMORY[0x1E4FBC860];
      sub_1AFD9D8F0(0, result, 0);
      uint64_t v2 = v25;
      do
      {
        id v3 = sub_1AFF9954C(1);
        if (qword_1EB810A98 != -1) {
          swift_once();
        }
        long long v22 = xmmword_1EB810D98;
        long long v23 = xmmword_1EB810DA8;
        uint64_t v24 = qword_1EB810DB8;
        long long v18 = xmmword_1EB810D58;
        long long v19 = xmmword_1EB810D68;
        long long v20 = xmmword_1EB810D78;
        long long v21 = xmmword_1EB810D88;
        long long v16 = xmmword_1EB810D38;
        long long v17 = xmmword_1EB810D48;
        sub_1AFD2D470((uint64_t)&v16);
        uint64_t v25 = v2;
        unint64_t v5 = *(void *)(v2 + 16);
        unint64_t v4 = *(void *)(v2 + 24);
        if (v5 >= v4 >> 1)
        {
          sub_1AFD9D8F0(v4 > 1, v5 + 1, 1);
          uint64_t v2 = v25;
        }
        long long v13 = v22;
        long long v14 = v23;
        uint64_t v15 = v24;
        long long v9 = v18;
        long long v10 = v19;
        long long v11 = v20;
        long long v12 = v21;
        long long v7 = v16;
        long long v8 = v17;
        id v6 = v3;
        sub_1AFD2D460((uint64_t)&v6);
        *(void *)(v2 + 16) = v5 + 1;
        sub_1AFD2CF70((uint64_t)&v6, v2 + 144 * v5 + 32);
        --v1;
      }
      while (v1);
    }
    return v2;
  }
  return result;
}

unint64_t sub_1AFF99414()
{
  return 0xD000000000000034;
}

uint64_t sub_1AFF99430()
{
  uint64_t v0 = sub_1AFFCAED8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  id v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFF99D74(0x3200000019);
  sub_1AFFCAEC8();
  uint64_t v4 = sub_1AFFCAEA8();
  unint64_t v6 = v5;
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (v6 >> 60 != 15) {
    return v4;
  }
  __break(1u);
  return result;
}

id sub_1AFF9954C(char a1)
{
  uint64_t v2 = sub_1AFFC98F8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1AFFC9938();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  long long v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F7E4A8]), sel_init);
  sub_1AFFC8978();
  sub_1AFFC9918();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  long long v11 = (void *)sub_1AFFCAE68();
  swift_bridgeObjectRelease();
  objc_msgSend(v10, sel_setArticleID_, v11);

  sub_1AFF99F6C(0x140000000ALL);
  long long v12 = (void *)sub_1AFFCAE68();
  swift_bridgeObjectRelease();
  objc_msgSend(v10, sel_setTitle_, v12);

  sub_1AFF99F6C(0x140000000ALL);
  long long v13 = (void *)sub_1AFFCAE68();
  swift_bridgeObjectRelease();
  objc_msgSend(v10, sel_setShortExcerpt_, v13);

  sub_1AFF99F6C(0x140000000ALL);
  long long v14 = (void *)sub_1AFFCAE68();
  swift_bridgeObjectRelease();
  objc_msgSend(v10, sel_setSourceName_, v14);

  sub_1AFF998A8(1);
  uint64_t v15 = (void *)sub_1AFFC9838();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  objc_msgSend(v10, sel_setPublishDate_, v15);

  sub_1AFF99F6C(0x300000001);
  long long v16 = (void *)sub_1AFFCAE68();
  swift_bridgeObjectRelease();
  objc_msgSend(v10, sel_setAccessoryText_, v16);

  if (a1)
  {
    objc_msgSend(v10, sel_setHasThumbnail_, 1);
    id v17 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for StubAssetHandle()), sel_init);
    id v18 = objc_msgSend(self, sel_headlineThumbnailWithAssetHandle_thumbnailSize_, v17, 1000.0, 1000.0);

    objc_msgSend(v10, sel_setThumbnail_, v18);
  }
  return v10;
}

uint64_t sub_1AFF998A8(uint64_t a1)
{
  uint64_t v2 = sub_1AFFC98F8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v12 - v7;
  uint64_t result = sub_1AFFC98E8();
  if (__OFSUB__(0, a1))
  {
    __break(1u);
    goto LABEL_8;
  }
  if ((unsigned __int128)(-a1 * (__int128)86400) >> 64 != (-86400 * a1) >> 63)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  sub_1AFFC9828();
  uint64_t result = sub_1AFFC97B8();
  if ((~*(void *)&v10 & 0x7FF0000000000000) == 0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v10 <= -1.0)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (v10 < 4294967300.0)
  {
    arc4random_uniform(v10);
    sub_1AFFC9828();
    long long v11 = *(void (**)(char *, uint64_t))(v3 + 8);
    v11(v5, v2);
    return ((uint64_t (*)(char *, uint64_t))v11)(v8, v2);
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1AFF99B24()
{
  sub_1AFDE6658(*(void *)(v0 + 16), *(void *)(v0 + 24));
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1AFF99D74(uint64_t a1)
{
  uint32_t v1 = a1;
  uint32_t v2 = arc4random_uniform(HIDWORD(a1));
  if (v2 <= v1) {
    int64_t v3 = v1;
  }
  else {
    int64_t v3 = v2;
  }
  if (v3)
  {
    uint64_t v13 = MEMORY[0x1E4FBC860];
    sub_1AFD9DA10(0, v3, 0);
    while (1)
    {
      unint64_t v4 = sub_1AFFCAF78();
      if ((v4 & 0x8000000000000000) != 0 || HIDWORD(v4)) {
        break;
      }
      arc4random_uniform(v4);
      sub_1AFFCAF98();
      uint64_t v5 = sub_1AFFCB028();
      uint64_t v7 = v6;
      unint64_t v9 = *(void *)(v13 + 16);
      unint64_t v8 = *(void *)(v13 + 24);
      if (v9 >= v8 >> 1) {
        sub_1AFD9DA10(v8 > 1, v9 + 1, 1);
      }
      *(void *)(v13 + 16) = v9 + 1;
      uint64_t v10 = v13 + 16 * v9;
      *(void *)(v10 + 32) = v5;
      *(void *)(v10 + 40) = v7;
      if (!--v3) {
        goto LABEL_11;
      }
    }
    uint64_t result = sub_1AFFCB998();
    __break(1u);
  }
  else
  {
LABEL_11:
    sub_1AFD3ABD0();
    sub_1AFD371B8();
    uint64_t v11 = sub_1AFFCAD88();
    swift_bridgeObjectRelease();
    return v11;
  }
  return result;
}

uint64_t sub_1AFF99F6C(uint64_t a1)
{
  uint32_t v1 = a1;
  uint32_t v2 = arc4random_uniform(HIDWORD(a1));
  if (v2 <= v1) {
    int64_t v3 = v1;
  }
  else {
    int64_t v3 = v2;
  }
  if (v3)
  {
    uint64_t v12 = MEMORY[0x1E4FBC860];
    sub_1AFD9DA10(0, v3, 0);
    do
    {
      uint64_t v4 = sub_1AFF99D74(0x800000003);
      uint64_t v6 = v5;
      unint64_t v8 = *(void *)(v12 + 16);
      unint64_t v7 = *(void *)(v12 + 24);
      if (v8 >= v7 >> 1) {
        sub_1AFD9DA10(v7 > 1, v8 + 1, 1);
      }
      *(void *)(v12 + 16) = v8 + 1;
      uint64_t v9 = v12 + 16 * v8;
      *(void *)(v9 + 32) = v4;
      *(void *)(v9 + 40) = v6;
      --v3;
    }
    while (v3);
  }
  sub_1AFD3ABD0();
  sub_1AFD371B8();
  uint64_t v10 = sub_1AFFCAD88();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t type metadata accessor for StubAssetHandle()
{
  return self;
}

ValueMetadata *type metadata accessor for Random()
{
  return &type metadata for Random;
}

uint64_t type metadata accessor for StubAssetHandle.StubAssetDataProvider()
{
  return self;
}

uint64_t sub_1AFF9A0E0(long long *a1)
{
  uint64_t v2 = swift_allocObject();
  sub_1AFD80454(a1, v2 + 16);
  return v2;
}

uint64_t sub_1AFF9A124(long long *a1)
{
  sub_1AFD80454(a1, v1 + 16);
  return v1;
}

uint64_t sub_1AFF9A144()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return v0;
}

uint64_t sub_1AFF9A164()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return swift_deallocClassInstance();
}

id sub_1AFF9A19C(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v2 = v1[5];
  uint64_t v3 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v2);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v3 + 8))(v6, v2, v3);
  sub_1AFD55D10((uint64_t)v6);
  if (v7) {
    uint64_t v4 = 0xFFFFFFFFLL;
  }
  else {
    uint64_t v4 = v6[117];
  }
  return objc_msgSend(self, sel_enabledForCurrentLevel_, v4);
}

id sub_1AFF9A250(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v2 = *(void *)(*(void *)v1 + 40);
  uint64_t v3 = *(void *)(*(void *)v1 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v1 + 16), v2);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v3 + 8))(v6, v2, v3);
  sub_1AFD55D10((uint64_t)v6);
  if (v7) {
    uint64_t v4 = 0xFFFFFFFFLL;
  }
  else {
    uint64_t v4 = v6[117];
  }
  return objc_msgSend(self, sel_enabledForCurrentLevel_, v4);
}

uint64_t sub_1AFF9A308(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t type metadata accessor for PaidBundleViaOfferFeatureAvailability()
{
  return self;
}

uint64_t sub_1AFF9A340(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PaidBundleViaOfferFeatureAvailability);
}

uint64_t sub_1AFF9A358()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t type metadata accessor for SDSQuoteDetailService()
{
  return self;
}

uint64_t sub_1AFF9A390(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1AFFC9E18();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = &v25[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v10 = sub_1AFFC98F8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = &v25[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1AFD2CEB0(v3 + 16, (uint64_t)v25);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v11 + 16))(v13, a2, v10);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v7 + 16))(v9, a3, v6);
  uint64_t v14 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v25, v26);
  double v15 = MEMORY[0x1F4188790](v14);
  id v17 = (uint64_t *)&v25[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(uint64_t *, double))(v18 + 16))(v17, v15);
  uint64_t v19 = *v17;
  uint64_t v20 = sub_1AFFC8E38();
  id v21 = sub_1AFF9A628(v20, v19, (uint64_t)v13, (uint64_t)v9);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  sub_1AFFC9EF8();
  sub_1AFFC9EA8();
  uint64_t v22 = sub_1AFFC9EB8();

  swift_release();
  return v22;
}

uint64_t sub_1AFF9A604(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AFF9A390(a1, a2, a3);
}

id sub_1AFF9A628(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for SDSBaseOperationFactory();
  v27[3] = v8;
  v27[4] = &off_1F0875070;
  v27[0] = a2;
  uint64_t v9 = (objc_class *)type metadata accessor for SDSQuoteDetailOperation();
  uint64_t v10 = (char *)objc_allocWithZone(v9);
  uint64_t v11 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v27, v8);
  double v12 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = (uint64_t *)((char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v15 + 16))(v14, v12);
  uint64_t v16 = *v14;
  v26[3] = v8;
  v26[4] = &off_1F0875070;
  v26[0] = v16;
  *(void *)&v10[qword_1EB8177F8] = a1;
  sub_1AFD2CEB0((uint64_t)v26, (uint64_t)&v10[qword_1EB8177E0]);
  id v17 = &v10[qword_1EB8177F0];
  uint64_t v18 = sub_1AFFC98F8();
  uint64_t v19 = *(void *)(v18 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v17, a3, v18);
  uint64_t v20 = &v10[qword_1EB8177E8];
  uint64_t v21 = sub_1AFFC9E18();
  uint64_t v22 = *(void *)(v21 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v20, a4, v21);
  v25.receiver = v10;
  v25.super_class = v9;
  id v23 = objc_msgSendSuper2(&v25, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(a4, v21);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(a3, v18);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  return v23;
}