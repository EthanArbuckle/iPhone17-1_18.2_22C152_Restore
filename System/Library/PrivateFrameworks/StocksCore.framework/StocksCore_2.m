uint64_t sub_1AFE67534()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t (*v3)();
  uint64_t v5;

  v2 = *v1;
  *(void *)(*v1 + 656) = v0;
  swift_task_dealloc();
  if (v0)
  {
    v3 = sub_1AFE67B1C;
  }
  else
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v2 + 112);
    v3 = sub_1AFE6765C;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1AFE6765C()
{
  uint64_t v36 = v0;
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 48);
  __int16 v4 = *(_WORD *)(v0 + 56);
  long long v26 = *(_OWORD *)(v0 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 64) = v1;
  *(_OWORD *)(v0 + 72) = v26;
  *(void *)(v0 + 88) = v2;
  *(void *)(v0 + 96) = v3;
  *(_WORD *)(v0 + 104) = v4;
  v5 = sub_1AFFCA888();
  os_log_type_t v6 = sub_1AFFCB478();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v27 = v8;
    *(_DWORD *)v7 = 136315138;
    swift_beginAccess();
    uint64_t v10 = *(void *)(v0 + 88);
    unint64_t v9 = *(void *)(v0 + 96);
    sub_1AFFC8E38();
    *(void *)(v0 + 440) = sub_1AFD36BA8(v10, v9, &v27);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AFD01000, v5, v6, "Successfully created new watchlist id=%s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v8, -1, -1);
    MEMORY[0x1B3E8F0D0](v7, -1, -1);
  }

  uint64_t v11 = *(void *)(v0 + 480);
  uint64_t v12 = *(void *)(v0 + 464);
  uint64_t v13 = *(void *)(v0 + 472);
  swift_beginAccess();
  uint64_t v14 = *(void *)(v0 + 72);
  uint64_t v16 = *(void *)(v0 + 80);
  uint64_t v15 = *(void *)(v0 + 88);
  uint64_t v17 = *(void *)(v0 + 96);
  __int16 v18 = *(_WORD *)(v0 + 104);
  uint64_t v27 = *(void *)(v0 + 64);
  uint64_t v28 = v14;
  uint64_t v29 = v16;
  uint64_t v30 = v15;
  uint64_t v31 = v17;
  __int16 v32 = v18;
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  WatchlistEntity.init(from:)((uint64_t)&v27, &v33);
  uint64_t v19 = v33;
  uint64_t v20 = v34;
  uint64_t v21 = v35;
  *(void *)(v0 + 240) = v33;
  *(void *)(v0 + 248) = v20;
  *(void *)(v0 + 256) = v21;
  uint64_t v27 = v19;
  uint64_t v28 = v20;
  uint64_t v29 = v21;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v12, 1, 1, v13);
  sub_1AFFC8E38();
  sub_1AFFC8E48();
  sub_1AFD5A49C(&v27, v12, &v33);
  uint64_t v22 = v34;
  uint64_t v23 = v35;
  *(void *)(v0 + 264) = v33;
  *(void *)(v0 + 272) = v22;
  *(void *)(v0 + 280) = v23;
  sub_1AFD33084();
  sub_1AFD5907C();
  sub_1AFFC8AF8();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v24 = *(uint64_t (**)(void))(v0 + 8);
  return v24();
}

uint64_t sub_1AFE679D4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1AFE67A74()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 152);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1AFE67B1C()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1AFE67BEC@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E9AF8D90 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1AFFC9548();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1E9AFB8F0);
  __int16 v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1AFE67C98(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1AFD3503C;
  return sub_1AFE65E14(a1);
}

uint64_t sub_1AFE67D34(uint64_t a1)
{
  unint64_t v2 = sub_1AFE64C4C();

  return MEMORY[0x1F40D3C90](a1, v2);
}

void sub_1AFE67D70(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1AFE67DD4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1AFE67E38()
{
  unint64_t result = qword_1EB811398;
  if (!qword_1EB811398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB811398);
  }
  return result;
}

unint64_t sub_1AFE67E90()
{
  unint64_t result = qword_1EB811388;
  if (!qword_1EB811388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB811388);
  }
  return result;
}

uint64_t sub_1AFE67EE4()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1AFE67F18()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for NewWatchlistIntent()
{
  return &type metadata for NewWatchlistIntent;
}

unint64_t sub_1AFE67F60()
{
  unint64_t result = qword_1E9AFB990;
  if (!qword_1E9AFB990)
  {
    sub_1AFE67FF0(255, &qword_1E9AFB998, (uint64_t (*)(void))sub_1AFE64C4C, (uint64_t)&type metadata for NewWatchlistIntent, MEMORY[0x1E4F186A8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB990);
  }
  return result;
}

void sub_1AFE67FF0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1AFE68058()
{
  return sub_1AFE65DCC(&qword_1E9AFB9A0, (void (*)(uint64_t))sub_1AFE680A0);
}

void sub_1AFE680A0()
{
  if (!qword_1E9AFB9A8)
  {
    sub_1AFD33084();
    sub_1AFD37728();
    unint64_t v0 = sub_1AFFC8E08();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9AFB9A8);
    }
  }
}

uint64_t sub_1AFE68120()
{
  return sub_1AFE65DCC(&qword_1E9AFB9B0, (void (*)(uint64_t))sub_1AFE680A0);
}

uint64_t SDSAuthToken.init(fetchDate:url:accessKey:expirationDate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12 = sub_1AFFC98F8();
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t, uint64_t))v19)((void *)(v12 - 8), a6, a1, v12);
  uint64_t v13 = (int *)type metadata accessor for SDSAuthToken();
  uint64_t v14 = a6 + v13[5];
  uint64_t v15 = sub_1AFFC96E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v14, a2, v15);
  uint64_t v16 = (void *)(a6 + v13[6]);
  *uint64_t v16 = a3;
  v16[1] = a4;
  uint64_t v17 = a6 + v13[7];

  return v19(v17, a5, v12);
}

uint64_t type metadata accessor for SDSAuthToken()
{
  uint64_t result = qword_1EB818D88;
  if (!qword_1EB818D88) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1AFE682DC()
{
  uint64_t result = 0x7461446863746566;
  switch(*v0)
  {
    case 1:
      uint64_t result = 7107189;
      break;
    case 2:
      uint64_t result = 0x654B737365636361;
      break;
    case 3:
      uint64_t result = 0x6974617269707865;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1AFE68374@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1AFE699AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AFE6839C(uint64_t a1)
{
  unint64_t v2 = sub_1AFE686A0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFE683D8(uint64_t a1)
{
  unint64_t v2 = sub_1AFE686A0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SDSAuthToken.encode(to:)(void *a1)
{
  sub_1AFE68C8C(0, &qword_1EB818738, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v9 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFE686A0();
  sub_1AFFCBE78();
  char v13 = 0;
  sub_1AFFC98F8();
  sub_1AFE68CF0((unint64_t *)&unk_1EB818B90, MEMORY[0x1E4F27928]);
  sub_1AFFCBC58();
  if (!v1)
  {
    v9[1] = type metadata accessor for SDSAuthToken();
    char v12 = 1;
    sub_1AFFC96E8();
    sub_1AFE68CF0(&qword_1EB818B68, MEMORY[0x1E4F276F0]);
    sub_1AFFCBC58();
    char v11 = 2;
    sub_1AFFCBC08();
    char v10 = 3;
    sub_1AFFCBC58();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1AFE686A0()
{
  unint64_t result = qword_1EB818D60;
  if (!qword_1EB818D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818D60);
  }
  return result;
}

uint64_t SDSAuthToken.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v37 = a2;
  uint64_t v42 = sub_1AFFC96E8();
  uint64_t v38 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  v41 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1AFFC98F8();
  uint64_t v39 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  v43 = (char *)&v31 - v8;
  sub_1AFE68C8C(0, &qword_1EB818250, MEMORY[0x1E4FBBDC0]);
  uint64_t v44 = v9;
  uint64_t v40 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  char v11 = (char *)&v31 - v10;
  uint64_t v12 = type metadata accessor for SDSAuthToken();
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFE686A0();
  v45 = v11;
  uint64_t v15 = (uint64_t)v46;
  sub_1AFFCBE68();
  if (v15) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v35 = v6;
  uint64_t v36 = v12;
  v46 = a1;
  uint64_t v16 = v41;
  uint64_t v17 = v42;
  char v50 = 0;
  uint64_t v18 = sub_1AFE68CF0(&qword_1EB816CB0, MEMORY[0x1E4F27928]);
  uint64_t v19 = v43;
  sub_1AFFCBB58();
  uint64_t v33 = v18;
  uint64_t v34 = v14;
  uint64_t v20 = (char *)v4;
  uint64_t v21 = *(void (**)(char *, char *))(v39 + 32);
  v43 = v20;
  v21(v14, v19);
  char v49 = 1;
  sub_1AFE68CF0(&qword_1EB818B78, MEMORY[0x1E4F276F0]);
  sub_1AFFCBB58();
  __int16 v32 = (void (*)(char *, char *, char *))v21;
  uint64_t v22 = v36;
  (*(void (**)(char *, char *, uint64_t))(v38 + 32))(&v34[*(int *)(v36 + 20)], v16, v17);
  char v48 = 2;
  uint64_t v23 = sub_1AFFCBB18();
  v24 = v35;
  v25 = (uint64_t *)&v34[*(int *)(v22 + 24)];
  uint64_t *v25 = v23;
  v25[1] = v26;
  char v47 = 3;
  uint64_t v27 = v43;
  sub_1AFFCBB58();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v45, v44);
  uint64_t v28 = *(int *)(v22 + 28);
  uint64_t v29 = (uint64_t)v34;
  v32(&v34[v28], v24, v27);
  sub_1AFE68D38(v29, v37);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
  return sub_1AFE68D9C(v29);
}

void sub_1AFE68C8C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1AFE686A0();
    unint64_t v7 = a3(a1, &type metadata for SDSAuthToken.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1AFE68CF0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AFE68D38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SDSAuthToken();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AFE68D9C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SDSAuthToken();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1AFE68DF8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SDSAuthToken.init(from:)(a1, a2);
}

uint64_t sub_1AFE68E10(void *a1)
{
  return SDSAuthToken.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for SDSAuthToken(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1AFFC8E48();
  }
  else
  {
    uint64_t v7 = sub_1AFFC98F8();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = a3[5];
    uint64_t v10 = (char *)a1 + v9;
    char v11 = (char *)a2 + v9;
    uint64_t v12 = sub_1AFFC96E8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    uint64_t v13 = a3[6];
    uint64_t v14 = a3[7];
    uint64_t v15 = (uint64_t *)((char *)a1 + v13);
    uint64_t v16 = (uint64_t *)((char *)a2 + v13);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    uint64_t v18 = (char *)a1 + v14;
    uint64_t v19 = (char *)a2 + v14;
    sub_1AFFC8E38();
    v8((uint64_t *)v18, (uint64_t *)v19, v7);
  }
  return a1;
}

uint64_t destroy for SDSAuthToken(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1AFFC98F8();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v9)((void *)(v4 - 8), a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_1AFFC96E8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + *(int *)(a2 + 28);

  return v9(v7, v4);
}

uint64_t initializeWithCopy for SDSAuthToken(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1AFFC98F8();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1AFFC96E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)(a1 + v12);
  uint64_t v15 = (void *)(a2 + v12);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  uint64_t v17 = a1 + v13;
  uint64_t v18 = a2 + v13;
  sub_1AFFC8E38();
  v7(v17, v18, v6);
  return a1;
}

uint64_t assignWithCopy for SDSAuthToken(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1AFFC98F8();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1AFFC96E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 24))(v9, v10, v11);
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  *uint64_t v13 = *v14;
  v13[1] = v14[1];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  v7(a1 + a3[7], a2 + a3[7], v6);
  return a1;
}

uint64_t initializeWithTake for SDSAuthToken(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1AFFC98F8();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1AFFC96E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  v7(a1 + v12, a2 + v12, v6);
  return a1;
}

uint64_t assignWithTake for SDSAuthToken(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1AFFC98F8();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1AFFC96E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v7(a1 + a3[7], a2 + a3[7], v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for SDSAuthToken(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1AFE6948C);
}

uint64_t sub_1AFE6948C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1AFFC98F8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_1AFFC96E8();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for SDSAuthToken(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1AFE695B8);
}

uint64_t sub_1AFE695B8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1AFFC98F8();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_1AFFC96E8();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_1AFE696CC()
{
  uint64_t result = sub_1AFFC98F8();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1AFFC96E8();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SDSAuthToken.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFE6986CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SDSAuthToken.CodingKeys()
{
  return &type metadata for SDSAuthToken.CodingKeys;
}

unint64_t sub_1AFE698A8()
{
  unint64_t result = qword_1E9AFB9B8;
  if (!qword_1E9AFB9B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFB9B8);
  }
  return result;
}

unint64_t sub_1AFE69900()
{
  unint64_t result = qword_1EB818D70;
  if (!qword_1EB818D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818D70);
  }
  return result;
}

unint64_t sub_1AFE69958()
{
  unint64_t result = qword_1EB818D68;
  if (!qword_1EB818D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818D68);
  }
  return result;
}

uint64_t sub_1AFE699AC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7461446863746566 && a2 == 0xE900000000000065;
  if (v2 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x654B737365636361 && a2 == 0xE900000000000079 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6974617269707865 && a2 == 0xEE00657461446E6FLL)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1AFFCBCE8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1AFE69B8C()
{
  return 1;
}

uint64_t sub_1AFE69B94()
{
  uint64_t v0 = sub_1AFFC9528();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1AFFC9A78();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v5 = sub_1AFFCAE58();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v6 = sub_1AFFC9548();
  __swift_allocate_value_buffer(v6, qword_1E9AFB9C0);
  __swift_project_value_buffer(v6, (uint64_t)qword_1E9AFB9C0);
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4F275D0], v0);
  return sub_1AFFC9558();
}

uint64_t sub_1AFE69D74@<X0>(uint64_t a1@<X8>)
{
  return sub_1AFD32B4C(&qword_1E9AF8DA8, MEMORY[0x1E4F27608], (uint64_t)qword_1E9AFB9C0, a1);
}

uint64_t sub_1AFE69DAC()
{
  sub_1AFE6ABDC(0, &qword_1EB816B00, MEMORY[0x1E4F27608]);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)v12 - v1;
  v12[0] = sub_1AFFC9528();
  uint64_t v3 = *(void *)(v12[0] - 8);
  MEMORY[0x1F4188790](v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1AFFC9A78();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v7 = sub_1AFFCAE58();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v8 = sub_1AFFC9548();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = sub_1AFFC8CD8();
  __swift_allocate_value_buffer(v10, qword_1E9AFB9D8);
  __swift_project_value_buffer(v10, (uint64_t)qword_1E9AFB9D8);
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, *MEMORY[0x1E4F275D0], v12[0]);
  sub_1AFFC9558();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_1AFFC8CE8();
}

uint64_t sub_1AFE6A0A0@<X0>(uint64_t a1@<X8>)
{
  return sub_1AFD32B4C(&qword_1E9AF8DB0, MEMORY[0x1E4F18510], (uint64_t)qword_1E9AFB9D8, a1);
}

uint64_t sub_1AFE6A0D8()
{
  sub_1AFE6CCCC(0, &qword_1E9AFB9F0, MEMORY[0x1E4F186C8]);
  MEMORY[0x1F4188790](v0 - 8);
  sub_1AFE6CCCC(0, &qword_1E9AFB9F8, MEMORY[0x1E4F186C0]);
  MEMORY[0x1F4188790](v1);
  sub_1AFE6A288();
  sub_1AFFC8EA8();
  sub_1AFFC8E98();
  swift_getKeyPath();
  sub_1AFE6A304();
  sub_1AFFC8E88();
  swift_release();
  sub_1AFFC8E98();
  sub_1AFFC8EB8();
  return sub_1AFFC8E58();
}

unint64_t sub_1AFE6A288()
{
  unint64_t result = qword_1EB8113C0;
  if (!qword_1EB8113C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8113C0);
  }
  return result;
}

uint64_t sub_1AFE6A2DC()
{
  return sub_1AFFC8C28();
}

void sub_1AFE6A304()
{
  if (!qword_1E9AFBA00)
  {
    sub_1AFDA7970();
    unint64_t v0 = sub_1AFFCBE88();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9AFBA00);
    }
  }
}

uint64_t sub_1AFE6A364()
{
  return sub_1AFFC8C08();
}

uint64_t sub_1AFE6A388(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SymbolEntity();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v9 - v6;
  sub_1AFD5BCD0(a1, (uint64_t)&v9 - v6);
  sub_1AFD5BCD0((uint64_t)v7, (uint64_t)v4);
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8C18();
  sub_1AFD2E05C((uint64_t)v7);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1AFE6A484(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SymbolEntity();
  MEMORY[0x1F4188790](v2 - 8);
  sub_1AFD5BCD0(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1AFFC8C18();
  return sub_1AFD2E05C(a1);
}

void (*sub_1AFE6A514(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1AFFC8BF8();
  return sub_1AFD333FC;
}

uint64_t sub_1AFE6A570@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v39 = a1;
  uint64_t v1 = sub_1AFFC8EC8();
  uint64_t v37 = *(void *)(v1 - 8);
  uint64_t v38 = v1;
  MEMORY[0x1F4188790](v1);
  uint64_t v36 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFE6ABDC(0, &qword_1EB816AF0, MEMORY[0x1E4F182D8]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v35 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v34 = (char *)&v30 - v6;
  sub_1AFE6ABDC(0, &qword_1EB810BC8, (void (*)(uint64_t))type metadata accessor for SymbolEntity);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v33 = (char *)&v30 - v8;
  sub_1AFE6ABDC(0, &qword_1EB816B00, MEMORY[0x1E4F27608]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v31 = (char *)&v30 - v10;
  uint64_t v11 = sub_1AFFC9528();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1AFFC9A78();
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v16 = sub_1AFFCAE58();
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v17 = sub_1AFFC9548();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  sub_1AFDA7970();
  uint64_t v32 = v19;
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  uint64_t v20 = *MEMORY[0x1E4F275D0];
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 104);
  v21(v14, v20, v11);
  sub_1AFFC9558();
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  v21(v14, v20, v11);
  uint64_t v22 = v31;
  sub_1AFFC9558();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v22, 0, 1, v17);
  uint64_t v23 = type metadata accessor for SymbolEntity();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v33, 1, 1, v23);
  uint64_t v24 = sub_1AFFC8AD8();
  v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56);
  v25(v34, 1, 1, v24);
  v25(v35, 1, 1, v24);
  (*(void (**)(char *, void, uint64_t))(v37 + 104))(v36, *MEMORY[0x1E4F186F0], v38);
  sub_1AFE6AC30(&qword_1EB810BC0, (void (*)(uint64_t))type metadata accessor for SymbolEntity);
  uint64_t v26 = sub_1AFFC8C68();
  sub_1AFD5A2B4(0, &qword_1E9AFBA08, &qword_1EB81A790);
  sub_1AFFC8A08();
  long long v40 = 0u;
  long long v41 = 0u;
  uint64_t v42 = 0;
  sub_1AFFC89F8();
  uint64_t v27 = sub_1AFFC89C8();
  sub_1AFD5A2B4(0, &qword_1E9AFBA10, (unint64_t *)&unk_1EB81A910);
  uint64_t v42 = 0;
  long long v40 = 0u;
  long long v41 = 0u;
  sub_1AFFC89F8();
  uint64_t result = sub_1AFFC89C8();
  uint64_t v29 = v39;
  *uint64_t v39 = v26;
  v29[1] = v27;
  v29[2] = result;
  return result;
}

void sub_1AFE6ABDC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1AFFCB658();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1AFE6AC30(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AFE6AC78(uint64_t a1)
{
  v2[54] = a1;
  type metadata accessor for SymbolEntity();
  v2[55] = swift_task_alloc();
  sub_1AFE6ABDC(0, &qword_1EB816D80, (void (*)(uint64_t))type metadata accessor for QuoteDetail);
  v2[56] = swift_task_alloc();
  v2[57] = swift_task_alloc();
  sub_1AFE6ABDC(0, &qword_1EB817B00, (void (*)(uint64_t))type metadata accessor for Quote);
  v2[58] = swift_task_alloc();
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = *v1;
  uint64_t v5 = v1[1];
  v2[59] = v3;
  v2[60] = v4;
  uint64_t v6 = v1[2];
  v2[61] = v5;
  v2[62] = v6;
  v2[46] = v4;
  v2[47] = v5;
  v2[48] = v6;
  uint64_t v7 = (void *)swift_task_alloc();
  v2[63] = v7;
  void *v7 = v2;
  v7[1] = sub_1AFE6AE14;
  return sub_1AFE6B2F0(v3);
}

uint64_t sub_1AFE6AE14()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  uint64_t v3 = *(void *)(*v0 + 496);
  long long v8 = *(_OWORD *)(*v0 + 480);
  uint64_t v4 = *v0;
  swift_task_dealloc();
  *(_OWORD *)(v2 + 392) = v8;
  *(void *)(v2 + 408) = v3;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 512) = v5;
  void *v5 = v4;
  v5[1] = sub_1AFE6AF8C;
  uint64_t v6 = *(void *)(v1 + 456);
  return sub_1AFE6BB70(v6);
}

uint64_t sub_1AFE6AF8C()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1AFE6B088, 0, 0);
}

uint64_t sub_1AFE6B088()
{
  uint64_t v15 = v0;
  uint64_t v1 = *(void *)(v0 + 472);
  uint64_t v3 = *(void *)(v0 + 456);
  uint64_t v2 = *(void *)(v0 + 464);
  uint64_t v4 = *(void *)(v0 + 440);
  uint64_t v5 = *(void *)(v0 + 448);
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8C08();
  swift_release();
  swift_release();
  swift_release();
  sub_1AFE6C5A4(v1, v2, &qword_1EB817B00, (void (*)(uint64_t))type metadata accessor for Quote);
  sub_1AFE6C5A4(v3, v5, &qword_1EB816D80, (void (*)(uint64_t))type metadata accessor for QuoteDetail);
  sub_1AFEEDC3C(v4, v2, v5, (_OWORD *)(v0 + 16));
  long long v6 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 320) = *(_OWORD *)(v0 + 144);
  *(_OWORD *)(v0 + 336) = v6;
  *(_OWORD *)(v0 + 352) = *(_OWORD *)(v0 + 176);
  long long v7 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 256) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 272) = v7;
  long long v8 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 288) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 304) = v8;
  long long v9 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 192) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 208) = v9;
  long long v10 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 224) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 240) = v10;
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8C08();
  swift_release();
  swift_release();
  swift_release();
  sub_1AFF31EC4(v4, v14);
  uint64_t v11 = v14[1];
  *(void *)(v0 + 416) = v14[0];
  *(void *)(v0 + 424) = v11;
  sub_1AFE6C610();
  sub_1AFE3B6D4();
  sub_1AFFC8AF8();
  swift_release();
  swift_release();
  sub_1AFE6C664(v3, &qword_1EB816D80, (void (*)(uint64_t))type metadata accessor for QuoteDetail);
  sub_1AFE6C664(v1, &qword_1EB817B00, (void (*)(uint64_t))type metadata accessor for Quote);
  sub_1AFE6C6C0(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_1AFE6B2F0(uint64_t a1)
{
  *(void *)(v2 + 136) = a1;
  uint64_t v3 = sub_1AFFC9DE8();
  *(void *)(v2 + 144) = v3;
  *(void *)(v2 + 152) = *(void *)(v3 - 8);
  *(void *)(v2 + 160) = swift_task_alloc();
  type metadata accessor for SymbolEntity();
  *(void *)(v2 + 168) = swift_task_alloc();
  *(_OWORD *)(v2 + 176) = *(_OWORD *)v1;
  *(void *)(v2 + 192) = *(void *)(v1 + 16);
  return MEMORY[0x1F4188298](sub_1AFE6B3EC, 0, 0);
}

uint64_t sub_1AFE6B3EC()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[20];
  uint64_t v10 = v0[19];
  uint64_t v11 = v0[18];
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8998();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v3);
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8C08();
  swift_release();
  swift_release();
  swift_release();
  sub_1AFFC8B28();
  uint64_t v5 = v0[10];
  uint64_t v6 = v0[11];
  sub_1AFD2E05C(v1);
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v3, v4);
  v0[25] = sub_1AFD626E4(v5, v6, v2, v3, v4);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v2, v11);
  long long v7 = (void *)swift_task_alloc();
  v0[26] = v7;
  void *v7 = v0;
  v7[1] = sub_1AFE6B5D0;
  uint64_t v8 = v0[17];
  return MEMORY[0x1F415EBC8](v8);
}

uint64_t sub_1AFE6B5D0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 216) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_1AFE6B7B0;
  }
  else
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v2 + 16);
    uint64_t v3 = sub_1AFE6B6F8;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1AFE6B6F8()
{
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v2 = type metadata accessor for Quote();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 0, 1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1AFE6B7B0()
{
  uint64_t v22 = v0;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  if (qword_1EB810B30 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[27];
  uint64_t v2 = sub_1AFFCA8A8();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EB810AF0);
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  id v3 = v1;
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  id v4 = v1;
  uint64_t v5 = sub_1AFFCA888();
  os_log_type_t v6 = sub_1AFFCB468();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = (void *)v0[27];
  if (v7)
  {
    uint64_t v9 = v0[21];
    uint64_t v10 = swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    uint64_t v21 = v20;
    *(_DWORD *)uint64_t v10 = 136315394;
    sub_1AFFC8E48();
    sub_1AFFC8E48();
    sub_1AFFC8E48();
    os_log_type_t type = v6;
    sub_1AFFC8C08();
    swift_release();
    swift_release();
    swift_release();
    sub_1AFFC8B28();
    uint64_t v11 = v0[12];
    unint64_t v12 = v0[13];
    sub_1AFD2E05C(v9);
    v0[15] = sub_1AFD36BA8(v11, v12, &v21);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    *(_WORD *)(v10 + 12) = 2080;
    swift_getErrorValue();
    uint64_t v13 = sub_1AFFCBD98();
    v0[16] = sub_1AFD36BA8(v13, v14, &v21);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1AFD01000, v5, type, "Failed to fetch quote for symbol=%s, error=%s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v20, -1, -1);
    MEMORY[0x1B3E8F0D0](v10, -1, -1);
  }
  else
  {

    swift_release_n();
    swift_release_n();
    swift_release_n();
  }
  uint64_t v15 = v0[17];
  uint64_t v16 = type metadata accessor for Quote();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_1AFE6BB70(uint64_t a1)
{
  *(void *)(v2 + 136) = a1;
  uint64_t v3 = sub_1AFFC9E18();
  *(void *)(v2 + 144) = v3;
  *(void *)(v2 + 152) = *(void *)(v3 - 8);
  *(void *)(v2 + 160) = swift_task_alloc();
  uint64_t v4 = sub_1AFFC98F8();
  *(void *)(v2 + 168) = v4;
  *(void *)(v2 + 176) = *(void *)(v4 - 8);
  *(void *)(v2 + 184) = swift_task_alloc();
  uint64_t v5 = sub_1AFFC9DE8();
  *(void *)(v2 + 192) = v5;
  *(void *)(v2 + 200) = *(void *)(v5 - 8);
  *(void *)(v2 + 208) = swift_task_alloc();
  type metadata accessor for SymbolEntity();
  *(void *)(v2 + 216) = swift_task_alloc();
  *(_OWORD *)(v2 + 224) = *(_OWORD *)v1;
  *(void *)(v2 + 240) = *(void *)(v1 + 16);
  return MEMORY[0x1F4188298](sub_1AFE6BD24, 0, 0);
}

uint64_t sub_1AFE6BD24()
{
  uint64_t v1 = v0[27];
  uint64_t v3 = v0[25];
  uint64_t v2 = (void *)v0[26];
  uint64_t v13 = v0[24];
  uint64_t v14 = v0[23];
  uint64_t v18 = v0[22];
  uint64_t v19 = v0[21];
  uint64_t v15 = v0[20];
  uint64_t v16 = v0[19];
  uint64_t v17 = v0[18];
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8998();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v4 = v0[5];
  uint64_t v12 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v4);
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8C08();
  swift_release();
  swift_release();
  swift_release();
  sub_1AFFC8B28();
  uint64_t v5 = v0[10];
  uint64_t v6 = v0[11];
  sub_1AFD2E05C(v1);
  *uint64_t v2 = 0x404E000000000000;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v2, *MEMORY[0x1E4FAA8C0], v13);
  sub_1AFFC98E8();
  uint64_t v7 = *MEMORY[0x1E4FAA980];
  uint64_t v8 = sub_1AFFC9E18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v15, v7, v8);
  v0[31] = sub_1AFF670C4(v5, v6, (uint64_t)v2, v14, v15, v4, v12);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v14, v19);
  (*(void (**)(void *, uint64_t))(v3 + 8))(v2, v13);
  uint64_t v9 = (void *)swift_task_alloc();
  v0[32] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_1AFE6BFCC;
  uint64_t v10 = v0[17];
  return MEMORY[0x1F415EBC8](v10);
}

uint64_t sub_1AFE6BFCC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 264) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_1AFE6C1CC;
  }
  else
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v2 + 16);
    uint64_t v3 = sub_1AFE6C0F4;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1AFE6C0F4()
{
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v2 = type metadata accessor for QuoteDetail();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 0, 1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1AFE6C1CC()
{
  uint64_t v22 = v0;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  if (qword_1EB810B30 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[33];
  uint64_t v2 = sub_1AFFCA8A8();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EB810AF0);
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  id v3 = v1;
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  id v4 = v1;
  uint64_t v5 = sub_1AFFCA888();
  os_log_type_t v6 = sub_1AFFCB468();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = (void *)v0[33];
  if (v7)
  {
    uint64_t v9 = v0[27];
    uint64_t v10 = swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    uint64_t v21 = v20;
    *(_DWORD *)uint64_t v10 = 136315394;
    sub_1AFFC8E48();
    sub_1AFFC8E48();
    sub_1AFFC8E48();
    os_log_type_t type = v6;
    sub_1AFFC8C08();
    swift_release();
    swift_release();
    swift_release();
    sub_1AFFC8B28();
    uint64_t v11 = v0[12];
    unint64_t v12 = v0[13];
    sub_1AFD2E05C(v9);
    v0[15] = sub_1AFD36BA8(v11, v12, &v21);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    *(_WORD *)(v10 + 12) = 2080;
    swift_getErrorValue();
    uint64_t v13 = sub_1AFFCBD98();
    v0[16] = sub_1AFD36BA8(v13, v14, &v21);
    sub_1AFFCB688();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1AFD01000, v5, type, "Failed to fetch quote detail for symbol=%s, error=%s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1B3E8F0D0](v20, -1, -1);
    MEMORY[0x1B3E8F0D0](v10, -1, -1);
  }
  else
  {

    swift_release_n();
    swift_release_n();
    swift_release_n();
  }
  uint64_t v15 = v0[17];
  uint64_t v16 = type metadata accessor for QuoteDetail();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_1AFE6C5A4(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1AFE6ABDC(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

unint64_t sub_1AFE6C610()
{
  unint64_t result = qword_1EB816B90;
  if (!qword_1EB816B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816B90);
  }
  return result;
}

uint64_t sub_1AFE6C664(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1AFE6ABDC(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1AFE6C6C0(uint64_t a1)
{
  return a1;
}

unint64_t sub_1AFE6C818()
{
  unint64_t result = qword_1EB8113C8;
  if (!qword_1EB8113C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8113C8);
  }
  return result;
}

unint64_t sub_1AFE6C870()
{
  unint64_t result = qword_1EB8113B8;
  if (!qword_1EB8113B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8113B8);
  }
  return result;
}

uint64_t sub_1AFE6C8C4()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1AFE6C8F8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1AFE6C914@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E9AF8DA8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1AFFC9548();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1E9AFB9C0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1AFE6C9BC()
{
  sub_1AFE6CCCC(0, &qword_1E9AFB9F0, MEMORY[0x1E4F186C8]);
  MEMORY[0x1F4188790](v0 - 8);
  sub_1AFE6CCCC(0, &qword_1E9AFB9F8, MEMORY[0x1E4F186C0]);
  MEMORY[0x1F4188790](v1);
  sub_1AFFC8EA8();
  sub_1AFFC8E98();
  swift_getKeyPath();
  sub_1AFE6A304();
  sub_1AFFC8E88();
  swift_release();
  sub_1AFFC8E98();
  sub_1AFFC8EB8();
  return sub_1AFFC8E58();
}

uint64_t sub_1AFE6CB64(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1AFD3503C;
  return sub_1AFE6AC78(a1);
}

uint64_t sub_1AFE6CC00(uint64_t a1)
{
  unint64_t v2 = sub_1AFE6A288();

  return MEMORY[0x1F40D3C90](a1, v2);
}

ValueMetadata *type metadata accessor for GetSymbolQuoteIntent()
{
  return &type metadata for GetSymbolQuoteIntent;
}

unint64_t sub_1AFE6CC58()
{
  unint64_t result = qword_1E9AFBA38;
  if (!qword_1E9AFBA38)
  {
    sub_1AFE6CCCC(255, &qword_1E9AFBA40, MEMORY[0x1E4F186A8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBA38);
  }
  return result;
}

void sub_1AFE6CCCC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1AFE6A288();
    unint64_t v7 = a3(a1, &type metadata for GetSymbolQuoteIntent, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1AFE6CD30()
{
  return sub_1AFE6AC30(&qword_1E9AFBA48, (void (*)(uint64_t))sub_1AFE6CD78);
}

void sub_1AFE6CD78()
{
  if (!qword_1E9AFBA50)
  {
    sub_1AFE6C610();
    sub_1AFD37728();
    unint64_t v0 = sub_1AFFC8E08();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9AFBA50);
    }
  }
}

uint64_t sub_1AFE6CDF8()
{
  return sub_1AFE6AC30(&qword_1E9AFBA58, (void (*)(uint64_t))sub_1AFE6CD78);
}

uint64_t sub_1AFE6CE40(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1AFE6CE54(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1AFE6CE68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t sub_1AFE6CE7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t sub_1AFE6CE90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t sub_1AFE6CEA4()
{
  return sub_1AFFCA758();
}

void sub_1AFE6CF00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10 = (void *)sub_1AFFCAC78();
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = a3;
  v11[3] = a4;
  v11[4] = a1;
  v11[5] = a2;
  v13[4] = sub_1AFE6D288;
  v13[5] = v11;
  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 1107296256;
  v13[2] = sub_1AFD82E64;
  v13[3] = &block_descriptor_17;
  unint64_t v12 = _Block_copy(v13);
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  swift_release();
  objc_msgSend(a5, sel_handleRemoteNotification_completion_, v10, v12);
  _Block_release(v12);
}

void sub_1AFE6D030(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1AFE6CF00(a1, a2, a3, a4, *(void **)(v4 + 16));
}

void sub_1AFE6D038()
{
  if (!qword_1E9AFBA60)
  {
    sub_1AFFCA4C8();
    unint64_t v0 = sub_1AFFCA788();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9AFBA60);
    }
  }
}

void sub_1AFE6D090(void *a1, void (*a2)(void *), uint64_t a3, void (*a4)(char *))
{
  uint64_t v7 = sub_1AFFCA4C8();
  uint64_t v8 = *(void *)(v7 - 8);
  double v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    id v12 = a1;
    a2(a1);
  }
  else
  {
    (*(void (**)(char *, void, uint64_t, double))(v8 + 104))(v11, *MEMORY[0x1E4FAAEF0], v7, v9);
    a4(v11);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  }
}

uint64_t sub_1AFE6D1EC()
{
  return sub_1AFFCA758();
}

uint64_t sub_1AFE6D248()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

void sub_1AFE6D288(void *a1)
{
  sub_1AFE6D090(a1, *(void (**)(void *))(v1 + 16), *(void *)(v1 + 24), *(void (**)(char *))(v1 + 32));
}

void sub_1AFE6D298(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a2;
  sub_1AFFC9EF8();
  sub_1AFFC8E48();
  sub_1AFFC9EA8();
  uint64_t v13 = (void *)sub_1AFFC9E88();
  swift_release();
  unint64_t v14 = (void *)swift_allocObject();
  uint64_t v14[2] = a3;
  v14[3] = a4;
  v14[4] = sub_1AFE6D9D0;
  v14[5] = v12;
  v16[4] = sub_1AFE6DA4C;
  v16[5] = v14;
  v16[0] = MEMORY[0x1E4F143A8];
  v16[1] = 1107296256;
  v16[2] = sub_1AFE6D7C8;
  v16[3] = &block_descriptor_18;
  uint64_t v15 = _Block_copy(v16);
  sub_1AFFC8E48();
  swift_release();
  objc_msgSend(a5, sel_fetchSingleConfigurationWithSettings_completionQueue_completion_, a6, v13, v15);
  _Block_release(v15);
}

void sub_1AFE6D408(uint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, id a5, void (*a6)(void), int a7, void (*a8)(void, void, void, void), uint64_t a9)
{
  if (a5)
  {
    id v11 = a5;
    ((void (*)(id))a6)(a5);
    id v12 = a5;
LABEL_5:

    return;
  }
  unint64_t v13 = a2;
  if (a2 >> 60 == 15)
  {
    sub_1AFE6DA78();
    uint64_t v14 = swift_allocError();
    a6();
    id v12 = (id)v14;
    goto LABEL_5;
  }
  if (!a3)
  {
    sub_1AFD4B0E0(a1, a2);
LABEL_23:
    uint64_t v21 = MEMORY[0x1E4FBC860];
    goto LABEL_24;
  }
  if (a3 >> 62)
  {
    sub_1AFD80564(a1, a2);
    sub_1AFFC8E38();
    uint64_t v19 = sub_1AFFCB9C8();
    if (v19) {
      goto LABEL_11;
    }
    goto LABEL_22;
  }
  uint64_t v19 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  sub_1AFD80564(a1, a2);
  sub_1AFFC8E38();
  if (!v19)
  {
LABEL_22:
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
LABEL_11:
  uint64_t v35 = a8;
  unint64_t v37 = v13;
  uint64_t v39 = MEMORY[0x1E4FBC860];
  sub_1AFD9DC40(0, v19 & ~(v19 >> 63), 0);
  if (v19 < 0)
  {
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v20 = 0;
  uint64_t v21 = v39;
  do
  {
    if ((a3 & 0xC000000000000001) != 0) {
      id v22 = (id)MEMORY[0x1B3E8DC70](v20, a3);
    }
    else {
      id v22 = *(id *)(a3 + 8 * v20 + 32);
    }
    uint64_t v23 = v22;
    id v24 = objc_msgSend(v22, sel_longLongValue);

    unint64_t v26 = *(void *)(v39 + 16);
    unint64_t v25 = *(void *)(v39 + 24);
    if (v26 >= v25 >> 1) {
      sub_1AFD9DC40(v25 > 1, v26 + 1, 1);
    }
    ++v20;
    *(void *)(v39 + 16) = v26 + 1;
    *(void *)(v39 + 8 * v26 + 32) = v24;
  }
  while (v19 != v20);
  swift_bridgeObjectRelease();
  unint64_t v13 = v37;
  a8 = v35;
LABEL_24:
  uint64_t v27 = MEMORY[0x1E4FBC860];
  if (a4)
  {
    if (a4 >> 62)
    {
      sub_1AFFC8E38();
      uint64_t v28 = sub_1AFFCB9C8();
      if (v28)
      {
LABEL_27:
        uint64_t v36 = a8;
        unint64_t v38 = v13;
        sub_1AFD9DC20(0, v28 & ~(v28 >> 63), 0);
        if ((v28 & 0x8000000000000000) == 0)
        {
          for (uint64_t i = 0; i != v28; ++i)
          {
            if ((a4 & 0xC000000000000001) != 0) {
              id v30 = (id)MEMORY[0x1B3E8DC70](i, a4);
            }
            else {
              id v30 = *(id *)(a4 + 8 * i + 32);
            }
            uint64_t v31 = v30;
            unsigned int v32 = objc_msgSend(v30, sel_intValue);

            unint64_t v34 = *(void *)(v27 + 16);
            unint64_t v33 = *(void *)(v27 + 24);
            if (v34 >= v33 >> 1) {
              sub_1AFD9DC20(v33 > 1, v34 + 1, 1);
            }
            *(void *)(v27 + 16) = v34 + 1;
            *(_DWORD *)(v27 + 4 * v34 + 32) = v32;
          }
          swift_bridgeObjectRelease();
          unint64_t v13 = v38;
          a8 = v36;
          goto LABEL_38;
        }
LABEL_42:
        __break(1u);
        return;
      }
    }
    else
    {
      uint64_t v28 = *(void *)((a4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      sub_1AFFC8E38();
      if (v28) {
        goto LABEL_27;
      }
    }
    swift_bridgeObjectRelease();
  }
LABEL_38:
  sub_1AFD80564(a1, v13);
  a8(a1, v13, v21, v27);
  sub_1AFD4B504(a1, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_1AFDE6658(a1, v13);
}

uint64_t sub_1AFE6D7C8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8 = a2;
  double v9 = *(void (**)(void *, unint64_t, uint64_t, uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1AFFC8E48();
    id v10 = v8;
    uint64_t v8 = (void *)sub_1AFFC9798();
    unint64_t v12 = v11;

    if (!a3) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  sub_1AFFC8E48();
  unint64_t v12 = 0xF000000000000000;
  if (a3)
  {
LABEL_3:
    sub_1AFD7BE90();
    a3 = sub_1AFFCB1C8();
  }
LABEL_4:
  if (a4)
  {
    sub_1AFD7BE90();
    a4 = sub_1AFFCB1C8();
  }
  id v13 = a5;
  v9(v8, v12, a3, a4, a5);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1AFDE6658((uint64_t)v8, v12);

  return swift_release();
}

uint64_t sub_1AFE6D8D8()
{
  return sub_1AFFCA758();
}

void sub_1AFE6D938(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1AFE6D298(a1, a2, a3, a4, *(void **)(v4 + 16), *(void *)(v4 + 24));
}

void sub_1AFE6D940()
{
  if (!qword_1EB819BD8)
  {
    unint64_t v0 = sub_1AFFCA788();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB819BD8);
    }
  }
}

uint64_t sub_1AFE6D998()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1AFE6D9D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(uint64_t (**)(void *))(v4 + 16);
  v7[0] = a1;
  v7[1] = a2;
  v7[2] = a3;
  v7[3] = a4;
  return v5(v7);
}

uint64_t sub_1AFE6DA0C()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

void sub_1AFE6DA4C(uint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, void *a5)
{
  sub_1AFE6D408(a1, a2, a3, a4, a5, *(void (**)(void))(v5 + 16), *(void *)(v5 + 24), *(void (**)(void, void, void, void))(v5 + 32), *(void *)(v5 + 40));
}

unint64_t sub_1AFE6DA78()
{
  unint64_t result = qword_1EB811558;
  if (!qword_1EB811558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB811558);
  }
  return result;
}

unsigned char *_s12ManagerErrorOwst(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1AFE6DB68);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s12ManagerErrorOMa()
{
  return &_s12ManagerErrorON;
}

uint64_t destroy for RemoteConfigurationResult(uint64_t a1)
{
  sub_1AFD4B504(*(void *)a1, *(void *)(a1 + 8));
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t *initializeWithCopy for RemoteConfigurationResult(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_1AFD4B0E0(*a2, v5);
  *a1 = v4;
  a1[1] = v5;
  uint64_t v6 = a2[2];
  uint64_t v7 = a2[3];
  a1[2] = v6;
  a1[3] = v7;
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  return a1;
}

uint64_t *assignWithCopy for RemoteConfigurationResult(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_1AFD4B0E0(*a2, v5);
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_1AFD4B504(v6, v7);
  a1[2] = a2[2];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for RemoteConfigurationResult(uint64_t a1, _OWORD *a2)
{
  uint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *a2;
  sub_1AFD4B504(v4, v5);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoteConfigurationResult(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RemoteConfigurationResult(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteConfigurationResult()
{
  return &type metadata for RemoteConfigurationResult;
}

unint64_t sub_1AFE6DDAC()
{
  unint64_t result = qword_1E9AFBA68;
  if (!qword_1E9AFBA68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBA68);
  }
  return result;
}

uint64_t sub_1AFE6DE00(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1AFDED0BC(*a1, *a2);
}

uint64_t sub_1AFE6DE0C()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFE6DEC4()
{
  sub_1AFFCAF68();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFE6DF68()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFE6E01C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFE6EE94();
  *a1 = result;
  return result;
}

void sub_1AFE6E04C(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xED0000676E697373;
  unint64_t v4 = 0xE900000000000065;
  uint64_t v5 = 0x746972777265766FLL;
  if (v2 != 1)
  {
    uint64_t v5 = 0x65646C4F7065656BLL;
    unint64_t v4 = 0xEA00000000007473;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x694D6649796C6E6FLL;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

void sub_1AFE6E0C0(void *a1)
{
  int v2 = (void *)sub_1AFFC9838();
  unint64_t v3 = (void *)sub_1AFFCAE68();
  objc_msgSend(a1, sel_encodeObject_forKey_, v2, v3);

  unint64_t v4 = (void *)sub_1AFFCAE68();
  swift_bridgeObjectRelease();
  id v5 = (id)sub_1AFFCAE68();
  objc_msgSend(a1, sel_encodeObject_forKey_, v4, v5);
}

id sub_1AFE6E28C(void *a1)
{
  int v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  sub_1AFD2C83C();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1AFFC98F8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  unint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = v2;
  id v13 = (void *)sub_1AFFCAE68();
  id v14 = objc_msgSend(a1, sel_decodeObjectForKey_, v13);

  if (v14)
  {
    sub_1AFFCB6F8();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v24 = 0u;
    long long v25 = 0u;
  }
  sub_1AFD3BCF4((uint64_t)&v24, (uint64_t)v26);
  if (v27)
  {
    int v15 = swift_dynamicCast();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v7, v15 ^ 1u, 1, v8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
      (*(void (**)(unsigned char *, char *, uint64_t))(v9 + 16))(&v12[OBJC_IVAR___SCUpdateUserStartDateCommand_startDate], v11, v8);
      uint64_t v16 = (void *)sub_1AFFCAE68();
      id v17 = objc_msgSend(a1, sel_decodeObjectForKey_, v16);

      if (v17)
      {
        sub_1AFFCB6F8();
        swift_unknownObjectRelease();
      }
      else
      {
        long long v24 = 0u;
        long long v25 = 0u;
      }
      sub_1AFD3BCF4((uint64_t)&v24, (uint64_t)v26);
      if (v27)
      {
        if (swift_dynamicCast())
        {
          uint64_t v19 = sub_1AFFCBA78();
          swift_bridgeObjectRelease();
          if (v19 == 2) {
            char v20 = 2;
          }
          else {
            char v20 = v19 == 1;
          }
          goto LABEL_18;
        }
      }
      else
      {
        sub_1AFE6EF78((uint64_t)v26, (uint64_t (*)(void))sub_1AFD3BD58);
      }
      char v20 = 0;
LABEL_18:
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      v12[OBJC_IVAR___SCUpdateUserStartDateCommand_mergePolicy] = v20;

      v23.receiver = v12;
      v23.super_class = ObjectType;
      id v18 = objc_msgSendSuper2(&v23, sel_init);

      return v18;
    }
  }
  else
  {
    sub_1AFE6EF78((uint64_t)v26, (uint64_t (*)(void))sub_1AFD3BD58);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
  }

  sub_1AFE6EF78((uint64_t)v7, (uint64_t (*)(void))sub_1AFD2C83C);
  swift_deallocPartialClassInstance();
  return 0;
}

uint64_t sub_1AFE6E790()
{
  return type metadata accessor for UpdateUserStartDateCommand();
}

uint64_t type metadata accessor for UpdateUserStartDateCommand()
{
  uint64_t result = qword_1EB8178D8;
  if (!qword_1EB8178D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1AFE6E7E4()
{
  uint64_t result = sub_1AFFC98F8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1AFE6E87C(void *a1, uint64_t a2)
{
  id v4 = objc_msgSend(a1, sel_encryptedValues);
  uint64_t v5 = (void *)sub_1AFFCAE68();
  id v6 = objc_msgSend(v4, sel_objectForKeyedSubscript_, v5);

  swift_unknownObjectRelease();
  if (sub_1AFE6E9AC(a2, (uint64_t)v6))
  {
    id v7 = objc_msgSend(a1, sel_encryptedValues);
    uint64_t v8 = (void *)sub_1AFFC9838();
    uint64_t v9 = (void *)sub_1AFFCAE68();
    objc_msgSend(v7, sel_setObject_forKeyedSubscript_, v8, v9);
    swift_unknownObjectRelease();
  }

  return swift_unknownObjectRelease();
}

uint64_t sub_1AFE6E9AC(uint64_t a1, uint64_t a2)
{
  sub_1AFD2C83C();
  MEMORY[0x1F4188790](v4 - 8);
  id v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1AFFC98F8();
  uint64_t v8 = *(void *)(v7 - 8);
  double v9 = MEMORY[0x1F4188790](v7);
  unint64_t v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(unsigned char *)(a1 + OBJC_IVAR___SCUpdateUserStartDateCommand_mergePolicy))
  {
    char v13 = a2 == 0;
    return v13 & 1;
  }
  if (*(unsigned char *)(a1 + OBJC_IVAR___SCUpdateUserStartDateCommand_mergePolicy) == 1)
  {
LABEL_9:
    char v13 = 1;
    return v13 & 1;
  }
  if (!a2)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v8 + 56))(v6, 1, 1, v7, v9);
    goto LABEL_8;
  }
  v15[1] = a2;
  sub_1AFE6EF20();
  swift_unknownObjectRetain();
  int v12 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, v12 ^ 1u, 1, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
LABEL_8:
    sub_1AFE6EF78((uint64_t)v6, (uint64_t (*)(void))sub_1AFD2C83C);
    goto LABEL_9;
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v6, v7);
  char v13 = sub_1AFFC9858();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  return v13 & 1;
}

unsigned char *storeEnumTagSinglePayload for UpdateUserStartDateCommand.MergePolicy(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFE6EE04);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UpdateUserStartDateCommand.MergePolicy()
{
  return &type metadata for UpdateUserStartDateCommand.MergePolicy;
}

unint64_t sub_1AFE6EE40()
{
  unint64_t result = qword_1E9AFBA78;
  if (!qword_1E9AFBA78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1E9AFBA78);
  }
  return result;
}

uint64_t sub_1AFE6EE94()
{
  unint64_t v0 = sub_1AFFCBA78();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_1AFE6EEE0()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1AFE6EF18(void *a1)
{
  return sub_1AFE6E87C(a1, *(void *)(v1 + 16));
}

unint64_t sub_1AFE6EF20()
{
  unint64_t result = qword_1EB8112A0;
  if (!qword_1EB8112A0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB8112A0);
  }
  return result;
}

uint64_t sub_1AFE6EF78(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

id sub_1AFE6EFD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = (void *)v6;
  uint64_t v46 = a3;
  uint64_t v47 = a4;
  uint64_t v44 = a1;
  uint64_t v45 = a2;
  sub_1AFD392D8();
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v48 = (uint64_t)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  char v13 = (char *)&v41 - v12;
  if (a6)
  {
    sub_1AFD38DF8((uint64_t)&v41 - v12);
    uint64_t v14 = sub_1AFFC96E8();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 0, 1, v14);
  }
  else
  {
    uint64_t v15 = sub_1AFFC96E8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v13, 1, 1, v15);
  }
  uint64_t v16 = qword_1AFFDC6D8[*(char *)(v6 + 64)];
  if (qword_1EB818A38 != -1) {
    swift_once();
  }
  sub_1AFE6FAD0();
  sub_1AFFC9BB8();
  uint64_t v17 = v49;
  if (qword_1EB818A30 != -1) {
    swift_once();
  }
  char v18 = sub_1AFFC9BF8() & 1;
  uint64_t v19 = sub_1AFE6F514((uint64_t)v7, v18, &qword_1EB818970);
  uint64_t v20 = sub_1AFE6F514((uint64_t)v7, v18, &qword_1EB819B18);
  uint64_t v21 = sub_1AFE6F98C(v7, v18);
  uint64_t v42 = v22;
  uint64_t v43 = v21;
  if (qword_1EB818A28 != -1) {
    swift_once();
  }
  sub_1AFFC9BB8();
  uint64_t v23 = v49;
  if (qword_1EB819AE0 != -1) {
    swift_once();
  }
  sub_1AFFC9BB8();
  uint64_t v24 = v50;
  if (v19)
  {
    sub_1AFD7BE90();
    long long v25 = (void *)sub_1AFFCB1B8();
    swift_bridgeObjectRelease();
    if (v20)
    {
LABEL_14:
      sub_1AFD7BE90();
      unint64_t v26 = (void *)sub_1AFFCB1B8();
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
  }
  else
  {
    long long v25 = 0;
    if (v20) {
      goto LABEL_14;
    }
  }
  unint64_t v26 = 0;
LABEL_17:
  id v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F95DA0]), sel_initWithDisableAbTesting_overrideSegmentSetIDs_additionalSegmentSetIDs_configurationSource_debugEnvironment_ignoreCache_, v23, v25, v26, v17, v16, v24);

  sub_1AFE6FB24((uint64_t)v13, v48);
  if (qword_1EB819AC8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v28 = qword_1EB818960;
  uint64_t v29 = qword_1EB818968;
  id v30 = self;
  sub_1AFFC8E38();
  id v31 = objc_msgSend(v30, sel_mainBundle);
  id v32 = objc_msgSend(v31, sel_bundleIdentifier);

  if (v32)
  {
    uint64_t v33 = sub_1AFFCAE98();
    uint64_t v35 = v34;
  }
  else
  {
    uint64_t v33 = 0;
    uint64_t v35 = 0xE000000000000000;
  }
  id v36 = objc_msgSend(self, sel_defaultDeviceInfo);
  objc_allocWithZone(MEMORY[0x1E4F95D98]);
  uint64_t v37 = v47;
  sub_1AFFC8E38();
  uint64_t v38 = v45;
  sub_1AFFC8E38();
  id v39 = sub_1AFE6FB88(15.0, v44, v38, v46, v37, v48, v43, v42, v28, v29, v33, v35, v36, v27, 0, 1);
  sub_1AFD48D50((uint64_t)v13);
  return v39;
}

uint64_t sub_1AFE6F514(uint64_t a1, char a2, void *a3)
{
  if (*a3 != -1) {
    swift_once();
  }
  type metadata accessor for RemoteConfigurationSettingsFactory();
  sub_1AFE6FAD0();
  sub_1AFFC9BB8();
  uint64_t v4 = HIBYTE(v35) & 0xF;
  if ((v35 & 0x2000000000000000) == 0) {
    uint64_t v4 = v34 & 0xFFFFFFFFFFFFLL;
  }
  if (!v4 || (a2 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  sub_1AFD3AE10();
  uint64_t v5 = sub_1AFFCB6A8();
  swift_bridgeObjectRelease();
  uint64_t v6 = MEMORY[0x1E4FBC860];
  uint64_t v33 = MEMORY[0x1E4FBC860];
  uint64_t v7 = *(void *)(v5 + 16);
  if (!v7)
  {
LABEL_71:
    swift_bridgeObjectRelease();
    return v6;
  }
  uint64_t result = sub_1AFFC8E38();
  uint64_t v9 = 0;
  while (1)
  {
    uint64_t v10 = (uint64_t *)(v5 + 32 + 16 * v9);
    uint64_t v12 = *v10;
    unint64_t v11 = v10[1];
    uint64_t v13 = HIBYTE(v11) & 0xF;
    uint64_t v14 = v12 & 0xFFFFFFFFFFFFLL;
    if ((v11 & 0x2000000000000000) != 0 ? HIBYTE(v11) & 0xF : v12 & 0xFFFFFFFFFFFFLL) {
      break;
    }
    sub_1AFFC8E38();
    uint64_t v17 = 0;
LABEL_57:
    id v28 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v17);
    uint64_t result = swift_bridgeObjectRelease();
    if (v28)
    {
      MEMORY[0x1B3E8D5F0](result);
      if (*(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1AFFCB228();
      }
      sub_1AFFCB278();
      uint64_t result = sub_1AFFCB1E8();
    }
    if (++v9 == v7)
    {
      swift_bridgeObjectRelease();
      uint64_t v6 = v33;
      goto LABEL_71;
    }
  }
  if ((v11 & 0x1000000000000000) != 0)
  {
    sub_1AFFC8E38();
    uint64_t v17 = (uint64_t)sub_1AFE6FE7C(v12, v11, 10);
    LOBYTE(v12) = v32;
LABEL_55:
    if (v12) {
      uint64_t v17 = 0;
    }
    goto LABEL_57;
  }
  if ((v11 & 0x2000000000000000) == 0)
  {
    if ((v12 & 0x1000000000000000) != 0) {
      uint64_t v16 = (unsigned __int8 *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v16 = (unsigned __int8 *)sub_1AFFCB878();
    }
    uint64_t v17 = (uint64_t)sub_1AFE6FF64(v16, v14, 10);
    LOBYTE(v12) = v18 & 1;
    goto LABEL_54;
  }
  uint64_t v34 = v12;
  unint64_t v35 = v11 & 0xFFFFFFFFFFFFFFLL;
  if (v12 == 43)
  {
    if (!v13) {
      goto LABEL_74;
    }
    if (v13 == 1 || (BYTE1(v12) - 48) > 9u) {
      goto LABEL_41;
    }
    uint64_t v17 = (BYTE1(v12) - 48);
    if (v13 != 2)
    {
      if ((BYTE2(v12) - 48) > 9u) {
        goto LABEL_41;
      }
      uint64_t v17 = 10 * (BYTE1(v12) - 48) + (BYTE2(v12) - 48);
      uint64_t v19 = v13 - 3;
      if (v19)
      {
        uint64_t v20 = (unsigned __int8 *)&v34 + 3;
        while (1)
        {
          unsigned int v21 = *v20 - 48;
          if (v21 > 9) {
            goto LABEL_41;
          }
          uint64_t v22 = 10 * v17;
          if ((unsigned __int128)(v17 * (__int128)10) >> 64 != (10 * v17) >> 63) {
            goto LABEL_41;
          }
          uint64_t v17 = v22 + v21;
          if (__OFADD__(v22, v21)) {
            goto LABEL_41;
          }
          LOBYTE(v12) = 0;
          ++v20;
          if (!--v19) {
            goto LABEL_54;
          }
        }
      }
    }
LABEL_53:
    LOBYTE(v12) = 0;
    goto LABEL_54;
  }
  if (v12 != 45)
  {
    if (!v13 || (v12 - 48) > 9u) {
      goto LABEL_41;
    }
    uint64_t v17 = (v12 - 48);
    if (v13 != 1)
    {
      if ((BYTE1(v12) - 48) > 9u) {
        goto LABEL_41;
      }
      uint64_t v17 = 10 * (v12 - 48) + (BYTE1(v12) - 48);
      uint64_t v23 = v13 - 2;
      if (v23)
      {
        uint64_t v24 = (unsigned __int8 *)&v34 + 2;
        while (1)
        {
          unsigned int v25 = *v24 - 48;
          if (v25 > 9) {
            goto LABEL_41;
          }
          uint64_t v26 = 10 * v17;
          if ((unsigned __int128)(v17 * (__int128)10) >> 64 != (10 * v17) >> 63) {
            goto LABEL_41;
          }
          uint64_t v17 = v26 + v25;
          if (__OFADD__(v26, v25)) {
            goto LABEL_41;
          }
          LOBYTE(v12) = 0;
          ++v24;
          if (!--v23) {
            goto LABEL_54;
          }
        }
      }
    }
    goto LABEL_53;
  }
  if (v13)
  {
    if (v13 != 1 && (BYTE1(v12) - 48) <= 9u)
    {
      if (v13 == 2)
      {
        LOBYTE(v12) = 0;
        uint64_t v17 = -(uint64_t)(BYTE1(v12) - 48);
LABEL_54:
        sub_1AFFC8E38();
        goto LABEL_55;
      }
      if ((BYTE2(v12) - 48) <= 9u)
      {
        uint64_t v17 = -10 * (BYTE1(v12) - 48) - (BYTE2(v12) - 48);
        uint64_t v27 = v13 - 3;
        if (!v27) {
          goto LABEL_53;
        }
        uint64_t v29 = (unsigned __int8 *)&v34 + 3;
        while (1)
        {
          unsigned int v30 = *v29 - 48;
          if (v30 > 9) {
            break;
          }
          uint64_t v31 = 10 * v17;
          if ((unsigned __int128)(v17 * (__int128)10) >> 64 != (10 * v17) >> 63) {
            break;
          }
          uint64_t v17 = v31 - v30;
          if (__OFSUB__(v31, v30)) {
            break;
          }
          LOBYTE(v12) = 0;
          ++v29;
          if (!--v27) {
            goto LABEL_54;
          }
        }
      }
    }
LABEL_41:
    uint64_t v17 = 0;
    LOBYTE(v12) = 1;
    goto LABEL_54;
  }
  __break(1u);
LABEL_74:
  __break(1u);
  return result;
}

uint64_t sub_1AFE6F98C(void *a1, char a2)
{
  if (qword_1EB819AF8 != -1) {
    swift_once();
  }
  type metadata accessor for RemoteConfigurationSettingsFactory();
  sub_1AFE6FAD0();
  sub_1AFFC9BB8();
  uint64_t result = v8;
  uint64_t v5 = HIBYTE(v9) & 0xF;
  if ((v9 & 0x2000000000000000) == 0) {
    uint64_t v5 = v8 & 0xFFFFFFFFFFFFLL;
  }
  if (!v5 || (a2 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = a1[5];
    uint64_t v7 = a1[6];
    __swift_project_boxed_opaque_existential_1(a1 + 2, v6);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
  }
  return result;
}

uint64_t sub_1AFE6FA6C()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RemoteConfigurationSettingsFactory()
{
  return self;
}

unint64_t sub_1AFE6FAD0()
{
  unint64_t result = qword_1EB819938;
  if (!qword_1EB819938)
  {
    type metadata accessor for RemoteConfigurationSettingsFactory();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819938);
  }
  return result;
}

uint64_t sub_1AFE6FB24(uint64_t a1, uint64_t a2)
{
  sub_1AFD392D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id sub_1AFE6FB88(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, char a15, uint64_t a16)
{
  char v18 = (void *)sub_1AFFCAE68();
  swift_bridgeObjectRelease();
  uint64_t v19 = (void *)sub_1AFFCAE68();
  swift_bridgeObjectRelease();
  uint64_t v20 = sub_1AFFC96E8();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(a6, 1, v20) != 1)
  {
    uint64_t v22 = (void *)sub_1AFFC9638();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(a6, v20);
  }
  uint64_t v23 = (void *)sub_1AFFCAE68();
  swift_bridgeObjectRelease();
  uint64_t v24 = (void *)sub_1AFFCAE68();
  swift_bridgeObjectRelease();
  unsigned int v25 = (void *)sub_1AFFCAE68();
  swift_bridgeObjectRelease();
  LOBYTE(v28) = a15 & 1;
  id v26 = objc_msgSend(v29, sel_initWithRequestKey_responseKey_fallbackURL_userID_storefrontID_bundleID_deviceInfo_debugOverrides_useBackgroundRefreshRate_requestMode_endpointTimeoutDuration_, v18, v19, v22, v23, v24, v25, a1, a13, a14, v28, a16);

  return v26;
}

void *sub_1AFE6FD84(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1AFE706CC();
  uint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1AFE6FDE8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_1AFFCB008();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = MEMORY[0x1B3E8D430](15, a1 >> 16);
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

unsigned __int8 *sub_1AFE6FE64(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return sub_1AFE6FF64(a1, a2, a3);
}

unsigned __int8 *sub_1AFE6FE7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  sub_1AFFC8E38();
  uint64_t v5 = sub_1AFFCB038();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    unint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_1AFE701E0();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    unint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    unint64_t v7 = (unsigned __int8 *)sub_1AFFCB878();
  }
LABEL_7:
  uint64_t v11 = sub_1AFE6FF64(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_1AFE6FF64(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (uint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      unsigned __int8 v22 = a3 + 48;
      unsigned __int8 v23 = a3 + 55;
      unsigned __int8 v24 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v22 = 58;
      }
      else
      {
        unsigned __int8 v24 = 97;
        unsigned __int8 v23 = 65;
      }
      if (result)
      {
        uint64_t v25 = 0;
        do
        {
          unsigned int v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24) {
                return 0;
              }
              char v27 = -87;
            }
            else
            {
              char v27 = -55;
            }
          }
          else
          {
            char v27 = -48;
          }
          uint64_t v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63) {
            return 0;
          }
          uint64_t v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  uint64_t v14 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v15 = a3 + 48;
  unsigned __int8 v16 = a3 + 55;
  unsigned __int8 v17 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v15 = 58;
  }
  else
  {
    unsigned __int8 v17 = 97;
    unsigned __int8 v16 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  char v18 = result + 1;
  do
  {
    unsigned int v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17) {
          return 0;
        }
        char v20 = -87;
      }
      else
      {
        char v20 = -55;
      }
    }
    else
    {
      char v20 = -48;
    }
    uint64_t v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20))) {
      return 0;
    }
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_1AFE701E0()
{
  unint64_t v0 = sub_1AFFCB048();
  uint64_t v4 = sub_1AFE70260(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1AFE70260(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_1AFE703B8(a1, a2, a3, a4);
    if (v9)
    {
      uint64_t v10 = v9;
      unsigned int v11 = sub_1AFE6FD84(v9, 0);
      unint64_t v12 = sub_1AFE704B8((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
LABEL_11:
        sub_1AFFCB878();
LABEL_4:
        JUMPOUT(0x1B3E8D3B0);
      }
    }
    else
    {
      unsigned int v11 = (void *)MEMORY[0x1E4FBC860];
    }
    uint64_t v13 = MEMORY[0x1B3E8D3B0](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x1B3E8D3B0]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

uint64_t sub_1AFE703B8(unint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    a1 = sub_1AFE6FDE8(a1, a3, a4);
    unint64_t v7 = a1;
  }
  if ((v6 & 0xC) == v9)
  {
    a1 = sub_1AFE6FDE8(v6, v5, v4);
    unint64_t v6 = a1;
    if ((v4 & 0x1000000000000000) == 0) {
      return (v6 >> 16) - (v7 >> 16);
    }
  }
  else if ((v4 & 0x1000000000000000) == 0)
  {
    return (v6 >> 16) - (v7 >> 16);
  }
  unint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v11 >= v6 >> 16)
  {
    a1 = v7;
    a2 = v6;
    a3 = v5;
    a4 = v4;
    return MEMORY[0x1F4183AA8](a1, a2, a3, a4);
  }
  __break(1u);
  return MEMORY[0x1F4183AA8](a1, a2, a3, a4);
}

unint64_t sub_1AFE704B8(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    void v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    unint64_t result = v12;
    if (v17 == v15) {
      unint64_t result = sub_1AFE6FDE8(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      unint64_t result = sub_1AFFCAFF8();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        unint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          unint64_t result = sub_1AFFCB878();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    unint64_t result = sub_1AFE6FDE8(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = sub_1AFFCAFC8();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

void sub_1AFE706CC()
{
  if (!qword_1EB8183D0)
  {
    unint64_t v0 = sub_1AFFCBC98();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8183D0);
    }
  }
}

uint64_t sub_1AFE70724(long long *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1AFFC9E18();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v10 = a1[7];
  long long v22 = a1[6];
  long long v23 = v10;
  uint64_t v24 = *((void *)a1 + 16);
  long long v11 = a1[3];
  long long v18 = a1[2];
  long long v19 = v11;
  long long v12 = a1[5];
  long long v20 = a1[4];
  long long v21 = v12;
  long long v13 = a1[1];
  long long v16 = *a1;
  long long v17 = v13;
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FAA980], v6);
  v25[6] = v22;
  v25[7] = v23;
  uint64_t v26 = v24;
  v25[2] = v18;
  v25[3] = v19;
  v25[4] = v20;
  v25[5] = v21;
  v25[0] = v16;
  v25[1] = v17;
  uint64_t v14 = (*(uint64_t (**)(_OWORD *, char *, void, uint64_t, uint64_t, uint64_t))(a3 + 8))(v25, v9, 0, 1, a2, a3);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v14;
}

uint64_t sub_1AFE708B4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  return sub_1AFE708BC(a1, a2, a3, a4 & 1, a5, a6);
}

uint64_t sub_1AFE708BC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v27 = a6;
  uint64_t v28 = a3;
  int v29 = a4;
  uint64_t v26 = a1;
  uint64_t v10 = sub_1AFFC9E18();
  v25[0] = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = *(void *)(a5 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x1F4188790](v15);
  long long v16 = (char *)v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFE74610(0, &qword_1EB811438, (void (*)(uint64_t))sub_1AFE70B9C);
  v25[1] = v17;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, v7, a5);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v10);
  unint64_t v18 = (*(unsigned __int8 *)(v13 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v19 = (v14 + *(unsigned __int8 *)(v11 + 80) + v18) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  long long v20 = (char *)swift_allocObject();
  uint64_t v22 = v26;
  uint64_t v21 = v27;
  *((void *)v20 + 2) = a5;
  *((void *)v20 + 3) = v21;
  *((void *)v20 + 4) = v22;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v20[v18], v16, a5);
  (*(void (**)(char *, char *, void))(v11 + 32))(&v20[v19], (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v25[0]);
  long long v23 = &v20[(v12 + v19 + 7) & 0xFFFFFFFFFFFFFFF8];
  *(void *)long long v23 = v28;
  v23[8] = v29 & 1;
  sub_1AFFC8E38();
  return sub_1AFFCA658();
}

uint64_t sub_1AFE70B30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  long long v4 = *(_OWORD *)(a1 + 112);
  v9[6] = *(_OWORD *)(a1 + 96);
  v9[7] = v4;
  uint64_t v10 = *(void *)(a1 + 128);
  long long v5 = *(_OWORD *)(a1 + 48);
  void v9[2] = *(_OWORD *)(a1 + 32);
  v9[3] = v5;
  long long v6 = *(_OWORD *)(a1 + 80);
  v9[4] = *(_OWORD *)(a1 + 64);
  v9[5] = v6;
  long long v7 = *(_OWORD *)(a1 + 16);
  v9[0] = *(_OWORD *)a1;
  v9[1] = v7;
  return (*(uint64_t (**)(_OWORD *, uint64_t, void, uint64_t, uint64_t, uint64_t))(a4 + 8))(v9, a2, 0, 1, a3, a4);
}

void sub_1AFE70B9C()
{
  if (!qword_1EB811440)
  {
    sub_1AFD40AA0(255, (unint64_t *)&qword_1EB818000);
    sub_1AFD764A0();
    unint64_t v0 = sub_1AFFCAD18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB811440);
    }
  }
}

uint64_t sub_1AFE70C18(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v7 + 192) = a6;
  *(void *)(v7 + 200) = v6;
  *(void *)(v7 + 176) = a3;
  *(void *)(v7 + 184) = a5;
  *(unsigned char *)(v7 + 161) = a4;
  *(void *)(v7 + 168) = a2;
  long long v8 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v7 + 112) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v7 + 128) = v8;
  *(void *)(v7 + 144) = *(void *)(a1 + 128);
  long long v9 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v7 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v7 + 64) = v9;
  long long v10 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v7 + 80) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v7 + 96) = v10;
  long long v11 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v7 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v7 + 32) = v11;
  return MEMORY[0x1F4188298](sub_1AFE70C6C, 0, 0);
}

uint64_t sub_1AFE70C6C()
{
  *(void *)(v0 + 208) = (*(uint64_t (**)(uint64_t, void, void, void, void))(*(void *)(v0 + 192)
                                                                                             + 8))(v0 + 16, *(void *)(v0 + 168), *(void *)(v0 + 176), *(unsigned char *)(v0 + 161) & 1, *(void *)(v0 + 184));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 216) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1AFE70D3C;
  return MEMORY[0x1F415EBC8](v0 + 152);
}

uint64_t sub_1AFE70D3C()
{
  *(void *)(*(void *)v1 + 224) = v0;
  swift_task_dealloc();
  if (v0)
  {
    unint64_t v2 = sub_1AFE70E78;
  }
  else
  {
    swift_release();
    unint64_t v2 = sub_1AFE70E58;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1AFE70E58()
{
  return (*(uint64_t (**)(void, void))(v0 + 8))(*(void *)(v0 + 152), *(unsigned __int8 *)(v0 + 160));
}

uint64_t sub_1AFE70E78()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1AFE70EE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(unsigned char *)(v5 + 400) = a5;
  *(void *)(v5 + 320) = a3;
  *(void *)(v5 + 328) = a4;
  *(void *)(v5 + 304) = a1;
  *(void *)(v5 + 312) = a2;
  uint64_t v6 = sub_1AFFC9E18();
  *(void *)(v5 + 336) = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  *(void *)(v5 + 344) = v7;
  *(void *)(v5 + 352) = *(void *)(v7 + 64);
  *(void *)(v5 + 360) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1AFE70FB0, 0, 0);
}

uint64_t sub_1AFE70FB0()
{
  uint64_t v1 = *(void *)(v0 + 352);
  uint64_t v2 = *(void *)(v0 + 360);
  uint64_t v3 = *(void *)(v0 + 336);
  uint64_t v4 = *(void *)(v0 + 344);
  char v5 = *(unsigned char *)(v0 + 400);
  uint64_t v6 = *(void *)(v0 + 320);
  uint64_t v7 = *(void *)(v0 + 328);
  uint64_t v8 = *(void *)(v0 + 312);
  *(void *)(v0 + 296) = *(void *)(v0 + 304);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v6, v3);
  unint64_t v9 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v10 = (v1 + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = swift_allocObject();
  *(void *)(v0 + 368) = v11;
  *(void *)(v11 + 16) = v8;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v11 + v9, v2, v3);
  unint64_t v12 = v11 + v10;
  *(void *)unint64_t v12 = v7;
  *(unsigned char *)(v12 + 8) = v5 & 1;
  sub_1AFFC8E48();
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v0 + 376) = v13;
  sub_1AFD40AA0(0, &qword_1EB817FE8);
  uint64_t v15 = v14;
  sub_1AFE7380C();
  uint64_t v17 = v16;
  unint64_t v18 = sub_1AFDA5FB8();
  *uint64_t v13 = v0;
  v13[1] = sub_1AFE71164;
  return MEMORY[0x1F415F050](&unk_1E9AFBAB8, v11, v15, v17, v18);
}

uint64_t sub_1AFE71164(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 384) = a1;
  *(void *)(v3 + 392) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_1AFE7510C;
  }
  else
  {
    swift_release();
    uint64_t v4 = sub_1AFE75114;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1AFE71280(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(unsigned char *)(v5 + 400) = a5;
  *(void *)(v5 + 320) = a3;
  *(void *)(v5 + 328) = a4;
  *(void *)(v5 + 304) = a1;
  *(void *)(v5 + 312) = a2;
  uint64_t v6 = sub_1AFFC9E18();
  *(void *)(v5 + 336) = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  *(void *)(v5 + 344) = v7;
  *(void *)(v5 + 352) = *(void *)(v7 + 64);
  *(void *)(v5 + 360) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1AFE71350, 0, 0);
}

uint64_t sub_1AFE71350()
{
  uint64_t v1 = *(void *)(v0 + 352);
  uint64_t v2 = *(void *)(v0 + 360);
  uint64_t v3 = *(void *)(v0 + 336);
  uint64_t v4 = *(void *)(v0 + 344);
  char v5 = *(unsigned char *)(v0 + 400);
  uint64_t v6 = *(void *)(v0 + 320);
  uint64_t v7 = *(void *)(v0 + 328);
  uint64_t v8 = *(void *)(v0 + 312);
  *(void *)(v0 + 296) = *(void *)(v0 + 304);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v6, v3);
  unint64_t v9 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v10 = (v1 + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = swift_allocObject();
  *(void *)(v0 + 368) = v11;
  *(void *)(v11 + 16) = v8;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v11 + v9, v2, v3);
  unint64_t v12 = v11 + v10;
  *(void *)unint64_t v12 = v7;
  *(unsigned char *)(v12 + 8) = v5 & 1;
  sub_1AFFC8E48();
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v0 + 376) = v13;
  sub_1AFD40AA0(0, &qword_1EB817FE8);
  uint64_t v15 = v14;
  sub_1AFE7380C();
  uint64_t v17 = v16;
  unint64_t v18 = sub_1AFDA5FB8();
  *uint64_t v13 = v0;
  v13[1] = sub_1AFE71504;
  return MEMORY[0x1F415F050](&unk_1E9AFBAF8, v11, v15, v17, v18);
}

uint64_t sub_1AFE71504(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 384) = a1;
  *(void *)(v3 + 392) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_1AFE71994;
  }
  else
  {
    swift_release();
    uint64_t v4 = sub_1AFE71620;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1AFE71620()
{
  uint64_t v1 = *(void *)(v0 + 384);
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
  if (!v2)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    v53 = *(uint64_t (**)(void *))(v0 + 8);
    return v53(v3);
  }
  uint64_t v4 = (_OWORD *)(v0 + 16);
  uint64_t v5 = v0 + 160;
  sub_1AFFC8E38();
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v1 + 32);
  long long v6 = *(_OWORD *)(v1 + 48);
  long long v7 = *(_OWORD *)(v1 + 64);
  long long v8 = *(_OWORD *)(v1 + 96);
  *(_OWORD *)(v0 + 64) = *(_OWORD *)(v1 + 80);
  *(_OWORD *)(v0 + 80) = v8;
  *(_OWORD *)(v0 + 32) = v6;
  *(_OWORD *)(v0 + 48) = v7;
  long long v9 = *(_OWORD *)(v1 + 112);
  long long v10 = *(_OWORD *)(v1 + 128);
  long long v11 = *(_OWORD *)(v1 + 160);
  *(_OWORD *)(v0 + 128) = *(_OWORD *)(v1 + 144);
  *(_OWORD *)(v0 + 144) = v11;
  *(_OWORD *)(v0 + 96) = v9;
  *(_OWORD *)(v0 + 112) = v10;
  uint64_t v54 = v0;
  uint64_t v55 = *(void *)(v0 + 152);
  *(_OWORD *)(v0 + 160) = *(_OWORD *)(v1 + 32);
  long long v12 = *(_OWORD *)(v1 + 96);
  long long v14 = *(_OWORD *)(v1 + 48);
  long long v13 = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(v0 + 208) = *(_OWORD *)(v1 + 80);
  *(_OWORD *)(v0 + 224) = v12;
  *(_OWORD *)(v0 + 176) = v14;
  *(_OWORD *)(v0 + 192) = v13;
  long long v16 = *(_OWORD *)(v1 + 128);
  long long v15 = *(_OWORD *)(v1 + 144);
  long long v17 = *(_OWORD *)(v1 + 112);
  *(void *)(v0 + 288) = *(void *)(v1 + 160);
  *(_OWORD *)(v0 + 256) = v16;
  *(_OWORD *)(v0 + 272) = v15;
  *(_OWORD *)(v0 + 240) = v17;
  sub_1AFE12938(v0 + 16);
  sub_1AFE12938(v0 + 16);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v56 = v3;
  unint64_t v20 = sub_1AFD79E90((unint64_t *)(v0 + 160));
  uint64_t v21 = v3[2];
  BOOL v22 = (v19 & 1) == 0;
  uint64_t result = v21 + v22;
  if (!__OFADD__(v21, v22))
  {
    char v24 = v19;
    uint64_t v25 = (_OWORD *)(v1 + 176);
    do
    {
      if (v3[3] >= result)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1AFEB988C();
          uint64_t v3 = v56;
        }
      }
      else
      {
        sub_1AFEB4890(result, isUniquelyReferenced_nonNull_native & 1);
        uint64_t v3 = v56;
        unint64_t v26 = sub_1AFD79E90((unint64_t *)v5);
        if ((v24 & 1) != (v27 & 1))
        {
          return sub_1AFFCBD68();
        }
        unint64_t v20 = v26;
      }
      uint64_t result = swift_bridgeObjectRelease();
      if ((v24 & 1) == 0)
      {
        v3[(v20 >> 6) + 8] |= 1 << v20;
        uint64_t v28 = v3[6] + 136 * v20;
        long long v30 = *(_OWORD *)(v5 + 48);
        long long v29 = *(_OWORD *)(v5 + 64);
        long long v31 = *(_OWORD *)(v5 + 32);
        *(_OWORD *)(v28 + 16) = *(_OWORD *)(v5 + 16);
        *(_OWORD *)(v28 + 32) = v31;
        *(_OWORD *)(v28 + 48) = v30;
        *(_OWORD *)(v28 + 64) = v29;
        *(_OWORD *)uint64_t v28 = *(_OWORD *)v5;
        long long v32 = *(_OWORD *)(v5 + 80);
        long long v33 = *(_OWORD *)(v5 + 96);
        long long v34 = *(_OWORD *)(v5 + 112);
        *(void *)(v28 + 128) = *(void *)(v5 + 128);
        *(_OWORD *)(v28 + 96) = v33;
        *(_OWORD *)(v28 + 112) = v34;
        *(_OWORD *)(v28 + 80) = v32;
        *(void *)(v3[7] + 8 * v20) = MEMORY[0x1E4FBC860];
        uint64_t v35 = v3[2];
        BOOL v36 = __OFADD__(v35, 1);
        uint64_t v37 = v35 + 1;
        if (v36) {
          goto LABEL_24;
        }
        v3[2] = v37;
        sub_1AFD76370((uint64_t)v4);
      }
      sub_1AFF0F93C(v55);
      sub_1AFD76408((uint64_t)v4);
      sub_1AFE12890((uint64_t)v4);
      if (!--v2)
      {
        uint64_t v0 = v54;
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
      *uint64_t v4 = *v25;
      long long v38 = v25[1];
      long long v39 = v25[2];
      long long v40 = v25[4];
      v4[3] = v25[3];
      v4[4] = v40;
      v4[1] = v38;
      v4[2] = v39;
      long long v41 = v25[5];
      long long v42 = v25[6];
      long long v43 = v25[8];
      v4[7] = v25[7];
      v4[8] = v43;
      v4[5] = v41;
      v4[6] = v42;
      uint64_t v55 = *(void *)(v54 + 152);
      *(_OWORD *)uint64_t v5 = *v25;
      long long v44 = v25[4];
      long long v46 = v25[1];
      long long v45 = v25[2];
      *(_OWORD *)(v5 + 48) = v25[3];
      *(_OWORD *)(v5 + 64) = v44;
      *(_OWORD *)(v5 + 16) = v46;
      *(_OWORD *)(v5 + 32) = v45;
      long long v48 = v25[6];
      long long v47 = v25[7];
      long long v49 = v25[5];
      *(void *)(v5 + 128) = *((void *)v25 + 16);
      *(_OWORD *)(v5 + 96) = v48;
      *(_OWORD *)(v5 + 112) = v47;
      *(_OWORD *)(v5 + 80) = v49;
      sub_1AFE12938((uint64_t)v4);
      sub_1AFE12938((uint64_t)v4);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v56 = v3;
      unint64_t v20 = sub_1AFD79E90((unint64_t *)v5);
      char v24 = v50;
      uint64_t v51 = v3[2];
      BOOL v52 = (v50 & 1) == 0;
      v25 += 9;
      uint64_t result = v51 + v52;
    }
    while (!__OFADD__(v51, v52));
  }
  __break(1u);
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_1AFE71994()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1AFE71A00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(unsigned char *)(v5 + 400) = a5;
  *(void *)(v5 + 320) = a3;
  *(void *)(v5 + 328) = a4;
  *(void *)(v5 + 304) = a1;
  *(void *)(v5 + 312) = a2;
  uint64_t v6 = sub_1AFFC9E18();
  *(void *)(v5 + 336) = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  *(void *)(v5 + 344) = v7;
  *(void *)(v5 + 352) = *(void *)(v7 + 64);
  *(void *)(v5 + 360) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1AFE71AD0, 0, 0);
}

uint64_t sub_1AFE71AD0()
{
  uint64_t v1 = *(void *)(v0 + 352);
  uint64_t v2 = *(void *)(v0 + 360);
  uint64_t v3 = *(void *)(v0 + 336);
  uint64_t v4 = *(void *)(v0 + 344);
  char v5 = *(unsigned char *)(v0 + 400);
  uint64_t v6 = *(void *)(v0 + 320);
  uint64_t v7 = *(void *)(v0 + 328);
  uint64_t v8 = *(void *)(v0 + 312);
  *(void *)(v0 + 296) = *(void *)(v0 + 304);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v6, v3);
  unint64_t v9 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v10 = (v1 + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = swift_allocObject();
  *(void *)(v0 + 368) = v11;
  *(void *)(v11 + 16) = v8;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v11 + v9, v2, v3);
  unint64_t v12 = v11 + v10;
  *(void *)unint64_t v12 = v7;
  *(unsigned char *)(v12 + 8) = v5 & 1;
  sub_1AFFC8E48();
  long long v13 = (void *)swift_task_alloc();
  *(void *)(v0 + 376) = v13;
  sub_1AFD40AA0(0, &qword_1EB817FE8);
  uint64_t v15 = v14;
  sub_1AFE7380C();
  uint64_t v17 = v16;
  unint64_t v18 = sub_1AFDA5FB8();
  *long long v13 = v0;
  v13[1] = sub_1AFE71164;
  return MEMORY[0x1F415F050](&unk_1E9AFBB28, v11, v15, v17, v18);
}

uint64_t sub_1AFE71C84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 344) = a7;
  *(void *)(v8 + 352) = a8;
  *(unsigned char *)(v8 + 448) = a6;
  *(void *)(v8 + 328) = a4;
  *(void *)(v8 + 336) = a5;
  *(void *)(v8 + 312) = a2;
  *(void *)(v8 + 320) = a3;
  *(void *)(v8 + 304) = a1;
  uint64_t v10 = sub_1AFFC9E18();
  *(void *)(v8 + 360) = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  *(void *)(v8 + 368) = v11;
  *(void *)(v8 + 376) = *(void *)(v11 + 64);
  *(void *)(v8 + 384) = swift_task_alloc();
  uint64_t v12 = *(void *)(a7 - 8);
  *(void *)(v8 + 392) = v12;
  *(void *)(v8 + 400) = *(void *)(v12 + 64);
  *(void *)(v8 + 408) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1AFE71DB8, 0, 0);
}

uint64_t sub_1AFE71DB8()
{
  uint64_t v1 = *(void *)(v0 + 400);
  uint64_t v2 = *(void *)(v0 + 408);
  uint64_t v3 = *(void *)(v0 + 384);
  uint64_t v4 = *(void *)(v0 + 392);
  uint64_t v5 = *(void *)(v0 + 368);
  uint64_t v21 = *(void *)(v0 + 376);
  uint64_t v6 = *(void *)(v0 + 360);
  char v25 = *(unsigned char *)(v0 + 448);
  uint64_t v7 = *(void *)(v0 + 328);
  uint64_t v23 = v3;
  uint64_t v24 = *(void *)(v0 + 336);
  uint64_t v8 = *(void *)(v0 + 320);
  *(void *)(v0 + 296) = *(void *)(v0 + 312);
  long long v22 = *(_OWORD *)(v0 + 344);
  uint64_t v9 = *(void *)(v0 + 344);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v8, v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v3, v7, v6);
  unint64_t v10 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v11 = (v1 + *(unsigned __int8 *)(v5 + 80) + v10) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v12 = swift_allocObject();
  *(void *)(v0 + 416) = v12;
  *(_OWORD *)(v12 + 16) = v22;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v12 + v10, v2, v9);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 32))(v12 + v11, v23, v6);
  unint64_t v13 = v12 + ((v21 + v11 + 7) & 0xFFFFFFFFFFFFFFF8);
  *(void *)unint64_t v13 = v24;
  *(unsigned char *)(v13 + 8) = v25 & 1;
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v0 + 424) = v14;
  sub_1AFD40AA0(0, &qword_1EB817FE8);
  uint64_t v16 = v15;
  sub_1AFE7380C();
  uint64_t v18 = v17;
  unint64_t v19 = sub_1AFDA5FB8();
  *uint64_t v14 = v0;
  v14[1] = sub_1AFE71FE4;
  return MEMORY[0x1F415F050](&unk_1E9AFBB40, v12, v16, v18, v19);
}

uint64_t sub_1AFE71FE4(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 432) = a1;
  *(void *)(v3 + 440) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_1AFE72484;
  }
  else
  {
    swift_release();
    uint64_t v4 = sub_1AFE72100;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1AFE72100()
{
  uint64_t v1 = *(void *)(v0 + 432);
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
  if (!v2)
  {
LABEL_17:
    v53 = *(void **)(v0 + 304);
    swift_bridgeObjectRelease();
    void *v53 = v3;
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v54 = *(uint64_t (**)(void))(v0 + 8);
    return v54();
  }
  uint64_t v4 = (_OWORD *)(v0 + 16);
  uint64_t v5 = v0 + 160;
  sub_1AFFC8E38();
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v1 + 32);
  long long v6 = *(_OWORD *)(v1 + 48);
  long long v7 = *(_OWORD *)(v1 + 64);
  long long v8 = *(_OWORD *)(v1 + 96);
  *(_OWORD *)(v0 + 64) = *(_OWORD *)(v1 + 80);
  *(_OWORD *)(v0 + 80) = v8;
  *(_OWORD *)(v0 + 32) = v6;
  *(_OWORD *)(v0 + 48) = v7;
  long long v9 = *(_OWORD *)(v1 + 112);
  long long v10 = *(_OWORD *)(v1 + 128);
  long long v11 = *(_OWORD *)(v1 + 160);
  *(_OWORD *)(v0 + 128) = *(_OWORD *)(v1 + 144);
  *(_OWORD *)(v0 + 144) = v11;
  *(_OWORD *)(v0 + 96) = v9;
  *(_OWORD *)(v0 + 112) = v10;
  uint64_t v55 = v0;
  uint64_t v56 = *(void *)(v0 + 152);
  *(_OWORD *)(v0 + 160) = *(_OWORD *)(v1 + 32);
  long long v12 = *(_OWORD *)(v1 + 96);
  long long v14 = *(_OWORD *)(v1 + 48);
  long long v13 = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(v0 + 208) = *(_OWORD *)(v1 + 80);
  *(_OWORD *)(v0 + 224) = v12;
  *(_OWORD *)(v0 + 176) = v14;
  *(_OWORD *)(v0 + 192) = v13;
  long long v16 = *(_OWORD *)(v1 + 128);
  long long v15 = *(_OWORD *)(v1 + 144);
  long long v17 = *(_OWORD *)(v1 + 112);
  *(void *)(v0 + 288) = *(void *)(v1 + 160);
  *(_OWORD *)(v0 + 256) = v16;
  *(_OWORD *)(v0 + 272) = v15;
  *(_OWORD *)(v0 + 240) = v17;
  sub_1AFE12938(v0 + 16);
  sub_1AFE12938(v0 + 16);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v57 = v3;
  unint64_t v20 = sub_1AFD79E90((unint64_t *)(v0 + 160));
  uint64_t v21 = v3[2];
  BOOL v22 = (v19 & 1) == 0;
  uint64_t result = v21 + v22;
  if (!__OFADD__(v21, v22))
  {
    char v24 = v19;
    char v25 = (_OWORD *)(v1 + 176);
    do
    {
      if (v3[3] >= result)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1AFEB988C();
          uint64_t v3 = v57;
        }
      }
      else
      {
        sub_1AFEB4890(result, isUniquelyReferenced_nonNull_native & 1);
        uint64_t v3 = v57;
        unint64_t v26 = sub_1AFD79E90((unint64_t *)v5);
        if ((v24 & 1) != (v27 & 1))
        {
          return sub_1AFFCBD68();
        }
        unint64_t v20 = v26;
      }
      uint64_t result = swift_bridgeObjectRelease();
      if ((v24 & 1) == 0)
      {
        v3[(v20 >> 6) + 8] |= 1 << v20;
        uint64_t v28 = v3[6] + 136 * v20;
        long long v30 = *(_OWORD *)(v5 + 48);
        long long v29 = *(_OWORD *)(v5 + 64);
        long long v31 = *(_OWORD *)(v5 + 32);
        *(_OWORD *)(v28 + 16) = *(_OWORD *)(v5 + 16);
        *(_OWORD *)(v28 + 32) = v31;
        *(_OWORD *)(v28 + 48) = v30;
        *(_OWORD *)(v28 + 64) = v29;
        *(_OWORD *)uint64_t v28 = *(_OWORD *)v5;
        long long v32 = *(_OWORD *)(v5 + 80);
        long long v33 = *(_OWORD *)(v5 + 96);
        long long v34 = *(_OWORD *)(v5 + 112);
        *(void *)(v28 + 128) = *(void *)(v5 + 128);
        *(_OWORD *)(v28 + 96) = v33;
        *(_OWORD *)(v28 + 112) = v34;
        *(_OWORD *)(v28 + 80) = v32;
        *(void *)(v3[7] + 8 * v20) = MEMORY[0x1E4FBC860];
        uint64_t v35 = v3[2];
        BOOL v36 = __OFADD__(v35, 1);
        uint64_t v37 = v35 + 1;
        if (v36) {
          goto LABEL_24;
        }
        v3[2] = v37;
        sub_1AFD76370((uint64_t)v4);
      }
      sub_1AFF0F93C(v56);
      sub_1AFD76408((uint64_t)v4);
      sub_1AFE12890((uint64_t)v4);
      if (!--v2)
      {
        uint64_t v0 = v55;
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
      *uint64_t v4 = *v25;
      long long v38 = v25[1];
      long long v39 = v25[2];
      long long v40 = v25[4];
      v4[3] = v25[3];
      v4[4] = v40;
      v4[1] = v38;
      v4[2] = v39;
      long long v41 = v25[5];
      long long v42 = v25[6];
      long long v43 = v25[8];
      v4[7] = v25[7];
      v4[8] = v43;
      v4[5] = v41;
      v4[6] = v42;
      uint64_t v56 = *(void *)(v55 + 152);
      *(_OWORD *)uint64_t v5 = *v25;
      long long v44 = v25[4];
      long long v46 = v25[1];
      long long v45 = v25[2];
      *(_OWORD *)(v5 + 48) = v25[3];
      *(_OWORD *)(v5 + 64) = v44;
      *(_OWORD *)(v5 + 16) = v46;
      *(_OWORD *)(v5 + 32) = v45;
      long long v48 = v25[6];
      long long v47 = v25[7];
      long long v49 = v25[5];
      *(void *)(v5 + 128) = *((void *)v25 + 16);
      *(_OWORD *)(v5 + 96) = v48;
      *(_OWORD *)(v5 + 112) = v47;
      *(_OWORD *)(v5 + 80) = v49;
      sub_1AFE12938((uint64_t)v4);
      sub_1AFE12938((uint64_t)v4);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v57 = v3;
      unint64_t v20 = sub_1AFD79E90((unint64_t *)v5);
      char v24 = v50;
      uint64_t v51 = v3[2];
      BOOL v52 = (v50 & 1) == 0;
      v25 += 9;
      uint64_t result = v51 + v52;
    }
    while (!__OFADD__(v51, v52));
  }
  __break(1u);
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_1AFE72484()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1AFE724FC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = sub_1AFFC9E18();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v3 | v8 | 7;
  unint64_t v11 = ((*(void *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return MEMORY[0x1F4186498](v0, v11, v10);
}

uint64_t sub_1AFE72658(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v6 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = *(void *)(*(void *)(v6 - 8) + 64);
  unint64_t v8 = (*(unsigned __int8 *)(*(void *)(v6 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v6 - 8) + 80);
  uint64_t v9 = *(void *)(sub_1AFFC9E18() - 8);
  unint64_t v10 = (v8 + v7 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = v1[4];
  uint64_t v12 = (uint64_t)v1 + v8;
  uint64_t v13 = (uint64_t)v1 + v10;
  long long v14 = (char *)v1 + ((*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v15 = *(void *)v14;
  char v16 = v14[8];
  long long v17 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v17;
  *long long v17 = v3;
  v17[1] = sub_1AFD56424;
  return sub_1AFE71C84(a1, v11, v12, v13, v15, v16, v6, v5);
}

uint64_t sub_1AFE727F4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(a6 + 8))(a1, a2, a3, a4 & 1);
}

uint64_t sub_1AFE7280C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(a6 + 16))(a1, a2, a3, a4 & 1);
}

uint64_t sub_1AFE72824(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[22] = a2;
  v3[23] = a3;
  v3[21] = a1;
  return MEMORY[0x1F4188298](sub_1AFE72848, 0, 0);
}

uint64_t sub_1AFE72848()
{
  uint64_t v1 = v0[22];
  uint64_t v2 = v0[21];
  long long v3 = *(_OWORD *)(v1 + 64);
  long long v5 = *(_OWORD *)(v1 + 16);
  long long v4 = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v2 + 48) = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(v2 + 64) = v3;
  *(_OWORD *)(v2 + 16) = v5;
  *(_OWORD *)(v2 + 32) = v4;
  long long v7 = *(_OWORD *)(v1 + 96);
  long long v6 = *(_OWORD *)(v1 + 112);
  long long v8 = *(_OWORD *)(v1 + 80);
  *(void *)(v2 + 128) = *(void *)(v1 + 128);
  *(_OWORD *)(v2 + 96) = v7;
  *(_OWORD *)(v2 + 112) = v6;
  *(_OWORD *)(v2 + 80) = v8;
  *(_OWORD *)uint64_t v2 = *(_OWORD *)v1;
  sub_1AFD76370(v1);
  sub_1AFE74610(0, &qword_1EB817DB0, (void (*)(uint64_t))sub_1AFD2D58C);
  swift_allocObject();
  v0[24] = sub_1AFFCA758();
  uint64_t v9 = (void *)swift_task_alloc();
  v0[25] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_1AFE72980;
  return MEMORY[0x1F415EBC8](v0 + 19);
}

uint64_t sub_1AFE72980()
{
  *(void *)(*(void *)v1 + 208) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1AFE72AC0;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1AFE72A9C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1AFE72A9C()
{
  *(void *)(*(void *)(v0 + 168) + 136) = *(void *)(v0 + 152);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1AFE72AC0()
{
  uint64_t v1 = *(void *)(v0 + 168);
  swift_release();
  *(_OWORD *)(v0 + 16) = *(_OWORD *)v1;
  long long v2 = *(_OWORD *)(v1 + 16);
  long long v3 = *(_OWORD *)(v1 + 32);
  long long v4 = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(v0 + 64) = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(v0 + 80) = v4;
  *(_OWORD *)(v0 + 32) = v2;
  *(_OWORD *)(v0 + 48) = v3;
  long long v5 = *(_OWORD *)(v1 + 80);
  long long v6 = *(_OWORD *)(v1 + 96);
  long long v7 = *(_OWORD *)(v1 + 112);
  *(void *)(v0 + 144) = *(void *)(v1 + 128);
  *(_OWORD *)(v0 + 112) = v6;
  *(_OWORD *)(v0 + 128) = v7;
  *(_OWORD *)(v0 + 96) = v5;
  sub_1AFD76408(v0 + 16);
  long long v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_1AFE72B64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 464) = a7;
  *(void *)(v8 + 472) = a8;
  *(unsigned char *)(v8 + 504) = a6;
  *(void *)(v8 + 448) = a4;
  *(void *)(v8 + 456) = a5;
  *(void *)(v8 + 432) = a2;
  *(void *)(v8 + 440) = a3;
  *(void *)(v8 + 424) = a1;
  long long v9 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(v8 + 112) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(v8 + 128) = v9;
  *(void *)(v8 + 144) = *(void *)(a2 + 128);
  long long v10 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v8 + 48) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v8 + 64) = v10;
  long long v11 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(v8 + 80) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(v8 + 96) = v11;
  long long v12 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v8 + 16) = *(_OWORD *)a2;
  *(_OWORD *)(v8 + 32) = v12;
  return MEMORY[0x1F4188298](sub_1AFE72BBC, 0, 0);
}

uint64_t sub_1AFE72BBC()
{
  char v1 = *(unsigned char *)(v0 + 504);
  uint64_t v3 = *(void *)(v0 + 424);
  uint64_t v2 = *(void *)(v0 + 432);
  long long v4 = *(_OWORD *)(v2 + 64);
  long long v6 = *(_OWORD *)(v2 + 16);
  long long v5 = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v3 + 48) = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(v3 + 64) = v4;
  *(_OWORD *)(v3 + 16) = v6;
  *(_OWORD *)(v3 + 32) = v5;
  long long v8 = *(_OWORD *)(v2 + 96);
  long long v7 = *(_OWORD *)(v2 + 112);
  long long v9 = *(_OWORD *)(v2 + 80);
  *(void *)(v3 + 128) = *(void *)(v2 + 128);
  *(_OWORD *)(v3 + 96) = v8;
  *(_OWORD *)(v3 + 112) = v7;
  *(_OWORD *)(v3 + 80) = v9;
  *(_OWORD *)uint64_t v3 = *(_OWORD *)v2;
  *(_OWORD *)(v0 + 152) = *(_OWORD *)v2;
  long long v10 = *(_OWORD *)(v2 + 16);
  long long v11 = *(_OWORD *)(v2 + 32);
  long long v12 = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(v0 + 216) = *(_OWORD *)(v2 + 64);
  *(_OWORD *)(v0 + 200) = v12;
  *(_OWORD *)(v0 + 184) = v11;
  *(_OWORD *)(v0 + 168) = v10;
  long long v13 = *(_OWORD *)(v2 + 80);
  long long v14 = *(_OWORD *)(v2 + 96);
  long long v15 = *(_OWORD *)(v2 + 112);
  *(void *)(v0 + 280) = *(void *)(v2 + 128);
  *(_OWORD *)(v0 + 264) = v15;
  *(_OWORD *)(v0 + 248) = v14;
  *(_OWORD *)(v0 + 232) = v13;
  sub_1AFD76370(v0 + 16);
  uint64_t v16 = swift_task_alloc();
  *(void *)(v0 + 480) = v16;
  *(void *)uint64_t v16 = v0;
  *(void *)(v16 + 8) = sub_1AFE72D3C;
  uint64_t v18 = *(void *)(v0 + 448);
  uint64_t v17 = *(void *)(v0 + 456);
  long long v19 = *(_OWORD *)(v0 + 464);
  *(void *)(v16 + 200) = *(void *)(v0 + 440);
  *(_OWORD *)(v16 + 184) = v19;
  *(unsigned char *)(v16 + 161) = v1 & 1;
  *(void *)(v16 + 168) = v18;
  *(void *)(v16 + 176) = v17;
  long long v20 = *(_OWORD *)(v0 + 232);
  long long v21 = *(_OWORD *)(v0 + 248);
  long long v22 = *(_OWORD *)(v0 + 264);
  *(void *)(v16 + 144) = *(void *)(v0 + 280);
  *(_OWORD *)(v16 + 112) = v21;
  *(_OWORD *)(v16 + 128) = v22;
  *(_OWORD *)(v16 + 96) = v20;
  long long v23 = *(_OWORD *)(v0 + 168);
  long long v24 = *(_OWORD *)(v0 + 184);
  long long v25 = *(_OWORD *)(v0 + 216);
  *(_OWORD *)(v16 + 64) = *(_OWORD *)(v0 + 200);
  *(_OWORD *)(v16 + 80) = v25;
  *(_OWORD *)(v16 + 32) = v23;
  *(_OWORD *)(v16 + 48) = v24;
  *(_OWORD *)(v16 + 16) = *(_OWORD *)(v0 + 152);
  return MEMORY[0x1F4188298](sub_1AFE70C6C, 0, 0);
}

uint64_t sub_1AFE72D3C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 488) = v1;
  swift_task_dealloc();
  if (v1)
  {
    long long v5 = sub_1AFE72E88;
  }
  else
  {
    *(void *)(v4 + 496) = a1;
    long long v5 = sub_1AFE72E64;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1AFE72E64()
{
  *(void *)(*(void *)(v0 + 424) + 136) = *(void *)(v0 + 496);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1AFE72E88()
{
  uint64_t v1 = *(void *)(v0 + 432);
  *(_OWORD *)(v0 + 288) = *(_OWORD *)v1;
  long long v2 = *(_OWORD *)(v1 + 64);
  long long v4 = *(_OWORD *)(v1 + 16);
  long long v3 = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v0 + 336) = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(v0 + 352) = v2;
  *(_OWORD *)(v0 + 304) = v4;
  *(_OWORD *)(v0 + 320) = v3;
  long long v6 = *(_OWORD *)(v1 + 96);
  long long v5 = *(_OWORD *)(v1 + 112);
  long long v7 = *(_OWORD *)(v1 + 80);
  *(void *)(v0 + 416) = *(void *)(v1 + 128);
  *(_OWORD *)(v0 + 384) = v6;
  *(_OWORD *)(v0 + 400) = v5;
  *(_OWORD *)(v0 + 368) = v7;
  sub_1AFD76408(v0 + 288);
  long long v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_1AFE72F20(void *a1, uint64_t (*a2)(void, void))
{
  return a2(*a1, a1[1]);
}

uint64_t sub_1AFE72F5C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  return sub_1AFE72F9C(a1, a2, a3, a4, a5, a6, (uint64_t)&unk_1F087D0A8, (uint64_t)&unk_1E9AFBAA0);
}

uint64_t sub_1AFE72F7C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  return sub_1AFE72F9C(a1, a2, a3, a4, a5, a6, (uint64_t)&unk_1F087D148, (uint64_t)&unk_1E9AFBAE0);
}

uint64_t sub_1AFE72F9C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v22 = a8;
  int v21 = a4;
  uint64_t v12 = sub_1AFFC9E18();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = *v8;
  sub_1AFE74610(0, &qword_1EB811438, (void (*)(uint64_t))sub_1AFE70B9C);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v13 + 16))(&v20[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)], a2, v12);
  unint64_t v16 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a1;
  *(void *)(v17 + 24) = v15;
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v13 + 32))(v17 + v16, &v20[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)], v12);
  unint64_t v18 = v17 + ((v14 + v16 + 7) & 0xFFFFFFFFFFFFFFF8);
  *(void *)unint64_t v18 = a3;
  *(unsigned char *)(v18 + 8) = v21 & 1;
  sub_1AFFC8E48();
  sub_1AFFC8E38();
  return sub_1AFFCA658();
}

uint64_t sub_1AFE7313C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *a1;
  *(unsigned char *)(a2 + 8) = 0;
  return sub_1AFFC8E38();
}

uint64_t sub_1AFE73160(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  return sub_1AFE72F9C(a1, a2, a3, a4, a5, a6, (uint64_t)&unk_1F087D198, (uint64_t)&unk_1E9AFBB10);
}

uint64_t sub_1AFE73180(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, char a6)
{
  *(void *)(v6 + 16) = a1;
  uint64_t v10 = *a3;
  char v11 = a6 & 1;
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 24) = v12;
  *uint64_t v12 = v6;
  v12[1] = sub_1AFD76E80;
  return sub_1AFE70EE0(a2, v10, a4, a5, v11);
}

uint64_t sub_1AFE7324C(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1AFFC9E18() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  long long v7 = (uint64_t *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = *(void *)v9;
  char v11 = *(unsigned char *)(v9 + 8);
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  *uint64_t v12 = v2;
  v12[1] = sub_1AFD56424;
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t, char))((char *)&dword_1E9AFBA98
                                                                                    + dword_1E9AFBA98);
  return v13(a1, v6, v7, v8, v10, v11);
}

uint64_t sub_1AFE73394(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  *(void *)(v4 + 288) = a1;
  *(void *)(v4 + 296) = a2;
  long long v5 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(v4 + 112) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(v4 + 128) = v5;
  *(void *)(v4 + 144) = *(void *)(a2 + 128);
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v4 + 48) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v4 + 64) = v6;
  long long v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(v4 + 80) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(v4 + 96) = v7;
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)a2;
  *(_OWORD *)(v4 + 32) = v8;
  uint64_t v9 = *a3;
  *(void *)(v4 + 304) = a4;
  *(void *)(v4 + 312) = v9;
  return MEMORY[0x1F4188298](sub_1AFE733E4, 0, 0);
}

uint64_t sub_1AFE733E4()
{
  uint64_t v2 = v0[36];
  uint64_t v1 = v0[37];
  long long v3 = *(_OWORD *)(v1 + 64);
  long long v5 = *(_OWORD *)(v1 + 16);
  long long v4 = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v2 + 48) = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(v2 + 64) = v3;
  *(_OWORD *)(v2 + 16) = v5;
  *(_OWORD *)(v2 + 32) = v4;
  long long v7 = *(_OWORD *)(v1 + 96);
  long long v6 = *(_OWORD *)(v1 + 112);
  long long v8 = *(_OWORD *)(v1 + 80);
  *(void *)(v2 + 128) = *(void *)(v1 + 128);
  *(_OWORD *)(v2 + 96) = v7;
  *(_OWORD *)(v2 + 112) = v6;
  *(_OWORD *)(v2 + 80) = v8;
  *(_OWORD *)uint64_t v2 = *(_OWORD *)v1;
  sub_1AFD76370((uint64_t)(v0 + 2));
  uint64_t v12 = (char *)&dword_1E9AFBAC8 + dword_1E9AFBAC8;
  uint64_t v9 = (void *)swift_task_alloc();
  v0[40] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_1AFE734D0;
  uint64_t v10 = v0[38];
  return ((uint64_t (*)(void *, uint64_t))v12)(v0 + 2, v10);
}

uint64_t sub_1AFE734D0(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 328) = v1;
  swift_task_dealloc();
  if (v1)
  {
    long long v5 = sub_1AFE7361C;
  }
  else
  {
    *(void *)(v4 + 336) = a1;
    long long v5 = sub_1AFE735F8;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1AFE735F8()
{
  *(void *)(*(void *)(v0 + 288) + 136) = *(void *)(v0 + 336);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1AFE7361C()
{
  uint64_t v1 = *(void *)(v0 + 296);
  *(_OWORD *)(v0 + 152) = *(_OWORD *)v1;
  long long v2 = *(_OWORD *)(v1 + 48);
  long long v3 = *(_OWORD *)(v1 + 64);
  long long v4 = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v0 + 168) = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v0 + 216) = v3;
  *(_OWORD *)(v0 + 200) = v2;
  *(_OWORD *)(v0 + 184) = v4;
  long long v6 = *(_OWORD *)(v1 + 96);
  long long v5 = *(_OWORD *)(v1 + 112);
  uint64_t v7 = *(void *)(v1 + 128);
  *(_OWORD *)(v0 + 232) = *(_OWORD *)(v1 + 80);
  *(void *)(v0 + 280) = v7;
  *(_OWORD *)(v0 + 264) = v5;
  *(_OWORD *)(v0 + 248) = v6;
  sub_1AFD76408(v0 + 152);
  long long v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_1AFE736C4(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(sub_1AFFC9E18() - 8);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  long long v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  *long long v8 = v3;
  v8[1] = sub_1AFD56424;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t *, uint64_t))((char *)&dword_1E9AFBAB0 + dword_1E9AFBAB0);
  return v9(a1, a2, (uint64_t *)(v2 + 16), v7);
}

void sub_1AFE7380C()
{
  if (!qword_1E9AFBAC0)
  {
    sub_1AFD40AA0(255, (unint64_t *)&qword_1EB818000);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1E9AFBAC0);
    }
  }
}

uint64_t sub_1AFE73884(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, char a6)
{
  *(void *)(v6 + 16) = a1;
  uint64_t v10 = *a3;
  char v11 = a6 & 1;
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 24) = v12;
  *uint64_t v12 = v6;
  v12[1] = sub_1AFD6BBC4;
  return sub_1AFE71280(a2, v10, a4, a5, v11);
}

uint64_t sub_1AFE7394C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  long long v5 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(v3 + 112) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(v3 + 128) = v5;
  *(void *)(v3 + 144) = *(void *)(a2 + 128);
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v3 + 48) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v3 + 64) = v6;
  long long v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(v3 + 80) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(v3 + 96) = v7;
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)a2;
  *(_OWORD *)(v3 + 32) = v8;
  uint64_t v9 = *a3;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v3 + 152) = v10;
  *uint64_t v10 = v3;
  v10[1] = sub_1AFE73A34;
  v10[22] = v3 + 16;
  v10[23] = v9;
  v10[21] = a1;
  return MEMORY[0x1F4188298](sub_1AFE72848, 0, 0);
}

uint64_t sub_1AFE73A34()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1AFE73B28(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, char a6)
{
  *(void *)(v6 + 16) = a1;
  uint64_t v10 = *a3;
  char v11 = a6 & 1;
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 24) = v12;
  *uint64_t v12 = v6;
  v12[1] = sub_1AFD76E80;
  return sub_1AFE71A00(a2, v10, a4, a5, v11);
}

uint64_t sub_1AFE73BF0(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  *(void *)(v4 + 288) = a1;
  *(void *)(v4 + 296) = a2;
  long long v5 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(v4 + 112) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(v4 + 128) = v5;
  *(void *)(v4 + 144) = *(void *)(a2 + 128);
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v4 + 48) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v4 + 64) = v6;
  long long v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(v4 + 80) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(v4 + 96) = v7;
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)a2;
  *(_OWORD *)(v4 + 32) = v8;
  uint64_t v9 = *a3;
  *(void *)(v4 + 304) = a4;
  *(void *)(v4 + 312) = v9;
  return MEMORY[0x1F4188298](sub_1AFE73C40, 0, 0);
}

uint64_t sub_1AFE73C40()
{
  uint64_t v2 = v0[36];
  uint64_t v1 = v0[37];
  long long v3 = *(_OWORD *)(v1 + 64);
  long long v5 = *(_OWORD *)(v1 + 16);
  long long v4 = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v2 + 48) = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(v2 + 64) = v3;
  *(_OWORD *)(v2 + 16) = v5;
  *(_OWORD *)(v2 + 32) = v4;
  long long v7 = *(_OWORD *)(v1 + 96);
  long long v6 = *(_OWORD *)(v1 + 112);
  long long v8 = *(_OWORD *)(v1 + 80);
  *(void *)(v2 + 128) = *(void *)(v1 + 128);
  *(_OWORD *)(v2 + 96) = v7;
  *(_OWORD *)(v2 + 112) = v6;
  *(_OWORD *)(v2 + 80) = v8;
  *(_OWORD *)uint64_t v2 = *(_OWORD *)v1;
  sub_1AFD76370((uint64_t)(v0 + 2));
  uint64_t v12 = (char *)&dword_1E9AFBB30 + dword_1E9AFBB30;
  uint64_t v9 = (void *)swift_task_alloc();
  v0[40] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_1AFE73D2C;
  uint64_t v10 = v0[38];
  return ((uint64_t (*)(void *, uint64_t))v12)(v0 + 2, v10);
}

uint64_t sub_1AFE73D2C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 328) = v1;
  swift_task_dealloc();
  if (v1)
  {
    long long v5 = sub_1AFE75108;
  }
  else
  {
    *(void *)(v4 + 336) = a1;
    long long v5 = sub_1AFE75110;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1AFE73E54(uint64_t a1)
{
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = v1;
  return MEMORY[0x1F4188298](sub_1AFE73E74, 0, 0);
}

uint64_t sub_1AFE73E74()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[5];
  uint64_t v3 = swift_task_alloc();
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  sub_1AFE74214();
  sub_1AFFCA7C8();
  swift_task_dealloc();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v2;
  *(_OWORD *)(v4 + 24) = *(_OWORD *)v1;
  long long v5 = *(_OWORD *)(v1 + 48);
  long long v6 = *(_OWORD *)(v1 + 64);
  long long v7 = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v4 + 40) = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v4 + 88) = v6;
  *(_OWORD *)(v4 + 72) = v5;
  *(_OWORD *)(v4 + 56) = v7;
  long long v9 = *(_OWORD *)(v1 + 96);
  long long v8 = *(_OWORD *)(v1 + 112);
  uint64_t v10 = *(void *)(v1 + 128);
  *(_OWORD *)(v4 + 104) = *(_OWORD *)(v1 + 80);
  *(void *)(v4 + 152) = v10;
  *(_OWORD *)(v4 + 136) = v8;
  *(_OWORD *)(v4 + 120) = v9;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_1AFE742F4;
  *(void *)(v11 + 24) = v4;
  sub_1AFFC8E48();
  sub_1AFD76370(v1);
  uint64_t v12 = (void *)sub_1AFFCA5E8();
  sub_1AFD2D58C();
  v0[6] = sub_1AFFCA668();

  swift_release();
  swift_release();
  uint64_t v13 = (void *)swift_task_alloc();
  v0[7] = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_1AFE74054;
  return MEMORY[0x1F415EBC8](v0 + 2);
}

uint64_t sub_1AFE74054()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1AFE74190;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1AFE74170;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1AFE74170()
{
  return (*(uint64_t (**)(void, void))(v0 + 8))(*(void *)(v0 + 16), *(unsigned __int8 *)(v0 + 24));
}

uint64_t sub_1AFE74190()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1AFE741F8()
{
  return sub_1AFF0D648(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

void sub_1AFE74214()
{
  if (!qword_1E9AFBAD0)
  {
    sub_1AFDF4598();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1E9AFBAD0);
    }
  }
}

uint64_t sub_1AFE7427C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 160, 7);
}

void *sub_1AFE742F4(uint64_t a1, uint64_t a2)
{
  return sub_1AFF0D764(a1, a2, *(void **)(v2 + 16), v2 + 24);
}

uint64_t sub_1AFE74300()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1AFE74338(void *a1)
{
  return (*(uint64_t (**)(void, void))(v1 + 16))(*a1, a1[1]);
}

uint64_t sub_1AFE74374(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1AFFC9E18() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  long long v7 = (uint64_t *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = *(void *)v9;
  char v11 = *(unsigned char *)(v9 + 8);
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  *uint64_t v12 = v2;
  v12[1] = sub_1AFD3503C;
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t, char))((char *)&dword_1E9AFBAD8
                                                                                    + dword_1E9AFBAD8);
  return v13(a1, v6, v7, v8, v10, v11);
}

uint64_t sub_1AFE744C0(uint64_t a1, uint64_t a2)
{
  sub_1AFFC9E18();
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_1AFD56424;
  long long v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t *))&a7o[*(int *)a7o];
  return v7(a1, a2, (uint64_t *)(v2 + 16));
}

uint64_t sub_1AFE74608(uint64_t a1, uint64_t a2)
{
  return sub_1AFF3A344(a1, a2);
}

void sub_1AFE74610(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1AFFCA788();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t objectdestroy_5Tm()
{
  uint64_t v1 = sub_1AFFC9E18();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x1F4186498](v0, v6, v5);
}

uint64_t sub_1AFE74748(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1AFFC9E18() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  long long v7 = (uint64_t *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = *(void *)v9;
  char v11 = *(unsigned char *)(v9 + 8);
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  *uint64_t v12 = v2;
  v12[1] = sub_1AFD56424;
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t, char))((char *)&dword_1E9AFBB08
                                                                                    + dword_1E9AFBB08);
  return v13(a1, v6, v7, v8, v10, v11);
}

uint64_t objectdestroy_11Tm()
{
  uint64_t v1 = sub_1AFFC9E18();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x1F4186498](v0, v6, v5);
}

uint64_t sub_1AFE7496C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(sub_1AFFC9E18() - 8);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  *uint64_t v8 = v3;
  v8[1] = sub_1AFD56424;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t *, uint64_t))((char *)&dword_1E9AFBB20 + dword_1E9AFBB20);
  return v9(a1, a2, (uint64_t *)(v2 + 16), v7);
}

uint64_t sub_1AFE74AB4(uint64_t a1, uint64_t a2)
{
  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  return MEMORY[0x1F4188298](sub_1AFE74AD8, 0, 0);
}

uint64_t sub_1AFE74AD8()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = swift_task_alloc();
  int8x16_t v3 = *(int8x16_t *)(v0 + 40);
  *(void *)(v2 + 16) = v1;
  *(int8x16_t *)(v2 + 24) = vextq_s8(v3, v3, 8uLL);
  sub_1AFD40AA0(0, (unint64_t *)&qword_1EB818000);
  sub_1AFFCA7C8();
  swift_task_dealloc();
  uint64_t v4 = (void *)sub_1AFFCA5E8();
  sub_1AFD2D58C();
  *(void *)(v0 + 56) = sub_1AFFCA678();

  swift_release();
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v5;
  void *v5 = v0;
  v5[1] = sub_1AFE74C30;
  return MEMORY[0x1F415EBC8](v0 + 16);
}

uint64_t sub_1AFE74C30()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1AFE74D4C;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1AFE74170;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1AFE74D4C()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1AFE74DB4()
{
  return sub_1AFF3AB58(v0[2], v0[3], v0[4]);
}

uint64_t sub_1AFE74DD4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = sub_1AFFC9E18();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v3 | v8 | 7;
  unint64_t v11 = ((*(void *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return MEMORY[0x1F4186498](v0, v11, v10);
}

uint64_t sub_1AFE74F28(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v3;
  long long v24 = *(_OWORD *)(v2 + 16);
  uint64_t v7 = *(void *)(*(void *)(v24 - 8) + 64);
  unint64_t v8 = (*(unsigned __int8 *)(*(void *)(v24 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v24 - 8) + 80);
  uint64_t v9 = *(void *)(sub_1AFFC9E18() - 8);
  unint64_t v10 = (v8 + v7 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = v2 + v8;
  uint64_t v12 = v2 + v10;
  uint64_t v13 = (uint64_t *)(v2 + ((*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v14 = *v13;
  char v15 = *((unsigned char *)v13 + 8);
  uint64_t v16 = swift_task_alloc();
  *(void *)(v5 + 16) = v16;
  *(void *)uint64_t v16 = v5;
  *(void *)(v16 + 8) = sub_1AFD56424;
  *(_OWORD *)(v16 + 464) = v24;
  *(unsigned char *)(v16 + 504) = v15;
  *(void *)(v16 + 448) = v12;
  *(void *)(v16 + 456) = v14;
  *(void *)(v16 + 432) = a2;
  *(void *)(v16 + 440) = v11;
  *(void *)(v16 + 424) = a1;
  *(_OWORD *)(v16 + 16) = *(_OWORD *)a2;
  long long v17 = *(_OWORD *)(a2 + 64);
  long long v19 = *(_OWORD *)(a2 + 16);
  long long v18 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v16 + 64) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v16 + 80) = v17;
  *(_OWORD *)(v16 + 32) = v19;
  *(_OWORD *)(v16 + 48) = v18;
  long long v21 = *(_OWORD *)(a2 + 96);
  long long v20 = *(_OWORD *)(a2 + 112);
  long long v22 = *(_OWORD *)(a2 + 80);
  *(void *)(v16 + 144) = *(void *)(a2 + 128);
  *(_OWORD *)(v16 + 112) = v21;
  *(_OWORD *)(v16 + 128) = v20;
  *(_OWORD *)(v16 + 96) = v22;
  return MEMORY[0x1F4188298](sub_1AFE72BBC, 0, 0);
}

double sub_1AFE75118()
{
  return *(double *)v0;
}

uint64_t sub_1AFE75120()
{
  return *(void *)(v0 + 8);
}

uint64_t sub_1AFE75128()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_1AFE75130()
{
  return *(void *)(v0 + 24);
}

uint64_t sub_1AFE75138@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>)
{
  double v9 = *(double *)&result;
  if (a2) {
    double v9 = 1.79769313e308;
  }
  uint64_t v10 = 0x7FFFFFFFFFFFFFFFLL;
  if (a4) {
    a3 = 0x7FFFFFFFFFFFFFFFLL;
  }
  if (a6) {
    a5 = 0x7FFFFFFFFFFFFFFFLL;
  }
  *(double *)a9 = v9;
  if ((a8 & 1) == 0) {
    uint64_t v10 = a7;
  }
  *(void *)(a9 + 8) = a3;
  *(void *)(a9 + 16) = a5;
  *(void *)(a9 + 24) = v10;
  return result;
}

uint64_t sub_1AFE75178@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1AFE75C08(0, &qword_1EB819FC8, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  double v9 = (char *)&v34 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFE758C4();
  sub_1AFFCBE68();
  if (!v2)
  {
    long long v43 = (void *)MEMORY[0x1E4FBC860];
    char v42 = 0;
    sub_1AFFCBAF8();
    double v10 = v40;
    LODWORD(v39) = v41;
    if (v41)
    {
      swift_beginAccess();
      uint64_t v11 = v43;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v11 = sub_1AFD352FC(0, v11[2] + 1, 1, v11);
      }
      unint64_t v13 = v11[2];
      unint64_t v12 = v11[3];
      if (v13 >= v12 >> 1) {
        uint64_t v11 = sub_1AFD352FC((void *)(v12 > 1), v13 + 1, 1, v11);
      }
      v11[2] = v13 + 1;
      uint64_t v14 = &v11[2 * v13];
      v14[4] = 0xD000000000000012;
      v14[5] = 0x80000001AFFF7670;
      long long v43 = v11;
      swift_endAccess();
    }
    else
    {
      uint64_t v11 = (void *)MEMORY[0x1E4FBC860];
    }
    char v42 = 1;
    sub_1AFFCBAF8();
    uint64_t v38 = *(void *)&v40;
    int v37 = v41;
    if (v41)
    {
      swift_beginAccess();
      uint64_t v11 = v43;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v11 = sub_1AFD352FC(0, v11[2] + 1, 1, v11);
      }
      unint64_t v16 = v11[2];
      unint64_t v15 = v11[3];
      if (v16 >= v15 >> 1) {
        uint64_t v11 = sub_1AFD352FC((void *)(v15 > 1), v16 + 1, 1, v11);
      }
      v11[2] = v16 + 1;
      long long v17 = &v11[2 * v16];
      v17[4] = 0xD000000000000017;
      v17[5] = 0x80000001AFFF7690;
      long long v43 = v11;
      swift_endAccess();
    }
    char v42 = 2;
    sub_1AFFCBAF8();
    uint64_t v18 = *(void *)&v40;
    int v35 = v41;
    if (v41)
    {
      swift_beginAccess();
      uint64_t v11 = v43;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v36 = v18;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        uint64_t v11 = sub_1AFD352FC(0, v11[2] + 1, 1, v11);
      }
      unint64_t v21 = v11[2];
      unint64_t v20 = v11[3];
      if (v21 >= v20 >> 1) {
        uint64_t v11 = sub_1AFD352FC((void *)(v20 > 1), v21 + 1, 1, v11);
      }
      v11[2] = v21 + 1;
      long long v22 = &v11[2 * v21];
      v22[4] = 0xD000000000000016;
      v22[5] = 0x80000001AFFF76B0;
      long long v43 = v11;
      swift_endAccess();
      uint64_t v18 = v36;
    }
    char v42 = 3;
    sub_1AFFCBAF8();
    if (v41)
    {
      swift_beginAccess();
      uint64_t v11 = v43;
      char v24 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v36 = v18;
      if ((v24 & 1) == 0) {
        uint64_t v11 = sub_1AFD352FC(0, v11[2] + 1, 1, v11);
      }
      unint64_t v26 = v11[2];
      unint64_t v25 = v11[3];
      if (v26 >= v25 >> 1) {
        uint64_t v11 = sub_1AFD352FC((void *)(v25 > 1), v26 + 1, 1, v11);
      }
      v11[2] = v26 + 1;
      uint64_t v27 = &v11[2 * v26];
      v27[4] = 0xD000000000000022;
      v27[5] = 0x80000001AFFF76D0;
      long long v43 = v11;
      swift_endAccess();
      uint64_t v34 = 0x7FFFFFFFFFFFFFFFLL;
      int v28 = v39;
      uint64_t v18 = v36;
    }
    else
    {
      uint64_t v34 = *(void *)&v40;
      int v28 = v39;
    }
    if (v28) {
      double v10 = 1.79769313e308;
    }
    uint64_t v29 = v38;
    if (v37) {
      uint64_t v29 = 0x7FFFFFFFFFFFFFFFLL;
    }
    uint64_t v39 = v29;
    if (v35) {
      uint64_t v18 = 0x7FFFFFFFFFFFFFFFLL;
    }
    if (v11[2])
    {
      sub_1AFD2CD48();
      uint64_t v30 = swift_allocObject();
      uint64_t v38 = v18;
      long long v31 = (void *)v30;
      *(_OWORD *)(v30 + 16) = xmmword_1AFFD05F0;
      sub_1AFD3ABD0();
      v31[7] = v32;
      v31[8] = sub_1AFD5CDA0();
      v31[4] = v11;
      sub_1AFD2C4F4();
      sub_1AFFC8E38();
      long long v33 = (void *)sub_1AFFCB638();
      sub_1AFFCB478();
      sub_1AFFCA878();
      uint64_t v18 = v38;
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AFD2C4F4();
      long long v33 = (void *)sub_1AFFCB638();
      sub_1AFFCB478();
      sub_1AFFCA878();
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_bridgeObjectRelease();
    *(double *)a2 = v10;
    *(void *)(a2 + 8) = v39;
    *(void *)(a2 + 16) = v18;
    *(void *)(a2 + 24) = v34;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1AFE75834(char a1)
{
  unint64_t result = 0xD000000000000012;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000017;
      break;
    case 2:
      unint64_t result = 0xD000000000000016;
      break;
    case 3:
      unint64_t result = 0xD000000000000022;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1AFE758BC()
{
  return sub_1AFE75834(*v0);
}

unint64_t sub_1AFE758C4()
{
  unint64_t result = qword_1EB8197E8;
  if (!qword_1EB8197E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8197E8);
  }
  return result;
}

uint64_t sub_1AFE75918@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1AFE75ED4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AFE75940(uint64_t a1)
{
  unint64_t v2 = sub_1AFE758C4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFE7597C(uint64_t a1)
{
  unint64_t v2 = sub_1AFE758C4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFE759B8(void *a1)
{
  sub_1AFE75C08(0, &qword_1EB81A080, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v11 - v7;
  uint64_t v9 = *(void *)(v1 + 8);
  v11[1] = *(void *)(v1 + 16);
  v11[2] = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFE758C4();
  sub_1AFFCBE78();
  char v15 = 0;
  sub_1AFFCBC28();
  if (!v2)
  {
    char v14 = 1;
    sub_1AFFCBC38();
    char v13 = 2;
    sub_1AFFCBC38();
    char v12 = 3;
    sub_1AFFCBC38();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1AFE75B98@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1AFE75178(a1, a2);
}

uint64_t sub_1AFE75BB0(void *a1)
{
  return sub_1AFE759B8(a1);
}

BOOL sub_1AFE75BCC(uint64_t a1, uint64_t a2)
{
  return *(double *)a1 == *(double *)a2
      && *(void *)(a1 + 8) == *(void *)(a2 + 8)
      && *(void *)(a1 + 16) == *(void *)(a2 + 16)
      && *(void *)(a1 + 24) == *(void *)(a2 + 24);
}

void sub_1AFE75C08(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1AFE758C4();
    unint64_t v7 = a3(a1, &type metadata for AppReviewPromptConfiguration.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t getEnumTagSinglePayload for AppReviewPromptConfiguration(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for AppReviewPromptConfiguration(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

ValueMetadata *type metadata accessor for AppReviewPromptConfiguration()
{
  return &type metadata for AppReviewPromptConfiguration;
}

unsigned char *storeEnumTagSinglePayload for AppReviewPromptConfiguration.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFE75D94);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppReviewPromptConfiguration.CodingKeys()
{
  return &type metadata for AppReviewPromptConfiguration.CodingKeys;
}

unint64_t sub_1AFE75DD0()
{
  unint64_t result = qword_1E9AFBB48;
  if (!qword_1E9AFBB48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBB48);
  }
  return result;
}

unint64_t sub_1AFE75E28()
{
  unint64_t result = qword_1EB8197F8;
  if (!qword_1EB8197F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8197F8);
  }
  return result;
}

unint64_t sub_1AFE75E80()
{
  unint64_t result = qword_1EB8197F0;
  if (!qword_1EB8197F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8197F0);
  }
  return result;
}

uint64_t sub_1AFE75ED4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x80000001AFFF7670 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001AFFF7690 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001AFFF76B0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x80000001AFFF76D0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v5 = sub_1AFFCBCE8();
    swift_bridgeObjectRelease();
    if (v5) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1AFE76070(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(a2 + 8))();
  sub_1AFFCA048();

  return swift_release();
}

uint64_t sub_1AFE760C4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1AFE760D8@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10)
{
  uint64_t v10 = 0xFFFFFFFFLL;
  if ((a3 & 1) == 0) {
    uint64_t v10 = a2;
  }
  if (a5) {
    a4 = 0;
  }
  *(void *)a9 = result;
  *(void *)(a9 + 8) = v10;
  *(unsigned char *)(a9 + 16) = 0;
  if (a7) {
    a6 = 1;
  }
  *(void *)(a9 + 24) = a4;
  *(unsigned char *)(a9 + 32) = 0;
  uint64_t v13 = 86400;
  *(void *)(a9 + 40) = a6;
  *(unsigned char *)(a9 + 48) = 0;
  if ((a10 & 1) == 0) {
    uint64_t v13 = a8;
  }
  *(void *)(a9 + 56) = v13;
  *(unsigned char *)(a9 + 64) = 0;
  return result;
}

unint64_t sub_1AFE76130(char a1)
{
  unint64_t result = 0xD000000000000013;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 2:
      unint64_t result = 0xD000000000000018;
      break;
    case 3:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 4:
      unint64_t result = 0xD000000000000028;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1AFE761CC()
{
  return sub_1AFE76130(*v0);
}

uint64_t sub_1AFE761D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1AFE76E74(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AFE761FC(uint64_t a1)
{
  unint64_t v2 = sub_1AFE7696C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFE76238(uint64_t a1)
{
  unint64_t v2 = sub_1AFE7696C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFE76274(void *a1)
{
  sub_1AFE769C0(0, &qword_1EB81A0A0, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v12 - v7;
  uint64_t v9 = *v1;
  uint64_t v19 = v1[1];
  int v18 = *((unsigned __int8 *)v1 + 16);
  uint64_t v17 = v1[3];
  int v16 = *((unsigned __int8 *)v1 + 32);
  uint64_t v15 = v1[5];
  int v10 = *((unsigned __int8 *)v1 + 48);
  uint64_t v12 = v1[7];
  int v13 = *((unsigned __int8 *)v1 + 64);
  int v14 = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFE7696C();
  sub_1AFFCBE78();
  uint64_t v25 = v9;
  char v24 = 0;
  sub_1AFD3ABD0();
  sub_1AFD4F780((unint64_t *)&qword_1EB819DC8);
  sub_1AFFCBBE8();
  if (!v2)
  {
    char v23 = 1;
    sub_1AFFCBBD8();
    char v22 = 2;
    sub_1AFFCBBC8();
    char v21 = 3;
    sub_1AFFCBBC8();
    char v20 = 4;
    sub_1AFFCBBC8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1AFE76500@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1AFE769C0(0, &qword_1EB819FE8, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v22 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFE7696C();
  sub_1AFFCBE68();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  sub_1AFD3ABD0();
  char v31 = 0;
  sub_1AFD4F780((unint64_t *)&qword_1EB819DD8);
  sub_1AFFCBAF8();
  uint64_t v10 = v32;
  char v30 = 1;
  sub_1AFFC8E38();
  uint64_t v11 = sub_1AFFCBAE8();
  int v26 = v12;
  char v29 = 2;
  uint64_t v13 = sub_1AFFCBAD8();
  int v24 = v14;
  uint64_t v25 = v13;
  char v28 = 3;
  uint64_t v15 = sub_1AFFCBAD8();
  HIDWORD(v22) = v16;
  uint64_t v23 = v15;
  char v27 = 4;
  uint64_t v18 = sub_1AFFCBAD8();
  uint64_t v19 = v9;
  char v21 = v20;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v19, v6);
  *(void *)a2 = v10;
  *(void *)(a2 + 8) = v11;
  *(unsigned char *)(a2 + 16) = v26 & 1;
  *(void *)(a2 + 24) = v25;
  *(unsigned char *)(a2 + 32) = v24 & 1;
  *(void *)(a2 + 40) = v23;
  *(unsigned char *)(a2 + 48) = BYTE4(v22) & 1;
  *(void *)(a2 + 56) = v18;
  *(unsigned char *)(a2 + 64) = v21 & 1;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFE767FC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1AFE76500(a1, a2);
}

uint64_t sub_1AFE76814(void *a1)
{
  return sub_1AFE76274(a1);
}

BOOL sub_1AFE76830(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  char v6 = *(unsigned char *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  char v8 = *(unsigned char *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  char v10 = *(unsigned char *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  char v12 = *(unsigned char *)(a1 + 64);
  uint64_t v13 = *(void **)a2;
  uint64_t v14 = *(void *)(a2 + 8);
  int v15 = *(unsigned __int8 *)(a2 + 16);
  uint64_t v16 = *(void *)(a2 + 24);
  int v17 = *(unsigned __int8 *)(a2 + 32);
  uint64_t v18 = *(void *)(a2 + 40);
  int v19 = *(unsigned __int8 *)(a2 + 48);
  uint64_t v20 = *(void *)(a2 + 56);
  char v21 = *(unsigned char *)(a2 + 64);
  if (v4)
  {
    if (!v13) {
      return 0;
    }
    uint64_t v31 = *(void *)(a2 + 56);
    uint64_t v32 = *(void *)(a2 + 24);
    uint64_t v29 = *(void *)(a2 + 8);
    char v22 = *(unsigned char *)(a1 + 48);
    int v33 = *(unsigned __int8 *)(a2 + 48);
    int v34 = *(unsigned __int8 *)(a2 + 32);
    int v30 = *(unsigned __int8 *)(a2 + 16);
    char v23 = sub_1AFF22B0C(v4, v13);
    int v15 = v30;
    uint64_t v20 = v31;
    uint64_t v16 = v32;
    int v19 = v33;
    int v17 = v34;
    char v10 = v22;
    uint64_t v14 = v29;
    if ((v23 & 1) == 0) {
      return 0;
    }
  }
  else if (v13)
  {
    return 0;
  }
  if (v6)
  {
    if (!v15) {
      return 0;
    }
  }
  else
  {
    if (v5 == v14) {
      char v24 = v15;
    }
    else {
      char v24 = 1;
    }
    if (v24) {
      return 0;
    }
  }
  if (v8)
  {
    if (!v17) {
      return 0;
    }
  }
  else
  {
    if (v7 == v16) {
      char v25 = v17;
    }
    else {
      char v25 = 1;
    }
    if (v25) {
      return 0;
    }
  }
  if (v10)
  {
    if (!v19) {
      return 0;
    }
  }
  else
  {
    if (v9 == v18) {
      char v26 = v19;
    }
    else {
      char v26 = 1;
    }
    if (v26) {
      return 0;
    }
  }
  if ((v12 & 1) == 0)
  {
    if (v11 == v20) {
      char v28 = v21;
    }
    else {
      char v28 = 1;
    }
    return (v28 & 1) == 0;
  }
  return (v21 & 1) != 0;
}

unint64_t sub_1AFE7696C()
{
  unint64_t result = qword_1EB8198B8;
  if (!qword_1EB8198B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8198B8);
  }
  return result;
}

void sub_1AFE769C0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1AFE7696C();
    unint64_t v7 = a3(a1, &type metadata for PaidBundleViaOfferConfiguration.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t destroy for PaidBundleViaOfferConfiguration()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PaidBundleViaOfferConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  sub_1AFFC8E38();
  return a1;
}

uint64_t assignWithCopy for PaidBundleViaOfferConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = v6;
  uint64_t v7 = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 56) = v7;
  return a1;
}

uint64_t assignWithTake for PaidBundleViaOfferConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for PaidBundleViaOfferConfiguration(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 65)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PaidBundleViaOfferConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 65) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PaidBundleViaOfferConfiguration()
{
  return &type metadata for PaidBundleViaOfferConfiguration;
}

unsigned char *storeEnumTagSinglePayload for PaidBundleViaOfferConfiguration.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFE76D34);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PaidBundleViaOfferConfiguration.CodingKeys()
{
  return &type metadata for PaidBundleViaOfferConfiguration.CodingKeys;
}

unint64_t sub_1AFE76D70()
{
  unint64_t result = qword_1E9AFBB50;
  if (!qword_1E9AFBB50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBB50);
  }
  return result;
}

unint64_t sub_1AFE76DC8()
{
  unint64_t result = qword_1EB8198C8;
  if (!qword_1EB8198C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8198C8);
  }
  return result;
}

unint64_t sub_1AFE76E20()
{
  unint64_t result = qword_1EB8198C0;
  if (!qword_1EB8198C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8198C0);
  }
  return result;
}

uint64_t sub_1AFE76E74(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000013 && a2 == 0x80000001AFFF77A0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001AFFF77C0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001AFFF77E0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001AFFF7800 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000028 && a2 == 0x80000001AFFF7820)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v5 = sub_1AFFCBCE8();
    swift_bridgeObjectRelease();
    if (v5) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1AFE77068@<X0>(uint64_t a1@<X8>)
{
  sub_1AFD3141C();
  uint64_t v44 = v3;
  MEMORY[0x1F4188790](v3);
  char v42 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  double v40 = (char *)&v39 - v6;
  sub_1AFD30DA8();
  uint64_t v45 = *(void *)(v7 - 8);
  uint64_t v46 = v7;
  MEMORY[0x1F4188790](v7);
  unsigned __int8 v41 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFD2C83C();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v39 - v13;
  uint64_t v15 = sub_1AFFC98F8();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  long long v43 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v39 - v19;
  uint64_t v21 = type metadata accessor for Quote();
  sub_1AFE7CAD8(v1 + *(int *)(v21 + 52), (uint64_t)v14, (uint64_t (*)(void))sub_1AFD2C83C);
  char v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  if (v22(v14, 1, v15) == 1)
  {
    uint64_t v11 = v14;
LABEL_5:
    sub_1AFE7FF80((uint64_t)v11, (uint64_t (*)(void))sub_1AFD2C83C);
    uint64_t v25 = 1;
    uint64_t v26 = v46;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v45 + 56))(a1, v25, 1, v26);
  }
  uint64_t v39 = a1;
  char v23 = v14;
  char v24 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
  v24(v20, v23, v15);
  sub_1AFE7CAD8(v1 + *(int *)(v21 + 56), (uint64_t)v11, (uint64_t (*)(void))sub_1AFD2C83C);
  if (v22(v11, 1, v15) == 1)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v20, v15);
    a1 = v39;
    goto LABEL_5;
  }
  char v27 = v43;
  v24(v43, v11, v15);
  sub_1AFE7C994((unint64_t *)&qword_1EB816CA0, MEMORY[0x1E4F27928]);
  uint64_t result = sub_1AFFCADB8();
  if (result)
  {
    uint64_t v29 = v44;
    int v30 = v40;
    uint64_t v31 = &v40[*(int *)(v44 + 48)];
    v24(v40, v20, v15);
    v24(v31, v27, v15);
    uint64_t v32 = *(int *)(v29 + 48);
    int v33 = v42;
    int v34 = &v42[v32];
    int v35 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
    v35(v42, v30, v15);
    v35(v34, v31, v15);
    uint64_t v36 = (uint64_t)v41;
    v24(v41, v33, v15);
    int v37 = *(void (**)(char *, uint64_t))(v16 + 8);
    v37(v34, v15);
    uint64_t v38 = &v33[*(int *)(v44 + 48)];
    v24(v33, v30, v15);
    v24(v38, v31, v15);
    uint64_t v26 = v46;
    v24((char *)(v36 + *(int *)(v46 + 36)), v38, v15);
    v37(v33, v15);
    a1 = v39;
    sub_1AFE77C58(v36, v39, (uint64_t (*)(void))sub_1AFD30DA8);
    uint64_t v25 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v45 + 56))(a1, v25, 1, v26);
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for Quote()
{
  uint64_t result = qword_1EB817AF0;
  if (!qword_1EB817AF0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1AFE775DC()
{
  return *(void *)v0;
}

uint64_t sub_1AFE775E8()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_1AFE775F4()
{
  return *(void *)(v0 + 32);
}

uint64_t sub_1AFE77600()
{
  return *(void *)(v0 + 48);
}

uint64_t sub_1AFE7760C()
{
  return *(void *)(v0 + 64);
}

uint64_t sub_1AFE77618()
{
  return *(void *)(v0 + 80);
}

uint64_t sub_1AFE77624()
{
  return *(void *)(v0 + 96);
}

uint64_t sub_1AFE77630()
{
  uint64_t v1 = *(void *)(v0 + 112);
  sub_1AFFC8E38();
  return v1;
}

void sub_1AFE77660(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 128);
}

uint64_t sub_1AFE7766C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for Quote();
  return sub_1AFE7CAD8(v1 + *(int *)(v3 + 52), a1, (uint64_t (*)(void))sub_1AFD2C83C);
}

uint64_t sub_1AFE776B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for Quote();
  return sub_1AFE7CAD8(v1 + *(int *)(v3 + 56), a1, (uint64_t (*)(void))sub_1AFD2C83C);
}

uint64_t sub_1AFE77704@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for Quote();
  return sub_1AFE7CAD8(v1 + *(int *)(v3 + 60), a1, (uint64_t (*)(void))sub_1AFD2C83C);
}

uint64_t sub_1AFE77750@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for Quote();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 64));
  return result;
}

uint64_t sub_1AFE77784@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for Quote();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 68));
  return result;
}

uint64_t sub_1AFE777B8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for Quote();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 72));
  return result;
}

uint64_t sub_1AFE777EC()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for Quote() + 76));
}

uint64_t sub_1AFE77818@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for Quote();
  return sub_1AFE7CAD8(v1 + *(int *)(v3 + 80), a1, (uint64_t (*)(void))sub_1AFD2C83C);
}

uint64_t sub_1AFE77864@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for Quote();
  return sub_1AFE7CAD8(v1 + *(int *)(v3 + 84), a1, (uint64_t (*)(void))sub_1AFD2C83C);
}

uint64_t sub_1AFE778B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Quote() + 88);
  uint64_t v4 = sub_1AFFC98F8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_1AFE77928@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for Quote();
  return sub_1AFE7CAD8(v1 + *(int *)(v3 + 92), a1, (uint64_t (*)(void))sub_1AFD2C83C);
}

uint64_t sub_1AFE77974@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Quote() + 96);
  uint64_t v4 = sub_1AFFC9B88();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_1AFE779EC@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, uint64_t a10, char a11, uint64_t a12, char a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, char *a18, uint64_t a19, uint64_t a20,uint64_t a21,char *a22,char *a23,char *a24,uint64_t a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  char v32 = *a18;
  char v33 = *a22;
  char v34 = *a23;
  char v35 = *a24;
  *(void *)a9 = a1;
  *(unsigned char *)(a9 + 8) = a2 & 1;
  *(void *)(a9 + 16) = a3;
  *(unsigned char *)(a9 + 24) = a4 & 1;
  *(void *)(a9 + 32) = a5;
  *(unsigned char *)(a9 + 40) = a6 & 1;
  *(void *)(a9 + 48) = a7;
  *(unsigned char *)(a9 + 56) = a8 & 1;
  *(void *)(a9 + 64) = a10;
  *(unsigned char *)(a9 + 72) = a11 & 1;
  *(void *)(a9 + 80) = a12;
  *(unsigned char *)(a9 + 88) = a13 & 1;
  *(void *)(a9 + 96) = a14;
  *(unsigned char *)(a9 + 104) = a15 & 1;
  *(void *)(a9 + 112) = a16;
  *(void *)(a9 + 120) = a17;
  *(unsigned char *)(a9 + 128) = v32;
  uint64_t v36 = (int *)type metadata accessor for Quote();
  sub_1AFE77C58(a19, a9 + v36[13], (uint64_t (*)(void))sub_1AFD2C83C);
  sub_1AFE77C58(a20, a9 + v36[14], (uint64_t (*)(void))sub_1AFD2C83C);
  sub_1AFE77C58(a21, a9 + v36[15], (uint64_t (*)(void))sub_1AFD2C83C);
  *(unsigned char *)(a9 + v36[16]) = v33;
  *(unsigned char *)(a9 + v36[17]) = v34;
  *(unsigned char *)(a9 + v36[18]) = v35;
  uint64_t v37 = a9 + v36[19];
  *(void *)uint64_t v37 = a25;
  *(unsigned char *)(v37 + 8) = a26 & 1;
  sub_1AFE77C58(a27, a9 + v36[20], (uint64_t (*)(void))sub_1AFD2C83C);
  sub_1AFE77C58(a28, a9 + v36[21], (uint64_t (*)(void))sub_1AFD2C83C);
  sub_1AFE77C58(a29, a9 + v36[23], (uint64_t (*)(void))sub_1AFD2C83C);
  uint64_t v38 = a9 + v36[22];
  uint64_t v39 = sub_1AFFC98F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 32))(v38, a30, v39);
  uint64_t v40 = a9 + v36[24];
  uint64_t v41 = sub_1AFFC9B88();
  char v42 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 32);

  return v42(v40, a31, v41);
}

uint64_t sub_1AFE77C58(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1AFE77CC4(char a1)
{
  unint64_t result = 0x6563697270;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6168436563697270;
      break;
    case 2:
      unint64_t result = 0xD000000000000014;
      break;
    case 3:
      unint64_t result = 0x756F487265746661;
      break;
    case 4:
      unint64_t result = 0xD000000000000015;
      break;
    case 5:
    case 14:
      unint64_t result = 0x656B72614D657270;
      break;
    case 6:
      unint64_t result = 0xD000000000000014;
      break;
    case 7:
      unint64_t result = 0x79636E6572727563;
      break;
    case 8:
    case 9:
    case 10:
      unint64_t result = 0x65676E6168637865;
      break;
    case 11:
    case 13:
      unint64_t result = 0xD000000000000010;
      break;
    case 12:
      unint64_t result = 0x756F536563697270;
      break;
    case 15:
      unint64_t result = 0xD000000000000018;
      break;
    case 16:
      unint64_t result = 0xD000000000000011;
      break;
    case 17:
      unint64_t result = 0x73676E696E726165;
      break;
    case 18:
      unint64_t result = 0xD000000000000011;
      break;
    case 19:
      unint64_t result = 0x7243726576726573;
      break;
    case 20:
      unint64_t result = 0x695474656B72616DLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1AFE77F88()
{
  return sub_1AFE77CC4(*v0);
}

uint64_t sub_1AFE77F90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1AFE7F5D0(a1, a2);
  *a3 = result;
  return result;
}

void sub_1AFE77FB8(unsigned char *a1@<X8>)
{
  *a1 = 21;
}

uint64_t sub_1AFE77FC4(uint64_t a1)
{
  unint64_t v2 = sub_1AFE7C8EC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFE78000(uint64_t a1)
{
  unint64_t v2 = sub_1AFE7C8EC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFE7803C(void *a1)
{
  uint64_t v3 = v1;
  sub_1AFE7CB40(0, &qword_1EB818340, (uint64_t (*)(void))sub_1AFE7C8EC, (uint64_t)&type metadata for Quote.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFE7C8EC();
  sub_1AFFCBE78();
  char v14 = 0;
  sub_1AFFCBBB8();
  if (!v2)
  {
    char v14 = 1;
    sub_1AFFCBBB8();
    char v14 = 2;
    sub_1AFFCBBB8();
    char v14 = 3;
    sub_1AFFCBBB8();
    char v14 = 4;
    sub_1AFFCBBB8();
    char v14 = 5;
    sub_1AFFCBBB8();
    char v14 = 6;
    sub_1AFFCBBB8();
    char v14 = 7;
    sub_1AFFCBB98();
    char v14 = *(unsigned char *)(v3 + 128);
    char v13 = 8;
    sub_1AFE7C940();
    sub_1AFFCBC58();
    uint64_t v10 = (int *)type metadata accessor for Quote();
    char v14 = 9;
    sub_1AFFC98F8();
    sub_1AFE7C994((unint64_t *)&unk_1EB818B90, MEMORY[0x1E4F27928]);
    sub_1AFFCBBE8();
    char v14 = 10;
    sub_1AFFCBBE8();
    char v14 = 11;
    sub_1AFFCBBE8();
    char v14 = *(unsigned char *)(v3 + v10[16]);
    char v13 = 12;
    v12[1] = sub_1AFE7C9DC();
    sub_1AFFCBBE8();
    char v14 = *(unsigned char *)(v3 + v10[17]);
    char v13 = 13;
    sub_1AFFCBBE8();
    char v14 = *(unsigned char *)(v3 + v10[18]);
    char v13 = 14;
    sub_1AFFCBBE8();
    char v14 = 15;
    sub_1AFFCBBB8();
    char v14 = 16;
    sub_1AFFCBBE8();
    char v14 = 17;
    sub_1AFFCBBE8();
    char v14 = 18;
    sub_1AFFCBC58();
    char v14 = 19;
    sub_1AFFCBBE8();
    char v14 = 20;
    sub_1AFFC9B88();
    sub_1AFE7C994(&qword_1EB816CE0, MEMORY[0x1E4F27D68]);
    sub_1AFFCBC58();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1AFE78654@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v50 = a2;
  uint64_t v3 = sub_1AFFC9B88();
  uint64_t v48 = *(void *)(v3 - 8);
  uint64_t v49 = v3;
  MEMORY[0x1F4188790](v3);
  long long v47 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1AFFC98F8();
  uint64_t v52 = *(void *)(v5 - 8);
  uint64_t v53 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v45 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFD2C83C();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v46 = (uint64_t)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v44 = (uint64_t)&v43 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v43 = (uint64_t)&v43 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v51 = (uint64_t)&v43 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v43 - v16;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v43 - v19;
  sub_1AFE7CB40(0, &qword_1EB818300, (uint64_t (*)(void))sub_1AFE7C8EC, (uint64_t)&type metadata for Quote.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v54 = *(void *)(v21 - 8);
  uint64_t v55 = v21;
  MEMORY[0x1F4188790](v21);
  char v23 = (char *)&v43 - v22;
  char v24 = (int *)type metadata accessor for Quote();
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (char *)&v43 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v26 = 0;
  v26[8] = 1;
  *((void *)v26 + 2) = 0;
  unsigned char v26[24] = 1;
  uint64_t v27 = a1[3];
  uint64_t v58 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v27);
  sub_1AFE7C8EC();
  uint64_t v56 = v23;
  uint64_t v28 = v57;
  sub_1AFFCBE68();
  if (v28) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
  }
  uint64_t v29 = (uint64_t)v20;
  uint64_t v30 = v54;
  char v60 = 0;
  *(void *)uint64_t v26 = sub_1AFFCBAC8();
  v26[8] = v31 & 1;
  char v60 = 1;
  *((void *)v26 + 2) = sub_1AFFCBAC8();
  unsigned char v26[24] = v32 & 1;
  char v60 = 2;
  *((void *)v26 + 4) = sub_1AFFCBAC8();
  v26[40] = v33 & 1;
  char v60 = 3;
  *((void *)v26 + 6) = sub_1AFFCBAC8();
  v26[56] = v34 & 1;
  char v60 = 4;
  *((void *)v26 + 8) = sub_1AFFCBAC8();
  v26[72] = v35 & 1;
  char v60 = 5;
  *((void *)v26 + 10) = sub_1AFFCBAC8();
  v26[88] = v36 & 1;
  char v60 = 6;
  *((void *)v26 + 12) = sub_1AFFCBAC8();
  v26[104] = v37 & 1;
  char v60 = 7;
  *((void *)v26 + 14) = sub_1AFFCBAA8();
  *((void *)v26 + 15) = v38;
  char v59 = 8;
  sub_1AFE7CA30();
  sub_1AFFCBB58();
  v26[128] = v60;
  char v60 = 9;
  sub_1AFE7C994(&qword_1EB816CB0, MEMORY[0x1E4F27928]);
  sub_1AFFCBAF8();
  sub_1AFE77C58(v29, (uint64_t)&v26[v24[13]], (uint64_t (*)(void))sub_1AFD2C83C);
  char v60 = 10;
  sub_1AFFCBAF8();
  sub_1AFE77C58((uint64_t)v17, (uint64_t)&v26[v24[14]], (uint64_t (*)(void))sub_1AFD2C83C);
  char v60 = 11;
  sub_1AFFCBAF8();
  sub_1AFE77C58(v51, (uint64_t)&v26[v24[15]], (uint64_t (*)(void))sub_1AFD2C83C);
  char v59 = 12;
  sub_1AFE7CA84();
  sub_1AFFCBAF8();
  v26[v24[16]] = v60;
  char v59 = 13;
  sub_1AFFCBAF8();
  v26[v24[17]] = v60;
  char v59 = 14;
  sub_1AFFCBAF8();
  v26[v24[18]] = v60;
  char v60 = 15;
  uint64_t v39 = sub_1AFFCBAC8();
  uint64_t v40 = &v26[v24[19]];
  *(void *)uint64_t v40 = v39;
  v40[8] = v41 & 1;
  char v60 = 16;
  sub_1AFFCBAF8();
  sub_1AFE77C58(v43, (uint64_t)&v26[v24[20]], (uint64_t (*)(void))sub_1AFD2C83C);
  char v60 = 17;
  sub_1AFFCBAF8();
  sub_1AFE77C58(v44, (uint64_t)&v26[v24[21]], (uint64_t (*)(void))sub_1AFD2C83C);
  char v60 = 18;
  sub_1AFFCBB58();
  (*(void (**)(char *, char *, uint64_t))(v52 + 32))(&v26[v24[22]], v45, v53);
  char v60 = 19;
  sub_1AFFCBAF8();
  sub_1AFE77C58(v46, (uint64_t)&v26[v24[23]], (uint64_t (*)(void))sub_1AFD2C83C);
  char v60 = 20;
  sub_1AFE7C994(&qword_1EB816CE8, MEMORY[0x1E4F27D68]);
  sub_1AFFCBB58();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v56, v55);
  (*(void (**)(char *, char *, uint64_t))(v48 + 32))(&v26[v24[24]], v47, v49);
  sub_1AFE7CAD8((uint64_t)v26, v50, (uint64_t (*)(void))type metadata accessor for Quote);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
  return sub_1AFE7FF80((uint64_t)v26, (uint64_t (*)(void))type metadata accessor for Quote);
}

uint64_t sub_1AFE79334@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1AFE78654(a1, a2);
}

uint64_t sub_1AFE7934C(void *a1)
{
  return sub_1AFE7803C(a1);
}

uint64_t sub_1AFE79368()
{
  sub_1AFD2C83C();
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v180 = (uint64_t)&v151 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  v158 = (char *)&v151 - v3;
  MEMORY[0x1F4188790](v4);
  uint64_t v159 = (uint64_t)&v151 - v5;
  MEMORY[0x1F4188790](v6);
  uint64_t v156 = (uint64_t)&v151 - v7;
  MEMORY[0x1F4188790](v8);
  uint64_t v179 = (uint64_t)&v151 - v9;
  MEMORY[0x1F4188790](v10);
  v164 = (char *)&v151 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v175 = (uint64_t)&v151 - v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v174 = (uint64_t)&v151 - v15;
  uint64_t v16 = sub_1AFFC98F8();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v182 = v16;
  uint64_t v183 = v17;
  MEMORY[0x1F4188790](v16);
  v157 = (char *)&v151 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  v152 = (char *)&v151 - v20;
  MEMORY[0x1F4188790](v21);
  v151 = (char *)&v151 - v22;
  MEMORY[0x1F4188790](v23);
  v155 = (char *)&v151 - v24;
  MEMORY[0x1F4188790](v25);
  v154 = (char *)&v151 - v26;
  MEMORY[0x1F4188790](v27);
  v153 = (char *)&v151 - v28;
  v188 = (int *)type metadata accessor for Quote();
  MEMORY[0x1F4188790](v188);
  uint64_t v178 = (uint64_t)&v151 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v30);
  v163 = (char *)&v151 - v31;
  MEMORY[0x1F4188790](v32);
  v162 = (char *)&v151 - v33;
  MEMORY[0x1F4188790](v34);
  uint64_t v161 = (uint64_t)&v151 - v35;
  MEMORY[0x1F4188790](v36);
  v187 = (char **)((char *)&v151 - v37);
  uint64_t v38 = sub_1AFFC95C8();
  uint64_t v176 = *(void *)(v38 - 8);
  unint64_t v177 = v38;
  MEMORY[0x1F4188790](v38);
  v173 = (char *)&v151 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_1AFFC95E8();
  uint64_t v41 = *(void *)(v40 - 8);
  MEMORY[0x1F4188790](v40);
  uint64_t v43 = (char *)&v151 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_1AFFC9A78();
  MEMORY[0x1F4188790](v44 - 8);
  sub_1AFE7CB40(0, &qword_1EB818520, (uint64_t (*)(void))sub_1AFE7CBA8, MEMORY[0x1E4FBB3D0], MEMORY[0x1E4F27640]);
  uint64_t v46 = v45;
  uint64_t v47 = *(void *)(v45 - 8);
  MEMORY[0x1F4188790](v45);
  v170 = (char *)&v151 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v49);
  v172 = (char *)&v151 - v50;
  MEMORY[0x1F4188790](v51);
  uint64_t v53 = (char *)&v151 - v52;
  MEMORY[0x1F4188790](v54);
  uint64_t v56 = (char *)&v151 - v55;
  sub_1AFFC99B8();
  unint64_t v168 = sub_1AFE7CBA8();
  sub_1AFFC9568();
  uint64_t v192 = 2;
  sub_1AFE7CBFC();
  uint64_t v58 = v57;
  uint64_t v166 = sub_1AFE7C994(&qword_1EB8185C0, (void (*)(uint64_t))sub_1AFE7CBFC);
  sub_1AFFC95D8();
  MEMORY[0x1B3E8B9E0](v43, v46);
  char v59 = *(void (**)(char *, uint64_t))(v41 + 8);
  unint64_t v171 = v40;
  uint64_t v60 = v40;
  uint64_t v61 = v169;
  v59(v43, v60);
  v62 = *(void (**)(char *, uint64_t))(v47 + 8);
  uint64_t v181 = v47 + 8;
  v186 = v62;
  v62(v53, v46);
  uint64_t v192 = 0;
  unint64_t v193 = 0xE000000000000000;
  char v63 = *(unsigned char *)(v61 + 8);
  v184 = v56;
  uint64_t v185 = v46;
  uint64_t v167 = v58;
  v165 = (void (*)(char *, unint64_t))v59;
  if (v63)
  {
    sub_1AFFCAFA8();
  }
  else
  {
    uint64_t v191 = *(void *)v61;
    sub_1AFE7CC5C();
    sub_1AFFC9128();
    sub_1AFFC8E38();
    sub_1AFFCAFA8();
    swift_bridgeObjectRelease_n();
  }
  sub_1AFFCAFA8();
  uint64_t v65 = v192;
  unint64_t v64 = v193;
  uint64_t v192 = 0;
  unint64_t v193 = 0xE000000000000000;
  if (*(unsigned char *)(v61 + 24))
  {
    sub_1AFFCAFA8();
  }
  else
  {
    uint64_t v191 = *(void *)(v61 + 16);
    sub_1AFE7CC5C();
    sub_1AFFC9128();
    sub_1AFFC8E38();
    sub_1AFFCAFA8();
    swift_bridgeObjectRelease_n();
  }
  sub_1AFFCAFA8();
  uint64_t v192 = v65;
  unint64_t v193 = v64;
  sub_1AFFC8E38();
  sub_1AFFCAFA8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v67 = v192;
  unint64_t v66 = v193;
  uint64_t v192 = 0;
  unint64_t v193 = 0xE000000000000000;
  uint64_t v68 = *(void *)(v61 + 120);
  if (v68)
  {
    uint64_t v189 = *(void *)(v61 + 112);
    uint64_t v190 = v68;
    sub_1AFFCB928();
  }
  else
  {
    sub_1AFFCAFA8();
  }
  sub_1AFFCAFA8();
  uint64_t v192 = v67;
  unint64_t v193 = v66;
  sub_1AFFC8E38();
  sub_1AFFCAFA8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v69 = v193;
  uint64_t v160 = v192;
  uint64_t v192 = 0;
  unint64_t v193 = 0xE000000000000000;
  uint64_t v70 = *(void *)(v61 + 32);
  char v71 = *(unsigned char *)(v61 + 40);
  sub_1AFFC99B8();
  v72 = v170;
  sub_1AFFC9568();
  uint64_t v189 = 3;
  sub_1AFFC95D8();
  uint64_t v73 = v185;
  MEMORY[0x1B3E8B9E0](v43, v185);
  v165(v43, v171);
  v74 = v186;
  v186(v72, v73);
  v75 = v173;
  sub_1AFFC95B8();
  v76 = v172;
  MEMORY[0x1B3E8B9D0](v75, v73);
  (*(void (**)(char *, unint64_t))(v176 + 8))(v75, v177);
  v74(v53, v73);
  if (v71)
  {
    sub_1AFFCAFA8();
  }
  else
  {
    uint64_t v191 = v70;
    sub_1AFE7CC5C();
    sub_1AFFC9128();
    sub_1AFFC8E38();
    sub_1AFFCAFA8();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v77 = (uint64_t)v162;
  v78 = v76;
  uint64_t v79 = v160;
  v186(v78, v73);
  sub_1AFFCAFA8();
  uint64_t v192 = v79;
  unint64_t v193 = v69;
  sub_1AFFC8E38();
  sub_1AFFCAFA8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v81 = v192;
  unint64_t v80 = v193;
  uint64_t v192 = 0;
  unint64_t v193 = 0xE000000000000000;
  if (*(unsigned char *)(v61 + v188[16]) == 7)
  {
    sub_1AFFCAFA8();
  }
  else
  {
    LOBYTE(v189) = *(unsigned char *)(v61 + v188[16]);
    sub_1AFFCB928();
  }
  uint64_t v82 = (uint64_t)v163;
  uint64_t v192 = v81;
  unint64_t v193 = v80;
  sub_1AFFC8E38();
  sub_1AFFCAFA8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v176 = v192;
  unint64_t v177 = v193;
  int v83 = *(unsigned __int8 *)(v61 + 56);
  v84 = (unsigned __int8 *)v187;
  sub_1AFE7CAD8(v61, (uint64_t)v187, (uint64_t (*)(void))type metadata accessor for Quote);
  if (v83 != 1)
  {
    sub_1AFE7FF80((uint64_t)v84, (uint64_t (*)(void))type metadata accessor for Quote);
    uint64_t v86 = v161;
    sub_1AFE7CAD8(v61, v161, (uint64_t (*)(void))type metadata accessor for Quote);
    goto LABEL_21;
  }
  int v85 = v84[72];
  sub_1AFE7FF80((uint64_t)v84, (uint64_t (*)(void))type metadata accessor for Quote);
  uint64_t v86 = v161;
  sub_1AFE7CAD8(v61, v161, (uint64_t (*)(void))type metadata accessor for Quote);
  if (v85 != 1)
  {
LABEL_21:
    sub_1AFE7FF80(v86, (uint64_t (*)(void))type metadata accessor for Quote);
    goto LABEL_22;
  }
  int v87 = *(unsigned __int8 *)(v86 + v188[17]);
  sub_1AFE7FF80(v86, (uint64_t (*)(void))type metadata accessor for Quote);
  if (v87 == 7)
  {
    unint64_t v88 = 0xEA00000000006C69;
    uint64_t v89 = 0x6E203A7265746661;
    goto LABEL_32;
  }
LABEL_22:
  uint64_t v192 = 0;
  unint64_t v193 = 0xE000000000000000;
  if (*(unsigned char *)(v61 + 56))
  {
    sub_1AFFCAFA8();
  }
  else
  {
    uint64_t v191 = *(void *)(v61 + 48);
    sub_1AFE7CC5C();
    sub_1AFFC9128();
    sub_1AFFC8E38();
    sub_1AFFCAFA8();
    swift_bridgeObjectRelease_n();
  }
  sub_1AFFCAFA8();
  uint64_t v192 = 0x28203A7265746661;
  unint64_t v193 = 0xE800000000000000;
  sub_1AFFCAFA8();
  swift_bridgeObjectRelease();
  uint64_t v91 = v192;
  unint64_t v90 = v193;
  uint64_t v192 = 0;
  unint64_t v193 = 0xE000000000000000;
  if (*(unsigned char *)(v61 + 72))
  {
    sub_1AFFCAFA8();
  }
  else
  {
    uint64_t v191 = *(void *)(v61 + 64);
    sub_1AFE7CC5C();
    sub_1AFFC9128();
    sub_1AFFC8E38();
    sub_1AFFCAFA8();
    swift_bridgeObjectRelease_n();
  }
  sub_1AFFCAFA8();
  uint64_t v192 = v91;
  unint64_t v193 = v90;
  sub_1AFFC8E38();
  sub_1AFFCAFA8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v93 = v192;
  unint64_t v92 = v193;
  uint64_t v192 = 0;
  unint64_t v193 = 0xE000000000000000;
  if (*(unsigned char *)(v61 + v188[17]) == 7)
  {
    sub_1AFFCAFA8();
  }
  else
  {
    LOBYTE(v189) = *(unsigned char *)(v61 + v188[17]);
    sub_1AFFCB928();
  }
  uint64_t v192 = v93;
  unint64_t v193 = v92;
  sub_1AFFC8E38();
  sub_1AFFCAFA8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1AFFC8E38();
  sub_1AFFCAFA8();
  swift_bridgeObjectRelease();
  uint64_t v89 = v192;
  unint64_t v88 = v193;
LABEL_32:
  int v94 = *(unsigned __int8 *)(v61 + 88);
  sub_1AFE7CAD8(v61, v77, (uint64_t (*)(void))type metadata accessor for Quote);
  v173 = (char *)v88;
  v172 = (char *)v89;
  if (v94 != 1)
  {
    sub_1AFE7FF80(v77, (uint64_t (*)(void))type metadata accessor for Quote);
    sub_1AFE7CAD8(v61, v82, (uint64_t (*)(void))type metadata accessor for Quote);
    goto LABEL_37;
  }
  int v95 = *(unsigned __int8 *)(v77 + 104);
  sub_1AFE7FF80(v77, (uint64_t (*)(void))type metadata accessor for Quote);
  sub_1AFE7CAD8(v61, v82, (uint64_t (*)(void))type metadata accessor for Quote);
  if (v95 != 1)
  {
LABEL_37:
    sub_1AFE7FF80(v82, (uint64_t (*)(void))type metadata accessor for Quote);
    goto LABEL_38;
  }
  int v96 = *(unsigned __int8 *)(v82 + v188[18]);
  sub_1AFE7FF80(v82, (uint64_t (*)(void))type metadata accessor for Quote);
  if (v96 == 7)
  {
    unint64_t v97 = 0xE800000000000000;
    uint64_t v98 = 0x6C696E203A657270;
    uint64_t v99 = v182;
    v100 = v188;
    goto LABEL_48;
  }
LABEL_38:
  uint64_t v192 = 0;
  unint64_t v193 = 0xE000000000000000;
  if (*(unsigned char *)(v61 + 88))
  {
    sub_1AFFCAFA8();
  }
  else
  {
    uint64_t v191 = *(void *)(v61 + 80);
    sub_1AFE7CC5C();
    sub_1AFFC9128();
    sub_1AFFC8E38();
    sub_1AFFCAFA8();
    swift_bridgeObjectRelease_n();
  }
  sub_1AFFCAFA8();
  uint64_t v192 = 0x28203A657270;
  unint64_t v193 = 0xE600000000000000;
  sub_1AFFCAFA8();
  swift_bridgeObjectRelease();
  uint64_t v102 = v192;
  unint64_t v101 = v193;
  uint64_t v192 = 0;
  unint64_t v193 = 0xE000000000000000;
  if (*(unsigned char *)(v61 + 104))
  {
    sub_1AFFCAFA8();
  }
  else
  {
    uint64_t v191 = *(void *)(v61 + 96);
    sub_1AFE7CC5C();
    sub_1AFFC9128();
    sub_1AFFC8E38();
    sub_1AFFCAFA8();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v99 = v182;
  v100 = v188;
  sub_1AFFCAFA8();
  uint64_t v192 = v102;
  unint64_t v193 = v101;
  sub_1AFFC8E38();
  sub_1AFFCAFA8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v104 = v192;
  unint64_t v103 = v193;
  uint64_t v192 = 0;
  unint64_t v193 = 0xE000000000000000;
  if (*(unsigned char *)(v61 + v100[18]) == 7)
  {
    sub_1AFFCAFA8();
  }
  else
  {
    LOBYTE(v189) = *(unsigned char *)(v61 + v100[18]);
    sub_1AFFCB928();
  }
  uint64_t v192 = v104;
  unint64_t v193 = v103;
  sub_1AFFC8E38();
  sub_1AFFCAFA8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1AFFC8E38();
  sub_1AFFCAFA8();
  swift_bridgeObjectRelease();
  uint64_t v98 = v192;
  unint64_t v97 = v193;
LABEL_48:
  uint64_t v192 = 0;
  unint64_t v193 = 0xE000000000000000;
  LOBYTE(v189) = *(unsigned char *)(v61 + 128);
  sub_1AFFCB928();
  sub_1AFFCAFA8();
  uint64_t v192 = 0x203A74656B72616DLL;
  unint64_t v193 = 0xE900000000000028;
  sub_1AFFCAFA8();
  swift_bridgeObjectRelease();
  uint64_t v106 = v192;
  unint64_t v105 = v193;
  uint64_t v192 = 0;
  unint64_t v193 = 0xE000000000000000;
  uint64_t v107 = v174;
  sub_1AFE7CAD8(v61 + v100[13], v174, (uint64_t (*)(void))sub_1AFD2C83C);
  uint64_t v108 = v183;
  v187 = *(char ***)(v183 + 48);
  int v109 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v187)(v107, 1, v99);
  unint64_t v171 = v97;
  if (v109 == 1)
  {
    sub_1AFE7FF80(v107, (uint64_t (*)(void))sub_1AFD2C83C);
    sub_1AFFCAFA8();
  }
  else
  {
    v110 = v153;
    (*(void (**)(char *, uint64_t, uint64_t))(v108 + 32))(v153, v107, v99);
    sub_1AFFCB928();
    (*(void (**)(char *, uint64_t))(v108 + 8))(v110, v99);
  }
  sub_1AFFCAFA8();
  uint64_t v111 = v175;
  sub_1AFE7CAD8(v61 + v100[14], v175, (uint64_t (*)(void))sub_1AFD2C83C);
  int v112 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v187)(v111, 1, v99);
  v170 = (char *)v98;
  if (v112 == 1)
  {
    sub_1AFE7FF80(v111, (uint64_t (*)(void))sub_1AFD2C83C);
    sub_1AFFCAFA8();
  }
  else
  {
    v113 = v154;
    (*(void (**)(char *, uint64_t, uint64_t))(v108 + 32))(v154, v111, v99);
    sub_1AFFCB928();
    (*(void (**)(char *, uint64_t))(v108 + 8))(v113, v99);
  }
  uint64_t v114 = v99;
  uint64_t v115 = (uint64_t)v164;
  sub_1AFFCAFA8();
  uint64_t v192 = v106;
  unint64_t v193 = v105;
  sub_1AFFC8E38();
  sub_1AFFCAFA8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v117 = v192;
  unint64_t v116 = v193;
  uint64_t v192 = 0;
  unint64_t v193 = 0xE000000000000000;
  sub_1AFE7CAD8(v61 + v188[15], v115, (uint64_t (*)(void))sub_1AFD2C83C);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v187)(v115, 1, v114) == 1)
  {
    sub_1AFE7FF80(v115, (uint64_t (*)(void))sub_1AFD2C83C);
    sub_1AFFCAFA8();
  }
  else
  {
    uint64_t v118 = v183;
    v119 = v155;
    (*(void (**)(char *, uint64_t, uint64_t))(v183 + 32))(v155, v115, v114);
    sub_1AFFCB928();
    (*(void (**)(char *, uint64_t))(v118 + 8))(v119, v114);
  }
  sub_1AFFCAFA8();
  uint64_t v192 = v117;
  unint64_t v193 = v116;
  sub_1AFFC8E38();
  sub_1AFFCAFA8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v121 = v192;
  unint64_t v120 = v193;
  v122 = v188;
  sub_1AFFC9B88();
  sub_1AFE7C994(&qword_1EB816CF0, MEMORY[0x1E4F27D68]);
  sub_1AFFCBC88();
  uint64_t v192 = v121;
  unint64_t v193 = v120;
  sub_1AFFC8E38();
  sub_1AFFCAFA8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1AFFC8E38();
  sub_1AFFCAFA8();
  swift_bridgeObjectRelease();
  uint64_t v123 = v193;
  uint64_t v175 = v192;
  uint64_t v124 = v61 + v122[20];
  uint64_t v125 = v179;
  sub_1AFE7CAD8(v124, v179, (uint64_t (*)(void))sub_1AFD2C83C);
  v126 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v187;
  int v127 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v187)(v125, 1, v114);
  sub_1AFE7FF80(v125, (uint64_t (*)(void))sub_1AFD2C83C);
  uint64_t v128 = v178;
  sub_1AFE7CAD8(v61, v178, (uint64_t (*)(void))type metadata accessor for Quote);
  uint64_t v174 = v123;
  if (v127 == 1)
  {
    uint64_t v129 = v128 + v122[21];
    uint64_t v130 = v128;
    uint64_t v131 = v156;
    sub_1AFE7CAD8(v129, v156, (uint64_t (*)(void))sub_1AFD2C83C);
    sub_1AFE7FF80(v130, (uint64_t (*)(void))type metadata accessor for Quote);
    LODWORD(v130) = v126(v131, 1, v114);
    sub_1AFE7FF80(v131, (uint64_t (*)(void))sub_1AFD2C83C);
    if (v130 == 1) {
      goto LABEL_67;
    }
  }
  else
  {
    sub_1AFE7FF80(v128, (uint64_t (*)(void))type metadata accessor for Quote);
  }
  uint64_t v192 = 0;
  unint64_t v193 = 0xE000000000000000;
  sub_1AFFCB7F8();
  sub_1AFFCAFA8();
  uint64_t v132 = v159;
  sub_1AFE7CAD8(v124, v159, (uint64_t (*)(void))sub_1AFD2C83C);
  if (v126(v132, 1, v114) == 1)
  {
    sub_1AFE7FF80(v132, (uint64_t (*)(void))sub_1AFD2C83C);
    sub_1AFFCAFA8();
    uint64_t v133 = v183;
  }
  else
  {
    uint64_t v133 = v183;
    v134 = v151;
    (*(void (**)(char *, uint64_t, uint64_t))(v183 + 32))(v151, v132, v114);
    sub_1AFFCB928();
    (*(void (**)(char *, uint64_t))(v133 + 8))(v134, v114);
  }
  uint64_t v135 = (uint64_t)v158;
  sub_1AFFCAFA8();
  sub_1AFE7CAD8(v61 + v122[21], v135, (uint64_t (*)(void))sub_1AFD2C83C);
  if (v126(v135, 1, v114) == 1)
  {
    sub_1AFE7FF80(v135, (uint64_t (*)(void))sub_1AFD2C83C);
    sub_1AFFCAFA8();
  }
  else
  {
    v136 = v152;
    (*(void (**)(char *, uint64_t, uint64_t))(v133 + 32))(v152, v135, v114);
    sub_1AFFCB928();
    (*(void (**)(char *, uint64_t))(v133 + 8))(v136, v114);
  }
LABEL_67:
  uint64_t v192 = 0;
  unint64_t v193 = 0xE000000000000000;
  uint64_t v137 = v61 + v122[19];
  if (*(unsigned char *)(v137 + 8))
  {
    sub_1AFFCAFA8();
  }
  else
  {
    uint64_t v191 = *(void *)v137;
    sub_1AFE7CC5C();
    sub_1AFFC9128();
    sub_1AFFC8E38();
    sub_1AFFCAFA8();
    swift_bridgeObjectRelease_n();
  }
  sub_1AFFCAFA8();
  uint64_t v192 = 0x3A68736572666572;
  unint64_t v193 = 0xEA00000000002820;
  sub_1AFFCAFA8();
  swift_bridgeObjectRelease();
  uint64_t v139 = v192;
  unint64_t v138 = v193;
  uint64_t v192 = 0x20746E65696C63;
  unint64_t v193 = 0xE700000000000000;
  sub_1AFE7C994(&qword_1EB816CB8, MEMORY[0x1E4F27928]);
  sub_1AFFCBC88();
  sub_1AFFCAFA8();
  swift_bridgeObjectRelease();
  sub_1AFFCAFA8();
  v140 = v122;
  uint64_t v192 = v139;
  unint64_t v193 = v138;
  sub_1AFFC8E38();
  uint64_t v141 = v182;
  sub_1AFFCAFA8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v143 = v192;
  unint64_t v142 = v193;
  uint64_t v192 = 0;
  unint64_t v193 = 0xE000000000000000;
  sub_1AFFCAFA8();
  uint64_t v144 = v180;
  sub_1AFE7CAD8(v61 + v140[23], v180, (uint64_t (*)(void))sub_1AFD2C83C);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v187)(v144, 1, v141) == 1)
  {
    sub_1AFE7FF80(v144, (uint64_t (*)(void))sub_1AFD2C83C);
    sub_1AFFCAFA8();
  }
  else
  {
    uint64_t v145 = v183;
    v146 = v157;
    (*(void (**)(char *, uint64_t, uint64_t))(v183 + 32))(v157, v144, v141);
    sub_1AFFCB928();
    (*(void (**)(char *, uint64_t))(v145 + 8))(v146, v141);
  }
  v148 = v184;
  uint64_t v147 = v185;
  uint64_t v192 = v143;
  unint64_t v193 = v142;
  sub_1AFFC8E38();
  sub_1AFFCAFA8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1AFFC8E38();
  sub_1AFFCAFA8();
  swift_bridgeObjectRelease();
  uint64_t v192 = 0;
  unint64_t v193 = 0xE000000000000000;
  sub_1AFFCB7F8();
  swift_bridgeObjectRelease();
  uint64_t v192 = 0x2865746F7551;
  unint64_t v193 = 0xE600000000000000;
  sub_1AFFCAFA8();
  swift_bridgeObjectRelease();
  sub_1AFFCAFA8();
  sub_1AFFCAFA8();
  swift_bridgeObjectRelease();
  sub_1AFFCAFA8();
  sub_1AFFCAFA8();
  swift_bridgeObjectRelease();
  sub_1AFFCAFA8();
  sub_1AFFCAFA8();
  swift_bridgeObjectRelease();
  sub_1AFFCAFA8();
  sub_1AFFCAFA8();
  swift_bridgeObjectRelease();
  sub_1AFFCAFA8();
  sub_1AFFCAFA8();
  swift_bridgeObjectRelease();
  sub_1AFFCAFA8();
  uint64_t v149 = v192;
  v186(v148, v147);
  return v149;
}

uint64_t sub_1AFE7B178(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1AFFC98F8();
  uint64_t v187 = *(void *)(v4 - 8);
  uint64_t v188 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v185 = &v162[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1AFE7FF1C();
  uint64_t v186 = v6;
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v181 = &v162[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v182 = &v162[-v10];
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v183 = &v162[-v12];
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  v184 = &v162[-v14];
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v17 = &v162[-v16];
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = &v162[-v18];
  sub_1AFD2C83C();
  uint64_t v21 = MEMORY[0x1F4188790](v20 - 8);
  uint64_t v22 = MEMORY[0x1F4188790](v21);
  uint64_t v23 = MEMORY[0x1F4188790](v22);
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = MEMORY[0x1F4188790](&v162[-v24]);
  uint64_t v26 = MEMORY[0x1F4188790](v25);
  uint64_t v27 = MEMORY[0x1F4188790](v26);
  uint64_t v28 = MEMORY[0x1F4188790](v27);
  uint64_t v29 = MEMORY[0x1F4188790](v28);
  uint64_t v30 = MEMORY[0x1F4188790](v29);
  uint64_t v31 = MEMORY[0x1F4188790](v30);
  uint64_t v33 = &v162[-v32];
  uint64_t v34 = MEMORY[0x1F4188790](v31);
  uint64_t v35 = MEMORY[0x1F4188790](v34);
  uint64_t v37 = &v162[-v36];
  uint64_t v38 = MEMORY[0x1F4188790](v35);
  uint64_t v40 = &v162[-v39];
  uint64_t v41 = MEMORY[0x1F4188790](v38);
  uint64_t v43 = &v162[-v42];
  uint64_t v44 = MEMORY[0x1F4188790](v41);
  uint64_t v46 = &v162[-v45];
  uint64_t v47 = MEMORY[0x1F4188790](v44);
  uint64_t v49 = &v162[-v48];
  uint64_t v50 = MEMORY[0x1F4188790](v47);
  uint64_t v61 = a2;
  char v63 = &v162[-v62];
  char v64 = *(unsigned char *)(v61 + 8);
  if (*(unsigned char *)(a1 + 8))
  {
    if (!*(unsigned char *)(v61 + 8)) {
      goto LABEL_72;
    }
  }
  else
  {
    if (*(double *)a1 != *(double *)v61) {
      char v64 = 1;
    }
    if (v64) {
      goto LABEL_72;
    }
  }
  char v65 = *(unsigned char *)(v61 + 24);
  if (*(unsigned char *)(a1 + 24))
  {
    if (!*(unsigned char *)(v61 + 24)) {
      goto LABEL_72;
    }
  }
  else
  {
    if (*(double *)(a1 + 16) != *(double *)(v61 + 16)) {
      char v65 = 1;
    }
    if (v65) {
      goto LABEL_72;
    }
  }
  char v66 = *(unsigned char *)(v61 + 40);
  if (*(unsigned char *)(a1 + 40))
  {
    if (!*(unsigned char *)(v61 + 40)) {
      goto LABEL_72;
    }
  }
  else
  {
    if (*(double *)(a1 + 32) != *(double *)(v61 + 32)) {
      char v66 = 1;
    }
    if (v66) {
      goto LABEL_72;
    }
  }
  char v67 = *(unsigned char *)(v61 + 56);
  if (*(unsigned char *)(a1 + 56))
  {
    if (!*(unsigned char *)(v61 + 56)) {
      goto LABEL_72;
    }
  }
  else
  {
    if (*(double *)(a1 + 48) != *(double *)(v61 + 48)) {
      char v67 = 1;
    }
    if (v67) {
      goto LABEL_72;
    }
  }
  char v68 = *(unsigned char *)(v61 + 72);
  if (*(unsigned char *)(a1 + 72))
  {
    if (!*(unsigned char *)(v61 + 72)) {
      goto LABEL_72;
    }
  }
  else
  {
    if (*(double *)(a1 + 64) != *(double *)(v61 + 64)) {
      char v68 = 1;
    }
    if (v68) {
      goto LABEL_72;
    }
  }
  char v69 = *(unsigned char *)(v61 + 88);
  if (*(unsigned char *)(a1 + 88))
  {
    if (!*(unsigned char *)(v61 + 88)) {
      goto LABEL_72;
    }
  }
  else
  {
    if (*(double *)(a1 + 80) != *(double *)(v61 + 80)) {
      char v69 = 1;
    }
    if (v69) {
      goto LABEL_72;
    }
  }
  char v70 = *(unsigned char *)(v61 + 104);
  if (*(unsigned char *)(a1 + 104))
  {
    if (!*(unsigned char *)(v61 + 104)) {
      goto LABEL_72;
    }
  }
  else
  {
    if (*(double *)(a1 + 96) != *(double *)(v61 + 96)) {
      char v70 = 1;
    }
    if (v70) {
      goto LABEL_72;
    }
  }
  uint64_t v178 = (unsigned char *)v51;
  uint64_t v179 = v53;
  uint64_t v71 = *(void *)(a1 + 120);
  uint64_t v72 = *(void *)(v61 + 120);
  if (!v71)
  {
    uint64_t v176 = v57;
    uint64_t v177 = v56;
    uint64_t v174 = v52;
    uint64_t v175 = v55;
    uint64_t v172 = v50;
    uint64_t v173 = v54;
    uint64_t v170 = v60;
    uint64_t v171 = v59;
    uint64_t v169 = v58;
    if (v72) {
      goto LABEL_72;
    }
    goto LABEL_50;
  }
  if (!v72) {
    goto LABEL_72;
  }
  uint64_t v176 = v57;
  uint64_t v177 = v56;
  uint64_t v174 = v52;
  uint64_t v175 = v55;
  uint64_t v172 = v50;
  uint64_t v173 = v54;
  uint64_t v170 = v60;
  uint64_t v171 = v59;
  uint64_t v169 = v58;
  if (*(void *)(a1 + 112) == *(void *)(v61 + 112) && v71 == v72
    || (v180 = v61, v73 = sub_1AFFCBCE8(), uint64_t v61 = v180, v74 = v73, v75 = 0, (v74 & 1) != 0))
  {
LABEL_50:
    uint64_t v180 = v61;
    if ((sub_1AFDECC74(*(unsigned char *)(a1 + 128), *(unsigned char *)(v61 + 128)) & 1) == 0) {
      goto LABEL_72;
    }
    uint64_t v76 = type metadata accessor for Quote();
    uint64_t v77 = a1;
    v78 = (int *)v76;
    uint64_t v79 = *(int *)(v76 + 52);
    uint64_t v166 = v77;
    uint64_t v167 = sub_1AFD2C83C;
    sub_1AFE7CAD8(v77 + v79, (uint64_t)v63, (uint64_t (*)(void))sub_1AFD2C83C);
    v165 = v78;
    uint64_t v80 = v180 + v78[13];
    uint64_t v81 = v167;
    sub_1AFE7CAD8(v80, (uint64_t)v49, (uint64_t (*)(void))v167);
    uint64_t v168 = (uint64_t)&v19[*(int *)(v186 + 48)];
    sub_1AFE7CAD8((uint64_t)v63, (uint64_t)v19, (uint64_t (*)(void))v81);
    sub_1AFE7CAD8((uint64_t)v49, v168, (uint64_t (*)(void))v81);
    uint64_t v82 = v187 + 48;
    uint64_t v167 = *(void (**)())(v187 + 48);
    if (((unsigned int (*)(unsigned char *, uint64_t, uint64_t))v167)(v19, 1, v188) == 1)
    {
      sub_1AFE7FF80((uint64_t)v49, (uint64_t (*)(void))sub_1AFD2C83C);
      sub_1AFE7FF80((uint64_t)v63, (uint64_t (*)(void))sub_1AFD2C83C);
      uint64_t v83 = v188;
      v84 = v167;
      if (((unsigned int (*)(uint64_t, uint64_t))v167)(v168, 1) == 1)
      {
        uint64_t v85 = v82;
        sub_1AFE7FF80((uint64_t)v19, (uint64_t (*)(void))sub_1AFD2C83C);
        uint64_t v86 = v83;
        goto LABEL_58;
      }
    }
    else
    {
      sub_1AFE7CAD8((uint64_t)v19, (uint64_t)v46, (uint64_t (*)(void))sub_1AFD2C83C);
      uint64_t v164 = v82;
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v167)(v168, 1, v188) != 1)
      {
        (*(void (**)(unsigned char *, uint64_t, uint64_t))(v187 + 32))(v185, v168, v188);
        sub_1AFE7C994(&qword_1EB816CA8, MEMORY[0x1E4F27928]);
        int v163 = sub_1AFFCADD8();
        unint64_t v88 = *(void (**)(unsigned char *, uint64_t))(v187 + 8);
        uint64_t v168 = v187 + 8;
        v88(v185, v188);
        sub_1AFE7FF80((uint64_t)v49, (uint64_t (*)(void))sub_1AFD2C83C);
        sub_1AFE7FF80((uint64_t)v63, (uint64_t (*)(void))sub_1AFD2C83C);
        uint64_t v89 = v46;
        uint64_t v90 = v188;
        v88(v89, v188);
        uint64_t v86 = v90;
        sub_1AFE7FF80((uint64_t)v19, (uint64_t (*)(void))sub_1AFD2C83C);
        uint64_t v85 = v164;
        v84 = v167;
        if ((v163 & 1) == 0) {
          goto LABEL_72;
        }
LABEL_58:
        uint64_t v91 = v165;
        sub_1AFE7CAD8(v166 + v165[14], (uint64_t)v43, (uint64_t (*)(void))sub_1AFD2C83C);
        sub_1AFE7CAD8(v180 + v91[14], (uint64_t)v40, (uint64_t (*)(void))sub_1AFD2C83C);
        uint64_t v92 = (uint64_t)&v17[*(int *)(v186 + 48)];
        sub_1AFE7CAD8((uint64_t)v43, (uint64_t)v17, (uint64_t (*)(void))sub_1AFD2C83C);
        sub_1AFE7CAD8((uint64_t)v40, v92, (uint64_t (*)(void))sub_1AFD2C83C);
        if (((unsigned int (*)(unsigned char *, uint64_t, uint64_t))v84)(v17, 1, v86) == 1)
        {
          sub_1AFE7FF80((uint64_t)v40, (uint64_t (*)(void))sub_1AFD2C83C);
          sub_1AFE7FF80((uint64_t)v43, (uint64_t (*)(void))sub_1AFD2C83C);
          if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v84)(v92, 1, v86) != 1) {
            goto LABEL_70;
          }
          uint64_t v93 = v86;
          sub_1AFE7FF80((uint64_t)v17, (uint64_t (*)(void))sub_1AFD2C83C);
        }
        else
        {
          sub_1AFE7CAD8((uint64_t)v17, (uint64_t)v37, (uint64_t (*)(void))sub_1AFD2C83C);
          if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v84)(v92, 1, v86) == 1)
          {
            sub_1AFE7FF80((uint64_t)v40, (uint64_t (*)(void))sub_1AFD2C83C);
            uint64_t v94 = (uint64_t)v43;
            goto LABEL_69;
          }
          uint64_t v164 = v85;
          uint64_t v95 = v187;
          int v96 = v185;
          (*(void (**)(unsigned char *, uint64_t, uint64_t))(v187 + 32))(v185, v92, v86);
          sub_1AFE7C994(&qword_1EB816CA8, MEMORY[0x1E4F27928]);
          int v97 = sub_1AFFCADD8();
          uint64_t v98 = v188;
          LODWORD(v168) = v97;
          uint64_t v99 = v84;
          v100 = *(void (**)(unsigned char *, uint64_t))(v95 + 8);
          v100(v96, v188);
          sub_1AFE7FF80((uint64_t)v40, (uint64_t (*)(void))sub_1AFD2C83C);
          sub_1AFE7FF80((uint64_t)v43, (uint64_t (*)(void))sub_1AFD2C83C);
          unint64_t v101 = v37;
          uint64_t v93 = v98;
          v100(v101, v98);
          v84 = v99;
          uint64_t v85 = v164;
          sub_1AFE7FF80((uint64_t)v17, (uint64_t (*)(void))sub_1AFD2C83C);
          if ((v168 & 1) == 0) {
            goto LABEL_72;
          }
        }
        uint64_t v102 = v165;
        uint64_t v103 = v179;
        sub_1AFE7CAD8(v166 + v165[15], v179, (uint64_t (*)(void))sub_1AFD2C83C);
        sub_1AFE7CAD8(v180 + v102[15], (uint64_t)v33, (uint64_t (*)(void))sub_1AFD2C83C);
        uint64_t v17 = v184;
        uint64_t v104 = (uint64_t)&v184[*(int *)(v186 + 48)];
        sub_1AFE7CAD8(v103, (uint64_t)v184, (uint64_t (*)(void))sub_1AFD2C83C);
        sub_1AFE7CAD8((uint64_t)v33, v104, (uint64_t (*)(void))sub_1AFD2C83C);
        uint64_t v86 = v93;
        int v105 = ((uint64_t (*)(unsigned char *, uint64_t, uint64_t))v84)(v17, 1, v93);
        uint64_t v164 = v85;
        if (v105 == 1)
        {
          sub_1AFE7FF80((uint64_t)v33, (uint64_t (*)(void))sub_1AFD2C83C);
          sub_1AFE7FF80(v179, (uint64_t (*)(void))sub_1AFD2C83C);
          uint64_t v106 = v84;
          if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v84)(v104, 1, v93) == 1)
          {
            sub_1AFE7FF80((uint64_t)v17, (uint64_t (*)(void))sub_1AFD2C83C);
            goto LABEL_75;
          }
LABEL_70:
          int v87 = v17;
          goto LABEL_71;
        }
        uint64_t v37 = v178;
        sub_1AFE7CAD8((uint64_t)v17, (uint64_t)v178, (uint64_t (*)(void))sub_1AFD2C83C);
        uint64_t v106 = v84;
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v84)(v104, 1, v86) != 1)
        {
          uint64_t v108 = v187;
          int v109 = v185;
          (*(void (**)(unsigned char *, uint64_t, uint64_t))(v187 + 32))(v185, v104, v86);
          sub_1AFE7C994(&qword_1EB816CA8, MEMORY[0x1E4F27928]);
          char v110 = sub_1AFFCADD8();
          uint64_t v111 = *(void (**)(unsigned char *, uint64_t))(v108 + 8);
          v111(v109, v86);
          sub_1AFE7FF80((uint64_t)v33, (uint64_t (*)(void))sub_1AFD2C83C);
          sub_1AFE7FF80(v179, (uint64_t (*)(void))sub_1AFD2C83C);
          v111(v37, v86);
          sub_1AFE7FF80((uint64_t)v17, (uint64_t (*)(void))sub_1AFD2C83C);
          if ((v110 & 1) == 0) {
            goto LABEL_72;
          }
LABEL_75:
          uint64_t v112 = v165[16];
          int v113 = *(unsigned __int8 *)(v166 + v112);
          int v114 = *(unsigned __int8 *)(v180 + v112);
          if (v113 == 7)
          {
            if (v114 != 7) {
              goto LABEL_72;
            }
          }
          else if (v114 == 7 || (sub_1AFDEC9C0(v113, v114) & 1) == 0)
          {
            goto LABEL_72;
          }
          uint64_t v115 = v165[17];
          int v116 = *(unsigned __int8 *)(v166 + v115);
          int v117 = *(unsigned __int8 *)(v180 + v115);
          if (v116 == 7)
          {
            if (v117 != 7) {
              goto LABEL_72;
            }
          }
          else if (v117 == 7 || (sub_1AFDEC9C0(v116, v117) & 1) == 0)
          {
            goto LABEL_72;
          }
          uint64_t v118 = v165[18];
          int v119 = *(unsigned __int8 *)(v166 + v118);
          int v120 = *(unsigned __int8 *)(v180 + v118);
          if (v119 == 7)
          {
            if (v120 != 7) {
              goto LABEL_72;
            }
          }
          else if (v120 == 7 || (sub_1AFDEC9C0(v119, v120) & 1) == 0)
          {
            goto LABEL_72;
          }
          uint64_t v121 = v165[19];
          v122 = (double *)(v166 + v121);
          char v123 = *(unsigned char *)(v166 + v121 + 8);
          uint64_t v124 = (double *)(v180 + v121);
          int v125 = *(unsigned __int8 *)(v180 + v121 + 8);
          if (v123)
          {
            if (!v125) {
              goto LABEL_72;
            }
          }
          else
          {
            if (*v122 != *v124) {
              LOBYTE(v125) = 1;
            }
            if (v125) {
              goto LABEL_72;
            }
          }
          v126 = v165;
          uint64_t v127 = v177;
          sub_1AFE7CAD8(v166 + v165[20], v177, (uint64_t (*)(void))sub_1AFD2C83C);
          uint64_t v128 = v176;
          sub_1AFE7CAD8(v180 + v126[20], v176, (uint64_t (*)(void))sub_1AFD2C83C);
          uint64_t v129 = v183;
          uint64_t v130 = (uint64_t)&v183[*(int *)(v186 + 48)];
          uint64_t v131 = v127;
          sub_1AFE7CAD8(v127, (uint64_t)v183, (uint64_t (*)(void))sub_1AFD2C83C);
          sub_1AFE7CAD8(v128, v130, (uint64_t (*)(void))sub_1AFD2C83C);
          if (((unsigned int (*)(unsigned char *, uint64_t, uint64_t))v106)(v129, 1, v188) == 1)
          {
            sub_1AFE7FF80(v128, (uint64_t (*)(void))sub_1AFD2C83C);
            sub_1AFE7FF80(v127, (uint64_t (*)(void))sub_1AFD2C83C);
            if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v106)(v130, 1, v188) == 1)
            {
              sub_1AFE7FF80((uint64_t)v183, (uint64_t (*)(void))sub_1AFD2C83C);
LABEL_103:
              unint64_t v138 = v165;
              uint64_t v139 = v174;
              sub_1AFE7CAD8(v166 + v165[21], v174, (uint64_t (*)(void))sub_1AFD2C83C);
              uint64_t v140 = v173;
              sub_1AFE7CAD8(v180 + v138[21], v173, (uint64_t (*)(void))sub_1AFD2C83C);
              uint64_t v141 = v182;
              uint64_t v142 = (uint64_t)&v182[*(int *)(v186 + 48)];
              uint64_t v143 = v139;
              sub_1AFE7CAD8(v139, (uint64_t)v182, (uint64_t (*)(void))sub_1AFD2C83C);
              sub_1AFE7CAD8(v140, v142, (uint64_t (*)(void))sub_1AFD2C83C);
              if (((unsigned int (*)(unsigned char *, uint64_t, uint64_t))v106)(v141, 1, v188) == 1)
              {
                sub_1AFE7FF80(v140, (uint64_t (*)(void))sub_1AFD2C83C);
                sub_1AFE7FF80(v139, (uint64_t (*)(void))sub_1AFD2C83C);
                if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v106)(v142, 1, v188) == 1)
                {
                  sub_1AFE7FF80((uint64_t)v182, (uint64_t (*)(void))sub_1AFD2C83C);
LABEL_110:
                  if ((sub_1AFFC9898() & 1) == 0) {
                    goto LABEL_72;
                  }
                  v150 = v165;
                  uint64_t v151 = v171;
                  sub_1AFE7CAD8(v166 + v165[23], v171, (uint64_t (*)(void))sub_1AFD2C83C);
                  uint64_t v152 = v170;
                  sub_1AFE7CAD8(v180 + v150[23], v170, (uint64_t (*)(void))sub_1AFD2C83C);
                  v153 = v181;
                  uint64_t v154 = (uint64_t)&v181[*(int *)(v186 + 48)];
                  sub_1AFE7CAD8(v151, (uint64_t)v181, (uint64_t (*)(void))sub_1AFD2C83C);
                  uint64_t v155 = v152;
                  sub_1AFE7CAD8(v152, v154, (uint64_t (*)(void))sub_1AFD2C83C);
                  if (((unsigned int (*)(unsigned char *, uint64_t, uint64_t))v106)(v153, 1, v188) == 1)
                  {
                    sub_1AFE7FF80(v152, (uint64_t (*)(void))sub_1AFD2C83C);
                    sub_1AFE7FF80(v151, (uint64_t (*)(void))sub_1AFD2C83C);
                    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v106)(v154, 1, v188) == 1)
                    {
                      sub_1AFE7FF80((uint64_t)v181, (uint64_t (*)(void))sub_1AFD2C83C);
LABEL_118:
                      char v75 = MEMORY[0x1B3E8BFD0](v166 + v165[24], v180 + v165[24]);
                      return v75 & 1;
                    }
                    goto LABEL_116;
                  }
                  sub_1AFE7CAD8((uint64_t)v181, v169, (uint64_t (*)(void))sub_1AFD2C83C);
                  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v106)(v154, 1, v188) == 1)
                  {
                    sub_1AFE7FF80(v152, (uint64_t (*)(void))sub_1AFD2C83C);
                    sub_1AFE7FF80(v151, (uint64_t (*)(void))sub_1AFD2C83C);
                    (*(void (**)(uint64_t, uint64_t))(v187 + 8))(v169, v188);
LABEL_116:
                    int v87 = v181;
                    goto LABEL_71;
                  }
                  uint64_t v157 = v187;
                  uint64_t v156 = v188;
                  v158 = v185;
                  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v187 + 32))(v185, v154, v188);
                  sub_1AFE7C994(&qword_1EB816CA8, MEMORY[0x1E4F27928]);
                  uint64_t v159 = v169;
                  char v160 = sub_1AFFCADD8();
                  uint64_t v161 = *(void (**)(unsigned char *, uint64_t))(v157 + 8);
                  v161(v158, v156);
                  sub_1AFE7FF80(v155, (uint64_t (*)(void))sub_1AFD2C83C);
                  sub_1AFE7FF80(v151, (uint64_t (*)(void))sub_1AFD2C83C);
                  v161((unsigned char *)v159, v156);
                  sub_1AFE7FF80((uint64_t)v181, (uint64_t (*)(void))sub_1AFD2C83C);
                  if (v160) {
                    goto LABEL_118;
                  }
LABEL_72:
                  char v75 = 0;
                  return v75 & 1;
                }
              }
              else
              {
                sub_1AFE7CAD8((uint64_t)v182, v172, (uint64_t (*)(void))sub_1AFD2C83C);
                if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v106)(v142, 1, v188) != 1)
                {
                  uint64_t v145 = v187;
                  uint64_t v144 = v188;
                  v146 = v185;
                  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v187 + 32))(v185, v142, v188);
                  sub_1AFE7C994(&qword_1EB816CA8, MEMORY[0x1E4F27928]);
                  uint64_t v147 = v172;
                  char v148 = sub_1AFFCADD8();
                  uint64_t v149 = *(void (**)(unsigned char *, uint64_t))(v145 + 8);
                  v149(v146, v144);
                  sub_1AFE7FF80(v140, (uint64_t (*)(void))sub_1AFD2C83C);
                  sub_1AFE7FF80(v143, (uint64_t (*)(void))sub_1AFD2C83C);
                  v149((unsigned char *)v147, v144);
                  sub_1AFE7FF80((uint64_t)v182, (uint64_t (*)(void))sub_1AFD2C83C);
                  if ((v148 & 1) == 0) {
                    goto LABEL_72;
                  }
                  goto LABEL_110;
                }
                sub_1AFE7FF80(v140, (uint64_t (*)(void))sub_1AFD2C83C);
                sub_1AFE7FF80(v139, (uint64_t (*)(void))sub_1AFD2C83C);
                (*(void (**)(uint64_t, uint64_t))(v187 + 8))(v172, v188);
              }
              int v87 = v182;
LABEL_71:
              sub_1AFE7FF80((uint64_t)v87, (uint64_t (*)(void))sub_1AFE7FF1C);
              goto LABEL_72;
            }
          }
          else
          {
            sub_1AFE7CAD8((uint64_t)v183, v175, (uint64_t (*)(void))sub_1AFD2C83C);
            if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v106)(v130, 1, v188) != 1)
            {
              uint64_t v133 = v187;
              uint64_t v132 = v188;
              v134 = v185;
              (*(void (**)(unsigned char *, uint64_t, uint64_t))(v187 + 32))(v185, v130, v188);
              sub_1AFE7C994(&qword_1EB816CA8, MEMORY[0x1E4F27928]);
              uint64_t v135 = v175;
              char v136 = sub_1AFFCADD8();
              uint64_t v137 = *(void (**)(unsigned char *, uint64_t))(v133 + 8);
              v137(v134, v132);
              sub_1AFE7FF80(v128, (uint64_t (*)(void))sub_1AFD2C83C);
              sub_1AFE7FF80(v131, (uint64_t (*)(void))sub_1AFD2C83C);
              v137((unsigned char *)v135, v132);
              sub_1AFE7FF80((uint64_t)v183, (uint64_t (*)(void))sub_1AFD2C83C);
              if ((v136 & 1) == 0) {
                goto LABEL_72;
              }
              goto LABEL_103;
            }
            sub_1AFE7FF80(v128, (uint64_t (*)(void))sub_1AFD2C83C);
            sub_1AFE7FF80(v127, (uint64_t (*)(void))sub_1AFD2C83C);
            (*(void (**)(uint64_t, uint64_t))(v187 + 8))(v175, v188);
          }
          int v87 = v183;
          goto LABEL_71;
        }
        sub_1AFE7FF80((uint64_t)v33, (uint64_t (*)(void))sub_1AFD2C83C);
        uint64_t v94 = v179;
LABEL_69:
        sub_1AFE7FF80(v94, (uint64_t (*)(void))sub_1AFD2C83C);
        (*(void (**)(unsigned char *, uint64_t))(v187 + 8))(v37, v86);
        goto LABEL_70;
      }
      sub_1AFE7FF80((uint64_t)v49, (uint64_t (*)(void))sub_1AFD2C83C);
      sub_1AFE7FF80((uint64_t)v63, (uint64_t (*)(void))sub_1AFD2C83C);
      (*(void (**)(unsigned char *, uint64_t))(v187 + 8))(v46, v188);
    }
    int v87 = v19;
    goto LABEL_71;
  }
  return v75 & 1;
}

unint64_t sub_1AFE7C8EC()
{
  unint64_t result = qword_1EB817AC8;
  if (!qword_1EB817AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817AC8);
  }
  return result;
}

unint64_t sub_1AFE7C940()
{
  unint64_t result = qword_1EB816EB8;
  if (!qword_1EB816EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816EB8);
  }
  return result;
}

uint64_t sub_1AFE7C994(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1AFE7C9DC()
{
  unint64_t result = qword_1EB816D88;
  if (!qword_1EB816D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816D88);
  }
  return result;
}

unint64_t sub_1AFE7CA30()
{
  unint64_t result = qword_1EB816EC8;
  if (!qword_1EB816EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816EC8);
  }
  return result;
}

unint64_t sub_1AFE7CA84()
{
  unint64_t result = qword_1EB816D98;
  if (!qword_1EB816D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816D98);
  }
  return result;
}

uint64_t sub_1AFE7CAD8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_1AFE7CB40(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_1AFE7CBA8()
{
  unint64_t result = qword_1EB818590;
  if (!qword_1EB818590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818590);
  }
  return result;
}

void sub_1AFE7CBFC()
{
  if (!qword_1EB8185C8)
  {
    unint64_t v0 = sub_1AFFCBA38();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8185C8);
    }
  }
}

unint64_t sub_1AFE7CC5C()
{
  unint64_t result = qword_1EB818518;
  if (!qword_1EB818518)
  {
    sub_1AFE7CB40(255, &qword_1EB818520, (uint64_t (*)(void))sub_1AFE7CBA8, MEMORY[0x1E4FBB3D0], MEMORY[0x1E4F27640]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818518);
  }
  return result;
}

void *sub_1AFE7CCEC(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1AFFC8E48();
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    *(void *)(a1 + 16) = a2[2];
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    *(void *)(a1 + 32) = a2[4];
    *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
    *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
    *(void *)(a1 + 48) = a2[6];
    uint64_t v7 = a2[8];
    *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
    *(void *)(a1 + 64) = v7;
    *(void *)(a1 + 80) = a2[10];
    *(unsigned char *)(a1 + 88) = *((unsigned char *)a2 + 88);
    *(void *)(a1 + 96) = a2[12];
    *(unsigned char *)(a1 + 104) = *((unsigned char *)a2 + 104);
    uint64_t v8 = a2[14];
    uint64_t v9 = a2[15];
    *(unsigned char *)(a1 + 128) = *((unsigned char *)a2 + 128);
    uint64_t v10 = a3[13];
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (char *)a2 + v10;
    *(void *)(a1 + 112) = v8;
    *(void *)(a1 + 120) = v9;
    uint64_t v13 = sub_1AFFC98F8();
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    sub_1AFFC8E38();
    if (v15(v12, 1, v13))
    {
      sub_1AFD2C83C();
      memcpy(v11, v12, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    uint64_t v18 = a3[14];
    uint64_t v19 = (char *)v4 + v18;
    uint64_t v20 = (char *)a2 + v18;
    if (v15((char *)a2 + v18, 1, v13))
    {
      sub_1AFD2C83C();
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v19, v20, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v19, 0, 1, v13);
    }
    uint64_t v22 = a3[15];
    uint64_t v23 = (char *)v4 + v22;
    uint64_t v24 = (char *)a2 + v22;
    if (v15((char *)a2 + v22, 1, v13))
    {
      sub_1AFD2C83C();
      memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v23, v24, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v23, 0, 1, v13);
    }
    uint64_t v26 = a3[17];
    *((unsigned char *)v4 + a3[16]) = *((unsigned char *)a2 + a3[16]);
    *((unsigned char *)v4 + v26) = *((unsigned char *)a2 + v26);
    uint64_t v27 = a3[19];
    *((unsigned char *)v4 + a3[18]) = *((unsigned char *)a2 + a3[18]);
    uint64_t v28 = (char *)v4 + v27;
    uint64_t v29 = (uint64_t)a2 + v27;
    *(void *)uint64_t v28 = *(void *)v29;
    v28[8] = *(unsigned char *)(v29 + 8);
    uint64_t v30 = a3[20];
    uint64_t v31 = (char *)v4 + v30;
    uint64_t v32 = (char *)a2 + v30;
    if (v15((char *)a2 + v30, 1, v13))
    {
      sub_1AFD2C83C();
      memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v31, v32, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v31, 0, 1, v13);
    }
    uint64_t v34 = a3[21];
    uint64_t v35 = (char *)v4 + v34;
    uint64_t v36 = (char *)a2 + v34;
    if (v15((char *)a2 + v34, 1, v13))
    {
      sub_1AFD2C83C();
      memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
      uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
    }
    else
    {
      uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
      v38(v35, v36, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v35, 0, 1, v13);
    }
    v38((char *)v4 + a3[22], (char *)a2 + a3[22], v13);
    uint64_t v39 = a3[23];
    uint64_t v40 = (char *)v4 + v39;
    uint64_t v41 = (char *)a2 + v39;
    if (v15((char *)a2 + v39, 1, v13))
    {
      sub_1AFD2C83C();
      memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      v38(v40, v41, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v40, 0, 1, v13);
    }
    uint64_t v43 = a3[24];
    uint64_t v44 = (char *)v4 + v43;
    uint64_t v45 = (uint64_t)a2 + v43;
    uint64_t v46 = sub_1AFFC9B88();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
  }
  return v4;
}

uint64_t sub_1AFE7D284(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[13];
  uint64_t v5 = sub_1AFFC98F8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v8 = a1 + a2[14];
  if (!v7(v8, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  }
  uint64_t v9 = a1 + a2[15];
  if (!v7(v9, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
  }
  uint64_t v10 = a1 + a2[20];
  if (!v7(v10, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10, v5);
  }
  uint64_t v11 = a1 + a2[21];
  unsigned int v12 = v7(v11, 1, v5);
  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  if (!v12) {
    v13(v11, v5);
  }
  v13(a1 + a2[22], v5);
  uint64_t v14 = a1 + a2[23];
  if (!v7(v14, 1, v5)) {
    v13(v14, v5);
  }
  uint64_t v15 = a1 + a2[24];
  uint64_t v16 = sub_1AFFC9B88();
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8);

  return v17(v15, v16);
}

uint64_t sub_1AFE7D4E0(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = v6;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  uint64_t v7 = *(void *)(a2 + 112);
  uint64_t v8 = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  uint64_t v9 = a3[13];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  *(void *)(a1 + 112) = v7;
  *(void *)(a1 + 120) = v8;
  uint64_t v12 = sub_1AFFC98F8();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48);
  sub_1AFFC8E38();
  if (v14(v11, 1, v12))
  {
    sub_1AFD2C83C();
    memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  uint64_t v16 = a3[14];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (const void *)(a2 + v16);
  if (v14((const void *)(a2 + v16), 1, v12))
  {
    sub_1AFD2C83C();
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v17, v18, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v17, 0, 1, v12);
  }
  uint64_t v20 = a3[15];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (const void *)(a2 + v20);
  if (v14((const void *)(a2 + v20), 1, v12))
  {
    sub_1AFD2C83C();
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v21, v22, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v21, 0, 1, v12);
  }
  uint64_t v24 = a3[17];
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  *(unsigned char *)(a1 + v24) = *(unsigned char *)(a2 + v24);
  uint64_t v25 = a3[19];
  *(unsigned char *)(a1 + a3[18]) = *(unsigned char *)(a2 + a3[18]);
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  *(void *)uint64_t v26 = *(void *)v27;
  *(unsigned char *)(v26 + 8) = *(unsigned char *)(v27 + 8);
  uint64_t v28 = a3[20];
  uint64_t v29 = (void *)(a1 + v28);
  uint64_t v30 = (const void *)(a2 + v28);
  if (v14((const void *)(a2 + v28), 1, v12))
  {
    sub_1AFD2C83C();
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v29, v30, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v29, 0, 1, v12);
  }
  uint64_t v32 = a3[21];
  uint64_t v33 = (void *)(a1 + v32);
  uint64_t v34 = (const void *)(a2 + v32);
  if (v14((const void *)(a2 + v32), 1, v12))
  {
    sub_1AFD2C83C();
    memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
    uint64_t v36 = *(void (**)(void *, const void *, uint64_t))(v13 + 16);
  }
  else
  {
    uint64_t v36 = *(void (**)(void *, const void *, uint64_t))(v13 + 16);
    v36(v33, v34, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v33, 0, 1, v12);
  }
  v36((void *)(a1 + a3[22]), (const void *)(a2 + a3[22]), v12);
  uint64_t v37 = a3[23];
  uint64_t v38 = (void *)(a1 + v37);
  uint64_t v39 = (const void *)(a2 + v37);
  if (v14((const void *)(a2 + v37), 1, v12))
  {
    sub_1AFD2C83C();
    memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
  }
  else
  {
    v36(v38, v39, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v38, 0, 1, v12);
  }
  uint64_t v41 = a3[24];
  uint64_t v42 = a1 + v41;
  uint64_t v43 = a2 + v41;
  uint64_t v44 = sub_1AFFC9B88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 16))(v42, v43, v44);
  return a1;
}

uint64_t sub_1AFE7DA28(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v6;
  uint64_t v7 = a2[2];
  *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
  *(void *)(a1 + 16) = v7;
  uint64_t v8 = a2[4];
  *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
  *(void *)(a1 + 32) = v8;
  uint64_t v9 = a2[6];
  *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
  *(void *)(a1 + 48) = v9;
  uint64_t v10 = a2[8];
  *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
  *(void *)(a1 + 64) = v10;
  uint64_t v11 = a2[10];
  *(unsigned char *)(a1 + 88) = *((unsigned char *)a2 + 88);
  *(void *)(a1 + 80) = v11;
  uint64_t v12 = a2[12];
  *(unsigned char *)(a1 + 104) = *((unsigned char *)a2 + 104);
  *(void *)(a1 + 96) = v12;
  *(void *)(a1 + 112) = a2[14];
  *(void *)(a1 + 120) = a2[15];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 128) = *((unsigned char *)a2 + 128);
  uint64_t v13 = a3[13];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = sub_1AFFC98F8();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v17 + 48);
  int v19 = v18(v14, 1, v16);
  int v20 = v18(v15, 1, v16);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v20)
  {
    (*(void (**)(void *, uint64_t))(v17 + 8))(v14, v16);
LABEL_6:
    sub_1AFD2C83C();
    memcpy(v14, v15, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(v17 + 24))(v14, v15, v16);
LABEL_7:
  uint64_t v22 = a3[14];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (char *)a2 + v22;
  int v25 = v18((void *)(a1 + v22), 1, v16);
  int v26 = v18(v24, 1, v16);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(void *, char *, uint64_t))(v17 + 16))(v23, v24, v16);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v23, 0, 1, v16);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v26)
  {
    (*(void (**)(void *, uint64_t))(v17 + 8))(v23, v16);
LABEL_12:
    sub_1AFD2C83C();
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, char *, uint64_t))(v17 + 24))(v23, v24, v16);
LABEL_13:
  uint64_t v28 = a3[15];
  uint64_t v29 = (void *)(a1 + v28);
  uint64_t v30 = (char *)a2 + v28;
  int v31 = v18((void *)(a1 + v28), 1, v16);
  int v32 = v18(v30, 1, v16);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(void *, char *, uint64_t))(v17 + 16))(v29, v30, v16);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v29, 0, 1, v16);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v32)
  {
    (*(void (**)(void *, uint64_t))(v17 + 8))(v29, v16);
LABEL_18:
    sub_1AFD2C83C();
    memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(void *, char *, uint64_t))(v17 + 24))(v29, v30, v16);
LABEL_19:
  *(unsigned char *)(a1 + a3[16]) = *((unsigned char *)a2 + a3[16]);
  *(unsigned char *)(a1 + a3[17]) = *((unsigned char *)a2 + a3[17]);
  *(unsigned char *)(a1 + a3[18]) = *((unsigned char *)a2 + a3[18]);
  uint64_t v34 = a3[19];
  uint64_t v35 = a1 + v34;
  uint64_t v36 = (uint64_t *)((char *)a2 + v34);
  uint64_t v37 = *v36;
  *(unsigned char *)(v35 + 8) = *((unsigned char *)v36 + 8);
  *(void *)uint64_t v35 = v37;
  uint64_t v38 = a3[20];
  uint64_t v39 = (void *)(a1 + v38);
  uint64_t v40 = (char *)a2 + v38;
  int v41 = v18((void *)(a1 + v38), 1, v16);
  int v42 = v18(v40, 1, v16);
  if (v41)
  {
    if (!v42)
    {
      (*(void (**)(void *, char *, uint64_t))(v17 + 16))(v39, v40, v16);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v39, 0, 1, v16);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v42)
  {
    (*(void (**)(void *, uint64_t))(v17 + 8))(v39, v16);
LABEL_24:
    sub_1AFD2C83C();
    memcpy(v39, v40, *(void *)(*(void *)(v43 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(void *, char *, uint64_t))(v17 + 24))(v39, v40, v16);
LABEL_25:
  uint64_t v44 = a3[21];
  uint64_t v45 = (void *)(a1 + v44);
  uint64_t v46 = (char *)a2 + v44;
  int v47 = v18((void *)(a1 + v44), 1, v16);
  int v48 = v18(v46, 1, v16);
  if (v47)
  {
    uint64_t v49 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v18;
    if (!v48)
    {
      (*(void (**)(void *, char *, uint64_t))(v17 + 16))(v45, v46, v16);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v45, 0, 1, v16);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  uint64_t v49 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v18;
  if (v48)
  {
    (*(void (**)(void *, uint64_t))(v17 + 8))(v45, v16);
LABEL_30:
    sub_1AFD2C83C();
    memcpy(v45, v46, *(void *)(*(void *)(v50 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(void *, char *, uint64_t))(v17 + 24))(v45, v46, v16);
LABEL_31:
  uint64_t v51 = a3[22];
  uint64_t v52 = a3;
  uint64_t v53 = *(void (**)(uint64_t, char *, uint64_t))(v17 + 24);
  v53(a1 + v51, (char *)a2 + v51, v16);
  char v65 = v52;
  uint64_t v54 = v52[23];
  uint64_t v55 = (void *)(a1 + v54);
  uint64_t v56 = (char *)a2 + v54;
  int v57 = v49(a1 + v54, 1, v16);
  int v58 = v49((uint64_t)v56, 1, v16);
  if (!v57)
  {
    if (!v58)
    {
      v53((uint64_t)v55, v56, v16);
      goto LABEL_37;
    }
    (*(void (**)(void *, uint64_t))(v17 + 8))(v55, v16);
    goto LABEL_36;
  }
  if (v58)
  {
LABEL_36:
    sub_1AFD2C83C();
    memcpy(v55, v56, *(void *)(*(void *)(v59 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(void *, char *, uint64_t))(v17 + 16))(v55, v56, v16);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v55, 0, 1, v16);
LABEL_37:
  uint64_t v60 = v65[24];
  uint64_t v61 = a1 + v60;
  uint64_t v62 = (uint64_t)a2 + v60;
  uint64_t v63 = sub_1AFFC9B88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 24))(v61, v62, v63);
  return a1;
}

uint64_t sub_1AFE7E1E0(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = v6;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  long long v7 = *(_OWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  uint64_t v8 = a3[13];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  *(_OWORD *)(a1 + 112) = v7;
  uint64_t v11 = sub_1AFFC98F8();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  if (v13(v10, 1, v11))
  {
    sub_1AFD2C83C();
    memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v15 = a3[14];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (const void *)(a2 + v15);
  if (v13((const void *)(a2 + v15), 1, v11))
  {
    sub_1AFD2C83C();
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v16, v17, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
  }
  uint64_t v19 = a3[15];
  int v20 = (void *)(a1 + v19);
  uint64_t v21 = (const void *)(a2 + v19);
  if (v13((const void *)(a2 + v19), 1, v11))
  {
    sub_1AFD2C83C();
    memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v20, v21, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v20, 0, 1, v11);
  }
  uint64_t v23 = a3[17];
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  *(unsigned char *)(a1 + v23) = *(unsigned char *)(a2 + v23);
  uint64_t v24 = a3[19];
  *(unsigned char *)(a1 + a3[18]) = *(unsigned char *)(a2 + a3[18]);
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  *(void *)uint64_t v25 = *(void *)v26;
  *(unsigned char *)(v25 + 8) = *(unsigned char *)(v26 + 8);
  uint64_t v27 = a3[20];
  uint64_t v28 = (void *)(a1 + v27);
  uint64_t v29 = (const void *)(a2 + v27);
  if (v13((const void *)(a2 + v27), 1, v11))
  {
    sub_1AFD2C83C();
    memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v28, v29, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v28, 0, 1, v11);
  }
  uint64_t v31 = a3[21];
  int v32 = (void *)(a1 + v31);
  uint64_t v33 = (const void *)(a2 + v31);
  if (v13((const void *)(a2 + v31), 1, v11))
  {
    sub_1AFD2C83C();
    memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
    uint64_t v35 = *(void (**)(void *, const void *, uint64_t))(v12 + 32);
  }
  else
  {
    uint64_t v35 = *(void (**)(void *, const void *, uint64_t))(v12 + 32);
    v35(v32, v33, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v32, 0, 1, v11);
  }
  v35((void *)(a1 + a3[22]), (const void *)(a2 + a3[22]), v11);
  uint64_t v36 = a3[23];
  uint64_t v37 = (void *)(a1 + v36);
  uint64_t v38 = (const void *)(a2 + v36);
  if (v13((const void *)(a2 + v36), 1, v11))
  {
    sub_1AFD2C83C();
    memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    v35(v37, v38, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v37, 0, 1, v11);
  }
  uint64_t v40 = a3[24];
  uint64_t v41 = a1 + v40;
  uint64_t v42 = a2 + v40;
  uint64_t v43 = sub_1AFFC9B88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 32))(v41, v42, v43);
  return a1;
}

uint64_t sub_1AFE7E720(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = v6;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  uint64_t v7 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  uint64_t v8 = a3[13];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = sub_1AFFC98F8();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    sub_1AFD2C83C();
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
LABEL_7:
  uint64_t v17 = a3[14];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  int v20 = v13((void *)(a1 + v17), 1, v11);
  int v21 = v13(v19, 1, v11);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v18, v19, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v18, 0, 1, v11);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v21)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v18, v11);
LABEL_12:
    sub_1AFD2C83C();
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v18, v19, v11);
LABEL_13:
  uint64_t v23 = a3[15];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (void *)(a2 + v23);
  int v26 = v13((void *)(a1 + v23), 1, v11);
  int v27 = v13(v25, 1, v11);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v24, v25, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v24, 0, 1, v11);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v27)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v24, v11);
LABEL_18:
    sub_1AFD2C83C();
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v24, v25, v11);
LABEL_19:
  uint64_t v29 = a3[17];
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  *(unsigned char *)(a1 + v29) = *(unsigned char *)(a2 + v29);
  uint64_t v30 = a3[19];
  *(unsigned char *)(a1 + a3[18]) = *(unsigned char *)(a2 + a3[18]);
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  *(void *)uint64_t v31 = *(void *)v32;
  *(unsigned char *)(v31 + 8) = *(unsigned char *)(v32 + 8);
  uint64_t v33 = a3[20];
  uint64_t v34 = (void *)(a1 + v33);
  uint64_t v35 = (void *)(a2 + v33);
  int v36 = v13((void *)(a1 + v33), 1, v11);
  int v37 = v13(v35, 1, v11);
  if (v36)
  {
    if (!v37)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v34, v35, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v34, 0, 1, v11);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v37)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v34, v11);
LABEL_24:
    sub_1AFD2C83C();
    memcpy(v34, v35, *(void *)(*(void *)(v38 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v34, v35, v11);
LABEL_25:
  uint64_t v39 = a3[21];
  uint64_t v40 = (void *)(a1 + v39);
  uint64_t v41 = (void *)(a2 + v39);
  int v42 = v13((void *)(a1 + v39), 1, v11);
  int v43 = v13(v41, 1, v11);
  if (v42)
  {
    uint64_t v44 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v13;
    if (!v43)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v40, v41, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v40, 0, 1, v11);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  uint64_t v44 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v13;
  if (v43)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v40, v11);
LABEL_30:
    sub_1AFD2C83C();
    memcpy(v40, v41, *(void *)(*(void *)(v45 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v40, v41, v11);
LABEL_31:
  uint64_t v46 = a3[22];
  int v47 = a3;
  int v48 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 40);
  v48(a1 + v46, a2 + v46, v11);
  uint64_t v60 = v47;
  uint64_t v49 = v47[23];
  uint64_t v50 = (void *)(a1 + v49);
  uint64_t v51 = (const void *)(a2 + v49);
  int v52 = v44(a1 + v49, 1, v11);
  int v53 = v44((uint64_t)v51, 1, v11);
  if (!v52)
  {
    if (!v53)
    {
      v48((uint64_t)v50, (uint64_t)v51, v11);
      goto LABEL_37;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v50, v11);
    goto LABEL_36;
  }
  if (v53)
  {
LABEL_36:
    sub_1AFD2C83C();
    memcpy(v50, v51, *(void *)(*(void *)(v54 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v50, v51, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v50, 0, 1, v11);
LABEL_37:
  uint64_t v55 = v60[24];
  uint64_t v56 = a1 + v55;
  uint64_t v57 = a2 + v55;
  uint64_t v58 = sub_1AFFC9B88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 40))(v56, v57, v58);
  return a1;
}

uint64_t sub_1AFE7EEC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1AFE7EED4);
}

uint64_t sub_1AFE7EED4(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 120);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  sub_1AFD2C83C();
  if (*(_DWORD *)(*(void *)(v9 - 8) + 84) == a2)
  {
    uint64_t v10 = v9;
    uint64_t v11 = *(void *)(v9 - 8);
    uint64_t v12 = a3[13];
LABEL_11:
    int v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
    return v14(a1 + v12, a2, v10);
  }
  uint64_t v13 = sub_1AFFC98F8();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
  {
    uint64_t v10 = v13;
    uint64_t v11 = *(void *)(v13 - 8);
    uint64_t v12 = a3[22];
    goto LABEL_11;
  }
  uint64_t v15 = sub_1AFFC9B88();
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
  uint64_t v17 = v15;
  uint64_t v18 = a1 + a3[24];

  return v16(v18, a2, v17);
}

uint64_t sub_1AFE7F058(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1AFE7F06C);
}

uint64_t sub_1AFE7F06C(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 120) = a2;
    return result;
  }
  sub_1AFD2C83C();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[13];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = sub_1AFFC98F8();
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[22];
    goto LABEL_7;
  }
  uint64_t v14 = sub_1AFFC9B88();
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = v5 + a4[24];

  return v15(v17, a2, a2, v16);
}

void sub_1AFE7F1E4()
{
  sub_1AFD2C83C();
  if (v0 <= 0x3F)
  {
    sub_1AFFC98F8();
    if (v1 <= 0x3F)
    {
      sub_1AFFC9B88();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t getEnumTagSinglePayload for Quote.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEC) {
    goto LABEL_17;
  }
  if (a2 + 20 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 20) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 20;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 20;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 20;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x15;
  int v8 = v6 - 21;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Quote.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 20 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 20) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEB)
  {
    unsigned int v6 = ((a2 - 236) >> 8) + 1;
    *unint64_t result = a2 + 20;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFE7F490);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 20;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Quote.CodingKeys()
{
  return &type metadata for Quote.CodingKeys;
}

unint64_t sub_1AFE7F4CC()
{
  unint64_t result = qword_1E9AFBB58;
  if (!qword_1E9AFBB58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBB58);
  }
  return result;
}

unint64_t sub_1AFE7F524()
{
  unint64_t result = qword_1EB817AD8;
  if (!qword_1EB817AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817AD8);
  }
  return result;
}

unint64_t sub_1AFE7F57C()
{
  unint64_t result = qword_1EB817AD0;
  if (!qword_1EB817AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817AD0);
  }
  return result;
}

uint64_t sub_1AFE7F5D0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6563697270 && a2 == 0xE500000000000000;
  if (v2 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6168436563697270 && a2 == 0xEB0000000065676ELL || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001AFFECE80 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x756F487265746661 && a2 == 0xEF65636972507372 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001AFFECD60 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x656B72614D657270 && a2 == 0xEE00656369725074 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001AFFECFA0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x79636E6572727563 && a2 == 0xEC00000065646F43 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x65676E6168637865 && a2 == 0xEE00737574617453 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x65676E6168637865 && a2 == 0xEC0000006E65704FLL || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x65676E6168637865 && a2 == 0xED000065736F6C43 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001AFFECE20 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x756F536563697270 && a2 == 0xEB00000000656372 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001AFFECD80 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x656B72614D657270 && a2 == 0xEF656372756F5374 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001AFFF7860 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001AFFECEF0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0x73676E696E726165 && a2 == 0xEF65746144646E45 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001AFFEF180 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0x7243726576726573 && a2 == 0xEF74416465746165 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0x695474656B72616DLL && a2 == 0xEE00656E6F5A656DLL)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else
  {
    char v6 = sub_1AFFCBCE8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 20;
    }
    else {
      return 21;
    }
  }
}

void sub_1AFE7FF1C()
{
  if (!qword_1EB816CC0)
  {
    sub_1AFD2C83C();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB816CC0);
    }
  }
}

uint64_t sub_1AFE7FF80(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

ValueMetadata *type metadata accessor for YahooNewsResponse()
{
  return &type metadata for YahooNewsResponse;
}

uint64_t sub_1AFE7FFF0()
{
  if (*v0) {
    return 1635018093;
  }
  else {
    return 0x656E696C64616568;
  }
}

uint64_t sub_1AFE80024@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1AFE80F78(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AFE8004C(uint64_t a1)
{
  unint64_t v2 = sub_1AFE82B70();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFE80088(uint64_t a1)
{
  unint64_t v2 = sub_1AFE82B70();

  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1AFE800C4@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1AFE8105C(a1, v8);
  if (!v2)
  {
    long long v5 = v8[3];
    a2[2] = v8[2];
    a2[3] = v5;
    long long v6 = v8[5];
    a2[4] = v8[4];
    a2[5] = v6;
    double result = *(double *)v8;
    long long v7 = v8[1];
    *a2 = v8[0];
    a2[1] = v7;
  }
  return result;
}

uint64_t sub_1AFE80110()
{
  uint64_t v1 = 7107189;
  if (*v0 != 1) {
    uint64_t v1 = 0x6D755374726F6873;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x656C746974;
  }
}

uint64_t sub_1AFE80168@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1AFE81364(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AFE80190(uint64_t a1)
{
  unint64_t v2 = sub_1AFE82F3C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFE801CC(uint64_t a1)
{
  unint64_t v2 = sub_1AFE82F3C();

  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1AFE80208@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1AFE814BC(a1, (uint64_t *)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    double result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_1AFE8024C()
{
  unint64_t v1 = 0xD00000000000001ALL;
  if (*v0 != 1) {
    unint64_t v1 = 0x546873696C627570;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x72656469766F7270;
  }
}

uint64_t sub_1AFE802B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1AFE8177C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AFE802DC(uint64_t a1)
{
  unint64_t v2 = sub_1AFE82F90();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFE80318(uint64_t a1)
{
  unint64_t v2 = sub_1AFE82F90();

  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1AFE80354@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1AFE818E4(a1, v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    double result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_1AFE80398()
{
  return 1701667182;
}

uint64_t sub_1AFE803A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 1701667182 && a2 == 0xE400000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1AFFCBCE8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1AFE80430(uint64_t a1)
{
  unint64_t v2 = sub_1AFE83508();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFE8046C(uint64_t a1)
{
  unint64_t v2 = sub_1AFE83508();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFE804A8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v15 = a2;
  sub_1AFE8355C(0, &qword_1E9AFBCD0, (void (*)(void))sub_1AFE83508);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  int v8 = (char *)&v14 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFE83508();
  sub_1AFFCBE68();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v15;
  uint64_t v10 = sub_1AFFCBAA8();
  uint64_t v12 = v11;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *uint64_t v9 = v10;
  v9[1] = v12;
  return result;
}

uint64_t sub_1AFE80644()
{
  return 0x6C6F626D7973;
}

uint64_t sub_1AFE80658@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6C6F626D7973 && a2 == 0xE600000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1AFFCBCE8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1AFE806E8(uint64_t a1)
{
  unint64_t v2 = sub_1AFE835BC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFE80724(uint64_t a1)
{
  unint64_t v2 = sub_1AFE835BC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFE80760@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v15 = a2;
  sub_1AFE8355C(0, &qword_1E9AFBCE0, (void (*)(void))sub_1AFE835BC);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  int v8 = (char *)&v14 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFE835BC();
  sub_1AFFCBE68();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v15;
  uint64_t v10 = sub_1AFFCBB18();
  uint64_t v12 = v11;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *uint64_t v9 = v10;
  v9[1] = v12;
  return result;
}

uint64_t sub_1AFE808FC()
{
  return 0x65736E6F70736572;
}

uint64_t sub_1AFE80914@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x65736E6F70736572 && a2 == 0xE800000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1AFFCBCE8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1AFE809AC(uint64_t a1)
{
  unint64_t v2 = sub_1AFE82524();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFE809E8(uint64_t a1)
{
  unint64_t v2 = sub_1AFE82524();

  return MEMORY[0x1F41862B0](a1, v2);
}

void *sub_1AFE80A24@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1AFE81BD4(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1AFE80A50()
{
  return 0x6D6574497377656ELL;
}

uint64_t sub_1AFE80A6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6D6574497377656ELL && a2 == 0xE900000000000073)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1AFFCBCE8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1AFE80B10(uint64_t a1)
{
  unint64_t v2 = sub_1AFE826F4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFE80B4C(uint64_t a1)
{
  unint64_t v2 = sub_1AFE826F4();

  return MEMORY[0x1F41862B0](a1, v2);
}

void *sub_1AFE80B88@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1AFE81D7C(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1AFE80BB4()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFE80C08()
{
  return sub_1AFFCAF68();
}

uint64_t sub_1AFE80C20()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFE80C70@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1AFFCBA78();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1AFE80CC4(void *a1@<X8>)
{
  *a1 = 0x6D6574497377656ELL;
  a1[1] = 0xE800000000000000;
}

uint64_t sub_1AFE80CE0()
{
  return 0x6D6574497377656ELL;
}

uint64_t sub_1AFE80CF8@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1AFFCBA78();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1AFE80D50(uint64_t a1)
{
  unint64_t v2 = sub_1AFE828C4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFE80D8C(uint64_t a1)
{
  unint64_t v2 = sub_1AFE828C4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFE80DC8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1AFE81F24(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1AFE80DF4()
{
  return 0x5265636976726573;
}

uint64_t sub_1AFE80E18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x5265636976726573 && a2 == 0xEF65736E6F707365)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1AFFCBCE8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1AFE80ED4(uint64_t a1)
{
  unint64_t v2 = sub_1AFE82350();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFE80F10(uint64_t a1)
{
  unint64_t v2 = sub_1AFE82350();

  return MEMORY[0x1F41862B0](a1, v2);
}

void *sub_1AFE80F4C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1AFE821A8(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1AFE80F78(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656E696C64616568 && a2 == 0xE800000000000000;
  if (v2 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1635018093 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1AFFCBCE8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1AFE8105C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  int v27 = a2;
  sub_1AFE8355C(0, &qword_1E9AFBC38, (void (*)(void))sub_1AFE82B70);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  int v8 = (char *)&v20 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFE82B70();
  sub_1AFFCBE68();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  uint64_t v10 = v27;
  char v34 = 0;
  sub_1AFE82BC4();
  sub_1AFFCBB58();
  uint64_t v11 = v29;
  uint64_t v12 = v31;
  uint64_t v24 = v30;
  uint64_t v25 = v28;
  uint64_t v13 = v33;
  uint64_t v23 = v32;
  char v34 = 1;
  sub_1AFE82C18();
  uint64_t v26 = v11;
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFCBB58();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  uint64_t v15 = v28;
  uint64_t v14 = v29;
  uint64_t v16 = v31;
  uint64_t v17 = v33;
  uint64_t v21 = v32;
  uint64_t v22 = v30;
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v18 = v26;
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v10 = v25;
  v10[1] = v18;
  v10[2] = v24;
  v10[3] = v12;
  v10[4] = v23;
  v10[5] = v13;
  v10[6] = v15;
  v10[7] = v14;
  v10[8] = v22;
  v10[9] = v16;
  v10[10] = v21;
  v10[11] = v17;
  return result;
}

uint64_t sub_1AFE81364(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D755374726F6873 && a2 == 0xEC0000007972616DLL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1AFFCBCE8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1AFE814BC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v26 = a2;
  sub_1AFE8355C(0, &qword_1E9AFBC70, (void (*)(void))sub_1AFE82F3C);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  int v8 = (char *)&v23 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFE82F3C();
  sub_1AFFCBE68();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  uint64_t v10 = v26;
  char v29 = 0;
  uint64_t v11 = sub_1AFFCBB18();
  uint64_t v13 = v12;
  uint64_t v25 = v11;
  char v28 = 1;
  sub_1AFFC8E38();
  uint64_t v14 = sub_1AFFCBB18();
  uint64_t v16 = v15;
  uint64_t v23 = v14;
  char v27 = 2;
  sub_1AFFC8E38();
  uint64_t v24 = v16;
  uint64_t v17 = sub_1AFFCBAA8();
  uint64_t v19 = v18;
  uint64_t v20 = v17;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  sub_1AFFC8E38();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t v21 = v24;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v10 = v25;
  v10[1] = v13;
  v10[2] = v23;
  v10[3] = v21;
  v10[4] = v20;
  v10[5] = v19;
  return result;
}

uint64_t sub_1AFE8177C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x72656469766F7270 && a2 == 0xE800000000000000;
  if (v2 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001AFFF7880 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x546873696C627570 && a2 == 0xEB00000000656D69)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1AFFCBCE8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1AFE818E4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1AFE8355C(0, &qword_1E9AFBC80, (void (*)(void))sub_1AFE82F90);
  uint64_t v24 = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  int v8 = (char *)&v21 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFE82F90();
  sub_1AFFCBE68();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  uint64_t v23 = a2;
  char v27 = 0;
  sub_1AFE82FE4();
  uint64_t v10 = v24;
  sub_1AFFCBB58();
  uint64_t v11 = v25;
  uint64_t v12 = v26;
  char v27 = 1;
  sub_1AFE83038();
  sub_1AFFC8E38();
  sub_1AFFCBB58();
  uint64_t v21 = v25;
  uint64_t v22 = v11;
  uint64_t v13 = v26;
  LOBYTE(v25) = 2;
  sub_1AFFC8E38();
  uint64_t v14 = sub_1AFFCBB18();
  uint64_t v16 = v15;
  uint64_t v17 = v14;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v10);
  sub_1AFFC8E38();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v19 = v13;
  uint64_t v20 = v23;
  *uint64_t v23 = v22;
  v20[1] = v12;
  v20[2] = v21;
  v20[3] = v19;
  unsigned char v20[4] = v17;
  v20[5] = v16;
  return result;
}

void *sub_1AFE81BD4(void *a1)
{
  sub_1AFE8355C(0, &qword_1E9AFBB90, (void (*)(void))sub_1AFE82524);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v11 - v6;
  int v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFE82524();
  uint64_t v9 = v8;
  sub_1AFFCBE68();
  if (!v1)
  {
    sub_1AFE82578();
    sub_1AFFCBB58();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v9 = (void *)v11[1];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v9;
}

void *sub_1AFE81D7C(void *a1)
{
  sub_1AFE8355C(0, &qword_1E9AFBBC0, (void (*)(void))sub_1AFE826F4);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v11 - v6;
  int v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFE826F4();
  uint64_t v9 = v8;
  sub_1AFFCBE68();
  if (!v1)
  {
    sub_1AFE82748();
    sub_1AFFCBB58();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v9 = (void *)v11[1];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v9;
}

uint64_t sub_1AFE81F24(void *a1)
{
  sub_1AFE8355C(0, &qword_1E9AFBBF0, (void (*)(void))sub_1AFE828C4);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v10 - v6;
  uint64_t v8 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  sub_1AFE828C4();
  sub_1AFFCBE68();
  if (!v1)
  {
    sub_1AFE829F8(0, &qword_1E9AFBC00, MEMORY[0x1E4FBB320]);
    sub_1AFE82918();
    sub_1AFFCBB58();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v8 = v10[1];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v8;
}

void *sub_1AFE821A8(void *a1)
{
  sub_1AFE8355C(0, &qword_1E9AFBB60, (void (*)(void))sub_1AFE82350);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v11 - v6;
  uint64_t v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFE82350();
  uint64_t v9 = v8;
  sub_1AFFCBE68();
  if (!v1)
  {
    sub_1AFE823A4();
    sub_1AFFCBB58();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v9 = (void *)v11[1];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v9;
}

unint64_t sub_1AFE82350()
{
  unint64_t result = qword_1E9AFBB68;
  if (!qword_1E9AFBB68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBB68);
  }
  return result;
}

unint64_t sub_1AFE823A4()
{
  unint64_t result = qword_1E9AFBB70;
  if (!qword_1E9AFBB70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBB70);
  }
  return result;
}

ValueMetadata *type metadata accessor for YahooNewsResponse.CodingKeys()
{
  return &type metadata for YahooNewsResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for YahooNewsResponse.ServiceResponse()
{
  return &type metadata for YahooNewsResponse.ServiceResponse;
}

unint64_t sub_1AFE82420()
{
  unint64_t result = qword_1E9AFBB78;
  if (!qword_1E9AFBB78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBB78);
  }
  return result;
}

unint64_t sub_1AFE82478()
{
  unint64_t result = qword_1E9AFBB80;
  if (!qword_1E9AFBB80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBB80);
  }
  return result;
}

unint64_t sub_1AFE824D0()
{
  unint64_t result = qword_1E9AFBB88;
  if (!qword_1E9AFBB88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBB88);
  }
  return result;
}

unint64_t sub_1AFE82524()
{
  unint64_t result = qword_1E9AFBB98;
  if (!qword_1E9AFBB98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBB98);
  }
  return result;
}

unint64_t sub_1AFE82578()
{
  unint64_t result = qword_1E9AFBBA0;
  if (!qword_1E9AFBBA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBBA0);
  }
  return result;
}

ValueMetadata *type metadata accessor for YahooNewsResponse.ServiceResponse.CodingKeys()
{
  return &type metadata for YahooNewsResponse.ServiceResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for YahooNewsResponse.Response()
{
  return &type metadata for YahooNewsResponse.Response;
}

unint64_t sub_1AFE825F0()
{
  unint64_t result = qword_1E9AFBBA8;
  if (!qword_1E9AFBBA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBBA8);
  }
  return result;
}

unint64_t sub_1AFE82648()
{
  unint64_t result = qword_1E9AFBBB0;
  if (!qword_1E9AFBBB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBBB0);
  }
  return result;
}

unint64_t sub_1AFE826A0()
{
  unint64_t result = qword_1E9AFBBB8;
  if (!qword_1E9AFBBB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBBB8);
  }
  return result;
}

unint64_t sub_1AFE826F4()
{
  unint64_t result = qword_1E9AFBBC8;
  if (!qword_1E9AFBBC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBBC8);
  }
  return result;
}

unint64_t sub_1AFE82748()
{
  unint64_t result = qword_1E9AFBBD0;
  if (!qword_1E9AFBBD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBBD0);
  }
  return result;
}

ValueMetadata *type metadata accessor for YahooNewsResponse.Response.CodingKeys()
{
  return &type metadata for YahooNewsResponse.Response.CodingKeys;
}

ValueMetadata *type metadata accessor for YahooNewsResponse.NewsItems()
{
  return &type metadata for YahooNewsResponse.NewsItems;
}

unint64_t sub_1AFE827C0()
{
  unint64_t result = qword_1E9AFBBD8;
  if (!qword_1E9AFBBD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBBD8);
  }
  return result;
}

unint64_t sub_1AFE82818()
{
  unint64_t result = qword_1E9AFBBE0;
  if (!qword_1E9AFBBE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBBE0);
  }
  return result;
}

unint64_t sub_1AFE82870()
{
  unint64_t result = qword_1E9AFBBE8;
  if (!qword_1E9AFBBE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBBE8);
  }
  return result;
}

unint64_t sub_1AFE828C4()
{
  unint64_t result = qword_1E9AFBBF8;
  if (!qword_1E9AFBBF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBBF8);
  }
  return result;
}

unint64_t sub_1AFE82918()
{
  unint64_t result = qword_1E9AFBC08;
  if (!qword_1E9AFBC08)
  {
    sub_1AFE829F8(255, &qword_1E9AFBC00, MEMORY[0x1E4FBB320]);
    sub_1AFE829A4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBC08);
  }
  return result;
}

unint64_t sub_1AFE829A4()
{
  unint64_t result = qword_1E9AFBC10;
  if (!qword_1E9AFBC10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBC10);
  }
  return result;
}

void sub_1AFE829F8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, ValueMetadata *))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, &type metadata for YahooNewsResponse.NewsItem);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

ValueMetadata *type metadata accessor for YahooNewsResponse.NewsItems.CodingKeys()
{
  return &type metadata for YahooNewsResponse.NewsItems.CodingKeys;
}

ValueMetadata *type metadata accessor for YahooNewsResponse.NewsItem()
{
  return &type metadata for YahooNewsResponse.NewsItem;
}

unint64_t sub_1AFE82A6C()
{
  unint64_t result = qword_1E9AFBC20;
  if (!qword_1E9AFBC20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBC20);
  }
  return result;
}

unint64_t sub_1AFE82AC4()
{
  unint64_t result = qword_1E9AFBC28;
  if (!qword_1E9AFBC28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBC28);
  }
  return result;
}

unint64_t sub_1AFE82B1C()
{
  unint64_t result = qword_1E9AFBC30;
  if (!qword_1E9AFBC30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBC30);
  }
  return result;
}

unint64_t sub_1AFE82B70()
{
  unint64_t result = qword_1E9AFBC40;
  if (!qword_1E9AFBC40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBC40);
  }
  return result;
}

unint64_t sub_1AFE82BC4()
{
  unint64_t result = qword_1E9AFBC48;
  if (!qword_1E9AFBC48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBC48);
  }
  return result;
}

unint64_t sub_1AFE82C18()
{
  unint64_t result = qword_1E9AFBC50;
  if (!qword_1E9AFBC50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBC50);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for YahooNewsResponse.NewsItem.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFE82D38);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for YahooNewsResponse.NewsItem.CodingKeys()
{
  return &type metadata for YahooNewsResponse.NewsItem.CodingKeys;
}

uint64_t getEnumTagSinglePayload for YahooNewsResponse.Meta(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for YahooNewsResponse.Meta(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for YahooNewsResponse.Meta()
{
  return &type metadata for YahooNewsResponse.Meta;
}

ValueMetadata *type metadata accessor for YahooNewsResponse.Headline()
{
  return &type metadata for YahooNewsResponse.Headline;
}

unint64_t sub_1AFE82E38()
{
  unint64_t result = qword_1E9AFBC58;
  if (!qword_1E9AFBC58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBC58);
  }
  return result;
}

unint64_t sub_1AFE82E90()
{
  unint64_t result = qword_1E9AFBC60;
  if (!qword_1E9AFBC60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBC60);
  }
  return result;
}

unint64_t sub_1AFE82EE8()
{
  unint64_t result = qword_1E9AFBC68;
  if (!qword_1E9AFBC68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBC68);
  }
  return result;
}

unint64_t sub_1AFE82F3C()
{
  unint64_t result = qword_1E9AFBC78;
  if (!qword_1E9AFBC78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBC78);
  }
  return result;
}

unint64_t sub_1AFE82F90()
{
  unint64_t result = qword_1E9AFBC88;
  if (!qword_1E9AFBC88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBC88);
  }
  return result;
}

unint64_t sub_1AFE82FE4()
{
  unint64_t result = qword_1E9AFBC90;
  if (!qword_1E9AFBC90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBC90);
  }
  return result;
}

unint64_t sub_1AFE83038()
{
  unint64_t result = qword_1E9AFBC98;
  if (!qword_1E9AFBC98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBC98);
  }
  return result;
}

ValueMetadata *type metadata accessor for YahooNewsResponse.Meta.CodingKeys()
{
  return &type metadata for YahooNewsResponse.Meta.CodingKeys;
}

unsigned char *_s10StocksCore17YahooNewsResponseV4MetaV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFE8316CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for YahooNewsResponse.Headline.CodingKeys()
{
  return &type metadata for YahooNewsResponse.Headline.CodingKeys;
}

uint64_t getEnumTagSinglePayload for YahooNewsResponse.FinancialInstrument(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for YahooNewsResponse.FinancialInstrument(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for YahooNewsResponse.FinancialInstrument()
{
  return &type metadata for YahooNewsResponse.FinancialInstrument;
}

uint64_t getEnumTagSinglePayload for YahooNewsResponse.Provider(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for YahooNewsResponse.Provider(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for YahooNewsResponse.Provider()
{
  return &type metadata for YahooNewsResponse.Provider;
}

unint64_t sub_1AFE832FC()
{
  unint64_t result = qword_1E9AFBCA0;
  if (!qword_1E9AFBCA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBCA0);
  }
  return result;
}

unint64_t sub_1AFE83354()
{
  unint64_t result = qword_1E9AFBCA8;
  if (!qword_1E9AFBCA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBCA8);
  }
  return result;
}

unint64_t sub_1AFE833AC()
{
  unint64_t result = qword_1E9AFBCB0;
  if (!qword_1E9AFBCB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBCB0);
  }
  return result;
}

unint64_t sub_1AFE83404()
{
  unint64_t result = qword_1E9AFBCB8;
  if (!qword_1E9AFBCB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBCB8);
  }
  return result;
}

unint64_t sub_1AFE8345C()
{
  unint64_t result = qword_1E9AFBCC0;
  if (!qword_1E9AFBCC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBCC0);
  }
  return result;
}

unint64_t sub_1AFE834B4()
{
  unint64_t result = qword_1E9AFBCC8;
  if (!qword_1E9AFBCC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBCC8);
  }
  return result;
}

unint64_t sub_1AFE83508()
{
  unint64_t result = qword_1E9AFBCD8;
  if (!qword_1E9AFBCD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBCD8);
  }
  return result;
}

void sub_1AFE8355C(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  if (!*a2)
  {
    a3();
    unint64_t v4 = sub_1AFFCBB78();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_1AFE835BC()
{
  unint64_t result = qword_1E9AFBCE8;
  if (!qword_1E9AFBCE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBCE8);
  }
  return result;
}

ValueMetadata *type metadata accessor for YahooNewsResponse.FinancialInstrument.CodingKeys()
{
  return &type metadata for YahooNewsResponse.FinancialInstrument.CodingKeys;
}

unsigned char *_s10StocksCore17YahooNewsResponseV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1AFE836BCLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for YahooNewsResponse.Provider.CodingKeys()
{
  return &type metadata for YahooNewsResponse.Provider.CodingKeys;
}

unint64_t sub_1AFE836F8()
{
  unint64_t result = qword_1E9AFBCF0;
  if (!qword_1E9AFBCF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBCF0);
  }
  return result;
}

unint64_t sub_1AFE83750()
{
  unint64_t result = qword_1E9AFBCF8;
  if (!qword_1E9AFBCF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBCF8);
  }
  return result;
}

unint64_t sub_1AFE837A8()
{
  unint64_t result = qword_1E9AFBD00;
  if (!qword_1E9AFBD00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBD00);
  }
  return result;
}

unint64_t sub_1AFE83800()
{
  unint64_t result = qword_1E9AFBD08;
  if (!qword_1E9AFBD08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBD08);
  }
  return result;
}

unint64_t sub_1AFE83858()
{
  unint64_t result = qword_1E9AFBD10;
  if (!qword_1E9AFBD10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBD10);
  }
  return result;
}

unint64_t sub_1AFE838B0()
{
  unint64_t result = qword_1E9AFBD18;
  if (!qword_1E9AFBD18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBD18);
  }
  return result;
}

uint64_t sub_1AFE83908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = sub_1AFFCABC8();
  uint64_t v25 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1AFFCAC18();
  uint64_t v23 = *(void *)(v15 - 8);
  uint64_t v24 = v15;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a1;
  *(void *)(v18 + 24) = a2;
  uint64_t v19 = (void *)swift_allocObject();
  v19[2] = a6;
  v19[3] = a5;
  v19[4] = sub_1AFD8173C;
  v19[5] = v18;
  v19[6] = a3;
  v19[7] = a4;
  aBlock[4] = sub_1AFE84800;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1AFDB5104;
  aBlock[3] = &block_descriptor_20;
  uint64_t v20 = _Block_copy(aBlock);
  sub_1AFFC8E48();
  sub_1AFFC8E38();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFCABE8();
  uint64_t v26 = MEMORY[0x1E4FBC860];
  sub_1AFDA5DBC((unint64_t *)&unk_1EB819C20, MEMORY[0x1E4FBCB00]);
  uint64_t v21 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCB00];
  sub_1AFE84C18(0, (unint64_t *)&qword_1EB819DA0, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1AFE846A4((unint64_t *)&qword_1EB819DB0, (unint64_t *)&qword_1EB819DA0, v21);
  sub_1AFFCB738();
  MEMORY[0x1B3E8D920](0, v17, v14, v20);
  _Block_release(v20);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v12);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v17, v24);
  return swift_release();
}

void sub_1AFE83C44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_1AFFC8E48();
  sub_1AFE84810(a1, a2);
  swift_release();
  uint64_t v12 = (void *)sub_1AFFCA5E8();
  type metadata accessor for Chart(0);
  sub_1AFFCA548();

  swift_bridgeObjectRelease();
  *(void *)(swift_allocObject() + 16) = a1;
  sub_1AFFC8E38();
  uint64_t v13 = (void *)sub_1AFFCA5E8();
  sub_1AFE84710();
  sub_1AFFCA668();
  swift_release();
  swift_release();

  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a3;
  *(void *)(v14 + 24) = a4;
  sub_1AFFC8E48();
  uint64_t v15 = (void *)sub_1AFFCA5E8();
  sub_1AFFCA678();
  swift_release();
  swift_release();

  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a5;
  *(void *)(v16 + 24) = a6;
  sub_1AFFC8E48();
  uint64_t v17 = (void *)sub_1AFFCA5E8();
  sub_1AFFCA6B8();
  swift_release();
  swift_release();
  swift_release();
}

uint64_t sub_1AFE83E34(uint64_t *a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for Chart(0);
  uint64_t v55 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v47 - v9;
  sub_1AFE84A7C();
  uint64_t v54 = v11;
  MEMORY[0x1F4188790](v11);
  int v53 = (char *)v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v58 = (void *)((char *)v47 - v14);
  MEMORY[0x1F4188790](v15);
  int v52 = (void *)((char *)v47 - v16);
  uint64_t v17 = *a1;
  uint64_t v51 = *(void *)(a2 + 16);
  if (!v51)
  {
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    uint64_t v20 = (void *)MEMORY[0x1E4FBC868];
LABEL_20:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v59 = v20;
    sub_1AFE84C18(0, (unint64_t *)&qword_1EB8168E0, (uint64_t (*)(uint64_t))sub_1AFE84710, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return sub_1AFFCA6F8();
  }
  v47[2] = v2;
  uint64_t v50 = *(void *)(v17 + 16);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  unint64_t v18 = 0;
  v47[1] = a2;
  uint64_t v19 = (void *)(a2 + 40);
  uint64_t v20 = (void *)MEMORY[0x1E4FBC868];
  int v48 = v10;
  uint64_t v49 = v17;
  while (1)
  {
    if (v50 == v18)
    {
LABEL_18:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
    if (v18 >= *(void *)(v17 + 16)) {
      break;
    }
    uint64_t v21 = *(v19 - 1);
    uint64_t v22 = *v19;
    uint64_t v23 = v54;
    uint64_t v24 = v17 + ((*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80));
    uint64_t v25 = *(void *)(v55 + 72);
    uint64_t v56 = v19;
    uint64_t v57 = v25;
    uint64_t v26 = (uint64_t)v52;
    uint64_t v27 = (uint64_t)v52 + *(int *)(v54 + 48);
    *int v52 = v21;
    *(void *)(v26 + 8) = v22;
    sub_1AFD30D44(v24 + v25 * v18, v27);
    char v28 = v58;
    sub_1AFE84AE4(v26, (uint64_t)v58, (uint64_t (*)(void))sub_1AFE84A7C);
    uint64_t v29 = *(int *)(v23 + 48);
    uint64_t v30 = (uint64_t)&v53[v29];
    uint64_t v32 = *v28;
    uint64_t v31 = v28[1];
    sub_1AFD30D44((uint64_t)v28 + v29, (uint64_t)&v53[v29]);
    sub_1AFE84AE4(v30, (uint64_t)v10, type metadata accessor for Chart);
    sub_1AFD30D44((uint64_t)v10, (uint64_t)v7);
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v59 = v20;
    unint64_t v35 = sub_1AFD79CC8(v32, v31);
    uint64_t v36 = v20[2];
    BOOL v37 = (v34 & 1) == 0;
    uint64_t v38 = v36 + v37;
    if (__OFADD__(v36, v37)) {
      goto LABEL_22;
    }
    char v39 = v34;
    if (v20[3] >= v38)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v20 = v59;
        if (v34) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_1AFEB98A8();
        uint64_t v20 = v59;
        if (v39) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_1AFEB48AC(v38, isUniquelyReferenced_nonNull_native);
      unint64_t v40 = sub_1AFD79CC8(v32, v31);
      if ((v39 & 1) != (v41 & 1)) {
        goto LABEL_24;
      }
      unint64_t v35 = v40;
      uint64_t v20 = v59;
      if (v39)
      {
LABEL_3:
        sub_1AFE84BAC((uint64_t)v7, v20[7] + v35 * v57);
        goto LABEL_4;
      }
    }
    v20[(v35 >> 6) + 8] |= 1 << v35;
    int v42 = (uint64_t *)(v20[6] + 16 * v35);
    *int v42 = v32;
    v42[1] = v31;
    sub_1AFE84AE4((uint64_t)v7, v20[7] + v35 * v57, type metadata accessor for Chart);
    uint64_t v43 = v20[2];
    BOOL v44 = __OFADD__(v43, 1);
    uint64_t v45 = v43 + 1;
    if (v44) {
      goto LABEL_23;
    }
    v20[2] = v45;
    sub_1AFFC8E38();
LABEL_4:
    ++v18;
    uint64_t v19 = v56 + 2;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v10 = v48;
    sub_1AFE84B4C((uint64_t)v48, type metadata accessor for Chart);
    sub_1AFE84B4C((uint64_t)v58, (uint64_t (*)(void))sub_1AFE84A7C);
    uint64_t v17 = v49;
    if (v51 == v18) {
      goto LABEL_18;
    }
  }
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1AFFCBD68();
  __break(1u);
  return result;
}

uint64_t sub_1AFE84314()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StubSparklineService()
{
  return self;
}

uint64_t sub_1AFE84378()
{
  uint64_t v9 = sub_1AFFCB4A8();
  uint64_t v1 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  int v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1AFFCB488();
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = sub_1AFFCAC18();
  MEMORY[0x1F4188790](v5 - 8);
  type metadata accessor for StubChartService();
  swift_allocObject();
  *(void *)(v0 + 16) = sub_1AFFBB9B0();
  v8[1] = sub_1AFD67528();
  sub_1AFFCABF8();
  uint64_t v10 = MEMORY[0x1E4FBC860];
  sub_1AFDA5DBC(&qword_1EB819E60, MEMORY[0x1E4FBCC10]);
  uint64_t v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCC10];
  sub_1AFE84C18(0, &qword_1EB819DE8, MEMORY[0x1E4FBCC10], MEMORY[0x1E4FBB320]);
  sub_1AFE846A4((unint64_t *)&qword_1EB819DF0, &qword_1EB819DE8, v6);
  sub_1AFFCB738();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FBCC58], v9);
  *(void *)(v0 + 24) = sub_1AFFCB4D8();
  return v0;
}

uint64_t sub_1AFE84614()
{
  return sub_1AFFCA758();
}

uint64_t sub_1AFE846A4(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1AFE84C18(255, a2, a3, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AFE84708(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AFE83908(a1, a2, a3, a4, *(void *)(v4 + 16), *(void *)(v4 + 24));
}

void sub_1AFE84710()
{
  if (!qword_1EB817E88)
  {
    type metadata accessor for Chart(255);
    unint64_t v0 = sub_1AFFCAD18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB817E88);
    }
  }
}

uint64_t sub_1AFE84778()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1AFE847B0()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 64, 7);
}

void sub_1AFE84800()
{
  sub_1AFE83C44(v0[2], v0[3], v0[4], v0[5], v0[6], v0[7]);
}

uint64_t sub_1AFE84810(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1AFFC98F8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v9)
  {
    v12[0] = v2;
    uint64_t v13 = MEMORY[0x1E4FBC860];
    sub_1AFFCB8B8();
    v12[1] = *(void *)(a2 + 16);
    uint64_t v11 = a1 + 40;
    do
    {
      v11 += 16;
      sub_1AFFC8E38();
      sub_1AFFC98E8();
      sub_1AFFCA1A8();
      swift_allocObject();
      sub_1AFFCA198();
      sub_1AFE84C18(0, &qword_1EB811148, type metadata accessor for Chart, MEMORY[0x1E4FAB088]);
      swift_allocObject();
      sub_1AFFCA758();
      swift_release();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      swift_bridgeObjectRelease();
      sub_1AFFCB888();
      sub_1AFFCB8C8();
      sub_1AFFCB8D8();
      sub_1AFFCB898();
      --v9;
    }
    while (v9);
    return v13;
  }
  return result;
}

uint64_t sub_1AFE84A28()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1AFE84A60(uint64_t *a1)
{
  return sub_1AFE83E34(a1, *(void *)(v1 + 16));
}

void sub_1AFE84A7C()
{
  if (!qword_1EB817F18)
  {
    type metadata accessor for Chart(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB817F18);
    }
  }
}

uint64_t sub_1AFE84AE4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1AFE84B4C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1AFE84BAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Chart(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AFE84C10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AFFBAB04(a1, a2, a3, a4);
}

void sub_1AFE84C18(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

double sub_1AFE84C84()
{
  return *(double *)v0;
}

double sub_1AFE84C8C()
{
  return *(double *)(v0 + 8);
}

double sub_1AFE84C94()
{
  return *(double *)(v0 + 16);
}

double sub_1AFE84C9C()
{
  return *(double *)(v0 + 24);
}

double sub_1AFE84CA4()
{
  return *(double *)(v0 + 32);
}

double sub_1AFE84CAC()
{
  return *(double *)(v0 + 40);
}

double sub_1AFE84CB4()
{
  return *(double *)(v0 + 48);
}

double sub_1AFE84CBC()
{
  return *(double *)(v0 + 56);
}

double sub_1AFE84CC4()
{
  return *(double *)(v0 + 64);
}

double sub_1AFE84CCC()
{
  return *(double *)(v0 + 72);
}

double sub_1AFE84CD4()
{
  return *(double *)(v0 + 80);
}

double sub_1AFE84CDC()
{
  return *(double *)(v0 + 88);
}

double sub_1AFE84CE4()
{
  return *(double *)(v0 + 96);
}

double sub_1AFE84CEC()
{
  return *(double *)(v0 + 104);
}

double sub_1AFE84CF4()
{
  return *(double *)(v0 + 112);
}

double sub_1AFE84CFC()
{
  return *(double *)(v0 + 120);
}

double sub_1AFE84D04()
{
  return *(double *)(v0 + 128);
}

double sub_1AFE84D0C()
{
  return *(double *)(v0 + 136);
}

double sub_1AFE84D14()
{
  return *(double *)(v0 + 144);
}

double sub_1AFE84D1C()
{
  return *(double *)(v0 + 152);
}

uint64_t sub_1AFE84D24@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, double *a9@<X8>, double a10, char a11, double a12, char a13, double a14, char a15, double a16, char a17, double a18, char a19, double a20,char a21,double a22,char a23,double a24,char a25,double a26,char a27,double a28,char a29,double a30,char a31,double a32,char a33,double a34,char a35,double a36,char a37,double a38,char a39,double a40,char a41)
{
  double v42 = 0.05;
  if (a2) {
    a1 = 0.05;
  }
  double v44 = 0.3;
  if (a4) {
    a3 = 0.3;
  }
  double v46 = 1.0;
  if (a6) {
    a5 = 1.0;
  }
  double v48 = 0.0;
  if (a8) {
    a7 = 0.0;
  }
  if (a11) {
    a10 = 0.0;
  }
  if (a13) {
    a12 = 0.0;
  }
  if ((a15 & 1) == 0) {
    double v42 = a14;
  }
  if (a17) {
    a16 = 0.01;
  }
  double v53 = 0.1;
  if (a19) {
    a18 = 0.1;
  }
  if (a21) {
    a20 = 0.12;
  }
  uint64_t result = 0x3FC3333333333333;
  if (a23) {
    a22 = 0.15;
  }
  if (a25) {
    a24 = 0.3;
  }
  if ((a27 & 1) == 0) {
    double v46 = a26;
  }
  if (a29) {
    a28 = 0.0;
  }
  if ((a31 & 1) == 0) {
    double v44 = a30;
  }
  if (a33) {
    a32 = 0.2;
  }
  double v61 = 0.5;
  if (a35) {
    a34 = 0.5;
  }
  if ((a37 & 1) == 0) {
    double v61 = a36;
  }
  if ((a39 & 1) == 0) {
    double v53 = a38;
  }
  if ((a41 & 1) == 0) {
    double v48 = a40;
  }
  *a9 = a1;
  a9[1] = a3;
  a9[2] = a5;
  a9[3] = a7;
  a9[4] = a10;
  a9[5] = a12;
  a9[6] = v42;
  a9[7] = a16;
  a9[8] = a18;
  a9[9] = a20;
  a9[10] = a22;
  a9[11] = a24;
  a9[12] = v46;
  a9[13] = a28;
  a9[14] = v44;
  a9[15] = a32;
  a9[16] = a34;
  a9[17] = v61;
  a9[18] = v53;
  a9[19] = v48;
  return result;
}

uint64_t sub_1AFE84EEC@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1AFE870AC(0, &qword_1EB819FC0, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v83 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFE86968();
  sub_1AFFCBE68();
  if (!v2)
  {
    uint64_t v128 = (void *)MEMORY[0x1E4FBC860];
    char v127 = 0;
    sub_1AFFCBAF8();
    char v123 = a2;
    char v10 = v126;
    double v122 = v125;
    if (v126)
    {
      swift_beginAccess();
      uint64_t v11 = v128;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v11 = sub_1AFD352FC(0, v11[2] + 1, 1, v11);
      }
      unint64_t v13 = v11[2];
      unint64_t v12 = v11[3];
      if (v13 >= v12 >> 1) {
        uint64_t v11 = sub_1AFD352FC((void *)(v12 > 1), v13 + 1, 1, v11);
      }
      void v11[2] = v13 + 1;
      uint64_t v14 = &v11[2 * v13];
      v14[4] = 0xD00000000000001ELL;
      v14[5] = 0x80000001AFFF7910;
      uint64_t v128 = v11;
      swift_endAccess();
    }
    else
    {
      uint64_t v11 = (void *)MEMORY[0x1E4FBC860];
    }
    char v127 = 1;
    sub_1AFFCBAF8();
    double v121 = v125;
    int v120 = v126;
    if (v126)
    {
      swift_beginAccess();
      uint64_t v11 = v128;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v11 = sub_1AFD352FC(0, v11[2] + 1, 1, v11);
      }
      unint64_t v16 = v11[2];
      unint64_t v15 = v11[3];
      if (v16 >= v15 >> 1) {
        uint64_t v11 = sub_1AFD352FC((void *)(v15 > 1), v16 + 1, 1, v11);
      }
      void v11[2] = v16 + 1;
      uint64_t v17 = &v11[2 * v16];
      v17[4] = 0xD000000000000011;
      v17[5] = 0x80000001AFFF7930;
      uint64_t v128 = v11;
      swift_endAccess();
    }
    char v127 = 2;
    sub_1AFFCBAF8();
    double v119 = v125;
    int v118 = v126;
    if (v126)
    {
      swift_beginAccess();
      uint64_t v11 = v128;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v11 = sub_1AFD352FC(0, v11[2] + 1, 1, v11);
      }
      unint64_t v19 = v11[2];
      unint64_t v18 = v11[3];
      if (v19 >= v18 >> 1) {
        uint64_t v11 = sub_1AFD352FC((void *)(v18 > 1), v19 + 1, 1, v11);
      }
      void v11[2] = v19 + 1;
      uint64_t v20 = &v11[2 * v19];
      unsigned char v20[4] = 0xD000000000000017;
      v20[5] = 0x80000001AFFF7950;
      uint64_t v128 = v11;
      swift_endAccess();
    }
    char v127 = 3;
    sub_1AFFCBAF8();
    double v117 = v125;
    int v116 = v126;
    if (v126)
    {
      swift_beginAccess();
      uint64_t v11 = v128;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v11 = sub_1AFD352FC(0, v11[2] + 1, 1, v11);
      }
      unint64_t v22 = v11[2];
      unint64_t v21 = v11[3];
      if (v22 >= v21 >> 1) {
        uint64_t v11 = sub_1AFD352FC((void *)(v21 > 1), v22 + 1, 1, v11);
      }
      void v11[2] = v22 + 1;
      uint64_t v23 = &v11[2 * v22];
      v23[4] = 0xD00000000000001ELL;
      v23[5] = 0x80000001AFFF7970;
      uint64_t v128 = v11;
      swift_endAccess();
    }
    char v127 = 4;
    sub_1AFFCBAF8();
    double v115 = v125;
    int v114 = v126;
    if (v126)
    {
      swift_beginAccess();
      uint64_t v11 = v128;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v11 = sub_1AFD352FC(0, v11[2] + 1, 1, v11);
      }
      unint64_t v25 = v11[2];
      unint64_t v24 = v11[3];
      if (v25 >= v24 >> 1) {
        uint64_t v11 = sub_1AFD352FC((void *)(v24 > 1), v25 + 1, 1, v11);
      }
      void v11[2] = v25 + 1;
      uint64_t v26 = &v11[2 * v25];
      v26[4] = 0xD00000000000001ELL;
      v26[5] = 0x80000001AFFF7990;
      uint64_t v128 = v11;
      swift_endAccess();
    }
    char v127 = 5;
    sub_1AFFCBAF8();
    double v113 = v125;
    int v112 = v126;
    if (v126)
    {
      swift_beginAccess();
      uint64_t v11 = v128;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v11 = sub_1AFD352FC(0, v11[2] + 1, 1, v11);
      }
      unint64_t v28 = v11[2];
      unint64_t v27 = v11[3];
      if (v28 >= v27 >> 1) {
        uint64_t v11 = sub_1AFD352FC((void *)(v27 > 1), v28 + 1, 1, v11);
      }
      void v11[2] = v28 + 1;
      uint64_t v29 = &v11[2 * v28];
      v29[4] = 0xD000000000000027;
      v29[5] = 0x80000001AFFF79B0;
      uint64_t v128 = v11;
      swift_endAccess();
    }
    char v127 = 6;
    sub_1AFFCBAF8();
    double v111 = v125;
    int v110 = v126;
    if (v126)
    {
      swift_beginAccess();
      uint64_t v11 = v128;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v11 = sub_1AFD352FC(0, v11[2] + 1, 1, v11);
      }
      unint64_t v31 = v11[2];
      unint64_t v30 = v11[3];
      if (v31 >= v30 >> 1) {
        uint64_t v11 = sub_1AFD352FC((void *)(v30 > 1), v31 + 1, 1, v11);
      }
      void v11[2] = v31 + 1;
      uint64_t v32 = &v11[2 * v31];
      v32[4] = 0xD000000000000017;
      v32[5] = 0x80000001AFFF79E0;
      uint64_t v128 = v11;
      swift_endAccess();
    }
    char v127 = 7;
    sub_1AFFCBAF8();
    double v109 = v125;
    int v108 = v126;
    if (v126)
    {
      swift_beginAccess();
      uint64_t v11 = v128;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v11 = sub_1AFD352FC(0, v11[2] + 1, 1, v11);
      }
      unint64_t v34 = v11[2];
      unint64_t v33 = v11[3];
      if (v34 >= v33 >> 1) {
        uint64_t v11 = sub_1AFD352FC((void *)(v33 > 1), v34 + 1, 1, v11);
      }
      void v11[2] = v34 + 1;
      unint64_t v35 = &v11[2 * v34];
      v35[4] = 0xD000000000000015;
      v35[5] = 0x80000001AFFED760;
      uint64_t v128 = v11;
      swift_endAccess();
    }
    char v127 = 8;
    sub_1AFFCBAF8();
    double v107 = v125;
    int v106 = v126;
    if (v126)
    {
      swift_beginAccess();
      uint64_t v11 = v128;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v11 = sub_1AFD352FC(0, v11[2] + 1, 1, v11);
      }
      unint64_t v37 = v11[2];
      unint64_t v36 = v11[3];
      if (v37 >= v36 >> 1) {
        uint64_t v11 = sub_1AFD352FC((void *)(v36 > 1), v37 + 1, 1, v11);
      }
      void v11[2] = v37 + 1;
      uint64_t v38 = &v11[2 * v37];
      v38[4] = 0xD000000000000014;
      v38[5] = 0x80000001AFFED680;
      uint64_t v128 = v11;
      swift_endAccess();
    }
    char v127 = 9;
    sub_1AFFCBAF8();
    double v105 = v125;
    int v104 = v126;
    if (v126)
    {
      swift_beginAccess();
      uint64_t v11 = v128;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v11 = sub_1AFD352FC(0, v11[2] + 1, 1, v11);
      }
      unint64_t v40 = v11[2];
      unint64_t v39 = v11[3];
      if (v40 >= v39 >> 1) {
        uint64_t v11 = sub_1AFD352FC((void *)(v39 > 1), v40 + 1, 1, v11);
      }
      void v11[2] = v40 + 1;
      char v41 = &v11[2 * v40];
      v41[4] = 0xD000000000000014;
      v41[5] = 0x80000001AFFED720;
      uint64_t v128 = v11;
      swift_endAccess();
    }
    char v127 = 10;
    sub_1AFFCBAF8();
    double v103 = v125;
    int v102 = v126;
    if (v126)
    {
      swift_beginAccess();
      uint64_t v11 = v128;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v11 = sub_1AFD352FC(0, v11[2] + 1, 1, v11);
      }
      unint64_t v43 = v11[2];
      unint64_t v42 = v11[3];
      if (v43 >= v42 >> 1) {
        uint64_t v11 = sub_1AFD352FC((void *)(v42 > 1), v43 + 1, 1, v11);
      }
      void v11[2] = v43 + 1;
      double v44 = &v11[2 * v43];
      v44[4] = 0xD000000000000016;
      v44[5] = 0x80000001AFFED6E0;
      uint64_t v128 = v11;
      swift_endAccess();
    }
    char v127 = 11;
    sub_1AFFCBAF8();
    double v101 = v125;
    int v100 = v126;
    if (v126)
    {
      swift_beginAccess();
      uint64_t v11 = v128;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v11 = sub_1AFD352FC(0, v11[2] + 1, 1, v11);
      }
      unint64_t v46 = v11[2];
      unint64_t v45 = v11[3];
      if (v46 >= v45 >> 1) {
        uint64_t v11 = sub_1AFD352FC((void *)(v45 > 1), v46 + 1, 1, v11);
      }
      void v11[2] = v46 + 1;
      int v47 = &v11[2 * v46];
      v47[4] = 0xD000000000000015;
      v47[5] = 0x80000001AFFF7A00;
      uint64_t v128 = v11;
      swift_endAccess();
    }
    char v127 = 12;
    sub_1AFFCBAF8();
    double v99 = v125;
    int v98 = v126;
    if (v126)
    {
      swift_beginAccess();
      uint64_t v11 = v128;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v11 = sub_1AFD352FC(0, v11[2] + 1, 1, v11);
      }
      unint64_t v49 = v11[2];
      unint64_t v48 = v11[3];
      if (v49 >= v48 >> 1) {
        uint64_t v11 = sub_1AFD352FC((void *)(v48 > 1), v49 + 1, 1, v11);
      }
      void v11[2] = v49 + 1;
      uint64_t v50 = &v11[2 * v49];
      v50[4] = 0xD000000000000019;
      v50[5] = 0x80000001AFFF7A20;
      uint64_t v128 = v11;
      swift_endAccess();
    }
    char v127 = 13;
    sub_1AFFCBAF8();
    double v97 = v125;
    int v96 = v126;
    if (v126)
    {
      swift_beginAccess();
      uint64_t v11 = v128;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v11 = sub_1AFD352FC(0, v11[2] + 1, 1, v11);
      }
      unint64_t v52 = v11[2];
      unint64_t v51 = v11[3];
      if (v52 >= v51 >> 1) {
        uint64_t v11 = sub_1AFD352FC((void *)(v51 > 1), v52 + 1, 1, v11);
      }
      void v11[2] = v52 + 1;
      double v53 = &v11[2 * v52];
      v53[4] = 0xD00000000000001DLL;
      v53[5] = 0x80000001AFFF7A40;
      uint64_t v128 = v11;
      swift_endAccess();
    }
    char v127 = 14;
    sub_1AFFCBAF8();
    double v95 = v125;
    int v94 = v126;
    if (v126)
    {
      swift_beginAccess();
      uint64_t v11 = v128;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v11 = sub_1AFD352FC(0, v11[2] + 1, 1, v11);
      }
      unint64_t v55 = v11[2];
      unint64_t v54 = v11[3];
      if (v55 >= v54 >> 1) {
        uint64_t v11 = sub_1AFD352FC((void *)(v54 > 1), v55 + 1, 1, v11);
      }
      void v11[2] = v55 + 1;
      uint64_t v56 = &v11[2 * v55];
      v56[4] = 0xD000000000000014;
      v56[5] = 0x80000001AFFF7A60;
      uint64_t v128 = v11;
      swift_endAccess();
    }
    char v127 = 15;
    sub_1AFFCBAF8();
    double v93 = v125;
    int v92 = v126;
    if (v126)
    {
      swift_beginAccess();
      uint64_t v11 = v128;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v11 = sub_1AFD352FC(0, v11[2] + 1, 1, v11);
      }
      unint64_t v58 = v11[2];
      unint64_t v57 = v11[3];
      if (v58 >= v57 >> 1) {
        uint64_t v11 = sub_1AFD352FC((void *)(v57 > 1), v58 + 1, 1, v11);
      }
      void v11[2] = v58 + 1;
      uint64_t v59 = &v11[2 * v58];
      v59[4] = 0xD00000000000001CLL;
      v59[5] = 0x80000001AFFF7A80;
      uint64_t v128 = v11;
      swift_endAccess();
    }
    char v127 = 16;
    sub_1AFFCBAF8();
    double v91 = v125;
    int v90 = v126;
    if (v126)
    {
      swift_beginAccess();
      uint64_t v11 = v128;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v11 = sub_1AFD352FC(0, v11[2] + 1, 1, v11);
      }
      unint64_t v61 = v11[2];
      unint64_t v60 = v11[3];
      if (v61 >= v60 >> 1) {
        uint64_t v11 = sub_1AFD352FC((void *)(v60 > 1), v61 + 1, 1, v11);
      }
      void v11[2] = v61 + 1;
      uint64_t v62 = &v11[2 * v61];
      v62[4] = 0xD000000000000013;
      v62[5] = 0x80000001AFFEDA10;
      uint64_t v128 = v11;
      swift_endAccess();
    }
    char v127 = 17;
    sub_1AFFCBAF8();
    double v89 = v125;
    int v88 = v126;
    if (v126)
    {
      swift_beginAccess();
      uint64_t v11 = v128;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v11 = sub_1AFD352FC(0, v11[2] + 1, 1, v11);
      }
      unint64_t v64 = v11[2];
      unint64_t v63 = v11[3];
      if (v64 >= v63 >> 1) {
        uint64_t v11 = sub_1AFD352FC((void *)(v63 > 1), v64 + 1, 1, v11);
      }
      void v11[2] = v64 + 1;
      char v65 = &v11[2 * v64];
      v65[4] = 0x616E655064616572;
      v65[5] = 0xEB0000000079746CLL;
      uint64_t v128 = v11;
      swift_endAccess();
    }
    char v127 = 18;
    sub_1AFFCBAF8();
    double v87 = v125;
    int v86 = v126;
    if (v126)
    {
      swift_beginAccess();
      uint64_t v11 = v128;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v11 = sub_1AFD352FC(0, v11[2] + 1, 1, v11);
      }
      unint64_t v67 = v11[2];
      unint64_t v66 = v11[3];
      if (v67 >= v66 >> 1) {
        uint64_t v11 = sub_1AFD352FC((void *)(v66 > 1), v67 + 1, 1, v11);
      }
      void v11[2] = v67 + 1;
      char v68 = &v11[2 * v67];
      v68[4] = 0xD000000000000015;
      v68[5] = 0x80000001AFFF7AA0;
      uint64_t v128 = v11;
      swift_endAccess();
    }
    char v127 = 19;
    sub_1AFFCBAF8();
    double v85 = v125;
    char v70 = v126;
    if (v126)
    {
      swift_beginAccess();
      uint64_t v11 = v128;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v11 = sub_1AFD352FC(0, v11[2] + 1, 1, v11);
      }
      unint64_t v72 = v11[2];
      unint64_t v71 = v11[3];
      int64_t v84 = v72 + 1;
      if (v72 >= v71 >> 1) {
        uint64_t v11 = sub_1AFD352FC((void *)(v71 > 1), v84, 1, v11);
      }
      void v11[2] = v84;
      char v73 = &v11[2 * v72];
      v73[4] = 0x6769655769626174;
      v73[5] = 0xEA00000000007468;
      uint64_t v128 = v11;
      swift_endAccess();
    }
    sub_1AFE84D24(v122, v10, v121, v120, v119, v118, v117, v116, (double *)v124, v115, v114, v113, v112, v111, v110, v109, v108, v107, v106,
      v105,
      v104,
      v103,
      v102,
      v101,
      v100,
      v99,
      v98,
      v97,
      v96,
      v95,
      v94,
      v93,
      v92,
      v91,
      v90,
      v89,
      v88,
      v87,
      v86,
      v85,
      v70);
    if (v11[2])
    {
      sub_1AFD2CD48();
      uint64_t v74 = swift_allocObject();
      *(_OWORD *)(v74 + 16) = xmmword_1AFFD05F0;
      sub_1AFD3ABD0();
      *(void *)(v74 + 56) = v75;
      *(void *)(v74 + 64) = sub_1AFD5CDA0();
      *(void *)(v74 + 32) = v11;
      sub_1AFD2C4F4();
      sub_1AFFC8E38();
      uint64_t v76 = (void *)sub_1AFFCB638();
      sub_1AFFCB478();
      sub_1AFFCA878();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AFD2C4F4();
      uint64_t v76 = (void *)sub_1AFFCB638();
      sub_1AFFCB478();
      sub_1AFFCA878();
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_bridgeObjectRelease();
    long long v77 = v124[7];
    v78 = v123;
    v123[6] = v124[6];
    v78[7] = v77;
    long long v79 = v124[9];
    v78[8] = v124[8];
    v78[9] = v79;
    long long v80 = v124[3];
    v78[2] = v124[2];
    v78[3] = v80;
    long long v81 = v124[5];
    v78[4] = v124[4];
    v78[5] = v81;
    long long v82 = v124[1];
    _OWORD *v78 = v124[0];
    v78[1] = v82;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1AFE86770(char a1)
{
  unint64_t result = 0xD00000000000001ELL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0xD000000000000017;
      break;
    case 3:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 4:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 5:
      unint64_t result = 0xD000000000000027;
      break;
    case 6:
      unint64_t result = 0xD000000000000017;
      break;
    case 7:
      unint64_t result = 0xD000000000000015;
      break;
    case 8:
    case 9:
    case 14:
      unint64_t result = 0xD000000000000014;
      break;
    case 10:
      unint64_t result = 0xD000000000000016;
      break;
    case 11:
      unint64_t result = 0xD000000000000015;
      break;
    case 12:
      unint64_t result = 0xD000000000000019;
      break;
    case 13:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 15:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 16:
      unint64_t result = 0xD000000000000013;
      break;
    case 17:
      unint64_t result = 0x616E655064616572;
      break;
    case 18:
      unint64_t result = 0xD000000000000015;
      break;
    case 19:
      unint64_t result = 0x6769655769626174;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1AFE86960()
{
  return sub_1AFE86770(*v0);
}

unint64_t sub_1AFE86968()
{
  unint64_t result = qword_1EB819790;
  if (!qword_1EB819790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819790);
  }
  return result;
}

uint64_t sub_1AFE869BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1AFE87430(a1, a2);
  *a3 = result;
  return result;
}

void sub_1AFE869E4(unsigned char *a1@<X8>)
{
  *a1 = 20;
}

uint64_t sub_1AFE869F0(uint64_t a1)
{
  unint64_t v2 = sub_1AFE86968();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFE86A2C(uint64_t a1)
{
  unint64_t v2 = sub_1AFE86968();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFE86A68(void *a1)
{
  sub_1AFE870AC(0, &qword_1EB81A078, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v16 - v7;
  uint64_t v9 = v1[1];
  v16[11] = v1[2];
  v16[12] = v9;
  uint64_t v10 = v1[3];
  v16[9] = v1[4];
  v16[10] = v10;
  uint64_t v11 = v1[5];
  v16[7] = v1[6];
  v16[8] = v11;
  uint64_t v12 = v1[7];
  v16[5] = v1[8];
  void v16[6] = v12;
  uint64_t v13 = v1[9];
  v16[3] = v1[10];
  v16[4] = v13;
  uint64_t v14 = v1[11];
  v16[1] = v1[12];
  v16[2] = v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFE86968();
  sub_1AFFCBE78();
  char v17 = 0;
  sub_1AFFCBC28();
  if (!v2)
  {
    char v17 = 1;
    sub_1AFFCBC28();
    char v17 = 2;
    sub_1AFFCBC28();
    char v17 = 3;
    sub_1AFFCBC28();
    char v17 = 4;
    sub_1AFFCBC28();
    char v17 = 5;
    sub_1AFFCBC28();
    char v17 = 6;
    sub_1AFFCBC28();
    char v17 = 7;
    sub_1AFFCBC28();
    char v17 = 8;
    sub_1AFFCBC28();
    char v17 = 9;
    sub_1AFFCBC28();
    char v17 = 10;
    sub_1AFFCBC28();
    char v17 = 11;
    sub_1AFFCBC28();
    char v17 = 12;
    sub_1AFFCBC28();
    char v17 = 13;
    sub_1AFFCBC28();
    char v17 = 14;
    sub_1AFFCBC28();
    char v17 = 15;
    sub_1AFFCBC28();
    char v17 = 16;
    sub_1AFFCBC28();
    char v17 = 17;
    sub_1AFFCBC28();
    char v17 = 18;
    sub_1AFFCBC28();
    char v17 = 19;
    sub_1AFFCBC28();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1AFE86F1C@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1AFE84EEC(a1, a2);
}

uint64_t sub_1AFE86F34(void *a1)
{
  return sub_1AFE86A68(a1);
}

double sub_1AFE86F50()
{
  return *(double *)v0;
}

double sub_1AFE86F58()
{
  return *(double *)(v0 + 8);
}

double sub_1AFE86F60()
{
  return *(double *)(v0 + 16);
}

double sub_1AFE86F68()
{
  return *(double *)(v0 + 24);
}

double sub_1AFE86F70()
{
  return *(double *)(v0 + 32);
}

double sub_1AFE86F78()
{
  return *(double *)(v0 + 40);
}

double sub_1AFE86F80()
{
  return *(double *)(v0 + 48);
}

double sub_1AFE86F88()
{
  return *(double *)(v0 + 56);
}

double sub_1AFE86F90()
{
  return *(double *)(v0 + 64);
}

double sub_1AFE86F98()
{
  return *(double *)(v0 + 72);
}

double sub_1AFE86FA0()
{
  return *(double *)(v0 + 80);
}

double sub_1AFE86FA8()
{
  return *(double *)(v0 + 88);
}

double sub_1AFE86FB0()
{
  return *(double *)(v0 + 96);
}

double sub_1AFE86FB8()
{
  return *(double *)(v0 + 104);
}

double sub_1AFE86FC0()
{
  return *(double *)(v0 + 112);
}

double sub_1AFE86FC8()
{
  return *(double *)(v0 + 120);
}

double sub_1AFE86FD0()
{
  return *(double *)(v0 + 128);
}

double sub_1AFE86FD8()
{
  return *(double *)(v0 + 136);
}

double sub_1AFE86FE0()
{
  return *(double *)(v0 + 144);
}

double sub_1AFE86FE8()
{
  return *(double *)(v0 + 152);
}

BOOL sub_1AFE86FF0(float64x2_t *a1, float64x2_t *a2)
{
  BOOL result = 0;
  if ((vminvq_u8((uint8x16_t)vcltzq_s8(vshlq_n_s8(vuzp1q_s8((int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*a1, *a2), (int32x4_t)vceqq_f64(a1[1], a2[1])), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(a1[2], a2[2]), (int32x4_t)vceqq_f64(a1[3], a2[3]))), (int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(a1[4], a2[4]), (int32x4_t)vceqq_f64(a1[5], a2[5])), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(a1[6], a2[6]), (int32x4_t)vceqq_f64(a1[7], a2[7])))), 7uLL))) & 1) != 0&& a1[8].f64[0] == a2[8].f64[0]&& a1[8].f64[1] == a2[8].f64[1]
    && a1[9].f64[0] == a2[9].f64[0])
  {
    return a1[9].f64[1] == a2[9].f64[1];
  }
  return result;
}

void sub_1AFE870AC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1AFE86968();
    unint64_t v7 = a3(a1, &type metadata for ArticleScoringConfiguration.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t getEnumTagSinglePayload for ArticleScoringConfiguration(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 160)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ArticleScoringConfiguration(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 152) = 0;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)BOOL result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 160) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ArticleScoringConfiguration()
{
  return &type metadata for ArticleScoringConfiguration;
}

uint64_t getEnumTagSinglePayload for ArticleScoringConfiguration.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xED) {
    goto LABEL_17;
  }
  if (a2 + 19 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 19) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 19;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 19;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 19;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x14;
  int v8 = v6 - 20;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ArticleScoringConfiguration.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 19 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 19) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xED) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEC)
  {
    unsigned int v6 = ((a2 - 237) >> 8) + 1;
    *BOOL result = a2 + 19;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFE872F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *BOOL result = a2 + 19;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ArticleScoringConfiguration.CodingKeys()
{
  return &type metadata for ArticleScoringConfiguration.CodingKeys;
}

unint64_t sub_1AFE8732C()
{
  unint64_t result = qword_1E9AFBD20;
  if (!qword_1E9AFBD20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBD20);
  }
  return result;
}

unint64_t sub_1AFE87384()
{
  unint64_t result = qword_1EB8197A0;
  if (!qword_1EB8197A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8197A0);
  }
  return result;
}

unint64_t sub_1AFE873DC()
{
  unint64_t result = qword_1EB819798;
  if (!qword_1EB819798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819798);
  }
  return result;
}

uint64_t sub_1AFE87430(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD00000000000001ELL && a2 == 0x80000001AFFF7910 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001AFFF7930 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001AFFF7950 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001AFFF7970 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001AFFF7990 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000027 && a2 == 0x80000001AFFF79B0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001AFFF79E0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001AFFED760 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001AFFED680 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001AFFED720 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001AFFED6E0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001AFFF7A00 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001AFFF7A20 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001AFFF7A40 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001AFFF7A60 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001AFFF7A80 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001AFFEDA10 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0x616E655064616572 && a2 == 0xEB0000000079746CLL || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001AFFF7AA0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0x6769655769626174 && a2 == 0xEA00000000007468)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else
  {
    char v5 = sub_1AFFCBCE8();
    swift_bridgeObjectRelease();
    if (v5) {
      return 19;
    }
    else {
      return 20;
    }
  }
}

uint64_t sub_1AFE87B58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1AFE87B6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_1AFE87B80()
{
  swift_getObjectType();
  sub_1AFDE4EF8(&v14);
  uint64_t v0 = v14;
  uint64_t v1 = *(void *)(v14 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    sub_1AFFC8E38();
    int v3 = (uint64_t *)(v0 + 56);
    unsigned int v4 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v6 = *v3;
      if (*v3)
      {
        uint64_t v7 = *(v3 - 1);
        sub_1AFFC8E38();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unsigned int v4 = sub_1AFD352FC(0, v4[2] + 1, 1, v4);
        }
        unint64_t v9 = v4[2];
        unint64_t v8 = v4[3];
        if (v9 >= v8 >> 1) {
          unsigned int v4 = sub_1AFD352FC((void *)(v8 > 1), v9 + 1, 1, v4);
        }
        v4[2] = v9 + 1;
        char v5 = &v4[2 * v9];
        v5[4] = v7;
        v5[5] = v6;
      }
      v3 += 6;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  else
  {
    unsigned int v4 = (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v10 = swift_bridgeObjectRelease();
  if (v4[2])
  {
    MEMORY[0x1F4188790](v10);
    sub_1AFDF4598();
    sub_1AFFCA7C8();
    swift_bridgeObjectRelease();
    uint64_t v11 = (void *)sub_1AFFCA5E8();
    sub_1AFDF461C(0, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB320]);
    uint64_t v12 = sub_1AFFCA678();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = v2;
    sub_1AFE33B34();
    swift_allocObject();
    return sub_1AFFCA6F8();
  }
  return v12;
}

uint64_t sub_1AFE87DA8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1AFFC8E38();
  uint64_t v3 = sub_1AFE87EEC(v2);
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v3;
  return result;
}

uint64_t type metadata accessor for NewsStockFeedIdentifierService()
{
  return self;
}

uint64_t sub_1AFE87E1C()
{
  return sub_1AFE87B80();
}

uint64_t sub_1AFE87E40()
{
  return sub_1AFFCA6F8();
}

uint64_t sub_1AFE87E94()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = v1[5];
  uint64_t v4 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v3);
  return sub_1AFE92B48(v2, v3, v4);
}

uint64_t sub_1AFE87EEC(uint64_t a1)
{
  uint64_t v2 = a1 + 64;
  uint64_t v3 = -1;
  uint64_t v4 = -1 << *(unsigned char *)(a1 + 32);
  if (-v4 < 64) {
    uint64_t v3 = ~(-1 << -(char)v4);
  }
  unint64_t v5 = v3 & *(void *)(a1 + 64);
  int64_t v6 = (unint64_t)(63 - v4) >> 6;
  uint64_t result = sub_1AFFC8E38();
  uint64_t v8 = 0;
  int64_t v9 = 0;
  uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  unint64_t v39 = (char *)(MEMORY[0x1E4FBC860] + 32);
LABEL_27:
  while (v5)
  {
    unint64_t v26 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    unint64_t v27 = v26 | (v9 << 6);
LABEL_26:
    uint64_t v28 = *(void *)(*(void *)(a1 + 56) + 8 * v27);
    sub_1AFFC8E38();
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v25 = 0;
    uint64_t v29 = v28;
    if (v28)
    {
      while (1)
      {
        unint64_t v11 = *(void *)(v29 + 16);
        if (v25 == v11) {
          break;
        }
        if (v25 >= v11) {
          goto LABEL_53;
        }
        uint64_t v12 = v29 + 16 * v25;
        uint64_t result = *(void *)(v12 + 40);
        uint64_t v37 = *(void *)(v12 + 32);
        uint64_t v38 = result;
        if (v8)
        {
          uint64_t result = sub_1AFFC8E38();
          uint64_t v13 = v10;
          BOOL v14 = __OFSUB__(v8--, 1);
          if (v14) {
            goto LABEL_54;
          }
        }
        else
        {
          unint64_t v15 = *((void *)v10 + 3);
          if ((uint64_t)((v15 >> 1) + 0x4000000000000000) < 0) {
            goto LABEL_57;
          }
          int64_t v16 = v15 & 0xFFFFFFFFFFFFFFFELL;
          if (v16 <= 1) {
            uint64_t v17 = 1;
          }
          else {
            uint64_t v17 = v16;
          }
          sub_1AFDF461C(0, (unint64_t *)&qword_1EB81A0E0, MEMORY[0x1E4FBBE00]);
          uint64_t v13 = (char *)swift_allocObject();
          int64_t v18 = _swift_stdlib_malloc_size(v13);
          uint64_t v19 = v18 - 32;
          if (v18 < 32) {
            uint64_t v19 = v18 - 17;
          }
          uint64_t v20 = v19 >> 4;
          *((void *)v13 + 2) = v17;
          *((void *)v13 + 3) = 2 * (v19 >> 4);
          unint64_t v21 = v13 + 32;
          uint64_t v22 = *((void *)v10 + 3) >> 1;
          unint64_t v39 = &v13[16 * v22 + 32];
          uint64_t v23 = (v20 & 0x7FFFFFFFFFFFFFFFLL) - v22;
          if (*((void *)v10 + 2))
          {
            unint64_t v24 = v10 + 32;
            if (v13 != v10 || v21 >= &v24[16 * v22]) {
              memmove(v21, v24, 16 * v22);
            }
            sub_1AFFC8E38();
            *((void *)v10 + 2) = 0;
          }
          else
          {
            sub_1AFFC8E38();
          }
          uint64_t result = swift_release();
          BOOL v14 = __OFSUB__(v23, 1);
          uint64_t v8 = v23 - 1;
          if (v14) {
            goto LABEL_54;
          }
        }
        ++v25;
        *(void *)unint64_t v39 = v37;
        *((void *)v39 + 1) = v38;
        v39 += 16;
        uint64_t v10 = v13;
        if (!v29) {
          goto LABEL_27;
        }
      }
    }
  }
  int64_t v30 = v9 + 1;
  if (__OFADD__(v9, 1))
  {
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  if (v30 >= v6) {
    goto LABEL_48;
  }
  unint64_t v31 = *(void *)(v2 + 8 * v30);
  if (v31)
  {
LABEL_37:
    unint64_t v5 = (v31 - 1) & v31;
    unint64_t v27 = __clz(__rbit64(v31)) + (v30 << 6);
    int64_t v9 = v30;
    goto LABEL_26;
  }
  int64_t v32 = v9 + 2;
  if (v9 + 2 >= v6) {
    goto LABEL_48;
  }
  unint64_t v31 = *(void *)(v2 + 8 * v32);
  if (v31)
  {
LABEL_33:
    int64_t v30 = v32;
    goto LABEL_37;
  }
  int64_t v33 = v9 + 3;
  if (v9 + 3 >= v6) {
    goto LABEL_48;
  }
  unint64_t v31 = *(void *)(v2 + 8 * v33);
  if (v31) {
    goto LABEL_36;
  }
  int64_t v32 = v9 + 4;
  if (v9 + 4 >= v6) {
    goto LABEL_48;
  }
  unint64_t v31 = *(void *)(v2 + 8 * v32);
  if (v31) {
    goto LABEL_33;
  }
  int64_t v33 = v9 + 5;
  if (v9 + 5 >= v6) {
    goto LABEL_48;
  }
  unint64_t v31 = *(void *)(v2 + 8 * v33);
  if (v31)
  {
LABEL_36:
    int64_t v30 = v33;
    goto LABEL_37;
  }
  int64_t v32 = v9 + 6;
  if (v9 + 6 >= v6)
  {
LABEL_48:
    sub_1AFD762B0();
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v34 = *((void *)v10 + 3);
    if (v34 >= 2)
    {
      unint64_t v35 = v34 >> 1;
      BOOL v14 = __OFSUB__(v35, v8);
      uint64_t v36 = v35 - v8;
      if (v14) {
        goto LABEL_56;
      }
      *((void *)v10 + 2) = v36;
    }
    return (uint64_t)v10;
  }
  unint64_t v31 = *(void *)(v2 + 8 * v32);
  if (v31) {
    goto LABEL_33;
  }
  while (1)
  {
    int64_t v30 = v32 + 1;
    if (__OFADD__(v32, 1)) {
      break;
    }
    if (v30 >= v6) {
      goto LABEL_48;
    }
    unint64_t v31 = *(void *)(v2 + 8 * v30);
    ++v32;
    if (v31) {
      goto LABEL_37;
    }
  }
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
  return result;
}

BOOL ExchangeStatus.isClosed.getter()
{
  return *v0 > 1u;
}

StocksCore::ExchangeStatus_optional __swiftcall ExchangeStatus.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1AFFCBA78();
  result.value = swift_bridgeObjectRelease();
  char v5 = 5;
  if (v3 < 5) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t ExchangeStatus.rawValue.getter()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1852141679;
      break;
    case 2:
      uint64_t result = 0x6465736F6C63;
      break;
    case 3:
      uint64_t result = 0x656B72614D657270;
      break;
    case 4:
      uint64_t result = 0x756F487265746661;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1AFE88360()
{
  unint64_t result = qword_1E9AFBD28;
  if (!qword_1E9AFBD28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBD28);
  }
  return result;
}

uint64_t sub_1AFE883B4()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFE884A8()
{
  sub_1AFFCAF68();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFE88584()
{
  return sub_1AFFCBE38();
}

StocksCore::ExchangeStatus_optional sub_1AFE88674(Swift::String *a1)
{
  return ExchangeStatus.init(rawValue:)(*a1);
}

void sub_1AFE88680(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE400000000000000;
      uint64_t v3 = 1852141679;
      goto LABEL_3;
    case 2:
      *a1 = 0x6465736F6C63;
      a1[1] = 0xE600000000000000;
      break;
    case 3:
      *a1 = 0x656B72614D657270;
      a1[1] = 0xE900000000000074;
      break;
    case 4:
      *a1 = 0x756F487265746661;
      a1[1] = 0xEA00000000007372;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1AFE88738()
{
  return sub_1AFFCB178();
}

uint64_t sub_1AFE88798()
{
  return sub_1AFFCB128();
}

uint64_t sub_1AFE887E8(unsigned __int8 *a1, char *a2)
{
  return sub_1AFDECC74(*a1, *a2);
}

unsigned char *storeEnumTagSinglePayload for ExchangeStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFE888C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExchangeStatus()
{
  return &type metadata for ExchangeStatus;
}

unint64_t sub_1AFE888F8()
{
  unint64_t result = qword_1EB816EC0;
  if (!qword_1EB816EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816EC0);
  }
  return result;
}

uint64_t type metadata accessor for SparklineOperation()
{
  uint64_t result = qword_1EB817508;
  if (!qword_1EB817508) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1AFE88998()
{
  return swift_initClassMetadata2();
}

BOOL sub_1AFE88A04()
{
  uint64_t v0 = sub_1AFFC96E8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  int v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFFCA7E8();
  uint64_t v4 = sub_1AFFC9698();
  uint64_t v6 = v5;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  BOOL result = 1;
  if (v6)
  {
    void v9[2] = v4;
    v9[3] = v6;
    v9[0] = 0xD000000000000010;
    v9[1] = 0x80000001AFFF7C90;
    sub_1AFD3AE10();
    char v7 = sub_1AFFCB6E8();
    swift_bridgeObjectRelease();
    if (v7) {
      return 0;
    }
  }
  return result;
}

void sub_1AFE88B50(uint64_t a1, uint64_t a2)
{
  int v3 = v2;
  uint64_t v13 = *(void *)&v2[qword_1EB817500];
  swift_bridgeObjectRetain_n();
  sub_1AFFB6B00(&v13);
  swift_bridgeObjectRelease();
  sub_1AFE8CB18(0, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB320]);
  sub_1AFE8AF80();
  uint64_t v6 = sub_1AFFCB3B8();
  swift_release();
  id v7 = v3;
  sub_1AFE8B5BC(v6);
  swift_bridgeObjectRelease();

  uint64_t v8 = (void *)sub_1AFFCA5E8();
  sub_1AFE8B894(0, (unint64_t *)&qword_1EB817E88, (void (*)(uint64_t))type metadata accessor for Chart);
  sub_1AFFCA548();
  swift_bridgeObjectRelease();

  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  *(void *)(v9 + 24) = a2;
  sub_1AFFC8E48();
  uint64_t v10 = (void *)sub_1AFFCA5E8();
  sub_1AFFCA678();
  swift_release();
  swift_release();

  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = a2;
  sub_1AFFC8E48();
  uint64_t v12 = (void *)sub_1AFFCA5E8();
  sub_1AFFCA6B8();
  swift_release();
  swift_release();
  swift_release();
}

uint64_t sub_1AFE88D70(uint64_t a1, void (*a2)(uint64_t, void))
{
  uint64_t v3 = MEMORY[0x1E4FBC868];
  uint64_t v7 = MEMORY[0x1E4FBC868];
  uint64_t v4 = *(void *)(*(void *)a1 + 16);
  if (v4)
  {
    sub_1AFFC8E38();
    type metadata accessor for Chart(0);
    uint64_t v5 = 0;
    do
    {
      ++v5;
      sub_1AFFC8E38();
      sub_1AFFCA4D8();
      swift_bridgeObjectRelease();
    }
    while (v4 != v5);
    swift_bridgeObjectRelease();
    uint64_t v3 = v7;
  }
  a2(v3, 0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFE88E6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  double v53 = a6;
  uint64_t v54 = a4;
  uint64_t v51 = a3;
  uint64_t v9 = sub_1AFFC98F8();
  MEMORY[0x1F4188790](v9 - 8);
  unint64_t v49 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1AFFC9E18();
  uint64_t v47 = *(void *)(v11 - 8);
  uint64_t v48 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1AFFC92C8();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a1;
  *(void *)(v18 + 24) = a2;
  uint64_t v50 = v18;
  sub_1AFFC8E48();
  sub_1AFFCB448();
  sub_1AFE8BAB4(0, (unint64_t *)&qword_1EB81A100, (unint64_t *)&qword_1EB81A120);
  uint64_t v19 = swift_allocObject();
  long long v46 = xmmword_1AFFD05F0;
  *(_OWORD *)(v19 + 16) = xmmword_1AFFD05F0;
  uint64_t v20 = MEMORY[0x1E4FBB1A0];
  uint64_t v21 = MEMORY[0x1B3E8D630](a5, MEMORY[0x1E4FBB1A0]);
  uint64_t v23 = v22;
  *(void *)(v19 + 56) = v20;
  *(void *)(v19 + 64) = sub_1AFD2CE00();
  *(void *)(v19 + 32) = v21;
  *(void *)(v19 + 40) = v23;
  sub_1AFD2C4F4();
  unint64_t v24 = (void *)sub_1AFFCB638();
  sub_1AFFCA878();
  swift_bridgeObjectRelease();

  int64_t v25 = *(void *)(a5 + 16);
  uint64_t v52 = a5;
  if (v25)
  {
    uint64_t v55 = MEMORY[0x1E4FBC860];
    sub_1AFD9DC60(0, v25, 0);
    uint64_t v26 = v55;
    uint64_t v27 = a5 + 40;
    do
    {
      sub_1AFFC8E38();
      sub_1AFFC92B8();
      swift_bridgeObjectRelease();
      uint64_t v55 = v26;
      unint64_t v29 = *(void *)(v26 + 16);
      unint64_t v28 = *(void *)(v26 + 24);
      if (v29 >= v28 >> 1)
      {
        sub_1AFD9DC60(v28 > 1, v29 + 1, 1);
        uint64_t v26 = v55;
      }
      v27 += 16;
      *(void *)(v26 + 16) = v29 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(v26+ ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))+ *(void *)(v15 + 72) * v29, v17, v14);
      --v25;
    }
    while (v25);
    uint64_t v30 = v54;
    uint64_t v31 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v30 = v54;
    uint64_t v31 = MEMORY[0x1E4FBC860];
  }
  sub_1AFE8B780();
  int64_t v32 = v53;
  sub_1AFFC8E48();
  sub_1AFE8AFF4(v31);
  (*(void (**)(char *, void, uint64_t))(v47 + 104))(v13, *MEMORY[0x1E4FAA980], v48);
  sub_1AFFC98E8();
  int64_t v33 = (void *)sub_1AFFCA0E8();
  sub_1AFE8BAB4(0, &qword_1EB8183B0, &qword_1EB817CE0);
  uint64_t v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = v46;
  sub_1AFFCA7E8();
  uint64_t v35 = v55;
  uint64_t v36 = v56;
  uint64_t v37 = type metadata accessor for SparklinesRequestSigner();
  uint64_t v38 = swift_allocObject();
  *(void *)(v38 + 16) = v35;
  *(void *)(v38 + 24) = v36;
  *(void *)(v34 + 56) = v37;
  *(void *)(v34 + 64) = sub_1AFE8BA6C(&qword_1EB817810, (void (*)(uint64_t))type metadata accessor for SparklinesRequestSigner);
  *(void *)(v34 + 32) = v38;
  sub_1AFFCA0F8();
  uint64_t v39 = swift_allocObject();
  *(void *)(v39 + 16) = v31;
  sub_1AFFC8E48();
  sub_1AFFCA0D8();
  unint64_t v40 = (void *)swift_allocObject();
  v40[2] = v52;
  v40[3] = v32;
  uint64_t v41 = v50;
  v40[4] = sub_1AFD47F4C;
  v40[5] = v41;
  uint64_t v42 = v51;
  v40[6] = v39;
  v40[7] = v42;
  v40[8] = v30;
  sub_1AFFC8E48();
  id v43 = v33;
  sub_1AFFC8E38();
  id v44 = v32;
  sub_1AFFC8E48();
  sub_1AFFC9F18();

  objc_msgSend(v43, sel_start);
  return swift_release();
}

uint64_t sub_1AFE893F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1AFFCA368();
  uint64_t v5 = *(void *)(v4 - 8);
  double v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (unint64_t *)(a2 + 16);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))(v8, a1, v4, v6);
  swift_beginAccess();
  unint64_t v10 = *(void *)(a2 + 16);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a2 + 16) = v10;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v10 = sub_1AFD3665C(0, *(void *)(v10 + 16) + 1, 1, v10);
    *uint64_t v9 = v10;
  }
  unint64_t v13 = *(void *)(v10 + 16);
  unint64_t v12 = *(void *)(v10 + 24);
  if (v13 >= v12 >> 1)
  {
    unint64_t v10 = sub_1AFD3665C(v12 > 1, v13 + 1, 1, v10);
    *uint64_t v9 = v10;
  }
  *(void *)(v10 + 16) = v13 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v10+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v13, v8, v4);
  return swift_endAccess();
}

void sub_1AFE89594(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5, uint64_t a6, void (*a7)(void *))
{
  uint64_t v7 = *(void **)a1;
  if (*(unsigned char *)(a1 + 8))
  {
    id v9 = v7;
    sub_1AFFCB468();
    sub_1AFE8BAB4(0, (unint64_t *)&qword_1EB81A100, (unint64_t *)&qword_1EB81A120);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1AFFD05F0;
    sub_1AFD2CDB0(0, (unint64_t *)&qword_1EB81A110);
    sub_1AFFCB928();
    *(void *)(v10 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v10 + 64) = sub_1AFD2CE00();
    *(void *)(v10 + 32) = 0;
    *(void *)(v10 + 40) = 0xE000000000000000;
    sub_1AFD2C4F4();
    uint64_t v11 = (void *)sub_1AFFCB638();
    sub_1AFFCA878();
    swift_bridgeObjectRelease();

    a7(v7);
    swift_beginAccess();
    uint64_t v12 = sub_1AFFC8E38();
    sub_1AFE8C63C(v12);
    swift_bridgeObjectRelease();
    sub_1AFE8C990(v7, 1);
    return;
  }
  uint64_t v14 = *(void *)(a2 + 16);
  if (!v14)
  {
LABEL_19:
    MEMORY[0x1F4188790](a1);
    sub_1AFE8B8F8();
    uint64_t v37 = sub_1AFFCACB8();
    uint64_t v38 = swift_bridgeObjectRelease();
    MEMORY[0x1F4188790](v38);
    type metadata accessor for Chart(0);
    uint64_t v39 = sub_1AFFCACB8();
    a4();
    sub_1AFFC8E38();
    uint64_t v40 = sub_1AFFC8E38();
    uint64_t v41 = sub_1AFE8BFA8(v40, v37);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v42 = sub_1AFFC8E38();
    sub_1AFE8C114(v42, v37, v39);
    uint64_t v44 = v43;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1AFE8C51C(v41);
    swift_beginAccess();
    uint64_t v45 = sub_1AFFC8E38();
    sub_1AFE8A34C(v45, v41, v44);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return;
  }
  sub_1AFFC8E38();
  uint64_t v15 = (uint64_t *)(a2 + 40);
  uint64_t v16 = (void *)MEMORY[0x1E4FBC868];
  while (1)
  {
    uint64_t v19 = *(v15 - 1);
    uint64_t v18 = *v15;
    uint64_t v20 = sub_1AFFCAF28();
    uint64_t v22 = v21;
    sub_1AFFC8E38();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v25 = sub_1AFD79CC8(v20, v22);
    uint64_t v26 = v16[2];
    BOOL v27 = (v24 & 1) == 0;
    uint64_t v28 = v26 + v27;
    if (__OFADD__(v26, v27)) {
      break;
    }
    char v29 = v24;
    if (v16[3] >= v28)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v24) {
          goto LABEL_5;
        }
      }
      else
      {
        sub_1AFEB8068();
        if (v29) {
          goto LABEL_5;
        }
      }
    }
    else
    {
      sub_1AFEB2018(v28, isUniquelyReferenced_nonNull_native);
      unint64_t v30 = sub_1AFD79CC8(v20, v22);
      if ((v29 & 1) != (v31 & 1)) {
        goto LABEL_22;
      }
      unint64_t v25 = v30;
      if (v29)
      {
LABEL_5:
        uint64_t v17 = (void *)(v16[7] + 16 * v25);
        swift_bridgeObjectRelease();
        *uint64_t v17 = v19;
        v17[1] = v18;
        goto LABEL_6;
      }
    }
    v16[(v25 >> 6) + 8] |= 1 << v25;
    int64_t v32 = (uint64_t *)(v16[6] + 16 * v25);
    *int64_t v32 = v20;
    v32[1] = v22;
    int64_t v33 = (void *)(v16[7] + 16 * v25);
    *int64_t v33 = v19;
    v33[1] = v18;
    uint64_t v34 = v16[2];
    BOOL v35 = __OFADD__(v34, 1);
    uint64_t v36 = v34 + 1;
    if (v35) {
      goto LABEL_21;
    }
    v16[2] = v36;
    sub_1AFFC8E38();
LABEL_6:
    v15 += 2;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!--v14)
    {
      a1 = swift_bridgeObjectRelease();
      goto LABEL_19;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  sub_1AFFCBD68();
  __break(1u);
}

uint64_t sub_1AFE89AB0(void *a1, void *a2, uint64_t *a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v8 = *a4;
  uint64_t v7 = a4[1];
  uint64_t v10 = a4[2];
  uint64_t v9 = a4[3];
  if (*(void *)(a5 + 16))
  {
    uint64_t v12 = *a3;
    uint64_t v13 = a3[1];
    sub_1AFFC8E38();
    unint64_t v14 = sub_1AFD79CC8(v12, v13);
    if (v15)
    {
      uint64_t v16 = (uint64_t *)(*(void *)(a5 + 56) + 16 * v14);
      uint64_t v17 = *v16;
      uint64_t v18 = v16[1];
      sub_1AFFC8E38();
    }
    else
    {
      uint64_t v17 = 0;
      uint64_t v18 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v17 = 0;
    uint64_t v18 = 0;
  }
  *a1 = v17;
  a1[1] = v18;
  *a2 = v8;
  a2[1] = v7;
  a2[2] = v10;
  a2[3] = v9;
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  return sub_1AFFC8E38();
}

void sub_1AFE89B84(_OWORD *a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  v18[1] = a5;
  uint64_t v20 = a2;
  uint64_t v19 = a1;
  sub_1AFE8CA70();
  uint64_t v8 = v7;
  double v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (void *)((char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = *a3;
  uint64_t v12 = a3[1];
  unint64_t v14 = *(void *)(a4 + 8);
  char v15 = (void *)MEMORY[0x1B3E8E580](v9);
  uint64_t v16 = v18[2];
  sub_1AFE89C9C(v14, v13, v12, v11);
  if (v16)
  {
    __break(1u);
  }
  else
  {
    uint64_t v17 = (uint64_t)v11 + *(int *)(v8 + 48);
    *uint64_t v19 = *(_OWORD *)v11;
    sub_1AFE8CB68(v17, v20);
  }
}

uint64_t sub_1AFE89C9C@<X0>(unint64_t a1@<X2>, uint64_t a2@<X5>, uint64_t a3@<X6>, void *a4@<X8>)
{
  unint64_t v58 = a4;
  uint64_t v59 = a3;
  uint64_t v53 = sub_1AFFC98F8();
  MEMORY[0x1F4188790](v53);
  uint64_t v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_1AFFC9B88();
  uint64_t v55 = *(void *)(v57 - 8);
  MEMORY[0x1F4188790](v57);
  uint64_t v56 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFD30DA8();
  uint64_t v52 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v54 = (uint64_t)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFE8CA1C(0, &qword_1EB817AC0, (void (*)(uint64_t))type metadata accessor for Chart);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v49 - v12;
  uint64_t v14 = type metadata accessor for Chart(0);
  uint64_t v60 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (uint64_t *)((char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1AFFC8E38();
  unint64_t v17 = sub_1AFDF9C40(MEMORY[0x1E4FBC860]);
  unint64_t v64 = v17;
  uint64_t v18 = *(void *)(a1 + 16);
  if (v18)
  {
    sub_1AFFC8E38();
    uint64_t v19 = (void *)(a1 + 56);
    do
    {
      uint64_t v20 = *v19;
      char v21 = *((unsigned char *)v19 - 8);
      long long v61 = *(_OWORD *)(v19 - 3);
      char v62 = v21;
      uint64_t v63 = v20;
      sub_1AFF3DB6C((uint64_t)&v61, 0, (uint64_t)&v64);
      v19 += 4;
      --v18;
    }
    while (v18);
    swift_bridgeObjectRelease();
    uint64_t v22 = v64;
  }
  else
  {
    uint64_t v22 = v17;
  }
  sub_1AFE2A034(v22, (uint64_t)v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v13, 1, v14) == 1)
  {
    sub_1AFE8CD50((uint64_t)v13, &qword_1EB817AC0, (void (*)(uint64_t))type metadata accessor for Chart);
    sub_1AFFCB468();
    sub_1AFE8BAB4(0, (unint64_t *)&qword_1EB81A100, (unint64_t *)&qword_1EB81A120);
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_1AFFD0610;
    uint64_t v24 = v60;
    uint64_t v25 = MEMORY[0x1E4FBB1A0];
    *(void *)(v23 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v26 = sub_1AFD2CE00();
    *(void *)(v23 + 64) = v26;
    uint64_t v27 = v59;
    *(void *)(v23 + 32) = a2;
    *(void *)(v23 + 40) = v27;
    *(void *)&long long v61 = 0;
    *((void *)&v61 + 1) = 0xE000000000000000;
    unint64_t v64 = a1;
    sub_1AFFC8E38();
    sub_1AFFCB928();
    long long v28 = v61;
    *(void *)(v23 + 96) = v25;
    *(void *)(v23 + 104) = v26;
    *(_OWORD *)(v23 + 72) = v28;
    sub_1AFD2C4F4();
    char v29 = (void *)sub_1AFFCB638();
    sub_1AFFCA878();
    swift_bridgeObjectRelease();

    sub_1AFE8CA70();
    char v31 = v58;
    int64_t v32 = (char *)v58 + *(int *)(v30 + 48);
    *unint64_t v58 = 0;
    v31[1] = 0;
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56))(v32, 1, 1, v14);
  }
  else
  {
    sub_1AFE8CDAC((uint64_t)v13, (uint64_t)v16, type metadata accessor for Chart);
    sub_1AFE8BAB4(0, (unint64_t *)&qword_1EB81A100, (unint64_t *)&qword_1EB81A120);
    uint64_t v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_1AFFD0610;
    *(void *)(v34 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v35 = sub_1AFD2CE00();
    *(void *)(v34 + 64) = v35;
    *(void *)(v34 + 32) = a2;
    uint64_t v49 = a2;
    uint64_t v36 = v59;
    *(void *)(v34 + 40) = v59;
    uint64_t v37 = (uint64_t)v16 + *(int *)(v14 + 20);
    *(void *)&long long v61 = 0;
    *((void *)&v61 + 1) = 0xE000000000000000;
    sub_1AFFC8E38();
    uint64_t v50 = v7;
    uint64_t v51 = v14;
    uint64_t v38 = v58;
    sub_1AFFCB928();
    sub_1AFFCAFA8();
    sub_1AFFCB928();
    long long v39 = v61;
    *(void *)(v34 + 96) = MEMORY[0x1E4FBB1A0];
    *(void *)(v34 + 104) = v35;
    *(_OWORD *)(v34 + 72) = v39;
    sub_1AFD2C4F4();
    uint64_t v40 = (void *)sub_1AFFCB638();
    sub_1AFFCB478();
    sub_1AFFCA878();
    swift_bridgeObjectRelease();

    sub_1AFE8CA70();
    uint64_t v42 = (void *)((char *)v38 + *(int *)(v41 + 48));
    *uint64_t v38 = v49;
    v38[1] = v36;
    sub_1AFFC8E38();
    unint64_t v43 = sub_1AFE8A8E0(v16, 600.0);
    uint64_t v44 = v54;
    sub_1AFE8CC68(v37, v54, (uint64_t (*)(void))sub_1AFD30DA8);
    uint64_t v45 = (char *)v16 + *(int *)(v51 + 24);
    uint64_t v46 = *(void *)v45;
    LOBYTE(v34) = v45[8];
    uint64_t v47 = (uint64_t)v56;
    (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v56, (char *)v16 + *(int *)(v51 + 28), v57);
    uint64_t v48 = (uint64_t)v50;
    sub_1AFFC98E8();
    sub_1AFD9B700(v43, v44, v46, v34, v47, v48, v42);
    sub_1AFE8CE14((uint64_t)v16, type metadata accessor for Chart);
    return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(v60 + 56))(v42, 0, 1, v51);
  }
}

uint64_t sub_1AFE8A34C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v36 = sub_1AFFCA368();
  uint64_t v7 = *(void *)(v36 - 8);
  MEMORY[0x1F4188790](v36);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for NetworkEvent();
  uint64_t v34 = *(void *)(v10 - 8);
  uint64_t v35 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_1AFE88A04())
  {
    uint64_t v13 = *(void *)(*(void *)(v3 + qword_1EB817500) + 16) - *(void *)(a2 + 16);
    *(void *)&long long v38 = *(void *)(*(void *)(v3 + qword_1EB817500) + 16);
    *((void *)&v38 + 1) = v13;
    uint64_t v39 = a2;
    uint64_t v40 = a3;
    uint64_t v41 = 0;
    uint64_t v42 = 0;
    uint64_t v14 = (void *)(v3 + qword_1EB8174E8);
    uint64_t v15 = *(void *)(v3 + qword_1EB8174E8 + 24);
    uint64_t v16 = *(void *)(v3 + qword_1EB8174E8 + 32);
    __swift_project_boxed_opaque_existential_1(v14, v15);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v17 = sub_1AFE8B114(a1, &v38);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    sub_1AFFBA8D8(v17, v15, v16);
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1AFD2CEB0(v3 + qword_1EB8174E8, (uint64_t)&v38);
    uint64_t v19 = v40;
    uint64_t v20 = v41;
    char v21 = __swift_project_boxed_opaque_existential_1(&v38, v40);
    int64_t v22 = *(void *)(a1 + 16);
    uint64_t v23 = MEMORY[0x1E4FBC860];
    if (v22)
    {
      uint64_t v30 = v21;
      uint64_t v31 = v20;
      uint64_t v32 = v19;
      uint64_t v37 = MEMORY[0x1E4FBC860];
      sub_1AFD9D910(0, v22, 0);
      uint64_t v24 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
      unint64_t v25 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
      uint64_t v33 = *(void *)(v7 + 72);
      unint64_t v26 = (void (**)(char *, uint64_t))(v7 + 8);
      do
      {
        uint64_t v27 = v36;
        v24(v9, v25, v36);
        v24(v12, (unint64_t)v9, v27);
        swift_storeEnumTagMultiPayload();
        (*v26)(v9, v27);
        uint64_t v23 = v37;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1AFD9D910(0, *(void *)(v23 + 16) + 1, 1);
          uint64_t v23 = v37;
        }
        unint64_t v29 = *(void *)(v23 + 16);
        unint64_t v28 = *(void *)(v23 + 24);
        if (v29 >= v28 >> 1)
        {
          sub_1AFD9D910(v28 > 1, v29 + 1, 1);
          uint64_t v23 = v37;
        }
        *(void *)(v23 + 16) = v29 + 1;
        sub_1AFE8CDAC((uint64_t)v12, v23+ ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80))+ *(void *)(v34 + 72) * v29, (uint64_t (*)(void))type metadata accessor for NetworkEvent);
        v25 += v33;
        --v22;
      }
      while (v22);
      uint64_t v20 = v31;
      uint64_t v19 = v32;
    }
    sub_1AFFBA8D8(v23, v19, v20);
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v38);
  }
}

void sub_1AFE8A704()
{
}

uint64_t sub_1AFE8A734()
{
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + qword_1EB8174E0);
  __swift_destroy_boxed_opaque_existential_1(v0 + qword_1EB8174E8);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFE8A7A4(uint64_t a1)
{
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + qword_1EB8174E0);
  __swift_destroy_boxed_opaque_existential_1(a1 + qword_1EB8174E8);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFE8A820(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  sub_1AFFC8E48();
  sub_1AFE88B50((uint64_t)sub_1AFD3AB90, v4);

  return swift_release();
}

uint64_t sub_1AFE8A8A0()
{
  return type metadata accessor for SparklineOperation();
}

uint64_t sub_1AFE8A8A8()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

unint64_t sub_1AFE8A8E0(uint64_t *a1, double a2)
{
  sub_1AFE8CBE8();
  uint64_t v51 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v53 = (uint64_t)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Chart.Entry(0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v54 = (uint64_t)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v49 = (uint64_t)&v47 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v47 - v12;
  sub_1AFE8CA1C(0, &qword_1EB817A80, (void (*)(uint64_t))type metadata accessor for Chart.Entry);
  MEMORY[0x1F4188790](v14 - 8);
  unint64_t v52 = (unint64_t)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v47 - v17;
  MEMORY[0x1F4188790](v19);
  char v21 = (char *)&v47 - v20;
  double v23 = MEMORY[0x1F4188790](v22);
  unint64_t v25 = (char *)&v47 - v24;
  unint64_t v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v7 + 56);
  v26((char *)&v47 - v24, 1, 1, v6, v23);
  uint64_t v27 = *a1;
  uint64_t v28 = sub_1AFFC8E38();
  uint64_t v55 = v25;
  unint64_t v29 = sub_1AFE8BBB8(v28, (uint64_t)v25, a2);
  swift_bridgeObjectRelease();
  uint64_t v30 = *(void *)(v27 + 16);
  if (v30)
  {
    unint64_t v50 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v31 = *(void *)(v7 + 72);
    sub_1AFE8CC68(v27 + v50 + v31 * (v30 - 1), (uint64_t)v13, type metadata accessor for Chart.Entry);
    uint64_t v32 = *(void *)(v29 + 16);
    uint64_t v33 = (uint64_t)v13;
    uint64_t v48 = v31;
    if (v32)
    {
      sub_1AFE8CC68(v29 + v50 + (v32 - 1) * v31, (uint64_t)v21, type metadata accessor for Chart.Entry);
      uint64_t v34 = 0;
    }
    else
    {
      uint64_t v34 = 1;
    }
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v26)(v21, v34, 1, v6);
    sub_1AFE8CC68((uint64_t)v13, (uint64_t)v18, type metadata accessor for Chart.Entry);
    ((void (*)(char *, void, uint64_t, uint64_t))v26)(v18, 0, 1, v6);
    uint64_t v36 = v53;
    uint64_t v37 = v53 + *(int *)(v51 + 48);
    sub_1AFE8CCD0((uint64_t)v21, v53);
    sub_1AFE8CCD0((uint64_t)v18, v37);
    long long v38 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    int v39 = v38(v36, 1, v6);
    uint64_t v40 = v52;
    if (v39 == 1)
    {
      unint64_t v52 = v29;
      sub_1AFE8CD50((uint64_t)v18, &qword_1EB817A80, (void (*)(uint64_t))type metadata accessor for Chart.Entry);
      unint64_t v29 = v52;
      sub_1AFE8CD50((uint64_t)v21, &qword_1EB817A80, (void (*)(uint64_t))type metadata accessor for Chart.Entry);
      int v41 = v38(v37, 1, v6);
      uint64_t v35 = (uint64_t)v55;
      if (v41 == 1)
      {
        sub_1AFE8CD50(v36, &qword_1EB817A80, (void (*)(uint64_t))type metadata accessor for Chart.Entry);
LABEL_17:
        sub_1AFE8CE14(v33, type metadata accessor for Chart.Entry);
        goto LABEL_18;
      }
    }
    else
    {
      sub_1AFE8CCD0(v36, v52);
      if (v38(v37, 1, v6) != 1)
      {
        uint64_t v46 = v49;
        sub_1AFE8CDAC(v37, v49, type metadata accessor for Chart.Entry);
        LODWORD(v51) = sub_1AFD9FC90(v40, v46);
        sub_1AFE8CE14(v46, type metadata accessor for Chart.Entry);
        sub_1AFE8CD50((uint64_t)v18, &qword_1EB817A80, (void (*)(uint64_t))type metadata accessor for Chart.Entry);
        sub_1AFE8CD50((uint64_t)v21, &qword_1EB817A80, (void (*)(uint64_t))type metadata accessor for Chart.Entry);
        sub_1AFE8CE14(v40, type metadata accessor for Chart.Entry);
        sub_1AFE8CD50(v36, &qword_1EB817A80, (void (*)(uint64_t))type metadata accessor for Chart.Entry);
        uint64_t v35 = (uint64_t)v55;
        if (v51) {
          goto LABEL_17;
        }
LABEL_12:
        sub_1AFE8CC68(v33, v54, type metadata accessor for Chart.Entry);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v29 = sub_1AFD366A4(0, *(void *)(v29 + 16) + 1, 1, v29);
        }
        uint64_t v42 = v48;
        unint64_t v44 = *(void *)(v29 + 16);
        unint64_t v43 = *(void *)(v29 + 24);
        if (v44 >= v43 >> 1) {
          unint64_t v29 = sub_1AFD366A4(v43 > 1, v44 + 1, 1, v29);
        }
        *(void *)(v29 + 16) = v44 + 1;
        sub_1AFE8CDAC(v54, v29 + v50 + v44 * v42, type metadata accessor for Chart.Entry);
        goto LABEL_17;
      }
      sub_1AFE8CD50((uint64_t)v18, &qword_1EB817A80, (void (*)(uint64_t))type metadata accessor for Chart.Entry);
      sub_1AFE8CD50((uint64_t)v21, &qword_1EB817A80, (void (*)(uint64_t))type metadata accessor for Chart.Entry);
      sub_1AFE8CE14(v40, type metadata accessor for Chart.Entry);
      uint64_t v35 = (uint64_t)v55;
    }
    sub_1AFE8CE14(v36, (uint64_t (*)(void))sub_1AFE8CBE8);
    goto LABEL_12;
  }
  uint64_t v35 = (uint64_t)v55;
LABEL_18:
  sub_1AFE8CD50(v35, &qword_1EB817A80, (void (*)(uint64_t))type metadata accessor for Chart.Entry);
  return v29;
}

unint64_t sub_1AFE8AF80()
{
  unint64_t result = qword_1EB818038;
  if (!qword_1EB818038)
  {
    sub_1AFE8CB18(255, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818038);
  }
  return result;
}

unint64_t sub_1AFE8AFF4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1AFE8CE74();
  uint64_t v2 = (void *)sub_1AFFCBA08();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  sub_1AFFC8E48();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    unint64_t result = sub_1AFD79CC8(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v11 = v5;
    v11[1] = v6;
    uint64_t v12 = (void *)(v2[7] + 16 * result);
    *uint64_t v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1AFE8B114(uint64_t a1, _OWORD *a2)
{
  uint64_t v23 = type metadata accessor for NetworkEvent();
  uint64_t v5 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (v8)
  {
    uint64_t v18 = v2;
    uint64_t v24 = MEMORY[0x1E4FBC860];
    sub_1AFD9D910(0, v8, 0);
    uint64_t v9 = v24;
    uint64_t v22 = sub_1AFFCA368();
    uint64_t v10 = *(void *)(v22 - 8);
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    uint64_t v21 = *(void *)(v10 + 72);
    sub_1AFD31570();
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    uint64_t v20 = v12;
    do
    {
      uint64_t v13 = &v7[*(int *)(v20 + 48)];
      v19(v7, v11, v22);
      long long v14 = a2[1];
      *(_OWORD *)uint64_t v13 = *a2;
      *((_OWORD *)v13 + 1) = v14;
      *((_OWORD *)v13 + 2) = a2[2];
      swift_storeEnumTagMultiPayload();
      sub_1AFE8C9D4((uint64_t)a2);
      uint64_t v24 = v9;
      unint64_t v16 = *(void *)(v9 + 16);
      unint64_t v15 = *(void *)(v9 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_1AFD9D910(v15 > 1, v16 + 1, 1);
        uint64_t v9 = v24;
      }
      *(void *)(v9 + 16) = v16 + 1;
      sub_1AFE8CDAC((uint64_t)v7, v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v16, (uint64_t (*)(void))type metadata accessor for NetworkEvent);
      v11 += v21;
      --v8;
    }
    while (v8);
  }
  return v9;
}

uint64_t sub_1AFE8B35C(uint64_t a1, uint64_t a2)
{
  uint64_t v27 = type metadata accessor for NetworkEvent();
  uint64_t v5 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (!v8) {
    return MEMORY[0x1E4FBC860];
  }
  v21[1] = v2;
  uint64_t v28 = MEMORY[0x1E4FBC860];
  sub_1AFD9D910(0, v8, 0);
  uint64_t v10 = v28;
  uint64_t v11 = sub_1AFFCA368();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = v12;
  uint64_t v14 = a1 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  uint64_t v25 = *(void *)(a2 + qword_1EB817500);
  uint64_t v26 = v11;
  uint64_t v24 = *(void *)(v12 + 72);
  sub_1AFD31570();
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  uint64_t v23 = v15;
  do
  {
    unint64_t v16 = &v7[*(int *)(v23 + 48)];
    v22(v7, v14, v26);
    *(void *)unint64_t v16 = *(void *)(v25 + 16);
    *((void *)v16 + 1) = 0;
    *((void *)v16 + 2) = v9;
    *((void *)v16 + 3) = v9;
    uint64_t v17 = v9;
    *((void *)v16 + 4) = 0;
    *((void *)v16 + 5) = 0;
    swift_storeEnumTagMultiPayload();
    uint64_t v28 = v10;
    unint64_t v19 = *(void *)(v10 + 16);
    unint64_t v18 = *(void *)(v10 + 24);
    if (v19 >= v18 >> 1)
    {
      sub_1AFD9D910(v18 > 1, v19 + 1, 1);
      uint64_t v10 = v28;
    }
    *(void *)(v10 + 16) = v19 + 1;
    sub_1AFE8CDAC((uint64_t)v7, v10+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v19, (uint64_t (*)(void))type metadata accessor for NetworkEvent);
    v14 += v24;
    --v8;
    uint64_t v9 = v17;
  }
  while (v8);
  return v10;
}

uint64_t sub_1AFE8B5BC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v6 = MEMORY[0x1E4FBC860];
    sub_1AFFCB8B8();
    uint64_t v4 = a1 + 32;
    sub_1AFE8B70C();
    do
    {
      v4 += 8;
      MEMORY[0x1F4188790](v5);
      swift_allocObject();
      sub_1AFFC8E38();
      sub_1AFFCA758();
      swift_bridgeObjectRelease();
      sub_1AFFCB888();
      sub_1AFFCB8C8();
      sub_1AFFCB8D8();
      uint64_t v5 = sub_1AFFCB898();
      --v2;
    }
    while (v2);
    return v6;
  }
  return result;
}

uint64_t sub_1AFE8B6E8(uint64_t a1)
{
  return sub_1AFE88D70(a1, *(void (**)(uint64_t, void))(v1 + 16));
}

uint64_t sub_1AFE8B704(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AFE88E6C(a1, a2, a3, a4, *(void *)(v4 + 16), *(void **)(v4 + 24));
}

void sub_1AFE8B70C()
{
  if (!qword_1EB8168E0)
  {
    sub_1AFE8B894(255, (unint64_t *)&qword_1EB817E88, (void (*)(uint64_t))type metadata accessor for Chart);
    unint64_t v0 = sub_1AFFCA788();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8168E0);
    }
  }
}

void sub_1AFE8B780()
{
  if (!qword_1EB817CD8)
  {
    sub_1AFE8B814();
    sub_1AFE8BA6C(&qword_1EB817CC8, (void (*)(uint64_t))sub_1AFE8B814);
    unint64_t v0 = sub_1AFFCA128();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB817CD8);
    }
  }
}

void sub_1AFE8B814()
{
  if (!qword_1EB817CD0)
  {
    sub_1AFE8B894(255, &qword_1EB817E68, (void (*)(uint64_t))sub_1AFE8B8F8);
    sub_1AFE8B9A8();
    unint64_t v0 = sub_1AFFCA0C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB817CD0);
    }
  }
}

void sub_1AFE8B894(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1AFFCAD18();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1AFE8B8F8()
{
  if (!qword_1EB8173F8)
  {
    sub_1AFE8B954();
    unint64_t v0 = type metadata accessor for YahooBaseResponse();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8173F8);
    }
  }
}

unint64_t sub_1AFE8B954()
{
  unint64_t result = qword_1EB817658;
  if (!qword_1EB817658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817658);
  }
  return result;
}

unint64_t sub_1AFE8B9A8()
{
  unint64_t result = qword_1EB817E70;
  if (!qword_1EB817E70)
  {
    sub_1AFE8B894(255, &qword_1EB817E68, (void (*)(uint64_t))sub_1AFE8B8F8);
    sub_1AFE8BA6C(&qword_1EB8173F0, (void (*)(uint64_t))sub_1AFE8B8F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817E70);
  }
  return result;
}

uint64_t sub_1AFE8BA6C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1AFE8BAB4(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1AFD2CDB0(255, a3);
    unint64_t v4 = sub_1AFFCBC98();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1AFE8BB0C()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1AFE8BB44(uint64_t a1)
{
  return sub_1AFE893F8(a1, v1);
}

uint64_t sub_1AFE8BB4C()
{
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 72, 7);
}

void sub_1AFE8BBA4(uint64_t a1)
{
  sub_1AFE89594(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void (**)(void))(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void (**)(void *))(v1 + 56));
}

uint64_t sub_1AFE8BBB8(uint64_t a1, uint64_t a2, double a3)
{
  sub_1AFE8CA1C(0, &qword_1EB817A80, (void (*)(uint64_t))type metadata accessor for Chart.Entry);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v30 - v8;
  uint64_t v10 = type metadata accessor for Chart.Entry(0);
  MEMORY[0x1F4188790](v10);
  uint64_t v36 = (uint64_t)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v31 = (uint64_t)&v30 - v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v30 - v16;
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v37 = MEMORY[0x1E4FBC860];
  uint64_t v19 = *(void *)(a1 + 16);
  if (v19)
  {
    uint64_t v30 = v3;
    uint64_t v20 = *(void *)(v15 + 72);
    unint64_t v33 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    uint64_t v34 = v10;
    uint64_t v21 = a1 + v33;
    uint64_t v35 = (unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    uint64_t v32 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56);
    while (1)
    {
      sub_1AFE8CC68(v21, (uint64_t)v17, type metadata accessor for Chart.Entry);
      sub_1AFE8CCD0(a2, (uint64_t)v9);
      if ((*v35)(v9, 1, v10) == 1) {
        break;
      }
      uint64_t v22 = v31;
      sub_1AFE8CDAC((uint64_t)v9, v31, type metadata accessor for Chart.Entry);
      sub_1AFFC9888();
      double v24 = v23;
      sub_1AFFC9888();
      double v26 = v25;
      sub_1AFE8CE14(v22, type metadata accessor for Chart.Entry);
      if (v24 - v26 >= a3) {
        goto LABEL_8;
      }
      sub_1AFE8CE14((uint64_t)v17, type metadata accessor for Chart.Entry);
LABEL_4:
      v21 += v20;
      if (!--v19) {
        return v37;
      }
    }
    sub_1AFE8CD50((uint64_t)v9, &qword_1EB817A80, (void (*)(uint64_t))type metadata accessor for Chart.Entry);
LABEL_8:
    sub_1AFE8CD50(a2, &qword_1EB817A80, (void (*)(uint64_t))type metadata accessor for Chart.Entry);
    sub_1AFE8CC68((uint64_t)v17, a2, type metadata accessor for Chart.Entry);
    (*v32)(a2, 0, 1, v10);
    sub_1AFE8CDAC((uint64_t)v17, v36, type metadata accessor for Chart.Entry);
    uint64_t v27 = v37;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1AFD9D960(0, *(void *)(v27 + 16) + 1, 1);
      uint64_t v27 = v37;
    }
    unint64_t v29 = *(void *)(v27 + 16);
    unint64_t v28 = *(void *)(v27 + 24);
    if (v29 >= v28 >> 1)
    {
      sub_1AFD9D960(v28 > 1, v29 + 1, 1);
      uint64_t v27 = v37;
    }
    *(void *)(v27 + 16) = v29 + 1;
    sub_1AFE8CDAC(v36, v27 + v33 + v29 * v20, type metadata accessor for Chart.Entry);
    uint64_t v10 = v34;
    goto LABEL_4;
  }
  return result;
}

uint64_t sub_1AFE8BFA8(uint64_t result, uint64_t a2)
{
  unint64_t v2 = *(void *)(result + 16);
  if (!v2) {
    return MEMORY[0x1E4FBC860];
  }
  unint64_t v4 = 0;
  uint64_t v5 = result + 40;
  uint64_t v6 = -(uint64_t)v2;
  uint64_t v7 = MEMORY[0x1E4FBC860];
  uint64_t v19 = result + 40;
  unint64_t v20 = *(void *)(result + 16);
  do
  {
    if (v4 <= v2) {
      unint64_t v8 = v2;
    }
    else {
      unint64_t v8 = v4;
    }
    uint64_t v9 = -(uint64_t)v8;
    for (uint64_t i = (uint64_t *)(v5 + 16 * v4++); ; i += 2)
    {
      if (v9 + v4 == 1)
      {
        __break(1u);
        return result;
      }
      uint64_t v12 = *(i - 1);
      uint64_t v11 = *i;
      uint64_t v13 = *(void *)(a2 + 16);
      sub_1AFFC8E38();
      if (!v13) {
        break;
      }
      sub_1AFFC8E38();
      sub_1AFD79CC8(v12, v11);
      char v15 = v14;
      swift_bridgeObjectRelease();
      if ((v15 & 1) == 0) {
        break;
      }
      uint64_t result = swift_bridgeObjectRelease();
      ++v4;
      if (v6 + v4 == 1) {
        return v7;
      }
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0) {
      uint64_t result = sub_1AFD9DA10(0, *(void *)(v7 + 16) + 1, 1);
    }
    unint64_t v17 = *(void *)(v7 + 16);
    unint64_t v16 = *(void *)(v7 + 24);
    if (v17 >= v16 >> 1) {
      uint64_t result = sub_1AFD9DA10(v16 > 1, v17 + 1, 1);
    }
    *(void *)(v7 + 16) = v17 + 1;
    uint64_t v18 = v7 + 16 * v17;
    *(void *)(v18 + 32) = v12;
    *(void *)(v18 + 40) = v11;
    uint64_t v5 = v19;
    unint64_t v2 = v20;
  }
  while (v6 + v4);
  return v7;
}

void sub_1AFE8C114(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v41 = a2;
  sub_1AFE8CA1C(0, &qword_1EB817AC0, (void (*)(uint64_t))type metadata accessor for Chart);
  MEMORY[0x1F4188790](v6 - 8);
  unint64_t v8 = (char *)&v35 - v7;
  unint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
    uint64_t v39 = MEMORY[0x1E4FBC860];
    return;
  }
  unint64_t v10 = 0;
  uint64_t v11 = a1 + 40;
  uint64_t v43 = -(uint64_t)v9;
  uint64_t v38 = v3;
  uint64_t v39 = MEMORY[0x1E4FBC860];
  uint64_t v42 = (char *)&v35 - v7;
  uint64_t v40 = a3;
  uint64_t v36 = a1 + 40;
  unint64_t v37 = v9;
  do
  {
    if (v10 <= v9) {
      unint64_t v12 = v9;
    }
    else {
      unint64_t v12 = v10;
    }
    uint64_t v44 = -(uint64_t)v12;
    uint64_t v13 = (uint64_t *)(v11 + 16 * v10++);
    uint64_t v14 = v41;
    while (1)
    {
      if (v44 + v10 == 1)
      {
        __break(1u);
        return;
      }
      if (*(void *)(v14 + 16)) {
        break;
      }
LABEL_8:
      ++v10;
      v13 += 2;
      if (v43 + v10 == 1) {
        return;
      }
    }
    uint64_t v16 = *(v13 - 1);
    uint64_t v15 = *v13;
    swift_bridgeObjectRetain_n();
    sub_1AFD79CC8(v16, v15);
    char v18 = v17;
    swift_bridgeObjectRelease();
    if ((v18 & 1) == 0) {
      goto LABEL_7;
    }
    if (*(void *)(a3 + 16))
    {
      sub_1AFFC8E38();
      unint64_t v19 = sub_1AFD79CC8(v16, v15);
      if (v20)
      {
        unint64_t v21 = v19;
        uint64_t v22 = *(void *)(a3 + 56);
        uint64_t v23 = type metadata accessor for Chart(0);
        uint64_t v24 = *(void *)(v23 - 8);
        uint64_t v25 = v22 + *(void *)(v24 + 72) * v21;
        uint64_t v14 = v41;
        uint64_t v26 = (uint64_t)v42;
        sub_1AFE8CC68(v25, (uint64_t)v42, type metadata accessor for Chart);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v24 + 56))(v26, 0, 1, v23);
        a3 = v40;
      }
      else
      {
        uint64_t v23 = type metadata accessor for Chart(0);
        uint64_t v26 = (uint64_t)v42;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v42, 1, 1, v23);
      }
      swift_bridgeObjectRelease();
      type metadata accessor for Chart(0);
      unint64_t v8 = (char *)v26;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48))(v26, 1, v23) == 1) {
        goto LABEL_19;
      }
      sub_1AFE8CD50(v26, &qword_1EB817AC0, (void (*)(uint64_t))type metadata accessor for Chart);
LABEL_7:
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    uint64_t v27 = type metadata accessor for Chart(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v8, 1, 1, v27);
LABEL_19:
    sub_1AFE8CD50((uint64_t)v8, &qword_1EB817AC0, (void (*)(uint64_t))type metadata accessor for Chart);
    uint64_t v28 = v39;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v30 = v28;
    uint64_t v45 = v28;
    uint64_t v31 = a3;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1AFD9DA10(0, *(void *)(v28 + 16) + 1, 1);
      uint64_t v30 = v45;
    }
    unint64_t v9 = v37;
    unint64_t v33 = *(void *)(v30 + 16);
    unint64_t v32 = *(void *)(v30 + 24);
    if (v33 >= v32 >> 1)
    {
      sub_1AFD9DA10(v32 > 1, v33 + 1, 1);
      uint64_t v30 = v45;
    }
    *(void *)(v30 + 16) = v33 + 1;
    uint64_t v39 = v30;
    uint64_t v34 = v30 + 16 * v33;
    *(void *)(v34 + 32) = v16;
    *(void *)(v34 + 40) = v15;
    a3 = v31;
    unint64_t v8 = v42;
    uint64_t v11 = v36;
  }
  while (v43 + v10);
}

void sub_1AFE8C51C(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_1AFFCB468();
    sub_1AFE8BAB4(0, (unint64_t *)&qword_1EB81A100, (unint64_t *)&qword_1EB81A120);
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_1AFFD05F0;
    uint64_t v3 = MEMORY[0x1E4FBB1A0];
    uint64_t v4 = MEMORY[0x1B3E8D630](a1, MEMORY[0x1E4FBB1A0]);
    uint64_t v6 = v5;
    *(void *)(v2 + 56) = v3;
    *(void *)(v2 + 64) = sub_1AFD2CE00();
    *(void *)(v2 + 32) = v4;
    *(void *)(v2 + 40) = v6;
    sub_1AFD2C4F4();
    id v7 = (id)sub_1AFFCB638();
    sub_1AFFCA878();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1AFE8C63C(uint64_t a1)
{
  uint64_t v33 = sub_1AFFCA368();
  uint64_t v3 = *(void *)(v33 - 8);
  MEMORY[0x1F4188790](v33);
  uint64_t v5 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for NetworkEvent();
  uint64_t v31 = *(void *)(v6 - 8);
  uint64_t v32 = v6;
  MEMORY[0x1F4188790](v6);
  unint64_t v8 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v9 = sub_1AFE88A04();
  unint64_t v10 = &v1[qword_1EB8174E8];
  if (v9)
  {
    uint64_t v11 = *((void *)v10 + 3);
    uint64_t v12 = *((void *)v10 + 4);
    __swift_project_boxed_opaque_existential_1(v10, v11);
    uint64_t v13 = v1;
    uint64_t v14 = sub_1AFE8B35C(a1, (uint64_t)v13);

    sub_1AFFBA8D8(v14, v11, v12);
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1AFD2CEB0((uint64_t)v10, (uint64_t)v35);
    uint64_t v16 = v36;
    uint64_t v17 = v37;
    char v18 = __swift_project_boxed_opaque_existential_1(v35, v36);
    int64_t v19 = *(void *)(a1 + 16);
    uint64_t v20 = MEMORY[0x1E4FBC860];
    if (v19)
    {
      v27[1] = v18;
      uint64_t v28 = v17;
      uint64_t v29 = v16;
      uint64_t v34 = MEMORY[0x1E4FBC860];
      sub_1AFD9D910(0, v19, 0);
      unint64_t v21 = *(void (**)(char *, unint64_t, uint64_t))(v3 + 16);
      unint64_t v22 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
      uint64_t v30 = *(void *)(v3 + 72);
      uint64_t v23 = (void (**)(char *, uint64_t))(v3 + 8);
      do
      {
        uint64_t v24 = v33;
        v21(v5, v22, v33);
        v21(v8, (unint64_t)v5, v24);
        swift_storeEnumTagMultiPayload();
        (*v23)(v5, v24);
        uint64_t v20 = v34;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1AFD9D910(0, *(void *)(v20 + 16) + 1, 1);
          uint64_t v20 = v34;
        }
        unint64_t v26 = *(void *)(v20 + 16);
        unint64_t v25 = *(void *)(v20 + 24);
        if (v26 >= v25 >> 1)
        {
          sub_1AFD9D910(v25 > 1, v26 + 1, 1);
          uint64_t v20 = v34;
        }
        *(void *)(v20 + 16) = v26 + 1;
        sub_1AFE8CDAC((uint64_t)v8, v20+ ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80))+ *(void *)(v31 + 72) * v26, (uint64_t (*)(void))type metadata accessor for NetworkEvent);
        v22 += v30;
        --v19;
      }
      while (v19);
      uint64_t v17 = v28;
      uint64_t v16 = v29;
    }
    sub_1AFFBA8D8(v20, v16, v17);
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  }
}

void sub_1AFE8C990(id a1, char a2)
{
  if (a2) {

  }
  else {
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1AFE8C99C(void *a1, void *a2, uint64_t *a3, uint64_t *a4)
{
  return sub_1AFE89AB0(a1, a2, a3, a4, *(void *)(v4 + 16));
}

void sub_1AFE8C9B8(_OWORD *a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  sub_1AFE89B84(a1, a2, a3, a4, *(void *)(v4 + 16));
}

uint64_t sub_1AFE8C9D4(uint64_t a1)
{
  return a1;
}

void sub_1AFE8CA1C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1AFFCB658();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1AFE8CA70()
{
  if (!qword_1EB817F10)
  {
    sub_1AFE8CB18(255, (unint64_t *)&qword_1EB819C90, MEMORY[0x1E4FBB718]);
    sub_1AFE8CA1C(255, &qword_1EB817AC0, (void (*)(uint64_t))type metadata accessor for Chart);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB817F10);
    }
  }
}

void sub_1AFE8CB18(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, void))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x1E4FBB1A0]);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1AFE8CB68(uint64_t a1, uint64_t a2)
{
  sub_1AFE8CA1C(0, &qword_1EB817AC0, (void (*)(uint64_t))type metadata accessor for Chart);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1AFE8CBE8()
{
  if (!qword_1EB816A88)
  {
    sub_1AFE8CA1C(255, &qword_1EB817A80, (void (*)(uint64_t))type metadata accessor for Chart.Entry);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB816A88);
    }
  }
}

uint64_t sub_1AFE8CC68(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1AFE8CCD0(uint64_t a1, uint64_t a2)
{
  sub_1AFE8CA1C(0, &qword_1EB817A80, (void (*)(uint64_t))type metadata accessor for Chart.Entry);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AFE8CD50(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1AFE8CA1C(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1AFE8CDAC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1AFE8CE14(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1AFE8CE74()
{
  if (!qword_1EB819F00)
  {
    unint64_t v0 = sub_1AFFCBA18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB819F00);
    }
  }
}

uint64_t sub_1AFE8CEE4()
{
  uint64_t v1 = *v0;
  sub_1AFFC8E38();
  return v1;
}

uint64_t sub_1AFE8CF14()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_1AFFC8E38();
  return v1;
}

uint64_t sub_1AFE8CF44@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t sub_1AFE8CF54()
{
  if (*v0) {
    return 0x65756C6176;
  }
  else {
    return 1701667182;
  }
}

uint64_t sub_1AFE8CF84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1AFE8F40C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AFE8CFAC(uint64_t a1)
{
  unint64_t v2 = sub_1AFE8E9A8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFE8CFE8(uint64_t a1)
{
  unint64_t v2 = sub_1AFE8E9A8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFE8D024(void *a1)
{
  sub_1AFE8EAA4(0, &qword_1EB81A0A8, (uint64_t (*)(void))sub_1AFE8E9A8, (uint64_t)&type metadata for ExternalAnalyticsQueryParameterConfig.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v11 - v6;
  uint64_t v8 = *(void *)(v1 + 16);
  v11[1] = *(void *)(v1 + 24);
  void v11[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFE8E9A8();
  sub_1AFFCBE78();
  char v13 = 0;
  uint64_t v9 = v11[3];
  sub_1AFFCBC08();
  if (!v9)
  {
    char v12 = 1;
    sub_1AFFCBC08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1AFE8D1CC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v20 = a2;
  sub_1AFE8EAA4(0, &qword_1EB819FF0, (uint64_t (*)(void))sub_1AFE8E9A8, (uint64_t)&type metadata for ExternalAnalyticsQueryParameterConfig.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v19 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFE8E9A8();
  sub_1AFFCBE68();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  unint64_t v10 = v20;
  char v22 = 0;
  uint64_t v11 = sub_1AFFCBB18();
  uint64_t v13 = v12;
  char v21 = 1;
  sub_1AFFC8E38();
  uint64_t v14 = sub_1AFFCBB18();
  uint64_t v16 = v15;
  uint64_t v17 = *(void (**)(char *, uint64_t))(v9 + 8);
  uint64_t v19 = v14;
  v17(v8, v5);
  *unint64_t v10 = v11;
  v10[1] = v13;
  void v10[2] = v19;
  v10[3] = v16;
  sub_1AFFC8E38();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFE8D40C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1AFE8D1CC(a1, a2);
}

uint64_t sub_1AFE8D424(void *a1)
{
  return sub_1AFE8D024(a1);
}

uint64_t sub_1AFE8D440()
{
  uint64_t v1 = *v0;
  sub_1AFFC8E38();
  return v1;
}

uint64_t sub_1AFE8D470(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*sub_1AFE8D4A8())()
{
  return nullsub_1;
}

uint64_t sub_1AFE8D4C8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_1AFFC8E38();
  return v1;
}

uint64_t sub_1AFE8D4F8(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*sub_1AFE8D530())()
{
  return nullsub_1;
}

uint64_t sub_1AFE8D550()
{
  uint64_t v1 = *(void *)(v0 + 32);
  sub_1AFFC8E38();
  return v1;
}

uint64_t sub_1AFE8D580(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*sub_1AFE8D5B8())()
{
  return nullsub_1;
}

uint64_t sub_1AFE8D5D8()
{
  return sub_1AFFC8E38();
}

uint64_t sub_1AFE8D5E0()
{
  return sub_1AFFC8E38();
}

uint64_t sub_1AFE8D5E8()
{
  return *(unsigned __int8 *)(v0 + 64);
}

uint64_t sub_1AFE8D5F0()
{
  return sub_1AFFC8E38();
}

uint64_t sub_1AFE8D5F8@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10, uint64_t a11)
{
  uint64_t v11 = a11;
  uint64_t v12 = MEMORY[0x1E4FBC860];
  *(void *)a9 = result;
  *(void *)(a9 + 8) = a2;
  if (a7) {
    uint64_t v13 = a7;
  }
  else {
    uint64_t v13 = v12;
  }
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  if (a8) {
    uint64_t v14 = a8;
  }
  else {
    uint64_t v14 = v12;
  }
  if (!a11) {
    uint64_t v11 = v12;
  }
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = v13;
  *(void *)(a9 + 56) = v14;
  *(unsigned char *)(a9 + 64) = a10 & 1;
  *(void *)(a9 + 72) = v11;
  return result;
}

uint64_t sub_1AFE8D640@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1AFE8EAA4(0, &qword_1EB819FE0, (uint64_t (*)(void))sub_1AFE8E9FC, (uint64_t)&type metadata for ExternalAnalyticsConfiguration.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v53 - v8;
  uint64_t v10 = a1[3];
  unint64_t v64 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_1AFE8E9FC();
  sub_1AFFCBE68();
  if (!v2)
  {
    uint64_t v11 = v7;
    char v68 = (void *)MEMORY[0x1E4FBC860];
    unsigned __int8 v67 = 0;
    sub_1AFFCBAF8();
    uint64_t v12 = v66;
    uint64_t v63 = v65;
    uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
    if (!v66)
    {
      swift_beginAccess();
      uint64_t v13 = v68;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v13 = sub_1AFD352FC(0, v13[2] + 1, 1, v13);
      }
      unint64_t v15 = v13[2];
      unint64_t v14 = v13[3];
      if (v15 >= v14 >> 1) {
        uint64_t v13 = sub_1AFD352FC((void *)(v14 > 1), v15 + 1, 1, v13);
      }
      v13[2] = v15 + 1;
      uint64_t v16 = &v13[2 * v15];
      v16[4] = 0xD000000000000010;
      v16[5] = 0x80000001AFFF7D90;
      char v68 = v13;
      swift_endAccess();
    }
    unsigned __int8 v67 = 1;
    sub_1AFFCBAF8();
    uint64_t v17 = a2;
    uint64_t v61 = v65;
    uint64_t v62 = v66;
    if (!v66)
    {
      swift_beginAccess();
      uint64_t v13 = v68;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v13 = sub_1AFD352FC(0, v13[2] + 1, 1, v13);
      }
      unint64_t v19 = v13[2];
      unint64_t v18 = v13[3];
      if (v19 >= v18 >> 1) {
        uint64_t v13 = sub_1AFD352FC((void *)(v18 > 1), v19 + 1, 1, v13);
      }
      v13[2] = v19 + 1;
      uint64_t v20 = &v13[2 * v19];
      unsigned char v20[4] = 0x636974796C616E61;
      v20[5] = 0xEB00000000644973;
      char v68 = v13;
      swift_endAccess();
      uint64_t v17 = a2;
    }
    unsigned __int8 v67 = 2;
    sub_1AFFCBAF8();
    uint64_t v57 = v65;
    uint64_t v59 = v12;
    uint64_t v60 = v66;
    if (!v66)
    {
      swift_beginAccess();
      uint64_t v13 = v68;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v13 = sub_1AFD352FC(0, v13[2] + 1, 1, v13);
      }
      unint64_t v22 = v13[2];
      unint64_t v21 = v13[3];
      if (v22 >= v21 >> 1) {
        uint64_t v13 = sub_1AFD352FC((void *)(v21 > 1), v22 + 1, 1, v13);
      }
      v13[2] = v22 + 1;
      uint64_t v23 = &v13[2 * v22];
      v23[4] = 0xD000000000000017;
      v23[5] = 0x80000001AFFF7DB0;
      char v68 = v13;
      swift_endAccess();
      uint64_t v17 = a2;
    }
    uint64_t v58 = v17;
    unsigned __int8 v67 = 3;
    sub_1AFD40AA0(0, (unint64_t *)&qword_1EB819DC0);
    uint64_t v25 = v24;
    uint64_t v26 = sub_1AFE8EB0C((unint64_t *)&qword_1EB819DD8);
    sub_1AFFCBAF8();
    uint64_t v55 = v26;
    uint64_t v56 = v65;
    uint64_t v27 = v58;
    if (!v65)
    {
      swift_beginAccess();
      uint64_t v13 = v68;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v13 = sub_1AFD352FC(0, v13[2] + 1, 1, v13);
      }
      unint64_t v29 = v13[2];
      unint64_t v28 = v13[3];
      if (v29 >= v28 >> 1) {
        uint64_t v13 = sub_1AFD352FC((void *)(v28 > 1), v29 + 1, 1, v13);
      }
      v13[2] = v29 + 1;
      uint64_t v30 = (char *)&v13[2 * v29];
      strcpy(v30 + 32, "proxyHostNames");
      v30[47] = -18;
      char v68 = v13;
      swift_endAccess();
      uint64_t v27 = a2;
    }
    unsigned __int8 v67 = 4;
    sub_1AFD40AA0(0, &qword_1EB819D80);
    sub_1AFE8EB7C((unint64_t *)&unk_1EB819D90, (void (*)(void))sub_1AFE8EA50);
    sub_1AFFCBAF8();
    uint64_t v54 = v65;
    if (!v65)
    {
      swift_beginAccess();
      uint64_t v13 = v68;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v13 = sub_1AFD352FC(0, v13[2] + 1, 1, v13);
      }
      unint64_t v32 = v13[2];
      unint64_t v31 = v13[3];
      if (v32 >= v31 >> 1) {
        uint64_t v13 = sub_1AFD352FC((void *)(v31 > 1), v32 + 1, 1, v13);
      }
      v13[2] = v32 + 1;
      uint64_t v33 = &v13[2 * v32];
      v33[4] = 0xD000000000000014;
      v33[5] = 0x80000001AFFF7DD0;
      char v68 = v13;
      swift_endAccess();
      uint64_t v27 = a2;
    }
    LOBYTE(v65) = 5;
    sub_1AFFCBAF8();
    HIDWORD(v53) = v67;
    if (v67 == 2)
    {
      swift_beginAccess();
      uint64_t v13 = v68;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v13 = sub_1AFD352FC(0, v13[2] + 1, 1, v13);
      }
      unint64_t v35 = v13[2];
      unint64_t v34 = v13[3];
      if (v35 >= v34 >> 1) {
        uint64_t v13 = sub_1AFD352FC((void *)(v34 > 1), v35 + 1, 1, v13);
      }
      v13[2] = v35 + 1;
      uint64_t v36 = &v13[2 * v35];
      v36[4] = 0xD000000000000010;
      v36[5] = 0x80000001AFFF7DF0;
      char v68 = v13;
      swift_endAccess();
      uint64_t v27 = a2;
    }
    unsigned __int8 v67 = 6;
    sub_1AFFCBAF8();
    uint64_t v38 = v65;
    if (!v65)
    {
      swift_beginAccess();
      uint64_t v13 = v68;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v13 = sub_1AFD352FC(0, v13[2] + 1, 1, v13);
      }
      unint64_t v40 = v13[2];
      unint64_t v39 = v13[3];
      uint64_t v41 = v40 + 1;
      if (v40 >= v39 >> 1)
      {
        uint64_t v55 = v40 + 1;
        unint64_t v52 = sub_1AFD352FC((void *)(v39 > 1), v40 + 1, 1, v13);
        uint64_t v41 = v55;
        uint64_t v13 = v52;
      }
      v13[2] = v41;
      uint64_t v42 = &v13[2 * v40];
      v42[4] = 0x69666F72506E7076;
      v42[5] = 0xEF73656D614E656CLL;
      char v68 = v13;
      swift_endAccess();
      uint64_t v27 = a2;
    }
    uint64_t v43 = MEMORY[0x1E4FBC860];
    if (v56) {
      uint64_t v44 = v56;
    }
    else {
      uint64_t v44 = MEMORY[0x1E4FBC860];
    }
    if (v54) {
      uint64_t v45 = v54;
    }
    else {
      uint64_t v45 = MEMORY[0x1E4FBC860];
    }
    LODWORD(v56) = BYTE4(v53) & 1;
    if (v38) {
      uint64_t v43 = v38;
    }
    uint64_t v54 = v43;
    uint64_t v55 = v45;
    if (v13[2])
    {
      sub_1AFD2CD48();
      uint64_t v46 = swift_allocObject();
      *(_OWORD *)(v46 + 16) = xmmword_1AFFD05F0;
      *(void *)(v46 + 56) = v25;
      *(void *)(v46 + 64) = sub_1AFD5CDA0();
      *(void *)(v46 + 32) = v13;
      sub_1AFD2C4F4();
      sub_1AFFC8E38();
      uint64_t v47 = (void *)sub_1AFFCB638();
      sub_1AFFCB478();
      sub_1AFFCA878();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AFD2C4F4();
      uint64_t v47 = (void *)sub_1AFFCB638();
      sub_1AFFCB478();
      sub_1AFFCA878();
    }

    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v6);
    swift_bridgeObjectRelease();
    uint64_t v48 = v59;
    *(void *)uint64_t v27 = v63;
    *(void *)(v27 + 8) = v48;
    uint64_t v49 = v62;
    *(void *)(v27 + 16) = v61;
    *(void *)(v27 + 24) = v49;
    uint64_t v50 = v60;
    *(void *)(v27 + 32) = v57;
    *(void *)(v27 + 40) = v50;
    uint64_t v51 = v55;
    *(void *)(v27 + 48) = v44;
    *(void *)(v27 + 56) = v51;
    *(unsigned char *)(v27 + 64) = v56;
    *(void *)(v27 + 72) = v54;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v64);
}

unint64_t sub_1AFE8E17C(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x636974796C616E61;
      break;
    case 2:
      unint64_t result = 0xD000000000000017;
      break;
    case 3:
      unint64_t result = 0x736F4879786F7270;
      break;
    case 4:
      unint64_t result = 0xD000000000000014;
      break;
    case 6:
      unint64_t result = 0x69666F72506E7076;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1AFE8E274()
{
  return sub_1AFE8E17C(*v0);
}

uint64_t sub_1AFE8E27C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1AFE8F4E8(a1, a2);
  *a3 = result;
  return result;
}

void sub_1AFE8E2A4(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_1AFE8E2B0(uint64_t a1)
{
  unint64_t v2 = sub_1AFE8E9FC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFE8E2EC(uint64_t a1)
{
  unint64_t v2 = sub_1AFE8E9FC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFE8E328(void *a1)
{
  sub_1AFE8EAA4(0, &qword_1EB81A098, (uint64_t (*)(void))sub_1AFE8E9FC, (uint64_t)&type metadata for ExternalAnalyticsConfiguration.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v19 - v6;
  uint64_t v8 = *(void *)(v1 + 16);
  uint64_t v25 = *(void *)(v1 + 24);
  uint64_t v26 = v8;
  uint64_t v9 = *(void *)(v1 + 32);
  uint64_t v23 = *(void *)(v1 + 40);
  uint64_t v24 = v9;
  uint64_t v10 = *(void *)(v1 + 48);
  uint64_t v21 = *(void *)(v1 + 56);
  uint64_t v22 = v10;
  int v20 = *(unsigned __int8 *)(v1 + 64);
  uint64_t v19 = *(void *)(v1 + 72);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFE8E9FC();
  uint64_t v11 = v4;
  sub_1AFFCBE78();
  LOBYTE(v29) = 0;
  uint64_t v12 = v27;
  sub_1AFFCBB98();
  if (v12) {
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  uint64_t v14 = v22;
  uint64_t v15 = v5;
  LOBYTE(v29) = 1;
  sub_1AFFCBB98();
  LOBYTE(v29) = 2;
  sub_1AFFCBB98();
  uint64_t v29 = v14;
  char v28 = 3;
  sub_1AFD40AA0(0, (unint64_t *)&qword_1EB819DC0);
  uint64_t v17 = v16;
  uint64_t v18 = sub_1AFE8EB0C((unint64_t *)&qword_1EB819DC8);
  sub_1AFFCBC58();
  uint64_t v26 = v18;
  uint64_t v27 = v17;
  uint64_t v29 = v21;
  char v28 = 4;
  sub_1AFD40AA0(0, &qword_1EB819D80);
  sub_1AFE8EB7C(&qword_1EB819D88, (void (*)(void))sub_1AFE8EBF8);
  sub_1AFFCBC58();
  LOBYTE(v29) = 5;
  sub_1AFFCBC18();
  uint64_t v29 = v19;
  char v28 = 6;
  sub_1AFFCBC58();
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v7, v11);
}

uint64_t sub_1AFE8E6B4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1AFE8D640(a1, a2);
}

uint64_t sub_1AFE8E6CC(void *a1)
{
  return sub_1AFE8E328(a1);
}

uint64_t sub_1AFE8E6E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v7 = *(void *)(a1 + 40);
  uint64_t v8 = *(void **)(a1 + 48);
  uint64_t v9 = *(void *)(a1 + 56);
  int v10 = *(unsigned __int8 *)(a1 + 64);
  uint64_t v11 = *(void **)(a1 + 72);
  uint64_t v12 = *(void *)(a2 + 8);
  uint64_t v13 = *(void *)(a2 + 16);
  uint64_t v15 = *(void *)(a2 + 24);
  uint64_t v14 = *(void *)(a2 + 32);
  uint64_t v17 = *(void *)(a2 + 40);
  uint64_t v16 = *(void **)(a2 + 48);
  uint64_t v18 = *(void *)(a2 + 56);
  int v19 = *(unsigned __int8 *)(a2 + 64);
  int v20 = *(void **)(a2 + 72);
  if (v3)
  {
    if (!v12) {
      return 0;
    }
    if (*(void *)a1 != *(void *)a2 || v3 != v12)
    {
      uint64_t v43 = *(void *)(a2 + 56);
      uint64_t v45 = *(void **)(a1 + 48);
      int v42 = *(unsigned __int8 *)(a2 + 64);
      unint64_t v40 = *(void **)(a2 + 72);
      uint64_t v41 = *(void *)(a1 + 56);
      int v39 = *(unsigned __int8 *)(a1 + 64);
      uint64_t v21 = *(void **)(a1 + 72);
      uint64_t v22 = *(void **)(a2 + 48);
      uint64_t v23 = *(void *)(a1 + 40);
      uint64_t v24 = *(void *)(a1 + 32);
      uint64_t v25 = *(void *)(a2 + 40);
      uint64_t v26 = *(void *)(a2 + 32);
      uint64_t v27 = *(void *)(a2 + 16);
      char v28 = sub_1AFFCBCE8();
      uint64_t v13 = v27;
      uint64_t v14 = v26;
      uint64_t v17 = v25;
      uint64_t v5 = v24;
      uint64_t v7 = v23;
      uint64_t v16 = v22;
      uint64_t v11 = v21;
      int v10 = v39;
      int v20 = v40;
      uint64_t v9 = v41;
      int v19 = v42;
      uint64_t v18 = v43;
      uint64_t v8 = v45;
      if ((v28 & 1) == 0) {
        return 0;
      }
    }
  }
  else if (v12)
  {
    return 0;
  }
  if (v6)
  {
    if (!v15) {
      return 0;
    }
    if (v4 != v13 || v6 != v15)
    {
      uint64_t v44 = v11;
      uint64_t v46 = v17;
      uint64_t v29 = v16;
      uint64_t v30 = v7;
      uint64_t v31 = v5;
      uint64_t v32 = v14;
      char v33 = sub_1AFFCBCE8();
      uint64_t v14 = v32;
      uint64_t v11 = v44;
      uint64_t v17 = v46;
      uint64_t v5 = v31;
      uint64_t v7 = v30;
      uint64_t v16 = v29;
      if ((v33 & 1) == 0) {
        return 0;
      }
    }
  }
  else if (v15)
  {
    return 0;
  }
  if (!v7)
  {
    if (!v17) {
      goto LABEL_22;
    }
    return 0;
  }
  if (!v17) {
    return 0;
  }
  if (v5 != v14 || v7 != v17)
  {
    unint64_t v34 = v11;
    unint64_t v35 = v16;
    char v36 = sub_1AFFCBCE8();
    uint64_t v16 = v35;
    uint64_t v11 = v34;
    if ((v36 & 1) == 0) {
      return 0;
    }
  }
LABEL_22:
  uint64_t v37 = v11;
  if (sub_1AFF22B0C(v8, v16) & 1) == 0 || (sub_1AFF22EB8(v9, v18) & 1) == 0 || ((v10 ^ v19)) {
    return 0;
  }

  return sub_1AFF22B0C(v37, v20);
}

uint64_t _s10StocksCore14MultiSizeVideoV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a2[2];
  uint64_t v5 = a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (char v7 = sub_1AFFCBCE8(), result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
    {
      return 1;
    }
    else
    {
      return sub_1AFFCBCE8();
    }
  }
  return result;
}

unint64_t sub_1AFE8E9A8()
{
  unint64_t result = qword_1EB819940;
  if (!qword_1EB819940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819940);
  }
  return result;
}

unint64_t sub_1AFE8E9FC()
{
  unint64_t result = qword_1EB819890;
  if (!qword_1EB819890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819890);
  }
  return result;
}

unint64_t sub_1AFE8EA50()
{
  unint64_t result = qword_1EB819960;
  if (!qword_1EB819960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819960);
  }
  return result;
}

void sub_1AFE8EAA4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1AFE8EB0C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1AFD40AA0(255, (unint64_t *)&qword_1EB819DC0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AFE8EB7C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1AFD40AA0(255, &qword_1EB819D80);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1AFE8EBF8()
{
  unint64_t result = qword_1EB819958;
  if (!qword_1EB819958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819958);
  }
  return result;
}

ValueMetadata *type metadata accessor for ExternalAnalyticsQueryParameterConfig()
{
  return &type metadata for ExternalAnalyticsQueryParameterConfig;
}

uint64_t destroy for ExternalAnalyticsConfiguration()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ExternalAnalyticsConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  return a1;
}

uint64_t assignWithCopy for ExternalAnalyticsConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ExternalAnalyticsConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ExternalAnalyticsConfiguration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ExternalAnalyticsConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExternalAnalyticsConfiguration()
{
  return &type metadata for ExternalAnalyticsConfiguration;
}

uint64_t getEnumTagSinglePayload for QuoteSource(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ExternalAnalyticsConfiguration.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFE8F0C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExternalAnalyticsConfiguration.CodingKeys()
{
  return &type metadata for ExternalAnalyticsConfiguration.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ExternalAnalyticsQueryParameterConfig.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFE8F1C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExternalAnalyticsQueryParameterConfig.CodingKeys()
{
  return &type metadata for ExternalAnalyticsQueryParameterConfig.CodingKeys;
}

unint64_t sub_1AFE8F200()
{
  unint64_t result = qword_1E9AFBD30;
  if (!qword_1E9AFBD30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBD30);
  }
  return result;
}

unint64_t sub_1AFE8F258()
{
  unint64_t result = qword_1E9AFBD38;
  if (!qword_1E9AFBD38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBD38);
  }
  return result;
}

unint64_t sub_1AFE8F2B0()
{
  unint64_t result = qword_1EB8198A0;
  if (!qword_1EB8198A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8198A0);
  }
  return result;
}

unint64_t sub_1AFE8F308()
{
  unint64_t result = qword_1EB819898;
  if (!qword_1EB819898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819898);
  }
  return result;
}

unint64_t sub_1AFE8F360()
{
  unint64_t result = qword_1EB819950;
  if (!qword_1EB819950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819950);
  }
  return result;
}

unint64_t sub_1AFE8F3B8()
{
  unint64_t result = qword_1EB819948;
  if (!qword_1EB819948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819948);
  }
  return result;
}

uint64_t sub_1AFE8F40C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1AFFCBCE8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1AFE8F4E8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000001AFFF7D90 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x636974796C616E61 && a2 == 0xEB00000000644973 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001AFFF7DB0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x736F4879786F7270 && a2 == 0xEE0073656D614E74 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001AFFF7DD0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001AFFF7DF0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x69666F72506E7076 && a2 == 0xEF73656D614E656CLL)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v5 = sub_1AFFCBCE8();
    swift_bridgeObjectRelease();
    if (v5) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

BOOL sub_1AFE8F80C()
{
  return (uint64_t)objc_msgSend(v0, sel_contentProvider) > 1;
}

id sub_1AFE8F880()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NoopAppActivityMonitor();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for NoopAppActivityMonitor()
{
  return self;
}

id sub_1AFE8F990(void *a1)
{
  ObjectType = (objc_class *)swift_getObjectType();
  unsigned int v4 = v1;
  char v5 = (void *)sub_1AFFCAE68();
  id v6 = objc_msgSend(a1, sel_decodeObjectForKey_, v5);

  if (v6)
  {
    sub_1AFFCB6F8();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v14, 0, sizeof(v14));
  }
  sub_1AFD3BCF4((uint64_t)v14, (uint64_t)v15);
  if (!v16)
  {

    sub_1AFD3BDB4((uint64_t)v15);
LABEL_9:
    swift_deallocPartialClassInstance();
    return 0;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {

    goto LABEL_9;
  }
  uint64_t v7 = v13;
  int v8 = &v4[OBJC_IVAR___SCUpdateLastAppLaunchUpsellInstanceIDCommand_lastAppLaunchUpsellInstanceID];
  *(void *)int v8 = v12;
  *((void *)v8 + 1) = v7;

  v11.receiver = v4;
  v11.super_class = ObjectType;
  id v9 = objc_msgSendSuper2(&v11, sel_init);

  return v9;
}

uint64_t type metadata accessor for UpdateLastAppLaunchUpsellInstanceIDCommand()
{
  return self;
}

uint64_t sub_1AFE8FB88()
{
  return sub_1AFFCB5A8();
}

uint64_t sub_1AFE8FD68()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1AFE8FDA0()
{
  return sub_1AFE8FB88();
}

unint64_t sub_1AFE8FDA8()
{
  unint64_t result = qword_1EB818190;
  if (!qword_1EB818190)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB818190);
  }
  return result;
}

uint64_t sub_1AFE8FDE8()
{
  return sub_1AFFC9518();
}

uint64_t sub_1AFE8FE30()
{
  return sub_1AFFC9518();
}

uint64_t getEnumTagSinglePayload for WatchlistIntentError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for WatchlistIntentError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFE8FFE4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WatchlistIntentError()
{
  return &type metadata for WatchlistIntentError;
}

BOOL sub_1AFE9001C(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  return v2 != 0;
}

BOOL sub_1AFE90038(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2) {
    return 0;
  }
  uint64_t v5 = a2 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v6 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
  sub_1AFFC8E38();
  for (uint64_t i = 0; i < v2; i += v10)
  {
    if ((a2 & 0x1000000000000000) != 0)
    {
      sub_1AFFCB7E8();
      uint64_t v10 = v9;
    }
    else
    {
      if ((a2 & 0x2000000000000000) == 0)
      {
        uint64_t v8 = v6;
        if ((a1 & 0x1000000000000000) == 0) {
          uint64_t v8 = sub_1AFFCB878();
        }
        if (*(char *)(v8 + i) < 0)
        {
          switch(__clz(*(unsigned __int8 *)(v8 + i) ^ 0xFF))
          {
            case 0x1Au:
              goto LABEL_19;
            case 0x1Bu:
              goto LABEL_20;
            case 0x1Cu:
              goto LABEL_21;
            default:
              break;
          }
        }
LABEL_14:
        uint64_t v10 = 1;
        goto LABEL_15;
      }
      v13[0] = a1;
      v13[1] = v5;
      if ((*((char *)v13 + i) & 0x80000000) == 0) {
        goto LABEL_14;
      }
      switch(__clz(*((unsigned __int8 *)v13 + i) ^ 0xFF))
      {
        case 0x1Au:
LABEL_19:
          uint64_t v10 = 2;
          break;
        case 0x1Bu:
LABEL_20:
          uint64_t v10 = 3;
          break;
        case 0x1Cu:
LABEL_21:
          uint64_t v10 = 4;
          break;
        default:
          goto LABEL_14;
      }
    }
LABEL_15:
    BOOL v11 = SCIsCJKCharacter();
    if (v11) {
      break;
    }
  }
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1AFE9024C(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2) {
    return 0;
  }
  uint64_t v3 = a1;
  sub_1AFFC8E38();
  return v3;
}

id sub_1AFE902A0(uint64_t a1, uint64_t a2, unsigned char *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = sub_1AFFC9E18();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = &v34[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = sub_1AFFC98F8();
  double v16 = MEMORY[0x1F4188790](v15);
  uint64_t v18 = &v34[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  LOBYTE(a3) = *a3;
  (*(void (**)(unsigned char *, uint64_t, double))(v19 + 16))(v18, a4, v16);
  sub_1AFD2CEB0(v5 + 16, (uint64_t)v36);
  sub_1AFD2CEB0(v5 + 56, (uint64_t)v34);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v12 + 16))(v14, a5, v11);
  uint64_t v20 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v36, v37);
  double v21 = MEMORY[0x1F4188790](v20);
  uint64_t v23 = (uint64_t *)&v34[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(uint64_t *, double))(v24 + 16))(v23, v21);
  uint64_t v25 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v34, v35);
  double v26 = MEMORY[0x1F4188790](v25);
  char v28 = (uint64_t *)&v34[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(uint64_t *, double))(v29 + 16))(v28, v26);
  uint64_t v30 = *v23;
  uint64_t v31 = *v28;
  sub_1AFFC8E38();
  id v32 = sub_1AFE9081C(a1, a2, (char)a3, (uint64_t)v18, v30, v31, (uint64_t)v14);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  return v32;
}

uint64_t sub_1AFE905B0()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for YahooChartOperationFactory()
{
  return self;
}

id sub_1AFE90614(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned char *a8)
{
  ObjectType = (objc_class *)swift_getObjectType();
  v28[3] = type metadata accessor for YahooChartModelEngine();
  v28[4] = &off_1F08743C0;
  v28[0] = a5;
  v27[3] = type metadata accessor for YahooBaseOperationFactory();
  v27[4] = &off_1F0877A08;
  v27[0] = a6;
  uint64_t v17 = &a8[qword_1EB81B1C8];
  *uint64_t v17 = a1;
  v17[1] = a2;
  a8[qword_1EB81B1D0] = a3;
  uint64_t v18 = &a8[qword_1E9AF9E28];
  uint64_t v19 = sub_1AFFC98F8();
  uint64_t v20 = *(void *)(v19 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v18, a4, v19);
  sub_1AFD2CEB0((uint64_t)v28, (uint64_t)&a8[qword_1EB81B1D8]);
  sub_1AFD2CEB0((uint64_t)v27, (uint64_t)&a8[qword_1EB81B1E0]);
  double v21 = &a8[qword_1EB81B1E8];
  uint64_t v22 = sub_1AFFC9E18();
  uint64_t v23 = *(void *)(v22 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v21, a7, v22);
  v26.receiver = a8;
  v26.super_class = ObjectType;
  id v24 = objc_msgSendSuper2(&v26, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(a7, v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(a4, v19);
  return v24;
}

id sub_1AFE9081C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = type metadata accessor for YahooChartModelEngine();
  id v32 = &off_1F08743C0;
  v30[0] = a5;
  uint64_t v28 = type metadata accessor for YahooBaseOperationFactory();
  uint64_t v29 = &off_1F0877A08;
  v27[0] = a6;
  uint64_t v14 = objc_allocWithZone((Class)type metadata accessor for YahooChartOperation());
  uint64_t v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v30, v31);
  double v16 = MEMORY[0x1F4188790](v15);
  uint64_t v18 = (void *)((char *)v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v19 + 16))(v18, v16);
  uint64_t v20 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v27, v28);
  double v21 = MEMORY[0x1F4188790](v20);
  uint64_t v23 = (void *)((char *)v27 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v24 + 16))(v23, v21);
  id v25 = sub_1AFE90614(a1, a2, a3, a4, *v18, *v23, a7, v14);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  return v25;
}

uint64_t WidgetQuote.price.getter()
{
  return *(void *)v0;
}

uint64_t WidgetQuote.priceChange.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t WidgetQuote.marketCapitalization.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t WidgetQuote.currencyCode.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  sub_1AFFC8E38();
  return v1;
}

void WidgetQuote.exchangeStatus.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 64);
}

uint64_t WidgetQuote.exchangeNextOpen.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for WidgetQuote();
  return sub_1AFE91AD4(v1 + *(int *)(v3 + 36), a1, (uint64_t (*)(void))sub_1AFD2C83C);
}

uint64_t type metadata accessor for WidgetQuote()
{
  uint64_t result = qword_1EB816940;
  if (!qword_1EB816940) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t WidgetQuote.init(price:priceChange:marketCapitalization:currencyCode:exchangeStatus:exchangeNextOpen:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char *a10, uint64_t a11)
{
  char v12 = *a10;
  *(void *)a9 = a1;
  *(unsigned char *)(a9 + 8) = a2 & 1;
  *(void *)(a9 + 16) = a3;
  *(unsigned char *)(a9 + 24) = a4 & 1;
  *(void *)(a9 + 32) = a5;
  *(unsigned char *)(a9 + 40) = a6 & 1;
  *(void *)(a9 + 48) = a7;
  *(void *)(a9 + 56) = a8;
  *(unsigned char *)(a9 + 64) = v12;
  uint64_t v13 = a9 + *(int *)(type metadata accessor for WidgetQuote() + 36);

  return sub_1AFE90B98(a11, v13);
}

uint64_t sub_1AFE90B98(uint64_t a1, uint64_t a2)
{
  sub_1AFD2C83C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t WidgetQuote.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1AFD2C83C();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a2 = *(void *)a1;
  *(unsigned char *)(a2 + 8) = v7;
  char v8 = *(unsigned char *)(a1 + 24);
  *(void *)(a2 + 16) = *(void *)(a1 + 16);
  *(unsigned char *)(a2 + 24) = v8;
  char v9 = *(unsigned char *)(a1 + 40);
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  *(unsigned char *)(a2 + 40) = v9;
  uint64_t v10 = *(void *)(a1 + 120);
  *(void *)(a2 + 48) = *(void *)(a1 + 112);
  *(void *)(a2 + 56) = v10;
  *(unsigned char *)(a2 + 64) = *(unsigned char *)(a1 + 128);
  uint64_t v11 = type metadata accessor for Quote();
  sub_1AFE91AD4(a1 + *(int *)(v11 + 60), (uint64_t)v6, (uint64_t (*)(void))sub_1AFD2C83C);
  sub_1AFFC8E38();
  sub_1AFE92AE8(a1, (uint64_t (*)(void))type metadata accessor for Quote);
  uint64_t v12 = type metadata accessor for WidgetQuote();
  return sub_1AFE90B98((uint64_t)v6, a2 + *(int *)(v12 + 36));
}

unint64_t sub_1AFE90D1C(char a1)
{
  unint64_t result = 0x6563697270;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6168436563697270;
      break;
    case 2:
      unint64_t result = 0xD000000000000014;
      break;
    case 3:
      unint64_t result = 0x79636E6572727563;
      break;
    case 4:
      unint64_t result = 0x65676E6168637865;
      break;
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1AFE90E0C()
{
  return sub_1AFE90D1C(*v0);
}

uint64_t sub_1AFE90E14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1AFE92824(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AFE90E3C(uint64_t a1)
{
  unint64_t v2 = sub_1AFE91A1C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFE90E78(uint64_t a1)
{
  unint64_t v2 = sub_1AFE91A1C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t WidgetQuote.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1AFE91A70(0, &qword_1E9AFBD48, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFE91A1C();
  sub_1AFFCBE78();
  v11[15] = 0;
  sub_1AFFCBBB8();
  if (!v2)
  {
    v11[14] = 1;
    sub_1AFFCBBB8();
    v11[13] = 2;
    sub_1AFFCBBB8();
    v11[12] = 3;
    sub_1AFFCBB98();
    v11[11] = *(unsigned char *)(v3 + 64);
    v11[10] = 4;
    sub_1AFE7C940();
    sub_1AFFCBC58();
    type metadata accessor for WidgetQuote();
    v11[9] = 5;
    sub_1AFFC98F8();
    sub_1AFE1465C((unint64_t *)&unk_1EB818B90);
    sub_1AFFCBBE8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t WidgetQuote.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  sub_1AFD2C83C();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFE91A70(0, &qword_1E9AFBD58, MEMORY[0x1E4FBBDC0]);
  uint64_t v23 = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v21 - v9;
  uint64_t v11 = type metadata accessor for WidgetQuote();
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1[3];
  uint64_t v24 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_1AFE91A1C();
  sub_1AFFCBE68();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  }
  uint64_t v21 = v11;
  char v31 = 0;
  uint64_t v15 = v23;
  *(void *)uint64_t v13 = sub_1AFFCBAC8();
  v13[8] = v16 & 1;
  char v30 = 1;
  *((void *)v13 + 2) = sub_1AFFCBAC8();
  v13[24] = v17 & 1;
  char v29 = 2;
  *((void *)v13 + 4) = sub_1AFFCBAC8();
  v13[40] = v18 & 1;
  char v28 = 3;
  *((void *)v13 + 6) = sub_1AFFCBAA8();
  *((void *)v13 + 7) = v19;
  char v26 = 4;
  sub_1AFE7CA30();
  sub_1AFFCBB58();
  v13[64] = v27;
  sub_1AFFC98F8();
  char v25 = 5;
  sub_1AFE1465C(&qword_1EB816CB0);
  sub_1AFFCBAF8();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v15);
  sub_1AFE90B98((uint64_t)v6, (uint64_t)&v13[*(int *)(v21 + 36)]);
  sub_1AFE91AD4((uint64_t)v13, v22, (uint64_t (*)(void))type metadata accessor for WidgetQuote);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  return sub_1AFE92AE8((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for WidgetQuote);
}

uint64_t sub_1AFE91518@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return WidgetQuote.init(from:)(a1, a2);
}

uint64_t sub_1AFE91530(void *a1)
{
  return WidgetQuote.encode(to:)(a1);
}

uint64_t _s10StocksCore11WidgetQuoteV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1AFFC98F8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFE7FF1C();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFD2C83C();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  char v17 = (char *)&v32 - v16;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v32 - v19;
  char v21 = *(unsigned char *)(a2 + 8);
  if (*(unsigned char *)(a1 + 8))
  {
    if (!*(unsigned char *)(a2 + 8)) {
      return 0;
    }
  }
  else
  {
    if (*(double *)a1 != *(double *)a2) {
      char v21 = 1;
    }
    if (v21) {
      return 0;
    }
  }
  char v22 = *(unsigned char *)(a2 + 24);
  if (*(unsigned char *)(a1 + 24))
  {
    if (!*(unsigned char *)(a2 + 24)) {
      return 0;
    }
  }
  else
  {
    if (*(double *)(a1 + 16) != *(double *)(a2 + 16)) {
      char v22 = 1;
    }
    if (v22) {
      return 0;
    }
  }
  char v23 = *(unsigned char *)(a2 + 40);
  if (*(unsigned char *)(a1 + 40))
  {
    if (!*(unsigned char *)(a2 + 40)) {
      return 0;
    }
  }
  else
  {
    if (*(double *)(a1 + 32) != *(double *)(a2 + 32)) {
      char v23 = 1;
    }
    if (v23) {
      return 0;
    }
  }
  uint64_t v24 = *(void *)(a1 + 56);
  uint64_t v25 = *(void *)(a2 + 56);
  if (!v24)
  {
    if (v25) {
      return 0;
    }
    goto LABEL_26;
  }
  if (!v25) {
    return 0;
  }
  if (*(void *)(a1 + 48) == *(void *)(a2 + 48) && v24 == v25
    || (char v26 = sub_1AFFCBCE8(), result = 0, (v26 & 1) != 0))
  {
LABEL_26:
    if (sub_1AFDECC74(*(unsigned char *)(a1 + 64), *(unsigned char *)(a2 + 64)))
    {
      uint64_t v33 = type metadata accessor for WidgetQuote();
      sub_1AFE91AD4(a1 + *(int *)(v33 + 36), (uint64_t)v20, (uint64_t (*)(void))sub_1AFD2C83C);
      sub_1AFE91AD4(a2 + *(int *)(v33 + 36), (uint64_t)v17, (uint64_t (*)(void))sub_1AFD2C83C);
      uint64_t v28 = (uint64_t)&v11[*(int *)(v9 + 48)];
      sub_1AFE91AD4((uint64_t)v20, (uint64_t)v11, (uint64_t (*)(void))sub_1AFD2C83C);
      sub_1AFE91AD4((uint64_t)v17, v28, (uint64_t (*)(void))sub_1AFD2C83C);
      char v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
      if (v29((uint64_t)v11, 1, v4) == 1)
      {
        sub_1AFE92AE8((uint64_t)v17, (uint64_t (*)(void))sub_1AFD2C83C);
        sub_1AFE92AE8((uint64_t)v20, (uint64_t (*)(void))sub_1AFD2C83C);
        if (v29(v28, 1, v4) == 1)
        {
          sub_1AFE92AE8((uint64_t)v11, (uint64_t (*)(void))sub_1AFD2C83C);
          return 1;
        }
        goto LABEL_32;
      }
      sub_1AFE91AD4((uint64_t)v11, (uint64_t)v14, (uint64_t (*)(void))sub_1AFD2C83C);
      if (v29(v28, 1, v4) == 1)
      {
        sub_1AFE92AE8((uint64_t)v17, (uint64_t (*)(void))sub_1AFD2C83C);
        sub_1AFE92AE8((uint64_t)v20, (uint64_t (*)(void))sub_1AFD2C83C);
        (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
LABEL_32:
        sub_1AFE92AE8((uint64_t)v11, (uint64_t (*)(void))sub_1AFE7FF1C);
        return 0;
      }
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v28, v4);
      sub_1AFE1465C(&qword_1EB816CA8);
      char v30 = sub_1AFFCADD8();
      char v31 = *(void (**)(char *, uint64_t))(v5 + 8);
      v31(v7, v4);
      sub_1AFE92AE8((uint64_t)v17, (uint64_t (*)(void))sub_1AFD2C83C);
      sub_1AFE92AE8((uint64_t)v20, (uint64_t (*)(void))sub_1AFD2C83C);
      v31(v14, v4);
      sub_1AFE92AE8((uint64_t)v11, (uint64_t (*)(void))sub_1AFD2C83C);
      if (v30) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

unint64_t sub_1AFE91A1C()
{
  unint64_t result = qword_1E9AFBD50;
  if (!qword_1E9AFBD50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBD50);
  }
  return result;
}

void sub_1AFE91A70(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1AFE91A1C();
    unint64_t v7 = a3(a1, &type metadata for WidgetQuote.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1AFE91AD4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void *initializeBufferWithCopyOfBuffer for WidgetQuote(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    sub_1AFFC8E48();
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    *(void *)(a1 + 16) = a2[2];
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    *(void *)(a1 + 32) = a2[4];
    *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
    uint64_t v5 = a2[7];
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v5;
    uint64_t v6 = *(int *)(a3 + 36);
    unint64_t v7 = (char *)a2 + v6;
    uint64_t v8 = (void *)(a1 + v6);
    *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
    uint64_t v9 = sub_1AFFC98F8();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
    sub_1AFFC8E38();
    if (v11(v7, 1, v9))
    {
      sub_1AFD2C83C();
      memcpy(v8, v7, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v10 + 16))(v8, v7, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    }
  }
  return v3;
}

uint64_t destroy for WidgetQuote(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = sub_1AFFC98F8();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    unint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

uint64_t initializeWithCopy for WidgetQuote(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v4 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v4;
  uint64_t v5 = *(int *)(a3 + 36);
  uint64_t v6 = (const void *)(a2 + v5);
  unint64_t v7 = (void *)(a1 + v5);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v8 = sub_1AFFC98F8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48);
  sub_1AFFC8E38();
  if (v10(v6, 1, v8))
  {
    sub_1AFD2C83C();
    memcpy(v7, v6, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v7, v6, v8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  }
  return a1;
}

uint64_t assignWithCopy for WidgetQuote(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v6;
  uint64_t v7 = a2[2];
  *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
  *(void *)(a1 + 16) = v7;
  uint64_t v8 = a2[4];
  *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 48) = a2[6];
  *(void *)(a1 + 56) = a2[7];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
  uint64_t v9 = *(int *)(a3 + 36);
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_1AFFC98F8();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    sub_1AFD2C83C();
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  return a1;
}

uint64_t initializeWithTake for WidgetQuote(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  uint64_t v4 = *(int *)(a3 + 36);
  uint64_t v5 = (const void *)(a2 + v4);
  uint64_t v6 = (void *)(a1 + v4);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v7 = sub_1AFFC98F8();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7))
  {
    sub_1AFD2C83C();
    memcpy(v6, v5, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v6, v5, v7);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  }
  return a1;
}

uint64_t assignWithTake for WidgetQuote(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_1AFFC98F8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_1AFD2C83C();
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetQuote(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1AFE923F0);
}

uint64_t sub_1AFE923F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 56);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    sub_1AFD2C83C();
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 36);
    return v10(v12, a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for WidgetQuote(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1AFE924C0);
}

uint64_t sub_1AFE924C0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 56) = a2;
  }
  else
  {
    sub_1AFD2C83C();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 36);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1AFE92568()
{
  sub_1AFD2C83C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unsigned char *storeEnumTagSinglePayload for WidgetQuote.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFE926E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetQuote.CodingKeys()
{
  return &type metadata for WidgetQuote.CodingKeys;
}

unint64_t sub_1AFE92720()
{
  unint64_t result = qword_1E9AFBD60;
  if (!qword_1E9AFBD60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBD60);
  }
  return result;
}

unint64_t sub_1AFE92778()
{
  unint64_t result = qword_1E9AFBD68;
  if (!qword_1E9AFBD68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBD68);
  }
  return result;
}

unint64_t sub_1AFE927D0()
{
  unint64_t result = qword_1E9AFBD70;
  if (!qword_1E9AFBD70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBD70);
  }
  return result;
}

uint64_t sub_1AFE92824(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6563697270 && a2 == 0xE500000000000000;
  if (v2 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6168436563697270 && a2 == 0xEB0000000065676ELL || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001AFFECE80 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x79636E6572727563 && a2 == 0xEC00000065646F43 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x65676E6168637865 && a2 == 0xEE00737574617453 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001AFFECE20)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_1AFFCBCE8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_1AFE92AE8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1AFE92B48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 8))(a1, 1, a2, a3);
}

uint64_t sub_1AFE92B6C(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v5 + 40) = a4;
  *(void *)(v5 + 48) = v4;
  *(unsigned char *)(v5 + 80) = a2;
  *(void *)(v5 + 24) = a1;
  *(void *)(v5 + 32) = a3;
  return MEMORY[0x1F4188298](sub_1AFE92B94, 0, 0);
}

uint64_t sub_1AFE92B94()
{
  *(void *)(v0 + 56) = (*(uint64_t (**)(void, void, void))(*(void *)(v0 + 40) + 8))(*(void *)(v0 + 24), *(unsigned __int8 *)(v0 + 80), *(void *)(v0 + 32));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1AFE92C58;
  return MEMORY[0x1F415EBC8](v0 + 16);
}

uint64_t sub_1AFE92C58()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    BOOL v2 = sub_1AFE2BA34;
  }
  else
  {
    swift_release();
    BOOL v2 = sub_1AFD4F160;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1AFE92D74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

unint64_t sub_1AFE92D8C(char a1)
{
  unint64_t result = 0x73756C507377656ELL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6F69647561;
      break;
    case 2:
      unint64_t result = 0xD000000000000016;
      break;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    case 4:
      unint64_t result = 0x6574726143616C61;
      break;
    case 5:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1AFE92E5C()
{
  return sub_1AFE92D8C(*v0);
}

uint64_t sub_1AFE92E64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1AFE96CA0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AFE92E8C(uint64_t a1)
{
  unint64_t v2 = sub_1AFE952A0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFE92EC8(uint64_t a1)
{
  unint64_t v2 = sub_1AFE952A0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FlexiblePaywall.encode(to:)(void *a1)
{
  sub_1AFE957DC(0, &qword_1EB81A020, (uint64_t (*)(void))sub_1AFE952A0, (uint64_t)&type metadata for FlexiblePaywall.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v22 - v6;
  long long v38 = *v1;
  uint64_t v9 = *((void *)v1 + 2);
  uint64_t v8 = *((void *)v1 + 3);
  uint64_t v10 = *((void *)v1 + 4);
  uint64_t v36 = *((void *)v1 + 5);
  uint64_t v37 = v10;
  uint64_t v11 = *((void *)v1 + 6);
  uint64_t v34 = *((void *)v1 + 7);
  uint64_t v35 = v11;
  uint64_t v12 = *((void *)v1 + 8);
  uint64_t v32 = *((void *)v1 + 9);
  uint64_t v33 = v12;
  uint64_t v13 = *((void *)v1 + 10);
  uint64_t v30 = *((void *)v1 + 11);
  uint64_t v31 = v13;
  uint64_t v14 = *((void *)v1 + 13);
  *(void *)&long long v27 = *((void *)v1 + 12);
  *((void *)&v27 + 1) = v14;
  uint64_t v15 = *((void *)v1 + 15);
  uint64_t v28 = *((void *)v1 + 14);
  uint64_t v29 = v15;
  long long v24 = v1[8];
  uint64_t v16 = *((void *)v1 + 18);
  uint64_t v25 = *((void *)v1 + 19);
  uint64_t v26 = v16;
  uint64_t v23 = *((void *)v1 + 20);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFE952A0();
  sub_1AFFCBE78();
  long long v40 = v38;
  uint64_t v41 = v9;
  uint64_t v42 = v8;
  char v43 = 0;
  sub_1AFE952F4();
  uint64_t v17 = v39;
  sub_1AFFCBBE8();
  if (!v17)
  {
    uint64_t v18 = v31;
    uint64_t v19 = v32;
    *(void *)&long long v40 = v37;
    *((void *)&v40 + 1) = v36;
    uint64_t v20 = v33;
    uint64_t v41 = v35;
    uint64_t v42 = v34;
    char v43 = 1;
    sub_1AFFCBBE8();
    *(void *)&long long v40 = v20;
    *((void *)&v40 + 1) = v19;
    uint64_t v41 = v18;
    uint64_t v42 = v30;
    char v43 = 2;
    sub_1AFFCBBE8();
    long long v40 = v27;
    uint64_t v41 = v28;
    uint64_t v42 = v29;
    char v43 = 3;
    sub_1AFFCBBE8();
    long long v40 = v24;
    uint64_t v41 = v26;
    uint64_t v42 = v25;
    char v43 = 4;
    sub_1AFFCBBE8();
    *(void *)&long long v40 = v23;
    char v43 = 5;
    sub_1AFE95348();
    sub_1AFE95404(&qword_1EB819C60, (void (*)(void))sub_1AFDC96C4);
    sub_1AFFCBBE8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t *FlexiblePaywall.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v65 = a2;
  sub_1AFE957DC(0, &qword_1EB819F60, (uint64_t (*)(void))sub_1AFE952A0, (uint64_t)&type metadata for FlexiblePaywall.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v66 = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v47 - v6;
  uint64_t v8 = a1[3];
  unsigned __int8 v67 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v8);
  sub_1AFE952A0();
  uint64_t v9 = v7;
  sub_1AFFCBE68();
  if (v2) {
    return (uint64_t *)__swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
  }
  uint64_t v64 = v5;
  LOBYTE(v68) = 0;
  unint64_t v10 = sub_1AFE953B0();
  uint64_t v11 = v66;
  uint64_t v12 = v9;
  sub_1AFFCBAF8();
  unint64_t v13 = v10;
  uint64_t v14 = *((void *)&v79 + 1);
  unint64_t v16 = v80;
  unint64_t v15 = v81;
  LOBYTE(v68) = 1;
  uint64_t v17 = v79;
  sub_1AFDB3B98(v79);
  unint64_t v63 = v13;
  sub_1AFFCBAF8();
  *(void *)&long long v60 = v17;
  *((void *)&v60 + 1) = v14;
  unint64_t v62 = v15;
  unint64_t v59 = v16;
  long long v18 = v79;
  unint64_t v19 = v80;
  unint64_t v20 = v81;
  LOBYTE(v68) = 2;
  sub_1AFDB3B98(v79);
  sub_1AFFCBAF8();
  uint64_t v61 = v18;
  unint64_t v51 = v20;
  uint64_t v52 = *((void *)&v18 + 1);
  unint64_t v53 = v19;
  long long v21 = v79;
  unint64_t v22 = v80;
  unint64_t v23 = v81;
  LOBYTE(v68) = 3;
  sub_1AFDB3B98(v79);
  uint64_t v50 = 0;
  sub_1AFFCBAF8();
  unint64_t v55 = v22;
  unint64_t v56 = v23;
  long long v54 = v21;
  long long v24 = v79;
  unint64_t v26 = v80;
  unint64_t v25 = v81;
  LOBYTE(v68) = 4;
  sub_1AFDB3B98(v79);
  sub_1AFFCBAF8();
  *(void *)&long long v49 = v26;
  *((void *)&v49 + 1) = v25;
  long long v48 = v24;
  long long v27 = v79;
  unint64_t v29 = v80;
  unint64_t v28 = v81;
  sub_1AFE95348();
  char v95 = 5;
  long long v57 = v27;
  unint64_t v58 = v29;
  unint64_t v63 = v28;
  sub_1AFDB3B98(v27);
  sub_1AFE95404((unint64_t *)&unk_1EB819C68, (void (*)(void))sub_1AFDC9380);
  sub_1AFFCBAF8();
  uint64_t v30 = *((void *)&v54 + 1);
  unint64_t v31 = v55;
  uint64_t v32 = v54;
  (*(void (**)(char *, uint64_t))(v64 + 8))(v12, v11);
  uint64_t v66 = v96;
  long long v68 = v60;
  *(void *)&long long v69 = v59;
  *((void *)&v69 + 1) = v62;
  *(void *)&long long v70 = v61;
  *((void *)&v70 + 1) = v52;
  *(void *)&long long v71 = v53;
  *((void *)&v71 + 1) = v51;
  *(void *)&long long v72 = v32;
  *((void *)&v72 + 1) = v30;
  uint64_t v33 = v57;
  unsigned long long v73 = __PAIR128__(v56, v31);
  uint64_t v34 = v48;
  long long v74 = v48;
  long long v75 = v49;
  long long v76 = v57;
  *(void *)&long long v77 = v58;
  *((void *)&v77 + 1) = v63;
  uint64_t v78 = v96;
  sub_1AFDCB084((uint64_t *)&v68);
  sub_1AFD56220(v33);
  sub_1AFD56220(v34);
  sub_1AFD56220(v54);
  uint64_t v35 = v61;
  unint64_t v36 = v51;
  sub_1AFD56220(v61);
  long long v37 = v60;
  unint64_t v38 = v59;
  unint64_t v39 = v62;
  sub_1AFD56220(v60);
  long long v40 = v77;
  uint64_t v41 = v65;
  *(_OWORD *)(v65 + 128) = v76;
  *(_OWORD *)(v41 + 144) = v40;
  *(void *)(v41 + 160) = v78;
  unsigned long long v42 = v73;
  *(_OWORD *)(v41 + 64) = v72;
  *(_OWORD *)(v41 + 80) = v42;
  long long v43 = v75;
  *(_OWORD *)(v41 + 96) = v74;
  *(_OWORD *)(v41 + 112) = v43;
  long long v44 = v69;
  *(_OWORD *)uint64_t v41 = v68;
  *(_OWORD *)(v41 + 16) = v44;
  long long v45 = v71;
  *(_OWORD *)(v41 + 32) = v70;
  *(_OWORD *)(v41 + 48) = v45;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
  long long v79 = v37;
  unint64_t v80 = v38;
  unint64_t v81 = v39;
  uint64_t v82 = v35;
  uint64_t v83 = v52;
  unint64_t v84 = v53;
  unint64_t v85 = v36;
  long long v86 = v54;
  unint64_t v87 = v55;
  unint64_t v88 = v56;
  long long v89 = v48;
  long long v90 = v49;
  long long v91 = v57;
  unint64_t v92 = v58;
  unint64_t v93 = v63;
  uint64_t v94 = v66;
  return sub_1AFDCB170((uint64_t *)&v79);
}

uint64_t *sub_1AFE93B24@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FlexiblePaywall.init(from:)(a1, a2);
}

uint64_t sub_1AFE93B3C(void *a1)
{
  return FlexiblePaywall.encode(to:)(a1);
}

unint64_t sub_1AFE93B5C()
{
  unint64_t result = 0x53656C6369747261;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x48656C6369747261;
      break;
    case 2:
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1AFE93BF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1AFE96F04(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AFE93C1C(uint64_t a1)
{
  unint64_t v2 = sub_1AFE9547C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFE93C58(uint64_t a1)
{
  unint64_t v2 = sub_1AFE9547C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFE93C94(void *a1)
{
  sub_1AFE957DC(0, &qword_1EB81A0B0, (uint64_t (*)(void))sub_1AFE9547C, (uint64_t)&type metadata for FlexiblePaywallResourceByLocationConfig.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v14 - v6;
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  uint64_t v16 = v1[2];
  uint64_t v17 = v8;
  uint64_t v15 = v1[3];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFE9547C();
  sub_1AFFCBE78();
  uint64_t v20 = v9;
  char v19 = 0;
  sub_1AFE954D0();
  sub_1AFE9557C(&qword_1EB819D28, (void (*)(void))sub_1AFE95528);
  uint64_t v10 = v18;
  sub_1AFFCBBE8();
  if (!v10)
  {
    uint64_t v11 = v15;
    uint64_t v12 = v16;
    uint64_t v20 = v17;
    char v19 = 1;
    sub_1AFFCBBE8();
    uint64_t v20 = v12;
    char v19 = 2;
    sub_1AFFCBBE8();
    uint64_t v20 = v11;
    char v19 = 3;
    sub_1AFFCBBE8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1AFE93F08@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1AFE957DC(0, &qword_1EB819FF8, (uint64_t (*)(void))sub_1AFE9547C, (uint64_t)&type metadata for FlexiblePaywallResourceByLocationConfig.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v22 = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v19 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFE9547C();
  sub_1AFFCBE68();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  long long v21 = a2;
  sub_1AFE954D0();
  char v23 = 0;
  sub_1AFE9557C(&qword_1EB819D30, (void (*)(void))sub_1AFE955E8);
  uint64_t v10 = v22;
  sub_1AFFCBAF8();
  uint64_t v11 = v24;
  char v23 = 1;
  sub_1AFFC8E38();
  sub_1AFFCBAF8();
  uint64_t v20 = v11;
  uint64_t v12 = v24;
  char v23 = 2;
  sub_1AFFC8E38();
  v19[1] = 0;
  sub_1AFFCBAF8();
  v19[0] = v12;
  uint64_t v13 = v24;
  char v23 = 3;
  sub_1AFFC8E38();
  sub_1AFFCBAF8();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v10);
  uint64_t v15 = v24;
  sub_1AFFC8E38();
  uint64_t v16 = v13;
  uint64_t v17 = v21;
  uint64_t v18 = v19[0];
  *long long v21 = v20;
  v17[1] = v18;
  v17[2] = v16;
  v17[3] = v15;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFE942F8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1AFE93F08(a1, a2);
}

uint64_t sub_1AFE94310(void *a1)
{
  return sub_1AFE93C94(a1);
}

uint64_t sub_1AFE94330()
{
  uint64_t result = 0x656372756F736572;
  switch(*v0)
  {
    case 1:
      unsigned int v2 = 1315858797;
      goto LABEL_4;
    case 2:
      unsigned int v2 = 1316512109;
LABEL_4:
      uint64_t result = v2 | 0x5673776500000000;
      break;
    case 3:
      uint64_t result = 0x7250646C756F6873;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1AFE943D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1AFE970E4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AFE943F8(uint64_t a1)
{
  unint64_t v2 = sub_1AFE95788();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFE94434(uint64_t a1)
{
  unint64_t v2 = sub_1AFE95788();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFE94470(void *a1)
{
  sub_1AFE957DC(0, &qword_1EB81A058, (uint64_t (*)(void))sub_1AFE95788, (uint64_t)&type metadata for FlexiblePaywallResource.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v12 - v6;
  uint64_t v8 = *(void *)(v1 + 16);
  v12[3] = *(void *)(v1 + 24);
  v12[4] = v8;
  uint64_t v9 = *(void *)(v1 + 32);
  v12[1] = *(void *)(v1 + 40);
  void v12[2] = v9;
  int v13 = *(unsigned __int8 *)(v1 + 48);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFE95788();
  sub_1AFFCBE78();
  char v17 = 0;
  uint64_t v10 = v12[5];
  sub_1AFFCBC08();
  if (!v10)
  {
    char v16 = 1;
    sub_1AFFCBB98();
    char v15 = 2;
    sub_1AFFCBB98();
    char v14 = 3;
    sub_1AFFCBBA8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1AFE94688@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  long long v27 = a2;
  sub_1AFE957DC(0, &qword_1EB819FA0, (uint64_t (*)(void))sub_1AFE95788, (uint64_t)&type metadata for FlexiblePaywallResource.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v22 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFE95788();
  sub_1AFFCBE68();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  char v31 = 0;
  uint64_t v10 = v5;
  uint64_t v11 = sub_1AFFCBB18();
  uint64_t v13 = v12;
  char v30 = 1;
  sub_1AFFC8E38();
  uint64_t v14 = sub_1AFFCBAA8();
  uint64_t v26 = v15;
  uint64_t v25 = v14;
  char v29 = 2;
  sub_1AFFC8E38();
  uint64_t v23 = sub_1AFFCBAA8();
  uint64_t v24 = v16;
  char v28 = 3;
  sub_1AFFC8E38();
  char v18 = sub_1AFFCBAB8();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v10);
  char v19 = v27;
  *long long v27 = v11;
  v19[1] = v13;
  uint64_t v20 = v26;
  void v19[2] = v25;
  v19[3] = v20;
  uint64_t v21 = v24;
  v19[4] = v23;
  v19[5] = v21;
  *((unsigned char *)v19 + 48) = v18;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFE949C8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1AFE94688(a1, a2);
}

uint64_t sub_1AFE949E0(void *a1)
{
  return sub_1AFE94470(a1);
}

uint64_t sub_1AFE949FC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a1;
  uint64_t v6 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v7 = a1[3];
  uint64_t v8 = *a2;
  uint64_t v10 = a2[1];
  uint64_t v9 = a2[2];
  uint64_t v11 = a2[3];
  if (v4)
  {
    if (!v8 || (sub_1AFF24764(v4, v8) & 1) == 0) {
      return 0;
    }
  }
  else if (v8)
  {
    return 0;
  }
  if (v6)
  {
    if (!v10 || (sub_1AFF24764(v6, v10) & 1) == 0) {
      return 0;
    }
  }
  else if (v10)
  {
    return 0;
  }
  if (v5)
  {
    if (!v9 || (sub_1AFF24764(v5, v9) & 1) == 0) {
      return 0;
    }
  }
  else if (v9)
  {
    return 0;
  }
  if (v7)
  {
    if (v11 && (sub_1AFF24764(v7, v11) & 1) != 0) {
      return 1;
    }
  }
  else if (!v11)
  {
    return 1;
  }
  return 0;
}

BOOL _s10StocksCore15FlexiblePaywallV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v6 = a1[4];
  uint64_t v116 = a1[5];
  uint64_t v117 = a1[6];
  uint64_t v118 = a1[7];
  uint64_t v108 = a1[9];
  uint64_t v109 = a1[10];
  uint64_t v7 = a1[12];
  uint64_t v110 = a1[11];
  uint64_t v111 = a1[8];
  uint64_t v8 = a1[13];
  uint64_t v9 = a1[14];
  uint64_t v10 = a1[15];
  uint64_t v11 = a1[16];
  uint64_t v13 = a1[17];
  uint64_t v12 = a1[18];
  uint64_t v15 = a1[19];
  uint64_t v14 = a1[20];
  uint64_t v16 = *a2;
  uint64_t v17 = a2[1];
  uint64_t v18 = a2[2];
  uint64_t v19 = a2[3];
  uint64_t v20 = a2[4];
  uint64_t v112 = a2[5];
  uint64_t v113 = a2[6];
  uint64_t v114 = a2[7];
  uint64_t v107 = a2[8];
  uint64_t v104 = a2[9];
  uint64_t v105 = a2[10];
  uint64_t v21 = a2[12];
  uint64_t v106 = a2[11];
  uint64_t v23 = a2[13];
  uint64_t v22 = a2[14];
  uint64_t v24 = a2[15];
  uint64_t v25 = a2[16];
  uint64_t v27 = a2[17];
  uint64_t v26 = a2[18];
  uint64_t v29 = a2[19];
  uint64_t v28 = a2[20];
  if (v3 == 1)
  {
    if (v16 == 1) {
      goto LABEL_8;
    }
LABEL_6:
    sub_1AFDB3B98(v16);
    sub_1AFD56220(v3);
    uint64_t v30 = v16;
LABEL_29:
    sub_1AFD56220(v30);
    return 0;
  }
  uint64_t v125 = v3;
  uint64_t v126 = v2;
  uint64_t v127 = v5;
  uint64_t v128 = v4;
  if (v16 == 1)
  {
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    goto LABEL_6;
  }
  uint64_t v121 = v16;
  uint64_t v122 = v17;
  uint64_t v123 = v18;
  uint64_t v124 = v19;
  uint64_t v95 = v15;
  uint64_t v99 = v14;
  uint64_t v87 = v28;
  uint64_t v91 = v12;
  uint64_t v71 = v25;
  uint64_t v75 = v29;
  uint64_t v48 = v7;
  uint64_t v50 = v21;
  uint64_t v79 = v11;
  uint64_t v83 = v13;
  uint64_t v65 = v27;
  uint64_t v68 = v26;
  uint64_t v59 = v9;
  uint64_t v62 = v10;
  uint64_t v53 = v24;
  uint64_t v56 = v8;
  uint64_t v47 = v22;
  char v46 = sub_1AFE949FC(&v125, &v121);
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v21 = v50;
  uint64_t v24 = v53;
  uint64_t v22 = v47;
  uint64_t v7 = v48;
  uint64_t v8 = v56;
  uint64_t v9 = v59;
  uint64_t v10 = v62;
  uint64_t v27 = v65;
  uint64_t v26 = v68;
  uint64_t v25 = v71;
  uint64_t v29 = v75;
  uint64_t v11 = v79;
  uint64_t v13 = v83;
  uint64_t v28 = v87;
  uint64_t v12 = v91;
  uint64_t v15 = v95;
  uint64_t v14 = v99;
  if ((v46 & 1) == 0) {
    return 0;
  }
LABEL_8:
  if (v6 == 1)
  {
    if (v20 == 1) {
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  uint64_t v125 = v6;
  uint64_t v126 = v116;
  uint64_t v127 = v117;
  uint64_t v128 = v118;
  if (v20 == 1)
  {
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
LABEL_13:
    sub_1AFDB3B98(v20);
    sub_1AFD56220(v6);
    uint64_t v30 = v20;
    goto LABEL_29;
  }
  uint64_t v121 = v20;
  uint64_t v122 = v112;
  uint64_t v123 = v113;
  uint64_t v124 = v114;
  uint64_t v96 = v15;
  uint64_t v100 = v14;
  uint64_t v88 = v28;
  uint64_t v92 = v12;
  uint64_t v72 = v25;
  uint64_t v76 = v29;
  uint64_t v49 = v7;
  uint64_t v51 = v21;
  uint64_t v80 = v11;
  uint64_t v84 = v13;
  uint64_t v66 = v27;
  uint64_t v69 = v26;
  uint64_t v60 = v9;
  uint64_t v63 = v10;
  uint64_t v54 = v24;
  uint64_t v57 = v8;
  uint64_t v31 = v22;
  char v115 = sub_1AFE949FC(&v125, &v121);
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v21 = v51;
  uint64_t v24 = v54;
  uint64_t v22 = v31;
  uint64_t v7 = v49;
  uint64_t v8 = v57;
  uint64_t v9 = v60;
  uint64_t v10 = v63;
  uint64_t v27 = v66;
  uint64_t v26 = v69;
  uint64_t v25 = v72;
  uint64_t v29 = v76;
  uint64_t v11 = v80;
  uint64_t v13 = v84;
  uint64_t v28 = v88;
  uint64_t v12 = v92;
  uint64_t v15 = v96;
  uint64_t v14 = v100;
  if ((v115 & 1) == 0) {
    return 0;
  }
LABEL_15:
  uint64_t v32 = v111;
  if (v111 == 1)
  {
    uint64_t v33 = v107;
    if (v107 == 1) {
      goto LABEL_22;
    }
LABEL_20:
    uint64_t v21 = v33;
LABEL_28:
    sub_1AFDB3B98(v21);
    sub_1AFD56220(v32);
    uint64_t v30 = v33;
    goto LABEL_29;
  }
  uint64_t v125 = v111;
  uint64_t v126 = v108;
  uint64_t v127 = v109;
  uint64_t v128 = v110;
  uint64_t v33 = v107;
  if (v107 == 1)
  {
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    goto LABEL_20;
  }
  uint64_t v121 = v107;
  uint64_t v122 = v104;
  uint64_t v123 = v105;
  uint64_t v124 = v106;
  uint64_t v97 = v15;
  uint64_t v101 = v14;
  uint64_t v89 = v28;
  uint64_t v93 = v12;
  uint64_t v73 = v25;
  uint64_t v77 = v29;
  uint64_t v52 = v21;
  uint64_t v55 = v24;
  uint64_t v81 = v11;
  uint64_t v85 = v13;
  uint64_t v67 = v27;
  uint64_t v70 = v26;
  uint64_t v61 = v9;
  uint64_t v64 = v10;
  uint64_t v58 = v8;
  uint64_t v34 = v7;
  uint64_t v35 = v22;
  char v119 = sub_1AFE949FC(&v125, &v121);
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v21 = v52;
  uint64_t v24 = v55;
  uint64_t v22 = v35;
  uint64_t v7 = v34;
  uint64_t v8 = v58;
  uint64_t v9 = v61;
  uint64_t v10 = v64;
  uint64_t v27 = v67;
  uint64_t v26 = v70;
  uint64_t v25 = v73;
  uint64_t v29 = v77;
  uint64_t v11 = v81;
  uint64_t v13 = v85;
  uint64_t v28 = v89;
  uint64_t v12 = v93;
  uint64_t v15 = v97;
  uint64_t v14 = v101;
  if ((v119 & 1) == 0) {
    return 0;
  }
LABEL_22:
  if (v7 == 1)
  {
    uint64_t v32 = 1;
    if (v21 == 1) {
      goto LABEL_32;
    }
    goto LABEL_27;
  }
  uint64_t v125 = v7;
  uint64_t v126 = v8;
  uint64_t v127 = v9;
  uint64_t v128 = v10;
  if (v21 == 1)
  {
    uint64_t v32 = v7;
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    uint64_t v21 = 1;
LABEL_27:
    uint64_t v33 = v21;
    goto LABEL_28;
  }
  uint64_t v121 = v21;
  uint64_t v122 = v23;
  uint64_t v123 = v22;
  uint64_t v124 = v24;
  uint64_t v98 = v15;
  uint64_t v102 = v14;
  uint64_t v90 = v28;
  uint64_t v94 = v12;
  uint64_t v74 = v25;
  uint64_t v78 = v29;
  uint64_t v82 = v11;
  uint64_t v86 = v13;
  uint64_t v37 = v26;
  uint64_t v38 = v27;
  char v120 = sub_1AFE949FC(&v125, &v121);
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v25 = v74;
  uint64_t v29 = v78;
  uint64_t v27 = v38;
  uint64_t v26 = v37;
  uint64_t v11 = v82;
  uint64_t v13 = v86;
  uint64_t v28 = v90;
  uint64_t v12 = v94;
  uint64_t v15 = v98;
  uint64_t v14 = v102;
  if ((v120 & 1) == 0) {
    return 0;
  }
LABEL_32:
  if (v11 == 1)
  {
    uint64_t v39 = 1;
    if (v25 == 1) {
      goto LABEL_39;
    }
    goto LABEL_37;
  }
  uint64_t v125 = v11;
  uint64_t v126 = v13;
  uint64_t v127 = v12;
  uint64_t v128 = v15;
  if (v25 == 1)
  {
    uint64_t v39 = v11;
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    uint64_t v25 = 1;
LABEL_37:
    uint64_t v40 = v25;
    sub_1AFDB3B98(v25);
    sub_1AFD56220(v39);
    uint64_t v30 = v40;
    goto LABEL_29;
  }
  uint64_t v121 = v25;
  uint64_t v122 = v27;
  uint64_t v123 = v26;
  uint64_t v124 = v29;
  uint64_t v103 = v14;
  uint64_t v41 = v28;
  char v42 = sub_1AFE949FC(&v125, &v121);
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v28 = v41;
  uint64_t v14 = v103;
  if ((v42 & 1) == 0) {
    return 0;
  }
LABEL_39:
  if (v14)
  {
    if (v28)
    {
      uint64_t v43 = v28;
      sub_1AFFC8E38();
      uint64_t v44 = sub_1AFFC8E38();
      char v45 = sub_1AFE9C0E4(v44, v43);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v45) {
        return 1;
      }
    }
    return 0;
  }
  return !v28;
}

unint64_t sub_1AFE952A0()
{
  unint64_t result = qword_1EB818EA0;
  if (!qword_1EB818EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818EA0);
  }
  return result;
}

unint64_t sub_1AFE952F4()
{
  unint64_t result = qword_1EB8199A8;
  if (!qword_1EB8199A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8199A8);
  }
  return result;
}

void sub_1AFE95348()
{
  if (!qword_1EB819C58)
  {
    unint64_t v0 = sub_1AFFCAD18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB819C58);
    }
  }
}

unint64_t sub_1AFE953B0()
{
  unint64_t result = qword_1EB8199B0;
  if (!qword_1EB8199B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8199B0);
  }
  return result;
}

uint64_t sub_1AFE95404(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1AFE95348();
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1AFE9547C()
{
  unint64_t result = qword_1EB819990;
  if (!qword_1EB819990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819990);
  }
  return result;
}

void sub_1AFE954D0()
{
  if (!qword_1EB819D20)
  {
    unint64_t v0 = sub_1AFFCB288();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB819D20);
    }
  }
}

unint64_t sub_1AFE95528()
{
  unint64_t result = qword_1EB8195A8;
  if (!qword_1EB8195A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8195A8);
  }
  return result;
}

uint64_t sub_1AFE9557C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1AFE954D0();
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1AFE955E8()
{
  unint64_t result = qword_1EB8195B0;
  if (!qword_1EB8195B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8195B0);
  }
  return result;
}

uint64_t sub_1AFE9563C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  int v6 = *(unsigned __int8 *)(a1 + 48);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v10 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  int v11 = *(unsigned __int8 *)(a2 + 48);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (char v12 = sub_1AFFCBCE8(), result = 0, (v12 & 1) != 0))
  {
    if (v4)
    {
      if (!v7) {
        return 0;
      }
      if (v2 != v8 || v4 != v7)
      {
        char v14 = sub_1AFFCBCE8();
        uint64_t result = 0;
        if ((v14 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v7)
    {
      return 0;
    }
    if (v5)
    {
      if (v9)
      {
        if (v3 != v10 || v5 != v9)
        {
          char v15 = sub_1AFFCBCE8();
          uint64_t result = 0;
          if ((v15 & 1) == 0) {
            return result;
          }
        }
LABEL_18:
        if (v6 == 2)
        {
          if (v11 != 2) {
            return 0;
          }
        }
        else if (v11 == 2 || ((((v6 & 1) == 0) ^ v11) & 1) == 0)
        {
          return 0;
        }
        return 1;
      }
    }
    else if (!v9)
    {
      goto LABEL_18;
    }
    return 0;
  }
  return result;
}

unint64_t sub_1AFE95788()
{
  unint64_t result = qword_1EB819590;
  if (!qword_1EB819590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819590);
  }
  return result;
}

void sub_1AFE957DC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t destroy for FlexiblePaywall(void *a1)
{
  if (*a1 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[4] != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[8] != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[12] != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[16] != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FlexiblePaywall(uint64_t a1, uint64_t a2)
{
  if (*(void *)a2 == 1)
  {
    long long v4 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v4;
  }
  else
  {
    uint64_t v5 = *(void *)(a2 + 8);
    uint64_t v6 = *(void *)(a2 + 16);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v5;
    uint64_t v7 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = v6;
    *(void *)(a1 + 24) = v7;
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
  }
  uint64_t v8 = *(void *)(a2 + 32);
  if (v8 == 1)
  {
    long long v9 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v9;
  }
  else
  {
    uint64_t v10 = *(void *)(a2 + 40);
    uint64_t v11 = *(void *)(a2 + 48);
    *(void *)(a1 + 32) = v8;
    *(void *)(a1 + 40) = v10;
    uint64_t v12 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = v11;
    *(void *)(a1 + 56) = v12;
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
  }
  uint64_t v13 = *(void *)(a2 + 64);
  if (v13 == 1)
  {
    long long v14 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v14;
  }
  else
  {
    uint64_t v15 = *(void *)(a2 + 72);
    uint64_t v16 = *(void *)(a2 + 80);
    *(void *)(a1 + 64) = v13;
    *(void *)(a1 + 72) = v15;
    uint64_t v17 = *(void *)(a2 + 88);
    *(void *)(a1 + 80) = v16;
    *(void *)(a1 + 88) = v17;
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
  }
  uint64_t v18 = *(void *)(a2 + 96);
  if (v18 == 1)
  {
    long long v19 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v19;
  }
  else
  {
    uint64_t v20 = *(void *)(a2 + 104);
    uint64_t v21 = *(void *)(a2 + 112);
    *(void *)(a1 + 96) = v18;
    *(void *)(a1 + 104) = v20;
    uint64_t v22 = *(void *)(a2 + 120);
    *(void *)(a1 + 112) = v21;
    *(void *)(a1 + 120) = v22;
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
  }
  uint64_t v23 = *(void *)(a2 + 128);
  if (v23 == 1)
  {
    long long v24 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v24;
  }
  else
  {
    uint64_t v25 = *(void *)(a2 + 136);
    uint64_t v26 = *(void *)(a2 + 144);
    *(void *)(a1 + 128) = v23;
    *(void *)(a1 + 136) = v25;
    uint64_t v27 = *(void *)(a2 + 152);
    *(void *)(a1 + 144) = v26;
    *(void *)(a1 + 152) = v27;
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
  }
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  sub_1AFFC8E38();
  return a1;
}

uint64_t assignWithCopy for FlexiblePaywall(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *a2;
  if (v4 == 1)
  {
    if (v5 == 1)
    {
      long long v6 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
    }
    else
    {
      *(void *)a1 = v5;
      *(void *)(a1 + 8) = a2[1];
      *(void *)(a1 + 16) = a2[2];
      *(void *)(a1 + 24) = a2[3];
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
    }
  }
  else if (v5 == 1)
  {
    sub_1AFDCA6AC(a1);
    long long v7 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
  }
  else
  {
    *(void *)a1 = v5;
    sub_1AFFC8E38();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 8) = a2[1];
    sub_1AFFC8E38();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 16) = a2[2];
    sub_1AFFC8E38();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 24) = a2[3];
    sub_1AFFC8E38();
    swift_bridgeObjectRelease();
  }
  uint64_t v8 = (_OWORD *)(a1 + 32);
  uint64_t v10 = a2 + 4;
  uint64_t v9 = a2[4];
  if (*(void *)(a1 + 32) == 1)
  {
    if (v9 == 1)
    {
      long long v11 = *((_OWORD *)a2 + 3);
      *uint64_t v8 = *v10;
      *(_OWORD *)(a1 + 48) = v11;
    }
    else
    {
      *(void *)(a1 + 32) = v9;
      *(void *)(a1 + 40) = a2[5];
      *(void *)(a1 + 48) = a2[6];
      *(void *)(a1 + 56) = a2[7];
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
    }
  }
  else if (v9 == 1)
  {
    sub_1AFDCA6AC(a1 + 32);
    long long v12 = *((_OWORD *)a2 + 3);
    *uint64_t v8 = *v10;
    *(_OWORD *)(a1 + 48) = v12;
  }
  else
  {
    *(void *)(a1 + 32) = v9;
    sub_1AFFC8E38();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 40) = a2[5];
    sub_1AFFC8E38();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 48) = a2[6];
    sub_1AFFC8E38();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 56) = a2[7];
    sub_1AFFC8E38();
    swift_bridgeObjectRelease();
  }
  uint64_t v13 = (_OWORD *)(a1 + 64);
  uint64_t v15 = a2 + 8;
  uint64_t v14 = a2[8];
  if (*(void *)(a1 + 64) == 1)
  {
    if (v14 == 1)
    {
      long long v16 = *((_OWORD *)a2 + 5);
      *uint64_t v13 = *v15;
      *(_OWORD *)(a1 + 80) = v16;
    }
    else
    {
      *(void *)(a1 + 64) = v14;
      *(void *)(a1 + 72) = a2[9];
      *(void *)(a1 + 80) = a2[10];
      *(void *)(a1 + 88) = a2[11];
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
    }
  }
  else if (v14 == 1)
  {
    sub_1AFDCA6AC(a1 + 64);
    long long v17 = *((_OWORD *)a2 + 5);
    *uint64_t v13 = *v15;
    *(_OWORD *)(a1 + 80) = v17;
  }
  else
  {
    *(void *)(a1 + 64) = v14;
    sub_1AFFC8E38();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 72) = a2[9];
    sub_1AFFC8E38();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 80) = a2[10];
    sub_1AFFC8E38();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 88) = a2[11];
    sub_1AFFC8E38();
    swift_bridgeObjectRelease();
  }
  uint64_t v18 = (_OWORD *)(a1 + 96);
  uint64_t v20 = a2 + 12;
  uint64_t v19 = a2[12];
  if (*(void *)(a1 + 96) == 1)
  {
    if (v19 == 1)
    {
      long long v21 = *((_OWORD *)a2 + 7);
      *uint64_t v18 = *v20;
      *(_OWORD *)(a1 + 112) = v21;
    }
    else
    {
      *(void *)(a1 + 96) = v19;
      *(void *)(a1 + 104) = a2[13];
      *(void *)(a1 + 112) = a2[14];
      *(void *)(a1 + 120) = a2[15];
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
    }
  }
  else if (v19 == 1)
  {
    sub_1AFDCA6AC(a1 + 96);
    long long v22 = *((_OWORD *)a2 + 7);
    *uint64_t v18 = *v20;
    *(_OWORD *)(a1 + 112) = v22;
  }
  else
  {
    *(void *)(a1 + 96) = v19;
    sub_1AFFC8E38();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 104) = a2[13];
    sub_1AFFC8E38();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 112) = a2[14];
    sub_1AFFC8E38();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 120) = a2[15];
    sub_1AFFC8E38();
    swift_bridgeObjectRelease();
  }
  uint64_t v23 = (_OWORD *)(a1 + 128);
  uint64_t v25 = a2 + 16;
  uint64_t v24 = a2[16];
  if (*(void *)(a1 + 128) == 1)
  {
    if (v24 == 1)
    {
      long long v26 = *((_OWORD *)a2 + 9);
      *uint64_t v23 = *v25;
      *(_OWORD *)(a1 + 144) = v26;
    }
    else
    {
      *(void *)(a1 + 128) = v24;
      *(void *)(a1 + 136) = a2[17];
      *(void *)(a1 + 144) = a2[18];
      *(void *)(a1 + 152) = a2[19];
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
    }
  }
  else if (v24 == 1)
  {
    sub_1AFDCA6AC(a1 + 128);
    long long v27 = *((_OWORD *)a2 + 9);
    *uint64_t v23 = *v25;
    *(_OWORD *)(a1 + 144) = v27;
  }
  else
  {
    *(void *)(a1 + 128) = v24;
    sub_1AFFC8E38();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 136) = a2[17];
    sub_1AFFC8E38();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 144) = a2[18];
    sub_1AFFC8E38();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 152) = a2[19];
    sub_1AFFC8E38();
    swift_bridgeObjectRelease();
  }
  *(void *)(a1 + 160) = a2[20];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy168_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[9];
  *(void *)(a1 + 160) = *((void *)a2 + 20);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t assignWithTake for FlexiblePaywall(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 == 1) {
    goto LABEL_4;
  }
  if (*(void *)a2 == 1)
  {
    sub_1AFDCA6AC(a1);
LABEL_4:
    long long v4 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v4;
    goto LABEL_6;
  }
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v5 = *(void *)(a2 + 32);
  if (*(void *)(a1 + 32) == 1)
  {
LABEL_9:
    long long v6 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v6;
    goto LABEL_11;
  }
  if (v5 == 1)
  {
    sub_1AFDCA6AC(a1 + 32);
    goto LABEL_9;
  }
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
LABEL_11:
  uint64_t v7 = *(void *)(a2 + 64);
  if (*(void *)(a1 + 64) == 1)
  {
LABEL_14:
    long long v8 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v8;
    goto LABEL_16;
  }
  if (v7 == 1)
  {
    sub_1AFDCA6AC(a1 + 64);
    goto LABEL_14;
  }
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
LABEL_16:
  uint64_t v9 = *(void *)(a2 + 96);
  if (*(void *)(a1 + 96) == 1)
  {
LABEL_19:
    long long v10 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v10;
    goto LABEL_21;
  }
  if (v9 == 1)
  {
    sub_1AFDCA6AC(a1 + 96);
    goto LABEL_19;
  }
  *(void *)(a1 + 96) = v9;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRelease();
LABEL_21:
  uint64_t v11 = *(void *)(a2 + 128);
  if (*(void *)(a1 + 128) != 1)
  {
    if (v11 != 1)
    {
      *(void *)(a1 + 128) = v11;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      swift_bridgeObjectRelease();
      goto LABEL_26;
    }
    sub_1AFDCA6AC(a1 + 128);
  }
  long long v12 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v12;
LABEL_26:
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FlexiblePaywall(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 168)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 160);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FlexiblePaywall(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 168) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 168) = 0;
    }
    if (a2) {
      *(void *)(result + 160) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FlexiblePaywall()
{
  return &type metadata for FlexiblePaywall;
}

uint64_t destroy for FlexiblePaywallResourceByLocationConfig()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for FlexiblePaywallResourceByLocationConfig(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  return a1;
}

void *assignWithCopy for FlexiblePaywallResourceByLocationConfig(void *a1, void *a2)
{
  *a1 = *a2;
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for FlexiblePaywallResourceByLocationConfig(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FlexiblePaywallResourceByLocationConfig(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 32)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FlexiblePaywallResourceByLocationConfig(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FlexiblePaywallResourceByLocationConfig()
{
  return &type metadata for FlexiblePaywallResourceByLocationConfig;
}

uint64_t initializeWithCopy for FlexiblePaywallResource(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  return a1;
}

uint64_t assignWithCopy for FlexiblePaywallResource(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for FlexiblePaywallResource(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for FlexiblePaywallResource(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 49)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FlexiblePaywallResource(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 49) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FlexiblePaywallResource()
{
  return &type metadata for FlexiblePaywallResource;
}

ValueMetadata *type metadata accessor for FlexiblePaywallResource.CodingKeys()
{
  return &type metadata for FlexiblePaywallResource.CodingKeys;
}

unsigned char *_s10StocksCore23FlexiblePaywallResourceV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFE9684CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FlexiblePaywallResourceByLocationConfig.CodingKeys()
{
  return &type metadata for FlexiblePaywallResourceByLocationConfig.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for FlexiblePaywall.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *__n128 result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFE96950);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FlexiblePaywall.CodingKeys()
{
  return &type metadata for FlexiblePaywall.CodingKeys;
}

unint64_t sub_1AFE9698C()
{
  unint64_t result = qword_1E9AFBD80;
  if (!qword_1E9AFBD80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBD80);
  }
  return result;
}

unint64_t sub_1AFE969E4()
{
  unint64_t result = qword_1E9AFBD88;
  if (!qword_1E9AFBD88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBD88);
  }
  return result;
}

unint64_t sub_1AFE96A3C()
{
  unint64_t result = qword_1E9AFBD90;
  if (!qword_1E9AFBD90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBD90);
  }
  return result;
}

unint64_t sub_1AFE96A94()
{
  unint64_t result = qword_1EB8195A0;
  if (!qword_1EB8195A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8195A0);
  }
  return result;
}

unint64_t sub_1AFE96AEC()
{
  unint64_t result = qword_1EB819598;
  if (!qword_1EB819598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819598);
  }
  return result;
}

unint64_t sub_1AFE96B44()
{
  unint64_t result = qword_1EB8199A0;
  if (!qword_1EB8199A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8199A0);
  }
  return result;
}

unint64_t sub_1AFE96B9C()
{
  unint64_t result = qword_1EB819998;
  if (!qword_1EB819998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB819998);
  }
  return result;
}

unint64_t sub_1AFE96BF4()
{
  unint64_t result = qword_1EB818EB0;
  if (!qword_1EB818EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818EB0);
  }
  return result;
}

unint64_t sub_1AFE96C4C()
{
  unint64_t result = qword_1EB818EA8;
  if (!qword_1EB818EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB818EA8);
  }
  return result;
}

uint64_t sub_1AFE96CA0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73756C507377656ELL && a2 == 0xE800000000000000;
  if (v2 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F69647561 && a2 == 0xE500000000000000 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001AFFF7FC0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001AFFF7FE0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6574726143616C61 && a2 == 0xE800000000000000 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001AFFF8000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_1AFFCBCE8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_1AFE96F04(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x53656C6369747261 && a2 == 0xEB0000000074666FLL;
  if (v2 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x48656C6369747261 && a2 == 0xEB00000000647261 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001AFFF8020 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001AFFF8040)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1AFFCBCE8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1AFE970E4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656372756F736572 && a2 == 0xEA00000000006449;
  if (v2 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x567377654E6E696DLL && a2 == 0xEE006E6F69737265 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x567377654E78616DLL && a2 == 0xEE006E6F69737265 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7250646C756F6873 && a2 == 0xED00006D72617765)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1AFFCBCE8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t destroy for SDSCurrencyResponse()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for SDSCurrencyResponse(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  return a1;
}

void *assignWithCopy for SDSCurrencyResponse(void *a1, void *a2)
{
  *a1 = *a2;
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SDSCurrencyResponse(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SDSCurrencyResponse(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SDSCurrencyResponse(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SDSCurrencyResponse()
{
  return &type metadata for SDSCurrencyResponse;
}

uint64_t sub_1AFE97608(void *a1)
{
  sub_1AFE99098(0, &qword_1E9AFBDB8, (uint64_t (*)(void))sub_1AFE99044, (uint64_t)&type metadata for SDSCurrencyResponse.CurrencyItem.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFE99044();
  sub_1AFFCBE78();
  char v13 = 0;
  sub_1AFFCBC08();
  if (!v1)
  {
    char v12 = 1;
    sub_1AFFCBC08();
    char v11 = 2;
    sub_1AFFCBC28();
    char v10 = 3;
    sub_1AFFCBC08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1AFE977EC(void *a1)
{
  uint64_t v3 = v1;
  sub_1AFE99098(0, &qword_1E9AFBD98, (uint64_t (*)(void))sub_1AFE98B0C, (uint64_t)&type metadata for SDSCurrencyResponse.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFE98B0C();
  sub_1AFFCBE78();
  *(void *)&v12[0] = *(void *)v3;
  char v14 = 0;
  sub_1AFE98B60();
  sub_1AFE98C0C(&qword_1E9AFBDA0, (void (*)(void))sub_1AFE98C78);
  sub_1AFFCBC58();
  if (!v2)
  {
    LOBYTE(v12[0]) = 1;
    sub_1AFFCBC08();
    LOBYTE(v12[0]) = 2;
    sub_1AFFCBC08();
    long long v10 = *(_OWORD *)(v3 + 56);
    v12[0] = *(_OWORD *)(v3 + 40);
    v12[1] = v10;
    uint64_t v13 = *(void *)(v3 + 72);
    char v14 = 3;
    sub_1AFD57DF8();
    sub_1AFFCBC58();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1AFE97A48()
{
  uint64_t result = 0x79636E6572727563;
  switch(*v0)
  {
    case 2:
      uint64_t result = 0x6563697270;
      break;
    case 3:
      uint64_t result = 0x6D617473656D6974;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1AFE97AD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1AFE97FE4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AFE97AFC(uint64_t a1)
{
  unint64_t v2 = sub_1AFE99044();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFE97B38(uint64_t a1)
{
  unint64_t v2 = sub_1AFE99044();

  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1AFE97B74@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1AFE981C0(a1, (uint64_t *)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    double result = *(double *)&v7;
    *(_OWORD *)(a2 + 32) = v7;
    *(void *)(a2 + 48) = v8;
  }
  return result;
}

uint64_t sub_1AFE97BC4(void *a1)
{
  return sub_1AFE97608(a1);
}

uint64_t sub_1AFE97BDC(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v5[2] = *(_OWORD *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 48);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v7[2] = *(_OWORD *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 48);
  return sub_1AFE97E4C((uint64_t)v5, (uint64_t)v7) & 1;
}

uint64_t sub_1AFE97C38()
{
  uint64_t result = 0x79636E6572727563;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x4164657461657263;
      break;
    case 2:
      uint64_t result = 0x7243656372756F73;
      break;
    case 3:
      uint64_t result = 0x646174654D736473;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1AFE97CEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1AFE984D8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AFE97D14(uint64_t a1)
{
  unint64_t v2 = sub_1AFE98B0C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFE97D50(uint64_t a1)
{
  unint64_t v2 = sub_1AFE98B0C();

  return MEMORY[0x1F41862B0](a1, v2);
}

__n128 sub_1AFE97D8C@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1AFE98700(a1, v6);
  if (!v2)
  {
    long long v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 64) = v6[4];
    __n128 result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_1AFE97DD8(void *a1)
{
  return sub_1AFE977EC(a1);
}

BOOL sub_1AFE97DF0(_OWORD *a1, long long *a2)
{
  long long v2 = a1[3];
  void v8[2] = a1[2];
  v8[3] = v2;
  long long v3 = a1[4];
  long long v4 = a1[1];
  v8[0] = *a1;
  v8[1] = v4;
  long long v5 = a2[3];
  void v9[2] = a2[2];
  v9[3] = v5;
  void v9[4] = a2[4];
  long long v6 = *a2;
  v9[1] = a2[1];
  v8[4] = v3;
  v9[0] = v6;
  return sub_1AFE97F18((uint64_t)v8, (uint64_t)v9);
}

uint64_t sub_1AFE97E4C(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v4 || (char v5 = sub_1AFFCBCE8(), result = 0, (v5 & 1) != 0))
  {
    BOOL v7 = *(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24);
    if (v7 || (char v8 = sub_1AFFCBCE8(), result = 0, (v8 & 1) != 0))
    {
      if (*(double *)(a1 + 32) == *(double *)(a2 + 32))
      {
        if (*(void *)(a1 + 40) == *(void *)(a2 + 40) && *(void *)(a1 + 48) == *(void *)(a2 + 48))
        {
          return 1;
        }
        else
        {
          return sub_1AFFCBCE8();
        }
      }
      else
      {
        return 0;
      }
    }
  }
  return result;
}

BOOL sub_1AFE97F18(uint64_t a1, uint64_t a2)
{
  if (sub_1AFF23208(*(void *)a1, *(void *)a2))
  {
    BOOL v4 = *(void *)(a1 + 8) == *(void *)(a2 + 8) && *(void *)(a1 + 16) == *(void *)(a2 + 16);
    if (v4 || (v5 = sub_1AFFCBCE8(), BOOL v6 = 0, (v5 & 1) != 0))
    {
      BOOL v7 = *(void *)(a1 + 24) == *(void *)(a2 + 24) && *(void *)(a1 + 32) == *(void *)(a2 + 32);
      if (v7 || (v8 = sub_1AFFCBCE8(), BOOL v6 = 0, (v8 & 1) != 0))
      {
        long long v9 = *(_OWORD *)(a1 + 56);
        v14[0] = *(_OWORD *)(a1 + 40);
        v14[1] = v9;
        uint64_t v15 = *(void *)(a1 + 72);
        long long v10 = *(_OWORD *)(a2 + 56);
        v12[0] = *(_OWORD *)(a2 + 40);
        v12[1] = v10;
        uint64_t v13 = *(void *)(a2 + 72);
        return sub_1AFF2667C(v14, v12);
      }
    }
  }
  else
  {
    return 0;
  }
  return v6;
}

uint64_t sub_1AFE97FE4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x79636E6572727563 && a2 == 0xEC0000006D6F7246;
  if (v2 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x79636E6572727563 && a2 == 0xEA00000000006F54 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6563697270 && a2 == 0xE500000000000000 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1AFFCBCE8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1AFE981C0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v28 = a2;
  sub_1AFE99098(0, &qword_1EB811798, (uint64_t (*)(void))sub_1AFE99044, (uint64_t)&type metadata for SDSCurrencyResponse.CurrencyItem.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v8 = (char *)&v26 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFE99044();
  sub_1AFFCBE68();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  char v32 = 0;
  uint64_t v10 = v5;
  uint64_t v11 = sub_1AFFCBB18();
  uint64_t v13 = v12;
  char v31 = 1;
  sub_1AFFC8E38();
  uint64_t v14 = sub_1AFFCBB18();
  uint64_t v16 = v15;
  uint64_t v26 = v14;
  char v30 = 2;
  sub_1AFFC8E38();
  uint64_t v27 = v16;
  sub_1AFFCBB38();
  uint64_t v18 = v17;
  char v29 = 3;
  uint64_t v19 = sub_1AFFCBB18();
  uint64_t v21 = v20;
  uint64_t v22 = v19;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v10);
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t v23 = v27;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v25 = v28;
  *uint64_t v28 = v11;
  v25[1] = v13;
  void v25[2] = v26;
  v25[3] = v23;
  v25[4] = v18;
  v25[5] = v22;
  v25[6] = v21;
  return result;
}

uint64_t sub_1AFE984D8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x79636E6572727563 && a2 == 0xED0000736D657449;
  if (v2 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4164657461657263 && a2 == 0xE900000000000074 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7243656372756F73 && a2 == 0xEF74416465746165 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x646174654D736473 && a2 == 0xEB00000000617461)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1AFFCBCE8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1AFE98700@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1AFE99098(0, &qword_1EB811790, (uint64_t (*)(void))sub_1AFE98B0C, (uint64_t)&type metadata for SDSCurrencyResponse.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v30 = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v8 = (char *)&v26 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFE98B0C();
  sub_1AFFCBE68();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  sub_1AFE98B60();
  char v36 = 0;
  sub_1AFE98C0C(&qword_1EB811768, (void (*)(void))sub_1AFE98BB8);
  sub_1AFFCBB58();
  uint64_t v10 = v31;
  LOBYTE(v31) = 1;
  sub_1AFFC8E38();
  uint64_t v11 = sub_1AFFCBB18();
  uint64_t v13 = v12;
  uint64_t v29 = v11;
  LOBYTE(v31) = 2;
  sub_1AFFC8E38();
  uint64_t v27 = sub_1AFFCBB18();
  char v36 = 3;
  uint64_t v15 = v14;
  sub_1AFD57C74();
  uint64_t v28 = v15;
  sub_1AFFC8E38();
  sub_1AFFCBB58();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v30);
  uint64_t v16 = v32;
  uint64_t v30 = v31;
  uint64_t v17 = v13;
  uint64_t v18 = v33;
  uint64_t v19 = v34;
  uint64_t v20 = v35;
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v21 = v28;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v23 = v29;
  *a2 = v10;
  a2[1] = v23;
  uint64_t v24 = v27;
  a2[2] = v17;
  a2[3] = v24;
  uint64_t v25 = v30;
  a2[4] = v21;
  a2[5] = v25;
  a2[6] = v16;
  a2[7] = v18;
  a2[8] = v19;
  a2[9] = v20;
  return result;
}

unint64_t sub_1AFE98B0C()
{
  unint64_t result = qword_1EB8115E8;
  if (!qword_1EB8115E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8115E8);
  }
  return result;
}

void sub_1AFE98B60()
{
  if (!qword_1EB811760)
  {
    unint64_t v0 = sub_1AFFCB288();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB811760);
    }
  }
}

unint64_t sub_1AFE98BB8()
{
  unint64_t result = qword_1EB811618;
  if (!qword_1EB811618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB811618);
  }
  return result;
}

uint64_t sub_1AFE98C0C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1AFE98B60();
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1AFE98C78()
{
  unint64_t result = qword_1E9AFBDA8;
  if (!qword_1E9AFBDA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBDA8);
  }
  return result;
}

ValueMetadata *type metadata accessor for SDSCurrencyResponse.CodingKeys()
{
  return &type metadata for SDSCurrencyResponse.CodingKeys;
}

uint64_t destroy for SDSCurrencyResponse.CurrencyItem()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SDSCurrencyResponse.CurrencyItem(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  return a1;
}

void *assignWithCopy for SDSCurrencyResponse.CurrencyItem(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

void *assignWithTake for SDSCurrencyResponse.CurrencyItem(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  uint64_t v6 = a2[6];
  a1[5] = a2[5];
  a1[6] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SDSCurrencyResponse.CurrencyItem(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SDSCurrencyResponse.CurrencyItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SDSCurrencyResponse.CurrencyItem()
{
  return &type metadata for SDSCurrencyResponse.CurrencyItem;
}

unint64_t sub_1AFE98F40()
{
  unint64_t result = qword_1E9AFBDB0;
  if (!qword_1E9AFBDB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBDB0);
  }
  return result;
}

unint64_t sub_1AFE98F98()
{
  unint64_t result = qword_1EB8115F8;
  if (!qword_1EB8115F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8115F8);
  }
  return result;
}

unint64_t sub_1AFE98FF0()
{
  unint64_t result = qword_1EB8115F0;
  if (!qword_1EB8115F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8115F0);
  }
  return result;
}

unint64_t sub_1AFE99044()
{
  unint64_t result = qword_1EB811600;
  if (!qword_1EB811600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB811600);
  }
  return result;
}

void sub_1AFE99098(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unsigned char *_s10StocksCore19SDSCurrencyResponseV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFE991CCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SDSCurrencyResponse.CurrencyItem.CodingKeys()
{
  return &type metadata for SDSCurrencyResponse.CurrencyItem.CodingKeys;
}

unint64_t sub_1AFE99208()
{
  unint64_t result = qword_1E9AFBDC0;
  if (!qword_1E9AFBDC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBDC0);
  }
  return result;
}

unint64_t sub_1AFE99260()
{
  unint64_t result = qword_1EB811610;
  if (!qword_1EB811610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB811610);
  }
  return result;
}

unint64_t sub_1AFE992B8()
{
  unint64_t result = qword_1EB811608;
  if (!qword_1EB811608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB811608);
  }
  return result;
}

uint64_t sub_1AFE9930C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = MEMORY[0x1E4FBC860];
  if (v5)
  {
    sub_1AFD9DA10(0, v5, 0);
    uint64_t v6 = v16;
    char v8 = (uint64_t *)(a1 + 56);
    do
    {
      uint64_t v10 = *(v8 - 1);
      uint64_t v9 = *v8;
      unint64_t v12 = *(void *)(v16 + 16);
      unint64_t v11 = *(void *)(v16 + 24);
      sub_1AFFC8E38();
      if (v12 >= v11 >> 1) {
        sub_1AFD9DA10(v11 > 1, v12 + 1, 1);
      }
      *(void *)(v16 + 16) = v12 + 1;
      uint64_t v13 = v16 + 16 * v12;
      *(void *)(v13 + 32) = v10;
      *(void *)(v13 + 40) = v9;
      v8 += 17;
      --v5;
    }
    while (v5);
  }
  uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a3 + 8))(v6, a2, a3);
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1AFE9941C()
{
  return sub_1AFFCA758();
}

void sub_1AFE99480(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t, void, uint64_t))(a10 + 16))(a6, a7, a8, 0, a9);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a2;
  sub_1AFFC8E48();
  uint64_t v13 = (void *)sub_1AFFCA5E8();
  sub_1AFFCA678();
  swift_release();
  swift_release();

  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = a2;
  sub_1AFFC8E48();
  id v15 = (id)sub_1AFFCA5E8();
  sub_1AFFCA6B8();
  swift_release();
  swift_release();
  swift_release();
}

uint64_t sub_1AFE995D4(uint64_t a1, void (*a2)(void *))
{
  if (qword_1EB811428 != -1) {
    swift_once();
  }
  v4[0] = qword_1EB811418;
  v4[1] = unk_1EB811420;
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  a2(v4);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFE99680(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1AFD9DA10(0, v1, 0);
    int v3 = (uint64_t *)(a1 + 56);
    do
    {
      uint64_t v4 = *(v3 - 1);
      uint64_t v5 = *v3;
      unint64_t v7 = *(void *)(v11 + 16);
      unint64_t v6 = *(void *)(v11 + 24);
      sub_1AFFC8E38();
      if (v7 >= v6 >> 1) {
        sub_1AFD9DA10(v6 > 1, v7 + 1, 1);
      }
      *(void *)(v11 + 16) = v7 + 1;
      uint64_t v8 = v11 + 16 * v7;
      *(void *)(v8 + 32) = v4;
      *(void *)(v8 + 40) = v5;
      v3 += 17;
      --v1;
    }
    while (v1);
  }
  uint64_t v9 = sub_1AFE9941C();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1AFE99788(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v3 = v2;
  uint64_t v4 = sub_1AFFC9DE8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v7 = (void *)((char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = v1[15];
  uint64_t v9 = v1[16];
  __swift_project_boxed_opaque_existential_1(v1 + 12, v8);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v9 + 8))(v14, v8, v9);
  sub_1AFD55D10((uint64_t)v14);
  void *v7 = v14[25];
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAA8B8], v4);
  uint64_t v13 = v1;
  _OWORD v12[2] = &v13;
  v12[3] = v3;
  v12[4] = v7;
  v12[5] = v7;
  sub_1AFE9D250();
  swift_allocObject();
  uint64_t v10 = sub_1AFFCA758();
  (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  return v10;
}

uint64_t sub_1AFE99938(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v2 = v1;
  int v47 = v3;
  uint64_t v44 = v4;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v9 = sub_1AFFC9DE8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v48 = v9;
  uint64_t v49 = v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (void *)((char *)v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = v2[5];
  uint64_t v14 = v2[6];
  __swift_project_boxed_opaque_existential_1(v2 + 2, v13);
  uint64_t v46 = sub_1AFD6250C(v8, v6, v13, v14);
  uint64_t v16 = v2[5];
  uint64_t v15 = v2[6];
  __swift_project_boxed_opaque_existential_1(v2 + 2, v16);
  uint64_t v43 = v2 + 12;
  uint64_t v17 = v2[15];
  uint64_t v18 = v2[16];
  __swift_project_boxed_opaque_existential_1(v2 + 12, v17);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v18 + 8))(v52, v17, v18);
  sub_1AFD55D10((uint64_t)v52);
  *uint64_t v12 = v52[25];
  unsigned int v42 = *MEMORY[0x1E4FAA8B8];
  uint64_t v19 = v48;
  uint64_t v20 = v49;
  uint64_t v21 = *(void (**)(void))(v49 + 104);
  v39[1] = v49 + 104;
  uint64_t v41 = (void (*)(void *, void, uint64_t))v21;
  v21(v12);
  uint64_t v45 = sub_1AFD6250C(v8, (uint64_t)v12, v16, v15);
  uint64_t v22 = *(void (**)(void *, uint64_t))(v20 + 8);
  uint64_t v49 = v20 + 8;
  uint64_t v40 = v22;
  v22(v12, v19);
  uint64_t v23 = v2[10];
  uint64_t v24 = v2[11];
  __swift_project_boxed_opaque_existential_1(v2 + 7, v23);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 8))(v8, v44, v23, v24);
  uint64_t v25 = (void *)sub_1AFFCA5E8();
  uint64_t v44 = sub_1AFFCA728();
  swift_release();

  uint64_t v26 = v2[10];
  uint64_t v27 = v2[11];
  __swift_project_boxed_opaque_existential_1(v2 + 7, v26);
  uint64_t v29 = v2[15];
  uint64_t v28 = v2[16];
  __swift_project_boxed_opaque_existential_1(v43, v29);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v28 + 8))(v53, v29, v28);
  sub_1AFD55D10((uint64_t)v53);
  *uint64_t v12 = v53[25];
  uint64_t v30 = v48;
  v41(v12, v42, v48);
  (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v27 + 8))(v8, v12, v26, v27);
  v40(v12, v30);
  uint64_t v31 = (void *)sub_1AFFCA5E8();
  uint64_t v32 = sub_1AFFCA728();
  swift_release();

  uint64_t v50 = v45;
  uint64_t v51 = v32;
  sub_1AFE9D4CC();
  sub_1AFFCA7C8();
  uint64_t v33 = swift_allocObject();
  uint64_t v34 = v44;
  *(void *)(v33 + 16) = v46;
  *(void *)(v33 + 24) = v34;
  *(void *)(v33 + 32) = v2;
  *(unsigned char *)(v33 + 40) = v47;
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = sub_1AFE9D620;
  *(void *)(v35 + 24) = v33;
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  char v36 = (void *)sub_1AFFCA5E8();
  uint64_t v37 = sub_1AFFCA668();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return v37;
}

void sub_1AFE99DAC(void *a1@<X8>)
{
}

void sub_1AFE99DC4(void *a1@<X8>)
{
  sub_1AFFCB468();
  sub_1AFD2CD48();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1AFFD05F0;
  sub_1AFD2CDB0(0, (unint64_t *)&qword_1EB81A110);
  sub_1AFFCB928();
  *(void *)(v2 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v2 + 64) = sub_1AFD2CE00();
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0xE000000000000000;
  sub_1AFD8F6AC(0, (unint64_t *)&qword_1EB819EA0);
  int v3 = (void *)sub_1AFFCB638();
  sub_1AFFCA878();
  swift_bridgeObjectRelease();

  *a1 = MEMORY[0x1E4FBC868];
}

uint64_t sub_1AFE99EF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v9 = (void *)sub_1AFFCA5E8();
  sub_1AFFCA5D8();

  uint64_t v10 = swift_allocObject();
  swift_weakInit();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = a2;
  *(unsigned char *)(v11 + 32) = a6;
  *(void *)(v11 + 40) = v10;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_1AFE9D6E8;
  *(void *)(v12 + 24) = v11;
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  uint64_t v13 = (void *)sub_1AFFCA5E8();
  uint64_t v14 = sub_1AFFCA678();
  swift_release();
  swift_release();

  return v14;
}

void sub_1AFE9A02C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  LODWORD(v97) = a5;
  unint64_t v98 = a4;
  uint64_t v80 = a7;
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1AFE9D768(0, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v90 = (uint64_t)&v75 - v13;
  uint64_t v100 = type metadata accessor for WidgetQuote();
  MEMORY[0x1F4188790](v100);
  uint64_t v89 = (uint64_t *)((char *)&v75 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v15);
  uint64_t v88 = (uint64_t *)((char *)&v75 - v16);
  MEMORY[0x1F4188790](v17);
  uint64_t v87 = (uint64_t)&v75 - v18;
  sub_1AFE9D768(0, &qword_1EB817B00, (uint64_t (*)(uint64_t))type metadata accessor for Quote, v11);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v21 = (char *)&v75 - v20;
  uint64_t v22 = type metadata accessor for Quote();
  uint64_t v94 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)&v75 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  uint64_t v99 = (uint64_t)&v75 - v26;
  MEMORY[0x1F4188790](v27);
  uint64_t v91 = (char *)&v75 - v28;
  sub_1AFE9D7CC(0, &qword_1EB817F08, (unint64_t *)&qword_1EB817F00, (void (*)(uint64_t))type metadata accessor for Quote);
  MEMORY[0x1F4188790](v29 - 8);
  uint64_t v31 = (uint64_t *)((char *)&v75 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v32);
  uint64_t v34 = (uint64_t *)((char *)&v75 - v33);
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  uint64_t v93 = a3;
  uint64_t v101 = a1;
  sub_1AFE9C4A4(a3, a1);
  if (v35)
  {
    sub_1AFE9CA28(v98, a2);
    if ((v36 & 1) != 0 && (v97 & 1) == 0) {
      goto LABEL_47;
    }
  }
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    v104[0] = v101;
    v104[1] = a2;
    sub_1AFE9ABD8(v104);
    swift_release();
  }
  if (*(void *)(v93 + 16) != *(void *)(v101 + 16))
  {
    swift_beginAccess();
    if (!swift_weakLoadStrong())
    {
LABEL_47:
      uint64_t v74 = v80;
      *uint64_t v80 = v101;
      v74[1] = a2;
      return;
    }
    uint64_t v102 = v101;
    uint64_t v103 = a2;
    sub_1AFE9AF2C(&v102);
LABEL_44:
    swift_release();
    goto LABEL_47;
  }
  uint64_t v77 = a6 + 16;
  uint64_t v78 = a2;
  uint64_t v37 = *(void *)(v93 + 64);
  uint64_t v79 = v93 + 64;
  uint64_t v38 = 1 << *(unsigned char *)(v93 + 32);
  uint64_t v39 = -1;
  if (v38 < 64) {
    uint64_t v39 = ~(-1 << v38);
  }
  unint64_t v40 = v39 & v37;
  uint64_t v86 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v94 + 56);
  uint64_t v85 = (unsigned int (**)(char *, uint64_t, uint64_t))(v94 + 48);
  int64_t v81 = (unint64_t)(v38 + 63) >> 6;
  int64_t v76 = v81 - 1;
  sub_1AFFC8E38();
  int64_t v92 = 0;
  uint64_t v41 = (uint64_t)v91;
  uint64_t v84 = v21;
  uint64_t v83 = v31;
  uint64_t v82 = v34;
  if (!v40) {
    goto LABEL_12;
  }
LABEL_10:
  unint64_t v98 = (v40 - 1) & v40;
  unint64_t v42 = __clz(__rbit64(v40)) | (v92 << 6);
  while (2)
  {
    uint64_t v43 = *(void *)(v93 + 56);
    uint64_t v44 = (void *)(*(void *)(v93 + 48) + 16 * v42);
    uint64_t v45 = v44[1];
    *uint64_t v31 = *v44;
    v31[1] = v45;
    uint64_t v46 = v43 + *(void *)(v94 + 72) * v42;
    sub_1AFE9DAE4(0, (unint64_t *)&qword_1EB817F00, (void (*)(uint64_t))type metadata accessor for Quote);
    uint64_t v48 = v47;
    sub_1AFE9D918(v46, (uint64_t)v31 + *(int *)(v47 + 48), (uint64_t (*)(void))type metadata accessor for Quote);
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v31, 0, 1, v48);
    sub_1AFFC8E38();
    while (1)
    {
      sub_1AFE9DB4C((uint64_t)v31, (uint64_t)v34, (uint64_t)&qword_1EB817F08, (uint64_t)&qword_1EB817F00, (uint64_t)type metadata accessor for Quote, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1AFE9D7CC);
      sub_1AFE9DAE4(0, (unint64_t *)&qword_1EB817F00, (void (*)(uint64_t))type metadata accessor for Quote);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v48 - 8) + 48))(v34, 1, v48) == 1) {
        goto LABEL_46;
      }
      uint64_t v54 = *v34;
      uint64_t v53 = v34[1];
      sub_1AFE9D8B0((uint64_t)v34 + *(int *)(v48 + 48), v41, (uint64_t (*)(void))type metadata accessor for Quote);
      if (*(void *)(v101 + 16) && (unint64_t v55 = sub_1AFD79CC8(v54, v53), (v56 & 1) != 0))
      {
        sub_1AFE9D918(*(void *)(v101 + 56) + *(void *)(v94 + 72) * v55, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for Quote);
        uint64_t v57 = 0;
      }
      else
      {
        uint64_t v57 = 1;
      }
      (*v86)(v21, v57, 1, v22);
      swift_bridgeObjectRelease();
      if ((*v85)(v21, 1, v22) == 1)
      {
        sub_1AFE9D824((uint64_t)v21);
LABEL_42:
        swift_beginAccess();
        if (!swift_weakLoadStrong())
        {
          sub_1AFE9D980(v41, (uint64_t (*)(void))type metadata accessor for Quote);
LABEL_46:
          swift_release();
          a2 = v78;
          goto LABEL_47;
        }
        uint64_t v73 = v41;
        a2 = v78;
        uint64_t v102 = v101;
        uint64_t v103 = v78;
        sub_1AFE9AF2C(&v102);
        swift_release();
        sub_1AFE9D980(v73, (uint64_t (*)(void))type metadata accessor for Quote);
        goto LABEL_44;
      }
      uint64_t v58 = v99;
      sub_1AFE9D8B0((uint64_t)v21, v99, (uint64_t (*)(void))type metadata accessor for Quote);
      sub_1AFE9D918(v58, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for Quote);
      char v59 = v24[8];
      uint64_t v60 = (uint64_t)v88;
      *uint64_t v88 = *(void *)v24;
      *(unsigned char *)(v60 + 8) = v59;
      char v61 = v24[24];
      *(void *)(v60 + 16) = *((void *)v24 + 2);
      *(unsigned char *)(v60 + 24) = v61;
      char v62 = v24[40];
      *(void *)(v60 + 32) = *((void *)v24 + 4);
      *(unsigned char *)(v60 + 40) = v62;
      uint64_t v63 = *((void *)v24 + 15);
      *(void *)(v60 + 48) = *((void *)v24 + 14);
      *(void *)(v60 + 56) = v63;
      *(unsigned char *)(v60 + 64) = v24[128];
      uint64_t v64 = v90;
      sub_1AFD3C27C((uint64_t)&v24[*(int *)(v22 + 60)], v90);
      sub_1AFFC8E38();
      sub_1AFE9D980((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for Quote);
      uint64_t v65 = v60 + *(int *)(v100 + 36);
      uint64_t v97 = MEMORY[0x1E4F27928];
      uint64_t v96 = MEMORY[0x1E4FBB718];
      uint64_t v95 = sub_1AFE9D768;
      sub_1AFE9DB4C(v64, v65, (uint64_t)&qword_1EB818BA0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1AFE9D768);
      uint64_t v66 = v87;
      sub_1AFE9D8B0(v60, v87, (uint64_t (*)(void))type metadata accessor for WidgetQuote);
      sub_1AFE9D918(v41, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for Quote);
      char v67 = v24[8];
      uint64_t v68 = v89;
      *uint64_t v89 = *(void *)v24;
      *((unsigned char *)v68 + 8) = v67;
      char v69 = v24[24];
      v68[2] = *((void *)v24 + 2);
      *((unsigned char *)v68 + 24) = v69;
      char v70 = v24[40];
      v68[4] = *((void *)v24 + 4);
      *((unsigned char *)v68 + 40) = v70;
      uint64_t v71 = *((void *)v24 + 15);
      v68[6] = *((void *)v24 + 14);
      v68[7] = v71;
      *((unsigned char *)v68 + 64) = v24[128];
      sub_1AFD3C27C((uint64_t)&v24[*(int *)(v22 + 60)], v64);
      sub_1AFFC8E38();
      sub_1AFE9D980((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for Quote);
      sub_1AFE9DB4C(v64, (uint64_t)v68 + *(int *)(v100 + 36), (uint64_t)&qword_1EB818BA0, v97, v96, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))v95);
      uint64_t v72 = (uint64_t)v68;
      uint64_t v41 = (uint64_t)v91;
      sub_1AFE9D8B0(v72, v60, (uint64_t (*)(void))type metadata accessor for WidgetQuote);
      LOBYTE(v63) = _s10StocksCore11WidgetQuoteV2eeoiySbAC_ACtFZ_0(v66, v60);
      sub_1AFE9D980(v60, (uint64_t (*)(void))type metadata accessor for WidgetQuote);
      sub_1AFE9D980(v66, (uint64_t (*)(void))type metadata accessor for WidgetQuote);
      sub_1AFE9D980(v99, (uint64_t (*)(void))type metadata accessor for Quote);
      if ((v63 & 1) == 0) {
        goto LABEL_42;
      }
      sub_1AFE9D980(v41, (uint64_t (*)(void))type metadata accessor for Quote);
      uint64_t v21 = v84;
      uint64_t v31 = v83;
      uint64_t v34 = v82;
      unint64_t v40 = v98;
      if (v98) {
        goto LABEL_10;
      }
LABEL_12:
      int64_t v49 = v92 + 1;
      if (__OFADD__(v92, 1))
      {
        __break(1u);
        goto LABEL_49;
      }
      if (v49 < v81)
      {
        unint64_t v50 = *(void *)(v79 + 8 * v49);
        if (v50) {
          goto LABEL_15;
        }
        int64_t v51 = v92 + 2;
        ++v92;
        if (v49 + 1 < v81)
        {
          unint64_t v50 = *(void *)(v79 + 8 * v51);
          if (v50) {
            goto LABEL_18;
          }
          int64_t v92 = v49 + 1;
          if (v49 + 2 < v81)
          {
            unint64_t v50 = *(void *)(v79 + 8 * (v49 + 2));
            if (v50)
            {
              v49 += 2;
              goto LABEL_15;
            }
            int64_t v51 = v49 + 3;
            int64_t v92 = v49 + 2;
            if (v49 + 3 < v81) {
              break;
            }
          }
        }
      }
LABEL_29:
      sub_1AFE9DAE4(0, (unint64_t *)&qword_1EB817F00, (void (*)(uint64_t))type metadata accessor for Quote);
      uint64_t v48 = v52;
      (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v31, 1, 1, v52);
      unint64_t v98 = 0;
    }
    unint64_t v50 = *(void *)(v79 + 8 * v51);
    if (v50)
    {
LABEL_18:
      int64_t v49 = v51;
LABEL_15:
      unint64_t v98 = (v50 - 1) & v50;
      unint64_t v42 = __clz(__rbit64(v50)) + (v49 << 6);
      int64_t v92 = v49;
      continue;
    }
    break;
  }
  while (1)
  {
    int64_t v49 = v51 + 1;
    if (__OFADD__(v51, 1)) {
      break;
    }
    if (v49 >= v81)
    {
      int64_t v92 = v76;
      goto LABEL_29;
    }
    unint64_t v50 = *(void *)(v79 + 8 * v49);
    ++v51;
    if (v50) {
      goto LABEL_15;
    }
  }
LABEL_49:
  __break(1u);
}

uint64_t sub_1AFE9ABD8(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1AFFCABC8();
  uint64_t v20 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1AFFCAC18();
  uint64_t v7 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *a1;
  uint64_t v10 = a1[1];
  sub_1AFFC9D78();
  swift_beginAccess();
  uint64_t v12 = *(void *)(v2 + 136);
  sub_1AFFC8E38();
  sub_1AFFC9D88();
  sub_1AFD8F6AC(0, (unint64_t *)&qword_1EB819E68);
  uint64_t v13 = (void *)sub_1AFFCB4B8();
  uint64_t v14 = swift_allocObject();
  swift_weakInit();
  uint64_t v15 = (void *)swift_allocObject();
  void v15[2] = v14;
  v15[3] = v12;
  v15[4] = v11;
  v15[5] = v10;
  aBlock[4] = sub_1AFE9D9E8;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1AFDB5104;
  aBlock[3] = &block_descriptor_24_1;
  uint64_t v16 = _Block_copy(aBlock);
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  swift_release();
  sub_1AFFCABE8();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1AFE9DBC0((unint64_t *)&unk_1EB819C20, MEMORY[0x1E4FBCB00]);
  sub_1AFE9D768(0, (unint64_t *)&qword_1EB819DA0, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1AFDB56D0();
  sub_1AFFCB738();
  MEMORY[0x1B3E8D920](0, v9, v6, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v20 + 8))(v6, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v19);
}

uint64_t sub_1AFE9AF2C(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1AFFCABC8();
  uint64_t v20 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1AFFCAC18();
  uint64_t v7 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *a1;
  uint64_t v10 = a1[1];
  sub_1AFFC9D78();
  swift_beginAccess();
  uint64_t v12 = *(void *)(v2 + 144);
  sub_1AFFC8E38();
  sub_1AFFC9D88();
  sub_1AFD8F6AC(0, (unint64_t *)&qword_1EB819E68);
  uint64_t v13 = (void *)sub_1AFFCB4B8();
  uint64_t v14 = swift_allocObject();
  swift_weakInit();
  uint64_t v15 = (void *)swift_allocObject();
  void v15[2] = v14;
  v15[3] = v12;
  v15[4] = v11;
  v15[5] = v10;
  aBlock[4] = sub_1AFE9DC08;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1AFDB5104;
  aBlock[3] = &block_descriptor_22;
  uint64_t v16 = _Block_copy(aBlock);
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  swift_release();
  sub_1AFFCABE8();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1AFE9DBC0((unint64_t *)&unk_1EB819C20, MEMORY[0x1E4FBCB00]);
  sub_1AFE9D768(0, (unint64_t *)&qword_1EB819DA0, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1AFDB56D0();
  sub_1AFFCB738();
  MEMORY[0x1B3E8D920](0, v9, v6, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v20 + 8))(v6, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v19);
}

uint64_t sub_1AFE9B280(uint64_t a1, uint64_t a2)
{
  sub_1AFFC9D78();
  uint64_t v4 = (void *)(v2 + 136);
  swift_beginAccess();
  unint64_t v5 = *(void *)(v2 + 136);
  uint64_t v14 = MEMORY[0x1E4FBC860];
  if (v5 >> 62)
  {
    sub_1AFFC8E38();
    uint64_t result = sub_1AFFCB9C8();
    uint64_t v6 = result;
    if (result) {
      goto LABEL_3;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    uint64_t v11 = MEMORY[0x1E4FBC860];
    goto LABEL_15;
  }
  uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = sub_1AFFC8E38();
  if (!v6) {
    goto LABEL_14;
  }
LABEL_3:
  if (v6 < 1)
  {
    __break(1u);
    return result;
  }
  for (uint64_t i = 0; i != v6; ++i)
  {
    if ((v5 & 0xC000000000000001) != 0)
    {
      uint64_t v9 = MEMORY[0x1B3E8DC70](i, v5);
    }
    else
    {
      uint64_t v9 = *(void *)(v5 + 8 * i + 32);
      sub_1AFFC8E48();
    }
    uint64_t v10 = MEMORY[0x1B3E8F200](v9 + 16);
    swift_unknownObjectRelease();
    if (v10)
    {
      sub_1AFFCB888();
      sub_1AFFCB8C8();
      sub_1AFFCB8D8();
      sub_1AFFCB898();
    }
    else
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v11 = v14;
LABEL_15:
  *uint64_t v4 = v11;
  swift_bridgeObjectRelease();
  type metadata accessor for StockPriceDataManagerObserverProxy();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v12 + 24) = a2;
  swift_unknownObjectWeakAssign();
  uint64_t v13 = swift_beginAccess();
  MEMORY[0x1B3E8D5F0](v13);
  if (*(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1AFFCB228();
  }
  sub_1AFFCB278();
  sub_1AFFCB1E8();
  swift_endAccess();
  return sub_1AFFC9D88();
}

uint64_t sub_1AFE9B4C8(uint64_t a1, uint64_t a2)
{
  sub_1AFFC9D78();
  uint64_t v4 = (void *)(v2 + 144);
  swift_beginAccess();
  unint64_t v5 = *(void *)(v2 + 144);
  uint64_t v14 = MEMORY[0x1E4FBC860];
  if (v5 >> 62)
  {
    sub_1AFFC8E38();
    uint64_t result = sub_1AFFCB9C8();
    uint64_t v6 = result;
    if (result) {
      goto LABEL_3;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    uint64_t v11 = MEMORY[0x1E4FBC860];
    goto LABEL_15;
  }
  uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = sub_1AFFC8E38();
  if (!v6) {
    goto LABEL_14;
  }
LABEL_3:
  if (v6 < 1)
  {
    __break(1u);
    return result;
  }
  for (uint64_t i = 0; i != v6; ++i)
  {
    if ((v5 & 0xC000000000000001) != 0)
    {
      uint64_t v9 = MEMORY[0x1B3E8DC70](i, v5);
    }
    else
    {
      uint64_t v9 = *(void *)(v5 + 8 * i + 32);
      sub_1AFFC8E48();
    }
    uint64_t v10 = MEMORY[0x1B3E8F200](v9 + 16);
    swift_unknownObjectRelease();
    if (v10)
    {
      sub_1AFFCB888();
      sub_1AFFCB8C8();
      sub_1AFFCB8D8();
      sub_1AFFCB898();
    }
    else
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v11 = v14;
LABEL_15:
  *uint64_t v4 = v11;
  swift_bridgeObjectRelease();
  type metadata accessor for StockPriceDataManagerObserverProxy();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v12 + 24) = a2;
  swift_unknownObjectWeakAssign();
  uint64_t v13 = swift_beginAccess();
  MEMORY[0x1B3E8D5F0](v13);
  if (*(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1AFFCB228();
  }
  sub_1AFFCB278();
  sub_1AFFCB1E8();
  swift_endAccess();
  return sub_1AFFC9D88();
}

uint64_t sub_1AFE9B710(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v6 = result;
    if (a2 >> 62)
    {
      sub_1AFFC8E38();
      uint64_t result = sub_1AFFCB9C8();
      uint64_t v7 = result;
      if (result) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v7 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = sub_1AFFC8E38();
      if (v7)
      {
LABEL_4:
        if (v7 < 1)
        {
          __break(1u);
          return result;
        }
        uint64_t v8 = 0;
        do
        {
          if ((a2 & 0xC000000000000001) != 0)
          {
            uint64_t v9 = MEMORY[0x1B3E8DC70](v8, a2);
          }
          else
          {
            uint64_t v9 = *(void *)(a2 + 8 * v8 + 32);
            sub_1AFFC8E48();
          }
          v16[3] = type metadata accessor for StockPriceDataManager();
          v16[4] = &off_1F0874058;
          v16[0] = v6;
          if (MEMORY[0x1B3E8F200](v9 + 16))
          {
            uint64_t v10 = *(void *)(v9 + 24);
            uint64_t ObjectType = swift_getObjectType();
            v15[0] = a3;
            v15[1] = a4;
            uint64_t v12 = *(void (**)(void *, void *, uint64_t, uint64_t))(v10 + 8);
            swift_retain_n();
            v12(v16, v15, ObjectType, v10);
            swift_unknownObjectRelease();
          }
          else
          {
            swift_retain_n();
          }
          ++v8;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
          swift_release();
          swift_release();
        }
        while (v7 != v8);
      }
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1AFE9B8C4()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1AFE9B924(uint64_t a1)
{
  return sub_1AFE99788(a1);
}

uint64_t sub_1AFE9B948(uint64_t a1)
{
  return sub_1AFE99938(a1);
}

uint64_t sub_1AFE9B96C(uint64_t a1, uint64_t a2)
{
  return sub_1AFE9B280(a1, a2);
}

uint64_t sub_1AFE9B990(uint64_t a1)
{
  uint64_t v3 = *v1;
  sub_1AFFC9D78();
  swift_beginAccess();
  swift_unknownObjectRetain();
  unint64_t v4 = sub_1AFFC8E38();
  uint64_t v5 = sub_1AFDA5E54(v4, a1);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  *(void *)(v3 + 136) = v5;
  swift_bridgeObjectRelease();
  return sub_1AFFC9D88();
}

uint64_t sub_1AFE9BA34(uint64_t a1, uint64_t a2)
{
  return sub_1AFE9B4C8(a1, a2);
}

uint64_t sub_1AFE9BA58(uint64_t a1)
{
  uint64_t v3 = *v1;
  sub_1AFFC9D78();
  swift_beginAccess();
  swift_unknownObjectRetain();
  unint64_t v4 = sub_1AFFC8E38();
  uint64_t v5 = sub_1AFDA5E54(v4, a1);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  *(void *)(v3 + 144) = v5;
  swift_bridgeObjectRelease();
  return sub_1AFFC9D88();
}

void sub_1AFE9BAFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1AFFCA4E8();
  uint64_t v62 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v59 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v49 - v7;
  sub_1AFE9D7CC(0, &qword_1EB8185A8, &qword_1EB8185A0, MEMORY[0x1E4FAAFC8]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  if (a1 == a2 || *(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return;
  }
  uint64_t v58 = (uint64_t *)((char *)&v49 - v13);
  uint64_t v54 = a1;
  uint64_t v16 = *(void *)(a1 + 64);
  uint64_t v15 = a1 + 64;
  uint64_t v14 = v16;
  uint64_t v17 = 1 << *(unsigned char *)(v15 - 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & v14;
  int64_t v60 = 0;
  uint64_t v61 = v62 + 16;
  unint64_t v55 = (void (**)(char *, char *, uint64_t))(v62 + 32);
  char v56 = (void (**)(char *, uint64_t))(v62 + 8);
  uint64_t v51 = v15;
  int64_t v52 = (unint64_t)(v17 + 63) >> 6;
  int64_t v50 = v52 - 1;
  uint64_t v57 = a2;
  uint64_t v53 = v8;
  while (1)
  {
    if (v19)
    {
      unint64_t v20 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v21 = v20 | (v60 << 6);
      uint64_t v22 = v58;
LABEL_8:
      uint64_t v23 = (uint64_t *)(*(void *)(v54 + 48) + 16 * v21);
      uint64_t v24 = *v23;
      uint64_t v25 = v23[1];
      uint64_t v26 = v62;
      unint64_t v27 = *(void *)(v54 + 56) + *(void *)(v62 + 72) * v21;
      sub_1AFE9DAE4(0, &qword_1EB8185A0, MEMORY[0x1E4FAAFC8]);
      uint64_t v29 = v28;
      (*(void (**)(char *, unint64_t, uint64_t))(v26 + 16))(&v11[*(int *)(v28 + 48)], v27, v4);
      *(void *)uint64_t v11 = v24;
      *((void *)v11 + 1) = v25;
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v11, 0, 1, v29);
      sub_1AFFC8E38();
      uint64_t v8 = v53;
      goto LABEL_27;
    }
    int64_t v30 = v60 + 1;
    uint64_t v22 = v58;
    if (__OFADD__(v60, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v30 < v52)
    {
      unint64_t v31 = *(void *)(v51 + 8 * v30);
      if (v31) {
        goto LABEL_12;
      }
      int64_t v32 = v60 + 2;
      ++v60;
      if (v30 + 1 < v52)
      {
        unint64_t v31 = *(void *)(v51 + 8 * v32);
        if (v31) {
          goto LABEL_15;
        }
        int64_t v60 = v30 + 1;
        if (v30 + 2 < v52)
        {
          unint64_t v31 = *(void *)(v51 + 8 * (v30 + 2));
          if (v31)
          {
            v30 += 2;
            goto LABEL_12;
          }
          int64_t v32 = v30 + 3;
          int64_t v60 = v30 + 2;
          if (v30 + 3 < v52) {
            break;
          }
        }
      }
    }
LABEL_26:
    sub_1AFE9DAE4(0, &qword_1EB8185A0, MEMORY[0x1E4FAAFC8]);
    uint64_t v29 = v33;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v11, 1, 1, v33);
    unint64_t v19 = 0;
LABEL_27:
    uint64_t v34 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
    sub_1AFE9DB4C((uint64_t)v11, (uint64_t)v22, (uint64_t)&qword_1EB8185A8, (uint64_t)&qword_1EB8185A0, MEMORY[0x1E4FAAFC8], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1AFE9D7CC);
    sub_1AFE9DAE4(0, &qword_1EB8185A0, v34);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 48))(v22, 1, v29) == 1) {
      return;
    }
    char v35 = (char *)v22 + *(int *)(v29 + 48);
    uint64_t v36 = *v22;
    uint64_t v37 = v22[1];
    (*v55)(v8, v35, v4);
    uint64_t v38 = v36;
    uint64_t v39 = v57;
    unint64_t v40 = v8;
    unint64_t v41 = sub_1AFD79CC8(v38, v37);
    char v43 = v42;
    swift_bridgeObjectRelease();
    if ((v43 & 1) == 0)
    {
      (*v56)(v40, v4);
      return;
    }
    uint64_t v44 = v11;
    uint64_t v45 = v62;
    uint64_t v46 = v59;
    (*(void (**)(char *, unint64_t, uint64_t))(v62 + 16))(v59, *(void *)(v39 + 56) + *(void *)(v62 + 72) * v41, v4);
    sub_1AFE9DBC0(&qword_1EB818568, MEMORY[0x1E4FAAFC8]);
    char v47 = sub_1AFFCADD8();
    uint64_t v48 = *(void (**)(char *, uint64_t))(v45 + 8);
    uint64_t v11 = v44;
    v48(v46, v4);
    v48(v40, v4);
    uint64_t v8 = v40;
    if ((v47 & 1) == 0) {
      return;
    }
  }
  unint64_t v31 = *(void *)(v51 + 8 * v32);
  if (v31)
  {
LABEL_15:
    int64_t v30 = v32;
LABEL_12:
    unint64_t v19 = (v31 - 1) & v31;
    unint64_t v21 = __clz(__rbit64(v31)) + (v30 << 6);
    int64_t v60 = v30;
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v30 = v32 + 1;
    if (__OFADD__(v32, 1)) {
      break;
    }
    if (v30 >= v52)
    {
      int64_t v60 = v50;
      goto LABEL_26;
    }
    unint64_t v31 = *(void *)(v51 + 8 * v30);
    ++v32;
    if (v31) {
      goto LABEL_12;
    }
  }
LABEL_35:
  __break(1u);
}

uint64_t sub_1AFE9C0E4(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v41 = result + 64;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 64);
  int64_t v42 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v8 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v9 = v8 | (v4 << 6);
      goto LABEL_24;
    }
    int64_t v10 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v10 >= v42) {
      return 1;
    }
    unint64_t v11 = *(void *)(v41 + 8 * v10);
    ++v4;
    if (!v11)
    {
      int64_t v4 = v10 + 1;
      if (v10 + 1 >= v42) {
        return 1;
      }
      unint64_t v11 = *(void *)(v41 + 8 * v4);
      if (!v11)
      {
        int64_t v4 = v10 + 2;
        if (v10 + 2 >= v42) {
          return 1;
        }
        unint64_t v11 = *(void *)(v41 + 8 * v4);
        if (!v11)
        {
          int64_t v4 = v10 + 3;
          if (v10 + 3 >= v42) {
            return 1;
          }
          unint64_t v11 = *(void *)(v41 + 8 * v4);
          if (!v11) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v4 << 6);
LABEL_24:
    uint64_t v13 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v9);
    uint64_t v14 = *v13;
    uint64_t v15 = v13[1];
    uint64_t v16 = *(void *)(v3 + 56) + 168 * v9;
    long long v18 = *(_OWORD *)(v16 + 16);
    long long v17 = *(_OWORD *)(v16 + 32);
    v47[0] = *(_OWORD *)v16;
    v47[1] = v18;
    v47[2] = v17;
    long long v19 = *(_OWORD *)(v16 + 96);
    long long v21 = *(_OWORD *)(v16 + 48);
    long long v20 = *(_OWORD *)(v16 + 64);
    v47[5] = *(_OWORD *)(v16 + 80);
    v47[6] = v19;
    void v47[3] = v21;
    v47[4] = v20;
    long long v23 = *(_OWORD *)(v16 + 128);
    long long v22 = *(_OWORD *)(v16 + 144);
    long long v24 = *(_OWORD *)(v16 + 112);
    uint64_t v48 = *(void *)(v16 + 160);
    v47[8] = v23;
    v47[9] = v22;
    v47[7] = v24;
    long long v25 = *(_OWORD *)(v16 + 144);
    long long v57 = *(_OWORD *)(v16 + 128);
    long long v58 = v25;
    uint64_t v59 = *(void *)(v16 + 160);
    long long v26 = *(_OWORD *)(v16 + 80);
    long long v53 = *(_OWORD *)(v16 + 64);
    long long v54 = v26;
    long long v27 = *(_OWORD *)(v16 + 112);
    long long v55 = *(_OWORD *)(v16 + 96);
    long long v56 = v27;
    long long v28 = *(_OWORD *)(v16 + 16);
    long long v49 = *(_OWORD *)v16;
    long long v50 = v28;
    long long v29 = *(_OWORD *)(v16 + 48);
    long long v51 = *(_OWORD *)(v16 + 32);
    long long v52 = v29;
    v60[0] = v14;
    v60[1] = v15;
    long long v63 = v51;
    long long v64 = v29;
    long long v61 = v49;
    long long v62 = v28;
    long long v65 = v53;
    long long v66 = v54;
    uint64_t v71 = v59;
    long long v69 = v57;
    long long v70 = v58;
    long long v67 = v55;
    long long v68 = v56;
    nullsub_1(v60);
    sub_1AFE9DB4C((uint64_t)v60, (uint64_t)v74, (uint64_t)&unk_1E9AFBDC8, (uint64_t)sub_1AFE9DA78, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1AFE9D768);
    v72[8] = v83;
    v72[9] = v84;
    v72[4] = v79;
    v72[5] = v80;
    v72[6] = v81;
    v72[7] = v82;
    v72[0] = v75;
    v72[1] = v76;
    v72[2] = v77;
    v72[3] = v78;
    v45[8] = v83;
    v45[9] = v84;
    v45[4] = v79;
    v45[5] = v80;
    v45[6] = v81;
    v45[7] = v82;
    v45[0] = v75;
    v45[1] = v76;
    uint64_t v30 = v74[0];
    uint64_t v31 = v74[1];
    uint64_t v73 = v85;
    uint64_t v46 = v85;
    v45[2] = v77;
    v45[3] = v78;
    sub_1AFFC8E38();
    sub_1AFDCB084((uint64_t *)v47);
    unint64_t v32 = sub_1AFD79CC8(v30, v31);
    LOBYTE(v30) = v33;
    swift_bridgeObjectRelease();
    if ((v30 & 1) == 0)
    {
      sub_1AFDCB170((uint64_t *)v72);
      return 0;
    }
    uint64_t v34 = *(void *)(a2 + 56) + 168 * v32;
    long long v35 = *(_OWORD *)(v34 + 144);
    v43[8] = *(_OWORD *)(v34 + 128);
    v43[9] = v35;
    uint64_t v44 = *(void *)(v34 + 160);
    long long v36 = *(_OWORD *)(v34 + 80);
    v43[4] = *(_OWORD *)(v34 + 64);
    v43[5] = v36;
    long long v37 = *(_OWORD *)(v34 + 112);
    v43[6] = *(_OWORD *)(v34 + 96);
    v43[7] = v37;
    long long v38 = *(_OWORD *)(v34 + 16);
    v43[0] = *(_OWORD *)v34;
    v43[1] = v38;
    long long v39 = *(_OWORD *)(v34 + 48);
    v43[2] = *(_OWORD *)(v34 + 32);
    v43[3] = v39;
    char v40 = static FlexiblePaywall.== infix(_:_:)(v43, v45);
    uint64_t result = (uint64_t)sub_1AFDCB170((uint64_t *)v72);
    if ((v40 & 1) == 0) {
      return 0;
    }
  }
  int64_t v12 = v10 + 4;
  if (v12 >= v42) {
    return 1;
  }
  unint64_t v11 = *(void *)(v41 + 8 * v12);
  if (v11)
  {
    int64_t v4 = v12;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v4 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v4 >= v42) {
      return 1;
    }
    unint64_t v11 = *(void *)(v41 + 8 * v4);
    ++v12;
    if (v11) {
      goto LABEL_23;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

void sub_1AFE9C4A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Quote();
  uint64_t v44 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v42 = (uint64_t)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  unint64_t v8 = (char *)&v37 - v7;
  sub_1AFE9D7CC(0, &qword_1EB817F08, (unint64_t *)&qword_1EB817F00, (void (*)(uint64_t))type metadata accessor for Quote);
  MEMORY[0x1F4188790](v9 - 8);
  unint64_t v11 = (uint64_t *)((char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (uint64_t *)((char *)&v37 - v13);
  if (a1 == a2 || *(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return;
  }
  int64_t v43 = 0;
  uint64_t v41 = a1;
  uint64_t v15 = *(void *)(a1 + 64);
  uint64_t v39 = a1 + 64;
  uint64_t v16 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & v15;
  int64_t v40 = (unint64_t)(v16 + 63) >> 6;
  int64_t v38 = v40 - 1;
  while (1)
  {
    if (v18)
    {
      unint64_t v19 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v20 = v19 | (v43 << 6);
LABEL_8:
      uint64_t v21 = *(void *)(v41 + 56);
      long long v22 = (void *)(*(void *)(v41 + 48) + 16 * v20);
      uint64_t v23 = v22[1];
      *unint64_t v11 = *v22;
      v11[1] = v23;
      uint64_t v24 = v21 + *(void *)(v44 + 72) * v20;
      sub_1AFE9DAE4(0, (unint64_t *)&qword_1EB817F00, (void (*)(uint64_t))type metadata accessor for Quote);
      uint64_t v26 = v25;
      sub_1AFE9D918(v24, (uint64_t)v11 + *(int *)(v25 + 48), (uint64_t (*)(void))type metadata accessor for Quote);
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v11, 0, 1, v26);
      sub_1AFFC8E38();
      goto LABEL_30;
    }
    int64_t v27 = v43 + 1;
    if (__OFADD__(v43, 1))
    {
      __break(1u);
      goto LABEL_38;
    }
    if (v27 < v40)
    {
      unint64_t v28 = *(void *)(v39 + 8 * v27);
      if (v28) {
        goto LABEL_12;
      }
      int64_t v29 = v43 + 2;
      ++v43;
      if (v27 + 1 < v40)
      {
        unint64_t v28 = *(void *)(v39 + 8 * v29);
        if (v28) {
          goto LABEL_15;
        }
        int64_t v43 = v27 + 1;
        if (v27 + 2 < v40)
        {
          unint64_t v28 = *(void *)(v39 + 8 * (v27 + 2));
          if (v28)
          {
            v27 += 2;
            goto LABEL_12;
          }
          int64_t v43 = v27 + 2;
          if (v27 + 3 < v40)
          {
            unint64_t v28 = *(void *)(v39 + 8 * (v27 + 3));
            if (v28)
            {
              v27 += 3;
              goto LABEL_12;
            }
            int64_t v29 = v27 + 4;
            int64_t v43 = v27 + 3;
            if (v27 + 4 < v40) {
              break;
            }
          }
        }
      }
    }
LABEL_29:
    sub_1AFE9DAE4(0, (unint64_t *)&qword_1EB817F00, (void (*)(uint64_t))type metadata accessor for Quote);
    uint64_t v26 = v30;
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v11, 1, 1, v30);
    unint64_t v18 = 0;
LABEL_30:
    sub_1AFE9DB4C((uint64_t)v11, (uint64_t)v14, (uint64_t)&qword_1EB817F08, (uint64_t)&qword_1EB817F00, (uint64_t)type metadata accessor for Quote, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1AFE9D7CC);
    sub_1AFE9DAE4(0, (unint64_t *)&qword_1EB817F00, (void (*)(uint64_t))type metadata accessor for Quote);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 48))(v14, 1, v26) == 1) {
      return;
    }
    uint64_t v32 = *v14;
    uint64_t v31 = v14[1];
    sub_1AFE9D8B0((uint64_t)v14 + *(int *)(v26 + 48), (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for Quote);
    unint64_t v33 = sub_1AFD79CC8(v32, v31);
    LOBYTE(v32) = v34;
    swift_bridgeObjectRelease();
    if ((v32 & 1) == 0)
    {
      sub_1AFE9D980((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for Quote);
      return;
    }
    uint64_t v35 = v42;
    sub_1AFE9D918(*(void *)(a2 + 56) + *(void *)(v44 + 72) * v33, v42, (uint64_t (*)(void))type metadata accessor for Quote);
    char v36 = sub_1AFE7B178(v35, (uint64_t)v8);
    sub_1AFE9D980(v35, (uint64_t (*)(void))type metadata accessor for Quote);
    sub_1AFE9D980((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for Quote);
    if ((v36 & 1) == 0) {
      return;
    }
  }
  unint64_t v28 = *(void *)(v39 + 8 * v29);
  if (v28)
  {
LABEL_15:
    int64_t v27 = v29;
LABEL_12:
    unint64_t v18 = (v28 - 1) & v28;
    unint64_t v20 = __clz(__rbit64(v28)) + (v27 << 6);
    int64_t v43 = v27;
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v27 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v27 >= v40)
    {
      int64_t v43 = v38;
      goto LABEL_29;
    }
    unint64_t v28 = *(void *)(v39 + 8 * v27);
    ++v29;
    if (v28) {
      goto LABEL_12;
    }
  }
LABEL_38:
  __break(1u);
}

void sub_1AFE9CA28(uint64_t a1, uint64_t a2)
{
  sub_1AFD30DA8();
  uint64_t v63 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v65 = (uint64_t)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v64 = (uint64_t)&v55 - v7;
  uint64_t v8 = type metadata accessor for Chart(0);
  uint64_t v68 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (int64_t *)((char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (int64_t *)((char *)&v55 - v12);
  sub_1AFE9D7CC(0, &qword_1EB816AA0, &qword_1EB817EF8, (void (*)(uint64_t))type metadata accessor for Chart);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (int64_t *)((char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v17);
  long long v67 = (int64_t *)((char *)&v55 - v18);
  if (a1 == a2 || *(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return;
  }
  long long v61 = v10;
  int64_t v62 = 0;
  uint64_t v19 = *(void *)(a1 + 64);
  uint64_t v56 = a1 + 64;
  uint64_t v20 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v21 = -1;
  if (v20 < 64) {
    uint64_t v21 = ~(-1 << v20);
  }
  unint64_t v22 = v21 & v19;
  int64_t v57 = (unint64_t)(v20 + 63) >> 6;
  uint64_t v58 = a1;
  int64_t v55 = v57 - 1;
  uint64_t v59 = v16;
  int64_t v60 = v13;
  if (!v22) {
    goto LABEL_8;
  }
LABEL_6:
  uint64_t v66 = (v22 - 1) & v22;
  unint64_t v23 = __clz(__rbit64(v22)) | (v62 << 6);
  while (2)
  {
    uint64_t v24 = *(void *)(a1 + 56);
    uint64_t v25 = (void *)(*(void *)(a1 + 48) + 16 * v23);
    uint64_t v26 = v25[1];
    *uint64_t v16 = *v25;
    v16[1] = v26;
    uint64_t v27 = v24 + *(void *)(v68 + 72) * v23;
    sub_1AFE9DAE4(0, &qword_1EB817EF8, (void (*)(uint64_t))type metadata accessor for Chart);
    uint64_t v29 = v28;
    sub_1AFE9D918(v27, (uint64_t)v16 + *(int *)(v28 + 48), type metadata accessor for Chart);
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v16, 0, 1, v29);
    sub_1AFFC8E38();
    while (1)
    {
      char v34 = v67;
      sub_1AFE9DB4C((uint64_t)v16, (uint64_t)v67, (uint64_t)&qword_1EB816AA0, (uint64_t)&qword_1EB817EF8, (uint64_t)type metadata accessor for Chart, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1AFE9D7CC);
      sub_1AFE9DAE4(0, &qword_1EB817EF8, (void (*)(uint64_t))type metadata accessor for Chart);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 48))(v34, 1, v29) == 1) {
        return;
      }
      uint64_t v35 = (uint64_t)v34 + *(int *)(v29 + 48);
      uint64_t v36 = *v34;
      uint64_t v37 = v34[1];
      sub_1AFE9D8B0(v35, (uint64_t)v13, type metadata accessor for Chart);
      unint64_t v38 = sub_1AFD79CC8(v36, v37);
      LOBYTE(v36) = v39;
      swift_bridgeObjectRelease();
      if ((v36 & 1) == 0) {
        goto LABEL_48;
      }
      sub_1AFE9D918(*(void *)(a2 + 56) + *(void *)(v68 + 72) * v38, (uint64_t)v10, type metadata accessor for Chart);
      if ((sub_1AFF22BD4(*v10, *v13) & 1) == 0) {
        goto LABEL_47;
      }
      int64_t v40 = (int *)v8;
      uint64_t v41 = *(int *)(v8 + 20);
      uint64_t v42 = (uint64_t)v10 + v41;
      uint64_t v43 = (uint64_t)v13 + v41;
      sub_1AFFC98F8();
      sub_1AFE9DBC0(&qword_1EB816CA8, MEMORY[0x1E4F27928]);
      char v44 = sub_1AFFCADD8();
      uint64_t v45 = v64;
      sub_1AFE9D918(v42, v64, (uint64_t (*)(void))sub_1AFD30DA8);
      uint64_t v46 = v65;
      sub_1AFE9D918(v43, v65, (uint64_t (*)(void))sub_1AFD30DA8);
      if ((v44 & 1) == 0)
      {
        sub_1AFE9D980(v46, (uint64_t (*)(void))sub_1AFD30DA8);
        sub_1AFE9D980(v45, (uint64_t (*)(void))sub_1AFD30DA8);
        uint64_t v13 = v60;
        uint64_t v10 = v61;
LABEL_47:
        sub_1AFE9D980((uint64_t)v10, type metadata accessor for Chart);
LABEL_48:
        sub_1AFE9D980((uint64_t)v13, type metadata accessor for Chart);
        return;
      }
      char v47 = sub_1AFFCADD8();
      uint64_t v48 = v46;
      char v49 = v47;
      sub_1AFE9D980(v48, (uint64_t (*)(void))sub_1AFD30DA8);
      sub_1AFE9D980(v45, (uint64_t (*)(void))sub_1AFD30DA8);
      uint64_t v13 = v60;
      uint64_t v10 = v61;
      uint64_t v16 = v59;
      if ((v49 & 1) == 0) {
        goto LABEL_47;
      }
      uint64_t v8 = (uint64_t)v40;
      uint64_t v50 = v40[6];
      long long v51 = (double *)((char *)v61 + v50);
      char v52 = *((unsigned char *)v61 + v50 + 8);
      long long v53 = (double *)((char *)v60 + v50);
      int v54 = *((unsigned __int8 *)v60 + v50 + 8);
      if (v52)
      {
        if (!v54) {
          goto LABEL_47;
        }
      }
      else
      {
        if (*v51 != *v53) {
          LOBYTE(v54) = 1;
        }
        if (v54) {
          goto LABEL_47;
        }
      }
      if ((MEMORY[0x1B3E8BFD0]((char *)v61 + v40[7], (char *)v60 + v40[7]) & 1) == 0
        || (sub_1AFFC9898() & 1) == 0
        || *(void *)(*(uint64_t *)((char *)v10 + v40[9]) + 16) != *(void *)(*(uint64_t *)((char *)v13 + v40[9]) + 16))
      {
        goto LABEL_47;
      }
      sub_1AFE9D980((uint64_t)v10, type metadata accessor for Chart);
      sub_1AFE9D980((uint64_t)v13, type metadata accessor for Chart);
      a1 = v58;
      unint64_t v22 = v66;
      if (v66) {
        goto LABEL_6;
      }
LABEL_8:
      int64_t v30 = v62 + 1;
      if (__OFADD__(v62, 1))
      {
        __break(1u);
        goto LABEL_51;
      }
      if (v30 < v57)
      {
        unint64_t v31 = *(void *)(v56 + 8 * v30);
        if (v31) {
          goto LABEL_11;
        }
        int64_t v32 = v62 + 2;
        ++v62;
        if (v30 + 1 < v57)
        {
          unint64_t v31 = *(void *)(v56 + 8 * v32);
          if (v31) {
            goto LABEL_14;
          }
          int64_t v62 = v30 + 1;
          if (v30 + 2 < v57)
          {
            unint64_t v31 = *(void *)(v56 + 8 * (v30 + 2));
            if (v31)
            {
              v30 += 2;
              goto LABEL_11;
            }
            int64_t v62 = v30 + 2;
            if (v30 + 3 < v57)
            {
              unint64_t v31 = *(void *)(v56 + 8 * (v30 + 3));
              if (v31)
              {
                v30 += 3;
                goto LABEL_11;
              }
              int64_t v32 = v30 + 4;
              int64_t v62 = v30 + 3;
              if (v30 + 4 < v57) {
                break;
              }
            }
          }
        }
      }
LABEL_28:
      sub_1AFE9DAE4(0, &qword_1EB817EF8, (void (*)(uint64_t))type metadata accessor for Chart);
      uint64_t v29 = v33;
      (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v16, 1, 1, v33);
      uint64_t v66 = 0;
    }
    unint64_t v31 = *(void *)(v56 + 8 * v32);
    if (v31)
    {
LABEL_14:
      int64_t v30 = v32;
LABEL_11:
      uint64_t v66 = (v31 - 1) & v31;
      unint64_t v23 = __clz(__rbit64(v31)) + (v30 << 6);
      int64_t v62 = v30;
      continue;
    }
    break;
  }
  while (1)
  {
    int64_t v30 = v32 + 1;
    if (__OFADD__(v32, 1)) {
      break;
    }
    if (v30 >= v57)
    {
      int64_t v62 = v55;
      goto LABEL_28;
    }
    unint64_t v31 = *(void *)(v56 + 8 * v30);
    ++v32;
    if (v31) {
      goto LABEL_11;
    }
  }
LABEL_51:
  __break(1u);
}

void sub_1AFE9D220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1AFE99480(a1, a2, a3, a4, v4[4], v4[5], v4[6], v4[7], v4[2], v4[3]);
}

void sub_1AFE9D250()
{
  if (!qword_1EB811138)
  {
    unint64_t v0 = sub_1AFFCA788();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB811138);
    }
  }
}

uint64_t sub_1AFE9D2A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1AFE9D2BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 16))();
}

uint64_t sub_1AFE9D2D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t sub_1AFE9D2E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t sub_1AFE9D2F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t sub_1AFE9D30C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t type metadata accessor for StockPriceDataManager()
{
  return self;
}

void sub_1AFE9D344(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_1AFE99938(a6);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  sub_1AFFC8E48();
  uint64_t v9 = (void *)sub_1AFFCA5E8();
  sub_1AFFCA678();
  swift_release();
  swift_release();

  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  sub_1AFFC8E48();
  id v11 = (id)sub_1AFFCA5E8();
  sub_1AFFCA6B8();
  swift_release();
  swift_release();
  swift_release();
}

uint64_t sub_1AFE9D47C()
{
  unint64_t v0 = (void *)sub_1AFFCA5E8();
  uint64_t v1 = sub_1AFFCA5D8();

  return v1;
}

void sub_1AFE9D4CC()
{
  if (!qword_1EB817E98)
  {
    sub_1AFE9D574(255, (unint64_t *)&qword_1EB817E90, (void (*)(uint64_t))type metadata accessor for Quote);
    sub_1AFE9D574(255, (unint64_t *)&qword_1EB817E88, (void (*)(uint64_t))type metadata accessor for Chart);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB817E98);
    }
  }
}

void sub_1AFE9D574(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1AFFCAD18();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1AFE9D5D8()
{
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 41, 7);
}

uint64_t sub_1AFE9D620(uint64_t a1, uint64_t a2)
{
  return sub_1AFE99EF8(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(unsigned char *)(v2 + 40));
}

uint64_t sub_1AFE9D630(void *a1)
{
  return (*(uint64_t (**)(void, void))(v1 + 16))(*a1, a1[1]);
}

uint64_t sub_1AFE9D668()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1AFE9D6A0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

void sub_1AFE9D6E8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_1AFE9A02C(a1, a2, *(void *)(v3 + 16), *(void *)(v3 + 24), *(unsigned __int8 *)(v3 + 32), *(void *)(v3 + 40), a3);
}

uint64_t sub_1AFE9D6F8()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1AFE9D730(void *a1)
{
  return (*(uint64_t (**)(void, void))(v1 + 16))(*a1, a1[1]);
}

void sub_1AFE9D768(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1AFE9D7CC(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_1AFE9DAE4(255, a3, a4);
    unint64_t v5 = sub_1AFFCB658();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1AFE9D824(uint64_t a1)
{
  sub_1AFE9D768(0, &qword_1EB817B00, (uint64_t (*)(uint64_t))type metadata accessor for Quote, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1AFE9D8B0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1AFE9D918(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1AFE9D980(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1AFE9D9E8()
{
  return sub_1AFE9B710(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

void sub_1AFE9DA08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1AFE9D344(a1, a2, a3, a4, *(void *)(v4 + 16), *(void *)(v4 + 24));
}

uint64_t sub_1AFE9DA14(long long *a1)
{
  return sub_1AFE9DA34(a1);
}

uint64_t sub_1AFE9DA2C(uint64_t a1)
{
  return sub_1AFE995D4(a1, *(void (**)(void *))(v1 + 16));
}

uint64_t sub_1AFE9DA34(long long *a1)
{
  uint64_t v2 = *(uint64_t (**)(long long *))(v1 + 16);
  long long v4 = *a1;
  return v2(&v4);
}

void sub_1AFE9DA78()
{
  if (!qword_1E9AFBDD0)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1E9AFBDD0);
    }
  }
}

void sub_1AFE9DAE4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_1AFE9DB4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = a6(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a2, a1, v8);
  return a2;
}

uint64_t sub_1AFE9DBC0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AFE9DC24(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  (*(void (**)(char *))(v2 + 16))((char *)v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for CKError(0);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  uint64_t v3 = (void *)v19;
  sub_1AFE9DF24();
  sub_1AFFC94B8();
  if (v21 != 2)
  {
    if (v21 == 11)
    {

      return 1;
    }
    goto LABEL_17;
  }
  v18[0] = v3;
  uint64_t v5 = sub_1AFFC94D8();
  uint64_t v6 = sub_1AFFCAE98();
  if (*(void *)(v5 + 16) && (unint64_t v8 = sub_1AFD79CC8(v6, v7), (v9 & 1) != 0))
  {
    sub_1AFD38AF4(*(void *)(v5 + 56) + 32 * v8, (uint64_t)&v19);
  }
  else
  {
    long long v19 = 0u;
    long long v20 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v20 + 1))
  {

    sub_1AFD3BDB4((uint64_t)&v19);
    return 0;
  }
  sub_1AFE9DF7C();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_17:

    return 0;
  }
  id v10 = v18[0];
  id v11 = objc_msgSend(v18[0], sel_allValues);
  uint64_t v12 = sub_1AFFCB1C8();

  uint64_t v13 = *(void *)(v12 + 16);
  if (v13)
  {
    uint64_t v14 = v12 + 32;
    sub_1AFFC8E38();
    while (1)
    {
      sub_1AFD38AF4(v14, (uint64_t)&v19);
      sub_1AFD38AF4((uint64_t)&v19, (uint64_t)v18);
      sub_1AFE9DFBC();
      if (!swift_dynamicCast()) {
        break;
      }
      uint64_t v15 = (void *)v17[5];
      swift_getErrorValue();
      char v16 = sub_1AFE9DC24(v17[2]);

      if ((v16 & 1) == 0) {
        break;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
      v14 += 32;
      if (!--v13)
      {

        swift_bridgeObjectRelease();
        goto LABEL_23;
      }
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);

    swift_bridgeObjectRelease_n();
    return 0;
  }

LABEL_23:
  swift_bridgeObjectRelease();
  return 1;
}

unint64_t sub_1AFE9DF24()
{
  unint64_t result = qword_1EB8119C0;
  if (!qword_1EB8119C0)
  {
    type metadata accessor for CKError(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8119C0);
  }
  return result;
}

unint64_t sub_1AFE9DF7C()
{
  unint64_t result = qword_1E9AFBDD8;
  if (!qword_1E9AFBDD8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E9AFBDD8);
  }
  return result;
}

unint64_t sub_1AFE9DFBC()
{
  unint64_t result = qword_1EB81A110;
  if (!qword_1EB81A110)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB81A110);
  }
  return result;
}

uint64_t sub_1AFE9E014()
{
  return sub_1AFFC8C08();
}

uint64_t sub_1AFE9E038()
{
  return sub_1AFFC8C08();
}

uint64_t sub_1AFE9E05C()
{
  return sub_1AFFC8C18();
}

uint64_t sub_1AFE9E09C()
{
  uint64_t v0 = sub_1AFFC9528();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1AFFC9A78();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v5 = sub_1AFFCAE58();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v6 = sub_1AFFC9548();
  __swift_allocate_value_buffer(v6, qword_1E9AFBDE0);
  __swift_project_value_buffer(v6, (uint64_t)qword_1E9AFBDE0);
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4F275D0], v0);
  return sub_1AFFC9558();
}

uint64_t sub_1AFE9E27C@<X0>(uint64_t a1@<X8>)
{
  return sub_1AFD32B4C(&qword_1E9AF8DB8, MEMORY[0x1E4F27608], (uint64_t)qword_1E9AFBDE0, a1);
}

uint64_t sub_1AFE9E2B4()
{
  sub_1AFDA8968(0, &qword_1EB816B00, MEMORY[0x1E4F27608]);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)v12 - v1;
  v12[0] = sub_1AFFC9528();
  uint64_t v3 = *(void *)(v12[0] - 8);
  MEMORY[0x1F4188790](v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1AFFC9A78();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v7 = sub_1AFFCAE58();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v8 = sub_1AFFC9548();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = sub_1AFFC8CD8();
  __swift_allocate_value_buffer(v10, qword_1E9AFBDF8);
  __swift_project_value_buffer(v10, (uint64_t)qword_1E9AFBDF8);
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, *MEMORY[0x1E4F275D0], v12[0]);
  sub_1AFFC9558();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_1AFFC8CE8();
}

uint64_t sub_1AFE9E5A8@<X0>(uint64_t a1@<X8>)
{
  return sub_1AFD32B4C(&qword_1E9AF8DC0, MEMORY[0x1E4F18510], (uint64_t)qword_1E9AFBDF8, a1);
}

uint64_t sub_1AFE9E5E0()
{
  sub_1AFE9FD6C(0, &qword_1E9AFBE10, (uint64_t (*)(void))sub_1AFD93F64, (uint64_t)&type metadata for AddSymbolToWatchlistIntent, MEMORY[0x1E4F186C8]);
  MEMORY[0x1F4188790](v0 - 8);
  sub_1AFE9FD6C(0, &qword_1E9AFBE18, (uint64_t (*)(void))sub_1AFD93F64, (uint64_t)&type metadata for AddSymbolToWatchlistIntent, MEMORY[0x1E4F186C0]);
  MEMORY[0x1F4188790](v1);
  sub_1AFD93F64();
  sub_1AFFC8EA8();
  sub_1AFFC8E98();
  swift_getKeyPath();
  sub_1AFE9E818();
  sub_1AFFC8E88();
  swift_release();
  sub_1AFFC8E98();
  swift_getKeyPath();
  sub_1AFE9E8A0();
  sub_1AFFC8E88();
  swift_release();
  sub_1AFFC8E98();
  sub_1AFFC8EB8();
  return sub_1AFFC8E58();
}

uint64_t sub_1AFE9E7F0()
{
  return sub_1AFFC8C28();
}

void sub_1AFE9E818()
{
  if (!qword_1E9AFBE20)
  {
    sub_1AFDA7970();
    unint64_t v0 = sub_1AFFCBE88();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9AFBE20);
    }
  }
}

uint64_t sub_1AFE9E878()
{
  return sub_1AFFC8C28();
}

void sub_1AFE9E8A0()
{
  if (!qword_1E9AFBE28)
  {
    sub_1AFE9FD6C(255, &qword_1EB811368, (uint64_t (*)(void))sub_1AFD33084, (uint64_t)&type metadata for WatchlistEntity, MEMORY[0x1E4F184C8]);
    unint64_t v0 = sub_1AFFCBE88();
    if (!v1) {
      atomic_store(v0, &qword_1E9AFBE28);
    }
  }
}

uint64_t sub_1AFE9E938(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SymbolEntity();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v9 - v6;
  sub_1AFD5BCD0(a1, (uint64_t)&v9 - v6);
  sub_1AFD5BCD0((uint64_t)v7, (uint64_t)v4);
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8C18();
  sub_1AFD2E05C((uint64_t)v7);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1AFE9EA34(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SymbolEntity();
  MEMORY[0x1F4188790](v2 - 8);
  sub_1AFD5BCD0(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1AFFC8C18();
  return sub_1AFD2E05C(a1);
}

uint64_t (*sub_1AFE9EAC4(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1AFFC8BF8();
  return sub_1AFD3325C;
}

uint64_t (*sub_1AFE9EB20(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1AFFC8BF8();
  return sub_1AFD3325C;
}

uint64_t sub_1AFE9EB7C()
{
  return sub_1AFFC8998();
}

uint64_t sub_1AFE9EBA0(uint64_t a1)
{
  sub_1AFD2CEB0(a1, (uint64_t)v3);
  sub_1AFFC89A8();
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t (*sub_1AFE9EBE4(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1AFFC8988();
  return sub_1AFD3325C;
}

uint64_t sub_1AFE9EC40()
{
  return sub_1AFFC89B8();
}

uint64_t sub_1AFE9EC64@<X0>(char **a1@<X8>)
{
  uint64_t v56 = a1;
  uint64_t v1 = sub_1AFFC8EC8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v61 = v1;
  uint64_t v62 = v2;
  MEMORY[0x1F4188790](v1);
  int64_t v60 = (char *)v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFDA8968(0, &qword_1EB816AF0, MEMORY[0x1E4F182D8]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v59 = (char *)v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v58 = (char *)v42 - v7;
  sub_1AFDA8968(0, &qword_1EB810BC8, (void (*)(uint64_t))type metadata accessor for SymbolEntity);
  MEMORY[0x1F4188790](v8 - 8);
  int64_t v57 = (char *)v42 - v9;
  sub_1AFDA8968(0, &qword_1EB816B00, MEMORY[0x1E4F27608]);
  MEMORY[0x1F4188790](v10 - 8);
  char v49 = (char *)v42 - v11;
  uint64_t v12 = sub_1AFFC9528();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1AFFC9A78();
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v17 = sub_1AFFCAE58();
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v18 = sub_1AFFC9548();
  uint64_t v54 = v18;
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  v42[1] = (char *)v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFDA7970();
  uint64_t v52 = v21;
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  unint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 104);
  unsigned int v46 = *MEMORY[0x1E4F275D0];
  uint64_t v22 = v46;
  uint64_t v47 = v12;
  v23(v15, v46, v12);
  uint64_t v45 = v23;
  uint64_t v48 = v13 + 104;
  sub_1AFFC9558();
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  v23(v15, v22, v12);
  uint64_t v24 = v49;
  sub_1AFFC9558();
  uint64_t v25 = *(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56);
  uint64_t v53 = v19 + 56;
  int64_t v55 = v25;
  v25(v24, 0, 1, v18);
  uint64_t v26 = type metadata accessor for SymbolEntity();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v57, 1, 1, v26);
  uint64_t v27 = sub_1AFFC8AD8();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56);
  uint64_t v43 = v29;
  uint64_t v44 = v28 + 56;
  v29(v58, 1, 1, v27);
  v29(v59, 1, 1, v27);
  *(void *)&long long v63 = sub_1AFD910B4();
  *((void *)&v63 + 1) = v30;
  *(void *)&long long v64 = v31;
  *((void *)&v64 + 1) = v32;
  unsigned int v50 = *MEMORY[0x1E4F186F0];
  uint64_t v33 = *(void (**)(void))(v62 + 104);
  v62 += 104;
  long long v51 = (void (*)(char *, void, uint64_t))v33;
  v33(v60);
  sub_1AFD5BC18();
  int64_t v57 = (char *)sub_1AFFC8C58();
  sub_1AFE9FD6C(0, &qword_1EB811368, (uint64_t (*)(void))sub_1AFD33084, (uint64_t)&type metadata for WatchlistEntity, MEMORY[0x1E4F184C8]);
  uint64_t v52 = v34;
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  uint64_t v35 = v46;
  uint64_t v36 = v47;
  uint64_t v37 = v45;
  v45(v15, v46, v47);
  sub_1AFFC9558();
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  v37(v15, v35, v36);
  sub_1AFFC9558();
  v55(v24, 0, 1, v54);
  uint64_t v66 = 0;
  uint64_t v67 = 0;
  uint64_t v68 = 0;
  unint64_t v38 = v43;
  v43(v58, 1, 1, v27);
  v38(v59, 1, 1, v27);
  sub_1AFD5A2B4(0, (unint64_t *)&qword_1EB8167E0, (unint64_t *)&qword_1EB81A890);
  sub_1AFFC8A08();
  long long v63 = 0u;
  long long v64 = 0u;
  uint64_t v65 = 0;
  sub_1AFFC89F8();
  *(void *)&long long v63 = sub_1AFFC89C8();
  v51(v60, v50, v61);
  sub_1AFD5A30C();
  sub_1AFD33B44();
  uint64_t v39 = sub_1AFFC8C48();
  sub_1AFD5A2B4(0, &qword_1EB8167D8, (unint64_t *)&qword_1EB816B10);
  uint64_t v65 = 0;
  long long v63 = 0u;
  long long v64 = 0u;
  sub_1AFFC89F8();
  uint64_t result = sub_1AFFC89C8();
  uint64_t v41 = v56;
  char *v56 = v57;
  v41[1] = (char *)v39;
  v41[2] = (char *)result;
  return result;
}

uint64_t sub_1AFE9F540(uint64_t a1)
{
  *(void *)(v2 + 128) = a1;
  sub_1AFDA8968(0, &qword_1EB810BC8, (void (*)(uint64_t))type metadata accessor for SymbolEntity);
  *(void *)(v2 + 136) = swift_task_alloc();
  *(_OWORD *)(v2 + 144) = *(_OWORD *)v1;
  *(void *)(v2 + 160) = *(void *)(v1 + 16);
  return MEMORY[0x1F4188298](sub_1AFE9F5FC, 0, 0);
}

uint64_t sub_1AFE9F5FC()
{
  uint64_t v2 = v0[19];
  uint64_t v1 = v0[20];
  uint64_t v3 = v0[18];
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8998();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v4 = v0[5];
  uint64_t v5 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v4);
  v0[7] = v3;
  v0[8] = v2;
  v0[9] = v1;
  uint64_t v8 = (uint64_t (*)(void *, uint64_t, uint64_t))(*(void *)(v5 + 8) + **(int **)(v5 + 8));
  uint64_t v6 = (void *)swift_task_alloc();
  v0[21] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1AFE9F764;
  return v8(v0 + 7, v4, v5);
}

uint64_t sub_1AFE9F764()
{
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1AFDA8F0C;
  }
  else {
    uint64_t v2 = sub_1AFE9F878;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1AFE9F878()
{
  uint64_t v10 = v0;
  uint64_t v1 = *(void *)(v0 + 136);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8C08();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v8 = *(void *)(v0 + 80);
  long long v9 = *(_OWORD *)(v0 + 88);
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8C08();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v2 = type metadata accessor for SymbolEntity();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 0, 1, v2);
  sub_1AFD5A49C(&v8, v1, v7);
  uint64_t v3 = v7[1];
  uint64_t v4 = v7[2];
  *(void *)(v0 + 104) = v7[0];
  *(void *)(v0 + 112) = v3;
  *(void *)(v0 + 120) = v4;
  sub_1AFD5907C();
  sub_1AFFC8AE8();
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_1AFE9FA2C@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E9AF8DB8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1AFFC9548();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1E9AFBDE0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1AFE9FAD8(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1AFD3503C;
  return sub_1AFE9F540(a1);
}

uint64_t sub_1AFE9FB74(uint64_t a1)
{
  unint64_t v2 = sub_1AFD93F64();

  return MEMORY[0x1F40D3C90](a1, v2);
}

unint64_t sub_1AFE9FBB4()
{
  unint64_t result = qword_1EB8113F8;
  if (!qword_1EB8113F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8113F8);
  }
  return result;
}

unint64_t sub_1AFE9FC0C()
{
  unint64_t result = qword_1EB8113E8;
  if (!qword_1EB8113E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8113E8);
  }
  return result;
}

uint64_t sub_1AFE9FC60()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1AFE9FC94()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for AddSymbolToWatchlistIntent()
{
  return &type metadata for AddSymbolToWatchlistIntent;
}

unint64_t sub_1AFE9FCDC()
{
  unint64_t result = qword_1E9AFBE40;
  if (!qword_1E9AFBE40)
  {
    sub_1AFE9FD6C(255, &qword_1E9AFBE48, (uint64_t (*)(void))sub_1AFD93F64, (uint64_t)&type metadata for AddSymbolToWatchlistIntent, MEMORY[0x1E4F186A8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBE40);
  }
  return result;
}

void sub_1AFE9FD6C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1AFE9FDD4@<X0>(uint64_t a1@<X8>)
{
  sub_1AFD392D8();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = &v13[-v7];
  uint64_t v9 = v1 + OBJC_IVAR____TtC10StocksCore8AppGroup____lazy_storage___containerURL;
  swift_beginAccess();
  sub_1AFE6FB24(v9, (uint64_t)v8);
  uint64_t v10 = sub_1AFFC96E8();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1) {
    return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v11 + 32))(a1, v8, v10);
  }
  sub_1AFD48D50((uint64_t)v8);
  sub_1AFEA0288(a1);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v11 + 16))(v5, a1, v10);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v5, 0, 1, v10);
  swift_beginAccess();
  sub_1AFEA055C((uint64_t)v5, v9);
  return swift_endAccess();
}

uint64_t sub_1AFE9FFA0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_1AFFC8E38();
  return v1;
}

uint64_t sub_1AFE9FFD0(uint64_t a1, uint64_t *a2)
{
  sub_1AFD392D8();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1AFFC96E8();
  uint64_t v8 = *(void *)(v7 - 8);
  double v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16))(v11, a1, v7, v9);
  uint64_t v12 = *a2;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v6, v11, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  uint64_t v13 = v12 + OBJC_IVAR____TtC10StocksCore8AppGroup____lazy_storage___containerURL;
  swift_beginAccess();
  sub_1AFEA055C((uint64_t)v6, v13);
  return swift_endAccess();
}

uint64_t sub_1AFEA0160(uint64_t a1)
{
  sub_1AFD392D8();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1AFFC96E8();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v5, a1, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  uint64_t v8 = v1 + OBJC_IVAR____TtC10StocksCore8AppGroup____lazy_storage___containerURL;
  swift_beginAccess();
  sub_1AFEA055C((uint64_t)v5, v8);
  return swift_endAccess();
}

uint64_t sub_1AFEA0288@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1AFFC96E8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFD392D8();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = objc_msgSend(self, sel_defaultManager);
  uint64_t v10 = (void *)sub_1AFFCAE68();
  id v11 = objc_msgSend(v9, sel_containerURLForSecurityApplicationGroupIdentifier_, v10);

  if (v11)
  {
    sub_1AFFC9678();

    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
    v12(v8, v5, v2);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v8, 0, 1, v2);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) != 1) {
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v12)(a1, v8, v2);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v8, 1, 1, v2);
  }
  uint64_t v14 = NSTemporaryDirectory();
  uint64_t v15 = sub_1AFFCAE98();
  uint64_t v17 = v16;

  id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F29128]), sel_init);
  id v19 = objc_msgSend(v18, sel_UUIDString);

  sub_1AFFCAE98();
  v20[0] = v15;
  v20[1] = v17;
  sub_1AFFC8E38();
  sub_1AFFCAFA8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1AFFC9618();
  swift_bridgeObjectRelease();
  return sub_1AFD48D50((uint64_t)v8);
}

uint64_t sub_1AFEA055C(uint64_t a1, uint64_t a2)
{
  sub_1AFD392D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void (*sub_1AFEA05C0(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[6] = v1;
  sub_1AFD392D8();
  v3[7] = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  uint64_t v5 = sub_1AFFC96E8();
  v3[8] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v3[9] = v6;
  size_t v7 = *(void *)(v6 + 64);
  v3[10] = malloc(v7);
  uint64_t v8 = malloc(v7);
  v3[11] = v8;
  sub_1AFE9FDD4((uint64_t)v8);
  return sub_1AFEA06AC;
}

void sub_1AFEA06AC(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v4 = *(void **)(*(void *)a1 + 80);
  uint64_t v3 = *(void **)(*(void *)a1 + 88);
  if (a2)
  {
    uint64_t v5 = v2[8];
    uint64_t v6 = v2[9];
    uint64_t v8 = v2[6];
    size_t v7 = (void *)v2[7];
    (*(void (**)(void, void, uint64_t))(v6 + 16))(v2[10], v2[11], v5);
    (*(void (**)(void *, void *, uint64_t))(v6 + 32))(v7, v4, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v7, 0, 1, v5);
    uint64_t v9 = v8 + OBJC_IVAR____TtC10StocksCore8AppGroup____lazy_storage___containerURL;
    swift_beginAccess();
    sub_1AFEA055C((uint64_t)v7, v9);
    swift_endAccess();
    (*(void (**)(void *, uint64_t))(v6 + 8))(v3, v5);
  }
  else
  {
    uint64_t v10 = v2[8];
    uint64_t v11 = v2[9];
    uint64_t v12 = v2[6];
    size_t v7 = (void *)v2[7];
    (*(void (**)(void *, void, uint64_t))(v11 + 32))(v7, v2[11], v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
    uint64_t v13 = v12 + OBJC_IVAR____TtC10StocksCore8AppGroup____lazy_storage___containerURL;
    swift_beginAccess();
    sub_1AFEA055C((uint64_t)v7, v13);
    swift_endAccess();
  }
  free(v3);
  free(v4);
  free(v7);

  free(v2);
}

uint64_t sub_1AFEA0858@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC10StocksCore8AppGroup_settingsDomain;
  uint64_t v4 = sub_1AFFC9C68();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

id sub_1AFEA08CC()
{
  return *(id *)(v0 + OBJC_IVAR____TtC10StocksCore8AppGroup_userDefaults);
}

void sub_1AFEA08DC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2 + OBJC_IVAR____TtC10StocksCore8AppGroup____lazy_storage___containerURL;
  uint64_t v6 = sub_1AFFC96E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  size_t v7 = (void *)(v2 + OBJC_IVAR____TtC10StocksCore8AppGroup_settingsDomain);
  void *v7 = a1;
  v7[1] = a2;
  uint64_t v8 = *MEMORY[0x1E4FAB408];
  uint64_t v9 = sub_1AFFC9C68();
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v7, v8, v9);
  id v10 = objc_allocWithZone(MEMORY[0x1E4F1CB18]);
  swift_bridgeObjectRetain_n();
  uint64_t v11 = (void *)sub_1AFFCAE68();
  swift_bridgeObjectRelease();
  id v12 = objc_msgSend(v10, sel_initWithSuiteName_, v11);

  if (v12) {
    *(void *)(v2 + OBJC_IVAR____TtC10StocksCore8AppGroup_userDefaults) = v12;
  }
  else {
    __break(1u);
  }
}

void sub_1AFEA0A20(uint64_t a1)
{
}

uint64_t sub_1AFEA0A44()
{
  return sub_1AFDD0064(&qword_1EB81AB78);
}

void sub_1AFEA0A68(uint64_t a1)
{
}

void sub_1AFEA0A8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  type metadata accessor for AppGroup();
  uint64_t v7 = swift_allocObject();
  sub_1AFEA08DC(a2, a3);
  *a4 = v7;
}

uint64_t sub_1AFEA0AE8()
{
  return sub_1AFDD0064(&qword_1EB810FF0);
}

uint64_t sub_1AFEA0B0C()
{
  swift_bridgeObjectRelease();
  sub_1AFD48D50(v0 + OBJC_IVAR____TtC10StocksCore8AppGroup____lazy_storage___containerURL);
  uint64_t v1 = v0 + OBJC_IVAR____TtC10StocksCore8AppGroup_settingsDomain;
  uint64_t v2 = sub_1AFFC9C68();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return v0;
}

uint64_t sub_1AFEA0B98()
{
  swift_bridgeObjectRelease();
  sub_1AFD48D50(v0 + OBJC_IVAR____TtC10StocksCore8AppGroup____lazy_storage___containerURL);
  uint64_t v1 = v0 + OBJC_IVAR____TtC10StocksCore8AppGroup_settingsDomain;
  uint64_t v2 = sub_1AFFC9C68();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_1AFEA0C60@<X0>(uint64_t a1@<X8>)
{
  return sub_1AFE9FDD4(a1);
}

uint64_t sub_1AFEA0C88()
{
  return type metadata accessor for AppGroup();
}

uint64_t type metadata accessor for AppGroup()
{
  uint64_t result = qword_1EB81A498;
  if (!qword_1EB81A498) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1AFEA0CDC()
{
  sub_1AFD392D8();
  if (v0 <= 0x3F)
  {
    sub_1AFFC9C68();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_1AFEA0DC0(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AppGroup);
}

uint64_t sub_1AFEA0DD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v73 = a2;
  uint64_t v3 = sub_1AFFCAED8();
  uint64_t v69 = *(void *)(v3 - 8);
  uint64_t v70 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v68 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1AFFC9818();
  uint64_t v67 = *(char **)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1AFFC98F8();
  uint64_t v66 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  id v10 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFEA24B8(0, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v60 - v12;
  uint64_t v14 = sub_1AFFC96E8();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1AFFC9098();
  if (!v19) {
    goto LABEL_12;
  }
  uint64_t v20 = v19;
  uint64_t v65 = v18;
  uint64_t v72 = a1;
  sub_1AFFC90D8();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    swift_bridgeObjectRelease();
    sub_1AFEA251C((uint64_t)v13, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0]);
LABEL_11:
    a1 = v72;
LABEL_12:
    sub_1AFFCB468();
    sub_1AFEA24B8(0, (unint64_t *)&qword_1EB81A100, (uint64_t (*)(uint64_t))sub_1AFD3AE64, MEMORY[0x1E4FBBE00]);
    uint64_t v44 = swift_allocObject();
    *(_OWORD *)(v44 + 16) = xmmword_1AFFD05F0;
    uint64_t v45 = sub_1AFFC9118();
    sub_1AFEA1DD4(&qword_1E9AFBE50, MEMORY[0x1E4F26C48]);
    uint64_t v46 = a1;
    uint64_t v47 = sub_1AFFCBC88();
    uint64_t v49 = v48;
    *(void *)(v44 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v44 + 64) = sub_1AFD2CE00();
    *(void *)(v44 + 32) = v47;
    *(void *)(v44 + 40) = v49;
    sub_1AFD2C4F4();
    unsigned int v50 = (void *)sub_1AFFCB638();
    sub_1AFFCA878();
    swift_bridgeObjectRelease();

    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 16))(v73, v46, v45);
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
  uint64_t v21 = v14;
  uint64_t v22 = v17;
  uint64_t v23 = sub_1AFFC9698();
  if (!v24)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v21);
LABEL_10:
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  uint64_t v25 = v24;
  uint64_t v62 = v23;
  uint64_t v63 = v15;
  uint64_t v64 = v21;
  uint64_t v26 = sub_1AFFC96B8();
  if (!v27)
  {
    (*(void (**)(char *, uint64_t))(v63 + 8))(v22, v64);
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  uint64_t v28 = v25;
  uint64_t v29 = v26;
  uint64_t v61 = v27;
  sub_1AFEA1734((uint64_t)v10);
  sub_1AFFC9138();
  sub_1AFEA1DD4(&qword_1EB818528, MEMORY[0x1E4F278A8]);
  sub_1AFFC98D8();
  (*((void (**)(char *, uint64_t))v67 + 1))(v7, v5);
  (*(void (**)(char *, uint64_t))(v66 + 8))(v10, v8);
  uint64_t v31 = v74[0];
  uint64_t v30 = v74[1];
  sub_1AFEA1E1C(0, (unint64_t *)&qword_1EB81A0E0, MEMORY[0x1E4FBBE00]);
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_1AFFD2CC0;
  *(void *)(v32 + 32) = v65;
  *(void *)(v32 + 40) = v20;
  *(void *)(v32 + 48) = v62;
  *(void *)(v32 + 56) = v28;
  *(void *)(v32 + 64) = sub_1AFFC96A8();
  *(void *)(v32 + 72) = v33;
  *(void *)(v32 + 80) = 63;
  *(void *)(v32 + 88) = 0xE100000000000000;
  uint64_t v34 = v61;
  *(void *)(v32 + 96) = v29;
  *(void *)(v32 + 104) = v34;
  *(void *)(v32 + 112) = v31;
  *(void *)(v32 + 120) = v30;
  v74[0] = v32;
  sub_1AFEA1E1C(0, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB320]);
  sub_1AFD371B8();
  sub_1AFFC8E38();
  uint64_t v67 = v22;
  uint64_t v35 = sub_1AFFCAD88();
  uint64_t v37 = v36;
  swift_bridgeObjectRelease();
  unint64_t v38 = v68;
  sub_1AFFCAEC8();
  uint64_t v39 = sub_1AFFCAEA8();
  unint64_t v41 = v40;
  (*(void (**)(char *, uint64_t))(v69 + 8))(v38, v70);
  if (v41 >> 60 == 15)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v63 + 8))(v67, v64);
    uint64_t v42 = sub_1AFFC9118();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16))(v73, v72, v42);
  }
  else
  {
    uint64_t v70 = sub_1AFEA2244(v39, v41);
    unint64_t v52 = v51;
    sub_1AFFC9788();
    uint64_t v71 = v39;
    v74[0] = 0;
    v74[1] = 0xE000000000000000;
    sub_1AFFCB7F8();
    swift_bridgeObjectRelease();
    strcpy((char *)v74, "HHMAC;date=\"");
    BYTE5(v74[1]) = 0;
    HIWORD(v74[1]) = -5120;
    sub_1AFFCAFA8();
    swift_bridgeObjectRelease();
    sub_1AFFCAFA8();
    sub_1AFFCAFA8();
    swift_bridgeObjectRelease();
    sub_1AFFCAFA8();
    uint64_t v54 = v74[0];
    uint64_t v53 = v74[1];
    sub_1AFEA24B8(0, (unint64_t *)&qword_1EB81A100, (uint64_t (*)(uint64_t))sub_1AFD3AE64, MEMORY[0x1E4FBBE00]);
    uint64_t v55 = swift_allocObject();
    *(_OWORD *)(v55 + 16) = xmmword_1AFFD0610;
    uint64_t v56 = MEMORY[0x1E4FBB1A0];
    *(void *)(v55 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v57 = sub_1AFD2CE00();
    *(void *)(v55 + 32) = v35;
    *(void *)(v55 + 40) = v37;
    *(void *)(v55 + 96) = v56;
    *(void *)(v55 + 104) = v57;
    *(void *)(v55 + 64) = v57;
    *(void *)(v55 + 72) = v54;
    *(void *)(v55 + 80) = v53;
    sub_1AFD2C4F4();
    sub_1AFFC8E38();
    uint64_t v58 = (void *)sub_1AFFCB638();
    sub_1AFFCB478();
    sub_1AFFCA878();
    swift_bridgeObjectRelease();

    uint64_t v59 = sub_1AFFC9118();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 16))(v73, v72, v59);
    sub_1AFFC9108();
    swift_bridgeObjectRelease();
    sub_1AFD4B504(v70, v52);
    sub_1AFDE6658(v71, v41);
    return (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v67, v64);
  }
}

uint64_t sub_1AFEA1734@<X0>(uint64_t a1@<X8>)
{
  uint64_t v36 = a1;
  sub_1AFEA24B8(0, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v29 = (char *)&v28 - v2;
  uint64_t v3 = sub_1AFFC9418();
  uint64_t v32 = *(void *)(v3 - 8);
  uint64_t v33 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v37 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1AFFC98F8();
  uint64_t v34 = *(void *)(v5 - 8);
  uint64_t v35 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1AFFC9B18();
  uint64_t v30 = *(void *)(v8 - 8);
  uint64_t v31 = v8;
  MEMORY[0x1F4188790](v8);
  id v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFFC9AD8();
  sub_1AFFC98E8();
  sub_1AFEA24B8(0, &qword_1EB818348, MEMORY[0x1E4F27C88], MEMORY[0x1E4FBBE00]);
  uint64_t v11 = sub_1AFFC9B08();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 72);
  unint64_t v14 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1AFFD3AE0;
  uint64_t v16 = *(void (**)(unint64_t, void, uint64_t))(v12 + 104);
  v16(v15 + v14, *MEMORY[0x1E4F27C20], v11);
  v16(v15 + v14 + v13, *MEMORY[0x1E4F27C30], v11);
  v16(v15 + v14 + 2 * v13, *MEMORY[0x1E4F27BF0], v11);
  v16(v15 + v14 + 3 * v13, *MEMORY[0x1E4F27C10], v11);
  v16(v15 + v14 + 4 * v13, *MEMORY[0x1E4F27C48], v11);
  sub_1AFEA1F30(v15);
  swift_setDeallocating();
  uint64_t v17 = v37;
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1AFFC9AB8();
  swift_bridgeObjectRelease();
  sub_1AFFC93E8();
  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v32 + 8))(v17, v33);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v10, v31);
    uint64_t v24 = (uint64_t)v7;
    uint64_t v25 = v35;
    uint64_t v23 = v36;
    uint64_t v26 = v34;
  }
  else
  {
    sub_1AFFC93F8();
    uint64_t v19 = v29;
    sub_1AFFC9AC8();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v17, v33);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v10, v31);
    uint64_t v21 = v34;
    uint64_t v20 = v35;
    int v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48))(v19, 1, v35);
    uint64_t v23 = v36;
    uint64_t v24 = (uint64_t)v19;
    uint64_t v25 = v20;
    uint64_t v26 = v21;
    if (v22 == 1)
    {
      sub_1AFEA251C(v24, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928]);
      uint64_t v24 = (uint64_t)v7;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v25);
    }
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 32))(v23, v24, v25);
}

uint64_t sub_1AFEA1C6C@<X0>(void *data@<X0>, unsigned char *macOut@<X5>, const void *a3@<X1>, uint64_t a4@<X2>, unint64_t a5@<X3>, size_t a6@<X4>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  size_t v12 = 0;
  switch(a5 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a4), a4))
      {
        __break(1u);
LABEL_8:
        __break(1u);
        JUMPOUT(0x1AFEA1D44);
      }
      size_t v12 = HIDWORD(a4) - (int)a4;
LABEL_6:
      CCHmac(2u, a3, v12, data, a6, macOut);
      uint64_t v16 = sub_1AFEA2404(macOut, a7);
      uint64_t v18 = v17;
      uint64_t result = MEMORY[0x1B3E8F0D0](macOut, -1, -1);
      *a8 = v16;
      a8[1] = v18;
      return result;
    case 2uLL:
      uint64_t v15 = a4 + 16;
      uint64_t v14 = *(void *)(a4 + 16);
      uint64_t v13 = *(void *)(v15 + 8);
      size_t v12 = v13 - v14;
      if (!__OFSUB__(v13, v14)) {
        goto LABEL_6;
      }
      goto LABEL_8;
    case 3uLL:
      goto LABEL_6;
    default:
      size_t v12 = BYTE6(a5);
      goto LABEL_6;
  }
}

uint64_t sub_1AFEA1D54()
{
  sub_1AFD4B504(*(void *)(v0 + 16), *(void *)(v0 + 24));

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SparklinesRequestSigner()
{
  return self;
}

uint64_t sub_1AFEA1DB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1AFEA0DD8(a1, a2);
}

uint64_t sub_1AFEA1DD4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1AFEA1E1C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, void))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x1E4FBB1A0]);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1AFEA1E6C(unsigned char *__src, unsigned char *a2)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  if (__src) {
    unint64_t v2 = a2 - __src;
  }
  else {
    unint64_t v2 = 0;
  }
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF) {
    goto LABEL_11;
  }
  memset(__dst, 0, sizeof(__dst));
  char v5 = v2;
  if (__src && a2 != __src) {
    memcpy(__dst, __src, a2 - __src);
  }
  return *(void *)__dst;
}

uint64_t sub_1AFEA1F30(uint64_t a1)
{
  uint64_t v2 = sub_1AFFC9B08();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  char v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_1AFEA258C();
    uint64_t v9 = sub_1AFFCB7B8();
    uint64_t v10 = 0;
    size_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_1AFEA1DD4(&qword_1EB816CD0, MEMORY[0x1E4F27C88]);
      uint64_t v16 = sub_1AFFCAD58();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v5, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_1AFEA1DD4(&qword_1EB816CD8, MEMORY[0x1E4F27C88]);
          char v23 = sub_1AFFCADD8();
          uint64_t v24 = *v15;
          (*v15)(v5, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return v9;
      }
    }
  }
  return MEMORY[0x1E4FBC870];
}

uint64_t sub_1AFEA2244(uint64_t a1, unint64_t a2)
{
  switch(a2 >> 62)
  {
    case 1uLL:
      if (!__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_5;
      }
      __break(1u);
LABEL_7:
      __break(1u);
      JUMPOUT(0x1AFEA236CLL);
    case 2uLL:
      if (!__OFSUB__(*(void *)(a1 + 24), *(void *)(a1 + 16))) {
        goto LABEL_5;
      }
      goto LABEL_7;
    default:
LABEL_5:
      uint64_t v2 = swift_slowAlloc();
      MEMORY[0x1F4188790](v2);
      sub_1AFFC9768();
      return v4;
  }
}

uint64_t sub_1AFEA237C()
{
  return sub_1AFFC9768();
}

uint64_t sub_1AFEA23E0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1AFEA1C6C(a1, *(unsigned char **)(v2 + 48), *(const void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 56), a2);
}

uint64_t sub_1AFEA2404(unsigned char *__src, uint64_t a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 <= 14) {
    return sub_1AFEA1E6C(__src, &__src[a2]);
  }
  sub_1AFFC93D8();
  swift_allocObject();
  sub_1AFFC9388();
  if ((unint64_t)a2 < 0x7FFFFFFF) {
    return a2 << 32;
  }
  sub_1AFFC9738();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a2;
  return result;
}

void sub_1AFEA24B8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1AFEA251C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1AFEA24B8(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1AFEA258C()
{
  if (!qword_1EB8181C8)
  {
    sub_1AFFC9B08();
    sub_1AFEA1DD4(&qword_1EB816CD0, MEMORY[0x1E4F27C88]);
    unint64_t v0 = sub_1AFFCB7C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8181C8);
    }
  }
}

uint64_t type metadata accessor for YahooSearchOperation()
{
  uint64_t result = qword_1E9AFBE70;
  if (!qword_1E9AFBE70) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1AFEA266C()
{
  uint64_t result = sub_1AFFC9E18();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1AFEA271C(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1AFEA2734(a1, a2, a3, a4, a5, a6, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, uint64_t))sub_1AFFB61AC);
}

uint64_t sub_1AFEA2734(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(void, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, uint64_t))
{
  uint64_t v11 = 0x73752D6E65;
  id v12 = objc_msgSend(self, sel_sharedPreferences);
  uint64_t v13 = v12;
  if (!v12)
  {
    unint64_t v18 = 0xE500000000000000;
LABEL_9:

    uint64_t v24 = a7(a1, a2, a3, a4, v11, v18, 21333, 0xE200000000000000, a5, a6);
    goto LABEL_10;
  }
  uint64_t v27 = a4;
  id v14 = objc_msgSend(v12, sel_stocksLanguageCode);
  if (v14)
  {
    uint64_t v15 = v14;
    uint64_t v16 = a7;
    uint64_t v11 = sub_1AFFCAE98();
    unint64_t v18 = v17;
  }
  else
  {
    uint64_t v16 = a7;
    unint64_t v18 = 0xE500000000000000;
  }
  id v19 = objc_msgSend(v13, sel_stocksCountryCode);
  if (!v19)
  {
    a7 = v16;
    a4 = v27;
    goto LABEL_9;
  }
  uint64_t v20 = v19;
  uint64_t v21 = sub_1AFFCAE98();
  unint64_t v23 = v22;

  uint64_t v24 = v16(a1, a2, a3, v27, v11, v18, v21, v23, a5, a6);
LABEL_10:
  uint64_t v25 = v24;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v25;
}

void sub_1AFEA28A8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1AFFC98F8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v8 = &v16[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1((void *)(v2 + qword_1E9AFBE60), *(void *)(v2 + qword_1E9AFBE60 + 24));
  sub_1AFEA31C8();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AFFD05F0;
  *(void *)(inited + 32) = 0x72656B636974;
  *(void *)(inited + 40) = 0xE600000000000000;
  uint64_t v10 = *(void *)(v2 + qword_1E9AFBE58 + 8);
  *(void *)(inited + 48) = *(void *)(v2 + qword_1E9AFBE58);
  *(void *)(inited + 56) = v10;
  sub_1AFFC8E38();
  unint64_t v11 = sub_1AFDF9B10(inited);
  uint64_t v12 = v2 + qword_1E9AFBE68;
  sub_1AFEA3220();
  sub_1AFFC98E8();
  uint64_t v13 = (void *)sub_1AFEA2734(0, 0xD000000000000015, 0x80000001AFFF8470, v11, (uint64_t)v8, v12, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, uint64_t))sub_1AFFB663C);
  swift_bridgeObjectRelease();
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = a2;
  id v15 = v13;
  sub_1AFFC8E48();
  sub_1AFFC9F18();

  objc_msgSend(v15, sel_start);
}

void sub_1AFEA2ABC(uint64_t a1, void (*a2)(id, uint64_t))
{
  uint64_t v2 = a2;
  uint64_t v3 = *(void *)(a1 + 8);
  if (*(unsigned char *)(a1 + 32))
  {
    uint64_t v5 = *(void *)(a1 + 16);
    uint64_t v4 = *(void *)(a1 + 24);
    id v6 = *(id *)a1;
    id v7 = *(id *)a1;
    v2(v6, 1);
    sub_1AFD3AC84(v6, v3, v5, v4, 1);
    return;
  }
  uint64_t v48 = MEMORY[0x1E4FBC870];
  uint64_t v41 = *(void *)(v3 + 16);
  if (v41)
  {
    uint64_t v40 = v3 + 32;
    sub_1AFFC8E38();
    unint64_t v8 = 0;
    uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v39 = v3;
    while (1)
    {
      if (v8 >= *(void *)(v3 + 16))
      {
        __break(1u);
        return;
      }
      uint64_t v44 = v9;
      uint64_t v10 = (uint64_t *)(v40 + 80 * v8);
      uint64_t v11 = *v10;
      uint64_t v12 = v10[1];
      uint64_t v13 = v10[2];
      uint64_t v14 = v10[3];
      uint64_t v15 = v10[5];
      uint64_t v16 = v10[9];
      uint64_t v17 = v48;
      uint64_t v43 = v10[4];
      uint64_t v42 = v10[8];
      if (!*(void *)(v48 + 16)) {
        break;
      }
      uint64_t v38 = *v10;
      sub_1AFFCBDF8();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      swift_bridgeObjectRetain_n();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFCAF68();
      uint64_t v18 = sub_1AFFCBE38();
      uint64_t v19 = -1 << *(unsigned char *)(v17 + 32);
      unint64_t v20 = v18 & ~v19;
      if (((*(void *)(v17 + 56 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
        goto LABEL_24;
      }
      uint64_t v21 = (void *)(*(void *)(v17 + 48) + 16 * v20);
      if (*v21 != v13 || v21[1] != v14)
      {
        uint64_t v36 = *(void *)(v17 + 48);
        uint64_t v37 = v17 + 56;
        if ((sub_1AFFCBCE8() & 1) == 0)
        {
          unint64_t v23 = (v20 + 1) & ~v19;
          if (((*(void *)(v37 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0)
          {
LABEL_24:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v11 = v38;
LABEL_26:
            sub_1AFFC8E38();
            sub_1AFE22314((uint64_t *)v46, v13, v14);
            swift_bridgeObjectRelease();
            sub_1AFFC8E38();
            sub_1AFFC8E38();
            sub_1AFFC8E38();
            sub_1AFFC8E38();
            sub_1AFF39F88(&v45);
            swift_bridgeObjectRelease();
            sub_1AFFC8E38();
            sub_1AFD789F8(v13, v14, v11, v12, v43, v15, &v45, v42, (uint64_t)v46, v16, 0, 0, 0, 0, 0, 0);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v9 = v44;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v9 = sub_1AFD35574(0, v44[2] + 1, 1, v44);
            }
            uint64_t v3 = v39;
            unint64_t v27 = v9[2];
            unint64_t v26 = v9[3];
            if (v27 >= v26 >> 1) {
              uint64_t v9 = sub_1AFD35574((void *)(v26 > 1), v27 + 1, 1, v9);
            }
            void v9[2] = v27 + 1;
            BOOL v28 = &v9[17 * v27];
            *((_OWORD *)v28 + 2) = v46[0];
            long long v29 = v46[1];
            long long v30 = v46[2];
            long long v31 = v46[4];
            *((_OWORD *)v28 + 5) = v46[3];
            *((_OWORD *)v28 + 6) = v31;
            *((_OWORD *)v28 + 3) = v29;
            *((_OWORD *)v28 + 4) = v30;
            long long v32 = v46[5];
            long long v33 = v46[6];
            long long v34 = v46[7];
            v28[20] = v47;
            *((_OWORD *)v28 + 8) = v33;
            *((_OWORD *)v28 + 9) = v34;
            *((_OWORD *)v28 + 7) = v32;
            goto LABEL_8;
          }
          while (1)
          {
            uint64_t v24 = (void *)(v36 + 16 * v23);
            BOOL v25 = *v24 == v13 && v24[1] == v14;
            if (v25 || (sub_1AFFCBCE8() & 1) != 0) {
              break;
            }
            unint64_t v23 = (v23 + 1) & ~v19;
            if (((*(void *)(v37 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0) {
              goto LABEL_24;
            }
          }
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v9 = v44;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v3 = v39;
LABEL_8:
      if (++v8 == v41)
      {
        swift_bridgeObjectRelease();
        uint64_t v2 = a2;
        goto LABEL_33;
      }
    }
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    goto LABEL_26;
  }
  uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
LABEL_33:
  swift_bridgeObjectRelease();
  v2(v9, 0);

  swift_bridgeObjectRelease();
}

void sub_1AFEA2FA8()
{
}

uint64_t sub_1AFEA2FD8()
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + qword_1E9AFBE60);
  uint64_t v1 = v0 + qword_1E9AFBE68;
  uint64_t v2 = sub_1AFFC9E18();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(v1, v2);
}

uint64_t sub_1AFEA3068(uint64_t a1)
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + qword_1E9AFBE60);
  uint64_t v2 = a1 + qword_1E9AFBE68;
  uint64_t v3 = sub_1AFFC9E18();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

uint64_t sub_1AFEA30FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  sub_1AFFC8E48();
  sub_1AFEA28A8((uint64_t)sub_1AFEA31BC, v4);

  return swift_release();
}

uint64_t sub_1AFEA317C()
{
  return type metadata accessor for YahooSearchOperation();
}

uint64_t sub_1AFEA3184()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1AFEA31BC(uint64_t a1, char a2)
{
  return sub_1AFF47E44(a1, a2 & 1, *(uint64_t (**)(uint64_t *))(v2 + 16));
}

void sub_1AFEA31C8()
{
  if (!qword_1EB81A0E8)
  {
    sub_1AFD306F8();
    unint64_t v0 = sub_1AFFCBC98();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB81A0E8);
    }
  }
}

unint64_t sub_1AFEA3220()
{
  unint64_t result = qword_1E9AFBE80;
  if (!qword_1E9AFBE80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBE80);
  }
  return result;
}

void sub_1AFEA3274(uint64_t a1)
{
  sub_1AFEA2ABC(a1, *(void (**)(id, uint64_t))(v1 + 16));
}

uint64_t sub_1AFEA3280(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v11 = MEMORY[0x1E4FBC860];
    sub_1AFD9DA10(0, v1, 0);
    uint64_t v2 = v11;
    uint64_t v4 = (uint64_t *)(a1 + 56);
    do
    {
      uint64_t v6 = *(v4 - 1);
      uint64_t v5 = *v4;
      unint64_t v8 = *(void *)(v11 + 16);
      unint64_t v7 = *(void *)(v11 + 24);
      sub_1AFFC8E38();
      if (v8 >= v7 >> 1) {
        sub_1AFD9DA10(v7 > 1, v8 + 1, 1);
      }
      *(void *)(v11 + 16) = v8 + 1;
      uint64_t v9 = v11 + 16 * v8;
      *(void *)(v9 + 32) = v6;
      *(void *)(v9 + 40) = v5;
      v4 += 17;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1AFEA3358()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 168);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for NewsStockFeedService()
{
  return self;
}

uint64_t sub_1AFEA33DC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v8 = v4[11];
  __swift_project_boxed_opaque_existential_1(v4 + 7, v4[10]);
  sub_1AFEA3280(a1);
  (*(void (**)(void))(v8 + 8))();
  swift_bridgeObjectRelease();
  uint64_t v9 = v4[13];
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v9 + 24))(ObjectType, v9);
  uint64_t v11 = (void *)sub_1AFFCA5E8();
  sub_1AFFCA5D8();
  swift_release();
  swift_release();

  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a3;
  *(unsigned char *)(v12 + 32) = a4 & 1;
  *(void *)(v12 + 40) = v4;
  sub_1AFFC8E38();
  sub_1AFFC8E48();
  uint64_t v13 = (void *)sub_1AFFCA5E8();
  sub_1AFE70B9C();
  uint64_t v14 = sub_1AFFCA688();
  swift_release();
  swift_release();

  return v14;
}

uint64_t sub_1AFEA3590(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v36 = v1;
  uint64_t v39 = v3;
  uint64_t v40 = v2;
  char v38 = v4;
  uint64_t v37 = v5;
  uint64_t v8 = *v6;
  uint64_t v7 = v6[1];
  uint64_t v10 = v6[2];
  uint64_t v9 = v6[3];
  uint64_t v12 = v6[4];
  uint64_t v11 = (void *)v6[5];
  uint64_t v13 = qword_1EB818500;
  sub_1AFFC8E38();
  uint64_t v14 = v7;
  sub_1AFFC8E38();
  uint64_t v15 = v10;
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  uint64_t v42 = v12;
  sub_1AFFC8E38();
  id v16 = v11;
  if (v13 != -1) {
    goto LABEL_10;
  }
  while (1)
  {
    uint64_t v17 = sub_1AFFCA8A8();
    __swift_project_value_buffer(v17, (uint64_t)qword_1EB818578);
    swift_bridgeObjectRetain_n();
    uint64_t v18 = sub_1AFFCA888();
    os_log_type_t v19 = sub_1AFFCB478();
    if (os_log_type_enabled(v18, v19))
    {
      id v34 = v16;
      unint64_t v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v35 = v14;
      uint64_t v33 = swift_slowAlloc();
      v43[0] = v33;
      *(_DWORD *)unint64_t v20 = 136446210;
      sub_1AFEA6864(0, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
      sub_1AFFC8E38();
      uint64_t v21 = sub_1AFFCAC98();
      uint64_t v22 = v15;
      unint64_t v24 = v23;
      swift_bridgeObjectRelease();
      uint64_t v25 = v21;
      id v16 = v34;
      v43[538] = sub_1AFD36BA8(v25, v24, v43);
      sub_1AFFCB688();
      swift_bridgeObjectRelease_n();
      uint64_t v15 = v22;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AFD01000, v18, v19, "Fetching headlines for feed ids %{public}s", v20, 0xCu);
      swift_arrayDestroy();
      uint64_t v14 = v35;
      MEMORY[0x1B3E8F0D0](v33, -1, -1);
      MEMORY[0x1B3E8F0D0](v20, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_1AFFC8E38();
    sub_1AFEA61A4(MEMORY[0x1E4FBC868], v8, v37);
    swift_bridgeObjectRelease();
    uint64_t v26 = swift_bridgeObjectRelease();
    if (v38) {
      break;
    }
    uint64_t v8 = (uint64_t)v39;
    if ((v36 & 0x8000000000000000) == 0) {
      goto LABEL_7;
    }
LABEL_9:
    sub_1AFFCB998();
    __break(1u);
LABEL_10:
    swift_once();
  }
  uint64_t v8 = (uint64_t)v39;
  uint64_t v31 = v39[17];
  uint64_t v32 = v39[18];
  __swift_project_boxed_opaque_existential_1(v39 + 14, v31);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v32 + 8))(v43, v31, v32);
  uint64_t v26 = sub_1AFD55D10((uint64_t)v43);
  if (v43[8] < 0) {
    goto LABEL_9;
  }
LABEL_7:
  MEMORY[0x1F4188790](v26);
  sub_1AFEA6864(0, &qword_1EB816AB8, (uint64_t)&type metadata for StockNewsFeed, MEMORY[0x1E4FBB320]);
  sub_1AFFCA7C8();
  swift_bridgeObjectRelease();
  unint64_t v27 = (void *)swift_allocObject();
  void v27[2] = v40;
  void v27[3] = v14;
  v27[4] = v15;
  void v27[5] = v9;
  v27[6] = v42;
  v27[7] = v16;
  sub_1AFFC8E48();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  id v41 = v16;
  BOOL v28 = (void *)sub_1AFFCA5E8();
  sub_1AFE70B9C();
  uint64_t v29 = sub_1AFFCA668();
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v29;
}

uint64_t sub_1AFEA3A84(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v2 = v1;
  uint64_t v22 = v3;
  uint64_t v23 = v4;
  uint64_t v6 = v5;
  uint64_t v7 = sub_1AFFC98F8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v20 - v12;
  uint64_t v14 = v6[5];
  uint64_t v21 = v6[6];
  v20[1] = __swift_project_boxed_opaque_existential_1(v6 + 2, v14);
  sub_1AFFC98E8();
  uint64_t v15 = v2[17];
  uint64_t v16 = v2[18];
  __swift_project_boxed_opaque_existential_1(v2 + 14, v15);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v16 + 8))(v24, v15, v16);
  sub_1AFD55D10((uint64_t)v24);
  sub_1AFFC9828();
  uint64_t v17 = *(void (**)(char *, uint64_t))(v8 + 8);
  v17(v10, v7);
  uint64_t v18 = sub_1AFE0A578(v22, v23, (uint64_t)v13, v14, v21);
  v17(v13, v7);
  return v18;
}

uint64_t sub_1AFEA3C48(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v80 = v1;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = *v6;
  uint64_t v8 = (uint64_t)(v4 + 14);
  uint64_t v9 = v4[17];
  uint64_t v10 = v4[18];
  __swift_project_boxed_opaque_existential_1(v4 + 14, v9);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v10 + 8))(v79, v9, v10);
  sub_1AFEA64C4();
  long long v11 = *(_OWORD *)(v3 + 16);
  long long v57 = *(_OWORD *)v3;
  long long v58 = v11;
  *(void *)&long long v59 = *(void *)(v3 + 32);
  uint64_t v12 = v5[19];
  swift_getObjectType();
  sub_1AFEA6504(v3);
  swift_unknownObjectRetain();
  id v13 = sub_1AFF04C14(&v57, v12);
  uint64_t v14 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1AFEA6864(0, &qword_1EB818380, (uint64_t)&type metadata for NewsFeedFilterOptions.Option, MEMORY[0x1E4FBBE00]);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1AFFD56D0;
  uint64_t v16 = v79[46];
  *(void *)(v15 + 32) = v79[45];
  *(void *)(v15 + 40) = v16;
  *(unsigned char *)(v15 + 89) = 3;
  sub_1AFEA6864(0, &qword_1EB818370, (uint64_t)&type metadata for HeadlineCondition, v14);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1AFFD0610;
  *(void *)(v17 + 32) = 4;
  *(_OWORD *)(v17 + 40) = 0u;
  *(_OWORD *)(v17 + 56) = 0u;
  *(void *)(v17 + 72) = 0;
  *(unsigned char *)(v17 + 80) = 9;
  *(void *)(v17 + 88) = v79[47];
  *(unsigned char *)(v17 + 136) = 5;
  *(void *)(v15 + 96) = v17;
  *(unsigned char *)(v15 + 153) = 5;
  *(void *)(v15 + 160) = 3;
  *(_OWORD *)(v15 + 168) = 0u;
  *(_OWORD *)(v15 + 184) = 0u;
  *(void *)(v15 + 200) = 0;
  *(unsigned char *)(v15 + 208) = 9;
  *(unsigned char *)(v15 + 217) = 4;
  *(_OWORD *)(v15 + 240) = 0u;
  *(_OWORD *)(v15 + 256) = 0u;
  *(_OWORD *)(v15 + 224) = 0u;
  *(unsigned char *)(v15 + 272) = 9;
  *(unsigned char *)(v15 + 281) = 4;
  *(void *)(v15 + 288) = v13;
  sub_1AFD2CEB0(v8, v15 + 296);
  *(unsigned char *)(v15 + 336) = 0;
  *(unsigned char *)(v15 + 345) = 4;
  uint64_t v69 = *(void *)(v3 + 8);
  *(void *)(v15 + 352) = v69;
  *(unsigned char *)(v15 + 400) = 3;
  uint64_t v18 = MEMORY[0x1E4FBC860];
  *(unsigned char *)(v15 + 409) = 4;
  *(void *)(v15 + 416) = v18;
  *(unsigned char *)(v15 + 473) = 0;
  *(void *)(v15 + 480) = v18;
  *(unsigned char *)(v15 + 537) = 1;
  id v19 = v13;
  sub_1AFDF3A80((uint64_t)&v69);
  sub_1AFD55D10((uint64_t)v79);
  unint64_t v20 = sub_1AFEA6564(v7, v15, 1);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v21 = v20[2];
  if (v21)
  {
    sub_1AFFC8E38();
    long long v22 = *((_OWORD *)v20 + 9);
    long long v63 = *((_OWORD *)v20 + 8);
    long long v64 = v22;
    long long v23 = *((_OWORD *)v20 + 11);
    long long v65 = *((_OWORD *)v20 + 10);
    long long v66 = v23;
    long long v24 = *((_OWORD *)v20 + 5);
    long long v59 = *((_OWORD *)v20 + 4);
    long long v60 = v24;
    long long v25 = *((_OWORD *)v20 + 7);
    long long v61 = *((_OWORD *)v20 + 6);
    long long v62 = v25;
    long long v26 = *((_OWORD *)v20 + 3);
    uint64_t v56 = v20;
    long long v57 = *((_OWORD *)v20 + 2);
    long long v58 = v26;
    uint64_t v80 = v21 - 1;
    unint64_t v27 = (void *)MEMORY[0x1E4FBC868];
    for (uint64_t i = 24; ; i += 20)
    {
      sub_1AFDF97C0((uint64_t)&v58 + 8, (uint64_t)v67);
      long long v76 = v67[6];
      long long v77 = v67[7];
      uint64_t v78 = v68;
      long long v72 = v67[2];
      long long v73 = v67[3];
      long long v74 = v67[4];
      long long v75 = v67[5];
      long long v70 = v67[0];
      long long v71 = v67[1];
      uint64_t v29 = v57;
      sub_1AFD762B8((uint64_t)&v57);
      sub_1AFD76370((uint64_t)&v58 + 8);
      sub_1AFFC8E38();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v32 = sub_1AFD79E90((unint64_t *)&v70);
      uint64_t v33 = v27[2];
      BOOL v34 = (v31 & 1) == 0;
      uint64_t v35 = v33 + v34;
      if (__OFADD__(v33, v34)) {
        break;
      }
      char v36 = v31;
      if (v27[3] >= v35)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_1AFEB988C();
        }
      }
      else
      {
        sub_1AFEB4890(v35, isUniquelyReferenced_nonNull_native);
        unint64_t v37 = sub_1AFD79E90((unint64_t *)&v70);
        if ((v36 & 1) != (v38 & 1)) {
          goto LABEL_23;
        }
        unint64_t v32 = v37;
      }
      swift_bridgeObjectRelease();
      if (v36)
      {
        sub_1AFFC8E38();
      }
      else
      {
        v27[(v32 >> 6) + 8] |= 1 << v32;
        uint64_t v39 = v27[6] + 136 * v32;
        long long v40 = v77;
        *(_OWORD *)(v39 + 96) = v76;
        *(_OWORD *)(v39 + 112) = v40;
        *(void *)(v39 + 128) = v78;
        long long v41 = v73;
        *(_OWORD *)(v39 + 32) = v72;
        *(_OWORD *)(v39 + 48) = v41;
        long long v42 = v75;
        *(_OWORD *)(v39 + 64) = v74;
        *(_OWORD *)(v39 + 80) = v42;
        long long v43 = v71;
        *(_OWORD *)uint64_t v39 = v70;
        *(_OWORD *)(v39 + 16) = v43;
        *(void *)(v27[7] + 8 * v32) = MEMORY[0x1E4FBC860];
        uint64_t v44 = v27[2];
        uint64_t v45 = v44 + 1;
        BOOL v46 = __OFADD__(v44, 1);
        sub_1AFFC8E38();
        if (v46) {
          goto LABEL_22;
        }
        void v27[2] = v45;
        sub_1AFD76370((uint64_t)v67);
      }
      swift_bridgeObjectRelease();
      sub_1AFF0F93C(v29);
      sub_1AFD76408((uint64_t)&v58 + 8);
      sub_1AFE11E24((uint64_t)&v57);
      if (!v80)
      {
        swift_bridgeObjectRelease();
        goto LABEL_20;
      }
      long long v47 = *(_OWORD *)&v56[i + 2];
      long long v57 = *(_OWORD *)&v56[i];
      long long v58 = v47;
      long long v48 = *(_OWORD *)&v56[i + 4];
      long long v49 = *(_OWORD *)&v56[i + 6];
      long long v50 = *(_OWORD *)&v56[i + 10];
      long long v61 = *(_OWORD *)&v56[i + 8];
      long long v62 = v50;
      long long v59 = v48;
      long long v60 = v49;
      long long v51 = *(_OWORD *)&v56[i + 12];
      long long v52 = *(_OWORD *)&v56[i + 14];
      long long v53 = *(_OWORD *)&v56[i + 18];
      long long v65 = *(_OWORD *)&v56[i + 16];
      long long v66 = v53;
      long long v63 = v51;
      long long v64 = v52;
      --v80;
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    uint64_t result = sub_1AFFCBD68();
    __break(1u);
  }
  else
  {
    unint64_t v27 = (void *)MEMORY[0x1E4FBC868];
LABEL_20:
    swift_bridgeObjectRelease();
    *(void *)&long long v57 = v27;
    sub_1AFE74610(0, &qword_1EB811438, (void (*)(uint64_t))sub_1AFE70B9C);
    swift_allocObject();
    uint64_t v54 = sub_1AFFCA6F8();

    return v54;
  }
  return result;
}

uint64_t sub_1AFEA41C4@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v46 = a4;
  long long v7 = a1[7];
  v42[5] = a1[6];
  v42[6] = v7;
  long long v8 = a1[9];
  v42[7] = a1[8];
  v42[8] = v8;
  long long v9 = a1[3];
  v42[1] = a1[2];
  void v42[2] = v9;
  long long v10 = a1[5];
  v42[3] = a1[4];
  v42[4] = v10;
  long long v11 = a1[1];
  long long v41 = *a1;
  v42[0] = v11;
  sub_1AFDF97C0((uint64_t)v42 + 8, (uint64_t)v43);
  uint64_t v39 = v41;
  sub_1AFD76370((uint64_t)v42 + 8);
  sub_1AFFC8E38();
  sub_1AFE0AA5C(&v39);
  if (v4)
  {
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    uint64_t v12 = *((void *)&v41 + 1);
    uint64_t v13 = *(void *)&v42[0];
    uint64_t v14 = v39;
    v25[0] = v39;
    v25[1] = *((void *)&v41 + 1);
    void v25[2] = *(void *)&v42[0];
    sub_1AFDF97C0((uint64_t)v42 + 8, (uint64_t)&v26);
    *(void *)&v40[0] = a2;
    sub_1AFD76370((uint64_t)v42 + 8);
    sub_1AFFC8E38();
    uint64_t v15 = sub_1AFE06F74(v14);
    sub_1AFD76370((uint64_t)v42 + 8);
    sub_1AFFC8E38();
    sub_1AFE11E24((uint64_t)v25);
    *(void *)&long long v27 = v15;
    *((void *)&v27 + 1) = v12;
    *(void *)&v28[0] = v13;
    sub_1AFDF97C0((uint64_t)v42 + 8, (uint64_t)v28 + 8);
    long long v35 = v28[5];
    long long v36 = v28[6];
    long long v37 = v28[7];
    long long v38 = v28[8];
    long long v31 = v28[1];
    long long v32 = v28[2];
    long long v33 = v28[3];
    long long v34 = v28[4];
    long long v29 = v27;
    long long v30 = v28[0];
    LOBYTE(v24[0]) = a3;
    StockNewsFeed.sorted(_:)((unsigned __int8 *)v24, (uint64_t *)v40);
    sub_1AFE11E24((uint64_t)&v27);
    long long v35 = v40[6];
    long long v36 = v40[7];
    long long v37 = v40[8];
    long long v38 = v40[9];
    long long v31 = v40[2];
    long long v32 = v40[3];
    long long v33 = v40[4];
    long long v34 = v40[5];
    long long v29 = v40[0];
    long long v30 = v40[1];
    if (qword_1EB818500 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_1AFFCA8A8();
    __swift_project_value_buffer(v16, (uint64_t)qword_1EB818578);
    sub_1AFD76370((uint64_t)v42 + 8);
    sub_1AFD762B8((uint64_t)&v41);
    sub_1AFD762B8((uint64_t)&v29);
    uint64_t v17 = sub_1AFFCA888();
    os_log_type_t v18 = sub_1AFFCB478();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 134218498;
      *(void *)&v24[0] = v23;
      sub_1AFFCB688();
      sub_1AFE11E24((uint64_t)&v41);
      *(_WORD *)(v19 + 12) = 2048;
      sub_1AFFCB688();
      sub_1AFE11E24((uint64_t)&v29);
      *(_WORD *)(v19 + 22) = 2082;
      uint64_t v21 = v44;
      unint64_t v20 = v45;
      sub_1AFFC8E38();
      sub_1AFD36BA8(v21, v20, (uint64_t *)v24);
      sub_1AFFCB688();
      swift_bridgeObjectRelease();
      sub_1AFD76408((uint64_t)v42 + 8);
      sub_1AFD76408((uint64_t)v42 + 8);
      _os_log_impl(&dword_1AFD01000, v17, v18, "stock feed service pared %ld headlines down to %ld for %{public}s", (uint8_t *)v19, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1B3E8F0D0](v23, -1, -1);
      MEMORY[0x1B3E8F0D0](v19, -1, -1);
    }
    else
    {
      sub_1AFE11E24((uint64_t)&v41);
      sub_1AFE11E24((uint64_t)&v29);
      sub_1AFD76408((uint64_t)v42 + 8);
      sub_1AFD76408((uint64_t)v42 + 8);
    }

    v24[6] = v35;
    v24[7] = v36;
    v24[8] = v37;
    v24[9] = v38;
    v24[2] = v31;
    v24[3] = v32;
    v24[4] = v33;
    v24[5] = v34;
    v24[0] = v29;
    v24[1] = v30;
    nullsub_1(v24);
    return sub_1AFEA67DC((uint64_t)v24, v46);
  }
  return result;
}

uint64_t sub_1AFEA45A4(long long *a1, uint64_t a2, uint64_t a3, char a4)
{
  long long v7 = a1[7];
  long long v35 = a1[6];
  long long v36 = v7;
  uint64_t v37 = *((void *)a1 + 16);
  long long v8 = a1[3];
  long long v31 = a1[2];
  long long v32 = v8;
  long long v9 = a1[5];
  long long v33 = a1[4];
  long long v34 = v9;
  long long v10 = a1[1];
  long long v29 = *a1;
  long long v30 = v10;
  uint64_t v11 = v4[10];
  uint64_t v12 = v4[11];
  __swift_project_boxed_opaque_existential_1(v4 + 7, v11);
  sub_1AFEA6864(0, (unint64_t *)&qword_1EB81A0E0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1AFFD05F0;
  uint64_t v14 = *((void *)&v30 + 1);
  *(void *)(v13 + 32) = v30;
  *(void *)(v13 + 40) = v14;
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 8);
  sub_1AFFC8E38();
  v15(v13, 1, v11, v12);
  swift_bridgeObjectRelease();
  uint64_t v16 = v4[13];
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v16 + 24))(ObjectType, v16);
  os_log_type_t v18 = (void *)sub_1AFFCA5E8();
  sub_1AFFCA5D8();
  swift_release();
  swift_release();

  uint64_t v19 = swift_allocObject();
  long long v20 = a1[4];
  *(_OWORD *)(v19 + 104) = a1[5];
  long long v21 = a1[7];
  *(_OWORD *)(v19 + 120) = a1[6];
  *(_OWORD *)(v19 + 136) = v21;
  long long v22 = *a1;
  *(_OWORD *)(v19 + 40) = a1[1];
  long long v23 = a1[3];
  *(_OWORD *)(v19 + 56) = a1[2];
  *(_OWORD *)(v19 + 72) = v23;
  *(_OWORD *)(v19 + 88) = v20;
  *(void *)(v19 + 16) = v4;
  uint64_t v24 = *((void *)a1 + 16);
  *(_OWORD *)(v19 + 24) = v22;
  *(void *)(v19 + 152) = v24;
  *(void *)(v19 + 160) = a3;
  *(unsigned char *)(v19 + 168) = a4 & 1;
  sub_1AFFC8E48();
  sub_1AFD76370((uint64_t)&v29);
  long long v25 = (void *)sub_1AFFCA5E8();
  sub_1AFD2D58C();
  uint64_t v26 = sub_1AFFCA688();
  swift_release();
  swift_release();

  return v26;
}

uint64_t sub_1AFEA47FC(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  char v42 = v1;
  uint64_t v43 = v2;
  uint64_t v44 = v3;
  uint64_t v5 = v4;
  long long v47 = v6;
  uint64_t v9 = *v7;
  uint64_t v8 = v7[1];
  uint64_t v10 = v7[2];
  uint64_t v11 = v7[3];
  uint64_t v13 = v7[4];
  uint64_t v12 = (void *)v7[5];
  uint64_t v14 = qword_1EB818500;
  sub_1AFFC8E38();
  uint64_t v15 = v8;
  sub_1AFFC8E38();
  uint64_t v50 = v10;
  sub_1AFFC8E38();
  uint64_t v49 = v11;
  sub_1AFFC8E38();
  uint64_t v48 = v13;
  sub_1AFFC8E38();
  id v45 = v12;
  if (v14 != -1) {
    goto LABEL_13;
  }
  while (1)
  {
    uint64_t v16 = sub_1AFFCA8A8();
    __swift_project_value_buffer(v16, (uint64_t)qword_1EB818578);
    swift_bridgeObjectRetain_n();
    uint64_t v17 = sub_1AFFCA888();
    os_log_type_t v18 = sub_1AFFCB478();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v40 = swift_slowAlloc();
      *(void *)&v51[0] = v40;
      *(_DWORD *)uint64_t v19 = 136446210;
      uint64_t v41 = v15;
      sub_1AFEA6864(0, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
      sub_1AFFC8E38();
      uint64_t v20 = sub_1AFFCAC98();
      unint64_t v22 = v21;
      swift_bridgeObjectRelease();
      uint64_t v23 = v20;
      uint64_t v15 = v41;
      uint64_t v57 = sub_1AFD36BA8(v23, v22, (uint64_t *)v51);
      sub_1AFFCB688();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AFD01000, v17, v18, "Fetching headlines for feed ids %{public}s", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1B3E8F0D0](v40, -1, -1);
      MEMORY[0x1B3E8F0D0](v19, -1, -1);
    }
    else
    {

      uint64_t v24 = swift_bridgeObjectRelease_n();
    }
    if (!*(void *)(v9 + 16)) {
      break;
    }
    if (v42)
    {
      uint64_t v38 = v47[17];
      uint64_t v39 = v47[18];
      __swift_project_boxed_opaque_existential_1(v47 + 14, v38);
      (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v39 + 8))(v51, v38, v39);
      uint64_t v24 = sub_1AFD55D10((uint64_t)v51);
      if ((v52 & 0x8000000000000000) == 0)
      {
LABEL_8:
        MEMORY[0x1F4188790](v24);
        sub_1AFEA6864(0, &qword_1EB816AB8, (uint64_t)&type metadata for StockNewsFeed, MEMORY[0x1E4FBB320]);
        sub_1AFFCA7C8();
        swift_bridgeObjectRelease();
        uint64_t v25 = swift_allocObject();
        long long v26 = *(_OWORD *)(v5 + 64);
        *(_OWORD *)(v25 + 104) = *(_OWORD *)(v5 + 80);
        long long v27 = *(_OWORD *)(v5 + 112);
        *(_OWORD *)(v25 + 120) = *(_OWORD *)(v5 + 96);
        *(_OWORD *)(v25 + 136) = v27;
        long long v28 = *(_OWORD *)v5;
        *(_OWORD *)(v25 + 40) = *(_OWORD *)(v5 + 16);
        long long v29 = *(_OWORD *)(v5 + 48);
        *(_OWORD *)(v25 + 56) = *(_OWORD *)(v5 + 32);
        *(_OWORD *)(v25 + 72) = v29;
        *(_OWORD *)(v25 + 88) = v26;
        *(void *)(v25 + 16) = v47;
        uint64_t v30 = *(void *)(v5 + 128);
        *(_OWORD *)(v25 + 24) = v28;
        *(void *)(v25 + 152) = v30;
        *(void *)(v25 + 160) = v43;
        *(void *)(v25 + 168) = v15;
        *(void *)(v25 + 176) = v50;
        *(void *)(v25 + 184) = v49;
        *(void *)(v25 + 192) = v48;
        *(void *)(v25 + 200) = v45;
        sub_1AFFC8E48();
        sub_1AFD76370(v5);
        sub_1AFFC8E48();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        id v46 = v45;
        long long v31 = (void *)sub_1AFFCA5E8();
        sub_1AFD2D58C();
        uint64_t v32 = sub_1AFFCA668();
        swift_release();
        swift_release();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
    }
    else if ((v44 & 0x8000000000000000) == 0)
    {
      goto LABEL_8;
    }
    sub_1AFFCB998();
    __break(1u);
LABEL_13:
    swift_once();
  }
  swift_bridgeObjectRelease();
  long long v33 = *(_OWORD *)(v5 + 112);
  long long v54 = *(_OWORD *)(v5 + 96);
  long long v55 = v33;
  uint64_t v56 = *(void *)(v5 + 128);
  long long v34 = *(_OWORD *)(v5 + 48);
  v51[2] = *(_OWORD *)(v5 + 32);
  v51[3] = v34;
  long long v35 = *(_OWORD *)(v5 + 80);
  long long v52 = *(_OWORD *)(v5 + 64);
  long long v53 = v35;
  long long v36 = *(_OWORD *)(v5 + 16);
  v51[0] = *(_OWORD *)v5;
  v51[1] = v36;
  uint64_t v32 = sub_1AFEA4D68(v51);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_10:
  swift_bridgeObjectRelease();
  return v32;
}

uint64_t sub_1AFEA4D68(long long *a1)
{
  long long v2 = a1[6];
  long long v32 = a1[7];
  uint64_t v33 = *((void *)a1 + 16);
  long long v3 = a1[3];
  long long v27 = a1[2];
  long long v28 = v3;
  long long v4 = a1[4];
  long long v30 = a1[5];
  long long v31 = v2;
  long long v29 = v4;
  long long v5 = a1[1];
  long long v25 = *a1;
  long long v26 = v5;
  uint64_t v6 = v1[24];
  uint64_t v7 = v1[25];
  __swift_project_boxed_opaque_existential_1(v1 + 21, v6);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v7 + 32))(v6, v7))
  {
    if (qword_1EB818500 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_1AFFCA8A8();
    __swift_project_value_buffer(v8, (uint64_t)qword_1EB818578);
    sub_1AFD76370((uint64_t)&v25);
    uint64_t v9 = sub_1AFFCA888();
    os_log_type_t v10 = sub_1AFFCB478();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      uint64_t v23 = v12;
      *(_DWORD *)uint64_t v11 = 136446210;
      long long v13 = v26;
      sub_1AFFC8E38();
      sub_1AFD36BA8(v13, *((unint64_t *)&v13 + 1), &v23);
      sub_1AFFCB688();
      swift_bridgeObjectRelease();
      sub_1AFD76408((uint64_t)&v25);
      _os_log_impl(&dword_1AFD01000, v9, v10, "stock feed service checking for bilingual headlines for %{public}s", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1B3E8F0D0](v12, -1, -1);
      MEMORY[0x1B3E8F0D0](v11, -1, -1);
    }
    else
    {
      sub_1AFD76408((uint64_t)&v25);
    }

    MEMORY[0x1F4188790](v15);
    sub_1AFEA6A60();
    sub_1AFFCA7C8();
    uint64_t v16 = swift_allocObject();
    long long v17 = v32;
    *(_OWORD *)(v16 + 112) = v31;
    *(_OWORD *)(v16 + 128) = v17;
    *(void *)(v16 + 144) = v33;
    long long v18 = v28;
    *(_OWORD *)(v16 + 48) = v27;
    *(_OWORD *)(v16 + 64) = v18;
    long long v19 = v30;
    *(_OWORD *)(v16 + 80) = v29;
    *(_OWORD *)(v16 + 96) = v19;
    long long v20 = v26;
    *(_OWORD *)(v16 + 16) = v25;
    *(_OWORD *)(v16 + 32) = v20;
    sub_1AFD76370((uint64_t)&v25);
    unint64_t v21 = (void *)sub_1AFFCA5E8();
    sub_1AFD2D58C();
    uint64_t v14 = sub_1AFFCA688();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v23 = MEMORY[0x1E4FBC860];
    char v24 = 0;
    sub_1AFE74610(0, &qword_1EB817DB0, (void (*)(uint64_t))sub_1AFD2D58C);
    swift_allocObject();
    return sub_1AFFCA6F8();
  }
  return v14;
}

uint64_t sub_1AFEA50F8(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  long long v2 = v1;
  uint64_t v29 = v3;
  uint64_t v30 = v4;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  long long v9 = *(_OWORD *)(v5 + 112);
  long long v38 = *(_OWORD *)(v5 + 96);
  long long v39 = v9;
  uint64_t v40 = *(void *)(v5 + 128);
  long long v10 = *(_OWORD *)(v5 + 48);
  long long v34 = *(_OWORD *)(v5 + 32);
  long long v35 = v10;
  long long v11 = *(_OWORD *)(v5 + 80);
  long long v36 = *(_OWORD *)(v5 + 64);
  long long v37 = v11;
  long long v12 = *(_OWORD *)(v5 + 16);
  long long v32 = *(_OWORD *)v5;
  long long v33 = v12;
  uint64_t v13 = sub_1AFFC98F8();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  long long v19 = (char *)&v26 - v18;
  uint64_t v20 = v8[6];
  uint64_t v27 = v8[5];
  uint64_t v28 = v20;
  long long v26 = __swift_project_boxed_opaque_existential_1(v8 + 2, v27);
  v41[6] = v38;
  v41[7] = v39;
  uint64_t v42 = v40;
  v41[2] = v34;
  v41[3] = v35;
  v41[4] = v36;
  v41[5] = v37;
  v41[0] = v32;
  v41[1] = v33;
  nullsub_1(v41);
  sub_1AFDF97C0((uint64_t)v41, (uint64_t)v31);
  sub_1AFD76370(v6);
  sub_1AFFC98E8();
  uint64_t v22 = v2[17];
  uint64_t v21 = v2[18];
  __swift_project_boxed_opaque_existential_1(v2 + 14, v22);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v21 + 8))(v43, v22, v21);
  sub_1AFD55D10((uint64_t)v43);
  sub_1AFFC9828();
  uint64_t v23 = *(void (**)(char *, uint64_t))(v14 + 8);
  v23(v16, v13);
  uint64_t v24 = sub_1AFE0A280(v29, (uint64_t)v31, v30, (uint64_t)v19, v27, v28);
  v23(v19, v13);
  sub_1AFDF97C0((uint64_t)v31, (uint64_t)v44);
  sub_1AFD76408((uint64_t)v44);
  return v24;
}

uint64_t sub_1AFEA5344(uint64_t a1)
{
  void (*v17)(long long *__return_ptr, uint64_t, uint64_t);
  long long v18;
  uint64_t v19;
  id v20;
  uint64_t (*v21)(void, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  long long v41;
  long long v42;
  long long v43;
  long long v44;
  uint64_t v45;
  uint64_t result;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  void v53[3];
  uint64_t v54;
  void v55[3];
  uint64_t v56;
  uint64_t v57;
  void v58[3];
  uint64_t v59;
  uint64_t v60;
  long long v61;
  long long v62;
  uint64_t v63;
  long long v64[8];
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  long long v69;
  _OWORD v70[9];
  void v71[3];
  uint64_t v72;

  MEMORY[0x1F4188790](a1);
  uint64_t v6 = *(_OWORD **)v5;
  uint64_t v7 = *(void *)(*(void *)v5 + 16);
  if (!v7) {
    goto LABEL_10;
  }
  long long v8 = v6[4];
  v70[0] = v6[3];
  long long v9 = v6[5];
  long long v10 = v6[6];
  long long v11 = v6[8];
  v70[4] = v6[7];
  v70[3] = v10;
  v70[2] = v9;
  v70[1] = v8;
  long long v12 = v6[10];
  long long v13 = v6[9];
  v70[8] = v6[11];
  v70[7] = v12;
  v70[6] = v13;
  v70[5] = v11;
  uint64_t v69 = v6[2];
  if (!*(void *)(v69 + 16))
  {
LABEL_10:
    uint64_t v41 = *(_OWORD *)(v2 + 112);
    v64[6] = *(_OWORD *)(v2 + 96);
    v64[7] = v41;
    long long v65 = *(void *)(v2 + 128);
    uint64_t v42 = *(_OWORD *)(v2 + 48);
    v64[2] = *(_OWORD *)(v2 + 32);
    v64[3] = v42;
    uint64_t v43 = *(_OWORD *)(v2 + 80);
    v64[4] = *(_OWORD *)(v2 + 64);
    v64[5] = v43;
    uint64_t v44 = *(_OWORD *)(v2 + 16);
    v64[0] = *(_OWORD *)v2;
    v64[1] = v44;
    return sub_1AFEA4D68(v64);
  }
  uint64_t v14 = v3;
  uint64_t v50 = v2;
  long long v72 = v1;
  long long v47 = v4;
  uint64_t v48 = (uint64_t)(v3 + 14);
  uint64_t v16 = v3[17];
  uint64_t v15 = v3[18];
  __swift_project_boxed_opaque_existential_1(v3 + 14, v16);
  uint64_t v17 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v15 + 8);
  sub_1AFD762B8((uint64_t)&v69);
  v17(v64, v16, v15);
  sub_1AFEA64C4();
  uint64_t v18 = *(_OWORD *)(v47 + 16);
  long long v61 = *(_OWORD *)v47;
  long long v62 = v18;
  long long v63 = *(void *)(v47 + 32);
  long long v19 = v14[19];
  swift_getObjectType();
  sub_1AFEA6504(v47);
  swift_unknownObjectRetain();
  uint64_t v20 = sub_1AFF04C14(&v61, v19);
  uint64_t v21 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1AFEA6864(0, &qword_1EB818380, (uint64_t)&type metadata for NewsFeedFilterOptions.Option, MEMORY[0x1E4FBBE00]);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1AFFD56D0;
  uint64_t v23 = v67;
  *(void *)(v22 + 32) = v66;
  *(void *)(v22 + 40) = v23;
  *(unsigned char *)(v22 + 89) = 3;
  sub_1AFEA6864(0, &qword_1EB818370, (uint64_t)&type metadata for HeadlineCondition, v21);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1AFFD0610;
  *(void *)(v24 + 32) = 4;
  *(_OWORD *)(v24 + 40) = 0u;
  *(_OWORD *)(v24 + 56) = 0u;
  *(void *)(v24 + 72) = 0;
  *(unsigned char *)(v24 + 80) = 9;
  *(void *)(v24 + 88) = v68;
  *(unsigned char *)(v24 + 136) = 5;
  *(void *)(v22 + 96) = v24;
  *(unsigned char *)(v22 + 153) = 5;
  *(void *)(v22 + 160) = 3;
  *(_OWORD *)(v22 + 168) = 0u;
  *(_OWORD *)(v22 + 184) = 0u;
  *(void *)(v22 + 200) = 0;
  *(unsigned char *)(v22 + 208) = 9;
  *(unsigned char *)(v22 + 217) = 4;
  *(_OWORD *)(v22 + 240) = 0u;
  *(_OWORD *)(v22 + 256) = 0u;
  *(_OWORD *)(v22 + 224) = 0u;
  *(unsigned char *)(v22 + 272) = 9;
  *(unsigned char *)(v22 + 281) = 4;
  *(void *)(v22 + 288) = v20;
  sub_1AFD2CEB0(v48, v22 + 296);
  *(unsigned char *)(v22 + 336) = 0;
  *(unsigned char *)(v22 + 345) = 4;
  v71[0] = *(void *)(v47 + 8);
  *(void *)(v22 + 352) = v71[0];
  *(unsigned char *)(v22 + 400) = 3;
  long long v25 = MEMORY[0x1E4FBC860];
  *(unsigned char *)(v22 + 409) = 4;
  *(void *)(v22 + 416) = v25;
  *(unsigned char *)(v22 + 473) = 0;
  *(void *)(v22 + 480) = v25;
  *(unsigned char *)(v22 + 537) = 1;
  uint64_t v49 = v20;
  sub_1AFDF3A80((uint64_t)v71);
  sub_1AFD55D10((uint64_t)v64);
  sub_1AFFC8E38();
  long long v26 = 32;
  do
  {
    *(void *)&long long v61 = v25;
    sub_1AFFC8E38();
    uint64_t v27 = sub_1AFFC8E38();
    sub_1AFF0F93C(v27);
    swift_bridgeObjectRelease();
    long long v25 = v61;
    v26 += 160;
    --v7;
  }
  while (v7);
  swift_bridgeObjectRelease();
  uint64_t v28 = *((void *)&v69 + 1);
  uint64_t v29 = *(void *)&v70[0];
  sub_1AFFC8E38();
  sub_1AFD76370((uint64_t)v70 + 8);
  sub_1AFE11E24((uint64_t)&v69);
  *(void *)&long long v61 = v25;
  *((void *)&v61 + 1) = v28;
  *(void *)&long long v62 = v29;
  sub_1AFDF97C0((uint64_t)v70 + 8, (uint64_t)&v62 + 8);
  long long v60 = v25;
  sub_1AFFC8E38();
  uint64_t v30 = v72;
  sub_1AFE0AA5C(&v60);
  if (!v30)
  {
    long long v31 = v60;
    v58[0] = v60;
    v58[1] = v28;
    v58[2] = v29;
    sub_1AFDF97C0((uint64_t)v70 + 8, (uint64_t)&v59);
    v55[0] = v22;
    sub_1AFFC8E38();
    sub_1AFD76370((uint64_t)v70 + 8);
    long long v32 = sub_1AFE06F74(v31);
    sub_1AFFC8E38();
    sub_1AFD76370((uint64_t)v70 + 8);
    sub_1AFE11E24((uint64_t)v58);
    swift_bridgeObjectRelease();
    uint64_t v57 = v32;
    sub_1AFFC8E38();
    sub_1AFE0AA30(&v57);
    v53[0] = v32;
    v53[1] = v28;
    v53[2] = v29;
    sub_1AFDF97C0((uint64_t)v70 + 8, (uint64_t)&v54);
    long long v33 = v57;
    sub_1AFFC8E38();
    sub_1AFD76370((uint64_t)v70 + 8);
    sub_1AFE11E24((uint64_t)v53);
    v55[0] = v33;
    v55[1] = v28;
    v55[2] = v29;
    sub_1AFDF97C0((uint64_t)v70 + 8, (uint64_t)&v56);
    if (qword_1EB818500 != -1) {
      swift_once();
    }
    long long v34 = sub_1AFFCA8A8();
    __swift_project_value_buffer(v34, (uint64_t)qword_1EB818578);
    sub_1AFD762B8((uint64_t)v55);
    sub_1AFD76370(v50);
    sub_1AFD762B8((uint64_t)v55);
    sub_1AFD76370(v50);
    sub_1AFD762B8((uint64_t)&v61);
    long long v35 = sub_1AFFCA888();
    long long v36 = sub_1AFFCB478();
    if (os_log_type_enabled(v35, v36))
    {
      long long v37 = swift_slowAlloc();
      long long v72 = swift_slowAlloc();
      long long v51 = v72;
      *(_DWORD *)long long v37 = 134218498;
      sub_1AFE11E24((uint64_t)&v61);
      sub_1AFFCB688();
      sub_1AFE11E24((uint64_t)&v61);
      *(_WORD *)(v37 + 12) = 2048;
      sub_1AFE11E24((uint64_t)v55);
      sub_1AFFCB688();
      sub_1AFE11E24((uint64_t)v55);
      *(_WORD *)(v37 + 22) = 2082;
      long long v39 = *(void *)(v50 + 16);
      long long v38 = *(void *)(v50 + 24);
      sub_1AFFC8E38();
      sub_1AFD36BA8(v39, v38, &v51);
      sub_1AFFCB688();
      swift_bridgeObjectRelease();
      sub_1AFD76408(v50);
      sub_1AFD76408(v50);
      _os_log_impl(&dword_1AFD01000, v35, v36, "stock feed service pared %ld headlines down to %ld for %{public}s", (uint8_t *)v37, 0x20u);
      uint64_t v40 = v72;
      swift_arrayDestroy();
      MEMORY[0x1B3E8F0D0](v40, -1, -1);
      MEMORY[0x1B3E8F0D0](v37, -1, -1);
    }
    else
    {
      sub_1AFE11E24((uint64_t)v55);
      sub_1AFE11E24((uint64_t)&v61);
      sub_1AFE11E24((uint64_t)&v61);
      sub_1AFE11E24((uint64_t)v55);
      sub_1AFD76408(v50);
      sub_1AFD76408(v50);
    }

    long long v51 = v33;
    long long v52 = 0;
    sub_1AFE74610(0, &qword_1EB817DB0, (void (*)(uint64_t))sub_1AFD2D58C);
    swift_allocObject();
    sub_1AFFC8E38();
    id v45 = sub_1AFFCA6F8();

    sub_1AFE11E24((uint64_t)v55);
    return v45;
  }
  swift_release();
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1AFEA5A68(void *a1, uint64_t a2)
{
  uint64_t v4 = a1[10];
  uint64_t v5 = a1[11];
  __swift_project_boxed_opaque_existential_1(a1 + 7, v4);
  sub_1AFEA6864(0, (unint64_t *)&qword_1EB81A0E0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1AFFD05F0;
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(v6 + 32) = *(void *)(a2 + 16);
  *(void *)(v6 + 40) = v7;
  long long v8 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 8);
  sub_1AFFC8E38();
  v8(v6, 0, v4, v5);
  swift_bridgeObjectRelease();
  uint64_t v9 = a1[13];
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v9 + 24))(ObjectType, v9);
  long long v11 = (void *)sub_1AFFCA5E8();
  uint64_t v12 = sub_1AFFCA5D8();
  swift_release();
  swift_release();

  return v12;
}

uint64_t sub_1AFEA5BA0(uint64_t a1)
{
  if (*(void *)(*(void *)a1 + 16))
  {
    MEMORY[0x1F4188790](a1);
    sub_1AFEA6864(0, &qword_1EB816AB8, (uint64_t)&type metadata for StockNewsFeed, MEMORY[0x1E4FBB320]);
    sub_1AFFCA7C8();
    uint64_t v1 = (void *)sub_1AFFCA5E8();
    sub_1AFD2D58C();
    uint64_t v2 = sub_1AFFCA668();
    swift_release();
  }
  else
  {
    sub_1AFE74610(0, &qword_1EB817DB0, (void (*)(uint64_t))sub_1AFD2D58C);
    swift_allocObject();
    return sub_1AFFCA6F8();
  }
  return v2;
}

uint64_t sub_1AFEA5D00(uint64_t a1)
{
  void (*v18)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t result;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void v36[536];
  unsigned char v37[136];
  unsigned char v38[136];
  long long v39;
  long long v40;
  long long v41;
  long long v42;
  long long v43;
  long long v44;
  long long v45;
  long long v46;
  uint64_t v47;
  _OWORD v48[8];
  uint64_t v49;
  void v50[8];
  uint64_t v51;

  MEMORY[0x1F4188790](a1);
  uint64_t v2 = v1;
  long long v35 = v3;
  uint64_t v5 = v4;
  long long v6 = *(_OWORD *)(v1 + 112);
  id v45 = *(_OWORD *)(v1 + 96);
  id v46 = v6;
  long long v47 = *(void *)(v1 + 128);
  long long v7 = *(_OWORD *)(v1 + 48);
  uint64_t v41 = *(_OWORD *)(v1 + 32);
  uint64_t v42 = v7;
  long long v8 = *(_OWORD *)(v1 + 64);
  uint64_t v44 = *(_OWORD *)(v1 + 80);
  uint64_t v43 = v8;
  long long v9 = *(_OWORD *)v1;
  uint64_t v40 = *(_OWORD *)(v1 + 16);
  long long v39 = v9;
  uint64_t v10 = sub_1AFFC98F8();
  long long v33 = *(void *)(v10 - 8);
  long long v34 = v10;
  MEMORY[0x1F4188790](v10);
  long long v31 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  long long v32 = (char *)&v28 - v13;
  uint64_t v14 = v5[5];
  uint64_t v29 = v5[6];
  uint64_t v30 = v14;
  uint64_t v28 = __swift_project_boxed_opaque_existential_1(v5 + 2, v14);
  v48[6] = v45;
  v48[7] = v46;
  uint64_t v49 = v47;
  v48[2] = v41;
  v48[3] = v42;
  v48[5] = v44;
  v48[4] = v43;
  v48[1] = v40;
  v48[0] = v39;
  nullsub_1(v48);
  sub_1AFDF97C0((uint64_t)v48, (uint64_t)v38);
  uint64_t v15 = v5 + 14;
  uint64_t v16 = v5[17];
  uint64_t v17 = v5[18];
  __swift_project_boxed_opaque_existential_1(v5 + 14, v16);
  uint64_t v18 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v17 + 8);
  sub_1AFD76370(v2);
  v18(v50, v16, v17);
  sub_1AFD55D10((uint64_t)v50);
  long long v19 = v51;
  if (v51 < 0)
  {
    uint64_t result = sub_1AFFCB998();
    __break(1u);
  }
  else
  {
    uint64_t v20 = v31;
    sub_1AFFC98E8();
    uint64_t v21 = v5[17];
    uint64_t v22 = v5[18];
    __swift_project_boxed_opaque_existential_1(v15, v21);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v22 + 8))(v36, v21, v22);
    sub_1AFD55D10((uint64_t)v36);
    uint64_t v23 = (uint64_t)v32;
    sub_1AFFC9828();
    uint64_t v24 = v34;
    long long v25 = *(void (**)(char *, uint64_t))(v33 + 8);
    v25(v20, v34);
    long long v26 = sub_1AFE0A280(v35, (uint64_t)v38, v19, v23, v30, v29);
    v25((char *)v23, v24);
    sub_1AFDF97C0((uint64_t)v38, (uint64_t)v37);
    sub_1AFD76408((uint64_t)v37);
    return v26;
  }
  return result;
}

uint64_t sub_1AFEA6048()
{
  return sub_1AFFCA6F8();
}

uint64_t sub_1AFEA60F0(long long *a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1AFEA45A4(a1, a2, a3, a4 & 1);
}

uint64_t sub_1AFEA6118(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1AFEA33DC(a1, a2, a3, a4 & 1);
}

uint64_t sub_1AFEA6140()
{
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1AFEA6180(uint64_t a1)
{
  return sub_1AFEA3590(a1);
}

uint64_t sub_1AFEA61A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a2 + 64);
  int64_t v28 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v27 = a3 + 32;
  uint64_t result = sub_1AFFC8E38();
  int64_t v9 = 0;
LABEL_5:
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v9 << 6);
LABEL_22:
    uint64_t v16 = *(void *)(a3 + 16);
    if (v16)
    {
      uint64_t v17 = (unint64_t *)(*(void *)(a2 + 48) + 16 * v12);
      unint64_t v19 = *v17;
      unint64_t v18 = v17[1];
      uint64_t v20 = *(void *)(*(void *)(a2 + 56) + 8 * v12);
      uint64_t v21 = v27;
      while (1)
      {
        long long v22 = *(_OWORD *)(v21 + 112);
        v30[6] = *(_OWORD *)(v21 + 96);
        v30[7] = v22;
        uint64_t v31 = *(void *)(v21 + 128);
        long long v23 = *(_OWORD *)(v21 + 48);
        v30[2] = *(_OWORD *)(v21 + 32);
        void v30[3] = v23;
        long long v24 = *(_OWORD *)(v21 + 80);
        v30[4] = *(_OWORD *)(v21 + 64);
        v30[5] = v24;
        long long v25 = *(_OWORD *)(v21 + 16);
        v30[0] = *(_OWORD *)v21;
        v30[1] = v25;
        if (v25 == __PAIR128__(v18, v19)) {
          break;
        }
        uint64_t result = sub_1AFFCBCE8();
        if (result) {
          break;
        }
        v21 += 136;
        if (!--v16) {
          goto LABEL_5;
        }
      }
      swift_bridgeObjectRetain_n();
      sub_1AFFC8E38();
      sub_1AFD76370((uint64_t)v30);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v32 = a1;
      sub_1AFE0473C(v20, (unint64_t *)v30, isUniquelyReferenced_nonNull_native);
      a1 = v32;
      swift_bridgeObjectRelease();
      sub_1AFD76408((uint64_t)v30);
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
    }
  }
  int64_t v13 = v9 + 1;
  if (__OFADD__(v9, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v13 >= v28) {
    goto LABEL_28;
  }
  unint64_t v14 = *(void *)(v26 + 8 * v13);
  ++v9;
  if (v14) {
    goto LABEL_21;
  }
  int64_t v9 = v13 + 1;
  if (v13 + 1 >= v28) {
    goto LABEL_28;
  }
  unint64_t v14 = *(void *)(v26 + 8 * v9);
  if (v14) {
    goto LABEL_21;
  }
  int64_t v9 = v13 + 2;
  if (v13 + 2 >= v28) {
    goto LABEL_28;
  }
  unint64_t v14 = *(void *)(v26 + 8 * v9);
  if (v14) {
    goto LABEL_21;
  }
  int64_t v9 = v13 + 3;
  if (v13 + 3 >= v28) {
    goto LABEL_28;
  }
  unint64_t v14 = *(void *)(v26 + 8 * v9);
  if (v14) {
    goto LABEL_21;
  }
  int64_t v15 = v13 + 4;
  if (v15 >= v28)
  {
LABEL_28:
    swift_release();
    return a1;
  }
  unint64_t v14 = *(void *)(v26 + 8 * v15);
  int64_t v9 = v15;
  if (v14)
  {
LABEL_21:
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v9 << 6);
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v9 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v9 >= v28) {
      goto LABEL_28;
    }
    unint64_t v14 = *(void *)(v26 + 8 * v9);
    ++v15;
    if (v14) {
      goto LABEL_21;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1AFEA6424()
{
  return sub_1AFEA3A84(*(void *)(v0 + 16));
}

uint64_t sub_1AFEA6444()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_1AFEA64A4(uint64_t a1)
{
  return sub_1AFEA3C48(a1);
}

unint64_t sub_1AFEA64C4()
{
  unint64_t result = qword_1EB818108;
  if (!qword_1EB818108)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB818108);
  }
  return result;
}

uint64_t sub_1AFEA6504(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  id v3 = v2;
  return a1;
}

void *sub_1AFEA6564(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  long long v8 = (_OWORD *)sub_1AFFC8E38();
  long long v9 = v8[9];
  long long v52 = v8[8];
  long long v53 = v9;
  long long v10 = v8[11];
  long long v54 = v8[10];
  long long v55 = v10;
  long long v11 = v8[5];
  long long v48 = v8[4];
  long long v49 = v11;
  long long v12 = v8[7];
  long long v50 = v8[6];
  long long v51 = v12;
  long long v13 = v8[3];
  long long v46 = v8[2];
  long long v47 = v13;
  long long v42 = v52;
  long long v43 = v9;
  long long v44 = v54;
  long long v45 = v55;
  long long v38 = v48;
  long long v39 = v11;
  long long v40 = v50;
  long long v41 = v51;
  long long v36 = v46;
  long long v37 = v13;
  sub_1AFD762B8((uint64_t)&v46);
  sub_1AFEA41C4(&v36, a2, a3, (uint64_t)v35);
  unint64_t v14 = (void *)MEMORY[0x1E4FBC860];
  if (v3)
  {
    sub_1AFE11E24((uint64_t)&v46);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    for (uint64_t i = 192; ; i += 160)
    {
      sub_1AFE11E24((uint64_t)&v46);
      sub_1AFEA67DC((uint64_t)v35, (uint64_t)v33);
      sub_1AFEA67DC((uint64_t)v33, (uint64_t)v34);
      if (sub_1AFE13164(v34) != 1)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v14 = sub_1AFD35A54(0, v14[2] + 1, 1, v14);
        }
        unint64_t v17 = v14[2];
        unint64_t v16 = v14[3];
        if (v17 >= v16 >> 1) {
          unint64_t v14 = sub_1AFD35A54((void *)(v16 > 1), v17 + 1, 1, v14);
        }
        sub_1AFEA67DC((uint64_t)v33, (uint64_t)v32);
        _OWORD v14[2] = v17 + 1;
        unint64_t v18 = &v14[20 * v17];
        long long v19 = v32[1];
        v18[2] = v32[0];
        void v18[3] = v19;
        long long v20 = v32[5];
        long long v22 = v32[2];
        long long v21 = v32[3];
        v18[6] = v32[4];
        v18[7] = v20;
        id v18[4] = v22;
        v18[5] = v21;
        long long v23 = v32[9];
        long long v25 = v32[6];
        long long v24 = v32[7];
        v18[10] = v32[8];
        v18[11] = v23;
        v18[8] = v25;
        v18[9] = v24;
      }
      if (!--v4) {
        break;
      }
      long long v26 = *(_OWORD *)(a1 + i + 112);
      long long v52 = *(_OWORD *)(a1 + i + 96);
      long long v53 = v26;
      long long v27 = *(_OWORD *)(a1 + i + 144);
      long long v54 = *(_OWORD *)(a1 + i + 128);
      long long v55 = v27;
      long long v28 = *(_OWORD *)(a1 + i + 48);
      long long v48 = *(_OWORD *)(a1 + i + 32);
      long long v49 = v28;
      long long v29 = *(_OWORD *)(a1 + i + 80);
      long long v50 = *(_OWORD *)(a1 + i + 64);
      long long v51 = v29;
      long long v30 = *(_OWORD *)(a1 + i + 16);
      long long v46 = *(_OWORD *)(a1 + i);
      long long v47 = v30;
      long long v42 = v52;
      long long v43 = v26;
      long long v44 = v54;
      long long v45 = v55;
      long long v38 = v48;
      long long v39 = v28;
      long long v40 = v50;
      long long v41 = v51;
      long long v36 = v46;
      long long v37 = v30;
      sub_1AFD762B8((uint64_t)&v46);
      sub_1AFEA41C4(&v36, a2, a3, (uint64_t)v35);
    }
    swift_bridgeObjectRelease();
  }
  return v14;
}

uint64_t sub_1AFEA67DC(uint64_t a1, uint64_t a2)
{
  sub_1AFEA6864(0, &qword_1EB816958, (uint64_t)&type metadata for StockNewsFeed, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1AFEA6864(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1AFEA68B0()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 169, 7);
}

uint64_t sub_1AFEA6928(uint64_t a1)
{
  return sub_1AFEA47FC(a1);
}

uint64_t sub_1AFEA6950()
{
  return sub_1AFEA50F8(*(void *)(v0 + 16));
}

uint64_t sub_1AFEA6974()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 208, 7);
}

uint64_t sub_1AFEA6A1C(uint64_t a1)
{
  return sub_1AFEA5344(a1);
}

uint64_t sub_1AFEA6A44()
{
  return sub_1AFEA5A68(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

void sub_1AFEA6A60()
{
  if (!qword_1E9AFBE88)
  {
    sub_1AFDF4598();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1E9AFBE88);
    }
  }
}

uint64_t sub_1AFEA6AC8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 152, 7);
}

uint64_t sub_1AFEA6B38(uint64_t a1)
{
  return sub_1AFEA5BA0(a1);
}

uint64_t sub_1AFEA6B54()
{
  return sub_1AFEA5D00(*(void *)(v0 + 16));
}

uint64_t NetworkEvent.SDSMetadata.requestedItemCount.getter()
{
  return *(void *)v0;
}

uint64_t NetworkEvent.SDSMetadata.returnedItemCount.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t NetworkEvent.SDSMetadata.missingItemIDs.getter()
{
  return sub_1AFFC8E38();
}

uint64_t NetworkEvent.SDSMetadata.invalidItemIDs.getter()
{
  return sub_1AFFC8E38();
}

uint64_t NetworkEvent.SDSMetadata.dataSource.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  sub_1AFFC8E38();
  return v1;
}

uint64_t NetworkEvent.underlyingEvent.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for NetworkEvent();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFEA6D18(v2, (uint64_t)v6);
  if (swift_getEnumCaseMultiPayload() - 2 <= 4)
  {
    sub_1AFD31570();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v7 = sub_1AFFCA368();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, v6, v7);
}

uint64_t type metadata accessor for NetworkEvent()
{
  uint64_t result = qword_1EB818D28;
  if (!qword_1EB818D28) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1AFEA6D18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NetworkEvent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

double NetworkEvent.metadata.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for NetworkEvent();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFEA6D18(v2, (uint64_t)v6);
  if (swift_getEnumCaseMultiPayload() - 2 > 4)
  {
    sub_1AFEA7290((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for NetworkEvent);
    double result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
  }
  else
  {
    sub_1AFD31570();
    long long v8 = &v6[*(int *)(v7 + 48)];
    uint64_t v9 = *(void *)v8;
    uint64_t v10 = *((void *)v8 + 1);
    uint64_t v11 = *((void *)v8 + 4);
    uint64_t v12 = *((void *)v8 + 5);
    uint64_t v13 = sub_1AFFCA368();
    unint64_t v14 = *(void (**)(char *, uint64_t))(*(void *)(v13 - 8) + 8);
    long long v16 = *((_OWORD *)v8 + 1);
    v14(v6, v13);
    *(void *)a1 = v9;
    *(void *)(a1 + 8) = v10;
    double result = *(double *)&v16;
    *(_OWORD *)(a1 + 16) = v16;
    *(void *)(a1 + 32) = v11;
    *(void *)(a1 + 40) = v12;
  }
  return result;
}

uint64_t NetworkEvent.httpStatusCode.getter()
{
  return sub_1AFEA6F0C(MEMORY[0x1E4FAAD68]);
}

uint64_t NetworkEvent.errorCode.getter()
{
  return sub_1AFEA6F0C(MEMORY[0x1E4FAAD80]);
}

uint64_t NetworkEvent.metrics.getter()
{
  return sub_1AFEA6F0C(MEMORY[0x1E4FAAD78]);
}

uint64_t sub_1AFEA6F0C(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = sub_1AFFCA368();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = NetworkEvent.underlyingEvent.getter((uint64_t)v5);
  uint64_t v7 = a1(v6);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v7;
}

uint64_t NetworkEvent.startDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1AFFC98F8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFD2C83C();
  MEMORY[0x1F4188790](v6 - 8);
  long long v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1AFFCA368();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  NetworkEvent.underlyingEvent.getter((uint64_t)v12);
  uint64_t v13 = (void *)sub_1AFFCA358();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if (v13)
  {
    id v14 = objc_msgSend(v13, sel_fetchStartDate);
    if (v14)
    {
      int64_t v15 = v14;
      sub_1AFFC98A8();

      long long v16 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
      v16(v8, v5, v2);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v8, 0, 1, v2);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) != 1) {
        return ((uint64_t (*)(uint64_t, char *, uint64_t))v16)(a1, v8, v2);
      }
    }
    else
    {

      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v8, 1, 1, v2);
    }
    sub_1AFEA7290((uint64_t)v8, (uint64_t (*)(void))sub_1AFD2C83C);
  }
  return sub_1AFFC98E8();
}

uint64_t sub_1AFEA7290(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

double NetworkEvent.dnsDuration.getter()
{
  return sub_1AFEA7318((SEL *)&selRef_domainLookupStartDate, (SEL *)&selRef_domainLookupEndDate);
}

double NetworkEvent.connectDuration.getter()
{
  return sub_1AFEA7318((SEL *)&selRef_connectStartDate, (SEL *)&selRef_connectEndDate);
}

double sub_1AFEA7318(SEL *a1, SEL *a2)
{
  long long v45 = a2;
  sub_1AFD2C83C();
  MEMORY[0x1F4188790](v3 - 8);
  long long v44 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v39 - v6;
  uint64_t v8 = sub_1AFFC98F8();
  uint64_t v9 = *(void **)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  long long v43 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v39 - v12;
  MEMORY[0x1F4188790](v14);
  long long v46 = (char *)&v39 - v15;
  uint64_t v16 = sub_1AFFCA368();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  long long v19 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  NetworkEvent.underlyingEvent.getter((uint64_t)v19);
  long long v20 = (void *)sub_1AFFCA358();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  double v21 = 0.0;
  if (v20)
  {
    id v22 = [v20 *a1];
    if (v22)
    {
      long long v23 = v22;
      sub_1AFFC98A8();

      long long v24 = (void (*)(char *, char *, uint64_t))v9[4];
      long long v42 = v9 + 4;
      v24(v7, v13, v8);
      long long v25 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v9[7];
      v25(v7, 0, 1, v8);
      long long v26 = v9;
      long long v27 = (unsigned int (*)(char *, uint64_t, uint64_t))v9[6];
      if (v27(v7, 1, v8) != 1)
      {
        long long v40 = v25;
        long long v41 = v26;
        long long v39 = v27;
        long long v28 = v7;
        long long v29 = v24;
        v24(v46, v28, v8);
        id v30 = [v20 *v45];
        if (v30)
        {
          uint64_t v31 = v30;
          sub_1AFFC98A8();

          uint64_t v32 = v44;
          v29(v44, v13, v8);
          v40(v32, 0, 1, v8);
          if (v39(v32, 1, v8) != 1)
          {
            long long v33 = v43;
            v29(v43, v32, v8);
            long long v34 = v46;
            sub_1AFFC97B8();
            double v21 = v35;

            long long v36 = (void (*)(char *, uint64_t))v41[1];
            v36(v33, v8);
            v36(v34, v8);
            return v21;
          }
        }
        else
        {
          uint64_t v32 = v44;
          v40(v44, 1, 1, v8);
        }

        ((void (*)(char *, uint64_t))v41[1])(v46, v8);
        uint64_t v37 = (uint64_t)v32;
LABEL_11:
        sub_1AFEA7290(v37, (uint64_t (*)(void))sub_1AFD2C83C);
        return v21;
      }
    }
    else
    {
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v9[7])(v7, 1, 1, v8);
    }

    uint64_t v37 = (uint64_t)v7;
    goto LABEL_11;
  }
  return v21;
}

double NetworkEvent.requestDuration.getter()
{
  return sub_1AFEA7318((SEL *)&selRef_requestStartDate, (SEL *)&selRef_responseStartDate);
}

double NetworkEvent.responseDuration.getter()
{
  return sub_1AFEA7318((SEL *)&selRef_responseStartDate, (SEL *)&selRef_responseEndDate);
}

char *NetworkEvent.responseSize.getter()
{
  uint64_t v0 = sub_1AFFCA368();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  NetworkEvent.underlyingEvent.getter((uint64_t)v3);
  uint64_t v4 = (void *)sub_1AFFCA358();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (!v4) {
    return 0;
  }
  id v5 = objc_msgSend(v4, sel_countOfResponseBodyBytesReceived);
  uint64_t v6 = (char *)objc_msgSend(v4, sel_countOfResponseHeaderBytesReceived);

  double result = &v6[(void)v5];
  if (__OFADD__(v5, v6))
  {
    __break(1u);
    return 0;
  }
  return result;
}

uint64_t NetworkEvent.respondingPop.getter()
{
  uint64_t v0 = sub_1AFFCA368();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  NetworkEvent.underlyingEvent.getter((uint64_t)v3);
  int v4 = (*(uint64_t (**)(char *, uint64_t))(v1 + 88))(v3, v0);
  if (v4 == *MEMORY[0x1E4FAAD60])
  {
    (*(void (**)(char *, uint64_t))(v1 + 96))(v3, v0);
    id v5 = *(void **)v3;

    goto LABEL_5;
  }
  if (v4 == *MEMORY[0x1E4FAAD58])
  {
    (*(void (**)(char *, uint64_t))(v1 + 96))(v3, v0);
    id v5 = *(void **)v3;
LABEL_5:
    uint64_t v6 = (void *)sub_1AFFCAE68();
    id v7 = objc_msgSend(v5, sel_valueForHTTPHeaderField_, v6);

    if (v7)
    {
      uint64_t v8 = sub_1AFFCAE98();

      return v8;
    }
    return 0;
  }
  if (v4 == *MEMORY[0x1E4FAAD70])
  {
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    return 0;
  }
  uint64_t result = sub_1AFFCBCD8();
  __break(1u);
  return result;
}

double NetworkEvent.taskDuration.getter()
{
  sub_1AFD2C83C();
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v37 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  id v5 = (char *)&v37 - v4;
  uint64_t v6 = sub_1AFFC98F8();
  id v7 = *(void **)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  long long v43 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v37 - v10;
  MEMORY[0x1F4188790](v12);
  long long v44 = (char *)&v37 - v13;
  uint64_t v14 = sub_1AFFCA368();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  NetworkEvent.underlyingEvent.getter((uint64_t)v17);
  uint64_t v18 = (void *)sub_1AFFCA358();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  double v19 = 0.0;
  if (v18)
  {
    id v20 = objc_msgSend(v18, sel_responseEndDate);
    if (v20)
    {
      double v21 = v20;
      long long v41 = v2;
      sub_1AFFC98A8();

      id v22 = (void (*)(char *, char *, uint64_t))v7[4];
      long long v42 = v7 + 4;
      v22(v5, v11, v6);
      long long v23 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v7[7];
      v23((uint64_t)v5, 0, 1, v6);
      long long v24 = v7;
      long long v25 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v7[6];
      if (v25((uint64_t)v5, 1, v6) != 1)
      {
        long long v39 = v23;
        long long v40 = v24;
        long long v38 = v25;
        long long v26 = v5;
        long long v27 = v22;
        v22(v44, v26, v6);
        id v28 = objc_msgSend(v18, sel_fetchStartDate);
        if (v28)
        {
          long long v29 = v28;
          sub_1AFFC98A8();

          uint64_t v30 = (uint64_t)v41;
          v27(v41, v11, v6);
          v39(v30, 0, 1, v6);
          if (v38(v30, 1, v6) != 1)
          {
            uint64_t v31 = v43;
            v27(v43, (char *)v30, v6);
            uint64_t v32 = v44;
            sub_1AFFC97B8();
            double v19 = v33;

            long long v34 = (void (*)(char *, uint64_t))v40[1];
            v34(v31, v6);
            v34(v32, v6);
            return v19;
          }
        }
        else
        {
          uint64_t v30 = (uint64_t)v41;
          v39((uint64_t)v41, 1, 1, v6);
        }

        ((void (*)(char *, uint64_t))v40[1])(v44, v6);
        uint64_t v35 = v30;
LABEL_11:
        sub_1AFEA7290(v35, (uint64_t (*)(void))sub_1AFD2C83C);
        return v19;
      }
    }
    else
    {
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v7[7])(v5, 1, 1, v6);
    }

    uint64_t v35 = (uint64_t)v5;
    goto LABEL_11;
  }
  return v19;
}

id NetworkEvent.isProxyConnection.getter()
{
  uint64_t v0 = sub_1AFFCA368();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  NetworkEvent.underlyingEvent.getter((uint64_t)v3);
  uint64_t v4 = (void *)sub_1AFFCA358();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (!v4) {
    return 0;
  }
  id v5 = objc_msgSend(v4, sel_isProxyConnection);

  return v5;
}

uint64_t *initializeBufferWithCopyOfBuffer for NetworkEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v6 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1AFFC8E48();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
        uint64_t v7 = sub_1AFFCA368();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        sub_1AFD31570();
        uint64_t v9 = *(int *)(v8 + 48);
        uint64_t v10 = (char *)a1 + v9;
        uint64_t v11 = (char *)a2 + v9;
        *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
        uint64_t v12 = *((void *)v11 + 3);
        *((void *)v10 + 2) = *((void *)v11 + 2);
        *((void *)v10 + 3) = v12;
        uint64_t v13 = *((void *)v11 + 5);
        *((void *)v10 + 4) = *((void *)v11 + 4);
        *((void *)v10 + 5) = v13;
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        break;
      default:
        uint64_t v14 = sub_1AFFCA368();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a2, v14);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for NetworkEvent(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      uint64_t v3 = sub_1AFFCA368();
      uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      uint64_t result = v4(a1, v3);
      break;
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      uint64_t v5 = sub_1AFFCA368();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
      sub_1AFD31570();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t initializeWithCopy for NetworkEvent(uint64_t a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
    case 3u:
    case 4u:
    case 5u:
    case 6u:
      uint64_t v5 = sub_1AFFCA368();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
      sub_1AFD31570();
      uint64_t v7 = *(int *)(v6 + 48);
      uint64_t v8 = a1 + v7;
      uint64_t v9 = a2 + v7;
      *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
      uint64_t v10 = *(void *)(v9 + 24);
      *(void *)(v8 + 16) = *(void *)(v9 + 16);
      *(void *)(v8 + 24) = v10;
      uint64_t v11 = *(void *)(v9 + 40);
      *(void *)(v8 + 32) = *(void *)(v9 + 32);
      *(void *)(v8 + 40) = v11;
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      break;
    default:
      uint64_t v4 = sub_1AFFCA368();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for NetworkEvent(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1AFEA7290(a1, (uint64_t (*)(void))type metadata accessor for NetworkEvent);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
        uint64_t v5 = sub_1AFFCA368();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
        sub_1AFD31570();
        uint64_t v7 = *(int *)(v6 + 48);
        uint64_t v8 = (void *)(a1 + v7);
        uint64_t v9 = (void *)(a2 + v7);
        *uint64_t v8 = *v9;
        v8[1] = v9[1];
        void v8[2] = v9[2];
        v8[3] = v9[3];
        v8[4] = v9[4];
        _OWORD v8[5] = v9[5];
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        break;
      default:
        uint64_t v4 = sub_1AFFCA368();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for NetworkEvent(uint64_t a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
    case 3u:
    case 4u:
    case 5u:
    case 6u:
      uint64_t v5 = sub_1AFFCA368();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
      sub_1AFD31570();
      uint64_t v7 = *(int *)(v6 + 48);
      uint64_t v8 = (_OWORD *)(a1 + v7);
      uint64_t v9 = (_OWORD *)(a2 + v7);
      long long v10 = v9[1];
      *uint64_t v8 = *v9;
      v8[1] = v10;
      void v8[2] = v9[2];
      break;
    default:
      uint64_t v4 = sub_1AFFCA368();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for NetworkEvent(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1AFEA7290(a1, (uint64_t (*)(void))type metadata accessor for NetworkEvent);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
        uint64_t v5 = sub_1AFFCA368();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
        sub_1AFD31570();
        uint64_t v7 = *(int *)(v6 + 48);
        uint64_t v8 = (_OWORD *)(a1 + v7);
        uint64_t v9 = (_OWORD *)(a2 + v7);
        long long v10 = v9[1];
        *uint64_t v8 = *v9;
        v8[1] = v10;
        void v8[2] = v9[2];
        break;
      default:
        uint64_t v4 = sub_1AFFCA368();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1AFEA8CFC()
{
  uint64_t result = sub_1AFFCA368();
  if (v1 <= 0x3F)
  {
    uint64_t v2 = *(void *)(result - 8) + 64;
    uint64_t v8 = v2;
    uint64_t v9 = v2;
    swift_getTupleTypeLayout2();
    long long v10 = &v7;
    swift_getTupleTypeLayout2();
    uint64_t v11 = &v6;
    swift_getTupleTypeLayout2();
    uint64_t v12 = &v5;
    swift_getTupleTypeLayout2();
    uint64_t v13 = &v4;
    swift_getTupleTypeLayout2();
    uint64_t v14 = &v3;
    uint64_t v15 = v2;
    uint64_t v16 = v2;
    uint64_t v17 = v2;
    uint64_t v18 = v2;
    uint64_t v19 = v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t destroy for NetworkEvent.SDSMetadata()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for NetworkEvent.SDSMetadata(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  return a1;
}

void *assignWithCopy for NetworkEvent.SDSMetadata(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for NetworkEvent.SDSMetadata(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for NetworkEvent.SDSMetadata(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NetworkEvent.SDSMetadata(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NetworkEvent.SDSMetadata()
{
  return &type metadata for NetworkEvent.SDSMetadata;
}

void sub_1AFEA9044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  sub_1AFFC8E48();
  sub_1AFFCA7C8();
  sub_1AFFC8E48();
  uint64_t v9 = (void *)sub_1AFFCA5E8();
  sub_1AFFCA668();
  swift_release();
  swift_release();

  sub_1AFFC8E48();
  long long v10 = (void *)sub_1AFFCA5E8();
  sub_1AFFCA668();
  swift_release();
  swift_release();

  sub_1AFFC8E48();
  uint64_t v11 = (void *)sub_1AFFCA5E8();
  sub_1AFFCA668();
  swift_release();
  swift_release();

  sub_1AFFC8E48();
  uint64_t v12 = (void *)sub_1AFFCA5E8();
  sub_1AFFCA668();
  swift_release();
  swift_release();

  sub_1AFFC8E48();
  uint64_t v13 = (void *)sub_1AFFCA5E8();
  sub_1AFFCA668();
  swift_release();
  swift_release();

  sub_1AFFC8E48();
  uint64_t v14 = (void *)sub_1AFFCA5E8();
  sub_1AFFCA678();
  swift_release();
  swift_release();

  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_1AFD948F8;
  *(void *)(v15 + 24) = v8;
  uint64_t v16 = (void *)sub_1AFFCA5E8();
  sub_1AFFCA678();
  swift_release();
  swift_release();

  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a3;
  *(void *)(v17 + 24) = a4;
  sub_1AFFC8E48();
  id v18 = (id)sub_1AFFCA5E8();
  sub_1AFFCA6B8();
  swift_release();
  swift_release();
  swift_release();
}

uint64_t sub_1AFEA9384()
{
  if (qword_1EB810A90 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EB8319D0;
  sub_1AFFCB478();
  sub_1AFFCA878();

  if (qword_1EB811010 != -1) {
    swift_once();
  }
  sub_1AFEAB0C4(&qword_1EB810F48);
  sub_1AFFC9BB8();
  if (v3 == 1)
  {
    sub_1AFEAB1AC();
    swift_allocError();
    *unint64_t v1 = 0;
    sub_1AFD50AA0();
    swift_allocObject();
    return sub_1AFFCA6E8();
  }
  else
  {
    sub_1AFD50AA0();
    swift_allocObject();
    return sub_1AFFCA6F8();
  }
}

uint64_t sub_1AFEA9528()
{
  if (qword_1EB810A90 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EB8319D0;
  sub_1AFFCB478();
  sub_1AFFCA878();

  sub_1AFD50AA0();
  swift_allocObject();
  return sub_1AFFCA758();
}

uint64_t sub_1AFEA9600()
{
  if (qword_1EB810A90 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EB8319D0;
  sub_1AFFCB478();
  sub_1AFFCA878();

  sub_1AFD50AA0();
  swift_allocObject();
  return sub_1AFFCA758();
}

uint64_t sub_1AFEA96DC()
{
  if (qword_1EB811010 != -1) {
    swift_once();
  }
  sub_1AFEAB0C4(&qword_1E9AFBE90);
  return sub_1AFFC9CF8();
}

uint64_t sub_1AFEA97B0(uint64_t a1, uint64_t (*a2)(void))
{
  char v3 = self;
  id v4 = objc_msgSend(v3, sel_defaultStore);
  char v5 = (void *)sub_1AFFCAE68();
  objc_msgSend(v4, sel_removeObjectForKey_, v5);

  id v6 = objc_msgSend(v3, sel_defaultStore);
  objc_msgSend(v6, sel_synchronize);

  if (qword_1EB810A90 != -1) {
    swift_once();
  }
  id v7 = (id)qword_1EB8319D0;
  sub_1AFFCB478();
  sub_1AFFCA878();

  return a2();
}

uint64_t sub_1AFEA98F4(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  if (qword_1EB810A90 != -1) {
    swift_once();
  }
  id v4 = (void *)qword_1EB8319D0;
  sub_1AFD2CD48();
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1AFFD05F0;
  sub_1AFD2CDB0(0, (unint64_t *)&qword_1EB81A110);
  id v6 = v4;
  sub_1AFFCB928();
  *(void *)(v5 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v5 + 64) = sub_1AFD2CE00();
  *(void *)(v5 + 32) = 0;
  *(void *)(v5 + 40) = 0xE000000000000000;
  sub_1AFFCB478();
  sub_1AFFCA878();

  swift_bridgeObjectRelease();
  return a2(a1);
}

uint64_t sub_1AFEA9A48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  sub_1AFFC9EF8();
  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = sub_1AFEAB46C;
  v9[3] = v8;
  void v9[4] = a3;
  _OWORD v9[5] = a4;
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC9EE8();

  return swift_release();
}

void sub_1AFEA9B20(void (*a1)(uint64_t), uint64_t a2, void (*a3)(void))
{
  id v5 = objc_msgSend(self, sel_defaultStore);
  id v6 = (void *)sub_1AFFCAE68();
  id v7 = objc_msgSend(v5, sel_arrayForKey_, v6);

  if (v7 && (uint64_t v8 = sub_1AFFCB1C8(), v7, v9 = *(void *)(v8 + 16), v10 = swift_bridgeObjectRelease(), v9))
  {
    a1(v10);
  }
  else
  {
    sub_1AFEAB1AC();
    uint64_t v11 = (void *)swift_allocError();
    *uint64_t v12 = 1;
    a3();
  }
}

void sub_1AFEA9C60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  uint64_t v11 = *(void *)(a5 + OBJC_IVAR____TtC10StocksCore21KVSCleanupStartupTask_appConfigurationManager + 24);
  uint64_t v12 = *(void *)(a5 + OBJC_IVAR____TtC10StocksCore21KVSCleanupStartupTask_appConfigurationManager + 32);
  __swift_project_boxed_opaque_existential_1((void *)(a5 + OBJC_IVAR____TtC10StocksCore21KVSCleanupStartupTask_appConfigurationManager), v11);
  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v12 + 40);
  sub_1AFFC8E48();
  v13(v11, v12);
  uint64_t v14 = (void *)swift_allocObject();
  _OWORD v14[2] = sub_1AFEAB46C;
  void v14[3] = v10;
  v14[4] = a5;
  v14[5] = a3;
  v14[6] = a4;
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  uint64_t v15 = (void *)sub_1AFFCA5E8();
  sub_1AFFCA678();
  swift_release();
  swift_release();

  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a3;
  *(void *)(v16 + 24) = a4;
  sub_1AFFC8E48();
  id v17 = (id)sub_1AFFCA5E8();
  sub_1AFFCA6B8();
  swift_release();
  swift_release();
  swift_release();
}

void sub_1AFEA9E1C(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, uint64_t a4, void (*a5)(void))
{
  if (*(unsigned char *)(a1 + 250) == 1) {
    goto LABEL_8;
  }
  if (qword_1EB816790 != -1) {
    swift_once();
  }
  type metadata accessor for KVSCleanupStartupTask();
  sub_1AFEAB0C4(&qword_1EB810F48);
  sub_1AFFC9BB8();
  if (v10 && v10 == 1)
  {
    a1 = swift_bridgeObjectRelease();
LABEL_8:
    a2(a1);
    return;
  }
  char v7 = sub_1AFFCBCE8();
  a1 = swift_bridgeObjectRelease();
  if (v7) {
    goto LABEL_8;
  }
  sub_1AFEAB1AC();
  uint64_t v8 = (void *)swift_allocError();
  *uint64_t v9 = 2;
  a5();
}

uint64_t sub_1AFEA9FC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = sub_1AFEAB46C;
  v9[3] = v8;
  void v9[4] = a3;
  _OWORD v9[5] = a4;
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFCA4F8();

  return swift_release();
}

void sub_1AFEAA0A4(void **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = *a1;
  char v10 = (void *)swift_allocObject();
  void v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  v12[4] = sub_1AFEAB21C;
  v12[5] = v10;
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 1107296256;
  void v12[2] = sub_1AFEAA234;
  v12[3] = &block_descriptor_47;
  uint64_t v11 = _Block_copy(v12);
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  swift_release();
  objc_msgSend(v9, sel_checkSyncingEnabledWithCompletion_, v11);
  _Block_release(v11);
}

void sub_1AFEAA1A4(char a1, void (*a2)(void), uint64_t a3, void (*a4)(void))
{
  if (a1)
  {
    a2();
  }
  else
  {
    sub_1AFEAB1AC();
    id v5 = (void *)swift_allocError();
    *id v6 = 3;
    a4();
  }
}

uint64_t sub_1AFEAA234(uint64_t a1, uint64_t a2)
{
  char v3 = *(void (**)(uint64_t))(a1 + 32);
  sub_1AFFC8E48();
  v3(a2);

  return swift_release();
}

void sub_1AFEAA288(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  uint64_t v9 = self;
  sub_1AFFC8E48();
  id v10 = objc_msgSend(v9, sel_sharedAccount);
  uint64_t v11 = (void *)swift_allocObject();
  void v11[2] = a3;
  void v11[3] = a4;
  void v11[4] = sub_1AFEAB46C;
  v11[5] = v8;
  v13[4] = sub_1AFEAB1A0;
  v13[5] = v11;
  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 1107296256;
  void v13[2] = sub_1AFEAA4A4;
  v13[3] = &block_descriptor_34;
  uint64_t v12 = _Block_copy(v13);
  sub_1AFFC8E48();
  swift_release();
  objc_msgSend(v10, sel_checkAllDevicesRunningMinimumiOSVersion_macOSVersion_orInactiveForTimeInterval_completionHandler_, 12, 0, 10, 14, v12, 7776000.0);
  _Block_release(v12);
}

void sub_1AFEAA3FC(char a1, id a2, void (*a3)(uint64_t), uint64_t a4, void (*a5)(void))
{
  if (a2)
  {
    id v6 = a2;
    id v7 = a2;
    uint64_t v8 = (uint64_t)v6;
  }
  else
  {
    if (a1)
    {
      a5();
      return;
    }
    sub_1AFEAB1AC();
    uint64_t v8 = swift_allocError();
    id v6 = (id)v8;
    *uint64_t v9 = 4;
  }
  a3(v8);
}

void sub_1AFEAA4A4(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  sub_1AFFC8E48();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

void sub_1AFEAA51C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  uint64_t v11 = *(void *)(a5 + OBJC_IVAR____TtC10StocksCore21KVSCleanupStartupTask_watchlistService + 24);
  uint64_t v12 = *(void *)(a5 + OBJC_IVAR____TtC10StocksCore21KVSCleanupStartupTask_watchlistService + 32);
  __swift_project_boxed_opaque_existential_1((void *)(a5 + OBJC_IVAR____TtC10StocksCore21KVSCleanupStartupTask_watchlistService), v11);
  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v12 + 48);
  sub_1AFFC8E48();
  v13(v11, v12);
  uint64_t v14 = (void *)swift_allocObject();
  _OWORD v14[2] = a5;
  void v14[3] = a3;
  v14[4] = a4;
  v14[5] = sub_1AFEAB46C;
  v14[6] = v10;
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  uint64_t v15 = (void *)sub_1AFFCA5E8();
  sub_1AFFCA678();
  swift_release();
  swift_release();

  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a3;
  *(void *)(v16 + 24) = a4;
  sub_1AFFC8E48();
  id v17 = (id)sub_1AFFCA5E8();
  sub_1AFFCA6B8();
  swift_release();
  swift_release();
  swift_release();
}

uint64_t sub_1AFEAA6D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = (void *)swift_allocObject();
  void v10[2] = a3;
  v10[3] = a4;
  v10[4] = a5;
  v10[5] = a6;
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFCA4F8();
  return swift_release();
}

void sub_1AFEAA784(void **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = *a1;
  uint64_t v10 = (void *)swift_allocObject();
  void v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  v12[4] = sub_1AFEAB190;
  v12[5] = v10;
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 1107296256;
  void v12[2] = sub_1AFD82E64;
  v12[3] = &block_descriptor_23;
  uint64_t v11 = _Block_copy(v12);
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  swift_release();
  objc_msgSend(v9, sel_savePendingChangesToServerWithCompletion_, v11);
  _Block_release(v11);
}

void sub_1AFEAA884(void *a1, void (*a2)(void *), uint64_t a3, void (*a4)(void))
{
  if (a1)
  {
    id v6 = a1;
    a2(a1);
  }
  else
  {
    a4();
  }
}

uint64_t sub_1AFEAA8F8()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC10StocksCore21KVSCleanupStartupTask_group;
  uint64_t v2 = sub_1AFFCA188();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC10StocksCore21KVSCleanupStartupTask_appConfigurationManager);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC10StocksCore21KVSCleanupStartupTask_watchlistService);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1AFEAA9C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC10StocksCore21KVSCleanupStartupTask_group;
  uint64_t v4 = sub_1AFFCA188();
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_1AFEAAA44()
{
  return sub_1AFFCA758();
}

uint64_t sub_1AFEAAA9C()
{
  uint64_t v0 = sub_1AFFCA188();
  __swift_allocate_value_buffer(v0, qword_1EB8110D8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EB8110D8);
  return sub_1AFFCA178();
}

uint64_t sub_1AFEAAB00@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EB8110F8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1AFFCA188();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EB8110D8);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1AFEAABA8()
{
  uint64_t v0 = sub_1AFFC9C58();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = &v9[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_1AFFC9C68();
  double v5 = MEMORY[0x1F4188790](v4);
  (*(void (**)(unsigned char *, void, double))(v7 + 104))(&v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x1E4FAB410], v5);
  (*(void (**)(unsigned char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB3F8], v0);
  v9[15] = 0;
  sub_1AFEAB2AC();
  swift_allocObject();
  uint64_t result = sub_1AFFC9CE8();
  qword_1EB811000 = result;
  return result;
}

uint64_t sub_1AFEAAD54()
{
  if (qword_1EB811010 != -1) {
    swift_once();
  }

  return sub_1AFFC8E48();
}

uint64_t sub_1AFEAADB0()
{
  return type metadata accessor for KVSCleanupStartupTask();
}

uint64_t type metadata accessor for KVSCleanupStartupTask()
{
  uint64_t result = qword_1EB810F58;
  if (!qword_1EB810F58) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1AFEAAE04()
{
  uint64_t result = sub_1AFFCA188();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

ValueMetadata *_s10KVSCleanupVMa()
{
  return &_s10KVSCleanupVN;
}

uint64_t sub_1AFEAAEBC()
{
  return sub_1AFEAB0C4(&qword_1EB810F48);
}

void sub_1AFEAAEF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1AFEAAEF8()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1AFEAAF30()
{
  return sub_1AFEA9384();
}

uint64_t sub_1AFEAAF58()
{
  return sub_1AFEA9528();
}

uint64_t sub_1AFEAAF94()
{
  return sub_1AFEA9600();
}

uint64_t sub_1AFEAAFD0()
{
  return sub_1AFEA9600();
}

uint64_t sub_1AFEAB00C()
{
  return sub_1AFEA9528();
}

uint64_t sub_1AFEAB048()
{
  return sub_1AFEA9600();
}

uint64_t sub_1AFEAB084()
{
  return sub_1AFEA96DC();
}

uint64_t sub_1AFEAB0A0(uint64_t a1)
{
  return sub_1AFEA97B0(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1AFEAB0BC(uint64_t a1)
{
  return sub_1AFEA98F4(a1, *(uint64_t (**)(uint64_t))(v1 + 16));
}

uint64_t sub_1AFEAB0C4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for KVSCleanupStartupTask();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1AFEAB108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1AFEAA51C(a1, a2, a3, a4, v4);
}

uint64_t sub_1AFEAB110()
{
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1AFEAB158(uint64_t a1)
{
  return sub_1AFEAA6D8(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

void sub_1AFEAB180(void **a1)
{
  sub_1AFEAA784(a1, v1[2], v1[3], v1[4], v1[5]);
}

void sub_1AFEAB190(void *a1)
{
  sub_1AFEAA884(a1, *(void (**)(void *))(v1 + 16), *(void *)(v1 + 24), *(void (**)(void))(v1 + 32));
}

void sub_1AFEAB1A0(char a1, void *a2)
{
  sub_1AFEAA3FC(a1, a2, *(void (**)(uint64_t))(v2 + 16), *(void *)(v2 + 24), *(void (**)(void))(v2 + 32));
}

unint64_t sub_1AFEAB1AC()
{
  unint64_t result = qword_1EB810F40;
  if (!qword_1EB810F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB810F40);
  }
  return result;
}

uint64_t sub_1AFEAB200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AFEA9FC4(a1, a2, a3, a4);
}

void sub_1AFEAB20C(void **a1)
{
  sub_1AFEAA0A4(a1, v1[2], v1[3], v1[4], v1[5]);
}

void sub_1AFEAB21C(char a1)
{
  sub_1AFEAA1A4(a1, *(void (**)(void))(v1 + 16), *(void *)(v1 + 24), *(void (**)(void))(v1 + 32));
}

void sub_1AFEAB228(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1AFEA9C60(a1, a2, a3, a4, v4);
}

uint64_t sub_1AFEAB230()
{
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

void sub_1AFEAB278(uint64_t a1)
{
  sub_1AFEA9E1C(a1, *(void (**)(uint64_t))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void (**)(void))(v1 + 40));
}

void sub_1AFEAB2A0()
{
  sub_1AFEA9B20(*(void (**)(uint64_t))(v0 + 16), *(void *)(v0 + 24), *(void (**)(void))(v0 + 32));
}

void sub_1AFEAB2AC()
{
  if (!qword_1EB81ABA8)
  {
    unint64_t v0 = sub_1AFFC9CD8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB81ABA8);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for KVSCleanupStartupTask.Errors(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFEAB3D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for KVSCleanupStartupTask.Errors()
{
  return &type metadata for KVSCleanupStartupTask.Errors;
}

unint64_t sub_1AFEAB414()
{
  unint64_t result = qword_1E9AFBE98;
  if (!qword_1E9AFBE98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBE98);
  }
  return result;
}

uint64_t sub_1AFEAB4A4()
{
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v1 = *(void *)(v0 + 32);
  if (v2 == sub_1AFFCAE98() && v1 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_1AFFCBCE8();
  }
  swift_bridgeObjectRelease();
  return v5 & 1;
}

void sub_1AFEAB520(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_name);
  uint64_t v22 = sub_1AFFCAE98();
  uint64_t v6 = v5;

  id v7 = objc_msgSend(a1, sel_symbols);
  uint64_t v8 = sub_1AFFCB1C8();

  id v9 = objc_msgSend(a1, sel_identifier);
  uint64_t v10 = sub_1AFFCAE98();
  uint64_t v12 = v11;

  id v13 = objc_msgSend(a1, sel_sortState);
  id v14 = objc_msgSend(v13, sel_integerValue);

  id v15 = objc_msgSend(a1, sel_sortOrderState);
  uint64_t v16 = v15;
  if (v15)
  {
    id v17 = objc_msgSend(v15, sel_integerValue);
  }
  else
  {
    id v17 = 0;
  }
  sub_1AFECE914((uint64_t)v14, (uint64_t)v17, v16 == 0, (char *)&v24);
  if (v24 <= 0xFDu) {
    unsigned __int8 v18 = v24;
  }
  else {
    unsigned __int8 v18 = -96;
  }
  id v19 = objc_msgSend(a1, sel_displayState, v22);
  id v20 = objc_msgSend(v19, sel_integerValue);

  char v21 = v20 == (id)1;
  *(void *)a2 = v23;
  *(void *)(a2 + 8) = v6;
  if (v20 == (id)2) {
    char v21 = 2;
  }
  *(void *)(a2 + 16) = v8;
  *(void *)(a2 + 24) = v10;
  *(void *)(a2 + 32) = v12;
  *(unsigned char *)(a2 + 40) = v18;
  *(unsigned char *)(a2 + 41) = v21;
}

uint64_t sub_1AFEAB6E0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X5>, char *a7@<X6>, uint64_t a8@<X8>)
{
  char v8 = *a6;
  char v9 = *a7;
  *(void *)a8 = result;
  *(void *)(a8 + 8) = a2;
  *(void *)(a8 + 16) = a3;
  *(void *)(a8 + 24) = a4;
  *(void *)(a8 + 32) = a5;
  *(unsigned char *)(a8 + 40) = v8;
  *(unsigned char *)(a8 + 41) = v9;
  return result;
}

uint64_t sub_1AFEAB700()
{
  uint64_t v1 = sub_1AFFC9A78();
  MEMORY[0x1F4188790](v1 - 8);
  v17[0] = sub_1AFFCAE58();
  uint64_t v2 = *(void *)(v17[0] - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v17[0]);
  uint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  id v7 = (char *)v17 - v6;
  uint64_t v8 = *v0;
  uint64_t v10 = v0[3];
  uint64_t v9 = v0[4];
  if (v10 == sub_1AFFCAE98() && v9 == v11)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v13 = sub_1AFFCBCE8();
    swift_bridgeObjectRelease();
    if ((v13 & 1) == 0)
    {
      sub_1AFFC8E38();
      return v8;
    }
  }
  sub_1AFFCADF8();
  uint64_t v14 = v17[0];
  (*(void (**)(char *, char *, void))(v2 + 16))(v5, v7, v17[0]);
  if (qword_1EB819E80 != -1) {
    swift_once();
  }
  id v15 = (id)qword_1EB831AF8;
  sub_1AFFC9A28();
  uint64_t v8 = sub_1AFFCAEF8();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v14);
  return v8;
}

uint64_t sub_1AFEAB95C()
{
  uint64_t v1 = *v0;
  sub_1AFFC8E38();
  return v1;
}

uint64_t sub_1AFEAB98C()
{
  return sub_1AFFC8E38();
}

uint64_t sub_1AFEAB994()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_1AFFC8E38();
  return v1;
}

void sub_1AFEAB9C4(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 40);
}

void sub_1AFEAB9D0(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 41);
}

uint64_t sub_1AFEAB9DC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  unsigned int v2 = *(unsigned __int8 *)(v0 + 40);
  sub_1AFFC8E38();
  sub_1AFFCAF68();
  swift_bridgeObjectRelease();
  sub_1AFFCBE08();
  uint64_t v3 = *(void *)(v1 + 16);
  if (v3)
  {
    sub_1AFFC8E38();
    uint64_t v4 = v1 + 40;
    do
    {
      sub_1AFFC8E38();
      sub_1AFFCAF68();
      swift_bridgeObjectRelease();
      v4 += 16;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  sub_1AFFC8E38();
  sub_1AFFCAF68();
  swift_bridgeObjectRelease();
  switch(v2 >> 5)
  {
    case 5u:
      break;
    default:
      sub_1AFFCBE08();
      break;
  }
  sub_1AFFCBE08();
  return sub_1AFFCBE08();
}

uint64_t sub_1AFEABB50()
{
  uint64_t result = 1701667182;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x736C6F626D7973;
      break;
    case 2:
      uint64_t result = 0x696669746E656469;
      break;
    case 3:
      uint64_t result = 0x7461745374726F73;
      break;
    case 4:
      uint64_t result = 0x5379616C70736964;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1AFEABC04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1AFEACCC8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AFEABC2C(uint64_t a1)
{
  unint64_t v2 = sub_1AFEAC61C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFEABC68(uint64_t a1)
{
  unint64_t v2 = sub_1AFEAC61C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFEABCA4(void *a1)
{
  sub_1AFEAC718(0, &qword_1E9AFBEA0, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  id v7 = (char *)&v12 - v6;
  uint64_t v8 = *(void *)(v1 + 16);
  uint64_t v15 = *(void *)(v1 + 24);
  uint64_t v16 = v8;
  uint64_t v14 = *(void *)(v1 + 32);
  LODWORD(v8) = *(unsigned __int8 *)(v1 + 40);
  int v12 = *(unsigned __int8 *)(v1 + 41);
  int v13 = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFEAC61C();
  sub_1AFFCBE78();
  char v25 = 0;
  uint64_t v9 = v17;
  sub_1AFFCBC08();
  if (!v9)
  {
    char v10 = v13;
    uint64_t v18 = v16;
    char v24 = 1;
    sub_1AFD3ABD0();
    sub_1AFD4F780((unint64_t *)&qword_1EB819DC8);
    sub_1AFFCBC58();
    char v23 = 2;
    sub_1AFFCBC08();
    char v22 = v10;
    char v21 = 3;
    sub_1AFEAC670();
    sub_1AFFCBC58();
    char v20 = v12;
    char v19 = 4;
    sub_1AFEAC6C4();
    sub_1AFFCBC58();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1AFEABF3C()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFEABFA0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1AFEAC718(0, &qword_1E9AFBEC0, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v19 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFEAC61C();
  sub_1AFFCBE68();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v31 = 0;
  uint64_t v10 = sub_1AFFCBB18();
  uint64_t v12 = v11;
  uint64_t v23 = v10;
  sub_1AFD3ABD0();
  char v30 = 1;
  sub_1AFD4F780((unint64_t *)&qword_1EB819DD8);
  sub_1AFFC8E38();
  sub_1AFFCBB58();
  uint64_t v13 = v24;
  char v29 = 2;
  sub_1AFFC8E38();
  uint64_t v22 = 0;
  uint64_t v19 = sub_1AFFCBB18();
  uint64_t v20 = v13;
  char v27 = 3;
  uint64_t v15 = v14;
  sub_1AFEAC77C();
  sub_1AFFC8E38();
  sub_1AFFCBB58();
  uint64_t v21 = v15;
  LOBYTE(v15) = v28;
  char v25 = 4;
  sub_1AFEAC7D0();
  sub_1AFFCBB58();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  char v17 = v26;
  *(void *)a2 = v23;
  *(void *)(a2 + 8) = v12;
  uint64_t v18 = v19;
  *(void *)(a2 + 16) = v20;
  *(void *)(a2 + 24) = v18;
  *(void *)(a2 + 32) = v21;
  *(unsigned char *)(a2 + 40) = v15;
  *(unsigned char *)(a2 + 41) = v17;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFEAC3A4()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFEAC40C()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFEAC470@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1AFEABFA0(a1, a2);
}

uint64_t sub_1AFEAC488(void *a1)
{
  return sub_1AFEABCA4(a1);
}

uint64_t sub_1AFEAC4A0@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 32);
  *a1 = *(void *)(v1 + 24);
  a1[1] = v2;
  return sub_1AFFC8E38();
}

BOOL sub_1AFEAC4AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  unsigned int v5 = *(unsigned __int8 *)(a1 + 40);
  int v6 = *(unsigned __int8 *)(a1 + 41);
  uint64_t v8 = *(void **)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  unsigned int v10 = *(unsigned __int8 *)(a2 + 40);
  int v11 = *(unsigned __int8 *)(a2 + 41);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (char v12 = sub_1AFFCBCE8(), result = 0, (v12 & 1) != 0))
  {
    if (sub_1AFF22B0C(v2, v8))
    {
      if (v3 == v7 && v4 == v9 || (char v14 = sub_1AFFCBCE8(), result = 0, (v14 & 1) != 0))
      {
        switch(v5 >> 5)
        {
          case 1u:
            if ((v10 & 0xE0) != 0x20) {
              return 0;
            }
            break;
          case 2u:
            if ((v10 & 0xE0) != 0x40) {
              return 0;
            }
            break;
          case 3u:
            if ((v10 & 0xE0) != 0x60) {
              return 0;
            }
            break;
          case 4u:
            if ((v10 & 0xE0) != 0x80) {
              return 0;
            }
            break;
          case 5u:
            if (v10 != 160) {
              return 0;
            }
            break;
          default:
            if (v10 >= 0x20) {
              return 0;
            }
            break;
        }
        return v6 == v11;
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

unint64_t sub_1AFEAC61C()
{
  unint64_t result = qword_1E9AFBEA8;
  if (!qword_1E9AFBEA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBEA8);
  }
  return result;
}

unint64_t sub_1AFEAC670()
{
  unint64_t result = qword_1E9AFBEB0;
  if (!qword_1E9AFBEB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBEB0);
  }
  return result;
}

unint64_t sub_1AFEAC6C4()
{
  unint64_t result = qword_1E9AFBEB8;
  if (!qword_1E9AFBEB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBEB8);
  }
  return result;
}

void sub_1AFEAC718(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1AFEAC61C();
    unint64_t v7 = a3(a1, &type metadata for Watchlist.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1AFEAC77C()
{
  unint64_t result = qword_1E9AFBEC8;
  if (!qword_1E9AFBEC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBEC8);
  }
  return result;
}

unint64_t sub_1AFEAC7D0()
{
  unint64_t result = qword_1E9AFBED0;
  if (!qword_1E9AFBED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBED0);
  }
  return result;
}

unint64_t sub_1AFEAC828()
{
  unint64_t result = qword_1EB817BC0;
  if (!qword_1EB817BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817BC0);
  }
  return result;
}

uint64_t destroy for Watchlist()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Watchlist(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  return a1;
}

uint64_t assignWithCopy for Watchlist(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  return a1;
}

uint64_t assignWithTake for Watchlist(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for Watchlist(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 42)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Watchlist(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 40) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 42) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 42) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Watchlist()
{
  return &type metadata for Watchlist;
}

unsigned char *storeEnumTagSinglePayload for Watchlist.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFEACB88);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Watchlist.CodingKeys()
{
  return &type metadata for Watchlist.CodingKeys;
}

unint64_t sub_1AFEACBC4()
{
  unint64_t result = qword_1E9AFBED8;
  if (!qword_1E9AFBED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBED8);
  }
  return result;
}

unint64_t sub_1AFEACC1C()
{
  unint64_t result = qword_1E9AFBEE0;
  if (!qword_1E9AFBEE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBEE0);
  }
  return result;
}

unint64_t sub_1AFEACC74()
{
  unint64_t result = qword_1E9AFBEE8;
  if (!qword_1E9AFBEE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBEE8);
  }
  return result;
}

uint64_t sub_1AFEACCC8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736C6F626D7973 && a2 == 0xE700000000000000 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7461745374726F73 && a2 == 0xE900000000000065 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x5379616C70736964 && a2 == 0xEC00000065746174)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1AFFCBCE8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

StocksCore::MultiSizeVideo __swiftcall MultiSizeVideo.init(videoSmall:videoLarge:)(Swift::String_optional videoSmall, Swift::String_optional videoLarge)
{
  if (videoSmall.value._object) {
    uint64_t countAndFlagsBits = videoSmall.value._countAndFlagsBits;
  }
  else {
    uint64_t countAndFlagsBits = 0;
  }
  if (videoSmall.value._object) {
    object = videoSmall.value._object;
  }
  else {
    object = (void *)0xE000000000000000;
  }
  if (videoLarge.value._object) {
    uint64_t v5 = videoLarge.value._countAndFlagsBits;
  }
  else {
    uint64_t v5 = 0;
  }
  *BOOL v2 = countAndFlagsBits;
  v2[1] = (uint64_t)object;
  if (videoLarge.value._object) {
    char v6 = videoLarge.value._object;
  }
  else {
    char v6 = (void *)0xE000000000000000;
  }
  v2[2] = v5;
  v2[3] = (uint64_t)v6;
  result.videoLarge = videoLarge.value;
  result.videoSmall = videoSmall.value;
  return result;
}

uint64_t sub_1AFEACF34(char *a1, char *a2)
{
  return sub_1AFDEFF88(*a1, *a2);
}

uint64_t sub_1AFEACF40()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFEACFC8()
{
  sub_1AFFCAF68();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFEAD03C()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFEAD0C0@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1AFFCBA78();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1AFEAD120(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x616D536F65646976;
  if (*v1) {
    uint64_t v2 = 0x72614C6F65646976;
  }
  unint64_t v3 = 0xEA00000000006567;
  if (!*v1) {
    unint64_t v3 = 0xEA00000000006C6CLL;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1AFEAD164()
{
  if (*v0) {
    return 0x72614C6F65646976;
  }
  else {
    return 0x616D536F65646976;
  }
}

uint64_t sub_1AFEAD1A4@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1AFFCBA78();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1AFEAD208(uint64_t a1)
{
  unint64_t v2 = sub_1AFEAD748();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFEAD244(uint64_t a1)
{
  unint64_t v2 = sub_1AFEAD748();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t MultiSizeVideo.init(from:)@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  sub_1AFEAD95C(0, &qword_1E9AFBEF0, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v31 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFEAD748();
  sub_1AFFCBE68();
  if (!v2)
  {
    long long v38 = (void *)MEMORY[0x1E4FBC860];
    char v37 = 0;
    sub_1AFFCBAF8();
    unint64_t v10 = v36;
    unint64_t v34 = v35;
    if (v36)
    {
      int v11 = (void *)MEMORY[0x1E4FBC860];
    }
    else
    {
      swift_beginAccess();
      int v11 = v38;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v33 = 0;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        int v11 = sub_1AFD352FC(0, v11[2] + 1, 1, v11);
      }
      unint64_t v14 = v11[2];
      unint64_t v13 = v11[3];
      if (v14 >= v13 >> 1) {
        int v11 = sub_1AFD352FC((void *)(v13 > 1), v14 + 1, 1, v11);
      }
      void v11[2] = v14 + 1;
      uint64_t v15 = &v11[2 * v14];
      v15[4] = 0x616D536F65646976;
      v15[5] = 0xEA00000000006C6CLL;
      long long v38 = v11;
      swift_endAccess();
      unint64_t v10 = v33;
    }
    char v37 = 1;
    sub_1AFFCBAF8();
    unint64_t v17 = v36;
    if (v36)
    {
      unint64_t v32 = v35;
    }
    else
    {
      swift_beginAccess();
      int v11 = v38;
      char v18 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v33 = v10;
      if ((v18 & 1) == 0) {
        int v11 = sub_1AFD352FC(0, v11[2] + 1, 1, v11);
      }
      unint64_t v20 = v11[2];
      unint64_t v19 = v11[3];
      unint64_t v21 = v20 + 1;
      if (v20 >= v19 >> 1)
      {
        unint64_t v32 = v20 + 1;
        char v30 = sub_1AFD352FC((void *)(v19 > 1), v20 + 1, 1, v11);
        unint64_t v21 = v32;
        int v11 = v30;
      }
      void v11[2] = v21;
      uint64_t v22 = &v11[2 * v20];
      v22[4] = 0x72614C6F65646976;
      v22[5] = 0xEA00000000006567;
      long long v38 = v11;
      swift_endAccess();
      unint64_t v32 = 0;
      unint64_t v10 = v33;
    }
    if (v10) {
      unint64_t v23 = v34;
    }
    else {
      unint64_t v23 = 0;
    }
    unint64_t v24 = 0xE000000000000000;
    if (!v10) {
      unint64_t v10 = 0xE000000000000000;
    }
    if (v17) {
      unint64_t v24 = v17;
    }
    unint64_t v33 = v24;
    unint64_t v34 = v23;
    if (v11[2])
    {
      sub_1AFD2CD48();
      uint64_t v25 = swift_allocObject();
      unint64_t v31 = v10;
      char v26 = (void *)v25;
      *(_OWORD *)(v25 + 16) = xmmword_1AFFD05F0;
      sub_1AFD3ABD0();
      v26[7] = v27;
      v26[8] = sub_1AFD5CDA0();
      v26[4] = v11;
      sub_1AFD2C4F4();
      sub_1AFFC8E38();
      char v28 = (void *)sub_1AFFCB638();
      sub_1AFFCB478();
      sub_1AFFCA878();
      unint64_t v10 = v31;
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AFD2C4F4();
      char v28 = (void *)sub_1AFFCB638();
      sub_1AFFCB478();
      sub_1AFFCA878();
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_bridgeObjectRelease();
    *a2 = v34;
    a2[1] = v10;
    unint64_t v29 = v33;
    a2[2] = v32;
    a2[3] = v29;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1AFEAD748()
{
  unint64_t result = qword_1E9AFBEF8;
  if (!qword_1E9AFBEF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBEF8);
  }
  return result;
}

uint64_t MultiSizeVideo.encode(to:)(void *a1)
{
  sub_1AFEAD95C(0, &qword_1E9AFBF00, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v11 - v6;
  uint64_t v8 = *(void *)(v1 + 16);
  v11[1] = *(void *)(v1 + 24);
  void v11[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFEAD748();
  sub_1AFFCBE78();
  char v13 = 0;
  uint64_t v9 = v11[3];
  sub_1AFFCBC08();
  if (!v9)
  {
    char v12 = 1;
    sub_1AFFCBC08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1AFEAD92C@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  return MultiSizeVideo.init(from:)(a1, a2);
}

uint64_t sub_1AFEAD944(void *a1)
{
  return MultiSizeVideo.encode(to:)(a1);
}

void sub_1AFEAD95C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1AFEAD748();
    unint64_t v7 = a3(a1, &type metadata for MultiSizeVideo.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

ValueMetadata *type metadata accessor for MultiSizeVideo()
{
  return &type metadata for MultiSizeVideo;
}

unsigned char *storeEnumTagSinglePayload for MultiSizeVideo.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFEADA9CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MultiSizeVideo.CodingKeys()
{
  return &type metadata for MultiSizeVideo.CodingKeys;
}

unint64_t sub_1AFEADAD8()
{
  unint64_t result = qword_1E9AFBF08;
  if (!qword_1E9AFBF08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBF08);
  }
  return result;
}

unint64_t sub_1AFEADB30()
{
  unint64_t result = qword_1E9AFBF10;
  if (!qword_1E9AFBF10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBF10);
  }
  return result;
}

unint64_t sub_1AFEADB88()
{
  unint64_t result = qword_1E9AFBF18;
  if (!qword_1E9AFBF18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBF18);
  }
  return result;
}

unint64_t sub_1AFEADBE0()
{
  unint64_t result = qword_1E9AFBF20[0];
  if (!qword_1E9AFBF20[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9AFBF20);
  }
  return result;
}

uint64_t sub_1AFEADC34(uint64_t a1)
{
  v1[9] = a1;
  uint64_t v2 = sub_1AFFC9528();
  v1[10] = v2;
  v1[11] = *(void *)(v2 - 8);
  v1[12] = swift_task_alloc();
  sub_1AFFC9A78();
  v1[13] = swift_task_alloc();
  uint64_t v3 = sub_1AFFCAE58();
  v1[14] = v3;
  v1[15] = *(void *)(v3 - 8);
  v1[16] = swift_task_alloc();
  v1[17] = swift_task_alloc();
  sub_1AFFC9548();
  v1[18] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1AFEADDB8, 0, 0);
}

uint64_t sub_1AFEADDB8()
{
  sub_1AFFC8998();
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[19] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1AFEADE80;
  return sub_1AFF9E8A0(v1, v2);
}

uint64_t sub_1AFEADE80(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 160) = a1;
  *(void *)(v3 + 168) = v1;
  swift_task_dealloc();
  if (v1) {
    unsigned int v4 = sub_1AFD821E4;
  }
  else {
    unsigned int v4 = sub_1AFEADF94;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1AFEADF94()
{
  uint64_t v1 = v0[20];
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  int64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = v0[20];
  if (v2)
  {
    uint64_t v4 = v0[15];
    uint64_t v5 = v0[11];
    uint64_t v38 = MEMORY[0x1E4FBC860];
    sub_1AFD9DA90(0, v2, 0);
    sub_1AFD823E8();
    unsigned int v33 = *MEMORY[0x1E4F275D0];
    unint64_t v32 = (void (**)(uint64_t, void, uint64_t))(v5 + 104);
    char v30 = (void (**)(uint64_t, uint64_t))(v4 + 8);
    unint64_t v31 = (void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
    uint64_t v6 = (uint64_t *)(v3 + 64);
    while (1)
    {
      int64_t v36 = v2;
      uint64_t v7 = v0[18];
      uint64_t v8 = v0[12];
      uint64_t v9 = v0[10];
      uint64_t v34 = *(v6 - 4);
      uint64_t v35 = *(v6 - 3);
      uint64_t v10 = *(v6 - 1);
      uint64_t v11 = *v6;
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFCADF8();
      sub_1AFFC9A28();
      (*v32)(v8, v33, v9);
      sub_1AFFC9558();
      uint64_t v12 = MEMORY[0x1B3E8AFE0](v7);
      uint64_t v37 = v10;
      if (v10 == sub_1AFFCAE98() && v11 == v13) {
        break;
      }
      char v14 = sub_1AFFCBCE8();
      swift_bridgeObjectRetain_n();
      swift_retain_n();
      swift_bridgeObjectRelease();
      if (v14) {
        goto LABEL_7;
      }
      uint64_t v21 = v34;
      uint64_t v23 = v35;
LABEL_11:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v0[7] = v21;
      v0[8] = v23;
      sub_1AFFC8B38();
      swift_bridgeObjectRelease_n();
      swift_release_n();
      uint64_t v24 = v38;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1AFD9DA90(0, *(void *)(v38 + 16) + 1, 1);
        uint64_t v24 = v38;
      }
      unint64_t v26 = *(void *)(v24 + 16);
      unint64_t v25 = *(void *)(v24 + 24);
      if (v26 >= v25 >> 1)
      {
        sub_1AFD9DA90(v25 > 1, v26 + 1, 1);
        uint64_t v24 = v38;
      }
      *(void *)(v24 + 16) = v26 + 1;
      uint64_t v27 = (void *)(v24 + 24 * v26);
      v27[4] = v37;
      void v27[5] = v11;
      v27[6] = v12;
      v6 += 6;
      int64_t v2 = v36 - 1;
      if (v36 == 1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
    }
    swift_bridgeObjectRetain_n();
    swift_retain_n();
LABEL_7:
    uint64_t v15 = v0[16];
    uint64_t v16 = v0[17];
    uint64_t v17 = v0[14];
    sub_1AFFCADF8();
    (*v31)(v15, v16, v17);
    if (qword_1EB819E80 != -1) {
      swift_once();
    }
    uint64_t v18 = v0[17];
    uint64_t v19 = v0[14];
    id v20 = (id)qword_1EB831AF8;
    sub_1AFFC9A28();
    uint64_t v21 = sub_1AFFCAEF8();
    uint64_t v23 = v22;
    (*v30)(v18, v19);
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  swift_bridgeObjectRelease();
  uint64_t v24 = MEMORY[0x1E4FBC860];
LABEL_18:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v28 = (uint64_t (*)(uint64_t))v0[1];
  return v28(v24);
}

uint64_t sub_1AFEAE3D0(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v3 = *v1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1AFD6BBC4;
  return sub_1AFEADC34(v3);
}

ValueMetadata *type metadata accessor for WatchlistOptionsProvider()
{
  return &type metadata for WatchlistOptionsProvider;
}

uint64_t sub_1AFEAE478()
{
  return sub_1AFFCA758();
}

void sub_1AFEAE4FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = sub_1AFEAE950(a5);
  uint64_t v8 = v7;
  sub_1AFEAEF28(0, &qword_1EB811350, (uint64_t (*)(uint64_t))sub_1AFEAEF8C, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AFFD0DC0;
  *(void *)(inited + 32) = 0xD000000000000012;
  *(void *)(inited + 40) = 0x80000001AFFF87E0;
  *(void *)(inited + 48) = &unk_1F08777B0;
  *(void *)(inited + 56) = sub_1AFFCAE98();
  *(void *)(inited + 64) = v10;
  sub_1AFDF461C(0, (unint64_t *)&qword_1EB81A0E0, MEMORY[0x1E4FBBE00]);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1AFFD0610;
  *(void *)(v11 + 32) = sub_1AFFCAE98();
  *(void *)(v11 + 40) = v12;
  *(void *)(v11 + 48) = sub_1AFFCAE98();
  *(void *)(v11 + 56) = v13;
  *(void *)(inited + 72) = v11;
  *(void *)(inited + 80) = sub_1AFFCAE98();
  *(void *)(inited + 88) = v14;
  *(void *)(inited + 96) = MEMORY[0x1E4FBC860];
  sub_1AFDFAB30(inited);
  id v26 = objc_msgSend(self, sel_ignoreCacheCachePolicy);
  if (qword_1EB811068 != -1) {
    swift_once();
  }
  sub_1AFEAF0BC(&qword_1EB810F90, v15, (void (*)(uint64_t))type metadata accessor for ForYouConfigRecordService);
  sub_1AFFC9BB8();
  if (aBlock[0])
  {
    id v16 = 0;
  }
  else
  {
    id v17 = objc_allocWithZone(MEMORY[0x1E4F7E3A8]);
    uint64_t v18 = (void *)sub_1AFFCAE68();
    uint64_t v19 = (void *)sub_1AFFCAE68();
    id v16 = objc_msgSend(v17, sel_initWithGroupName_cacheControlKey_, v18, v19);
  }
  id v20 = *(void **)(a5 + 16);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1AFFD05F0;
  *(void *)(v21 + 32) = v6;
  *(void *)(v21 + 40) = v8;
  sub_1AFFC8E38();
  uint64_t v22 = (void *)sub_1AFFCB1B8();
  swift_bridgeObjectRelease();
  sub_1AFDF461C(0, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB320]);
  uint64_t v23 = (void *)sub_1AFFCAC78();
  swift_bridgeObjectRelease();
  uint64_t v24 = (void *)swift_allocObject();
  v24[2] = a1;
  v24[3] = a2;
  v24[4] = a3;
  v24[5] = a4;
  v24[6] = v6;
  v24[7] = v8;
  aBlock[4] = sub_1AFEAF058;
  aBlock[5] = v24;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1AFE5910C;
  aBlock[3] = &block_descriptor_24;
  unint64_t v25 = _Block_copy(aBlock);
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  swift_release();
  objc_msgSend(v20, sel_fetchRecordTreeWithRootIDs_branchKeysByRecordType_cachePolicy_edgeCacheHint_completion_, v22, v23, v26, v16, v25);
  _Block_release(v25);
}

uint64_t sub_1AFEAE950(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v3 = v2;
  if (qword_1EB811050 != -1) {
    swift_once();
  }
  sub_1AFEAF0BC(&qword_1EB810F90, v1, (void (*)(uint64_t))type metadata accessor for ForYouConfigRecordService);
  sub_1AFFC9BB8();
  uint64_t v4 = v9;
  uint64_t v5 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0) {
    uint64_t v5 = v9 & 0xFFFFFFFFFFFFLL;
  }
  if (!v5)
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = v3[6];
    uint64_t v7 = v3[7];
    __swift_project_boxed_opaque_existential_1(v3 + 3, v6);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v7 + 8))(&v9, v6, v7);
    uint64_t v4 = v11;
    sub_1AFFC8E38();
    sub_1AFD55D10((uint64_t)&v9);
  }
  return v4;
}

void sub_1AFEAEAB8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void (*a5)(void *), uint64_t a6, uint64_t a7, uint64_t a8)
{
  v32[0] = a3;
  uint64_t v13 = (int *)type metadata accessor for ForYouConfigRecord(0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (void *)((char *)v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)v32 - v17;
  if (a2)
  {
    swift_getErrorValue();
    uint64_t v19 = v32[2];
    id v20 = a2;
    if (sub_1AFE9DC24(v19))
    {
      sub_1AFD2C4F4();
      uint64_t v21 = (void *)sub_1AFFCB638();
      sub_1AFFCB478();
      uint64_t v22 = MEMORY[0x1E4FBC860];
      sub_1AFFCA878();

      uint64_t v23 = (void *)((char *)v15 + v13[5]);
      type metadata accessor for ForYouConfigRecord.Configuration.TopStories(0);
      sub_1AFFC98E8();
      *uint64_t v23 = v22;
      *uint64_t v15 = 0x676E697373696DLL;
      v15[1] = 0xE700000000000000;
      *(void *)((char *)v15 + v13[6]) = v22;
      uint64_t v24 = (void *)((char *)v15 + v13[7]);
      void *v24 = 0;
      v24[1] = 0xE000000000000000;
      *(void *)((char *)v15 + v13[8]) = v22;
      ((void (*)(void *))v32[0])(v15);

      sub_1AFEAF104((uint64_t)v15);
    }
    else
    {
      a5(a2);
    }
  }
  else
  {
    if (*(void *)(a1 + 16))
    {
      sub_1AFFC8E38();
      unint64_t v25 = sub_1AFD79CC8(a7, a8);
      if (v26)
      {
        uint64_t v27 = (uint64_t *)(*(void *)(a1 + 56) + 16 * v25);
        uint64_t v28 = *v27;
        unint64_t v29 = v27[1];
        sub_1AFD4B0E0(*v27, v29);
        swift_bridgeObjectRelease();
        sub_1AFFC9198();
        swift_allocObject();
        sub_1AFFC9188();
        sub_1AFEAF0BC((unint64_t *)&qword_1EB810EB8, 255, (void (*)(uint64_t))type metadata accessor for ForYouConfigRecord);
        sub_1AFFC9168();
        swift_release();
        ((void (*)(char *))v32[0])(v18);
        sub_1AFD4B504(v28, v29);
        sub_1AFEAF104((uint64_t)v18);
        return;
      }
      swift_bridgeObjectRelease();
    }
    sub_1AFEAF068();
    char v30 = (void *)swift_allocError();
    *unint64_t v31 = a7;
    v31[1] = a8;
    sub_1AFFC8E38();
    a5(v30);
  }
}

uint64_t sub_1AFEAEE2C()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ForYouConfigRecordService()
{
  return self;
}

uint64_t sub_1AFEAEE98()
{
  sub_1AFFC8E48();
  uint64_t v0 = sub_1AFFC9F78();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1AFEAEF18()
{
  return sub_1AFEAE478();
}

void sub_1AFEAEF20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1AFEAE4FC(a1, a2, a3, a4, v4);
}

void sub_1AFEAEF28(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1AFEAEF8C()
{
  if (!qword_1EB811248)
  {
    sub_1AFDF461C(255, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB320]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB811248);
    }
  }
}

uint64_t sub_1AFEAF010()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 64, 7);
}

void sub_1AFEAF058(uint64_t a1, void *a2)
{
  sub_1AFEAEAB8(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void (**)(void *))(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56));
}

unint64_t sub_1AFEAF068()
{
  unint64_t result = qword_1E9AFBF40;
  if (!qword_1E9AFBF40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBF40);
  }
  return result;
}

uint64_t sub_1AFEAF0BC(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AFEAF104(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ForYouConfigRecord(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for ForYouConfigRecordService.Errors()
{
  return &type metadata for ForYouConfigRecordService.Errors;
}

ValueMetadata *type metadata accessor for YahooSearchResponse()
{
  return &type metadata for YahooSearchResponse;
}

uint64_t sub_1AFEAF180(unsigned __int8 *a1, char *a2)
{
  return sub_1AFDEDC84(*a1, *a2);
}

uint64_t sub_1AFEAF18C()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFEAF280()
{
  sub_1AFFCAF68();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFEAF35C()
{
  return sub_1AFFCBE38();
}

uint64_t sub_1AFEAF44C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFEAFA78();
  *a1 = result;
  return result;
}

void sub_1AFEAF47C(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xED0000656D616E5FLL;
  uint64_t v3 = 0x65676E6168637865;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE400000000000000;
      uint64_t v3 = 1701869940;
      goto LABEL_3;
    case 2:
      *a1 = 0x616E5F74726F6873;
      a1[1] = 0xEA0000000000656DLL;
      break;
    case 3:
      *a1 = 1701667182;
      a1[1] = 0xE400000000000000;
      break;
    case 4:
      *a1 = 0x6C6F626D7973;
      a1[1] = 0xE600000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1AFEAF534()
{
  uint64_t result = 0x65676E6168637865;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1701869940;
      break;
    case 2:
      uint64_t result = 0x616E5F74726F6873;
      break;
    case 3:
      uint64_t result = 1701667182;
      break;
    case 4:
      uint64_t result = 0x6C6F626D7973;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1AFEAF5DC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFEAFA78();
  *a1 = result;
  return result;
}

uint64_t sub_1AFEAF604(uint64_t a1)
{
  unint64_t v2 = sub_1AFEB0C70();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFEAF640(uint64_t a1)
{
  unint64_t v2 = sub_1AFEB0C70();

  return MEMORY[0x1F41862B0](a1, v2);
}

__n128 sub_1AFEAF67C@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1AFEAFAC4(a1, (uint64_t *)v6);
  if (!v2)
  {
    long long v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 64) = v6[4];
    __n128 result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_1AFEAF6C8()
{
  return sub_1AFDF5A00();
}

uint64_t sub_1AFEAF6E0()
{
  return sub_1AFFCAF68();
}

uint64_t sub_1AFEAF6F8()
{
  return sub_1AFDF5A68();
}

uint64_t sub_1AFEAF710@<X0>(BOOL *a1@<X8>)
{
  return sub_1AFDF5AC0(a1);
}

void sub_1AFEAF71C(void *a1@<X8>)
{
  *a1 = 0x73746C75736572;
  a1[1] = 0xE700000000000000;
}

uint64_t sub_1AFEAF738()
{
  return 0x73746C75736572;
}

uint64_t sub_1AFEAF750@<X0>(BOOL *a1@<X8>)
{
  return sub_1AFDF5B38(a1);
}

uint64_t sub_1AFEAF75C(uint64_t a1)
{
  unint64_t v2 = sub_1AFEB06D0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFEAF798(uint64_t a1)
{
  unint64_t v2 = sub_1AFEB06D0();

  return MEMORY[0x1F41862B0](a1, v2);
}

void *sub_1AFEAF7D4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __n128 result = sub_1AFEAFEB4(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1AFEAF800()
{
  return sub_1AFDF5A00();
}

uint64_t sub_1AFEAF814()
{
  return sub_1AFFCAF68();
}

uint64_t sub_1AFEAF828()
{
  return sub_1AFDF5A68();
}

uint64_t sub_1AFEAF83C@<X0>(BOOL *a1@<X8>)
{
  return sub_1AFDF5AC0(a1);
}

void sub_1AFEAF848(void *a1@<X8>)
{
  *a1 = 0x746C75736572;
  a1[1] = 0xE600000000000000;
}

uint64_t sub_1AFEAF860()
{
  return 0x746C75736572;
}

uint64_t sub_1AFEAF874@<X0>(BOOL *a1@<X8>)
{
  return sub_1AFDF5B38(a1);
}

uint64_t sub_1AFEAF880(uint64_t a1)
{
  unint64_t v2 = sub_1AFEB08A0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFEAF8BC(uint64_t a1)
{
  unint64_t v2 = sub_1AFEB08A0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFEAF8F8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1AFEB005C(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1AFEAF924()
{
  return 0x65636E616E6966;
}

uint64_t sub_1AFEAF93C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x65636E616E6966 && a2 == 0xE700000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1AFFCBCE8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1AFEAF9D4(uint64_t a1)
{
  unint64_t v2 = sub_1AFEB04FC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFEAFA10(uint64_t a1)
{
  unint64_t v2 = sub_1AFEB04FC();

  return MEMORY[0x1F41862B0](a1, v2);
}

void *sub_1AFEAFA4C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1AFEB0354(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1AFEAFA78()
{
  unint64_t v0 = sub_1AFFCBA78();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

uint64_t sub_1AFEAFAC4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1AFEB0C10(0, &qword_1E9AFBFF0, (void (*)(void))sub_1AFEB0C70);
  uint64_t v34 = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v8 = (char *)&v27 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFEB0C70();
  sub_1AFFCBE68();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  char v39 = 0;
  uint64_t v10 = sub_1AFFCBB18();
  uint64_t v12 = v11;
  char v38 = 1;
  sub_1AFFC8E38();
  uint64_t v13 = sub_1AFFCBAA8();
  uint64_t v15 = v14;
  uint64_t v33 = v13;
  char v37 = 2;
  sub_1AFFC8E38();
  uint64_t v16 = sub_1AFFCBAA8();
  uint64_t v18 = v17;
  uint64_t v30 = v16;
  char v36 = 3;
  sub_1AFFC8E38();
  uint64_t v31 = 0;
  uint64_t v32 = v18;
  uint64_t v28 = sub_1AFFCBB18();
  uint64_t v29 = v19;
  char v35 = 4;
  sub_1AFFC8E38();
  uint64_t v20 = sub_1AFFCBB18();
  uint64_t v22 = v21;
  uint64_t v23 = *(void (**)(char *, uint64_t))(v9 + 8);
  uint64_t v31 = v20;
  v23(v8, v34);
  sub_1AFFC8E38();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  uint64_t v24 = v32;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v25 = v29;
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v28;
  a2[1] = v25;
  a2[2] = v31;
  a2[3] = v22;
  a2[4] = v10;
  a2[5] = v12;
  a2[6] = v33;
  a2[7] = v15;
  a2[8] = v30;
  a2[9] = v24;
  return result;
}

void *sub_1AFEAFEB4(void *a1)
{
  sub_1AFEB0C10(0, &qword_1E9AFBF78, (void (*)(void))sub_1AFEB06D0);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v11 - v6;
  unint64_t v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFEB06D0();
  uint64_t v9 = v8;
  sub_1AFFCBE68();
  if (!v1)
  {
    sub_1AFEB0724();
    sub_1AFFCBB58();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v9 = (void *)v11[1];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v9;
}

uint64_t sub_1AFEB005C(void *a1)
{
  sub_1AFEB0C10(0, &qword_1E9AFBFA8, (void (*)(void))sub_1AFEB08A0);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v10 - v6;
  uint64_t v8 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  sub_1AFEB08A0();
  sub_1AFFCBE68();
  if (!v1)
  {
    sub_1AFEB09D4(0, &qword_1E9AFBFB8, MEMORY[0x1E4FBB320]);
    sub_1AFEB08F4();
    sub_1AFFCBB58();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v8 = v11;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v8;
}

void *sub_1AFEB0354(void *a1)
{
  sub_1AFEB0C10(0, &qword_1E9AFBF48, (void (*)(void))sub_1AFEB04FC);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v11 - v6;
  uint64_t v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFEB04FC();
  uint64_t v9 = v8;
  sub_1AFFCBE68();
  if (!v1)
  {
    sub_1AFEB0550();
    sub_1AFFCBB58();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v9 = (void *)v11[1];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v9;
}

unint64_t sub_1AFEB04FC()
{
  unint64_t result = qword_1E9AFBF50;
  if (!qword_1E9AFBF50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBF50);
  }
  return result;
}

unint64_t sub_1AFEB0550()
{
  unint64_t result = qword_1E9AFBF58;
  if (!qword_1E9AFBF58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBF58);
  }
  return result;
}

ValueMetadata *type metadata accessor for YahooSearchResponse.CodingKeys()
{
  return &type metadata for YahooSearchResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for YahooSearchResponse.Finance()
{
  return &type metadata for YahooSearchResponse.Finance;
}

unint64_t sub_1AFEB05CC()
{
  unint64_t result = qword_1E9AFBF60;
  if (!qword_1E9AFBF60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBF60);
  }
  return result;
}

unint64_t sub_1AFEB0624()
{
  unint64_t result = qword_1E9AFBF68;
  if (!qword_1E9AFBF68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBF68);
  }
  return result;
}

unint64_t sub_1AFEB067C()
{
  unint64_t result = qword_1E9AFBF70;
  if (!qword_1E9AFBF70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBF70);
  }
  return result;
}

unint64_t sub_1AFEB06D0()
{
  unint64_t result = qword_1E9AFBF80;
  if (!qword_1E9AFBF80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBF80);
  }
  return result;
}

unint64_t sub_1AFEB0724()
{
  unint64_t result = qword_1E9AFBF88;
  if (!qword_1E9AFBF88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBF88);
  }
  return result;
}

ValueMetadata *type metadata accessor for YahooSearchResponse.Finance.CodingKeys()
{
  return &type metadata for YahooSearchResponse.Finance.CodingKeys;
}

ValueMetadata *type metadata accessor for YahooSearchResponse.Results()
{
  return &type metadata for YahooSearchResponse.Results;
}

unint64_t sub_1AFEB079C()
{
  unint64_t result = qword_1E9AFBF90;
  if (!qword_1E9AFBF90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBF90);
  }
  return result;
}

unint64_t sub_1AFEB07F4()
{
  unint64_t result = qword_1E9AFBF98;
  if (!qword_1E9AFBF98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBF98);
  }
  return result;
}

unint64_t sub_1AFEB084C()
{
  unint64_t result = qword_1E9AFBFA0;
  if (!qword_1E9AFBFA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBFA0);
  }
  return result;
}

unint64_t sub_1AFEB08A0()
{
  unint64_t result = qword_1E9AFBFB0;
  if (!qword_1E9AFBFB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBFB0);
  }
  return result;
}

unint64_t sub_1AFEB08F4()
{
  unint64_t result = qword_1E9AFBFC0;
  if (!qword_1E9AFBFC0)
  {
    sub_1AFEB09D4(255, &qword_1E9AFBFB8, MEMORY[0x1E4FBB320]);
    sub_1AFEB0980();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBFC0);
  }
  return result;
}

unint64_t sub_1AFEB0980()
{
  unint64_t result = qword_1E9AFBFC8;
  if (!qword_1E9AFBFC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBFC8);
  }
  return result;
}

void sub_1AFEB09D4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, ValueMetadata *))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, &type metadata for YahooSearchResponse.Stock);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unsigned char *_s10StocksCore19YahooSearchResponseV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1AFEB0AC0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for YahooSearchResponse.Results.CodingKeys()
{
  return &type metadata for YahooSearchResponse.Results.CodingKeys;
}

ValueMetadata *type metadata accessor for YahooSearchResponse.Stock()
{
  return &type metadata for YahooSearchResponse.Stock;
}

unint64_t sub_1AFEB0B0C()
{
  unint64_t result = qword_1E9AFBFD8;
  if (!qword_1E9AFBFD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBFD8);
  }
  return result;
}

unint64_t sub_1AFEB0B64()
{
  unint64_t result = qword_1E9AFBFE0;
  if (!qword_1E9AFBFE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBFE0);
  }
  return result;
}

unint64_t sub_1AFEB0BBC()
{
  unint64_t result = qword_1E9AFBFE8;
  if (!qword_1E9AFBFE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBFE8);
  }
  return result;
}

void sub_1AFEB0C10(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  if (!*a2)
  {
    a3();
    unint64_t v4 = sub_1AFFCBB78();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_1AFEB0C70()
{
  unint64_t result = qword_1E9AFBFF8;
  if (!qword_1E9AFBFF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFBFF8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for YahooSearchResponse.Stock.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFEB0D90);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for YahooSearchResponse.Stock.CodingKeys()
{
  return &type metadata for YahooSearchResponse.Stock.CodingKeys;
}

unint64_t sub_1AFEB0DCC()
{
  unint64_t result = qword_1E9AFC000;
  if (!qword_1E9AFC000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC000);
  }
  return result;
}

unint64_t sub_1AFEB0E24()
{
  unint64_t result = qword_1E9AFC008;
  if (!qword_1E9AFC008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC008);
  }
  return result;
}

unint64_t sub_1AFEB0E7C()
{
  unint64_t result = qword_1E9AFC010;
  if (!qword_1E9AFC010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC010);
  }
  return result;
}

uint64_t sub_1AFEB0ED0()
{
  sub_1AFD2CF70(v0, (uint64_t)v2);
  sub_1AFD2CF70((uint64_t)v2, (uint64_t)v3);
  sub_1AFD2D15C((uint64_t)v3);
  sub_1AFD2D168((uint64_t)v3);
  return swift_unknownObjectRetain();
}

uint64_t sub_1AFEB0F24()
{
  return sub_1AFEB10E8((SEL *)&selRef_identifier);
}

uint64_t sub_1AFEB0F30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  sub_1AFD2CF70(v3, (uint64_t)v10);
  sub_1AFD2CF70((uint64_t)v10, (uint64_t)v11);
  if (sub_1AFD2D15C((uint64_t)v11) == 1)
  {
    sub_1AFD2D168((uint64_t)v11);
    uint64_t v8 = a1;
    sub_1AFD2D44C((uint64_t)&v8);
    sub_1AFD2CF70((uint64_t)&v8, a2);
  }
  else
  {
    unsigned int v6 = (const void *)(sub_1AFD2D168((uint64_t)v11) + 8);
    uint64_t v8 = a1;
    memmove(&v9, v6, 0x88uLL);
    sub_1AFD2D460((uint64_t)&v8);
    sub_1AFD2CF70((uint64_t)&v8, a2);
    sub_1AFD2D470((uint64_t)v6);
  }
  return swift_unknownObjectRetain();
}

uint64_t sub_1AFEB0FFC()
{
  sub_1AFD2CF70(v0, (uint64_t)v6);
  sub_1AFD2CF70((uint64_t)v6, (uint64_t)v7);
  sub_1AFD2D15C((uint64_t)v7);
  uint64_t v1 = *(void **)sub_1AFD2D168((uint64_t)v7);
  if ((objc_msgSend(v1, sel_respondsToSelector_, sel_stocksFields) & 1) == 0) {
    return 0;
  }
  id v2 = objc_msgSend(v1, sel_stocksFields);
  uint64_t v3 = (uint64_t)v2;
  if (v2)
  {
    id v4 = objc_msgSend(v2, sel_stocksClusterID);
    swift_unknownObjectRelease();
    if (v4)
    {
      uint64_t v3 = sub_1AFFCAE98();

      return v3;
    }
    return 0;
  }
  return v3;
}

uint64_t sub_1AFEB10DC()
{
  return sub_1AFEB10E8((SEL *)&selRef_articleID);
}

uint64_t sub_1AFEB10E8(SEL *a1)
{
  sub_1AFD2CF70(v1, (uint64_t)v6);
  sub_1AFD2CF70((uint64_t)v6, (uint64_t)v7);
  sub_1AFD2D15C((uint64_t)v7);
  id v3 = [*(id *)sub_1AFD2D168((uint64_t)v7) *a1];
  uint64_t v4 = sub_1AFFCAE98();

  return v4;
}

uint64_t sub_1AFEB1170()
{
  return sub_1AFEB1188((SEL *)&selRef_title);
}

uint64_t sub_1AFEB117C()
{
  return sub_1AFEB1188((SEL *)&selRef_sourceChannelID);
}

uint64_t sub_1AFEB1188(SEL *a1)
{
  sub_1AFD2CF70(v1, (uint64_t)v7);
  sub_1AFD2CF70((uint64_t)v7, (uint64_t)v8);
  sub_1AFD2D15C((uint64_t)v8);
  id v3 = [*(id *)sub_1AFD2D168((uint64_t)v8) *a1];
  if (!v3) {
    return 0;
  }
  uint64_t v4 = v3;
  uint64_t v5 = sub_1AFFCAE98();

  return v5;
}

id sub_1AFEB1220()
{
  sub_1AFD2CF70(v0, (uint64_t)v3);
  sub_1AFD2CF70((uint64_t)v3, (uint64_t)v4);
  sub_1AFD2D15C((uint64_t)v4);
  uint64_t v1 = *(void **)sub_1AFD2D168((uint64_t)v4);
  if (objc_msgSend(v1, sel_respondsToSelector_, sel_hasAudioTrack)) {
    return objc_msgSend(v1, sel_hasAudioTrack);
  }
  else {
    return 0;
  }
}

id sub_1AFEB12A8()
{
  sub_1AFD2CF70(v0, (uint64_t)v2);
  sub_1AFD2CF70((uint64_t)v2, (uint64_t)v3);
  sub_1AFD2D15C((uint64_t)v3);
  return objc_msgSend(*(id *)sub_1AFD2D168((uint64_t)v3), sel_hasThumbnail);
}

uint64_t sub_1AFEB1304()
{
  sub_1AFD2CF70(v0, (uint64_t)v5);
  sub_1AFD2CF70((uint64_t)v5, (uint64_t)v6);
  sub_1AFD2D15C((uint64_t)v6);
  if ((objc_msgSend(*(id *)sub_1AFD2D168((uint64_t)v6), sel_respondsToSelector_, sel_narrativeTrackPreferredUpsellVariantID) & 1) == 0)return 0; {
  id v1 = objc_msgSend((id)swift_unknownObjectRetain(), sel_narrativeTrackPreferredUpsellVariantID);
  }
  if (!v1)
  {
    swift_unknownObjectRelease();
    return 0;
  }
  id v2 = v1;
  uint64_t v3 = sub_1AFFCAE98();

  swift_unknownObjectRelease();
  return v3;
}

uint64_t sub_1AFEB13D4()
{
  sub_1AFD2CF70(v0, (uint64_t)v4);
  sub_1AFD2CF70((uint64_t)v4, (uint64_t)v5);
  sub_1AFD2D15C((uint64_t)v5);
  id v1 = objc_msgSend(*(id *)sub_1AFD2D168((uint64_t)v5), sel_identifier);
  uint64_t v2 = sub_1AFFCAE98();

  return v2;
}

uint64_t sub_1AFEB1464()
{
  sub_1AFD2CF70(v0, (uint64_t)v4);
  sub_1AFD2CF70((uint64_t)v4, (uint64_t)v5);
  sub_1AFD2D15C((uint64_t)v5);
  id v1 = *(void **)sub_1AFD2D168((uint64_t)v5);
  sub_1AFD2D03C(v4, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
  id v2 = objc_msgSend(v1, sel_identifier);
  sub_1AFFCAE98();

  sub_1AFD2D03C(v4, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2D0A0);
  sub_1AFFCAF68();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFEB1544()
{
  sub_1AFD2CF70(v0, (uint64_t)v4);
  sub_1AFFCBDF8();
  sub_1AFD2CF70((uint64_t)v4, (uint64_t)v5);
  sub_1AFD2D15C((uint64_t)v5);
  id v1 = *(void **)sub_1AFD2D168((uint64_t)v5);
  sub_1AFD2D03C(v4, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
  id v2 = objc_msgSend(v1, sel_identifier);
  sub_1AFFCAE98();

  sub_1AFD2D03C(v4, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2D0A0);
  sub_1AFFCAF68();
  swift_bridgeObjectRelease();
  return sub_1AFFCBE38();
}

uint64_t sub_1AFEB162C()
{
  sub_1AFD2CF70(v0, (uint64_t)v4);
  sub_1AFFCBDF8();
  sub_1AFD2CF70((uint64_t)v4, (uint64_t)v5);
  sub_1AFD2D15C((uint64_t)v5);
  id v1 = *(void **)sub_1AFD2D168((uint64_t)v5);
  sub_1AFD2D03C(v4, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
  id v2 = objc_msgSend(v1, sel_identifier);
  sub_1AFFCAE98();

  sub_1AFD2D03C(v4, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2D0A0);
  sub_1AFFCAF68();
  swift_bridgeObjectRelease();
  return sub_1AFFCBE38();
}

uint64_t sub_1AFEB1714()
{
  sub_1AFD2CF70(v0, (uint64_t)v4);
  sub_1AFD2CF70((uint64_t)v4, (uint64_t)v5);
  sub_1AFD2D15C((uint64_t)v5);
  id v1 = *(void **)sub_1AFD2D168((uint64_t)v5);
  sub_1AFD2D03C(v4, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
  id v2 = objc_msgSend(v1, sel_identifier);
  sub_1AFFCAE98();

  sub_1AFD2D03C(v4, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2D0A0);
  sub_1AFFCAF68();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFEB17F4()
{
  sub_1AFD2CF70(v0, (uint64_t)v4);
  sub_1AFFCBDF8();
  sub_1AFD2CF70((uint64_t)v4, (uint64_t)v5);
  sub_1AFD2D15C((uint64_t)v5);
  id v1 = *(void **)sub_1AFD2D168((uint64_t)v5);
  sub_1AFD2D03C(v4, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
  id v2 = objc_msgSend(v1, sel_identifier);
  sub_1AFFCAE98();

  sub_1AFD2D03C(v4, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2D0A0);
  sub_1AFFCAF68();
  swift_bridgeObjectRelease();
  return sub_1AFFCBE38();
}

uint64_t sub_1AFEB18E0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    sub_1AFFCB8B8();
    uint64_t v4 = a1 + 32;
    for (uint64_t i = v2 - 1; ; --i)
    {
      sub_1AFD2CF70(v4, (uint64_t)v6);
      sub_1AFD2CF70((uint64_t)v6, (uint64_t)v7);
      sub_1AFD2D15C((uint64_t)v7);
      sub_1AFD2D168((uint64_t)v7);
      swift_unknownObjectRetain();
      sub_1AFFCB888();
      sub_1AFFCB8C8();
      sub_1AFFCB8D8();
      sub_1AFFCB898();
      if (!i) {
        break;
      }
      v4 += 144;
    }
    return v8;
  }
  return result;
}

uint64_t sub_1AFEB19B0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v2 = a1;
    uint64_t v3 = a1 + 32;
    sub_1AFFC8E38();
    sub_1AFD2CF70(v3, (uint64_t)v35);
    uint64_t v4 = (void *)MEMORY[0x1E4FBC868];
    uint64_t v5 = &off_1E5FA5000;
    uint64_t v6 = 1;
    while (2)
    {
      uint64_t v7 = v3 + 144 * v6;
      while (1)
      {
        sub_1AFD2CF70((uint64_t)v35, (uint64_t)v36);
        sub_1AFD2D15C((uint64_t)v36);
        uint64_t v8 = *(void **)sub_1AFD2D168((uint64_t)v36);
        sub_1AFD2D03C(v35, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
        id v9 = objc_msgSend(v8, sel_scoreProfile);
        if (v9) {
          break;
        }
        sub_1AFD2D03C(v35, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2D0A0);
        if (v1 == v6) {
          goto LABEL_24;
        }
        sub_1AFD2CF70(v7, (uint64_t)v35);
        v7 += 144;
        BOOL v10 = __OFADD__(v6++, 1);
        if (v10) {
          goto LABEL_23;
        }
      }
      id v11 = v9;
      uint64_t v31 = v3;
      uint64_t v32 = v2;
      sub_1AFD2CF70((uint64_t)v35, (uint64_t)v34);
      sub_1AFD2D15C((uint64_t)v34);
      id v12 = [*(id *)sub_1AFD2D168((uint64_t)v34) (SEL)v5[381]];
      uint64_t v13 = sub_1AFFCAE98();
      uint64_t v15 = v14;

      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v33 = v13;
      unint64_t v18 = sub_1AFD79CC8(v13, v15);
      uint64_t v19 = v4[2];
      BOOL v20 = (v17 & 1) == 0;
      uint64_t v21 = v19 + v20;
      if (__OFADD__(v19, v20))
      {
        __break(1u);
LABEL_28:
        __break(1u);
        goto LABEL_29;
      }
      char v22 = v17;
      if (v4[3] < v21)
      {
        sub_1AFEB5100(v21, isUniquelyReferenced_nonNull_native);
        unint64_t v23 = sub_1AFD79CC8(v33, v15);
        if ((v22 & 1) != (v24 & 1))
        {
LABEL_29:
          uint64_t result = sub_1AFFCBD68();
          __break(1u);
          return result;
        }
        unint64_t v18 = v23;
        if ((v22 & 1) == 0) {
          goto LABEL_18;
        }
LABEL_16:
        uint64_t v25 = v4[7];
        uint64_t v26 = 8 * v18;

        *(void *)(v25 + v26) = v11;
        goto LABEL_20;
      }
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v17) {
          goto LABEL_16;
        }
      }
      else
      {
        sub_1AFEB9D7C();
        if (v22) {
          goto LABEL_16;
        }
      }
LABEL_18:
      v4[(v18 >> 6) + 8] |= 1 << v18;
      uint64_t v27 = (uint64_t *)(v4[6] + 16 * v18);
      *uint64_t v27 = v33;
      v27[1] = v15;
      *(void *)(v4[7] + 8 * v18) = v11;
      uint64_t v28 = v4[2];
      BOOL v10 = __OFADD__(v28, 1);
      uint64_t v29 = v28 + 1;
      if (!v10)
      {
        void v4[2] = v29;
        sub_1AFFC8E38();
LABEL_20:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1AFD2D03C(v35, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2D0A0);
        uint64_t v3 = v31;
        uint64_t v2 = v32;
        uint64_t v5 = &off_1E5FA5000;
        if (v1 != v6)
        {
          sub_1AFD2CF70(v7, (uint64_t)v35);
          BOOL v10 = __OFADD__(v6++, 1);
          if (!v10) {
            continue;
          }
LABEL_23:
          __break(1u);
        }
LABEL_24:
        swift_bridgeObjectRelease();
        return (uint64_t)v4;
      }
      goto LABEL_28;
    }
  }
  return MEMORY[0x1E4FBC868];
}

uint64_t sub_1AFEB1C98(uint64_t a1, uint64_t a2)
{
  return sub_1AFE06F74(a2);
}

uint64_t sub_1AFEB1CD0(uint64_t a1, char a2)
{
  return sub_1AFEB1D08(a1, a2, (unint64_t *)&unk_1EB811A68, (uint64_t)&unk_1EB811A50, (uint64_t)&protocolRef_FCHeadlineMetadata);
}

uint64_t sub_1AFEB1CEC(uint64_t a1, char a2)
{
  return sub_1AFEB1D08(a1, a2, &qword_1EB811A78, (uint64_t)&qword_1EB818100, (uint64_t)&protocolRef_FCHeadlineProviding);
}

uint64_t sub_1AFEB1D08(uint64_t a1, char a2, unint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v8 = *v5;
  sub_1AFEBC670(0, a3, a4, a5, (void (*)(uint64_t, uint64_t, uint64_t))sub_1AFD2D178);
  char v40 = a2;
  uint64_t v9 = sub_1AFFCB9E8();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_38;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  char v38 = v5;
  uint64_t v39 = v8 + 64;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & *(void *)(v8 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 64;
  uint64_t result = sub_1AFFC8E48();
  int64_t v17 = 0;
  while (1)
  {
    if (v13)
    {
      unint64_t v23 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v24 = v23 | (v17 << 6);
      goto LABEL_21;
    }
    if (__OFADD__(v17++, 1)) {
      goto LABEL_40;
    }
    if (v17 >= v14) {
      break;
    }
    uint64_t v26 = (void *)(v8 + 64);
    unint64_t v27 = *(void *)(v39 + 8 * v17);
    if (!v27)
    {
      int64_t v28 = v17 + 1;
      if (v17 + 1 >= v14)
      {
LABEL_31:
        swift_release();
        uint64_t v6 = v38;
        if ((v40 & 1) == 0) {
          goto LABEL_38;
        }
        goto LABEL_34;
      }
      unint64_t v27 = *(void *)(v39 + 8 * v28);
      if (!v27)
      {
        while (1)
        {
          int64_t v17 = v28 + 1;
          if (__OFADD__(v28, 1)) {
            break;
          }
          if (v17 >= v14) {
            goto LABEL_31;
          }
          unint64_t v27 = *(void *)(v39 + 8 * v17);
          ++v28;
          if (v27) {
            goto LABEL_20;
          }
        }
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        return result;
      }
      ++v17;
    }
LABEL_20:
    unint64_t v13 = (v27 - 1) & v27;
    unint64_t v24 = __clz(__rbit64(v27)) + (v17 << 6);
LABEL_21:
    uint64_t v29 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v24);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v8 + 56) + 8 * v24);
    if ((v40 & 1) == 0)
    {
      sub_1AFFC8E38();
      swift_unknownObjectRetain();
    }
    sub_1AFFCBDF8();
    sub_1AFFCAF68();
    uint64_t result = sub_1AFFCBE38();
    uint64_t v18 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v19 = result & ~v18;
    unint64_t v20 = v19 >> 6;
    if (((-1 << v19) & ~*(void *)(v15 + 8 * (v19 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v19) & ~*(void *)(v15 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v33 = 0;
      unint64_t v34 = (unint64_t)(63 - v18) >> 6;
      do
      {
        if (++v20 == v34 && (v33 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v35 = v20 == v34;
        if (v20 == v34) {
          unint64_t v20 = 0;
        }
        v33 |= v35;
        uint64_t v36 = *(void *)(v15 + 8 * v20);
      }
      while (v36 == -1);
      unint64_t v21 = __clz(__rbit64(~v36)) + (v20 << 6);
    }
    *(void *)(v15 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    char v22 = (void *)(*(void *)(v10 + 48) + 16 * v21);
    *char v22 = v31;
    v22[1] = v30;
    *(void *)(*(void *)(v10 + 56) + 8 * v21) = v32;
    ++*(void *)(v10 + 16);
  }
  swift_release();
  uint64_t v6 = v38;
  uint64_t v26 = (void *)(v8 + 64);
  if ((v40 & 1) == 0) {
    goto LABEL_38;
  }
LABEL_34:
  uint64_t v37 = 1 << *(unsigned char *)(v8 + 32);
  if (v37 >= 64) {
    bzero(v26, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v26 = -1 << v37;
  }
  *(void *)(v8 + 16) = 0;
LABEL_38:
  uint64_t result = swift_release();
  *uint64_t v6 = v10;
  return result;
}

uint64_t sub_1AFEB2018(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1AFE05518(0, (unint64_t *)&qword_1EB819F00);
  char v42 = a2;
  uint64_t v6 = sub_1AFFCB9E8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = sub_1AFFC8E48();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40) {
      break;
    }
    unint64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v40) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v41 + 8 * v13);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v39;
          if ((v42 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v13 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v40) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v41 + 8 * v13);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    uint64_t v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    BOOL v35 = (uint64_t *)(*(void *)(v5 + 56) + v31);
    uint64_t v36 = *v35;
    uint64_t v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      sub_1AFFC8E38();
      sub_1AFFC8E38();
    }
    sub_1AFFCBDF8();
    sub_1AFFCAF68();
    uint64_t result = sub_1AFFCBE38();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v16 == v28;
        if (v16 == v28) {
          unint64_t v16 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 16 * v17;
    unint64_t v19 = (void *)(*(void *)(v7 + 48) + v18);
    *unint64_t v19 = v34;
    v19[1] = v33;
    unint64_t v20 = (void *)(*(void *)(v7 + 56) + v18);
    *unint64_t v20 = v36;
    v20[1] = v37;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  unint64_t v24 = (void *)(v5 + 64);
  if ((v42 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v24 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1AFEB234C(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for QuoteDetail();
  uint64_t v42 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_1AFEBBC48(0, (unint64_t *)&unk_1EB8181D0, (void (*)(uint64_t))type metadata accessor for QuoteDetail);
  int v43 = a2;
  uint64_t v9 = sub_1AFFCB9E8();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  uint64_t v41 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  uint64_t v39 = v2;
  int64_t v40 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 64;
  uint64_t result = sub_1AFFC8E48();
  int64_t v17 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v40) {
      break;
    }
    int64_t v23 = v41;
    unint64_t v24 = v41[v22];
    ++v17;
    if (!v24)
    {
      int64_t v17 = v22 + 1;
      if (v22 + 1 >= v40) {
        goto LABEL_34;
      }
      unint64_t v24 = v41[v17];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v40)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v39;
          if ((v43 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v24 = v41[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v17 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v40) {
              goto LABEL_34;
            }
            unint64_t v24 = v41[v17];
            ++v25;
            if (v24) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v25;
      }
    }
LABEL_21:
    unint64_t v14 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    int64_t v26 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v21);
    uint64_t v28 = *v26;
    uint64_t v27 = v26[1];
    uint64_t v29 = *(void *)(v42 + 72);
    uint64_t v30 = *(void *)(v8 + 56) + v29 * v21;
    if (v43)
    {
      sub_1AFEBBCAC(v30, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for QuoteDetail);
    }
    else
    {
      sub_1AFEBC5BC(v30, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for QuoteDetail);
      sub_1AFFC8E38();
    }
    sub_1AFFCBDF8();
    sub_1AFFCAF68();
    uint64_t result = sub_1AFFCBE38();
    uint64_t v31 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v15 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v18 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    unint64_t v19 = (void *)(*(void *)(v10 + 48) + 16 * v18);
    *unint64_t v19 = v28;
    v19[1] = v27;
    uint64_t result = sub_1AFEBBCAC((uint64_t)v7, *(void *)(v10 + 56) + v29 * v18, (uint64_t (*)(void))type metadata accessor for QuoteDetail);
    ++*(void *)(v10 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  int64_t v23 = v41;
  if ((v43 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v8 + 32);
  if (v38 >= 64) {
    bzero(v23, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v23 = -1 << v38;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_1AFEB2744(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for Quote();
  uint64_t v42 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_1AFEBBC48(0, &qword_1EB818208, (void (*)(uint64_t))type metadata accessor for Quote);
  int v43 = a2;
  uint64_t v9 = sub_1AFFCB9E8();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  uint64_t v41 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  uint64_t v39 = v2;
  int64_t v40 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 64;
  uint64_t result = sub_1AFFC8E48();
  int64_t v17 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v40) {
      break;
    }
    int64_t v23 = v41;
    unint64_t v24 = v41[v22];
    ++v17;
    if (!v24)
    {
      int64_t v17 = v22 + 1;
      if (v22 + 1 >= v40) {
        goto LABEL_34;
      }
      unint64_t v24 = v41[v17];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v40)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v39;
          if ((v43 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v24 = v41[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v17 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v40) {
              goto LABEL_34;
            }
            unint64_t v24 = v41[v17];
            ++v25;
            if (v24) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v25;
      }
    }
LABEL_21:
    unint64_t v14 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    int64_t v26 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v21);
    uint64_t v28 = *v26;
    uint64_t v27 = v26[1];
    uint64_t v29 = *(void *)(v42 + 72);
    uint64_t v30 = *(void *)(v8 + 56) + v29 * v21;
    if (v43)
    {
      sub_1AFEBBCAC(v30, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for Quote);
    }
    else
    {
      sub_1AFEBC5BC(v30, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for Quote);
      sub_1AFFC8E38();
    }
    sub_1AFFCBDF8();
    sub_1AFFCAF68();
    uint64_t result = sub_1AFFCBE38();
    uint64_t v31 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v15 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v18 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    unint64_t v19 = (void *)(*(void *)(v10 + 48) + 16 * v18);
    *unint64_t v19 = v28;
    v19[1] = v27;
    uint64_t result = sub_1AFEBBCAC((uint64_t)v7, *(void *)(v10 + 56) + v29 * v18, (uint64_t (*)(void))type metadata accessor for Quote);
    ++*(void *)(v10 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  int64_t v23 = v41;
  if ((v43 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v8 + 32);
  if (v38 >= 64) {
    bzero(v23, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v23 = -1 << v38;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_1AFEB2B3C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1AFE05518(0, &qword_1EB818210);
  char v50 = a2;
  uint64_t v6 = sub_1AFFCB9E8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  long long v48 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  long long v46 = v2;
  int64_t v47 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = sub_1AFFC8E48();
  int64_t v13 = 0;
  for (i = v5; ; uint64_t v5 = i)
  {
    if (v10)
    {
      unint64_t v17 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v18 = v17 | (v13 << 6);
      if (v50) {
        goto LABEL_10;
      }
      goto LABEL_23;
    }
    int64_t v26 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v26 >= v47) {
      break;
    }
    uint64_t v27 = v48;
    unint64_t v28 = v48[v26];
    ++v13;
    if (!v28)
    {
      int64_t v13 = v26 + 1;
      if (v26 + 1 >= v47) {
        goto LABEL_33;
      }
      unint64_t v28 = v48[v13];
      if (!v28)
      {
        int64_t v29 = v26 + 2;
        if (v29 >= v47)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v46;
          if ((v50 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v28 = v48[v29];
        if (!v28)
        {
          while (1)
          {
            int64_t v13 = v29 + 1;
            if (__OFADD__(v29, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v47) {
              goto LABEL_33;
            }
            unint64_t v28 = v48[v13];
            ++v29;
            if (v28) {
              goto LABEL_22;
            }
          }
        }
        int64_t v13 = v29;
      }
    }
LABEL_22:
    unint64_t v10 = (v28 - 1) & v28;
    unint64_t v18 = __clz(__rbit64(v28)) + (v13 << 6);
    if (v50)
    {
LABEL_10:
      unint64_t v19 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v18);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      uint64_t v22 = *(void *)(v5 + 56) + 136 * v18;
      uint64_t v24 = *(void *)v22;
      uint64_t v23 = *(void *)(v22 + 8);
      uint64_t v25 = *(void *)(v22 + 24);
      uint64_t v51 = *(void *)(v22 + 40);
      uint64_t v52 = *(void *)(v22 + 16);
      uint64_t v53 = *(void *)(v22 + 56);
      uint64_t v54 = *(void *)(v22 + 32);
      char v56 = *(unsigned char *)(v22 + 64);
      uint64_t v55 = *(void *)(v22 + 80);
      uint64_t v61 = *(void *)(v22 + 88);
      uint64_t v57 = *(void *)(v22 + 48);
      uint64_t v58 = *(void *)(v22 + 96);
      uint64_t v59 = *(void *)(v22 + 72);
      uint64_t v60 = *(void *)(v22 + 112);
      uint64_t v63 = *(void *)(v22 + 104);
      uint64_t v64 = *(void *)(v22 + 120);
      uint64_t v62 = *(void *)(v22 + 128);
      goto LABEL_24;
    }
LABEL_23:
    uint64_t v30 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v18);
    uint64_t v20 = *v30;
    uint64_t v21 = v30[1];
    uint64_t v31 = *(void *)(v5 + 56) + 136 * v18;
    v65[0] = *(_OWORD *)v31;
    long long v32 = *(_OWORD *)(v31 + 64);
    long long v34 = *(_OWORD *)(v31 + 16);
    long long v33 = *(_OWORD *)(v31 + 32);
    long long v67 = *(_OWORD *)(v31 + 48);
    long long v68 = v32;
    v65[1] = v34;
    long long v66 = v33;
    long long v36 = *(_OWORD *)(v31 + 96);
    long long v35 = *(_OWORD *)(v31 + 112);
    long long v37 = *(_OWORD *)(v31 + 80);
    uint64_t v72 = *(void *)(v31 + 128);
    long long v70 = v36;
    long long v71 = v35;
    long long v69 = v37;
    uint64_t v62 = v72;
    uint64_t v63 = *((void *)&v36 + 1);
    uint64_t v64 = *((void *)&v35 + 1);
    uint64_t v60 = v35;
    uint64_t v61 = *((void *)&v37 + 1);
    uint64_t v58 = v36;
    uint64_t v59 = *((void *)&v68 + 1);
    char v56 = v68;
    uint64_t v57 = v67;
    uint64_t v25 = *((void *)&v34 + 1);
    uint64_t v54 = v66;
    uint64_t v55 = v37;
    uint64_t v51 = *((void *)&v66 + 1);
    uint64_t v23 = *((void *)&v65[0] + 1);
    uint64_t v52 = v34;
    uint64_t v53 = *((void *)&v67 + 1);
    uint64_t v24 = *(void *)&v65[0];
    sub_1AFFC8E38();
    sub_1AFD76370((uint64_t)v65);
LABEL_24:
    sub_1AFFCBDF8();
    sub_1AFFCAF68();
    uint64_t result = sub_1AFFCBE38();
    uint64_t v38 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v39 = result & ~v38;
    unint64_t v40 = v39 >> 6;
    if (((-1 << v39) & ~*(void *)(v11 + 8 * (v39 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v39) & ~*(void *)(v11 + 8 * (v39 >> 6)))) | v39 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v41 = 0;
      unint64_t v42 = (unint64_t)(63 - v38) >> 6;
      do
      {
        if (++v40 == v42 && (v41 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v43 = v40 == v42;
        if (v40 == v42) {
          unint64_t v40 = 0;
        }
        v41 |= v43;
        uint64_t v44 = *(void *)(v11 + 8 * v40);
      }
      while (v44 == -1);
      unint64_t v14 = __clz(__rbit64(~v44)) + (v40 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    uint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
    *uint64_t v15 = v20;
    v15[1] = v21;
    uint64_t v16 = *(void *)(v7 + 56) + 136 * v14;
    *(void *)uint64_t v16 = v24;
    *(void *)(v16 + 8) = v23;
    *(void *)(v16 + 16) = v52;
    *(void *)(v16 + 24) = v25;
    *(void *)(v16 + 32) = v54;
    *(void *)(v16 + 40) = v51;
    *(void *)(v16 + 48) = v57;
    *(void *)(v16 + 56) = v53;
    *(unsigned char *)(v16 + 64) = v56;
    *(void *)(v16 + 72) = v59;
    *(void *)(v16 + 80) = v55;
    *(void *)(v16 + 88) = v61;
    *(void *)(v16 + 96) = v58;
    *(void *)(v16 + 104) = v63;
    *(void *)(v16 + 112) = v60;
    *(void *)(v16 + 120) = v64;
    *(void *)(v16 + 128) = v62;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v46;
  uint64_t v27 = v48;
  if ((v50 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v45 = 1 << *(unsigned char *)(v5 + 32);
  if (v45 >= 64) {
    bzero(v27, ((unint64_t)(v45 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v27 = -1 << v45;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1AFEB2FCC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1AFE05518(0, &qword_1EB818218);
  char v40 = a2;
  uint64_t v6 = sub_1AFFCB9E8();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v38 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v37 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = sub_1AFFC8E48();
    int64_t v13 = 0;
    for (i = v5; ; uint64_t v5 = i)
    {
      if (v10)
      {
        unint64_t v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v21 = v20 | (v13 << 6);
      }
      else
      {
        int64_t v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37) {
          goto LABEL_33;
        }
        unint64_t v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          int64_t v13 = v22 + 1;
          if (v22 + 1 >= v37) {
            goto LABEL_33;
          }
          unint64_t v23 = v38[v13];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v40)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
                if (v36 >= 64) {
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v38 = -1 << v36;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v13 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v37) {
                  goto LABEL_33;
                }
                unint64_t v23 = v38[v13];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v24;
          }
        }
LABEL_30:
        unint64_t v10 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      int64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
      uint64_t v30 = *v29;
      uint64_t v31 = v29[1];
      uint64_t v32 = *(void *)(v5 + 56) + 48 * v21;
      uint64_t v33 = *(void *)(v32 + 8);
      uint64_t v41 = *(void *)v32;
      uint64_t v34 = *(void *)(v32 + 16);
      uint64_t v44 = *(void *)(v32 + 24);
      uint64_t v35 = *(void *)(v32 + 32);
      char v42 = *(unsigned char *)(v32 + 41);
      char v43 = *(unsigned char *)(v32 + 40);
      if ((v40 & 1) == 0)
      {
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
      }
      sub_1AFFCBDF8();
      sub_1AFFCAF68();
      uint64_t result = sub_1AFFCBE38();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v16 == v26;
          if (v16 == v26) {
            unint64_t v16 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
      *unint64_t v18 = v30;
      v18[1] = v31;
      uint64_t v19 = *(void *)(v7 + 56) + 48 * v17;
      *(void *)uint64_t v19 = v41;
      *(void *)(v19 + 8) = v33;
      *(void *)(v19 + 16) = v34;
      *(void *)(v19 + 24) = v44;
      *(void *)(v19 + 32) = v35;
      *(unsigned char *)(v19 + 40) = v43;
      *(unsigned char *)(v19 + 41) = v42;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1AFEB3340(uint64_t a1, char a2)
{
  return sub_1AFEB4178(a1, a2, &qword_1EB816AD0, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0]);
}

uint64_t sub_1AFEB335C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1AFE05C24();
  uint64_t v6 = sub_1AFFCB9E8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v2;
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = sub_1AFFC8E48();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    unint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v37 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v37 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v36;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v37 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = 8 * v21;
    uint64_t v31 = *(void **)(*(void *)(v5 + 48) + v30);
    uint64_t v32 = *(void **)(*(void *)(v5 + 56) + v30);
    if ((a2 & 1) == 0)
    {
      id v33 = v31;
      id v34 = v32;
    }
    uint64_t result = sub_1AFFCB5F8();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = 8 * v18;
    *(void *)(*(void *)(v7 + 48) + v19) = v31;
    *(void *)(*(void *)(v7 + 56) + v19) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v36;
  unint64_t v23 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1AFEB362C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1AFE05518(0, &qword_1EB816920);
  char v37 = a2;
  uint64_t v6 = sub_1AFFCB9E8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  id v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = sub_1AFFC8E48();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v13 << 6);
      if (v37) {
        goto LABEL_10;
      }
      goto LABEL_23;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_22;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_22:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v17 = __clz(__rbit64(v23)) + (v13 << 6);
    if (v37)
    {
LABEL_10:
      unint64_t v18 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
      uint64_t v19 = *v18;
      uint64_t v20 = v18[1];
      sub_1AFDF97C0(*(void *)(v5 + 56) + 136 * v17, (uint64_t)v38);
      goto LABEL_24;
    }
LABEL_23:
    int64_t v25 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
    uint64_t v19 = *v25;
    uint64_t v20 = v25[1];
    sub_1AFDF97C0(*(void *)(v5 + 56) + 136 * v17, (uint64_t)v38);
    sub_1AFFC8E38();
    sub_1AFD76370((uint64_t)v38);
LABEL_24:
    sub_1AFDF97C0((uint64_t)v38, (uint64_t)v39);
    sub_1AFFCBDF8();
    sub_1AFFCAF68();
    uint64_t result = sub_1AFFCBE38();
    uint64_t v26 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v11 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v14 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    uint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
    *uint64_t v15 = v19;
    v15[1] = v20;
    uint64_t result = sub_1AFDF97C0((uint64_t)v39, *(void *)(v7 + 56) + 136 * v14);
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  int64_t v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1AFEB3988(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1AFE05518(0, &qword_1EB81B2A8);
  char v55 = a2;
  uint64_t v6 = sub_1AFFCB9E8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v54 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v52 = v2;
  int64_t v53 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = sub_1AFFC8E48();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      if (v55) {
        goto LABEL_10;
      }
      goto LABEL_23;
    }
    int64_t v32 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v32 >= v53) {
      break;
    }
    uint64_t v33 = (void *)(v5 + 64);
    unint64_t v34 = *(void *)(v54 + 8 * v32);
    ++v13;
    if (!v34)
    {
      int64_t v13 = v32 + 1;
      if (v32 + 1 >= v53) {
        goto LABEL_33;
      }
      unint64_t v34 = *(void *)(v54 + 8 * v13);
      if (!v34)
      {
        int64_t v35 = v32 + 2;
        if (v35 >= v53)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v52;
          if ((v55 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v34 = *(void *)(v54 + 8 * v35);
        if (!v34)
        {
          while (1)
          {
            int64_t v13 = v35 + 1;
            if (__OFADD__(v35, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v53) {
              goto LABEL_33;
            }
            unint64_t v34 = *(void *)(v54 + 8 * v13);
            ++v35;
            if (v34) {
              goto LABEL_22;
            }
          }
        }
        int64_t v13 = v35;
      }
    }
LABEL_22:
    unint64_t v10 = (v34 - 1) & v34;
    unint64_t v22 = __clz(__rbit64(v34)) + (v13 << 6);
    if (v55)
    {
LABEL_10:
      unint64_t v23 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v22);
      uint64_t v24 = *v23;
      uint64_t v25 = v23[1];
      uint64_t v26 = *(void *)(v5 + 56) + 136 * v22;
      long long v27 = *(_OWORD *)(v26 + 112);
      long long v71 = *(_OWORD *)(v26 + 96);
      long long v72 = v27;
      uint64_t v73 = *(void *)(v26 + 128);
      long long v28 = *(_OWORD *)(v26 + 48);
      long long v67 = *(_OWORD *)(v26 + 32);
      long long v68 = v28;
      long long v29 = *(_OWORD *)(v26 + 80);
      long long v69 = *(_OWORD *)(v26 + 64);
      long long v70 = v29;
      long long v31 = *(_OWORD *)v26;
      long long v30 = *(_OWORD *)(v26 + 16);
      goto LABEL_24;
    }
LABEL_23:
    uint64_t v36 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v22);
    uint64_t v24 = *v36;
    uint64_t v25 = v36[1];
    uint64_t v37 = *(void *)(v5 + 56) + 136 * v22;
    long long v56 = *(_OWORD *)v37;
    long long v38 = *(_OWORD *)(v37 + 64);
    long long v40 = *(_OWORD *)(v37 + 16);
    long long v39 = *(_OWORD *)(v37 + 32);
    long long v59 = *(_OWORD *)(v37 + 48);
    long long v60 = v38;
    long long v57 = v40;
    long long v58 = v39;
    long long v42 = *(_OWORD *)(v37 + 96);
    long long v41 = *(_OWORD *)(v37 + 112);
    long long v43 = *(_OWORD *)(v37 + 80);
    uint64_t v64 = *(void *)(v37 + 128);
    long long v62 = v42;
    long long v63 = v41;
    long long v61 = v43;
    sub_1AFFC8E38();
    sub_1AFD8CCA0((uint64_t *)&v56);
    long long v71 = v62;
    long long v72 = v63;
    uint64_t v73 = v64;
    long long v67 = v58;
    long long v68 = v59;
    long long v69 = v60;
    long long v70 = v61;
    long long v31 = v56;
    long long v30 = v57;
LABEL_24:
    long long v65 = v31;
    long long v66 = v30;
    sub_1AFFCBDF8();
    sub_1AFFCAF68();
    uint64_t result = sub_1AFFCBE38();
    uint64_t v44 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v45 = result & ~v44;
    unint64_t v46 = v45 >> 6;
    if (((-1 << v45) & ~*(void *)(v11 + 8 * (v45 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v45) & ~*(void *)(v11 + 8 * (v45 >> 6)))) | v45 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v47 = 0;
      unint64_t v48 = (unint64_t)(63 - v44) >> 6;
      do
      {
        if (++v46 == v48 && (v47 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v49 = v46 == v48;
        if (v46 == v48) {
          unint64_t v46 = 0;
        }
        v47 |= v49;
        uint64_t v50 = *(void *)(v11 + 8 * v46);
      }
      while (v50 == -1);
      unint64_t v14 = __clz(__rbit64(~v50)) + (v46 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    uint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
    *uint64_t v15 = v24;
    v15[1] = v25;
    uint64_t v16 = *(void *)(v7 + 56) + 136 * v14;
    long long v17 = v72;
    *(_OWORD *)(v16 + 96) = v71;
    *(_OWORD *)(v16 + 112) = v17;
    *(void *)(v16 + 128) = v73;
    long long v18 = v68;
    *(_OWORD *)(v16 + 32) = v67;
    *(_OWORD *)(v16 + 48) = v18;
    long long v19 = v70;
    *(_OWORD *)(v16 + 64) = v69;
    *(_OWORD *)(v16 + 80) = v19;
    long long v20 = v66;
    *(_OWORD *)uint64_t v16 = v65;
    *(_OWORD *)(v16 + 16) = v20;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v52;
  uint64_t v33 = (void *)(v5 + 64);
  if ((v55 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v51 = 1 << *(unsigned char *)(v5 + 32);
  if (v51 >= 64) {
    bzero(v33, ((unint64_t)(v51 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v33 = -1 << v51;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1AFEB3D64(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1AFE05518(0, (unint64_t *)&unk_1EB8181E0);
  uint64_t v6 = sub_1AFFCB9E8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v38 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v37 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = sub_1AFFC8E48();
  for (int64_t i = 0; ; int64_t i = v39)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      int64_t v39 = i;
      unint64_t v21 = v20 | (i << 6);
      goto LABEL_31;
    }
    int64_t v22 = i + 1;
    if (__OFADD__(i, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v37) {
      break;
    }
    unint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v38 + 8 * v22);
    int64_t v25 = i + 1;
    if (!v24)
    {
      int64_t v25 = i + 2;
      if (i + 2 >= v37) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v38 + 8 * v25);
      if (!v24)
      {
        uint64_t v26 = i + 3;
        if (i + 3 >= v37)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v2;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v38 + 8 * v26);
        if (!v24)
        {
          while (1)
          {
            int64_t v25 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v25 >= v37) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v38 + 8 * v25);
            ++v26;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v25 = i + 3;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    int64_t v39 = v25;
    unint64_t v21 = __clz(__rbit64(v24)) + (v25 << 6);
LABEL_31:
    long long v31 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
    uint64_t v33 = *v31;
    uint64_t v32 = v31[1];
    uint64_t v34 = *(void *)(v5 + 56) + 104 * v21;
    uint64_t v44 = *(void *)(v34 + 16);
    uint64_t v46 = *(void *)(v34 + 24);
    uint64_t v47 = *(void *)(v34 + 8);
    uint64_t v43 = *(void *)(v34 + 32);
    long long v48 = *(_OWORD *)(v34 + 56);
    long long v49 = *(_OWORD *)(v34 + 40);
    uint64_t v45 = *(void *)(v34 + 72);
    char v42 = *(unsigned char *)(v34 + 80);
    uint64_t v35 = *(void *)(v34 + 96);
    uint64_t v40 = *(void *)v34;
    uint64_t v41 = *(void *)(v34 + 88);
    if ((a2 & 1) == 0)
    {
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
    }
    sub_1AFFCBDF8();
    sub_1AFFCAF68();
    uint64_t result = sub_1AFFCBE38();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v16 == v28;
        if (v16 == v28) {
          unint64_t v16 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    long long v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *long long v18 = v33;
    v18[1] = v32;
    uint64_t v19 = *(void *)(v7 + 56) + 104 * v17;
    *(void *)uint64_t v19 = v40;
    *(void *)(v19 + 8) = v47;
    *(void *)(v19 + 16) = v44;
    *(void *)(v19 + 24) = v46;
    *(void *)(v19 + 32) = v43;
    *(_OWORD *)(v19 + 40) = v49;
    *(_OWORD *)(v19 + 56) = v48;
    *(void *)(v19 + 72) = v45;
    *(unsigned char *)(v19 + 80) = v42;
    *(void *)(v19 + 88) = v41;
    *(void *)(v19 + 96) = v35;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v2;
  unint64_t v23 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
  if (v36 >= 64) {
    bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v36;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1AFEB415C(uint64_t a1, char a2)
{
  return sub_1AFEB4178(a1, a2, &qword_1EB818220, (unint64_t *)&unk_1EB816AA8, (uint64_t)&type metadata for StockRecord);
}

uint64_t sub_1AFEB4178(uint64_t a1, char a2, unint64_t *a3, unint64_t *a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v8 = *v5;
  sub_1AFEBBD14(0, a3, a4, a5);
  char v39 = a2;
  uint64_t v9 = sub_1AFFCB9E8();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_40;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v38 = v8 + 64;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & *(void *)(v8 + 64);
  int64_t v37 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v14 = v9 + 64;
  uint64_t result = sub_1AFFC8E48();
  int64_t v16 = 0;
  while (1)
  {
    if (v13)
    {
      unint64_t v22 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v23 = v22 | (v16 << 6);
      goto LABEL_31;
    }
    int64_t v24 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v24 >= v37) {
      break;
    }
    int64_t v25 = (void *)(v8 + 64);
    unint64_t v26 = *(void *)(v38 + 8 * v24);
    ++v16;
    if (!v26)
    {
      int64_t v16 = v24 + 1;
      if (v24 + 1 >= v37) {
        goto LABEL_33;
      }
      unint64_t v26 = *(void *)(v38 + 8 * v16);
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v37)
        {
LABEL_33:
          swift_release();
          if ((v39 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v26 = *(void *)(v38 + 8 * v27);
        if (!v26)
        {
          while (1)
          {
            int64_t v16 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_42;
            }
            if (v16 >= v37) {
              goto LABEL_33;
            }
            unint64_t v26 = *(void *)(v38 + 8 * v16);
            ++v27;
            if (v26) {
              goto LABEL_30;
            }
          }
        }
        int64_t v16 = v27;
      }
    }
LABEL_30:
    unint64_t v13 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v16 << 6);
LABEL_31:
    uint64_t v32 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v23);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    uint64_t v35 = *(void *)(*(void *)(v8 + 56) + 8 * v23);
    if ((v39 & 1) == 0)
    {
      sub_1AFFC8E38();
      sub_1AFFC8E38();
    }
    sub_1AFFCBDF8();
    sub_1AFFCAF68();
    uint64_t result = sub_1AFFCBE38();
    uint64_t v17 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v18 = result & ~v17;
    unint64_t v19 = v18 >> 6;
    if (((-1 << v18) & ~*(void *)(v14 + 8 * (v18 >> 6))) != 0)
    {
      unint64_t v20 = __clz(__rbit64((-1 << v18) & ~*(void *)(v14 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v17) >> 6;
      do
      {
        if (++v19 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v30 = v19 == v29;
        if (v19 == v29) {
          unint64_t v19 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v14 + 8 * v19);
      }
      while (v31 == -1);
      unint64_t v20 = __clz(__rbit64(~v31)) + (v19 << 6);
    }
    *(void *)(v14 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    unint64_t v21 = (void *)(*(void *)(v10 + 48) + 16 * v20);
    *unint64_t v21 = v34;
    v21[1] = v33;
    *(void *)(*(void *)(v10 + 56) + 8 * v20) = v35;
    ++*(void *)(v10 + 16);
  }
  swift_release();
  int64_t v25 = (void *)(v8 + 64);
  if ((v39 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v36 = 1 << *(unsigned char *)(v8 + 32);
  if (v36 >= 64) {
    bzero(v25, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v25 = -1 << v36;
  }
  *(void *)(v8 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v6 = v10;
  return result;
}

uint64_t sub_1AFEB4498(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for EarningsCalendarEventModel();
  uint64_t v42 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_1AFEBBC48(0, &qword_1E9AFC030, (void (*)(uint64_t))type metadata accessor for EarningsCalendarEventModel);
  int v43 = a2;
  uint64_t v9 = sub_1AFFCB9E8();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  uint64_t v41 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  char v39 = v2;
  int64_t v40 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 64;
  uint64_t result = sub_1AFFC8E48();
  int64_t v17 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v40) {
      break;
    }
    unint64_t v23 = v41;
    unint64_t v24 = v41[v22];
    ++v17;
    if (!v24)
    {
      int64_t v17 = v22 + 1;
      if (v22 + 1 >= v40) {
        goto LABEL_34;
      }
      unint64_t v24 = v41[v17];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v40)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v39;
          if ((v43 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v24 = v41[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v17 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v40) {
              goto LABEL_34;
            }
            unint64_t v24 = v41[v17];
            ++v25;
            if (v24) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v25;
      }
    }
LABEL_21:
    unint64_t v14 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    unint64_t v26 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v21);
    uint64_t v28 = *v26;
    uint64_t v27 = v26[1];
    uint64_t v29 = *(void *)(v42 + 72);
    uint64_t v30 = *(void *)(v8 + 56) + v29 * v21;
    if (v43)
    {
      sub_1AFEBBCAC(v30, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for EarningsCalendarEventModel);
    }
    else
    {
      sub_1AFEBC5BC(v30, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for EarningsCalendarEventModel);
      sub_1AFFC8E38();
    }
    sub_1AFFCBDF8();
    sub_1AFFCAF68();
    uint64_t result = sub_1AFFCBE38();
    uint64_t v31 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v15 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v18 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    unint64_t v19 = (void *)(*(void *)(v10 + 48) + 16 * v18);
    *unint64_t v19 = v28;
    v19[1] = v27;
    uint64_t result = sub_1AFEBBCAC((uint64_t)v7, *(void *)(v10 + 56) + v29 * v18, (uint64_t (*)(void))type metadata accessor for EarningsCalendarEventModel);
    ++*(void *)(v10 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  unint64_t v23 = v41;
  if ((v43 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v8 + 32);
  if (v38 >= 64) {
    bzero(v23, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v38;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

unint64_t sub_1AFEB4890(uint64_t a1, char a2)
{
  return sub_1AFEB4CC0(a1, a2, &qword_1EB811458, (unint64_t *)&qword_1EB818000, (uint64_t)&type metadata for Headline);
}

uint64_t sub_1AFEB48AC(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for Chart(0);
  uint64_t v42 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_1AFEBBC48(0, &qword_1EB818200, (void (*)(uint64_t))type metadata accessor for Chart);
  int v43 = a2;
  uint64_t v9 = sub_1AFFCB9E8();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  uint64_t v41 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  char v39 = v2;
  int64_t v40 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 64;
  uint64_t result = sub_1AFFC8E48();
  int64_t v17 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v40) {
      break;
    }
    unint64_t v23 = v41;
    unint64_t v24 = v41[v22];
    ++v17;
    if (!v24)
    {
      int64_t v17 = v22 + 1;
      if (v22 + 1 >= v40) {
        goto LABEL_34;
      }
      unint64_t v24 = v41[v17];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v40)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v39;
          if ((v43 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v24 = v41[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v17 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v40) {
              goto LABEL_34;
            }
            unint64_t v24 = v41[v17];
            ++v25;
            if (v24) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v25;
      }
    }
LABEL_21:
    unint64_t v14 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    unint64_t v26 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v21);
    uint64_t v28 = *v26;
    uint64_t v27 = v26[1];
    uint64_t v29 = *(void *)(v42 + 72);
    uint64_t v30 = *(void *)(v8 + 56) + v29 * v21;
    if (v43)
    {
      sub_1AFEBBCAC(v30, (uint64_t)v7, type metadata accessor for Chart);
    }
    else
    {
      sub_1AFEBC5BC(v30, (uint64_t)v7, type metadata accessor for Chart);
      sub_1AFFC8E38();
    }
    sub_1AFFCBDF8();
    sub_1AFFCAF68();
    uint64_t result = sub_1AFFCBE38();
    uint64_t v31 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v15 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v18 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    unint64_t v19 = (void *)(*(void *)(v10 + 48) + 16 * v18);
    *unint64_t v19 = v28;
    v19[1] = v27;
    uint64_t result = sub_1AFEBBCAC((uint64_t)v7, *(void *)(v10 + 56) + v29 * v18, type metadata accessor for Chart);
    ++*(void *)(v10 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  unint64_t v23 = v41;
  if ((v43 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v8 + 32);
  if (v38 >= 64) {
    bzero(v23, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v38;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

unint64_t sub_1AFEB4CA4(uint64_t a1, char a2)
{
  return sub_1AFEB4CC0(a1, a2, &qword_1EB810B50, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0]);
}

unint64_t sub_1AFEB4CC0(uint64_t a1, char a2, unint64_t *a3, unint64_t *a4, uint64_t a5)
{
  uint64_t v7 = *v5;
  sub_1AFEBBD90(0, a3, a4, a5);
  char v43 = a2;
  uint64_t v44 = (void *)sub_1AFFCB9E8();
  if (*(void *)(v7 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v7 + 32);
    int64_t v40 = (void *)(v7 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v7 + 64);
    int64_t v41 = (unint64_t)(v8 + 63) >> 6;
    unint64_t result = sub_1AFFC8E48();
    int64_t v12 = 0;
    uint64_t v42 = v7;
    while (1)
    {
      if (v10)
      {
        unint64_t v30 = __clz(__rbit64(v10));
        uint64_t v31 = (v10 - 1) & v10;
        unint64_t v32 = v30 | (v12 << 6);
      }
      else
      {
        int64_t v33 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
          __break(1u);
LABEL_31:
          __break(1u);
          return result;
        }
        if (v33 >= v41) {
          goto LABEL_24;
        }
        unint64_t v34 = v40[v33];
        ++v12;
        if (!v34)
        {
          int64_t v12 = v33 + 1;
          if (v33 + 1 >= v41) {
            goto LABEL_24;
          }
          unint64_t v34 = v40[v12];
          if (!v34)
          {
            int64_t v35 = v33 + 2;
            if (v35 >= v41)
            {
LABEL_24:
              swift_release();
              if (v43)
              {
                uint64_t v38 = 1 << *(unsigned char *)(v7 + 32);
                if (v38 >= 64) {
                  bzero(v40, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int64_t v40 = -1 << v38;
                }
                *(void *)(v7 + 16) = 0;
              }
              break;
            }
            unint64_t v34 = v40[v35];
            if (!v34)
            {
              while (1)
              {
                int64_t v12 = v35 + 1;
                if (__OFADD__(v35, 1)) {
                  goto LABEL_31;
                }
                if (v12 >= v41) {
                  goto LABEL_24;
                }
                unint64_t v34 = v40[v12];
                ++v35;
                if (v34) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v12 = v35;
          }
        }
LABEL_21:
        uint64_t v31 = (v34 - 1) & v34;
        unint64_t v32 = __clz(__rbit64(v34)) + (v12 << 6);
      }
      unint64_t v50 = v31;
      int64_t v51 = v12;
      if (v43)
      {
        uint64_t v36 = *(void *)(v7 + 56);
        uint64_t v37 = *(void *)(v7 + 48) + 136 * v32;
        uint64_t v27 = *(void *)v37;
        uint64_t v28 = *(void *)(v37 + 8);
        uint64_t v26 = *(void *)(v37 + 16);
        uint64_t v45 = *(void *)(v37 + 24);
        long long v46 = *(_OWORD *)(v37 + 32);
        uint64_t v25 = *(void *)(v37 + 48);
        uint64_t v24 = *(void *)(v37 + 56);
        char v23 = *(unsigned char *)(v37 + 64);
        uint64_t v22 = *(void *)(v37 + 72);
        uint64_t v21 = *(void *)(v37 + 80);
        uint64_t v53 = *(void *)(v37 + 88);
        uint64_t v52 = *(void *)(v37 + 96);
        uint64_t v55 = *(void *)(v37 + 104);
        uint64_t v54 = *(void *)(v37 + 112);
        uint64_t v47 = *(void *)(v37 + 128);
        uint64_t v48 = *(void *)(v37 + 120);
        uint64_t v49 = *(void *)(v36 + 8 * v32);
      }
      else
      {
        uint64_t v13 = *(void *)(v7 + 48) + 136 * v32;
        long long v15 = *(_OWORD *)(v13 + 16);
        long long v14 = *(_OWORD *)(v13 + 32);
        long long v16 = *(_OWORD *)(v13 + 48);
        long long v60 = *(_OWORD *)(v13 + 64);
        long long v59 = v16;
        long long v17 = *(_OWORD *)(v13 + 80);
        long long v18 = *(_OWORD *)(v13 + 96);
        long long v19 = *(_OWORD *)(v13 + 112);
        uint64_t v64 = *(void *)(v13 + 128);
        long long v62 = v18;
        long long v63 = v19;
        long long v61 = v17;
        long long v56 = *(_OWORD *)v13;
        long long v57 = v15;
        long long v58 = v14;
        uint64_t v20 = *(void *)(*(void *)(v7 + 56) + 8 * v32);
        uint64_t v47 = v64;
        uint64_t v48 = *((void *)&v19 + 1);
        uint64_t v54 = v19;
        uint64_t v55 = *((void *)&v18 + 1);
        uint64_t v21 = v17;
        uint64_t v52 = v18;
        uint64_t v53 = *((void *)&v17 + 1);
        uint64_t v22 = *((void *)&v60 + 1);
        char v23 = v60;
        uint64_t v24 = *((void *)&v59 + 1);
        uint64_t v25 = v59;
        long long v46 = v14;
        uint64_t v45 = *((void *)&v15 + 1);
        uint64_t v26 = v15;
        uint64_t v28 = *((void *)&v56 + 1);
        uint64_t v27 = v56;
        sub_1AFD76370((uint64_t)&v56);
        uint64_t v49 = v20;
        sub_1AFFC8E38();
      }
      *(void *)&long long v56 = v27;
      *((void *)&v56 + 1) = v28;
      *(void *)&long long v57 = v26;
      *((void *)&v57 + 1) = v45;
      long long v58 = v46;
      *(void *)&long long v59 = v25;
      *((void *)&v59 + 1) = v24;
      LOBYTE(v60) = v23;
      *((void *)&v60 + 1) = v22;
      *(void *)&long long v61 = v21;
      *((void *)&v61 + 1) = v53;
      *(void *)&long long v62 = v52;
      *((void *)&v62 + 1) = v55;
      *(void *)&long long v63 = v54;
      *((void *)&v63 + 1) = v48;
      uint64_t v64 = v47;
      sub_1AFFCBDF8();
      sub_1AFD78C34();
      sub_1AFFCBE38();
      unint64_t result = sub_1AFFCB758();
      *(void *)((char *)v44 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      uint64_t v29 = v44[6] + 136 * result;
      *(void *)uint64_t v29 = v27;
      *(void *)(v29 + 8) = v28;
      *(void *)(v29 + 16) = v26;
      *(void *)(v29 + 24) = v45;
      *(_OWORD *)(v29 + 32) = v46;
      *(void *)(v29 + 48) = v25;
      *(void *)(v29 + 56) = v24;
      *(unsigned char *)(v29 + 64) = v23;
      *(void *)(v29 + 72) = v22;
      *(void *)(v29 + 80) = v21;
      int64_t v12 = v51;
      *(void *)(v29 + 88) = v53;
      *(void *)(v29 + 96) = v52;
      *(void *)(v29 + 104) = v55;
      *(void *)(v29 + 112) = v54;
      *(void *)(v29 + 120) = v48;
      *(void *)(v29 + 128) = v47;
      *(void *)(v44[7] + 8 * result) = v49;
      ++v44[2];
      uint64_t v7 = v42;
      unint64_t v10 = v50;
    }
  }
  unint64_t result = swift_release();
  *char v39 = v44;
  return result;
}

uint64_t sub_1AFEB5100(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1AFEBC670(0, (unint64_t *)&qword_1EB811A80, (uint64_t)&unk_1EB811A60, 0x1E4F7E420, (void (*)(uint64_t, uint64_t, uint64_t))sub_1AFD8F6AC);
  char v38 = a2;
  uint64_t v6 = sub_1AFFCB9E8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = sub_1AFFC8E48();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36) {
      break;
    }
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v37 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v36) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v37 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    unint64_t v32 = *(void **)(*(void *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      sub_1AFFC8E38();
      id v33 = v32;
    }
    sub_1AFFCBDF8();
    sub_1AFFCAF68();
    uint64_t result = sub_1AFFCBE38();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    long long v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *long long v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  uint64_t v22 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v22 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1AFEB5438(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1AFE05518(0, (unint64_t *)&unk_1EB8112B8);
  char v40 = a2;
  uint64_t v6 = sub_1AFFCB9E8();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    char v38 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v37 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = sub_1AFFC8E48();
    int64_t v13 = 0;
    for (i = v5; ; uint64_t v5 = i)
    {
      if (v10)
      {
        unint64_t v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v21 = v20 | (v13 << 6);
      }
      else
      {
        int64_t v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37) {
          goto LABEL_33;
        }
        unint64_t v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          int64_t v13 = v22 + 1;
          if (v22 + 1 >= v37) {
            goto LABEL_33;
          }
          unint64_t v23 = v38[v13];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v40)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
                if (v36 >= 64) {
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *char v38 = -1 << v36;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v13 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v37) {
                  goto LABEL_33;
                }
                unint64_t v23 = v38[v13];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v24;
          }
        }
LABEL_30:
        unint64_t v10 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
      uint64_t v31 = *v29;
      uint64_t v30 = v29[1];
      uint64_t v32 = *(void *)(v5 + 56) + 24 * v21;
      uint64_t v33 = *(void *)v32;
      uint64_t v34 = *(void *)(v32 + 8);
      char v35 = *(unsigned char *)(v32 + 16);
      if ((v40 & 1) == 0)
      {
        sub_1AFFC8E38();
        sub_1AFFC8E38();
      }
      sub_1AFFCBDF8();
      sub_1AFFCAF68();
      uint64_t result = sub_1AFFCBE38();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v16 == v26;
          if (v16 == v26) {
            unint64_t v16 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      long long v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
      *long long v18 = v31;
      v18[1] = v30;
      uint64_t v19 = *(void *)(v7 + 56) + 24 * v17;
      *(void *)uint64_t v19 = v33;
      *(void *)(v19 + 8) = v34;
      *(unsigned char *)(v19 + 16) = v35;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1AFEB576C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1AFE05518(0, (unint64_t *)&unk_1EB8181F0);
  char v42 = a2;
  uint64_t v6 = sub_1AFFCB9E8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  char v40 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  char v38 = v2;
  int64_t v39 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = sub_1AFFC8E48();
  int64_t v13 = 0;
  for (i = v5; ; uint64_t v5 = i)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v13 << 6);
      if (v42) {
        goto LABEL_10;
      }
      goto LABEL_23;
    }
    int64_t v25 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v25 >= v39) {
      break;
    }
    unint64_t v26 = v40;
    unint64_t v27 = v40[v25];
    ++v13;
    if (!v27)
    {
      int64_t v13 = v25 + 1;
      if (v25 + 1 >= v39) {
        goto LABEL_33;
      }
      unint64_t v27 = v40[v13];
      if (!v27)
      {
        int64_t v28 = v25 + 2;
        if (v28 >= v39)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v38;
          if ((v42 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v27 = v40[v28];
        if (!v27)
        {
          while (1)
          {
            int64_t v13 = v28 + 1;
            if (__OFADD__(v28, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v39) {
              goto LABEL_33;
            }
            unint64_t v27 = v40[v13];
            ++v28;
            if (v27) {
              goto LABEL_22;
            }
          }
        }
        int64_t v13 = v28;
      }
    }
LABEL_22:
    unint64_t v10 = (v27 - 1) & v27;
    unint64_t v17 = __clz(__rbit64(v27)) + (v13 << 6);
    if (v42)
    {
LABEL_10:
      long long v18 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
      uint64_t v20 = *v18;
      uint64_t v19 = v18[1];
      uint64_t v21 = *(void *)(v5 + 56) + 776 * v17;
      uint64_t v45 = *(void *)(v21 + 8);
      uint64_t v46 = *(void *)v21;
      uint64_t v50 = *(void *)(v21 + 32);
      uint64_t v51 = *(void *)(v21 + 24);
      uint64_t v48 = *(void *)(v21 + 48);
      uint64_t v49 = *(void *)(v21 + 40);
      uint64_t v47 = *(void *)(v21 + 56);
      char v22 = *(unsigned char *)(v21 + 64);
      uint64_t v52 = *(void *)(v21 + 80);
      uint64_t v43 = *(void *)(v21 + 72);
      uint64_t v44 = *(void *)(v21 + 88);
      uint64_t v53 = *(void *)(v21 + 96);
      uint64_t v54 = *(void *)(v21 + 16);
      sub_1AFEBBEDC(v21 + 104, (uint64_t)__src, &qword_1EB816930, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem);
      uint64_t v55 = *(void *)(v21 + 696);
      uint64_t v56 = *(void *)(v21 + 712);
      uint64_t v57 = *(void *)(v21 + 688);
      uint64_t v58 = *(void *)(v21 + 728);
      uint64_t v59 = *(void *)(v21 + 704);
      char v61 = *(unsigned char *)(v21 + 736);
      uint64_t v64 = *(void *)(v21 + 744);
      uint64_t v60 = *(void *)(v21 + 752);
      uint64_t v62 = *(void *)(v21 + 720);
      uint64_t v63 = *(void *)(v21 + 768);
      unint64_t v23 = __src;
      uint64_t v24 = *(void *)(v21 + 760);
      goto LABEL_24;
    }
LABEL_23:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
    uint64_t v20 = *v29;
    uint64_t v19 = v29[1];
    memcpy(__src, (const void *)(*(void *)(v5 + 56) + 776 * v17), sizeof(__src));
    uint64_t v24 = __src[95];
    uint64_t v63 = __src[96];
    uint64_t v64 = __src[93];
    char v61 = __src[92];
    uint64_t v62 = __src[90];
    uint64_t v59 = __src[88];
    uint64_t v60 = __src[94];
    uint64_t v57 = __src[86];
    uint64_t v58 = __src[91];
    uint64_t v55 = __src[87];
    uint64_t v56 = __src[89];
    uint64_t v43 = __src[9];
    uint64_t v44 = __src[11];
    uint64_t v52 = __src[10];
    uint64_t v53 = __src[12];
    uint64_t v45 = __src[1];
    uint64_t v46 = __src[0];
    uint64_t v54 = __src[2];
    uint64_t v50 = __src[4];
    uint64_t v51 = __src[3];
    uint64_t v48 = __src[6];
    uint64_t v49 = __src[5];
    uint64_t v47 = __src[7];
    char v22 = __src[8];
    sub_1AFFC8E38();
    sub_1AFD48104((uint64_t)__src);
    unint64_t v23 = &__src[13];
LABEL_24:
    sub_1AFEBBEDC((uint64_t)v23, (uint64_t)v66, &qword_1EB816930, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem);
    sub_1AFFCBDF8();
    sub_1AFFCAF68();
    uint64_t result = sub_1AFFCBE38();
    uint64_t v30 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v31 = result & ~v30;
    unint64_t v32 = v31 >> 6;
    if (((-1 << v31) & ~*(void *)(v11 + 8 * (v31 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v31) & ~*(void *)(v11 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v33 = 0;
      unint64_t v34 = (unint64_t)(63 - v30) >> 6;
      do
      {
        if (++v32 == v34 && (v33 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v35 = v32 == v34;
        if (v32 == v34) {
          unint64_t v32 = 0;
        }
        v33 |= v35;
        uint64_t v36 = *(void *)(v11 + 8 * v32);
      }
      while (v36 == -1);
      unint64_t v14 = __clz(__rbit64(~v36)) + (v32 << 6);
    }
    __src[0] = v46;
    __src[1] = v45;
    __src[2] = v54;
    __src[3] = v51;
    __src[4] = v50;
    __src[5] = v49;
    __src[6] = v48;
    __src[7] = v47;
    LOBYTE(__src[8]) = v22;
    __src[9] = v43;
    __src[10] = v52;
    __src[11] = v44;
    __src[12] = v53;
    sub_1AFEBBEDC((uint64_t)v66, (uint64_t)&__src[13], &qword_1EB816930, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem);
    __src[86] = v57;
    __src[87] = v55;
    __src[88] = v59;
    __src[89] = v56;
    __src[90] = v62;
    __src[91] = v58;
    LOBYTE(__src[92]) = v61;
    __src[93] = v64;
    __src[94] = v60;
    __src[95] = v24;
    __src[96] = v63;
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    unint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
    *unint64_t v15 = v20;
    v15[1] = v19;
    uint64_t result = (uint64_t)memcpy((void *)(*(void *)(v7 + 56) + 776 * v14), __src, 0x308uLL);
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v38;
  unint64_t v26 = v40;
  if ((v42 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v37 = 1 << *(unsigned char *)(v5 + 32);
  if (v37 >= 64) {
    bzero(v26, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v26 = -1 << v37;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1AFEB5D1C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1AFE05518(0, &qword_1EB81B2E8);
  char v40 = a2;
  uint64_t v6 = sub_1AFFCB9E8();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    char v38 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v37 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = sub_1AFFC8E48();
    int64_t v13 = 0;
    for (i = v5; ; uint64_t v5 = i)
    {
      if (v10)
      {
        unint64_t v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v21 = v20 | (v13 << 6);
      }
      else
      {
        int64_t v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37) {
          goto LABEL_33;
        }
        unint64_t v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          int64_t v13 = v22 + 1;
          if (v22 + 1 >= v37) {
            goto LABEL_33;
          }
          unint64_t v23 = v38[v13];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v40)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
                if (v36 >= 64) {
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *char v38 = -1 << v36;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v13 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v37) {
                  goto LABEL_33;
                }
                unint64_t v23 = v38[v13];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v24;
          }
        }
LABEL_30:
        unint64_t v10 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
      uint64_t v30 = *v29;
      uint64_t v31 = v29[1];
      uint64_t v32 = *(void *)(v5 + 56) + 72 * v21;
      uint64_t v33 = *(void *)(v32 + 8);
      uint64_t v34 = *(void *)(v32 + 24);
      uint64_t v44 = *(void *)(v32 + 16);
      char v43 = *(unsigned char *)(v32 + 32);
      uint64_t v41 = *(void *)v32;
      uint64_t v42 = *(void *)(v32 + 40);
      long long v45 = *(_OWORD *)(v32 + 48);
      uint64_t v35 = *(void *)(v32 + 64);
      if ((v40 & 1) == 0)
      {
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
      }
      sub_1AFFCBDF8();
      sub_1AFFCAF68();
      uint64_t result = sub_1AFFCBE38();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v16 == v26;
          if (v16 == v26) {
            unint64_t v16 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      long long v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
      *long long v18 = v30;
      v18[1] = v31;
      uint64_t v19 = *(void *)(v7 + 56) + 72 * v17;
      *(void *)uint64_t v19 = v41;
      *(void *)(v19 + 8) = v33;
      *(void *)(v19 + 16) = v44;
      *(void *)(v19 + 24) = v34;
      *(unsigned char *)(v19 + 32) = v43;
      *(void *)(v19 + 40) = v42;
      *(_OWORD *)(v19 + 48) = v45;
      *(void *)(v19 + 64) = v35;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1AFEB60B0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1AFE05518(0, &qword_1EB81B2E0);
  char v40 = a2;
  uint64_t v6 = sub_1AFFCB9E8();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    char v38 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v37 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = sub_1AFFC8E48();
    int64_t v13 = 0;
    for (i = v5; ; uint64_t v5 = i)
    {
      if (v10)
      {
        unint64_t v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v21 = v20 | (v13 << 6);
      }
      else
      {
        int64_t v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37) {
          goto LABEL_33;
        }
        unint64_t v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          int64_t v13 = v22 + 1;
          if (v22 + 1 >= v37) {
            goto LABEL_33;
          }
          unint64_t v23 = v38[v13];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v40)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
                if (v36 >= 64) {
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *char v38 = -1 << v36;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v13 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v37) {
                  goto LABEL_33;
                }
                unint64_t v23 = v38[v13];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v24;
          }
        }
LABEL_30:
        unint64_t v10 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
      uint64_t v31 = *v29;
      uint64_t v30 = v29[1];
      uint64_t v32 = *(void *)(v5 + 56) + 24 * v21;
      uint64_t v33 = *(void *)v32;
      uint64_t v34 = *(void *)(v32 + 8);
      char v35 = *(unsigned char *)(v32 + 16);
      if ((v40 & 1) == 0)
      {
        sub_1AFFC8E38();
        sub_1AFFC8E38();
      }
      sub_1AFFCBDF8();
      sub_1AFFCAF68();
      uint64_t result = sub_1AFFCBE38();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v16 == v26;
          if (v16 == v26) {
            unint64_t v16 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      long long v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
      *long long v18 = v31;
      v18[1] = v30;
      uint64_t v19 = *(void *)(v7 + 56) + 24 * v17;
      *(void *)uint64_t v19 = v33;
      *(void *)(v19 + 8) = v34;
      *(unsigned char *)(v19 + 16) = v35;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1AFEB63E4(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for YahooMultiQuoteItem(0);
  uint64_t v42 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_1AFEBBC48(0, &qword_1EB81B2D8, (void (*)(uint64_t))type metadata accessor for YahooMultiQuoteItem);
  int v43 = a2;
  uint64_t v9 = sub_1AFFCB9E8();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  uint64_t v41 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  int64_t v39 = v2;
  int64_t v40 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 64;
  uint64_t result = sub_1AFFC8E48();
  int64_t v17 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v40) {
      break;
    }
    unint64_t v23 = v41;
    unint64_t v24 = v41[v22];
    ++v17;
    if (!v24)
    {
      int64_t v17 = v22 + 1;
      if (v22 + 1 >= v40) {
        goto LABEL_34;
      }
      unint64_t v24 = v41[v17];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v40)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v39;
          if ((v43 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v24 = v41[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v17 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v40) {
              goto LABEL_34;
            }
            unint64_t v24 = v41[v17];
            ++v25;
            if (v24) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v25;
      }
    }
LABEL_21:
    unint64_t v14 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    unint64_t v26 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v21);
    uint64_t v28 = *v26;
    uint64_t v27 = v26[1];
    uint64_t v29 = *(void *)(v42 + 72);
    uint64_t v30 = *(void *)(v8 + 56) + v29 * v21;
    if (v43)
    {
      sub_1AFEBBCAC(v30, (uint64_t)v7, type metadata accessor for YahooMultiQuoteItem);
    }
    else
    {
      sub_1AFEBC5BC(v30, (uint64_t)v7, type metadata accessor for YahooMultiQuoteItem);
      sub_1AFFC8E38();
    }
    sub_1AFFCBDF8();
    sub_1AFFCAF68();
    uint64_t result = sub_1AFFCBE38();
    uint64_t v31 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v15 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v18 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = (void *)(*(void *)(v10 + 48) + 16 * v18);
    *uint64_t v19 = v28;
    v19[1] = v27;
    uint64_t result = sub_1AFEBBCAC((uint64_t)v7, *(void *)(v10 + 56) + v29 * v18, type metadata accessor for YahooMultiQuoteItem);
    ++*(void *)(v10 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  unint64_t v23 = v41;
  if ((v43 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v8 + 32);
  if (v38 >= 64) {
    bzero(v23, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v38;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_1AFEB67DC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1AFEBBC48(0, &qword_1EB8112C8, (void (*)(uint64_t))sub_1AFEBBE18);
  char v36 = a2;
  uint64_t v6 = sub_1AFFCB9E8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = sub_1AFFC8E48();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      sub_1AFFC8E38();
      sub_1AFFC8E38();
    }
    sub_1AFFCBDF8();
    sub_1AFFCAF68();
    uint64_t result = sub_1AFFCBE38();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  int64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1AFEB6B0C(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for SDSAuthToken();
  uint64_t v49 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v54 = (uint64_t)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1AFFC96E8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v51 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1AFEBC4E8();
  int v50 = a2;
  uint64_t v11 = v10;
  uint64_t v12 = sub_1AFFCB9E8();
  uint64_t v13 = v12;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v14 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v15 = *(void *)(v11 + 64);
  uint64_t v46 = (void *)(v11 + 64);
  if (v14 < 64) {
    uint64_t v16 = ~(-1 << v14);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v15;
  uint64_t v44 = v2;
  int64_t v45 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v47 = (void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  uint64_t v52 = (void (**)(char *, unint64_t, uint64_t))(v8 + 32);
  uint64_t v53 = v7;
  uint64_t v18 = v12 + 64;
  uint64_t result = sub_1AFFC8E48();
  int64_t v20 = 0;
  uint64_t v48 = v11;
  int64_t v21 = v51;
  while (1)
  {
    if (v17)
    {
      unint64_t v23 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v24 = v23 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v25 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v45) {
      break;
    }
    unint64_t v26 = v46;
    unint64_t v27 = v46[v25];
    ++v20;
    if (!v27)
    {
      int64_t v20 = v25 + 1;
      if (v25 + 1 >= v45) {
        goto LABEL_34;
      }
      unint64_t v27 = v46[v20];
      if (!v27)
      {
        int64_t v28 = v25 + 2;
        if (v28 >= v45)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v44;
          if ((v50 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v27 = v46[v28];
        if (!v27)
        {
          while (1)
          {
            int64_t v20 = v28 + 1;
            if (__OFADD__(v28, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v45) {
              goto LABEL_34;
            }
            unint64_t v27 = v46[v20];
            ++v28;
            if (v27) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v28;
      }
    }
LABEL_21:
    unint64_t v17 = (v27 - 1) & v27;
    unint64_t v24 = __clz(__rbit64(v27)) + (v20 << 6);
    int64_t v21 = v51;
LABEL_22:
    uint64_t v29 = v8;
    uint64_t v30 = *(void *)(v8 + 72);
    unint64_t v31 = *(void *)(v11 + 48) + v30 * v24;
    if (v50)
    {
      (*v52)(v21, v31, v53);
      uint64_t v32 = *(void *)(v11 + 56);
      uint64_t v33 = *(void *)(v49 + 72);
      sub_1AFEBBCAC(v32 + v33 * v24, v54, (uint64_t (*)(void))type metadata accessor for SDSAuthToken);
    }
    else
    {
      (*v47)(v21, v31, v53);
      uint64_t v34 = *(void *)(v11 + 56);
      uint64_t v33 = *(void *)(v49 + 72);
      sub_1AFEBC5BC(v34 + v33 * v24, v54, (uint64_t (*)(void))type metadata accessor for SDSAuthToken);
    }
    sub_1AFEBC564();
    uint64_t result = sub_1AFFCAD58();
    uint64_t v35 = -1 << *(unsigned char *)(v13 + 32);
    unint64_t v36 = result & ~v35;
    unint64_t v37 = v36 >> 6;
    if (((-1 << v36) & ~*(void *)(v18 + 8 * (v36 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v36) & ~*(void *)(v18 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
      int64_t v21 = v51;
    }
    else
    {
      char v38 = 0;
      unint64_t v39 = (unint64_t)(63 - v35) >> 6;
      int64_t v21 = v51;
      do
      {
        if (++v37 == v39 && (v38 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v40 = v37 == v39;
        if (v37 == v39) {
          unint64_t v37 = 0;
        }
        v38 |= v40;
        uint64_t v41 = *(void *)(v18 + 8 * v37);
      }
      while (v41 == -1);
      unint64_t v22 = __clz(__rbit64(~v41)) + (v37 << 6);
    }
    *(void *)(v18 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    (*v52)((char *)(*(void *)(v13 + 48) + v30 * v22), (unint64_t)v21, v53);
    uint64_t result = sub_1AFEBBCAC(v54, *(void *)(v13 + 56) + v33 * v22, (uint64_t (*)(void))type metadata accessor for SDSAuthToken);
    ++*(void *)(v13 + 16);
    uint64_t v11 = v48;
    uint64_t v8 = v29;
  }
  swift_release();
  uint64_t v3 = v44;
  unint64_t v26 = v46;
  if ((v50 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v42 = 1 << *(unsigned char *)(v11 + 32);
  if (v42 >= 64) {
    bzero(v26, ((unint64_t)(v42 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v26 = -1 << v42;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v13;
  return result;
}

uint64_t sub_1AFEB6FF0(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v44 = sub_1AFFCB948();
  uint64_t v5 = *(void *)(v44 - 8);
  MEMORY[0x1F4188790](v44);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_1AFEBBE70();
  int v45 = a2;
  uint64_t v9 = sub_1AFFCB9E8();
  uint64_t v10 = v9;
  if (*(void *)(v8 + 16))
  {
    char v38 = v2;
    uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
    uint64_t v12 = *(void *)(v8 + 64);
    BOOL v40 = (void *)(v8 + 64);
    if (v11 < 64) {
      uint64_t v13 = ~(-1 << v11);
    }
    else {
      uint64_t v13 = -1;
    }
    unint64_t v14 = v13 & v12;
    int64_t v39 = (unint64_t)(v11 + 63) >> 6;
    uint64_t v41 = (void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v46 = (void (**)(char *, unint64_t, uint64_t))(v5 + 32);
    uint64_t v15 = v9 + 64;
    uint64_t result = sub_1AFFC8E48();
    int64_t v17 = 0;
    uint64_t v42 = v8;
    uint64_t v43 = v7;
    while (1)
    {
      if (v14)
      {
        unint64_t v19 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        unint64_t v20 = v19 | (v17 << 6);
      }
      else
      {
        int64_t v21 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v39) {
          goto LABEL_34;
        }
        unint64_t v22 = v40[v21];
        ++v17;
        if (!v22)
        {
          int64_t v17 = v21 + 1;
          if (v21 + 1 >= v39) {
            goto LABEL_34;
          }
          unint64_t v22 = v40[v17];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v39)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v38;
              if (v45)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v8 + 32);
                if (v36 >= 64) {
                  bzero(v40, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *BOOL v40 = -1 << v36;
                }
                *(void *)(v8 + 16) = 0;
              }
              break;
            }
            unint64_t v22 = v40[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v17 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_41;
                }
                if (v17 >= v39) {
                  goto LABEL_34;
                }
                unint64_t v22 = v40[v17];
                ++v23;
                if (v22) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v17 = v23;
          }
        }
LABEL_21:
        unint64_t v14 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v17 << 6);
      }
      uint64_t v24 = v5;
      uint64_t v25 = *(void *)(v5 + 72);
      unint64_t v26 = *(void *)(v8 + 48) + v25 * v20;
      unint64_t v27 = v43;
      uint64_t v28 = v44;
      if (v45)
      {
        (*v46)(v43, v26, v44);
        sub_1AFD8DDEC((_OWORD *)(*(void *)(v8 + 56) + 32 * v20), v47);
      }
      else
      {
        (*v41)(v43, v26, v44);
        sub_1AFD38AF4(*(void *)(v8 + 56) + 32 * v20, (uint64_t)v47);
      }
      uint64_t result = sub_1AFFCAD58();
      uint64_t v29 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v30 = result & ~v29;
      unint64_t v31 = v30 >> 6;
      if (((-1 << v30) & ~*(void *)(v15 + 8 * (v30 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v30) & ~*(void *)(v15 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v32 = 0;
        unint64_t v33 = (unint64_t)(63 - v29) >> 6;
        do
        {
          if (++v31 == v33 && (v32 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v34 = v31 == v33;
          if (v31 == v33) {
            unint64_t v31 = 0;
          }
          v32 |= v34;
          uint64_t v35 = *(void *)(v15 + 8 * v31);
        }
        while (v35 == -1);
        unint64_t v18 = __clz(__rbit64(~v35)) + (v31 << 6);
      }
      *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      (*v46)((char *)(*(void *)(v10 + 48) + v25 * v18), (unint64_t)v27, v28);
      uint64_t result = (uint64_t)sub_1AFD8DDEC(v47, (_OWORD *)(*(void *)(v10 + 56) + 32 * v18));
      ++*(void *)(v10 + 16);
      uint64_t v5 = v24;
      uint64_t v8 = v42;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_1AFEB73E8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1AFE05518(0, &qword_1EB819F10);
  char v43 = a2;
  uint64_t v6 = sub_1AFFCB9E8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v41 = (void *)(v5 + 64);
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = sub_1AFFC8E48();
  int64_t v13 = 0;
  for (i = v5; ; uint64_t v5 = i)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v13 << 6);
      if (v43) {
        goto LABEL_10;
      }
      goto LABEL_23;
    }
    int64_t v26 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v26 >= v40) {
      break;
    }
    unint64_t v27 = v41;
    unint64_t v28 = v41[v26];
    ++v13;
    if (!v28)
    {
      int64_t v13 = v26 + 1;
      if (v26 + 1 >= v40) {
        goto LABEL_33;
      }
      unint64_t v28 = v41[v13];
      if (!v28)
      {
        int64_t v29 = v26 + 2;
        if (v29 >= v40)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v39;
          if ((v43 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v28 = v41[v29];
        if (!v28)
        {
          while (1)
          {
            int64_t v13 = v29 + 1;
            if (__OFADD__(v29, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v40) {
              goto LABEL_33;
            }
            unint64_t v28 = v41[v13];
            ++v29;
            if (v28) {
              goto LABEL_22;
            }
          }
        }
        int64_t v13 = v29;
      }
    }
LABEL_22:
    unint64_t v10 = (v28 - 1) & v28;
    unint64_t v17 = __clz(__rbit64(v28)) + (v13 << 6);
    if (v43)
    {
LABEL_10:
      unint64_t v18 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
      uint64_t v20 = *v18;
      uint64_t v19 = v18[1];
      uint64_t v21 = *(void *)(v5 + 56) + 792 * v17;
      uint64_t v48 = *(void *)(v21 + 8);
      uint64_t v49 = *(void *)v21;
      uint64_t v50 = *(void *)(v21 + 24);
      uint64_t v51 = *(void *)(v21 + 40);
      uint64_t v52 = *(void *)(v21 + 16);
      uint64_t v54 = *(void *)(v21 + 56);
      uint64_t v55 = *(void *)(v21 + 32);
      uint64_t v22 = *(void *)(v21 + 80);
      uint64_t v46 = *(void *)(v21 + 64);
      uint64_t v47 = *(void *)(v21 + 88);
      uint64_t v44 = *(void *)(v21 + 48);
      uint64_t v45 = *(void *)(v21 + 96);
      uint64_t v56 = *(void *)(v21 + 104);
      uint64_t v57 = *(void *)(v21 + 72);
      sub_1AFEBBEDC(v21 + 112, (uint64_t)__src, &qword_1EB819618, (uint64_t)&type metadata for PaidBundleConfiguration);
      uint64_t v73 = *(void *)(v21 + 624);
      uint64_t v69 = *(void *)(v21 + 632);
      uint64_t v60 = *(void *)(v21 + 664);
      uint64_t v61 = *(void *)(v21 + 656);
      uint64_t v58 = *(void *)(v21 + 680);
      uint64_t v59 = *(void *)(v21 + 672);
      char v53 = *(unsigned char *)(v21 + 688);
      uint64_t v66 = *(void *)(v21 + 640);
      uint64_t v67 = *(void *)(v21 + 696);
      uint64_t v63 = *(void *)(v21 + 648);
      uint64_t v64 = *(void *)(v21 + 704);
      uint64_t v68 = *(void *)(v21 + 728);
      uint64_t v65 = *(void *)(v21 + 736);
      char v62 = *(unsigned char *)(v21 + 744);
      uint64_t v74 = *(void *)(v21 + 752);
      uint64_t v75 = *(void *)(v21 + 712);
      uint64_t v70 = *(void *)(v21 + 760);
      uint64_t v71 = *(void *)(v21 + 720);
      uint64_t v72 = *(void *)(v21 + 776);
      int64_t v23 = __src;
      uint64_t v24 = *(void *)(v21 + 784);
      uint64_t v25 = *(void *)(v21 + 768);
      goto LABEL_24;
    }
LABEL_23:
    unint64_t v30 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
    uint64_t v20 = *v30;
    uint64_t v19 = v30[1];
    memcpy(__src, (const void *)(*(void *)(v5 + 56) + 792 * v17), sizeof(__src));
    uint64_t v24 = __src[98];
    uint64_t v25 = __src[96];
    uint64_t v70 = __src[95];
    uint64_t v74 = __src[94];
    uint64_t v75 = __src[89];
    uint64_t v71 = __src[90];
    uint64_t v72 = __src[97];
    char v62 = __src[93];
    uint64_t v67 = __src[87];
    uint64_t v68 = __src[91];
    uint64_t v64 = __src[88];
    uint64_t v65 = __src[92];
    uint64_t v73 = __src[78];
    uint64_t v69 = __src[79];
    uint64_t v66 = __src[80];
    uint64_t v63 = __src[81];
    uint64_t v60 = __src[83];
    uint64_t v61 = __src[82];
    uint64_t v58 = __src[85];
    uint64_t v59 = __src[84];
    char v53 = __src[86];
    uint64_t v22 = __src[10];
    uint64_t v56 = __src[13];
    uint64_t v46 = __src[8];
    uint64_t v47 = __src[11];
    uint64_t v57 = __src[9];
    uint64_t v44 = __src[6];
    uint64_t v45 = __src[12];
    uint64_t v54 = __src[7];
    uint64_t v55 = __src[4];
    uint64_t v51 = __src[5];
    uint64_t v52 = __src[2];
    uint64_t v49 = __src[0];
    uint64_t v50 = __src[3];
    uint64_t v48 = __src[1];
    sub_1AFFC8E38();
    sub_1AFEBBF5C((uint64_t)__src);
    int64_t v23 = &__src[14];
LABEL_24:
    sub_1AFEBBEDC((uint64_t)v23, (uint64_t)v77, &qword_1EB819618, (uint64_t)&type metadata for PaidBundleConfiguration);
    sub_1AFFCBDF8();
    sub_1AFFCAF68();
    uint64_t result = sub_1AFFCBE38();
    uint64_t v31 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v11 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v32) & ~*(void *)(v11 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v11 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v14 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    __src[0] = v49;
    __src[1] = v48;
    __src[2] = v52;
    __src[3] = v50;
    __src[4] = v55;
    __src[5] = v51;
    __src[6] = v44;
    __src[7] = v54;
    __src[8] = v46;
    __src[9] = v57;
    __src[10] = v22;
    __src[11] = v47;
    __src[12] = v45;
    __src[13] = v56;
    sub_1AFEBBEDC((uint64_t)v77, (uint64_t)&__src[14], &qword_1EB819618, (uint64_t)&type metadata for PaidBundleConfiguration);
    __src[78] = v73;
    __src[79] = v69;
    __src[80] = v66;
    __src[81] = v63;
    __src[82] = v61;
    __src[83] = v60;
    __src[84] = v59;
    __src[85] = v58;
    LOBYTE(__src[86]) = v53;
    __src[87] = v67;
    __src[88] = v64;
    __src[89] = v75;
    __src[90] = v71;
    __src[91] = v68;
    __src[92] = v65;
    LOBYTE(__src[93]) = v62;
    __src[94] = v74;
    __src[95] = v70;
    __src[96] = v25;
    void __src[97] = v72;
    __src[98] = v24;
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    uint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
    *uint64_t v15 = v20;
    v15[1] = v19;
    uint64_t result = (uint64_t)memcpy((void *)(*(void *)(v7 + 56) + 792 * v14), __src, 0x318uLL);
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  unint64_t v27 = v41;
  if ((v43 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v27, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v27 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1AFEB7A7C(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for YahooQuoteDetailItem(0);
  uint64_t v42 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_1AFEBBC48(0, &qword_1EB81B2D0, (void (*)(uint64_t))type metadata accessor for YahooQuoteDetailItem);
  int v43 = a2;
  uint64_t v9 = sub_1AFFCB9E8();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  uint64_t v41 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  int64_t v39 = v2;
  int64_t v40 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 64;
  uint64_t result = sub_1AFFC8E48();
  int64_t v17 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v40) {
      break;
    }
    int64_t v23 = v41;
    unint64_t v24 = v41[v22];
    ++v17;
    if (!v24)
    {
      int64_t v17 = v22 + 1;
      if (v22 + 1 >= v40) {
        goto LABEL_34;
      }
      unint64_t v24 = v41[v17];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v40)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v39;
          if ((v43 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v24 = v41[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v17 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v40) {
              goto LABEL_34;
            }
            unint64_t v24 = v41[v17];
            ++v25;
            if (v24) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v25;
      }
    }
LABEL_21:
    unint64_t v14 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    int64_t v26 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v21);
    uint64_t v28 = *v26;
    uint64_t v27 = v26[1];
    uint64_t v29 = *(void *)(v42 + 72);
    uint64_t v30 = *(void *)(v8 + 56) + v29 * v21;
    if (v43)
    {
      sub_1AFEBBCAC(v30, (uint64_t)v7, type metadata accessor for YahooQuoteDetailItem);
    }
    else
    {
      sub_1AFEBC5BC(v30, (uint64_t)v7, type metadata accessor for YahooQuoteDetailItem);
      sub_1AFFC8E38();
    }
    sub_1AFFCBDF8();
    sub_1AFFCAF68();
    uint64_t result = sub_1AFFCBE38();
    uint64_t v31 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v15 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v18 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = (void *)(*(void *)(v10 + 48) + 16 * v18);
    *uint64_t v19 = v28;
    v19[1] = v27;
    uint64_t result = sub_1AFEBBCAC((uint64_t)v7, *(void *)(v10 + 56) + v29 * v18, type metadata accessor for YahooQuoteDetailItem);
    ++*(void *)(v10 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  int64_t v23 = v41;
  if ((v43 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v8 + 32);
  if (v38 >= 64) {
    bzero(v23, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v23 = -1 << v38;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

void *sub_1AFEB7E74()
{
  return sub_1AFEB7EAC((unint64_t *)&unk_1EB811A68, (uint64_t)&unk_1EB811A50, (uint64_t)&protocolRef_FCHeadlineMetadata);
}

void *sub_1AFEB7E90()
{
  return sub_1AFEB7EAC(&qword_1EB811A78, (uint64_t)&qword_1EB818100, (uint64_t)&protocolRef_FCHeadlineProviding);
}

void *sub_1AFEB7EAC(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  sub_1AFEBC670(0, a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1AFD2D178);
  uint64_t v5 = *v3;
  uint64_t v6 = sub_1AFFCB9D8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_24:
    uint64_t result = (void *)swift_release();
    *uint64_t v4 = v7;
    return result;
  }
  uint64_t result = (void *)(v6 + 64);
  uint64_t v9 = v5 + 64;
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v10) {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  }
  int64_t v12 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v5 + 64);
  int64_t v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      unint64_t v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    if (__OFADD__(v12++, 1)) {
      goto LABEL_26;
    }
    if (v12 >= v16) {
      goto LABEL_24;
    }
    unint64_t v26 = *(void *)(v9 + 8 * v12);
    if (!v26) {
      break;
    }
LABEL_23:
    unint64_t v15 = (v26 - 1) & v26;
    unint64_t v18 = __clz(__rbit64(v26)) + (v12 << 6);
LABEL_12:
    uint64_t v19 = 16 * v18;
    unint64_t v20 = (void *)(*(void *)(v5 + 48) + 16 * v18);
    uint64_t v21 = v20[1];
    uint64_t v22 = 8 * v18;
    uint64_t v23 = *(void *)(*(void *)(v5 + 56) + v22);
    unint64_t v24 = (void *)(*(void *)(v7 + 48) + v19);
    void *v24 = *v20;
    v24[1] = v21;
    *(void *)(*(void *)(v7 + 56) + v22) = v23;
    sub_1AFFC8E38();
    uint64_t result = (void *)swift_unknownObjectRetain();
  }
  int64_t v27 = v12 + 1;
  if (v12 + 1 >= v16) {
    goto LABEL_24;
  }
  unint64_t v26 = *(void *)(v9 + 8 * v27);
  if (v26)
  {
    ++v12;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v12 >= v16) {
      goto LABEL_24;
    }
    unint64_t v26 = *(void *)(v9 + 8 * v12);
    ++v27;
    if (v26) {
      goto LABEL_23;
    }
  }
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

void *sub_1AFEB8068()
{
  uint64_t v1 = v0;
  sub_1AFE05518(0, (unint64_t *)&qword_1EB819F00);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1AFFCB9D8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    unint64_t v20 = (uint64_t *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    uint64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v23 = v19;
    v23[1] = v18;
    unint64_t v24 = (void *)(*(void *)(v4 + 56) + v16);
    void *v24 = v21;
    v24[1] = v22;
    sub_1AFFC8E38();
    uint64_t result = (void *)sub_1AFFC8E38();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1AFEB8230()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for QuoteDetail();
  uint64_t v29 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFEBBC48(0, (unint64_t *)&unk_1EB8181D0, (void (*)(uint64_t))type metadata accessor for QuoteDetail);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1AFFCB9D8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v7;
    return result;
  }
  int64_t v27 = v1;
  uint64_t result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v28 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v23 >= v14) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_23;
      }
      unint64_t v24 = *(void *)(v28 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_9:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v16);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    unint64_t v21 = *(void *)(v29 + 72) * v16;
    sub_1AFEBC5BC(*(void *)(v5 + 56) + v21, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for QuoteDetail);
    uint64_t v22 = (void *)(*(void *)(v7 + 48) + v17);
    *uint64_t v22 = v19;
    v22[1] = v20;
    sub_1AFEBBCAC((uint64_t)v4, *(void *)(v7 + 56) + v21, (uint64_t (*)(void))type metadata accessor for QuoteDetail);
    uint64_t result = (void *)sub_1AFFC8E38();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v27;
    goto LABEL_25;
  }
  unint64_t v24 = *(void *)(v28 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1AFEB84DC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Quote();
  uint64_t v29 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFEBBC48(0, &qword_1EB818208, (void (*)(uint64_t))type metadata accessor for Quote);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1AFFCB9D8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v7;
    return result;
  }
  int64_t v27 = v1;
  uint64_t result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v28 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v23 >= v14) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_23;
      }
      unint64_t v24 = *(void *)(v28 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_9:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v16);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    unint64_t v21 = *(void *)(v29 + 72) * v16;
    sub_1AFEBC5BC(*(void *)(v5 + 56) + v21, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for Quote);
    uint64_t v22 = (void *)(*(void *)(v7 + 48) + v17);
    *uint64_t v22 = v19;
    v22[1] = v20;
    sub_1AFEBBCAC((uint64_t)v4, *(void *)(v7 + 56) + v21, (uint64_t (*)(void))type metadata accessor for Quote);
    uint64_t result = (void *)sub_1AFFC8E38();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v27;
    goto LABEL_25;
  }
  unint64_t v24 = *(void *)(v28 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1AFEB8788()
{
  uint64_t v1 = v0;
  sub_1AFE05518(0, &qword_1EB818210);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1AFFCB9D8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v36 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v36 >= v13) {
      goto LABEL_26;
    }
    unint64_t v37 = *(void *)(v6 + 8 * v36);
    ++v9;
    if (!v37)
    {
      int64_t v9 = v36 + 1;
      if (v36 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v37 = *(void *)(v6 + 8 * v9);
      if (!v37) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v37 - 1) & v37;
    unint64_t v15 = __clz(__rbit64(v37)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 136 * v15;
    uint64_t v21 = *(void *)(v2 + 56) + v20;
    long long v23 = *(_OWORD *)(v21 + 16);
    long long v22 = *(_OWORD *)(v21 + 32);
    long long v24 = *(_OWORD *)(v21 + 64);
    long long v42 = *(_OWORD *)(v21 + 48);
    long long v43 = v24;
    long long v26 = *(_OWORD *)(v21 + 96);
    long long v25 = *(_OWORD *)(v21 + 112);
    long long v27 = *(_OWORD *)(v21 + 80);
    uint64_t v47 = *(void *)(v21 + 128);
    long long v45 = v26;
    long long v46 = v25;
    long long v44 = v27;
    long long v39 = *(_OWORD *)v21;
    long long v40 = v23;
    long long v41 = v22;
    uint64_t v28 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v28 = v19;
    v28[1] = v18;
    uint64_t v29 = *(void *)(v4 + 56) + v20;
    *(_OWORD *)uint64_t v29 = v39;
    long long v30 = v40;
    long long v31 = v41;
    long long v32 = v43;
    *(_OWORD *)(v29 + 48) = v42;
    *(_OWORD *)(v29 + 64) = v32;
    *(_OWORD *)(v29 + 16) = v30;
    *(_OWORD *)(v29 + 32) = v31;
    long long v33 = v44;
    long long v34 = v45;
    long long v35 = v46;
    *(void *)(v29 + 128) = v47;
    *(_OWORD *)(v29 + 96) = v34;
    *(_OWORD *)(v29 + 112) = v35;
    *(_OWORD *)(v29 + 80) = v33;
    sub_1AFFC8E38();
    uint64_t result = (void *)sub_1AFD76370((uint64_t)&v39);
  }
  int64_t v38 = v36 + 2;
  if (v38 >= v13) {
    goto LABEL_26;
  }
  unint64_t v37 = *(void *)(v6 + 8 * v38);
  if (v37)
  {
    int64_t v9 = v38;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v38 + 1;
    if (__OFADD__(v38, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v37 = *(void *)(v6 + 8 * v9);
    ++v38;
    if (v37) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1AFEB89B8()
{
  uint64_t v1 = v0;
  sub_1AFE05518(0, &qword_1EB818218);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1AFFCB9D8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v29 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v29 >= v13) {
      goto LABEL_26;
    }
    unint64_t v30 = *(void *)(v6 + 8 * v29);
    ++v9;
    if (!v30)
    {
      int64_t v9 = v29 + 1;
      if (v29 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v30 = *(void *)(v6 + 8 * v9);
      if (!v30) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v30 - 1) & v30;
    unint64_t v15 = __clz(__rbit64(v30)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 48 * v15;
    uint64_t v21 = *(void *)(v2 + 56) + v20;
    uint64_t v22 = *(void *)v21;
    uint64_t v23 = *(void *)(v21 + 8);
    uint64_t v25 = *(void *)(v21 + 16);
    uint64_t v24 = *(void *)(v21 + 24);
    uint64_t v26 = *(void *)(v21 + 32);
    LOWORD(v21) = *(_WORD *)(v21 + 40);
    long long v27 = (void *)(*(void *)(v4 + 48) + v16);
    *long long v27 = v19;
    v27[1] = v18;
    uint64_t v28 = *(void *)(v4 + 56) + v20;
    *(void *)uint64_t v28 = v22;
    *(void *)(v28 + 8) = v23;
    *(void *)(v28 + 16) = v25;
    *(void *)(v28 + 24) = v24;
    *(void *)(v28 + 32) = v26;
    *(_WORD *)(v28 + 40) = v21;
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    uint64_t result = (void *)sub_1AFFC8E38();
  }
  int64_t v31 = v29 + 2;
  if (v31 >= v13) {
    goto LABEL_26;
  }
  unint64_t v30 = *(void *)(v6 + 8 * v31);
  if (v30)
  {
    int64_t v9 = v31;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v30 = *(void *)(v6 + 8 * v9);
    ++v31;
    if (v30) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1AFEB8BB8()
{
  return sub_1AFEB9420(&qword_1EB816AD0, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0]);
}

id sub_1AFEB8BD4()
{
  uint64_t v1 = v0;
  sub_1AFE05C24();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1AFFCB9D8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = *(void **)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v16) = v18;
    id v19 = v17;
    id result = v18;
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1AFEB8D78()
{
  uint64_t v1 = v0;
  sub_1AFE05518(0, &qword_1EB816920);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1AFFCB9D8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v25 = v1;
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 136 * v15;
    sub_1AFDF97C0(*(void *)(v2 + 56) + 136 * v15, (uint64_t)v26);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = v19;
    v21[1] = v18;
    sub_1AFDF97C0((uint64_t)v26, *(void *)(v4 + 56) + v20);
    sub_1AFFC8E38();
    id result = (void *)sub_1AFD76370((uint64_t)v26);
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1AFEB8F78()
{
  uint64_t v1 = v0;
  sub_1AFE05518(0, &qword_1EB81B2A8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1AFFCB9D8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v36 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v36 >= v13) {
      goto LABEL_26;
    }
    unint64_t v37 = *(void *)(v6 + 8 * v36);
    ++v9;
    if (!v37)
    {
      int64_t v9 = v36 + 1;
      if (v36 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v37 = *(void *)(v6 + 8 * v9);
      if (!v37) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v37 - 1) & v37;
    unint64_t v15 = __clz(__rbit64(v37)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 136 * v15;
    uint64_t v21 = *(void *)(v2 + 56) + v20;
    long long v23 = *(_OWORD *)(v21 + 16);
    long long v22 = *(_OWORD *)(v21 + 32);
    long long v24 = *(_OWORD *)(v21 + 64);
    long long v42 = *(_OWORD *)(v21 + 48);
    long long v43 = v24;
    long long v26 = *(_OWORD *)(v21 + 96);
    long long v25 = *(_OWORD *)(v21 + 112);
    long long v27 = *(_OWORD *)(v21 + 80);
    uint64_t v47 = *(void *)(v21 + 128);
    long long v45 = v26;
    long long v46 = v25;
    long long v44 = v27;
    long long v39 = *(_OWORD *)v21;
    long long v40 = v23;
    long long v41 = v22;
    uint64_t v28 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v28 = v19;
    v28[1] = v18;
    uint64_t v29 = *(void *)(v4 + 56) + v20;
    *(_OWORD *)uint64_t v29 = v39;
    long long v30 = v40;
    long long v31 = v41;
    long long v32 = v43;
    *(_OWORD *)(v29 + 48) = v42;
    *(_OWORD *)(v29 + 64) = v32;
    *(_OWORD *)(v29 + 16) = v30;
    *(_OWORD *)(v29 + 32) = v31;
    long long v33 = v44;
    long long v34 = v45;
    long long v35 = v46;
    *(void *)(v29 + 128) = v47;
    *(_OWORD *)(v29 + 96) = v34;
    *(_OWORD *)(v29 + 112) = v35;
    *(_OWORD *)(v29 + 80) = v33;
    sub_1AFFC8E38();
    id result = sub_1AFD8CCA0((uint64_t *)&v39);
  }
  int64_t v38 = v36 + 2;
  if (v38 >= v13) {
    goto LABEL_26;
  }
  unint64_t v37 = *(void *)(v6 + 8 * v38);
  if (v37)
  {
    int64_t v9 = v38;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v38 + 1;
    if (__OFADD__(v38, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v37 = *(void *)(v6 + 8 * v9);
    ++v38;
    if (v37) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1AFEB91A8()
{
  sub_1AFE05518(0, (unint64_t *)&unk_1EB8181E0);
  long long v35 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_1AFFCB9D8();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *long long v35 = v3;
    return result;
  }
  id result = (void *)(v2 + 64);
  unint64_t v5 = (unint64_t)((1 << *(unsigned char *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v5) {
    id result = memmove(result, (const void *)(v1 + 64), 8 * v5);
  }
  uint64_t v37 = v1 + 64;
  int64_t v7 = 0;
  *(void *)(v3 + 16) = *(void *)(v1 + 16);
  uint64_t v8 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(v1 + 64);
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      unint64_t v11 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v12 = v11 | (v7 << 6);
      goto LABEL_12;
    }
    int64_t v32 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v32 >= v36) {
      goto LABEL_26;
    }
    unint64_t v33 = *(void *)(v37 + 8 * v32);
    ++v7;
    if (!v33)
    {
      int64_t v7 = v32 + 1;
      if (v32 + 1 >= v36) {
        goto LABEL_26;
      }
      unint64_t v33 = *(void *)(v37 + 8 * v7);
      if (!v33) {
        break;
      }
    }
LABEL_25:
    unint64_t v10 = (v33 - 1) & v33;
    unint64_t v12 = __clz(__rbit64(v33)) + (v7 << 6);
LABEL_12:
    uint64_t v13 = 16 * v12;
    unint64_t v14 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v12);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    uint64_t v17 = 104 * v12;
    uint64_t v18 = *(void *)(v1 + 56) + v17;
    uint64_t v19 = *(void *)v18;
    uint64_t v20 = *(void *)(v18 + 8);
    uint64_t v21 = *(void *)(v18 + 16);
    uint64_t v22 = *(void *)(v18 + 24);
    uint64_t v23 = *(void *)(v18 + 32);
    uint64_t v24 = *(void *)(v18 + 72);
    char v25 = *(unsigned char *)(v18 + 80);
    uint64_t v27 = *(void *)(v18 + 88);
    uint64_t v26 = *(void *)(v18 + 96);
    uint64_t v28 = (void *)(*(void *)(v3 + 48) + v13);
    long long v29 = *(_OWORD *)(v18 + 40);
    long long v30 = *(_OWORD *)(v18 + 56);
    *uint64_t v28 = v15;
    v28[1] = v16;
    uint64_t v31 = *(void *)(v3 + 56) + v17;
    *(void *)uint64_t v31 = v19;
    *(void *)(v31 + 8) = v20;
    *(void *)(v31 + 16) = v21;
    *(void *)(v31 + 24) = v22;
    *(void *)(v31 + 32) = v23;
    *(_OWORD *)(v31 + 40) = v29;
    *(_OWORD *)(v31 + 56) = v30;
    *(void *)(v31 + 72) = v24;
    *(unsigned char *)(v31 + 80) = v25;
    *(void *)(v31 + 88) = v27;
    *(void *)(v31 + 96) = v26;
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    id result = (void *)sub_1AFFC8E38();
  }
  int64_t v34 = v32 + 2;
  if (v34 >= v36) {
    goto LABEL_26;
  }
  unint64_t v33 = *(void *)(v37 + 8 * v34);
  if (v33)
  {
    int64_t v7 = v34;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v7 = v34 + 1;
    if (__OFADD__(v34, 1)) {
      break;
    }
    if (v7 >= v36) {
      goto LABEL_26;
    }
    unint64_t v33 = *(void *)(v37 + 8 * v7);
    ++v34;
    if (v33) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1AFEB9404()
{
  return sub_1AFEB9420(&qword_1EB818220, (unint64_t *)&unk_1EB816AA8, (uint64_t)&type metadata for StockRecord);
}

void *sub_1AFEB9420(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  sub_1AFEBBD14(0, a1, a2, a3);
  uint64_t v5 = *v3;
  uint64_t v6 = sub_1AFFCB9D8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v4 = v7;
    return result;
  }
  id result = (void *)(v6 + 64);
  uint64_t v9 = v5 + 64;
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v10) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  }
  int64_t v12 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v5 + 64);
  int64_t v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      unint64_t v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v16) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v9 + 8 * v25);
    ++v12;
    if (!v26)
    {
      int64_t v12 = v25 + 1;
      if (v25 + 1 >= v16) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v9 + 8 * v12);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v15 = (v26 - 1) & v26;
    unint64_t v18 = __clz(__rbit64(v26)) + (v12 << 6);
LABEL_12:
    uint64_t v19 = 16 * v18;
    uint64_t v20 = (void *)(*(void *)(v5 + 48) + 16 * v18);
    uint64_t v21 = v20[1];
    uint64_t v22 = 8 * v18;
    uint64_t v23 = *(void *)(*(void *)(v5 + 56) + v22);
    uint64_t v24 = (void *)(*(void *)(v7 + 48) + v19);
    void *v24 = *v20;
    v24[1] = v21;
    *(void *)(*(void *)(v7 + 56) + v22) = v23;
    sub_1AFFC8E38();
    id result = (void *)sub_1AFFC8E38();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v16) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v9 + 8 * v27);
  if (v26)
  {
    int64_t v12 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v12 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v12 >= v16) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v9 + 8 * v12);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1AFEB95E0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for EarningsCalendarEventModel();
  uint64_t v29 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFEBBC48(0, &qword_1E9AFC030, (void (*)(uint64_t))type metadata accessor for EarningsCalendarEventModel);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1AFFCB9D8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    id result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v7;
    return result;
  }
  int64_t v27 = v1;
  id result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v28 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v23 >= v14) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_23;
      }
      unint64_t v24 = *(void *)(v28 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_9:
    uint64_t v17 = 16 * v16;
    unint64_t v18 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v16);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    unint64_t v21 = *(void *)(v29 + 72) * v16;
    sub_1AFEBC5BC(*(void *)(v5 + 56) + v21, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for EarningsCalendarEventModel);
    uint64_t v22 = (void *)(*(void *)(v7 + 48) + v17);
    *uint64_t v22 = v19;
    v22[1] = v20;
    sub_1AFEBBCAC((uint64_t)v4, *(void *)(v7 + 56) + v21, (uint64_t (*)(void))type metadata accessor for EarningsCalendarEventModel);
    id result = (void *)sub_1AFFC8E38();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v1 = v27;
    goto LABEL_25;
  }
  unint64_t v24 = *(void *)(v28 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1AFEB988C()
{
  return sub_1AFEB9B70(&qword_1EB811458, (unint64_t *)&qword_1EB818000, (uint64_t)&type metadata for Headline);
}

void *sub_1AFEB98A8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Chart(0);
  uint64_t v29 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFEBBC48(0, &qword_1EB818200, (void (*)(uint64_t))type metadata accessor for Chart);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1AFFCB9D8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    id result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v7;
    return result;
  }
  int64_t v27 = v1;
  id result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v28 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v23 >= v14) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_23;
      }
      unint64_t v24 = *(void *)(v28 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_9:
    uint64_t v17 = 16 * v16;
    unint64_t v18 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v16);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    unint64_t v21 = *(void *)(v29 + 72) * v16;
    sub_1AFEBC5BC(*(void *)(v5 + 56) + v21, (uint64_t)v4, type metadata accessor for Chart);
    uint64_t v22 = (void *)(*(void *)(v7 + 48) + v17);
    *uint64_t v22 = v19;
    v22[1] = v20;
    sub_1AFEBBCAC((uint64_t)v4, *(void *)(v7 + 56) + v21, type metadata accessor for Chart);
    id result = (void *)sub_1AFFC8E38();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v1 = v27;
    goto LABEL_25;
  }
  unint64_t v24 = *(void *)(v28 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1AFEB9B54()
{
  return sub_1AFEB9B70(&qword_1EB810B50, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0]);
}

void *sub_1AFEB9B70(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  sub_1AFEBBD90(0, a1, a2, a3);
  uint64_t v5 = *v3;
  uint64_t v6 = sub_1AFFCB9D8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v4 = v7;
    return result;
  }
  id result = (void *)(v6 + 64);
  uint64_t v9 = v5 + 64;
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v10) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  }
  int64_t v12 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v5 + 64);
  int64_t v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      unint64_t v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    int64_t v28 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v28 >= v16) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v9 + 8 * v28);
    ++v12;
    if (!v29)
    {
      int64_t v12 = v28 + 1;
      if (v28 + 1 >= v16) {
        goto LABEL_26;
      }
      unint64_t v29 = *(void *)(v9 + 8 * v12);
      if (!v29) {
        break;
      }
    }
LABEL_25:
    unint64_t v15 = (v29 - 1) & v29;
    unint64_t v18 = __clz(__rbit64(v29)) + (v12 << 6);
LABEL_12:
    uint64_t v19 = (_OWORD *)(*(void *)(v5 + 48) + 136 * v18);
    long long v21 = v19[1];
    long long v20 = v19[2];
    long long v22 = v19[4];
    v31[3] = v19[3];
    v31[4] = v22;
    long long v23 = v19[5];
    long long v24 = v19[6];
    long long v25 = v19[7];
    uint64_t v32 = *((void *)v19 + 16);
    v31[6] = v24;
    v31[7] = v25;
    v31[5] = v23;
    v31[0] = *v19;
    v31[1] = v21;
    v31[2] = v20;
    uint64_t v26 = 8 * v18;
    uint64_t v27 = *(void *)(*(void *)(v5 + 56) + 8 * v18);
    memmove((void *)(*(void *)(v7 + 48) + 136 * v18), v19, 0x88uLL);
    *(void *)(*(void *)(v7 + 56) + v26) = v27;
    sub_1AFD76370((uint64_t)v31);
    id result = (void *)sub_1AFFC8E38();
  }
  int64_t v30 = v28 + 2;
  if (v30 >= v16) {
    goto LABEL_26;
  }
  unint64_t v29 = *(void *)(v9 + 8 * v30);
  if (v29)
  {
    int64_t v12 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v12 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v12 >= v16) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v9 + 8 * v12);
    ++v30;
    if (v29) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1AFEB9D7C()
{
  uint64_t v1 = v0;
  sub_1AFEBC670(0, (unint64_t *)&qword_1EB811A80, (uint64_t)&unk_1EB811A60, 0x1E4F7E420, (void (*)(uint64_t, uint64_t, uint64_t))sub_1AFD8F6AC);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1AFFCB9D8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_23:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v6 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v8 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v9 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v2 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v8 << 6);
      goto LABEL_9;
    }
    int64_t v21 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v21 >= v12) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    ++v8;
    if (!v22)
    {
      int64_t v8 = v21 + 1;
      if (v21 + 1 >= v12) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v8);
      if (!v22) {
        break;
      }
    }
LABEL_22:
    unint64_t v11 = (v22 - 1) & v22;
    unint64_t v14 = __clz(__rbit64(v22)) + (v8 << 6);
LABEL_9:
    uint64_t v15 = 16 * v14;
    int64_t v16 = (void *)(*(void *)(v2 + 48) + 16 * v14);
    uint64_t v17 = v16[1];
    uint64_t v18 = 8 * v14;
    uint64_t v19 = *(void **)(*(void *)(v2 + 56) + v18);
    long long v20 = (void *)(*(void *)(v4 + 48) + v15);
    *long long v20 = *v16;
    v20[1] = v17;
    *(void *)(*(void *)(v4 + 56) + v18) = v19;
    sub_1AFFC8E38();
    id result = v19;
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v12) {
    goto LABEL_23;
  }
  unint64_t v22 = *(void *)(v6 + 8 * v23);
  if (v22)
  {
    int64_t v8 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v8 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v8 >= v12) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v8);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_1AFEB9F5C()
{
  uint64_t v1 = v0;
  sub_1AFE05518(0, (unint64_t *)&unk_1EB8112B8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1AFFCB9D8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      int64_t v9 = v26 + 1;
      if (v26 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v27 = *(void *)(v6 + 8 * v9);
      if (!v27) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v27 - 1) & v27;
    unint64_t v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 24 * v15;
    uint64_t v21 = *(void *)(v2 + 56) + v20;
    uint64_t v22 = *(void *)v21;
    uint64_t v23 = *(void *)(v21 + 8);
    LOBYTE(v21) = *(unsigned char *)(v21 + 16);
    long long v24 = (void *)(*(void *)(v4 + 48) + v16);
    void *v24 = v19;
    v24[1] = v18;
    uint64_t v25 = *(void *)(v4 + 56) + v20;
    *(void *)uint64_t v25 = v22;
    *(void *)(v25 + 8) = v23;
    *(unsigned char *)(v25 + 16) = v21;
    sub_1AFFC8E38();
    id result = (void *)sub_1AFFC8E38();
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v13) {
    goto LABEL_26;
  }
  unint64_t v27 = *(void *)(v6 + 8 * v28);
  if (v27)
  {
    int64_t v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v9);
    ++v28;
    if (v27) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1AFEBA134()
{
  uint64_t v1 = v0;
  sub_1AFE05518(0, (unint64_t *)&unk_1EB8181F0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1AFFCB9D8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v25 = v1;
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v20 = 776 * v15;
    memcpy(__dst, (const void *)(*(void *)(v2 + 56) + 776 * v15), 0x308uLL);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = v18;
    v21[1] = v19;
    memcpy((void *)(*(void *)(v4 + 56) + v20), __dst, 0x308uLL);
    sub_1AFFC8E38();
    id result = (void *)sub_1AFD48104((uint64_t)__dst);
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1AFEBA33C()
{
  sub_1AFE05518(0, &qword_1EB81B2E8);
  int64_t v34 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_1AFFCB9D8();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *int64_t v34 = v3;
    return result;
  }
  id result = (void *)(v2 + 64);
  uint64_t v5 = v1 + 64;
  unint64_t v6 = (unint64_t)((1 << *(unsigned char *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v6) {
    id result = memmove(result, (const void *)(v1 + 64), 8 * v6);
  }
  int64_t v8 = 0;
  *(void *)(v3 + 16) = *(void *)(v1 + 16);
  uint64_t v9 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v1 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v8 << 6);
      goto LABEL_12;
    }
    int64_t v31 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v31 >= v12) {
      goto LABEL_26;
    }
    unint64_t v32 = *(void *)(v5 + 8 * v31);
    ++v8;
    if (!v32)
    {
      int64_t v8 = v31 + 1;
      if (v31 + 1 >= v12) {
        goto LABEL_26;
      }
      unint64_t v32 = *(void *)(v5 + 8 * v8);
      if (!v32) {
        break;
      }
    }
LABEL_25:
    unint64_t v11 = (v32 - 1) & v32;
    unint64_t v14 = __clz(__rbit64(v32)) + (v8 << 6);
LABEL_12:
    uint64_t v15 = 16 * v14;
    uint64_t v16 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v14);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    uint64_t v19 = 72 * v14;
    uint64_t v20 = *(void *)(v1 + 56) + v19;
    uint64_t v21 = *(void *)v20;
    uint64_t v22 = *(void *)(v20 + 8);
    uint64_t v23 = *(void *)(v20 + 16);
    uint64_t v24 = *(void *)(v20 + 24);
    char v25 = *(unsigned char *)(v20 + 32);
    uint64_t v26 = *(void *)(v20 + 40);
    uint64_t v27 = *(void *)(v20 + 64);
    int64_t v28 = (void *)(*(void *)(v3 + 48) + v15);
    long long v29 = *(_OWORD *)(v20 + 48);
    *int64_t v28 = v17;
    v28[1] = v18;
    uint64_t v30 = *(void *)(v3 + 56) + v19;
    *(void *)uint64_t v30 = v21;
    *(void *)(v30 + 8) = v22;
    *(void *)(v30 + 16) = v23;
    *(void *)(v30 + 24) = v24;
    *(unsigned char *)(v30 + 32) = v25;
    *(void *)(v30 + 40) = v26;
    *(_OWORD *)(v30 + 48) = v29;
    *(void *)(v30 + 64) = v27;
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    id result = (void *)sub_1AFFC8E38();
  }
  int64_t v33 = v31 + 2;
  if (v33 >= v12) {
    goto LABEL_26;
  }
  unint64_t v32 = *(void *)(v5 + 8 * v33);
  if (v32)
  {
    int64_t v8 = v33;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v8 = v33 + 1;
    if (__OFADD__(v33, 1)) {
      break;
    }
    if (v8 >= v12) {
      goto LABEL_26;
    }
    unint64_t v32 = *(void *)(v5 + 8 * v8);
    ++v33;
    if (v32) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1AFEBA568()
{
  uint64_t v1 = v0;
  sub_1AFE05518(0, &qword_1EB81B2E0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1AFFCB9D8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      int64_t v9 = v26 + 1;
      if (v26 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v27 = *(void *)(v6 + 8 * v9);
      if (!v27) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v27 - 1) & v27;
    unint64_t v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 24 * v15;
    uint64_t v21 = *(void *)(v2 + 56) + v20;
    uint64_t v22 = *(void *)v21;
    uint64_t v23 = *(void *)(v21 + 8);
    LOBYTE(v21) = *(unsigned char *)(v21 + 16);
    uint64_t v24 = (void *)(*(void *)(v4 + 48) + v16);
    void *v24 = v19;
    v24[1] = v18;
    uint64_t v25 = *(void *)(v4 + 56) + v20;
    *(void *)uint64_t v25 = v22;
    *(void *)(v25 + 8) = v23;
    *(unsigned char *)(v25 + 16) = v21;
    sub_1AFFC8E38();
    id result = (void *)sub_1AFFC8E38();
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v13) {
    goto LABEL_26;
  }
  unint64_t v27 = *(void *)(v6 + 8 * v28);
  if (v27)
  {
    int64_t v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v9);
    ++v28;
    if (v27) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1AFEBA740()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for YahooMultiQuoteItem(0);
  uint64_t v29 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFEBBC48(0, &qword_1EB81B2D8, (void (*)(uint64_t))type metadata accessor for YahooMultiQuoteItem);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1AFFCB9D8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    id result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v7;
    return result;
  }
  unint64_t v27 = v1;
  id result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v28 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v23 >= v14) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_23;
      }
      unint64_t v24 = *(void *)(v28 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_9:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v16);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    unint64_t v21 = *(void *)(v29 + 72) * v16;
    sub_1AFEBC5BC(*(void *)(v5 + 56) + v21, (uint64_t)v4, type metadata accessor for YahooMultiQuoteItem);
    uint64_t v22 = (void *)(*(void *)(v7 + 48) + v17);
    *uint64_t v22 = v19;
    v22[1] = v20;
    sub_1AFEBBCAC((uint64_t)v4, *(void *)(v7 + 56) + v21, type metadata accessor for YahooMultiQuoteItem);
    id result = (void *)sub_1AFFC8E38();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v1 = v27;
    goto LABEL_25;
  }
  unint64_t v24 = *(void *)(v28 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1AFEBA9EC()
{
  uint64_t v1 = v0;
  sub_1AFEBBC48(0, &qword_1EB8112C8, (void (*)(uint64_t))sub_1AFEBBE18);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1AFFCB9D8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    sub_1AFFC8E38();
    id result = (void *)sub_1AFFC8E38();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1AFEBABBC()
{
  uint64_t v1 = type metadata accessor for SDSAuthToken();
  uint64_t v29 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1AFFC96E8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFEBC4E8();
  int64_t v24 = v0;
  uint64_t v8 = *v0;
  uint64_t v9 = sub_1AFFCB9D8();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16))
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t *v24 = v10;
    return result;
  }
  id result = (void *)(v9 + 64);
  unint64_t v12 = (unint64_t)((1 << *(unsigned char *)(v10 + 32)) + 63) >> 6;
  if (v10 != v8 || (unint64_t)result >= v8 + 64 + 8 * v12) {
    id result = memmove(result, (const void *)(v8 + 64), 8 * v12);
  }
  int64_t v13 = 0;
  *(void *)(v10 + 16) = *(void *)(v8 + 16);
  uint64_t v14 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(v8 + 64);
  uint64_t v25 = v8 + 64;
  int64_t v26 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v27 = v5 + 32;
  uint64_t v28 = v5 + 16;
  while (1)
  {
    if (v16)
    {
      unint64_t v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v18 = v17 | (v13 << 6);
      goto LABEL_9;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v21 >= v26) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v25 + 8 * v21);
    ++v13;
    if (!v22)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v26) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v25 + 8 * v13);
      if (!v22) {
        break;
      }
    }
LABEL_22:
    unint64_t v16 = (v22 - 1) & v22;
    unint64_t v18 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_9:
    unint64_t v19 = *(void *)(v5 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v7, *(void *)(v8 + 48) + v19, v4);
    unint64_t v20 = *(void *)(v29 + 72) * v18;
    sub_1AFEBC5BC(*(void *)(v8 + 56) + v20, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for SDSAuthToken);
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(void *)(v10 + 48) + v19, v7, v4);
    id result = (void *)sub_1AFEBBCAC((uint64_t)v3, *(void *)(v10 + 56) + v20, (uint64_t (*)(void))type metadata accessor for SDSAuthToken);
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v26) {
    goto LABEL_23;
  }
  unint64_t v22 = *(void *)(v25 + 8 * v23);
  if (v22)
  {
    int64_t v13 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v13 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v13 >= v26) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v25 + 8 * v13);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_1AFEBAEF8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1AFFCB948();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFEBBE70();
  uint64_t v6 = *v0;
  uint64_t v7 = sub_1AFFCB9D8();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v8;
    return result;
  }
  int64_t v23 = v1;
  id result = (void *)(v7 + 64);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10) {
    id result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  }
  uint64_t v24 = v6 + 64;
  int64_t v12 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v6 + 64);
  int64_t v25 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v26 = v3 + 16;
  while (1)
  {
    if (v15)
    {
      unint64_t v16 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v17 = v16 | (v12 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v25) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v24 + 8 * v20);
    ++v12;
    if (!v21)
    {
      int64_t v12 = v20 + 1;
      if (v20 + 1 >= v25) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v24 + 8 * v12);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v15 = (v21 - 1) & v21;
    unint64_t v17 = __clz(__rbit64(v21)) + (v12 << 6);
LABEL_12:
    unint64_t v18 = *(void *)(v3 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v18, v2);
    uint64_t v19 = 32 * v17;
    sub_1AFD38AF4(*(void *)(v6 + 56) + v19, (uint64_t)v27);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v8 + 48) + v18, v5, v2);
    id result = sub_1AFD8DDEC(v27, (_OWORD *)(*(void *)(v8 + 56) + v19));
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v25)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v1 = v23;
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v24 + 8 * v22);
  if (v21)
  {
    int64_t v12 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v12 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v12 >= v25) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v24 + 8 * v12);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1AFEBB198()
{
  uint64_t v1 = v0;
  sub_1AFE05518(0, &qword_1EB819F10);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1AFFCB9D8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v25 = v1;
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v20 = 792 * v15;
    memcpy(__dst, (const void *)(*(void *)(v2 + 56) + 792 * v15), 0x318uLL);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = v18;
    v21[1] = v19;
    memcpy((void *)(*(void *)(v4 + 56) + v20), __dst, 0x318uLL);
    sub_1AFFC8E38();
    id result = (void *)sub_1AFEBBF5C((uint64_t)__dst);
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1AFEBB3A0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for YahooQuoteDetailItem(0);
  uint64_t v29 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFEBBC48(0, &qword_1EB81B2D0, (void (*)(uint64_t))type metadata accessor for YahooQuoteDetailItem);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1AFFCB9D8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    id result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v7;
    return result;
  }
  uint64_t v27 = v1;
  id result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v28 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v23 >= v14) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_23;
      }
      unint64_t v24 = *(void *)(v28 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_9:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v16);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    unint64_t v21 = *(void *)(v29 + 72) * v16;
    sub_1AFEBC5BC(*(void *)(v5 + 56) + v21, (uint64_t)v4, type metadata accessor for YahooQuoteDetailItem);
    int64_t v22 = (void *)(*(void *)(v7 + 48) + v17);
    *int64_t v22 = v19;
    v22[1] = v20;
    sub_1AFEBBCAC((uint64_t)v4, *(void *)(v7 + 56) + v21, type metadata accessor for YahooQuoteDetailItem);
    id result = (void *)sub_1AFFC8E38();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v1 = v27;
    goto LABEL_25;
  }
  unint64_t v24 = *(void *)(v28 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1AFEBB64C(uint64_t a1, uint64_t a2)
{
  sub_1AFD2CF70(a1, (uint64_t)v16);
  sub_1AFD2CF70(a2, (uint64_t)v17);
  sub_1AFD2CF70((uint64_t)v16, (uint64_t)v18);
  sub_1AFD2D15C((uint64_t)v18);
  uint64_t v3 = *(void **)sub_1AFD2D168((uint64_t)v18);
  sub_1AFD2D03C(v16, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
  id v4 = objc_msgSend(v3, sel_identifier);
  uint64_t v5 = sub_1AFFCAE98();
  uint64_t v7 = v6;

  sub_1AFD2D03C(v16, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2D0A0);
  sub_1AFD2CF70((uint64_t)v17, (uint64_t)v15);
  sub_1AFD2D15C((uint64_t)v15);
  uint64_t v8 = *(void **)sub_1AFD2D168((uint64_t)v15);
  sub_1AFD2D03C(v17, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
  id v9 = objc_msgSend(v8, sel_identifier);
  uint64_t v10 = sub_1AFFCAE98();
  uint64_t v12 = v11;

  sub_1AFD2D03C(v17, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2D0A0);
  if (v5 == v10 && v7 == v12) {
    char v13 = 1;
  }
  else {
    char v13 = sub_1AFFCBCE8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v13 & 1;
}

unint64_t sub_1AFEBB7DC()
{
  unint64_t result = qword_1E9AFC020;
  if (!qword_1E9AFC020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC020);
  }
  return result;
}

void destroy for Headline(uint64_t a1)
{
}

uint64_t *initializeWithCopy for Headline(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  uint64_t v9 = a2[6];
  uint64_t v10 = a2[7];
  uint64_t v11 = a2[8];
  uint64_t v13 = a2[9];
  uint64_t v14 = a2[10];
  uint64_t v15 = a2[11];
  unint64_t v16 = (void *)a2[12];
  uint64_t v17 = a2[13];
  uint64_t v18 = a2[14];
  uint64_t v19 = a2[15];
  uint64_t v20 = a2[16];
  uint64_t v21 = a2[17];
  sub_1AFD2CFCC(*a2, v4, v5, v6, v7, v8, v9, v10, v11, v13, v14, v15, v16, v17);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v11;
  a1[9] = v13;
  a1[10] = v14;
  a1[11] = v15;
  a1[12] = (uint64_t)v16;
  a1[13] = v17;
  a1[14] = v18;
  a1[15] = v19;
  a1[16] = v20;
  a1[17] = v21;
  return a1;
}

uint64_t assignWithCopy for Headline(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  uint64_t v9 = a2[6];
  uint64_t v10 = a2[7];
  uint64_t v11 = a2[8];
  uint64_t v24 = a2[9];
  uint64_t v25 = a2[10];
  uint64_t v26 = a2[11];
  uint64_t v27 = (void *)a2[12];
  uint64_t v28 = a2[13];
  uint64_t v29 = a2[14];
  uint64_t v30 = a2[15];
  uint64_t v31 = a2[16];
  uint64_t v32 = a2[17];
  sub_1AFD2CFCC(*a2, v4, v5, v6, v7, v8, v9, v10, v11, v24, v25, v26, v27, v28);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  long long v20 = *(_OWORD *)(a1 + 64);
  long long v21 = *(_OWORD *)(a1 + 80);
  long long v22 = *(_OWORD *)(a1 + 96);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v24;
  *(void *)(a1 + 80) = v25;
  *(void *)(a1 + 88) = v26;
  *(void *)(a1 + 96) = v27;
  *(void *)(a1 + 104) = v28;
  *(void *)(a1 + 112) = v29;
  *(void *)(a1 + 120) = v30;
  *(void *)(a1 + 128) = v31;
  *(void *)(a1 + 136) = v32;
  sub_1AFD2D0A0(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), (void *)v22, *((uint64_t *)&v22 + 1));
  return a1;
}

uint64_t assignWithTake for Headline(uint64_t a1, _OWORD *a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v7 = *(void *)(a1 + 32);
  uint64_t v8 = *(void *)(a1 + 40);
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t v10 = *(void *)(a1 + 56);
  long long v11 = *(_OWORD *)(a1 + 64);
  long long v12 = *(_OWORD *)(a1 + 80);
  long long v13 = *(_OWORD *)(a1 + 96);
  long long v14 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v14;
  long long v15 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v15;
  long long v16 = a2[5];
  *(_OWORD *)(a1 + 64) = a2[4];
  *(_OWORD *)(a1 + 80) = v16;
  long long v17 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v17;
  *(_OWORD *)(a1 + 128) = a2[8];
  sub_1AFD2D0A0(v3, v5, v4, v6, v7, v8, v9, v10, v11, *((uint64_t *)&v11 + 1), v12, *((uint64_t *)&v12 + 1), (void *)v13, *((uint64_t *)&v13 + 1));
  return a1;
}

uint64_t getEnumTagSinglePayload for Headline(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 144)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *(void *)(a1 + 104) >> 1;
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

double storeEnumTagSinglePayload for Headline(uint64_t a1, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(a1 + 136) = 0;
    double result = 0.0;
    *(_OWORD *)(a1 + 120) = 0u;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(a1 + 144) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      double result = 0.0;
      *(_OWORD *)(a1 + 64) = 0u;
      *(_OWORD *)(a1 + 80) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)(a1 + 48) = 0u;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(void *)(a1 + 96) = 0;
      *(void *)(a1 + 104) = 2 * -a2;
      *(_OWORD *)(a1 + 112) = 0u;
      *(_OWORD *)(a1 + 128) = 0u;
      return result;
    }
    *(unsigned char *)(a1 + 144) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_1AFEBBC24(uint64_t result, uint64_t a2)
{
  *(void *)(result + 104) = *(void *)(result + 104) & 1 | (a2 << 63);
  return result;
}

ValueMetadata *type metadata accessor for Headline()
{
  return &type metadata for Headline;
}

void sub_1AFEBBC48(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1AFFCBA18();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1AFEBBCAC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1AFEBBD14(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  if (!*a2)
  {
    sub_1AFEBC624(255, a3, a4, MEMORY[0x1E4FBB320]);
    unint64_t v5 = sub_1AFFCBA18();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1AFEBBD90(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  if (!*a2)
  {
    sub_1AFEBC624(255, a3, a4, MEMORY[0x1E4FBB320]);
    sub_1AFD764A0();
    unint64_t v5 = sub_1AFFCBA18();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1AFEBBE18()
{
  if (!qword_1EB811270)
  {
    type metadata accessor for ChartManagerObserverProxy();
    unint64_t v0 = sub_1AFFCB288();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB811270);
    }
  }
}

void sub_1AFEBBE70()
{
  if (!qword_1EB819F18)
  {
    sub_1AFFCB948();
    unint64_t v0 = sub_1AFFCBA18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB819F18);
    }
  }
}

uint64_t sub_1AFEBBEDC(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1AFEBC624(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1AFEBBF5C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 88);
  uint64_t v12 = *(void *)(a1 + 80);
  uint64_t v32 = *(void *)(a1 + 120);
  uint64_t v33 = *(void *)(a1 + 112);
  uint64_t v30 = *(void *)(a1 + 136);
  uint64_t v31 = *(void *)(a1 + 128);
  uint64_t v28 = *(void *)(a1 + 152);
  uint64_t v29 = *(void *)(a1 + 144);
  uint64_t v26 = *(void *)(a1 + 168);
  uint64_t v27 = *(void *)(a1 + 160);
  long long v24 = *(_OWORD *)(a1 + 192);
  long long v25 = *(_OWORD *)(a1 + 176);
  long long v22 = *(_OWORD *)(a1 + 224);
  long long v23 = *(_OWORD *)(a1 + 208);
  long long v21 = *(_OWORD *)(a1 + 240);
  long long v19 = *(_OWORD *)(a1 + 272);
  long long v20 = *(_OWORD *)(a1 + 256);
  long long v18 = *(_OWORD *)(a1 + 288);
  long long v16 = *(_OWORD *)(a1 + 304);
  long long v14 = *(_OWORD *)(a1 + 336);
  long long v15 = *(_OWORD *)(a1 + 320);
  long long v13 = *(_OWORD *)(a1 + 352);
  long long v11 = *(_OWORD *)(a1 + 368);
  long long v9 = *(_OWORD *)(a1 + 400);
  long long v10 = *(_OWORD *)(a1 + 384);
  long long v7 = *(_OWORD *)(a1 + 432);
  long long v8 = *(_OWORD *)(a1 + 416);
  long long v5 = *(_OWORD *)(a1 + 464);
  long long v6 = *(_OWORD *)(a1 + 448);
  long long v4 = *(_OWORD *)(a1 + 480);
  uint64_t v17 = *(void *)(a1 + 624);
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFEBC260(v12, v2);
  sub_1AFEBC2A4(v33, v32, v31, v30, v29, v28, v27, v26, v25, *((uint64_t *)&v25 + 1), v24, *((uint64_t *)&v24 + 1), v23, *((uint64_t *)&v23 + 1), v22, *((uint64_t *)&v22 + 1), v21, *((uint64_t *)&v21 + 1), v20,
    *((uint64_t *)&v20 + 1),
    v19,
    *((uint64_t *)&v19 + 1),
    v18,
    *((uint64_t *)&v18 + 1),
    v16,
    *((uint64_t *)&v16 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v11,
    *((uint64_t *)&v11 + 1),
    v10,
    *((uint64_t *)&v10 + 1),
    v9,
    *((uint64_t *)&v9 + 1),
    v8,
    *((uint64_t *)&v8 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v4);
  sub_1AFEBC4D8(v17);
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  return a1;
}

uint64_t sub_1AFEBC260(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_1AFFC8E38();
    return sub_1AFFC8E38();
  }
  return result;
}

uint64_t sub_1AFEBC2A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  if (a8)
  {
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFDB3A78(a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45,
      a46,
      a47);
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    return sub_1AFFC8E38();
  }
  return result;
}

uint64_t sub_1AFEBC4D8(uint64_t result)
{
  if (result != 1) {
    return sub_1AFFC8E38();
  }
  return result;
}

void sub_1AFEBC4E8()
{
  if (!qword_1EB818720)
  {
    sub_1AFFC96E8();
    type metadata accessor for SDSAuthToken();
    sub_1AFEBC564();
    unint64_t v0 = sub_1AFFCBA18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB818720);
    }
  }
}

unint64_t sub_1AFEBC564()
{
  unint64_t result = qword_1EB81A618;
  if (!qword_1EB81A618)
  {
    sub_1AFFC96E8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB81A618);
  }
  return result;
}

uint64_t sub_1AFEBC5BC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_1AFEBC624(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1AFEBC670(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    a5(255, a3, a4);
    unint64_t v6 = sub_1AFFCBA18();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_1AFEBC6E0()
{
  unint64_t result = qword_1E9AFC038[0];
  if (!qword_1E9AFC038[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9AFC038);
  }
  return result;
}

unint64_t sub_1AFEBC738()
{
  unint64_t result = qword_1EB816B20;
  if (!qword_1EB816B20)
  {
    type metadata accessor for SymbolEntity();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816B20);
  }
  return result;
}

uint64_t sub_1AFEBC790(uint64_t a1, uint64_t a2)
{
  v2[39] = a1;
  v2[40] = a2;
  v2[41] = *(void *)(type metadata accessor for SymbolEntity() - 8);
  v2[42] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1AFEBC84C, 0, 0);
}

uint64_t sub_1AFEBC84C()
{
  if (sub_1AFFC8F58())
  {
    swift_getKeyPath();
    sub_1AFD33084();
    sub_1AFFC8CA8();
    swift_release();
    swift_release();
    uint64_t v1 = *(void *)(v0 + 280);
    long long v8 = *(_OWORD *)(v0 + 288);
    *(_OWORD *)(v0 + 344) = v8;
    sub_1AFFC8998();
    uint64_t v2 = *(void *)(v0 + 224);
    uint64_t v3 = *(void *)(v0 + 232);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 200), v2);
    *(void *)(v0 + 360) = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 144))(v1, v8, v2, v3);
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 368) = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_1AFEBCA00;
    return MEMORY[0x1F415EBC8](v0 + 152);
  }
  else
  {
    swift_task_dealloc();
    unint64_t v5 = *(uint64_t (**)(uint64_t))(v0 + 8);
    uint64_t v6 = MEMORY[0x1E4FBC860];
    return v5(v6);
  }
}

uint64_t sub_1AFEBCA00()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {

    swift_release();
    uint64_t v3 = sub_1AFEBD018;
  }
  else
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v2 + 200);
    uint64_t v3 = sub_1AFEBCB38;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1AFEBCB38()
{
  uint64_t v15 = v0;
  uint64_t v1 = *(void *)(v0 + 160);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 168);
    uint64_t v3 = *(void *)(v0 + 176);
    uint64_t v4 = *(void *)(v0 + 184);
    __int16 v5 = *(_WORD *)(v0 + 192);
    uint64_t v12 = *(void *)(v0 + 152);
    sub_1AFFC8998();
    uint64_t v6 = *(void *)(v0 + 264);
    uint64_t v7 = *(void *)(v0 + 272);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 240), v6);
    v13[0] = v12;
    v13[1] = v1;
    void v13[2] = v2;
    v13[3] = v3;
    v13[4] = v4;
    __int16 v14 = v5;
    *(void *)(v0 + 376) = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 112))(v13, v6, v7);
    sub_1AFD30C94(v12, v1);
    long long v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 384) = v8;
    *long long v8 = v0;
    v8[1] = sub_1AFEBCD00;
    return MEMORY[0x1F415EBC8](v0 + 304);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_task_dealloc();
    uint64_t v9 = *(uint64_t (**)(uint64_t))(v0 + 8);
    uint64_t v10 = MEMORY[0x1E4FBC860];
    return v9(v10);
  }
}

uint64_t sub_1AFEBCD00()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {

    swift_release();
    uint64_t v3 = sub_1AFEBD0A0;
  }
  else
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v2 + 240);
    uint64_t v3 = sub_1AFEBCE38;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1AFEBCE38()
{
  uint64_t v26 = v0;
  uint64_t v1 = *(void *)(v0 + 304);
  int64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 328);
    uint64_t v23 = MEMORY[0x1E4FBC860];
    sub_1AFD9DB10(0, v2, 0);
    uint64_t v4 = v23;
    int64_t v5 = v2 - 1;
    for (uint64_t i = 32; ; i += 136)
    {
      uint64_t v7 = *(void *)(v0 + 336);
      *(_OWORD *)(v0 + 16) = *(_OWORD *)(v1 + i);
      long long v8 = *(_OWORD *)(v1 + i + 64);
      long long v10 = *(_OWORD *)(v1 + i + 16);
      long long v9 = *(_OWORD *)(v1 + i + 32);
      *(_OWORD *)(v0 + 64) = *(_OWORD *)(v1 + i + 48);
      *(_OWORD *)(v0 + 80) = v8;
      *(_OWORD *)(v0 + 32) = v10;
      *(_OWORD *)(v0 + 48) = v9;
      long long v12 = *(_OWORD *)(v1 + i + 96);
      long long v11 = *(_OWORD *)(v1 + i + 112);
      long long v13 = *(_OWORD *)(v1 + i + 80);
      *(void *)(v0 + 144) = *(void *)(v1 + i + 128);
      *(_OWORD *)(v0 + 112) = v12;
      *(_OWORD *)(v0 + 128) = v11;
      *(_OWORD *)(v0 + 96) = v13;
      long long v14 = *(_OWORD *)(v1 + i + 112);
      v24[6] = *(_OWORD *)(v1 + i + 96);
      v24[7] = v14;
      uint64_t v25 = *(void *)(v1 + i + 128);
      long long v15 = *(_OWORD *)(v1 + i + 48);
      v24[2] = *(_OWORD *)(v1 + i + 32);
      v24[3] = v15;
      long long v16 = *(_OWORD *)(v1 + i + 80);
      v24[4] = *(_OWORD *)(v1 + i + 64);
      v24[5] = v16;
      long long v17 = *(_OWORD *)(v1 + i + 16);
      v24[0] = *(_OWORD *)(v1 + i);
      v24[1] = v17;
      sub_1AFD76370(v0 + 16);
      SymbolEntity.init(from:)(v24, v7);
      unint64_t v19 = *(void *)(v23 + 16);
      unint64_t v18 = *(void *)(v23 + 24);
      if (v19 >= v18 >> 1) {
        sub_1AFD9DB10(v18 > 1, v19 + 1, 1);
      }
      uint64_t v20 = *(void *)(v0 + 336);
      *(void *)(v23 + 16) = v19 + 1;
      sub_1AFD5BC6C(v20, v23+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v19);
      if (!v5) {
        break;
      }
      --v5;
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v4 = MEMORY[0x1E4FBC860];
  }
  swift_task_dealloc();
  long long v21 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v21(v4);
}

uint64_t sub_1AFEBD018()
{
  swift_bridgeObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 200);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  return v1(v2);
}

uint64_t sub_1AFEBD0A0()
{
  swift_bridgeObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 240);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  return v1(v2);
}

uint64_t sub_1AFEBD128(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  int64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v5;
  void *v5 = v2;
  v5[1] = sub_1AFD6BBC4;
  return sub_1AFEBC790(v3, v4);
}

ValueMetadata *type metadata accessor for SymbolInWatchlistOptionsProvider()
{
  return &type metadata for SymbolInWatchlistOptionsProvider;
}

id sub_1AFEBD288(void *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_1AFD2C83C();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1AFFC98F8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  long long v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v12 = v2;
  long long v13 = (void *)sub_1AFFCAE68();
  id v14 = objc_msgSend(a1, sel_decodeObjectForKey_, v13);

  if (v14)
  {
    sub_1AFFCB6F8();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v20, 0, sizeof(v20));
  }
  sub_1AFD3BCF4((uint64_t)v20, (uint64_t)v21);
  if (!v22)
  {
    sub_1AFD779F8((uint64_t)v21, (uint64_t (*)(void))sub_1AFD3BD58);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    goto LABEL_8;
  }
  int v15 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v7, v15 ^ 1u, 1, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
LABEL_8:

    sub_1AFD779F8((uint64_t)v7, (uint64_t (*)(void))sub_1AFD2C83C);
    swift_deallocPartialClassInstance();
    return 0;
  }
  long long v16 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v16(v11, v7, v8);
  v16(&v12[OBJC_IVAR___SCUpdateAppLaunchUpsellLastSeenDateCommand_appLaunchUpsellLastSeenDate], v11, v8);

  v19.receiver = v12;
  v19.super_class = ObjectType;
  id v17 = objc_msgSendSuper2(&v19, sel_init);

  return v17;
}

uint64_t sub_1AFEBD668()
{
  return type metadata accessor for UpdateAppLaunchUpsellLastSeenDateCommand();
}

uint64_t type metadata accessor for UpdateAppLaunchUpsellLastSeenDateCommand()
{
  uint64_t result = qword_1EB817A00;
  if (!qword_1EB817A00) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1AFEBD6BC(void *a1, uint64_t a2)
{
  id v3 = objc_msgSend(a1, sel_encryptedValues);
  swift_getObjectType();
  uint64_t v4 = a2 + OBJC_IVAR___SCUpdateAppLaunchUpsellLastSeenDateCommand_appLaunchUpsellLastSeenDate;
  uint64_t v5 = sub_1AFFC98F8();
  v8[3] = v5;
  v8[4] = MEMORY[0x1E4F19B10];
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v8);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(boxed_opaque_existential_1, v4, v5);
  sub_1AFFCB5A8();
  return swift_unknownObjectRelease();
}

uint64_t sub_1AFEBD8E4()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1AFEBD91C(void *a1)
{
  return sub_1AFEBD6BC(a1, *(void *)(v1 + 16));
}

uint64_t type metadata accessor for WatchlistDeprecationMonitor()
{
  return self;
}

uint64_t sub_1AFEBD948()
{
  uint64_t v0 = sub_1AFFC9F78();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1AFEBD9B0()
{
  sub_1AFFC9EF8();
  sub_1AFFC8E48();
  sub_1AFFC9E98();

  return swift_release();
}

uint64_t sub_1AFEBDA20()
{
  return MEMORY[0x1F415E3A0](*v0);
}

uint64_t sub_1AFEBDA4C()
{
  return sub_1AFEBD948();
}

uint64_t sub_1AFEBDA54()
{
  uint64_t v1 = v0 + 2;
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[6];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return sub_1AFD50964(v2, v3);
}

uint64_t AppDependencyManager.addStocksDependencies(using:)(uint64_t a1, uint64_t a2)
{
  uint64_t v20 = 0;
  long long v18 = 0u;
  long long v19 = 0u;
  uint64_t v5 = (void *)swift_allocObject();
  v5[2] = v2;
  _OWORD v5[3] = a1;
  v5[4] = a2;
  uint64_t v6 = sub_1AFD2CDB0(0, (unint64_t *)&unk_1EB81A7F8);
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  MEMORY[0x1B3E8AE40](&v18, &unk_1E9AFC060, v5, v6);
  swift_release();
  sub_1AFEBF35C((uint64_t)&v18);
  uint64_t v20 = 0;
  long long v18 = 0u;
  long long v19 = 0u;
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = v2;
  uint64_t v7[3] = a1;
  void v7[4] = a2;
  uint64_t v8 = sub_1AFD2CDB0(0, &qword_1EB81A9D8);
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  MEMORY[0x1B3E8AE40](&v18, &unk_1E9AFC070, v7, v8);
  swift_release();
  sub_1AFEBF35C((uint64_t)&v18);
  uint64_t v20 = 0;
  long long v18 = 0u;
  long long v19 = 0u;
  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = v2;
  v9[3] = a1;
  void v9[4] = a2;
  uint64_t v10 = sub_1AFD2CDB0(0, (unint64_t *)&qword_1EB81A890);
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  MEMORY[0x1B3E8AE40](&v18, &unk_1E9AFC080, v9, v10);
  swift_release();
  sub_1AFEBF35C((uint64_t)&v18);
  uint64_t v20 = 0;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v11 = (void *)swift_allocObject();
  void v11[2] = v2;
  void v11[3] = a1;
  void v11[4] = a2;
  uint64_t v12 = sub_1AFD2CDB0(0, (unint64_t *)&qword_1EB816B10);
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  MEMORY[0x1B3E8AE40](&v18, &unk_1E9AFC090, v11, v12);
  swift_release();
  sub_1AFEBF35C((uint64_t)&v18);
  uint64_t v20 = 0;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v13 = (void *)swift_allocObject();
  void v13[2] = v2;
  v13[3] = a1;
  v13[4] = a2;
  uint64_t v14 = sub_1AFD2CDB0(0, &qword_1EB81A790);
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  MEMORY[0x1B3E8AE40](&v18, &unk_1E9AFC0A0, v13, v14);
  swift_release();
  sub_1AFEBF35C((uint64_t)&v18);
  uint64_t v20 = 0;
  long long v18 = 0u;
  long long v19 = 0u;
  int v15 = (void *)swift_allocObject();
  void v15[2] = v2;
  v15[3] = a1;
  v15[4] = a2;
  uint64_t v16 = sub_1AFD2CDB0(0, (unint64_t *)&unk_1EB81A910);
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  MEMORY[0x1B3E8AE40](&v18, &unk_1E9AFC0B0, v15, v16);
  swift_release();
  return sub_1AFEBF35C((uint64_t)&v18);
}

uint64_t sub_1AFEBDE18(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)(v3 + 96) = a1;
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a3 + *a3);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 104) = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_1AFEBDEF8;
  return v6(v3 + 16);
}

uint64_t sub_1AFEBDEF8()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1AFEBDFF4, 0, 0);
}

uint64_t sub_1AFEBDFF4()
{
  sub_1AFFCB2F8();
  *(void *)(v0 + 112) = sub_1AFFCB2E8();
  uint64_t v2 = sub_1AFFCB2A8();
  return MEMORY[0x1F4188298](sub_1AFEBE088, v2, v1);
}

uint64_t sub_1AFEBE088()
{
  swift_release();
  sub_1AFD2CDB0(0, (unint64_t *)&unk_1EB81A910);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
  uint64_t result = sub_1AFFC9E68();
  if (*(void *)(v0 + 80))
  {
    sub_1AFD80454((long long *)(v0 + 56), *(void *)(v0 + 96));
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1AFEBE170(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)(v3 + 96) = a1;
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a3 + *a3);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 104) = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_1AFEBE250;
  return v6(v3 + 16);
}

uint64_t sub_1AFEBE250()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1AFEBE34C, 0, 0);
}

uint64_t sub_1AFEBE34C()
{
  sub_1AFFCB2F8();
  *(void *)(v0 + 112) = sub_1AFFCB2E8();
  uint64_t v2 = sub_1AFFCB2A8();
  return MEMORY[0x1F4188298](sub_1AFEBE3E0, v2, v1);
}

uint64_t sub_1AFEBE3E0()
{
  swift_release();
  sub_1AFD2CDB0(0, &qword_1EB81A790);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
  uint64_t result = sub_1AFFC9E68();
  if (*(void *)(v0 + 80))
  {
    sub_1AFD80454((long long *)(v0 + 56), *(void *)(v0 + 96));
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1AFEBE4C8(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)(v3 + 96) = a1;
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a3 + *a3);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 104) = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_1AFEBE5A8;
  return v6(v3 + 16);
}

uint64_t sub_1AFEBE5A8()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1AFEBE6A4, 0, 0);
}

uint64_t sub_1AFEBE6A4()
{
  sub_1AFFCB2F8();
  *(void *)(v0 + 112) = sub_1AFFCB2E8();
  uint64_t v2 = sub_1AFFCB2A8();
  return MEMORY[0x1F4188298](sub_1AFEBE738, v2, v1);
}

uint64_t sub_1AFEBE738()
{
  swift_release();
  sub_1AFD2CDB0(0, (unint64_t *)&qword_1EB816B10);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
  uint64_t result = sub_1AFFC9E68();
  if (*(void *)(v0 + 80))
  {
    sub_1AFD80454((long long *)(v0 + 56), *(void *)(v0 + 96));
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1AFEBE820(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)(v3 + 96) = a1;
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a3 + *a3);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 104) = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_1AFEBE900;
  return v6(v3 + 16);
}

uint64_t sub_1AFEBE900()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1AFEBE9FC, 0, 0);
}

uint64_t sub_1AFEBE9FC()
{
  sub_1AFFCB2F8();
  *(void *)(v0 + 112) = sub_1AFFCB2E8();
  uint64_t v2 = sub_1AFFCB2A8();
  return MEMORY[0x1F4188298](sub_1AFEBEA90, v2, v1);
}

uint64_t sub_1AFEBEA90()
{
  swift_release();
  sub_1AFD2CDB0(0, (unint64_t *)&qword_1EB81A890);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
  uint64_t result = sub_1AFFC9E68();
  if (*(void *)(v0 + 80))
  {
    sub_1AFD80454((long long *)(v0 + 56), *(void *)(v0 + 96));
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1AFEBEB78(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)(v3 + 96) = a1;
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a3 + *a3);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 104) = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_1AFEBEC58;
  return v6(v3 + 16);
}

uint64_t sub_1AFEBEC58()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1AFEBED54, 0, 0);
}

uint64_t sub_1AFEBED54()
{
  sub_1AFFCB2F8();
  *(void *)(v0 + 112) = sub_1AFFCB2E8();
  uint64_t v2 = sub_1AFFCB2A8();
  return MEMORY[0x1F4188298](sub_1AFEBEDE8, v2, v1);
}

uint64_t sub_1AFEBEDE8()
{
  swift_release();
  sub_1AFD2CDB0(0, &qword_1EB81A9D8);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
  uint64_t result = sub_1AFFC9E68();
  if (*(void *)(v0 + 80))
  {
    sub_1AFD80454((long long *)(v0 + 56), *(void *)(v0 + 96));
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1AFEBEED0(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)(v3 + 96) = a1;
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a3 + *a3);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 104) = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_1AFEBEFB0;
  return v6(v3 + 16);
}

uint64_t sub_1AFEBEFB0()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1AFEBF0AC, 0, 0);
}

uint64_t sub_1AFEBF0AC()
{
  sub_1AFFCB2F8();
  *(void *)(v0 + 112) = sub_1AFFCB2E8();
  uint64_t v2 = sub_1AFFCB2A8();
  return MEMORY[0x1F4188298](sub_1AFEBF140, v2, v1);
}

uint64_t sub_1AFEBF140()
{
  swift_release();
  sub_1AFD2CDB0(0, (unint64_t *)&unk_1EB81A7F8);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
  uint64_t result = sub_1AFFC9E68();
  if (*(void *)(v0 + 80))
  {
    sub_1AFD80454((long long *)(v0 + 56), *(void *)(v0 + 96));
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1AFEBF22C(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 24);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_1AFD56424;
  v5[12] = a1;
  uint64_t v8 = (uint64_t (*)(void *))((char *)v4 + *v4);
  uint64_t v6 = (void *)swift_task_alloc();
  v5[13] = v6;
  *uint64_t v6 = v5;
  v6[1] = sub_1AFEBEFB0;
  return v8(v5 + 2);
}

uint64_t sub_1AFEBF35C(uint64_t a1)
{
  sub_1AFEBF3B8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1AFEBF3B8()
{
  if (!qword_1EB816C68)
  {
    unint64_t v0 = sub_1AFFCB658();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB816C68);
    }
  }
}

uint64_t sub_1AFEBF414(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 24);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_1AFD56424;
  v5[12] = a1;
  uint64_t v8 = (uint64_t (*)(void *))((char *)v4 + *v4);
  uint64_t v6 = (void *)swift_task_alloc();
  v5[13] = v6;
  *uint64_t v6 = v5;
  v6[1] = sub_1AFEBEC58;
  return v8(v5 + 2);
}

uint64_t sub_1AFEBF548(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 24);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_1AFD56424;
  v5[12] = a1;
  uint64_t v8 = (uint64_t (*)(void *))((char *)v4 + *v4);
  uint64_t v6 = (void *)swift_task_alloc();
  v5[13] = v6;
  *uint64_t v6 = v5;
  v6[1] = sub_1AFEBE900;
  return v8(v5 + 2);
}

uint64_t sub_1AFEBF67C(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 24);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_1AFD56424;
  v5[12] = a1;
  uint64_t v8 = (uint64_t (*)(void *))((char *)v4 + *v4);
  uint64_t v6 = (void *)swift_task_alloc();
  v5[13] = v6;
  *uint64_t v6 = v5;
  v6[1] = sub_1AFEBE5A8;
  return v8(v5 + 2);
}

uint64_t sub_1AFEBF7B0(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 24);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_1AFD56424;
  v5[12] = a1;
  uint64_t v8 = (uint64_t (*)(void *))((char *)v4 + *v4);
  uint64_t v6 = (void *)swift_task_alloc();
  v5[13] = v6;
  *uint64_t v6 = v5;
  v6[1] = sub_1AFEBE250;
  return v8(v5 + 2);
}

uint64_t sub_1AFEBF8E4(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 24);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_1AFD3503C;
  v5[12] = a1;
  uint64_t v8 = (uint64_t (*)(void *))((char *)v4 + *v4);
  uint64_t v6 = (void *)swift_task_alloc();
  v5[13] = v6;
  *uint64_t v6 = v5;
  v6[1] = sub_1AFEBDEF8;
  return v8(v5 + 2);
}

uint64_t YahooHeadline.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1AFFC96E8();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t YahooHeadline.title.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for YahooHeadline() + 20));
  sub_1AFFC8E38();
  return v1;
}

uint64_t type metadata accessor for YahooHeadline()
{
  uint64_t result = qword_1E9AFC0B8;
  if (!qword_1E9AFC0B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t YahooHeadline.summary.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for YahooHeadline() + 24));
  sub_1AFFC8E38();
  return v1;
}

uint64_t YahooHeadline.source.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for YahooHeadline() + 28));
  sub_1AFFC8E38();
  return v1;
}

uint64_t YahooHeadline.publishDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for YahooHeadline() + 32);
  uint64_t v4 = sub_1AFFC98F8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t YahooHeadline.relatedSymbol.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for YahooHeadline() + 36));
  sub_1AFFC8E38();
  return v1;
}

uint64_t *initializeBufferWithCopyOfBuffer for YahooHeadline(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v28 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1AFFC8E48();
  }
  else
  {
    uint64_t v7 = sub_1AFFC96E8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (uint64_t *)((char *)a1 + v8);
    long long v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    long long v13 = (uint64_t *)((char *)a1 + v9);
    uint64_t v14 = (uint64_t *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    *long long v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = a3[7];
    uint64_t v17 = a3[8];
    long long v18 = (uint64_t *)((char *)a1 + v16);
    long long v19 = (uint64_t *)((char *)a2 + v16);
    uint64_t v20 = v19[1];
    *long long v18 = *v19;
    v18[1] = v20;
    long long v21 = (char *)a1 + v17;
    uint64_t v30 = (char *)a2 + v17;
    uint64_t v22 = sub_1AFFC98F8();
    uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    v23(v21, v30, v22);
    uint64_t v24 = a3[9];
    uint64_t v25 = (uint64_t *)((char *)a1 + v24);
    uint64_t v26 = (uint64_t *)((char *)a2 + v24);
    uint64_t v27 = v26[1];
    void *v25 = *v26;
    v25[1] = v27;
    sub_1AFFC8E38();
  }
  return a1;
}

uint64_t destroy for YahooHeadline(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1AFFC96E8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 32);
  uint64_t v6 = sub_1AFFC98F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for YahooHeadline(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1AFFC96E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  long long v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)(a1 + v15);
  long long v18 = (void *)(a2 + v15);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = a1 + v16;
  uint64_t v28 = a2 + v16;
  uint64_t v21 = sub_1AFFC98F8();
  uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16);
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  v22(v20, v28, v21);
  uint64_t v23 = a3[9];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (void *)(a2 + v23);
  uint64_t v26 = v25[1];
  void *v24 = *v25;
  v24[1] = v26;
  sub_1AFFC8E38();
  return a1;
}

uint64_t assignWithCopy for YahooHeadline(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1AFFC96E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[8];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_1AFFC98F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 24))(v17, v18, v19);
  uint64_t v20 = a3[9];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  *uint64_t v21 = *v22;
  v21[1] = v22[1];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for YahooHeadline(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1AFFC96E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1AFFC98F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t assignWithTake for YahooHeadline(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1AFFC96E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[7];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (uint64_t *)(a2 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *uint64_t v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[8];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  uint64_t v25 = sub_1AFFC98F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 40))(v23, v24, v25);
  uint64_t v26 = a3[9];
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = (uint64_t *)(a2 + v26);
  uint64_t v30 = *v28;
  uint64_t v29 = v28[1];
  *uint64_t v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for YahooHeadline(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1AFEC03A4);
}

uint64_t sub_1AFEC03A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1AFFC96E8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = sub_1AFFC98F8();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 32);
    return v12(v14, a2, v13);
  }
}

uint64_t storeEnumTagSinglePayload for YahooHeadline(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1AFEC04E8);
}

uint64_t sub_1AFEC04E8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1AFFC96E8();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = sub_1AFFC98F8();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 32);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t sub_1AFEC0618()
{
  uint64_t result = sub_1AFFC96E8();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1AFFC98F8();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1AFEC06F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  void v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x1F4188298](sub_1AFEC0718, 0, 0);
}

uint64_t sub_1AFEC0718()
{
  v0[6] = (*(uint64_t (**)(void))(v0[4] + 24))(v0[3]);
  unint64_t v1 = (void *)swift_task_alloc();
  v0[7] = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_1AFEC07D4;
  uint64_t v2 = v0[2];
  return MEMORY[0x1F415EBC8](v2);
}

uint64_t sub_1AFEC07D4()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1AFEC0910, 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1AFEC0910()
{
  swift_release();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1AFEC0974()
{
  return swift_allocObject();
}

uint64_t sub_1AFEC0984()
{
  return v0;
}

uint64_t sub_1AFEC098C()
{
  return sub_1AFFCA6F8();
}

uint64_t sub_1AFEC0A0C()
{
  return sub_1AFFCA6E8();
}

unint64_t sub_1AFEC0A98()
{
  unint64_t result = qword_1E9AFC0E0;
  if (!qword_1E9AFC0E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC0E0);
  }
  return result;
}

uint64_t sub_1AFEC0AEC()
{
  return v0;
}

uint64_t sub_1AFEC0AF4()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1AFEC0B04()
{
  return sub_1AFFCA6F8();
}

uint64_t sub_1AFEC0B84(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1AFEC0C2C(&qword_1EB81B2F0, (void (*)(void))type metadata accessor for EmptyNewsUserProfileProvider);
  uint64_t result = sub_1AFEC0C2C(&qword_1EB81B2F8, (void (*)(void))type metadata accessor for EmptyNewsUserProfileProvider);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t type metadata accessor for EmptyNewsUserProfileProvider()
{
  return self;
}

uint64_t sub_1AFEC0C2C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AFEC0C70()
{
  return sub_1AFFCA6E8();
}

uint64_t sub_1AFEC0CFC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_1AFEC0D10(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for EmptyNewsUserProfileProvider);
}

uint64_t sub_1AFEC0D28()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t sub_1AFEC0D3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  uint64_t v11 = (void *)swift_allocObject();
  void v11[2] = a5;
  void v11[3] = sub_1AFD948F8;
  void v11[4] = v10;
  v11[5] = a3;
  v11[6] = a4;
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFCA828();

  return swift_release();
}

void sub_1AFEC0E14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = *(void **)(a1 + 16);
  uint64_t v63 = MEMORY[0x1E4FBC860];
  id v8 = objc_msgSend(v7, sel_subscriptionList);
  if (objc_msgSend(v8, sel_isDirty))
  {
    sub_1AFEC2E9C(0, (unint64_t *)&qword_1EB81A100, (uint64_t (*)(uint64_t))sub_1AFD3AE64, MEMORY[0x1E4FBBE00]);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1AFFD0DC0;
    id v10 = objc_msgSend(v8, sel_subscribedTagIDs);
    if (v10)
    {
      uint64_t v11 = v10;
      uint64_t v12 = sub_1AFFCB358();

      uint64_t v13 = *(void *)(v12 + 16);
      swift_bridgeObjectRelease();
      uint64_t v14 = MEMORY[0x1E4FBB550];
      uint64_t v15 = MEMORY[0x1E4FBB5C8];
      *(void *)(v9 + 56) = MEMORY[0x1E4FBB550];
      *(void *)(v9 + 64) = v15;
      *(void *)(v9 + 32) = v13;
      id v16 = objc_msgSend(v8, sel_autoFavoriteTagIDs);
      if (v16)
      {
        uint64_t v17 = v16;
        uint64_t v18 = sub_1AFFCB358();

        uint64_t v19 = *(void *)(v18 + 16);
        swift_bridgeObjectRelease();
        *(void *)(v9 + 96) = v14;
        *(void *)(v9 + 104) = v15;
        *(void *)(v9 + 72) = v19;
        id v20 = objc_msgSend(v8, sel_mutedTagIDs);
        if (v20)
        {
          uint64_t v21 = v20;
          uint64_t v22 = sub_1AFFCB358();

          uint64_t v23 = *(void *)(v22 + 16);
          swift_bridgeObjectRelease();
          *(void *)(v9 + 136) = v14;
          *(void *)(v9 + 144) = v15;
          *(void *)(v9 + 112) = v23;
          sub_1AFD8F6AC(0, (unint64_t *)&qword_1EB819EA0);
          uint64_t v24 = (void *)sub_1AFFCB638();
          sub_1AFFCB478();
          sub_1AFFCA878();
          swift_bridgeObjectRelease();

          MEMORY[0x1F4188790](v25);
          sub_1AFEC2E9C(0, &qword_1EB811180, (uint64_t (*)(uint64_t))type metadata accessor for FCFetchResult, MEMORY[0x1E4FAB088]);
          swift_allocObject();
          sub_1AFFCA758();
          *(void *)(swift_allocObject() + 16) = v8;
          id v26 = v8;
          uint64_t v27 = (void *)sub_1AFFCA5E8();
          sub_1AFFCA708();
          swift_release();
          swift_release();

          MEMORY[0x1B3E8D5F0]();
          if (*(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1AFFCB228();
          }
          sub_1AFFCB278();
          sub_1AFFCB1E8();
          goto LABEL_8;
        }
LABEL_37:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_37;
  }
LABEL_8:
  id v28 = objc_msgSend(v7, sel_userInfo);
  if (objc_msgSend(v28, sel_isDirty))
  {
    sub_1AFD8F6AC(0, (unint64_t *)&qword_1EB819EA0);
    uint64_t v29 = (void *)sub_1AFFCB638();
    sub_1AFFCB478();
    sub_1AFFCA878();

    MEMORY[0x1F4188790](v30);
    sub_1AFEC2E9C(0, &qword_1EB811180, (uint64_t (*)(uint64_t))type metadata accessor for FCFetchResult, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    sub_1AFFCA758();
    uint64_t v31 = (void *)sub_1AFFCA5E8();
    sub_1AFFCA708();
    swift_release();

    MEMORY[0x1B3E8D5F0]();
    if (*(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1AFFCB228();
    }
    sub_1AFFCB278();
    sub_1AFFCB1E8();
  }
  uint64_t v59 = a4;
  uint64_t v60 = a5;
  sub_1AFEC2E9C(0, &qword_1EB811180, (uint64_t (*)(uint64_t))type metadata accessor for FCFetchResult, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  sub_1AFFCA758();
  MEMORY[0x1B3E8D5F0]();
  if (*(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1AFFCB228();
  }
  sub_1AFFCB278();
  sub_1AFFCB1E8();
  id v32 = objc_msgSend(v7, sel_readingList);
  if (objc_msgSend(v32, sel_isDirty))
  {
    sub_1AFD8F6AC(0, (unint64_t *)&qword_1EB819EA0);
    uint64_t v33 = (void *)sub_1AFFCB638();
    sub_1AFFCB478();
    sub_1AFFCA878();

    MEMORY[0x1F4188790](v34);
    swift_allocObject();
    sub_1AFFCA758();
    long long v35 = (void *)sub_1AFFCA5E8();
    sub_1AFFCA708();
    swift_release();

    MEMORY[0x1B3E8D5F0]();
    if (*(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1AFFCB228();
    }
    sub_1AFFCB278();
    sub_1AFFCB1E8();
  }
  id v36 = objc_msgSend(v7, sel_audioPlaylist);
  if (objc_msgSend(v36, sel_isDirty))
  {
    sub_1AFD8F6AC(0, (unint64_t *)&qword_1EB819EA0);
    uint64_t v37 = (void *)sub_1AFFCB638();
    sub_1AFFCB478();
    sub_1AFFCA878();

    MEMORY[0x1F4188790](v38);
    swift_allocObject();
    sub_1AFFCA758();
    long long v39 = (void *)sub_1AFFCA5E8();
    sub_1AFFCA708();
    swift_release();

    MEMORY[0x1B3E8D5F0]();
    if (*(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1AFFCB228();
    }
    sub_1AFFCB278();
    sub_1AFFCB1E8();
  }
  uint64_t v58 = v28;
  id v40 = objc_msgSend(v7, sel_readingHistory);
  if (objc_msgSend(v40, sel_isDirty))
  {
    sub_1AFD8F6AC(0, (unint64_t *)&qword_1EB819EA0);
    long long v41 = (void *)sub_1AFFCB638();
    sub_1AFFCB478();
    sub_1AFFCA878();

    MEMORY[0x1F4188790](v42);
    swift_allocObject();
    sub_1AFFCA758();
    long long v43 = (void *)sub_1AFFCA5E8();
    sub_1AFFCA708();
    swift_release();

    MEMORY[0x1B3E8D5F0]();
    if (*(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1AFFCB228();
    }
    sub_1AFFCB278();
    sub_1AFFCB1E8();
  }
  id v44 = objc_msgSend(v7, sel_personalizationData);
  if (objc_msgSend(v44, sel_isDirty))
  {
    sub_1AFD8F6AC(0, (unint64_t *)&qword_1EB819EA0);
    long long v45 = (void *)sub_1AFFCB638();
    sub_1AFFCB478();
    sub_1AFFCA878();

    MEMORY[0x1F4188790](v46);
    swift_allocObject();
    sub_1AFFCA758();
    uint64_t v47 = (void *)sub_1AFFCA5E8();
    sub_1AFFCA708();
    swift_release();

    MEMORY[0x1B3E8D5F0]();
    if (*(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1AFFCB228();
    }
    sub_1AFFCB278();
    sub_1AFFCB1E8();
  }
  id v48 = objc_msgSend(v7, sel_userEventHistory);
  if (objc_msgSend(v48, sel_isDirty))
  {
    sub_1AFD8F6AC(0, (unint64_t *)&qword_1EB819EA0);
    uint64_t v49 = (void *)sub_1AFFCB638();
    sub_1AFFCB478();
    sub_1AFFCA878();

    MEMORY[0x1F4188790](v50);
    swift_allocObject();
    sub_1AFFCA758();
    uint64_t v51 = (void *)sub_1AFFCA5E8();
    sub_1AFFCA708();
    swift_release();

    MEMORY[0x1B3E8D5F0]();
    if (*(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1AFFCB228();
    }
    sub_1AFFCB278();
    sub_1AFFCB1E8();
  }
  uint64_t v52 = (void *)sub_1AFFCA5E8();
  type metadata accessor for FCFetchResult(0);
  sub_1AFFCA548();
  swift_bridgeObjectRelease();

  uint64_t v53 = swift_allocObject();
  *(void *)(v53 + 16) = a2;
  *(void *)(v53 + 24) = a3;
  sub_1AFFC8E48();
  uint64_t v54 = (void *)sub_1AFFCA5E8();
  sub_1AFFCA678();
  swift_release();
  swift_release();

  uint64_t v55 = swift_allocObject();
  *(void *)(v55 + 16) = v59;
  *(void *)(v55 + 24) = v60;
  sub_1AFFC8E48();
  uint64_t v56 = (void *)sub_1AFFCA5E8();
  sub_1AFFCA6B8();
  swift_release();
  swift_release();

  uint64_t v57 = (void *)sub_1AFFCA5E8();
  sub_1AFFCA708();

  swift_release();
  swift_release();
}

void sub_1AFEC1C4C(void *a1)
{
  sub_1AFEC2E9C(0, (unint64_t *)&qword_1EB81A100, (uint64_t (*)(uint64_t))sub_1AFD3AE64, MEMORY[0x1E4FBBE00]);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1AFFD0DC0;
  id v3 = objc_msgSend(a1, sel_subscribedTagIDs);
  if (!v3)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v4 = v3;
  uint64_t v5 = sub_1AFFCB358();

  uint64_t v6 = *(void *)(v5 + 16);
  swift_bridgeObjectRelease();
  uint64_t v7 = MEMORY[0x1E4FBB550];
  uint64_t v8 = MEMORY[0x1E4FBB5C8];
  *(void *)(v2 + 56) = MEMORY[0x1E4FBB550];
  *(void *)(v2 + 64) = v8;
  *(void *)(v2 + 32) = v6;
  id v9 = objc_msgSend(a1, sel_autoFavoriteTagIDs);
  if (!v9)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  id v10 = v9;
  uint64_t v11 = sub_1AFFCB358();

  uint64_t v12 = *(void *)(v11 + 16);
  swift_bridgeObjectRelease();
  *(void *)(v2 + 96) = v7;
  *(void *)(v2 + 104) = v8;
  *(void *)(v2 + 72) = v12;
  id v13 = objc_msgSend(a1, sel_mutedTagIDs);
  if (!v13)
  {
LABEL_9:
    __break(1u);
    return;
  }
  uint64_t v14 = v13;
  uint64_t v15 = sub_1AFFCB358();

  uint64_t v16 = *(void *)(v15 + 16);
  swift_bridgeObjectRelease();
  *(void *)(v2 + 136) = v7;
  *(void *)(v2 + 144) = v8;
  *(void *)(v2 + 112) = v16;
  sub_1AFD8F6AC(0, (unint64_t *)&qword_1EB819EA0);
  id v17 = (id)sub_1AFFCB638();
  sub_1AFFCB478();
  sub_1AFFCA878();
  swift_bridgeObjectRelease();
}

void sub_1AFEC1E50()
{
}

void sub_1AFEC1E60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  sub_1AFD8F6AC(0, (unint64_t *)&qword_1EB819EA0);
  sub_1AFFC8E48();
  id v9 = (void *)sub_1AFFCB638();
  sub_1AFFCB478();
  sub_1AFFCA878();

  id v10 = *(void **)(a5 + 32);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_1AFD47F4C;
  *(void *)(v11 + 24) = v8;
  v13[4] = sub_1AFEC2E84;
  void v13[5] = v11;
  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 1107296256;
  void v13[2] = sub_1AFE196C8;
  v13[3] = &block_descriptor_26;
  uint64_t v12 = _Block_copy(v13);
  swift_release();
  objc_msgSend(v10, sel_refreshBundleSubscriptionWithCachePolicy_completion_, 2, v12);
  _Block_release(v12);
}

uint64_t sub_1AFEC1FD0(uint64_t a1, uint64_t (*a2)(void))
{
  sub_1AFD8F6AC(0, (unint64_t *)&qword_1EB819EA0);
  id v3 = (void *)sub_1AFFCB638();
  sub_1AFFCB478();
  sub_1AFFCA878();

  return a2(0);
}

void sub_1AFEC2064()
{
}

void sub_1AFEC2074()
{
  sub_1AFD8F6AC(0, (unint64_t *)&qword_1EB819EA0);
  id v0 = (id)sub_1AFFCB638();
  sub_1AFFCB478();
  sub_1AFFCA878();
}

void sub_1AFEC210C()
{
}

void sub_1AFEC211C()
{
}

void sub_1AFEC212C()
{
}

void sub_1AFEC213C()
{
}

void sub_1AFEC214C()
{
}

uint64_t sub_1AFEC215C()
{
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for NewsUserProfileProvider()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for EmptyNewsUserProfileProvider.Error(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1AFEC2264);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for EmptyNewsUserProfileProvider.Error()
{
  return &type metadata for EmptyNewsUserProfileProvider.Error;
}

unint64_t sub_1AFEC22A0()
{
  unint64_t result = qword_1E9AFC0E8;
  if (!qword_1E9AFC0E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC0E8);
  }
  return result;
}

void sub_1AFEC22F4(void (*a1)(void *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = *(void **)(a5 + 16);
  id v8 = objc_msgSend(v7, sel_subscriptionList);
  id v9 = objc_msgSend(v8, sel_subscribedTagIDs);

  if (!v9)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v10 = sub_1AFFCB358();

  uint64_t v11 = sub_1AFD70448(v10);
  swift_bridgeObjectRelease();
  id v12 = objc_msgSend(v7, sel_subscriptionList);
  id v13 = objc_msgSend(v12, sel_mutedTagIDs);

  if (!v13)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v14 = sub_1AFFCB358();

  uint64_t v15 = sub_1AFD70448(v14);
  swift_bridgeObjectRelease();
  id v16 = objc_msgSend(v7, sel_subscriptionList);
  id v17 = objc_msgSend(v16, sel_autoFavoriteTagIDs);

  if (!v17)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v18 = sub_1AFFCB358();

  uint64_t v19 = sub_1AFD70448(v18);
  swift_bridgeObjectRelease();
  id v20 = objc_msgSend(*(id *)(a5 + 24), sel_allPurchasedTagIDs);
  if (!v20)
  {
LABEL_11:
    __break(1u);
    return;
  }
  uint64_t v21 = v20;
  uint64_t v22 = sub_1AFFCB358();

  uint64_t v23 = sub_1AFD70448(v22);
  swift_bridgeObjectRelease();
  id v24 = objc_msgSend(*(id *)(a5 + 32), sel_cachedSubscription);
  v25[0] = v11;
  v25[1] = v15;
  void v25[2] = v19;
  void v25[3] = v23;
  v25[4] = v24;
  a1(v25);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
}

uint64_t sub_1AFEC254C()
{
  return sub_1AFFCA758();
}

uint64_t sub_1AFEC25B0()
{
  sub_1AFD8F6AC(0, (unint64_t *)&qword_1EB819EA0);
  uint64_t v0 = (void *)sub_1AFFCB638();
  sub_1AFFCB478();
  sub_1AFFCA878();

  sub_1AFEC2D2C(0, (unint64_t *)&qword_1EB817DD0);
  swift_allocObject();
  return sub_1AFFCA758();
}

uint64_t sub_1AFEC2670()
{
  sub_1AFFC9EF8();
  sub_1AFFC8E48();
  sub_1AFFC9E98();

  return swift_release();
}

void sub_1AFEC26E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1AFD8F6AC(0, (unint64_t *)&qword_1EB819EA0);
  id v8 = (void *)sub_1AFFCB638();
  sub_1AFFCB478();
  sub_1AFFCA878();

  id v9 = objc_msgSend(*(id *)(a5 + 16), sel_privatePushNotificationHandler);
  uint64_t v10 = (void *)sub_1AFFCAC78();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = a2;
  v13[4] = sub_1AFEC2E94;
  void v13[5] = v11;
  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 1107296256;
  void v13[2] = sub_1AFEC2B98;
  v13[3] = &block_descriptor_42;
  id v12 = _Block_copy(v13);
  sub_1AFFC8E48();
  swift_release();
  objc_msgSend(v9, sel_handleRemoteNotification_completionHandler_, v10, v12);
  _Block_release(v12);
  swift_unknownObjectRelease();
}

uint64_t sub_1AFEC287C(void *a1, void (*a2)(char *))
{
  uint64_t v4 = sub_1AFFCA4C8();
  uint64_t v5 = *(void *)(v4 - 8);
  double v6 = MEMORY[0x1F4188790](v4);
  id v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 && objc_msgSend(a1, sel_wasHandled, v6))
  {
    sub_1AFEC2E9C(0, (unint64_t *)&qword_1EB81A100, (uint64_t (*)(uint64_t))sub_1AFD3AE64, MEMORY[0x1E4FBBE00]);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1AFFD05F0;
    uint64_t v20 = 0;
    unint64_t v21 = 0xE000000000000000;
    id v10 = objc_msgSend(a1, sel_recordZoneIDs);
    if (v10)
    {
      uint64_t v11 = v10;
      sub_1AFD8F6AC(0, &qword_1E9AFC108);
      sub_1AFEC2F74();
      uint64_t v12 = sub_1AFFCB358();
    }
    else
    {
      uint64_t v12 = 0;
    }
    v19[1] = v12;
    sub_1AFEC2E9C(0, &qword_1E9AFC0F8, (uint64_t (*)(uint64_t))sub_1AFEC2F00, MEMORY[0x1E4FBB718]);
    sub_1AFFCAF08();
    sub_1AFFCAFA8();
    swift_bridgeObjectRelease();
    uint64_t v15 = v20;
    unint64_t v16 = v21;
    *(void *)(v9 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v9 + 64) = sub_1AFD2CE00();
    *(void *)(v9 + 32) = v15;
    *(void *)(v9 + 40) = v16;
    sub_1AFD8F6AC(0, (unint64_t *)&qword_1EB819EA0);
    id v17 = (void *)sub_1AFFCB638();
    sub_1AFFCB478();
    sub_1AFFCA878();
    swift_bridgeObjectRelease();

    uint64_t v14 = (unsigned int *)MEMORY[0x1E4FAAEF0];
  }
  else
  {
    sub_1AFD8F6AC(0, (unint64_t *)&qword_1EB819EA0);
    id v13 = (void *)sub_1AFFCB638();
    sub_1AFFCB478();
    sub_1AFFCA878();

    uint64_t v14 = (unsigned int *)MEMORY[0x1E4FAAEE8];
  }
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v8, *v14, v4);
  a2(v8);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

void sub_1AFEC2B98(uint64_t a1, void *a2)
{
  int v3 = *(void (**)(void *))(a1 + 32);
  sub_1AFFC8E48();
  id v4 = a2;
  v3(a2);
  swift_release();
}

uint64_t sub_1AFEC2C04()
{
  return sub_1AFFCA758();
}

uint64_t sub_1AFEC2C90(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1AFEC0C2C((unint64_t *)&unk_1EB8177A0, (void (*)(void))type metadata accessor for NewsUserProfileProvider);
  uint64_t result = sub_1AFEC0C2C(&qword_1EB817798, (void (*)(void))type metadata accessor for NewsUserProfileProvider);
  *(void *)(a1 + 16) = result;
  return result;
}

void sub_1AFEC2D14(void (*a1)(void *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1AFEC22F4(a1, a2, a3, a4, v4);
}

uint64_t sub_1AFEC2D1C()
{
  return sub_1AFEC25B0();
}

uint64_t sub_1AFEC2D24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AFEC0D3C(a1, a2, a3, a4, v4);
}

void sub_1AFEC2D2C(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_1AFFCA788();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t sub_1AFEC2D74()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1AFEC2DAC()
{
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

void sub_1AFEC2DF4()
{
  sub_1AFEC0E14(v0[2], v0[3], v0[4], v0[5], v0[6]);
}

void sub_1AFEC2E04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1AFEC1E60(a1, a2, a3, a4, v4);
}

uint64_t sub_1AFEC2E0C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

void sub_1AFEC2E3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1AFF61908(a1, a2, a3, a4, *(void **)(v4 + 16));
}

uint64_t sub_1AFEC2E44()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1AFEC2E7C()
{
  sub_1AFEC1C4C(*(void **)(v0 + 16));
}

uint64_t sub_1AFEC2E84(uint64_t a1)
{
  return sub_1AFEC1FD0(a1, *(uint64_t (**)(void))(v1 + 16));
}

void sub_1AFEC2E8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1AFEC26E0(a1, a2, a3, a4, *(void *)(v4 + 16));
}

uint64_t sub_1AFEC2E94(void *a1)
{
  return sub_1AFEC287C(a1, *(void (**)(char *))(v1 + 16));
}

void sub_1AFEC2E9C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1AFEC2F00()
{
  if (!qword_1E9AFC100)
  {
    sub_1AFD8F6AC(255, &qword_1E9AFC108);
    sub_1AFEC2F74();
    unint64_t v0 = sub_1AFFCB388();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9AFC100);
    }
  }
}

unint64_t sub_1AFEC2F74()
{
  unint64_t result = qword_1E9AFC110;
  if (!qword_1E9AFC110)
  {
    sub_1AFD8F6AC(255, &qword_1E9AFC108);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC110);
  }
  return result;
}

uint64_t StocksKitClientConfig.clientBundleID.getter()
{
  uint64_t v1 = *v0;
  sub_1AFFC8E38();
  return v1;
}

uint64_t StocksKitClientConfig.stocksDataServiceEnabled.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t StocksKitClientConfig.stocksDataServiceEndpointVersion.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_1AFFC8E38();
  return v1;
}

uint64_t sub_1AFEC3084(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1AFDF0D6C(*a1, *a2);
}

uint64_t sub_1AFEC3090()
{
  return sub_1AFF9ABD4();
}

uint64_t sub_1AFEC3098()
{
  sub_1AFFCAF68();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFEC3138()
{
  return sub_1AFF9B040();
}

uint64_t sub_1AFEC3140@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFEC3FC0();
  *a1 = result;
  return result;
}

void sub_1AFEC3170(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xEE004449656C646ELL;
  unint64_t v4 = 0x80000001AFFED180;
  unint64_t v5 = 0xD000000000000018;
  if (v2 != 1)
  {
    unint64_t v5 = 0xD000000000000020;
    unint64_t v4 = 0x80000001AFFED1A0;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x7542746E65696C63;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1AFEC31E0()
{
  unint64_t v1 = 0xD000000000000018;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000020;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x7542746E65696C63;
  }
}

uint64_t sub_1AFEC324C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFEC3FC0();
  *a1 = result;
  return result;
}

uint64_t sub_1AFEC3274(uint64_t a1)
{
  unint64_t v2 = sub_1AFEC38D0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFEC32B0(uint64_t a1)
{
  unint64_t v2 = sub_1AFEC38D0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t StocksKitClientConfig.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1AFEC3BF4(0, &qword_1E9AFC118, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v37 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFEC38D0();
  sub_1AFFCBE68();
  if (!v2)
  {
    uint64_t v46 = (void *)MEMORY[0x1E4FBC860];
    unsigned __int8 v45 = 0;
    sub_1AFFCBAF8();
    unint64_t v10 = v44;
    uint64_t v41 = v43;
    if (v44)
    {
      uint64_t v11 = (void *)MEMORY[0x1E4FBC860];
    }
    else
    {
      swift_beginAccess();
      uint64_t v11 = v46;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v42 = 0;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        uint64_t v11 = sub_1AFD352FC(0, v11[2] + 1, 1, v11);
      }
      unint64_t v14 = v11[2];
      unint64_t v13 = v11[3];
      if (v14 >= v13 >> 1) {
        uint64_t v11 = sub_1AFD352FC((void *)(v13 > 1), v14 + 1, 1, v11);
      }
      void v11[2] = v14 + 1;
      uint64_t v15 = (char *)&v11[2 * v14];
      strcpy(v15 + 32, "clientBundleID");
      v15[47] = -18;
      uint64_t v46 = v11;
      swift_endAccess();
      unint64_t v10 = v42;
    }
    LOBYTE(v43) = 1;
    sub_1AFFCBAF8();
    LODWORD(v40) = v45;
    if (v45 == 2)
    {
      swift_beginAccess();
      uint64_t v11 = v46;
      char v16 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v42 = v10;
      if ((v16 & 1) == 0) {
        uint64_t v11 = sub_1AFD352FC(0, v11[2] + 1, 1, v11);
      }
      unint64_t v18 = v11[2];
      unint64_t v17 = v11[3];
      if (v18 >= v17 >> 1) {
        uint64_t v11 = sub_1AFD352FC((void *)(v17 > 1), v18 + 1, 1, v11);
      }
      void v11[2] = v18 + 1;
      uint64_t v19 = &v11[2 * v18];
      v19[4] = 0xD000000000000018;
      v19[5] = 0x80000001AFFED180;
      uint64_t v46 = v11;
      swift_endAccess();
      unint64_t v10 = v42;
    }
    unsigned __int8 v45 = 2;
    sub_1AFFCBAF8();
    unint64_t v21 = v44;
    if (v44)
    {
      uint64_t v39 = v43;
    }
    else
    {
      swift_beginAccess();
      uint64_t v11 = v46;
      char v22 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v42 = v10;
      if ((v22 & 1) == 0) {
        uint64_t v11 = sub_1AFD352FC(0, v11[2] + 1, 1, v11);
      }
      unint64_t v24 = v11[2];
      unint64_t v23 = v11[3];
      uint64_t v25 = v24 + 1;
      if (v24 >= v23 >> 1)
      {
        uint64_t v39 = v24 + 1;
        id v36 = sub_1AFD352FC((void *)(v23 > 1), v24 + 1, 1, v11);
        uint64_t v25 = v39;
        uint64_t v11 = v36;
      }
      void v11[2] = v25;
      id v26 = &v11[2 * v24];
      v26[4] = 0xD000000000000020;
      v26[5] = 0x80000001AFFED1A0;
      uint64_t v46 = v11;
      swift_endAccess();
      uint64_t v39 = 12662;
      unint64_t v10 = v42;
    }
    if (v10) {
      uint64_t v27 = v41;
    }
    else {
      uint64_t v27 = 0;
    }
    unint64_t v28 = 0xE000000000000000;
    if (v10) {
      unint64_t v28 = v10;
    }
    uint64_t v41 = v27;
    unint64_t v42 = v28;
    LODWORD(v29) = v40 & 1;
    unint64_t v30 = 0xE200000000000000;
    if (v21) {
      unint64_t v30 = v21;
    }
    unint64_t v40 = v30;
    if (v11[2])
    {
      sub_1AFD2CD48();
      uint64_t v31 = swift_allocObject();
      int v38 = (int)v29;
      uint64_t v29 = (void *)v31;
      *(_OWORD *)(v31 + 16) = xmmword_1AFFD05F0;
      sub_1AFD3ABD0();
      v29[7] = v32;
      v29[8] = sub_1AFD5CDA0();
      v29[4] = v11;
      sub_1AFD2C4F4();
      sub_1AFFC8E38();
      uint64_t v33 = (void *)sub_1AFFCB638();
      sub_1AFFCB478();
      sub_1AFFCA878();
      LOBYTE(v29) = v38;
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AFD2C4F4();
      uint64_t v33 = (void *)sub_1AFFCB638();
      sub_1AFFCB478();
      sub_1AFFCA878();
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_bridgeObjectRelease();
    unint64_t v34 = v42;
    *(void *)a2 = v41;
    *(void *)(a2 + 8) = v34;
    *(unsigned char *)(a2 + 16) = (_BYTE)v29;
    unint64_t v35 = v40;
    *(void *)(a2 + 24) = v39;
    *(void *)(a2 + 32) = v35;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1AFEC38D0()
{
  unint64_t result = qword_1E9AFC120;
  if (!qword_1E9AFC120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC120);
  }
  return result;
}

uint64_t StocksKitClientConfig.encode(to:)(void *a1)
{
  sub_1AFEC3BF4(0, &qword_1E9AFC128, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v11 - v6;
  int v12 = *(unsigned __int8 *)(v1 + 16);
  uint64_t v8 = *(void *)(v1 + 24);
  v11[1] = *(void *)(v1 + 32);
  void v11[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFEC38D0();
  sub_1AFFCBE78();
  char v15 = 0;
  uint64_t v9 = v11[3];
  sub_1AFFCBC08();
  if (!v9)
  {
    char v14 = 1;
    sub_1AFFCBC18();
    char v13 = 2;
    sub_1AFFCBC08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1AFEC3AEC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return StocksKitClientConfig.init(from:)(a1, a2);
}

uint64_t sub_1AFEC3B04(void *a1)
{
  return StocksKitClientConfig.encode(to:)(a1);
}

uint64_t _s10StocksCore0A15KitClientConfigV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  int v5 = *(unsigned __int8 *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8))
  {
    if (v2 != v5) {
      return 0;
    }
  }
  else
  {
    char v9 = sub_1AFFCBCE8();
    uint64_t result = 0;
    if (v9 & 1) == 0 || ((v2 ^ v5)) {
      return result;
    }
  }
  if (v3 == v6 && v4 == v7) {
    return 1;
  }

  return sub_1AFFCBCE8();
}

void sub_1AFEC3BF4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1AFEC38D0();
    unint64_t v7 = a3(a1, &type metadata for StocksKitClientConfig.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t destroy for StocksKitClientConfig()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StocksKitClientConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  return a1;
}

uint64_t assignWithCopy for StocksKitClientConfig(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for StocksKitClientConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for StocksKitClientConfig()
{
  return &type metadata for StocksKitClientConfig;
}

unsigned char *storeEnumTagSinglePayload for StocksKitClientConfig.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFEC3E80);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StocksKitClientConfig.CodingKeys()
{
  return &type metadata for StocksKitClientConfig.CodingKeys;
}

unint64_t sub_1AFEC3EBC()
{
  unint64_t result = qword_1E9AFC130;
  if (!qword_1E9AFC130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC130);
  }
  return result;
}

unint64_t sub_1AFEC3F14()
{
  unint64_t result = qword_1E9AFC138;
  if (!qword_1E9AFC138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC138);
  }
  return result;
}

unint64_t sub_1AFEC3F6C()
{
  unint64_t result = qword_1E9AFC140;
  if (!qword_1E9AFC140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC140);
  }
  return result;
}

uint64_t sub_1AFEC3FC0()
{
  unint64_t v0 = sub_1AFFCBA78();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_1AFEC400C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1AFEC4020(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1AFEC4034(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_1AFEC4048(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_1AFEC405C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t sub_1AFEC4070(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t sub_1AFEC4084(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t sub_1AFEC4098(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t sub_1AFEC40AC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t sub_1AFEC40C0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t sub_1AFEC40D4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t sub_1AFEC40E8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t sub_1AFEC40FC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t sub_1AFEC4110(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t sub_1AFEC4124(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t sub_1AFEC4138(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))();
}

uint64_t sub_1AFEC414C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 136))();
}

uint64_t sub_1AFEC4160(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 144))();
}

uint64_t sub_1AFEC4174(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 152))();
}

uint64_t sub_1AFEC4188(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 160))();
}

uint64_t sub_1AFEC419C()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SDSCurrencyService()
{
  return self;
}

uint64_t sub_1AFEC4200(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[40] = a3;
  v4[41] = v3;
  v4[39] = a1;
  uint64_t v5 = sub_1AFFCABC8();
  v4[42] = v5;
  v4[43] = *(void *)(v5 - 8);
  v4[44] = swift_task_alloc();
  uint64_t v6 = sub_1AFFCAC18();
  v4[45] = v6;
  v4[46] = *(void *)(v6 - 8);
  v4[47] = swift_task_alloc();
  uint64_t v7 = sub_1AFFCA288();
  v4[48] = v7;
  v4[49] = *(void *)(v7 - 8);
  v4[50] = swift_task_alloc();
  sub_1AFEC74F4(0, &qword_1EB8116D8, (uint64_t (*)(void))sub_1AFEC5AE4, (uint64_t)&type metadata for SDSCurrencyResponse, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for SDSBaseOperationResponse);
  v4[51] = v8;
  v4[52] = swift_task_alloc();
  uint64_t v9 = sub_1AFFC98F8();
  v4[53] = v9;
  v4[54] = *(void *)(v9 - 8);
  v4[55] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1AFEC4440, 0, 0);
}

uint64_t sub_1AFEC4440()
{
  uint64_t v2 = v0[54];
  uint64_t v1 = v0[55];
  uint64_t v3 = v0[53];
  __swift_project_boxed_opaque_existential_1((void *)(v0[41] + 16), *(void *)(v0[41] + 40));
  sub_1AFDF9B10(MEMORY[0x1E4FBC860]);
  sub_1AFFC98E8();
  unsigned int v4 = sub_1AFEC605C(0);
  v0[56] = v4;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_bridgeObjectRelease();
  uint64_t v5 = (void *)((char *)v4 + *(void *)(qword_1EB831B00 + (*MEMORY[0x1E4FBC8C8] & *v4) + 16));
  uint64_t v6 = *v5;
  uint64_t *v5 = (uint64_t)sub_1AFD5C7EC;
  v5[1] = 0;
  sub_1AFD309C0(v6);
  uint64_t v7 = swift_task_alloc();
  v0[57] = v7;
  *(void *)(v7 + 16) = v4;
  uint64_t v8 = (void *)swift_task_alloc();
  v0[58] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_1AFEC463C;
  uint64_t v10 = v0[51];
  uint64_t v9 = v0[52];
  return MEMORY[0x1F4188160](v9, 0, 0, 0x286D726F66726570, 0xE900000000000029, sub_1AFEC5E54, v7, v10);
}

uint64_t sub_1AFEC463C()
{
  *(void *)(*(void *)v1 + 472) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1AFEC4C70;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1AFEC4758;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1AFEC4758()
{
  unint64_t v24 = (_OWORD *)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 328);
  sub_1AFEC7400(0, &qword_1EB8116F0, (uint64_t)&type metadata for SDSCurrencyResponse, MEMORY[0x1E4FAAE30]);
  sub_1AFFCA3A8();
  uint64_t v31 = *(void *)(v0 + 168);
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t v29 = *(void *)(v0 + 144);
    uint64_t v30 = *(void *)(v0 + 152);
    uint64_t v27 = *(void *)(v0 + 160);
    uint64_t v28 = *(void *)(v0 + 136);
    uint64_t v4 = (void *)(v2 + 32);
    id v26 = (void (**)(uint64_t, uint64_t))(*(void *)(v0 + 344) + 8);
    uint64_t v25 = (void (**)(uint64_t, uint64_t))(*(void *)(v0 + 368) + 8);
    sub_1AFFC8E38();
    do
    {
      uint64_t v5 = __swift_project_boxed_opaque_existential_1(v4, v4[3]);
      uint64_t v6 = *v5;
      if (!*(unsigned char *)(*v5 + 24))
      {
        uint64_t v7 = *(void *)(v0 + 352);
        uint64_t v33 = *(void *)(v0 + 360);
        uint64_t v8 = *(void *)(v0 + 336);
        uint64_t v32 = *(void *)(v0 + 376);
        uint64_t v9 = (void *)swift_allocObject();
        void v9[2] = v6;
        v9[3] = v28;
        void v9[4] = v29;
        _OWORD v9[5] = v30;
        v9[6] = v27;
        v9[7] = v31;
        *(void *)(v0 + 288) = sub_1AFEC5F40;
        *(void *)(v0 + 296) = v9;
        *(void *)(v0 + 256) = MEMORY[0x1E4F143A8];
        *(void *)(v0 + 264) = 1107296256;
        *(void *)(v0 + 272) = sub_1AFDB5104;
        *(void *)(v0 + 280) = &block_descriptor_27;
        uint64_t v10 = _Block_copy((const void *)(v0 + 256));
        sub_1AFFC8E48();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        sub_1AFFCABE8();
        *(void *)(v0 + 304) = MEMORY[0x1E4FBC860];
        sub_1AFEC5F4C((unint64_t *)&unk_1EB819C20, MEMORY[0x1E4FBCB00]);
        sub_1AFDBE5D0();
        sub_1AFEC5F4C((unint64_t *)&qword_1EB819DB0, (void (*)(uint64_t))sub_1AFDBE5D0);
        sub_1AFFCB738();
        MEMORY[0x1B3E8D920](0, v32, v7, v10);
        _Block_release(v10);
        (*v26)(v7, v8);
        (*v25)(v32, v33);
        swift_release();
      }
      v4 += 5;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1AFFCA3A8();
  long long v11 = *(_OWORD *)(v0 + 224);
  *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 208);
  *(_OWORD *)(v0 + 64) = v11;
  *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 240);
  long long v12 = *(_OWORD *)(v0 + 192);
  _OWORD *v24 = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v0 + 32) = v12;
  char v13 = (void *)sub_1AFFCA3B8();
  if (v13)
  {
    self;
    if (swift_dynamicCastObjCClass())
    {
      uint64_t v14 = *(void *)(v0 + 392);
      uint64_t v15 = *(void *)(v0 + 400);
      uint64_t v16 = *(void *)(v0 + 384);
      sub_1AFFCA278();
      char v13 = (void *)sub_1AFFCA268();
      uint64_t v18 = v17;
      int v20 = v19 & 1;
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v15, v16);
      goto LABEL_13;
    }

    char v13 = 0;
  }
  uint64_t v18 = 0;
  int v20 = 1;
LABEL_13:
  sub_1AFEC4D20((uint64_t)v24, (uint64_t)v13, v18, v20, *(char **)(v0 + 312));
  unint64_t v21 = *(void **)(v0 + 448);
  sub_1AFEC5E5C(*(void *)(v0 + 416));

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v22 = *(uint64_t (**)(void))(v0 + 8);
  return v22();
}

uint64_t sub_1AFEC4C70()
{
  uint64_t v1 = *(void **)(v0 + 448);
  swift_task_dealloc();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1AFEC4D20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, char *a5@<X8>)
{
  int v92 = a4;
  v91[1] = a3;
  v91[0] = a2;
  uint64_t v94 = (char *)a5;
  uint64_t v6 = type metadata accessor for RawAttributionSource(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v93 = (void *)((char *)v91 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v129 = sub_1AFFC9808();
  uint64_t v134 = *(void *)(v129 - 8);
  MEMORY[0x1F4188790](v129);
  uint64_t v128 = (char *)v91 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v127 = sub_1AFFC97E8();
  uint64_t v9 = *(void *)(v127 - 8);
  MEMORY[0x1F4188790](v127);
  long long v11 = (char *)v91 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = sub_1AFFC97C8();
  uint64_t v135 = *(void *)(v121 - 8);
  uint64_t v12 = v135;
  MEMORY[0x1F4188790](v121);
  uint64_t v14 = (char *)v91 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = sub_1AFFC97D8();
  uint64_t v133 = *(void *)(v125 - 8);
  uint64_t v15 = v133;
  MEMORY[0x1F4188790](v125);
  uint64_t v17 = (char *)v91 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = sub_1AFFC9818();
  uint64_t v132 = *(void *)(v126 - 8);
  MEMORY[0x1F4188790](v126);
  char v115 = (char *)v91 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v114 = (char *)v91 - v20;
  MEMORY[0x1F4188790](v21);
  uint64_t v123 = (char *)v91 - v22;
  MEMORY[0x1F4188790](v23);
  uint64_t v122 = (char *)v91 - v24;
  uint64_t v119 = sub_1AFFC98F8();
  uint64_t v118 = *(void *)(v119 - 8);
  MEMORY[0x1F4188790](v119);
  uint64_t v97 = (char *)v91 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v26);
  uint64_t v96 = (char *)v91 - v27;
  MEMORY[0x1F4188790](v28);
  uint64_t v95 = (char *)v91 - v29;
  MEMORY[0x1F4188790](v30);
  char v120 = (char *)v91 - v31;
  double v33 = MEMORY[0x1F4188790](v32);
  uint64_t v131 = (char *)v91 - v34;
  uint64_t v130 = a1;
  uint64_t v35 = *(void *)(a1 + 24);
  uint64_t v36 = *(void *)(a1 + 32);
  uint64_t v136 = v35;
  uint64_t v137 = v36;
  uint64_t v37 = *(void (**)(void, double))(v15 + 104);
  unsigned int v112 = *MEMORY[0x1E4F27880];
  uint64_t v113 = v15 + 104;
  uint64_t v111 = (void (*)(char *, void, uint64_t))v37;
  v37(v17, v33);
  int v38 = *(void (**)(void))(v12 + 104);
  unsigned int v109 = *MEMORY[0x1E4F27878];
  uint64_t v110 = v12 + 104;
  uint64_t v108 = (void (*)(char *, void, uint64_t))v38;
  v38(v14);
  uint64_t v39 = v9;
  unint64_t v40 = *(void (**)(void))(v9 + 104);
  unsigned int v106 = *MEMORY[0x1E4F27888];
  uint64_t v41 = v127;
  uint64_t v107 = v9 + 104;
  uint64_t v105 = (void (*)(char *, void, uint64_t))v40;
  v40(v11);
  uint64_t v42 = v134;
  uint64_t v43 = *(void (**)(void))(v134 + 104);
  unint64_t v44 = v128;
  unsigned int v103 = *MEMORY[0x1E4F27890];
  uint64_t v45 = v129;
  uint64_t v104 = v134 + 104;
  uint64_t v102 = (void (*)(char *, void, uint64_t))v43;
  v43(v128);
  sub_1AFFC8E38();
  uint64_t v46 = v122;
  sub_1AFFCA868();
  uint64_t v47 = *(void (**)(char *, uint64_t))(v42 + 8);
  uint64_t v134 = v42 + 8;
  uint64_t v101 = v47;
  v47(v44, v45);
  id v48 = *(void (**)(char *, uint64_t))(v39 + 8);
  uint64_t v116 = v11;
  uint64_t v117 = v39 + 8;
  uint64_t v100 = v48;
  v48(v11, v41);
  uint64_t v49 = *(void (**)(char *, uint64_t))(v135 + 8);
  uint64_t v50 = v14;
  uint64_t v51 = v14;
  uint64_t v52 = v121;
  v135 += 8;
  uint64_t v99 = v49;
  ((void (*)(char *))v49)(v51);
  uint64_t v53 = *(void (**)(char *, uint64_t))(v133 + 8);
  uint64_t v54 = v125;
  v133 += 8;
  unint64_t v98 = v53;
  ((void (*)(char *))v53)(v17);
  sub_1AFFC97F8();
  uint64_t v55 = *(char **)(v132 + 8);
  v132 += 8;
  uint64_t v122 = v55;
  ((void (*)(char *, uint64_t))v55)(v46, v126);
  sub_1AFEC5F4C(qword_1EB81A330, MEMORY[0x1E4F278A8]);
  uint64_t v56 = v124;
  sub_1AFFC9908();
  if (v56) {
    return sub_1AFEC5F94(v130);
  }
  uint64_t v124 = 0;
  uint64_t v58 = *(void *)(v130 + 16);
  uint64_t v136 = *(void *)(v130 + 8);
  uint64_t v137 = v58;
  uint64_t v59 = v17;
  v111(v17, v112, v54);
  uint64_t v60 = v52;
  v108(v50, v109, v52);
  uint64_t v61 = v116;
  uint64_t v62 = v127;
  v105(v116, v106, v127);
  uint64_t v63 = v128;
  uint64_t v64 = v129;
  v102(v128, v103, v129);
  sub_1AFFC8E38();
  uint64_t v65 = v114;
  sub_1AFFCA868();
  v101(v63, v64);
  v100(v61, v62);
  v99(v50, v60);
  v98(v59, v125);
  sub_1AFFC97F8();
  ((void (*)(char *, uint64_t))v122)(v65, v126);
  uint64_t v66 = v124;
  sub_1AFFC9908();
  uint64_t v67 = v130;
  if (v66)
  {
    sub_1AFEC5F94(v130);
    return (*(uint64_t (**)(char *, uint64_t))(v118 + 8))(v131, v119);
  }
  else
  {
    uint64_t v124 = 0;
    uint64_t v68 = v119;
    uint64_t v69 = (void *)v118;
    if ((v92 & 1) == 0) {
      sub_1AFFCBE98();
    }
    uint64_t v70 = v94;
    uint64_t v71 = v97;
    sub_1AFFC9828();
    uint64_t v146 = *(void *)v67;
    uint64_t v72 = v146;
    int64_t v73 = *(void *)(v146 + 16);
    uint64_t v74 = MEMORY[0x1E4FBC860];
    if (v73)
    {
      uint64_t v136 = MEMORY[0x1E4FBC860];
      sub_1AFFC8E38();
      sub_1AFD9DBE0(0, v73, 0);
      uint64_t v74 = v136;
      uint64_t v75 = (uint64_t *)(v72 + 64);
      do
      {
        uint64_t v77 = *(v75 - 4);
        uint64_t v76 = *(v75 - 3);
        uint64_t v79 = *(v75 - 2);
        uint64_t v78 = *(v75 - 1);
        uint64_t v80 = *v75;
        uint64_t v136 = v74;
        unint64_t v82 = *(void *)(v74 + 16);
        unint64_t v81 = *(void *)(v74 + 24);
        sub_1AFFC8E38();
        sub_1AFFC8E38();
        if (v82 >= v81 >> 1)
        {
          sub_1AFD9DBE0(v81 > 1, v82 + 1, 1);
          uint64_t v74 = v136;
        }
        *(void *)(v74 + 16) = v82 + 1;
        long long v83 = (void *)(v74 + 40 * v82);
        v83[4] = v77;
        v83[5] = v76;
        v83[6] = v79;
        v83[7] = v78;
        v83[8] = v80;
        v75 += 7;
        --v73;
      }
      while (v73);
      sub_1AFD30B60((uint64_t)&v146);
      uint64_t v70 = v94;
      uint64_t v67 = v130;
      uint64_t v68 = v119;
      uint64_t v69 = (void *)v118;
      uint64_t v71 = v97;
    }
    long long v84 = (void (*)(char *, char *, uint64_t))v69[2];
    v84(v96, v131, v68);
    uint64_t v85 = v95;
    v84(v71, v95, v68);
    long long v86 = *(_OWORD *)(v67 + 56);
    v138[0] = *(_OWORD *)(v67 + 40);
    v138[1] = v86;
    uint64_t v139 = *(void *)(v67 + 72);
    long long v140 = v138[0];
    long long v141 = v86;
    uint64_t v142 = v139;
    long long v145 = v138[0];
    sub_1AFEC6FC4((uint64_t)&v141, (uint64_t)v144, (uint64_t (*)(void))sub_1AFDF3984);
    sub_1AFEC6F3C((uint64_t)&v141 + 8, (uint64_t)v143);
    sub_1AFD8C5F8((uint64_t)&v145);
    sub_1AFDF3A80((uint64_t)v144);
    sub_1AFD8C5F8((uint64_t)v143);
    uint64_t v87 = v93;
    sub_1AFDF1780((uint64_t *)v138, v93);
    sub_1AFEC5F94(v67);
    uint64_t v88 = (void (*)(char *, uint64_t))v69[1];
    v88(v85, v68);
    v88(v120, v68);
    v88(v131, v68);
    *(void *)uint64_t v70 = v74;
    uint64_t v89 = (int *)type metadata accessor for CurrencyResponse();
    uint64_t v90 = (void (*)(char *, char *, uint64_t))v69[4];
    v90(&v70[v89[5]], v96, v68);
    v90(&v70[v89[6]], v97, v68);
    return sub_1AFEC6FC4((uint64_t)v87, (uint64_t)&v70[v89[7]], type metadata accessor for RawAttributionSource);
  }
}

uint64_t sub_1AFEC5A38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_1AFD3503C;
  return sub_1AFEC4200(a1, v6, a3);
}

unint64_t sub_1AFEC5AE4()
{
  unint64_t result = qword_1EB811620;
  if (!qword_1EB811620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB811620);
  }
  return result;
}

uint64_t sub_1AFEC5B38(uint64_t a1)
{
  sub_1AFEC702C();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  double v6 = MEMORY[0x1F4188790](v2);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v4 + 16))((char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3, v6);
  unint64_t v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v8 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v8 + v7, (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  sub_1AFFC9F18();
  sub_1AFFC9EF8();
  sub_1AFFC9EA8();
  sub_1AFFC9ED8();
  return swift_release();
}

uint64_t sub_1AFEC5C94(uint64_t a1)
{
  sub_1AFEC74F4(0, &qword_1EB8116D8, (uint64_t (*)(void))sub_1AFEC5AE4, (uint64_t)&type metadata for SDSCurrencyResponse, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for SDSBaseOperationResponse);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  unint64_t v7 = (char *)v12 - v6;
  sub_1AFEC71D4();
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (void *)((char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1AFEC7264(a1, (uint64_t)v10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12[1] = *v10;
    sub_1AFEC702C();
    return sub_1AFFCB2B8();
  }
  else
  {
    sub_1AFEC72C8((uint64_t)v10, (uint64_t)v7);
    sub_1AFEC7364((uint64_t)v7, (uint64_t)v4);
    sub_1AFEC702C();
    sub_1AFFCB2C8();
    return sub_1AFEC5E5C((uint64_t)v7);
  }
}

id sub_1AFEC5E2C(uint64_t a1)
{
  return sub_1AFEC605C(a1);
}

uint64_t sub_1AFEC5E54(uint64_t a1)
{
  return sub_1AFEC5B38(a1);
}

uint64_t sub_1AFEC5E5C(uint64_t a1)
{
  sub_1AFEC74F4(0, &qword_1EB8116D8, (uint64_t (*)(void))sub_1AFEC5AE4, (uint64_t)&type metadata for SDSCurrencyResponse, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for SDSBaseOperationResponse);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1AFEC5EF0()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 64, 7);
}

void sub_1AFEC5F40()
{
  sub_1AFDF1E04(*(void *)(v0 + 16), (uint64_t *)(v0 + 24));
}

uint64_t sub_1AFEC5F4C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AFEC5F94(uint64_t a1)
{
  return a1;
}

id sub_1AFEC600C(uint64_t a1)
{
  return sub_1AFEC605C(a1);
}

id sub_1AFEC6034(uint64_t a1)
{
  return sub_1AFEC605C(a1);
}

id sub_1AFEC605C(uint64_t a1)
{
  void (*v21)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  id v40;
  void *v41;
  id v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(void);
  id v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  Class v55;
  id v56;
  id v57;
  void *v58;
  id v59;
  void *v60;
  id v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t (*v65)(void);
  id v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  Class v74;
  id v75;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  unint64_t *v91;
  char *v92;
  uint64_t v93;
  unsigned char v94[40];
  unsigned char v95[40];
  void v96[536];
  void v97[149];
  uint64_t v98;

  int v2 = MEMORY[0x1F4188790](a1);
  unint64_t v81 = v3;
  long long v83 = v4;
  long long v84 = v5;
  uint64_t v90 = v6;
  uint64_t v91 = v7;
  uint64_t v8 = v1;
  uint64_t v10 = v9;
  unint64_t v82 = v2;
  uint64_t v11 = sub_1AFFC9E18();
  uint64_t v88 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  int v92 = (char *)&v77 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1AFFC98F8();
  long long v86 = *(void *)(v13 - 8);
  uint64_t v87 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v89 = (char *)&v77 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1AFFC96E8();
  uint64_t v16 = MEMORY[0x1F4188790](v15 - 8);
  uint64_t v93 = (uint64_t)&v77 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v80 = (uint64_t)&v77 - v18;
  uint64_t v19 = v1[16];
  uint64_t v20 = v1[17];
  __swift_project_boxed_opaque_existential_1(v1 + 13, v19);
  uint64_t v21 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v20 + 8);
  sub_1AFFC8E38();
  v21(v96, v19, v20);
  uint64_t v22 = v96[525];
  sub_1AFFC8E38();
  sub_1AFD55D10((uint64_t)v96);
  v97[0] = v22;
  sub_1AFEC7400(0, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  sub_1AFD371B8();
  uint64_t v23 = sub_1AFFCAD88();
  uint64_t v25 = v24;
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v97[0] = v10;
  sub_1AFE03884(v23, v25, 0x6E656D7461657274, 0xEC00000073444974, isUniquelyReferenced_nonNull_native);
  uint64_t v85 = v97[0];
  swift_bridgeObjectRelease();
  uint64_t v27 = v1[16];
  uint64_t v28 = v1[17];
  __swift_project_boxed_opaque_existential_1(v1 + 13, v27);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v28 + 8))(v97, v27, v28);
  uint64_t v29 = objc_msgSend(self, sel_mainBundle);
  uint64_t v30 = objc_msgSend(v29, sel_bundleIdentifier);

  if (v30)
  {
    uint64_t v31 = sub_1AFFCAE98();
    double v33 = v32;

    uint64_t v34 = *(void *)(v98 + 16);
    if (v34)
    {
      uint64_t v35 = (uint64_t *)(v98 + 64);
      while (1)
      {
        uint64_t v36 = *(v35 - 1);
        uint64_t v37 = *v35;
        int v38 = *(v35 - 4) == v31 && *(v35 - 3) == v33;
        if (v38 || (sub_1AFFCBCE8() & 1) != 0) {
          break;
        }
        v35 += 5;
        if (!--v34) {
          goto LABEL_10;
        }
      }
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      sub_1AFD55D10((uint64_t)v97);
      sub_1AFFCA7E8();
      uint64_t v58 = self;
      sub_1AFFC8E38();
      uint64_t v59 = objc_msgSend(v58, sel_sharedPreferences);
      uint64_t v60 = v59;
      uint64_t v79 = v11;
      if (v59)
      {
        uint64_t v61 = objc_msgSend(v59, sel_stocksLanguageCode);
        if (v61)
        {
          uint64_t v62 = v61;
          uint64_t v93 = sub_1AFFCAE98();
          uint64_t v78 = v63;
        }
        else
        {
          uint64_t v93 = 0x73752D6E65;
          uint64_t v78 = 0xE500000000000000;
        }
        uint64_t v64 = v83;
        uint64_t v65 = (uint64_t (*)(void))v84;
        uint64_t v66 = objc_msgSend(v60, sel_stocksCountryCode);
        if (v66)
        {
          uint64_t v67 = v66;
          long long v84 = sub_1AFFCAE98();
          uint64_t v69 = v68;

LABEL_29:
          uint64_t v70 = v82;
          uint64_t v71 = v81;
          sub_1AFD2CEB0((uint64_t)(v8 + 3), (uint64_t)v95);
          sub_1AFD2CEB0((uint64_t)(v8 + 8), (uint64_t)v94);
          uint64_t v72 = (uint64_t)v89;
          (*(void (**)(char *, uint64_t, uint64_t))(v86 + 16))(v89, v64, v87);
          int64_t v73 = (uint64_t)v92;
          (*(void (**)(char *, uint64_t, uint64_t))(v88 + 16))(v92, v90, v79);
          sub_1AFEC74F4(0, v91, v65, v71, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for SDSBaseOperation);
          uint64_t v75 = objc_allocWithZone(v74);
          uint64_t v57 = sub_1AFEC6800(v70, v80, v36, v37, v85, v93, v78, v84, v69, (uint64_t)v95, (uint64_t)v94, v72, v73);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return v57;
        }
      }
      else
      {
        uint64_t v93 = 0x73752D6E65;
        uint64_t v78 = 0xE500000000000000;
        uint64_t v64 = v83;
        uint64_t v65 = (uint64_t (*)(void))v84;
      }

      uint64_t v69 = 0xE200000000000000;
      long long v84 = 21333;
      goto LABEL_29;
    }
LABEL_10:
    swift_bridgeObjectRelease();
  }
  uint64_t v39 = 0x73752D6E65;
  sub_1AFD55D10((uint64_t)v97);
  sub_1AFFCA7E8();
  unint64_t v40 = objc_msgSend(self, sel_sharedPreferences);
  uint64_t v41 = v40;
  if (!v40)
  {
    uint64_t v45 = 0x73752D6E65;
    uint64_t v46 = v11;
    uint64_t v80 = 0xE500000000000000;
    uint64_t v47 = (uint64_t (*)(void))v84;
LABEL_19:

    uint64_t v52 = 0xE200000000000000;
    uint64_t v50 = 21333;
    goto LABEL_20;
  }
  uint64_t v42 = objc_msgSend(v40, sel_stocksLanguageCode);
  if (v42)
  {
    uint64_t v43 = v42;
    uint64_t v39 = sub_1AFFCAE98();
    uint64_t v80 = v44;
  }
  else
  {
    uint64_t v80 = 0xE500000000000000;
  }
  uint64_t v47 = (uint64_t (*)(void))v84;
  uint64_t v45 = v39;
  id v48 = objc_msgSend(v41, sel_stocksCountryCode);
  if (!v48)
  {
    uint64_t v46 = v11;
    goto LABEL_19;
  }
  uint64_t v49 = v48;
  uint64_t v46 = v11;
  uint64_t v50 = sub_1AFFCAE98();
  uint64_t v52 = v51;

LABEL_20:
  sub_1AFD2CEB0((uint64_t)(v8 + 3), (uint64_t)v95);
  sub_1AFD2CEB0((uint64_t)(v8 + 8), (uint64_t)v94);
  uint64_t v53 = (uint64_t)v89;
  (*(void (**)(char *, uint64_t, uint64_t))(v86 + 16))(v89, v83, v87);
  uint64_t v54 = (uint64_t)v92;
  (*(void (**)(char *, uint64_t, uint64_t))(v88 + 16))(v92, v90, v46);
  sub_1AFEC74F4(0, v91, v47, v81, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for SDSBaseOperation);
  uint64_t v56 = objc_allocWithZone(v55);
  return sub_1AFEC6800(v82, v93, 0, 0, v85, v45, v80, v50, v52, (uint64_t)v95, (uint64_t)v94, v53, v54);
}

id sub_1AFEC6800(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v14 = v13;
  uint64_t v55 = a7;
  uint64_t v56 = a8;
  uint64_t v51 = a3;
  uint64_t v52 = a5;
  uint64_t v58 = a12;
  uint64_t v59 = a13;
  uint64_t v60 = a11;
  uint64_t v63 = a10;
  uint64_t v53 = a9;
  uint64_t v54 = a6;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v18 = sub_1AFFC96E8();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  uint64_t v22 = (char *)&v51 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x1F4188790](v20);
  uint64_t v25 = (char *)&v51 - v24;
  uint64_t v26 = MEMORY[0x1F4188790](v23);
  uint64_t v28 = (char *)&v51 - v27;
  uint64_t v29 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v30 = (void *)((char *)v14 + *(void *)(qword_1EB831B00 + (*MEMORY[0x1E4FBC8C8] & *v14) + 16));
  *uint64_t v30 = 0;
  v30[1] = 0;
  *(void *)((char *)v14 + *(void *)(qword_1EB831B00 + (*v29 & *v14) + 88)) = MEMORY[0x1E4FBC860];
  *((unsigned char *)v14 + *(void *)(qword_1EB831B00 + (*v29 & *v14) + 24)) = a1;
  uint64_t v61 = a2;
  uint64_t v62 = v26;
  if (a4)
  {
    uint64_t v31 = v14;
    sub_1AFFC9658();
    swift_bridgeObjectRelease();
    sub_1AFFC9658();
    swift_bridgeObjectRelease();
    uint64_t v33 = v19;
    uint64_t v34 = v62;
    (*(void (**)(char *, uint64_t))(v19 + 8))(v25, v62);
    uint64_t v35 = (void *)MEMORY[0x1E4FBC8C8];
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(&v31[*(void *)(qword_1EB831B00 + (*MEMORY[0x1E4FBC8C8] & *(void *)v31) + 32)], v28, v34);
  }
  else
  {
    uint64_t v32 = v26;
    uint64_t v35 = (void *)MEMORY[0x1E4FBC8C8];
    uint64_t v36 = v14;
    sub_1AFFC9658();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(&v36[*(void *)(qword_1EB831B00 + (*v35 & *(void *)v36) + 32)], v22, v32);
    uint64_t v33 = v19;
  }
  *(void *)((char *)v14 + *(void *)(qword_1EB831B00 + (*v35 & *v14) + 40)) = v52;
  uint64_t v37 = (void *)((char *)v14 + *(void *)(qword_1EB831B00 + (*v35 & *v14) + 48));
  uint64_t v38 = v55;
  *uint64_t v37 = v54;
  v37[1] = v38;
  uint64_t v39 = v53;
  v37[2] = v56;
  v37[3] = v39;
  sub_1AFD2CEB0(v63, (uint64_t)v14 + *(void *)(qword_1EB831B00 + (*v35 & *v14) + 56));
  uint64_t v40 = v60;
  sub_1AFD2CEB0(v60, (uint64_t)v14 + *(void *)(qword_1EB831B00 + (*v35 & *v14) + 64));
  uint64_t v41 = (char *)v14 + *(void *)(qword_1EB831B00 + (*v35 & *v14) + 72);
  uint64_t v42 = sub_1AFFC98F8();
  uint64_t v43 = *(void *)(v42 - 8);
  uint64_t v44 = v58;
  (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v41, v58, v42);
  uint64_t v45 = (char *)v14 + *(void *)(qword_1EB831B00 + (*v35 & *v14) + 80);
  uint64_t v46 = sub_1AFFC9E18();
  uint64_t v47 = *(void *)(v46 - 8);
  uint64_t v48 = v59;
  (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v45, v59, v46);

  v64.receiver = v14;
  v64.super_class = ObjectType;
  id v49 = objc_msgSendSuper2(&v64, sel_init, v51);
  (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v48, v46);
  (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v44, v42);
  __swift_destroy_boxed_opaque_existential_1(v40);
  __swift_destroy_boxed_opaque_existential_1(v63);
  (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v61, v62);
  return v49;
}

uint64_t sub_1AFEC6F3C(uint64_t a1, uint64_t a2)
{
  sub_1AFEC7400(0, (unint64_t *)&qword_1EB819C90, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AFEC6FC4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1AFEC702C()
{
  if (!qword_1EB811770)
  {
    sub_1AFEC74F4(255, &qword_1EB8116D8, (uint64_t (*)(void))sub_1AFEC5AE4, (uint64_t)&type metadata for SDSCurrencyResponse, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for SDSBaseOperationResponse);
    sub_1AFE9DFBC();
    unint64_t v0 = sub_1AFFCB2D8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB811770);
    }
  }
}

uint64_t sub_1AFEC70D4()
{
  sub_1AFEC702C();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1AFEC7164(uint64_t a1)
{
  sub_1AFEC702C();

  return sub_1AFEC5C94(a1);
}

void sub_1AFEC71D4()
{
  if (!qword_1EB8116F8)
  {
    sub_1AFEC74F4(255, &qword_1EB8116D8, (uint64_t (*)(void))sub_1AFEC5AE4, (uint64_t)&type metadata for SDSCurrencyResponse, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for SDSBaseOperationResponse);
    unint64_t v0 = sub_1AFFCA5F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8116F8);
    }
  }
}

uint64_t sub_1AFEC7264(uint64_t a1, uint64_t a2)
{
  sub_1AFEC71D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AFEC72C8(uint64_t a1, uint64_t a2)
{
  sub_1AFEC74F4(0, &qword_1EB8116D8, (uint64_t (*)(void))sub_1AFEC5AE4, (uint64_t)&type metadata for SDSCurrencyResponse, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for SDSBaseOperationResponse);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AFEC7364(uint64_t a1, uint64_t a2)
{
  sub_1AFEC74F4(0, &qword_1EB8116D8, (uint64_t (*)(void))sub_1AFEC5AE4, (uint64_t)&type metadata for SDSCurrencyResponse, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for SDSBaseOperationResponse);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1AFEC7400(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_1AFEC744C()
{
  unint64_t result = qword_1E9AFC160;
  if (!qword_1E9AFC160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC160);
  }
  return result;
}

unint64_t sub_1AFEC74A0()
{
  unint64_t result = qword_1E9AFC170;
  if (!qword_1E9AFC170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC170);
  }
  return result;
}

void sub_1AFEC74F4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

double sub_1AFEC755C(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  long long v23 = 0u;
  long long v22 = 0u;
  uint64_t v21 = 0;
  long long v20 = 0u;
  long long v19 = 0u;
  long long v18 = 0u;
  long long v17 = 0u;
  v15[64] = 2;
  long long v16 = 0u;
  sub_1AFECDDF0(v24);
  sub_1AFECDE40((uint64_t)v24, (uint64_t)v15, &qword_1EB819618);
  uint64_t v11 = 1;
  long long v12 = 0u;
  long long v13 = 0u;
  memset(v14, 0, sizeof(v14));
  sub_1AFECDEAC((uint64_t)v25);
  sub_1AFECDE40((uint64_t)v25, (uint64_t)v10, &qword_1EB8197B8);
  sub_1AFECDED0(v26);
  sub_1AFECDE40((uint64_t)v26, (uint64_t)v9, &qword_1EB819838);
  return sub_1AFF76AC8(2, 0, 0, 0, 1, 0, 1, 0, 0.0, v1, v2, v3, v4, v5, v6, v7, 1, 0.0, 1,
           0,
           1,
           0,
           1,
           0,
           1,
           0,
           2,
           2,
           0.0,
           1,
           2,
           2,
           0,
           1,
           0,
           1,
           0.0,
           1,
           0.0,
           1,
           0.0,
           1,
           0.0,
           1,
           0.0,
           1,
           0,
           0,
           0.0,
           1,
           0.0,
           1,
           0.0,
           1,
           0.0,
           1,
           0.0,
           1,
           0.0,
           1,
           0.0,
           1,
           0.0);
}

uint64_t sub_1AFEC7A08()
{
  return 0x7365746F7551;
}

uint64_t sub_1AFEC7A1C()
{
  return 1937204558;
}

ValueMetadata *type metadata accessor for AttributionProviderName()
{
  return &type metadata for AttributionProviderName;
}

uint64_t sub_1AFEC7A3C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB3E88(0, (unint64_t *)&unk_1EB81AA48);
  uint64_t result = sub_1AFFC9E68();
  if (v8)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1AFDB3E88(0, &qword_1EB81AE78);
    uint64_t result = sub_1AFFC9E68();
    if (v6[3])
    {
      uint64_t v5 = type metadata accessor for AppConfigurationManager();
      swift_allocObject();
      uint64_t result = (uint64_t)sub_1AFEFC320((uint64_t)v7, (uint64_t)v6);
      a2[3] = v5;
      a2[4] = (uint64_t)&off_1F0874740;
      *a2 = result;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1AFEC7B4C(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  double v2 = v1;
  sub_1AFEC755C(v3);
  uint64_t v4 = type metadata accessor for StubAppConfigurationManager();
  swift_allocObject();
  uint64_t result = sub_1AFDE6AC8((uint64_t)&v6);
  v2[3] = v4;
  v2[4] = (uint64_t)&off_1F0877ED8;
  *double v2 = result;
  return result;
}

uint64_t sub_1AFEC7BD4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for AppConfigurationStore();
  uint64_t result = swift_allocObject();
  a1[3] = v2;
  a1[4] = (uint64_t)&off_1F0873A58;
  *a1 = result;
  return result;
}

uint64_t sub_1AFEC7C1C(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB3E88(0, &qword_1EB81AA40);
  uint64_t result = sub_1AFFC9E68();
  if (v5)
  {
    sub_1AFD80454(&v4, (uint64_t)v6);
    uint64_t v2 = v7;
    uint64_t v3 = v8;
    __swift_project_boxed_opaque_existential_1(v6, v7);
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1AFEC7CE0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB3E88(0, qword_1EB81A798);
  sub_1AFFC9E68();
  if (v9)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1AFECD940(0, &qword_1EB81A448, MEMORY[0x1E4FAA758], MEMORY[0x1E4FAAFF0]);
    uint64_t v4 = sub_1AFFC9E38();
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = type metadata accessor for QuoteManager();
      swift_allocObject();
      uint64_t result = sub_1AFD631C0((uint64_t)v8, v5);
      a2[3] = v6;
      a2[4] = (uint64_t)&off_1F086A2D0;
      *a2 = result;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_1AFEC7E44@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB3E88(0, &qword_1EB81A880);
  sub_1AFFC9E68();
  if (v9)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1AFECD940(0, &qword_1EB81A448, MEMORY[0x1E4FAA758], MEMORY[0x1E4FAAFF0]);
    uint64_t v4 = sub_1AFFC9E38();
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = type metadata accessor for SparklineManager();
      swift_allocObject();
      uint64_t result = sub_1AFF01D90((uint64_t)v8, v5);
      a2[3] = v6;
      a2[4] = (uint64_t)&off_1F086E928;
      *a2 = result;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_1AFEC7FA8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_1AFFC9DA8();
  MEMORY[0x1F4188790](v4 - 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB3E88(0, &qword_1EB81A790);
  uint64_t result = sub_1AFFC9E68();
  if (!v14)
  {
    __break(1u);
    goto LABEL_6;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB3E88(0, &qword_1EB81A878);
  uint64_t result = sub_1AFFC9E68();
  if (!v12)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB3E88(0, &qword_1EB81AA40);
  uint64_t result = sub_1AFFC9E68();
  if (v10)
  {
    uint64_t v6 = type metadata accessor for StockPriceDataManager();
    uint64_t v7 = (void *)swift_allocObject();
    uint64_t v8 = MEMORY[0x1E4FBC860];
    v7[17] = MEMORY[0x1E4FBC860];
    v7[18] = v8;
    sub_1AFFC9D98();
    sub_1AFFC9DC8();
    swift_allocObject();
    v7[19] = sub_1AFFC9DB8();
    sub_1AFD80454(&v13, (uint64_t)(v7 + 2));
    sub_1AFD80454(&v11, (uint64_t)(v7 + 7));
    uint64_t result = sub_1AFD80454(&v9, (uint64_t)(v7 + 12));
    a2[3] = v6;
    a2[4] = &off_1F0874058;
    *a2 = v7;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1AFEC81A0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB3E88(0, &qword_1EB81A920);
  sub_1AFFC9E68();
  if (v9)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1AFECD940(0, &qword_1EB81A448, MEMORY[0x1E4FAA758], MEMORY[0x1E4FAAFF0]);
    uint64_t v4 = sub_1AFFC9E38();
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = type metadata accessor for QuoteDetailManager();
      swift_allocObject();
      uint64_t result = sub_1AFF67BA8((uint64_t)v8, v5);
      a2[3] = v6;
      a2[4] = (uint64_t)&off_1F0870D40;
      *a2 = result;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_1AFEC8304@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB3E88(0, (unint64_t *)&unk_1EB81A9E0);
  sub_1AFFC9E68();
  if (v9)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1AFECD940(0, &qword_1EB81A448, MEMORY[0x1E4FAA758], MEMORY[0x1E4FAAFF0]);
    uint64_t v4 = sub_1AFFC9E38();
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = type metadata accessor for StockMetadataManager();
      swift_allocObject();
      uint64_t result = sub_1AFE2D6C8((uint64_t)v8, v5);
      a2[3] = v6;
      a2[4] = (uint64_t)&off_1F0873458;
      *a2 = result;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_1AFEC8468@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFFC9E48();
  if (v7[0] == 2)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if ((v7[0] & 1) == 0)
  {
    sub_1AFDB3E88(0, &qword_1EB81A788);
    sub_1AFFC9E68();
    if (v8)
    {
      type metadata accessor for ChartManager();
      swift_allocObject();
      uint64_t result = sub_1AFF5993C((uint64_t)v7);
LABEL_8:
      *a2 = result;
      a2[1] = (uint64_t)&off_1F0869E88;
      return result;
    }
    goto LABEL_10;
  }
  sub_1AFDB3E88(0, &qword_1EB81A788);
  sub_1AFFC9E68();
  if (!v8)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFECD940(0, &qword_1EB81A448, MEMORY[0x1E4FAA758], MEMORY[0x1E4FAAFF0]);
  uint64_t v5 = sub_1AFFC9E38();
  if (v5)
  {
    uint64_t v6 = v5;
    type metadata accessor for ChartManager();
    swift_allocObject();
    uint64_t result = sub_1AFF59380((uint64_t)v7, v6);
    goto LABEL_8;
  }
LABEL_12:
  __break(1u);
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_1AFEC8668@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB3E88(0, &qword_1EB81A5A0);
  uint64_t result = sub_1AFFC9E68();
  if (v24)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1AFDB3E88(0, &qword_1EB81AE70);
    uint64_t result = sub_1AFFC9E68();
    if (v22)
    {
      uint64_t v5 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v21, v22);
      double v6 = MEMORY[0x1F4188790](v5);
      uint64_t v8 = (void *)((char *)&v20[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v9 + 16))(v8, v6);
      uint64_t v10 = *v8;
      v20[3] = &type metadata for CurrencyManagerCache;
      unsigned char v20[4] = &off_1F0872D20;
      v20[0] = v10;
      uint64_t v11 = type metadata accessor for CurrencyManager();
      uint64_t v12 = (void *)swift_allocObject();
      uint64_t v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, (uint64_t)&type metadata for CurrencyManagerCache);
      double v14 = MEMORY[0x1F4188790](v13);
      long long v16 = (void *)((char *)&v20[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v17 + 16))(v16, v14);
      long long v18 = sub_1AFECAD58(&v23, *v16, (uint64_t)sub_1AFEC8904, 0, v12);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
      a2[3] = v11;
      a2[4] = &off_1F086BD88;
      *a2 = v18;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1AFEC8908@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1AFECD940(0, &qword_1EB811740, MEMORY[0x1E4FBD360], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v18 - v6;
  uint64_t v8 = sub_1AFFC96E8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFECD940(0, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0], v4);
  MEMORY[0x1F4188790](v12 - 8);
  double v14 = (char *)&v18 - v13;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFFC9E48();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v14, 1, v8);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v14, v8);
    uint64_t v16 = sub_1AFFCA8A8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v7, 1, 1, v16);
    sub_1AFECDB98();
    swift_allocObject();
    uint64_t v17 = sub_1AFFCA148();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    a2[3] = (uint64_t)&type metadata for CurrencyManagerCache;
    a2[4] = (uint64_t)&off_1F0872D20;
    *a2 = v17;
  }
  return result;
}

uint64_t sub_1AFEC8BE4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB3E88(0, &qword_1EB81A998);
  sub_1AFFC9E68();
  if (v12)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1AFECD940(0, &qword_1EB81A448, MEMORY[0x1E4FAA758], MEMORY[0x1E4FAAFF0]);
    uint64_t v4 = sub_1AFFC9E38();
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v9 = &type metadata for Clock;
      uint64_t v10 = &off_1F087CE08;
      uint64_t v6 = type metadata accessor for SDSAuthTokenManager();
      swift_allocObject();
      uint64_t result = sub_1AFF05650((uint64_t)v11, v5, (uint64_t)v8);
      a2[3] = v6;
      a2[4] = (uint64_t)&off_1F0872548;
      *a2 = result;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_1AFEC8D60()
{
  return sub_1AFFCA468();
}

uint64_t sub_1AFEC8D98@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFECD940(0, &qword_1EB81A448, MEMORY[0x1E4FAA758], MEMORY[0x1E4FAAFF0]);
  if (sub_1AFFC9E38())
  {
    type metadata accessor for EarningsCalendarEventManager();
    swift_allocObject();
    uint64_t v3 = sub_1AFE5FB04();
    swift_release();
    uint64_t result = sub_1AFECD440(&qword_1EB810FE0, (void (*)(uint64_t))type metadata accessor for EarningsCalendarEventManager);
    *a2 = v3;
    a2[1] = result;
  }
  else
  {
    __break(1u);
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AFEC8ECC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB3E88(0, &qword_1EB81A898);
  uint64_t result = sub_1AFFC9E68();
  if (v7[3])
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1AFDB3E88(0, &qword_1EB81A9D8);
    uint64_t result = sub_1AFFC9E68();
    if (v6[3])
    {
      uint64_t v5 = type metadata accessor for WatchlistManager();
      swift_allocObject();
      uint64_t result = (uint64_t)sub_1AFFA2DD0(v7, (uint64_t)v6);
      a2[3] = v5;
      a2[4] = (uint64_t)&off_1F086EA38;
      *a2 = result;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1AFEC8FDC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFECD940(0, &qword_1EB81A448, MEMORY[0x1E4FAA758], MEMORY[0x1E4FAAFF0]);
  uint64_t v3 = sub_1AFFC9E38();
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = type metadata accessor for HeadlineViewingHistory();
    swift_allocObject();
    uint64_t result = sub_1AFEDD8BC(v4);
    a2[3] = v5;
    a2[4] = (uint64_t)&off_1F0874500;
    *a2 = result;
  }
  else
  {
    __break(1u);
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AFEC90E4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB3E88(0, &qword_1EB81A730);
  uint64_t result = sub_1AFFC9E68();
  if (v6)
  {
    type metadata accessor for UserLaunchHistory();
    swift_allocObject();
    uint64_t v4 = sub_1AFD3AFBC((uint64_t)v5);
    uint64_t result = sub_1AFECD440(&qword_1EB810E00, (void (*)(uint64_t))type metadata accessor for UserLaunchHistory);
    *a2 = v4;
    a2[1] = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1AFEC91BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for NetworkMonitor();
  uint64_t v3 = swift_allocObject();
  sub_1AFECDB30();
  swift_allocObject();
  uint64_t result = sub_1AFFCAB18();
  *(void *)(v3 + 16) = result;
  a1[3] = v2;
  a1[4] = (uint64_t)&off_1F086B9D8;
  *a1 = v3;
  return result;
}

uint64_t sub_1AFEC9230@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFECD940(0, &qword_1EB81A448, MEMORY[0x1E4FAA758], MEMORY[0x1E4FAAFF0]);
  uint64_t result = sub_1AFFC9E38();
  if (result)
  {
    uint64_t v5 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1AFDB3E88(0, &qword_1EB81A440);
    uint64_t result = sub_1AFFC9E68();
    if (v23)
    {
      uint64_t v6 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v23);
      double v7 = MEMORY[0x1F4188790](v6);
      uint64_t v9 = (void *)((char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v10 + 16))(v9, v7);
      uint64_t v11 = *v9;
      uint64_t v12 = type metadata accessor for AttributionSourceAssetService();
      v21[3] = v12;
      v21[4] = &off_1F08784E8;
      v21[0] = v11;
      uint64_t v13 = type metadata accessor for AttributionSourceAssetManager();
      uint64_t v14 = swift_allocObject();
      uint64_t v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v21, v12);
      double v16 = MEMORY[0x1F4188790](v15);
      uint64_t v18 = (void *)((char *)v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v19 + 16))(v18, v16);
      uint64_t v20 = sub_1AFECAFA0(v5, *v18, v14);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
      a2[3] = v13;
      a2[4] = (uint64_t)&off_1F08784D8;
      *a2 = v20;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1AFEC94E4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1AFD2CEB0((uint64_t)a1, (uint64_t)v8);
  char v4 = sub_1AFDB35BC(v8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (v4)
  {
    uint64_t v5 = type metadata accessor for SDSAttributionProvider();
    uint64_t result = sub_1AFFC9E38();
    if (result)
    {
      double v7 = &off_1F08745C0;
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v5 = type metadata accessor for YahooAttributionProvider();
    uint64_t result = sub_1AFFC9E58();
    if (result)
    {
      double v7 = &off_1F0876D60;
LABEL_6:
      a2[3] = v5;
      a2[4] = (uint64_t)v7;
      *a2 = result;
      return result;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1AFEC95BC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB3E88(0, (unint64_t *)&unk_1EB81A970);
  uint64_t result = sub_1AFFC9E68();
  if (!v11)
  {
    __break(1u);
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  sub_1AFD80454(&v10, (uint64_t)v12);
  uint64_t v5 = v13;
  uint64_t v6 = v14;
  __swift_project_boxed_opaque_existential_1(v12, v13);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6))
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    uint64_t v7 = type metadata accessor for AppleAttributionProvider();
    uint64_t result = sub_1AFFC9E58();
    if (result)
    {
      uint64_t v8 = &off_1F0876408;
LABEL_10:
      a2[3] = v7;
      a2[4] = (uint64_t)v8;
      *a2 = result;
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    }
    goto LABEL_12;
  }
  sub_1AFD2CEB0((uint64_t)a1, (uint64_t)&v10);
  char v9 = sub_1AFDB35BC(&v10);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if ((v9 & 1) == 0)
  {
    uint64_t v7 = type metadata accessor for YahooAttributionProvider();
    uint64_t result = sub_1AFFC9E58();
    if (result)
    {
      uint64_t v8 = &off_1F0876D60;
      goto LABEL_10;
    }
    goto LABEL_13;
  }
  uint64_t v7 = type metadata accessor for SDSAttributionProvider();
  uint64_t result = sub_1AFFC9E38();
  if (result)
  {
    uint64_t v8 = &off_1F08745C0;
    goto LABEL_10;
  }
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_1AFEC976C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1AFECD72C(0, &qword_1EB81A0C8, MEMORY[0x1E4FBBE00]);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1AFFD0610;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v5 = type metadata accessor for SDSAttributionProvider();
  uint64_t result = sub_1AFFC9E38();
  if (result)
  {
    *(void *)(v4 + 56) = v5;
    *(void *)(v4 + 64) = &off_1F08745D0;
    *(void *)(v4 + 32) = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    uint64_t result = sub_1AFFC9E38();
    if (result)
    {
      *(void *)(v4 + 96) = v5;
      *(void *)(v4 + 104) = &off_1F08745D0;
      *(void *)(v4 + 72) = result;
      *a2 = v4;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1AFEC9888@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for UnnecessaryWordRemover();
  swift_allocObject();
  uint64_t result = sub_1AFF38C38();
  a1[3] = v2;
  a1[4] = (uint64_t)&off_1F0874730;
  *a1 = result;
  return result;
}

uint64_t sub_1AFEC98E0(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB3E88(0, &qword_1EB81A990);
  uint64_t result = sub_1AFFC9E68();
  if (v6)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1AFECD940(0, (unint64_t *)&unk_1EB81AC08, MEMORY[0x1E4F276F0], MEMORY[0x1E4FAB0D8]);
    uint64_t result = sub_1AFFC9E38();
    if (result)
    {
      uint64_t v3 = result;
      type metadata accessor for SDSAuthTokenRefresher();
      uint64_t v4 = swift_allocObject();
      sub_1AFD80454(&v5, v4 + 16);
      *(void *)(v4 + 56) = v3;
      return v4;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1AFEC9A0C(void *a1)
{
  return sub_1AFEC9AA4(a1, 0x746C7561666544, 0xE700000000000000, (uint64_t)&unk_1F087DD68, (uint64_t)sub_1AFECD5E0);
}

uint64_t sub_1AFEC9A44(void *a1)
{
  return sub_1AFEC9AA4(a1, 0x646572616853, 0xE600000000000000, (uint64_t)&unk_1F087DD40, (uint64_t)sub_1AFECD5E0);
}

uint64_t sub_1AFEC9A74(void *a1)
{
  return sub_1AFEC9AA4(a1, 0x737472616843, 0xE600000000000000, (uint64_t)&unk_1F087DD18, (uint64_t)sub_1AFECD5E0);
}

uint64_t sub_1AFEC9AA4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v22 = a5;
  v19[1] = a4;
  uint64_t v20 = sub_1AFFC9E08();
  MEMORY[0x1F4188790](v20);
  uint64_t v21 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1AFFCAAD8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](v7);
  sub_1AFECD940(0, &qword_1EB81AE60, MEMORY[0x1E4FAA750], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)v19 - v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t result = sub_1AFFC9E48();
  uint64_t v14 = v25;
  if (v25)
  {
    v19[0] = v24;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1AFFC9E68();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v12, 1, v7);
    if (result != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))((char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v12, v7);
      unint64_t v15 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      uint64_t v16 = swift_allocObject();
      *(void *)(v16 + 16) = v19[0];
      *(void *)(v16 + 24) = v14;
      (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v16 + v15, (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
      uint64_t v23 = MEMORY[0x1E4FBC860];
      sub_1AFECD440((unint64_t *)&unk_1EB81ABB0, MEMORY[0x1E4FAA910]);
      uint64_t v17 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAA910];
      sub_1AFECD940(0, (unint64_t *)&unk_1EB81AC20, MEMORY[0x1E4FAA910], MEMORY[0x1E4FBB320]);
      sub_1AFECCCFC((unint64_t *)&qword_1EB81AC30, (unint64_t *)&unk_1EB81AC20, v17);
      sub_1AFFC8E38();
      sub_1AFFCB738();
      sub_1AFECD940(0, &qword_1EB81A448, MEMORY[0x1E4FAA758], MEMORY[0x1E4FAAFF0]);
      swift_allocObject();
      uint64_t v18 = sub_1AFFCA528();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
      return v18;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1AFEC9E8C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1AFFC9E08();
  MEMORY[0x1F4188790](v2);
  sub_1AFECD440((unint64_t *)&unk_1EB81ABB0, MEMORY[0x1E4FAA910]);
  uint64_t v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAA910];
  sub_1AFECD940(0, (unint64_t *)&unk_1EB81AC20, MEMORY[0x1E4FAA910], MEMORY[0x1E4FBB320]);
  sub_1AFECCCFC((unint64_t *)&qword_1EB81AC30, (unint64_t *)&unk_1EB81AC20, v3);
  sub_1AFFCB738();
  sub_1AFECD940(0, &qword_1EB81A448, MEMORY[0x1E4FAA758], MEMORY[0x1E4FAAFF0]);
  swift_allocObject();
  uint64_t result = sub_1AFFCA528();
  *a1 = result;
  return result;
}

void sub_1AFECA03C(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1AFECA044@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EB81A2F0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1AFFCAAD8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EB811AA0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1AFECA0EC(void *a1)
{
  uint64_t v2 = sub_1AFFCA2F8();
  MEMORY[0x1F4188790](v2);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB3E88(0, &qword_1EB81AB10);
  uint64_t result = sub_1AFFC9E68();
  if (v7)
  {
    type metadata accessor for WatchlistDeprecationMonitor();
    uint64_t v4 = swift_allocObject();
    sub_1AFECD440((unint64_t *)&unk_1EB81ABD0, MEMORY[0x1E4FAACC8]);
    long long v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAACC8];
    sub_1AFECD940(0, &qword_1EB81AC50, MEMORY[0x1E4FAACC8], MEMORY[0x1E4FBB320]);
    sub_1AFECCCFC((unint64_t *)&qword_1EB81AC58, &qword_1EB81AC50, v5);
    sub_1AFFCB738();
    sub_1AFECD570();
    swift_allocObject();
    *(void *)(v4 + 56) = sub_1AFFC9F68();
    sub_1AFD80454(&v6, v4 + 16);
    return v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1AFECA2D0(void *a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for WatchlistDeprecationMonitor();
  uint64_t result = sub_1AFFC9E58();
  if (result)
  {
    sub_1AFECD440(&qword_1EB810FC0, (void (*)(uint64_t))type metadata accessor for WatchlistDeprecationMonitor);
    sub_1AFFCA398();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    sub_1AFDB3E88(0, (unint64_t *)&unk_1EB81AB18);
    uint64_t result = sub_1AFFC9E68();
    if (v4)
    {
      sub_1AFFCA398();
      swift_unknownObjectRelease();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1AFECA438(void *a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1AFDB3E88(0, &qword_1EB81A908);
  uint64_t result = sub_1AFFC9E68();
  if (v4)
  {
    sub_1AFFCA4A8();
    swift_unknownObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1AFECA500(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1AFDB3E88(0, &qword_1EB81AA40);
  uint64_t result = sub_1AFFC9E68();
  if (!ObjectType)
  {
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1AFDB3E88(0, &qword_1EB81A898);
  uint64_t result = sub_1AFFC9E68();
  if (!v13)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1AFECD508();
  uint64_t result = sub_1AFFC9E58();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v4 = result;
  uint64_t v5 = type metadata accessor for KVSCleanupStartupTask();
  uint64_t v6 = swift_allocObject();
  uint64_t v7 = v6 + OBJC_IVAR____TtC10StocksCore21KVSCleanupStartupTask_group;
  if (qword_1EB8110F8 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1AFFCA188();
  uint64_t v9 = __swift_project_value_buffer(v8, (uint64_t)qword_1EB8110D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v7, v9, v8);
  sub_1AFD80454(&v14, v6 + OBJC_IVAR____TtC10StocksCore21KVSCleanupStartupTask_appConfigurationManager);
  sub_1AFD80454(&v12, v6 + OBJC_IVAR____TtC10StocksCore21KVSCleanupStartupTask_watchlistService);
  *(void *)(v6 + OBJC_IVAR____TtC10StocksCore21KVSCleanupStartupTask_lazyDatabase) = v4;
  uint64_t ObjectType = v5;
  uint64_t v16 = sub_1AFECD440(&qword_1EB810F50, (void (*)(uint64_t))type metadata accessor for KVSCleanupStartupTask);
  *(void *)&long long v14 = v6;
  sub_1AFFCA2D8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v14);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1AFDB3E88(0, (unint64_t *)&unk_1EB81AB18);
  uint64_t result = sub_1AFFC9E68();
  uint64_t v10 = v12;
  if ((void)v12)
  {
    uint64_t v11 = *((void *)&v12 + 1);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v16 = *(void *)(v11 + 16);
    *(void *)&long long v14 = v10;
    sub_1AFFCA2D8();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v14);
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1AFECA7CC(void *a1)
{
  return sub_1AFECA7DC(a1, 1);
}

uint64_t sub_1AFECA7D4(void *a1)
{
  return sub_1AFECA7DC(a1, 2);
}

uint64_t sub_1AFECA7DC(void *a1, int a2)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for YahooAttributionProvider();
  uint64_t result = sub_1AFFC9E58();
  if (result)
  {
    uint64_t v5 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    uint64_t v6 = type metadata accessor for SDSMetadataCache();
    uint64_t result = sub_1AFFC9E58();
    if (result)
    {
      v16[3] = v6;
      v16[4] = &off_1F086D070;
      v16[0] = result;
      type metadata accessor for SDSAttributionProvider();
      uint64_t v7 = swift_allocObject();
      uint64_t v8 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v16, v6);
      double v9 = MEMORY[0x1F4188790](v8);
      uint64_t v11 = (void *)((char *)&v16[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v12 + 16))(v11, v9);
      uint64_t v13 = *v11;
      sub_1AFFC8E48();
      uint64_t v14 = sub_1AFECCE80(a2, v5, v13, v7);
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
      swift_release();
      return v14;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1AFECA994(void *a1)
{
  uint64_t v2 = sub_1AFFC9E08();
  MEMORY[0x1F4188790](v2);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFECD940(0, &qword_1EB81A448, MEMORY[0x1E4FAA758], MEMORY[0x1E4FAAFF0]);
  uint64_t result = sub_1AFFC9E38();
  if (result)
  {
    type metadata accessor for SDSMetadataCache();
    uint64_t v4 = swift_allocObject();
    uint64_t v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAA910];
    sub_1AFECD940(0, &qword_1EB81A450, MEMORY[0x1E4FAA910], MEMORY[0x1E4FBBE00]);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1AFFD05F0;
    sub_1AFFC9DF8();
    sub_1AFECD440((unint64_t *)&unk_1EB81ABB0, MEMORY[0x1E4FAA910]);
    sub_1AFECD940(0, (unint64_t *)&unk_1EB81AC20, v5, MEMORY[0x1E4FBB320]);
    sub_1AFECCCFC((unint64_t *)&qword_1EB81AC30, (unint64_t *)&unk_1EB81AC20, v5);
    sub_1AFFCB738();
    sub_1AFECD940(0, &qword_1EB818B48, (uint64_t (*)(uint64_t))sub_1AFECCD68, MEMORY[0x1E4FAAFF0]);
    swift_allocObject();
    *(void *)(v4 + 16) = sub_1AFFCA528();
    return v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1AFECAC60()
{
  return sub_1AFFBBFAC();
}

uint64_t sub_1AFECAC98(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB3E88(0, &qword_1EB81AA40);
  uint64_t result = sub_1AFFC9E68();
  if (v3)
  {
    type metadata accessor for YahooAttributionProvider();
    swift_allocObject();
    return sub_1AFF1A3F8((uint64_t)v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for ManagerAssembly()
{
  return self;
}

void *sub_1AFECAD58(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10 = sub_1AFFCA2F8();
  MEMORY[0x1F4188790](v10);
  uint64_t v16 = &type metadata for CurrencyManagerCache;
  uint64_t v17 = &off_1F0872D20;
  *(void *)&long long v15 = a2;
  sub_1AFECD440((unint64_t *)&unk_1EB81ABD0, MEMORY[0x1E4FAACC8]);
  uint64_t v11 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAACC8];
  sub_1AFECD940(0, &qword_1EB81AC50, MEMORY[0x1E4FAACC8], MEMORY[0x1E4FBB320]);
  sub_1AFECCCFC((unint64_t *)&qword_1EB81AC58, &qword_1EB81AC50, v11);
  sub_1AFFCB738();
  sub_1AFECDC64(0, &qword_1EB8116E0, (void (*)(uint64_t))sub_1AFECDCF4, (void (*)(uint64_t))sub_1AFECDD50, (void (*)(void))sub_1AFECDDBC);
  swift_allocObject();
  a5[12] = sub_1AFFC9F68();
  uint64_t v12 = (char *)a5 + OBJC_IVAR____TtC10StocksCore15CurrencyManager_inMemory;
  uint64_t v13 = type metadata accessor for CurrencyResponse();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  sub_1AFD80454(a1, (uint64_t)(a5 + 2));
  sub_1AFD80454(&v15, (uint64_t)(a5 + 7));
  a5[13] = a3;
  a5[14] = a4;
  return a5;
}

uint64_t sub_1AFECAFA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v14 = a1;
  uint64_t v13 = sub_1AFFC9E08();
  v12[0] = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  v12[1] = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1AFFCA2F8();
  MEMORY[0x1F4188790](v6);
  uint64_t v17 = type metadata accessor for AttributionSourceAssetService();
  uint64_t v18 = &off_1F08784E8;
  *(void *)&long long v16 = a2;
  uint64_t v15 = MEMORY[0x1E4FBC860];
  sub_1AFECD440((unint64_t *)&unk_1EB81ABD0, MEMORY[0x1E4FAACC8]);
  uint64_t v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAACC8];
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB320];
  sub_1AFECD940(0, &qword_1EB81AC50, MEMORY[0x1E4FAACC8], MEMORY[0x1E4FBB320]);
  sub_1AFECCCFC((unint64_t *)&qword_1EB81AC58, &qword_1EB81AC50, v7);
  sub_1AFFCB738();
  sub_1AFECDC64(0, &qword_1EB816C20, (void (*)(uint64_t))sub_1AFECD7A0, (void (*)(uint64_t))sub_1AFECD834, (void (*)(void))sub_1AFECD8D0);
  swift_allocObject();
  *(void *)(a3 + 64) = sub_1AFFC9F68();
  double v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAA910];
  sub_1AFECD940(0, &qword_1EB81A450, MEMORY[0x1E4FAA910], MEMORY[0x1E4FBBE00]);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1AFFD05F0;
  sub_1AFFC9DF8();
  uint64_t v15 = v10;
  sub_1AFECD440((unint64_t *)&unk_1EB81ABB0, MEMORY[0x1E4FAA910]);
  sub_1AFECD940(0, (unint64_t *)&unk_1EB81AC20, v9, v8);
  sub_1AFECCCFC((unint64_t *)&qword_1EB81AC30, (unint64_t *)&unk_1EB81AC20, v9);
  sub_1AFFCB738();
  sub_1AFECD940(0, &qword_1EB816C40, (uint64_t (*)(uint64_t))sub_1AFECD90C, MEMORY[0x1E4FAAFF0]);
  swift_allocObject();
  *(void *)(a3 + 16) = sub_1AFFCA528();
  sub_1AFD80454(&v16, a3 + 24);
  return a3;
}

uint64_t sub_1AFECB384(uint64_t a1)
{
  uint64_t v48 = sub_1AFFC9E78();
  uint64_t v55 = *(void *)(v48 - 8);
  MEMORY[0x1F4188790](v48);
  uint64_t v47 = (char *)&v43 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1AFFCA5C8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1AFFCA818();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFFC9F98();
  sub_1AFDB3E88(0, &qword_1EB81AA40);
  sub_1AFFCA388();
  swift_release();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FAB148], v7);
  sub_1AFFC9D28();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v11 = *(void (**)(char *))(v4 + 104);
  uint64_t v12 = *MEMORY[0x1E4FAB040];
  v11(v6);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  uint64_t v13 = *(void (**)(char *, uint64_t))(v4 + 8);
  v13(v6, v3);
  sub_1AFFC9F98();
  sub_1AFDB3E88(0, &qword_1EB81AE78);
  sub_1AFFCA388();
  swift_release();
  swift_release();
  sub_1AFFC9F98();
  sub_1AFFCA388();
  swift_release();
  swift_release();
  sub_1AFFC9F98();
  sub_1AFDB3E88(0, &qword_1EB81A790);
  sub_1AFFCA388();
  swift_release();
  ((void (*)(char *, uint64_t, uint64_t))v11)(v6, v12, v3);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  v13(v6, v3);
  sub_1AFFC9F98();
  sub_1AFDB3E88(0, &qword_1EB81A878);
  sub_1AFFCA388();
  swift_release();
  ((void (*)(char *, uint64_t, uint64_t))v11)(v6, v12, v3);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  v13(v6, v3);
  sub_1AFFC9F98();
  sub_1AFDB3E88(0, &qword_1EB81AA00);
  sub_1AFFCA388();
  swift_release();
  ((void (*)(char *, uint64_t, uint64_t))v11)(v6, v12, v3);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  v13(v6, v3);
  sub_1AFFC9F98();
  sub_1AFDB3E88(0, (unint64_t *)&unk_1EB81A910);
  sub_1AFFCA388();
  swift_release();
  ((void (*)(char *, uint64_t, uint64_t))v11)(v6, v12, v3);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  v13(v6, v3);
  sub_1AFFC9F98();
  sub_1AFDB3E88(0, &qword_1EB81A9D8);
  sub_1AFFCA388();
  swift_release();
  ((void (*)(char *, uint64_t, uint64_t))v11)(v6, v12, v3);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  v13(v6, v3);
  sub_1AFFC9F98();
  sub_1AFDB3E88(0, (unint64_t *)&unk_1EB81A778);
  sub_1AFFCA388();
  swift_release();
  ((void (*)(char *, uint64_t, uint64_t))v11)(v6, v12, v3);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  v13(v6, v3);
  sub_1AFFC9F98();
  sub_1AFDB3E88(0, (unint64_t *)&unk_1EB81A590);
  sub_1AFFCA388();
  swift_release();
  ((void (*)(char *, uint64_t, uint64_t))v11)(v6, v12, v3);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  v13(v6, v3);
  sub_1AFFC9F98();
  sub_1AFDB3E88(0, &qword_1EB81AE70);
  sub_1AFFCA388();
  swift_release();
  swift_release();
  sub_1AFFC9F98();
  sub_1AFDB3E88(0, &qword_1EB81A990);
  sub_1AFFCA388();
  swift_release();
  ((void (*)(char *, uint64_t, uint64_t))v11)(v6, v12, v3);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  v13(v6, v3);
  sub_1AFFC9F98();
  sub_1AFFCA478();
  sub_1AFFCA378();
  swift_release();
  ((void (*)(char *, uint64_t, uint64_t))v11)(v6, v12, v3);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  v13(v6, v3);
  sub_1AFFC9F98();
  sub_1AFDB3E88(0, (unint64_t *)&unk_1EB81AB18);
  sub_1AFFCA388();
  swift_release();
  ((void (*)(char *, uint64_t, uint64_t))v11)(v6, v12, v3);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  v13(v6, v3);
  sub_1AFFC9F98();
  sub_1AFDB3E88(0, (unint64_t *)&qword_1EB81A890);
  sub_1AFFCA388();
  swift_release();
  ((void (*)(char *, void, uint64_t))v11)(v6, *MEMORY[0x1E4FAB028], v3);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  v13(v6, v3);
  sub_1AFFC9F98();
  sub_1AFDB3E88(0, (unint64_t *)&unk_1EB81AA10);
  sub_1AFFCA388();
  swift_release();
  ((void (*)(char *, uint64_t, uint64_t))v11)(v6, v12, v3);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  v13(v6, v3);
  sub_1AFFC9F98();
  sub_1AFDB3E88(0, &qword_1EB81A908);
  sub_1AFFCA388();
  swift_release();
  unsigned int v53 = v12;
  ((void (*)(char *, uint64_t, uint64_t))v11)(v6, v12, v3);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  v13(v6, v3);
  sub_1AFFC9F98();
  sub_1AFDB3E88(0, (unint64_t *)&unk_1EB81A808);
  sub_1AFFCA388();
  swift_release();
  ((void (*)(char *, uint64_t, uint64_t))v11)(v6, v12, v3);
  uint64_t v51 = v11;
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  v13(v6, v3);
  uint64_t v14 = a1;
  sub_1AFFC9F98();
  sub_1AFDB3E88(0, &qword_1EB81A5D8);
  sub_1AFFCA388();
  swift_release();
  uint64_t v15 = v53;
  ((void (*)(char *, void, uint64_t))v11)(v6, v53, v3);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  v13(v6, v3);
  uint64_t v16 = v14;
  sub_1AFFC9F98();
  sub_1AFDB3E88(0, &qword_1EB81A5C8);
  sub_1AFFCA388();
  swift_release();
  uint64_t v17 = v15;
  uint64_t v18 = v51;
  ((void (*)(char *, uint64_t, uint64_t))v51)(v6, v17, v3);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  uint64_t v54 = v13;
  v13(v6, v3);
  sub_1AFFC9F98();
  sub_1AFFCA388();
  swift_release();
  uint64_t v19 = v53;
  ((void (*)(char *, void, uint64_t))v18)(v6, v53, v3);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  v13(v6, v3);
  sub_1AFFC9F98();
  sub_1AFECD72C(0, (unint64_t *)&qword_1EB81AC18, MEMORY[0x1E4FBB320]);
  sub_1AFFCA388();
  swift_release();
  uint64_t v20 = v19;
  ((void (*)(char *, uint64_t, uint64_t))v18)(v6, v19, v3);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  uint64_t v21 = v54;
  v54(v6, v3);
  uint64_t v22 = v16;
  sub_1AFFC9F98();
  sub_1AFDB3E88(0, (unint64_t *)&unk_1EB81AA30);
  sub_1AFFCA388();
  swift_release();
  uint64_t v23 = (void (*)(char *, uint64_t, uint64_t))v51;
  ((void (*)(char *, uint64_t, uint64_t))v51)(v6, v20, v3);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  v21(v6, v3);
  uint64_t v56 = v22;
  sub_1AFFC9F98();
  type metadata accessor for SDSAuthTokenRefresher();
  sub_1AFFCA378();
  swift_release();
  uint64_t v50 = v3;
  v23(v6, v20, v3);
  uint64_t v52 = v4 + 104;
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  uint64_t v24 = v3;
  uint64_t v25 = v54;
  v54(v6, v24);
  sub_1AFFC9FA8();
  sub_1AFECD940(0, &qword_1EB81A448, MEMORY[0x1E4FAA758], MEMORY[0x1E4FAAFF0]);
  sub_1AFFCA378();
  uint64_t v26 = swift_release();
  MEMORY[0x1B3E8D650](v26);
  sub_1AFFC9D38();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v27 = v53;
  uint64_t v28 = v50;
  v23(v6, v53, v50);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  v25(v6, v28);
  sub_1AFFC9FA8();
  sub_1AFFCA378();
  uint64_t v29 = swift_release();
  MEMORY[0x1B3E8D650](v29);
  sub_1AFFC9D38();
  swift_release();
  swift_bridgeObjectRelease();
  v23(v6, v27, v28);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  uint64_t v30 = v54;
  v54(v6, v28);
  sub_1AFFC9FA8();
  sub_1AFFCA378();
  uint64_t v31 = swift_release();
  MEMORY[0x1B3E8D650](v31);
  sub_1AFFC9D38();
  swift_release();
  swift_bridgeObjectRelease();
  v23(v6, v27, v28);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  v30(v6, v28);
  uint64_t v46 = v4 + 8;
  sub_1AFFC9FA8();
  sub_1AFFCA388();
  swift_release();
  swift_release();
  sub_1AFFC9FA8();
  sub_1AFFCAAD8();
  sub_1AFFCA388();
  swift_release();
  swift_release();
  sub_1AFFC9FA8();
  type metadata accessor for WatchlistDeprecationMonitor();
  sub_1AFFCA378();
  swift_release();
  v23(v6, v27, v28);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  v30(v6, v28);
  sub_1AFFC9FB8();
  __swift_project_boxed_opaque_existential_1(v57, v58);
  sub_1AFDB3E88(0, &qword_1EB81ABE0);
  unsigned int v45 = *MEMORY[0x1E4FAAA00];
  uint64_t v32 = v55;
  uint64_t v44 = *(void (**)(char *))(v55 + 104);
  uint64_t v34 = v47;
  uint64_t v33 = v48;
  v44(v47);
  sub_1AFFCA408();
  uint64_t v35 = *(void (**)(char *, uint64_t))(v32 + 8);
  uint64_t v55 = v32 + 8;
  id v49 = v35;
  v35(v34, v33);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
  sub_1AFFC9FB8();
  uint64_t v43 = v59;
  __swift_project_boxed_opaque_existential_1(v57, v58);
  sub_1AFDB3E88(0, (unint64_t *)&unk_1EB81ABE8);
  uint64_t v36 = v45;
  uint64_t v37 = (void (*)(char *, uint64_t, uint64_t))v44;
  ((void (*)(char *, void, uint64_t))v44)(v34, v45, v33);
  sub_1AFFCA408();
  v49(v34, v33);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
  sub_1AFFC9FB8();
  uint64_t v43 = v59;
  __swift_project_boxed_opaque_existential_1(v57, v58);
  sub_1AFFCA2E8();
  v37(v34, v36, v33);
  sub_1AFFCA3F8();
  v49(v34, v33);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
  sub_1AFFC9FA8();
  type metadata accessor for SDSAttributionProvider();
  sub_1AFFCA378();
  swift_release();
  uint64_t v38 = v53;
  uint64_t v39 = v50;
  uint64_t v40 = (void (*)(char *, uint64_t, uint64_t))v51;
  ((void (*)(char *, void, uint64_t))v51)(v6, v53, v50);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  uint64_t v41 = v54;
  v54(v6, v39);
  sub_1AFFC9FA8();
  sub_1AFFCA378();
  swift_release();
  v40(v6, v38, v39);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  v41(v6, v39);
  sub_1AFFC9FA8();
  type metadata accessor for SDSMetadataCache();
  sub_1AFFCA378();
  swift_release();
  v40(v6, v38, v39);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  v41(v6, v39);
  sub_1AFFC9FA8();
  type metadata accessor for AppleAttributionProvider();
  sub_1AFFCA378();
  swift_release();
  v40(v6, v38, v39);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  v41(v6, v39);
  sub_1AFFC9FA8();
  type metadata accessor for YahooAttributionProvider();
  sub_1AFFCA378();
  swift_release();
  v40(v6, v38, v39);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  return ((uint64_t (*)(char *, uint64_t))v41)(v6, v39);
}

uint64_t sub_1AFECCCFC(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1AFECD940(255, a2, a3, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AFECCD60@<X0>(uint64_t *a1@<X8>)
{
  return sub_1AFF04D30(a1);
}

void sub_1AFECCD68(uint64_t a1)
{
}

void sub_1AFECCD9C()
{
  if (!qword_1EB819C00)
  {
    sub_1AFECCE2C();
    sub_1AFD57C74();
    sub_1AFD57DF8();
    unint64_t v0 = sub_1AFFCA9A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB819C00);
    }
  }
}

unint64_t sub_1AFECCE2C()
{
  unint64_t result = qword_1EB8190D0;
  if (!qword_1EB8190D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8190D0);
  }
  return result;
}

uint64_t sub_1AFECCE80(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v44 = a2;
  int v38 = a1;
  uint64_t v42 = type metadata accessor for RawAttributionSourceLogo;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1AFECD940(0, &qword_1EB818B30, type metadata accessor for RawAttributionSourceLogo, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v40 = (char *)&v33 - v8;
  uint64_t v41 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F276F0];
  sub_1AFECD940(0, (unint64_t *)&qword_1EB81A490, MEMORY[0x1E4F276F0], v6);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v43 = (uint64_t)&v33 - v10;
  uint64_t v37 = type metadata accessor for RawAttributionSource(0) - 8;
  MEMORY[0x1F4188790](v37);
  uint64_t v36 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v39 = (uint64_t)&v33 - v13;
  uint64_t v35 = sub_1AFFCB4A8();
  uint64_t v14 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1AFFCB488();
  MEMORY[0x1F4188790](v17);
  uint64_t v18 = sub_1AFFCAC18();
  MEMORY[0x1F4188790](v18 - 8);
  v46[3] = type metadata accessor for SDSMetadataCache();
  v46[4] = &off_1F086D070;
  v46[0] = a3;
  *(_DWORD *)(a4 + 80) = 0;
  uint64_t v33 = sub_1AFD8F6AC(0, (unint64_t *)&qword_1EB819E68);
  *(_OWORD *)(a4 + 88) = 0u;
  *(_OWORD *)(a4 + 104) = 0u;
  *(void *)(a4 + 120) = 0;
  sub_1AFFCABE8();
  uint64_t v45 = MEMORY[0x1E4FBC860];
  sub_1AFECD440(&qword_1EB819E60, MEMORY[0x1E4FBCC10]);
  uint64_t v19 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCC10];
  sub_1AFECD940(0, &qword_1EB819DE8, MEMORY[0x1E4FBCC10], MEMORY[0x1E4FBB320]);
  sub_1AFECCCFC((unint64_t *)&qword_1EB819DF0, &qword_1EB819DE8, v19);
  sub_1AFFCB738();
  (*(void (**)(char *, void, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E4FBCC58], v35);
  uint64_t v20 = sub_1AFFCB4D8();
  uint64_t v34 = a4;
  *(void *)(a4 + 128) = v20;
  *(unsigned char *)(a4 + 24) = v38;
  *(void *)(a4 + 32) = v44;
  sub_1AFD2CEB0((uint64_t)v46, a4 + 40);
  uint64_t v21 = sub_1AFFC96E8();
  uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56);
  v22(v43, 1, 1, v21);
  uint64_t v23 = type metadata accessor for RawAttributionSourceLogo(0);
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56);
  uint64_t v25 = (uint64_t)v40;
  v24(v40, 1, 1, v23);
  uint64_t v27 = v36;
  uint64_t v26 = v37;
  uint64_t v28 = (uint64_t)&v36[*(int *)(v37 + 28)];
  v22(v28, 1, 1, v21);
  uint64_t v29 = (uint64_t)v27 + *(int *)(v26 + 32);
  v24((char *)v29, 1, 1, v23);
  *uint64_t v27 = 0;
  v27[1] = 0xE000000000000000;
  sub_1AFFC8E48();
  sub_1AFECD488(v43, v28, (unint64_t *)&qword_1EB81A490, v41);
  sub_1AFECD488(v25, v29, &qword_1EB818B30, v42);
  sub_1AFD4A000((uint64_t)v27, v39);
  sub_1AFECD940(0, &qword_1EB818B40, type metadata accessor for RawAttributionSource, MEMORY[0x1E4FAAA60]);
  swift_allocObject();
  uint64_t v30 = sub_1AFFCA038();
  uint64_t v31 = v34;
  *(void *)(v34 + 16) = v30;
  sub_1AFDF0E88();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
  return v31;
}

uint64_t sub_1AFECD440(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AFECD488(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1AFECD940(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a2, a1, v6);
  return a2;
}

void sub_1AFECD508()
{
  if (!qword_1EB81ABF8)
  {
    sub_1AFD8F6AC(255, (unint64_t *)&unk_1EB81AC90);
    unint64_t v0 = sub_1AFFCA538();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB81ABF8);
    }
  }
}

void sub_1AFECD570()
{
  if (!qword_1EB8110D0)
  {
    unint64_t v0 = sub_1AFFC9F88();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8110D0);
    }
  }
}

uint64_t objectdestroyTm_1()
{
  uint64_t v1 = sub_1AFFCAAD8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1AFECD6B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_1AFFCAAD8() - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = (void (*)(void, void, void))(v1
                                                   + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));

  return sub_1AFF57870(v4, v5, v6, a1);
}

void sub_1AFECD72C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_1AFDB3E88(255, &qword_1EB81A9D0);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_1AFECD7A0()
{
  if (!qword_1EB81AC68)
  {
    sub_1AFFC96E8();
    sub_1AFECD440((unint64_t *)&qword_1EB81A618, MEMORY[0x1E4F276F0]);
    unint64_t v0 = sub_1AFFCB388();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB81AC68);
    }
  }
}

void sub_1AFECD834()
{
  if (!qword_1EB816C60)
  {
    sub_1AFFC96E8();
    sub_1AFECD440((unint64_t *)&qword_1EB81A618, MEMORY[0x1E4F276F0]);
    unint64_t v0 = sub_1AFFCAD18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB816C60);
    }
  }
}

uint64_t sub_1AFECD8D0()
{
  return sub_1AFECD440((unint64_t *)&unk_1EB81AC70, (void (*)(uint64_t))sub_1AFECD7A0);
}

uint64_t sub_1AFECD904@<X0>(uint64_t *a1@<X8>)
{
  return sub_1AFFBEE94(a1);
}

void sub_1AFECD90C(uint64_t a1)
{
}

void sub_1AFECD940(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1AFECD9A4()
{
  if (!qword_1EB816C50)
  {
    sub_1AFECDA34();
    sub_1AFECDA88();
    sub_1AFECDADC();
    unint64_t v0 = sub_1AFFCA9A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB816C50);
    }
  }
}

unint64_t sub_1AFECDA34()
{
  unint64_t result = qword_1EB816C18;
  if (!qword_1EB816C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816C18);
  }
  return result;
}

unint64_t sub_1AFECDA88()
{
  unint64_t result = qword_1EB816B70;
  if (!qword_1EB816B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816B70);
  }
  return result;
}

unint64_t sub_1AFECDADC()
{
  unint64_t result = qword_1EB816B68;
  if (!qword_1EB816B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816B68);
  }
  return result;
}

void sub_1AFECDB30()
{
  if (!qword_1EB819C10)
  {
    type metadata accessor for NetworkEvent();
    unint64_t v0 = sub_1AFFCAB28();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB819C10);
    }
  }
}

void sub_1AFECDB98()
{
  if (!qword_1EB8116E8)
  {
    type metadata accessor for CurrencyResponse();
    sub_1AFECD440(&qword_1EB8115A0, (void (*)(uint64_t))type metadata accessor for CurrencyResponse);
    sub_1AFECD440(&qword_1EB811598, (void (*)(uint64_t))type metadata accessor for CurrencyResponse);
    unint64_t v0 = sub_1AFFCA168();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8116E8);
    }
  }
}

void sub_1AFECDC64(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t), void (*a5)(void))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    a5();
    unint64_t v8 = sub_1AFFC9F88();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1AFECDCF4()
{
  if (!qword_1EB811778)
  {
    sub_1AFE054C4();
    unint64_t v0 = sub_1AFFCB388();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB811778);
    }
  }
}

void sub_1AFECDD50()
{
  if (!qword_1EB811748)
  {
    type metadata accessor for CurrencyResponse();
    sub_1AFE054C4();
    unint64_t v0 = sub_1AFFCAD18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB811748);
    }
  }
}

uint64_t sub_1AFECDDBC()
{
  return sub_1AFECD440(&qword_1EB811780, (void (*)(uint64_t))sub_1AFECDCF4);
}

double sub_1AFECDDF0(_OWORD *a1)
{
  double result = 0.0;
  a1[29] = 0u;
  a1[30] = 0u;
  a1[27] = 0u;
  a1[28] = 0u;
  a1[25] = 0u;
  a1[26] = 0u;
  a1[23] = 0u;
  a1[24] = 0u;
  a1[21] = 0u;
  a1[22] = 0u;
  a1[19] = 0u;
  a1[20] = 0u;
  a1[17] = 0u;
  a1[18] = 0u;
  a1[15] = 0u;
  a1[16] = 0u;
  a1[13] = 0u;
  a1[14] = 0u;
  a1[11] = 0u;
  a1[12] = 0u;
  a1[9] = 0u;
  a1[10] = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  *(_OWORD *)((char *)a1 + 489) = 0u;
  return result;
}

uint64_t sub_1AFECDE40(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  sub_1AFECDF00(0, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

double sub_1AFECDEAC(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(unsigned char *)(a1 + 160) = 1;
  return result;
}

void sub_1AFECDED0(unsigned char *a1)
{
  a1[2267] = 1;
}

void sub_1AFECDF00(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_1AFFCB658();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t sub_1AFECDF48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  BOOL v4 = a1 == 0x6C61756E616DLL && a2 == 0xE600000000000000;
  if (v4 || (sub_1AFFCBCE8() & 1) != 0)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v8 = -96;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001AFFF9260 || (sub_1AFFCBCE8() & 1) != 0)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v8 = 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001AFFF9280 || (sub_1AFFCBCE8() & 1) != 0)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v8 = 1;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001AFFF92A0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v8 = 32;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001AFFF92C0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v8 = 33;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001AFFF92E0 || (sub_1AFFCBCE8() & 1) != 0)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v8 = 64;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001AFFF9300 || (sub_1AFFCBCE8() & 1) != 0)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v8 = 65;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001AFFF9320 || (sub_1AFFCBCE8() & 1) != 0)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v8 = 96;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001AFFF9340 || (sub_1AFFCBCE8() & 1) != 0)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v8 = 97;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001AFFF9360 || (sub_1AFFCBCE8() & 1) != 0)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v8 = 0x80;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001AFFF9380)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v8 = -127;
  }
  else
  {
    char v9 = sub_1AFFCBCE8();
    uint64_t result = swift_bridgeObjectRelease();
    if (v9) {
      char v8 = -127;
    }
    else {
      char v8 = -2;
    }
  }
  *a3 = v8;
  return result;
}

uint64_t sub_1AFECE354()
{
  uint64_t result = 0;
  switch(*v0 >> 5)
  {
    case 1:
      uint64_t result = 2;
      break;
    case 2:
      uint64_t result = 3;
      break;
    case 3:
      uint64_t result = 4;
      break;
    case 4:
      uint64_t result = 5;
      break;
    case 5:
      return result;
    default:
      uint64_t result = 1;
      break;
  }
  return result;
}

uint64_t sub_1AFECE404()
{
  uint64_t v1 = sub_1AFFC9A78();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v2 = sub_1AFFCAE58();
  MEMORY[0x1F4188790](v2 - 8);
  switch(*v0 >> 5)
  {
    case 1:
      sub_1AFFCADF8();
      if (qword_1EB819E80 != -1) {
        goto LABEL_14;
      }
      break;
    case 2:
      sub_1AFFCADF8();
      if (qword_1EB819E80 != -1) {
        goto LABEL_14;
      }
      break;
    case 3:
      sub_1AFFCADF8();
      if (qword_1EB819E80 != -1) {
        goto LABEL_14;
      }
      break;
    case 4:
      sub_1AFFCADF8();
      if (qword_1EB819E80 != -1) {
        goto LABEL_14;
      }
      break;
    case 5:
      sub_1AFFCADF8();
      if (qword_1EB819E80 != -1) {
        goto LABEL_14;
      }
      break;
    default:
      sub_1AFFCADF8();
      if (qword_1EB819E80 != -1) {
LABEL_14:
      }
        swift_once();
      break;
  }
  id v3 = (id)qword_1EB831AF8;
  sub_1AFFC9A28();
  return sub_1AFFCAEE8();
}

uint64_t sub_1AFECE858(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned int v2 = *a2;
  switch(*a1 >> 5)
  {
    case 1:
      if ((v2 & 0xE0) != 0x20) {
        goto LABEL_14;
      }
      uint64_t result = 1;
      break;
    case 2:
      if ((v2 & 0xE0) != 0x40) {
        goto LABEL_14;
      }
      uint64_t result = 1;
      break;
    case 3:
      if ((v2 & 0xE0) != 0x60) {
        goto LABEL_14;
      }
      uint64_t result = 1;
      break;
    case 4:
      if ((v2 & 0xE0) != 0x80) {
        goto LABEL_14;
      }
      uint64_t result = 1;
      break;
    case 5:
      if (v2 != 160) {
        goto LABEL_14;
      }
      uint64_t result = 1;
      break;
    default:
      if (v2 >= 0x20) {
LABEL_14:
      }
        uint64_t result = 0;
      else {
        uint64_t result = 1;
      }
      break;
  }
  return result;
}

uint64_t sub_1AFECE914@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, char *a4@<X8>)
{
  char v5 = (a3 & 1) == 0 && a2 == 1;
  switch(result)
  {
    case 0:
      char v5 = -96;
      goto LABEL_9;
    case 1:
LABEL_9:
      *a4 = v5;
      break;
    case 2:
      *a4 = v5 | 0x20;
      break;
    case 3:
      *a4 = v5 | 0x40;
      break;
    case 4:
      *a4 = v5 | 0x60;
      break;
    case 5:
      *a4 = v5 | 0x80;
      break;
    default:
      *a4 = -2;
      break;
  }
  return result;
}

void sub_1AFECE9AC()
{
  qword_1E9AFC178 = (uint64_t)&unk_1F0871248;
}

uint64_t sub_1AFECE9C0()
{
  return sub_1AFECEE7C(&qword_1E9AF8DC8);
}

uint64_t sub_1AFECE9E4(uint64_t a1)
{
  return sub_1AFECEEFC(a1, &qword_1E9AF8DC8, &qword_1E9AFC178);
}

uint64_t (*sub_1AFECEA08())()
{
  if (qword_1E9AF8DC8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1AFECEA90()
{
  uint64_t v1 = sub_1AFFC9A78();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v2 = sub_1AFFCAE58();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  char v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v6);
  char v8 = &v14[-v7];
  char v9 = *v0;
  uint64_t v10 = (void (**)(unsigned char *, unsigned char *, uint64_t))(v3 + 16);
  if (v9)
  {
    sub_1AFFCADF8();
    (*v10)(v5, v8, v2);
    if (qword_1EB819E80 == -1) {
      goto LABEL_5;
    }
    goto LABEL_6;
  }
  sub_1AFFCADF8();
  (*v10)(v5, v8, v2);
  if (qword_1EB819E80 != -1) {
LABEL_6:
  }
    swift_once();
LABEL_5:
  id v11 = (id)qword_1EB831AF8;
  sub_1AFFC9A28();
  uint64_t v12 = sub_1AFFCAEF8();
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v8, v2);
  return v12;
}

uint64_t sub_1AFECED20@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  if (result == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (!result) {
    char v2 = 0;
  }
  *a2 = v2;
  return result;
}

uint64_t sub_1AFECED3C()
{
  return *v0;
}

void *sub_1AFECED44@<X0>(void *result@<X0>, char *a2@<X8>)
{
  if (*result == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (*result) {
    char v3 = v2;
  }
  else {
    char v3 = 0;
  }
  *a2 = v3;
  return result;
}

void sub_1AFECED64(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_1AFECED70()
{
  return sub_1AFFCB188();
}

uint64_t sub_1AFECEDD0()
{
  return sub_1AFFCB138();
}

uint64_t sub_1AFECEE20@<X0>(void *a1@<X8>)
{
  return sub_1AFED0B4C(&qword_1E9AF8DC8, &qword_1E9AFC178, a1);
}

void sub_1AFECEE44()
{
  qword_1EB816758 = (uint64_t)&unk_1F0871300;
}

uint64_t sub_1AFECEE58()
{
  return sub_1AFECEE7C(&qword_1EB816750);
}

uint64_t sub_1AFECEE7C(void *a1)
{
  if (*a1 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return sub_1AFFC8E38();
}

uint64_t sub_1AFECEED8(uint64_t a1)
{
  return sub_1AFECEEFC(a1, &qword_1EB816750, &qword_1EB816758);
}

uint64_t sub_1AFECEEFC(uint64_t a1, void *a2, void *a3)
{
  if (*a2 != -1) {
    swift_once();
  }
  swift_beginAccess();
  *a3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1AFECEF64())()
{
  if (qword_1EB816750 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_1AFECEFEC(unsigned char *a1@<X8>)
{
  unsigned int v2 = *v1;
  char v3 = 0;
  if (v2 >> 5 != 5) {
    char v3 = v2 & 1;
  }
  *a1 = v3;
}

uint64_t sub_1AFECF03C()
{
  switch(*v0 >> 5)
  {
    case 5:
      return sub_1AFFCBE08();
    default:
      sub_1AFFCBE08();
      break;
  }
  return sub_1AFFCBE08();
}

uint64_t sub_1AFECF0D8()
{
  uint64_t result = 0x6C61756E616DLL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6168436563697270;
      break;
    case 2:
      uint64_t result = 0x43746E6563726570;
      break;
    case 3:
      uint64_t result = 0x614374656B72616DLL;
      break;
    case 4:
      uint64_t result = 0x6C6F626D7973;
      break;
    case 5:
      uint64_t result = 1701667182;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1AFECF1A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1AFED1CCC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AFECF1CC(uint64_t a1)
{
  unint64_t v2 = sub_1AFED0DEC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFECF208(uint64_t a1)
{
  unint64_t v2 = sub_1AFED0DEC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFECF244()
{
  return 0;
}

uint64_t sub_1AFECF250@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_1AFECF280(uint64_t a1)
{
  unint64_t v2 = sub_1AFED0D98();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFECF2BC(uint64_t a1)
{
  unint64_t v2 = sub_1AFED0D98();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFECF2F8(uint64_t a1)
{
  unint64_t v2 = sub_1AFED0C9C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFECF334(uint64_t a1)
{
  unint64_t v2 = sub_1AFED0C9C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFECF370(uint64_t a1)
{
  unint64_t v2 = sub_1AFED0BF4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFECF3AC(uint64_t a1)
{
  unint64_t v2 = sub_1AFED0BF4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFECF3E8(uint64_t a1)
{
  unint64_t v2 = sub_1AFED0CF0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFECF424(uint64_t a1)
{
  unint64_t v2 = sub_1AFED0CF0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFECF460(uint64_t a1)
{
  unint64_t v2 = sub_1AFED0D44();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFECF49C(uint64_t a1)
{
  unint64_t v2 = sub_1AFED0D44();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFECF4D8(uint64_t a1)
{
  unint64_t v2 = sub_1AFED0C48();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFECF514(uint64_t a1)
{
  unint64_t v2 = sub_1AFED0C48();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFECF550(void *a1)
{
  char v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBBDE0];
  sub_1AFED0E94(0, &qword_1E9AFC180, (uint64_t (*)(void))sub_1AFED0BF4, (uint64_t)&type metadata for WatchlistSortState.NameCodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v47 = *(void *)(v4 - 8);
  uint64_t v48 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v46 = (char *)&v33 - v5;
  sub_1AFED0E94(0, &qword_1E9AFC190, (uint64_t (*)(void))sub_1AFED0C48, (uint64_t)&type metadata for WatchlistSortState.SymbolCodingKeys, v3);
  uint64_t v44 = *(void *)(v6 - 8);
  uint64_t v45 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v43 = (char *)&v33 - v7;
  sub_1AFED0E94(0, &qword_1E9AFC1A0, (uint64_t (*)(void))sub_1AFED0C9C, (uint64_t)&type metadata for WatchlistSortState.MarketCapCodingKeys, v3);
  uint64_t v41 = *(void *)(v8 - 8);
  uint64_t v42 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v40 = (char *)&v33 - v9;
  sub_1AFED0E94(0, &qword_1E9AFC1B0, (uint64_t (*)(void))sub_1AFED0CF0, (uint64_t)&type metadata for WatchlistSortState.PercentChangeCodingKeys, v3);
  uint64_t v38 = *(void *)(v10 - 8);
  uint64_t v39 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v37 = (char *)&v33 - v11;
  sub_1AFED0E94(0, &qword_1E9AFC1C0, (uint64_t (*)(void))sub_1AFED0D44, (uint64_t)&type metadata for WatchlistSortState.PriceChangeCodingKeys, v3);
  uint64_t v35 = *(void *)(v12 - 8);
  uint64_t v36 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v33 - v13;
  sub_1AFED0E94(0, &qword_1E9AFC1D0, (uint64_t (*)(void))sub_1AFED0D98, (uint64_t)&type metadata for WatchlistSortState.ManualCodingKeys, v3);
  uint64_t v16 = v15;
  uint64_t v34 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v33 - v17;
  sub_1AFED0E94(0, &qword_1E9AFC1E0, (uint64_t (*)(void))sub_1AFED0DEC, (uint64_t)&type metadata for WatchlistSortState.CodingKeys, v3);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v49 = v19;
  uint64_t v50 = v20;
  MEMORY[0x1F4188790](v19);
  unsigned int v21 = *v1;
  uint64_t v22 = a1[3];
  uint64_t v23 = a1;
  uint64_t v25 = (char *)&v33 - v24;
  __swift_project_boxed_opaque_existential_1(v23, v22);
  sub_1AFED0DEC();
  sub_1AFFCBE78();
  switch(v21 >> 5)
  {
    case 1u:
      char v55 = 2;
      sub_1AFED0CF0();
      uint64_t v28 = v37;
      uint64_t v26 = v49;
      sub_1AFFCBB88();
      char v54 = v21 & 1;
      sub_1AFED0E40();
      uint64_t v29 = v39;
      sub_1AFFCBC58();
      uint64_t v30 = v38;
      goto LABEL_7;
    case 2u:
      char v57 = 3;
      sub_1AFED0C9C();
      uint64_t v28 = v40;
      uint64_t v26 = v49;
      sub_1AFFCBB88();
      char v56 = v21 & 1;
      sub_1AFED0E40();
      uint64_t v29 = v42;
      sub_1AFFCBC58();
      uint64_t v30 = v41;
      goto LABEL_7;
    case 3u:
      char v59 = 4;
      sub_1AFED0C48();
      uint64_t v28 = v43;
      uint64_t v26 = v49;
      sub_1AFFCBB88();
      char v58 = v21 & 1;
      sub_1AFED0E40();
      uint64_t v29 = v45;
      sub_1AFFCBC58();
      uint64_t v30 = v44;
      goto LABEL_7;
    case 4u:
      char v61 = 5;
      sub_1AFED0BF4();
      uint64_t v28 = v46;
      uint64_t v26 = v49;
      sub_1AFFCBB88();
      char v60 = v21 & 1;
      sub_1AFED0E40();
      uint64_t v29 = v48;
      sub_1AFFCBC58();
      uint64_t v30 = v47;
LABEL_7:
      (*(void (**)(char *, uint64_t))(v30 + 8))(v28, v29);
      return (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v25, v26);
    case 5u:
      char v51 = 0;
      sub_1AFED0D98();
      uint64_t v32 = v49;
      sub_1AFFCBB88();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v18, v16);
      return (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v25, v32);
    default:
      char v53 = 1;
      sub_1AFED0D44();
      uint64_t v26 = v49;
      sub_1AFFCBB88();
      char v52 = v21 & 1;
      sub_1AFED0E40();
      uint64_t v27 = v36;
      sub_1AFFCBC58();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v14, v27);
      return (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v25, v26);
  }
}

uint64_t sub_1AFECFD54()
{
  unsigned int v1 = *v0;
  sub_1AFFCBDF8();
  switch(v1 >> 5)
  {
    case 5u:
      break;
    default:
      sub_1AFFCBE08();
      break;
  }
  sub_1AFFCBE08();
  return sub_1AFFCBE38();
}

uint64_t sub_1AFECFE0C@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  int64_t v73 = a2;
  char v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBBDC0];
  sub_1AFED0E94(0, &qword_1E9AFC1F8, (uint64_t (*)(void))sub_1AFED0BF4, (uint64_t)&type metadata for WatchlistSortState.NameCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v64 = v4;
  uint64_t v67 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v72 = (char *)&v54 - v5;
  sub_1AFED0E94(0, &qword_1E9AFC200, (uint64_t (*)(void))sub_1AFED0C48, (uint64_t)&type metadata for WatchlistSortState.SymbolCodingKeys, v3);
  uint64_t v65 = *(void *)(v6 - 8);
  uint64_t v66 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v68 = (char *)&v54 - v7;
  sub_1AFED0E94(0, &qword_1E9AFC208, (uint64_t (*)(void))sub_1AFED0C9C, (uint64_t)&type metadata for WatchlistSortState.MarketCapCodingKeys, v3);
  uint64_t v62 = *(void *)(v8 - 8);
  uint64_t v63 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v71 = (char *)&v54 - v9;
  sub_1AFED0E94(0, &qword_1E9AFC210, (uint64_t (*)(void))sub_1AFED0CF0, (uint64_t)&type metadata for WatchlistSortState.PercentChangeCodingKeys, v3);
  uint64_t v60 = *(void *)(v10 - 8);
  uint64_t v61 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v69 = (char *)&v54 - v11;
  sub_1AFED0E94(0, &qword_1E9AFC218, (uint64_t (*)(void))sub_1AFED0D44, (uint64_t)&type metadata for WatchlistSortState.PriceChangeCodingKeys, v3);
  uint64_t v58 = *(void *)(v12 - 8);
  uint64_t v59 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v70 = (char *)&v54 - v13;
  sub_1AFED0E94(0, &qword_1E9AFC220, (uint64_t (*)(void))sub_1AFED0D98, (uint64_t)&type metadata for WatchlistSortState.ManualCodingKeys, v3);
  uint64_t v15 = v14;
  uint64_t v57 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v54 - v16;
  sub_1AFED0E94(0, &qword_1E9AFC228, (uint64_t (*)(void))sub_1AFED0DEC, (uint64_t)&type metadata for WatchlistSortState.CodingKeys, v3);
  uint64_t v19 = v18;
  uint64_t v20 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v22 = (char *)&v54 - v21;
  uint64_t v23 = a1[3];
  uint64_t v74 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v23);
  sub_1AFED0DEC();
  uint64_t v24 = v75;
  sub_1AFFCBE68();
  if (!v24)
  {
    uint64_t v56 = 0;
    uint64_t v55 = v15;
    uint64_t v26 = v70;
    uint64_t v25 = v71;
    uint64_t v27 = v73;
    uint64_t v75 = v20;
    uint64_t v28 = sub_1AFFCBB68();
    if (*(void *)(v28 + 16) == 1)
    {
      switch(*(unsigned char *)(v28 + 32))
      {
        case 1:
          char v78 = 1;
          sub_1AFED0D44();
          uint64_t v35 = v56;
          sub_1AFFCBA88();
          if (v35) {
            goto LABEL_16;
          }
          sub_1AFED0EFC();
          uint64_t v36 = v59;
          sub_1AFFCBB58();
          (*(void (**)(char *, uint64_t))(v58 + 8))(v26, v36);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v75 + 8))(v22, v19);
          char v30 = v77;
          goto LABEL_21;
        case 2:
          char v80 = 2;
          sub_1AFED0CF0();
          uint64_t v37 = v69;
          uint64_t v38 = v56;
          sub_1AFFCBA88();
          if (v38) {
            goto LABEL_14;
          }
          sub_1AFED0EFC();
          uint64_t v39 = v61;
          sub_1AFFCBB58();
          uint64_t v40 = v75;
          (*(void (**)(char *, uint64_t))(v60 + 8))(v37, v39);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v40 + 8))(v22, v19);
          char v30 = v79 | 0x20;
          goto LABEL_21;
        case 3:
          char v82 = 3;
          sub_1AFED0C9C();
          uint64_t v41 = v25;
          uint64_t v42 = v56;
          sub_1AFFCBA88();
          if (v42) {
            goto LABEL_14;
          }
          sub_1AFED0EFC();
          uint64_t v43 = v63;
          sub_1AFFCBB58();
          uint64_t v44 = v75;
          (*(void (**)(char *, uint64_t))(v62 + 8))(v41, v43);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v44 + 8))(v22, v19);
          char v30 = v81 | 0x40;
          goto LABEL_21;
        case 4:
          char v84 = 4;
          sub_1AFED0C48();
          uint64_t v45 = v68;
          uint64_t v46 = v56;
          sub_1AFFCBA88();
          if (v46)
          {
LABEL_14:
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v75 + 8))(v22, v19);
            uint64_t v47 = (uint64_t)v74;
            return __swift_destroy_boxed_opaque_existential_1(v47);
          }
          sub_1AFED0EFC();
          uint64_t v50 = v66;
          sub_1AFFCBB58();
          uint64_t v51 = v75;
          (*(void (**)(char *, uint64_t))(v65 + 8))(v45, v50);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v51 + 8))(v22, v19);
          char v30 = v83 | 0x60;
          goto LABEL_21;
        case 5:
          char v86 = 5;
          sub_1AFED0BF4();
          uint64_t v48 = v56;
          sub_1AFFCBA88();
          if (v48) {
            goto LABEL_16;
          }
          sub_1AFED0EFC();
          uint64_t v52 = v64;
          sub_1AFFCBB58();
          uint64_t v53 = v75;
          (*(void (**)(void, uint64_t))(v67 + 8))(0, v52);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v53 + 8))(v22, v19);
          char v30 = v85 | 0x80;
          goto LABEL_21;
        default:
          char v76 = 0;
          sub_1AFED0D98();
          uint64_t v29 = v56;
          sub_1AFFCBA88();
          if (v29)
          {
LABEL_16:
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v75 + 8))(v22, v19);
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v57 + 8))(v17, v55);
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v75 + 8))(v22, v19);
            char v30 = -96;
LABEL_21:
            *uint64_t v27 = v30;
          }
          break;
      }
    }
    else
    {
      uint64_t v31 = sub_1AFFCB868();
      swift_allocError();
      uint64_t v32 = v22;
      uint64_t v34 = v33;
      sub_1AFDDB168();
      *uint64_t v34 = &type metadata for WatchlistSortState;
      sub_1AFFCBA98();
      sub_1AFFCB848();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v31 - 8) + 104))(v34, *MEMORY[0x1E4FBBA70], v31);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v75 + 8))(v32, v19);
    }
  }
  uint64_t v47 = (uint64_t)v74;
  return __swift_destroy_boxed_opaque_existential_1(v47);
}

uint64_t sub_1AFED09A0()
{
  unsigned int v1 = *v0;
  sub_1AFFCBDF8();
  switch(v1 >> 5)
  {
    case 5u:
      break;
    default:
      sub_1AFFCBE08();
      break;
  }
  sub_1AFFCBE08();
  return sub_1AFFCBE38();
}

BOOL sub_1AFED0A54(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned int v2 = *a2;
  switch(*a1 >> 5)
  {
    case 1:
      return (v2 & 0xE0) == 0x20;
    case 2:
      return (v2 & 0xE0) == 0x40;
    case 3:
      return (v2 & 0xE0) == 0x60;
    case 4:
      return (v2 & 0xE0) == 0x80;
    case 5:
      return v2 == 160;
    default:
      return v2 < 0x20;
  }
}

uint64_t sub_1AFED0AF8@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  return sub_1AFECFE0C(a1, a2);
}

uint64_t sub_1AFED0B10(void *a1)
{
  return sub_1AFECF550(a1);
}

uint64_t sub_1AFED0B28@<X0>(void *a1@<X8>)
{
  return sub_1AFED0B4C(&qword_1EB816750, &qword_1EB816758, a1);
}

uint64_t sub_1AFED0B4C@<X0>(void *a1@<X2>, void *a2@<X3>, void *a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  swift_beginAccess();
  *a3 = *a2;
  return sub_1AFFC8E38();
}

uint64_t sub_1AFED0BB4@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return sub_1AFECE914(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), a2);
}

uint64_t sub_1AFED0BC4@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_1AFECE354();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  return result;
}

unint64_t sub_1AFED0BF4()
{
  unint64_t result = qword_1E9AFC188;
  if (!qword_1E9AFC188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC188);
  }
  return result;
}

unint64_t sub_1AFED0C48()
{
  unint64_t result = qword_1E9AFC198;
  if (!qword_1E9AFC198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC198);
  }
  return result;
}

unint64_t sub_1AFED0C9C()
{
  unint64_t result = qword_1E9AFC1A8;
  if (!qword_1E9AFC1A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC1A8);
  }
  return result;
}

unint64_t sub_1AFED0CF0()
{
  unint64_t result = qword_1E9AFC1B8;
  if (!qword_1E9AFC1B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC1B8);
  }
  return result;
}

unint64_t sub_1AFED0D44()
{
  unint64_t result = qword_1E9AFC1C8;
  if (!qword_1E9AFC1C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC1C8);
  }
  return result;
}

unint64_t sub_1AFED0D98()
{
  unint64_t result = qword_1E9AFC1D8;
  if (!qword_1E9AFC1D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC1D8);
  }
  return result;
}

unint64_t sub_1AFED0DEC()
{
  unint64_t result = qword_1E9AFC1E8;
  if (!qword_1E9AFC1E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC1E8);
  }
  return result;
}

unint64_t sub_1AFED0E40()
{
  unint64_t result = qword_1E9AFC1F0;
  if (!qword_1E9AFC1F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC1F0);
  }
  return result;
}

void sub_1AFED0E94(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_1AFED0EFC()
{
  unint64_t result = qword_1E9AFC230;
  if (!qword_1E9AFC230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC230);
  }
  return result;
}

unint64_t sub_1AFED0F54()
{
  unint64_t result = qword_1E9AFC238;
  if (!qword_1E9AFC238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC238);
  }
  return result;
}

uint64_t sub_1AFED0FA8()
{
  return sub_1AFED1060(&qword_1E9AFC240, &qword_1E9AFC248);
}

unint64_t sub_1AFED0FDC()
{
  unint64_t result = qword_1E9AFC250;
  if (!qword_1E9AFC250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC250);
  }
  return result;
}

uint64_t sub_1AFED1030()
{
  return sub_1AFED1060(&qword_1E9AFC258, &qword_1E9AFC260);
}

uint64_t sub_1AFED1060(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1AFD40AA0(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for WatchlistSortState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0x7B) {
    goto LABEL_17;
  }
  if (a2 + 133 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 133) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 133;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 133;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 133;
    }
  }
LABEL_17:
  unsigned int v6 = ((*a1 >> 5) & 0xFFFFFF87 | (8 * ((*a1 >> 1) & 0xF))) ^ 0x7F;
  if (v6 >= 0x7A) {
    unsigned int v6 = -1;
  }
  return v6 + 1;
}

unsigned char *storeEnumTagSinglePayload for WatchlistSortState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 133 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 133) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x7B) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x7A)
  {
    unsigned int v6 = ((a2 - 123) >> 8) + 1;
    *uint64_t result = a2 - 123;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFED1228);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = 2 * (((-a2 >> 3) & 0xF) - 16 * a2);
        break;
    }
  }
  return result;
}

uint64_t sub_1AFED1250(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 <= 0x9F) {
    return v1 >> 5;
  }
  else {
    return (v1 & 1) + 5;
  }
}

unsigned char *sub_1AFED126C(unsigned char *result)
{
  *result &= 0x1Fu;
  return result;
}

unsigned char *sub_1AFED127C(unsigned char *result, unsigned int a2)
{
  if (a2 < 5) {
    *uint64_t result = *result & 1 | (32 * a2);
  }
  else {
    *uint64_t result = a2 & 1 ^ 0xA1;
  }
  return result;
}

ValueMetadata *type metadata accessor for WatchlistSortState()
{
  return &type metadata for WatchlistSortState;
}

unsigned char *storeEnumTagSinglePayload for WatchlistSortState.Order(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFED1388);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WatchlistSortState.Order()
{
  return &type metadata for WatchlistSortState.Order;
}

unsigned char *storeEnumTagSinglePayload for WatchlistSortState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFED148CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WatchlistSortState.CodingKeys()
{
  return &type metadata for WatchlistSortState.CodingKeys;
}

ValueMetadata *type metadata accessor for WatchlistSortState.ManualCodingKeys()
{
  return &type metadata for WatchlistSortState.ManualCodingKeys;
}

ValueMetadata *type metadata accessor for WatchlistSortState.PriceChangeCodingKeys()
{
  return &type metadata for WatchlistSortState.PriceChangeCodingKeys;
}

ValueMetadata *type metadata accessor for WatchlistSortState.PercentChangeCodingKeys()
{
  return &type metadata for WatchlistSortState.PercentChangeCodingKeys;
}

ValueMetadata *type metadata accessor for WatchlistSortState.MarketCapCodingKeys()
{
  return &type metadata for WatchlistSortState.MarketCapCodingKeys;
}

ValueMetadata *type metadata accessor for WatchlistSortState.SymbolCodingKeys()
{
  return &type metadata for WatchlistSortState.SymbolCodingKeys;
}

unsigned char *_s10StocksCore18WatchlistSortStateO21PriceChangeCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1AFED15B4);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for WatchlistSortState.NameCodingKeys()
{
  return &type metadata for WatchlistSortState.NameCodingKeys;
}

unint64_t sub_1AFED15F0()
{
  unint64_t result = qword_1E9AFC268;
  if (!qword_1E9AFC268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC268);
  }
  return result;
}

unint64_t sub_1AFED1648()
{
  unint64_t result = qword_1E9AFC270;
  if (!qword_1E9AFC270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC270);
  }
  return result;
}

unint64_t sub_1AFED16A0()
{
  unint64_t result = qword_1E9AFC278;
  if (!qword_1E9AFC278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC278);
  }
  return result;
}

unint64_t sub_1AFED16F8()
{
  unint64_t result = qword_1E9AFC280;
  if (!qword_1E9AFC280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC280);
  }
  return result;
}

unint64_t sub_1AFED1750()
{
  unint64_t result = qword_1E9AFC288;
  if (!qword_1E9AFC288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC288);
  }
  return result;
}

unint64_t sub_1AFED17A8()
{
  unint64_t result = qword_1E9AFC290;
  if (!qword_1E9AFC290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC290);
  }
  return result;
}

unint64_t sub_1AFED1800()
{
  unint64_t result = qword_1E9AFC298;
  if (!qword_1E9AFC298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC298);
  }
  return result;
}

unint64_t sub_1AFED1858()
{
  unint64_t result = qword_1E9AFC2A0;
  if (!qword_1E9AFC2A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC2A0);
  }
  return result;
}

unint64_t sub_1AFED18B0()
{
  unint64_t result = qword_1E9AFC2A8;
  if (!qword_1E9AFC2A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC2A8);
  }
  return result;
}

unint64_t sub_1AFED1908()
{
  unint64_t result = qword_1E9AFC2B0;
  if (!qword_1E9AFC2B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC2B0);
  }
  return result;
}

unint64_t sub_1AFED1960()
{
  unint64_t result = qword_1E9AFC2B8;
  if (!qword_1E9AFC2B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC2B8);
  }
  return result;
}

unint64_t sub_1AFED19B8()
{
  unint64_t result = qword_1E9AFC2C0;
  if (!qword_1E9AFC2C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC2C0);
  }
  return result;
}

unint64_t sub_1AFED1A10()
{
  unint64_t result = qword_1E9AFC2C8;
  if (!qword_1E9AFC2C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC2C8);
  }
  return result;
}

unint64_t sub_1AFED1A68()
{
  unint64_t result = qword_1E9AFC2D0;
  if (!qword_1E9AFC2D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC2D0);
  }
  return result;
}

unint64_t sub_1AFED1AC0()
{
  unint64_t result = qword_1E9AFC2D8;
  if (!qword_1E9AFC2D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC2D8);
  }
  return result;
}

unint64_t sub_1AFED1B18()
{
  unint64_t result = qword_1E9AFC2E0;
  if (!qword_1E9AFC2E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC2E0);
  }
  return result;
}

unint64_t sub_1AFED1B70()
{
  unint64_t result = qword_1E9AFC2E8;
  if (!qword_1E9AFC2E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC2E8);
  }
  return result;
}

unint64_t sub_1AFED1BC8()
{
  unint64_t result = qword_1E9AFC2F0;
  if (!qword_1E9AFC2F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC2F0);
  }
  return result;
}

unint64_t sub_1AFED1C20()
{
  unint64_t result = qword_1E9AFC2F8;
  if (!qword_1E9AFC2F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC2F8);
  }
  return result;
}

unint64_t sub_1AFED1C78()
{
  unint64_t result = qword_1E9AFC300;
  if (!qword_1E9AFC300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC300);
  }
  return result;
}

uint64_t sub_1AFED1CCC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C61756E616DLL && a2 == 0xE600000000000000;
  if (v2 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6168436563697270 && a2 == 0xEB0000000065676ELL || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x43746E6563726570 && a2 == 0xED000065676E6168 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x614374656B72616DLL && a2 == 0xE900000000000070 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6C6F626D7973 && a2 == 0xE600000000000000 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_1AFFCBCE8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

unint64_t sub_1AFED1F78()
{
  unint64_t result = qword_1E9AFC308;
  if (!qword_1E9AFC308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC308);
  }
  return result;
}

uint64_t sub_1AFED1FD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t type metadata accessor for StockPriceDataManagerObserverProxy()
{
  return self;
}

uint64_t sub_1AFED2008(void *a1, long long *a2)
{
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  char v6 = __swift_project_boxed_opaque_existential_1(a1, v4);

  return sub_1AFED205C((uint64_t)v6, a2, v2, v4, v5);
}

uint64_t sub_1AFED205C(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v15[3] = a4;
  v15[4] = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v15);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16))(boxed_opaque_existential_1, a1, a4);
  long long v13 = *a2;
  if (MEMORY[0x1B3E8F200](a3 + 16))
  {
    uint64_t v10 = *(void *)(a3 + 24);
    uint64_t ObjectType = swift_getObjectType();
    long long v14 = v13;
    (*(void (**)(uint64_t *, long long *, uint64_t, uint64_t))(v10 + 8))(v15, &v14, ObjectType, v10);
    swift_unknownObjectRelease();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
}

void *__swift_memcpy8_8(void *result, void *a2)
{
  *unint64_t result = *a2;
  return result;
}

ValueMetadata *type metadata accessor for YahooQuoteDetailResponse()
{
  return &type metadata for YahooQuoteDetailResponse;
}

unint64_t sub_1AFED2154(char a1)
{
  unint64_t result = 0x6F626D79735F6469;
  switch(a1)
  {
    case 1:
      unint64_t result = 1701667182;
      break;
    case 2:
      unint64_t result = 0x65676E6168637865;
      break;
    case 3:
      unint64_t result = 0x6563697270;
      break;
    case 4:
      unint64_t result = 0x65676E616863;
      break;
    case 5:
      unint64_t result = 1852141679;
      break;
    case 6:
      unint64_t result = 0x776F6C5F796164;
      break;
    case 7:
      unint64_t result = 0x686769685F796164;
      break;
    case 8:
      unint64_t result = 0x776F6C5F72616579;
      break;
    case 9:
      unint64_t result = 0x6769685F72616579;
      break;
    case 10:
      unint64_t result = 0x646E656469766964;
      break;
    case 11:
      unint64_t result = 0x635F74656B72616DLL;
      break;
    case 12:
      unint64_t result = 0x656D756C6F76;
      break;
    case 13:
      unint64_t result = 0x765F6D335F677661;
      break;
    case 14:
      unint64_t result = 0x6F697461725F6570;
      break;
    case 15:
      unint64_t result = 0xD000000000000010;
      break;
    case 16:
      unint64_t result = 7565413;
      break;
    case 17:
      unint64_t result = 0x79636E6572727563;
      break;
    case 18:
      unint64_t result = 0x5F736C6961746564;
      break;
    case 19:
      unint64_t result = 0x616E5F74726F6873;
      break;
    case 20:
      unint64_t result = 0x7079745F61746164;
      break;
    case 21:
      unint64_t result = 0xD000000000000012;
      break;
    case 22:
      unint64_t result = 0xD000000000000018;
      break;
    case 23:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1AFED2438(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_1AFED2154(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1AFED2154(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1AFFCBCE8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1AFED24C4()
{
  char v1 = *v0;
  sub_1AFFCBDF8();
  sub_1AFED2154(v1);
  sub_1AFFCAF68();
  swift_bridgeObjectRelease();
  return sub_1AFFCBE38();
}

uint64_t sub_1AFED2528()
{
  sub_1AFED2154(*v0);
  sub_1AFFCAF68();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFED257C()
{
  char v1 = *v0;
  sub_1AFFCBDF8();
  sub_1AFED2154(v1);
  sub_1AFFCAF68();
  swift_bridgeObjectRelease();
  return sub_1AFFCBE38();
}

uint64_t sub_1AFED25DC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFED34B4();
  *a1 = result;
  return result;
}

unint64_t sub_1AFED260C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1AFED2154(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1AFED2638()
{
  return sub_1AFED2154(*v0);
}

uint64_t sub_1AFED2640@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFED34B4();
  *a1 = result;
  return result;
}

void sub_1AFED2668(unsigned char *a1@<X8>)
{
  *a1 = 24;
}

uint64_t sub_1AFED2674(uint64_t a1)
{
  unint64_t v2 = sub_1AFED82E4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFED26B0(uint64_t a1)
{
  unint64_t v2 = sub_1AFED82E4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFED26EC()
{
  unint64_t v0 = sub_1AFFCBA78();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_1AFED273C(char a1)
{
  if (!a1) {
    return 7823730;
  }
  if (a1 == 1) {
    return 0x6E69727453776172;
  }
  return 7630182;
}

void *sub_1AFED2788@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1AFED3508(a1, v5);
  if (!v2) {
    return memcpy(a2, v5, 0x2D0uLL);
  }
  return result;
}

uint64_t sub_1AFED27DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1C8];

  return MEMORY[0x1F4185BB0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1AFED2850(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x1E4FBB1B0];

  return MEMORY[0x1F4183DE0](a1, a2, WitnessTable, v5);
}

uint64_t sub_1AFED28BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1B0];

  return MEMORY[0x1F4183DF0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1AFED292C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1B0];

  return MEMORY[0x1F4183DE8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1AFED299C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFED26EC();
  *a1 = result;
  return result;
}

uint64_t sub_1AFED29CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1AFED273C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1AFED29F8()
{
  return sub_1AFED273C(*v0);
}

uint64_t sub_1AFED2A00@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFED2738();
  *a1 = result;
  return result;
}

uint64_t sub_1AFED2A28@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AFED4B50();
  *a1 = result;
  return result;
}

uint64_t sub_1AFED2A54(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1AFED2AA8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t sub_1AFED2AFC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v37 = a4;
  uint64_t v7 = sub_1AFFCB658();
  uint64_t v35 = *(void *)(v7 - 8);
  uint64_t v36 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v41 = (char *)&v33 - v8;
  uint64_t v38 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v34 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for YahooQuoteDetailResponse.Value.CodingKeys();
  swift_getWitnessTable();
  uint64_t v42 = sub_1AFFCBB78();
  uint64_t v40 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v12 = (char *)&v33 - v11;
  uint64_t v39 = a3;
  uint64_t v13 = type metadata accessor for YahooQuoteDetailResponse.Value();
  uint64_t v33 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v33 - v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v43 = v12;
  uint64_t v16 = v44;
  sub_1AFFCBE68();
  if (v16) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v17 = v41;
  char v46 = 0;
  uint64_t v18 = sub_1AFFCBB18();
  uint64_t v44 = v13;
  uint64_t v20 = *(int *)(v13 + 36);
  uint64_t v21 = v15;
  uint64_t v22 = (uint64_t *)&v15[v20];
  *uint64_t v22 = v18;
  v22[1] = v23;
  char v45 = 2;
  sub_1AFFC8E38();
  uint64_t v24 = sub_1AFFCBB18();
  uint64_t v26 = (uint64_t *)&v15[*(int *)(v44 + 40)];
  *uint64_t v26 = v24;
  v26[1] = v25;
  uint64_t v27 = a2;
  sub_1AFFCBCB8();
  uint64_t v28 = v38;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v17, 1, v27) == 1)
  {
    (*(void (**)(char *, uint64_t))(v35 + 8))(v17, v36);
    type metadata accessor for YahooQuoteDetailResponse.Value.ValueError();
    swift_getWitnessTable();
    swift_allocError();
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v43, v42);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v40 + 8))(v43, v42);
    uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v28 + 32);
    char v30 = v34;
    v29(v34, v17, v27);
    v29(v21, v30, v27);
    uint64_t v31 = v33;
    uint64_t v32 = v44;
    (*(void (**)(uint64_t, char *, uint64_t))(v33 + 16))(v37, v21, v44);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v21, v32);
  }
}

uint64_t sub_1AFED3024@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1AFED2AFC(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t sub_1AFED3044()
{
  return sub_1AFDF5A00();
}

uint64_t sub_1AFED3068()
{
  return sub_1AFFCAF68();
}

uint64_t sub_1AFED308C()
{
  return sub_1AFDF5A68();
}

uint64_t sub_1AFED30B0@<X0>(BOOL *a1@<X8>)
{
  return sub_1AFDF5AC0(a1);
}

void sub_1AFED30BC(uint64_t a1@<X8>)
{
  *(_WORD *)(a1 + 14) = -4864;
}

uint64_t sub_1AFED30E4()
{
  return 0x65735F65746F7571;
}

uint64_t sub_1AFED3108@<X0>(BOOL *a1@<X8>)
{
  return sub_1AFDF5B38(a1);
}

uint64_t sub_1AFED3114(uint64_t a1)
{
  unint64_t v2 = sub_1AFED54A8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFED3150(uint64_t a1)
{
  unint64_t v2 = sub_1AFED54A8();

  return MEMORY[0x1F41862B0](a1, v2);
}

void *sub_1AFED318C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1AFED4B58(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1AFED31B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x7365746F7571 && a2 == 0xE600000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1AFFCBCE8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1AFED3248(uint64_t a1)
{
  unint64_t v2 = sub_1AFED57C4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFED3284(uint64_t a1)
{
  unint64_t v2 = sub_1AFED57C4();

  return MEMORY[0x1F41862B0](a1, v2);
}

void *sub_1AFED32C0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1AFED4D00(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1AFED32EC()
{
  return sub_1AFDF5A00();
}

uint64_t sub_1AFED3300()
{
  return sub_1AFFCAF68();
}

uint64_t sub_1AFED3314()
{
  return sub_1AFDF5A68();
}

uint64_t sub_1AFED3328@<X0>(BOOL *a1@<X8>)
{
  return sub_1AFDF5AC0(a1);
}

void sub_1AFED3334(void *a1@<X8>)
{
  *a1 = 0x65746F7571;
  a1[1] = 0xE500000000000000;
}

uint64_t sub_1AFED334C()
{
  return 0x65746F7571;
}

uint64_t sub_1AFED3360@<X0>(BOOL *a1@<X8>)
{
  return sub_1AFDF5B38(a1);
}

uint64_t sub_1AFED336C(uint64_t a1)
{
  unint64_t v2 = sub_1AFED5994();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFED33A8(uint64_t a1)
{
  unint64_t v2 = sub_1AFED5994();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFED33E4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1AFED4EA8(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1AFED3410(uint64_t a1)
{
  unint64_t v2 = sub_1AFED52D4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFED344C(uint64_t a1)
{
  unint64_t v2 = sub_1AFED52D4();

  return MEMORY[0x1F41862B0](a1, v2);
}

void *sub_1AFED3488@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1AFED512C(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1AFED34B4()
{
  unint64_t v0 = sub_1AFFCBD28();
  swift_bridgeObjectRelease();
  if (v0 >= 0x18) {
    return 24;
  }
  else {
    return v0;
  }
}

void *sub_1AFED3508@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  v205 = a2;
  sub_1AFED8284(0, &qword_1EB81B448, (void (*)(void))sub_1AFED82E4);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v115 - v7;
  uint64_t v9 = a1[3];
  v297 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_1AFED82E4();
  sub_1AFFCBE68();
  if (v2) {
    return (void *)__swift_destroy_boxed_opaque_existential_1((uint64_t)v297);
  }
  uint64_t v10 = v6;
  LOBYTE(v207) = 0;
  uint64_t v12 = sub_1AFFCBB18();
  uint64_t v14 = v13;
  LOBYTE(v207) = 1;
  sub_1AFFC8E38();
  uint64_t v16 = v5;
  uint64_t v15 = sub_1AFFCBAA8();
  uint64_t v18 = v17;
  uint64_t v203 = v15;
  uint64_t v204 = v12;
  LOBYTE(v207) = 2;
  sub_1AFFC8E38();
  uint64_t v19 = sub_1AFFCBAA8();
  uint64_t v21 = v20;
  uint64_t v201 = v19;
  LOBYTE(v207) = 17;
  sub_1AFFC8E38();
  uint64_t v199 = sub_1AFFCBAA8();
  LOBYTE(v207) = 18;
  uint64_t v202 = v22;
  sub_1AFFC8E38();
  uint64_t v23 = sub_1AFFCBAA8();
  uint64_t v200 = v24;
  uint64_t v196 = v23;
  LOBYTE(v207) = 19;
  sub_1AFFC8E38();
  uint64_t v197 = 0;
  uint64_t v194 = sub_1AFFCBAA8();
  LOBYTE(v207) = 20;
  uint64_t v198 = v25;
  sub_1AFFC8E38();
  uint64_t v190 = sub_1AFFCBAA8();
  LOBYTE(v207) = 21;
  uint64_t v193 = v26;
  sub_1AFFC8E38();
  uint64_t v125 = sub_1AFFCBAA8();
  uint64_t v126 = v21;
  uint64_t v28 = v27;
  sub_1AFED7004(0, &qword_1EB81B3A8);
  LOBYTE(v206[0]) = 3;
  uint64_t v30 = v29;
  uint64_t v31 = sub_1AFED8338(&qword_1EB81B458, &qword_1EB81B3A8);
  uint64_t v124 = v28;
  sub_1AFFC8E38();
  uint64_t v197 = v16;
  uint64_t v195 = v31;
  sub_1AFFCBAF8();
  uint64_t v189 = v30;
  if (v209)
  {
    uint64_t v32 = v207;
    uint64_t v33 = v208;
    uint64_t v34 = v210;
    uint64_t v35 = v211;
  }
  else
  {
    uint64_t v32 = 0;
    uint64_t v33 = 0;
    uint64_t v34 = 0;
    uint64_t v35 = 0;
  }
  LOBYTE(v206[0]) = 4;
  uint64_t v188 = v32;
  uint64_t v120 = v33;
  uint64_t v121 = v35;
  uint64_t v122 = v34;
  uint64_t v123 = v209;
  sub_1AFED8388(v32, v33, v209);
  sub_1AFFCBAF8();
  if (v209) {
    uint64_t v36 = v207;
  }
  else {
    uint64_t v36 = 0;
  }
  if (v209) {
    uint64_t v37 = v208;
  }
  else {
    uint64_t v37 = 0;
  }
  if (v209) {
    uint64_t v38 = v209;
  }
  else {
    uint64_t v38 = 0;
  }
  if (v209) {
    uint64_t v39 = v210;
  }
  else {
    uint64_t v39 = 0;
  }
  if (v209) {
    uint64_t v40 = v211;
  }
  else {
    uint64_t v40 = 0;
  }
  LOBYTE(v206[0]) = 5;
  uint64_t v187 = v36;
  uint64_t v186 = v37;
  uint64_t v185 = v38;
  uint64_t v184 = v39;
  uint64_t v183 = v40;
  sub_1AFED8388(v36, v37, v38);
  sub_1AFFCBAF8();
  if (v209) {
    uint64_t v41 = v207;
  }
  else {
    uint64_t v41 = 0;
  }
  if (v209) {
    uint64_t v42 = v208;
  }
  else {
    uint64_t v42 = 0;
  }
  if (v209) {
    uint64_t v43 = v209;
  }
  else {
    uint64_t v43 = 0;
  }
  if (v209) {
    uint64_t v44 = v210;
  }
  else {
    uint64_t v44 = 0;
  }
  if (v209) {
    uint64_t v45 = v211;
  }
  else {
    uint64_t v45 = 0;
  }
  LOBYTE(v206[0]) = 6;
  uint64_t v182 = v41;
  uint64_t v181 = v42;
  uint64_t v180 = v43;
  uint64_t v178 = v45;
  uint64_t v179 = v44;
  sub_1AFED8388(v41, v42, v43);
  sub_1AFFCBAF8();
  if (v209) {
    uint64_t v46 = v207;
  }
  else {
    uint64_t v46 = 0;
  }
  if (v209) {
    uint64_t v47 = v208;
  }
  else {
    uint64_t v47 = 0;
  }
  if (v209) {
    uint64_t v48 = v209;
  }
  else {
    uint64_t v48 = 0;
  }
  if (v209) {
    uint64_t v49 = v210;
  }
  else {
    uint64_t v49 = 0;
  }
  if (v209) {
    uint64_t v50 = v211;
  }
  else {
    uint64_t v50 = 0;
  }
  LOBYTE(v206[0]) = 7;
  uint64_t v176 = v47;
  uint64_t v177 = v46;
  uint64_t v174 = v49;
  uint64_t v175 = v48;
  uint64_t v173 = v50;
  sub_1AFED8388(v46, v47, v48);
  sub_1AFFCBAF8();
  if (v209) {
    uint64_t v51 = v207;
  }
  else {
    uint64_t v51 = 0;
  }
  if (v209) {
    uint64_t v52 = v208;
  }
  else {
    uint64_t v52 = 0;
  }
  if (v209) {
    uint64_t v53 = v209;
  }
  else {
    uint64_t v53 = 0;
  }
  if (v209) {
    uint64_t v54 = v210;
  }
  else {
    uint64_t v54 = 0;
  }
  if (v209) {
    uint64_t v55 = v211;
  }
  else {
    uint64_t v55 = 0;
  }
  LOBYTE(v206[0]) = 8;
  uint64_t v171 = v52;
  uint64_t v172 = v51;
  uint64_t v169 = v54;
  uint64_t v170 = v53;
  uint64_t v168 = v55;
  sub_1AFED8388(v51, v52, v53);
  sub_1AFFCBAF8();
  if (v209) {
    uint64_t v56 = v207;
  }
  else {
    uint64_t v56 = 0;
  }
  if (v209) {
    uint64_t v57 = v208;
  }
  else {
    uint64_t v57 = 0;
  }
  if (v209) {
    uint64_t v58 = v209;
  }
  else {
    uint64_t v58 = 0;
  }
  if (v209) {
    uint64_t v59 = v210;
  }
  else {
    uint64_t v59 = 0;
  }
  if (v209) {
    uint64_t v60 = v211;
  }
  else {
    uint64_t v60 = 0;
  }
  LOBYTE(v206[0]) = 9;
  uint64_t v166 = v57;
  uint64_t v167 = v56;
  uint64_t v164 = v59;
  uint64_t v165 = v58;
  uint64_t v163 = v60;
  sub_1AFED8388(v56, v57, v58);
  sub_1AFFCBAF8();
  if (v209) {
    uint64_t v61 = v207;
  }
  else {
    uint64_t v61 = 0;
  }
  if (v209) {
    uint64_t v62 = v208;
  }
  else {
    uint64_t v62 = 0;
  }
  if (v209) {
    uint64_t v63 = v209;
  }
  else {
    uint64_t v63 = 0;
  }
  if (v209) {
    uint64_t v64 = v210;
  }
  else {
    uint64_t v64 = 0;
  }
  if (v209) {
    uint64_t v65 = v211;
  }
  else {
    uint64_t v65 = 0;
  }
  LOBYTE(v206[0]) = 10;
  uint64_t v161 = v62;
  uint64_t v162 = v61;
  uint64_t v159 = v64;
  uint64_t v160 = v63;
  uint64_t v158 = v65;
  sub_1AFED8388(v61, v62, v63);
  sub_1AFFCBAF8();
  if (v209) {
    uint64_t v66 = v207;
  }
  else {
    uint64_t v66 = 0;
  }
  if (v209) {
    uint64_t v67 = v208;
  }
  else {
    uint64_t v67 = 0;
  }
  if (v209) {
    uint64_t v68 = v209;
  }
  else {
    uint64_t v68 = 0;
  }
  if (v209) {
    uint64_t v69 = v210;
  }
  else {
    uint64_t v69 = 0;
  }
  if (v209) {
    uint64_t v70 = v211;
  }
  else {
    uint64_t v70 = 0;
  }
  LOBYTE(v206[0]) = 11;
  uint64_t v156 = v67;
  uint64_t v157 = v66;
  uint64_t v154 = v69;
  uint64_t v155 = v68;
  uint64_t v153 = v70;
  sub_1AFED8388(v66, v67, v68);
  sub_1AFFCBAF8();
  uint64_t v71 = v207;
  if (!v209) {
    uint64_t v71 = 0;
  }
  uint64_t v192 = v71;
  if (v209) {
    uint64_t v72 = v208;
  }
  else {
    uint64_t v72 = 0;
  }
  if (v209) {
    uint64_t v73 = v209;
  }
  else {
    uint64_t v73 = 0;
  }
  uint64_t v191 = v73;
  if (v209) {
    uint64_t v74 = v210;
  }
  else {
    uint64_t v74 = 0;
  }
  if (v209) {
    uint64_t v75 = v211;
  }
  else {
    uint64_t v75 = 0;
  }
  v150 = 0;
  uint64_t v127 = v72;
  sub_1AFED7004(0, qword_1EB81B3B0);
  LOBYTE(v206[0]) = 12;
  uint64_t v151 = v75;
  uint64_t v152 = v74;
  sub_1AFED8388(v192, v72, v191);
  sub_1AFED8338(qword_1EB81B460, qword_1EB81B3B0);
  char v76 = v150;
  sub_1AFFCBAF8();
  uint64_t v117 = v10;
  if (v76)
  {

    uint64_t v77 = 0;
    uint64_t v78 = 0;
    uint64_t v79 = 0;
    uint64_t v80 = 0;
    uint64_t v81 = 0;
  }
  else
  {
    if (v209) {
      uint64_t v77 = v207;
    }
    else {
      uint64_t v77 = 0;
    }
    if (v209) {
      uint64_t v78 = v208;
    }
    else {
      uint64_t v78 = 0;
    }
    if (v209) {
      uint64_t v79 = v209;
    }
    else {
      uint64_t v79 = 0;
    }
    if (v209) {
      uint64_t v80 = v210;
    }
    else {
      uint64_t v80 = 0;
    }
    if (v209) {
      uint64_t v81 = v211;
    }
    else {
      uint64_t v81 = 0;
    }
  }
  LOBYTE(v206[0]) = 13;
  uint64_t v149 = v78;
  v150 = (void *)v77;
  uint64_t v147 = v80;
  uint64_t v148 = v79;
  uint64_t v146 = v81;
  sub_1AFED8388(v77, v78, v79);
  sub_1AFFCBAF8();
  if (v209) {
    uint64_t v82 = v207;
  }
  else {
    uint64_t v82 = 0;
  }
  if (v209) {
    uint64_t v83 = v208;
  }
  else {
    uint64_t v83 = 0;
  }
  if (v209) {
    uint64_t v84 = v209;
  }
  else {
    uint64_t v84 = 0;
  }
  if (v209) {
    uint64_t v85 = v210;
  }
  else {
    uint64_t v85 = 0;
  }
  if (v209) {
    uint64_t v86 = v211;
  }
  else {
    uint64_t v86 = 0;
  }
  LOBYTE(v206[0]) = 14;
  uint64_t v144 = v83;
  uint64_t v145 = v82;
  uint64_t v142 = v85;
  uint64_t v143 = v84;
  uint64_t v141 = v86;
  sub_1AFED8388(v82, v83, v84);
  sub_1AFFCBAF8();
  if (v209) {
    uint64_t v87 = v207;
  }
  else {
    uint64_t v87 = 0;
  }
  if (v209) {
    uint64_t v88 = v208;
  }
  else {
    uint64_t v88 = 0;
  }
  if (v209) {
    uint64_t v89 = v209;
  }
  else {
    uint64_t v89 = 0;
  }
  if (v209) {
    uint64_t v90 = v210;
  }
  else {
    uint64_t v90 = 0;
  }
  if (v209) {
    uint64_t v91 = v211;
  }
  else {
    uint64_t v91 = 0;
  }
  LOBYTE(v206[0]) = 15;
  uint64_t v139 = v88;
  uint64_t v140 = v87;
  uint64_t v137 = v90;
  uint64_t v138 = v89;
  uint64_t v136 = v91;
  sub_1AFED8388(v87, v88, v89);
  sub_1AFFCBAF8();
  if (v209) {
    uint64_t v92 = v207;
  }
  else {
    uint64_t v92 = 0;
  }
  if (v209) {
    uint64_t v93 = v208;
  }
  else {
    uint64_t v93 = 0;
  }
  if (v209) {
    uint64_t v94 = v209;
  }
  else {
    uint64_t v94 = 0;
  }
  if (v209) {
    uint64_t v95 = v210;
  }
  else {
    uint64_t v95 = 0;
  }
  if (v209) {
    uint64_t v96 = v211;
  }
  else {
    uint64_t v96 = 0;
  }
  LOBYTE(v206[0]) = 16;
  uint64_t v134 = v93;
  uint64_t v135 = v92;
  uint64_t v132 = v95;
  uint64_t v133 = v94;
  uint64_t v131 = v96;
  sub_1AFED8388(v92, v93, v94);
  sub_1AFFCBAF8();
  if (v209) {
    uint64_t v97 = v207;
  }
  else {
    uint64_t v97 = 0;
  }
  if (v209) {
    uint64_t v98 = v208;
  }
  else {
    uint64_t v98 = 0;
  }
  if (v209) {
    uint64_t v99 = v209;
  }
  else {
    uint64_t v99 = 0;
  }
  if (v209) {
    uint64_t v100 = v210;
  }
  else {
    uint64_t v100 = 0;
  }
  if (v209) {
    uint64_t v101 = v211;
  }
  else {
    uint64_t v101 = 0;
  }
  LOBYTE(v207) = 22;
  uint64_t v195 = v97;
  uint64_t v189 = v98;
  uint64_t v129 = v100;
  uint64_t v130 = v99;
  uint64_t v128 = v101;
  sub_1AFED8388(v97, v98, v99);
  uint64_t v102 = sub_1AFFCBAA8();
  if (v103) {
    uint64_t v104 = v102;
  }
  else {
    uint64_t v104 = 0;
  }
  uint64_t v118 = v104;
  LOBYTE(v207) = 23;
  uint64_t v119 = v103;
  sub_1AFFC8E38();
  uint64_t v105 = v197;
  uint64_t v116 = sub_1AFFCBAA8();
  uint64_t v107 = v106;
  uint64_t v108 = v127;
  (*(void (**)(char *, uint64_t))(v117 + 8))(v8, v105);
  uint64_t v109 = v116;
  if (!v107) {
    uint64_t v109 = 0;
  }
  uint64_t v117 = v109;
  uint64_t v197 = v107;
  v206[0] = v204;
  v206[1] = v14;
  v206[2] = v203;
  v206[3] = v18;
  v206[4] = v201;
  v206[5] = v126;
  v206[6] = v188;
  v206[7] = v120;
  v206[8] = v123;
  v206[9] = v122;
  v206[10] = v121;
  v206[11] = v187;
  v206[12] = v186;
  v206[13] = v185;
  v206[14] = v184;
  v206[15] = v183;
  v206[16] = v182;
  v206[17] = v181;
  v206[18] = v180;
  v206[19] = v179;
  v206[20] = v178;
  v206[21] = v177;
  v206[22] = v176;
  v206[23] = v175;
  v206[24] = v174;
  v206[25] = v173;
  v206[26] = v172;
  v206[27] = v171;
  v206[28] = v170;
  v206[29] = v169;
  v206[30] = v168;
  v206[31] = v167;
  v206[32] = v166;
  v206[33] = v165;
  v206[34] = v164;
  v206[35] = v163;
  v206[36] = v162;
  v206[37] = v161;
  v206[38] = v160;
  v206[39] = v159;
  v206[40] = v158;
  v206[41] = v157;
  v206[42] = v156;
  v206[43] = v155;
  v206[44] = v154;
  v206[45] = v153;
  v206[46] = v192;
  v206[47] = v108;
  v206[48] = v191;
  v206[49] = v152;
  v206[50] = v151;
  v206[51] = v150;
  v206[52] = v149;
  v206[53] = v148;
  v206[54] = v147;
  v206[55] = v146;
  v206[56] = v145;
  v206[57] = v144;
  v206[58] = v143;
  v206[59] = v142;
  v206[60] = v141;
  v206[61] = v140;
  v206[62] = v139;
  v206[63] = v138;
  v206[64] = v137;
  v206[65] = v136;
  v206[66] = v135;
  v206[67] = v134;
  v206[68] = v133;
  v206[69] = v132;
  v206[70] = v131;
  v206[71] = v195;
  v206[72] = v189;
  v206[73] = v130;
  v206[74] = v129;
  v206[75] = v128;
  v206[76] = v199;
  v206[77] = v202;
  v206[78] = v196;
  v206[79] = v200;
  v206[80] = v194;
  v206[81] = v198;
  v206[82] = v190;
  v206[83] = v193;
  v206[84] = v125;
  v206[85] = v124;
  v206[86] = v118;
  v206[87] = v119;
  v206[88] = v109;
  v206[89] = v107;
  sub_1AFED83CC(v206);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1AFED8724(v195, v189, v130);
  sub_1AFED8724(v135, v134, v133);
  sub_1AFED8724(v140, v139, v138);
  sub_1AFED8724(v145, v144, v143);
  sub_1AFED8724((uint64_t)v150, v149, v148);
  sub_1AFED8724(v192, v127, v191);
  sub_1AFED8724(v157, v156, v155);
  sub_1AFED8724(v162, v161, v160);
  sub_1AFED8724(v167, v166, v165);
  sub_1AFED8724(v172, v171, v170);
  sub_1AFED8724(v177, v176, v175);
  sub_1AFED8724(v182, v181, v180);
  sub_1AFED8724(v187, v186, v185);
  uint64_t v111 = v120;
  uint64_t v110 = v121;
  uint64_t v112 = v122;
  uint64_t v113 = v123;
  sub_1AFED8724(v188, v120, v123);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v114 = v126;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v297);
  uint64_t v207 = v204;
  uint64_t v208 = v14;
  uint64_t v209 = v203;
  uint64_t v210 = v18;
  uint64_t v211 = v201;
  uint64_t v212 = v114;
  uint64_t v213 = v188;
  uint64_t v214 = v111;
  uint64_t v215 = v113;
  uint64_t v216 = v112;
  uint64_t v217 = v110;
  uint64_t v218 = v187;
  uint64_t v219 = v186;
  uint64_t v220 = v185;
  uint64_t v221 = v184;
  uint64_t v222 = v183;
  uint64_t v223 = v182;
  uint64_t v224 = v181;
  uint64_t v225 = v180;
  uint64_t v226 = v179;
  uint64_t v227 = v178;
  uint64_t v228 = v177;
  uint64_t v229 = v176;
  uint64_t v230 = v175;
  uint64_t v231 = v174;
  uint64_t v232 = v173;
  uint64_t v233 = v172;
  uint64_t v234 = v171;
  uint64_t v235 = v170;
  uint64_t v236 = v169;
  uint64_t v237 = v168;
  uint64_t v238 = v167;
  uint64_t v239 = v166;
  uint64_t v240 = v165;
  uint64_t v241 = v164;
  uint64_t v242 = v163;
  uint64_t v243 = v162;
  uint64_t v244 = v161;
  uint64_t v245 = v160;
  uint64_t v246 = v159;
  uint64_t v247 = v158;
  uint64_t v248 = v157;
  uint64_t v249 = v156;
  uint64_t v250 = v155;
  uint64_t v251 = v154;
  uint64_t v252 = v153;
  uint64_t v253 = v192;
  uint64_t v254 = v127;
  uint64_t v255 = v191;
  uint64_t v256 = v152;
  uint64_t v257 = v151;
  uint64_t v258 = (uint64_t)v150;
  uint64_t v259 = v149;
  uint64_t v260 = v148;
  uint64_t v261 = v147;
  uint64_t v262 = v146;
  uint64_t v263 = v145;
  uint64_t v264 = v144;
  uint64_t v265 = v143;
  uint64_t v266 = v142;
  uint64_t v267 = v141;
  uint64_t v268 = v140;
  uint64_t v269 = v139;
  uint64_t v270 = v138;
  uint64_t v271 = v137;
  uint64_t v272 = v136;
  uint64_t v273 = v135;
  uint64_t v274 = v134;
  uint64_t v275 = v133;
  uint64_t v276 = v132;
  uint64_t v277 = v131;
  uint64_t v278 = v195;
  uint64_t v279 = v189;
  uint64_t v280 = v130;
  uint64_t v281 = v129;
  uint64_t v282 = v128;
  uint64_t v283 = v199;
  uint64_t v284 = v202;
  uint64_t v285 = v196;
  uint64_t v286 = v200;
  uint64_t v287 = v194;
  uint64_t v288 = v198;
  uint64_t v289 = v190;
  uint64_t v290 = v193;
  uint64_t v291 = v125;
  uint64_t v292 = v124;
  uint64_t v293 = v118;
  uint64_t v294 = v119;
  uint64_t v295 = v117;
  uint64_t v296 = v197;
  sub_1AFED8768(&v207);
  return memcpy(v205, v206, 0x2D0uLL);
}

uint64_t sub_1AFED4B50()
{
  return 3;
}

void *sub_1AFED4B58(void *a1)
{
  sub_1AFED8284(0, &qword_1EB81B328, (void (*)(void))sub_1AFED54A8);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v11 - v6;
  uint64_t v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFED54A8();
  uint64_t v9 = v8;
  sub_1AFFCBE68();
  if (!v1)
  {
    sub_1AFED54FC();
    sub_1AFFCBB58();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v9 = (void *)v11[1];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v9;
}

void *sub_1AFED4D00(void *a1)
{
  sub_1AFED8284(0, &qword_1EB81B350, (void (*)(void))sub_1AFED57C4);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v11 - v6;
  uint64_t v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFED57C4();
  uint64_t v9 = v8;
  sub_1AFFCBE68();
  if (!v1)
  {
    sub_1AFED5818();
    sub_1AFFCBAF8();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v9 = (void *)v11[1];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v9;
}

uint64_t sub_1AFED4EA8(void *a1)
{
  sub_1AFED8284(0, &qword_1EB81B378, (void (*)(void))sub_1AFED5994);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v10 - v6;
  uint64_t v8 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  sub_1AFED5994();
  sub_1AFFCBE68();
  if (!v1)
  {
    sub_1AFED5AC8(0, &qword_1EB81B388, MEMORY[0x1E4FBB320]);
    sub_1AFED59E8();
    sub_1AFFCBB58();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v8 = v10[1];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v8;
}

void *sub_1AFED512C(void *a1)
{
  sub_1AFED8284(0, &qword_1EB81B300, (void (*)(void))sub_1AFED52D4);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v11 - v6;
  uint64_t v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFED52D4();
  uint64_t v9 = v8;
  sub_1AFFCBE68();
  if (!v1)
  {
    sub_1AFED5328();
    sub_1AFFCBB58();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v9 = (void *)v11[1];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v9;
}

unint64_t sub_1AFED52D4()
{
  unint64_t result = qword_1EB81B308;
  if (!qword_1EB81B308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB81B308);
  }
  return result;
}

unint64_t sub_1AFED5328()
{
  unint64_t result = qword_1EB81B310;
  if (!qword_1EB81B310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB81B310);
  }
  return result;
}

ValueMetadata *type metadata accessor for YahooQuoteDetailResponse.CodingKeys()
{
  return &type metadata for YahooQuoteDetailResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for YahooQuoteDetailResponse.Finance()
{
  return &type metadata for YahooQuoteDetailResponse.Finance;
}

unint64_t sub_1AFED53A4()
{
  unint64_t result = qword_1E9AFC310;
  if (!qword_1E9AFC310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC310);
  }
  return result;
}

unint64_t sub_1AFED53FC()
{
  unint64_t result = qword_1EB81B318;
  if (!qword_1EB81B318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB81B318);
  }
  return result;
}

unint64_t sub_1AFED5454()
{
  unint64_t result = qword_1EB81B320;
  if (!qword_1EB81B320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB81B320);
  }
  return result;
}

unint64_t sub_1AFED54A8()
{
  unint64_t result = qword_1EB81B330;
  if (!qword_1EB81B330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB81B330);
  }
  return result;
}

unint64_t sub_1AFED54FC()
{
  unint64_t result = qword_1EB81B338;
  if (!qword_1EB81B338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB81B338);
  }
  return result;
}

ValueMetadata *type metadata accessor for YahooQuoteDetailResponse.Finance.CodingKeys()
{
  return &type metadata for YahooQuoteDetailResponse.Finance.CodingKeys;
}

void *initializeBufferWithCopyOfBuffer for YahooQuoteDetailResponse.QuoteService(void *a1, void *a2)
{
  *a1 = *a2;
  sub_1AFFC8E38();
  return a1;
}

void *assignWithCopy for YahooQuoteDetailResponse.QuoteService(void *a1, void *a2)
{
  *a1 = *a2;
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for YahooQuoteDetailResponse.QuoteService(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s10StocksCore24YahooQuoteDetailResponseV12QuoteServiceVwet_0(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s10StocksCore24YahooQuoteDetailResponseV12QuoteServiceVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for YahooQuoteDetailResponse.QuoteService()
{
  return &type metadata for YahooQuoteDetailResponse.QuoteService;
}

unint64_t sub_1AFED56C0()
{
  unint64_t result = qword_1E9AFC318;
  if (!qword_1E9AFC318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC318);
  }
  return result;
}

unint64_t sub_1AFED5718()
{
  unint64_t result = qword_1EB81B340;
  if (!qword_1EB81B340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB81B340);
  }
  return result;
}

unint64_t sub_1AFED5770()
{
  unint64_t result = qword_1EB81B348;
  if (!qword_1EB81B348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB81B348);
  }
  return result;
}

unint64_t sub_1AFED57C4()
{
  unint64_t result = qword_1EB81B358;
  if (!qword_1EB81B358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB81B358);
  }
  return result;
}

unint64_t sub_1AFED5818()
{
  unint64_t result = qword_1EB81B360;
  if (!qword_1EB81B360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB81B360);
  }
  return result;
}

ValueMetadata *type metadata accessor for YahooQuoteDetailResponse.QuoteService.CodingKeys()
{
  return &type metadata for YahooQuoteDetailResponse.QuoteService.CodingKeys;
}

ValueMetadata *type metadata accessor for YahooQuoteDetailResponse.Quotes()
{
  return &type metadata for YahooQuoteDetailResponse.Quotes;
}

unint64_t sub_1AFED5890()
{
  unint64_t result = qword_1E9AFC320;
  if (!qword_1E9AFC320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC320);
  }
  return result;
}

unint64_t sub_1AFED58E8()
{
  unint64_t result = qword_1EB81B368;
  if (!qword_1EB81B368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB81B368);
  }
  return result;
}

unint64_t sub_1AFED5940()
{
  unint64_t result = qword_1EB81B370;
  if (!qword_1EB81B370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB81B370);
  }
  return result;
}

unint64_t sub_1AFED5994()
{
  unint64_t result = qword_1EB81B380;
  if (!qword_1EB81B380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB81B380);
  }
  return result;
}

unint64_t sub_1AFED59E8()
{
  unint64_t result = qword_1EB81B390;
  if (!qword_1EB81B390)
  {
    sub_1AFED5AC8(255, &qword_1EB81B388, MEMORY[0x1E4FBB320]);
    sub_1AFED5A74();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB81B390);
  }
  return result;
}

unint64_t sub_1AFED5A74()
{
  unint64_t result = qword_1EB81B398;
  if (!qword_1EB81B398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB81B398);
  }
  return result;
}

void sub_1AFED5AC8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, ValueMetadata *))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, &type metadata for YahooQuoteDetailResponse.Quote);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

ValueMetadata *type metadata accessor for YahooQuoteDetailResponse.Quotes.CodingKeys()
{
  return &type metadata for YahooQuoteDetailResponse.Quotes.CodingKeys;
}

uint64_t destroy for YahooQuoteDetailResponse.Quote(void *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[8])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[13])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[18])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[23])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[28])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[33])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[38])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[43])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[48])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[53])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[58])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[63])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[68])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[73])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for YahooQuoteDetailResponse.Quote(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  uint64_t v7 = *(void *)(a2 + 64);
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  if (v7)
  {
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    uint64_t v8 = *(void *)(a2 + 72);
    uint64_t v9 = *(void *)(a2 + 80);
    *(void *)(a1 + 64) = v7;
    *(void *)(a1 + 72) = v8;
    *(void *)(a1 + 80) = v9;
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    uint64_t v10 = *(void *)(a2 + 104);
    if (v10) {
      goto LABEL_3;
    }
  }
  else
  {
    long long v47 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v47;
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    uint64_t v10 = *(void *)(a2 + 104);
    if (v10)
    {
LABEL_3:
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      uint64_t v11 = *(void *)(a2 + 112);
      uint64_t v12 = *(void *)(a2 + 120);
      *(void *)(a1 + 104) = v10;
      *(void *)(a1 + 112) = v11;
      *(void *)(a1 + 120) = v12;
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      uint64_t v13 = *(void *)(a2 + 144);
      if (v13) {
        goto LABEL_4;
      }
      goto LABEL_18;
    }
  }
  long long v48 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = v48;
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  uint64_t v13 = *(void *)(a2 + 144);
  if (v13)
  {
LABEL_4:
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    uint64_t v14 = *(void *)(a2 + 152);
    uint64_t v15 = *(void *)(a2 + 160);
    *(void *)(a1 + 144) = v13;
    *(void *)(a1 + 152) = v14;
    *(void *)(a1 + 160) = v15;
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    uint64_t v16 = *(void *)(a2 + 184);
    if (v16) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
LABEL_18:
  long long v49 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v49;
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  uint64_t v16 = *(void *)(a2 + 184);
  if (v16)
  {
LABEL_5:
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
    uint64_t v17 = *(void *)(a2 + 192);
    uint64_t v18 = *(void *)(a2 + 200);
    *(void *)(a1 + 184) = v16;
    *(void *)(a1 + 192) = v17;
    *(void *)(a1 + 200) = v18;
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    uint64_t v19 = *(void *)(a2 + 224);
    if (v19) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
LABEL_19:
  long long v50 = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = v50;
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  uint64_t v19 = *(void *)(a2 + 224);
  if (v19)
  {
LABEL_6:
    *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
    uint64_t v20 = *(void *)(a2 + 232);
    uint64_t v21 = *(void *)(a2 + 240);
    *(void *)(a1 + 224) = v19;
    *(void *)(a1 + 232) = v20;
    *(void *)(a1 + 240) = v21;
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    uint64_t v22 = *(void *)(a2 + 264);
    if (v22) {
      goto LABEL_7;
    }
    goto LABEL_21;
  }
LABEL_20:
  long long v51 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 224) = v51;
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  uint64_t v22 = *(void *)(a2 + 264);
  if (v22)
  {
LABEL_7:
    *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
    uint64_t v23 = *(void *)(a2 + 272);
    uint64_t v24 = *(void *)(a2 + 280);
    *(void *)(a1 + 264) = v22;
    *(void *)(a1 + 272) = v23;
    *(void *)(a1 + 280) = v24;
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    uint64_t v25 = *(void *)(a2 + 304);
    if (v25) {
      goto LABEL_8;
    }
    goto LABEL_22;
  }
LABEL_21:
  long long v52 = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 264) = v52;
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  uint64_t v25 = *(void *)(a2 + 304);
  if (v25)
  {
LABEL_8:
    *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
    uint64_t v26 = *(void *)(a2 + 312);
    uint64_t v27 = *(void *)(a2 + 320);
    *(void *)(a1 + 304) = v25;
    *(void *)(a1 + 312) = v26;
    *(void *)(a1 + 320) = v27;
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    uint64_t v28 = *(void *)(a2 + 344);
    if (v28) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }
LABEL_22:
  long long v53 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = v53;
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  uint64_t v28 = *(void *)(a2 + 344);
  if (v28)
  {
LABEL_9:
    uint64_t v29 = *(void *)(a2 + 336);
    *(void *)(a1 + 328) = *(void *)(a2 + 328);
    *(void *)(a1 + 336) = v29;
    uint64_t v30 = *(void *)(a2 + 352);
    uint64_t v31 = *(void *)(a2 + 360);
    *(void *)(a1 + 344) = v28;
    *(void *)(a1 + 352) = v30;
    *(void *)(a1 + 360) = v31;
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    uint64_t v32 = *(void *)(a2 + 384);
    if (v32) {
      goto LABEL_10;
    }
    goto LABEL_24;
  }
LABEL_23:
  long long v54 = *(_OWORD *)(a2 + 344);
  *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
  *(_OWORD *)(a1 + 344) = v54;
  *(void *)(a1 + 360) = *(void *)(a2 + 360);
  uint64_t v32 = *(void *)(a2 + 384);
  if (v32)
  {
LABEL_10:
    *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
    uint64_t v33 = *(void *)(a2 + 392);
    uint64_t v34 = *(void *)(a2 + 400);
    *(void *)(a1 + 384) = v32;
    *(void *)(a1 + 392) = v33;
    *(void *)(a1 + 400) = v34;
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    uint64_t v35 = *(void *)(a2 + 424);
    if (v35) {
      goto LABEL_11;
    }
    goto LABEL_25;
  }
LABEL_24:
  long long v55 = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 384) = v55;
  *(void *)(a1 + 400) = *(void *)(a2 + 400);
  uint64_t v35 = *(void *)(a2 + 424);
  if (v35)
  {
LABEL_11:
    uint64_t v36 = *(void *)(a2 + 416);
    *(void *)(a1 + 408) = *(void *)(a2 + 408);
    *(void *)(a1 + 416) = v36;
    uint64_t v37 = *(void *)(a2 + 432);
    uint64_t v38 = *(void *)(a2 + 440);
    *(void *)(a1 + 424) = v35;
    *(void *)(a1 + 432) = v37;
    *(void *)(a1 + 440) = v38;
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    uint64_t v39 = *(void *)(a2 + 464);
    if (v39) {
      goto LABEL_12;
    }
    goto LABEL_26;
  }
LABEL_25:
  long long v56 = *(_OWORD *)(a2 + 424);
  *(_OWORD *)(a1 + 408) = *(_OWORD *)(a2 + 408);
  *(_OWORD *)(a1 + 424) = v56;
  *(void *)(a1 + 440) = *(void *)(a2 + 440);
  uint64_t v39 = *(void *)(a2 + 464);
  if (v39)
  {
LABEL_12:
    *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
    uint64_t v40 = *(void *)(a2 + 472);
    uint64_t v41 = *(void *)(a2 + 480);
    *(void *)(a1 + 464) = v39;
    *(void *)(a1 + 472) = v40;
    *(void *)(a1 + 480) = v41;
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    uint64_t v42 = *(void *)(a2 + 504);
    if (v42) {
      goto LABEL_13;
    }
    goto LABEL_27;
  }
LABEL_26:
  long long v57 = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
  *(_OWORD *)(a1 + 464) = v57;
  *(void *)(a1 + 480) = *(void *)(a2 + 480);
  uint64_t v42 = *(void *)(a2 + 504);
  if (v42)
  {
LABEL_13:
    uint64_t v43 = *(void *)(a2 + 496);
    *(void *)(a1 + 488) = *(void *)(a2 + 488);
    *(void *)(a1 + 496) = v43;
    uint64_t v44 = *(void *)(a2 + 512);
    *(void *)(a1 + 504) = v42;
    *(void *)(a1 + 512) = v44;
    *(void *)(a1 + 520) = *(void *)(a2 + 520);
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    uint64_t v45 = *(void *)(a2 + 544);
    if (v45) {
      goto LABEL_14;
    }
LABEL_28:
    long long v59 = *(_OWORD *)(a2 + 544);
    *(_OWORD *)(a1 + 528) = *(_OWORD *)(a2 + 528);
    *(_OWORD *)(a1 + 544) = v59;
    *(void *)(a1 + 560) = *(void *)(a2 + 560);
    uint64_t v46 = *(void *)(a2 + 584);
    if (v46) {
      goto LABEL_15;
    }
LABEL_29:
    long long v60 = *(_OWORD *)(a2 + 584);
    *(_OWORD *)(a1 + 568) = *(_OWORD *)(a2 + 568);
    *(_OWORD *)(a1 + 584) = v60;
    *(void *)(a1 + 600) = *(void *)(a2 + 600);
    goto LABEL_30;
  }
LABEL_27:
  long long v58 = *(_OWORD *)(a2 + 504);
  *(_OWORD *)(a1 + 488) = *(_OWORD *)(a2 + 488);
  *(_OWORD *)(a1 + 504) = v58;
  *(void *)(a1 + 520) = *(void *)(a2 + 520);
  uint64_t v45 = *(void *)(a2 + 544);
  if (!v45) {
    goto LABEL_28;
  }
LABEL_14:
  *(_OWORD *)(a1 + 528) = *(_OWORD *)(a2 + 528);
  *(void *)(a1 + 544) = v45;
  *(void *)(a1 + 552) = *(void *)(a2 + 552);
  *(void *)(a1 + 560) = *(void *)(a2 + 560);
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  uint64_t v46 = *(void *)(a2 + 584);
  if (!v46) {
    goto LABEL_29;
  }
LABEL_15:
  *(void *)(a1 + 568) = *(void *)(a2 + 568);
  *(void *)(a1 + 576) = *(void *)(a2 + 576);
  *(void *)(a1 + 584) = v46;
  *(void *)(a1 + 592) = *(void *)(a2 + 592);
  *(void *)(a1 + 600) = *(void *)(a2 + 600);
  sub_1AFFC8E38();
  sub_1AFFC8E38();
LABEL_30:
  *(void *)(a1 + 608) = *(void *)(a2 + 608);
  *(void *)(a1 + 616) = *(void *)(a2 + 616);
  *(void *)(a1 + 624) = *(void *)(a2 + 624);
  *(void *)(a1 + 632) = *(void *)(a2 + 632);
  *(void *)(a1 + 640) = *(void *)(a2 + 640);
  *(void *)(a1 + 648) = *(void *)(a2 + 648);
  *(void *)(a1 + 656) = *(void *)(a2 + 656);
  *(void *)(a1 + 664) = *(void *)(a2 + 664);
  *(void *)(a1 + 672) = *(void *)(a2 + 672);
  *(void *)(a1 + 680) = *(void *)(a2 + 680);
  *(void *)(a1 + 688) = *(void *)(a2 + 688);
  *(void *)(a1 + 696) = *(void *)(a2 + 696);
  *(void *)(a1 + 704) = *(void *)(a2 + 704);
  *(void *)(a1 + 712) = *(void *)(a2 + 712);
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  return a1;
}

void *assignWithCopy for YahooQuoteDetailResponse.Quote(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + 6;
  uint64_t v5 = a2 + 6;
  uint64_t v6 = a2[8];
  if (a1[8])
  {
    if (v6)
    {
      a1[6] = a2[6];
      a1[7] = a2[7];
      a1[8] = a2[8];
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      a1[9] = a2[9];
      a1[10] = a2[10];
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AFED6FA8((uint64_t)(a1 + 6), &qword_1EB81B3A8);
      uint64_t v7 = a2[10];
      long long v8 = *((_OWORD *)a2 + 4);
      *uint64_t v4 = *v5;
      *((_OWORD *)a1 + 4) = v8;
      a1[10] = v7;
    }
  }
  else if (v6)
  {
    a1[6] = a2[6];
    a1[7] = a2[7];
    a1[8] = a2[8];
    a1[9] = a2[9];
    a1[10] = a2[10];
    sub_1AFFC8E38();
    sub_1AFFC8E38();
  }
  else
  {
    long long v9 = *v5;
    long long v10 = *((_OWORD *)a2 + 4);
    a1[10] = a2[10];
    *uint64_t v4 = v9;
    *((_OWORD *)a1 + 4) = v10;
  }
  uint64_t v11 = a1 + 11;
  uint64_t v12 = a2 + 11;
  uint64_t v13 = a2[13];
  if (a1[13])
  {
    if (v13)
    {
      a1[11] = a2[11];
      a1[12] = a2[12];
      a1[13] = a2[13];
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      a1[14] = a2[14];
      a1[15] = a2[15];
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AFED6FA8((uint64_t)(a1 + 11), &qword_1EB81B3A8);
      uint64_t v14 = a2[15];
      long long v15 = *(_OWORD *)(a2 + 13);
      *uint64_t v11 = *v12;
      *(_OWORD *)(a1 + 13) = v15;
      a1[15] = v14;
    }
  }
  else if (v13)
  {
    a1[11] = a2[11];
    a1[12] = a2[12];
    a1[13] = a2[13];
    a1[14] = a2[14];
    a1[15] = a2[15];
    sub_1AFFC8E38();
    sub_1AFFC8E38();
  }
  else
  {
    long long v16 = *v12;
    long long v17 = *(_OWORD *)(a2 + 13);
    a1[15] = a2[15];
    *uint64_t v11 = v16;
    *(_OWORD *)(a1 + 13) = v17;
  }
  uint64_t v18 = a1 + 16;
  uint64_t v19 = a2 + 16;
  uint64_t v20 = a2[18];
  if (a1[18])
  {
    if (v20)
    {
      a1[16] = a2[16];
      a1[17] = a2[17];
      a1[18] = a2[18];
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      a1[19] = a2[19];
      a1[20] = a2[20];
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AFED6FA8((uint64_t)(a1 + 16), &qword_1EB81B3A8);
      uint64_t v21 = a2[20];
      long long v22 = *((_OWORD *)a2 + 9);
      *uint64_t v18 = *v19;
      *((_OWORD *)a1 + 9) = v22;
      a1[20] = v21;
    }
  }
  else if (v20)
  {
    a1[16] = a2[16];
    a1[17] = a2[17];
    a1[18] = a2[18];
    a1[19] = a2[19];
    a1[20] = a2[20];
    sub_1AFFC8E38();
    sub_1AFFC8E38();
  }
  else
  {
    long long v23 = *v19;
    long long v24 = *((_OWORD *)a2 + 9);
    a1[20] = a2[20];
    *uint64_t v18 = v23;
    *((_OWORD *)a1 + 9) = v24;
  }
  uint64_t v25 = a1 + 21;
  uint64_t v26 = a2 + 21;
  uint64_t v27 = a2[23];
  if (a1[23])
  {
    if (v27)
    {
      a1[21] = a2[21];
      a1[22] = a2[22];
      a1[23] = a2[23];
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      a1[24] = a2[24];
      a1[25] = a2[25];
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AFED6FA8((uint64_t)(a1 + 21), &qword_1EB81B3A8);
      uint64_t v28 = a2[25];
      long long v29 = *(_OWORD *)(a2 + 23);
      _OWORD *v25 = *v26;
      *(_OWORD *)(a1 + 23) = v29;
      a1[25] = v28;
    }
  }
  else if (v27)
  {
    a1[21] = a2[21];
    a1[22] = a2[22];
    a1[23] = a2[23];
    a1[24] = a2[24];
    a1[25] = a2[25];
    sub_1AFFC8E38();
    sub_1AFFC8E38();
  }
  else
  {
    long long v30 = *v26;
    long long v31 = *(_OWORD *)(a2 + 23);
    a1[25] = a2[25];
    _OWORD *v25 = v30;
    *(_OWORD *)(a1 + 23) = v31;
  }
  uint64_t v32 = a1 + 26;
  uint64_t v33 = a2 + 26;
  uint64_t v34 = a2[28];
  if (a1[28])
  {
    if (v34)
    {
      a1[26] = a2[26];
      a1[27] = a2[27];
      a1[28] = a2[28];
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      a1[29] = a2[29];
      a1[30] = a2[30];
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AFED6FA8((uint64_t)(a1 + 26), &qword_1EB81B3A8);
      uint64_t v35 = a2[30];
      long long v36 = *((_OWORD *)a2 + 14);
      *uint64_t v32 = *v33;
      *((_OWORD *)a1 + 14) = v36;
      a1[30] = v35;
    }
  }
  else if (v34)
  {
    a1[26] = a2[26];
    a1[27] = a2[27];
    a1[28] = a2[28];
    a1[29] = a2[29];
    a1[30] = a2[30];
    sub_1AFFC8E38();
    sub_1AFFC8E38();
  }
  else
  {
    long long v37 = *v33;
    long long v38 = *((_OWORD *)a2 + 14);
    a1[30] = a2[30];
    *uint64_t v32 = v37;
    *((_OWORD *)a1 + 14) = v38;
  }
  uint64_t v39 = a1 + 31;
  uint64_t v40 = a2 + 31;
  uint64_t v41 = a2[33];
  if (a1[33])
  {
    if (v41)
    {
      a1[31] = a2[31];
      a1[32] = a2[32];
      a1[33] = a2[33];
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      a1[34] = a2[34];
      a1[35] = a2[35];
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AFED6FA8((uint64_t)(a1 + 31), &qword_1EB81B3A8);
      uint64_t v42 = a2[35];
      long long v43 = *(_OWORD *)(a2 + 33);
      *uint64_t v39 = *v40;
      *(_OWORD *)(a1 + 33) = v43;
      a1[35] = v42;
    }
  }
  else if (v41)
  {
    a1[31] = a2[31];
    a1[32] = a2[32];
    a1[33] = a2[33];
    a1[34] = a2[34];
    a1[35] = a2[35];
    sub_1AFFC8E38();
    sub_1AFFC8E38();
  }
  else
  {
    long long v44 = *v40;
    long long v45 = *(_OWORD *)(a2 + 33);
    a1[35] = a2[35];
    *uint64_t v39 = v44;
    *(_OWORD *)(a1 + 33) = v45;
  }
  uint64_t v46 = a1 + 36;
  long long v47 = a2 + 36;
  uint64_t v48 = a2[38];
  if (a1[38])
  {
    if (v48)
    {
      a1[36] = a2[36];
      a1[37] = a2[37];
      a1[38] = a2[38];
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      a1[39] = a2[39];
      a1[40] = a2[40];
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AFED6FA8((uint64_t)(a1 + 36), &qword_1EB81B3A8);
      uint64_t v49 = a2[40];
      long long v50 = *((_OWORD *)a2 + 19);
      _OWORD *v46 = *v47;
      *((_OWORD *)a1 + 19) = v50;
      a1[40] = v49;
    }
  }
  else if (v48)
  {
    a1[36] = a2[36];
    a1[37] = a2[37];
    a1[38] = a2[38];
    a1[39] = a2[39];
    a1[40] = a2[40];
    sub_1AFFC8E38();
    sub_1AFFC8E38();
  }
  else
  {
    long long v51 = *v47;
    long long v52 = *((_OWORD *)a2 + 19);
    a1[40] = a2[40];
    _OWORD *v46 = v51;
    *((_OWORD *)a1 + 19) = v52;
  }
  long long v53 = a1 + 41;
  long long v54 = a2 + 41;
  uint64_t v55 = a2[43];
  if (a1[43])
  {
    if (v55)
    {
      a1[41] = a2[41];
      a1[42] = a2[42];
      a1[43] = a2[43];
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      a1[44] = a2[44];
      a1[45] = a2[45];
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AFED6FA8((uint64_t)(a1 + 41), &qword_1EB81B3A8);
      uint64_t v56 = a2[45];
      long long v57 = *(_OWORD *)(a2 + 43);
      _OWORD *v53 = *v54;
      *(_OWORD *)(a1 + 43) = v57;
      a1[45] = v56;
    }
  }
  else if (v55)
  {
    a1[41] = a2[41];
    a1[42] = a2[42];
    a1[43] = a2[43];
    a1[44] = a2[44];
    a1[45] = a2[45];
    sub_1AFFC8E38();
    sub_1AFFC8E38();
  }
  else
  {
    long long v58 = *v54;
    long long v59 = *(_OWORD *)(a2 + 43);
    a1[45] = a2[45];
    _OWORD *v53 = v58;
    *(_OWORD *)(a1 + 43) = v59;
  }
  long long v60 = a1 + 46;
  uint64_t v61 = a2 + 46;
  uint64_t v62 = a2[48];
  if (a1[48])
  {
    if (v62)
    {
      a1[46] = a2[46];
      a1[47] = a2[47];
      a1[48] = a2[48];
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      a1[49] = a2[49];
      a1[50] = a2[50];
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AFED6FA8((uint64_t)(a1 + 46), &qword_1EB81B3A8);
      uint64_t v63 = a2[50];
      long long v64 = *((_OWORD *)a2 + 24);
      *long long v60 = *v61;
      *((_OWORD *)a1 + 24) = v64;
      a1[50] = v63;
    }
  }
  else if (v62)
  {
    a1[46] = a2[46];
    a1[47] = a2[47];
    a1[48] = a2[48];
    a1[49] = a2[49];
    a1[50] = a2[50];
    sub_1AFFC8E38();
    sub_1AFFC8E38();
  }
  else
  {
    long long v65 = *v61;
    long long v66 = *((_OWORD *)a2 + 24);
    a1[50] = a2[50];
    *long long v60 = v65;
    *((_OWORD *)a1 + 24) = v66;
  }
  uint64_t v67 = a1 + 51;
  uint64_t v68 = a2 + 51;
  uint64_t v69 = a2[53];
  if (a1[53])
  {
    if (v69)
    {
      a1[51] = a2[51];
      a1[52] = a2[52];
      a1[53] = a2[53];
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      a1[54] = a2[54];
      a1[55] = a2[55];
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AFED6FA8((uint64_t)(a1 + 51), qword_1EB81B3B0);
      uint64_t v70 = a2[55];
      long long v71 = *(_OWORD *)(a2 + 53);
      *uint64_t v67 = *v68;
      *(_OWORD *)(a1 + 53) = v71;
      a1[55] = v70;
    }
  }
  else if (v69)
  {
    a1[51] = a2[51];
    a1[52] = a2[52];
    a1[53] = a2[53];
    a1[54] = a2[54];
    a1[55] = a2[55];
    sub_1AFFC8E38();
    sub_1AFFC8E38();
  }
  else
  {
    long long v72 = *v68;
    long long v73 = *(_OWORD *)(a2 + 53);
    a1[55] = a2[55];
    *uint64_t v67 = v72;
    *(_OWORD *)(a1 + 53) = v73;
  }
  uint64_t v74 = a1 + 56;
  uint64_t v75 = a2 + 56;
  uint64_t v76 = a2[58];
  if (a1[58])
  {
    if (v76)
    {
      a1[56] = a2[56];
      a1[57] = a2[57];
      a1[58] = a2[58];
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      a1[59] = a2[59];
      a1[60] = a2[60];
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AFED6FA8((uint64_t)(a1 + 56), qword_1EB81B3B0);
      uint64_t v77 = a2[60];
      long long v78 = *((_OWORD *)a2 + 29);
      *uint64_t v74 = *v75;
      *((_OWORD *)a1 + 29) = v78;
      a1[60] = v77;
    }
  }
  else if (v76)
  {
    a1[56] = a2[56];
    a1[57] = a2[57];
    a1[58] = a2[58];
    a1[59] = a2[59];
    a1[60] = a2[60];
    sub_1AFFC8E38();
    sub_1AFFC8E38();
  }
  else
  {
    long long v79 = *v75;
    long long v80 = *((_OWORD *)a2 + 29);
    a1[60] = a2[60];
    *uint64_t v74 = v79;
    *((_OWORD *)a1 + 29) = v80;
  }
  uint64_t v81 = a1 + 61;
  uint64_t v82 = a2 + 61;
  uint64_t v83 = a2[63];
  if (a1[63])
  {
    if (v83)
    {
      a1[61] = a2[61];
      a1[62] = a2[62];
      a1[63] = a2[63];
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      a1[64] = a2[64];
      a1[65] = a2[65];
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AFED6FA8((uint64_t)(a1 + 61), &qword_1EB81B3A8);
      uint64_t v84 = a2[65];
      long long v85 = *(_OWORD *)(a2 + 63);
      *uint64_t v81 = *v82;
      *(_OWORD *)(a1 + 63) = v85;
      a1[65] = v84;
    }
  }
  else if (v83)
  {
    a1[61] = a2[61];
    a1[62] = a2[62];
    a1[63] = a2[63];
    a1[64] = a2[64];
    a1[65] = a2[65];
    sub_1AFFC8E38();
    sub_1AFFC8E38();
  }
  else
  {
    long long v86 = *v82;
    long long v87 = *(_OWORD *)(a2 + 63);
    a1[65] = a2[65];
    *uint64_t v81 = v86;
    *(_OWORD *)(a1 + 63) = v87;
  }
  uint64_t v88 = a1 + 66;
  uint64_t v89 = a2 + 66;
  uint64_t v90 = a2[68];
  if (a1[68])
  {
    if (v90)
    {
      a1[66] = a2[66];
      a1[67] = a2[67];
      a1[68] = a2[68];
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      a1[69] = a2[69];
      a1[70] = a2[70];
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AFED6FA8((uint64_t)(a1 + 66), &qword_1EB81B3A8);
      uint64_t v91 = a2[70];
      long long v92 = *((_OWORD *)a2 + 34);
      *uint64_t v88 = *v89;
      *((_OWORD *)a1 + 34) = v92;
      a1[70] = v91;
    }
  }
  else if (v90)
  {
    a1[66] = a2[66];
    a1[67] = a2[67];
    a1[68] = a2[68];
    a1[69] = a2[69];
    a1[70] = a2[70];
    sub_1AFFC8E38();
    sub_1AFFC8E38();
  }
  else
  {
    long long v93 = *v89;
    long long v94 = *((_OWORD *)a2 + 34);
    a1[70] = a2[70];
    *uint64_t v88 = v93;
    *((_OWORD *)a1 + 34) = v94;
  }
  uint64_t v95 = a1 + 71;
  uint64_t v96 = a2 + 71;
  uint64_t v97 = a2[73];
  if (a1[73])
  {
    if (v97)
    {
      a1[71] = a2[71];
      a1[72] = a2[72];
      a1[73] = a2[73];
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
      a1[74] = a2[74];
      a1[75] = a2[75];
      sub_1AFFC8E38();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AFED6FA8((uint64_t)(a1 + 71), &qword_1EB81B3A8);
      uint64_t v98 = a2[75];
      long long v99 = *(_OWORD *)(a2 + 73);
      *uint64_t v95 = *v96;
      *(_OWORD *)(a1 + 73) = v99;
      a1[75] = v98;
    }
  }
  else if (v97)
  {
    a1[71] = a2[71];
    a1[72] = a2[72];
    a1[73] = a2[73];
    a1[74] = a2[74];
    a1[75] = a2[75];
    sub_1AFFC8E38();
    sub_1AFFC8E38();
  }
  else
  {
    long long v100 = *v96;
    long long v101 = *(_OWORD *)(a2 + 73);
    a1[75] = a2[75];
    *uint64_t v95 = v100;
    *(_OWORD *)(a1 + 73) = v101;
  }
  a1[76] = a2[76];
  a1[77] = a2[77];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[78] = a2[78];
  a1[79] = a2[79];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[80] = a2[80];
  a1[81] = a2[81];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[82] = a2[82];
  a1[83] = a2[83];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[84] = a2[84];
  a1[85] = a2[85];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[86] = a2[86];
  a1[87] = a2[87];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  a1[88] = a2[88];
  a1[89] = a2[89];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t type metadata accessor for YahooQuoteDetailResponse.Value()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1AFED6FA8(uint64_t a1, unint64_t *a2)
{
  sub_1AFED7004(0, a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1AFED7004(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = type metadata accessor for YahooQuoteDetailResponse.Value();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

void *__swift_memcpy720_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x2D0uLL);
}

uint64_t assignWithTake for YahooQuoteDetailResponse.Quote(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 64))
  {
    uint64_t v7 = *(void *)(a2 + 64);
    if (v7)
    {
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = v7;
      swift_bridgeObjectRelease();
      uint64_t v8 = *(void *)(a2 + 80);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = v8;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1AFED6FA8(a1 + 48, &qword_1EB81B3A8);
  }
  long long v9 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v9;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
LABEL_6:
  if (*(void *)(a1 + 104))
  {
    uint64_t v10 = *(void *)(a2 + 104);
    if (v10)
    {
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = v10;
      swift_bridgeObjectRelease();
      uint64_t v11 = *(void *)(a2 + 120);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = v11;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1AFED6FA8(a1 + 88, &qword_1EB81B3A8);
  }
  long long v12 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = v12;
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
LABEL_11:
  if (*(void *)(a1 + 144))
  {
    uint64_t v13 = *(void *)(a2 + 144);
    if (v13)
    {
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      *(void *)(a1 + 144) = v13;
      swift_bridgeObjectRelease();
      uint64_t v14 = *(void *)(a2 + 160);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(void *)(a1 + 160) = v14;
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    sub_1AFED6FA8(a1 + 128, &qword_1EB81B3A8);
  }
  long long v15 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v15;
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
LABEL_16:
  if (*(void *)(a1 + 184))
  {
    uint64_t v16 = *(void *)(a2 + 184);
    if (v16)
    {
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      *(void *)(a1 + 184) = v16;
      swift_bridgeObjectRelease();
      uint64_t v17 = *(void *)(a2 + 200);
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      *(void *)(a1 + 200) = v17;
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
    sub_1AFED6FA8(a1 + 168, &qword_1EB81B3A8);
  }
  long long v18 = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = v18;
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
LABEL_21:
  if (*(void *)(a1 + 224))
  {
    uint64_t v19 = *(void *)(a2 + 224);
    if (v19)
    {
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      *(void *)(a1 + 224) = v19;
      swift_bridgeObjectRelease();
      uint64_t v20 = *(void *)(a2 + 240);
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
      *(void *)(a1 + 240) = v20;
      swift_bridgeObjectRelease();
      goto LABEL_26;
    }
    sub_1AFED6FA8(a1 + 208, &qword_1EB81B3A8);
  }
  long long v21 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 224) = v21;
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
LABEL_26:
  if (*(void *)(a1 + 264))
  {
    uint64_t v22 = *(void *)(a2 + 264);
    if (v22)
    {
      *(void *)(a1 + 248) = *(void *)(a2 + 248);
      *(void *)(a1 + 256) = *(void *)(a2 + 256);
      *(void *)(a1 + 264) = v22;
      swift_bridgeObjectRelease();
      uint64_t v23 = *(void *)(a2 + 280);
      *(void *)(a1 + 272) = *(void *)(a2 + 272);
      *(void *)(a1 + 280) = v23;
      swift_bridgeObjectRelease();
      goto LABEL_31;
    }
    sub_1AFED6FA8(a1 + 248, &qword_1EB81B3A8);
  }
  long long v24 = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 264) = v24;
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
LABEL_31:
  if (*(void *)(a1 + 304))
  {
    uint64_t v25 = *(void *)(a2 + 304);
    if (v25)
    {
      *(void *)(a1 + 288) = *(void *)(a2 + 288);
      *(void *)(a1 + 296) = *(void *)(a2 + 296);
      *(void *)(a1 + 304) = v25;
      swift_bridgeObjectRelease();
      uint64_t v26 = *(void *)(a2 + 320);
      *(void *)(a1 + 312) = *(void *)(a2 + 312);
      *(void *)(a1 + 320) = v26;
      swift_bridgeObjectRelease();
      goto LABEL_36;
    }
    sub_1AFED6FA8(a1 + 288, &qword_1EB81B3A8);
  }
  long long v27 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = v27;
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
LABEL_36:
  if (*(void *)(a1 + 344))
  {
    uint64_t v28 = *(void *)(a2 + 344);
    if (v28)
    {
      *(void *)(a1 + 328) = *(void *)(a2 + 328);
      *(void *)(a1 + 336) = *(void *)(a2 + 336);
      *(void *)(a1 + 344) = v28;
      swift_bridgeObjectRelease();
      uint64_t v29 = *(void *)(a2 + 360);
      *(void *)(a1 + 352) = *(void *)(a2 + 352);
      *(void *)(a1 + 360) = v29;
      swift_bridgeObjectRelease();
      goto LABEL_41;
    }
    sub_1AFED6FA8(a1 + 328, &qword_1EB81B3A8);
  }
  long long v30 = *(_OWORD *)(a2 + 344);
  *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
  *(_OWORD *)(a1 + 344) = v30;
  *(void *)(a1 + 360) = *(void *)(a2 + 360);
LABEL_41:
  if (*(void *)(a1 + 384))
  {
    uint64_t v31 = *(void *)(a2 + 384);
    if (v31)
    {
      *(void *)(a1 + 368) = *(void *)(a2 + 368);
      *(void *)(a1 + 376) = *(void *)(a2 + 376);
      *(void *)(a1 + 384) = v31;
      swift_bridgeObjectRelease();
      uint64_t v32 = *(void *)(a2 + 400);
      *(void *)(a1 + 392) = *(void *)(a2 + 392);
      *(void *)(a1 + 400) = v32;
      swift_bridgeObjectRelease();
      goto LABEL_46;
    }
    sub_1AFED6FA8(a1 + 368, &qword_1EB81B3A8);
  }
  long long v33 = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 384) = v33;
  *(void *)(a1 + 400) = *(void *)(a2 + 400);
LABEL_46:
  if (*(void *)(a1 + 424))
  {
    uint64_t v34 = *(void *)(a2 + 424);
    if (v34)
    {
      uint64_t v35 = *(void *)(a2 + 416);
      *(void *)(a1 + 408) = *(void *)(a2 + 408);
      *(void *)(a1 + 416) = v35;
      *(void *)(a1 + 424) = v34;
      swift_bridgeObjectRelease();
      uint64_t v36 = *(void *)(a2 + 440);
      *(void *)(a1 + 432) = *(void *)(a2 + 432);
      *(void *)(a1 + 440) = v36;
      swift_bridgeObjectRelease();
      goto LABEL_51;
    }
    sub_1AFED6FA8(a1 + 408, qword_1EB81B3B0);
  }
  long long v37 = *(_OWORD *)(a2 + 424);
  *(_OWORD *)(a1 + 408) = *(_OWORD *)(a2 + 408);
  *(_OWORD *)(a1 + 424) = v37;
  *(void *)(a1 + 440) = *(void *)(a2 + 440);
LABEL_51:
  if (*(void *)(a1 + 464))
  {
    uint64_t v38 = *(void *)(a2 + 464);
    if (v38)
    {
      *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
      *(void *)(a1 + 464) = v38;
      swift_bridgeObjectRelease();
      uint64_t v39 = *(void *)(a2 + 480);
      *(void *)(a1 + 472) = *(void *)(a2 + 472);
      *(void *)(a1 + 480) = v39;
      swift_bridgeObjectRelease();
      goto LABEL_56;
    }
    sub_1AFED6FA8(a1 + 448, qword_1EB81B3B0);
  }
  long long v40 = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
  *(_OWORD *)(a1 + 464) = v40;
  *(void *)(a1 + 480) = *(void *)(a2 + 480);
LABEL_56:
  if (*(void *)(a1 + 504))
  {
    uint64_t v41 = *(void *)(a2 + 504);
    if (v41)
    {
      *(void *)(a1 + 488) = *(void *)(a2 + 488);
      *(void *)(a1 + 496) = *(void *)(a2 + 496);
      *(void *)(a1 + 504) = v41;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 512) = *(void *)(a2 + 512);
      *(void *)(a1 + 520) = *(void *)(a2 + 520);
      swift_bridgeObjectRelease();
      goto LABEL_61;
    }
    sub_1AFED6FA8(a1 + 488, &qword_1EB81B3A8);
  }
  long long v42 = *(_OWORD *)(a2 + 504);
  *(_OWORD *)(a1 + 488) = *(_OWORD *)(a2 + 488);
  *(_OWORD *)(a1 + 504) = v42;
  *(void *)(a1 + 520) = *(void *)(a2 + 520);
LABEL_61:
  if (*(void *)(a1 + 544))
  {
    uint64_t v43 = *(void *)(a2 + 544);
    if (v43)
    {
      *(void *)(a1 + 528) = *(void *)(a2 + 528);
      *(void *)(a1 + 536) = *(void *)(a2 + 536);
      *(void *)(a1 + 544) = v43;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 552) = *(void *)(a2 + 552);
      *(void *)(a1 + 560) = *(void *)(a2 + 560);
      swift_bridgeObjectRelease();
      goto LABEL_66;
    }
    sub_1AFED6FA8(a1 + 528, &qword_1EB81B3A8);
  }
  long long v44 = *(_OWORD *)(a2 + 544);
  *(_OWORD *)(a1 + 528) = *(_OWORD *)(a2 + 528);
  *(_OWORD *)(a1 + 544) = v44;
  *(void *)(a1 + 560) = *(void *)(a2 + 560);
LABEL_66:
  if (!*(void *)(a1 + 584))
  {
LABEL_70:
    long long v46 = *(_OWORD *)(a2 + 584);
    *(_OWORD *)(a1 + 568) = *(_OWORD *)(a2 + 568);
    *(_OWORD *)(a1 + 584) = v46;
    *(void *)(a1 + 600) = *(void *)(a2 + 600);
    goto LABEL_71;
  }
  uint64_t v45 = *(void *)(a2 + 584);
  if (!v45)
  {
    sub_1AFED6FA8(a1 + 568, &qword_1EB81B3A8);
    goto LABEL_70;
  }
  *(void *)(a1 + 568) = *(void *)(a2 + 568);
  *(void *)(a1 + 576) = *(void *)(a2 + 576);
  *(void *)(a1 + 584) = v45;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 592) = *(void *)(a2 + 592);
  *(void *)(a1 + 600) = *(void *)(a2 + 600);
  swift_bridgeObjectRelease();
LABEL_71:
  *(void *)(a1 + 608) = *(void *)(a2 + 608);
  *(void *)(a1 + 616) = *(void *)(a2 + 616);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 624) = *(void *)(a2 + 624);
  *(void *)(a1 + 632) = *(void *)(a2 + 632);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 640) = *(void *)(a2 + 640);
  *(void *)(a1 + 648) = *(void *)(a2 + 648);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 656) = *(void *)(a2 + 656);
  *(void *)(a1 + 664) = *(void *)(a2 + 664);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 672) = *(void *)(a2 + 672);
  *(void *)(a1 + 680) = *(void *)(a2 + 680);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 688) = *(void *)(a2 + 688);
  *(void *)(a1 + 696) = *(void *)(a2 + 696);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 704) = *(void *)(a2 + 704);
  *(void *)(a1 + 712) = *(void *)(a2 + 712);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for YahooQuoteDetailResponse.Quote(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 720)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for YahooQuoteDetailResponse.Quote(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 712) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 720) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 720) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for YahooQuoteDetailResponse.Quote()
{
  return &type metadata for YahooQuoteDetailResponse.Quote;
}

uint64_t sub_1AFED78EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 32);
}

uint64_t sub_1AFED78F4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1AFED7990(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    sub_1AFFC8E48();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    uint64_t v10 = (void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v11 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v10 = *v11;
    v10[1] = v11[1];
    long long v12 = (void *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v13 = (void *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
    *long long v12 = *v13;
    v12[1] = v13[1];
    sub_1AFFC8E38();
    sub_1AFFC8E38();
  }
  return v4;
}

uint64_t sub_1AFED7AC4(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFED7B44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  void *v7 = *v8;
  v7[1] = v8[1];
  uint64_t v9 = (void *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  return a1;
}

uint64_t sub_1AFED7BF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  void *v7 = *v8;
  v7[1] = v8[1];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  uint64_t v9 = (void *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AFED7CB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  int v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  _OWORD *v7 = *v8;
  *(_OWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1AFED7D44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  void *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  uint64_t v9 = (void *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AFED7DF8(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1AFED7F4CLL);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)((((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_1AFED7F60(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v8 >= a3)
  {
    int v14 = 0;
    int v15 = a2 - v8;
    if (a2 <= v8)
    {
LABEL_17:
      switch(v14)
      {
        case 1:
          a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)&a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_42;
        case 4:
          *(_DWORD *)&a1[v10] = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            if (v7 < 0x7FFFFFFF)
            {
              uint64_t v19 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
              if ((a2 & 0x80000000) != 0)
              {
                *uint64_t v19 = a2 ^ 0x80000000;
                v19[1] = 0;
              }
              else
              {
                v19[1] = a2 - 1;
              }
            }
            else
            {
              long long v18 = *(void (**)(void))(v6 + 56);
              v18();
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v11 = a3 - v8;
    if (((((v9 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      unsigned int v12 = v11 + 1;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v13 = 1;
    }
    if (v12 >= 2) {
      int v14 = v13;
    }
    else {
      int v14 = 0;
    }
    int v15 = a2 - v8;
    if (a2 <= v8) {
      goto LABEL_17;
    }
  }
  if (((((v9 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    int v16 = v15;
  }
  else {
    int v16 = 1;
  }
  if (((((v9 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    int v17 = ~v8 + a2;
    bzero(a1, ((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16);
    *(_DWORD *)a1 = v17;
  }
  switch(v14)
  {
    case 1:
      a1[v10] = v16;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v16;
      break;
    case 3:
LABEL_42:
      __break(1u);
      JUMPOUT(0x1AFED8154);
    case 4:
      *(_DWORD *)&a1[v10] = v16;
      break;
    default:
      return;
  }
}

unint64_t sub_1AFED8180()
{
  unint64_t result = qword_1E9AFC328[0];
  if (!qword_1E9AFC328[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9AFC328);
  }
  return result;
}

unint64_t sub_1AFED81D8()
{
  unint64_t result = qword_1EB81B438;
  if (!qword_1EB81B438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB81B438);
  }
  return result;
}

unint64_t sub_1AFED8230()
{
  unint64_t result = qword_1EB81B440;
  if (!qword_1EB81B440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB81B440);
  }
  return result;
}

void sub_1AFED8284(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  if (!*a2)
  {
    a3();
    unint64_t v4 = sub_1AFFCBB78();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_1AFED82E4()
{
  unint64_t result = qword_1EB81B450;
  if (!qword_1EB81B450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB81B450);
  }
  return result;
}

uint64_t sub_1AFED8338(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1AFED7004(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AFED8388(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    sub_1AFFC8E38();
    return sub_1AFFC8E38();
  }
  return result;
}

void *sub_1AFED83CC(void *a1)
{
  uint64_t v2 = a1[6];
  uint64_t v3 = a1[7];
  uint64_t v4 = a1[8];
  uint64_t v5 = a1[13];
  uint64_t v7 = a1[12];
  uint64_t v8 = a1[11];
  uint64_t v10 = a1[17];
  uint64_t v11 = a1[16];
  uint64_t v9 = a1[18];
  uint64_t v13 = a1[22];
  uint64_t v14 = a1[21];
  uint64_t v12 = a1[23];
  uint64_t v16 = a1[27];
  uint64_t v17 = a1[26];
  uint64_t v15 = a1[28];
  uint64_t v19 = a1[32];
  uint64_t v20 = a1[31];
  uint64_t v18 = a1[33];
  uint64_t v22 = a1[37];
  uint64_t v23 = a1[36];
  uint64_t v21 = a1[38];
  uint64_t v25 = a1[42];
  uint64_t v26 = a1[41];
  uint64_t v24 = a1[43];
  uint64_t v28 = a1[47];
  uint64_t v29 = a1[46];
  uint64_t v27 = a1[48];
  uint64_t v31 = a1[52];
  uint64_t v32 = a1[51];
  uint64_t v30 = a1[53];
  uint64_t v34 = a1[57];
  uint64_t v35 = a1[56];
  uint64_t v33 = a1[58];
  uint64_t v37 = a1[62];
  uint64_t v38 = a1[61];
  uint64_t v36 = a1[63];
  uint64_t v40 = a1[67];
  uint64_t v41 = a1[66];
  uint64_t v39 = a1[68];
  uint64_t v43 = a1[72];
  uint64_t v44 = a1[71];
  uint64_t v42 = a1[73];
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFED8388(v2, v3, v4);
  sub_1AFED8388(v8, v7, v5);
  sub_1AFED8388(v11, v10, v9);
  sub_1AFED8388(v14, v13, v12);
  sub_1AFED8388(v17, v16, v15);
  sub_1AFED8388(v20, v19, v18);
  sub_1AFED8388(v23, v22, v21);
  sub_1AFED8388(v26, v25, v24);
  sub_1AFED8388(v29, v28, v27);
  sub_1AFED8388(v32, v31, v30);
  sub_1AFED8388(v35, v34, v33);
  sub_1AFED8388(v38, v37, v36);
  sub_1AFED8388(v41, v40, v39);
  sub_1AFED8388(v44, v43, v42);
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  sub_1AFFC8E38();
  return a1;
}

uint64_t sub_1AFED8724(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_1AFED8768(void *a1)
{
  uint64_t v2 = a1[6];
  uint64_t v3 = a1[7];
  uint64_t v4 = a1[8];
  uint64_t v5 = a1[13];
  uint64_t v7 = a1[12];
  uint64_t v8 = a1[11];
  uint64_t v10 = a1[17];
  uint64_t v11 = a1[16];
  uint64_t v9 = a1[18];
  uint64_t v13 = a1[22];
  uint64_t v14 = a1[21];
  uint64_t v12 = a1[23];
  uint64_t v16 = a1[27];
  uint64_t v17 = a1[26];
  uint64_t v15 = a1[28];
  uint64_t v19 = a1[32];
  uint64_t v20 = a1[31];
  uint64_t v18 = a1[33];
  uint64_t v22 = a1[37];
  uint64_t v23 = a1[36];
  uint64_t v21 = a1[38];
  uint64_t v25 = a1[42];
  uint64_t v26 = a1[41];
  uint64_t v24 = a1[43];
  uint64_t v28 = a1[47];
  uint64_t v29 = a1[46];
  uint64_t v27 = a1[48];
  uint64_t v31 = a1[52];
  uint64_t v32 = a1[51];
  uint64_t v30 = a1[53];
  uint64_t v34 = a1[57];
  uint64_t v35 = a1[56];
  uint64_t v33 = a1[58];
  uint64_t v37 = a1[62];
  uint64_t v38 = a1[61];
  uint64_t v36 = a1[63];
  uint64_t v40 = a1[67];
  uint64_t v41 = a1[66];
  uint64_t v39 = a1[68];
  uint64_t v43 = a1[72];
  uint64_t v44 = a1[71];
  uint64_t v42 = a1[73];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1AFED8724(v2, v3, v4);
  sub_1AFED8724(v8, v7, v5);
  sub_1AFED8724(v11, v10, v9);
  sub_1AFED8724(v14, v13, v12);
  sub_1AFED8724(v17, v16, v15);
  sub_1AFED8724(v20, v19, v18);
  sub_1AFED8724(v23, v22, v21);
  sub_1AFED8724(v26, v25, v24);
  sub_1AFED8724(v29, v28, v27);
  sub_1AFED8724(v32, v31, v30);
  sub_1AFED8724(v35, v34, v33);
  sub_1AFED8724(v38, v37, v36);
  sub_1AFED8724(v41, v40, v39);
  sub_1AFED8724(v44, v43, v42);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t type metadata accessor for YahooQuoteDetailResponse.Value.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for YahooQuoteDetailResponse.Value.ValueError()
{
  return __swift_instantiateGenericMetadata();
}

unsigned char *_s10StocksCore24YahooQuoteDetailResponseV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1AFED8B8CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

unsigned char *sub_1AFED8BB4(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFED8C80);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for YahooQuoteDetailResponse.Quote.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xE9) {
    goto LABEL_17;
  }
  if (a2 + 23 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 23) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 23;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 23;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 23;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x18;
  int v8 = v6 - 24;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for YahooQuoteDetailResponse.Quote.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 23 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 23) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE8)
  {
    unsigned int v6 = ((a2 - 233) >> 8) + 1;
    *uint64_t result = a2 + 23;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFED8E04);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 23;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for YahooQuoteDetailResponse.Quote.CodingKeys()
{
  return &type metadata for YahooQuoteDetailResponse.Quote.CodingKeys;
}

unint64_t sub_1AFED8E40()
{
  unint64_t result = qword_1E9AFC3B0;
  if (!qword_1E9AFC3B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC3B0);
  }
  return result;
}

uint64_t sub_1AFED8E94()
{
  return swift_getWitnessTable();
}

uint64_t sub_1AFED8EB0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1AFED8ECC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1AFED8EE8()
{
  return swift_getWitnessTable();
}

unint64_t sub_1AFED8F08()
{
  unint64_t result = qword_1EB81B4E8;
  if (!qword_1EB81B4E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB81B4E8);
  }
  return result;
}

unint64_t sub_1AFED8F60()
{
  unint64_t result = qword_1EB81B4F0;
  if (!qword_1EB81B4F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB81B4F0);
  }
  return result;
}

uint64_t sub_1AFED8FC4@<X0>(uint64_t a1@<X8>)
{
  return sub_1AFD2CEB0(v1 + 16, a1);
}

uint64_t sub_1AFED8FE4()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  __swift_destroy_boxed_opaque_existential_1(v0 + 144);
  return v0;
}

uint64_t sub_1AFED9024()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  __swift_destroy_boxed_opaque_existential_1(v0 + 144);

  return swift_deallocClassInstance();
}

uint64_t sub_1AFED907C(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  int v2 = v1;
  if (qword_1EB817C28 != -1) {
    swift_once();
  }
  sub_1AFED95CC();
  sub_1AFFC9BB8();
  if (v29)
  {
    if (v29 == 1)
    {
      sub_1AFD2C4F4();
      int v3 = (void *)sub_1AFFCB638();
      sub_1AFFCB478();
LABEL_6:
      sub_1AFFCA878();

      return 1;
    }
    sub_1AFD2C4F4();
    int v3 = (void *)sub_1AFFCB638();
    sub_1AFFCB478();
    goto LABEL_44;
  }
  uint64_t v5 = v1[11];
  uint64_t v6 = v1[12];
  __swift_project_boxed_opaque_existential_1(v1 + 8, v5);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v6 + 8))(v27, v5, v6);
  sub_1AFD55D10((uint64_t)v27);
  if (v28 != 1) {
    goto LABEL_42;
  }
  if (qword_1EB819AC8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v7 = qword_1EB818960;
  uint64_t v8 = qword_1EB818968;
  if (qword_1EB818960 != 0x313434333431 || qword_1EB818968 != 0xE600000000000000)
  {
    char v9 = sub_1AFFCBCE8();
    BOOL v10 = v7 == 0x343434333431 && v8 == 0xE600000000000000;
    BOOL v11 = v10;
    if ((v9 & 1) == 0 && !v11)
    {
      char v12 = sub_1AFFCBCE8();
      BOOL v13 = v7 == 0x303634333431 && v8 == 0xE600000000000000;
      BOOL v14 = v13;
      if ((v12 & 1) == 0 && !v14)
      {
        char v15 = sub_1AFFCBCE8();
        BOOL v16 = v7 == 0x353534333431 && v8 == 0xE600000000000000;
        BOOL v17 = v16;
        if ((v15 & 1) == 0 && !v17 && (sub_1AFFCBCE8() & 1) == 0)
        {
LABEL_42:
          sub_1AFD2C4F4();
          int v3 = (void *)sub_1AFFCB638();
          sub_1AFFCB478();
LABEL_44:
          sub_1AFFCA878();

          return 0;
        }
      }
    }
  }
  sub_1AFD2CEB0((uint64_t)(v2 + 8), (uint64_t)v26);
  type metadata accessor for NewsRegionCheck();
  uint64_t v18 = swift_allocObject() + 16;
  uint64_t v19 = sub_1AFD80454(v26, v18);
  char v20 = sub_1AFED9644(v19);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v18);
  swift_deallocClassInstance();
  if ((v20 & 1) == 0)
  {
LABEL_43:
    sub_1AFD2C4F4();
    int v3 = (void *)sub_1AFFCB638();
    sub_1AFFCB478();
    goto LABEL_44;
  }
  uint64_t result = (uint64_t)objc_msgSend(self, sel_sharedNetworkReachability);
  if (result)
  {
    uint64_t v21 = (void *)result;
    id v22 = objc_msgSend((id)result, sel_offlineReason);

    if (v22 != (id)3)
    {
      uint64_t v23 = v2 + 13;
      uint64_t v25 = v2[16];
      uint64_t v24 = v2[17];
      __swift_project_boxed_opaque_existential_1(v23, v25);
      LOBYTE(v25) = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 8))(v25, v24);
      sub_1AFD2C4F4();
      int v3 = (void *)sub_1AFFCB638();
      sub_1AFFCB478();
      if (v25) {
        goto LABEL_6;
      }
      goto LABEL_44;
    }
    goto LABEL_43;
  }
  __break(1u);
  return result;
}

unint64_t sub_1AFED95CC()
{
  unint64_t result = qword_1EB817660;
  if (!qword_1EB817660)
  {
    type metadata accessor for FeatureAvailability();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB817660);
  }
  return result;
}

uint64_t type metadata accessor for FeatureAvailability()
{
  return self;
}

uint64_t sub_1AFED9644(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  int v2 = v1;
  uint64_t v3 = sub_1AFFC9A58();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v27[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1AFFC9A78();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  BOOL v10 = (char *)&v27[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFEDBD44(0, (unint64_t *)&qword_1EB818BC0, MEMORY[0x1E4F27A00]);
  MEMORY[0x1F4188790](v11 - 8);
  BOOL v13 = (char *)&v27[-1] - v12;
  id v14 = objc_msgSend(self, sel_currentLocale);
  sub_1AFFC99C8();

  sub_1AFFC9A68();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_1AFFC9A48();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v15 = sub_1AFFC99F8();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15) == 1)
  {
    sub_1AFEDBD98((uint64_t)v13, (unint64_t *)&qword_1EB818BC0, MEMORY[0x1E4F27A00]);
    char v17 = 0;
  }
  else
  {
    uint64_t v18 = sub_1AFFC9968();
    uint64_t v20 = v19;
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
    uint64_t v21 = v2 + 2;
    uint64_t v23 = v2[5];
    uint64_t v22 = v2[6];
    __swift_project_boxed_opaque_existential_1(v21, v23);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v22 + 8))(v27, v23, v22);
    uint64_t v24 = v27[170];
    sub_1AFFC8E38();
    sub_1AFD55D10((uint64_t)v27);
    char v17 = sub_1AFDC0F04(v18, v20, v24);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v17 & 1;
}

uint64_t sub_1AFED998C(uint64_t a1)
{
  if ((sub_1AFED907C(a1) & 1) == 0) {
    return 0;
  }
  if (objc_msgSend(*(id *)(v1 + 56), sel_isPrivateDataSyncingAllowed)) {
    return 1;
  }
  if (qword_1EB810AC0 != -1) {
    swift_once();
  }
  sub_1AFED95CC();
  sub_1AFFC9BB8();
  return v3;
}

id sub_1AFED9A64(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  int v2 = v1;
  if (qword_1EB817BD8 != -1) {
    swift_once();
  }
  sub_1AFED95CC();
  sub_1AFFC9BB8();
  if (v21) {
    return (id)(v21 == 1);
  }
  id v4 = objc_msgSend(self, sel_mainBundle);
  id v5 = objc_msgSend(v4, sel_bundleIdentifier);

  if (!v5)
  {
LABEL_15:
    uint64_t v15 = self;
    uint64_t v16 = v2 + 8;
    uint64_t v18 = v2[11];
    uint64_t v17 = v2[12];
    __swift_project_boxed_opaque_existential_1(v16, v18);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v17 + 8))(v20, v18, v17);
    sub_1AFD55D10((uint64_t)v20);
    return objc_msgSend(v15, sel_enabledForCurrentLevel_, v20[148]);
  }
  uint64_t v6 = sub_1AFFCAE98();
  uint64_t v8 = v7;

  uint64_t v9 = v2[11];
  uint64_t v10 = v2[12];
  __swift_project_boxed_opaque_existential_1(v2 + 8, v9);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v10 + 8))(v20, v9, v10);
  uint64_t v11 = v20[149];
  sub_1AFFC8E38();
  sub_1AFD55D10((uint64_t)v20);
  uint64_t v12 = *(void *)(v11 + 16);
  if (!v12)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  BOOL v13 = (unsigned __int8 *)(v11 + 48);
  while (1)
  {
    uint64_t v3 = *v13;
    BOOL v14 = *((void *)v13 - 2) == v6 && *((void *)v13 - 1) == v8;
    if (v14 || (sub_1AFFCBCE8() & 1) != 0) {
      break;
    }
    v13 += 40;
    if (!--v12) {
      goto LABEL_14;
    }
  }
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (id)v3;
}

uint64_t sub_1AFED9CDC(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v2 = v1[11];
  uint64_t v3 = v1[12];
  __swift_project_boxed_opaque_existential_1(v1 + 8, v2);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v3 + 8))(v7, v2, v3);
  sub_1AFD55D10((uint64_t)v7);
  if (v8)
  {
    unsigned __int8 v4 = objc_msgSend(self, sel_enabledForCurrentLevel_, 0xFFFFFFFFLL);
  }
  else
  {
    uint64_t v5 = v7[506];
    sub_1AFFC9C48();
    sub_1AFFC9C28();
    if (qword_1EB810AD0 != -1) {
      swift_once();
    }
    objc_msgSend(self, sel_enabledForCurrentLevel_, v5);
    unsigned __int8 v4 = sub_1AFFC9C38();
    swift_release();
  }
  return v4 & 1;
}

uint64_t sub_1AFED9E24(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  sub_1AFFC9C48();
  sub_1AFFC9C28();
  if (qword_1E9AF8CD8 != -1) {
    swift_once();
  }
  uint64_t v3 = v1[11];
  uint64_t v2 = v1[12];
  __swift_project_boxed_opaque_existential_1(v1 + 8, v3);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v2 + 8))(v7, v3, v2);
  sub_1AFD55D10((uint64_t)v7);
  if (v8) {
    uint64_t v4 = 0;
  }
  else {
    uint64_t v4 = v7[517];
  }
  objc_msgSend(self, sel_enabledForCurrentLevel_, v4);
  char v5 = sub_1AFFC9C38();
  swift_release();
  return v5 & 1;
}

uint64_t sub_1AFED9F60(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  sub_1AFFC9C48();
  sub_1AFFC9C28();
  if (qword_1E9AF8CE0 != -1) {
    swift_once();
  }
  uint64_t v2 = self;
  uint64_t v4 = v1[11];
  uint64_t v3 = v1[12];
  __swift_project_boxed_opaque_existential_1(v1 + 8, v4);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v3 + 8))(v7, v4, v3);
  sub_1AFD55D10((uint64_t)v7);
  objc_msgSend(v2, sel_enabledForCurrentLevel_, v7[526]);
  char v5 = sub_1AFFC9C38();
  swift_release();
  return v5 & 1;
}

uint64_t sub_1AFEDA088(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  sub_1AFFC9C48();
  sub_1AFFC9C28();
  if (qword_1EB8110A8 != -1) {
    swift_once();
  }
  uint64_t v3 = v1[11];
  uint64_t v2 = v1[12];
  __swift_project_boxed_opaque_existential_1(v1 + 8, v3);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v2 + 8))(v7, v3, v2);
  sub_1AFD55D10((uint64_t)v7);
  if (v8) {
    uint64_t v4 = 0;
  }
  else {
    uint64_t v4 = v7[519];
  }
  objc_msgSend(self, sel_enabledForCurrentLevel_, v4);
  char v5 = sub_1AFFC9C38();
  swift_release();
  return v5 & 1;
}

uint64_t sub_1AFEDA1C4(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v2 = sub_1AFFC9BD8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  char v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB817C60 != -1) {
    swift_once();
  }
  sub_1AFED95CC();
  sub_1AFFC9BB8();
  int v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == *MEMORY[0x1E4FAB278])
  {
    uint64_t v7 = self;
    uint64_t v8 = v1[11];
    uint64_t v9 = v1[12];
    __swift_project_boxed_opaque_existential_1(v1 + 8, v8);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v9 + 8))(v13, v8, v9);
    sub_1AFD55D10((uint64_t)v13);
    unsigned int v10 = objc_msgSend(v7, sel_enabledForCurrentLevel_, v13[527]);
    if (v10)
    {
      uint64_t v11 = __swift_project_boxed_opaque_existential_1(v1 + 18, v1[21]);
      LOBYTE(v10) = sub_1AFEDA45C(*v11 + OBJC_IVAR____TtC10StocksCore18UserRegionProvider_currentRegion);
    }
    return v10 & 1;
  }
  if (v6 == *MEMORY[0x1E4FAB280])
  {
    LOBYTE(v10) = 1;
    return v10 & 1;
  }
  if (v6 == *MEMORY[0x1E4FAB288])
  {
    LOBYTE(v10) = 0;
    return v10 & 1;
  }
  uint64_t result = sub_1AFFCB9A8();
  __break(1u);
  return result;
}

uint64_t sub_1AFEDA45C(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v3 = v2;
  sub_1AFEDBD44(0, (unint64_t *)&qword_1EB818BC0, MEMORY[0x1E4F27A00]);
  MEMORY[0x1F4188790](v4 - 8);
  int v6 = (char *)v16 - v5;
  uint64_t v7 = sub_1AFFC99F8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unsigned int v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFEDBCC4(v3, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1AFEDBD98((uint64_t)v6, (unint64_t *)&qword_1EB818BC0, MEMORY[0x1E4F27A00]);
    char v11 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    uint64_t v12 = v1[11];
    uint64_t v13 = v1[12];
    __swift_project_boxed_opaque_existential_1(v1 + 8, v12);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v13 + 8))(v16, v12, v13);
    uint64_t v14 = v16[528];
    sub_1AFFC8E38();
    sub_1AFD55D10((uint64_t)v16);
    char v11 = sub_1AFDC103C((uint64_t)v10, v14);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  return v11 & 1;
}

uint64_t sub_1AFEDA688(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  sub_1AFFC9C48();
  sub_1AFFC9C28();
  if (qword_1EB811098 != -1) {
    swift_once();
  }
  uint64_t v2 = self;
  uint64_t v4 = v1[11];
  uint64_t v3 = v1[12];
  __swift_project_boxed_opaque_existential_1(v1 + 8, v4);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v3 + 8))(v7, v4, v3);
  sub_1AFD55D10((uint64_t)v7);
  objc_msgSend(v2, sel_enabledForCurrentLevel_, v7[529]);
  char v5 = sub_1AFFC9C38();
  swift_release();
  return v5 & 1;
}

uint64_t sub_1AFEDA7B0(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  sub_1AFFC9C48();
  sub_1AFFC9C28();
  if (qword_1EB817C70 != -1) {
    swift_once();
  }
  uint64_t v2 = self;
  uint64_t v4 = v1[11];
  uint64_t v3 = v1[12];
  __swift_project_boxed_opaque_existential_1(v1 + 8, v4);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v3 + 8))(v7, v4, v3);
  sub_1AFD55D10((uint64_t)v7);
  objc_msgSend(v2, sel_enabledForCurrentLevel_, v7[524]);
  char v5 = sub_1AFFC9C38();
  swift_release();
  return v5 & 1;
}

uint64_t sub_1AFEDA8D8(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  sub_1AFFC9C48();
  sub_1AFFC9C28();
  if (qword_1EB810B28 != -1) {
    swift_once();
  }
  uint64_t v2 = self;
  uint64_t v4 = v1[11];
  uint64_t v3 = v1[12];
  __swift_project_boxed_opaque_existential_1(v1 + 8, v4);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v3 + 8))(v7, v4, v3);
  sub_1AFD55D10((uint64_t)v7);
  objc_msgSend(v2, sel_enabledForCurrentLevel_, v7[171]);
  char v5 = sub_1AFFC9C38();
  swift_release();
  return v5 & 1;
}

uint64_t sub_1AFEDAA00(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  sub_1AFFC9C48();
  sub_1AFFC9C28();
  if (qword_1EB811960 != -1) {
    swift_once();
  }
  uint64_t v2 = self;
  uint64_t v4 = v1[11];
  uint64_t v3 = v1[12];
  __swift_project_boxed_opaque_existential_1(v1 + 8, v4);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v3 + 8))(v7, v4, v3);
  sub_1AFD55D10((uint64_t)v7);
  objc_msgSend(v2, sel_enabledForCurrentLevel_, v7[172]);
  char v5 = sub_1AFFC9C38();
  swift_release();
  return v5 & 1;
}

uint64_t sub_1AFEDAB28(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  sub_1AFFC9C48();
  sub_1AFFC9C28();
  if (qword_1EB810A78 != -1) {
    swift_once();
  }
  uint64_t v2 = self;
  uint64_t v4 = v1[11];
  uint64_t v3 = v1[12];
  __swift_project_boxed_opaque_existential_1(v1 + 8, v4);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v3 + 8))(v7, v4, v3);
  sub_1AFD55D10((uint64_t)v7);
  objc_msgSend(v2, sel_enabledForCurrentLevel_, v7[533]);
  char v5 = sub_1AFFC9C38();
  swift_release();
  return v5 & 1;
}

uint64_t sub_1AFEDAC50(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  sub_1AFFC9C48();
  sub_1AFFC9C28();
  if (qword_1EB811A98 != -1) {
    swift_once();
  }
  uint64_t v2 = self;
  uint64_t v4 = v1[11];
  uint64_t v3 = v1[12];
  __swift_project_boxed_opaque_existential_1(v1 + 8, v4);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v3 + 8))(v7, v4, v3);
  sub_1AFD55D10((uint64_t)v7);
  objc_msgSend(v2, sel_enabledForCurrentLevel_, v7[176]);
  char v5 = sub_1AFFC9C38();
  swift_release();
  return v5 & 1;
}

uint64_t sub_1AFEDAD78(uint64_t a1)
{
  return sub_1AFED907C(a1) & 1;
}

uint64_t sub_1AFEDADA0(uint64_t a1)
{
  uint64_t v2 = *v1;
  if ((sub_1AFED907C(a1) & 1) == 0) {
    return 0;
  }
  if (objc_msgSend(*(id *)(v2 + 56), sel_isPrivateDataSyncingAllowed)) {
    return 1;
  }
  if (qword_1EB810AC0 != -1) {
    swift_once();
  }
  sub_1AFED95CC();
  sub_1AFFC9BB8();
  return v4;
}

unint64_t sub_1AFEDAE58(uint64_t a1)
{
  return (unint64_t)sub_1AFED9A64(a1) & 1;
}

uint64_t sub_1AFEDAE80(uint64_t a1)
{
  return sub_1AFED9CDC(a1) & 1;
}

uint64_t sub_1AFEDAEA8(uint64_t a1)
{
  return sub_1AFED9E24(a1) & 1;
}

uint64_t sub_1AFEDAED0(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v2 = (void *)*v1;
  sub_1AFFC9C48();
  sub_1AFFC9C28();
  if (qword_1E9AF8CE0 != -1) {
    swift_once();
  }
  uint64_t v3 = self;
  unsigned __int8 v4 = v2 + 8;
  uint64_t v5 = v2[11];
  uint64_t v6 = v2[12];
  __swift_project_boxed_opaque_existential_1(v4, v5);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v6 + 8))(v9, v5, v6);
  sub_1AFD55D10((uint64_t)v9);
  objc_msgSend(v3, sel_enabledForCurrentLevel_, v9[526]);
  char v7 = sub_1AFFC9C38();
  swift_release();
  return v7 & 1;
}

uint64_t sub_1AFEDAFF8(uint64_t a1)
{
  return sub_1AFEDA088(a1) & 1;
}

uint64_t sub_1AFEDB020(uint64_t a1)
{
  return sub_1AFEDA1C4(a1) & 1;
}

uint64_t sub_1AFEDB048(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v2 = (void *)*v1;
  sub_1AFFC9C48();
  sub_1AFFC9C28();
  if (qword_1EB811098 != -1) {
    swift_once();
  }
  uint64_t v3 = self;
  unsigned __int8 v4 = v2 + 8;
  uint64_t v5 = v2[11];
  uint64_t v6 = v2[12];
  __swift_project_boxed_opaque_existential_1(v4, v5);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v6 + 8))(v9, v5, v6);
  sub_1AFD55D10((uint64_t)v9);
  objc_msgSend(v3, sel_enabledForCurrentLevel_, v9[529]);
  char v7 = sub_1AFFC9C38();
  swift_release();
  return v7 & 1;
}

uint64_t sub_1AFEDB170(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v2 = (void *)*v1;
  sub_1AFFC9C48();
  sub_1AFFC9C28();
  if (qword_1EB817C70 != -1) {
    swift_once();
  }
  uint64_t v3 = self;
  unsigned __int8 v4 = v2 + 8;
  uint64_t v5 = v2[11];
  uint64_t v6 = v2[12];
  __swift_project_boxed_opaque_existential_1(v4, v5);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v6 + 8))(v9, v5, v6);
  sub_1AFD55D10((uint64_t)v9);
  objc_msgSend(v3, sel_enabledForCurrentLevel_, v9[524]);
  char v7 = sub_1AFFC9C38();
  swift_release();
  return v7 & 1;
}

uint64_t sub_1AFEDB298(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v2 = (void *)*v1;
  sub_1AFFC9C48();
  sub_1AFFC9C28();
  if (qword_1EB810B28 != -1) {
    swift_once();
  }
  uint64_t v3 = self;
  unsigned __int8 v4 = v2 + 8;
  uint64_t v5 = v2[11];
  uint64_t v6 = v2[12];
  __swift_project_boxed_opaque_existential_1(v4, v5);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v6 + 8))(v9, v5, v6);
  sub_1AFD55D10((uint64_t)v9);
  objc_msgSend(v3, sel_enabledForCurrentLevel_, v9[171]);
  char v7 = sub_1AFFC9C38();
  swift_release();
  return v7 & 1;
}

uint64_t sub_1AFEDB3C0(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v2 = (void *)*v1;
  sub_1AFFC9C48();
  sub_1AFFC9C28();
  if (qword_1EB811960 != -1) {
    swift_once();
  }
  uint64_t v3 = self;
  unsigned __int8 v4 = v2 + 8;
  uint64_t v5 = v2[11];
  uint64_t v6 = v2[12];
  __swift_project_boxed_opaque_existential_1(v4, v5);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v6 + 8))(v9, v5, v6);
  sub_1AFD55D10((uint64_t)v9);
  objc_msgSend(v3, sel_enabledForCurrentLevel_, v9[172]);
  char v7 = sub_1AFFC9C38();
  swift_release();
  return v7 & 1;
}

uint64_t sub_1AFEDB4E8(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v2 = (void *)*v1;
  sub_1AFFC9C48();
  sub_1AFFC9C28();
  if (qword_1EB810A78 != -1) {
    swift_once();
  }
  uint64_t v3 = self;
  unsigned __int8 v4 = v2 + 8;
  uint64_t v5 = v2[11];
  uint64_t v6 = v2[12];
  __swift_project_boxed_opaque_existential_1(v4, v5);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v6 + 8))(v9, v5, v6);
  sub_1AFD55D10((uint64_t)v9);
  objc_msgSend(v3, sel_enabledForCurrentLevel_, v9[533]);
  char v7 = sub_1AFFC9C38();
  swift_release();
  return v7 & 1;
}

uint64_t sub_1AFEDB610@<X0>(uint64_t a1@<X8>)
{
  return sub_1AFD2CEB0(*v1 + 16, a1);
}

uint64_t sub_1AFEDB634(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v2 = (void *)*v1;
  sub_1AFFC9C48();
  sub_1AFFC9C28();
  if (qword_1EB811A98 != -1) {
    swift_once();
  }
  uint64_t v3 = self;
  unsigned __int8 v4 = v2 + 8;
  uint64_t v5 = v2[11];
  uint64_t v6 = v2[12];
  __swift_project_boxed_opaque_existential_1(v4, v5);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v6 + 8))(v9, v5, v6);
  sub_1AFD55D10((uint64_t)v9);
  objc_msgSend(v3, sel_enabledForCurrentLevel_, v9[176]);
  char v7 = sub_1AFFC9C38();
  swift_release();
  return v7 & 1;
}

uint64_t type metadata accessor for NewsRegionCheck()
{
  return self;
}

BOOL sub_1AFEDB7B8()
{
  uint64_t v0 = sub_1AFFC9A58();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1AFFC9A78();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFEDBD44(0, &qword_1EB816CC8, MEMORY[0x1E4F279D8]);
  MEMORY[0x1F4188790](v8 - 8);
  unsigned int v10 = (char *)&v20 - v9;
  if (qword_1EB819AC8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v12 = qword_1EB818960;
  uint64_t v11 = qword_1EB818968;
  sub_1AFFC8E38();
  sub_1AFFC9A28();
  sub_1AFFC9A68();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1AFFC9A38();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v13 = sub_1AFFC9978();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v10, 1, v13) == 1)
  {
    sub_1AFEDBD98((uint64_t)v10, &qword_1EB816CC8, MEMORY[0x1E4F279D8]);
    uint64_t v15 = 0;
    uint64_t v16 = 0;
  }
  else
  {
    uint64_t v15 = sub_1AFFC9968();
    uint64_t v16 = v17;
    (*(void (**)(char *, uint64_t))(v14 + 8))(v10, v13);
  }
  if ((v12 != 0x353534333431 || v11 != 0xE600000000000000) && (sub_1AFFCBCE8() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  if (!v16)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v15 == 29286 && v16 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 1;
  }
  char v19 = sub_1AFFCBCE8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (v19 & 1) != 0;
}

uint64_t sub_1AFEDBB6C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1AFEDBB80(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1AFEDBB94(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_1AFEDBBA8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_1AFEDBBBC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t sub_1AFEDBBD0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t sub_1AFEDBBE4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t sub_1AFEDBBF8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t sub_1AFEDBC0C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t sub_1AFEDBC20(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t sub_1AFEDBC34(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t sub_1AFEDBC48(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t sub_1AFEDBC5C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t sub_1AFEDBC70(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t sub_1AFEDBC84(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t sub_1AFEDBC98(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))();
}

uint64_t sub_1AFEDBCAC(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeatureAvailability);
}

uint64_t sub_1AFEDBCC4(uint64_t a1, uint64_t a2)
{
  sub_1AFEDBD44(0, (unint64_t *)&qword_1EB818BC0, MEMORY[0x1E4F27A00]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1AFEDBD44(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1AFFCB658();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1AFEDBD98(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1AFEDBD44(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t StockPriceData.quotes.getter()
{
  return sub_1AFFC8E38();
}

uint64_t StockPriceData.sparklines.getter()
{
  return sub_1AFFC8E38();
}

unint64_t sub_1AFEDBE04()
{
  uint64_t v0 = MEMORY[0x1E4FBC860];
  unint64_t v1 = sub_1AFDFA02C(MEMORY[0x1E4FBC860]);
  unint64_t result = sub_1AFDF9C40(v0);
  qword_1EB811418 = v1;
  unk_1EB811420 = result;
  return result;
}

uint64_t static StockPriceData.empty.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EB811428 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_1EB811420;
  *a1 = qword_1EB811418;
  a1[1] = v2;
  sub_1AFFC8E38();

  return sub_1AFFC8E38();
}

unint64_t StockPriceData.description.getter()
{
  return 0xD000000000000017;
}

void sub_1AFEDC00C()
{
  if (!qword_1E9AFC3B8)
  {
    type metadata accessor for Chart(255);
    unint64_t v0 = sub_1AFFCACE8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9AFC3B8);
    }
  }
}

unint64_t sub_1AFEDC074()
{
  unint64_t result = qword_1E9AFC3C0;
  if (!qword_1E9AFC3C0)
  {
    sub_1AFEDC00C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC3C0);
  }
  return result;
}

StocksCore::StockPriceData __swiftcall StockPriceData.merge(other:)(StocksCore::StockPriceData other)
{
  uint64_t v3 = v1;
  uint64_t v5 = *v2;
  uint64_t v4 = v2[1];
  sub_1AFFC8E38();
  uint64_t v6 = sub_1AFFC8E38();
  uint64_t v7 = sub_1AFEDC19C(v6, v5, (uint64_t)sub_1AFEDC264, (void (*)(uint64_t, uint64_t, void, uint64_t, uint64_t *))sub_1AFEDC734);
  sub_1AFFC8E38();
  uint64_t v8 = sub_1AFFC8E38();
  uint64_t v9 = (void *)sub_1AFEDC19C(v8, v4, (uint64_t)sub_1AFEDC23C, (void (*)(uint64_t, uint64_t, void, uint64_t, uint64_t *))sub_1AFEDC318);
  *uint64_t v3 = v7;
  v3[1] = (uint64_t)v9;
  result.sparklines._rawValue = v10;
  result.quotes._rawValue = v9;
  return result;
}

uint64_t sub_1AFEDC19C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, void, uint64_t, uint64_t *))
{
  uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v12 = a2;
  a4(a1, a3, 0, isUniquelyReferenced_nonNull_native, &v12);
  uint64_t v10 = v12;
  swift_bridgeObjectRelease();
  if (v4) {
    swift_bridgeObjectRelease();
  }
  return v10;
}

ValueMetadata *type metadata accessor for StockPriceData()
{
  return &type metadata for StockPriceData;
}

uint64_t sub_1AFEDC23C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1AFEDC28C(a1, &qword_1EB817EF8, (void (*)(uint64_t))type metadata accessor for Chart, (unint64_t *)&qword_1EB817F18, a2);
}

uint64_t sub_1AFEDC264@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1AFEDC28C(a1, (unint64_t *)&qword_1EB817F00, (void (*)(uint64_t))type metadata accessor for Quote, (unint64_t *)&qword_1EB811450, a2);
}

uint64_t sub_1AFEDC28C@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X1>, void (*a3)(uint64_t)@<X2>, unint64_t *a4@<X3>, void *a5@<X8>)
{
  sub_1AFEDD110(0, a2, a3);
  uint64_t v10 = (uint64_t)a1 + *(int *)(v9 + 48);
  sub_1AFEDD178(0, a4, a3);
  uint64_t v13 = *a1;
  uint64_t v12 = a1[1];
  sub_1AFEDD1DC(v10, (uint64_t)a5 + *(int *)(v11 + 48), (uint64_t (*)(void))a3);
  *a5 = v13;
  a5[1] = v12;

  return sub_1AFFC8E38();
}

uint64_t sub_1AFEDC318(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  long long v58 = a5;
  uint64_t v9 = type metadata accessor for Chart(0);
  uint64_t v50 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v47 = (uint64_t)v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v46 - v12;
  sub_1AFEDCFEC(0, &qword_1EB81B4F8, (uint64_t)&qword_1EB817F18, (uint64_t)type metadata accessor for Chart, (void (*)(uint64_t, uint64_t, uint64_t))sub_1AFEDD178);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (void *)((char *)v46 - v15);
  uint64_t v17 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v18 = ~v17;
  uint64_t v19 = *(void *)(a1 + 64);
  uint64_t v20 = -v17;
  uint64_t v51 = a1;
  uint64_t v52 = a1 + 64;
  if (v20 < 64) {
    uint64_t v21 = ~(-1 << v20);
  }
  else {
    uint64_t v21 = -1;
  }
  uint64_t v53 = v18;
  uint64_t v54 = 0;
  uint64_t v55 = v21 & v19;
  uint64_t v56 = a2;
  uint64_t v57 = a3;
  v46[1] = a1;
  sub_1AFFC8E38();
  v46[0] = a3;
  sub_1AFFC8E48();
  sub_1AFEDCB50((uint64_t)v16);
  sub_1AFEDD178(0, (unint64_t *)&qword_1EB817F18, (void (*)(uint64_t))type metadata accessor for Chart);
  uint64_t v23 = v22;
  uint64_t v24 = *(void *)(v22 - 8);
  uint64_t v25 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v24 + 48);
  uint64_t v48 = v24 + 48;
  uint64_t v49 = v25;
  for (int i = v25(v16, 1, v22); ; int i = v49(v16, 1, v23))
  {
    if (i == 1)
    {
      swift_release();
      swift_bridgeObjectRelease();
      sub_1AFD762B0();
      return swift_release();
    }
    uint64_t v29 = *v16;
    uint64_t v28 = v16[1];
    uint64_t v30 = (uint64_t)v13;
    sub_1AFEDD6E0((uint64_t)v16 + *(int *)(v23 + 48), (uint64_t)v13, type metadata accessor for Chart);
    uint64_t v31 = *v58;
    unint64_t v33 = sub_1AFD79CC8(v29, v28);
    uint64_t v34 = *(void *)(v31 + 16);
    BOOL v35 = (v32 & 1) == 0;
    uint64_t v36 = v34 + v35;
    if (__OFADD__(v34, v35)) {
      break;
    }
    char v37 = v32;
    if (*(void *)(v31 + 24) >= v36)
    {
      if (a4)
      {
        if (v32) {
          goto LABEL_5;
        }
      }
      else
      {
        sub_1AFEB98A8();
        if (v37) {
          goto LABEL_5;
        }
      }
    }
    else
    {
      sub_1AFEB48AC(v36, a4 & 1);
      unint64_t v38 = sub_1AFD79CC8(v29, v28);
      if ((v37 & 1) != (v39 & 1)) {
        goto LABEL_22;
      }
      unint64_t v33 = v38;
      if (v37)
      {
LABEL_5:
        uint64_t v13 = (char *)v30;
        uint64_t v27 = v47;
        sub_1AFEDD1DC(v30, v47, type metadata accessor for Chart);
        sub_1AFEDD748(v30, type metadata accessor for Chart);
        swift_bridgeObjectRelease();
        sub_1AFEDD7A8(v27, *(void *)(*v58 + 56) + *(void *)(v50 + 72) * v33, type metadata accessor for Chart);
        goto LABEL_6;
      }
    }
    uint64_t v40 = (void *)*v58;
    *(void *)(*v58 + 8 * (v33 >> 6) + 64) |= 1 << v33;
    uint64_t v41 = (uint64_t *)(v40[6] + 16 * v33);
    uint64_t *v41 = v29;
    v41[1] = v28;
    uint64_t v13 = (char *)v30;
    sub_1AFEDD6E0(v30, v40[7] + *(void *)(v50 + 72) * v33, type metadata accessor for Chart);
    uint64_t v42 = v40[2];
    BOOL v43 = __OFADD__(v42, 1);
    uint64_t v44 = v42 + 1;
    if (v43) {
      goto LABEL_21;
    }
    v40[2] = v44;
LABEL_6:
    sub_1AFEDCB50((uint64_t)v16);
    a4 = 1;
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  uint64_t result = sub_1AFFCBD68();
  __break(1u);
  return result;
}

uint64_t sub_1AFEDC734(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  long long v58 = a5;
  uint64_t v9 = type metadata accessor for Quote();
  uint64_t v50 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v47 = (uint64_t)v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v46 - v12;
  sub_1AFEDCFEC(0, &qword_1E9AFC3C8, (uint64_t)&qword_1EB811450, (uint64_t)type metadata accessor for Quote, (void (*)(uint64_t, uint64_t, uint64_t))sub_1AFEDD178);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (void *)((char *)v46 - v15);
  uint64_t v17 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v18 = ~v17;
  uint64_t v19 = *(void *)(a1 + 64);
  uint64_t v20 = -v17;
  uint64_t v51 = a1;
  uint64_t v52 = a1 + 64;
  if (v20 < 64) {
    uint64_t v21 = ~(-1 << v20);
  }
  else {
    uint64_t v21 = -1;
  }
  uint64_t v53 = v18;
  uint64_t v54 = 0;
  uint64_t v55 = v21 & v19;
  uint64_t v56 = a2;
  uint64_t v57 = a3;
  v46[1] = a1;
  sub_1AFFC8E38();
  v46[0] = a3;
  sub_1AFFC8E48();
  sub_1AFEDD244((uint64_t)v16);
  sub_1AFEDD178(0, (unint64_t *)&qword_1EB811450, (void (*)(uint64_t))type metadata accessor for Quote);
  uint64_t v23 = v22;
  uint64_t v24 = *(void *)(v22 - 8);
  uint64_t v25 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v24 + 48);
  uint64_t v48 = v24 + 48;
  uint64_t v49 = v25;
  for (int i = v25(v16, 1, v22); ; int i = v49(v16, 1, v23))
  {
    if (i == 1)
    {
      swift_release();
      swift_bridgeObjectRelease();
      sub_1AFD762B0();
      return swift_release();
    }
    uint64_t v29 = *v16;
    uint64_t v28 = v16[1];
    uint64_t v30 = (uint64_t)v13;
    sub_1AFEDD6E0((uint64_t)v16 + *(int *)(v23 + 48), (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for Quote);
    uint64_t v31 = *v58;
    unint64_t v33 = sub_1AFD79CC8(v29, v28);
    uint64_t v34 = *(void *)(v31 + 16);
    BOOL v35 = (v32 & 1) == 0;
    uint64_t v36 = v34 + v35;
    if (__OFADD__(v34, v35)) {
      break;
    }
    char v37 = v32;
    if (*(void *)(v31 + 24) >= v36)
    {
      if (a4)
      {
        if (v32) {
          goto LABEL_5;
        }
      }
      else
      {
        sub_1AFEB84DC();
        if (v37) {
          goto LABEL_5;
        }
      }
    }
    else
    {
      sub_1AFEB2744(v36, a4 & 1);
      unint64_t v38 = sub_1AFD79CC8(v29, v28);
      if ((v37 & 1) != (v39 & 1)) {
        goto LABEL_22;
      }
      unint64_t v33 = v38;
      if (v37)
      {
LABEL_5:
        uint64_t v13 = (char *)v30;
        uint64_t v27 = v47;
        sub_1AFEDD1DC(v30, v47, (uint64_t (*)(void))type metadata accessor for Quote);
        sub_1AFEDD748(v30, (uint64_t (*)(void))type metadata accessor for Quote);
        swift_bridgeObjectRelease();
        sub_1AFEDD7A8(v27, *(void *)(*v58 + 56) + *(void *)(v50 + 72) * v33, (uint64_t (*)(void))type metadata accessor for Quote);
        goto LABEL_6;
      }
    }
    uint64_t v40 = (void *)*v58;
    *(void *)(*v58 + 8 * (v33 >> 6) + 64) |= 1 << v33;
    uint64_t v41 = (uint64_t *)(v40[6] + 16 * v33);
    uint64_t *v41 = v29;
    v41[1] = v28;
    uint64_t v13 = (char *)v30;
    sub_1AFEDD6E0(v30, v40[7] + *(void *)(v50 + 72) * v33, (uint64_t (*)(void))type metadata accessor for Quote);
    uint64_t v42 = v40[2];
    BOOL v43 = __OFADD__(v42, 1);
    uint64_t v44 = v42 + 1;
    if (v43) {
      goto LABEL_21;
    }
    v40[2] = v44;
LABEL_6:
    sub_1AFEDD244((uint64_t)v16);
    a4 = 1;
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  uint64_t result = sub_1AFFCBD68();
  __break(1u);
  return result;
}

uint64_t sub_1AFEDCB50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v47 = a1;
  sub_1AFEDD110(0, &qword_1EB817EF8, (void (*)(uint64_t))type metadata accessor for Chart);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v42 - v5;
  sub_1AFEDCFEC(0, &qword_1EB816AA0, (uint64_t)&qword_1EB817EF8, (uint64_t)type metadata accessor for Chart, (void (*)(uint64_t, uint64_t, uint64_t))sub_1AFEDD110);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12.n128_f64[0] = MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char **)((char *)&v42 - v11);
  uint64_t v15 = *v1;
  uint64_t v14 = v1[1];
  uint64_t v17 = v1[2];
  int64_t v16 = v1[3];
  int64_t v18 = v16;
  unint64_t v19 = v1[4];
  uint64_t v42 = v6;
  if (v19)
  {
    uint64_t v45 = v9;
    int64_t v46 = v16;
    uint64_t v43 = v17;
    uint64_t v44 = v14;
    uint64_t v20 = v3;
    uint64_t v21 = (v19 - 1) & v19;
    unint64_t v22 = __clz(__rbit64(v19)) | (v16 << 6);
LABEL_3:
    uint64_t v23 = *(void *)(v15 + 56);
    uint64_t v24 = (uint64_t *)(*(void *)(v15 + 48) + 16 * v22);
    uint64_t v25 = v15;
    uint64_t v27 = *v24;
    uint64_t v26 = v24[1];
    uint64_t v28 = v23 + *(void *)(*(void *)(type metadata accessor for Chart(0) - 8) + 72) * v22;
    uint64_t v3 = v20;
    sub_1AFEDD1DC(v28, (uint64_t)v13 + *(int *)(v20 + 48), type metadata accessor for Chart);
    *uint64_t v13 = v27;
    v13[1] = v26;
    (*(void (**)(void *, void, uint64_t, uint64_t))(v4 + 56))(v13, 0, 1, v20);
    uint64_t v15 = v25;
    sub_1AFFC8E38();
    uint64_t v14 = v44;
    uint64_t v9 = v45;
    uint64_t v17 = v43;
    goto LABEL_25;
  }
  int64_t v29 = v16 + 1;
  if (__OFADD__(v16, 1))
  {
    __break(1u);
LABEL_23:
    int64_t v18 = v11;
    goto LABEL_24;
  }
  int64_t v30 = (unint64_t)(v17 + 64) >> 6;
  if (v29 < v30)
  {
    unint64_t v31 = *(void *)(v14 + 8 * v29);
    if (v31)
    {
LABEL_7:
      uint64_t v43 = v17;
      uint64_t v44 = v14;
      uint64_t v45 = v9;
      int64_t v46 = v29;
      uint64_t v20 = v3;
      uint64_t v21 = (v31 - 1) & v31;
      unint64_t v22 = __clz(__rbit64(v31)) + (v29 << 6);
      goto LABEL_3;
    }
    int64_t v32 = v16 + 2;
    int64_t v18 = v16 + 1;
    if (v16 + 2 < v30)
    {
      unint64_t v31 = *(void *)(v14 + 8 * v32);
      if (v31)
      {
LABEL_10:
        int64_t v29 = v32;
        goto LABEL_7;
      }
      int64_t v18 = v16 + 2;
      if (v16 + 3 < v30)
      {
        unint64_t v31 = *(void *)(v14 + 8 * (v16 + 3));
        if (v31)
        {
          int64_t v29 = v16 + 3;
          goto LABEL_7;
        }
        int64_t v32 = v16 + 4;
        int64_t v18 = v16 + 3;
        if (v16 + 4 < v30)
        {
          unint64_t v31 = *(void *)(v14 + 8 * v32);
          if (v31) {
            goto LABEL_10;
          }
          int64_t v29 = v16 + 5;
          int64_t v18 = v16 + 4;
          if (v16 + 5 < v30)
          {
            unint64_t v31 = *(void *)(v14 + 8 * v29);
            if (v31) {
              goto LABEL_7;
            }
            int64_t v11 = v30 - 1;
            uint64_t v33 = v16 + 6;
            while (v30 != v33)
            {
              unint64_t v31 = *(void *)(v14 + 8 * v33++);
              if (v31)
              {
                int64_t v29 = v33 - 1;
                goto LABEL_7;
              }
            }
            goto LABEL_23;
          }
        }
      }
    }
  }
LABEL_24:
  int64_t v46 = v18;
  (*(void (**)(void *, uint64_t, uint64_t, uint64_t, __n128))(v4 + 56))(v13, 1, 1, v3, v12);
  uint64_t v21 = 0;
LABEL_25:
  *uint64_t v1 = v15;
  v1[1] = v14;
  int64_t v34 = v46;
  v1[2] = v17;
  v1[3] = v34;
  v1[4] = v21;
  BOOL v35 = (void (*)(uint64_t))v1[5];
  sub_1AFEDD810((uint64_t)v13, (uint64_t)v9, &qword_1EB816AA0, (uint64_t)&qword_1EB817EF8, (uint64_t)type metadata accessor for Chart);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3) == 1)
  {
    sub_1AFEDD178(0, (unint64_t *)&qword_1EB817F18, (void (*)(uint64_t))type metadata accessor for Chart);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v47, 1, 1, v36);
  }
  else
  {
    uint64_t v38 = (uint64_t)v9;
    uint64_t v39 = (uint64_t)v42;
    sub_1AFEDD048(v38, (uint64_t)v42, &qword_1EB817EF8, (void (*)(uint64_t))type metadata accessor for Chart);
    uint64_t v40 = v47;
    v35(v39);
    sub_1AFEDD0B4(v39, &qword_1EB817EF8, (void (*)(uint64_t))type metadata accessor for Chart);
    sub_1AFEDD178(0, (unint64_t *)&qword_1EB817F18, (void (*)(uint64_t))type metadata accessor for Chart);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v40, 0, 1, v41);
  }
}

void sub_1AFEDCFEC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    a5(255, a3, a4);
    unint64_t v6 = sub_1AFFCB658();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1AFEDD048(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1AFEDD110(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1AFEDD0B4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1AFEDD110(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1AFEDD110(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_1AFEDD178(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_1AFEDD1DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1AFEDD244@<X0>(uint64_t a1@<X8>)
{
  uint64_t v47 = a1;
  sub_1AFEDD110(0, (unint64_t *)&qword_1EB817F00, (void (*)(uint64_t))type metadata accessor for Quote);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v42 - v5;
  sub_1AFEDCFEC(0, &qword_1EB817F08, (uint64_t)&qword_1EB817F00, (uint64_t)type metadata accessor for Quote, (void (*)(uint64_t, uint64_t, uint64_t))sub_1AFEDD110);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12.n128_f64[0] = MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char **)((char *)&v42 - v11);
  uint64_t v15 = *v1;
  uint64_t v14 = v1[1];
  uint64_t v17 = v1[2];
  int64_t v16 = v1[3];
  int64_t v18 = v16;
  unint64_t v19 = v1[4];
  uint64_t v42 = v6;
  if (v19)
  {
    uint64_t v45 = v9;
    int64_t v46 = v16;
    uint64_t v43 = v17;
    uint64_t v44 = v14;
    uint64_t v20 = v3;
    uint64_t v21 = (v19 - 1) & v19;
    unint64_t v22 = __clz(__rbit64(v19)) | (v16 << 6);
LABEL_3:
    uint64_t v23 = *(void *)(v15 + 56);
    uint64_t v24 = (uint64_t *)(*(void *)(v15 + 48) + 16 * v22);
    uint64_t v25 = v15;
    uint64_t v27 = *v24;
    uint64_t v26 = v24[1];
    uint64_t v28 = v23 + *(void *)(*(void *)(type metadata accessor for Quote() - 8) + 72) * v22;
    uint64_t v3 = v20;
    sub_1AFEDD1DC(v28, (uint64_t)v13 + *(int *)(v20 + 48), (uint64_t (*)(void))type metadata accessor for Quote);
    *uint64_t v13 = v27;
    v13[1] = v26;
    (*(void (**)(void *, void, uint64_t, uint64_t))(v4 + 56))(v13, 0, 1, v20);
    uint64_t v15 = v25;
    sub_1AFFC8E38();
    uint64_t v14 = v44;
    uint64_t v9 = v45;
    uint64_t v17 = v43;
    goto LABEL_25;
  }
  int64_t v29 = v16 + 1;
  if (__OFADD__(v16, 1))
  {
    __break(1u);
LABEL_23:
    int64_t v18 = v11;
    goto LABEL_24;
  }
  int64_t v30 = (unint64_t)(v17 + 64) >> 6;
  if (v29 < v30)
  {
    unint64_t v31 = *(void *)(v14 + 8 * v29);
    if (v31)
    {
LABEL_7:
      uint64_t v43 = v17;
      uint64_t v44 = v14;
      uint64_t v45 = v9;
      int64_t v46 = v29;
      uint64_t v20 = v3;
      uint64_t v21 = (v31 - 1) & v31;
      unint64_t v22 = __clz(__rbit64(v31)) + (v29 << 6);
      goto LABEL_3;
    }
    int64_t v32 = v16 + 2;
    int64_t v18 = v16 + 1;
    if (v16 + 2 < v30)
    {
      unint64_t v31 = *(void *)(v14 + 8 * v32);
      if (v31)
      {
LABEL_10:
        int64_t v29 = v32;
        goto LABEL_7;
      }
      int64_t v18 = v16 + 2;
      if (v16 + 3 < v30)
      {
        unint64_t v31 = *(void *)(v14 + 8 * (v16 + 3));
        if (v31)
        {
          int64_t v29 = v16 + 3;
          goto LABEL_7;
        }
        int64_t v32 = v16 + 4;
        int64_t v18 = v16 + 3;
        if (v16 + 4 < v30)
        {
          unint64_t v31 = *(void *)(v14 + 8 * v32);
          if (v31) {
            goto LABEL_10;
          }
          int64_t v29 = v16 + 5;
          int64_t v18 = v16 + 4;
          if (v16 + 5 < v30)
          {
            unint64_t v31 = *(void *)(v14 + 8 * v29);
            if (v31) {
              goto LABEL_7;
            }
            int64_t v11 = v30 - 1;
            uint64_t v33 = v16 + 6;
            while (v30 != v33)
            {
              unint64_t v31 = *(void *)(v14 + 8 * v33++);
              if (v31)
              {
                int64_t v29 = v33 - 1;
                goto LABEL_7;
              }
            }
            goto LABEL_23;
          }
        }
      }
    }
  }
LABEL_24:
  int64_t v46 = v18;
  (*(void (**)(void *, uint64_t, uint64_t, uint64_t, __n128))(v4 + 56))(v13, 1, 1, v3, v12);
  uint64_t v21 = 0;
LABEL_25:
  *uint64_t v1 = v15;
  v1[1] = v14;
  int64_t v34 = v46;
  v1[2] = v17;
  v1[3] = v34;
  v1[4] = v21;
  BOOL v35 = (void (*)(uint64_t))v1[5];
  sub_1AFEDD810((uint64_t)v13, (uint64_t)v9, &qword_1EB817F08, (uint64_t)&qword_1EB817F00, (uint64_t)type metadata accessor for Quote);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3) == 1)
  {
    sub_1AFEDD178(0, (unint64_t *)&qword_1EB811450, (void (*)(uint64_t))type metadata accessor for Quote);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v47, 1, 1, v36);
  }
  else
  {
    uint64_t v38 = (uint64_t)v9;
    uint64_t v39 = (uint64_t)v42;
    sub_1AFEDD048(v38, (uint64_t)v42, (unint64_t *)&qword_1EB817F00, (void (*)(uint64_t))type metadata accessor for Quote);
    uint64_t v40 = v47;
    v35(v39);
    sub_1AFEDD0B4(v39, (unint64_t *)&qword_1EB817F00, (void (*)(uint64_t))type metadata accessor for Quote);
    sub_1AFEDD178(0, (unint64_t *)&qword_1EB811450, (void (*)(uint64_t))type metadata accessor for Quote);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v40, 0, 1, v41);
  }
}

uint64_t sub_1AFEDD6E0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1AFEDD748(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1AFEDD7A8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_1AFEDD810(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4, uint64_t a5)
{
  sub_1AFEDCFEC(0, a3, a4, a5, (void (*)(uint64_t, uint64_t, uint64_t))sub_1AFEDD110);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(a2, a1, v7);
  return a2;
}

uint64_t sub_1AFEDD894(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1AFEDD8A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_1AFEDD8BC(uint64_t a1)
{
  uint64_t v24 = a1;
  uint64_t v23 = sub_1AFFC9E08();
  uint64_t v20 = *(void *)(v23 - 8);
  uint64_t v21 = v20;
  MEMORY[0x1F4188790](v23);
  unint64_t v22 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1AFFCB488();
  MEMORY[0x1F4188790](v19);
  int64_t v18 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1AFFCB4A8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1AFFCAC18();
  MEMORY[0x1F4188790](v8 - 8);
  *(void *)(v1 + 16) = MEMORY[0x1E4FBC868];
  uint64_t v16 = sub_1AFD8F6AC(0, (unint64_t *)&qword_1EB819E68);
  sub_1AFFCAC08();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBCC68], v4);
  uint64_t v25 = MEMORY[0x1E4FBC860];
  sub_1AFEE0290(&qword_1EB819E60, MEMORY[0x1E4FBCC10]);
  uint64_t v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCC10];
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB320];
  sub_1AFEDFF8C(0, &qword_1EB819DE8, MEMORY[0x1E4FBCC10], MEMORY[0x1E4FBB320]);
  sub_1AFEE02D8((unint64_t *)&qword_1EB819DF0, &qword_1EB819DE8, v9);
  sub_1AFFCB738();
  uint64_t v11 = sub_1AFFCB4D8();
  uint64_t v12 = v17;
  *(void *)(v17 + 24) = v11;
  uint64_t v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAA910];
  sub_1AFEDFF8C(0, &qword_1EB81A450, MEMORY[0x1E4FAA910], MEMORY[0x1E4FBBE00]);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1AFFD05F0;
  sub_1AFFC9DF8();
  uint64_t v25 = v14;
  sub_1AFEE0290((unint64_t *)&unk_1EB81ABB0, MEMORY[0x1E4FAA910]);
  sub_1AFEDFF8C(0, (unint64_t *)&unk_1EB81AC20, v13, v10);
  sub_1AFEE02D8((unint64_t *)&qword_1EB81AC30, (unint64_t *)&unk_1EB81AC20, v13);
  sub_1AFFCB738();
  sub_1AFEDFF8C(0, &qword_1EB810BF8, (uint64_t (*)(uint64_t))sub_1AFEDFFF8, MEMORY[0x1E4FAAFF0]);
  swift_allocObject();
  *(void *)(v12 + 32) = sub_1AFFCA528();
  return v12;
}

uint64_t sub_1AFEDDD60@<X0>(uint64_t *a1@<X8>)
{
  sub_1AFFCA508();
  sub_1AFEDFFF8();
  swift_allocObject();
  uint64_t result = sub_1AFFCAA48();
  *a1 = result;
  return result;
}

uint64_t sub_1AFEDDDF0()
{
  swift_bridgeObjectRelease();

  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for HeadlineViewingHistory()
{
  return self;
}

ValueMetadata *type metadata accessor for HeadlineHistoryEntity()
{
  return &type metadata for HeadlineHistoryEntity;
}

uint64_t sub_1AFEDDE70(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  sub_1AFFC8E38();
  return a1;
}

uint64_t assignWithCopy for HeadlineHistoryModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_1AFFC8E38();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for HeadlineHistoryModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for HeadlineHistoryModel(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 17)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HeadlineHistoryModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HeadlineHistoryModel()
{
  return &type metadata for HeadlineHistoryModel;
}

uint64_t sub_1AFEDDFD8(uint64_t a1)
{
  uint64_t v3 = sub_1AFFCABC8();
  uint64_t v14 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1AFFCAC18();
  uint64_t v6 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFD2CF70(a1, (uint64_t)v17);
  uint64_t v9 = swift_allocObject();
  sub_1AFD2CF70((uint64_t)v17, v9 + 16);
  *(void *)(v9 + 160) = v1;
  aBlock[4] = sub_1AFEE0284;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1AFDB5104;
  aBlock[3] = &block_descriptor_10;
  uint64_t v10 = _Block_copy(aBlock);
  sub_1AFD2D03C(v17, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
  sub_1AFFC8E48();
  sub_1AFFCABE8();
  uint64_t v15 = MEMORY[0x1E4FBC860];
  sub_1AFEE0290((unint64_t *)&unk_1EB819C20, MEMORY[0x1E4FBCB00]);
  uint64_t v11 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCB00];
  sub_1AFEDFF8C(0, (unint64_t *)&qword_1EB819DA0, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1AFEE02D8((unint64_t *)&qword_1EB819DB0, (unint64_t *)&qword_1EB819DA0, v11);
  sub_1AFFCB738();
  MEMORY[0x1B3E8D920](0, v8, v5, v10);
  _Block_release(v10);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v13);
  return swift_release();
}

uint64_t sub_1AFEDE314(void *a1, uint64_t a2)
{
  sub_1AFD2CD48();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1AFFD0610;
  sub_1AFD2CF70((uint64_t)a1, (uint64_t)v35);
  sub_1AFD2D15C((uint64_t)v35);
  uint64_t v5 = *(void **)sub_1AFD2D168((uint64_t)v35);
  sub_1AFD2D03C(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
  id v6 = objc_msgSend(v5, sel_articleID);
  uint64_t v7 = sub_1AFFCAE98();
  uint64_t v9 = v8;

  sub_1AFD2D03C(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2D0A0);
  uint64_t v10 = MEMORY[0x1E4FBB1A0];
  *(void *)(v4 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v11 = sub_1AFD2CE00();
  *(void *)(v4 + 64) = v11;
  *(void *)(v4 + 32) = v7;
  *(void *)(v4 + 40) = v9;
  sub_1AFD2CF70((uint64_t)a1, (uint64_t)v34);
  sub_1AFD2D15C((uint64_t)v34);
  uint64_t v12 = *(void **)sub_1AFD2D168((uint64_t)v34);
  sub_1AFD2D03C(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
  id v13 = objc_msgSend(v12, sel_title);
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = sub_1AFFCAE98();
    unint64_t v17 = v16;

    sub_1AFD2D03C(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2D0A0);
    int64_t v18 = (uint64_t *)(v4 + 72);
    *(void *)(v4 + 96) = v10;
    *(void *)(v4 + 104) = v11;
    if (v17)
    {
      *int64_t v18 = v15;
      goto LABEL_6;
    }
  }
  else
  {
    sub_1AFD2D03C(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2D0A0);
    int64_t v18 = (uint64_t *)(v4 + 72);
    *(void *)(v4 + 96) = v10;
    *(void *)(v4 + 104) = v11;
  }
  *int64_t v18 = 0;
  unint64_t v17 = 0xE000000000000000;
LABEL_6:
  *(void *)(v4 + 80) = v17;
  sub_1AFD8F6AC(0, (unint64_t *)&qword_1EB819EA0);
  uint64_t v19 = (void *)sub_1AFFCB638();
  sub_1AFFCB478();
  sub_1AFFCA878();
  swift_bridgeObjectRelease();

  uint64_t v20 = sub_1AFEDE784(a2, a1);
  uint64_t v22 = v21;
  if (v23) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v25 = v20;
  sub_1AFFC8E38();
  sub_1AFFCA508();
  sub_1AFFCAA28();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1AFD2CF70((uint64_t)a1, (uint64_t)&v33);
  sub_1AFD2D15C((uint64_t)&v33);
  uint64_t v26 = *(void **)sub_1AFD2D168((uint64_t)&v33);
  sub_1AFD2D03C(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
  id v27 = objc_msgSend(v26, sel_identifier);
  uint64_t v28 = sub_1AFFCAE98();
  uint64_t v30 = v29;

  sub_1AFD2D03C(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2D0A0);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v32 = *(void *)(a2 + 16);
  *(void *)(a2 + 16) = 0x8000000000000000;
  sub_1AFE0486C(v25, v22, 1, v28, v30, isUniquelyReferenced_nonNull_native);
  *(void *)(a2 + 16) = v32;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_1AFEDE784(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_1AFFCA918();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v26[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFD2CF70((uint64_t)a2, (uint64_t)v29);
  sub_1AFD2D15C((uint64_t)v29);
  uint64_t v8 = *(void **)sub_1AFD2D168((uint64_t)v29);
  sub_1AFD2D03C(a2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
  id v9 = objc_msgSend(v8, sel_identifier);
  uint64_t v10 = sub_1AFFCAE98();
  uint64_t v12 = v11;

  sub_1AFD2D03C(a2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2D0A0);
  swift_beginAccess();
  uint64_t v13 = *(void *)(a1 + 16);
  if (*(void *)(v13 + 16) && (unint64_t v14 = sub_1AFD79CC8(v10, v12), (v15 & 1) != 0))
  {
    uint64_t v4 = *(void *)(*(void *)(v13 + 56) + 24 * v14);
    swift_endAccess();
    sub_1AFFC8E38();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_endAccess();
    sub_1AFFCA508();
    sub_1AFD2CF70((uint64_t)a2, (uint64_t)v28);
    sub_1AFD2D15C((uint64_t)v28);
    unint64_t v16 = *(void **)sub_1AFD2D168((uint64_t)v28);
    sub_1AFD2D03C(a2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
    id v17 = objc_msgSend(v16, sel_identifier);
    uint64_t v18 = sub_1AFFCAE98();
    uint64_t v20 = v19;

    sub_1AFD2D03C(a2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2D0A0);
    v26[3] = MEMORY[0x1E4FBB1A0];
    v26[4] = MEMORY[0x1E4FAA778];
    v26[0] = v18;
    v26[1] = v20;
    sub_1AFFCAA18();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
    uint64_t v21 = v30;
    sub_1AFFCAA38();
    if (v21)
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      swift_release();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      swift_release();
      if (v26[6])
      {
        return v26[5];
      }
      else
      {
        sub_1AFD2CF70((uint64_t)a2, (uint64_t)v27);
        sub_1AFD2D15C((uint64_t)v27);
        uint64_t v22 = *(void **)sub_1AFD2D168((uint64_t)v27);
        sub_1AFD2D03C(a2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
        id v23 = objc_msgSend(v22, sel_identifier);
        uint64_t v4 = sub_1AFFCAE98();

        sub_1AFD2D03C(a2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2D0A0);
      }
    }
  }
  return v4;
}

uint64_t sub_1AFEDEB1C(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_1AFD2CF70(a1, (uint64_t)v11);
  unsigned __int8 v10 = 0;
  uint64_t v3 = *(NSObject **)(v1 + 24);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v2;
  sub_1AFD2CF70((uint64_t)v11, v4 + 24);
  *(void *)(v4 + 168) = &v10;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_1AFEE01F8;
  *(void *)(v5 + 24) = v4;
  aBlock[4] = sub_1AFDE76C8;
  aBlock[5] = v5;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1AFEDF1A8;
  aBlock[3] = &block_descriptor_28;
  uint64_t v6 = _Block_copy(aBlock);
  sub_1AFFC8E48();
  sub_1AFD2D03C(v11, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
  sub_1AFFC8E48();
  swift_release();
  dispatch_sync(v3, v6);
  _Block_release(v6);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v3)
  {
    __break(1u);
  }
  else
  {
    uint64_t v8 = v10;
    swift_release();
    return v8;
  }
  return result;
}

uint64_t sub_1AFEDECBC(uint64_t a1, void *a2, char *a3)
{
  BOOL v35 = a3;
  uint64_t v5 = sub_1AFFCA918();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFD2CF70((uint64_t)a2, (uint64_t)v42);
  sub_1AFD2D15C((uint64_t)v42);
  id v9 = *(void **)sub_1AFD2D168((uint64_t)v42);
  sub_1AFD2D03C(a2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
  id v10 = objc_msgSend(v9, sel_identifier);
  uint64_t v11 = sub_1AFFCAE98();
  uint64_t v13 = v12;

  sub_1AFD2D03C(a2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2D0A0);
  unint64_t v14 = (uint64_t *)(a1 + 16);
  swift_beginAccess();
  uint64_t v15 = *(void *)(a1 + 16);
  if (*(void *)(v15 + 16) && (unint64_t v16 = sub_1AFD79CC8(v11, v13), (v17 & 1) != 0))
  {
    char v18 = *(unsigned char *)(*(void *)(v15 + 56) + 24 * v16 + 16);
    swift_endAccess();
    uint64_t result = swift_bridgeObjectRelease();
    *BOOL v35 = v18;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_endAccess();
    sub_1AFFCA508();
    sub_1AFD2CF70((uint64_t)a2, (uint64_t)v41);
    sub_1AFD2D15C((uint64_t)v41);
    uint64_t v20 = *(void **)sub_1AFD2D168((uint64_t)v41);
    sub_1AFD2D03C(a2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
    id v21 = objc_msgSend(v20, sel_identifier);
    uint64_t v22 = sub_1AFFCAE98();
    uint64_t v24 = v23;

    sub_1AFD2D03C(a2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2D0A0);
    v40[3] = MEMORY[0x1E4FBB1A0];
    v40[4] = MEMORY[0x1E4FAA778];
    v40[0] = v22;
    v40[1] = v24;
    sub_1AFFCAA18();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
    sub_1AFFCAA38();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t result = swift_release();
    uint64_t v25 = v38;
    if (v38)
    {
      uint64_t v26 = v37;
      char v27 = v39 & 1;
      sub_1AFD2CF70((uint64_t)a2, (uint64_t)v40);
      sub_1AFD2D15C((uint64_t)v40);
      uint64_t v28 = *(void **)sub_1AFD2D168((uint64_t)v40);
      sub_1AFD2D03C(a2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2CFCC);
      id v29 = objc_msgSend(v28, sel_identifier);
      uint64_t v30 = sub_1AFFCAE98();
      uint64_t v32 = v31;

      sub_1AFD2D03C(a2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1AFD2D0A0);
      swift_beginAccess();
      sub_1AFFC8E38();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v36 = *v14;
      *unint64_t v14 = 0x8000000000000000;
      sub_1AFE0486C(v26, v25, v27, v30, v32, isUniquelyReferenced_nonNull_native);
      *unint64_t v14 = v36;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      uint64_t result = swift_bridgeObjectRelease();
      *BOOL v35 = v27;
    }
  }
  return result;
}

uint64_t sub_1AFEDF1A8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_1AFEDF1D0(void *a1, uint64_t a2, uint64_t a3, int a4)
{
  int v13 = a4;
  sub_1AFEE0E20(0, &qword_1EB811328, (uint64_t (*)(void))sub_1AFEE0DCC, (uint64_t)&type metadata for HeadlineHistoryModel.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFEE0DCC();
  sub_1AFFCBE78();
  char v15 = 0;
  uint64_t v10 = v12[1];
  sub_1AFFCBC08();
  if (!v10)
  {
    char v14 = 1;
    sub_1AFFCBC18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1AFEDF378(uint64_t a1)
{
  return sub_1AFEDDFD8(a1);
}

uint64_t sub_1AFEDF39C(uint64_t a1)
{
  return sub_1AFEDEB1C(a1) & 1;
}

uint64_t sub_1AFEDF3C4()
{
  if (*v0) {
    return 0x6465736F707865;
  }
  else {
    return 25705;
  }
}

uint64_t sub_1AFEDF3F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1AFEE0620(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AFEDF41C(uint64_t a1)
{
  unint64_t v2 = sub_1AFEE0DCC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFEDF458(uint64_t a1)
{
  unint64_t v2 = sub_1AFEE0DCC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFEDF494@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1AFEE03FC(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(unsigned char *)(a2 + 16) = v6 & 1;
  }
  return result;
}

uint64_t sub_1AFEDF4C8(void *a1)
{
  return sub_1AFEDF1D0(a1, *(void *)v1, *(void *)(v1 + 8), *(unsigned __int8 *)(v1 + 16));
}

uint64_t sub_1AFEDF4E8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v12 = a3;
  sub_1AFEE0E20(0, &qword_1EB811330, (uint64_t (*)(void))sub_1AFEE0C98, (uint64_t)&type metadata for HeadlineHistoryEntity.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v12 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFEE0C98();
  sub_1AFFCBE78();
  uint64_t v14 = a2;
  char v13 = 0;
  sub_1AFEE03AC(0, &qword_1EB8111F8, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FAA770], MEMORY[0x1E4FAA6B8]);
  sub_1AFEE0D5C(&qword_1EB8111E8);
  sub_1AFFCBC58();
  if (!v3)
  {
    uint64_t v14 = v12;
    char v13 = 1;
    sub_1AFEE03AC(0, &qword_1EB811210, MEMORY[0x1E4FBB390], MEMORY[0x1E4FAA780], MEMORY[0x1E4FAA6B8]);
    sub_1AFEE0CEC(&qword_1EB811200);
    sub_1AFFCBC58();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1AFEDF750(uint64_t a1)
{
  unint64_t v2 = sub_1AFEE0C98();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AFEDF78C(uint64_t a1)
{
  unint64_t v2 = sub_1AFEE0C98();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1AFEDF7C8()
{
  return sub_1AFFC8E48();
}

unint64_t sub_1AFEDF7D0()
{
  return 0xD000000000000018;
}

uint64_t sub_1AFEDF7EC()
{
  uint64_t v0 = *(void *)a100;
  sub_1AFFC8E38();
  return v0;
}

uint64_t sub_1AFEDF824(uint64_t a1)
{
  unint64_t v2 = sub_1AFEE0130();

  return MEMORY[0x1F415D4C8](a1, v2);
}

uint64_t sub_1AFEDF870(uint64_t a1)
{
  unint64_t v2 = sub_1AFEE0130();

  return MEMORY[0x1F415D4D8](a1, v2);
}

uint64_t sub_1AFEDF8BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1AFEE0130();

  return MEMORY[0x1F415D4D0](a1, a2, a3, v6);
}

uint64_t sub_1AFEDF920@<X0>(uint64_t *a1@<X8>)
{
  id v29 = a1;
  sub_1AFEE033C(0, &qword_1EB8111E0, &qword_1EB8111D8, MEMORY[0x1E4FBB390], MEMORY[0x1E4FAA780]);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  unint64_t v6 = (char *)&v28 - v5;
  uint64_t v7 = MEMORY[0x1E4FBB1A0];
  uint64_t v8 = MEMORY[0x1E4FAA770];
  sub_1AFEE033C(0, &qword_1EB8111D0, &qword_1EB8111C8, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FAA770]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v28 - v13;
  char v15 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x1E4FAA6B0];
  sub_1AFEE03AC(0, &qword_1EB8111C8, v7, v8, MEMORY[0x1E4FAA6B0]);
  uint64_t v17 = v16;
  char v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v18(v14, 1, 1, v16);
  v18(v11, 1, 1, v17);
  uint64_t v19 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x1E4FAA6B8];
  sub_1AFEE03AC(0, &qword_1EB8111F8, v7, v8, MEMORY[0x1E4FAA6B8]);
  swift_allocObject();
  uint64_t v20 = sub_1AFFCAA68();
  uint64_t v21 = MEMORY[0x1E4FBB390];
  uint64_t v22 = MEMORY[0x1E4FAA780];
  sub_1AFEE03AC(0, &qword_1EB8111D8, MEMORY[0x1E4FBB390], MEMORY[0x1E4FAA780], v15);
  uint64_t v24 = v23;
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56);
  v25(v6, 1, 1, v23);
  v25(v3, 1, 1, v24);
  sub_1AFEE03AC(0, &qword_1EB811210, v21, v22, v19);
  swift_allocObject();
  uint64_t result = sub_1AFFCAA68();
  char v27 = v29;
  *id v29 = v20;
  v27[1] = result;
  return result;
}

uint64_t sub_1AFEDFC30@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1AFEE06FC(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_1AFEDFC5C(void *a1)
{
  return sub_1AFEDF4E8(a1, *v1, v1[1]);
}

uint64_t sub_1AFEDFC78(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1AFEE0130();

  return MEMORY[0x1F415D4F0](a1, a2, v4);
}

uint64_t sub_1AFEDFCC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1AFEE0130();

  return MEMORY[0x1F415D4E8](a1, a2, a3, v6);
}

uint64_t sub_1AFEDFD18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_1AFEE0130();

  return MEMORY[0x1F415D4E0](a1, a2, a3, a4, v8);
}

unint64_t sub_1AFEDFD80()
{
  unint64_t result = qword_1EB810F20;
  if (!qword_1EB810F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB810F20);
  }
  return result;
}

unint64_t sub_1AFEDFDD8()
{
  unint64_t result = qword_1EB810F18;
  if (!qword_1EB810F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB810F18);
  }
  return result;
}

unint64_t sub_1AFEDFE30()
{
  unint64_t result = qword_1EB810F08;
  if (!qword_1EB810F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB810F08);
  }
  return result;
}

unint64_t sub_1AFEDFE88()
{
  unint64_t result = qword_1EB810F00;
  if (!qword_1EB810F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB810F00);
  }
  return result;
}

unint64_t sub_1AFEDFEE0()
{
  unint64_t result = qword_1EB810F10;
  if (!qword_1EB810F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB810F10);
  }
  return result;
}

unint64_t sub_1AFEDFF38()
{
  unint64_t result = qword_1EB810EF8;
  if (!qword_1EB810EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB810EF8);
  }
  return result;
}

void sub_1AFEDFF8C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1AFEDFFF0@<X0>(uint64_t *a1@<X8>)
{
  return sub_1AFEDDD60(a1);
}

void sub_1AFEDFFF8()
{
  if (!qword_1EB8111C0)
  {
    sub_1AFEE0088();
    sub_1AFEE00DC();
    sub_1AFEE0130();
    unint64_t v0 = sub_1AFFCAA58();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8111C0);
    }
  }
}

unint64_t sub_1AFEE0088()
{
  unint64_t result = qword_1EB810ED8;
  if (!qword_1EB810ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB810ED8);
  }
  return result;
}

unint64_t sub_1AFEE00DC()
{
  unint64_t result = qword_1EB810ED0;
  if (!qword_1EB810ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB810ED0);
  }
  return result;
}

unint64_t sub_1AFEE0130()
{
  unint64_t result = qword_1EB810EF0;
  if (!qword_1EB810EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB810EF0);
  }
  return result;
}

uint64_t sub_1AFEE0184()
{
  swift_release();
  sub_1AFD2D0A0(*(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 112), *(void **)(v0 + 120), *(void *)(v0 + 128));

  return MEMORY[0x1F4186498](v0, 176, 7);
}

uint64_t sub_1AFEE01F8()
{
  return sub_1AFEDECBC(*(void *)(v0 + 16), (void *)(v0 + 24), *(char **)(v0 + 168));
}

uint64_t sub_1AFEE0208()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1AFEE0218()
{
  sub_1AFD2D0A0(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(void **)(v0 + 112), *(void *)(v0 + 120));
  swift_release();

  return MEMORY[0x1F4186498](v0, 168, 7);
}

uint64_t sub_1AFEE0284()
{
  return sub_1AFEDE314((void *)(v0 + 16), *(void *)(v0 + 160));
}

uint64_t sub_1AFEE0290(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AFEE02D8(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1AFEDFF8C(255, a2, a3, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1AFEE033C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t a5)
{
  if (!*a2)
  {
    sub_1AFEE03AC(255, a3, a4, a5, MEMORY[0x1E4FAA6B0]);
    unint64_t v6 = sub_1AFFCB658();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1AFEE03AC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, a4);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1AFEE03FC(void *a1)
{
  sub_1AFEE0E20(0, &qword_1EB811318, (uint64_t (*)(void))sub_1AFEE0DCC, (uint64_t)&type metadata for HeadlineHistoryModel.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v10 - v6;
  uint64_t v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFEE0DCC();
  sub_1AFFCBE68();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    char v12 = 0;
    uint64_t v8 = sub_1AFFCBB18();
    char v11 = 1;
    sub_1AFFC8E38();
    sub_1AFFCBB28();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return v8;
}

uint64_t sub_1AFEE0620(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1AFFCBCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6465736F707865 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1AFFCBCE8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1AFEE06FC(void *a1)
{
  char v39 = a1;
  sub_1AFEE0E20(0, &qword_1EB811320, (uint64_t (*)(void))sub_1AFEE0C98, (uint64_t)&type metadata for HeadlineHistoryEntity.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v33 = *(void *)(v1 - 8);
  uint64_t v34 = v1;
  MEMORY[0x1F4188790](v1);
  uint64_t v36 = (char *)&v32 - v2;
  sub_1AFEE033C(0, &qword_1EB8111E0, &qword_1EB8111D8, MEMORY[0x1E4FBB390], MEMORY[0x1E4FAA780]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v38 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v37 = (char *)&v32 - v6;
  uint64_t v7 = MEMORY[0x1E4FBB1A0];
  uint64_t v8 = MEMORY[0x1E4FAA770];
  sub_1AFEE033C(0, &qword_1EB8111D0, &qword_1EB8111C8, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FAA770]);
  MEMORY[0x1F4188790](v9 - 8);
  char v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v32 - v13;
  char v15 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x1E4FAA6B0];
  sub_1AFEE03AC(0, &qword_1EB8111C8, v7, v8, MEMORY[0x1E4FAA6B0]);
  uint64_t v17 = v16;
  char v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v18(v14, 1, 1, v16);
  v18(v11, 1, 1, v17);
  uint64_t v19 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x1E4FAA6B8];
  sub_1AFEE03AC(0, &qword_1EB8111F8, v7, v8, MEMORY[0x1E4FAA6B8]);
  swift_allocObject();
  uint64_t v35 = sub_1AFFCAA68();
  uint64_t v20 = MEMORY[0x1E4FBB390];
  uint64_t v21 = MEMORY[0x1E4FAA780];
  sub_1AFEE03AC(0, &qword_1EB8111D8, MEMORY[0x1E4FBB390], MEMORY[0x1E4FAA780], v15);
  uint64_t v23 = v22;
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  v24(v37, 1, 1, v22);
  v24(v38, 1, 1, v23);
  uint64_t v25 = v39;
  sub_1AFEE03AC(0, &qword_1EB811210, v20, v21, v19);
  swift_allocObject();
  sub_1AFFCAA68();
  __swift_project_boxed_opaque_existential_1(v25, v25[3]);
  sub_1AFEE0C98();
  uint64_t v26 = v36;
  uint64_t v27 = v40;
  sub_1AFFCBE68();
  if (v27)
  {
    uint64_t v28 = v35;
  }
  else
  {
    char v41 = 0;
    sub_1AFEE0D5C(&qword_1EB8111F0);
    uint64_t v29 = v34;
    sub_1AFFCBB58();
    swift_release();
    uint64_t v28 = v42;
    char v41 = 1;
    sub_1AFEE0CEC(&qword_1EB811208);
    sub_1AFFC8E48();
    sub_1AFFCBB58();
    uint64_t v30 = (void (**)(char *, uint64_t))(v33 + 8);
    swift_release();
    (*v30)(v26, v29);
    sub_1AFFC8E48();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  swift_release();
  swift_release();
  return v28;
}

unint64_t sub_1AFEE0C98()
{
  unint64_t result = qword_1EB810EE0;
  if (!qword_1EB810EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB810EE0);
  }
  return result;
}

uint64_t sub_1AFEE0CEC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1AFEE03AC(255, &qword_1EB811210, MEMORY[0x1E4FBB390], MEMORY[0x1E4FAA780], MEMORY[0x1E4FAA6B8]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AFEE0D5C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1AFEE03AC(255, &qword_1EB8111F8, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FAA770], MEMORY[0x1E4FAA6B8]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1AFEE0DCC()
{
  unint64_t result = qword_1EB810EC0;
  if (!qword_1EB810EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB810EC0);
  }
  return result;
}

void sub_1AFEE0E20(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

ValueMetadata *type metadata accessor for HeadlineHistoryModel.CodingKeys()
{
  return &type metadata for HeadlineHistoryModel.CodingKeys;
}

unsigned char *_s10StocksCore20HeadlineHistoryModelV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AFEE0F68);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HeadlineHistoryEntity.CodingKeys()
{
  return &type metadata for HeadlineHistoryEntity.CodingKeys;
}

unint64_t sub_1AFEE0FA4()
{
  unint64_t result = qword_1E9AFC3E0;
  if (!qword_1E9AFC3E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC3E0);
  }
  return result;
}

unint64_t sub_1AFEE0FFC()
{
  unint64_t result = qword_1E9AFC3E8;
  if (!qword_1E9AFC3E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC3E8);
  }
  return result;
}

unint64_t sub_1AFEE1054()
{
  unint64_t result = qword_1EB810AA0;
  if (!qword_1EB810AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB810AA0);
  }
  return result;
}

unint64_t sub_1AFEE10AC()
{
  unint64_t result = qword_1EB810EC8;
  if (!qword_1EB810EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB810EC8);
  }
  return result;
}

unint64_t sub_1AFEE1104()
{
  unint64_t result = qword_1EB810AA8;
  if (!qword_1EB810AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB810AA8);
  }
  return result;
}

unint64_t sub_1AFEE115C()
{
  unint64_t result = qword_1EB810EE8;
  if (!qword_1EB810EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB810EE8);
  }
  return result;
}

uint64_t sub_1AFEE11C4()
{
  return sub_1AFFCA6F8();
}

unint64_t sub_1AFEE11FC()
{
  return sub_1AFDFAC78(MEMORY[0x1E4FBC860]);
}

unint64_t sub_1AFEE1208()
{
  return sub_1AFDFAC78(MEMORY[0x1E4FBC860]);
}

uint64_t sub_1AFEE1214(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1AFEE1228(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

ValueMetadata *type metadata accessor for NoopFeedPersonalizerHeadlineScorer()
{
  return &type metadata for NoopFeedPersonalizerHeadlineScorer;
}

void sub_1AFEE124C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  uint64_t v9 = *(void **)(a5 + 16);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_1AFD948F8;
  *(void *)(v10 + 24) = v8;
  v12[4] = sub_1AFDE76C8;
  v12[5] = v10;
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 1107296256;
  void v12[2] = sub_1AFDB5104;
  void v12[3] = &block_descriptor_29;
  uint64_t v11 = _Block_copy(v12);
  sub_1AFFC8E48();
  swift_release();
  objc_msgSend(v9, sel_prepareForUseWithCompletionHandler_, v11);
  _Block_release(v11);
}

uint64_t sub_1AFEE1360()
{
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FeedPersonalizerHeadlineScorer()
{
  return self;
}

uint64_t sub_1AFEE13BC()
{
  return sub_1AFFCA758();
}

uint64_t sub_1AFEE1410()
{
  return sub_1AFFCB588();
}

void sub_1AFEE1450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1AFEE124C(a1, a2, a3, a4, v4);
}

uint64_t sub_1AFEE1458()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1AFEE1494(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 8))();
}

uint64_t sub_1AFEE14A8()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  return v0;
}

uint64_t sub_1AFEE14D0()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1AFEE1510()
{
  return sub_1AFFCA758();
}

uint64_t sub_1AFEE1564(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1AFFC9EF8();
  uint64_t v10 = (void *)swift_allocObject();
  void v10[2] = a5;
  v10[3] = a1;
  v10[4] = a2;
  v10[5] = a3;
  v10[6] = a4;
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC9EE8();

  return swift_release();
}

uint64_t sub_1AFEE1628(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AFEE1564(a1, a2, a3, a4, v4);
}

void sub_1AFEE1630()
{
  if (!qword_1EB811A38)
  {
    sub_1AFFCA318();
    unint64_t v0 = sub_1AFFCA788();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB811A38);
    }
  }
}

void sub_1AFEE1688(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1AFFC8E48();
  sub_1AFEE1C98((uint64_t)&unk_1F0874020, a1);
  swift_release();
  sub_1AFEE1FAC();
  sub_1AFFCA7C8();
  swift_bridgeObjectRelease();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  *(void *)(v10 + 24) = a3;
  sub_1AFFC8E48();
  uint64_t v11 = (void *)sub_1AFFCA5E8();
  sub_1AFFCA678();
  swift_release();
  swift_release();

  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a4;
  *(void *)(v12 + 24) = a5;
  sub_1AFFC8E48();
  uint64_t v13 = (void *)sub_1AFFCA5E8();
  sub_1AFFCA6B8();
  swift_release();
  swift_release();
  swift_release();
}

uint64_t sub_1AFEE1800(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SDSAuthToken();
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1AFFC98F8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v16 - v10;
  sub_1AFFC98E8();
  sub_1AFEE20AC((unint64_t *)&qword_1EB816CA0, MEMORY[0x1E4F27928]);
  char v12 = sub_1AFFCAD98();
  uint64_t v13 = *(void (**)(char *, uint64_t))(v6 + 8);
  v13(v11, v5);
  sub_1AFE68D38(a1, (uint64_t)v4);
  if (v12)
  {
    sub_1AFFC97B8();
    sub_1AFFC9828();
    sub_1AFFC98E8();
    char v14 = sub_1AFFC9858();
    v13(v8, v5);
    v13(v11, v5);
  }
  else
  {
    char v14 = 1;
  }
  sub_1AFE68D9C((uint64_t)v4);
  return v14 & 1;
}

uint64_t sub_1AFEE1A28(uint64_t a1, void (*a2)(char *))
{
  uint64_t v3 = sub_1AFFCA318();
  uint64_t v4 = *(void *)(v3 - 8);
  double v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, double))(v4 + 104))(v7, *MEMORY[0x1E4FAAD38], v3, v5);
  a2(v7);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_1AFEE1B2C()
{
  return MEMORY[0x1F415E638](*v0);
}

uint64_t sub_1AFEE1B58(uint64_t a1)
{
  return MEMORY[0x1F415E630](a1, *v1);
}

uint64_t sub_1AFEE1B84()
{
  return sub_1AFFCA758();
}

uint64_t sub_1AFEE1BD8(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F415E640](a1, a2, *v2);
}

uint64_t type metadata accessor for SDSAuthTokenRefresher()
{
  return self;
}

uint64_t sub_1AFEE1C28(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SDSAuthTokenRefresher);
}

uint64_t sub_1AFEE1C40()
{
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

void sub_1AFEE1C88()
{
  sub_1AFEE1688(v0[2], v0[3], v0[4], v0[5], v0[6]);
}

uint64_t sub_1AFEE1C98(uint64_t a1, uint64_t a2)
{
  uint64_t v23 = sub_1AFFC96E8();
  uint64_t v5 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  int64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = MEMORY[0x1E4FBC860];
  if (v10)
  {
    uint64_t v22 = (char *)v19 - v9;
    v19[0] = v2;
    uint64_t v24 = MEMORY[0x1E4FBC860];
    sub_1AFD9DCB0(0, v10, 0);
    uint64_t v11 = v24;
    uint64_t v12 = a1 + 32;
    uint64_t v13 = *(void *)(a2 + 56);
    uint64_t v20 = (void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v21 = v13;
    v19[1] = v5 + 32;
    char v14 = v22;
    do
    {
      ++v12;
      sub_1AFFCA7E8();
      sub_1AFFC9658();
      swift_bridgeObjectRelease();
      uint64_t v15 = v23;
      (*v20)(v7, v23);
      uint64_t v24 = v11;
      unint64_t v17 = *(void *)(v11 + 16);
      unint64_t v16 = *(void *)(v11 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_1AFD9DCB0(v16 > 1, v17 + 1, 1);
        uint64_t v15 = v23;
        uint64_t v11 = v24;
      }
      *(void *)(v11 + 16) = v17 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v11+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v17, v14, v15);
      --v10;
    }
    while (v10);
  }
  return v11;
}

uint64_t sub_1AFEE1F2C()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = v1[5];
  uint64_t v4 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t (*)(uint64_t), void, uint64_t, uint64_t))(v4 + 16))(v2, sub_1AFEE1800, 0, v3, v4);
}

void sub_1AFEE1FAC()
{
  if (!qword_1EB819C48)
  {
    sub_1AFFC96E8();
    type metadata accessor for SDSAuthToken();
    sub_1AFEE20AC((unint64_t *)&qword_1EB81A618, MEMORY[0x1E4F276F0]);
    unint64_t v0 = sub_1AFFCAD18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB819C48);
    }
  }
}

uint64_t sub_1AFEE2058()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1AFEE2090(uint64_t a1)
{
  return sub_1AFEE1A28(a1, *(void (**)(char *))(v1 + 16));
}

uint64_t sub_1AFEE20AC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AFEE20F8(void *a1)
{
  sub_1AFD392D8();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v23 - v6;
  MEMORY[0x1F4188790](v8);
  int64_t v10 = (char *)&v23 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFD8F6AC(0, (unint64_t *)&unk_1EB81AD50);
  uint64_t result = sub_1AFFC9E58();
  if (!result)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v12 = (void *)result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB3E88(0, &qword_1EB81AA90);
  uint64_t result = sub_1AFFC9E68();
  uint64_t v13 = v25;
  if (!v25)
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v24 = v12;
  id v14 = (id)FCURLForContainerizedUserAccountCachesDirectory();
  if (v14)
  {
    uint64_t v15 = v14;
    sub_1AFFC9678();

    uint64_t v16 = sub_1AFFC96E8();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v10, 0, 1, v16);
  }
  else
  {
    uint64_t v16 = sub_1AFFC96E8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v10, 1, 1, v16);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFFC96E8();
  sub_1AFFC9E48();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v4, 1, v16);
  if (result == 1) {
    goto LABEL_14;
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v7, v4, v16);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v7, 0, 1, v16);
  id v18 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for PrivateDataActionProvider()), sel_init);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFD8F6AC(0, &qword_1EB81A608);
  uint64_t result = sub_1AFFC9E58();
  if (!result)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v19 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFD2D178(0, &qword_1EB818128);
  uint64_t result = sub_1AFFC9E58();
  if (!result)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v20 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFD8F6AC(0, (unint64_t *)&unk_1EB81AE38);
  uint64_t result = sub_1AFFC9E58();
  if (!result)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v21 = result;
  id v22 = objc_allocWithZone(MEMORY[0x1E4F7E320]);
  uint64_t result = (uint64_t)sub_1AFEE38D4(v24, v13, (uint64_t)v10, (uint64_t)v7, (uint64_t)v18, v19, v20, 0xF8FFFFFC1, 2, 0, 0, v21, 0);
  if (!result) {
LABEL_18:
  }
    __break(1u);
  return result;
}

id sub_1AFEE2534(id *a1)
{
  return objc_msgSend(*a1, sel_enableFlushingWithFlushingThreshold_, 2);
}

id sub_1AFEE254C(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FCContextEnvironment(0);
  id result = (id)sub_1AFFC9E68();
  if ((v3 & 1) == 0) {
    return objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F7E360]), sel_initWithEnvironment_, v2);
  }
  __break(1u);
  return result;
}

uint64_t sub_1AFEE25D0()
{
  type metadata accessor for NoFavoritesPersonalizer();

  return swift_allocObject();
}

uint64_t sub_1AFEE2604()
{
  type metadata accessor for BlankAllowListProvider();

  return swift_allocObject();
}

id sub_1AFEE2638(void *a1)
{
  return sub_1AFEE27B4(a1, (SEL *)&selRef_personalizationData);
}

uint64_t sub_1AFEE2644(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFD8F6AC(0, (unint64_t *)&unk_1EB81A4B0);
  uint64_t result = sub_1AFFC9E58();
  if (!result) {
    __break(1u);
  }
  return result;
}

id sub_1AFEE26A8()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F7E598]);

  return objc_msgSend(v0, sel_initForLoggingOnly);
}

id sub_1AFEE26E0()
{
  id result = objc_msgSend(self, sel_sharedNetworkReachability);
  if (!result) {
    __break(1u);
  }
  return result;
}

id sub_1AFEE271C(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFD2D178(0, (unint64_t *)&unk_1EB81ACC8);
  id result = (id)sub_1AFFC9E58();
  if (result)
  {
    id v2 = objc_msgSend(result, sel_news_core_ConfigurationManager);
    swift_unknownObjectRelease();
    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1AFEE27A8(void *a1)
{
  return sub_1AFEE27B4(a1, (SEL *)&selRef_issueReadingHistory);
}

id sub_1AFEE27B4(void *a1, SEL *a2)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFD8F6AC(0, (unint64_t *)&unk_1EB81A4B0);
  id result = (id)sub_1AFFC9E58();
  if (result)
  {
    uint64_t v4 = result;
    id v5 = [result *a2];

    return v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1AFEE283C(void *a1)
{
  return sub_1AFEE27B4(a1, (SEL *)&selRef_readingHistory);
}

id sub_1AFEE2848(void *a1)
{
  return sub_1AFEE27B4(a1, (SEL *)&selRef_readingList);
}

void sub_1AFEE2854(void *a1)
{
}

void sub_1AFEE2860(void *a1)
{
}

void sub_1AFEE286C(void *a1, SEL *a2)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFD8F6AC(0, (unint64_t *)&unk_1EB81A4B0);
  char v3 = (void *)sub_1AFFC9E58();
  if (!v3)
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v4 = v3;
  id v5 = [v3 *a2];

  if (!v5) {
LABEL_5:
  }
    __break(1u);
}

void sub_1AFEE28FC(void *a1)
{
}

id sub_1AFEE2908(void *a1)
{
  return sub_1AFEE27B4(a1, (SEL *)&selRef_puzzleController);
}

id sub_1AFEE2914(void *a1)
{
  return sub_1AFEE27B4(a1, (SEL *)&selRef_puzzleTypeController);
}

id sub_1AFEE2920(void *a1)
{
  return sub_1AFEE27B4(a1, (SEL *)&selRef_flintResourceManager);
}

id sub_1AFEE292C(void *a1)
{
  return sub_1AFEE27B4(a1, (SEL *)&selRef_userInfo);
}

void sub_1AFEE2938(void *a1)
{
}

id sub_1AFEE2944(void *a1)
{
  return sub_1AFEE27B4(a1, (SEL *)&selRef_assetManager);
}

id sub_1AFEE2950(void *a1)
{
  return sub_1AFEE27B4(a1, (SEL *)&selRef_avAssetFactory);
}

id sub_1AFEE295C(void *a1)
{
  return sub_1AFEE27B4(a1, (SEL *)&selRef_avAssetPrewarmer);
}

uint64_t sub_1AFEE2968(void *a1)
{
  return sub_1AFEE2998(a1);
}

uint64_t sub_1AFEE297C(void *a1)
{
  return sub_1AFEE2998(a1);
}

uint64_t sub_1AFEE2998(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFD2D178(0, (unint64_t *)&unk_1EB81ACC8);
  uint64_t result = sub_1AFFC9E58();
  if (result)
  {
    char v3 = (void *)result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1AFD8F6AC(0, &qword_1EB81ADD8);
    uint64_t result = sub_1AFFC9E38();
    if (result)
    {
      uint64_t v4 = (void *)result;
      id v5 = objc_msgSend(v3, sel_recordSourceWithSchema_, result);
      swift_unknownObjectRelease();

      return (uint64_t)v5;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1AFEE2A9C(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFD2D178(0, (unint64_t *)&unk_1EB81ACC8);
  uint64_t result = sub_1AFFC9E58();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  char v3 = (void *)result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFD2D178(0, (unint64_t *)&unk_1EB81AD70);
  uint64_t result = sub_1AFFC9E38();
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v4 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t result = sub_1AFFC9E38();
  if (result)
  {
    uint64_t v5 = result;
    sub_1AFEE5534(0, (unint64_t *)&qword_1EB8183E0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1AFFD88D0;
    *(void *)(v6 + 32) = v4;
    *(void *)(v6 + 40) = v5;
    sub_1AFFCB1E8();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    uint64_t v7 = (void *)sub_1AFFCB1B8();
    swift_bridgeObjectRelease();
    id v8 = objc_msgSend(v3, sel_recordTreeSourceWithRecordSources_, v7);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();

    return (uint64_t)v8;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1AFEE2C8C(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFEE54CC();
  uint64_t result = sub_1AFFC9E68();
  if (v5)
  {
    id v2 = objc_allocWithZone(MEMORY[0x1E4F7E688]);
    sub_1AFD2D178(0, (unint64_t *)&unk_1EB81AE18);
    char v3 = (void *)sub_1AFFCB1B8();
    swift_bridgeObjectRelease();
    id v4 = objc_msgSend(v2, sel_initWithConditions_, v3);

    return (uint64_t)v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1AFEE2D50(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  id v2 = v1;
  id v4 = v3;
  uint64_t v5 = sub_1AFFC9DA8();
  MEMORY[0x1F4188790](v5 - 8);
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_1AFDB3E88(0, &qword_1EB81AA40);
  uint64_t result = sub_1AFFC9E68();
  if (v24)
  {
    uint64_t v7 = (objc_class *)type metadata accessor for NewsConfigurationManager();
    id v8 = (char *)objc_allocWithZone(v7);
    uint64_t v9 = OBJC_IVAR____TtC10StocksCore24NewsConfigurationManager_coreConfigObservers;
    id v10 = objc_allocWithZone(MEMORY[0x1E4F28D30]);
    uint64_t v11 = v8;
    *(void *)&v8[v9] = objc_msgSend(v10, sel_initWithOptions_capacity_, 517, 0);
    uint64_t v12 = OBJC_IVAR____TtC10StocksCore24NewsConfigurationManager_appConfigObservers;
    *(void *)&v11[v12] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28D30]), sel_initWithOptions_capacity_, 517, 0);
    uint64_t v13 = (uint64_t)&v11[OBJC_IVAR____TtC10StocksCore24NewsConfigurationManager_lastKnownAppConfig];
    sub_1AFDB7CD8(v22);
    sub_1AFDB7CE0((uint64_t)v22, v13);
    *(void *)&v11[OBJC_IVAR____TtC10StocksCore24NewsConfigurationManager_lastKnownNewsConfig] = 0;
    uint64_t v14 = OBJC_IVAR____TtC10StocksCore24NewsConfigurationManager_configLock;
    sub_1AFFC9D98();
    sub_1AFFC9DC8();
    swift_allocObject();
    *(void *)&v11[v14] = sub_1AFFC9DB8();
    sub_1AFD2CEB0((uint64_t)v23, (uint64_t)&v11[OBJC_IVAR____TtC10StocksCore24NewsConfigurationManager_appConfigurationManager]);

    v21.receiver = v11;
    v21.super_class = v7;
    id v15 = objc_msgSendSuper2(&v21, sel_init);
    uint64_t v16 = v24;
    uint64_t v17 = v25;
    __swift_project_boxed_opaque_existential_1(v23, v24);
    id v18 = *(void (**)(uint64_t, uint64_t))(v17 + 16);
    id v19 = v15;
    v18(v16, v17);
    swift_allocObject();
    swift_unknownObjectUnownedInit();
    sub_1AFFC9FE8();
    swift_release();
    swift_release();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
    *id v4 = v19;
    v4[1] = &off_1F0876578;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1AFEE3008()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F7E778]);

  return objc_msgSend(v0, sel_init);
}

uint64_t sub_1AFEE3040(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB3E88(0, &qword_1EB81AA90);
  sub_1AFFC9E68();
  uint64_t result = v2;
  if (!v2) {
    __break(1u);
  }
  return result;
}

void sub_1AFEE30B8(void *a1)
{
}

void sub_1AFEE30C4(void *a1)
{
}

void sub_1AFEE30D4(void *a1)
{
}

void sub_1AFEE30E0(void *a1)
{
}

uint64_t sub_1AFEE30EC(void **a1, void *a2)
{
  uint64_t v2 = *a1;
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1AFD2D178(0, (unint64_t *)&unk_1EB818170);
  objc_msgSend(v2, sel_setEntitlementsOverrideProvider_, sub_1AFFC9E58());

  return swift_unknownObjectRelease();
}

id sub_1AFEE317C(void *a1)
{
  return sub_1AFEE27B4(a1, (SEL *)&selRef_tagSettings);
}

id sub_1AFEE3188()
{
  strcpy((char *)v7, "stockEntityID");
  HIWORD(v7[1]) = -4864;
  strcpy((char *)v8, "displaySymbol");
  HIWORD(v8[1]) = -4864;
  strcpy((char *)v9, "isDeprecated");
  BYTE5(v9[1]) = 0;
  HIWORD(v9[1]) = -5120;
  strcpy((char *)v10, "replacementID");
  HIWORD(v10[1]) = -4864;
  sub_1AFF461F0();
  id v0 = objc_allocWithZone(MEMORY[0x1E4F7E528]);
  uint64_t v1 = (void *)sub_1AFFCAE68();
  uint64_t v2 = (void *)sub_1AFFCAE68();
  char v3 = (void *)sub_1AFFCB1B8();
  swift_bridgeObjectRelease();
  id v4 = (void *)sub_1AFFCB1B8();
  id v5 = objc_msgSend(v0, sel_initWithRecordType_recordIDPrefix_keys_localizableKeys_, v1, v2, v3, v4, 0x6B636F7453, 0xE500000000000000, 83, 0xE100000000000000, 45, 0xE100000000000000, 36, 0xE100000000000000, 0x6C6F626D7973, 0xE600000000000000, v7[0], v7[1], 0xD000000000000011,
         0x80000001AFFED2E0,
         0x4E79616C70736964,
         0xEB00000000656D61,
         v8[0],
         v8[1],
         v9[0],
         v9[1],
         v10[0],
         v10[1]);

  return v5;
}

id sub_1AFEE3378()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F7E528]);
  uint64_t v1 = (void *)sub_1AFFCAE68();
  uint64_t v2 = (void *)sub_1AFFCAE68();
  char v3 = (void *)sub_1AFFCB1B8();
  id v4 = (void *)sub_1AFFCB1B8();
  id v5 = objc_msgSend(v0, sel_initWithRecordType_recordIDPrefix_keys_localizableKeys_, v1, v2, v3, v4);

  return v5;
}

uint64_t sub_1AFEE3450@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1AFEE5534(0, (unint64_t *)&qword_1EB8183E0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1AFFE20E0;
  *(void *)(v4 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F7E6A0]), sel_init);
  *(void *)(v4 + 40) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F7E690]), sel_init);
  *(void *)(v4 + 48) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F7E6A8]), sel_init);
  *(void *)(v4 + 56) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F7E698]), sel_init);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDB3E88(0, &qword_1EB81AA40);
  uint64_t result = sub_1AFFC9E68();
  if (v8)
  {
    type metadata accessor for NewsRegionCheck();
    uint64_t v6 = swift_allocObject();
    sub_1AFD80454(&v7, v6 + 16);
    *(void *)(v4 + 64) = v6;
    *(void *)&long long v7 = v4;
    uint64_t result = sub_1AFFCB1E8();
    *a2 = v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1AFEE35C8()
{
  sub_1AFFC9C48();
  sub_1AFFC9C28();
  if (qword_1EB819B40 != -1) {
    swift_once();
  }
  sub_1AFFC9C18();

  return swift_release();
}

uint64_t sub_1AFEE3650@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t result = sub_1AFFC9E68();
  uint64_t v4 = v5;
  switch(v5)
  {
    case 1u:
      uint64_t v4 = 1;
      break;
    case 2u:
      uint64_t v4 = 2;
      break;
    case 3u:
      uint64_t v4 = 3;
      break;
    case 4u:
      uint64_t v4 = 4;
      break;
    case 5u:
      uint64_t v4 = 6;
      break;
    case 6u:
      uint64_t v4 = 7;
      break;
    case 7u:
      uint64_t v4 = 8;
      break;
    case 8u:
      __break(1u);
      JUMPOUT(0x1AFEE3710);
    default:
      break;
  }
  *a2 = v4;
  return result;
}

uint64_t type metadata accessor for NewsCoreAssembly()
{
  return self;
}

uint64_t type metadata accessor for PrivateDataActionProvider()
{
  return self;
}

id sub_1AFEE38D4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, __int16 a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v14 = sub_1AFFC96E8();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  uint64_t v17 = 0;
  if (v16(a3, 1, v14) != 1)
  {
    uint64_t v17 = (void *)sub_1AFFC9638();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(a3, v14);
  }
  if (v16(a4, 1, v14) == 1)
  {
    id v18 = 0;
  }
  else
  {
    id v18 = (void *)sub_1AFFC9638();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(a4, v14);
  }
  LOWORD(v20) = a10 & 0x101;
  id v24 = objc_msgSend(v23, sel_initWithConfiguration_configurationManager_contentHostDirectory_privateDataHostDirectory_privateDataActionProvider_networkBehaviorMonitor_appActivityMonitor_desiredHeadlineFieldOptions_feedUsage_lockStoreFrontIfNeeded_deviceIsiPad_backgroundTaskable_privateDataSyncAvailability_pptContext_, a1, a2, v17, v18, a5, a6, a7, a8, a9, v20, a11, a12, a13);

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v24;
}

uint64_t sub_1AFEE3AE4(uint64_t a1)
{
  uint64_t v2 = sub_1AFFCA5C8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unsigned __int8 v5 = (char *)v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFFC9F98();
  sub_1AFD8F6AC(0, (unint64_t *)&unk_1EB81A4B0);
  sub_1AFFCA378();
  swift_release();
  uint64_t v6 = *(void (**)(char *))(v3 + 104);
  uint64_t v7 = *MEMORY[0x1E4FAB040];
  v6(v5);
  sub_1AFFC9D68();
  swift_release();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v35 = v3 + 8;
  v8(v5, v2);
  sub_1AFFC9D58();
  swift_release();
  swift_release();
  sub_1AFFC9F98();
  sub_1AFD2D178(0, (unint64_t *)&unk_1EB81ACC8);
  sub_1AFFCA378();
  swift_release();
  swift_release();
  sub_1AFFC9F98();
  sub_1AFD8F6AC(0, (unint64_t *)&unk_1EB81AD50);
  sub_1AFFCA378();
  swift_release();
  swift_release();
  sub_1AFFC9F98();
  sub_1AFD2D178(0, (unint64_t *)&unk_1EB81ADA8);
  sub_1AFFCA378();
  swift_release();
  swift_release();
  sub_1AFFC9F98();
  sub_1AFD2D178(0, &qword_1EB81A610);
  sub_1AFFCA378();
  swift_release();
  swift_release();
  sub_1AFFC9F98();
  sub_1AFD8F6AC(0, (unint64_t *)&unk_1EB81AD38);
  sub_1AFFCA378();
  swift_release();
  ((void (*)(char *, uint64_t, uint64_t))v6)(v5, v7, v2);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  v8(v5, v2);
  sub_1AFFC9F98();
  sub_1AFD2D178(0, (unint64_t *)&unk_1EB81AD10);
  sub_1AFFCA378();
  swift_release();
  swift_release();
  sub_1AFFC9F98();
  sub_1AFD8F6AC(0, &qword_1EB81A608);
  sub_1AFFCA378();
  swift_release();
  unsigned int v32 = v7;
  ((void (*)(char *, uint64_t, uint64_t))v6)(v5, v7, v2);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  v8(v5, v2);
  sub_1AFFC9F98();
  sub_1AFD8F6AC(0, qword_1EB81A4C0);
  sub_1AFFCA378();
  swift_release();
  ((void (*)(char *, uint64_t, uint64_t))v6)(v5, v7, v2);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  v8(v5, v2);
  uint64_t v9 = v8;
  uint64_t v10 = a1;
  sub_1AFFC9F98();
  sub_1AFD2D178(0, (unint64_t *)&unk_1EB81AE28);
  sub_1AFFCA378();
  swift_release();
  swift_release();
  sub_1AFFC9F98();
  uint64_t v30 = sub_1AFD8F6AC(0, &qword_1EB81AD30);
  sub_1AFFCA378();
  swift_release();
  uint64_t v11 = v32;
  uint64_t v34 = v6;
  ((void (*)(char *, void, uint64_t))v6)(v5, v32, v2);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  v9(v5, v2);
  sub_1AFFC9F98();
  sub_1AFD8F6AC(0, &qword_1EB81ACD8);
  sub_1AFFCA378();
  swift_release();
  ((void (*)(char *, uint64_t, uint64_t))v6)(v5, v11, v2);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  v9(v5, v2);
  sub_1AFFC9F98();
  sub_1AFD8F6AC(0, (unint64_t *)&unk_1EB81ACA0);
  sub_1AFFCA378();
  swift_release();
  uint64_t v12 = v34;
  ((void (*)(char *, uint64_t, uint64_t))v34)(v5, v11, v2);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  v9(v5, v2);
  sub_1AFFC9F98();
  sub_1AFD8F6AC(0, (unint64_t *)&unk_1EB81ADE8);
  sub_1AFFCA378();
  swift_release();
  ((void (*)(char *, uint64_t, uint64_t))v12)(v5, v11, v2);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  v9(v5, v2);
  sub_1AFFC9F98();
  sub_1AFFCA378();
  swift_release();
  ((void (*)(char *, uint64_t, uint64_t))v12)(v5, v11, v2);
  v29[1] = v3 + 104;
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  v9(v5, v2);
  sub_1AFFC9F98();
  sub_1AFD8F6AC(0, &qword_1EB81ADE0);
  sub_1AFFCA378();
  swift_release();
  ((void (*)(char *, uint64_t, uint64_t))v12)(v5, v11, v2);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  v9(v5, v2);
  uint64_t v13 = v9;
  uint64_t v33 = v9;
  sub_1AFFC9F98();
  sub_1AFD8F6AC(0, (unint64_t *)&unk_1EB81ADC8);
  sub_1AFFCA378();
  swift_release();
  uint64_t v14 = v32;
  ((void (*)(char *, void, uint64_t))v12)(v5, v32, v2);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  v13(v5, v2);
  sub_1AFFC9F98();
  sub_1AFD8F6AC(0, (unint64_t *)&unk_1EB81ACE0);
  sub_1AFFCA378();
  swift_release();
  ((void (*)(char *, uint64_t, uint64_t))v12)(v5, v14, v2);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  uint64_t v15 = v33;
  v33(v5, v2);
  sub_1AFFC9F98();
  sub_1AFD8F6AC(0, (unint64_t *)&unk_1EB81AD88);
  sub_1AFFCA378();
  swift_release();
  ((void (*)(char *, uint64_t, uint64_t))v12)(v5, v14, v2);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  v15(v5, v2);
  sub_1AFFC9F98();
  sub_1AFD8F6AC(0, (unint64_t *)&unk_1EB81AD60);
  sub_1AFFCA378();
  swift_release();
  uint64_t v16 = v14;
  uint64_t v17 = v14;
  id v18 = v34;
  ((void (*)(char *, uint64_t, uint64_t))v34)(v5, v17, v2);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  v33(v5, v2);
  sub_1AFFC9F98();
  sub_1AFD2D178(0, &qword_1EB81ADF8);
  sub_1AFFCA378();
  swift_release();
  ((void (*)(char *, uint64_t, uint64_t))v18)(v5, v16, v2);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  id v19 = v33;
  v33(v5, v2);
  sub_1AFFC9F98();
  sub_1AFFCA378();
  swift_release();
  uint64_t v20 = v32;
  objc_super v21 = v34;
  ((void (*)(char *, void, uint64_t))v34)(v5, v32, v2);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  v19(v5, v2);
  sub_1AFFC9F98();
  sub_1AFD8F6AC(0, (unint64_t *)&unk_1EB81AC80);
  sub_1AFFCA378();
  swift_release();
  ((void (*)(char *, uint64_t, uint64_t))v21)(v5, v20, v2);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  v19(v5, v2);
  sub_1AFFC9F98();
  sub_1AFD2D178(0, (unint64_t *)&unk_1EB81ADB8);
  sub_1AFFCA378();
  swift_release();
  ((void (*)(char *, uint64_t, uint64_t))v21)(v5, v20, v2);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  v19(v5, v2);
  sub_1AFFC9F98();
  sub_1AFD8F6AC(0, &qword_1EB81ACC0);
  sub_1AFFCA378();
  swift_release();
  ((void (*)(char *, uint64_t, uint64_t))v21)(v5, v20, v2);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  v19(v5, v2);
  sub_1AFFC9F98();
  sub_1AFD2D178(0, &qword_1EB81ACF8);
  sub_1AFFCA378();
  swift_release();
  ((void (*)(char *, uint64_t, uint64_t))v21)(v5, v20, v2);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  v19(v5, v2);
  uint64_t v31 = v10;
  sub_1AFFC9F98();
  sub_1AFD2D178(0, &qword_1EB81ACF0);
  sub_1AFFCA378();
  swift_release();
  ((void (*)(char *, uint64_t, uint64_t))v21)(v5, v20, v2);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  v19(v5, v2);
  sub_1AFFC9F98();
  sub_1AFD2D178(0, (unint64_t *)&unk_1EB81AD70);
  sub_1AFFCA378();
  swift_release();
  uint64_t v22 = v32;
  uint64_t v23 = v34;
  ((void (*)(char *, void, uint64_t))v34)(v5, v32, v2);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  v19(v5, v2);
  sub_1AFFC9F98();
  uint64_t v30 = 0x80000001AFFF87E0;
  sub_1AFFCA378();
  swift_release();
  ((void (*)(char *, uint64_t, uint64_t))v23)(v5, v22, v2);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  v19(v5, v2);
  sub_1AFFC9F98();
  sub_1AFD2D178(0, &qword_1EB81AE10);
  sub_1AFFCA378();
  swift_release();
  ((void (*)(char *, uint64_t, uint64_t))v23)(v5, v22, v2);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  v19(v5, v2);
  sub_1AFFC9F98();
  sub_1AFD8F6AC(0, (unint64_t *)&unk_1EB81AE38);
  sub_1AFFCA378();
  swift_release();
  swift_release();
  sub_1AFFC9F98();
  sub_1AFDB3E88(0, &qword_1EB81AA90);
  sub_1AFFCA388();
  swift_release();
  uint64_t v24 = v22;
  uint64_t v25 = v22;
  uint64_t v26 = v34;
  ((void (*)(char *, uint64_t, uint64_t))v34)(v5, v25, v2);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  v19(v5, v2);
  sub_1AFFC9F98();
  sub_1AFD2D178(0, (unint64_t *)&unk_1EB81AD98);
  sub_1AFFCA378();
  swift_release();
  swift_release();
  sub_1AFFC9F98();
  sub_1AFD2D178(0, (unint64_t *)&unk_1EB81AE00);
  sub_1AFFCA378();
  swift_release();
  ((void (*)(char *, uint64_t, uint64_t))v26)(v5, v24, v2);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  uint64_t v27 = v33;
  v33(v5, v2);
  sub_1AFFC9F98();
  sub_1AFD8F6AC(0, &qword_1EB81AD08);
  sub_1AFFCA378();
  swift_release();
  ((void (*)(char *, uint64_t, uint64_t))v26)(v5, v24, v2);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  v27(v5, v2);
  sub_1AFFC9F98();
  sub_1AFD8F6AC(0, (unint64_t *)&unk_1EB81AD20);
  sub_1AFFCA378();
  swift_release();
  sub_1AFFC9D58();
  swift_release();
  ((void (*)(char *, uint64_t, uint64_t))v26)(v5, v24, v2);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  v27(v5, v2);
  sub_1AFFC9F98();
  sub_1AFD2D178(0, &qword_1EB81AD48);
  sub_1AFFCA378();
  swift_release();
  ((void (*)(char *, uint64_t, uint64_t))v26)(v5, v24, v2);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  v27(v5, v2);
  sub_1AFFC9F98();
  sub_1AFD2D178(0, &qword_1EB81AD80);
  sub_1AFFCA378();
  swift_release();
  ((void (*)(char *, uint64_t, uint64_t))v26)(v5, v24, v2);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  v27(v5, v2);
  sub_1AFFC9F98();
  sub_1AFD2D178(0, &qword_1EB81AE48);
  sub_1AFFCA378();
  swift_release();
  sub_1AFFC9D58();
  swift_release();
  ((void (*)(char *, uint64_t, uint64_t))v26)(v5, v24, v2);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  v27(v5, v2);
  sub_1AFFC9F98();
  sub_1AFD8F6AC(0, (unint64_t *)&unk_1EB81ACB0);
  sub_1AFFCA378();
  swift_release();
  ((void (*)(char *, uint64_t, uint64_t))v26)(v5, v24, v2);
  sub_1AFFC9D68();
  swift_release();
  swift_release();
  v27(v5, v2);
  sub_1AFFC9FA8();
  sub_1AFD8F6AC(0, &qword_1EB81ADD8);
  sub_1AFFCA378();
  swift_release();
  swift_release();
  sub_1AFFC9FA8();
  sub_1AFFCA378();
  swift_release();
  swift_release();
  sub_1AFFC9FA8();
  sub_1AFEE54CC();
  sub_1AFFCA388();
  swift_release();
  swift_release();
  sub_1AFFC9FA8();
  sub_1AFFCA388();
  swift_release();
  swift_release();
  sub_1AFFC9FA8();
  type metadata accessor for FCContextEnvironment(0);
  sub_1AFFCA388();
  swift_release();
  return swift_release();
}

void sub_1AFEE54CC()
{
  if (!qword_1EB81AC60)
  {
    sub_1AFD2D178(255, (unint64_t *)&unk_1EB81AE18);
    unint64_t v0 = sub_1AFFCB288();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB81AC60);
    }
  }
}

void sub_1AFEE5534(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1AFEE5580()
{
  swift_unknownObjectUnownedDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1AFEE55B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_1AFEE55CC(uint64_t a1, unsigned __int8 *a2, uint64_t *a3)
{
  unsigned int v4 = *a2;
  uint64_t v5 = *a3;
  switch(v4 >> 5)
  {
    case 1u:
      char v7 = v4 & 1;
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E48();
      uint64_t v8 = sub_1AFEE8484;
      uint64_t v9 = sub_1AFEE8484;
      goto LABEL_5;
    case 2u:
      char v7 = v4 & 1;
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E48();
      uint64_t v8 = sub_1AFEE8B84;
      uint64_t v9 = sub_1AFEE8B84;
LABEL_5:
      sub_1AFEEA8A4(&v12, v5, v3, v7, (uint64_t (*)(long long *, long long *, uint64_t, void))v8, (uint64_t (*)(void, void, void, void))v9);
      goto LABEL_6;
    case 3u:
      char v10 = v4 & 1;
      sub_1AFFC8E38();
      sub_1AFFC8E48();
      uint64_t v11 = (void (*)(void *, uint64_t, uint64_t))sub_1AFEEAEB4;
      goto LABEL_9;
    case 4u:
      char v10 = v4 & 1;
      sub_1AFFC8E38();
      sub_1AFFC8E48();
      uint64_t v11 = (void (*)(void *, uint64_t, uint64_t))sub_1AFEEC758;
LABEL_9:
      sub_1AFEED9F8(&v12, v3, v10, v11);
      goto LABEL_10;
    case 5u:
      sub_1AFFC8E38();
      return;
    default:
      char v6 = v4 & 1;
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E48();
      sub_1AFEE839C(&v12, v5, v3, v6);
LABEL_6:
      swift_bridgeObjectRelease();
LABEL_10:
      swift_release();
      return;
  }
}

uint64_t sub_1AFEE5788(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_1AFFC92A8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = v2[5];
  uint64_t v10 = v2[6];
  __swift_project_boxed_opaque_existential_1(v2 + 2, v9);
  uint64_t v11 = (*(uint64_t (**)(uint64_t, unint64_t, void, uint64_t, uint64_t))(v10 + 8))(a1, a2, 0, v9, v10);
  if (v12) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = 0;
  }
  if (v12) {
    unint64_t v14 = v12;
  }
  else {
    unint64_t v14 = 0xE000000000000000;
  }
  uint64_t v15 = HIBYTE(v14) & 0xF;
  if ((v14 & 0x2000000000000000) == 0) {
    uint64_t v15 = v13 & 0xFFFFFFFFFFFFLL;
  }
  if (v15)
  {
    a1 = v13;
    a2 = v14;
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1AFFC8E38();
  }
  uint64_t v22 = a1;
  unint64_t v23 = a2;
  sub_1AFFC9258();
  sub_1AFD3AE10();
  uint64_t v16 = sub_1AFFCB6B8();
  unint64_t v18 = v17;
  id v19 = *(void (**)(char *, uint64_t))(v6 + 8);
  v19(v8, v5);
  swift_bridgeObjectRelease();
  uint64_t v22 = v16;
  unint64_t v23 = v18;
  sub_1AFFC9288();
  sub_1AFFCB6B8();
  v19(v8, v5);
  swift_bridgeObjectRelease();
  uint64_t v20 = sub_1AFFCAF28();
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t type metadata accessor for WatchlistSortingService()
{
  return self;
}

uint64_t sub_1AFEE59A0(uint64_t result, unsigned __int8 *a2, uint64_t *a3)
{
  return result;
}

uint64_t sub_1AFEE59C4(char *__src, char *a2, unint64_t a3, char *__dst, uint64_t a5, char a6)
{
  uint64_t v7 = __dst;
  uint64_t v9 = a2;
  uint64_t v10 = __src;
  int v56 = a6 & 1;
  int64_t v11 = a2 - __src;
  int64_t v12 = (a2 - __src) / 136;
  uint64_t v13 = a3 - (void)a2;
  uint64_t v14 = (uint64_t)(a3 - (void)a2) / 136;
  long long v79 = __src;
  long long v78 = __dst;
  if (v12 >= v14)
  {
    if (v13 < -135) {
      goto LABEL_51;
    }
    if (__dst != a2 || &a2[136 * v14] <= __dst) {
      memmove(__dst, a2, 136 * v14);
    }
    uint64_t v34 = &v7[136 * v14];
    uint64_t v77 = v34;
    long long v79 = v9;
    if (v10 >= v9 || v13 < 136) {
      goto LABEL_50;
    }
    uint64_t v35 = (char *)(a3 - 136);
    uint64_t v55 = v10;
    while (1)
    {
      long long v59 = *(_OWORD *)(v34 - 136);
      long long v36 = *(_OWORD *)(v34 - 120);
      long long v37 = *(_OWORD *)(v34 - 104);
      long long v38 = *(_OWORD *)(v34 - 72);
      long long v62 = *(_OWORD *)(v34 - 88);
      long long v63 = v38;
      long long v60 = v36;
      long long v61 = v37;
      long long v39 = *(_OWORD *)(v34 - 56);
      long long v40 = *(_OWORD *)(v34 - 40);
      long long v41 = *(_OWORD *)(v34 - 24);
      uint64_t v67 = *((void *)v34 - 1);
      long long v65 = v40;
      long long v66 = v41;
      long long v64 = v39;
      memmove(__dsta, v34 - 136, 0x88uLL);
      uint64_t v42 = v9 - 136;
      long long v68 = *(_OWORD *)(v9 - 136);
      long long v43 = *(_OWORD *)(v9 - 120);
      long long v44 = *(_OWORD *)(v9 - 104);
      long long v45 = *(_OWORD *)(v9 - 72);
      long long v71 = *(_OWORD *)(v9 - 88);
      long long v72 = v45;
      long long v69 = v43;
      long long v70 = v44;
      long long v46 = *(_OWORD *)(v9 - 56);
      long long v47 = *(_OWORD *)(v9 - 40);
      long long v48 = *(_OWORD *)(v9 - 24);
      uint64_t v76 = *((void *)v9 - 1);
      long long v74 = v47;
      long long v75 = v48;
      long long v73 = v46;
      memmove(v57, v9 - 136, 0x88uLL);
      sub_1AFD76370((uint64_t)&v59);
      sub_1AFD76370((uint64_t)&v68);
      char v49 = sub_1AFEEA9A8((uint64_t)__dsta, (uint64_t)v57, v56);
      if (v6)
      {
        uint64_t v77 = v34;
        long long v79 = v9;
LABEL_46:
        sub_1AFD76408((uint64_t)&v68);
        sub_1AFD76408((uint64_t)&v59);
        goto LABEL_50;
      }
      char v50 = v49;
      uint64_t v51 = v7;
      uint64_t v52 = v35 + 136;
      sub_1AFD76408((uint64_t)&v68);
      sub_1AFD76408((uint64_t)&v59);
      if (v50)
      {
        if (v52 == v9)
        {
          BOOL v53 = v35 >= v9;
          v9 -= 136;
          uint64_t v7 = v51;
          if (!v53) {
            goto LABEL_40;
          }
          goto LABEL_39;
        }
        v9 -= 136;
      }
      else
      {
        uint64_t v42 = v34 - 136;
        if (v52 == v34)
        {
          BOOL v53 = v35 >= v34;
          v34 -= 136;
          uint64_t v7 = v51;
          if (!v53) {
            goto LABEL_40;
          }
          goto LABEL_39;
        }
        v34 -= 136;
      }
      uint64_t v7 = v51;
LABEL_39:
      memmove(v35, v42, 0x88uLL);
LABEL_40:
      if (v34 <= v7 || v9 <= v55)
      {
        uint64_t v77 = v34;
        long long v79 = v9;
        goto LABEL_50;
      }
      v35 -= 136;
    }
  }
  if (v11 < -135)
  {
LABEL_51:
    swift_release();
    uint64_t result = sub_1AFFCBA28();
    __break(1u);
    return result;
  }
  if (__dst != __src || &__src[136 * v12] <= __dst) {
    memmove(__dst, __src, 136 * v12);
  }
  uint64_t v15 = &v7[136 * v12];
  uint64_t v77 = v15;
  if ((unint64_t)v9 >= a3 || v11 < 136) {
    goto LABEL_50;
  }
  uint64_t v16 = v7;
  while (1)
  {
    long long v59 = *(_OWORD *)v9;
    long long v17 = *((_OWORD *)v9 + 1);
    long long v18 = *((_OWORD *)v9 + 2);
    long long v19 = *((_OWORD *)v9 + 4);
    long long v62 = *((_OWORD *)v9 + 3);
    long long v63 = v19;
    long long v60 = v17;
    long long v61 = v18;
    long long v20 = *((_OWORD *)v9 + 5);
    long long v21 = *((_OWORD *)v9 + 6);
    long long v22 = *((_OWORD *)v9 + 7);
    uint64_t v67 = *((void *)v9 + 16);
    long long v65 = v21;
    long long v66 = v22;
    long long v64 = v20;
    memmove(__dsta, v9, 0x88uLL);
    long long v68 = *(_OWORD *)v16;
    long long v23 = *((_OWORD *)v16 + 1);
    long long v24 = *((_OWORD *)v16 + 2);
    long long v25 = *((_OWORD *)v16 + 4);
    long long v71 = *((_OWORD *)v16 + 3);
    long long v72 = v25;
    long long v69 = v23;
    long long v70 = v24;
    long long v26 = *((_OWORD *)v16 + 5);
    long long v27 = *((_OWORD *)v16 + 6);
    long long v28 = *((_OWORD *)v16 + 7);
    uint64_t v76 = *((void *)v16 + 16);
    long long v74 = v27;
    long long v75 = v28;
    long long v73 = v26;
    memmove(v57, v16, 0x88uLL);
    sub_1AFD76370((uint64_t)&v59);
    sub_1AFD76370((uint64_t)&v68);
    char v29 = sub_1AFEEA9A8((uint64_t)__dsta, (uint64_t)v57, v56);
    if (v6)
    {
      long long v78 = v7;
      long long v79 = v10;
      goto LABEL_46;
    }
    char v30 = v29;
    sub_1AFD76408((uint64_t)&v68);
    sub_1AFD76408((uint64_t)&v59);
    if ((v30 & 1) == 0)
    {
      uint64_t v7 = v16 + 136;
      uint64_t v31 = v16;
      BOOL v32 = v10 == v16;
      v16 += 136;
      if (v32) {
        goto LABEL_16;
      }
LABEL_15:
      memmove(v10, v31, 0x88uLL);
      goto LABEL_16;
    }
    uint64_t v31 = v9;
    BOOL v32 = v10 == v9;
    v9 += 136;
    if (!v32) {
      goto LABEL_15;
    }
LABEL_16:
    uint64_t v33 = v10 + 136;
    if (v16 >= v15)
    {
      long long v78 = v7;
      goto LABEL_49;
    }
    if ((unint64_t)v9 >= a3) {
      break;
    }
    v10 += 136;
  }
  long long v78 = v7;
  uint64_t v33 = v10 + 136;
LABEL_49:
  long long v79 = v33;
LABEL_50:
  sub_1AFEE61C8((void **)&v79, &v78, &v77);
  swift_release();
  return 1;
}

char *sub_1AFEE5E44(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1AFEEDB78(0, &qword_1EB811358, (uint64_t (*)(uint64_t))sub_1AFEEDBDC, MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1AFEE5F6C(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 15;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -16)
  {
    uint64_t result = (char *)sub_1AFFCBA28();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
    {
      return (char *)memmove(result, v3, 16 * v7);
    }
  }
  return result;
}

char *sub_1AFEE6028(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -48)
  {
    uint64_t result = (char *)sub_1AFFCBA28();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    size_t v6 = 48 * (v4 / 48);
    if (result != v3 || result >= &v3[v6])
    {
      return (char *)memmove(result, v3, v6);
    }
  }
  return result;
}

char *sub_1AFEE60F4(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -144)
  {
    uint64_t result = (char *)sub_1AFFCBA28();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 144;
    if (result != v3 || result >= &v3[144 * v6])
    {
      return (char *)memmove(result, v3, 144 * v6);
    }
  }
  return result;
}

char *sub_1AFEE61C8(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -136)
  {
    uint64_t result = (char *)sub_1AFFCBA28();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 136;
    if (result != v3 || result >= &v3[136 * v6])
    {
      return (char *)memmove(result, v3, 136 * v6);
    }
  }
  return result;
}

char *sub_1AFEE6294(uint64_t a1)
{
  return sub_1AFEE5E44(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1AFEE62A8(uint64_t a1)
{
  return sub_1AFD9DF8C(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1AFEE62BC(uint64_t a1)
{
  return sub_1AFD9E468(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1AFEE62D0(uint64_t a1)
{
  return sub_1AFD9DDE0(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1AFEE62E4(uint64_t a1)
{
  return sub_1AFD9E604(0, *(void *)(a1 + 16), 0, (char *)a1);
}

BOOL sub_1AFEE62F8(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v46 = a4;
  uint64_t v7 = a4 & 1;
  sub_1AFEEDB78(0, &qword_1EB817B00, (uint64_t (*)(uint64_t))type metadata accessor for Quote, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v43 - v12;
  uint64_t v15 = *(void *)(a2 + 16);
  uint64_t v14 = *(void *)(a2 + 24);
  if (!*(void *)(a3 + 16))
  {
    uint64_t v26 = type metadata accessor for Quote();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v13, 1, 1, v26);
    goto LABEL_7;
  }
  uint64_t v45 = *(void *)(a2 + 24);
  uint64_t v16 = *(void *)(a1 + 16);
  uint64_t v17 = *(void *)(a1 + 24);
  sub_1AFFC8E38();
  unint64_t v18 = sub_1AFD79CC8(v16, v17);
  if (v19)
  {
    unint64_t v20 = v18;
    uint64_t v43 = v15;
    uint64_t v21 = *(void *)(a3 + 56);
    uint64_t v22 = type metadata accessor for Quote();
    uint64_t v23 = *(void *)(v22 - 8);
    unsigned int v44 = v7;
    uint64_t v24 = v23;
    uint64_t v25 = v21 + *(void *)(v23 + 72) * v20;
    uint64_t v15 = v43;
    sub_1AFEEDB14(v25, (uint64_t)v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v13, 0, 1, v22);
    uint64_t v7 = v44;
  }
  else
  {
    uint64_t v22 = type metadata accessor for Quote();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v13, 1, 1, v22);
  }
  swift_bridgeObjectRelease();
  type metadata accessor for Quote();
  int v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48))(v13, 1, v22);
  uint64_t v14 = v45;
  if (v27 == 1)
  {
LABEL_7:
    sub_1AFE9D824((uint64_t)v13);
    char v28 = 1;
    double v29 = 0.0;
    if (*(void *)(a3 + 16)) {
      goto LABEL_8;
    }
LABEL_11:
    uint64_t v37 = type metadata accessor for Quote();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v10, 1, 1, v37);
    goto LABEL_14;
  }
  double v29 = *((double *)v13 + 2);
  char v28 = v13[24];
  sub_1AFEEDAB8((uint64_t)v13);
  if (!*(void *)(a3 + 16)) {
    goto LABEL_11;
  }
LABEL_8:
  sub_1AFFC8E38();
  unint64_t v30 = sub_1AFD79CC8(v15, v14);
  if (v31)
  {
    unint64_t v32 = v30;
    uint64_t v33 = *(void *)(a3 + 56);
    uint64_t v34 = type metadata accessor for Quote();
    uint64_t v35 = v7;
    uint64_t v36 = *(void *)(v34 - 8);
    sub_1AFEEDB14(v33 + *(void *)(v36 + 72) * v32, (uint64_t)v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v10, 0, 1, v34);
    uint64_t v7 = v35;
  }
  else
  {
    uint64_t v34 = type metadata accessor for Quote();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v10, 1, 1, v34);
  }
  swift_bridgeObjectRelease();
  type metadata accessor for Quote();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 48))(v10, 1, v34) == 1)
  {
LABEL_14:
    sub_1AFE9D824((uint64_t)v10);
    if (v28) {
      return 0;
    }
    return v7;
  }
  char v39 = v46;
  double v40 = *((double *)v10 + 2);
  char v41 = v10[24];
  sub_1AFEEDAB8((uint64_t)v10);
  if (v28)
  {
    uint64_t v7 = (v39 & 1) == 0;
    if ((v41 & 1) == 0) {
      return v7;
    }
    return 0;
  }
  if ((v41 & 1) == 0)
  {
    if (v39) {
      return v40 < v29;
    }
    else {
      return v29 < v40;
    }
  }
  return v7;
}

void sub_1AFEE6798(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, int a6)
{
  int v77 = a6;
  sub_1AFEEDB78(0, &qword_1EB817B00, (uint64_t (*)(uint64_t))type metadata accessor for Quote, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v107 = (uint64_t)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v70 - v14;
  uint64_t v78 = a3;
  uint64_t v72 = a2;
  if (a3 != a2)
  {
    uint64_t v16 = *a4;
    long long v75 = (char *)&v70 - v14;
    uint64_t v76 = v16;
    uint64_t v17 = (long long *)(v16 + 136 * v78);
    uint64_t v71 = a1 + 1;
    uint64_t v74 = a5;
LABEL_6:
    uint64_t v18 = v71;
    long long v73 = v17;
    while (1)
    {
      long long v89 = *v17;
      long long v19 = v17[1];
      long long v20 = v17[2];
      long long v21 = v17[4];
      long long v92 = v17[3];
      long long v93 = v21;
      long long v90 = v19;
      long long v91 = v20;
      long long v22 = v17[5];
      long long v23 = v17[6];
      long long v24 = v17[7];
      uint64_t v97 = *((void *)v17 + 16);
      long long v95 = v23;
      long long v96 = v24;
      long long v94 = v22;
      long long v98 = *(long long *)((char *)v17 - 136);
      long long v25 = *(long long *)((char *)v17 - 120);
      long long v26 = *(long long *)((char *)v17 - 104);
      long long v27 = *(long long *)((char *)v17 - 72);
      long long v101 = *(long long *)((char *)v17 - 88);
      long long v102 = v27;
      long long v99 = v25;
      long long v100 = v26;
      long long v28 = *(long long *)((char *)v17 - 56);
      long long v29 = *(long long *)((char *)v17 - 40);
      long long v30 = *(long long *)((char *)v17 - 24);
      uint64_t v106 = *((void *)v17 - 1);
      long long v104 = v29;
      long long v105 = v30;
      long long v103 = v28;
      if (!*(void *)(a5 + 16)) {
        break;
      }
      uint64_t v79 = v18;
      long long v31 = v90;
      sub_1AFD76370((uint64_t)&v89);
      sub_1AFD76370((uint64_t)&v98);
      sub_1AFFC8E38();
      unint64_t v32 = sub_1AFD79CC8(v31, *((uint64_t *)&v31 + 1));
      if (v33)
      {
        unint64_t v34 = v32;
        uint64_t v35 = *(void *)(a5 + 56);
        uint64_t v36 = type metadata accessor for Quote();
        uint64_t v37 = *(void *)(v36 - 8);
        uint64_t v38 = v35 + *(void *)(v37 + 72) * v34;
        uint64_t v15 = v75;
        sub_1AFEEDB14(v38, (uint64_t)v75);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v15, 0, 1, v36);
        a5 = v74;
      }
      else
      {
        uint64_t v36 = type metadata accessor for Quote();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v15, 1, 1, v36);
      }
      swift_bridgeObjectRelease();
      type metadata accessor for Quote();
      int v40 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v36 - 8) + 48))(v15, 1, v36);
      uint64_t v18 = v79;
      if (v40 == 1) {
        goto LABEL_13;
      }
      double v42 = *((double *)v15 + 2);
      LODWORD(v41) = v15[24];
      sub_1AFEEDAB8((uint64_t)v15);
      if (!*(void *)(a5 + 16))
      {
LABEL_17:
        uint64_t v53 = type metadata accessor for Quote();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v107, 1, 1, v53);
LABEL_20:
        sub_1AFE9D824(v107);
        if (v41) {
          goto LABEL_4;
        }
LABEL_21:
        sub_1AFD76408((uint64_t)&v98);
        sub_1AFD76408((uint64_t)&v89);
        if ((v77 & 1) == 0) {
          goto LABEL_5;
        }
        goto LABEL_22;
      }
LABEL_14:
      long long v43 = v99;
      sub_1AFFC8E38();
      unint64_t v44 = sub_1AFD79CC8(v43, *((uint64_t *)&v43 + 1));
      if (v45)
      {
        unint64_t v46 = v44;
        uint64_t v47 = *(void *)(a5 + 56);
        uint64_t v48 = type metadata accessor for Quote();
        uint64_t v49 = *(void *)(v48 - 8);
        LODWORD(v79) = v41;
        uint64_t v41 = v18;
        uint64_t v50 = v49;
        uint64_t v51 = v47 + *(void *)(v49 + 72) * v46;
        uint64_t v52 = v107;
        sub_1AFEEDB14(v51, v107);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v50 + 56))(v52, 0, 1, v48);
        uint64_t v18 = v41;
        LOBYTE(v41) = v79;
        a5 = v74;
      }
      else
      {
        uint64_t v48 = type metadata accessor for Quote();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v107, 1, 1, v48);
      }
      swift_bridgeObjectRelease();
      type metadata accessor for Quote();
      int v54 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 48))(v107, 1, v48);
      uint64_t v15 = v75;
      if (v54 == 1) {
        goto LABEL_20;
      }
      double v68 = *(double *)(v107 + 16);
      char v69 = *(unsigned char *)(v107 + 24);
      sub_1AFEEDAB8(v107);
      if (v41)
      {
        if (v69)
        {
LABEL_4:
          sub_1AFD76408((uint64_t)&v98);
          sub_1AFD76408((uint64_t)&v89);
LABEL_5:
          uint64_t v17 = (long long *)((char *)v73 + 136);
          if (++v78 == v72) {
            return;
          }
          goto LABEL_6;
        }
        sub_1AFD76408((uint64_t)&v98);
        sub_1AFD76408((uint64_t)&v89);
        if (v77) {
          goto LABEL_5;
        }
      }
      else
      {
        if (v69) {
          goto LABEL_21;
        }
        sub_1AFD76408((uint64_t)&v98);
        sub_1AFD76408((uint64_t)&v89);
        if (v77)
        {
          if (v68 >= v42) {
            goto LABEL_5;
          }
        }
        else if (v42 >= v68)
        {
          goto LABEL_5;
        }
      }
LABEL_22:
      if (!v76)
      {
        __break(1u);
        return;
      }
      uint64_t v55 = (uint64_t)v17 - 136;
      long long v56 = v17[7];
      long long v86 = v17[6];
      long long v87 = v56;
      uint64_t v88 = *((void *)v17 + 16);
      long long v57 = v17[3];
      long long v82 = v17[2];
      long long v83 = v57;
      long long v58 = v17[5];
      long long v84 = v17[4];
      long long v85 = v58;
      long long v59 = v17[1];
      long long v80 = *v17;
      long long v81 = v59;
      long long v60 = *(long long *)((char *)v17 - 56);
      v17[4] = *(long long *)((char *)v17 - 72);
      v17[5] = v60;
      long long v61 = *(long long *)((char *)v17 - 24);
      void v17[6] = *(long long *)((char *)v17 - 40);
      v17[7] = v61;
      *((void *)v17 + 16) = *((void *)v17 - 1);
      long long v62 = *(long long *)((char *)v17 - 88);
      void v17[2] = *(long long *)((char *)v17 - 104);
      v17[3] = v62;
      long long v63 = *(long long *)((char *)v17 - 120);
      *uint64_t v17 = *(long long *)((char *)v17 - 136);
      v17[1] = v63;
      long long v64 = v85;
      *(_OWORD *)(v55 + 64) = v84;
      *(_OWORD *)(v55 + 80) = v64;
      long long v65 = v87;
      *(_OWORD *)(v55 + 96) = v86;
      *(_OWORD *)(v55 + 112) = v65;
      *(void *)(v55 + 128) = v88;
      long long v66 = v83;
      *(_OWORD *)(v55 + 32) = v82;
      *(_OWORD *)(v55 + 48) = v66;
      long long v67 = v81;
      *(_OWORD *)uint64_t v55 = v80;
      *(_OWORD *)(v55 + 16) = v67;
      if (v78 == v18) {
        goto LABEL_5;
      }
      ++v18;
      uint64_t v17 = (long long *)((char *)v17 - 136);
    }
    uint64_t v39 = type metadata accessor for Quote();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v15, 1, 1, v39);
    sub_1AFD76370((uint64_t)&v89);
    sub_1AFD76370((uint64_t)&v98);
LABEL_13:
    sub_1AFE9D824((uint64_t)v15);
    LODWORD(v41) = 1;
    double v42 = 0.0;
    if (!*(void *)(a5 + 16)) {
      goto LABEL_17;
    }
    goto LABEL_14;
  }
}

uint64_t sub_1AFEE6E0C(uint64_t *a1, uint64_t a2, uint64_t a3, char a4)
{
  int v226 = a4 & 1;
  sub_1AFEEDB78(0, &qword_1EB817B00, (uint64_t (*)(uint64_t))type metadata accessor for Quote, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v208 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  unint64_t v229 = (unint64_t)&v208 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v221 = (uint64_t)&v208 - v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v215 = (uint64_t)&v208 - v15;
  uint64_t v16 = a1[1];
  swift_bridgeObjectRetain_n();
  uint64_t v220 = a3;
  swift_retain_n();
  uint64_t v17 = sub_1AFFCBC78();
  if (v17 >= v16)
  {
    if (v16 < 0) {
      goto LABEL_195;
    }
    if (v16)
    {
      sub_1AFFC8E38();
      sub_1AFFC8E48();
      uint64_t v21 = v223;
      sub_1AFEE6798(0, v16, 1, a1, a2, v226);
      swift_bridgeObjectRelease_n();
      swift_release_n();
      uint64_t v223 = v21;
    }
    else
    {
      swift_release();
      swift_bridgeObjectRelease_n();
    }
    goto LABEL_172;
  }
  uint64_t v212 = v17;
  if (v16 >= 0) {
    uint64_t v18 = v16;
  }
  else {
    uint64_t v18 = v16 + 1;
  }
  if (v16 >= -1)
  {
    uint64_t v224 = a2;
    uint64_t v216 = v16;
    uint64_t v209 = a1;
    if (v16 < 2)
    {
      uint64_t v218 = (char *)(MEMORY[0x1E4FBC860] + 32);
      uint64_t v211 = MEMORY[0x1E4FBC860];
      if (v16 != 1)
      {
        uint64_t v195 = (char *)MEMORY[0x1E4FBC860];
        unint64_t v139 = *(void *)(MEMORY[0x1E4FBC860] + 16);
        if (v139 < 2) {
          goto LABEL_170;
        }
        goto LABEL_157;
      }
    }
    else
    {
      uint64_t v19 = v18 >> 1;
      uint64_t v20 = sub_1AFFCB258();
      *(void *)(v20 + 16) = v19;
      uint64_t v211 = v20;
      uint64_t v218 = (char *)(v20 + 32);
    }
    long long v22 = 0;
    uint64_t v23 = *a1;
    BOOL v210 = v226 == 0;
    uint64_t v228 = v23;
    uint64_t v208 = v23 - 136;
    uint64_t v219 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v225 = v9;
    uint64_t v24 = v216;
    uint64_t v25 = v221;
LABEL_13:
    long long v26 = v22 + 1;
    uint64_t v213 = (uint64_t)v22;
    if ((uint64_t)(v22 + 1) >= v24)
    {
      ++v22;
      goto LABEL_60;
    }
    long long v27 = v22;
    uint64_t v28 = v228 + 136 * (void)v26;
    long long v248 = *(_OWORD *)v28;
    long long v29 = *(_OWORD *)(v28 + 16);
    long long v30 = *(_OWORD *)(v28 + 32);
    long long v31 = *(_OWORD *)(v28 + 64);
    long long v251 = *(_OWORD *)(v28 + 48);
    long long v252 = v31;
    long long v249 = v29;
    long long v250 = v30;
    long long v32 = *(_OWORD *)(v28 + 80);
    long long v33 = *(_OWORD *)(v28 + 96);
    long long v34 = *(_OWORD *)(v28 + 112);
    uint64_t v256 = *(void *)(v28 + 128);
    long long v254 = v33;
    long long v255 = v34;
    long long v253 = v32;
    long long v244 = *(_OWORD *)(v28 + 80);
    long long v245 = *(_OWORD *)(v28 + 96);
    long long v246 = *(_OWORD *)(v28 + 112);
    uint64_t v247 = *(void *)(v28 + 128);
    long long v240 = *(_OWORD *)(v28 + 16);
    long long v241 = *(_OWORD *)(v28 + 32);
    long long v242 = *(_OWORD *)(v28 + 48);
    long long v243 = *(_OWORD *)(v28 + 64);
    long long v239 = *(_OWORD *)v28;
    uint64_t v35 = v228 + 136 * (void)v22;
    long long v257 = *(_OWORD *)v35;
    long long v36 = *(_OWORD *)(v35 + 16);
    long long v37 = *(_OWORD *)(v35 + 32);
    long long v38 = *(_OWORD *)(v35 + 64);
    long long v260 = *(_OWORD *)(v35 + 48);
    long long v261 = v38;
    long long v258 = v36;
    long long v259 = v37;
    long long v39 = *(_OWORD *)(v35 + 80);
    long long v40 = *(_OWORD *)(v35 + 96);
    long long v41 = *(_OWORD *)(v35 + 112);
    uint64_t v265 = *(void *)(v35 + 128);
    long long v263 = v40;
    long long v264 = v41;
    long long v262 = v39;
    long long v235 = *(_OWORD *)(v35 + 80);
    long long v236 = *(_OWORD *)(v35 + 96);
    long long v237 = *(_OWORD *)(v35 + 112);
    uint64_t v238 = *(void *)(v35 + 128);
    long long v231 = *(_OWORD *)(v35 + 16);
    long long v232 = *(_OWORD *)(v35 + 32);
    long long v233 = *(_OWORD *)(v35 + 48);
    long long v234 = *(_OWORD *)(v35 + 64);
    long long v230 = *(_OWORD *)v35;
    sub_1AFD76370((uint64_t)&v248);
    sub_1AFD76370((uint64_t)&v257);
    uint64_t v42 = v223;
    LODWORD(v227) = sub_1AFEE62F8((uint64_t)&v239, (uint64_t)&v230, a2, v226);
    uint64_t v223 = v42;
    if (!v42)
    {
      sub_1AFD76408((uint64_t)&v257);
      sub_1AFD76408((uint64_t)&v248);
      v22 += 2;
      if ((uint64_t)(v27 + 2) >= v24) {
        goto LABEL_49;
      }
      while (1)
      {
        uint64_t v266 = v22;
        uint64_t v43 = v228 + 136 * (void)v22;
        long long v230 = *(_OWORD *)v43;
        long long v44 = *(_OWORD *)(v43 + 16);
        long long v45 = *(_OWORD *)(v43 + 32);
        long long v46 = *(_OWORD *)(v43 + 64);
        long long v233 = *(_OWORD *)(v43 + 48);
        long long v234 = v46;
        long long v231 = v44;
        long long v232 = v45;
        long long v47 = *(_OWORD *)(v43 + 80);
        long long v48 = *(_OWORD *)(v43 + 96);
        long long v49 = *(_OWORD *)(v43 + 112);
        uint64_t v238 = *(void *)(v43 + 128);
        long long v236 = v48;
        long long v237 = v49;
        long long v235 = v47;
        uint64_t v50 = v228 + 136 * (void)v26;
        long long v239 = *(_OWORD *)v50;
        long long v51 = *(_OWORD *)(v50 + 16);
        long long v52 = *(_OWORD *)(v50 + 32);
        long long v53 = *(_OWORD *)(v50 + 64);
        long long v242 = *(_OWORD *)(v50 + 48);
        long long v243 = v53;
        long long v240 = v51;
        long long v241 = v52;
        long long v54 = *(_OWORD *)(v50 + 80);
        long long v55 = *(_OWORD *)(v50 + 96);
        long long v56 = *(_OWORD *)(v50 + 112);
        uint64_t v247 = *(void *)(v50 + 128);
        long long v245 = v55;
        long long v246 = v56;
        long long v244 = v54;
        if (!*(void *)(a2 + 16)) {
          break;
        }
        long long v57 = v231;
        sub_1AFD76370((uint64_t)&v230);
        sub_1AFD76370((uint64_t)&v239);
        sub_1AFFC8E38();
        unint64_t v58 = sub_1AFD79CC8(v57, *((uint64_t *)&v57 + 1));
        if (v59)
        {
          unint64_t v60 = v58;
          uint64_t v61 = *(void *)(a2 + 56);
          uint64_t v62 = type metadata accessor for Quote();
          uint64_t v63 = *(void *)(v62 - 8);
          uint64_t v64 = v61 + *(void *)(v63 + 72) * v60;
          uint64_t v65 = v215;
          sub_1AFEEDB14(v64, v215);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v63 + 56))(v65, 0, 1, v62);
          uint64_t v25 = v221;
        }
        else
        {
          uint64_t v62 = type metadata accessor for Quote();
          uint64_t v65 = v215;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v215, 1, 1, v62);
        }
        swift_bridgeObjectRelease();
        type metadata accessor for Quote();
        int v67 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 48))(v65, 1, v62);
        uint64_t v24 = v216;
        if (v67 == 1) {
          goto LABEL_22;
        }
        double v69 = *(double *)(v65 + 16);
        uint64_t v78 = v65;
        char v68 = *(unsigned char *)(v65 + 24);
        sub_1AFEEDAB8(v78);
        if (!*(void *)(a2 + 16))
        {
LABEL_26:
          uint64_t v79 = type metadata accessor for Quote();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 56))(v25, 1, 1, v79);
LABEL_29:
          sub_1AFE9D824(v25);
          if (v68) {
            goto LABEL_30;
          }
LABEL_37:
          sub_1AFD76408((uint64_t)&v239);
          sub_1AFD76408((uint64_t)&v230);
          int v82 = v226;
          goto LABEL_38;
        }
LABEL_23:
        long long v70 = v240;
        sub_1AFFC8E38();
        unint64_t v71 = sub_1AFD79CC8(v70, *((uint64_t *)&v70 + 1));
        if (v72)
        {
          unint64_t v73 = v71;
          uint64_t v74 = *(void *)(a2 + 56);
          uint64_t v75 = type metadata accessor for Quote();
          uint64_t v76 = *(void *)(v75 - 8);
          uint64_t v77 = v74 + *(void *)(v76 + 72) * v73;
          uint64_t v25 = v221;
          sub_1AFEEDB14(v77, v221);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v76 + 56))(v25, 0, 1, v75);
        }
        else
        {
          uint64_t v75 = type metadata accessor for Quote();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v75 - 8) + 56))(v25, 1, 1, v75);
        }
        uint64_t v24 = v216;
        swift_bridgeObjectRelease();
        type metadata accessor for Quote();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v75 - 8) + 48))(v25, 1, v75) == 1) {
          goto LABEL_29;
        }
        double v80 = *(double *)(v25 + 16);
        char v81 = *(unsigned char *)(v25 + 24);
        sub_1AFEEDAB8(v25);
        if (v68)
        {
          if ((v81 & 1) == 0)
          {
            sub_1AFD76408((uint64_t)&v239);
            sub_1AFD76408((uint64_t)&v230);
            int v82 = v210;
            goto LABEL_38;
          }
LABEL_30:
          sub_1AFD76408((uint64_t)&v239);
          sub_1AFD76408((uint64_t)&v230);
          if (v227)
          {
            uint64_t v9 = v225;
            long long v22 = v266;
LABEL_52:
            if ((uint64_t)v22 >= v213)
            {
              if (v213 < (uint64_t)v22)
              {
                long long v84 = v22;
                long long v85 = (_OWORD *)(v208 + 136 * (void)v22);
                long long v86 = (char *)v213;
                long long v87 = (_OWORD *)(v228 + 136 * v213);
                do
                {
                  if (v86 != --v84)
                  {
                    if (!v228) {
                      goto LABEL_201;
                    }
                    long long v244 = v87[5];
                    long long v245 = v87[6];
                    long long v246 = v87[7];
                    uint64_t v247 = *((void *)v87 + 16);
                    long long v240 = v87[1];
                    long long v241 = v87[2];
                    long long v242 = v87[3];
                    long long v243 = v87[4];
                    long long v239 = *v87;
                    memmove(v87, v85, 0x88uLL);
                    v85[5] = v244;
                    v85[6] = v245;
                    v85[7] = v246;
                    *((void *)v85 + 16) = v247;
                    v85[1] = v240;
                    v85[2] = v241;
                    v85[3] = v242;
                    v85[4] = v243;
                    *long long v85 = v239;
                  }
                  ++v86;
                  long long v85 = (_OWORD *)((char *)v85 - 136);
                  long long v87 = (_OWORD *)((char *)v87 + 136);
                }
                while ((uint64_t)v86 < (uint64_t)v84);
                uint64_t v9 = v225;
                uint64_t v24 = v216;
              }
              goto LABEL_60;
            }
LABEL_198:
            __break(1u);
LABEL_199:
            swift_release_n();
            swift_bridgeObjectRelease_n();
            __break(1u);
LABEL_200:
            swift_release_n();
            swift_bridgeObjectRelease_n();
            __break(1u);
LABEL_201:
            swift_release_n();
            swift_bridgeObjectRelease_n();
            __break(1u);
LABEL_202:
            swift_release_n();
            swift_bridgeObjectRelease_n();
            __break(1u);
            goto LABEL_203;
          }
          long long v26 = v266;
          long long v22 = v266 + 1;
          uint64_t v9 = v225;
          if ((uint64_t)(v266 + 1) >= v24) {
            goto LABEL_60;
          }
        }
        else
        {
          if (v81) {
            goto LABEL_37;
          }
          sub_1AFD76408((uint64_t)&v239);
          sub_1AFD76408((uint64_t)&v230);
          if (v226) {
            BOOL v83 = v80 < v69;
          }
          else {
            BOOL v83 = v69 < v80;
          }
          int v82 = v83;
LABEL_38:
          uint64_t v9 = v225;
          if ((v227 ^ v82))
          {
            long long v22 = v266;
LABEL_49:
            if (v227) {
              goto LABEL_52;
            }
LABEL_60:
            if ((uint64_t)v22 >= v24) {
              goto LABEL_101;
            }
            if (__OFSUB__(v22, v213)) {
              goto LABEL_194;
            }
            if ((uint64_t)&v22[-v213] >= v212) {
              goto LABEL_101;
            }
            uint64_t v88 = (char *)(v213 + v212);
            if (__OFADD__(v213, v212)) {
              goto LABEL_196;
            }
            if ((uint64_t)v88 >= v24) {
              uint64_t v88 = (char *)v24;
            }
            if ((uint64_t)v88 < v213)
            {
LABEL_197:
              __break(1u);
              goto LABEL_198;
            }
            if (v22 == v88) {
              goto LABEL_101;
            }
            uint64_t v217 = v88;
            uint64_t v89 = v229;
            unint64_t v90 = v228 + 136 * (void)v22;
            uint64_t v214 = (char *)(v213 + 1);
            while (2)
            {
              uint64_t v227 = v22;
              long long v92 = v214;
              uint64_t v222 = v90;
              while (2)
              {
                uint64_t v266 = v92;
                long long v248 = *(_OWORD *)v90;
                long long v93 = *(_OWORD *)(v90 + 16);
                long long v94 = *(_OWORD *)(v90 + 32);
                long long v95 = *(_OWORD *)(v90 + 64);
                long long v251 = *(_OWORD *)(v90 + 48);
                long long v252 = v95;
                long long v249 = v93;
                long long v250 = v94;
                long long v96 = *(_OWORD *)(v90 + 80);
                long long v97 = *(_OWORD *)(v90 + 96);
                long long v98 = *(_OWORD *)(v90 + 112);
                uint64_t v256 = *(void *)(v90 + 128);
                long long v254 = v97;
                long long v255 = v98;
                long long v253 = v96;
                long long v257 = *(_OWORD *)(v90 - 136);
                long long v99 = *(_OWORD *)(v90 - 120);
                long long v100 = *(_OWORD *)(v90 - 104);
                long long v101 = *(_OWORD *)(v90 - 72);
                long long v260 = *(_OWORD *)(v90 - 88);
                long long v261 = v101;
                long long v258 = v99;
                long long v259 = v100;
                long long v102 = *(_OWORD *)(v90 - 56);
                long long v103 = *(_OWORD *)(v90 - 40);
                long long v104 = *(_OWORD *)(v90 - 24);
                uint64_t v265 = *(void *)(v90 - 8);
                long long v263 = v103;
                long long v264 = v104;
                long long v262 = v102;
                if (!*(void *)(a2 + 16))
                {
                  uint64_t v113 = type metadata accessor for Quote();
                  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v113 - 8) + 56))(v89, 1, 1, v113);
                  sub_1AFD76370((uint64_t)&v248);
                  sub_1AFD76370((uint64_t)&v257);
                  goto LABEL_78;
                }
                long long v105 = v249;
                sub_1AFD76370((uint64_t)&v248);
                sub_1AFD76370((uint64_t)&v257);
                sub_1AFFC8E38();
                unint64_t v106 = sub_1AFD79CC8(v105, *((uint64_t *)&v105 + 1));
                if (v107)
                {
                  unint64_t v108 = v106;
                  uint64_t v109 = *(void *)(a2 + 56);
                  uint64_t v110 = type metadata accessor for Quote();
                  uint64_t v111 = *(void *)(v110 - 8);
                  uint64_t v112 = v109 + *(void *)(v111 + 72) * v108;
                  uint64_t v9 = v225;
                  uint64_t v89 = v229;
                  sub_1AFEEDB14(v112, v229);
                  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v111 + 56))(v89, 0, 1, v110);
                }
                else
                {
                  uint64_t v110 = type metadata accessor for Quote();
                  uint64_t v89 = v229;
                  (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v110 - 8) + 56))(v229, 1, 1, v110);
                }
                swift_bridgeObjectRelease();
                type metadata accessor for Quote();
                if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v110 - 8) + 48))(v89, 1, v110) == 1)
                {
LABEL_78:
                  sub_1AFE9D824(v89);
                  char v114 = 1;
                  double v115 = 0.0;
                  if (*(void *)(a2 + 16)) {
                    goto LABEL_79;
                  }
LABEL_82:
                  uint64_t v124 = type metadata accessor for Quote();
                  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v124 - 8) + 56))(v9, 1, 1, v124);
                  goto LABEL_85;
                }
                double v115 = *(double *)(v89 + 16);
                char v114 = *(unsigned char *)(v89 + 24);
                sub_1AFEEDAB8(v89);
                if (!*(void *)(a2 + 16)) {
                  goto LABEL_82;
                }
LABEL_79:
                long long v116 = v258;
                sub_1AFFC8E38();
                unint64_t v117 = sub_1AFD79CC8(v116, *((uint64_t *)&v116 + 1));
                if (v118)
                {
                  unint64_t v119 = v117;
                  uint64_t v120 = *(void *)(a2 + 56);
                  uint64_t v121 = type metadata accessor for Quote();
                  uint64_t v122 = *(void *)(v121 - 8);
                  uint64_t v123 = v120 + *(void *)(v122 + 72) * v119;
                  uint64_t v9 = v225;
                  sub_1AFEEDB14(v123, (uint64_t)v225);
                  (*(void (**)(char *, void, uint64_t, uint64_t))(v122 + 56))(v9, 0, 1, v121);
                  a2 = v224;
                }
                else
                {
                  uint64_t v121 = type metadata accessor for Quote();
                  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v121 - 8) + 56))(v9, 1, 1, v121);
                }
                swift_bridgeObjectRelease();
                type metadata accessor for Quote();
                int v125 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v121 - 8) + 48))(v9, 1, v121);
                uint64_t v89 = v229;
                if (v125 == 1)
                {
LABEL_85:
                  sub_1AFE9D824((uint64_t)v9);
                  if (v114) {
                    goto LABEL_69;
                  }
                  goto LABEL_86;
                }
                double v132 = *((double *)v9 + 2);
                char v133 = v9[24];
                sub_1AFEEDAB8((uint64_t)v9);
                if ((v114 & 1) == 0)
                {
                  if (v133)
                  {
LABEL_86:
                    sub_1AFD76408((uint64_t)&v257);
                    sub_1AFD76408((uint64_t)&v248);
                    long long v91 = v227;
                    uint64_t v126 = v266;
                    if (!v226) {
                      goto LABEL_70;
                    }
                  }
                  else
                  {
                    sub_1AFD76408((uint64_t)&v257);
                    sub_1AFD76408((uint64_t)&v248);
                    if (v226) {
                      BOOL v134 = v132 < v115;
                    }
                    else {
                      BOOL v134 = v115 < v132;
                    }
                    long long v91 = v227;
                    uint64_t v126 = v266;
                    if (!v134) {
                      goto LABEL_70;
                    }
                  }
LABEL_87:
                  if (!v228) {
                    goto LABEL_199;
                  }
                  unint64_t v127 = v90 - 136;
                  long long v244 = *(_OWORD *)(v90 + 80);
                  long long v245 = *(_OWORD *)(v90 + 96);
                  long long v246 = *(_OWORD *)(v90 + 112);
                  uint64_t v247 = *(void *)(v90 + 128);
                  long long v240 = *(_OWORD *)(v90 + 16);
                  long long v241 = *(_OWORD *)(v90 + 32);
                  long long v242 = *(_OWORD *)(v90 + 48);
                  long long v243 = *(_OWORD *)(v90 + 64);
                  long long v239 = *(_OWORD *)v90;
                  long long v128 = *(_OWORD *)(v90 - 56);
                  *(_OWORD *)(v90 + 64) = *(_OWORD *)(v90 - 72);
                  *(_OWORD *)(v90 + 80) = v128;
                  long long v129 = *(_OWORD *)(v90 - 24);
                  *(_OWORD *)(v90 + 96) = *(_OWORD *)(v90 - 40);
                  *(_OWORD *)(v90 + 112) = v129;
                  *(void *)(v90 + 128) = *(void *)(v90 - 8);
                  long long v130 = *(_OWORD *)(v90 - 88);
                  *(_OWORD *)(v90 + 32) = *(_OWORD *)(v90 - 104);
                  *(_OWORD *)(v90 + 48) = v130;
                  long long v131 = *(_OWORD *)(v90 - 120);
                  *(_OWORD *)unint64_t v90 = *(_OWORD *)(v90 - 136);
                  *(_OWORD *)(v90 + 16) = v131;
                  *(_OWORD *)(v127 + 64) = v243;
                  *(_OWORD *)(v127 + 80) = v244;
                  *(_OWORD *)(v127 + 96) = v245;
                  *(_OWORD *)(v127 + 112) = v246;
                  *(void *)(v127 + 128) = v247;
                  *(_OWORD *)(v127 + 16) = v240;
                  *(_OWORD *)(v127 + 32) = v241;
                  *(_OWORD *)(v127 + 48) = v242;
                  *(_OWORD *)unint64_t v127 = v239;
                  if (v91 == v126) {
                    goto LABEL_70;
                  }
                  long long v92 = v126 + 1;
                  v90 -= 136;
                  continue;
                }
                break;
              }
              if ((v133 & 1) == 0)
              {
                sub_1AFD76408((uint64_t)&v257);
                sub_1AFD76408((uint64_t)&v248);
                long long v91 = v227;
                uint64_t v126 = v266;
                if (v226) {
                  goto LABEL_70;
                }
                goto LABEL_87;
              }
LABEL_69:
              sub_1AFD76408((uint64_t)&v257);
              sub_1AFD76408((uint64_t)&v248);
              long long v91 = v227;
LABEL_70:
              long long v22 = v91 + 1;
              unint64_t v90 = v222 + 136;
              if (v22 != v217) {
                continue;
              }
              break;
            }
            long long v22 = v217;
            uint64_t v25 = v221;
LABEL_101:
            uint64_t v135 = v213;
            uint64_t v136 = v219;
            if ((uint64_t)v22 < v213) {
              goto LABEL_190;
            }
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v136 = sub_1AFEE5E44(0, *((void *)v136 + 2) + 1, 1, v136);
            }
            unint64_t v138 = *((void *)v136 + 2);
            unint64_t v137 = *((void *)v136 + 3);
            unint64_t v139 = v138 + 1;
            if (v138 >= v137 >> 1) {
              uint64_t v136 = sub_1AFEE5E44((char *)(v137 > 1), v138 + 1, 1, v136);
            }
            *((void *)v136 + 2) = v139;
            uint64_t v140 = v136 + 32;
            uint64_t v141 = &v136[16 * v138 + 32];
            *(void *)uint64_t v141 = v135;
            *((void *)v141 + 1) = v22;
            uint64_t v219 = v136;
            if (v138)
            {
              uint64_t v227 = v22;
              uint64_t v217 = v136 + 32;
              while (1)
              {
                unint64_t v142 = v139 - 1;
                if (v139 >= 4)
                {
                  uint64_t v147 = &v140[16 * v139];
                  uint64_t v148 = *((void *)v147 - 8);
                  uint64_t v149 = *((void *)v147 - 7);
                  BOOL v153 = __OFSUB__(v149, v148);
                  uint64_t v150 = v149 - v148;
                  if (v153) {
                    goto LABEL_178;
                  }
                  uint64_t v152 = *((void *)v147 - 6);
                  uint64_t v151 = *((void *)v147 - 5);
                  BOOL v153 = __OFSUB__(v151, v152);
                  uint64_t v145 = v151 - v152;
                  char v146 = v153;
                  if (v153) {
                    goto LABEL_179;
                  }
                  unint64_t v154 = v139 - 2;
                  uint64_t v155 = &v140[16 * v139 - 32];
                  uint64_t v157 = *(void *)v155;
                  uint64_t v156 = *((void *)v155 + 1);
                  BOOL v153 = __OFSUB__(v156, v157);
                  uint64_t v158 = v156 - v157;
                  if (v153) {
                    goto LABEL_181;
                  }
                  BOOL v153 = __OFADD__(v145, v158);
                  uint64_t v159 = v145 + v158;
                  if (v153) {
                    goto LABEL_184;
                  }
                  if (v159 >= v150)
                  {
                    uint64_t v178 = &v140[16 * v142];
                    uint64_t v180 = *(void *)v178;
                    uint64_t v179 = *((void *)v178 + 1);
                    BOOL v153 = __OFSUB__(v179, v180);
                    uint64_t v181 = v179 - v180;
                    uint64_t v160 = v228;
                    if (v153) {
                      goto LABEL_188;
                    }
                    BOOL v171 = v145 < v181;
                    goto LABEL_140;
                  }
                }
                else
                {
                  if (v139 != 3)
                  {
                    uint64_t v172 = *((void *)v136 + 4);
                    uint64_t v173 = *((void *)v136 + 5);
                    BOOL v153 = __OFSUB__(v173, v172);
                    uint64_t v165 = v173 - v172;
                    char v166 = v153;
                    uint64_t v160 = v228;
                    goto LABEL_134;
                  }
                  uint64_t v144 = *((void *)v136 + 4);
                  uint64_t v143 = *((void *)v136 + 5);
                  BOOL v153 = __OFSUB__(v143, v144);
                  uint64_t v145 = v143 - v144;
                  char v146 = v153;
                }
                uint64_t v160 = v228;
                if (v146) {
                  goto LABEL_180;
                }
                unint64_t v154 = v139 - 2;
                uint64_t v161 = &v140[16 * v139 - 32];
                uint64_t v163 = *(void *)v161;
                uint64_t v162 = *((void *)v161 + 1);
                BOOL v164 = __OFSUB__(v162, v163);
                uint64_t v165 = v162 - v163;
                char v166 = v164;
                if (v164) {
                  goto LABEL_183;
                }
                uint64_t v167 = &v140[16 * v142];
                uint64_t v169 = *(void *)v167;
                uint64_t v168 = *((void *)v167 + 1);
                BOOL v153 = __OFSUB__(v168, v169);
                uint64_t v170 = v168 - v169;
                if (v153) {
                  goto LABEL_186;
                }
                if (__OFADD__(v165, v170)) {
                  goto LABEL_187;
                }
                if (v165 + v170 >= v145)
                {
                  BOOL v171 = v145 < v170;
LABEL_140:
                  if (v171) {
                    unint64_t v142 = v154;
                  }
                  goto LABEL_142;
                }
LABEL_134:
                if (v166) {
                  goto LABEL_182;
                }
                uint64_t v174 = &v140[16 * v142];
                uint64_t v176 = *(void *)v174;
                uint64_t v175 = *((void *)v174 + 1);
                BOOL v153 = __OFSUB__(v175, v176);
                uint64_t v177 = v175 - v176;
                if (v153) {
                  goto LABEL_185;
                }
                if (v177 < v165) {
                  goto LABEL_151;
                }
LABEL_142:
                unint64_t v182 = v142 - 1;
                if (v142 - 1 >= v139)
                {
                  __break(1u);
LABEL_175:
                  __break(1u);
LABEL_176:
                  __break(1u);
LABEL_177:
                  __break(1u);
LABEL_178:
                  __break(1u);
LABEL_179:
                  __break(1u);
LABEL_180:
                  __break(1u);
LABEL_181:
                  __break(1u);
LABEL_182:
                  __break(1u);
LABEL_183:
                  __break(1u);
LABEL_184:
                  __break(1u);
LABEL_185:
                  __break(1u);
LABEL_186:
                  __break(1u);
LABEL_187:
                  __break(1u);
LABEL_188:
                  __break(1u);
LABEL_189:
                  __break(1u);
LABEL_190:
                  __break(1u);
LABEL_191:
                  __break(1u);
LABEL_192:
                  __break(1u);
LABEL_193:
                  __break(1u);
LABEL_194:
                  __break(1u);
LABEL_195:
                  __break(1u);
LABEL_196:
                  __break(1u);
                  goto LABEL_197;
                }
                if (!v160) {
                  goto LABEL_200;
                }
                uint64_t v183 = &v140[16 * v182];
                uint64_t v184 = *(void *)v183;
                unint64_t v185 = v142;
                uint64_t v186 = &v140[16 * v142];
                uint64_t v187 = *((void *)v186 + 1);
                uint64_t v188 = (char *)(v160 + 136 * *(void *)v183);
                uint64_t v266 = (char *)(v160 + 136 * *(void *)v186);
                uint64_t v222 = v160 + 136 * v187;
                uint64_t v189 = v224;
                sub_1AFFC8E38();
                uint64_t v190 = v220;
                sub_1AFFC8E48();
                uint64_t v191 = v188;
                uint64_t v192 = v223;
                sub_1AFEE93B8(v191, v266, v222, v218, v189, v190, v226, (uint64_t (*)(void, void, void, void))sub_1AFEE62F8);
                uint64_t v223 = v192;
                if (v192)
                {
LABEL_153:
                  swift_bridgeObjectRelease();
                  swift_release();
                  goto LABEL_154;
                }
                swift_release();
                uint64_t v136 = v219;
                if (v187 < v184) {
                  goto LABEL_175;
                }
                if (v185 > *((void *)v219 + 2)) {
                  goto LABEL_176;
                }
                unint64_t v193 = v185;
                *(void *)uint64_t v183 = v184;
                uint64_t v140 = v217;
                *(void *)&v217[16 * v182 + 8] = v187;
                unint64_t v194 = *((void *)v136 + 2);
                if (v185 >= v194) {
                  goto LABEL_177;
                }
                unint64_t v139 = v194 - 1;
                memmove(v186, v186 + 16, 16 * (v194 - 1 - v193));
                *((void *)v136 + 2) = v194 - 1;
                uint64_t v9 = v225;
                uint64_t v25 = v221;
                long long v22 = v227;
                if (v194 <= 2) {
                  goto LABEL_151;
                }
              }
            }
            unint64_t v139 = 1;
LABEL_151:
            uint64_t v24 = v216;
            a2 = v224;
            if ((uint64_t)v22 >= v216)
            {
              uint64_t v195 = v219;
              if (v139 < 2)
              {
LABEL_170:
                swift_bridgeObjectRelease();
                *(void *)(v211 + 16) = 0;
                swift_release();
                goto LABEL_171;
              }
LABEL_157:
              uint64_t v196 = *v209;
              uint64_t v228 = *v209;
              while (1)
              {
                unint64_t v197 = v139 - 2;
                if (v139 < 2) {
                  goto LABEL_189;
                }
                if (!v196) {
                  goto LABEL_202;
                }
                uint64_t v198 = *(void *)&v195[16 * v197 + 32];
                uint64_t v199 = *(void *)&v195[16 * v139 + 24];
                uint64_t v200 = (char *)(v196 + 136 * v198);
                uint64_t v266 = (char *)(v196 + 136 * *(void *)&v195[16 * v139 + 16]);
                unint64_t v229 = v196 + 136 * v199;
                uint64_t v201 = v224;
                sub_1AFFC8E38();
                uint64_t v202 = v220;
                sub_1AFFC8E48();
                uint64_t v203 = v200;
                uint64_t v204 = v223;
                sub_1AFEE93B8(v203, v266, v229, v218, v201, v202, v226, (uint64_t (*)(void, void, void, void))sub_1AFEE62F8);
                uint64_t v223 = v204;
                if (v204) {
                  goto LABEL_153;
                }
                swift_release();
                if (v199 < v198) {
                  goto LABEL_191;
                }
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  uint64_t v195 = sub_1AFEE6294((uint64_t)v195);
                }
                if (v197 >= *((void *)v195 + 2)) {
                  goto LABEL_192;
                }
                v205 = &v195[16 * v197 + 32];
                *(void *)v205 = v198;
                *((void *)v205 + 1) = v199;
                unint64_t v206 = *((void *)v195 + 2);
                if (v139 > v206) {
                  goto LABEL_193;
                }
                memmove(&v195[16 * v139 + 16], &v195[16 * v139 + 32], 16 * (v206 - v139));
                *((void *)v195 + 2) = v206 - 1;
                unint64_t v139 = v206 - 1;
                uint64_t v196 = v228;
                if (v206 <= 2) {
                  goto LABEL_170;
                }
              }
            }
            goto LABEL_13;
          }
          long long v26 = v266;
          long long v22 = v266 + 1;
          if ((uint64_t)(v266 + 1) >= v24) {
            goto LABEL_49;
          }
        }
      }
      uint64_t v66 = type metadata accessor for Quote();
      uint64_t v65 = v215;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56))(v215, 1, 1, v66);
      sub_1AFD76370((uint64_t)&v230);
      sub_1AFD76370((uint64_t)&v239);
LABEL_22:
      sub_1AFE9D824(v65);
      char v68 = 1;
      double v69 = 0.0;
      if (!*(void *)(a2 + 16)) {
        goto LABEL_26;
      }
      goto LABEL_23;
    }
    sub_1AFD76408((uint64_t)&v257);
    sub_1AFD76408((uint64_t)&v248);
    swift_bridgeObjectRelease();
LABEL_154:
    *(void *)(v211 + 16) = 0;
    swift_release();
LABEL_171:
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
LABEL_172:
    swift_bridgeObjectRelease();
    return swift_release_n();
  }
LABEL_203:
  swift_release_n();
  swift_bridgeObjectRelease_n();
  uint64_t result = sub_1AFFCB998();
  __break(1u);
  return result;
}

uint64_t sub_1AFEE839C(void **a1, uint64_t a2, uint64_t a3, char a4)
{
  char v7 = a4 & 1;
  uint64_t v8 = *a1;
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v8 = sub_1AFFB2ED0(v8);
  }
  uint64_t v9 = v8[2];
  v11[0] = (uint64_t)(v8 + 4);
  v11[1] = v9;
  sub_1AFFC8E38();
  sub_1AFFC8E48();
  sub_1AFEE6E0C(v11, a2, a3, v7);
  swift_bridgeObjectRelease();
  swift_release();
  *a1 = v8;
  swift_release_n();
  return swift_bridgeObjectRelease_n();
}

BOOL sub_1AFEE8484(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  sub_1AFEEDB78(0, &qword_1EB817B00, (uint64_t (*)(uint64_t))type metadata accessor for Quote, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v65 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v62 - v11;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v62 - v14;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v62 - v17;
  uint64_t v19 = *(void *)(a2 + 24);
  uint64_t v67 = *(void *)(a2 + 16);
  uint64_t v68 = v19;
  uint64_t v20 = *(void *)(a3 + 16);
  int v66 = a4;
  if (!v20)
  {
    uint64_t v29 = type metadata accessor for Quote();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v18, 1, 1, v29);
LABEL_7:
    sub_1AFE9D824((uint64_t)v18);
    int v32 = 1;
    double v33 = 0.0;
LABEL_17:
    uint64_t v40 = v68;
    goto LABEL_18;
  }
  uint64_t v21 = *(void *)(a1 + 16);
  uint64_t v22 = *(void *)(a1 + 24);
  sub_1AFFC8E38();
  uint64_t v63 = v21;
  unint64_t v23 = sub_1AFD79CC8(v21, v22);
  uint64_t v64 = v15;
  if (v24)
  {
    unint64_t v25 = v23;
    uint64_t v26 = *(void *)(a3 + 56);
    uint64_t v27 = type metadata accessor for Quote();
    uint64_t v28 = *(void *)(v27 - 8);
    sub_1AFEEDB14(v26 + *(void *)(v28 + 72) * v25, (uint64_t)v18);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v18, 0, 1, v27);
  }
  else
  {
    uint64_t v27 = type metadata accessor for Quote();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v18, 1, 1, v27);
  }
  swift_bridgeObjectRelease();
  type metadata accessor for Quote();
  uint64_t v30 = *(void *)(v27 - 8);
  long long v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
  if (v31(v18, 1, v27) == 1) {
    goto LABEL_7;
  }
  double v34 = *(double *)v18;
  char v35 = v18[8];
  sub_1AFEEDAB8((uint64_t)v18);
  double v33 = 0.0;
  if (v35)
  {
LABEL_16:
    int v32 = 1;
    goto LABEL_17;
  }
  if (!*(void *)(a3 + 16))
  {
    uint64_t v37 = (uint64_t)v64;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 56))(v64, 1, 1, v27);
LABEL_15:
    sub_1AFE9D824(v37);
    goto LABEL_16;
  }
  sub_1AFFC8E38();
  unint64_t v36 = sub_1AFD79CC8(v63, v22);
  uint64_t v37 = (uint64_t)v64;
  if (v38)
  {
    sub_1AFEEDB14(*(void *)(a3 + 56) + *(void *)(v30 + 72) * v36, (uint64_t)v64);
    uint64_t v39 = 0;
  }
  else
  {
    uint64_t v39 = 1;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 56))(v37, v39, 1, v27);
  swift_bridgeObjectRelease();
  if (v31((char *)v37, 1, v27) == 1) {
    goto LABEL_15;
  }
  double v56 = *(double *)(v37 + 16);
  char v57 = *(unsigned char *)(v37 + 24);
  sub_1AFEEDAB8(v37);
  uint64_t v40 = v68;
  if (v57)
  {
    int v32 = 1;
  }
  else
  {
    int v32 = 0;
    if (v34 - v56 <= 0.0) {
      double v33 = 0.0;
    }
    else {
      double v33 = v56 / (v34 - v56);
    }
  }
LABEL_18:
  if (!*(void *)(a3 + 16))
  {
    uint64_t v47 = type metadata accessor for Quote();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v12, 1, 1, v47);
LABEL_24:
    sub_1AFE9D824((uint64_t)v12);
    goto LABEL_25;
  }
  sub_1AFFC8E38();
  unint64_t v41 = sub_1AFD79CC8(v67, v40);
  if (v42)
  {
    unint64_t v43 = v41;
    uint64_t v44 = *(void *)(a3 + 56);
    uint64_t v45 = type metadata accessor for Quote();
    uint64_t v46 = *(void *)(v45 - 8);
    sub_1AFEEDB14(v44 + *(void *)(v46 + 72) * v43, (uint64_t)v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v12, 0, 1, v45);
  }
  else
  {
    uint64_t v45 = type metadata accessor for Quote();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v12, 1, 1, v45);
  }
  swift_bridgeObjectRelease();
  type metadata accessor for Quote();
  uint64_t v48 = *(void *)(v45 - 8);
  long long v49 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48);
  if (v49(v12, 1, v45) == 1) {
    goto LABEL_24;
  }
  double v51 = *(double *)v12;
  char v52 = v12[8];
  sub_1AFEEDAB8((uint64_t)v12);
  if (v52)
  {
LABEL_25:
    if (v32) {
      return 0;
    }
    else {
      return v66 & 1;
    }
  }
  if (!*(void *)(a3 + 16))
  {
    uint64_t v12 = v65;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v48 + 56))(v65, 1, 1, v45);
    goto LABEL_24;
  }
  sub_1AFFC8E38();
  unint64_t v53 = sub_1AFD79CC8(v67, v40);
  uint64_t v12 = v65;
  if (v54)
  {
    sub_1AFEEDB14(*(void *)(a3 + 56) + *(void *)(v48 + 72) * v53, (uint64_t)v65);
    uint64_t v55 = 0;
  }
  else
  {
    uint64_t v55 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v48 + 56))(v12, v55, 1, v45);
  swift_bridgeObjectRelease();
  if (v49(v12, 1, v45) == 1) {
    goto LABEL_24;
  }
  double v58 = *((double *)v12 + 2);
  char v59 = v12[24];
  sub_1AFEEDAB8((uint64_t)v12);
  if (v59) {
    goto LABEL_25;
  }
  double v60 = 0.0;
  if (v51 - v58 > 0.0) {
    double v60 = v58 / (v51 - v58);
  }
  if (v32) {
    return (v66 & 1) == 0;
  }
  if (v66) {
    return v60 < v33;
  }
  else {
    return v33 < v60;
  }
}

BOOL sub_1AFEE8B84(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v70 = a4;
  sub_1AFEEDB78(0, &qword_1EB817B00, (uint64_t (*)(uint64_t))type metadata accessor for Quote, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  double v69 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v65 - v10;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v65 - v13;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v65 - v16;
  uint64_t v18 = *(void *)(a1 + 16);
  uint64_t v19 = *(void *)(a1 + 24);
  uint64_t v71 = *(void *)(a2 + 16);
  uint64_t v72 = *(void *)(a2 + 24);
  if (!*(void *)(a3 + 16))
  {
    uint64_t v27 = type metadata accessor for Quote();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v17, 1, 1, v27);
LABEL_7:
    sub_1AFE9D824((uint64_t)v17);
    goto LABEL_8;
  }
  uint64_t v67 = v11;
  sub_1AFFC8E38();
  unint64_t v20 = sub_1AFD79CC8(v18, v19);
  uint64_t v68 = a3;
  if (v21)
  {
    unint64_t v22 = v20;
    uint64_t v66 = v18;
    uint64_t v23 = *(void *)(a3 + 56);
    uint64_t v24 = type metadata accessor for Quote();
    uint64_t v25 = *(void *)(v24 - 8);
    uint64_t v26 = v23 + *(void *)(v25 + 72) * v22;
    uint64_t v18 = v66;
    sub_1AFEEDB14(v26, (uint64_t)v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v17, 0, 1, v24);
  }
  else
  {
    uint64_t v24 = type metadata accessor for Quote();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v17, 1, 1, v24);
  }
  swift_bridgeObjectRelease();
  type metadata accessor for Quote();
  int v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48))(v17, 1, v24);
  uint64_t v11 = v67;
  a3 = v68;
  if (v28 == 1) {
    goto LABEL_7;
  }
  double v36 = *((double *)v17 + 4);
  char v37 = v17[40];
  sub_1AFEEDAB8((uint64_t)v17);
  if ((v37 & 1) == 0 && v36 == 0.0) {
    goto LABEL_18;
  }
LABEL_8:
  if (!*(void *)(a3 + 16))
  {
    uint64_t v38 = type metadata accessor for Quote();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v14, 1, 1, v38);
LABEL_17:
    sub_1AFE9D824((uint64_t)v14);
LABEL_18:
    char v39 = 1;
    double v40 = 0.0;
    goto LABEL_20;
  }
  sub_1AFFC8E38();
  unint64_t v29 = sub_1AFD79CC8(v18, v19);
  if (v30)
  {
    unint64_t v31 = v29;
    uint64_t v32 = *(void *)(a3 + 56);
    uint64_t v33 = type metadata accessor for Quote();
    double v34 = v11;
    uint64_t v35 = *(void *)(v33 - 8);
    sub_1AFEEDB14(v32 + *(void *)(v35 + 72) * v31, (uint64_t)v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v14, 0, 1, v33);
    uint64_t v11 = v34;
  }
  else
  {
    uint64_t v33 = type metadata accessor for Quote();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v14, 1, 1, v33);
  }
  swift_bridgeObjectRelease();
  type metadata accessor for Quote();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 48))(v14, 1, v33) == 1) {
    goto LABEL_17;
  }
  double v40 = *((double *)v14 + 4);
  char v39 = v14[40];
  sub_1AFEEDAB8((uint64_t)v14);
LABEL_20:
  uint64_t v41 = (uint64_t)v69;
  uint64_t v42 = v72;
  if (!*(void *)(a3 + 16))
  {
    uint64_t v51 = type metadata accessor for Quote();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v11, 1, 1, v51);
LABEL_26:
    sub_1AFE9D824((uint64_t)v11);
    goto LABEL_27;
  }
  sub_1AFFC8E38();
  unint64_t v43 = sub_1AFD79CC8(v71, v42);
  if (v44)
  {
    unint64_t v45 = v43;
    uint64_t v46 = (uint64_t)v11;
    uint64_t v47 = *(void *)(a3 + 56);
    uint64_t v48 = type metadata accessor for Quote();
    uint64_t v49 = *(void *)(v48 - 8);
    uint64_t v50 = v47 + *(void *)(v49 + 72) * v45;
    uint64_t v11 = (char *)v46;
    sub_1AFEEDB14(v50, v46);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
    uint64_t v42 = v72;
  }
  else
  {
    uint64_t v48 = type metadata accessor for Quote();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v11, 1, 1, v48);
  }
  swift_bridgeObjectRelease();
  type metadata accessor for Quote();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v48 - 8) + 48))(v11, 1, v48) == 1) {
    goto LABEL_26;
  }
  double v58 = *((double *)v11 + 4);
  char v59 = v11[40];
  sub_1AFEEDAB8((uint64_t)v11);
  if ((v59 & 1) == 0 && v58 == 0.0) {
    goto LABEL_37;
  }
LABEL_27:
  if (!*(void *)(a3 + 16))
  {
    uint64_t v60 = type metadata accessor for Quote();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v41, 1, 1, v60);
LABEL_36:
    sub_1AFE9D824(v41);
LABEL_37:
    int v61 = 1;
    double v62 = 0.0;
    goto LABEL_39;
  }
  sub_1AFFC8E38();
  unint64_t v52 = sub_1AFD79CC8(v71, v42);
  if (v53)
  {
    unint64_t v54 = v52;
    uint64_t v55 = *(void *)(a3 + 56);
    uint64_t v56 = type metadata accessor for Quote();
    uint64_t v57 = *(void *)(v56 - 8);
    sub_1AFEEDB14(v55 + *(void *)(v57 + 72) * v54, v41);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v57 + 56))(v41, 0, 1, v56);
  }
  else
  {
    uint64_t v56 = type metadata accessor for Quote();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v41, 1, 1, v56);
  }
  swift_bridgeObjectRelease();
  type metadata accessor for Quote();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 48))(v41, 1, v56) == 1) {
    goto LABEL_36;
  }
  double v62 = *(double *)(v41 + 32);
  int v61 = *(unsigned __int8 *)(v41 + 40);
  sub_1AFEEDAB8(v41);
LABEL_39:
  if (v39) {
    return ((v70 & 1) == 0) & ~v61;
  }
  if (v61) {
    return v70 & 1;
  }
  if (v70) {
    return v62 < v40;
  }
  else {
    return v40 < v62;
  }
}

uint64_t sub_1AFEE93B8(char *a1, char *__src, unint64_t a3, char *a4, uint64_t a5, uint64_t a6, char a7, uint64_t (*a8)(void, void, void, void))
{
  uint64_t v12 = __src;
  unsigned int v62 = a7 & 1;
  uint64_t v13 = __src - a1;
  uint64_t v14 = (__src - a1) / 136;
  uint64_t v15 = a3 - (void)__src;
  uint64_t v16 = (uint64_t)(a3 - (void)__src) / 136;
  __srca = a1;
  long long v86 = a1;
  long long v85 = a4;
  if (v14 >= v16)
  {
    if (v15 < -135) {
      goto LABEL_50;
    }
    if (a4 != __src || &__src[136 * v16] <= a4) {
      memmove(a4, __src, 136 * v16);
    }
    uint64_t v38 = &a4[136 * v16];
    long long v84 = v38;
    long long v86 = v12;
    if (__srca >= v12 || v15 < 136) {
      goto LABEL_49;
    }
    char v39 = (char *)(a3 - 136);
    uint64_t v60 = a8;
    while (1)
    {
      long long v66 = *(_OWORD *)(v38 - 136);
      long long v40 = *(_OWORD *)(v38 - 120);
      long long v41 = *(_OWORD *)(v38 - 104);
      long long v42 = *(_OWORD *)(v38 - 72);
      long long v69 = *(_OWORD *)(v38 - 88);
      long long v70 = v42;
      long long v67 = v40;
      long long v68 = v41;
      long long v43 = *(_OWORD *)(v38 - 56);
      long long v44 = *(_OWORD *)(v38 - 40);
      long long v45 = *(_OWORD *)(v38 - 24);
      uint64_t v74 = *((void *)v38 - 1);
      long long v72 = v44;
      long long v73 = v45;
      long long v71 = v43;
      memmove(v65, v38 - 136, 0x88uLL);
      uint64_t v46 = v12 - 136;
      long long v75 = *(_OWORD *)(v12 - 136);
      long long v47 = *(_OWORD *)(v12 - 120);
      long long v48 = *(_OWORD *)(v12 - 104);
      long long v49 = *(_OWORD *)(v12 - 72);
      long long v78 = *(_OWORD *)(v12 - 88);
      long long v79 = v49;
      long long v76 = v47;
      long long v77 = v48;
      long long v50 = *(_OWORD *)(v12 - 56);
      long long v51 = *(_OWORD *)(v12 - 40);
      long long v52 = *(_OWORD *)(v12 - 24);
      uint64_t v83 = *((void *)v12 - 1);
      long long v81 = v51;
      long long v82 = v52;
      long long v80 = v50;
      memmove(v64, v12 - 136, 0x88uLL);
      sub_1AFD76370((uint64_t)&v66);
      sub_1AFD76370((uint64_t)&v75);
      char v53 = a8(v65, v64, a5, v62);
      if (v8)
      {
        long long v84 = v38;
        long long v86 = v12;
LABEL_45:
        sub_1AFD76408((uint64_t)&v75);
        sub_1AFD76408((uint64_t)&v66);
        goto LABEL_49;
      }
      char v54 = v53;
      uint64_t v55 = a5;
      uint64_t v56 = v39 + 136;
      sub_1AFD76408((uint64_t)&v75);
      sub_1AFD76408((uint64_t)&v66);
      if (v54)
      {
        if (v56 == v12)
        {
          BOOL v57 = v39 >= v12;
          v12 -= 136;
          goto LABEL_32;
        }
        v12 -= 136;
      }
      else
      {
        uint64_t v46 = v38 - 136;
        if (v56 == v38)
        {
          BOOL v57 = v39 >= v38;
          v38 -= 136;
LABEL_32:
          a5 = v55;
          double v58 = __srca;
          if (!v57) {
            goto LABEL_39;
          }
          goto LABEL_38;
        }
        v38 -= 136;
      }
      a5 = v55;
      double v58 = __srca;
LABEL_38:
      memmove(v39, v46, 0x88uLL);
LABEL_39:
      a8 = v60;
      if (v38 <= a4 || v12 <= v58)
      {
        long long v84 = v38;
        long long v86 = v12;
        goto LABEL_49;
      }
      v39 -= 136;
    }
  }
  if (v13 < -135)
  {
LABEL_50:
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1AFFCBA28();
    __break(1u);
    return result;
  }
  uint64_t v17 = a4;
  if (a4 != a1 || &a1[136 * v14] <= a4) {
    memmove(a4, a1, 136 * v14);
  }
  uint64_t v18 = &a4[136 * v14];
  long long v84 = v18;
  if ((unint64_t)v12 >= a3 || v13 < 136) {
    goto LABEL_49;
  }
  uint64_t v19 = a4;
  while (1)
  {
    long long v66 = *(_OWORD *)v12;
    long long v20 = *((_OWORD *)v12 + 1);
    long long v21 = *((_OWORD *)v12 + 2);
    long long v22 = *((_OWORD *)v12 + 4);
    long long v69 = *((_OWORD *)v12 + 3);
    long long v70 = v22;
    long long v67 = v20;
    long long v68 = v21;
    long long v23 = *((_OWORD *)v12 + 5);
    long long v24 = *((_OWORD *)v12 + 6);
    long long v25 = *((_OWORD *)v12 + 7);
    uint64_t v74 = *((void *)v12 + 16);
    long long v72 = v24;
    long long v73 = v25;
    long long v71 = v23;
    memmove(v65, v12, 0x88uLL);
    long long v75 = *(_OWORD *)v17;
    long long v26 = *((_OWORD *)v17 + 1);
    long long v27 = *((_OWORD *)v17 + 2);
    long long v28 = *((_OWORD *)v17 + 4);
    long long v78 = *((_OWORD *)v17 + 3);
    long long v79 = v28;
    long long v76 = v26;
    long long v77 = v27;
    long long v29 = *((_OWORD *)v17 + 5);
    long long v30 = *((_OWORD *)v17 + 6);
    long long v31 = *((_OWORD *)v17 + 7);
    uint64_t v83 = *((void *)v17 + 16);
    long long v81 = v30;
    long long v82 = v31;
    long long v80 = v29;
    memmove(v64, v17, 0x88uLL);
    sub_1AFD76370((uint64_t)&v66);
    sub_1AFD76370((uint64_t)&v75);
    char v32 = a8(v65, v64, a5, v62);
    if (v8)
    {
      long long v85 = v19;
      long long v86 = __srca;
      goto LABEL_45;
    }
    char v33 = v32;
    sub_1AFD76408((uint64_t)&v75);
    sub_1AFD76408((uint64_t)&v66);
    if ((v33 & 1) == 0)
    {
      uint64_t v19 = v17 + 136;
      double v34 = v17;
      uint64_t v35 = __srca;
      BOOL v36 = __srca == v17;
      v17 += 136;
      if (v36) {
        goto LABEL_16;
      }
LABEL_15:
      memmove(v35, v34, 0x88uLL);
      goto LABEL_16;
    }
    double v34 = v12;
    uint64_t v35 = __srca;
    BOOL v36 = __srca == v12;
    v12 += 136;
    if (!v36) {
      goto LABEL_15;
    }
LABEL_16:
    char v37 = v35 + 136;
    if (v17 >= v18)
    {
      long long v85 = v19;
      goto LABEL_48;
    }
    if ((unint64_t)v12 >= a3) {
      break;
    }
    __srca = v35 + 136;
  }
  long long v85 = v19;
  char v37 = v35 + 136;
LABEL_48:
  long long v86 = v37;
LABEL_49:
  sub_1AFEE61C8((void **)&v86, (const void **)&v85, &v84);
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_1AFEE986C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, char a6, uint64_t (*a7)(long long *, _OWORD *, uint64_t, uint64_t))
{
  if (a3 != a2)
  {
    uint64_t v10 = a3;
    uint64_t v11 = a6 & 1;
    uint64_t v12 = *a4;
    uint64_t v13 = *a4 + 136 * a3;
    uint64_t v14 = result + 1;
    uint64_t v49 = result + 1;
LABEL_5:
    uint64_t v66 = v13;
    while (1)
    {
      v62[0] = *(_OWORD *)v13;
      long long v15 = *(_OWORD *)(v13 + 16);
      long long v16 = *(_OWORD *)(v13 + 32);
      long long v17 = *(_OWORD *)(v13 + 64);
      v62[3] = *(_OWORD *)(v13 + 48);
      v62[4] = v17;
      v62[1] = v15;
      v62[2] = v16;
      long long v18 = *(_OWORD *)(v13 + 80);
      long long v19 = *(_OWORD *)(v13 + 96);
      long long v20 = *(_OWORD *)(v13 + 112);
      uint64_t v63 = *(void *)(v13 + 128);
      v62[6] = v19;
      v62[7] = v20;
      v62[5] = v18;
      long long v21 = *(_OWORD *)(v13 + 112);
      long long v59 = *(_OWORD *)(v13 + 96);
      long long v60 = v21;
      uint64_t v61 = *(void *)(v13 + 128);
      long long v22 = *(_OWORD *)(v13 + 48);
      long long v55 = *(_OWORD *)(v13 + 32);
      long long v56 = v22;
      long long v23 = *(_OWORD *)(v13 + 80);
      long long v57 = *(_OWORD *)(v13 + 64);
      long long v58 = v23;
      long long v24 = *(_OWORD *)(v13 + 16);
      long long v53 = *(_OWORD *)v13;
      long long v54 = v24;
      v64[0] = *(_OWORD *)(v13 - 136);
      long long v25 = *(_OWORD *)(v13 - 120);
      long long v26 = *(_OWORD *)(v13 - 104);
      long long v27 = *(_OWORD *)(v13 - 72);
      v64[3] = *(_OWORD *)(v13 - 88);
      v64[4] = v27;
      v64[1] = v25;
      v64[2] = v26;
      long long v28 = *(_OWORD *)(v13 - 56);
      long long v29 = *(_OWORD *)(v13 - 40);
      long long v30 = *(_OWORD *)(v13 - 24);
      uint64_t v65 = *(void *)(v13 - 8);
      v64[6] = v29;
      v64[7] = v30;
      v64[5] = v28;
      long long v31 = *(_OWORD *)(v13 - 56);
      long long v32 = *(_OWORD *)(v13 - 24);
      v51[6] = *(_OWORD *)(v13 - 40);
      v51[7] = v32;
      uint64_t v52 = *(void *)(v13 - 8);
      long long v33 = *(_OWORD *)(v13 - 120);
      long long v34 = *(_OWORD *)(v13 - 88);
      v51[2] = *(_OWORD *)(v13 - 104);
      v51[3] = v34;
      long long v51[4] = *(_OWORD *)(v13 - 72);
      v51[5] = v31;
      v51[0] = *(_OWORD *)(v13 - 136);
      v51[1] = v33;
      sub_1AFD76370((uint64_t)v62);
      sub_1AFD76370((uint64_t)v64);
      char v35 = a7(&v53, v51, a5, v11);
      sub_1AFD76408((uint64_t)v64);
      uint64_t result = sub_1AFD76408((uint64_t)v62);
      if (v7) {
        break;
      }
      if ((v35 & 1) == 0) {
        goto LABEL_4;
      }
      if (!v12)
      {
        __break(1u);
        return result;
      }
      uint64_t v36 = v13 - 136;
      long long v37 = *(_OWORD *)(v13 + 112);
      long long v59 = *(_OWORD *)(v13 + 96);
      long long v60 = v37;
      uint64_t v61 = *(void *)(v13 + 128);
      long long v38 = *(_OWORD *)(v13 + 48);
      long long v55 = *(_OWORD *)(v13 + 32);
      long long v56 = v38;
      long long v39 = *(_OWORD *)(v13 + 80);
      long long v57 = *(_OWORD *)(v13 + 64);
      long long v58 = v39;
      long long v40 = *(_OWORD *)(v13 + 16);
      long long v53 = *(_OWORD *)v13;
      long long v54 = v40;
      long long v41 = *(_OWORD *)(v13 - 56);
      *(_OWORD *)(v13 + 64) = *(_OWORD *)(v13 - 72);
      *(_OWORD *)(v13 + 80) = v41;
      long long v42 = *(_OWORD *)(v13 - 24);
      *(_OWORD *)(v13 + 96) = *(_OWORD *)(v13 - 40);
      *(_OWORD *)(v13 + 112) = v42;
      *(void *)(v13 + 128) = *(void *)(v13 - 8);
      long long v43 = *(_OWORD *)(v13 - 88);
      *(_OWORD *)(v13 + 32) = *(_OWORD *)(v13 - 104);
      *(_OWORD *)(v13 + 48) = v43;
      long long v44 = *(_OWORD *)(v13 - 120);
      *(_OWORD *)uint64_t v13 = *(_OWORD *)(v13 - 136);
      *(_OWORD *)(v13 + 16) = v44;
      long long v45 = v58;
      *(_OWORD *)(v36 + 64) = v57;
      *(_OWORD *)(v36 + 80) = v45;
      long long v46 = v60;
      *(_OWORD *)(v36 + 96) = v59;
      *(_OWORD *)(v36 + 112) = v46;
      *(void *)(v36 + 128) = v61;
      long long v47 = v56;
      *(_OWORD *)(v36 + 32) = v55;
      *(_OWORD *)(v36 + 48) = v47;
      long long v48 = v54;
      *(_OWORD *)uint64_t v36 = v53;
      *(_OWORD *)(v36 + 16) = v48;
      if (v10 == v14)
      {
LABEL_4:
        ++v10;
        uint64_t v13 = v66 + 136;
        uint64_t v14 = v49;
        if (v10 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      ++v14;
      v13 -= 136;
    }
  }
  return result;
}

uint64_t sub_1AFEE9AB8(uint64_t *a1, uint64_t a2, uint64_t a3, char a4, uint64_t (*a5)(long long *, long long *, uint64_t, void), uint64_t (*a6)(void, void, void, void), uint64_t (*a7)(long long *, _OWORD *, uint64_t, uint64_t))
{
  uint64_t v9 = v7;
  uint64_t v13 = a1[1];
  unsigned int v210 = a4 & 1;
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v14 = sub_1AFFCBC78();
  if (v14 >= v13)
  {
    if (v13 < 0) {
      goto LABEL_140;
    }
    if (v13)
    {
      sub_1AFFC8E38();
      sub_1AFFC8E48();
      sub_1AFEE986C(0, v13, 1, a1, a2, v210, a7);
      swift_bridgeObjectRelease_n();
      swift_release_n();
    }
    else
    {
      swift_release();
      swift_bridgeObjectRelease_n();
    }
    goto LABEL_117;
  }
  if (v13 >= 0) {
    uint64_t v15 = v13;
  }
  else {
    uint64_t v15 = v13 + 1;
  }
  if (v13 < -1) {
    goto LABEL_149;
  }
  uint64_t v169 = a2;
  uint64_t v159 = a3;
  uint64_t v155 = v13;
  uint64_t v153 = v14;
  uint64_t v151 = a1;
  if (v13 < 2)
  {
    long long v18 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v158 = (char *)(MEMORY[0x1E4FBC860] + 32);
    uint64_t v154 = MEMORY[0x1E4FBC860];
    if (v13 != 1)
    {
      unint64_t v69 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_104:
      uint64_t v168 = v9;
      if (v69 >= 2)
      {
        uint64_t v141 = *v151;
        uint64_t v164 = *v151;
        do
        {
          unint64_t v142 = v69 - 2;
          if (v69 < 2) {
            goto LABEL_135;
          }
          if (!v141) {
            goto LABEL_148;
          }
          uint64_t v143 = *(void *)&v18[16 * v142 + 32];
          uint64_t v144 = *(void *)&v18[16 * v69 + 24];
          uint64_t v145 = (char *)(v141 + 136 * v143);
          char v146 = (char *)(v141 + 136 * *(void *)&v18[16 * v69 + 16]);
          unint64_t v166 = v141 + 136 * v144;
          sub_1AFFC8E38();
          sub_1AFFC8E48();
          sub_1AFEE93B8(v145, v146, v166, v158, a2, v159, v210, a6);
          if (v168) {
            goto LABEL_102;
          }
          swift_release();
          if (v144 < v143) {
            goto LABEL_136;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            long long v18 = sub_1AFEE6294((uint64_t)v18);
          }
          if (v142 >= *((void *)v18 + 2)) {
            goto LABEL_137;
          }
          uint64_t v147 = &v18[16 * v142 + 32];
          *(void *)uint64_t v147 = v143;
          *((void *)v147 + 1) = v144;
          unint64_t v148 = *((void *)v18 + 2);
          if (v69 > v148) {
            goto LABEL_138;
          }
          memmove(&v18[16 * v69 + 16], &v18[16 * v69 + 32], 16 * (v148 - v69));
          *((void *)v18 + 2) = v148 - 1;
          unint64_t v69 = v148 - 1;
          a2 = v169;
          uint64_t v141 = v164;
        }
        while (v148 > 2);
      }
      swift_bridgeObjectRelease();
      *(void *)(v154 + 16) = 0;
      swift_release();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      goto LABEL_117;
    }
  }
  else
  {
    uint64_t v16 = v15 >> 1;
    uint64_t v17 = sub_1AFFCB258();
    *(void *)(v17 + 16) = v16;
    uint64_t v154 = v17;
    uint64_t v158 = (char *)(v17 + 32);
  }
  uint64_t v19 = 0;
  uint64_t v152 = *a1 + 272;
  uint64_t v162 = *a1;
  uint64_t v150 = *a1 - 136;
  long long v18 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v20 = v13;
  while (1)
  {
    uint64_t v161 = v18;
    uint64_t v21 = v19;
    uint64_t v22 = v19 + 1;
    if (v19 + 1 >= v20)
    {
      ++v19;
LABEL_41:
      if (v19 < v21) {
        goto LABEL_139;
      }
      goto LABEL_42;
    }
    uint64_t v23 = v162 + 136 * v22;
    long long v192 = *(_OWORD *)v23;
    long long v24 = *(_OWORD *)(v23 + 16);
    long long v25 = *(_OWORD *)(v23 + 32);
    long long v26 = *(_OWORD *)(v23 + 64);
    long long v195 = *(_OWORD *)(v23 + 48);
    long long v196 = v26;
    long long v193 = v24;
    long long v194 = v25;
    long long v27 = *(_OWORD *)(v23 + 80);
    long long v28 = *(_OWORD *)(v23 + 96);
    long long v29 = *(_OWORD *)(v23 + 112);
    uint64_t v200 = *(void *)(v23 + 128);
    long long v198 = v28;
    long long v199 = v29;
    long long v197 = v27;
    long long v188 = *(_OWORD *)(v23 + 80);
    long long v189 = *(_OWORD *)(v23 + 96);
    long long v190 = *(_OWORD *)(v23 + 112);
    uint64_t v191 = *(void *)(v23 + 128);
    long long v184 = *(_OWORD *)(v23 + 16);
    long long v185 = *(_OWORD *)(v23 + 32);
    long long v186 = *(_OWORD *)(v23 + 48);
    long long v187 = *(_OWORD *)(v23 + 64);
    long long v183 = *(_OWORD *)v23;
    uint64_t v30 = v162 + 136 * v19;
    long long v201 = *(_OWORD *)v30;
    long long v31 = *(_OWORD *)(v30 + 16);
    long long v32 = *(_OWORD *)(v30 + 32);
    long long v33 = *(_OWORD *)(v30 + 64);
    long long v204 = *(_OWORD *)(v30 + 48);
    long long v205 = v33;
    long long v202 = v31;
    long long v203 = v32;
    long long v34 = *(_OWORD *)(v30 + 80);
    long long v35 = *(_OWORD *)(v30 + 96);
    long long v36 = *(_OWORD *)(v30 + 112);
    uint64_t v209 = *(void *)(v30 + 128);
    long long v207 = v35;
    long long v208 = v36;
    long long v206 = v34;
    long long v179 = *(_OWORD *)(v30 + 80);
    long long v180 = *(_OWORD *)(v30 + 96);
    long long v181 = *(_OWORD *)(v30 + 112);
    uint64_t v182 = *(void *)(v30 + 128);
    long long v175 = *(_OWORD *)(v30 + 16);
    long long v176 = *(_OWORD *)(v30 + 32);
    long long v177 = *(_OWORD *)(v30 + 48);
    long long v178 = *(_OWORD *)(v30 + 64);
    long long v174 = *(_OWORD *)v30;
    sub_1AFD76370((uint64_t)&v192);
    sub_1AFD76370((uint64_t)&v201);
    int v37 = a5(&v183, &v174, a2, v210);
    if (v9)
    {
      sub_1AFD76408((uint64_t)&v201);
      sub_1AFD76408((uint64_t)&v192);
      swift_bridgeObjectRelease();
LABEL_116:
      *(void *)(v154 + 16) = 0;
      swift_release();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
LABEL_117:
      swift_bridgeObjectRelease();
      return swift_release_n();
    }
    int v38 = v37;
    sub_1AFD76408((uint64_t)&v201);
    sub_1AFD76408((uint64_t)&v192);
    v19 += 2;
    if (v21 + 2 < v155)
    {
      uint64_t v39 = v21 + 3;
      for (uint64_t i = v152 + 136 * v21; ; i += 136)
      {
        long long v174 = *(_OWORD *)i;
        long long v41 = *(_OWORD *)(i + 16);
        long long v42 = *(_OWORD *)(i + 32);
        long long v43 = *(_OWORD *)(i + 64);
        long long v177 = *(_OWORD *)(i + 48);
        long long v178 = v43;
        long long v175 = v41;
        long long v176 = v42;
        long long v44 = *(_OWORD *)(i + 80);
        long long v45 = *(_OWORD *)(i + 96);
        long long v46 = *(_OWORD *)(i + 112);
        uint64_t v182 = *(void *)(i + 128);
        long long v180 = v45;
        long long v181 = v46;
        long long v179 = v44;
        long long v47 = *(_OWORD *)(i + 112);
        v172[6] = *(_OWORD *)(i + 96);
        v172[7] = v47;
        uint64_t v173 = *(void *)(i + 128);
        long long v48 = *(_OWORD *)(i + 48);
        v172[2] = *(_OWORD *)(i + 32);
        v172[3] = v48;
        long long v49 = *(_OWORD *)(i + 80);
        v172[4] = *(_OWORD *)(i + 64);
        v172[5] = v49;
        long long v50 = *(_OWORD *)(i + 16);
        v172[0] = *(_OWORD *)i;
        v172[1] = v50;
        long long v183 = *(_OWORD *)(i - 136);
        long long v51 = *(_OWORD *)(i - 120);
        long long v52 = *(_OWORD *)(i - 104);
        long long v53 = *(_OWORD *)(i - 72);
        long long v186 = *(_OWORD *)(i - 88);
        long long v187 = v53;
        long long v184 = v51;
        long long v185 = v52;
        long long v54 = *(_OWORD *)(i - 56);
        long long v55 = *(_OWORD *)(i - 40);
        long long v56 = *(_OWORD *)(i - 24);
        uint64_t v191 = *(void *)(i - 8);
        long long v189 = v55;
        long long v190 = v56;
        long long v188 = v54;
        long long v57 = *(_OWORD *)(i - 56);
        long long v58 = *(_OWORD *)(i - 24);
        v170[6] = *(_OWORD *)(i - 40);
        v170[7] = v58;
        uint64_t v171 = *(void *)(i - 8);
        long long v59 = *(_OWORD *)(i - 120);
        long long v60 = *(_OWORD *)(i - 88);
        v170[2] = *(_OWORD *)(i - 104);
        v170[3] = v60;
        v170[4] = *(_OWORD *)(i - 72);
        v170[5] = v57;
        v170[0] = *(_OWORD *)(i - 136);
        v170[1] = v59;
        sub_1AFD76370((uint64_t)&v174);
        sub_1AFD76370((uint64_t)&v183);
        int v61 = a5(v172, v170, a2, v210);
        sub_1AFD76408((uint64_t)&v183);
        sub_1AFD76408((uint64_t)&v174);
        if ((v38 ^ v61))
        {
          uint64_t v19 = v39 - 1;
          goto LABEL_23;
        }
        if (v155 == v39) {
          break;
        }
        ++v39;
      }
      uint64_t v19 = v155;
    }
LABEL_23:
    if (v38)
    {
      if (v19 < v21) {
        goto LABEL_144;
      }
      if (v21 < v19)
      {
        unsigned int v62 = (_OWORD *)(v150 + 136 * v19);
        uint64_t v63 = v19;
        uint64_t v64 = v21;
        uint64_t v65 = (_OWORD *)(v162 + 136 * v21);
        do
        {
          if (v64 != --v63)
          {
            if (!v162) {
              goto LABEL_147;
            }
            long long v188 = v65[5];
            long long v189 = v65[6];
            long long v190 = v65[7];
            uint64_t v191 = *((void *)v65 + 16);
            long long v184 = v65[1];
            long long v185 = v65[2];
            long long v186 = v65[3];
            long long v187 = v65[4];
            long long v183 = *v65;
            memmove(v65, v62, 0x88uLL);
            v62[5] = v188;
            v62[6] = v189;
            v62[7] = v190;
            *((void *)v62 + 16) = v191;
            v62[1] = v184;
            v62[2] = v185;
            v62[3] = v186;
            v62[4] = v187;
            *unsigned int v62 = v183;
          }
          ++v64;
          unsigned int v62 = (_OWORD *)((char *)v62 - 136);
          uint64_t v65 = (_OWORD *)((char *)v65 + 136);
        }
        while (v64 < v63);
      }
    }
    if (v19 >= v155) {
      goto LABEL_41;
    }
    if (__OFSUB__(v19, v21)) {
      goto LABEL_141;
    }
    if (v19 - v21 >= v153) {
      goto LABEL_41;
    }
    if (__OFADD__(v21, v153)) {
      goto LABEL_142;
    }
    uint64_t v66 = v21 + v153 >= v155 ? v155 : v21 + v153;
    if (v66 < v21) {
      break;
    }
    if (v19 == v66) {
      goto LABEL_41;
    }
    uint64_t v120 = v162 + 136 * v19;
    uint64_t v167 = v66;
    do
    {
      uint64_t v121 = v22;
      for (uint64_t j = v120; ; j -= 136)
      {
        long long v192 = *(_OWORD *)j;
        long long v123 = *(_OWORD *)(j + 16);
        long long v124 = *(_OWORD *)(j + 32);
        long long v125 = *(_OWORD *)(j + 64);
        long long v195 = *(_OWORD *)(j + 48);
        long long v196 = v125;
        long long v193 = v123;
        long long v194 = v124;
        long long v126 = *(_OWORD *)(j + 80);
        long long v127 = *(_OWORD *)(j + 96);
        long long v128 = *(_OWORD *)(j + 112);
        uint64_t v200 = *(void *)(j + 128);
        long long v198 = v127;
        long long v199 = v128;
        long long v197 = v126;
        long long v188 = *(_OWORD *)(j + 80);
        long long v189 = *(_OWORD *)(j + 96);
        long long v190 = *(_OWORD *)(j + 112);
        uint64_t v191 = *(void *)(j + 128);
        long long v184 = *(_OWORD *)(j + 16);
        long long v185 = *(_OWORD *)(j + 32);
        long long v186 = *(_OWORD *)(j + 48);
        long long v187 = *(_OWORD *)(j + 64);
        long long v183 = *(_OWORD *)j;
        long long v201 = *(_OWORD *)(j - 136);
        long long v129 = *(_OWORD *)(j - 120);
        long long v130 = *(_OWORD *)(j - 104);
        long long v131 = *(_OWORD *)(j - 72);
        long long v204 = *(_OWORD *)(j - 88);
        long long v205 = v131;
        long long v202 = v129;
        long long v203 = v130;
        long long v132 = *(_OWORD *)(j - 56);
        long long v133 = *(_OWORD *)(j - 40);
        long long v134 = *(_OWORD *)(j - 24);
        uint64_t v209 = *(void *)(j - 8);
        long long v207 = v133;
        long long v208 = v134;
        long long v206 = v132;
        long long v179 = *(_OWORD *)(j - 56);
        long long v180 = *(_OWORD *)(j - 40);
        long long v181 = *(_OWORD *)(j - 24);
        uint64_t v182 = *(void *)(j - 8);
        long long v175 = *(_OWORD *)(j - 120);
        long long v176 = *(_OWORD *)(j - 104);
        long long v177 = *(_OWORD *)(j - 88);
        long long v178 = *(_OWORD *)(j - 72);
        long long v174 = *(_OWORD *)(j - 136);
        sub_1AFD76370((uint64_t)&v192);
        sub_1AFD76370((uint64_t)&v201);
        char v135 = a5(&v183, &v174, a2, v210);
        sub_1AFD76408((uint64_t)&v201);
        sub_1AFD76408((uint64_t)&v192);
        if ((v135 & 1) == 0) {
          break;
        }
        if (!v162) {
          goto LABEL_146;
        }
        uint64_t v136 = j - 136;
        long long v188 = *(_OWORD *)(j + 80);
        long long v189 = *(_OWORD *)(j + 96);
        long long v190 = *(_OWORD *)(j + 112);
        uint64_t v191 = *(void *)(j + 128);
        long long v184 = *(_OWORD *)(j + 16);
        long long v185 = *(_OWORD *)(j + 32);
        long long v186 = *(_OWORD *)(j + 48);
        long long v187 = *(_OWORD *)(j + 64);
        long long v183 = *(_OWORD *)j;
        long long v137 = *(_OWORD *)(j - 56);
        *(_OWORD *)(j + 64) = *(_OWORD *)(j - 72);
        *(_OWORD *)(j + 80) = v137;
        long long v138 = *(_OWORD *)(j - 24);
        *(_OWORD *)(j + 96) = *(_OWORD *)(j - 40);
        *(_OWORD *)(j + 112) = v138;
        *(void *)(j + 128) = *(void *)(j - 8);
        long long v139 = *(_OWORD *)(j - 88);
        *(_OWORD *)(j + 32) = *(_OWORD *)(j - 104);
        *(_OWORD *)(j + 48) = v139;
        long long v140 = *(_OWORD *)(j - 120);
        *(_OWORD *)uint64_t j = *(_OWORD *)(j - 136);
        *(_OWORD *)(j + 16) = v140;
        *(_OWORD *)(v136 + 64) = v187;
        *(_OWORD *)(v136 + 80) = v188;
        *(_OWORD *)(v136 + 96) = v189;
        *(_OWORD *)(v136 + 112) = v190;
        *(void *)(v136 + 128) = v191;
        *(_OWORD *)(v136 + 16) = v184;
        *(_OWORD *)(v136 + 32) = v185;
        *(_OWORD *)(v136 + 48) = v186;
        *(_OWORD *)uint64_t v136 = v183;
        if (v19 == v121) {
          break;
        }
        ++v121;
      }
      ++v19;
      v120 += 136;
    }
    while (v19 != v167);
    uint64_t v19 = v167;
    if (v167 < v21) {
      goto LABEL_139;
    }
LABEL_42:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v161 = sub_1AFEE5E44(0, *((void *)v161 + 2) + 1, 1, v161);
    }
    unint64_t v68 = *((void *)v161 + 2);
    unint64_t v67 = *((void *)v161 + 3);
    unint64_t v69 = v68 + 1;
    if (v68 >= v67 >> 1) {
      uint64_t v161 = sub_1AFEE5E44((char *)(v67 > 1), v68 + 1, 1, v161);
    }
    *((void *)v161 + 2) = v69;
    long long v70 = v161 + 32;
    long long v71 = &v161[16 * v68 + 32];
    *(void *)long long v71 = v21;
    *((void *)v71 + 1) = v19;
    if (v68)
    {
      long long v18 = v161;
      uint64_t v156 = v19;
      while (1)
      {
        unint64_t v72 = v69 - 1;
        if (v69 >= 4)
        {
          long long v77 = &v70[16 * v69];
          uint64_t v78 = *((void *)v77 - 8);
          uint64_t v79 = *((void *)v77 - 7);
          BOOL v83 = __OFSUB__(v79, v78);
          uint64_t v80 = v79 - v78;
          if (v83) {
            goto LABEL_124;
          }
          uint64_t v82 = *((void *)v77 - 6);
          uint64_t v81 = *((void *)v77 - 5);
          BOOL v83 = __OFSUB__(v81, v82);
          uint64_t v75 = v81 - v82;
          char v76 = v83;
          if (v83) {
            goto LABEL_125;
          }
          unint64_t v84 = v69 - 2;
          long long v85 = &v70[16 * v69 - 32];
          uint64_t v87 = *(void *)v85;
          uint64_t v86 = *((void *)v85 + 1);
          BOOL v83 = __OFSUB__(v86, v87);
          uint64_t v88 = v86 - v87;
          if (v83) {
            goto LABEL_127;
          }
          BOOL v83 = __OFADD__(v75, v88);
          uint64_t v89 = v75 + v88;
          if (v83) {
            goto LABEL_130;
          }
          if (v89 >= v80)
          {
            char v107 = &v70[16 * v72];
            uint64_t v109 = *(void *)v107;
            uint64_t v108 = *((void *)v107 + 1);
            BOOL v83 = __OFSUB__(v108, v109);
            uint64_t v110 = v108 - v109;
            if (v83) {
              goto LABEL_134;
            }
            BOOL v100 = v75 < v110;
            goto LABEL_79;
          }
        }
        else
        {
          if (v69 != 3)
          {
            uint64_t v101 = *((void *)v18 + 4);
            uint64_t v102 = *((void *)v18 + 5);
            BOOL v83 = __OFSUB__(v102, v101);
            uint64_t v94 = v102 - v101;
            char v95 = v83;
            goto LABEL_73;
          }
          uint64_t v74 = *((void *)v18 + 4);
          uint64_t v73 = *((void *)v18 + 5);
          BOOL v83 = __OFSUB__(v73, v74);
          uint64_t v75 = v73 - v74;
          char v76 = v83;
        }
        if (v76) {
          goto LABEL_126;
        }
        unint64_t v84 = v69 - 2;
        unint64_t v90 = &v70[16 * v69 - 32];
        uint64_t v92 = *(void *)v90;
        uint64_t v91 = *((void *)v90 + 1);
        BOOL v93 = __OFSUB__(v91, v92);
        uint64_t v94 = v91 - v92;
        char v95 = v93;
        if (v93) {
          goto LABEL_129;
        }
        long long v96 = &v70[16 * v72];
        uint64_t v98 = *(void *)v96;
        uint64_t v97 = *((void *)v96 + 1);
        BOOL v83 = __OFSUB__(v97, v98);
        uint64_t v99 = v97 - v98;
        if (v83) {
          goto LABEL_132;
        }
        if (__OFADD__(v94, v99)) {
          goto LABEL_133;
        }
        if (v94 + v99 >= v75)
        {
          BOOL v100 = v75 < v99;
LABEL_79:
          if (v100) {
            unint64_t v72 = v84;
          }
          goto LABEL_81;
        }
LABEL_73:
        if (v95) {
          goto LABEL_128;
        }
        long long v103 = &v70[16 * v72];
        uint64_t v105 = *(void *)v103;
        uint64_t v104 = *((void *)v103 + 1);
        BOOL v83 = __OFSUB__(v104, v105);
        uint64_t v106 = v104 - v105;
        if (v83) {
          goto LABEL_131;
        }
        if (v106 < v94) {
          goto LABEL_90;
        }
LABEL_81:
        unint64_t v111 = v72 - 1;
        if (v72 - 1 >= v69)
        {
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
          goto LABEL_143;
        }
        if (!v162) {
          goto LABEL_145;
        }
        uint64_t v112 = v9;
        uint64_t v113 = &v70[16 * v111];
        uint64_t v114 = *(void *)v113;
        unint64_t v115 = v72;
        long long v116 = &v70[16 * v72];
        uint64_t v117 = *((void *)v116 + 1);
        uint64_t v163 = (char *)(v162 + 136 * *(void *)v116);
        uint64_t v165 = (char *)(v162 + 136 * *(void *)v113);
        sub_1AFFC8E38();
        sub_1AFFC8E48();
        sub_1AFEE93B8(v165, v163, v162 + 136 * v117, v158, v169, v159, v210, a6);
        if (v112)
        {
LABEL_102:
          swift_bridgeObjectRelease();
          swift_release();
          goto LABEL_116;
        }
        swift_release();
        long long v18 = v161;
        if (v117 < v114) {
          goto LABEL_121;
        }
        if (v115 > *((void *)v161 + 2)) {
          goto LABEL_122;
        }
        unint64_t v118 = v115;
        *(void *)uint64_t v113 = v114;
        *(void *)&v161[16 * v111 + 40] = v117;
        unint64_t v119 = *((void *)v161 + 2);
        if (v115 >= v119) {
          goto LABEL_123;
        }
        unint64_t v69 = v119 - 1;
        memmove(v116, v116 + 16, 16 * (v119 - 1 - v118));
        long long v70 = v161 + 32;
        a2 = v169;
        *((void *)v161 + 2) = v119 - 1;
        uint64_t v9 = 0;
        uint64_t v19 = v156;
        if (v119 <= 2) {
          goto LABEL_90;
        }
      }
    }
    unint64_t v69 = 1;
    long long v18 = v161;
LABEL_90:
    uint64_t v20 = v155;
    if (v19 >= v155) {
      goto LABEL_104;
    }
  }
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  swift_release_n();
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_146:
  swift_release_n();
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_147:
  swift_release_n();
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_148:
  swift_release_n();
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_149:
  swift_release_n();
  swift_bridgeObjectRelease_n();
  uint64_t result = sub_1AFFCB998();
  __break(1u);
  return result;
}

uint64_t sub_1AFEEA8A4(void **a1, uint64_t a2, uint64_t a3, char a4, uint64_t (*a5)(long long *, long long *, uint64_t, void), uint64_t (*a6)(void, void, void, void))
{
  char v11 = a4 & 1;
  uint64_t v12 = *a1;
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v12 = sub_1AFFB2ED0(v12);
  }
  uint64_t v13 = v12[2];
  v15[0] = (uint64_t)(v12 + 4);
  v15[1] = v13;
  sub_1AFFC8E38();
  sub_1AFFC8E48();
  sub_1AFEE9AB8(v15, a2, a3, v11, a5, a6, a5);
  swift_bridgeObjectRelease();
  swift_release();
  *a1 = v12;
  swift_release_n();
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1AFEEA9A8(uint64_t a1, uint64_t a2, int a3)
{
  int v32 = a3;
  uint64_t v5 = sub_1AFFC92A8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a1 + 72);
  uint64_t v9 = *(void *)(a1 + 80);
  uint64_t v11 = *(void *)(a2 + 72);
  uint64_t v12 = *(void *)(a2 + 80);
  uint64_t v28 = v11;
  uint64_t v30 = v10;
  uint64_t v31 = v9;
  sub_1AFFC8E38();
  sub_1AFFC9258();
  sub_1AFD3AE10();
  uint64_t v13 = sub_1AFFCB6B8();
  uint64_t v15 = v14;
  uint64_t v16 = *(void (**)(char *, uint64_t))(v6 + 8);
  v16(v8, v5);
  swift_bridgeObjectRelease();
  uint64_t v30 = v13;
  uint64_t v31 = v15;
  sub_1AFFC9288();
  sub_1AFFCB6B8();
  v16(v8, v5);
  swift_bridgeObjectRelease();
  uint64_t v17 = sub_1AFFCAF28();
  uint64_t v29 = v18;
  swift_bridgeObjectRelease();
  uint64_t v30 = v28;
  uint64_t v31 = v12;
  sub_1AFFC8E38();
  sub_1AFFC9258();
  uint64_t v19 = sub_1AFFCB6B8();
  uint64_t v21 = v20;
  v16(v8, v5);
  swift_bridgeObjectRelease();
  uint64_t v30 = v19;
  uint64_t v31 = v21;
  sub_1AFFC9288();
  sub_1AFFCB6B8();
  v16(v8, v5);
  swift_bridgeObjectRelease();
  uint64_t v22 = sub_1AFFCAF28();
  uint64_t v24 = v23;
  swift_bridgeObjectRelease();
  if (v32)
  {
    if (v22 != v17 || v24 != v29) {
      goto LABEL_8;
    }
  }
  else if (v17 != v22 || v29 != v24)
  {
LABEL_8:
    char v25 = sub_1AFFCBCE8();
    goto LABEL_9;
  }
  char v25 = 0;
LABEL_9:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v25 & 1;
}

uint64_t sub_1AFEEAC7C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, char a5)
{
  if (a3 != a2)
  {
    uint64_t v6 = a3;
    int v8 = a5 & 1;
    uint64_t v9 = *a4;
    uint64_t v10 = *a4 + 136 * a3;
    uint64_t v11 = result + 1;
    uint64_t v62 = result + 1;
LABEL_5:
    for (uint64_t i = v10; ; i -= 136)
    {
      v58[0] = *(_OWORD *)i;
      long long v13 = *(_OWORD *)(i + 16);
      long long v14 = *(_OWORD *)(i + 32);
      long long v15 = *(_OWORD *)(i + 64);
      v58[3] = *(_OWORD *)(i + 48);
      v58[4] = v15;
      v58[1] = v13;
      v58[2] = v14;
      long long v16 = *(_OWORD *)(i + 80);
      long long v17 = *(_OWORD *)(i + 96);
      long long v18 = *(_OWORD *)(i + 112);
      uint64_t v59 = *(void *)(i + 128);
      v58[6] = v17;
      v58[7] = v18;
      v58[5] = v16;
      long long v19 = *(_OWORD *)(i + 112);
      long long v55 = *(_OWORD *)(i + 96);
      long long v56 = v19;
      uint64_t v57 = *(void *)(i + 128);
      long long v20 = *(_OWORD *)(i + 48);
      long long v51 = *(_OWORD *)(i + 32);
      long long v52 = v20;
      long long v21 = *(_OWORD *)(i + 80);
      long long v53 = *(_OWORD *)(i + 64);
      long long v54 = v21;
      long long v22 = *(_OWORD *)(i + 16);
      long long v49 = *(_OWORD *)i;
      long long v50 = v22;
      v60[0] = *(_OWORD *)(i - 136);
      long long v23 = *(_OWORD *)(i - 120);
      long long v24 = *(_OWORD *)(i - 104);
      long long v25 = *(_OWORD *)(i - 72);
      v60[3] = *(_OWORD *)(i - 88);
      v60[4] = v25;
      v60[1] = v23;
      void v60[2] = v24;
      long long v26 = *(_OWORD *)(i - 56);
      long long v27 = *(_OWORD *)(i - 40);
      long long v28 = *(_OWORD *)(i - 24);
      uint64_t v61 = *(void *)(i - 8);
      v60[6] = v27;
      v60[7] = v28;
      v60[5] = v26;
      long long v29 = *(_OWORD *)(i - 56);
      long long v30 = *(_OWORD *)(i - 24);
      v47[6] = *(_OWORD *)(i - 40);
      v47[7] = v30;
      uint64_t v48 = *(void *)(i - 8);
      long long v31 = *(_OWORD *)(i - 120);
      long long v32 = *(_OWORD *)(i - 88);
      _OWORD v47[2] = *(_OWORD *)(i - 104);
      void v47[3] = v32;
      v47[4] = *(_OWORD *)(i - 72);
      v47[5] = v29;
      v47[0] = *(_OWORD *)(i - 136);
      v47[1] = v31;
      sub_1AFD76370((uint64_t)v58);
      sub_1AFD76370((uint64_t)v60);
      char v33 = sub_1AFEEA9A8((uint64_t)&v49, (uint64_t)v47, v8);
      sub_1AFD76408((uint64_t)v60);
      uint64_t result = sub_1AFD76408((uint64_t)v58);
      if (v5) {
        break;
      }
      if ((v33 & 1) == 0) {
        goto LABEL_4;
      }
      if (!v9)
      {
        __break(1u);
        return result;
      }
      uint64_t v34 = i - 136;
      long long v35 = *(_OWORD *)(i + 112);
      long long v55 = *(_OWORD *)(i + 96);
      long long v56 = v35;
      uint64_t v57 = *(void *)(i + 128);
      long long v36 = *(_OWORD *)(i + 48);
      long long v51 = *(_OWORD *)(i + 32);
      long long v52 = v36;
      long long v37 = *(_OWORD *)(i + 80);
      long long v53 = *(_OWORD *)(i + 64);
      long long v54 = v37;
      long long v38 = *(_OWORD *)(i + 16);
      long long v49 = *(_OWORD *)i;
      long long v50 = v38;
      long long v39 = *(_OWORD *)(i - 56);
      *(_OWORD *)(i + 64) = *(_OWORD *)(i - 72);
      *(_OWORD *)(i + 80) = v39;
      long long v40 = *(_OWORD *)(i - 24);
      *(_OWORD *)(i + 96) = *(_OWORD *)(i - 40);
      *(_OWORD *)(i + 112) = v40;
      *(void *)(i + 128) = *(void *)(i - 8);
      long long v41 = *(_OWORD *)(i - 88);
      *(_OWORD *)(i + 32) = *(_OWORD *)(i - 104);
      *(_OWORD *)(i + 48) = v41;
      long long v42 = *(_OWORD *)(i - 120);
      *(_OWORD *)uint64_t i = *(_OWORD *)(i - 136);
      *(_OWORD *)(i + 16) = v42;
      long long v43 = v54;
      *(_OWORD *)(v34 + 64) = v53;
      *(_OWORD *)(v34 + 80) = v43;
      long long v44 = v56;
      *(_OWORD *)(v34 + 96) = v55;
      *(_OWORD *)(v34 + 112) = v44;
      *(void *)(v34 + 128) = v57;
      long long v45 = v52;
      *(_OWORD *)(v34 + 32) = v51;
      *(_OWORD *)(v34 + 48) = v45;
      long long v46 = v50;
      *(_OWORD *)uint64_t v34 = v49;
      *(_OWORD *)(v34 + 16) = v46;
      if (v6 == v11)
      {
LABEL_4:
        ++v6;
        v10 += 136;
        uint64_t v11 = v62;
        if (v6 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      ++v11;
    }
  }
  return result;
}

uint64_t sub_1AFEEAEB4(uint64_t *a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  int v207 = a3 & 1;
  uint64_t v7 = a1[1];
  swift_retain_n();
  uint64_t v8 = sub_1AFFCBC78();
  if (v8 >= v7)
  {
    if (v7 < 0) {
      goto LABEL_145;
    }
    if (v7) {
      sub_1AFEEAC7C(0, v7, 1, a1, v207);
    }
    swift_release_n();
    return swift_release();
  }
  uint64_t v156 = a1;
  if (v7 >= 0) {
    uint64_t v9 = v7;
  }
  else {
    uint64_t v9 = v7 + 1;
  }
  if (v7 < -1) {
    goto LABEL_154;
  }
  uint64_t v155 = v8;
  uint64_t v161 = a2;
  uint64_t v158 = v7;
  if (v7 < 2)
  {
    __dst = (char *)(MEMORY[0x1E4FBC860] + 32);
    uint64_t v157 = MEMORY[0x1E4FBC860];
    if (v7 != 1)
    {
      long long v140 = (char *)MEMORY[0x1E4FBC860];
      unint64_t v66 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      if (v66 < 2) {
        goto LABEL_121;
      }
      goto LABEL_106;
    }
  }
  else
  {
    uint64_t v10 = v9 >> 1;
    uint64_t v11 = sub_1AFFCB258();
    *(void *)(v11 + 16) = v10;
    uint64_t v157 = v11;
    __dst = (char *)(v11 + 32);
  }
  uint64_t v12 = 0;
  uint64_t v13 = *v156;
  uint64_t v153 = *v156 - 136;
  uint64_t v154 = *v156 + 272;
  uint64_t v162 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v163 = *v156;
  uint64_t v14 = v158;
  while (1)
  {
    uint64_t v15 = v12;
    uint64_t v16 = v12 + 1;
    if (v12 + 1 >= v14)
    {
      ++v12;
      long long v56 = v162;
      goto LABEL_44;
    }
    long long v17 = (long long *)(v13 + 136 * v16);
    long long v189 = *v17;
    long long v18 = v17[1];
    long long v19 = v17[2];
    long long v20 = v17[4];
    long long v192 = v17[3];
    long long v193 = v20;
    long long v190 = v18;
    long long v191 = v19;
    long long v21 = v17[5];
    long long v22 = v17[6];
    long long v23 = v17[7];
    uint64_t v197 = *((void *)v17 + 16);
    long long v195 = v22;
    long long v196 = v23;
    long long v194 = v21;
    long long v185 = v17[5];
    long long v186 = v17[6];
    long long v187 = v17[7];
    uint64_t v188 = *((void *)v17 + 16);
    long long v181 = v17[1];
    long long v182 = v17[2];
    long long v183 = v17[3];
    long long v184 = v17[4];
    long long v180 = *v17;
    long long v24 = (long long *)(v13 + 136 * v12);
    long long v198 = *v24;
    long long v25 = v24[1];
    long long v26 = v24[2];
    long long v27 = v24[4];
    long long v201 = v24[3];
    long long v202 = v27;
    long long v199 = v25;
    long long v200 = v26;
    long long v28 = v24[5];
    long long v29 = v24[6];
    long long v30 = v24[7];
    uint64_t v206 = *((void *)v24 + 16);
    long long v204 = v29;
    long long v205 = v30;
    long long v203 = v28;
    long long v176 = v24[5];
    long long v177 = v24[6];
    long long v178 = v24[7];
    uint64_t v179 = *((void *)v24 + 16);
    long long v172 = v24[1];
    long long v173 = v24[2];
    long long v174 = v24[3];
    long long v175 = v24[4];
    long long v171 = *v24;
    sub_1AFD76370((uint64_t)&v189);
    sub_1AFD76370((uint64_t)&v198);
    int v31 = sub_1AFEEA9A8((uint64_t)&v180, (uint64_t)&v171, v207);
    if (v4)
    {
      sub_1AFD76408((uint64_t)&v198);
      sub_1AFD76408((uint64_t)&v189);
      swift_bridgeObjectRelease();
LABEL_118:
      *(void *)(v157 + 16) = 0;
LABEL_122:
      swift_release_n();
      swift_bridgeObjectRelease();
      return swift_release();
    }
    int v32 = v31;
    sub_1AFD76408((uint64_t)&v198);
    sub_1AFD76408((uint64_t)&v189);
    v12 += 2;
    if (v15 + 2 < v158)
    {
      uint64_t v33 = v15 + 3;
      for (uint64_t i = v154 + 136 * v15; ; i += 136)
      {
        long long v171 = *(_OWORD *)i;
        long long v35 = *(_OWORD *)(i + 16);
        long long v36 = *(_OWORD *)(i + 32);
        long long v37 = *(_OWORD *)(i + 64);
        long long v174 = *(_OWORD *)(i + 48);
        long long v175 = v37;
        long long v172 = v35;
        long long v173 = v36;
        long long v38 = *(_OWORD *)(i + 80);
        long long v39 = *(_OWORD *)(i + 96);
        long long v40 = *(_OWORD *)(i + 112);
        uint64_t v179 = *(void *)(i + 128);
        long long v177 = v39;
        long long v178 = v40;
        long long v176 = v38;
        long long v41 = *(_OWORD *)(i + 112);
        v169[6] = *(_OWORD *)(i + 96);
        v169[7] = v41;
        uint64_t v170 = *(void *)(i + 128);
        long long v42 = *(_OWORD *)(i + 48);
        v169[2] = *(_OWORD *)(i + 32);
        v169[3] = v42;
        long long v43 = *(_OWORD *)(i + 80);
        v169[4] = *(_OWORD *)(i + 64);
        v169[5] = v43;
        long long v44 = *(_OWORD *)(i + 16);
        v169[0] = *(_OWORD *)i;
        v169[1] = v44;
        long long v180 = *(_OWORD *)(i - 136);
        long long v45 = *(_OWORD *)(i - 120);
        long long v46 = *(_OWORD *)(i - 104);
        long long v47 = *(_OWORD *)(i - 72);
        long long v183 = *(_OWORD *)(i - 88);
        long long v184 = v47;
        long long v181 = v45;
        long long v182 = v46;
        long long v48 = *(_OWORD *)(i - 56);
        long long v49 = *(_OWORD *)(i - 40);
        long long v50 = *(_OWORD *)(i - 24);
        uint64_t v188 = *(void *)(i - 8);
        long long v186 = v49;
        long long v187 = v50;
        long long v185 = v48;
        long long v51 = *(_OWORD *)(i - 56);
        long long v52 = *(_OWORD *)(i - 24);
        v167[6] = *(_OWORD *)(i - 40);
        v167[7] = v52;
        uint64_t v168 = *(void *)(i - 8);
        long long v53 = *(_OWORD *)(i - 120);
        long long v54 = *(_OWORD *)(i - 88);
        v167[2] = *(_OWORD *)(i - 104);
        v167[3] = v54;
        v167[4] = *(_OWORD *)(i - 72);
        v167[5] = v51;
        v167[0] = *(_OWORD *)(i - 136);
        v167[1] = v53;
        sub_1AFD76370((uint64_t)&v171);
        sub_1AFD76370((uint64_t)&v180);
        int v55 = sub_1AFEEA9A8((uint64_t)v169, (uint64_t)v167, v207);
        sub_1AFD76408((uint64_t)&v180);
        sub_1AFD76408((uint64_t)&v171);
        if ((v32 ^ v55))
        {
          uint64_t v12 = v33 - 1;
          goto LABEL_24;
        }
        if (v158 == v33) {
          break;
        }
        ++v33;
      }
      uint64_t v12 = v158;
LABEL_24:
      uint64_t v13 = v163;
    }
    long long v56 = v162;
    if (v32)
    {
      if (v12 < v15) {
        goto LABEL_149;
      }
      if (v15 < v12)
      {
        uint64_t v57 = (_OWORD *)(v153 + 136 * v12);
        uint64_t v58 = v12;
        uint64_t v59 = v13;
        uint64_t v60 = v15;
        uint64_t v61 = (_OWORD *)(v59 + 136 * v15);
        do
        {
          if (v60 != --v58)
          {
            if (!v163) {
              goto LABEL_152;
            }
            long long v185 = v61[5];
            long long v186 = v61[6];
            long long v187 = v61[7];
            uint64_t v188 = *((void *)v61 + 16);
            long long v181 = v61[1];
            long long v182 = v61[2];
            long long v183 = v61[3];
            long long v184 = v61[4];
            long long v180 = *v61;
            memmove(v61, v57, 0x88uLL);
            v57[5] = v185;
            v57[6] = v186;
            v57[7] = v187;
            *((void *)v57 + 16) = v188;
            v57[1] = v181;
            v57[2] = v182;
            void v57[3] = v183;
            v57[4] = v184;
            *uint64_t v57 = v180;
          }
          ++v60;
          uint64_t v57 = (_OWORD *)((char *)v57 - 136);
          uint64_t v61 = (_OWORD *)((char *)v61 + 136);
        }
        while (v60 < v58);
        long long v56 = v162;
        uint64_t v13 = v163;
      }
    }
    if (v12 >= v158) {
      goto LABEL_44;
    }
    if (__OFSUB__(v12, v15)) {
      goto LABEL_146;
    }
    if (v12 - v15 >= v155) {
      goto LABEL_44;
    }
    if (__OFADD__(v15, v155)) {
      goto LABEL_147;
    }
    uint64_t v62 = v15 + v155 >= v158 ? v158 : v15 + v155;
    if (v62 < v15) {
      break;
    }
    if (v12 != v62)
    {
      unint64_t v119 = (long long *)(v13 + 136 * v12);
      do
      {
        uint64_t v120 = v16;
        for (uint64_t j = v119; ; uint64_t j = (long long *)((char *)j - 136))
        {
          long long v189 = *j;
          long long v122 = j[1];
          long long v123 = j[2];
          long long v124 = j[4];
          long long v192 = j[3];
          long long v193 = v124;
          long long v190 = v122;
          long long v191 = v123;
          long long v125 = j[5];
          long long v126 = j[6];
          long long v127 = j[7];
          uint64_t v197 = *((void *)j + 16);
          long long v195 = v126;
          long long v196 = v127;
          long long v194 = v125;
          long long v185 = j[5];
          long long v186 = j[6];
          long long v187 = j[7];
          uint64_t v188 = *((void *)j + 16);
          long long v181 = j[1];
          long long v182 = j[2];
          long long v183 = j[3];
          long long v184 = j[4];
          long long v180 = *j;
          long long v198 = *(long long *)((char *)j - 136);
          long long v128 = *(long long *)((char *)j - 120);
          long long v129 = *(long long *)((char *)j - 104);
          long long v130 = *(long long *)((char *)j - 72);
          long long v201 = *(long long *)((char *)j - 88);
          long long v202 = v130;
          long long v199 = v128;
          long long v200 = v129;
          long long v131 = *(long long *)((char *)j - 56);
          long long v132 = *(long long *)((char *)j - 40);
          long long v133 = *(long long *)((char *)j - 24);
          uint64_t v206 = *((void *)j - 1);
          long long v204 = v132;
          long long v205 = v133;
          long long v203 = v131;
          long long v176 = *(long long *)((char *)j - 56);
          long long v177 = *(long long *)((char *)j - 40);
          long long v178 = *(long long *)((char *)j - 24);
          uint64_t v179 = *((void *)j - 1);
          long long v172 = *(long long *)((char *)j - 120);
          long long v173 = *(long long *)((char *)j - 104);
          long long v174 = *(long long *)((char *)j - 88);
          long long v175 = *(long long *)((char *)j - 72);
          long long v171 = *(long long *)((char *)j - 136);
          sub_1AFD76370((uint64_t)&v189);
          sub_1AFD76370((uint64_t)&v198);
          char v134 = sub_1AFEEA9A8((uint64_t)&v180, (uint64_t)&v171, v207);
          sub_1AFD76408((uint64_t)&v198);
          sub_1AFD76408((uint64_t)&v189);
          if ((v134 & 1) == 0) {
            break;
          }
          if (!v163) {
            goto LABEL_151;
          }
          uint64_t v135 = (uint64_t)j - 136;
          long long v185 = j[5];
          long long v186 = j[6];
          long long v187 = j[7];
          uint64_t v188 = *((void *)j + 16);
          long long v181 = j[1];
          long long v182 = j[2];
          long long v183 = j[3];
          long long v184 = j[4];
          long long v180 = *j;
          long long v136 = *(long long *)((char *)j - 56);
          j[4] = *(long long *)((char *)j - 72);
          j[5] = v136;
          long long v137 = *(long long *)((char *)j - 24);
          j[6] = *(long long *)((char *)j - 40);
          j[7] = v137;
          *((void *)j + 16) = *((void *)j - 1);
          long long v138 = *(long long *)((char *)j - 88);
          j[2] = *(long long *)((char *)j - 104);
          j[3] = v138;
          long long v139 = *(long long *)((char *)j - 120);
          *uint64_t j = *(long long *)((char *)j - 136);
          j[1] = v139;
          *(_OWORD *)(v135 + 64) = v184;
          *(_OWORD *)(v135 + 80) = v185;
          *(_OWORD *)(v135 + 96) = v186;
          *(_OWORD *)(v135 + 112) = v187;
          *(void *)(v135 + 128) = v188;
          *(_OWORD *)(v135 + 16) = v181;
          *(_OWORD *)(v135 + 32) = v182;
          *(_OWORD *)(v135 + 48) = v183;
          *(_OWORD *)uint64_t v135 = v180;
          if (v12 == v120) {
            break;
          }
          ++v120;
        }
        ++v12;
        unint64_t v119 = (long long *)((char *)v119 + 136);
      }
      while (v12 != v62);
      uint64_t v12 = v62;
      long long v56 = v162;
      uint64_t v13 = v163;
      if (v62 < v15) {
        goto LABEL_144;
      }
      goto LABEL_45;
    }
LABEL_44:
    if (v12 < v15) {
      goto LABEL_144;
    }
LABEL_45:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      long long v56 = sub_1AFEE5E44(0, *((void *)v56 + 2) + 1, 1, v56);
    }
    uint64_t v63 = v56;
    unint64_t v64 = *((void *)v56 + 2);
    uint64_t v162 = v63;
    unint64_t v65 = *((void *)v63 + 3);
    unint64_t v66 = v64 + 1;
    if (v64 >= v65 >> 1) {
      uint64_t v162 = sub_1AFEE5E44((char *)(v65 > 1), v64 + 1, 1, v162);
    }
    *((void *)v162 + 2) = v66;
    unint64_t v67 = &v162[16 * v64 + 32];
    *(void *)unint64_t v67 = v15;
    *((void *)v67 + 1) = v12;
    if (v64)
    {
      unint64_t v68 = v162;
      unint64_t v69 = v162 + 32;
      uint64_t v159 = v12;
      while (1)
      {
        unint64_t v70 = v66 - 1;
        if (v66 >= 4)
        {
          uint64_t v75 = &v69[16 * v66];
          uint64_t v76 = *((void *)v75 - 8);
          uint64_t v77 = *((void *)v75 - 7);
          BOOL v81 = __OFSUB__(v77, v76);
          uint64_t v78 = v77 - v76;
          if (v81) {
            goto LABEL_129;
          }
          uint64_t v80 = *((void *)v75 - 6);
          uint64_t v79 = *((void *)v75 - 5);
          BOOL v81 = __OFSUB__(v79, v80);
          uint64_t v73 = v79 - v80;
          char v74 = v81;
          if (v81) {
            goto LABEL_130;
          }
          unint64_t v82 = v66 - 2;
          BOOL v83 = &v69[16 * v66 - 32];
          uint64_t v85 = *(void *)v83;
          uint64_t v84 = *((void *)v83 + 1);
          BOOL v81 = __OFSUB__(v84, v85);
          uint64_t v86 = v84 - v85;
          if (v81) {
            goto LABEL_132;
          }
          BOOL v81 = __OFADD__(v73, v86);
          uint64_t v87 = v73 + v86;
          if (v81) {
            goto LABEL_135;
          }
          if (v87 >= v78)
          {
            uint64_t v105 = &v69[16 * v70];
            uint64_t v107 = *(void *)v105;
            uint64_t v106 = *((void *)v105 + 1);
            BOOL v81 = __OFSUB__(v106, v107);
            uint64_t v108 = v106 - v107;
            if (v81) {
              goto LABEL_139;
            }
            BOOL v98 = v73 < v108;
            goto LABEL_82;
          }
        }
        else
        {
          if (v66 != 3)
          {
            uint64_t v99 = *((void *)v68 + 4);
            uint64_t v100 = *((void *)v68 + 5);
            BOOL v81 = __OFSUB__(v100, v99);
            uint64_t v92 = v100 - v99;
            char v93 = v81;
            goto LABEL_76;
          }
          uint64_t v72 = *((void *)v68 + 4);
          uint64_t v71 = *((void *)v68 + 5);
          BOOL v81 = __OFSUB__(v71, v72);
          uint64_t v73 = v71 - v72;
          char v74 = v81;
        }
        if (v74) {
          goto LABEL_131;
        }
        unint64_t v82 = v66 - 2;
        uint64_t v88 = &v69[16 * v66 - 32];
        uint64_t v90 = *(void *)v88;
        uint64_t v89 = *((void *)v88 + 1);
        BOOL v91 = __OFSUB__(v89, v90);
        uint64_t v92 = v89 - v90;
        char v93 = v91;
        if (v91) {
          goto LABEL_134;
        }
        uint64_t v94 = &v69[16 * v70];
        uint64_t v96 = *(void *)v94;
        uint64_t v95 = *((void *)v94 + 1);
        BOOL v81 = __OFSUB__(v95, v96);
        uint64_t v97 = v95 - v96;
        if (v81) {
          goto LABEL_137;
        }
        if (__OFADD__(v92, v97)) {
          goto LABEL_138;
        }
        if (v92 + v97 >= v73)
        {
          BOOL v98 = v73 < v97;
LABEL_82:
          if (v98) {
            unint64_t v70 = v82;
          }
          goto LABEL_84;
        }
LABEL_76:
        if (v93) {
          goto LABEL_133;
        }
        uint64_t v101 = &v69[16 * v70];
        uint64_t v103 = *(void *)v101;
        uint64_t v102 = *((void *)v101 + 1);
        BOOL v81 = __OFSUB__(v102, v103);
        uint64_t v104 = v102 - v103;
        if (v81) {
          goto LABEL_136;
        }
        if (v104 < v92) {
          goto LABEL_93;
        }
LABEL_84:
        unint64_t v109 = v70 - 1;
        if (v70 - 1 >= v66)
        {
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
          goto LABEL_148;
        }
        if (!v13) {
          goto LABEL_150;
        }
        uint64_t v110 = v4;
        unint64_t v111 = &v69[16 * v109];
        uint64_t v112 = *(void *)v111;
        unint64_t v113 = v70;
        uint64_t v114 = &v69[16 * v70];
        uint64_t v115 = *((void *)v114 + 1);
        long long v116 = (char *)(v13 + 136 * *(void *)v111);
        uint64_t v165 = (char *)(v13 + 136 * *(void *)v114);
        sub_1AFFC8E48();
        sub_1AFEE59C4(v116, v165, v13 + 136 * v115, __dst, v161, v207);
        if (v110)
        {
LABEL_117:
          swift_bridgeObjectRelease();
          goto LABEL_118;
        }
        unint64_t v68 = v162;
        if (v115 < v112) {
          goto LABEL_126;
        }
        if (v113 > *((void *)v162 + 2)) {
          goto LABEL_127;
        }
        unint64_t v117 = v113;
        *(void *)unint64_t v111 = v112;
        unint64_t v69 = v162 + 32;
        *(void *)&v162[16 * v109 + 40] = v115;
        unint64_t v118 = *((void *)v162 + 2);
        if (v113 >= v118) {
          goto LABEL_128;
        }
        unint64_t v66 = v118 - 1;
        memmove(v114, v114 + 16, 16 * (v118 - 1 - v117));
        *((void *)v162 + 2) = v118 - 1;
        BOOL v98 = v118 > 2;
        uint64_t v4 = 0;
        uint64_t v13 = v163;
        uint64_t v12 = v159;
        if (!v98) {
          goto LABEL_93;
        }
      }
    }
    unint64_t v66 = 1;
LABEL_93:
    uint64_t v14 = v158;
    if (v12 >= v158)
    {
      long long v140 = v162;
      if (v66 < 2)
      {
LABEL_121:
        swift_bridgeObjectRelease();
        *(void *)(v157 + 16) = 0;
        goto LABEL_122;
      }
LABEL_106:
      uint64_t v141 = *v156;
      uint64_t v164 = *v156;
      while (1)
      {
        unint64_t v142 = v66 - 2;
        if (v66 < 2) {
          goto LABEL_140;
        }
        if (!v141) {
          goto LABEL_153;
        }
        uint64_t v143 = v4;
        uint64_t v144 = (uint64_t)v140;
        uint64_t v145 = *(void *)&v140[16 * v142 + 32];
        uint64_t v146 = *(void *)&v140[16 * v66 + 24];
        uint64_t v147 = *(void *)&v140[16 * v66 + 16];
        unint64_t v148 = (char *)(v141 + 136 * v145);
        unint64_t v166 = (char *)(v141 + 136 * v147);
        unint64_t v149 = v141 + 136 * v146;
        sub_1AFFC8E48();
        sub_1AFEE59C4(v148, v166, v149, __dst, v161, v207);
        uint64_t v4 = v143;
        if (v143) {
          goto LABEL_117;
        }
        if (v146 < v145) {
          goto LABEL_141;
        }
        long long v140 = (char *)v144;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          long long v140 = sub_1AFEE6294(v144);
        }
        if (v142 >= *((void *)v140 + 2)) {
          goto LABEL_142;
        }
        uint64_t v150 = &v140[16 * v142 + 32];
        *(void *)uint64_t v150 = v145;
        *((void *)v150 + 1) = v146;
        unint64_t v151 = *((void *)v140 + 2);
        if (v66 > v151) {
          goto LABEL_143;
        }
        memmove(&v140[16 * v66 + 16], &v140[16 * v66 + 32], 16 * (v151 - v66));
        *((void *)v140 + 2) = v151 - 1;
        unint64_t v66 = v151 - 1;
        uint64_t v141 = v164;
        if (v151 <= 2) {
          goto LABEL_121;
        }
      }
    }
  }
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  swift_release_n();
  __break(1u);
LABEL_151:
  swift_release_n();
  __break(1u);
LABEL_152:
  swift_release_n();
  __break(1u);
LABEL_153:
  swift_release_n();
  __break(1u);
LABEL_154:
  swift_release_n();
  uint64_t result = sub_1AFFCB998();
  __break(1u);
  return result;
}

uint64_t sub_1AFEEBB7C(char *__src, char *a2, unint64_t a3, char *__dst, uint64_t a5, char a6)
{
  uint64_t v7 = a2;
  int64_t v9 = a2 - __src;
  int64_t v10 = (a2 - __src) / 136;
  unint64_t v70 = __dst;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = (uint64_t)(a3 - (void)a2) / 136;
  BOOL v91 = __src;
  uint64_t v90 = __dst;
  if (v10 >= v12)
  {
    if (v11 < -135) {
      goto LABEL_75;
    }
    if (__dst != a2 || &a2[136 * v12] <= __dst) {
      memmove(__dst, a2, 136 * v12);
    }
    long long v39 = &__dst[136 * v12];
    uint64_t v89 = v39;
    BOOL v91 = v7;
    if (__src >= v7 || v11 < 136) {
      goto LABEL_74;
    }
    unint64_t v66 = __src;
    for (uint64_t i = (char *)(a3 - 136); ; i -= 136)
    {
      unint64_t v69 = i + 136;
      long long v71 = *(_OWORD *)(v39 - 136);
      long long v41 = *(_OWORD *)(v39 - 120);
      long long v42 = *(_OWORD *)(v39 - 104);
      long long v43 = *(_OWORD *)(v39 - 72);
      long long v74 = *(_OWORD *)(v39 - 88);
      long long v75 = v43;
      long long v72 = v41;
      long long v73 = v42;
      long long v44 = *(_OWORD *)(v39 - 56);
      long long v45 = *(_OWORD *)(v39 - 40);
      long long v46 = *(_OWORD *)(v39 - 24);
      uint64_t v79 = *((void *)v39 - 1);
      long long v77 = v45;
      long long v78 = v46;
      long long v76 = v44;
      long long v80 = *(_OWORD *)(v7 - 136);
      long long v47 = *(_OWORD *)(v7 - 120);
      long long v48 = *(_OWORD *)(v7 - 104);
      long long v49 = *(_OWORD *)(v7 - 72);
      long long v83 = *(_OWORD *)(v7 - 88);
      long long v84 = v49;
      long long v81 = v47;
      long long v82 = v48;
      long long v50 = *(_OWORD *)(v7 - 56);
      long long v51 = *(_OWORD *)(v7 - 40);
      long long v52 = *(_OWORD *)(v7 - 24);
      uint64_t v88 = *((void *)v7 - 1);
      long long v86 = v51;
      long long v87 = v52;
      long long v85 = v50;
      long long v53 = v73;
      long long v54 = v82;
      sub_1AFD76370((uint64_t)&v71);
      sub_1AFD76370((uint64_t)&v80);
      uint64_t v55 = sub_1AFEE5788(v53, *((unint64_t *)&v53 + 1));
      uint64_t v57 = v56;
      uint64_t v58 = sub_1AFEE5788(v54, *((unint64_t *)&v54 + 1));
      if (v57)
      {
        if (v59)
        {
          if (a6)
          {
            if (v58 == v55 && v59 == v57)
            {
LABEL_53:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
LABEL_54:
              sub_1AFD76408((uint64_t)&v80);
              sub_1AFD76408((uint64_t)&v71);
LABEL_60:
              uint64_t v61 = v39 - 136;
              uint64_t v62 = v70;
              if (v69 == v39)
              {
                BOOL v63 = i >= v39;
                v39 -= 136;
                if (!v63) {
                  goto LABEL_67;
                }
              }
              else
              {
                v39 -= 136;
              }
              goto LABEL_66;
            }
          }
          else if (v55 == v58 && v57 == v59)
          {
            goto LABEL_53;
          }
          char v60 = sub_1AFFCBCE8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1AFD76408((uint64_t)&v80);
          sub_1AFD76408((uint64_t)&v71);
          if ((v60 & 1) == 0) {
            goto LABEL_60;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          sub_1AFD76408((uint64_t)&v80);
          sub_1AFD76408((uint64_t)&v71);
          if ((a6 & 1) == 0) {
            goto LABEL_60;
          }
        }
      }
      else
      {
        if (!v59) {
          goto LABEL_54;
        }
        swift_bridgeObjectRelease();
        sub_1AFD76408((uint64_t)&v80);
        sub_1AFD76408((uint64_t)&v71);
        if (a6) {
          goto LABEL_60;
        }
      }
      uint64_t v61 = v7 - 136;
      uint64_t v62 = v70;
      if (v69 == v7)
      {
        BOOL v63 = i >= v7;
        v7 -= 136;
        if (!v63) {
          goto LABEL_67;
        }
      }
      else
      {
        v7 -= 136;
      }
LABEL_66:
      memmove(i, v61, 0x88uLL);
LABEL_67:
      if (v39 <= v62 || v7 <= v66)
      {
        BOOL v91 = v7;
        uint64_t v89 = v39;
        goto LABEL_74;
      }
    }
  }
  if (v9 < -135)
  {
LABEL_75:
    swift_release();
    uint64_t result = sub_1AFFCBA28();
    __break(1u);
    return result;
  }
  if (__dst != __src || &__src[136 * v10] <= __dst) {
    memmove(__dst, __src, 136 * v10);
  }
  unint64_t v65 = &__dst[136 * v10];
  uint64_t v89 = v65;
  if ((unint64_t)v7 >= a3 || v9 < 136) {
    goto LABEL_74;
  }
  uint64_t v13 = __src;
  uint64_t v14 = __dst;
  while (1)
  {
    long long v71 = *(_OWORD *)v7;
    long long v15 = *((_OWORD *)v7 + 1);
    long long v16 = *((_OWORD *)v7 + 2);
    long long v17 = *((_OWORD *)v7 + 4);
    long long v74 = *((_OWORD *)v7 + 3);
    long long v75 = v17;
    long long v72 = v15;
    long long v73 = v16;
    long long v18 = *((_OWORD *)v7 + 5);
    long long v19 = *((_OWORD *)v7 + 6);
    long long v20 = *((_OWORD *)v7 + 7);
    uint64_t v79 = *((void *)v7 + 16);
    long long v77 = v19;
    long long v78 = v20;
    long long v76 = v18;
    long long v80 = *(_OWORD *)v14;
    long long v21 = *((_OWORD *)v14 + 1);
    long long v22 = *((_OWORD *)v14 + 2);
    long long v23 = *((_OWORD *)v14 + 4);
    long long v83 = *((_OWORD *)v14 + 3);
    long long v84 = v23;
    long long v81 = v21;
    long long v82 = v22;
    long long v24 = *((_OWORD *)v14 + 5);
    long long v25 = *((_OWORD *)v14 + 6);
    long long v26 = *((_OWORD *)v14 + 7);
    uint64_t v88 = *((void *)v14 + 16);
    long long v86 = v25;
    long long v87 = v26;
    long long v85 = v24;
    long long v27 = v73;
    long long v28 = v82;
    sub_1AFD76370((uint64_t)&v71);
    sub_1AFD76370((uint64_t)&v80);
    uint64_t v29 = sub_1AFEE5788(v27, *((unint64_t *)&v27 + 1));
    uint64_t v31 = v30;
    uint64_t v32 = sub_1AFEE5788(v28, *((unint64_t *)&v28 + 1));
    if (v31)
    {
      if (v33)
      {
        if (a6)
        {
          if (v32 == v29 && v33 == v31)
          {
LABEL_22:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_23:
            sub_1AFD76408((uint64_t)&v80);
            sub_1AFD76408((uint64_t)&v71);
LABEL_28:
            long long v37 = v14 + 136;
            long long v35 = v14;
            BOOL v36 = v13 == v14;
            v14 += 136;
            if (v36) {
              goto LABEL_30;
            }
LABEL_29:
            memmove(v13, v35, 0x88uLL);
            goto LABEL_30;
          }
        }
        else if (v29 == v32 && v31 == v33)
        {
          goto LABEL_22;
        }
        char v34 = sub_1AFFCBCE8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1AFD76408((uint64_t)&v80);
        sub_1AFD76408((uint64_t)&v71);
        if ((v34 & 1) == 0) {
          goto LABEL_28;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_1AFD76408((uint64_t)&v80);
        sub_1AFD76408((uint64_t)&v71);
        if ((a6 & 1) == 0) {
          goto LABEL_28;
        }
      }
    }
    else
    {
      if (!v33) {
        goto LABEL_23;
      }
      swift_bridgeObjectRelease();
      sub_1AFD76408((uint64_t)&v80);
      sub_1AFD76408((uint64_t)&v71);
      if (a6) {
        goto LABEL_28;
      }
    }
    long long v35 = v7;
    BOOL v36 = v13 == v7;
    v7 += 136;
    long long v37 = v70;
    if (!v36) {
      goto LABEL_29;
    }
LABEL_30:
    long long v38 = v13 + 136;
    if (v14 >= v65)
    {
      uint64_t v90 = v37;
      goto LABEL_73;
    }
    if ((unint64_t)v7 >= a3) {
      break;
    }
    unint64_t v70 = v37;
    v13 += 136;
  }
  uint64_t v90 = v37;
  long long v38 = v13 + 136;
LABEL_73:
  BOOL v91 = v38;
LABEL_74:
  sub_1AFEE61C8((void **)&v91, (const void **)&v90, &v89);
  return 1;
}

void sub_1AFEEC174(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, void *a5, int a6)
{
  int v76 = a6;
  uint64_t v88 = sub_1AFFC92A8();
  MEMORY[0x1F4188790](v88);
  long long v87 = (char *)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = a3;
  uint64_t v73 = a2;
  if (a3 != a2)
  {
    uint64_t v13 = *a4;
    long long v84 = (void (**)(char *, uint64_t))(v11 + 8);
    long long v85 = a5 + 2;
    uint64_t v75 = v13;
    uint64_t v14 = (long long *)(v13 + 136 * v77);
    uint64_t v72 = a1 + 1;
    long long v86 = a5;
LABEL_6:
    uint64_t v78 = v72;
    long long v74 = v14;
    while (1)
    {
      v98[0] = *v14;
      long long v15 = v14[1];
      long long v16 = v14[2];
      long long v17 = v14[4];
      long long v100 = v14[3];
      long long v101 = v17;
      v98[1] = v15;
      long long v99 = v16;
      long long v18 = v14[5];
      long long v19 = v14[6];
      long long v20 = v14[7];
      uint64_t v105 = *((void *)v14 + 16);
      long long v103 = v19;
      long long v104 = v20;
      long long v102 = v18;
      v106[0] = *(long long *)((char *)v14 - 136);
      long long v21 = *(long long *)((char *)v14 - 120);
      long long v22 = *(long long *)((char *)v14 - 104);
      long long v23 = *(long long *)((char *)v14 - 72);
      long long v108 = *(long long *)((char *)v14 - 88);
      long long v109 = v23;
      v106[1] = v21;
      long long v107 = v22;
      long long v24 = *(long long *)((char *)v14 - 56);
      long long v25 = *(long long *)((char *)v14 - 40);
      long long v26 = *(long long *)((char *)v14 - 24);
      uint64_t v113 = *((void *)v14 - 1);
      long long v111 = v25;
      long long v112 = v26;
      long long v110 = v24;
      long long v27 = v99;
      uint64_t v28 = a5[5];
      uint64_t v29 = a5[6];
      __swift_project_boxed_opaque_existential_1(v85, v28);
      uint64_t v30 = *(uint64_t (**)(void, void, void, uint64_t, uint64_t))(v29 + 8);
      sub_1AFD76370((uint64_t)v98);
      sub_1AFD76370((uint64_t)v106);
      uint64_t v31 = v30(v27, *((void *)&v27 + 1), 0, v28, v29);
      if (v32) {
        uint64_t v33 = v31;
      }
      else {
        uint64_t v33 = 0;
      }
      if (v32) {
        unint64_t v34 = v32;
      }
      else {
        unint64_t v34 = 0xE000000000000000;
      }
      uint64_t v35 = HIBYTE(v34) & 0xF;
      if ((v34 & 0x2000000000000000) == 0) {
        uint64_t v35 = v33 & 0xFFFFFFFFFFFFLL;
      }
      if (!v35)
      {
        swift_bridgeObjectRelease();
        unint64_t v34 = sub_1AFFC8E38();
        uint64_t v33 = v27;
      }
      uint64_t v114 = *((void *)&v107 + 1);
      uint64_t v79 = v107;
      *(void *)&long long v89 = v33;
      *((void *)&v89 + 1) = v34;
      BOOL v36 = v87;
      sub_1AFFC9258();
      unint64_t v37 = sub_1AFD3AE10();
      uint64_t v38 = sub_1AFFCB6B8();
      uint64_t v40 = v39;
      long long v41 = *v84;
      uint64_t v42 = v88;
      (*v84)(v36, v88);
      swift_bridgeObjectRelease();
      *(void *)&long long v89 = v38;
      *((void *)&v89 + 1) = v40;
      sub_1AFFC9288();
      unint64_t v82 = v37;
      sub_1AFFCB6B8();
      uint64_t v43 = v42;
      uint64_t v44 = v79;
      long long v80 = v41;
      v41(v36, v43);
      swift_bridgeObjectRelease();
      uint64_t v45 = sub_1AFFCAF28();
      uint64_t v47 = v46;
      swift_bridgeObjectRelease();
      uint64_t v49 = v86[5];
      uint64_t v48 = v86[6];
      __swift_project_boxed_opaque_existential_1(v85, v49);
      uint64_t v50 = (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, uint64_t))(v48 + 8))(v44, v114, 0, v49, v48);
      if (v51) {
        uint64_t v52 = v50;
      }
      else {
        uint64_t v52 = 0;
      }
      if (v51) {
        unint64_t v53 = v51;
      }
      else {
        unint64_t v53 = 0xE000000000000000;
      }
      uint64_t v54 = HIBYTE(v53) & 0xF;
      if ((v53 & 0x2000000000000000) == 0) {
        uint64_t v54 = v52 & 0xFFFFFFFFFFFFLL;
      }
      uint64_t v83 = v47;
      uint64_t v81 = v45;
      if (!v54)
      {
        swift_bridgeObjectRelease();
        unint64_t v53 = sub_1AFFC8E38();
        uint64_t v52 = v44;
      }
      *(void *)&long long v89 = v52;
      *((void *)&v89 + 1) = v53;
      uint64_t v55 = v87;
      sub_1AFFC9258();
      uint64_t v56 = sub_1AFFCB6B8();
      uint64_t v58 = v57;
      uint64_t v59 = v88;
      char v60 = v80;
      v80(v55, v88);
      swift_bridgeObjectRelease();
      *(void *)&long long v89 = v56;
      *((void *)&v89 + 1) = v58;
      sub_1AFFC9288();
      sub_1AFFCB6B8();
      v60(v55, v59);
      swift_bridgeObjectRelease();
      uint64_t v61 = sub_1AFFCAF28();
      uint64_t v63 = v62;
      swift_bridgeObjectRelease();
      if (v76)
      {
        if (v61 == v81 && v63 == v83)
        {
LABEL_4:
          swift_bridgeObjectRelease_n();
          sub_1AFD76408((uint64_t)v106);
          sub_1AFD76408((uint64_t)v98);
          a5 = v86;
LABEL_5:
          uint64_t v14 = (long long *)((char *)v74 + 136);
          if (++v77 == v73) {
            return;
          }
          goto LABEL_6;
        }
      }
      else if (v81 == v61 && v83 == v63)
      {
        goto LABEL_4;
      }
      char v64 = sub_1AFFCBCE8();
      a5 = v86;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1AFD76408((uint64_t)v106);
      sub_1AFD76408((uint64_t)v98);
      uint64_t v65 = v78;
      if ((v64 & 1) == 0) {
        goto LABEL_5;
      }
      if (!v75) {
        break;
      }
      uint64_t v66 = (uint64_t)v14 - 136;
      long long v94 = v14[5];
      long long v95 = v14[6];
      long long v96 = v14[7];
      uint64_t v97 = *((void *)v14 + 16);
      long long v90 = v14[1];
      long long v91 = v14[2];
      long long v92 = v14[3];
      long long v93 = v14[4];
      long long v89 = *v14;
      long long v67 = *(long long *)((char *)v14 - 56);
      v14[4] = *(long long *)((char *)v14 - 72);
      v14[5] = v67;
      long long v68 = *(long long *)((char *)v14 - 24);
      v14[6] = *(long long *)((char *)v14 - 40);
      v14[7] = v68;
      *((void *)v14 + 16) = *((void *)v14 - 1);
      long long v69 = *(long long *)((char *)v14 - 88);
      _OWORD v14[2] = *(long long *)((char *)v14 - 104);
      void v14[3] = v69;
      long long v70 = *(long long *)((char *)v14 - 120);
      *uint64_t v14 = *(long long *)((char *)v14 - 136);
      v14[1] = v70;
      *(_OWORD *)(v66 + 64) = v93;
      *(_OWORD *)(v66 + 80) = v94;
      *(_OWORD *)(v66 + 96) = v95;
      *(_OWORD *)(v66 + 112) = v96;
      *(void *)(v66 + 128) = v97;
      *(_OWORD *)(v66 + 16) = v90;
      *(_OWORD *)(v66 + 32) = v91;
      *(_OWORD *)(v66 + 48) = v92;
      *(_OWORD *)uint64_t v66 = v89;
      if (v77 == v65) {
        goto LABEL_5;
      }
      uint64_t v78 = v65 + 1;
      uint64_t v14 = (long long *)((char *)v14 - 136);
    }
    __break(1u);
  }
}

uint64_t sub_1AFEEC758(uint64_t *a1, void *a2, char a3)
{
  int v248 = a3 & 1;
  uint64_t v258 = sub_1AFFC92A8();
  uint64_t v5 = *(void *)(v258 - 8);
  MEMORY[0x1F4188790](v258);
  long long v257 = (char *)&v232 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v236 = a1;
  uint64_t v7 = a1[1];
  uint64_t v296 = a2;
  swift_retain_n();
  uint64_t v8 = sub_1AFFCBC78();
  if (v8 >= v7)
  {
    if (v7 < 0) {
      goto LABEL_210;
    }
    if (v7)
    {
      uint64_t v12 = v296;
      sub_1AFFC8E48();
      uint64_t v13 = v244;
      sub_1AFEEC174(0, v7, 1, v236, v12, v248);
      swift_release_n();
      uint64_t v244 = v13;
    }
    else
    {
      swift_release_n();
    }
    return swift_release();
  }
  if (v7 >= 0) {
    uint64_t v9 = v7;
  }
  else {
    uint64_t v9 = v7 + 1;
  }
  if (v7 < -1) {
    goto LABEL_218;
  }
  uint64_t v241 = v7;
  uint64_t v235 = v8;
  if (v7 < 2)
  {
    uint64_t v14 = MEMORY[0x1E4FBC860];
    long long v243 = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v7 == 1)
    {
      uint64_t v237 = MEMORY[0x1E4FBC860];
      goto LABEL_13;
    }
    unint64_t v19 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    long long v17 = (char *)MEMORY[0x1E4FBC860];
    if (v19 >= 2) {
      goto LABEL_172;
    }
LABEL_186:
    swift_bridgeObjectRelease();
    *(void *)(v14 + 16) = 0;
LABEL_187:
    swift_release_n();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  uint64_t v10 = v9 >> 1;
  uint64_t v11 = sub_1AFFCB258();
  *(void *)(v11 + 16) = v10;
  uint64_t v237 = v11;
  long long v243 = (char *)(v11 + 32);
LABEL_13:
  uint64_t v15 = 0;
  uint64_t v16 = *v236;
  HIDWORD(v232) = v248 == 0;
  long long v255 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v256 = v296 + 2;
  uint64_t v247 = v16;
  uint64_t v233 = v16 - 136;
  uint64_t v234 = v16 + 272;
  long long v17 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v18 = v241;
  while (2)
  {
    long long v245 = v17;
    uint64_t v239 = v15 + 1;
    uint64_t v240 = v15;
    if (v15 + 1 >= v18)
    {
      uint64_t v41 = v15 + 1;
      uint64_t v42 = v296;
      goto LABEL_77;
    }
    uint64_t v20 = v247 + 136 * (v15 + 1);
    long long v278 = *(_OWORD *)v20;
    long long v21 = *(_OWORD *)(v20 + 16);
    long long v22 = *(_OWORD *)(v20 + 32);
    long long v23 = *(_OWORD *)(v20 + 64);
    long long v281 = *(_OWORD *)(v20 + 48);
    long long v282 = v23;
    long long v279 = v21;
    long long v280 = v22;
    long long v24 = *(_OWORD *)(v20 + 80);
    long long v25 = *(_OWORD *)(v20 + 96);
    long long v26 = *(_OWORD *)(v20 + 112);
    uint64_t v286 = *(void *)(v20 + 128);
    long long v284 = v25;
    long long v285 = v26;
    long long v283 = v24;
    uint64_t v27 = v247 + 136 * v15;
    long long v287 = *(_OWORD *)v27;
    long long v28 = *(_OWORD *)(v27 + 16);
    long long v29 = *(_OWORD *)(v27 + 32);
    long long v30 = *(_OWORD *)(v27 + 64);
    long long v290 = *(_OWORD *)(v27 + 48);
    long long v291 = v30;
    long long v288 = v28;
    long long v289 = v29;
    long long v31 = *(_OWORD *)(v27 + 80);
    long long v32 = *(_OWORD *)(v27 + 96);
    long long v33 = *(_OWORD *)(v27 + 112);
    uint64_t v295 = *(void *)(v27 + 128);
    long long v293 = v32;
    long long v294 = v33;
    long long v292 = v31;
    long long v34 = v280;
    long long v35 = v289;
    sub_1AFD76370((uint64_t)&v278);
    sub_1AFD76370((uint64_t)&v287);
    uint64_t v36 = sub_1AFEE5788(v34, *((unint64_t *)&v34 + 1));
    uint64_t v38 = v37;
    uint64_t v39 = sub_1AFEE5788(v35, *((unint64_t *)&v35 + 1));
    if (v38)
    {
      if (v40)
      {
        if (v248)
        {
          if (v39 != v36 || v40 != v38)
          {
LABEL_31:
            LODWORD(v246) = sub_1AFFCBCE8();
            swift_bridgeObjectRelease();
            goto LABEL_32;
          }
        }
        else if (v36 != v39 || v38 != v40)
        {
          goto LABEL_31;
        }
        swift_bridgeObjectRelease();
        LODWORD(v246) = 0;
      }
      else
      {
        LODWORD(v246) = v248;
      }
LABEL_32:
      swift_bridgeObjectRelease();
      goto LABEL_33;
    }
    if (v40)
    {
      LODWORD(v246) = HIDWORD(v232);
      goto LABEL_32;
    }
    LODWORD(v246) = 0;
LABEL_33:
    sub_1AFD76408((uint64_t)&v287);
    sub_1AFD76408((uint64_t)&v278);
    uint64_t v41 = v15 + 2;
    uint64_t v42 = v296;
    if (v15 + 2 >= v241)
    {
LABEL_67:
      if (v246) {
        goto LABEL_68;
      }
      goto LABEL_77;
    }
    uint64_t v254 = v15 + 3;
    for (uint64_t i = v234 + 136 * v15; ; uint64_t i = v249 + 136)
    {
      v261[0] = *(_OWORD *)i;
      long long v44 = *(_OWORD *)(i + 16);
      long long v45 = *(_OWORD *)(i + 32);
      long long v46 = *(_OWORD *)(i + 64);
      long long v263 = *(_OWORD *)(i + 48);
      long long v264 = v46;
      v261[1] = v44;
      long long v262 = v45;
      long long v47 = *(_OWORD *)(i + 80);
      long long v48 = *(_OWORD *)(i + 96);
      long long v49 = *(_OWORD *)(i + 112);
      uint64_t v268 = *(void *)(i + 128);
      long long v266 = v48;
      long long v267 = v49;
      long long v265 = v47;
      long long v269 = *(_OWORD *)(i - 136);
      long long v50 = *(_OWORD *)(i - 120);
      long long v51 = *(_OWORD *)(i - 104);
      long long v52 = *(_OWORD *)(i - 72);
      long long v272 = *(_OWORD *)(i - 88);
      long long v273 = v52;
      long long v270 = v50;
      long long v271 = v51;
      long long v53 = *(_OWORD *)(i - 56);
      long long v54 = *(_OWORD *)(i - 40);
      long long v55 = *(_OWORD *)(i - 24);
      uint64_t v249 = i;
      uint64_t v277 = *(void *)(i - 8);
      long long v275 = v54;
      long long v276 = v55;
      long long v274 = v53;
      long long v56 = v262;
      uint64_t v57 = v42[5];
      uint64_t v58 = v42[6];
      __swift_project_boxed_opaque_existential_1(v256, v57);
      uint64_t v59 = *(uint64_t (**)(void, void, void, uint64_t, uint64_t))(v58 + 8);
      sub_1AFD76370((uint64_t)v261);
      sub_1AFD76370((uint64_t)&v269);
      uint64_t v60 = v59(v56, *((void *)&v56 + 1), 0, v57, v58);
      if (v61) {
        uint64_t v62 = v60;
      }
      else {
        uint64_t v62 = 0;
      }
      if (v61) {
        unint64_t v63 = v61;
      }
      else {
        unint64_t v63 = 0xE000000000000000;
      }
      uint64_t v64 = HIBYTE(v63) & 0xF;
      if ((v63 & 0x2000000000000000) == 0) {
        uint64_t v64 = v62 & 0xFFFFFFFFFFFFLL;
      }
      if (!v64)
      {
        swift_bridgeObjectRelease();
        unint64_t v63 = sub_1AFFC8E38();
        uint64_t v62 = v56;
      }
      *(void *)&long long v250 = *((void *)&v271 + 1);
      uint64_t v65 = v271;
      uint64_t v259 = v62;
      unint64_t v260 = v63;
      uint64_t v66 = v257;
      sub_1AFFC9258();
      unint64_t v67 = sub_1AFD3AE10();
      uint64_t v68 = sub_1AFFCB6B8();
      unint64_t v70 = v69;
      uint64_t v71 = *v255;
      uint64_t v72 = v258;
      (*v255)(v66, v258);
      swift_bridgeObjectRelease();
      uint64_t v259 = v68;
      unint64_t v260 = v70;
      sub_1AFFC9288();
      *((void *)&v250 + 1) = v67;
      sub_1AFFCB6B8();
      long long v251 = v71;
      v71(v66, v72);
      uint64_t v73 = v250;
      swift_bridgeObjectRelease();
      uint64_t v74 = sub_1AFFCAF28();
      int v76 = v75;
      swift_bridgeObjectRelease();
      uint64_t v77 = v296[5];
      uint64_t v78 = v296[6];
      __swift_project_boxed_opaque_existential_1(v256, v77);
      uint64_t v79 = (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, uint64_t))(v78 + 8))(v65, v73, 0, v77, v78);
      if (v80) {
        uint64_t v81 = v79;
      }
      else {
        uint64_t v81 = 0;
      }
      if (v80) {
        unint64_t v82 = v80;
      }
      else {
        unint64_t v82 = 0xE000000000000000;
      }
      uint64_t v83 = HIBYTE(v82) & 0xF;
      if ((v82 & 0x2000000000000000) == 0) {
        uint64_t v83 = v81 & 0xFFFFFFFFFFFFLL;
      }
      long long v252 = (void (*)(char *, uint64_t))v74;
      long long v253 = v76;
      if (!v83)
      {
        swift_bridgeObjectRelease();
        unint64_t v82 = sub_1AFFC8E38();
        uint64_t v81 = v65;
      }
      uint64_t v259 = v81;
      unint64_t v260 = v82;
      long long v84 = v257;
      sub_1AFFC9258();
      uint64_t v85 = sub_1AFFCB6B8();
      unint64_t v87 = v86;
      uint64_t v88 = v258;
      long long v89 = v251;
      v251(v84, v258);
      swift_bridgeObjectRelease();
      uint64_t v259 = v85;
      unint64_t v260 = v87;
      sub_1AFFC9288();
      sub_1AFFCB6B8();
      v89(v84, v88);
      swift_bridgeObjectRelease();
      uint64_t v90 = sub_1AFFCAF28();
      long long v92 = v91;
      swift_bridgeObjectRelease();
      if (v248)
      {
        uint64_t v15 = v240;
        if ((void (*)(char *, uint64_t))v90 == v252 && v92 == v253) {
          goto LABEL_61;
        }
      }
      else
      {
        uint64_t v15 = v240;
        if (v252 == (void (*)(char *, uint64_t))v90 && v253 == v92)
        {
LABEL_61:
          int v93 = 0;
          goto LABEL_63;
        }
      }
      int v93 = sub_1AFFCBCE8();
LABEL_63:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1AFD76408((uint64_t)&v269);
      sub_1AFD76408((uint64_t)v261);
      if ((v246 ^ v93))
      {
        uint64_t v41 = v254 - 1;
        uint64_t v42 = v296;
        goto LABEL_67;
      }
      uint64_t v42 = v296;
      if (v241 == v254) {
        break;
      }
      ++v254;
    }
    uint64_t v41 = v241;
    if ((v246 & 1) == 0) {
      goto LABEL_77;
    }
LABEL_68:
    if (v41 < v15) {
      goto LABEL_211;
    }
    if (v15 < v41)
    {
      long long v94 = (_OWORD *)(v233 + 136 * v41);
      uint64_t v95 = v41;
      uint64_t v96 = v15;
      uint64_t v97 = v247;
      BOOL v98 = (_OWORD *)(v247 + 136 * v15);
      do
      {
        if (v96 != --v41)
        {
          if (!v97) {
            goto LABEL_216;
          }
          long long v274 = v98[5];
          long long v275 = v98[6];
          long long v276 = v98[7];
          uint64_t v277 = *((void *)v98 + 16);
          long long v270 = v98[1];
          long long v271 = v98[2];
          long long v272 = v98[3];
          long long v273 = v98[4];
          long long v269 = *v98;
          memmove(v98, v94, 0x88uLL);
          v94[5] = v274;
          v94[6] = v275;
          v94[7] = v276;
          *((void *)v94 + 16) = v277;
          v94[1] = v270;
          v94[2] = v271;
          v94[3] = v272;
          v94[4] = v273;
          *long long v94 = v269;
          uint64_t v97 = v247;
        }
        ++v96;
        long long v94 = (_OWORD *)((char *)v94 - 136);
        BOOL v98 = (_OWORD *)((char *)v98 + 136);
      }
      while (v96 < v41);
      uint64_t v42 = v296;
      uint64_t v41 = v95;
    }
LABEL_77:
    if (v41 >= v241) {
      goto LABEL_121;
    }
    if (__OFSUB__(v41, v15)) {
      goto LABEL_209;
    }
    if (v41 - v15 >= v235) {
      goto LABEL_121;
    }
    if (__OFADD__(v15, v235)) {
      goto LABEL_212;
    }
    if (v15 + v235 >= v241) {
      uint64_t v99 = v241;
    }
    else {
      uint64_t v99 = v15 + v235;
    }
    if (v99 >= v15)
    {
      if (v41 == v99) {
        goto LABEL_121;
      }
      uint64_t v100 = v247 + 136 * v41;
      uint64_t v238 = v99;
      while (2)
      {
        uint64_t v246 = v41;
        uint64_t v249 = v239;
        uint64_t v242 = v100;
        while (2)
        {
          long long v278 = *(_OWORD *)v100;
          long long v102 = *(_OWORD *)(v100 + 16);
          long long v103 = *(_OWORD *)(v100 + 32);
          long long v104 = *(_OWORD *)(v100 + 64);
          long long v281 = *(_OWORD *)(v100 + 48);
          long long v282 = v104;
          long long v279 = v102;
          long long v280 = v103;
          long long v105 = *(_OWORD *)(v100 + 80);
          long long v106 = *(_OWORD *)(v100 + 96);
          long long v107 = *(_OWORD *)(v100 + 112);
          uint64_t v286 = *(void *)(v100 + 128);
          long long v284 = v106;
          long long v285 = v107;
          long long v283 = v105;
          long long v287 = *(_OWORD *)(v100 - 136);
          long long v108 = *(_OWORD *)(v100 - 120);
          long long v109 = *(_OWORD *)(v100 - 104);
          long long v110 = *(_OWORD *)(v100 - 72);
          long long v290 = *(_OWORD *)(v100 - 88);
          long long v291 = v110;
          long long v288 = v108;
          long long v289 = v109;
          long long v111 = *(_OWORD *)(v100 - 56);
          long long v112 = *(_OWORD *)(v100 - 40);
          long long v113 = *(_OWORD *)(v100 - 24);
          uint64_t v295 = *(void *)(v100 - 8);
          long long v293 = v112;
          long long v294 = v113;
          long long v292 = v111;
          long long v114 = v280;
          uint64_t v115 = v42[5];
          uint64_t v116 = v42[6];
          __swift_project_boxed_opaque_existential_1(v256, v115);
          unint64_t v117 = *(uint64_t (**)(void, void, void, uint64_t, uint64_t))(v116 + 8);
          sub_1AFD76370((uint64_t)&v278);
          sub_1AFD76370((uint64_t)&v287);
          uint64_t v118 = v117(v114, *((void *)&v114 + 1), 0, v115, v116);
          if (v119) {
            uint64_t v120 = v118;
          }
          else {
            uint64_t v120 = 0;
          }
          if (v119) {
            unint64_t v121 = v119;
          }
          else {
            unint64_t v121 = 0xE000000000000000;
          }
          uint64_t v122 = HIBYTE(v121) & 0xF;
          if ((v121 & 0x2000000000000000) == 0) {
            uint64_t v122 = v120 & 0xFFFFFFFFFFFFLL;
          }
          if (!v122)
          {
            swift_bridgeObjectRelease();
            unint64_t v121 = sub_1AFFC8E38();
            uint64_t v120 = v114;
          }
          long long v250 = v289;
          *(void *)&long long v269 = v120;
          *((void *)&v269 + 1) = v121;
          long long v123 = v257;
          sub_1AFFC9258();
          unint64_t v124 = sub_1AFD3AE10();
          uint64_t v125 = sub_1AFFCB6B8();
          uint64_t v127 = v126;
          long long v128 = *v255;
          uint64_t v129 = v258;
          (*v255)(v123, v258);
          swift_bridgeObjectRelease();
          *(void *)&long long v269 = v125;
          *((void *)&v269 + 1) = v127;
          sub_1AFFC9288();
          long long v251 = (void (*)(char *, uint64_t))v124;
          uint64_t v130 = v250;
          sub_1AFFCB6B8();
          long long v252 = v128;
          v128(v123, v129);
          uint64_t v131 = *((void *)&v250 + 1);
          swift_bridgeObjectRelease();
          uint64_t v132 = sub_1AFFCAF28();
          unint64_t v134 = v133;
          swift_bridgeObjectRelease();
          uint64_t v136 = v296[5];
          uint64_t v135 = v296[6];
          __swift_project_boxed_opaque_existential_1(v256, v136);
          uint64_t v137 = (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, uint64_t))(v135 + 8))(v130, v131, 0, v136, v135);
          if (v138) {
            uint64_t v139 = v137;
          }
          else {
            uint64_t v139 = 0;
          }
          if (v138) {
            unint64_t v140 = v138;
          }
          else {
            unint64_t v140 = 0xE000000000000000;
          }
          uint64_t v141 = HIBYTE(v140) & 0xF;
          if ((v140 & 0x2000000000000000) == 0) {
            uint64_t v141 = v139 & 0xFFFFFFFFFFFFLL;
          }
          long long v253 = (char *)v132;
          uint64_t v254 = v134;
          if (!v141)
          {
            swift_bridgeObjectRelease();
            unint64_t v140 = sub_1AFFC8E38();
            uint64_t v139 = v130;
          }
          *(void *)&long long v269 = v139;
          *((void *)&v269 + 1) = v140;
          unint64_t v142 = v257;
          sub_1AFFC9258();
          uint64_t v143 = sub_1AFFCB6B8();
          uint64_t v145 = v144;
          uint64_t v146 = v258;
          uint64_t v147 = v252;
          v252(v142, v258);
          swift_bridgeObjectRelease();
          *(void *)&long long v269 = v143;
          *((void *)&v269 + 1) = v145;
          sub_1AFFC9288();
          sub_1AFFCB6B8();
          v147(v142, v146);
          swift_bridgeObjectRelease();
          uint64_t v148 = sub_1AFFCAF28();
          uint64_t v150 = v149;
          swift_bridgeObjectRelease();
          if (v248)
          {
            if ((char *)v148 == v253 && v150 == v254) {
              break;
            }
            goto LABEL_116;
          }
          if (v253 != (char *)v148 || v254 != v150)
          {
LABEL_116:
            char v151 = sub_1AFFCBCE8();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1AFD76408((uint64_t)&v287);
            sub_1AFD76408((uint64_t)&v278);
            uint64_t v42 = v296;
            uint64_t v101 = v246;
            uint64_t v152 = v249;
            if ((v151 & 1) == 0) {
              goto LABEL_88;
            }
            if (!v247) {
              goto LABEL_214;
            }
            uint64_t v153 = v100 - 136;
            long long v274 = *(_OWORD *)(v100 + 80);
            long long v275 = *(_OWORD *)(v100 + 96);
            long long v276 = *(_OWORD *)(v100 + 112);
            uint64_t v277 = *(void *)(v100 + 128);
            long long v270 = *(_OWORD *)(v100 + 16);
            long long v271 = *(_OWORD *)(v100 + 32);
            long long v272 = *(_OWORD *)(v100 + 48);
            long long v273 = *(_OWORD *)(v100 + 64);
            long long v269 = *(_OWORD *)v100;
            long long v154 = *(_OWORD *)(v100 - 56);
            *(_OWORD *)(v100 + 64) = *(_OWORD *)(v100 - 72);
            *(_OWORD *)(v100 + 80) = v154;
            long long v155 = *(_OWORD *)(v100 - 24);
            *(_OWORD *)(v100 + 96) = *(_OWORD *)(v100 - 40);
            *(_OWORD *)(v100 + 112) = v155;
            *(void *)(v100 + 128) = *(void *)(v100 - 8);
            long long v156 = *(_OWORD *)(v100 - 88);
            *(_OWORD *)(v100 + 32) = *(_OWORD *)(v100 - 104);
            *(_OWORD *)(v100 + 48) = v156;
            long long v157 = *(_OWORD *)(v100 - 120);
            *(_OWORD *)uint64_t v100 = *(_OWORD *)(v100 - 136);
            *(_OWORD *)(v100 + 16) = v157;
            *(_OWORD *)(v153 + 64) = v273;
            *(_OWORD *)(v153 + 80) = v274;
            *(_OWORD *)(v153 + 96) = v275;
            *(_OWORD *)(v153 + 112) = v276;
            *(void *)(v153 + 128) = v277;
            *(_OWORD *)(v153 + 16) = v270;
            *(_OWORD *)(v153 + 32) = v271;
            *(_OWORD *)(v153 + 48) = v272;
            *(_OWORD *)uint64_t v153 = v269;
            if (v101 == v152) {
              goto LABEL_88;
            }
            uint64_t v249 = v152 + 1;
            v100 -= 136;
            continue;
          }
          break;
        }
        swift_bridgeObjectRelease_n();
        sub_1AFD76408((uint64_t)&v287);
        sub_1AFD76408((uint64_t)&v278);
        uint64_t v42 = v296;
        uint64_t v101 = v246;
LABEL_88:
        uint64_t v41 = v101 + 1;
        uint64_t v100 = v242 + 136;
        if (v41 != v238) {
          continue;
        }
        break;
      }
      uint64_t v41 = v238;
      uint64_t v15 = v240;
LABEL_121:
      if (v41 < v15) {
        goto LABEL_204;
      }
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v246 = v41;
      if (isUniquelyReferenced_nonNull_native) {
        long long v17 = v245;
      }
      else {
        long long v17 = sub_1AFEE5E44(0, *((void *)v245 + 2) + 1, 1, v245);
      }
      unint64_t v160 = *((void *)v17 + 2);
      unint64_t v159 = *((void *)v17 + 3);
      unint64_t v19 = v160 + 1;
      if (v160 >= v159 >> 1) {
        long long v17 = sub_1AFEE5E44((char *)(v159 > 1), v160 + 1, 1, v17);
      }
      *((void *)v17 + 2) = v19;
      uint64_t v161 = v17 + 32;
      uint64_t v162 = &v17[16 * v160 + 32];
      uint64_t v163 = v246;
      *(void *)uint64_t v162 = v15;
      *((void *)v162 + 1) = v163;
      if (v160)
      {
        long long v245 = v17;
        long long v253 = v17 + 32;
        while (1)
        {
          unint64_t v164 = v19 - 1;
          if (v19 >= 4)
          {
            uint64_t v169 = &v161[16 * v19];
            uint64_t v170 = *((void *)v169 - 8);
            uint64_t v171 = *((void *)v169 - 7);
            BOOL v175 = __OFSUB__(v171, v170);
            uint64_t v172 = v171 - v170;
            if (v175) {
              goto LABEL_193;
            }
            uint64_t v174 = *((void *)v169 - 6);
            uint64_t v173 = *((void *)v169 - 5);
            BOOL v175 = __OFSUB__(v173, v174);
            uint64_t v167 = v173 - v174;
            char v168 = v175;
            if (v175) {
              goto LABEL_194;
            }
            unint64_t v176 = v19 - 2;
            long long v177 = &v161[16 * v19 - 32];
            uint64_t v179 = *(void *)v177;
            uint64_t v178 = *((void *)v177 + 1);
            BOOL v175 = __OFSUB__(v178, v179);
            uint64_t v180 = v178 - v179;
            if (v175) {
              goto LABEL_196;
            }
            BOOL v175 = __OFADD__(v167, v180);
            uint64_t v181 = v167 + v180;
            if (v175) {
              goto LABEL_199;
            }
            if (v181 >= v172)
            {
              long long v199 = &v161[16 * v164];
              uint64_t v201 = *(void *)v199;
              uint64_t v200 = *((void *)v199 + 1);
              BOOL v175 = __OFSUB__(v200, v201);
              uint64_t v202 = v200 - v201;
              if (v175) {
                goto LABEL_203;
              }
              BOOL v192 = v167 < v202;
              goto LABEL_159;
            }
          }
          else
          {
            if (v19 != 3)
            {
              uint64_t v193 = *((void *)v17 + 4);
              uint64_t v194 = *((void *)v17 + 5);
              BOOL v175 = __OFSUB__(v194, v193);
              uint64_t v186 = v194 - v193;
              char v187 = v175;
              goto LABEL_153;
            }
            uint64_t v166 = *((void *)v17 + 4);
            uint64_t v165 = *((void *)v17 + 5);
            BOOL v175 = __OFSUB__(v165, v166);
            uint64_t v167 = v165 - v166;
            char v168 = v175;
          }
          if (v168) {
            goto LABEL_195;
          }
          unint64_t v176 = v19 - 2;
          long long v182 = &v161[16 * v19 - 32];
          uint64_t v184 = *(void *)v182;
          uint64_t v183 = *((void *)v182 + 1);
          BOOL v185 = __OFSUB__(v183, v184);
          uint64_t v186 = v183 - v184;
          char v187 = v185;
          if (v185) {
            goto LABEL_198;
          }
          uint64_t v188 = &v161[16 * v164];
          uint64_t v190 = *(void *)v188;
          uint64_t v189 = *((void *)v188 + 1);
          BOOL v175 = __OFSUB__(v189, v190);
          uint64_t v191 = v189 - v190;
          if (v175) {
            goto LABEL_201;
          }
          if (__OFADD__(v186, v191)) {
            goto LABEL_202;
          }
          if (v186 + v191 >= v167)
          {
            BOOL v192 = v167 < v191;
LABEL_159:
            if (v192) {
              unint64_t v164 = v176;
            }
            goto LABEL_161;
          }
LABEL_153:
          if (v187) {
            goto LABEL_197;
          }
          long long v195 = &v161[16 * v164];
          uint64_t v197 = *(void *)v195;
          uint64_t v196 = *((void *)v195 + 1);
          BOOL v175 = __OFSUB__(v196, v197);
          uint64_t v198 = v196 - v197;
          if (v175) {
            goto LABEL_200;
          }
          if (v198 < v186) {
            goto LABEL_15;
          }
LABEL_161:
          unint64_t v203 = v164 - 1;
          if (v164 - 1 >= v19)
          {
            __break(1u);
LABEL_190:
            __break(1u);
LABEL_191:
            __break(1u);
LABEL_192:
            __break(1u);
LABEL_193:
            __break(1u);
LABEL_194:
            __break(1u);
LABEL_195:
            __break(1u);
LABEL_196:
            __break(1u);
LABEL_197:
            __break(1u);
LABEL_198:
            __break(1u);
LABEL_199:
            __break(1u);
LABEL_200:
            __break(1u);
LABEL_201:
            __break(1u);
LABEL_202:
            __break(1u);
LABEL_203:
            __break(1u);
LABEL_204:
            __break(1u);
LABEL_205:
            __break(1u);
LABEL_206:
            __break(1u);
LABEL_207:
            __break(1u);
LABEL_208:
            __break(1u);
LABEL_209:
            __break(1u);
LABEL_210:
            __break(1u);
LABEL_211:
            __break(1u);
LABEL_212:
            __break(1u);
            goto LABEL_213;
          }
          if (!v247) {
            goto LABEL_215;
          }
          long long v204 = &v161[16 * v203];
          uint64_t v205 = *(void *)v204;
          unint64_t v206 = v164;
          int v207 = &v161[16 * v164];
          uint64_t v208 = *((void *)v207 + 1);
          uint64_t v209 = (char *)(v247 + 136 * *(void *)v204);
          unsigned int v210 = (char *)(v247 + 136 * *(void *)v207);
          uint64_t v254 = v247 + 136 * v208;
          uint64_t v211 = (uint64_t)v296;
          sub_1AFFC8E48();
          uint64_t v212 = v209;
          uint64_t v213 = v244;
          sub_1AFEEBB7C(v212, v210, v254, v243, v211, v248);
          uint64_t v244 = v213;
          if (v213)
          {
LABEL_184:
            swift_bridgeObjectRelease();
            swift_release();
            *(void *)(v237 + 16) = 0;
            goto LABEL_187;
          }
          swift_release();
          if (v208 < v205) {
            goto LABEL_190;
          }
          uint64_t v214 = v245;
          if (v206 > *((void *)v245 + 2)) {
            goto LABEL_191;
          }
          unint64_t v215 = v206;
          *(void *)long long v204 = v205;
          uint64_t v161 = v253;
          *(void *)&v253[16 * v203 + 8] = v208;
          unint64_t v216 = *((void *)v214 + 2);
          if (v215 >= v216) {
            goto LABEL_192;
          }
          unint64_t v19 = v216 - 1;
          memmove(v207, v207 + 16, 16 * (v216 - 1 - v215));
          long long v17 = v245;
          *((void *)v245 + 2) = v216 - 1;
          if (v216 <= 2) {
            goto LABEL_15;
          }
        }
      }
      unint64_t v19 = 1;
LABEL_15:
      uint64_t v18 = v241;
      uint64_t v15 = v246;
      if (v246 >= v241)
      {
        uint64_t v14 = v237;
        if (v19 < 2) {
          goto LABEL_186;
        }
LABEL_172:
        uint64_t v217 = *v236;
        uint64_t v237 = v14;
        uint64_t v258 = v217;
        while (1)
        {
          unint64_t v218 = v19 - 2;
          if (v19 < 2) {
            goto LABEL_205;
          }
          if (!v217) {
            goto LABEL_217;
          }
          long long v245 = v17;
          uint64_t v219 = *(void *)&v17[16 * v218 + 32];
          uint64_t v220 = *(void *)&v17[16 * v19 + 24];
          uint64_t v221 = (char *)(v217 + 136 * v219);
          uint64_t v222 = (char *)(v217 + 136 * *(void *)&v17[16 * v19 + 16]);
          unint64_t v223 = v217 + 136 * v220;
          uint64_t v224 = (uint64_t)v296;
          sub_1AFFC8E48();
          uint64_t v225 = v221;
          uint64_t v226 = v244;
          sub_1AFEEBB7C(v225, v222, v223, v243, v224, v248);
          uint64_t v244 = v226;
          if (v226) {
            goto LABEL_184;
          }
          swift_release();
          if (v220 < v219) {
            goto LABEL_206;
          }
          if (swift_isUniquelyReferenced_nonNull_native()) {
            uint64_t v227 = v245;
          }
          else {
            uint64_t v227 = sub_1AFEE6294((uint64_t)v245);
          }
          if (v218 >= *((void *)v227 + 2)) {
            goto LABEL_207;
          }
          uint64_t v228 = &v227[16 * v218 + 32];
          *(void *)uint64_t v228 = v219;
          *((void *)v228 + 1) = v220;
          unint64_t v229 = *((void *)v227 + 2);
          if (v19 > v229) {
            goto LABEL_208;
          }
          long long v230 = v227;
          memmove(&v227[16 * v19 + 16], &v227[16 * v19 + 32], 16 * (v229 - v19));
          long long v17 = v230;
          *((void *)v230 + 2) = v229 - 1;
          unint64_t v19 = v229 - 1;
          BOOL v192 = v229 > 2;
          uint64_t v14 = v237;
          uint64_t v217 = v258;
          if (!v192) {
            goto LABEL_186;
          }
        }
      }
      continue;
    }
    break;
  }
LABEL_213:
  __break(1u);
LABEL_214:
  swift_release_n();
  __break(1u);
LABEL_215:
  swift_release_n();
  __break(1u);
LABEL_216:
  swift_release_n();
  __break(1u);
LABEL_217:
  swift_release_n();
  __break(1u);
LABEL_218:
  swift_release_n();
  uint64_t result = sub_1AFFCB998();
  __break(1u);
  return result;
}

uint64_t sub_1AFEED9F8(void **a1, uint64_t a2, char a3, void (*a4)(void *, uint64_t, uint64_t))
{
  uint64_t v7 = a3 & 1;
  uint64_t v8 = *a1;
  swift_retain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v8 = sub_1AFFB2ED0(v8);
  }
  uint64_t v9 = v8[2];
  v11[0] = v8 + 4;
  v11[1] = v9;
  sub_1AFFC8E48();
  a4(v11, a2, v7);
  swift_release();
  *a1 = v8;
  return swift_release_n();
}

uint64_t sub_1AFEEDAB8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Quote();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1AFEEDB14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Quote();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1AFEEDB78(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1AFEEDBDC()
{
  if (!qword_1EB811298)
  {
    unint64_t v0 = sub_1AFFCB428();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB811298);
    }
  }
}

uint64_t sub_1AFEEDC3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  uint64_t v448 = a3;
  uint64_t v436 = a2;
  uint64_t v422 = a1;
  v380 = a4;
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1AFEF9054(0, &qword_1EB816CF8, MEMORY[0x1E4F27D68], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  v378 = (char *)&v357 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v379 = (uint64_t)&v357 - v8;
  v444 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1AFEF9054(0, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928], v4);
  MEMORY[0x1F4188790](v9 - 8);
  v381 = (char *)&v357 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  v418 = (char *)&v357 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v407 = (uint64_t)&v357 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v405 = (uint64_t)&v357 - v16;
  MEMORY[0x1F4188790](v17);
  uint64_t v421 = (uint64_t)&v357 - v18;
  MEMORY[0x1F4188790](v19);
  v404 = (char *)&v357 - v20;
  sub_1AFEF9054(0, &qword_1EB816D80, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail, v4);
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v370 = (uint64_t)&v357 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  uint64_t v377 = (uint64_t)&v357 - v24;
  MEMORY[0x1F4188790](v25);
  uint64_t v369 = (uint64_t)&v357 - v26;
  MEMORY[0x1F4188790](v27);
  uint64_t v375 = (uint64_t)&v357 - v28;
  MEMORY[0x1F4188790](v29);
  uint64_t v358 = (uint64_t)&v357 - v30;
  MEMORY[0x1F4188790](v31);
  uint64_t v373 = (uint64_t)&v357 - v32;
  MEMORY[0x1F4188790](v33);
  v417 = (char *)&v357 - v34;
  MEMORY[0x1F4188790](v35);
  uint64_t v372 = (uint64_t)&v357 - v36;
  MEMORY[0x1F4188790](v37);
  v416 = (char *)&v357 - v38;
  MEMORY[0x1F4188790](v39);
  uint64_t v415 = (uint64_t)&v357 - v40;
  MEMORY[0x1F4188790](v41);
  uint64_t v414 = (uint64_t)&v357 - v42;
  MEMORY[0x1F4188790](v43);
  uint64_t v368 = (uint64_t)&v357 - v44;
  MEMORY[0x1F4188790](v45);
  uint64_t v413 = (uint64_t)&v357 - v46;
  MEMORY[0x1F4188790](v47);
  uint64_t v367 = (uint64_t)&v357 - v48;
  MEMORY[0x1F4188790](v49);
  uint64_t v411 = (uint64_t)&v357 - v50;
  MEMORY[0x1F4188790](v51);
  uint64_t v366 = (uint64_t)&v357 - v52;
  MEMORY[0x1F4188790](v53);
  uint64_t v410 = (uint64_t)&v357 - v54;
  MEMORY[0x1F4188790](v55);
  uint64_t v365 = (uint64_t)&v357 - v56;
  MEMORY[0x1F4188790](v57);
  uint64_t v408 = (uint64_t)&v357 - v58;
  MEMORY[0x1F4188790](v59);
  uint64_t v364 = (uint64_t)&v357 - v60;
  MEMORY[0x1F4188790](v61);
  uint64_t v406 = (uint64_t)&v357 - v62;
  MEMORY[0x1F4188790](v63);
  uint64_t v363 = (uint64_t)&v357 - v64;
  MEMORY[0x1F4188790](v65);
  uint64_t v362 = (uint64_t)&v357 - v66;
  MEMORY[0x1F4188790](v67);
  uint64_t v361 = (uint64_t)&v357 - v68;
  MEMORY[0x1F4188790](v69);
  uint64_t v360 = (uint64_t)&v357 - v70;
  MEMORY[0x1F4188790](v71);
  uint64_t v359 = (uint64_t)&v357 - v72;
  v395 = type metadata accessor for Quote;
  sub_1AFEF9054(0, &qword_1EB817B00, (uint64_t (*)(uint64_t))type metadata accessor for Quote, v4);
  MEMORY[0x1F4188790](v73 - 8);
  uint64_t v376 = (uint64_t)&v357 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v75);
  uint64_t v374 = (uint64_t)&v357 - v76;
  MEMORY[0x1F4188790](v77);
  uint64_t v403 = (uint64_t)&v357 - v78;
  MEMORY[0x1F4188790](v79);
  uint64_t v402 = (uint64_t)&v357 - v80;
  MEMORY[0x1F4188790](v81);
  uint64_t v401 = (uint64_t)&v357 - v82;
  MEMORY[0x1F4188790](v83);
  uint64_t v400 = (uint64_t)&v357 - v84;
  MEMORY[0x1F4188790](v85);
  uint64_t v399 = (uint64_t)&v357 - v86;
  MEMORY[0x1F4188790](v87);
  uint64_t v398 = (uint64_t)&v357 - v88;
  MEMORY[0x1F4188790](v89);
  uint64_t v396 = (uint64_t)&v357 - v90;
  MEMORY[0x1F4188790](v91);
  v394 = (char *)&v357 - v92;
  v445 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F185D0];
  sub_1AFEF9054(0, &qword_1EB810B98, MEMORY[0x1E4F185D0], v4);
  MEMORY[0x1F4188790](v93 - 8);
  v371 = (char *)&v357 - ((v94 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v95);
  v412 = (char *)&v357 - v96;
  MEMORY[0x1F4188790](v97);
  v388 = (char *)&v357 - v98;
  MEMORY[0x1F4188790](v99);
  v409 = (char *)&v357 - v100;
  MEMORY[0x1F4188790](v101);
  v387 = (char *)&v357 - v102;
  MEMORY[0x1F4188790](v103);
  v386 = (char *)&v357 - v104;
  MEMORY[0x1F4188790](v105);
  v385 = (char *)&v357 - v106;
  MEMORY[0x1F4188790](v107);
  v384 = (char *)&v357 - v108;
  MEMORY[0x1F4188790](v109);
  v383 = (char *)&v357 - v110;
  MEMORY[0x1F4188790](v111);
  v397 = (char *)&v357 - v112;
  MEMORY[0x1F4188790](v113);
  v419 = (char *)&v357 - v114;
  MEMORY[0x1F4188790](v115);
  v382 = (char *)&v357 - v116;
  v391 = type metadata accessor for SymbolEntity;
  sub_1AFEF9054(0, &qword_1EB810BC8, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity, v4);
  MEMORY[0x1F4188790](v117 - 8);
  uint64_t v393 = (uint64_t)&v357 - ((v118 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v119);
  uint64_t v392 = (uint64_t)&v357 - v120;
  uint64_t v121 = sub_1AFFC9528();
  uint64_t v122 = *(void *)(v121 - 8);
  MEMORY[0x1F4188790](v121);
  unint64_t v124 = (char *)&v357 - ((v123 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = sub_1AFFC9A78();
  MEMORY[0x1F4188790](v125 - 8);
  uint64_t v126 = sub_1AFFCAE58();
  MEMORY[0x1F4188790](v126 - 8);
  uint64_t v127 = sub_1AFFC9548();
  MEMORY[0x1F4188790](v127 - 8);
  uint64_t v129 = (char *)&v357 - ((v128 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFEF605C(0, &qword_1EB810B60, &qword_1EB810BC8, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity, (void (*)(void))sub_1AFD5A3E0);
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  uint64_t v130 = *MEMORY[0x1E4F275D0];
  uint64_t v131 = (unsigned int (*)(uint64_t, uint64_t, int *))(v122 + 104);
  v446 = *(void (**)(char *))(v122 + 104);
  uint64_t v132 = v130;
  v446(v124);
  sub_1AFFC9558();
  uint64_t v133 = sub_1AFEF5F44(&qword_1EB810BC0, (void (*)(uint64_t))type metadata accessor for SymbolEntity);
  uint64_t v420 = MEMORY[0x1B3E8AFB0](v129, v133);
  sub_1AFEF605C(0, &qword_1EB810B68, &qword_1EB810B98, v445, (void (*)(void))sub_1AFEF5F8C);
  uint64_t v135 = v134;
  sub_1AFFC8E48();
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  v389 = v124;
  uint64_t v136 = v124;
  LODWORD(v431) = v132;
  uint64_t v137 = v121;
  uint64_t v138 = v121;
  uint64_t v430 = v121;
  uint64_t v139 = v446;
  ((void (*)(char *, uint64_t, uint64_t))v446)(v136, v132, v137);
  sub_1AFFC9558();
  uint64_t v429 = MEMORY[0x1B3E8AFC0](v129);
  sub_1AFFC8E48();
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  unint64_t v140 = v389;
  uint64_t v141 = v132;
  unint64_t v142 = (void (*)(char *, uint64_t, uint64_t))v139;
  ((void (*)(char *, uint64_t, uint64_t))v139)(v389, v141, v138);
  sub_1AFFC9558();
  v445 = v135;
  uint64_t v428 = MEMORY[0x1B3E8AFC0](v129);
  sub_1AFFC8E48();
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  uint64_t v143 = v431;
  uint64_t v144 = v430;
  v142(v140, v431, v430);
  sub_1AFFC9558();
  uint64_t v427 = MEMORY[0x1B3E8AFC0](v129);
  sub_1AFFC8E48();
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  v447 = v131;
  v142(v140, v143, v144);
  sub_1AFFC9558();
  uint64_t v426 = MEMORY[0x1B3E8AFC0](v129);
  sub_1AFFC8E48();
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  v142(v140, v143, v144);
  uint64_t v145 = v142;
  sub_1AFFC9558();
  uint64_t v425 = MEMORY[0x1B3E8AFC0](v129);
  sub_1AFEF605C(0, &qword_1EB810B58, (unint64_t *)&qword_1EB818BA0, v444, (void (*)(void))sub_1AFEF60E4);
  uint64_t v147 = v146;
  sub_1AFFC8E48();
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  v145(v140, v143, v144);
  sub_1AFFC9558();
  uint64_t v424 = MEMORY[0x1B3E8AFD0](v129);
  sub_1AFFC8E48();
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  v145(v140, v431, v144);
  sub_1AFFC9558();
  uint64_t v390 = v147;
  uint64_t v423 = MEMORY[0x1B3E8AFD0](v129);
  sub_1AFFC8E48();
  uint64_t v434 = 0xD000000000000017;
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  uint64_t v148 = v431;
  uint64_t v149 = v430;
  v145(v140, v431, v430);
  sub_1AFFC9558();
  v444 = (uint64_t (*)(uint64_t))MEMORY[0x1B3E8AFD0](v129);
  sub_1AFFC8E48();
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  uint64_t v150 = v148;
  uint64_t v151 = v148;
  uint64_t v152 = (void (*)(char *, uint64_t, uint64_t))v446;
  ((void (*)(char *, uint64_t, uint64_t))v446)(v140, v150, v149);
  sub_1AFFC9558();
  uint64_t v443 = MEMORY[0x1B3E8AFC0](v129);
  sub_1AFFC8E48();
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  v152(v140, v151, v149);
  sub_1AFFC9558();
  uint64_t v442 = MEMORY[0x1B3E8AFC0](v129);
  sub_1AFFC8E48();
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  v152(v140, v151, v149);
  sub_1AFFC9558();
  uint64_t v441 = MEMORY[0x1B3E8AFC0](v129);
  sub_1AFFC8E48();
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  v152(v140, v151, v149);
  sub_1AFFC9558();
  uint64_t v440 = MEMORY[0x1B3E8AFC0](v129);
  sub_1AFFC8E48();
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  uint64_t v153 = (void (*)(char *, uint64_t, uint64_t))v446;
  ((void (*)(char *, uint64_t, uint64_t))v446)(v140, v151, v149);
  sub_1AFFC9558();
  uint64_t v439 = MEMORY[0x1B3E8AFC0](v129);
  sub_1AFEF61B4();
  uint64_t v433 = v154;
  sub_1AFFC8E48();
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  uint64_t v155 = v430;
  v153(v140, v151, v430);
  sub_1AFFC9558();
  uint64_t v438 = MEMORY[0x1B3E8AFF0](v129);
  sub_1AFEF6328();
  sub_1AFFC8E48();
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  uint64_t v156 = v155;
  uint64_t v157 = v155;
  uint64_t v158 = (void (*)(char *, uint64_t, uint64_t))v446;
  ((void (*)(char *, uint64_t, uint64_t))v446)(v140, v151, v157);
  sub_1AFFC9558();
  uint64_t v437 = MEMORY[0x1B3E8B000](v129);
  sub_1AFFC8E48();
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  v158(v140, v151, v156);
  sub_1AFFC9558();
  uint64_t v435 = MEMORY[0x1B3E8B000](v129);
  sub_1AFFC8E48();
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  v158(v140, v151, v156);
  sub_1AFFC9558();
  uint64_t v434 = MEMORY[0x1B3E8AFF0](v129);
  sub_1AFFC8E48();
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  uint64_t v159 = v156;
  unint64_t v160 = (void (*)(char *, uint64_t, uint64_t))v446;
  ((void (*)(char *, uint64_t, uint64_t))v446)(v140, v151, v156);
  sub_1AFFC9558();
  uint64_t v433 = MEMORY[0x1B3E8AFF0](v129);
  sub_1AFFC8E48();
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  v160(v140, v151, v156);
  sub_1AFFC9558();
  uint64_t v432 = MEMORY[0x1B3E8AFC0](v129);
  sub_1AFFC8E48();
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  v160(v140, v151, v156);
  sub_1AFFC9558();
  uint64_t v161 = MEMORY[0x1B3E8AFD0](v129);
  sub_1AFEF6424();
  sub_1AFFC8E48();
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  v160(v140, v151, v159);
  uint64_t v162 = v436;
  sub_1AFFC9558();
  uint64_t v163 = MEMORY[0x1B3E8AFE0](v129);
  *(void *)&long long v471 = v420;
  *((void *)&v471 + 1) = v429;
  *(void *)&long long v472 = v428;
  *((void *)&v472 + 1) = v427;
  *(void *)&long long v473 = v426;
  *((void *)&v473 + 1) = v425;
  *(void *)&long long v474 = v424;
  *((void *)&v474 + 1) = v423;
  *(void *)&long long v475 = v444;
  *((void *)&v475 + 1) = v443;
  uint64_t v164 = (uint64_t)v394;
  *(void *)&long long v476 = v442;
  *((void *)&v476 + 1) = v441;
  *(void *)&long long v477 = v440;
  *((void *)&v477 + 1) = v439;
  *(void *)&long long v478 = v438;
  *((void *)&v478 + 1) = v437;
  *(void *)&long long v479 = v435;
  *((void *)&v479 + 1) = v434;
  *(void *)&long long v480 = v433;
  *((void *)&v480 + 1) = v432;
  uint64_t v431 = v161;
  *(void *)&long long v481 = v161;
  *((void *)&v481 + 1) = v163;
  uint64_t v165 = v392;
  sub_1AFD5BCD0(v422, v392);
  uint64_t v166 = type metadata accessor for SymbolEntity();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v166 - 8) + 56))(v165, 0, 1, v166);
  uint64_t v167 = (uint64_t (*)(uint64_t))v391;
  sub_1AFEF64CC(v165, v393, &qword_1EB810BC8, (uint64_t (*)(uint64_t))v391);
  uint64_t v430 = v163;
  sub_1AFFC8E48();
  sub_1AFEF654C((uint64_t)&v471);
  sub_1AFFC8B38();
  sub_1AFEF66A0(v165, &qword_1EB810BC8, v167);
  sub_1AFE6C6C0((uint64_t)&v471);
  uint64_t v168 = v162;
  sub_1AFEF64CC(v162, v164, &qword_1EB817B00, (uint64_t (*)(uint64_t))v395);
  uint64_t v169 = type metadata accessor for Quote();
  uint64_t v170 = *(void *)(v169 - 8);
  uint64_t v171 = (int *)v169;
  v446 = *(void (**)(char *))(v170 + 48);
  v445 = (uint64_t (*)(uint64_t))(v170 + 48);
  if (((unsigned int (*)(uint64_t, uint64_t))v446)(v164, 1) == 1)
  {
    sub_1AFEF654C((uint64_t)&v471);
    sub_1AFEF66A0(v164, &qword_1EB817B00, (uint64_t (*)(uint64_t))type metadata accessor for Quote);
    uint64_t v172 = (uint64_t)v419;
    uint64_t v173 = (uint64_t)v404;
    uint64_t v174 = (uint64_t)v397;
  }
  else
  {
    double v175 = *(double *)v164;
    char v176 = *(unsigned char *)(v164 + 8);
    sub_1AFEF654C((uint64_t)&v471);
    sub_1AFEF6984(v164, (uint64_t (*)(void))type metadata accessor for Quote);
    uint64_t v172 = (uint64_t)v419;
    uint64_t v173 = (uint64_t)v404;
    uint64_t v174 = (uint64_t)v397;
    if ((v176 & 1) == 0)
    {
      uint64_t v177 = v359;
      sub_1AFEF64CC(v448, v359, &qword_1EB816D80, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
      uint64_t v178 = type metadata accessor for QuoteDetail();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v178 - 8) + 48))(v177, 1, v178) == 1)
      {
        sub_1AFEF66A0(v177, &qword_1EB816D80, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
      }
      else
      {
        uint64_t v179 = *(void *)(v177 + *(int *)(v178 + 68) + 8);
        sub_1AFFC8E38();
        uint64_t v180 = sub_1AFEF6984(v177, (uint64_t (*)(void))type metadata accessor for QuoteDetail);
        if (v179)
        {
          MEMORY[0x1B3E8DA80](v180, v175);
          uint64_t v181 = (uint64_t)v382;
          sub_1AFFC8D78();
          uint64_t v182 = sub_1AFFC8D88();
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v182 - 8) + 56))(v181, 0, 1, v182);
          goto LABEL_9;
        }
      }
    }
  }
  uint64_t v183 = sub_1AFFC8D88();
  uint64_t v181 = (uint64_t)v382;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v183 - 8) + 56))(v382, 1, 1, v183);
LABEL_9:
  uint64_t v184 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F185D0];
  sub_1AFEF64CC(v181, v172, &qword_1EB810B98, MEMORY[0x1E4F185D0]);
  sub_1AFFC8B38();
  sub_1AFEF66A0(v181, &qword_1EB810B98, v184);
  sub_1AFE6C6C0((uint64_t)&v471);
  uint64_t v185 = v396;
  sub_1AFEF64CC(v168, v396, &qword_1EB817B00, (uint64_t (*)(uint64_t))type metadata accessor for Quote);
  if (((unsigned int (*)(uint64_t, uint64_t, int *))v446)(v185, 1, v171) == 1)
  {
    sub_1AFEF654C((uint64_t)&v471);
    uint64_t v186 = &qword_1EB817B00;
    char v187 = type metadata accessor for Quote;
    uint64_t v188 = v185;
LABEL_11:
    sub_1AFEF66A0(v188, v186, (uint64_t (*)(uint64_t))v187);
LABEL_13:
    uint64_t v191 = sub_1AFFC8D88();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v191 - 8) + 56))(v174, 1, 1, v191);
    goto LABEL_14;
  }
  double v189 = *(double *)(v185 + 16);
  char v190 = *(unsigned char *)(v185 + 24);
  sub_1AFEF654C((uint64_t)&v471);
  sub_1AFEF6984(v185, (uint64_t (*)(void))type metadata accessor for Quote);
  if (v190) {
    goto LABEL_13;
  }
  uint64_t v273 = v360;
  sub_1AFEF64CC(v448, v360, &qword_1EB816D80, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
  uint64_t v274 = type metadata accessor for QuoteDetail();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v274 - 8) + 48))(v273, 1, v274) == 1)
  {
    uint64_t v186 = &qword_1EB816D80;
    char v187 = type metadata accessor for QuoteDetail;
    uint64_t v188 = v273;
    goto LABEL_11;
  }
  uint64_t v342 = *(void *)(v273 + *(int *)(v274 + 68) + 8);
  sub_1AFFC8E38();
  uint64_t v343 = sub_1AFEF6984(v273, (uint64_t (*)(void))type metadata accessor for QuoteDetail);
  if (!v342) {
    goto LABEL_13;
  }
  MEMORY[0x1B3E8DA80](v343, v189);
  sub_1AFFC8D78();
  uint64_t v344 = sub_1AFFC8D88();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v344 - 8) + 56))(v174, 0, 1, v344);
LABEL_14:
  BOOL v192 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F185D0];
  sub_1AFEF64CC(v174, v172, &qword_1EB810B98, MEMORY[0x1E4F185D0]);
  sub_1AFFC8B38();
  sub_1AFEF66A0(v174, &qword_1EB810B98, v192);
  sub_1AFE6C6C0((uint64_t)&v471);
  uint64_t v193 = v398;
  sub_1AFEF64CC(v168, v398, &qword_1EB817B00, (uint64_t (*)(uint64_t))type metadata accessor for Quote);
  if (((unsigned int (*)(uint64_t, uint64_t, int *))v446)(v193, 1, v171) == 1)
  {
    sub_1AFEF654C((uint64_t)&v471);
    uint64_t v194 = &qword_1EB817B00;
    long long v195 = type metadata accessor for Quote;
    uint64_t v196 = v193;
LABEL_16:
    sub_1AFEF66A0(v196, v194, (uint64_t (*)(uint64_t))v195);
LABEL_18:
    uint64_t v199 = sub_1AFFC8D88();
    uint64_t v200 = (uint64_t)v383;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v199 - 8) + 56))(v383, 1, 1, v199);
    goto LABEL_19;
  }
  double v197 = *(double *)(v193 + 32);
  char v198 = *(unsigned char *)(v193 + 40);
  sub_1AFEF654C((uint64_t)&v471);
  sub_1AFEF6984(v193, (uint64_t (*)(void))type metadata accessor for Quote);
  if (v198) {
    goto LABEL_18;
  }
  uint64_t v275 = v361;
  sub_1AFEF64CC(v448, v361, &qword_1EB816D80, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
  uint64_t v276 = type metadata accessor for QuoteDetail();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v276 - 8) + 48))(v275, 1, v276) == 1)
  {
    uint64_t v194 = &qword_1EB816D80;
    long long v195 = type metadata accessor for QuoteDetail;
    uint64_t v196 = v275;
    goto LABEL_16;
  }
  uint64_t v345 = *(void *)(v275 + *(int *)(v276 + 68) + 8);
  sub_1AFFC8E38();
  uint64_t v346 = sub_1AFEF6984(v275, (uint64_t (*)(void))type metadata accessor for QuoteDetail);
  if (!v345) {
    goto LABEL_18;
  }
  MEMORY[0x1B3E8DA80](v346, v197);
  uint64_t v200 = (uint64_t)v383;
  sub_1AFFC8D78();
  uint64_t v347 = sub_1AFFC8D88();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v347 - 8) + 56))(v200, 0, 1, v347);
LABEL_19:
  uint64_t v201 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F185D0];
  sub_1AFEF64CC(v200, v172, &qword_1EB810B98, MEMORY[0x1E4F185D0]);
  sub_1AFFC8B38();
  sub_1AFEF66A0(v200, &qword_1EB810B98, v201);
  sub_1AFE6C6C0((uint64_t)&v471);
  uint64_t v202 = v399;
  sub_1AFEF64CC(v168, v399, &qword_1EB817B00, (uint64_t (*)(uint64_t))type metadata accessor for Quote);
  if (((unsigned int (*)(uint64_t, uint64_t, int *))v446)(v202, 1, v171) == 1)
  {
    sub_1AFEF654C((uint64_t)&v471);
    unint64_t v203 = &qword_1EB817B00;
    long long v204 = type metadata accessor for Quote;
    uint64_t v205 = v202;
LABEL_21:
    sub_1AFEF66A0(v205, v203, (uint64_t (*)(uint64_t))v204);
LABEL_23:
    uint64_t v208 = sub_1AFFC8D88();
    uint64_t v209 = (uint64_t)v384;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v208 - 8) + 56))(v384, 1, 1, v208);
    goto LABEL_24;
  }
  double v206 = *(double *)(v202 + 48);
  char v207 = *(unsigned char *)(v202 + 56);
  sub_1AFEF654C((uint64_t)&v471);
  sub_1AFEF6984(v202, (uint64_t (*)(void))type metadata accessor for Quote);
  if (v207) {
    goto LABEL_23;
  }
  uint64_t v277 = v362;
  sub_1AFEF64CC(v448, v362, &qword_1EB816D80, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
  uint64_t v278 = type metadata accessor for QuoteDetail();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v278 - 8) + 48))(v277, 1, v278) == 1)
  {
    unint64_t v203 = &qword_1EB816D80;
    long long v204 = type metadata accessor for QuoteDetail;
    uint64_t v205 = v277;
    goto LABEL_21;
  }
  uint64_t v348 = *(void *)(v277 + *(int *)(v278 + 68) + 8);
  sub_1AFFC8E38();
  uint64_t v349 = sub_1AFEF6984(v277, (uint64_t (*)(void))type metadata accessor for QuoteDetail);
  if (!v348) {
    goto LABEL_23;
  }
  MEMORY[0x1B3E8DA80](v349, v206);
  uint64_t v209 = (uint64_t)v384;
  sub_1AFFC8D78();
  uint64_t v350 = sub_1AFFC8D88();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v350 - 8) + 56))(v209, 0, 1, v350);
LABEL_24:
  unsigned int v210 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F185D0];
  sub_1AFEF64CC(v209, v172, &qword_1EB810B98, MEMORY[0x1E4F185D0]);
  sub_1AFFC8B38();
  sub_1AFEF66A0(v209, &qword_1EB810B98, v210);
  sub_1AFE6C6C0((uint64_t)&v471);
  uint64_t v211 = v400;
  sub_1AFEF64CC(v168, v400, &qword_1EB817B00, (uint64_t (*)(uint64_t))type metadata accessor for Quote);
  if (((unsigned int (*)(uint64_t, uint64_t, int *))v446)(v211, 1, v171) == 1)
  {
    sub_1AFEF654C((uint64_t)&v471);
    uint64_t v212 = &qword_1EB817B00;
    uint64_t v213 = type metadata accessor for Quote;
    uint64_t v214 = v211;
LABEL_26:
    sub_1AFEF66A0(v214, v212, (uint64_t (*)(uint64_t))v213);
LABEL_28:
    uint64_t v217 = sub_1AFFC8D88();
    uint64_t v218 = (uint64_t)v385;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v217 - 8) + 56))(v385, 1, 1, v217);
    goto LABEL_29;
  }
  double v215 = *(double *)(v211 + 64);
  char v216 = *(unsigned char *)(v211 + 72);
  sub_1AFEF654C((uint64_t)&v471);
  sub_1AFEF6984(v211, (uint64_t (*)(void))type metadata accessor for Quote);
  if (v216) {
    goto LABEL_28;
  }
  uint64_t v279 = v363;
  sub_1AFEF64CC(v448, v363, &qword_1EB816D80, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
  uint64_t v280 = type metadata accessor for QuoteDetail();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v280 - 8) + 48))(v279, 1, v280) == 1)
  {
    uint64_t v212 = &qword_1EB816D80;
    uint64_t v213 = type metadata accessor for QuoteDetail;
    uint64_t v214 = v279;
    goto LABEL_26;
  }
  uint64_t v351 = *(void *)(v279 + *(int *)(v280 + 68) + 8);
  sub_1AFFC8E38();
  uint64_t v352 = sub_1AFEF6984(v279, (uint64_t (*)(void))type metadata accessor for QuoteDetail);
  if (!v351) {
    goto LABEL_28;
  }
  MEMORY[0x1B3E8DA80](v352, v215);
  uint64_t v218 = (uint64_t)v385;
  sub_1AFFC8D78();
  uint64_t v353 = sub_1AFFC8D88();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v353 - 8) + 56))(v218, 0, 1, v353);
LABEL_29:
  uint64_t v219 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F185D0];
  sub_1AFEF64CC(v218, v172, &qword_1EB810B98, MEMORY[0x1E4F185D0]);
  sub_1AFFC8B38();
  sub_1AFEF66A0(v218, &qword_1EB810B98, v219);
  sub_1AFE6C6C0((uint64_t)&v471);
  uint64_t v220 = v401;
  sub_1AFEF64CC(v168, v401, &qword_1EB817B00, (uint64_t (*)(uint64_t))type metadata accessor for Quote);
  if (((unsigned int (*)(uint64_t, uint64_t, int *))v446)(v220, 1, v171) == 1)
  {
    sub_1AFEF654C((uint64_t)&v471);
    sub_1AFEF66A0(v220, &qword_1EB817B00, (uint64_t (*)(uint64_t))type metadata accessor for Quote);
    uint64_t v221 = sub_1AFFC98F8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v221 - 8) + 56))(v173, 1, 1, v221);
  }
  else
  {
    sub_1AFEF64CC(v220 + v171[13], v173, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928]);
    sub_1AFEF654C((uint64_t)&v471);
    sub_1AFEF6984(v220, (uint64_t (*)(void))type metadata accessor for Quote);
  }
  uint64_t v222 = v421;
  unint64_t v223 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1AFEF64CC(v173, v421, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928]);
  sub_1AFFC8B38();
  sub_1AFEF66A0(v173, (unint64_t *)&qword_1EB818BA0, v223);
  sub_1AFE6C6C0((uint64_t)&v471);
  uint64_t v224 = v402;
  sub_1AFEF64CC(v168, v402, &qword_1EB817B00, (uint64_t (*)(uint64_t))type metadata accessor for Quote);
  if (((unsigned int (*)(uint64_t, uint64_t, int *))v446)(v224, 1, v171) == 1)
  {
    sub_1AFEF654C((uint64_t)&v471);
    sub_1AFEF66A0(v224, &qword_1EB817B00, (uint64_t (*)(uint64_t))type metadata accessor for Quote);
    uint64_t v225 = sub_1AFFC98F8();
    uint64_t v226 = v405;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v225 - 8) + 56))(v405, 1, 1, v225);
  }
  else
  {
    uint64_t v226 = v405;
    sub_1AFEF64CC(v224 + v171[14], v405, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928]);
    sub_1AFEF654C((uint64_t)&v471);
    sub_1AFEF6984(v224, (uint64_t (*)(void))type metadata accessor for Quote);
  }
  uint64_t v227 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1AFEF64CC(v226, v222, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928]);
  sub_1AFFC8B38();
  sub_1AFEF66A0(v226, (unint64_t *)&qword_1EB818BA0, v227);
  sub_1AFE6C6C0((uint64_t)&v471);
  uint64_t v228 = v403;
  sub_1AFEF64CC(v168, v403, &qword_1EB817B00, (uint64_t (*)(uint64_t))type metadata accessor for Quote);
  if (((unsigned int (*)(uint64_t, uint64_t, int *))v446)(v228, 1, v171) == 1)
  {
    sub_1AFEF654C((uint64_t)&v471);
    sub_1AFEF66A0(v228, &qword_1EB817B00, (uint64_t (*)(uint64_t))type metadata accessor for Quote);
    uint64_t v229 = sub_1AFFC98F8();
    uint64_t v230 = v407;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v229 - 8) + 56))(v407, 1, 1, v229);
  }
  else
  {
    uint64_t v230 = v407;
    sub_1AFEF64CC(v228 + v171[15], v407, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928]);
    sub_1AFEF654C((uint64_t)&v471);
    sub_1AFEF6984(v228, (uint64_t (*)(void))type metadata accessor for Quote);
  }
  long long v231 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1AFEF64CC(v230, v222, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928]);
  sub_1AFFC8B38();
  sub_1AFEF66A0(v230, (unint64_t *)&qword_1EB818BA0, v231);
  sub_1AFE6C6C0((uint64_t)&v471);
  uint64_t v232 = v406;
  sub_1AFEF64CC(v448, v406, &qword_1EB816D80, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
  uint64_t v233 = (int *)type metadata accessor for QuoteDetail();
  v447 = *(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v233 - 1) + 48);
  if (v447(v232, 1, v233) == 1)
  {
    sub_1AFEF654C((uint64_t)&v471);
    goto LABEL_40;
  }
  double v234 = *(double *)v232;
  char v235 = *(unsigned char *)(v232 + 8);
  sub_1AFEF654C((uint64_t)&v471);
  sub_1AFEF6984(v232, (uint64_t (*)(void))type metadata accessor for QuoteDetail);
  if (v235) {
    goto LABEL_42;
  }
  uint64_t v232 = v364;
  sub_1AFEF64CC(v448, v364, &qword_1EB816D80, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
  if (v447(v232, 1, v233) == 1)
  {
LABEL_40:
    sub_1AFEF66A0(v232, &qword_1EB816D80, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
LABEL_42:
    uint64_t v236 = sub_1AFFC8D88();
    uint64_t v237 = (uint64_t)v386;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v236 - 8) + 56))(v386, 1, 1, v236);
    goto LABEL_43;
  }
  uint64_t v281 = *(void *)(v232 + v233[17] + 8);
  sub_1AFFC8E38();
  uint64_t v282 = sub_1AFEF6984(v232, (uint64_t (*)(void))type metadata accessor for QuoteDetail);
  if (!v281) {
    goto LABEL_42;
  }
  MEMORY[0x1B3E8DA80](v282, v234);
  uint64_t v237 = (uint64_t)v386;
  sub_1AFFC8D78();
  uint64_t v283 = sub_1AFFC8D88();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v283 - 8) + 56))(v237, 0, 1, v283);
LABEL_43:
  uint64_t v238 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F185D0];
  sub_1AFEF64CC(v237, v172, &qword_1EB810B98, MEMORY[0x1E4F185D0]);
  sub_1AFFC8B38();
  sub_1AFEF66A0(v237, &qword_1EB810B98, v238);
  sub_1AFE6C6C0((uint64_t)&v471);
  uint64_t v239 = v408;
  sub_1AFEF64CC(v448, v408, &qword_1EB816D80, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
  if (v447(v239, 1, v233) == 1)
  {
    sub_1AFEF654C((uint64_t)&v471);
    goto LABEL_45;
  }
  double v240 = *(double *)(v239 + 16);
  char v241 = *(unsigned char *)(v239 + 24);
  sub_1AFEF654C((uint64_t)&v471);
  sub_1AFEF6984(v239, (uint64_t (*)(void))type metadata accessor for QuoteDetail);
  if (v241) {
    goto LABEL_47;
  }
  uint64_t v239 = v365;
  sub_1AFEF64CC(v448, v365, &qword_1EB816D80, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
  if (v447(v239, 1, v233) == 1)
  {
LABEL_45:
    sub_1AFEF66A0(v239, &qword_1EB816D80, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
LABEL_47:
    uint64_t v242 = sub_1AFFC8D88();
    uint64_t v243 = (uint64_t)v387;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v242 - 8) + 56))(v387, 1, 1, v242);
    goto LABEL_48;
  }
  uint64_t v284 = *(void *)(v239 + v233[17] + 8);
  sub_1AFFC8E38();
  uint64_t v285 = sub_1AFEF6984(v239, (uint64_t (*)(void))type metadata accessor for QuoteDetail);
  if (!v284) {
    goto LABEL_47;
  }
  MEMORY[0x1B3E8DA80](v285, v240);
  uint64_t v243 = (uint64_t)v387;
  sub_1AFFC8D78();
  uint64_t v286 = sub_1AFFC8D88();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v286 - 8) + 56))(v243, 0, 1, v286);
LABEL_48:
  uint64_t v244 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F185D0];
  sub_1AFEF64CC(v243, v172, &qword_1EB810B98, MEMORY[0x1E4F185D0]);
  sub_1AFFC8B38();
  sub_1AFEF66A0(v243, &qword_1EB810B98, v244);
  sub_1AFE6C6C0((uint64_t)&v471);
  uint64_t v245 = v410;
  sub_1AFEF64CC(v448, v410, &qword_1EB816D80, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
  if (v447(v245, 1, v233) == 1)
  {
    sub_1AFEF654C((uint64_t)&v471);
    uint64_t v246 = (uint64_t)v409;
    goto LABEL_50;
  }
  double v247 = *(double *)(v245 + 32);
  char v248 = *(unsigned char *)(v245 + 40);
  sub_1AFEF654C((uint64_t)&v471);
  sub_1AFEF6984(v245, (uint64_t (*)(void))type metadata accessor for QuoteDetail);
  uint64_t v246 = (uint64_t)v409;
  if (v248) {
    goto LABEL_52;
  }
  uint64_t v245 = v366;
  sub_1AFEF64CC(v448, v366, &qword_1EB816D80, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
  if (v447(v245, 1, v233) == 1)
  {
LABEL_50:
    sub_1AFEF66A0(v245, &qword_1EB816D80, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
LABEL_52:
    uint64_t v249 = sub_1AFFC8D88();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v249 - 8) + 56))(v246, 1, 1, v249);
    goto LABEL_53;
  }
  uint64_t v287 = *(void *)(v245 + v233[17] + 8);
  sub_1AFFC8E38();
  uint64_t v288 = sub_1AFEF6984(v245, (uint64_t (*)(void))type metadata accessor for QuoteDetail);
  if (!v287) {
    goto LABEL_52;
  }
  MEMORY[0x1B3E8DA80](v288, v247);
  sub_1AFFC8D78();
  uint64_t v289 = sub_1AFFC8D88();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v289 - 8) + 56))(v246, 0, 1, v289);
LABEL_53:
  long long v250 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F185D0];
  sub_1AFEF64CC(v246, v172, &qword_1EB810B98, MEMORY[0x1E4F185D0]);
  sub_1AFFC8B38();
  sub_1AFEF66A0(v246, &qword_1EB810B98, v250);
  sub_1AFE6C6C0((uint64_t)&v471);
  uint64_t v251 = v411;
  sub_1AFEF64CC(v448, v411, &qword_1EB816D80, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
  if (v447(v251, 1, v233) == 1)
  {
    sub_1AFEF654C((uint64_t)&v471);
    goto LABEL_55;
  }
  double v252 = *(double *)(v251 + 48);
  char v253 = *(unsigned char *)(v251 + 56);
  sub_1AFEF654C((uint64_t)&v471);
  sub_1AFEF6984(v251, (uint64_t (*)(void))type metadata accessor for QuoteDetail);
  if (v253) {
    goto LABEL_57;
  }
  uint64_t v251 = v367;
  sub_1AFEF64CC(v448, v367, &qword_1EB816D80, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
  if (v447(v251, 1, v233) == 1)
  {
LABEL_55:
    sub_1AFEF66A0(v251, &qword_1EB816D80, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
LABEL_57:
    uint64_t v254 = sub_1AFFC8D88();
    uint64_t v255 = (uint64_t)v388;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v254 - 8) + 56))(v388, 1, 1, v254);
    goto LABEL_58;
  }
  uint64_t v290 = *(void *)(v251 + v233[17] + 8);
  sub_1AFFC8E38();
  uint64_t v291 = sub_1AFEF6984(v251, (uint64_t (*)(void))type metadata accessor for QuoteDetail);
  if (!v290) {
    goto LABEL_57;
  }
  MEMORY[0x1B3E8DA80](v291, v252);
  uint64_t v255 = (uint64_t)v388;
  sub_1AFFC8D78();
  uint64_t v292 = sub_1AFFC8D88();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v292 - 8) + 56))(v255, 0, 1, v292);
LABEL_58:
  uint64_t v256 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F185D0];
  sub_1AFEF64CC(v255, v172, &qword_1EB810B98, MEMORY[0x1E4F185D0]);
  sub_1AFFC8B38();
  sub_1AFEF66A0(v255, &qword_1EB810B98, v256);
  sub_1AFE6C6C0((uint64_t)&v471);
  uint64_t v257 = v413;
  sub_1AFEF64CC(v448, v413, &qword_1EB816D80, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
  if (v447(v257, 1, v233) == 1)
  {
    sub_1AFEF654C((uint64_t)&v471);
    uint64_t v258 = (uint64_t)v412;
    goto LABEL_60;
  }
  double v259 = *(double *)(v257 + 64);
  char v260 = *(unsigned char *)(v257 + 72);
  sub_1AFEF654C((uint64_t)&v471);
  sub_1AFEF6984(v257, (uint64_t (*)(void))type metadata accessor for QuoteDetail);
  uint64_t v258 = (uint64_t)v412;
  if (v260) {
    goto LABEL_62;
  }
  uint64_t v257 = v368;
  sub_1AFEF64CC(v448, v368, &qword_1EB816D80, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
  if (v447(v257, 1, v233) == 1)
  {
LABEL_60:
    sub_1AFEF66A0(v257, &qword_1EB816D80, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
LABEL_62:
    uint64_t v261 = sub_1AFFC8D88();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v261 - 8) + 56))(v258, 1, 1, v261);
    goto LABEL_63;
  }
  uint64_t v293 = *(void *)(v257 + v233[17] + 8);
  sub_1AFFC8E38();
  uint64_t v294 = sub_1AFEF6984(v257, (uint64_t (*)(void))type metadata accessor for QuoteDetail);
  if (!v293) {
    goto LABEL_62;
  }
  MEMORY[0x1B3E8DA80](v294, v259);
  sub_1AFFC8D78();
  uint64_t v295 = sub_1AFFC8D88();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v295 - 8) + 56))(v258, 0, 1, v295);
LABEL_63:
  long long v262 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F185D0];
  sub_1AFEF64CC(v258, v172, &qword_1EB810B98, MEMORY[0x1E4F185D0]);
  sub_1AFFC8B38();
  sub_1AFEF66A0(v258, &qword_1EB810B98, v262);
  sub_1AFE6C6C0((uint64_t)&v471);
  uint64_t v263 = v414;
  sub_1AFEF64CC(v448, v414, &qword_1EB816D80, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
  if (v447(v263, 1, v233) == 1)
  {
    sub_1AFEF654C((uint64_t)&v471);
    sub_1AFEF66A0(v263, &qword_1EB816D80, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
    uint64_t v264 = 0;
    char v265 = 1;
  }
  else
  {
    uint64_t v264 = *(void *)(v263 + 80);
    char v265 = *(unsigned char *)(v263 + 88);
    sub_1AFEF654C((uint64_t)&v471);
    sub_1AFEF6984(v263, (uint64_t (*)(void))type metadata accessor for QuoteDetail);
  }
  uint64_t v267 = (uint64_t)v416;
  uint64_t v266 = (uint64_t)v417;
  uint64_t v449 = v264;
  LOBYTE(v450) = v265;
  sub_1AFFC8B38();
  sub_1AFE6C6C0((uint64_t)&v471);
  uint64_t v268 = v415;
  sub_1AFEF64CC(v448, v415, &qword_1EB816D80, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
  if (v447(v268, 1, v233) == 1)
  {
    sub_1AFEF654C((uint64_t)&v471);
    sub_1AFEF66A0(v268, &qword_1EB816D80, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
LABEL_69:
    uint64_t v269 = 0;
    char v272 = 1;
    goto LABEL_95;
  }
  uint64_t v269 = *(void *)(v268 + 96);
  char v270 = *(unsigned char *)(v268 + 104);
  sub_1AFEF654C((uint64_t)&v471);
  uint64_t result = sub_1AFEF6984(v268, (uint64_t (*)(void))type metadata accessor for QuoteDetail);
  if (v270) {
    goto LABEL_69;
  }
  if (v269 < 0)
  {
    __break(1u);
    goto LABEL_146;
  }
  char v272 = 0;
LABEL_95:
  uint64_t v449 = v269;
  LOBYTE(v450) = v272;
  sub_1AFFC8B38();
  sub_1AFE6C6C0((uint64_t)&v471);
  sub_1AFEF64CC(v448, v267, &qword_1EB816D80, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
  if (v447(v267, 1, v233) == 1)
  {
    sub_1AFEF654C((uint64_t)&v471);
    sub_1AFEF66A0(v267, &qword_1EB816D80, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
    uint64_t v296 = 0;
    char v297 = 1;
    uint64_t v298 = (uint64_t)v381;
    goto LABEL_101;
  }
  uint64_t v296 = *(void *)(v267 + 112);
  char v299 = *(unsigned char *)(v267 + 120);
  sub_1AFEF654C((uint64_t)&v471);
  uint64_t result = sub_1AFEF6984(v267, (uint64_t (*)(void))type metadata accessor for QuoteDetail);
  uint64_t v298 = (uint64_t)v381;
  if (v299)
  {
    uint64_t v296 = 0;
    char v297 = 1;
    goto LABEL_101;
  }
  if (v296 < 0)
  {
LABEL_146:
    __break(1u);
    return result;
  }
  char v297 = 0;
LABEL_101:
  uint64_t v449 = v296;
  LOBYTE(v450) = v297;
  sub_1AFFC8B38();
  sub_1AFE6C6C0((uint64_t)&v471);
  uint64_t v300 = v372;
  sub_1AFEF64CC(v448, v372, &qword_1EB816D80, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
  if (v447(v300, 1, v233) == 1)
  {
    sub_1AFEF654C((uint64_t)&v471);
    sub_1AFEF66A0(v300, &qword_1EB816D80, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
    uint64_t v301 = 0;
    char v302 = 1;
  }
  else
  {
    uint64_t v301 = *(void *)(v300 + 128);
    char v302 = *(unsigned char *)(v300 + 136);
    sub_1AFEF654C((uint64_t)&v471);
    sub_1AFEF6984(v300, (uint64_t (*)(void))type metadata accessor for QuoteDetail);
  }
  uint64_t v449 = v301;
  LOBYTE(v450) = v302;
  sub_1AFFC8B38();
  sub_1AFE6C6C0((uint64_t)&v471);
  sub_1AFEF64CC(v448, v266, &qword_1EB816D80, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
  if (v447(v266, 1, v233) == 1)
  {
    sub_1AFEF654C((uint64_t)&v471);
    sub_1AFEF66A0(v266, &qword_1EB816D80, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
    uint64_t v303 = 0;
    char v304 = 1;
  }
  else
  {
    uint64_t v303 = *(void *)(v266 + 144);
    char v304 = *(unsigned char *)(v266 + 152);
    sub_1AFEF654C((uint64_t)&v471);
    sub_1AFEF6984(v266, (uint64_t (*)(void))type metadata accessor for QuoteDetail);
  }
  uint64_t v305 = (uint64_t)v419;
  uint64_t v449 = v303;
  LOBYTE(v450) = v304;
  sub_1AFFC8B38();
  sub_1AFE6C6C0((uint64_t)&v471);
  uint64_t v306 = v373;
  sub_1AFEF64CC(v448, v373, &qword_1EB816D80, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
  if (v447(v306, 1, v233) == 1)
  {
    sub_1AFEF654C((uint64_t)&v471);
LABEL_111:
    sub_1AFEF66A0(v306, &qword_1EB816D80, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
    goto LABEL_112;
  }
  double v307 = *(double *)(v306 + 160);
  char v308 = *(unsigned char *)(v306 + 168);
  sub_1AFEF654C((uint64_t)&v471);
  sub_1AFEF6984(v306, (uint64_t (*)(void))type metadata accessor for QuoteDetail);
  if ((v308 & 1) == 0)
  {
    uint64_t v306 = v358;
    sub_1AFEF64CC(v448, v358, &qword_1EB816D80, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
    if (v447(v306, 1, v233) == 1) {
      goto LABEL_111;
    }
    uint64_t v354 = *(void *)(v306 + v233[17] + 8);
    sub_1AFFC8E38();
    uint64_t v355 = sub_1AFEF6984(v306, (uint64_t (*)(void))type metadata accessor for QuoteDetail);
    if (v354)
    {
      MEMORY[0x1B3E8DA80](v355, v307);
      uint64_t v310 = (uint64_t)v371;
      sub_1AFFC8D78();
      uint64_t v356 = sub_1AFFC8D88();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v356 - 8) + 56))(v310, 0, 1, v356);
      goto LABEL_113;
    }
  }
LABEL_112:
  uint64_t v309 = sub_1AFFC8D88();
  uint64_t v310 = (uint64_t)v371;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v309 - 8) + 56))(v371, 1, 1, v309);
LABEL_113:
  v311 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F185D0];
  sub_1AFEF64CC(v310, v305, &qword_1EB810B98, MEMORY[0x1E4F185D0]);
  sub_1AFFC8B38();
  sub_1AFEF66A0(v310, &qword_1EB810B98, v311);
  sub_1AFE6C6C0((uint64_t)&v471);
  uint64_t v312 = v374;
  sub_1AFEF64CC(v436, v374, &qword_1EB817B00, (uint64_t (*)(uint64_t))type metadata accessor for Quote);
  if (((unsigned int (*)(uint64_t, uint64_t, int *))v446)(v312, 1, v171) == 1)
  {
    sub_1AFEF654C((uint64_t)&v471);
    sub_1AFEF66A0(v312, &qword_1EB817B00, (uint64_t (*)(uint64_t))type metadata accessor for Quote);
    uint64_t v313 = sub_1AFFC98F8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v313 - 8) + 56))(v298, 1, 1, v313);
  }
  else
  {
    sub_1AFEF64CC(v312 + v171[20], v298, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928]);
    sub_1AFEF654C((uint64_t)&v471);
    sub_1AFEF6984(v312, (uint64_t (*)(void))type metadata accessor for Quote);
  }
  uint64_t v314 = (uint64_t)v418;
  uint64_t v315 = v375;
  sub_1AFEF64CC(v448, v375, &qword_1EB816D80, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
  uint64_t v316 = sub_1AFFC98F8();
  uint64_t v317 = *(void *)(v316 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v317 + 48))(v298, 1, v316) == 1)
  {
    uint64_t v318 = v315;
    uint64_t v319 = v369;
    sub_1AFEF6710(v318, v369);
    if (v447(v319, 1, v233) == 1)
    {
      sub_1AFEF66A0(v319, &qword_1EB816D80, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v317 + 56))(v314, 1, 1, v316);
    }
    else
    {
      sub_1AFEF64CC(v319 + v233[15], v314, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928]);
      sub_1AFEF6984(v319, (uint64_t (*)(void))type metadata accessor for QuoteDetail);
    }
    sub_1AFEF66A0(v298, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928]);
    uint64_t v320 = (uint64_t)v418;
  }
  else
  {
    sub_1AFEF66A0(v315, &qword_1EB816D80, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v317 + 32))(v314, v298, v316);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v317 + 56))(v314, 0, 1, v316);
    uint64_t v320 = v314;
  }
  v321 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1AFEF64CC(v320, v421, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928]);
  sub_1AFFC8B38();
  sub_1AFEF66A0(v320, (unint64_t *)&qword_1EB818BA0, v321);
  sub_1AFE6C6C0((uint64_t)&v471);
  uint64_t v322 = v376;
  sub_1AFEF64CC(v436, v376, &qword_1EB817B00, (uint64_t (*)(uint64_t))type metadata accessor for Quote);
  if (((unsigned int (*)(uint64_t, uint64_t, int *))v446)(v322, 1, v171) == 1)
  {
    sub_1AFEF654C((uint64_t)&v471);
    sub_1AFEF66A0(v322, &qword_1EB817B00, (uint64_t (*)(uint64_t))type metadata accessor for Quote);
    uint64_t v323 = sub_1AFFC9B88();
    uint64_t v324 = (uint64_t)v378;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v323 - 8) + 56))(v378, 1, 1, v323);
  }
  else
  {
    uint64_t v325 = v322 + v171[24];
    uint64_t v323 = sub_1AFFC9B88();
    uint64_t v326 = *(void *)(v323 - 8);
    uint64_t v324 = (uint64_t)v378;
    (*(void (**)(char *, uint64_t, uint64_t))(v326 + 16))(v378, v325, v323);
    sub_1AFEF654C((uint64_t)&v471);
    sub_1AFEF6984(v322, (uint64_t (*)(void))type metadata accessor for Quote);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v326 + 56))(v324, 0, 1, v323);
  }
  uint64_t v327 = v377;
  sub_1AFEF64CC(v448, v377, &qword_1EB816D80, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
  sub_1AFFC9B88();
  uint64_t v328 = *(void *)(v323 - 8);
  v329 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v328 + 48);
  if (v329(v324, 1, v323) == 1)
  {
    uint64_t v330 = v370;
    sub_1AFEF6710(v327, v370);
    if (v447(v330, 1, v233) == 1)
    {
      sub_1AFEF66A0(v330, &qword_1EB816D80, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
      uint64_t v331 = v379;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v328 + 56))(v379, 1, 1, v323);
    }
    else
    {
      uint64_t v331 = v379;
      sub_1AFEF64CC(v330 + v233[20], v379, &qword_1EB816CF8, MEMORY[0x1E4F27D68]);
      sub_1AFEF6984(v330, (uint64_t (*)(void))type metadata accessor for QuoteDetail);
    }
    sub_1AFEF66A0(v324, &qword_1EB816CF8, MEMORY[0x1E4F27D68]);
  }
  else
  {
    sub_1AFEF66A0(v327, &qword_1EB816D80, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
    uint64_t v331 = v379;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v328 + 32))(v379, v324, v323);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v328 + 56))(v331, 0, 1, v323);
  }
  if (v329(v331, 1, v323) == 1)
  {
    sub_1AFEF66A0(v331, &qword_1EB816CF8, MEMORY[0x1E4F27D68]);
    uint64_t v332 = 0;
    uint64_t v333 = 0;
  }
  else
  {
    uint64_t v332 = sub_1AFFC9B38();
    uint64_t v333 = v334;
    (*(void (**)(uint64_t, uint64_t))(v328 + 8))(v331, v323);
  }
  uint64_t v449 = v332;
  uint64_t v450 = v333;
  uint64_t v335 = v430;
  sub_1AFFC8B38();
  sub_1AFEF66A0(v448, &qword_1EB816D80, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
  sub_1AFEF66A0(v436, &qword_1EB817B00, (uint64_t (*)(uint64_t))type metadata accessor for Quote);
  sub_1AFEF6984(v422, (uint64_t (*)(void))type metadata accessor for SymbolEntity);
  uint64_t v449 = v420;
  uint64_t v450 = v429;
  uint64_t v451 = v428;
  uint64_t v452 = v427;
  uint64_t v453 = v426;
  uint64_t v454 = v425;
  uint64_t v455 = v424;
  uint64_t v456 = v423;
  v457 = v444;
  uint64_t v458 = v443;
  uint64_t v459 = v442;
  uint64_t v460 = v441;
  uint64_t v461 = v440;
  uint64_t v462 = v439;
  uint64_t v463 = v438;
  uint64_t v464 = v437;
  uint64_t v465 = v435;
  uint64_t v466 = v434;
  uint64_t v467 = v433;
  uint64_t v468 = v432;
  uint64_t v469 = v431;
  uint64_t v470 = v335;
  sub_1AFE6C6C0((uint64_t)&v449);
  sub_1AFE6C6C0((uint64_t)&v471);
  sub_1AFEF654C((uint64_t)&v471);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  long long v336 = v480;
  v337 = v380;
  v380[8] = v479;
  v337[9] = v336;
  v337[10] = v481;
  long long v338 = v476;
  v337[4] = v475;
  v337[5] = v338;
  long long v339 = v478;
  v337[6] = v477;
  v337[7] = v339;
  long long v340 = v472;
  _OWORD *v337 = v471;
  v337[1] = v340;
  long long v341 = v474;
  v337[2] = v473;
  v337[3] = v341;
  return result;
}

uint64_t sub_1AFEF20EC()
{
  return sub_1AFFC8B28();
}

uint64_t sub_1AFEF2110(_OWORD *a1)
{
  long long v1 = a1[9];
  v7[8] = a1[8];
  v7[9] = v1;
  v7[10] = a1[10];
  long long v2 = a1[5];
  void v7[4] = a1[4];
  void v7[5] = v2;
  long long v3 = a1[7];
  v7[6] = a1[6];
  v7[7] = v3;
  long long v4 = a1[1];
  v7[0] = *a1;
  v7[1] = v4;
  long long v5 = a1[3];
  void v7[2] = a1[2];
  uint64_t v7[3] = v5;
  sub_1AFEF654C((uint64_t)v7);
  sub_1AFFC8B28();
  return sub_1AFE6C6C0((uint64_t)v7);
}

uint64_t sub_1AFEF2184(uint64_t a1, _OWORD *a2)
{
  sub_1AFEF9054(0, &qword_1EB810BC8, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v16 - v8;
  sub_1AFEF64CC(a1, (uint64_t)v16 - v8, &qword_1EB810BC8, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity);
  long long v10 = a2[9];
  v16[8] = a2[8];
  v16[9] = v10;
  v16[10] = a2[10];
  long long v11 = a2[5];
  v16[4] = a2[4];
  void v16[5] = v11;
  long long v12 = a2[7];
  void v16[6] = a2[6];
  v16[7] = v12;
  long long v13 = a2[1];
  v16[0] = *a2;
  v16[1] = v13;
  long long v14 = a2[3];
  v16[2] = a2[2];
  v16[3] = v14;
  sub_1AFEF64CC((uint64_t)v9, (uint64_t)v6, &qword_1EB810BC8, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity);
  sub_1AFEF654C((uint64_t)v16);
  sub_1AFFC8B38();
  sub_1AFEF66A0((uint64_t)v9, &qword_1EB810BC8, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity);
  return sub_1AFE6C6C0((uint64_t)v16);
}

uint64_t sub_1AFEF22E0(uint64_t a1)
{
  sub_1AFEF9054(0, &qword_1EB810BC8, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  sub_1AFEF64CC(a1, (uint64_t)&v5 - v3, &qword_1EB810BC8, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity);
  sub_1AFFC8B38();
  return sub_1AFEF66A0(a1, &qword_1EB810BC8, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity);
}

uint64_t (*sub_1AFEF23BC(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1AFFC8B18();
  return sub_1AFD3325C;
}

uint64_t sub_1AFEF2418()
{
  return sub_1AFFC8B48();
}

uint64_t sub_1AFEF243C()
{
  return sub_1AFFC8B28();
}

uint64_t sub_1AFEF2460(_OWORD *a1)
{
  long long v1 = a1[9];
  v7[8] = a1[8];
  v7[9] = v1;
  v7[10] = a1[10];
  long long v2 = a1[5];
  void v7[4] = a1[4];
  void v7[5] = v2;
  long long v3 = a1[7];
  v7[6] = a1[6];
  v7[7] = v3;
  long long v4 = a1[1];
  v7[0] = *a1;
  v7[1] = v4;
  long long v5 = a1[3];
  void v7[2] = a1[2];
  uint64_t v7[3] = v5;
  sub_1AFEF654C((uint64_t)v7);
  sub_1AFFC8B28();
  return sub_1AFE6C6C0((uint64_t)v7);
}

uint64_t sub_1AFEF24D4(uint64_t a1, _OWORD *a2)
{
  long long v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F185D0];
  sub_1AFEF9054(0, &qword_1EB810B98, MEMORY[0x1E4F185D0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  long long v10 = (char *)v17 - v9;
  sub_1AFEF64CC(a1, (uint64_t)v17 - v9, &qword_1EB810B98, v4);
  long long v11 = a2[9];
  v17[8] = a2[8];
  v17[9] = v11;
  v17[10] = a2[10];
  long long v12 = a2[5];
  v17[4] = a2[4];
  v17[5] = v12;
  long long v13 = a2[7];
  void v17[6] = a2[6];
  v17[7] = v13;
  long long v14 = a2[1];
  v17[0] = *a2;
  v17[1] = v14;
  long long v15 = a2[3];
  void v17[2] = a2[2];
  v17[3] = v15;
  sub_1AFEF64CC((uint64_t)v10, (uint64_t)v7, &qword_1EB810B98, v4);
  sub_1AFEF654C((uint64_t)v17);
  sub_1AFFC8B38();
  sub_1AFEF66A0((uint64_t)v10, &qword_1EB810B98, v4);
  return sub_1AFE6C6C0((uint64_t)v17);
}

uint64_t sub_1AFEF2630(uint64_t a1)
{
  long long v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F185D0];
  sub_1AFEF9054(0, &qword_1EB810B98, MEMORY[0x1E4F185D0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  sub_1AFEF64CC(a1, (uint64_t)&v6 - v4, &qword_1EB810B98, v2);
  sub_1AFFC8B38();
  return sub_1AFEF66A0(a1, &qword_1EB810B98, v2);
}

uint64_t (*sub_1AFEF270C(void *a1))()
{
  long long v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1AFFC8B18();
  return sub_1AFD3325C;
}

uint64_t sub_1AFEF2768()
{
  return sub_1AFFC8B48();
}

uint64_t sub_1AFEF278C()
{
  return sub_1AFFC8B28();
}

uint64_t sub_1AFEF27B0(_OWORD *a1)
{
  long long v1 = a1[9];
  v7[8] = a1[8];
  v7[9] = v1;
  v7[10] = a1[10];
  long long v2 = a1[5];
  void v7[4] = a1[4];
  void v7[5] = v2;
  long long v3 = a1[7];
  v7[6] = a1[6];
  v7[7] = v3;
  long long v4 = a1[1];
  v7[0] = *a1;
  v7[1] = v4;
  long long v5 = a1[3];
  void v7[2] = a1[2];
  uint64_t v7[3] = v5;
  sub_1AFEF654C((uint64_t)v7);
  sub_1AFFC8B28();
  return sub_1AFE6C6C0((uint64_t)v7);
}

uint64_t sub_1AFEF2824(uint64_t a1, _OWORD *a2)
{
  long long v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F185D0];
  sub_1AFEF9054(0, &qword_1EB810B98, MEMORY[0x1E4F185D0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  long long v10 = (char *)v17 - v9;
  sub_1AFEF64CC(a1, (uint64_t)v17 - v9, &qword_1EB810B98, v4);
  long long v11 = a2[9];
  v17[8] = a2[8];
  v17[9] = v11;
  v17[10] = a2[10];
  long long v12 = a2[5];
  v17[4] = a2[4];
  v17[5] = v12;
  long long v13 = a2[7];
  void v17[6] = a2[6];
  v17[7] = v13;
  long long v14 = a2[1];
  v17[0] = *a2;
  v17[1] = v14;
  long long v15 = a2[3];
  void v17[2] = a2[2];
  v17[3] = v15;
  sub_1AFEF64CC((uint64_t)v10, (uint64_t)v7, &qword_1EB810B98, v4);
  sub_1AFEF654C((uint64_t)v17);
  sub_1AFFC8B38();
  sub_1AFEF66A0((uint64_t)v10, &qword_1EB810B98, v4);
  return sub_1AFE6C6C0((uint64_t)v17);
}

uint64_t sub_1AFEF2980(uint64_t a1)
{
  long long v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F185D0];
  sub_1AFEF9054(0, &qword_1EB810B98, MEMORY[0x1E4F185D0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  sub_1AFEF64CC(a1, (uint64_t)&v6 - v4, &qword_1EB810B98, v2);
  sub_1AFFC8B38();
  return sub_1AFEF66A0(a1, &qword_1EB810B98, v2);
}

uint64_t (*sub_1AFEF2A5C(void *a1))()
{
  long long v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1AFFC8B18();
  return sub_1AFD3325C;
}

uint64_t sub_1AFEF2AB8()
{
  return sub_1AFFC8B48();
}

uint64_t sub_1AFEF2ADC()
{
  return sub_1AFFC8B28();
}

uint64_t sub_1AFEF2B00(_OWORD *a1)
{
  long long v1 = a1[9];
  v7[8] = a1[8];
  v7[9] = v1;
  v7[10] = a1[10];
  long long v2 = a1[5];
  void v7[4] = a1[4];
  void v7[5] = v2;
  long long v3 = a1[7];
  v7[6] = a1[6];
  v7[7] = v3;
  long long v4 = a1[1];
  v7[0] = *a1;
  v7[1] = v4;
  long long v5 = a1[3];
  void v7[2] = a1[2];
  uint64_t v7[3] = v5;
  sub_1AFEF654C((uint64_t)v7);
  sub_1AFFC8B28();
  return sub_1AFE6C6C0((uint64_t)v7);
}

uint64_t sub_1AFEF2B74(uint64_t a1, _OWORD *a2)
{
  long long v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F185D0];
  sub_1AFEF9054(0, &qword_1EB810B98, MEMORY[0x1E4F185D0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  long long v10 = (char *)v17 - v9;
  sub_1AFEF64CC(a1, (uint64_t)v17 - v9, &qword_1EB810B98, v4);
  long long v11 = a2[9];
  v17[8] = a2[8];
  v17[9] = v11;
  v17[10] = a2[10];
  long long v12 = a2[5];
  v17[4] = a2[4];
  v17[5] = v12;
  long long v13 = a2[7];
  void v17[6] = a2[6];
  v17[7] = v13;
  long long v14 = a2[1];
  v17[0] = *a2;
  v17[1] = v14;
  long long v15 = a2[3];
  void v17[2] = a2[2];
  v17[3] = v15;
  sub_1AFEF64CC((uint64_t)v10, (uint64_t)v7, &qword_1EB810B98, v4);
  sub_1AFEF654C((uint64_t)v17);
  sub_1AFFC8B38();
  sub_1AFEF66A0((uint64_t)v10, &qword_1EB810B98, v4);
  return sub_1AFE6C6C0((uint64_t)v17);
}

uint64_t sub_1AFEF2CD0(uint64_t a1)
{
  long long v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F185D0];
  sub_1AFEF9054(0, &qword_1EB810B98, MEMORY[0x1E4F185D0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  sub_1AFEF64CC(a1, (uint64_t)&v6 - v4, &qword_1EB810B98, v2);
  sub_1AFFC8B38();
  return sub_1AFEF66A0(a1, &qword_1EB810B98, v2);
}

uint64_t (*sub_1AFEF2DAC(void *a1))()
{
  long long v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1AFFC8B18();
  return sub_1AFD3325C;
}

uint64_t sub_1AFEF2E08()
{
  return sub_1AFFC8B48();
}

uint64_t sub_1AFEF2E2C()
{
  return sub_1AFFC8B28();
}

uint64_t sub_1AFEF2E50(_OWORD *a1)
{
  long long v1 = a1[9];
  v7[8] = a1[8];
  v7[9] = v1;
  v7[10] = a1[10];
  long long v2 = a1[5];
  void v7[4] = a1[4];
  void v7[5] = v2;
  long long v3 = a1[7];
  v7[6] = a1[6];
  v7[7] = v3;
  long long v4 = a1[1];
  v7[0] = *a1;
  v7[1] = v4;
  long long v5 = a1[3];
  void v7[2] = a1[2];
  uint64_t v7[3] = v5;
  sub_1AFEF654C((uint64_t)v7);
  sub_1AFFC8B28();
  return sub_1AFE6C6C0((uint64_t)v7);
}

uint64_t sub_1AFEF2EC4(uint64_t a1, _OWORD *a2)
{
  long long v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F185D0];
  sub_1AFEF9054(0, &qword_1EB810B98, MEMORY[0x1E4F185D0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  long long v10 = (char *)v17 - v9;
  sub_1AFEF64CC(a1, (uint64_t)v17 - v9, &qword_1EB810B98, v4);
  long long v11 = a2[9];
  v17[8] = a2[8];
  v17[9] = v11;
  v17[10] = a2[10];
  long long v12 = a2[5];
  v17[4] = a2[4];
  v17[5] = v12;
  long long v13 = a2[7];
  void v17[6] = a2[6];
  v17[7] = v13;
  long long v14 = a2[1];
  v17[0] = *a2;
  v17[1] = v14;
  long long v15 = a2[3];
  void v17[2] = a2[2];
  v17[3] = v15;
  sub_1AFEF64CC((uint64_t)v10, (uint64_t)v7, &qword_1EB810B98, v4);
  sub_1AFEF654C((uint64_t)v17);
  sub_1AFFC8B38();
  sub_1AFEF66A0((uint64_t)v10, &qword_1EB810B98, v4);
  return sub_1AFE6C6C0((uint64_t)v17);
}

uint64_t sub_1AFEF3020(uint64_t a1)
{
  long long v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F185D0];
  sub_1AFEF9054(0, &qword_1EB810B98, MEMORY[0x1E4F185D0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  sub_1AFEF64CC(a1, (uint64_t)&v6 - v4, &qword_1EB810B98, v2);
  sub_1AFFC8B38();
  return sub_1AFEF66A0(a1, &qword_1EB810B98, v2);
}

uint64_t (*sub_1AFEF30FC(void *a1))()
{
  long long v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1AFFC8B18();
  return sub_1AFD3325C;
}

uint64_t sub_1AFEF3158()
{
  return sub_1AFFC8B48();
}

uint64_t sub_1AFEF317C()
{
  return sub_1AFFC8B28();
}

uint64_t sub_1AFEF31A0(_OWORD *a1)
{
  long long v1 = a1[9];
  v7[8] = a1[8];
  v7[9] = v1;
  v7[10] = a1[10];
  long long v2 = a1[5];
  void v7[4] = a1[4];
  void v7[5] = v2;
  long long v3 = a1[7];
  v7[6] = a1[6];
  v7[7] = v3;
  long long v4 = a1[1];
  v7[0] = *a1;
  v7[1] = v4;
  long long v5 = a1[3];
  void v7[2] = a1[2];
  uint64_t v7[3] = v5;
  sub_1AFEF654C((uint64_t)v7);
  sub_1AFFC8B28();
  return sub_1AFE6C6C0((uint64_t)v7);
}

uint64_t sub_1AFEF3214(uint64_t a1, _OWORD *a2)
{
  long long v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F185D0];
  sub_1AFEF9054(0, &qword_1EB810B98, MEMORY[0x1E4F185D0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  long long v10 = (char *)v17 - v9;
  sub_1AFEF64CC(a1, (uint64_t)v17 - v9, &qword_1EB810B98, v4);
  long long v11 = a2[9];
  v17[8] = a2[8];
  v17[9] = v11;
  v17[10] = a2[10];
  long long v12 = a2[5];
  v17[4] = a2[4];
  v17[5] = v12;
  long long v13 = a2[7];
  void v17[6] = a2[6];
  v17[7] = v13;
  long long v14 = a2[1];
  v17[0] = *a2;
  v17[1] = v14;
  long long v15 = a2[3];
  void v17[2] = a2[2];
  v17[3] = v15;
  sub_1AFEF64CC((uint64_t)v10, (uint64_t)v7, &qword_1EB810B98, v4);
  sub_1AFEF654C((uint64_t)v17);
  sub_1AFFC8B38();
  sub_1AFEF66A0((uint64_t)v10, &qword_1EB810B98, v4);
  return sub_1AFE6C6C0((uint64_t)v17);
}

uint64_t sub_1AFEF3370(uint64_t a1)
{
  long long v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F185D0];
  sub_1AFEF9054(0, &qword_1EB810B98, MEMORY[0x1E4F185D0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  sub_1AFEF64CC(a1, (uint64_t)&v6 - v4, &qword_1EB810B98, v2);
  sub_1AFFC8B38();
  return sub_1AFEF66A0(a1, &qword_1EB810B98, v2);
}

uint64_t (*sub_1AFEF344C(void *a1))()
{
  long long v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1AFFC8B18();
  return sub_1AFD3325C;
}

uint64_t sub_1AFEF34A8()
{
  return sub_1AFFC8B48();
}

uint64_t sub_1AFEF34CC()
{
  return sub_1AFFC8B28();
}

uint64_t sub_1AFEF34F0(_OWORD *a1)
{
  long long v1 = a1[9];
  v7[8] = a1[8];
  v7[9] = v1;
  v7[10] = a1[10];
  long long v2 = a1[5];
  void v7[4] = a1[4];
  void v7[5] = v2;
  long long v3 = a1[7];
  v7[6] = a1[6];
  v7[7] = v3;
  long long v4 = a1[1];
  v7[0] = *a1;
  v7[1] = v4;
  long long v5 = a1[3];
  void v7[2] = a1[2];
  uint64_t v7[3] = v5;
  sub_1AFEF654C((uint64_t)v7);
  sub_1AFFC8B28();
  return sub_1AFE6C6C0((uint64_t)v7);
}

uint64_t sub_1AFEF3564(uint64_t a1, _OWORD *a2)
{
  long long v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1AFEF9054(0, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  long long v10 = (char *)v17 - v9;
  sub_1AFEF64CC(a1, (uint64_t)v17 - v9, (unint64_t *)&qword_1EB818BA0, v4);
  long long v11 = a2[9];
  v17[8] = a2[8];
  v17[9] = v11;
  v17[10] = a2[10];
  long long v12 = a2[5];
  v17[4] = a2[4];
  v17[5] = v12;
  long long v13 = a2[7];
  void v17[6] = a2[6];
  v17[7] = v13;
  long long v14 = a2[1];
  v17[0] = *a2;
  v17[1] = v14;
  long long v15 = a2[3];
  void v17[2] = a2[2];
  v17[3] = v15;
  sub_1AFEF64CC((uint64_t)v10, (uint64_t)v7, (unint64_t *)&qword_1EB818BA0, v4);
  sub_1AFEF654C((uint64_t)v17);
  sub_1AFFC8B38();
  sub_1AFEF66A0((uint64_t)v10, (unint64_t *)&qword_1EB818BA0, v4);
  return sub_1AFE6C6C0((uint64_t)v17);
}

uint64_t sub_1AFEF36C0(uint64_t a1)
{
  long long v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1AFEF9054(0, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  sub_1AFEF64CC(a1, (uint64_t)&v6 - v4, (unint64_t *)&qword_1EB818BA0, v2);
  sub_1AFFC8B38();
  return sub_1AFEF66A0(a1, (unint64_t *)&qword_1EB818BA0, v2);
}

uint64_t (*sub_1AFEF379C(void *a1))()
{
  long long v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1AFFC8B18();
  return sub_1AFD3325C;
}

uint64_t sub_1AFEF37F8()
{
  return sub_1AFFC8B48();
}

uint64_t sub_1AFEF381C()
{
  return sub_1AFFC8B28();
}

uint64_t sub_1AFEF3840(_OWORD *a1)
{
  long long v1 = a1[9];
  v7[8] = a1[8];
  v7[9] = v1;
  v7[10] = a1[10];
  long long v2 = a1[5];
  void v7[4] = a1[4];
  void v7[5] = v2;
  long long v3 = a1[7];
  v7[6] = a1[6];
  v7[7] = v3;
  long long v4 = a1[1];
  v7[0] = *a1;
  v7[1] = v4;
  long long v5 = a1[3];
  void v7[2] = a1[2];
  uint64_t v7[3] = v5;
  sub_1AFEF654C((uint64_t)v7);
  sub_1AFFC8B28();
  return sub_1AFE6C6C0((uint64_t)v7);
}

uint64_t sub_1AFEF38B4(uint64_t a1, _OWORD *a2)
{
  long long v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1AFEF9054(0, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  long long v10 = (char *)v17 - v9;
  sub_1AFEF64CC(a1, (uint64_t)v17 - v9, (unint64_t *)&qword_1EB818BA0, v4);
  long long v11 = a2[9];
  v17[8] = a2[8];
  v17[9] = v11;
  v17[10] = a2[10];
  long long v12 = a2[5];
  v17[4] = a2[4];
  v17[5] = v12;
  long long v13 = a2[7];
  void v17[6] = a2[6];
  v17[7] = v13;
  long long v14 = a2[1];
  v17[0] = *a2;
  v17[1] = v14;
  long long v15 = a2[3];
  void v17[2] = a2[2];
  v17[3] = v15;
  sub_1AFEF64CC((uint64_t)v10, (uint64_t)v7, (unint64_t *)&qword_1EB818BA0, v4);
  sub_1AFEF654C((uint64_t)v17);
  sub_1AFFC8B38();
  sub_1AFEF66A0((uint64_t)v10, (unint64_t *)&qword_1EB818BA0, v4);
  return sub_1AFE6C6C0((uint64_t)v17);
}

uint64_t sub_1AFEF3A10(uint64_t a1)
{
  long long v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1AFEF9054(0, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  sub_1AFEF64CC(a1, (uint64_t)&v6 - v4, (unint64_t *)&qword_1EB818BA0, v2);
  sub_1AFFC8B38();
  return sub_1AFEF66A0(a1, (unint64_t *)&qword_1EB818BA0, v2);
}

uint64_t (*sub_1AFEF3AEC(void *a1))()
{
  long long v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1AFFC8B18();
  return sub_1AFD3325C;
}

uint64_t sub_1AFEF3B48()
{
  return sub_1AFFC8B48();
}

uint64_t sub_1AFEF3B6C()
{
  return sub_1AFFC8B28();
}

uint64_t sub_1AFEF3B90(_OWORD *a1)
{
  long long v1 = a1[9];
  v7[8] = a1[8];
  v7[9] = v1;
  v7[10] = a1[10];
  long long v2 = a1[5];
  void v7[4] = a1[4];
  void v7[5] = v2;
  long long v3 = a1[7];
  v7[6] = a1[6];
  v7[7] = v3;
  long long v4 = a1[1];
  v7[0] = *a1;
  v7[1] = v4;
  long long v5 = a1[3];
  void v7[2] = a1[2];
  uint64_t v7[3] = v5;
  sub_1AFEF654C((uint64_t)v7);
  sub_1AFFC8B28();
  return sub_1AFE6C6C0((uint64_t)v7);
}

uint64_t sub_1AFEF3C04(uint64_t a1, _OWORD *a2)
{
  long long v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1AFEF9054(0, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  long long v10 = (char *)v17 - v9;
  sub_1AFEF64CC(a1, (uint64_t)v17 - v9, (unint64_t *)&qword_1EB818BA0, v4);
  long long v11 = a2[9];
  v17[8] = a2[8];
  v17[9] = v11;
  v17[10] = a2[10];
  long long v12 = a2[5];
  v17[4] = a2[4];
  v17[5] = v12;
  long long v13 = a2[7];
  void v17[6] = a2[6];
  v17[7] = v13;
  long long v14 = a2[1];
  v17[0] = *a2;
  v17[1] = v14;
  long long v15 = a2[3];
  void v17[2] = a2[2];
  v17[3] = v15;
  sub_1AFEF64CC((uint64_t)v10, (uint64_t)v7, (unint64_t *)&qword_1EB818BA0, v4);
  sub_1AFEF654C((uint64_t)v17);
  sub_1AFFC8B38();
  sub_1AFEF66A0((uint64_t)v10, (unint64_t *)&qword_1EB818BA0, v4);
  return sub_1AFE6C6C0((uint64_t)v17);
}

uint64_t sub_1AFEF3D60(uint64_t a1)
{
  long long v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1AFEF9054(0, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  sub_1AFEF64CC(a1, (uint64_t)&v6 - v4, (unint64_t *)&qword_1EB818BA0, v2);
  sub_1AFFC8B38();
  return sub_1AFEF66A0(a1, (unint64_t *)&qword_1EB818BA0, v2);
}

uint64_t (*sub_1AFEF3E3C(void *a1))()
{
  long long v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1AFFC8B18();
  return sub_1AFD3325C;
}

uint64_t sub_1AFEF3E98()
{
  return sub_1AFFC8B48();
}

uint64_t sub_1AFEF3EBC()
{
  return sub_1AFFC8B28();
}

uint64_t sub_1AFEF3EE0(_OWORD *a1)
{
  long long v1 = a1[9];
  v7[8] = a1[8];
  v7[9] = v1;
  v7[10] = a1[10];
  long long v2 = a1[5];
  void v7[4] = a1[4];
  void v7[5] = v2;
  long long v3 = a1[7];
  v7[6] = a1[6];
  v7[7] = v3;
  long long v4 = a1[1];
  v7[0] = *a1;
  v7[1] = v4;
  long long v5 = a1[3];
  void v7[2] = a1[2];
  uint64_t v7[3] = v5;
  sub_1AFEF654C((uint64_t)v7);
  sub_1AFFC8B28();
  return sub_1AFE6C6C0((uint64_t)v7);
}

uint64_t sub_1AFEF3F54(uint64_t a1, _OWORD *a2)
{
  long long v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F185D0];
  sub_1AFEF9054(0, &qword_1EB810B98, MEMORY[0x1E4F185D0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  long long v10 = (char *)v17 - v9;
  sub_1AFEF64CC(a1, (uint64_t)v17 - v9, &qword_1EB810B98, v4);
  long long v11 = a2[9];
  v17[8] = a2[8];
  v17[9] = v11;
  v17[10] = a2[10];
  long long v12 = a2[5];
  v17[4] = a2[4];
  v17[5] = v12;
  long long v13 = a2[7];
  void v17[6] = a2[6];
  v17[7] = v13;
  long long v14 = a2[1];
  v17[0] = *a2;
  v17[1] = v14;
  long long v15 = a2[3];
  void v17[2] = a2[2];
  v17[3] = v15;
  sub_1AFEF64CC((uint64_t)v10, (uint64_t)v7, &qword_1EB810B98, v4);
  sub_1AFEF654C((uint64_t)v17);
  sub_1AFFC8B38();
  sub_1AFEF66A0((uint64_t)v10, &qword_1EB810B98, v4);
  return sub_1AFE6C6C0((uint64_t)v17);
}

uint64_t sub_1AFEF40B0(uint64_t a1)
{
  long long v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F185D0];
  sub_1AFEF9054(0, &qword_1EB810B98, MEMORY[0x1E4F185D0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  sub_1AFEF64CC(a1, (uint64_t)&v6 - v4, &qword_1EB810B98, v2);
  sub_1AFFC8B38();
  return sub_1AFEF66A0(a1, &qword_1EB810B98, v2);
}

uint64_t (*sub_1AFEF418C(void *a1))()
{
  long long v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1AFFC8B18();
  return sub_1AFD3325C;
}

uint64_t sub_1AFEF41E8()
{
  return sub_1AFFC8B48();
}

uint64_t sub_1AFEF420C()
{
  return sub_1AFFC8B28();
}

uint64_t sub_1AFEF4230(_OWORD *a1)
{
  long long v1 = a1[9];
  v7[8] = a1[8];
  v7[9] = v1;
  v7[10] = a1[10];
  long long v2 = a1[5];
  void v7[4] = a1[4];
  void v7[5] = v2;
  long long v3 = a1[7];
  v7[6] = a1[6];
  v7[7] = v3;
  long long v4 = a1[1];
  v7[0] = *a1;
  v7[1] = v4;
  long long v5 = a1[3];
  void v7[2] = a1[2];
  uint64_t v7[3] = v5;
  sub_1AFEF654C((uint64_t)v7);
  sub_1AFFC8B28();
  return sub_1AFE6C6C0((uint64_t)v7);
}

uint64_t sub_1AFEF42A4(uint64_t a1, _OWORD *a2)
{
  long long v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F185D0];
  sub_1AFEF9054(0, &qword_1EB810B98, MEMORY[0x1E4F185D0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  long long v10 = (char *)v17 - v9;
  sub_1AFEF64CC(a1, (uint64_t)v17 - v9, &qword_1EB810B98, v4);
  long long v11 = a2[9];
  v17[8] = a2[8];
  v17[9] = v11;
  v17[10] = a2[10];
  long long v12 = a2[5];
  v17[4] = a2[4];
  v17[5] = v12;
  long long v13 = a2[7];
  void v17[6] = a2[6];
  v17[7] = v13;
  long long v14 = a2[1];
  v17[0] = *a2;
  v17[1] = v14;
  long long v15 = a2[3];
  void v17[2] = a2[2];
  v17[3] = v15;
  sub_1AFEF64CC((uint64_t)v10, (uint64_t)v7, &qword_1EB810B98, v4);
  sub_1AFEF654C((uint64_t)v17);
  sub_1AFFC8B38();
  sub_1AFEF66A0((uint64_t)v10, &qword_1EB810B98, v4);
  return sub_1AFE6C6C0((uint64_t)v17);
}

uint64_t sub_1AFEF4400(uint64_t a1)
{
  long long v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F185D0];
  sub_1AFEF9054(0, &qword_1EB810B98, MEMORY[0x1E4F185D0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  sub_1AFEF64CC(a1, (uint64_t)&v6 - v4, &qword_1EB810B98, v2);
  sub_1AFFC8B38();
  return sub_1AFEF66A0(a1, &qword_1EB810B98, v2);
}

uint64_t (*sub_1AFEF44DC(void *a1))()
{
  long long v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1AFFC8B18();
  return sub_1AFD3325C;
}

uint64_t sub_1AFEF4538()
{
  return sub_1AFFC8B48();
}

uint64_t sub_1AFEF455C()
{
  return sub_1AFFC8B28();
}

uint64_t sub_1AFEF4580(_OWORD *a1)
{
  long long v1 = a1[9];
  v7[8] = a1[8];
  v7[9] = v1;
  v7[10] = a1[10];
  long long v2 = a1[5];
  void v7[4] = a1[4];
  void v7[5] = v2;
  long long v3 = a1[7];
  v7[6] = a1[6];
  v7[7] = v3;
  long long v4 = a1[1];
  v7[0] = *a1;
  v7[1] = v4;
  long long v5 = a1[3];
  void v7[2] = a1[2];
  uint64_t v7[3] = v5;
  sub_1AFEF654C((uint64_t)v7);
  sub_1AFFC8B28();
  return sub_1AFE6C6C0((uint64_t)v7);
}

uint64_t sub_1AFEF45F4(uint64_t a1, _OWORD *a2)
{
  long long v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F185D0];
  sub_1AFEF9054(0, &qword_1EB810B98, MEMORY[0x1E4F185D0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  long long v10 = (char *)v17 - v9;
  sub_1AFEF64CC(a1, (uint64_t)v17 - v9, &qword_1EB810B98, v4);
  long long v11 = a2[9];
  v17[8] = a2[8];
  v17[9] = v11;
  v17[10] = a2[10];
  long long v12 = a2[5];
  v17[4] = a2[4];
  v17[5] = v12;
  long long v13 = a2[7];
  void v17[6] = a2[6];
  v17[7] = v13;
  long long v14 = a2[1];
  v17[0] = *a2;
  v17[1] = v14;
  long long v15 = a2[3];
  void v17[2] = a2[2];
  v17[3] = v15;
  sub_1AFEF64CC((uint64_t)v10, (uint64_t)v7, &qword_1EB810B98, v4);
  sub_1AFEF654C((uint64_t)v17);
  sub_1AFFC8B38();
  sub_1AFEF66A0((uint64_t)v10, &qword_1EB810B98, v4);
  return sub_1AFE6C6C0((uint64_t)v17);
}

uint64_t sub_1AFEF4750(uint64_t a1)
{
  long long v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F185D0];
  sub_1AFEF9054(0, &qword_1EB810B98, MEMORY[0x1E4F185D0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  sub_1AFEF64CC(a1, (uint64_t)&v6 - v4, &qword_1EB810B98, v2);
  sub_1AFFC8B38();
  return sub_1AFEF66A0(a1, &qword_1EB810B98, v2);
}

uint64_t (*sub_1AFEF482C(void *a1))()
{
  long long v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1AFFC8B18();
  return sub_1AFD3325C;
}

uint64_t sub_1AFEF4888()
{
  return sub_1AFFC8B48();
}

uint64_t sub_1AFEF48AC()
{
  return sub_1AFFC8B28();
}

uint64_t sub_1AFEF48D0(_OWORD *a1)
{
  long long v1 = a1[9];
  v7[8] = a1[8];
  v7[9] = v1;
  v7[10] = a1[10];
  long long v2 = a1[5];
  void v7[4] = a1[4];
  void v7[5] = v2;
  long long v3 = a1[7];
  v7[6] = a1[6];
  v7[7] = v3;
  long long v4 = a1[1];
  v7[0] = *a1;
  v7[1] = v4;
  long long v5 = a1[3];
  void v7[2] = a1[2];
  uint64_t v7[3] = v5;
  sub_1AFEF654C((uint64_t)v7);
  sub_1AFFC8B28();
  return sub_1AFE6C6C0((uint64_t)v7);
}

uint64_t sub_1AFEF4944(uint64_t a1, _OWORD *a2)
{
  long long v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F185D0];
  sub_1AFEF9054(0, &qword_1EB810B98, MEMORY[0x1E4F185D0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  long long v10 = (char *)v17 - v9;
  sub_1AFEF64CC(a1, (uint64_t)v17 - v9, &qword_1EB810B98, v4);
  long long v11 = a2[9];
  v17[8] = a2[8];
  v17[9] = v11;
  v17[10] = a2[10];
  long long v12 = a2[5];
  v17[4] = a2[4];
  v17[5] = v12;
  long long v13 = a2[7];
  void v17[6] = a2[6];
  v17[7] = v13;
  long long v14 = a2[1];
  v17[0] = *a2;
  v17[1] = v14;
  long long v15 = a2[3];
  void v17[2] = a2[2];
  v17[3] = v15;
  sub_1AFEF64CC((uint64_t)v10, (uint64_t)v7, &qword_1EB810B98, v4);
  sub_1AFEF654C((uint64_t)v17);
  sub_1AFFC8B38();
  sub_1AFEF66A0((uint64_t)v10, &qword_1EB810B98, v4);
  return sub_1AFE6C6C0((uint64_t)v17);
}

uint64_t sub_1AFEF4AA0(uint64_t a1)
{
  long long v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F185D0];
  sub_1AFEF9054(0, &qword_1EB810B98, MEMORY[0x1E4F185D0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  sub_1AFEF64CC(a1, (uint64_t)&v6 - v4, &qword_1EB810B98, v2);
  sub_1AFFC8B38();
  return sub_1AFEF66A0(a1, &qword_1EB810B98, v2);
}

uint64_t (*sub_1AFEF4B7C(void *a1))()
{
  long long v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1AFFC8B18();
  return sub_1AFD3325C;
}

uint64_t sub_1AFEF4BD8()
{
  return sub_1AFFC8B48();
}

uint64_t sub_1AFEF4BFC()
{
  return sub_1AFFC8B28();
}

uint64_t sub_1AFEF4C20(_OWORD *a1)
{
  long long v1 = a1[9];
  v7[8] = a1[8];
  v7[9] = v1;
  v7[10] = a1[10];
  long long v2 = a1[5];
  void v7[4] = a1[4];
  void v7[5] = v2;
  long long v3 = a1[7];
  v7[6] = a1[6];
  v7[7] = v3;
  long long v4 = a1[1];
  v7[0] = *a1;
  v7[1] = v4;
  long long v5 = a1[3];
  void v7[2] = a1[2];
  uint64_t v7[3] = v5;
  sub_1AFEF654C((uint64_t)v7);
  sub_1AFFC8B28();
  return sub_1AFE6C6C0((uint64_t)v7);
}

uint64_t sub_1AFEF4C94(uint64_t a1, _OWORD *a2)
{
  long long v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F185D0];
  sub_1AFEF9054(0, &qword_1EB810B98, MEMORY[0x1E4F185D0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  long long v10 = (char *)v17 - v9;
  sub_1AFEF64CC(a1, (uint64_t)v17 - v9, &qword_1EB810B98, v4);
  long long v11 = a2[9];
  v17[8] = a2[8];
  v17[9] = v11;
  v17[10] = a2[10];
  long long v12 = a2[5];
  v17[4] = a2[4];
  v17[5] = v12;
  long long v13 = a2[7];
  void v17[6] = a2[6];
  v17[7] = v13;
  long long v14 = a2[1];
  v17[0] = *a2;
  v17[1] = v14;
  long long v15 = a2[3];
  void v17[2] = a2[2];
  v17[3] = v15;
  sub_1AFEF64CC((uint64_t)v10, (uint64_t)v7, &qword_1EB810B98, v4);
  sub_1AFEF654C((uint64_t)v17);
  sub_1AFFC8B38();
  sub_1AFEF66A0((uint64_t)v10, &qword_1EB810B98, v4);
  return sub_1AFE6C6C0((uint64_t)v17);
}

uint64_t sub_1AFEF4DF0(uint64_t a1)
{
  long long v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F185D0];
  sub_1AFEF9054(0, &qword_1EB810B98, MEMORY[0x1E4F185D0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  sub_1AFEF64CC(a1, (uint64_t)&v6 - v4, &qword_1EB810B98, v2);
  sub_1AFFC8B38();
  return sub_1AFEF66A0(a1, &qword_1EB810B98, v2);
}

uint64_t (*sub_1AFEF4ECC(void *a1))()
{
  long long v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1AFFC8B18();
  return sub_1AFD3325C;
}

uint64_t sub_1AFEF4F28()
{
  return sub_1AFFC8B48();
}

uint64_t sub_1AFEF4F4C()
{
  sub_1AFFC8B28();
  return v1;
}

uint64_t sub_1AFEF4F84@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  long long v3 = a1[9];
  v11[8] = a1[8];
  v11[9] = v3;
  v11[10] = a1[10];
  long long v4 = a1[5];
  void v11[4] = a1[4];
  v11[5] = v4;
  long long v5 = a1[7];
  v11[6] = a1[6];
  v11[7] = v5;
  long long v6 = a1[1];
  v11[0] = *a1;
  v11[1] = v6;
  long long v7 = a1[3];
  void v11[2] = a1[2];
  void v11[3] = v7;
  sub_1AFEF654C((uint64_t)v11);
  sub_1AFFC8B28();
  uint64_t result = sub_1AFE6C6C0((uint64_t)v11);
  *(void *)a2 = v9;
  *(unsigned char *)(a2 + 8) = v10;
  return result;
}

uint64_t sub_1AFEF5008(uint64_t a1, _OWORD *a2)
{
  long long v2 = a2[9];
  v8[8] = a2[8];
  v8[9] = v2;
  v8[10] = a2[10];
  long long v3 = a2[5];
  v8[4] = a2[4];
  void v8[5] = v3;
  long long v4 = a2[7];
  _OWORD v8[6] = a2[6];
  v8[7] = v4;
  long long v5 = a2[1];
  v8[0] = *a2;
  v8[1] = v5;
  long long v6 = a2[3];
  void v8[2] = a2[2];
  v8[3] = v6;
  sub_1AFEF654C((uint64_t)v8);
  sub_1AFFC8B38();
  return sub_1AFE6C6C0((uint64_t)v8);
}

uint64_t sub_1AFEF5088()
{
  return sub_1AFFC8B38();
}

uint64_t (*sub_1AFEF50C4(void *a1))()
{
  long long v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1AFFC8B18();
  return sub_1AFD3325C;
}

uint64_t sub_1AFEF5120()
{
  return sub_1AFFC8B48();
}

uint64_t sub_1AFEF5144()
{
  sub_1AFFC8B28();
  return v1;
}

uint64_t sub_1AFEF517C@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  long long v3 = a1[9];
  v11[8] = a1[8];
  v11[9] = v3;
  v11[10] = a1[10];
  long long v4 = a1[5];
  void v11[4] = a1[4];
  v11[5] = v4;
  long long v5 = a1[7];
  v11[6] = a1[6];
  v11[7] = v5;
  long long v6 = a1[1];
  v11[0] = *a1;
  v11[1] = v6;
  long long v7 = a1[3];
  void v11[2] = a1[2];
  void v11[3] = v7;
  sub_1AFEF654C((uint64_t)v11);
  sub_1AFFC8B28();
  uint64_t result = sub_1AFE6C6C0((uint64_t)v11);
  *(void *)a2 = v9;
  *(unsigned char *)(a2 + 8) = v10;
  return result;
}

uint64_t sub_1AFEF5200(uint64_t a1, _OWORD *a2)
{
  long long v2 = a2[9];
  v8[8] = a2[8];
  v8[9] = v2;
  v8[10] = a2[10];
  long long v3 = a2[5];
  v8[4] = a2[4];
  void v8[5] = v3;
  long long v4 = a2[7];
  _OWORD v8[6] = a2[6];
  v8[7] = v4;
  long long v5 = a2[1];
  v8[0] = *a2;
  v8[1] = v5;
  long long v6 = a2[3];
  void v8[2] = a2[2];
  v8[3] = v6;
  sub_1AFEF654C((uint64_t)v8);
  sub_1AFFC8B38();
  return sub_1AFE6C6C0((uint64_t)v8);
}

uint64_t sub_1AFEF5280()
{
  return sub_1AFFC8B38();
}

uint64_t (*sub_1AFEF52BC(void *a1))()
{
  long long v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1AFFC8B18();
  return sub_1AFD3325C;
}

uint64_t sub_1AFEF5318()
{
  return sub_1AFFC8B48();
}

uint64_t sub_1AFEF533C()
{
  sub_1AFFC8B28();
  return v1;
}

uint64_t sub_1AFEF5374@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  long long v3 = a1[9];
  v11[8] = a1[8];
  v11[9] = v3;
  v11[10] = a1[10];
  long long v4 = a1[5];
  void v11[4] = a1[4];
  v11[5] = v4;
  long long v5 = a1[7];
  v11[6] = a1[6];
  v11[7] = v5;
  long long v6 = a1[1];
  v11[0] = *a1;
  v11[1] = v6;
  long long v7 = a1[3];
  void v11[2] = a1[2];
  void v11[3] = v7;
  sub_1AFEF654C((uint64_t)v11);
  sub_1AFFC8B28();
  uint64_t result = sub_1AFE6C6C0((uint64_t)v11);
  *(void *)a2 = v9;
  *(unsigned char *)(a2 + 8) = v10;
  return result;
}

uint64_t sub_1AFEF53F8(uint64_t a1, _OWORD *a2)
{
  long long v2 = a2[9];
  v8[8] = a2[8];
  v8[9] = v2;
  v8[10] = a2[10];
  long long v3 = a2[5];
  v8[4] = a2[4];
  void v8[5] = v3;
  long long v4 = a2[7];
  _OWORD v8[6] = a2[6];
  v8[7] = v4;
  long long v5 = a2[1];
  v8[0] = *a2;
  v8[1] = v5;
  long long v6 = a2[3];
  void v8[2] = a2[2];
  v8[3] = v6;
  sub_1AFEF654C((uint64_t)v8);
  sub_1AFFC8B38();
  return sub_1AFE6C6C0((uint64_t)v8);
}

uint64_t sub_1AFEF5478()
{
  return sub_1AFFC8B38();
}

uint64_t (*sub_1AFEF54B4(void *a1))()
{
  long long v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1AFFC8B18();
  return sub_1AFD3325C;
}

uint64_t sub_1AFEF5510()
{
  return sub_1AFFC8B48();
}

uint64_t sub_1AFEF5534()
{
  sub_1AFFC8B28();
  return v1;
}

uint64_t sub_1AFEF556C@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  long long v3 = a1[9];
  v11[8] = a1[8];
  v11[9] = v3;
  v11[10] = a1[10];
  long long v4 = a1[5];
  void v11[4] = a1[4];
  v11[5] = v4;
  long long v5 = a1[7];
  v11[6] = a1[6];
  v11[7] = v5;
  long long v6 = a1[1];
  v11[0] = *a1;
  v11[1] = v6;
  long long v7 = a1[3];
  void v11[2] = a1[2];
  void v11[3] = v7;
  sub_1AFEF654C((uint64_t)v11);
  sub_1AFFC8B28();
  uint64_t result = sub_1AFE6C6C0((uint64_t)v11);
  *(void *)a2 = v9;
  *(unsigned char *)(a2 + 8) = v10;
  return result;
}

uint64_t sub_1AFEF55F0(uint64_t a1, _OWORD *a2)
{
  long long v2 = a2[9];
  v8[8] = a2[8];
  v8[9] = v2;
  v8[10] = a2[10];
  long long v3 = a2[5];
  v8[4] = a2[4];
  void v8[5] = v3;
  long long v4 = a2[7];
  _OWORD v8[6] = a2[6];
  v8[7] = v4;
  long long v5 = a2[1];
  v8[0] = *a2;
  v8[1] = v5;
  long long v6 = a2[3];
  void v8[2] = a2[2];
  v8[3] = v6;
  sub_1AFEF654C((uint64_t)v8);
  sub_1AFFC8B38();
  return sub_1AFE6C6C0((uint64_t)v8);
}

uint64_t sub_1AFEF5670()
{
  return sub_1AFFC8B38();
}

uint64_t (*sub_1AFEF56AC(void *a1))()
{
  long long v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1AFFC8B18();
  return sub_1AFD3325C;
}

uint64_t sub_1AFEF5708()
{
  return sub_1AFFC8B48();
}

uint64_t sub_1AFEF572C()
{
  sub_1AFFC8B28();
  return v1;
}

uint64_t sub_1AFEF5764@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  long long v3 = a1[9];
  v11[8] = a1[8];
  v11[9] = v3;
  v11[10] = a1[10];
  long long v4 = a1[5];
  void v11[4] = a1[4];
  v11[5] = v4;
  long long v5 = a1[7];
  v11[6] = a1[6];
  v11[7] = v5;
  long long v6 = a1[1];
  v11[0] = *a1;
  v11[1] = v6;
  long long v7 = a1[3];
  void v11[2] = a1[2];
  void v11[3] = v7;
  sub_1AFEF654C((uint64_t)v11);
  sub_1AFFC8B28();
  uint64_t result = sub_1AFE6C6C0((uint64_t)v11);
  *(void *)a2 = v9;
  *(unsigned char *)(a2 + 8) = v10;
  return result;
}

uint64_t sub_1AFEF57E8(uint64_t a1, _OWORD *a2)
{
  long long v2 = a2[9];
  v8[8] = a2[8];
  v8[9] = v2;
  v8[10] = a2[10];
  long long v3 = a2[5];
  v8[4] = a2[4];
  void v8[5] = v3;
  long long v4 = a2[7];
  _OWORD v8[6] = a2[6];
  v8[7] = v4;
  long long v5 = a2[1];
  v8[0] = *a2;
  v8[1] = v5;
  long long v6 = a2[3];
  void v8[2] = a2[2];
  v8[3] = v6;
  sub_1AFEF654C((uint64_t)v8);
  sub_1AFFC8B38();
  return sub_1AFE6C6C0((uint64_t)v8);
}

uint64_t sub_1AFEF5868()
{
  return sub_1AFFC8B38();
}

uint64_t (*sub_1AFEF58A4(void *a1))()
{
  long long v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1AFFC8B18();
  return sub_1AFD3325C;
}

uint64_t sub_1AFEF5900()
{
  return sub_1AFFC8B48();
}

uint64_t sub_1AFEF5924()
{
  return sub_1AFFC8B28();
}

uint64_t sub_1AFEF5948(_OWORD *a1)
{
  long long v1 = a1[9];
  v7[8] = a1[8];
  v7[9] = v1;
  v7[10] = a1[10];
  long long v2 = a1[5];
  void v7[4] = a1[4];
  void v7[5] = v2;
  long long v3 = a1[7];
  v7[6] = a1[6];
  v7[7] = v3;
  long long v4 = a1[1];
  v7[0] = *a1;
  v7[1] = v4;
  long long v5 = a1[3];
  void v7[2] = a1[2];
  uint64_t v7[3] = v5;
  sub_1AFEF654C((uint64_t)v7);
  sub_1AFFC8B28();
  return sub_1AFE6C6C0((uint64_t)v7);
}

uint64_t sub_1AFEF59BC(uint64_t a1, _OWORD *a2)
{
  long long v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F185D0];
  sub_1AFEF9054(0, &qword_1EB810B98, MEMORY[0x1E4F185D0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  long long v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  char v10 = (char *)v17 - v9;
  sub_1AFEF64CC(a1, (uint64_t)v17 - v9, &qword_1EB810B98, v4);
  long long v11 = a2[9];
  v17[8] = a2[8];
  v17[9] = v11;
  v17[10] = a2[10];
  long long v12 = a2[5];
  v17[4] = a2[4];
  v17[5] = v12;
  long long v13 = a2[7];
  void v17[6] = a2[6];
  v17[7] = v13;
  long long v14 = a2[1];
  v17[0] = *a2;
  v17[1] = v14;
  long long v15 = a2[3];
  void v17[2] = a2[2];
  v17[3] = v15;
  sub_1AFEF64CC((uint64_t)v10, (uint64_t)v7, &qword_1EB810B98, v4);
  sub_1AFEF654C((uint64_t)v17);
  sub_1AFFC8B38();
  sub_1AFEF66A0((uint64_t)v10, &qword_1EB810B98, v4);
  return sub_1AFE6C6C0((uint64_t)v17);
}

uint64_t sub_1AFEF5B18(uint64_t a1)
{
  long long v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F185D0];
  sub_1AFEF9054(0, &qword_1EB810B98, MEMORY[0x1E4F185D0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  sub_1AFEF64CC(a1, (uint64_t)&v6 - v4, &qword_1EB810B98, v2);
  sub_1AFFC8B38();
  return sub_1AFEF66A0(a1, &qword_1EB810B98, v2);
}

uint64_t (*sub_1AFEF5BF4(void *a1))()
{
  long long v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1AFFC8B18();
  return sub_1AFD3325C;
}

uint64_t sub_1AFEF5C50()
{
  return sub_1AFFC8B48();
}

uint64_t sub_1AFEF5C74()
{
  return sub_1AFFC8B28();
}

uint64_t sub_1AFEF5C98(_OWORD *a1)
{
  long long v1 = a1[9];
  v7[8] = a1[8];
  v7[9] = v1;
  v7[10] = a1[10];
  long long v2 = a1[5];
  void v7[4] = a1[4];
  void v7[5] = v2;
  long long v3 = a1[7];
  v7[6] = a1[6];
  v7[7] = v3;
  long long v4 = a1[1];
  v7[0] = *a1;
  v7[1] = v4;
  long long v5 = a1[3];
  void v7[2] = a1[2];
  uint64_t v7[3] = v5;
  sub_1AFEF654C((uint64_t)v7);
  sub_1AFFC8B28();
  return sub_1AFE6C6C0((uint64_t)v7);
}

uint64_t sub_1AFEF5D0C(uint64_t a1, _OWORD *a2)
{
  long long v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1AFEF9054(0, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  long long v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  char v10 = (char *)v17 - v9;
  sub_1AFEF64CC(a1, (uint64_t)v17 - v9, (unint64_t *)&qword_1EB818BA0, v4);
  long long v11 = a2[9];
  v17[8] = a2[8];
  v17[9] = v11;
  v17[10] = a2[10];
  long long v12 = a2[5];
  v17[4] = a2[4];
  v17[5] = v12;
  long long v13 = a2[7];
  void v17[6] = a2[6];
  v17[7] = v13;
  long long v14 = a2[1];
  v17[0] = *a2;
  v17[1] = v14;
  long long v15 = a2[3];
  void v17[2] = a2[2];
  v17[3] = v15;
  sub_1AFEF64CC((uint64_t)v10, (uint64_t)v7, (unint64_t *)&qword_1EB818BA0, v4);
  sub_1AFEF654C((uint64_t)v17);
  sub_1AFFC8B38();
  sub_1AFEF66A0((uint64_t)v10, (unint64_t *)&qword_1EB818BA0, v4);
  return sub_1AFE6C6C0((uint64_t)v17);
}

uint64_t sub_1AFEF5E68(uint64_t a1)
{
  long long v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1AFEF9054(0, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  sub_1AFEF64CC(a1, (uint64_t)&v6 - v4, (unint64_t *)&qword_1EB818BA0, v2);
  sub_1AFFC8B38();
  return sub_1AFEF66A0(a1, (unint64_t *)&qword_1EB818BA0, v2);
}

uint64_t sub_1AFEF5F44(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1AFEF5F8C()
{
  unint64_t result = qword_1EB810BA0;
  if (!qword_1EB810BA0)
  {
    sub_1AFEF9054(255, &qword_1EB810B98, MEMORY[0x1E4F185D0], MEMORY[0x1E4FBB718]);
    sub_1AFEF5F44(&qword_1EB810B90, MEMORY[0x1E4F185D0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB810BA0);
  }
  return result;
}

void sub_1AFEF605C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t), void (*a5)(void))
{
  if (!*a2)
  {
    sub_1AFEF9054(255, a3, a4, MEMORY[0x1E4FBB718]);
    a5();
    unint64_t v7 = sub_1AFFC8BB8();
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1AFEF60E4()
{
  unint64_t result = qword_1EB810BB8;
  if (!qword_1EB810BB8)
  {
    sub_1AFEF9054(255, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    sub_1AFEF5F44(&qword_1EB810BB0, MEMORY[0x1E4F27928]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB810BB8);
  }
  return result;
}

void sub_1AFEF61B4()
{
  if (!qword_1EB810B78)
  {
    uint64_t v0 = MEMORY[0x1E4FBB3D0];
    sub_1AFECDF00(255, &qword_1EB818040);
    sub_1AFEF625C(&qword_1EB810C38, &qword_1EB818040, v0, (void (*)(void))sub_1AFEF62D4);
    unint64_t v1 = sub_1AFFC8BB8();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EB810B78);
    }
  }
}

uint64_t sub_1AFEF625C(unint64_t *a1, unint64_t *a2, uint64_t a3, void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1AFECDF00(255, a2);
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1AFEF62D4()
{
  unint64_t result = qword_1EB810C20;
  if (!qword_1EB810C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB810C20);
  }
  return result;
}

void sub_1AFEF6328()
{
  if (!qword_1EB810B80)
  {
    uint64_t v0 = MEMORY[0x1E4FBB550];
    sub_1AFECDF00(255, &qword_1EB818050);
    sub_1AFEF625C(&qword_1EB810C40, &qword_1EB818050, v0, (void (*)(void))sub_1AFEF63D0);
    unint64_t v1 = sub_1AFFC8BB8();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EB810B80);
    }
  }
}

unint64_t sub_1AFEF63D0()
{
  unint64_t result = qword_1EB810C28;
  if (!qword_1EB810C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB810C28);
  }
  return result;
}

void sub_1AFEF6424()
{
  if (!qword_1EB810B70)
  {
    uint64_t v0 = MEMORY[0x1E4FBB1A0];
    sub_1AFECDF00(255, (unint64_t *)&qword_1EB819C90);
    sub_1AFEF625C(&qword_1EB810C30, (unint64_t *)&qword_1EB819C90, v0, (void (*)(void))sub_1AFD74388);
    unint64_t v1 = sub_1AFFC8BB8();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EB810B70);
    }
  }
}

uint64_t sub_1AFEF64CC(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1AFEF9054(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1AFEF654C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1AFEF66A0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1AFEF9054(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1AFEF6710(uint64_t a1, uint64_t a2)
{
  sub_1AFEF9054(0, &qword_1EB816D80, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t (*sub_1AFEF67A4(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1AFFC8B18();
  return sub_1AFD3325C;
}

uint64_t sub_1AFEF6800()
{
  return sub_1AFFC8B48();
}

uint64_t sub_1AFEF6824()
{
  sub_1AFFC8B28();
  return v1;
}

double sub_1AFEF6858@<D0>(_OWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  long long v3 = a1[9];
  v10[8] = a1[8];
  v10[9] = v3;
  v10[10] = a1[10];
  long long v4 = a1[5];
  v10[4] = a1[4];
  v10[5] = v4;
  long long v5 = a1[7];
  v10[6] = a1[6];
  v10[7] = v5;
  long long v6 = a1[1];
  v10[0] = *a1;
  v10[1] = v6;
  long long v7 = a1[3];
  void v10[2] = a1[2];
  v10[3] = v7;
  sub_1AFEF654C((uint64_t)v10);
  sub_1AFFC8B28();
  sub_1AFE6C6C0((uint64_t)v10);
  double result = *(double *)&v9;
  *a2 = v9;
  return result;
}

uint64_t sub_1AFEF68D4(uint64_t a1, _OWORD *a2)
{
  long long v2 = a2[9];
  v8[8] = a2[8];
  v8[9] = v2;
  v8[10] = a2[10];
  long long v3 = a2[5];
  v8[4] = a2[4];
  void v8[5] = v3;
  long long v4 = a2[7];
  _OWORD v8[6] = a2[6];
  v8[7] = v4;
  long long v5 = a2[1];
  v8[0] = *a2;
  v8[1] = v5;
  long long v6 = a2[3];
  void v8[2] = a2[2];
  v8[3] = v6;
  sub_1AFFC8E38();
  sub_1AFEF654C((uint64_t)v8);
  sub_1AFFC8B38();
  return sub_1AFE6C6C0((uint64_t)v8);
}

uint64_t sub_1AFEF6950()
{
  return sub_1AFFC8B38();
}

uint64_t sub_1AFEF6984(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t (*sub_1AFEF69E4(void *a1))()
{
  long long v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1AFFC8B18();
  return sub_1AFD3325C;
}

uint64_t sub_1AFEF6A40()
{
  return sub_1AFFC8B48();
}

uint64_t sub_1AFEF6A68@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v50 = a1;
  uint64_t v1 = sub_1AFFC9528();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  long long v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1AFFC9A78();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v6 = sub_1AFFCAE58();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v7 = sub_1AFFC9548();
  MEMORY[0x1F4188790](v7 - 8);
  long long v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFEF605C(0, &qword_1EB810B60, &qword_1EB810BC8, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity, (void (*)(void))sub_1AFD5A3E0);
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  uint64_t v10 = *MEMORY[0x1E4F275D0];
  long long v11 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
  v11(v4, v10, v1);
  sub_1AFFC9558();
  uint64_t v12 = sub_1AFEF5F44(&qword_1EB810BC0, (void (*)(uint64_t))type metadata accessor for SymbolEntity);
  uint64_t v49 = MEMORY[0x1B3E8AFB0](v9, v12);
  sub_1AFEF605C(0, &qword_1EB810B68, &qword_1EB810B98, MEMORY[0x1E4F185D0], (void (*)(void))sub_1AFEF5F8C);
  uint64_t v14 = v13;
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  v11(v4, v10, v1);
  sub_1AFFC9558();
  uint64_t v48 = MEMORY[0x1B3E8AFC0](v9);
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  v11(v4, v10, v1);
  sub_1AFFC9558();
  uint64_t v47 = MEMORY[0x1B3E8AFC0](v9);
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  v11(v4, v10, v1);
  sub_1AFFC9558();
  uint64_t v46 = MEMORY[0x1B3E8AFC0](v9);
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  v11(v4, v10, v1);
  sub_1AFFC9558();
  uint64_t v51 = v14;
  uint64_t v45 = MEMORY[0x1B3E8AFC0](v9);
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  v11(v4, v10, v1);
  sub_1AFFC9558();
  uint64_t v44 = MEMORY[0x1B3E8AFC0](v9);
  sub_1AFEF605C(0, &qword_1EB810B58, (unint64_t *)&qword_1EB818BA0, MEMORY[0x1E4F27928], (void (*)(void))sub_1AFEF60E4);
  uint64_t v16 = v15;
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  v11(v4, v10, v1);
  sub_1AFFC9558();
  uint64_t v43 = MEMORY[0x1B3E8AFD0](v9);
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  v11(v4, v10, v1);
  sub_1AFFC9558();
  uint64_t v39 = v16;
  uint64_t v42 = MEMORY[0x1B3E8AFD0](v9);
  uint64_t v35 = 0xD000000000000017;
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  v11(v4, v10, v1);
  sub_1AFFC9558();
  uint64_t v41 = MEMORY[0x1B3E8AFD0](v9);
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  v11(v4, v10, v1);
  sub_1AFFC9558();
  uint64_t v40 = MEMORY[0x1B3E8AFC0](v9);
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  v11(v4, v10, v1);
  sub_1AFFC9558();
  uint64_t v38 = MEMORY[0x1B3E8AFC0](v9);
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  v11(v4, v10, v1);
  sub_1AFFC9558();
  uint64_t v37 = MEMORY[0x1B3E8AFC0](v9);
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  v11(v4, v10, v1);
  sub_1AFFC9558();
  uint64_t v36 = MEMORY[0x1B3E8AFC0](v9);
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  v11(v4, v10, v1);
  sub_1AFFC9558();
  uint64_t v34 = MEMORY[0x1B3E8AFC0](v9);
  sub_1AFEF61B4();
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  v11(v4, v10, v1);
  sub_1AFFC9558();
  uint64_t v33 = MEMORY[0x1B3E8AFF0](v9);
  sub_1AFEF6328();
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  v11(v4, v10, v1);
  sub_1AFFC9558();
  uint64_t v32 = MEMORY[0x1B3E8B000](v9);
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  v11(v4, v10, v1);
  sub_1AFFC9558();
  uint64_t v31 = MEMORY[0x1B3E8B000](v9);
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  v11(v4, v10, v1);
  sub_1AFFC9558();
  uint64_t v35 = MEMORY[0x1B3E8AFF0](v9);
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  v11(v4, v10, v1);
  sub_1AFFC9558();
  uint64_t v30 = MEMORY[0x1B3E8AFF0](v9);
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  v11(v4, v10, v1);
  sub_1AFFC9558();
  uint64_t v51 = MEMORY[0x1B3E8AFC0](v9);
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  v11(v4, v10, v1);
  sub_1AFFC9558();
  uint64_t v17 = MEMORY[0x1B3E8AFD0](v9);
  sub_1AFEF6424();
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  v11(v4, v10, v1);
  sub_1AFFC9558();
  uint64_t result = MEMORY[0x1B3E8AFE0](v9);
  uint64_t v19 = v50;
  uint64_t v20 = v48;
  *uint64_t v50 = v49;
  v19[1] = v20;
  uint64_t v21 = v46;
  void v19[2] = v47;
  v19[3] = v21;
  uint64_t v22 = v44;
  v19[4] = v45;
  v19[5] = v22;
  uint64_t v23 = v42;
  v19[6] = v43;
  v19[7] = v23;
  uint64_t v24 = v40;
  v19[8] = v41;
  v19[9] = v24;
  uint64_t v25 = v37;
  v19[10] = v38;
  v19[11] = v25;
  uint64_t v26 = v34;
  v19[12] = v36;
  v19[13] = v26;
  uint64_t v27 = v32;
  v19[14] = v33;
  v19[15] = v27;
  uint64_t v28 = v35;
  v19[16] = v31;
  v19[17] = v28;
  uint64_t v29 = v51;
  v19[18] = v30;
  v19[19] = v29;
  v19[20] = v17;
  v19[21] = result;
  return result;
}

uint64_t sub_1AFEF7874()
{
  sub_1AFEF8640();

  return sub_1AFFC8978();
}

uint64_t sub_1AFEF78C0(uint64_t a1)
{
  unint64_t v2 = sub_1AFEF8640();

  return MEMORY[0x1F40D3A50](a1, v2);
}

uint64_t sub_1AFEF790C@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E9AF8DD0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1AFFC8FA8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1E9AFC6F0);
  long long v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1AFEF79B4@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E9AF8DD0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1AFFC8FA8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1E9AFC6F0);
  long long v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1AFEF7A5C(uint64_t a1)
{
  unint64_t v2 = sub_1AFEF8410();

  return MEMORY[0x1F40D3BC8](a1, v2);
}

uint64_t sub_1AFEF7AAC@<X0>(uint64_t a1@<X8>)
{
  v25[1] = a1;
  unint64_t v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1AFEF9054(0, &qword_1EB810BA8, MEMORY[0x1E4F18628], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v25 - v4;
  sub_1AFEF9054(0, &qword_1EB816B00, MEMORY[0x1E4F27608], v2);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v25 - v7;
  v25[0] = sub_1AFFC9548();
  uint64_t v9 = *(void *)(v25[0] - 8);
  MEMORY[0x1F4188790](v25[0]);
  uint64_t v10 = type metadata accessor for SymbolEntity();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFEF9054(0, &qword_1EB810BC8, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity, v2);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)v25 - v15;
  uint64_t v17 = sub_1AFFCAE38();
  MEMORY[0x1F4188790](v17 - 8);
  long long v18 = v1[9];
  void v26[8] = v1[8];
  v26[9] = v18;
  v26[10] = v1[10];
  long long v19 = v1[5];
  v26[4] = v1[4];
  v26[5] = v19;
  long long v20 = v1[7];
  v26[6] = v1[6];
  v26[7] = v20;
  long long v21 = v1[1];
  v26[0] = *v1;
  long long v22 = v1[2];
  v26[3] = v1[3];
  v26[1] = v21;
  long long v26[2] = v22;
  sub_1AFFCAE28();
  sub_1AFFCAE18();
  sub_1AFEF654C((uint64_t)v26);
  sub_1AFFC8B28();
  sub_1AFE6C6C0((uint64_t)v26);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v16, 1, v10))
  {
    sub_1AFEF66A0((uint64_t)v16, &qword_1EB810BC8, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity);
  }
  else
  {
    sub_1AFD5BCD0((uint64_t)v16, (uint64_t)v13);
    sub_1AFEF66A0((uint64_t)v16, &qword_1EB810BC8, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity);
    sub_1AFFC8B28();
    sub_1AFEF6984((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for SymbolEntity);
  }
  sub_1AFFCAE08();
  swift_bridgeObjectRelease();
  sub_1AFFCAE18();
  sub_1AFFC9538();
  sub_1AFFC9518();
  (*(void (**)(char *, void, uint64_t, void))(v9 + 56))(v8, 0, 1, v25[0]);
  uint64_t v23 = sub_1AFFC8DB8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v5, 1, 1, v23);
  return sub_1AFFC8DC8();
}

uint64_t sub_1AFEF7F50(uint64_t a1)
{
  unint64_t v2 = sub_1AFEF8758();

  return MEMORY[0x1F40D4970](a1, v2);
}

uint64_t sub_1AFEF7F9C()
{
  uint64_t v14 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27608];
  sub_1AFEF9054(0, &qword_1EB816B00, MEMORY[0x1E4F27608], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v13 = (char *)&v12 - v1;
  uint64_t v2 = sub_1AFFC9528();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1AFFC9A78();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v7 = sub_1AFFCAE58();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v8 = sub_1AFFC9548();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = sub_1AFFC8FA8();
  __swift_allocate_value_buffer(v10, qword_1E9AFC6F0);
  __swift_project_value_buffer(v10, (uint64_t)qword_1E9AFC6F0);
  sub_1AFFCADF8();
  sub_1AFFC9A28();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4F275D0], v2);
  sub_1AFFC9558();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v13, 1, 1, v8);
  sub_1AFEF9054(0, &qword_1E9AFA0E0, v14, MEMORY[0x1E4FBBE00]);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1AFFD53E0;
  sub_1AFFC9518();
  sub_1AFFC9518();
  sub_1AFFC9518();
  sub_1AFFC9518();
  sub_1AFFC9518();
  sub_1AFFC9518();
  sub_1AFFC9518();
  return sub_1AFFC8F88();
}

unint64_t sub_1AFEF8410()
{
  unint64_t result = qword_1EB810BE0;
  if (!qword_1EB810BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB810BE0);
  }
  return result;
}

uint64_t sub_1AFEF8464()
{
  return sub_1AFEF5F44(&qword_1E9AFC708, MEMORY[0x1E4F27990]);
}

unint64_t sub_1AFEF84B0()
{
  unint64_t result = qword_1EB816B88;
  if (!qword_1EB816B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816B88);
  }
  return result;
}

unint64_t sub_1AFEF8508()
{
  unint64_t result = qword_1EB816B98;
  if (!qword_1EB816B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816B98);
  }
  return result;
}

unint64_t sub_1AFEF8560()
{
  unint64_t result = qword_1EB816BB8;
  if (!qword_1EB816BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816BB8);
  }
  return result;
}

unint64_t sub_1AFEF85B8()
{
  unint64_t result = qword_1E9AFC710;
  if (!qword_1E9AFC710)
  {
    sub_1AFEF8838(255, &qword_1E9AFC718, (uint64_t (*)(void))sub_1AFEF8640, MEMORY[0x1E4F18158]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC710);
  }
  return result;
}

unint64_t sub_1AFEF8640()
{
  unint64_t result = qword_1EB810BD8;
  if (!qword_1EB810BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB810BD8);
  }
  return result;
}

uint64_t sub_1AFEF8694()
{
  return MEMORY[0x1E4F18870];
}

unint64_t sub_1AFEF86A4()
{
  unint64_t result = qword_1EB816808;
  if (!qword_1EB816808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816808);
  }
  return result;
}

unint64_t sub_1AFEF86FC()
{
  unint64_t result = qword_1EB816BA0;
  if (!qword_1EB816BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816BA0);
  }
  return result;
}

unint64_t sub_1AFEF8758()
{
  unint64_t result = qword_1EB816BA8;
  if (!qword_1EB816BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816BA8);
  }
  return result;
}

unint64_t sub_1AFEF87B0()
{
  unint64_t result = qword_1E9AFC720;
  if (!qword_1E9AFC720)
  {
    sub_1AFEF8838(255, &qword_1E9AFC728, (uint64_t (*)(void))sub_1AFE6C610, MEMORY[0x1E4F18768]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9AFC720);
  }
  return result;
}

void sub_1AFEF8838(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(uint64_t, ValueMetadata *, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3();
    unint64_t v8 = a4(a1, &type metadata for SymbolQuoteEntity, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1AFEF88A4()
{
  unint64_t result = qword_1EB816BB0;
  if (!qword_1EB816BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB816BB0);
  }
  return result;
}

uint64_t destroy for SymbolQuoteEntity()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

void *initializeWithCopy for SymbolQuoteEntity(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  uint64_t v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  uint64_t v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  uint64_t v11 = a2[15];
  a1[14] = a2[14];
  a1[15] = v11;
  uint64_t v12 = a2[17];
  a1[16] = a2[16];
  a1[17] = v12;
  uint64_t v13 = a2[19];
  a1[18] = a2[18];
  a1[19] = v13;
  uint64_t v14 = a2[21];
  a1[20] = a2[20];
  a1[21] = v14;
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  sub_1AFFC8E48();
  return a1;
}

void *assignWithCopy for SymbolQuoteEntity(void *a1, void *a2)
{
  *a1 = *a2;
  sub_1AFFC8E48();
  swift_release();
  a1[1] = a2[1];
  sub_1AFFC8E48();
  swift_release();
  a1[2] = a2[2];
  sub_1AFFC8E48();
  swift_release();
  a1[3] = a2[3];
  sub_1AFFC8E48();
  swift_release();
  a1[4] = a2[4];
  sub_1AFFC8E48();
  swift_release();
  a1[5] = a2[5];
  sub_1AFFC8E48();
  swift_release();
  a1[6] = a2[6];
  sub_1AFFC8E48();
  swift_release();
  a1[7] = a2[7];
  sub_1AFFC8E48();
  swift_release();
  a1[8] = a2[8];
  sub_1AFFC8E48();
  swift_release();
  a1[9] = a2[9];
  sub_1AFFC8E48();
  swift_release();
  a1[10] = a2[10];
  sub_1AFFC8E48();
  swift_release();
  a1[11] = a2[11];
  sub_1AFFC8E48();
  swift_release();
  a1[12] = a2[12];
  sub_1AFFC8E48();
  swift_release();
  a1[13] = a2[13];
  sub_1AFFC8E48();
  swift_release();
  a1[14] = a2[14];
  sub_1AFFC8E48();
  swift_release();
  a1[15] = a2[15];
  sub_1AFFC8E48();
  swift_release();
  a1[16] = a2[16];
  sub_1AFFC8E48();
  swift_release();
  a1[17] = a2[17];
  sub_1AFFC8E48();
  swift_release();
  a1[18] = a2[18];
  sub_1AFFC8E48();
  swift_release();
  a1[19] = a2[19];
  sub_1AFFC8E48();
  swift_release();
  a1[20] = a2[20];
  sub_1AFFC8E48();
  swift_release();
  a1[21] = a2[21];
  sub_1AFFC8E48();
  swift_release();
  return a1;
}

__n128 __swift_memcpy176_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(__n128 *)(a1 + 112) = result;
  *(_OWORD *)(a1 + 128) = v8;
  return result;
}

_OWORD *assignWithTake for SymbolQuoteEntity(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  swift_release();
  a1[1] = a2[1];
  swift_release();
  swift_release();
  a1[2] = a2[2];
  swift_release();
  swift_release();
  a1[3] = a2[3];
  swift_release();
  swift_release();
  a1[4] = a2[4];
  swift_release();
  swift_release();
  a1[5] = a2[5];
  swift_release();
  swift_release();
  a1[6] = a2[6];
  swift_release();
  swift_release();
  a1[7] = a2[7];
  swift_release();
  swift_release();
  a1[8] = a2[8];
  swift_release();
  swift_release();
  a1[9] = a2[9];
  swift_release();
  swift_release();
  a1[10] = a2[10];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SymbolQuoteEntity(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 176)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SymbolQuoteEntity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 176) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 176) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SymbolQuoteEntity()
{
  return &type metadata for SymbolQuoteEntity;
}

void sub_1AFEF9054(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t type metadata accessor for YahooStockFeedService()
{
  return self;
}

uint64_t sub_1AFEF90DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  sub_1AFEFA680(0);
  sub_1AFD3ACDC();
  uint64_t v5 = sub_1AFFCB068();
  uint64_t v12 = MEMORY[0x1E4FBC868];
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = *(void *)(type metadata accessor for YahooHeadline() - 8);
    uint64_t v8 = v5 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    uint64_t v9 = *(void *)(v7 + 72);
    sub_1AFFC8E38();
    while (1)
    {
      sub_1AFEF92E0(&v12, v8, a2);
      if (v3) {
        break;
      }
      uint64_t v3 = 0;
      v8 += v9;
      if (!--v6)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v10 = v12;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = MEMORY[0x1E4FBC868];
LABEL_7:
    uint64_t v12 = v10;
    sub_1AFEFA708(0, &qword_1EB811438, (uint64_t (*)(uint64_t))sub_1AFE70B9C, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return sub_1AFFCA6F8();
  }
  return result;
}

uint64_t sub_1AFEF92A4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1AFFC9608();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1AFEF92E0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v71 = a2;
  uint64_t v60 = a1;
  uint64_t v4 = sub_1AFFC98F8();
  uint64_t v57 = *(void *)(v4 - 8);
  uint64_t v58 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v59 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1AFFC96E8();
  uint64_t v55 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v56 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a3 + 16);
  if (v8)
  {
    uint64_t v9 = a3 + 32;
    uint64_t v10 = (int *)type metadata accessor for YahooHeadline();
    uint64_t v11 = (uint64_t *)(v71 + v10[9]);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    while (1)
    {
      long long v14 = *(_OWORD *)(v9 + 112);
      long long v68 = *(_OWORD *)(v9 + 96);
      long long v69 = v14;
      uint64_t v70 = *(void *)(v9 + 128);
      long long v15 = *(_OWORD *)(v9 + 48);
      long long v64 = *(_OWORD *)(v9 + 32);
      long long v65 = v15;
      long long v16 = *(_OWORD *)(v9 + 80);
      long long v66 = *(_OWORD *)(v9 + 64);
      long long v67 = v16;
      long long v17 = *(_OWORD *)(v9 + 16);
      long long v62 = *(_OWORD *)v9;
      long long v63 = v17;
      if (v13)
      {
        if (void)v63 == v12 && v13 == *((void *)&v63 + 1) || (sub_1AFFCBCE8()) {
          break;
        }
      }
      v9 += 136;
      if (!--v8) {
        goto LABEL_12;
      }
    }
    sub_1AFD76370((uint64_t)&v62);
    uint64_t v18 = (uint64_t)v56;
    uint64_t v19 = v71;
    (*(void (**)(char *, uint64_t, uint64_t))(v55 + 16))(v56, v71, v6);
    long long v20 = (uint64_t *)(v19 + v10[5]);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    uint64_t v23 = (uint64_t *)(v19 + v10[6]);
    uint64_t v24 = v23[1];
    uint64_t v55 = *v23;
    uint64_t v25 = (uint64_t)v59;
    (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v59, v19 + v10[8], v58);
    objc_allocWithZone((Class)SCWebHeadline);
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    id v26 = sub_1AFEF9E28(v18, v21, v22, v55, v24, v25);
    uint64_t v27 = v60;
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v61[0] = *v27;
    uint64_t v29 = (void *)v61[0];
    *uint64_t v27 = 0x8000000000000000;
    unint64_t v31 = sub_1AFD79E90((unint64_t *)&v62);
    uint64_t v32 = v29[2];
    BOOL v33 = (v30 & 1) == 0;
    uint64_t v34 = v32 + v33;
    if (__OFADD__(v32, v33))
    {
      __break(1u);
    }
    else
    {
      char v35 = v30;
      if (v29[3] >= v34)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1AFEB988C();
          uint64_t v29 = (void *)v61[0];
        }
      }
      else
      {
        sub_1AFEB4890(v34, isUniquelyReferenced_nonNull_native);
        uint64_t v29 = (void *)v61[0];
        unint64_t v36 = sub_1AFD79E90((unint64_t *)&v62);
        if ((v35 & 1) != (v37 & 1))
        {
          sub_1AFFCBD68();
          __break(1u);
          return;
        }
        unint64_t v31 = v36;
      }
      *uint64_t v27 = v29;
      swift_bridgeObjectRelease();
      uint64_t v50 = (void *)*v27;
      sub_1AFFC8E38();
      if ((v35 & 1) == 0)
      {
        sub_1AFFB2748(v31, (uint64_t)&v62, MEMORY[0x1E4FBC860], v50);
        sub_1AFD76370((uint64_t)&v62);
      }
      uint64_t isUniquelyReferenced_nonNull_native = v50[7];
      swift_bridgeObjectRelease();
      uint64_t v29 = *(void **)(isUniquelyReferenced_nonNull_native + 8 * v31);
      char v51 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(isUniquelyReferenced_nonNull_native + 8 * v31) = v29;
      if (v51) {
        goto LABEL_22;
      }
    }
    uint64_t v29 = sub_1AFD36510(0, v29[2] + 1, 1, v29);
    *(void *)(isUniquelyReferenced_nonNull_native + 8 * v31) = v29;
LABEL_22:
    unint64_t v53 = v29[2];
    unint64_t v52 = v29[3];
    if (v53 >= v52 >> 1) {
      *(void *)(isUniquelyReferenced_nonNull_native + 8 * v31) = sub_1AFD36510((void *)(v52 > 1), v53 + 1, 1, v29);
    }
    v61[0] = v26;
    sub_1AFD2D44C((uint64_t)v61);
    uint64_t v54 = *(void *)(isUniquelyReferenced_nonNull_native + 8 * v31);
    *(void *)(v54 + 16) = v53 + 1;
    sub_1AFD2CF70((uint64_t)v61, v54 + 144 * v53 + 32);

    sub_1AFD76408((uint64_t)&v62);
    return;
  }
LABEL_12:
  sub_1AFEFA708(0, (unint64_t *)&qword_1EB81A100, (uint64_t (*)(uint64_t))sub_1AFD3AE64, MEMORY[0x1E4FBBE00]);
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = xmmword_1AFFD0610;
  v61[0] = sub_1AFEA3280(a3);
  uint64_t v39 = MEMORY[0x1E4FBB1A0];
  sub_1AFE5A428(0, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  sub_1AFD371B8();
  uint64_t v40 = sub_1AFFCAD88();
  uint64_t v42 = v41;
  swift_bridgeObjectRelease();
  *(void *)(v38 + 56) = v39;
  unint64_t v43 = sub_1AFD2CE00();
  *(void *)(v38 + 64) = v43;
  *(void *)(v38 + 32) = v40;
  *(void *)(v38 + 40) = v42;
  uint64_t v44 = (uint64_t *)(v71 + *(int *)(type metadata accessor for YahooHeadline() + 36));
  uint64_t v45 = *v44;
  unint64_t v46 = v44[1];
  *(void *)(v38 + 96) = v39;
  *(void *)(v38 + 104) = v43;
  uint64_t v47 = 7104878;
  if (v46) {
    uint64_t v47 = v45;
  }
  unint64_t v48 = 0xE300000000000000;
  if (v46) {
    unint64_t v48 = v46;
  }
  *(void *)(v38 + 72) = v47;
  *(void *)(v38 + 80) = v48;
  sub_1AFD2C4F4();
  sub_1AFFC8E38();
  uint64_t v49 = (void *)sub_1AFFCB638();
  sub_1AFFCB478();
  sub_1AFFCA878();
  swift_bridgeObjectRelease();
}

uint64_t sub_1AFEF9898(void *a1)
{
  sub_1AFEFA708(0, &qword_1E9AFC730, (uint64_t (*)(uint64_t))sub_1AFEFA680, MEMORY[0x1E4FAB088]);
  sub_1AFFC9EF8();
  sub_1AFFC9EA8();
  id v2 = a1;
  uint64_t v3 = sub_1AFFCA798();
  swift_release();
  return v3;
}

uint64_t sub_1AFEF9948(id *a1)
{
  uint64_t v33 = sub_1AFFC98F8();
  uint64_t v3 = *(void *)(v33 - 8);
  MEMORY[0x1F4188790](v33);
  uint64_t v32 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for YahooHeadline();
  uint64_t v5 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  uint64_t v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v34 = *a1;
  sub_1AFEFA680(0);
  sub_1AFD3ACDC();
  uint64_t v8 = sub_1AFFCB068();
  int64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    void v25[2] = v1;
    unint64_t v36 = (unint64_t *)MEMORY[0x1E4FBC860];
    sub_1AFD9D8F0(0, v9, 0);
    unint64_t v10 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v25[1] = v8;
    uint64_t v11 = v8 + v10;
    uint64_t v28 = (void (**)(char *, char *, uint64_t))(v3 + 16);
    uint64_t v26 = *(void *)(v5 + 72);
    uint64_t v27 = (void (**)(char *, uint64_t))(v3 + 8);
    int64_t v31 = v9 - 1;
    while (1)
    {
      uint64_t v30 = v11;
      sub_1AFEFA7A0(v11, (uint64_t)v7);
      uint64_t v12 = *(void *)&v7[*(int *)(v29 + 24) + 8];
      (*v28)(v32, &v7[*(int *)(v29 + 32)], v33);
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      sub_1AFFC8E38();
      uint64_t v13 = (void *)sub_1AFFC9638();
      long long v14 = (void *)sub_1AFFCAE68();
      swift_bridgeObjectRelease();
      if (v12)
      {
        long long v15 = (void *)sub_1AFFCAE68();
        swift_bridgeObjectRelease();
      }
      else
      {
        long long v15 = 0;
      }
      id v16 = objc_allocWithZone((Class)SCWebHeadline);
      long long v17 = v32;
      uint64_t v18 = (void *)sub_1AFFC9838();
      uint64_t v19 = (void *)sub_1AFFCAE68();
      swift_bridgeObjectRelease();
      id v20 = objc_msgSend(v16, sel_initWithURL_title_shortExcerpt_publishDate_sourceName_, v13, v14, v15, v18, v19);

      (*v27)(v17, v33);
      sub_1AFEFA804((uint64_t)v7);
      uint64_t v21 = v36;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1AFD9D8F0(0, v21[2] + 1, 1);
        uint64_t v21 = v36;
      }
      unint64_t v23 = v21[2];
      unint64_t v22 = v21[3];
      if (v23 >= v22 >> 1)
      {
        sub_1AFD9D8F0(v22 > 1, v23 + 1, 1);
        uint64_t v21 = v36;
      }
      id v34 = v20;
      sub_1AFD2D44C((uint64_t)&v34);
      void v21[2] = v23 + 1;
      sub_1AFD2CF70((uint64_t)&v34, (uint64_t)&v21[18 * v23 + 4]);
      if (!v31) {
        break;
      }
      --v31;
      uint64_t v11 = v30 + v26;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v21 = (unint64_t *)MEMORY[0x1E4FBC860];
  }
  id v34 = v21;
  char v35 = 0;
  sub_1AFEFA708(0, &qword_1EB817DB0, (uint64_t (*)(uint64_t))sub_1AFD2D58C, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1AFFCA6F8();
}

uint64_t sub_1AFEF9DE0(uint64_t a1, uint64_t a2)
{
  return sub_1AFEFA18C(a1, a2);
}

uint64_t sub_1AFEF9E04(uint64_t a1, uint64_t a2)
{
  return sub_1AFEFA3FC(a1, a2);
}

id sub_1AFEF9E28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  unint64_t v10 = (void *)sub_1AFFC9638();
  uint64_t v11 = (void *)sub_1AFFCAE68();
  swift_bridgeObjectRelease();
  if (a5)
  {
    uint64_t v12 = (void *)sub_1AFFCAE68();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = 0;
  }
  uint64_t v13 = (void *)sub_1AFFC9838();
  long long v14 = (void *)sub_1AFFCAE68();
  swift_bridgeObjectRelease();
  id v15 = objc_msgSend(v7, sel_initWithURL_title_shortExcerpt_publishDate_sourceName_, v10, v11, v12, v13, v14);

  uint64_t v16 = sub_1AFFC98F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(a6, v16);
  uint64_t v17 = sub_1AFFC96E8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(a1, v17);
  return v15;
}

id sub_1AFEF9FAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for YahooBaseOperationFactory();
  v22[3] = v6;
  v22[4] = &off_1F0877A08;
  v22[0] = a2;
  uint64_t v7 = (objc_class *)type metadata accessor for YahooNewsOperation();
  uint64_t v8 = (char *)objc_allocWithZone(v7);
  uint64_t v9 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v6);
  double v10 = MEMORY[0x1F4188790](v9);
  uint64_t v12 = (uint64_t *)((char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v13 + 16))(v12, v10);
  uint64_t v14 = *v12;
  v21[3] = v6;
  v21[4] = &off_1F0877A08;
  v21[0] = v14;
  *(void *)&v8[qword_1E9AF9D70] = a1;
  sub_1AFD2CEB0((uint64_t)v21, (uint64_t)&v8[qword_1E9AF9D78]);
  id v15 = &v8[qword_1E9AF9D80];
  uint64_t v16 = sub_1AFFC9E18();
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v15, a3, v16);
  v20.receiver = v8;
  v20.super_class = v7;
  id v18 = objc_msgSendSuper2(&v20, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(a3, v16);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  return v18;
}

uint64_t sub_1AFEFA18C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1AFFC9E18();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 24);
  sub_1AFE5A428(0, (unint64_t *)&qword_1EB81A0E0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1AFFD05F0;
  *(void *)(v11 + 32) = v10;
  *(void *)(v11 + 40) = v9;
  sub_1AFD2CEB0(v2 + 16, (uint64_t)v24);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v6 + 16))(v8, a2, v5);
  uint64_t v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v24, v25);
  double v13 = MEMORY[0x1F4188790](v12);
  id v15 = (uint64_t *)&v22[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(uint64_t *, double))(v16 + 16))(v15, v13);
  uint64_t v17 = *v15;
  sub_1AFFC8E38();
  id v18 = sub_1AFEF9FAC(v11, v17, (uint64_t)v8);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  id v23 = v18;
  sub_1AFEFA680(0);
  sub_1AFFCA7C8();
  uint64_t v19 = (void *)sub_1AFFCA5E8();
  sub_1AFD2D58C();
  uint64_t v20 = sub_1AFFCA668();

  swift_release();
  return v20;
}

uint64_t sub_1AFEFA3FC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1AFFC9E18();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_1AFEA3280(a1);
  sub_1AFD2CEB0(v2 + 16, (uint64_t)v21);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v6 + 16))(v8, a2, v5);
  uint64_t v10 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v21, v22);
  double v11 = MEMORY[0x1F4188790](v10);
  double v13 = (uint64_t *)&v19[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(uint64_t *, double))(v14 + 16))(v13, v11);
  id v15 = sub_1AFEF9FAC(v9, *v13, (uint64_t)v8);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  id v20 = v15;
  sub_1AFEFA680(0);
  sub_1AFFCA7C8();
  *(void *)(swift_allocObject() + 16) = a1;
  sub_1AFFC8E38();
  uint64_t v16 = (void *)sub_1AFFCA5E8();
  sub_1AFE70B9C();
  uint64_t v17 = sub_1AFFCA668();

  swift_release();
  swift_release();

  return v17;
}

uint64_t sub_1AFEFA650()
{
  return sub_1AFEF9898(*(void **)(v0 + 16));
}

void sub_1AFEFA680(uint64_t a1)
{
}

uint64_t sub_1AFEFA6B4()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1AFEFA6EC(uint64_t a1)
{
  return sub_1AFEF90DC(a1, *(void *)(v1 + 16));
}

void sub_1AFEFA708(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1AFEFA770()
{
  return sub_1AFEF9898(*(void **)(v0 + 16));
}

uint64_t sub_1AFEFA7A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for YahooHeadline();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AFEFA804(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for YahooHeadline();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1AFEFA864@<X0>(uint64_t *a1@<X8>)
{
  return sub_1AFEF92A4(a1);
}

uint64_t type metadata accessor for SDSStockMetadataOperation()
{
  uint64_t result = qword_1EB81B510;
  if (!qword_1EB81B510) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1AFEFA8C8()
{
  uint64_t result = sub_1AFFC98F8();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1AFFC9E18();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_initClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

void sub_1AFEFA9B4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v13 = *(void *)&v2[qword_1EB81B500];
  swift_bridgeObjectRetain_n();
  sub_1AFFB6B00(&v13);
  swift_bridgeObjectRelease();
  sub_1AFD48B18(0, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  sub_1AFD47F54((unint64_t *)&qword_1EB818038);
  uint64_t v6 = sub_1AFFCB3B8();
  swift_release();
  id v7 = v3;
  sub_1AFEFBAE4(v6);
  swift_bridgeObjectRelease();

  unint64_t v8 = (void *)sub_1AFFCA5E8();
  sub_1AFD8169C();
  sub_1AFFCA548();
  swift_bridgeObjectRelease();

  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  *(void *)(v9 + 24) = a2;
  sub_1AFFC8E48();
  uint64_t v10 = (void *)sub_1AFFCA5E8();
  sub_1AFFCA678();
  swift_release();
  swift_release();

  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = a2;
  sub_1AFFC8E48();
  uint64_t v12 = (void *)sub_1AFFCA5E8();
  sub_1AFFCA6B8();
  swift_release();
  swift_release();
  swift_release();
}

uint64_t sub_1AFEFABDC(uint64_t a1, void (*a2)(uint64_t, void))
{
  uint64_t v3 = MEMORY[0x1E4FBC868];
  uint64_t v7 = MEMORY[0x1E4FBC868];
  uint64_t v4 = *(void *)(*(void *)a1 + 16);
  if (v4)
  {
    sub_1AFFC8E38();
    uint64_t v5 = 0;
    do
    {
      ++v5;
      sub_1AFFC8E38();
      sub_1AFFCA4D8();
      swift_bridgeObjectRelease();
    }
    while (v4 != v5);
    swift_bridgeObjectRelease();
    uint64_t v3 = v7;
  }
  a2(v3, 0);
  return swift_bridgeObjectRelease();
}

void sub_1AFEFACD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5, uint64_t a6)
{
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a2;
  __swift_project_boxed_opaque_existential_1(&a5[qword_1EB81B508], *(void *)&a5[qword_1EB81B508 + 24]);
  sub_1AFEFBD48(0, (unint64_t *)&qword_1EB81A0E8, (uint64_t (*)(uint64_t))sub_1AFD306F8, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AFFD0610;
  *(void *)(inited + 32) = 0x6C6F626D7973;
  *(void *)(inited + 40) = 0xE600000000000000;
  sub_1AFD48B18(0, (unint64_t *)&qword_1EB819DC0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  sub_1AFD47F54((unint64_t *)&qword_1EB819DD0);
  sub_1AFFC8E48();
  *(void *)(inited + 48) = sub_1AFFCAD88();
  *(void *)(inited + 56) = v14;
  *(void *)(inited + 64) = 0x74655361746164;
  *(void *)(inited + 72) = 0xE700000000000000;
  *(void *)(inited + 80) = 0x65746F7571;
  *(void *)(inited + 88) = 0xE500000000000000;
  sub_1AFDF9B10(inited);
  id v15 = sub_1AFEC5E2C(2);
  swift_bridgeObjectRelease();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a6;
  uint64_t v17 = (void *)((char *)v15 + *(void *)(qword_1EB831B00 + (*MEMORY[0x1E4FBC8C8] & *v15) + 16));
  uint64_t v18 = *v17;
  *uint64_t v17 = (uint64_t)sub_1AFEFBC9C;
  v17[1] = v16;
  sub_1AFFC8E38();
  sub_1AFD309C0(v18);
  uint64_t v19 = (void *)swift_allocObject();
  void v19[2] = a3;
  v19[3] = a4;
  v19[4] = a5;
  v19[5] = sub_1AFD47F4C;
  v19[6] = v12;
  id v20 = v15;
  sub_1AFFC8E48();
  uint64_t v21 = a5;
  sub_1AFFC9F18();

  objc_msgSend(v20, sel_start);
}

uint64_t sub_1AFEFAFBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_1AFD30A1C();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFEFBD48(0, (unint64_t *)&qword_1EB818570, (uint64_t (*)(uint64_t))sub_1AFD30A1C, MEMORY[0x1E4FAB068]);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (id *)((char *)&v28 - v12);
  sub_1AFD30ACC(a2, (uint64_t)&v28 - v12);
  if (swift_getEnumCaseMultiPayload() == 1)
  {

    sub_1AFD31570();
    id v15 = (void *)(a4 + *(int *)(v14 + 48));
    uint64_t v16 = sub_1AFFCA368();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(a4, a1, v16);
    *id v15 = *(void *)(a3 + 16);
    v15[1] = 0;
    uint64_t v17 = MEMORY[0x1E4FBC860];
    uint64_t v15[2] = MEMORY[0x1E4FBC860];
    v15[3] = v17;
    type metadata accessor for NetworkEvent();
    v15[4] = 0;
    uint64_t v15[5] = 0;
  }
  else
  {
    sub_1AFD480A0((uint64_t)v13, (uint64_t)v10);
    uint64_t v18 = sub_1AFFCA368();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(a4, a1, v18);
    uint64_t v19 = *(void *)(a3 + 16);
    sub_1AFD48B18(0, &qword_1EB818560, (uint64_t)&type metadata for SDSQuoteResponse, MEMORY[0x1E4FAAE30]);
    sub_1AFFCA3A8();
    uint64_t v20 = v28;
    sub_1AFD30C94(v29, v30);
    uint64_t v21 = *(void *)(v20 + 16);
    swift_bridgeObjectRelease();
    sub_1AFFCA3A8();
    swift_bridgeObjectRelease();
    uint64_t v22 = v30;
    if (v30)
    {
      uint64_t v23 = v29;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v23 = 0;
    }
    sub_1AFD31570();
    uint64_t v25 = (void *)(a4 + *(int *)(v24 + 48));
    sub_1AFD489D0((uint64_t)v10);
    void *v25 = v19;
    v25[1] = v21;
    uint64_t v26 = MEMORY[0x1E4FBC860];
    void v25[2] = MEMORY[0x1E4FBC860];
    void v25[3] = v26;
    v25[4] = v23;
    void v25[5] = v22;
    type metadata accessor for NetworkEvent();
  }
  return swift_storeEnumTagMultiPayload();
}

void sub_1AFEFB288(uint64_t a1, void (*a2)(void *), uint64_t a3, uint64_t a4, void (*a5)(void *), uint64_t a6)
{
  sub_1AFD30A1C();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFEFBD48(0, (unint64_t *)&qword_1EB818570, (uint64_t (*)(uint64_t))sub_1AFD30A1C, MEMORY[0x1E4FAB068]);
  MEMORY[0x1F4188790](v13);
  id v15 = (void **)((char *)v56 - v14);
  sub_1AFD30ACC(a1, (uint64_t)v56 - v14);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = *v15;
    a2(v16);

    return;
  }
  uint64_t v59 = a6;
  uint64_t v60 = a5;
  sub_1AFD480A0((uint64_t)v15, (uint64_t)v12);
  sub_1AFD48B18(0, &qword_1EB818560, (uint64_t)&type metadata for SDSQuoteResponse, MEMORY[0x1E4FAAE30]);
  sub_1AFFCA3A8();
  uint64_t v17 = v89[0];
  uint64_t v57 = v89[2];
  uint64_t v58 = v89[1];
  v56[1] = v89[4];
  v56[2] = v89[3];
  v56[0] = v89[5];
  uint64_t v18 = *(void *)(v89[0] + 16);
  if (!v18)
  {
    sub_1AFFC8E38();
    uint64_t v20 = (void *)MEMORY[0x1E4FBC868];
LABEL_28:
    swift_bridgeObjectRelease_n();
    sub_1AFD30C94(v58, v57);
    v60(v20);
    swift_bridgeObjectRelease();
    sub_1AFD489D0((uint64_t)v12);
    return;
  }
  uint64_t v19 = &v89[13];
  swift_bridgeObjectRetain_n();
  uint64_t v20 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v21 = v18 - 1;
  uint64_t v22 = 32;
  uint64_t v62 = v17;
  long long v63 = v12;
  uint64_t v61 = &v89[13];
  while (1)
  {
    memcpy(v89, (const void *)(v17 + v22), 0x308uLL);
    uint64_t v23 = v89[10];
    if (!v89[10]) {
      goto LABEL_24;
    }
    uint64_t v65 = v21;
    uint64_t v71 = v89[9];
    uint64_t v24 = v89[90];
    uint64_t v25 = v89[91];
    if (v89[12])
    {
      uint64_t v66 = v89[12];
      uint64_t v67 = v89[11];
    }
    else
    {
      sub_1AFFC8E38();
      uint64_t v66 = v25;
      uint64_t v67 = v24;
    }
    uint64_t v64 = v22;
    char v87 = byte_1AFFE2502[SLOBYTE(v89[92])];
    sub_1AFD48A90((uint64_t)v19, (uint64_t)v88);
    int v26 = sub_1AFD48B64((uint64_t)v88);
    uint64_t v72 = v24;
    uint64_t v27 = v25;
    if (v26 == 1)
    {
      uint64_t v69 = 0;
      uint64_t v70 = 0;
      uint64_t v28 = 0;
      uint64_t v29 = 0;
    }
    else
    {
      uint64_t v70 = v88[69];
      uint64_t v29 = v88[70];
      sub_1AFD48A90((uint64_t)v19, (uint64_t)&v73);
      uint64_t v69 = v82;
      uint64_t v28 = v83;
      sub_1AFFC8E38();
      sub_1AFFC8E38();
    }
    uint64_t v68 = v89[86];
    uint64_t v30 = v89[87];
    uint64_t v31 = v89[88];
    uint64_t v32 = v89[89];
    swift_bridgeObjectRetain_n();
    sub_1AFD48104((uint64_t)v89);
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    sub_1AFFC8E38();
    uint64_t v55 = v32;
    uint64_t v33 = v72;
    sub_1AFD789F8(v72, v27, v67, v66, v71, v23, &v87, v68, (uint64_t)&v73, v30, v31, v55, v70, v29, v69, v28);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v86 = v20;
    unint64_t v36 = sub_1AFD79CC8(v33, v27);
    uint64_t v37 = v20[2];
    BOOL v38 = (v35 & 1) == 0;
    uint64_t v39 = v37 + v38;
    if (__OFADD__(v37, v38)) {
      break;
    }
    char v40 = v35;
    if (v20[3] >= v39)
    {
      uint64_t v12 = v63;
      uint64_t v22 = v64;
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v21 = v65;
        if ((v35 & 1) == 0) {
          goto LABEL_21;
        }
      }
      else
      {
        sub_1AFEB8788();
        uint64_t v21 = v65;
        if ((v40 & 1) == 0) {
          goto LABEL_21;
        }
      }
    }
    else
    {
      sub_1AFEB2B3C(v39, isUniquelyReferenced_nonNull_native);
      unint64_t v41 = sub_1AFD79CC8(v33, v27);
      uint64_t v12 = v63;
      uint64_t v22 = v64;
      if ((v40 & 1) != (v42 & 1)) {
        goto LABEL_32;
      }
      unint64_t v36 = v41;
      uint64_t v21 = v65;
      if ((v40 & 1) == 0)
      {
LABEL_21:
        uint64_t v20 = v86;
        v86[(v36 >> 6) + 8] |= 1 << v36;
        uint64_t v50 = (uint64_t *)(v20[6] + 16 * v36);
        *uint64_t v50 = v33;
        v50[1] = v27;
        uint64_t v51 = v20[7] + 136 * v36;
        *(_OWORD *)uint64_t v51 = v73;
        *(_OWORD *)(v51 + 64) = v77;
        *(_OWORD *)(v51 + 48) = v76;
        *(_OWORD *)(v51 + 32) = v75;
        *(_OWORD *)(v51 + 16) = v74;
        *(void *)(v51 + 128) = v81;
        *(_OWORD *)(v51 + 112) = v80;
        *(_OWORD *)(v51 + 96) = v79;
        *(_OWORD *)(v51 + 80) = v78;
        uint64_t v52 = v20[2];
        BOOL v53 = __OFADD__(v52, 1);
        uint64_t v54 = v52 + 1;
        if (v53) {
          goto LABEL_31;
        }
        _OWORD v20[2] = v54;
        sub_1AFFC8E38();
        goto LABEL_23;
      }
    }
    uint64_t v20 = v86;
    uint64_t v43 = v86[7] + 136 * v36;
    v84[0] = *(_OWORD *)v43;
    long long v44 = *(_OWORD *)(v43 + 64);
    long long v46 = *(_OWORD *)(v43 + 16);
    long long v45 = *(_OWORD *)(v43 + 32);
    v84[3] = *(_OWORD *)(v43 + 48);
    v84[4] = v44;
    v84[1] = v46;
    v84[2] = v45;
    long long v48 = *(_OWORD *)(v43 + 96);
    long long v47 = *(_OWORD *)(v43 + 112);
    long long v49 = *(_OWORD *)(v43 + 80);
    uint64_t v85 = *(void *)(v43 + 128);
    v84[6] = v48;
    v84[7] = v47;
    v84[5] = v49;
    sub_1AFD76408((uint64_t)v84);
    *(_OWORD *)(v43 + 80) = v78;
    *(_OWORD *)(v43 + 96) = v79;
    *(_OWORD *)(v43 + 112) = v80;
    *(void *)(v43 + 128) = v81;
    *(_OWORD *)(v43 + 16) = v74;
    *(_OWORD *)(v43 + 32) = v75;
    *(_OWORD *)(v43 + 48) = v76;
    *(_OWORD *)(v43 + 64) = v77;
    *(_OWORD *)uint64_t v43 = v73;
LABEL_23:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1AFD4859C((uint64_t)v89);
    uint64_t v19 = v61;
    uint64_t v17 = v62;
LABEL_24:
    if (!v21)
    {
      swift_bridgeObjectRelease();
      goto LABEL_28;
    }
    --v21;
    v22 += 776;
  }
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  sub_1AFFCBD68();
  __break(1u);
}

void sub_1AFEFB850()
{
}

uint64_t sub_1AFEFB880()
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + qword_1EB81B508);
  uint64_t v1 = v0 + qword_1E9AFC738;
  uint64_t v2 = sub_1AFFC98F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + qword_1E9AFC740;
  uint64_t v4 = sub_1AFFC9E18();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);

  return v5(v3, v4);
}

uint64_t sub_1AFEFB950(uint64_t a1)
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + qword_1EB81B508);
  uint64_t v2 = a1 + qword_1E9AFC738;
  uint64_t v3 = sub_1AFFC98F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  uint64_t v4 = a1 + qword_1E9AFC740;
  uint64_t v5 = sub_1AFFC9E18();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t sub_1AFEFBA24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  sub_1AFFC8E48();
  sub_1AFEFA9B4((uint64_t)sub_1AFD3AB90, v4);

  return swift_release();
}

uint64_t sub_1AFEFBAA4()
{
  return type metadata accessor for SDSStockMetadataOperation();
}

uint64_t sub_1AFEFBAAC()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1AFEFBAE4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v6 = MEMORY[0x1E4FBC860];
    sub_1AFFCB8B8();
    uint64_t v4 = a1 + 32;
    sub_1AFEFBD48(0, &qword_1E9AFA228, (uint64_t (*)(uint64_t))sub_1AFD8169C, MEMORY[0x1E4FAB088]);
    do
    {
      v4 += 8;
      MEMORY[0x1F4188790](v5);
      swift_allocObject();
      sub_1AFFC8E38();
      sub_1AFFCA758();
      swift_bridgeObjectRelease();
      sub_1AFFCB888();
      sub_1AFFCB8C8();
      sub_1AFFCB8D8();
      uint64_t v5 = sub_1AFFCB898();
      --v2;
    }
    while (v2);
    return v6;
  }
  return result;
}

uint64_t sub_1AFEFBC40(uint64_t a1)
{
  return sub_1AFEFABDC(a1, *(void (**)(uint64_t, void))(v1 + 16));
}

void sub_1AFEFBC5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1AFEFACD4(a1, a2, a3, a4, *(char **)(v4 + 16), *(void *)(v4 + 24));
}

uint64_t sub_1AFEFBC64()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1AFEFBC9C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 16);
  v5[2] = a1;
  _OWORD v5[3] = v3;
  return sub_1AFF9DE90((void (*)(uint64_t))sub_1AFEFBDAC, (uint64_t)v5, a2);
}

uint64_t sub_1AFEFBCF0()
{
  swift_release();

  swift_release();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

void sub_1AFEFBD38(uint64_t a1)
{
  sub_1AFEFB288(a1, *(void (**)(void *))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void (**)(void *))(v1 + 40), *(void *)(v1 + 48));
}

void sub_1AFEFBD48(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1AFEFBDAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1AFEFAFBC(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_1AFEFBDD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AFEFBDE4(a1, a3, a4);
}

uint64_t sub_1AFEFBDE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *(void *)(a2 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](a1);
  uint64_t v11 = *(void *)(*MEMORY[0x1E4FBC5F0] + v10 + 8);
  sub_1AFFCA7F8();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v4, a2);
  unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v13 = (char *)swift_allocObject();
  *((void *)v13 + 2) = a2;
  *((void *)v13 + 3) = v11;
  *((void *)v13 + 4) = a3;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v13[v12], (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a2);
  *(void *)&v13[(v9 + v12 + 7) & 0xFFFFFFFFFFFFFFF8] = a1;
  sub_1AFFC8E48();
  return sub_1AFFCA808();
}

uint64_t sub_1AFEFBF8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  sub_1AFEFC320(a1, a2);
  return v4;
}

uint64_t sub_1AFEFBFDC(uint64_t a1)
{
  double v1 = MEMORY[0x1F4188790](a1);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t, double))(v2 + 8))(v6, v3, v2, v1);
  memcpy(v5, v6, sizeof(v5));
  swift_getAtKeyPath();
  return sub_1AFD55D10((uint64_t)v6);
}

uint64_t sub_1AFEFC084()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = (*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);
  swift_release();

  return MEMORY[0x1F4186498](v0, v5 + 8, v4);
}

uint64_t sub_1AFEFC120()
{
  return sub_1AFEFBFDC(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80)));
}

uint64_t sub_1AFEFC18C()
{
  return swift_release();
}

uint64_t sub_1AFEFC1D8()
{
  sub_1AFFCA508();
  swift_release();
  return v1;
}

uint64_t sub_1AFEFC214()
{
  sub_1AFFCA508();
  swift_release();
  return v1;
}

uint64_t sub_1AFEFC250()
{
  sub_1AFFC9C48();
  sub_1AFFC9C28();
  if (qword_1EB819AE0 != -1) {
    swift_once();
  }
  sub_1AFFC9C18();
  swift_release();
  if (v5)
  {
    char v1 = 0;
  }
  else
  {
    uint64_t v3 = v0[11];
    uint64_t v2 = v0[12];
    __swift_project_boxed_opaque_existential_1(v0 + 8, v3);
    char v1 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v3, v2);
  }
  return v1 & 1;
}

void *sub_1AFEFC320(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v13 = *v2;
  uint64_t v4 = sub_1AFFC9E08();
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = sub_1AFFCA2F8();
  MEMORY[0x1F4188790](v5);
  *(void *)&v15[0] = MEMORY[0x1E4FBC860];
  sub_1AFEFC85C((unint64_t *)&unk_1EB81ABD0, MEMORY[0x1E4FAACC8]);
  uint64_t v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAACC8];
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB320];
  sub_1AFEFC8A4(0, &qword_1EB81AC50, MEMORY[0x1E4FAACC8], MEMORY[0x1E4FBB320]);
  sub_1AFEFC908((unint64_t *)&qword_1EB81AC58, &qword_1EB81AC50, v6);
  sub_1AFFCB738();
  sub_1AFEFC694();
  swift_allocObject();
  v2[7] = sub_1AFFC9F68();
  sub_1AFD2CEB0(a1, (uint64_t)(v2 + 2));
  sub_1AFD2CEB0(a2, (uint64_t)(v2 + 8));
  sub_1AFD2CEB0(a2, (uint64_t)v15);
  uint64_t v8 = swift_allocObject();
  sub_1AFD80454(v15, v8 + 16);
  *(void *)(v8 + 56) = v13;
  *(void *)&v15[0] = MEMORY[0x1E4FBC860];
  sub_1AFEFC85C((unint64_t *)&unk_1EB81ABB0, MEMORY[0x1E4FAA910]);
  uint64_t v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAA910];
  sub_1AFEFC8A4(0, (unint64_t *)&unk_1EB81AC20, MEMORY[0x1E4FAA910], v7);
  sub_1AFEFC908((unint64_t *)&qword_1EB81AC30, (unint64_t *)&unk_1EB81AC20, v9);
  sub_1AFFCB738();
  sub_1AFEFC8A4(0, &qword_1EB819BB8, (uint64_t (*)(uint64_t))sub_1AFEFC96C, MEMORY[0x1E4FAAFF0]);
  swift_allocObject();
  uint64_t v10 = sub_1AFFCA528();
  __swift_destroy_boxed_opaque_existential_1(a2);
  __swift_destroy_boxed_opaque_existential_1(a1);
  v3[13] = v10;
  return v3;
}

void sub_1AFEFC694()
{
  if (!qword_1EB819B80)
  {
    unint64_t v0 = sub_1AFFC9F88();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB819B80);
    }
  }
}

uint64_t sub_1AFEFC6FC(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v2 = v1;
  sub_1AFEFCA30(v3);
  memcpy(v5, v6, sizeof(v5));
  sub_1AFEFF0BC(0, &qword_1EB819B98, (uint64_t)&type metadata for AppConfiguration, MEMORY[0x1E4FAAA48]);
  swift_allocObject();
  sub_1AFDB3690((uint64_t)v6);
  *uint64_t v2 = sub_1AFFC9FC8();
  memcpy(v5, v6, sizeof(v5));
  sub_1AFEFF0BC(0, &qword_1EB819BA0, (uint64_t)&type metadata for AppConfiguration, MEMORY[0x1E4FAAA60]);
  swift_allocObject();
  uint64_t result = sub_1AFFCA038();
  v2[1] = result;
  return result;
}

uint64_t sub_1AFEFC818()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_1AFEFC850()
{
  return sub_1AFEFC6FC(v0 + 16);
}

uint64_t sub_1AFEFC85C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1AFEFC8A4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1AFEFC908(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1AFEFC8A4(255, a2, a3, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1AFEFC96C()
{
  if (!qword_1EB819B90)
  {
    sub_1AFEFF0BC(255, &qword_1EB819B98, (uint64_t)&type metadata for AppConfiguration, MEMORY[0x1E4FAAA48]);
    sub_1AFEFF0BC(255, &qword_1EB819BA0, (uint64_t)&type metadata for AppConfiguration, MEMORY[0x1E4FAAA60]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB819B90);
    }
  }
}

void sub_1AFEFCA30(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_1AFFC9C48();
  sub_1AFFC9C28();
  if (qword_1EB819AE0 != -1) {
    swift_once();
  }
  sub_1AFFC9C18();
  swift_release();
  if (v34[0])
  {
    sub_1AFD2C4F4();
    uint64_t v5 = (void *)sub_1AFFCB638();
    sub_1AFFCB478();
LABEL_6:
    sub_1AFFCA878();

    long long v30 = 0u;
    long long v29 = 0u;
    uint64_t v28 = 0;
    long long v27 = 0u;
    long long v26 = 0u;
    long long v25 = 0u;
    long long v24 = 0u;
    uint64_t v22 = 2;
    long long v23 = 0u;
    sub_1AFECDDF0(v32);
    sub_1AFEFF03C((uint64_t)v32, (uint64_t)v21, &qword_1EB819618, (uint64_t)&type metadata for PaidBundleConfiguration);
    uint64_t v17 = 1;
    long long v18 = 0u;
    long long v19 = 0u;
    memset(v20, 0, sizeof(v20));
    sub_1AFECDEAC((uint64_t)v31);
    sub_1AFEFF03C((uint64_t)v31, (uint64_t)v16, &qword_1EB8197B8, (uint64_t)&type metadata for ArticleScoringConfiguration);
    sub_1AFECDED0(v34);
    sub_1AFEFF03C((uint64_t)v34, (uint64_t)v33, &qword_1EB819838, (uint64_t)&type metadata for NewsPersonalizationTreatment);
    sub_1AFF76AC8(2, 0, 0, 0, 1, 0, 1, 0, 0.0, v9, v10, v11, v12, v13, v14, v15, 1, 0.0, 1,
      0,
      1,
      0,
      1,
      0,
      1,
      0,
      2,
      2,
      0.0,
      1,
      2,
      2,
      0,
      1,
      0,
      1,
      0.0,
      1,
      0.0,
      1,
      0.0,
      1,
      0.0,
      1,
      0.0,
      1,
      0,
      0,
      0.0,
      1,
      0.0,
      1,
      0.0,
      1,
      0.0,
      1,
      0.0,
      1,
      0.0,
      1,
      0.0,
      1,
      0.0);
    return;
  }
  uint64_t v6 = v2[3];
  uint64_t v7 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v6);
  (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v7 + 16))(v32, v6, v7);
  sub_1AFEFF03C((uint64_t)v32, (uint64_t)v33, (unint64_t *)&qword_1EB819008, (uint64_t)&type metadata for AppConfiguration);
  sub_1AFEFF03C((uint64_t)v33, (uint64_t)v34, (unint64_t *)&qword_1EB819008, (uint64_t)&type metadata for AppConfiguration);
  int v8 = sub_1AFD48F48((uint64_t)v34);
  sub_1AFD2C4F4();
  uint64_t v5 = (void *)sub_1AFFCB638();
  sub_1AFFCB478();
  if (v8 == 1) {
    goto LABEL_6;
  }
  sub_1AFFCA878();

  memcpy(v4, v34, 0x10BAuLL);
}

uint64_t sub_1AFEFD088(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  sub_1AFFC9C48();
  sub_1AFFC9C28();
  if (qword_1EB819AE0 != -1) {
    swift_once();
  }
  sub_1AFFC9C18();
  swift_release();
  if ((v9[0] & 1) != 0
    || (uint64_t v2 = v1[11],
        uint64_t v3 = v1[12],
        __swift_project_boxed_opaque_existential_1(v1 + 8, v2),
        ((*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3) & 1) == 0))
  {
    sub_1AFD2C4F4();
    uint64_t v6 = (void *)sub_1AFFCB638();
    sub_1AFFCB478();
    sub_1AFFCA878();

    v9[0] = 0x68736572666572;
    v9[1] = 0xE700000000000000;
    uint64_t v5 = sub_1AFFC9F78();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1AFD2C4F4();
    uint64_t v4 = (void *)sub_1AFFCB638();
    sub_1AFFCB478();
    sub_1AFFCA878();

    sub_1AFFCA508();
    swift_release();
    sub_1AFFC9FD8();
    swift_release();
    memcpy(v8, v9, sizeof(v8));
    sub_1AFEFF0BC(0, &qword_1EB819BD0, (uint64_t)&type metadata for AppConfiguration, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return sub_1AFFCA6F8();
  }
  return v5;
}

uint64_t sub_1AFEFD2F0()
{
  uint64_t v0 = sub_1AFFC9F78();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1AFEFD360()
{
  return sub_1AFFCA658();
}

uint64_t sub_1AFEFD3D4(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 17232) = a2;
  *(void *)(v2 + 17224) = a1;
  return MEMORY[0x1F4188298](sub_1AFEFD3F8, 0, 0);
}

uint64_t sub_1AFEFD3F8()
{
  uint64_t v1 = (void *)v0[2154];
  uint64_t v2 = v1[5];
  uint64_t v3 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v2);
  v0[2155] = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[2156] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1AFEFD4D8;
  return MEMORY[0x1F415EBC8](v0 + 2);
}

uint64_t sub_1AFEFD4D8()
{
  *(void *)(*(void *)v1 + 17256) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1AFEFD918;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1AFEFD5F4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1AFEFD5F4(uint64_t a1)
{
  double v10 = v1;
  MEMORY[0x1F4188790](a1);
  uint64_t v2 = (void *)v1[2154];
  memcpy(v1 + 1610, v1 + 2, 0x10BAuLL);
  uint64_t v3 = v2 + 8;
  uint64_t v4 = v2[11];
  uint64_t v5 = v2[12];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  memcpy(__dst, v1 + 1610, 0x10BAuLL);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 24))(__dst, v4, v5);
  sub_1AFFCB2F8();
  v1[2158] = sub_1AFFCB2E8();
  uint64_t v7 = sub_1AFFCB2A8();
  return MEMORY[0x1F4188298](sub_1AFEFD720, v7, v6);
}

uint64_t sub_1AFEFD720()
{
  uint64_t v1 = v0[2154];
  swift_release();
  v0[2159] = *(void *)(v1 + 104);
  sub_1AFFCA508();
  swift_release();
  memcpy(v0 + 538, v0 + 1610, 0x10BAuLL);
  v0[2160] = sub_1AFEFF3B0();
  sub_1AFFC9FF8();
  swift_release();
  return MEMORY[0x1F4188298](sub_1AFEFD7F8, 0, 0);
}

uint64_t sub_1AFEFD7F8()
{
  uint64_t v1 = (void *)v0[2153];
  sub_1AFFCA508();
  swift_release();
  memcpy(v0 + 1074, v0 + 1610, 0x10BAuLL);
  sub_1AFFCA068();
  swift_release();
  sub_1AFD2C4F4();
  uint64_t v2 = (void *)sub_1AFFCB638();
  sub_1AFFCB478();
  sub_1AFFCA878();

  memcpy(v1, v0 + 1610, 0x10BAuLL);
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1AFEFD918()
{
  uint64_t v1 = v0[2157];
  swift_release();
  sub_1AFD2C4F4();
  uint64_t v2 = (void *)sub_1AFFCB638();
  sub_1AFFCB468();
  sub_1AFD2CD48();
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1AFFD05F0;
  v0[2146] = 0;
  v0[2147] = 0xE000000000000000;
  v0[2152] = v1;
  sub_1AFD2CDB0(0, (unint64_t *)&qword_1EB81A110);
  sub_1AFFCB928();
  uint64_t v4 = v0[2146];
  uint64_t v5 = v0[2147];
  *(void *)(v3 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v3 + 64) = sub_1AFD2CE00();
  *(void *)(v3 + 32) = v4;
  *(void *)(v3 + 40) = v5;
  sub_1AFFCA878();
  swift_bridgeObjectRelease();

  swift_willThrow();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_1AFEFDA88()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  swift_release();
  return v0;
}

uint64_t sub_1AFEFDAC0()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1AFEFDB10()
{
  return swift_release();
}

uint64_t sub_1AFEFDB60()
{
  sub_1AFFCA508();
  swift_release();
  return v1;
}

uint64_t sub_1AFEFDBA0()
{
  sub_1AFFCA508();
  swift_release();
  return v1;
}

uint64_t sub_1AFEFDBE0()
{
  uint64_t v1 = (void *)*v0;
  sub_1AFFC9C48();
  sub_1AFFC9C28();
  if (qword_1EB819AE0 != -1) {
    swift_once();
  }
  sub_1AFFC9C18();
  swift_release();
  if (v7)
  {
    char v2 = 0;
  }
  else
  {
    uint64_t v3 = v1 + 8;
    uint64_t v4 = v1[11];
    uint64_t v5 = v1[12];
    __swift_project_boxed_opaque_existential_1(v3, v4);
    char v2 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  }
  return v2 & 1;
}

uint64_t sub_1AFEFDCB0(uint64_t a1)
{
  return sub_1AFEFD088(a1);
}

uint64_t sub_1AFEFDCD4()
{
  uint64_t v0 = sub_1AFFC9F78();
  swift_bridgeObjectRelease();
  return v0;
}

BOOL sub_1AFEFDD44()
{
  id v0 = objc_msgSend(self, sel_standardUserDefaults);
  uint64_t v1 = (void *)sub_1AFFCAE68();
  id v2 = objc_msgSend(v0, sel_dataForKey_, v1);

  if (v2)
  {
    uint64_t v3 = sub_1AFFC9798();
    unint64_t v5 = v4;

    sub_1AFD4B504(v3, v5);
  }
  return v2 != 0;
}

uint64_t sub_1AFEFDE08(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v2 = v1;
  id v3 = objc_msgSend(self, sel_standardUserDefaults);
  unint64_t v4 = (void *)sub_1AFFCAE68();
  id v5 = objc_msgSend(v3, sel_dataForKey_, v4);

  if (v5)
  {
    uint64_t v6 = sub_1AFFC9798();
    unint64_t v8 = v7;

    sub_1AFFC9198();
    swift_allocObject();
    sub_1AFFC9188();
    sub_1AFEFEDBC();
    sub_1AFFC9168();
    sub_1AFD4B504(v6, v8);
    swift_release();
    memcpy(__dst, v12, 0x10BAuLL);
    nullsub_1(__dst);
    double v9 = __dst;
  }
  else
  {
    sub_1AFDB7CD8(v12);
    double v9 = v12;
  }
  return sub_1AFEFF03C((uint64_t)v9, v2, (unint64_t *)&qword_1EB819008, (uint64_t)&type metadata for AppConfiguration);
}

uint64_t sub_1AFEFE0BC()
{
  return 0x72756769666E6F63;
}

uint64_t sub_1AFEFE0E0()
{
  return v0;
}

uint64_t sub_1AFEFE0E8()
{
  return swift_deallocClassInstance();
}

BOOL sub_1AFEFE0F8()
{
  id v0 = objc_msgSend(self, sel_standardUserDefaults);
  uint64_t v1 = (void *)sub_1AFFCAE68();
  id v2 = objc_msgSend(v0, sel_dataForKey_, v1);

  if (v2)
  {
    uint64_t v3 = sub_1AFFC9798();
    unint64_t v5 = v4;

    sub_1AFD4B504(v3, v5);
  }
  return v2 != 0;
}

uint64_t sub_1AFEFE1BC(uint64_t a1)
{
  return sub_1AFEFDE08(a1);
}

uint64_t sub_1AFEFE1D8()
{
  uint64_t v0 = swift_allocObject();
  sub_1AFEFE210(v0);
  return v0;
}

uint64_t sub_1AFEFE210(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  long long v32 = 0u;
  long long v31 = 0u;
  uint64_t v30 = 0;
  long long v29 = 0u;
  long long v28 = 0u;
  long long v27 = 0u;
  long long v26 = 0u;
  uint64_t v24 = 2;
  long long v25 = 0u;
  sub_1AFECDDF0(v33);
  sub_1AFEFF03C((uint64_t)v33, (uint64_t)v23, &qword_1EB819618, (uint64_t)&type metadata for PaidBundleConfiguration);
  uint64_t v19 = 1;
  long long v20 = 0u;
  long long v21 = 0u;
  memset(v22, 0, sizeof(v22));
  sub_1AFECDEAC((uint64_t)v34);
  sub_1AFEFF03C((uint64_t)v34, (uint64_t)v18, &qword_1EB8197B8, (uint64_t)&type metadata for ArticleScoringConfiguration);
  sub_1AFECDED0(v35);
  sub_1AFEFF03C((uint64_t)v35, (uint64_t)v17, &qword_1EB819838, (uint64_t)&type metadata for NewsPersonalizationTreatment);
  sub_1AFF76AC8(2, 0, 0, 0, 1, 0, 1, 0, 0.0, v2, v3, v4, v5, v6, v7, v8, 1, 0.0, 1,
    0,
    1,
    0,
    1,
    0,
    1,
    0,
    2,
    2,
    0.0,
    1,
    2,
    2,
    0,
    1,
    0,
    1,
    0.0,
    1,
    0.0,
    1,
    0.0,
    1,
    0.0,
    1,
    0.0,
    1,
    0,
    0,
    0.0,
    1,
    0.0,
    1,
    0.0,
    1,
    0.0,
    1,
    0.0,
    1,
    0.0,
    1,
    0.0,
    1,
    0.0);
  sub_1AFEFF0BC(0, &qword_1EB819B98, (uint64_t)&type metadata for AppConfiguration, MEMORY[0x1E4FAAA48]);
  swift_allocObject();
  *(void *)(v1 + 16) = sub_1AFFC9FC8();
  long long v32 = 0u;
  long long v31 = 0u;
  uint64_t v30 = 0;
  long long v29 = 0u;
  long long v28 = 0u;
  long long v27 = 0u;
  long long v26 = 0u;
  uint64_t v24 = 2;
  long long v25 = 0u;
  sub_1AFEFF03C((uint64_t)v33, (uint64_t)v23, &qword_1EB819618, (uint64_t)&type metadata for PaidBundleConfiguration);
  uint64_t v19 = 1;
  long long v20 = 0u;
  long long v21 = 0u;
  memset(v22, 0, sizeof(v22));
  sub_1AFEFF03C((uint64_t)v34, (uint64_t)v18, &qword_1EB8197B8, (uint64_t)&type metadata for ArticleScoringConfiguration);
  sub_1AFEFF03C((uint64_t)v35, (uint64_t)v17, &qword_1EB819838, (uint64_t)&type metadata for NewsPersonalizationTreatment);
  sub_1AFF76AC8(2, 0, 0, 0, 1, 0, 1, 0, 0.0, v9, v10, v11, v12, v13, v14, v15, 1, 0.0, 1,
    0,
    1,
    0,
    1,
    0,
    1,
    0,
    2,
    2,
    0.0,
    1,
    2,
    2,
    0,
    1,
    0,
    1,
    0.0,
    1,
    0.0,
    1,
    0.0,
    1,
    0.0,
    1,
    0.0,
    1,
    0,
    0,
    0.0,
    1,
    0.0,
    1,
    0.0,
    1,
    0.0,
    1,
    0.0,
    1,
    0.0,
    1,
    0.0,
    1,
    0.0);
  sub_1AFEFF0BC(0, &qword_1EB819BA0, (uint64_t)&type metadata for AppConfiguration, MEMORY[0x1E4FAAA60]);
  swift_allocObject();
  *(void *)(v1 + 24) = sub_1AFFCA038();
  *(unsigned char *)(v1 + 32) = 1;
  return v1;
}